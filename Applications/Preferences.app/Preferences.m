unint64_t sub_1000064A4()
{
  unint64_t result;

  result = qword_1001637A0;
  if (!qword_1001637A0)
  {
    sub_10004D318(&qword_1001637A8);
    sub_10004D2D4(&qword_1001637B0, &qword_1001637B8);
    sub_10004D2D4(&qword_100160D20, &qword_100160D28);
    result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001637A0);
  }
  return result;
}

unint64_t sub_100006568()
{
  unint64_t result = qword_100163438;
  if (!qword_100163438)
  {
    sub_10004D318(&qword_100163430);
    sub_10004D2D4(&qword_100163440, &qword_100163428);
    sub_10004D2D4(&qword_100163448, &qword_100163450);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100163438);
  }
  return result;
}

unint64_t sub_10000662C()
{
  unint64_t result = qword_100163890;
  if (!qword_100163890)
  {
    sub_10004D318(&qword_100163740);
    sub_10004D2D4(&qword_100163898, &qword_1001638A0);
    sub_10004D2D4(&qword_1001638A8, &qword_100163738);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100163890);
  }
  return result;
}

unint64_t sub_1000066F0()
{
  unint64_t result = qword_100163840;
  if (!qword_100163840)
  {
    sub_10004D318(&qword_1001637F0);
    sub_10004D2D4(&qword_100163848, &qword_1001637E8);
    sub_10004D2D4(&qword_100163850, &qword_100163858);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100163840);
  }
  return result;
}

uint64_t sub_1000067B4()
{
  uint64_t result = type metadata accessor for FLFollowUpInformation();
  if (v1 <= 0x3F)
  {
    uint64_t v3 = *(void *)(result - 8) + 64;
    uint64_t v4 = v3;
    swift_getTupleTypeLayout2();
    v5 = &v2;
    v6 = &unk_10011C3C8;
    v7 = &unk_10011C3C8;
    v8 = &unk_10011C3C8;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void sub_100006864()
{
  sub_100006A10(319, (unint64_t *)&qword_100163630, (void (*)(uint64_t))type metadata accessor for PrimarySettingsListItemIdentifier);
  if (v0 <= 0x3F)
  {
    sub_100006A10(319, (unint64_t *)&unk_100163990, (void (*)(uint64_t))&type metadata accessor for FLFollowUpInformation);
    if (v1 <= 0x3F)
    {
      type metadata accessor for ObservationRegistrar();
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

void sub_100006A10(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_100006A64()
{
  uint64_t result = type metadata accessor for ObservationRegistrar();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for StaticPrimarySettingsListSectionProvider()
{
  return self;
}

uint64_t sub_100006B3C()
{
  uint64_t result = type metadata accessor for NSBundle.PreferencesPluginLocation();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v2[4] = v2;
    v2[5] = &unk_10011E178;
    v2[6] = &unk_10011E178;
    v2[7] = &unk_10011E190;
    v2[8] = &unk_10011E190;
    v2[9] = &unk_10011E1A8;
    v2[10] = &unk_10011E1C0;
    v2[11] = &unk_10011E1D8;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_100006C10()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_10001E134();
    return swift_release();
  }
  return result;
}

uint64_t sub_100006C68()
{
  uint64_t result = type metadata accessor for ObservationRegistrar();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void sub_100006D10()
{
  if (!qword_10015FAF8)
  {
    type metadata accessor for LocalizedStringResource();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10015FAF8);
    }
  }
}

uint64_t sub_100006D68()
{
  uint64_t result = type metadata accessor for PrimarySettingsListItemIdentifier();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for URL();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t sub_100006E44(void *a1)
{
  *(void *)(*(void *)(v1 + 16) + *a1 + 8) = *(void *)(v1 + 32);
  return swift_unknownObjectWeakAssign();
}

void sub_100006E70()
{
  if (!qword_100162A70)
  {
    type metadata accessor for FLFollowUpGroupSectionElement();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100162A70);
    }
  }
}

void sub_100006F30()
{
  sub_10009A368();
  if (v0 <= 0x3F)
  {
    type metadata accessor for ObservationRegistrar();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

id sub_10000707C()
{
  uint64_t v2 = *v0;
  uint64_t v1 = v0[1];
  uint64_t v3 = (objc_class *)type metadata accessor for SettingsAppDebugMenuGestureProxyView();
  unint64_t v4 = (char *)objc_allocWithZone(v3);
  uint64_t v5 = &v4[OBJC_IVAR____TtC11SettingsAppP33_F16170C8CD22B033163CFC9AD59D599336SettingsAppDebugMenuGestureProxyView_perform];
  *(void *)uint64_t v5 = v2;
  *((void *)v5 + 1) = v1;
  v7.receiver = v4;
  v7.super_class = v3;
  swift_retain();
  return [super initWithFrame:0.0, 0.0, 0.0, 0.0];
}

double sub_1000070FC@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  if (a1[1])
  {
    *(void *)&long long v4 = *a1;
    *((void *)&v4 + 1) = swift_bridgeObjectRetain();
    sub_100030C58();
    Text.init<A>(_:)();
  }
  else
  {
    LocalizedStringKey.init(stringLiteral:)();
    Text.init(_:tableName:bundle:comment:)();
  }
  _ConditionalContent<>.init(storage:)();
  double result = *(double *)&v4;
  *(_OWORD *)a2 = v4;
  *(_OWORD *)(a2 + 16) = v5;
  *(unsigned char *)(a2 + 32) = v6;
  return result;
}

uint64_t sub_100007200()
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v1 = (void *)result;
    sub_1000620F8(result + OBJC_IVAR____TtC11SettingsApp28CellularDataListItemProvider_invalidator, (uint64_t)v2);

    sub_1000403E0(v2, v2[3]);
    type metadata accessor for PrimarySettingsListModel();
    sub_100068CA8();
    return sub_100042A1C((uint64_t)v2);
  }
  return result;
}

void sub_1000072C0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void **)(v0 + 24);
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC11SettingsApp24SettingsAppSceneDelegate__shortcutItemForInitialLaunch);
  *(void *)(v1 + OBJC_IVAR____TtC11SettingsApp24SettingsAppSceneDelegate__shortcutItemForInitialLaunch) = v2;
  id v4 = v2;
}

void sub_100007300()
{
  uint64_t v1 = v0;
  swift_getKeyPath();
  sub_1000686D0();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC11SettingsApp24SettingsAppSceneDelegate__shortcutItemForInitialLaunch);
  if (v2)
  {
    id v3 = v2;
    id v4 = [v3 type];
    uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    objc_super v7 = v6;

    v10._countAndFlagsBits = v5;
    v10._object = v7;
    if (sub_10006A8D8(v10) != 4)
    {
      swift_getKeyPath();
      __chkstk_darwin();
      ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
      swift_release();
      uint64_t v8 = *(void *)(v0 + OBJC_IVAR____TtC11SettingsApp24SettingsAppSceneDelegate__selectedQuickActionSubject);
      uint64_t v9 = qword_10015F048;
      swift_retain();
      if (v9 != -1) {
        swift_once();
      }
      TaskLocal.get()();
      sub_1000682E8(v8, v1);
      swift_release();
      swift_bridgeObjectRelease();
      PassthroughSubject.send(_:)();
      swift_release();
    }
  }
}

id sub_1000074EC()
{
  type metadata accessor for NavigationSplitViewProxyViewController();
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());

  return [v0 init];
}

uint64_t type metadata accessor for SupervisedDeviceSectionModelProvider()
{
  return self;
}

uint64_t sub_1000075B8()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1000076B0()
{
  uint64_t result = type metadata accessor for FamilyRowStatus();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for SecondaryAppleAccountItemsObserver()
{
  return self;
}

id sub_100007768()
{
  id result = [objc_allocWithZone((Class)type metadata accessor for RestrictionsManager()) init];
  qword_10016AE18 = (uint64_t)result;
  return result;
}

void sub_10000779C()
{
  if (!qword_1001603F0)
  {
    type metadata accessor for DismissAction();
    unint64_t v0 = type metadata accessor for Environment.Content();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1001603F0);
    }
  }
}

void sub_1000077F4(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

void sub_100007860(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  objc_super v7 = *(void (**)(uint64_t, uint64_t, void *))(a1 + 32);
  swift_retain();
  id v8 = a4;
  v7(a2, a3, a4);
  swift_release();
}

uint64_t type metadata accessor for PrimaryAppleAccountStatusObserver()
{
  return self;
}

uint64_t sub_10000790C()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_10001E624();
    return swift_release();
  }
  return result;
}

uint64_t sub_100007964(uint64_t (*a1)(uint64_t))
{
  sub_100046B9C(&qword_1001633B0);
  uint64_t result = State.wrappedValue.getter();
  if ((v4 & 1) == 0)
  {
    uint64_t v3 = State.wrappedValue.setter();
    return a1(v3);
  }
  return result;
}

uint64_t sub_100007A64()
{
  uint64_t result = type metadata accessor for ObservationRegistrar();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

id sub_100007AF4()
{
  id result = [self standardUserDefaults];
  qword_10016B0A0 = (uint64_t)result;
  return result;
}

uint64_t sub_100007BA8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100007BF0(uint64_t a1)
{
  char v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_10007B630;
  char v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_100163AF0 + dword_100163AF0);
  return v6(a1, v4);
}

id sub_100007CA8()
{
  id result = [objc_allocWithZone((Class)RadiosPreferences) init];
  qword_10016AE38 = (uint64_t)result;
  return result;
}

uint64_t sub_100007CDC(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_100046B9C(&qword_100161660);
    uint64_t v2 = (void *)static _SetStorage.allocate(capacity:)();
  }
  else
  {
    uint64_t v2 = &_swiftEmptySetSingleton;
  }
  v19 = v2;
  uint64_t v3 = a1 + 56;
  uint64_t v4 = -1;
  uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
  if (-v5 < 64) {
    uint64_t v4 = ~(-1 << -(char)v5);
  }
  unint64_t v6 = v4 & *(void *)(a1 + 56);
  int64_t v7 = (unint64_t)(63 - v5) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v9 = 0;
  if (!v6) {
    goto LABEL_8;
  }
LABEL_7:
  uint64_t v10 = (v6 - 1) & v6;
  unint64_t v11 = __clz(__rbit64(v6)) | (v9 << 6);
  for (i = v9; ; unint64_t v11 = __clz(__rbit64(v14)) + (i << 6))
  {
    sub_100061B40(*(void *)(a1 + 48) + 40 * v11, (uint64_t)&v18);
    if ((swift_dynamicCast() & 1) == 0 || !v17)
    {
      swift_release();
      sub_1000653C0();
      swift_bridgeObjectRelease();
      return 0;
    }
    uint64_t result = sub_1000849F8(v16, v17);
    int64_t v9 = i;
    unint64_t v6 = v10;
    if (v10) {
      goto LABEL_7;
    }
LABEL_8:
    int64_t v13 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v13 >= v7) {
      goto LABEL_29;
    }
    unint64_t v14 = *(void *)(v3 + 8 * v13);
    int64_t i = v9 + 1;
    if (!v14)
    {
      int64_t i = v9 + 2;
      if (v9 + 2 >= v7) {
        goto LABEL_29;
      }
      unint64_t v14 = *(void *)(v3 + 8 * i);
      if (!v14)
      {
        int64_t i = v9 + 3;
        if (v9 + 3 >= v7) {
          goto LABEL_29;
        }
        unint64_t v14 = *(void *)(v3 + 8 * i);
        if (!v14)
        {
          int64_t i = v9 + 4;
          if (v9 + 4 >= v7) {
            goto LABEL_29;
          }
          unint64_t v14 = *(void *)(v3 + 8 * i);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_23:
    uint64_t v10 = (v14 - 1) & v14;
  }
  int64_t v15 = v9 + 5;
  if (v9 + 5 >= v7)
  {
LABEL_29:
    sub_1000653C0();
    return (uint64_t)v19;
  }
  unint64_t v14 = *(void *)(v3 + 8 * v15);
  if (v14)
  {
    int64_t i = v9 + 5;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t i = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (i >= v7) {
      goto LABEL_29;
    }
    unint64_t v14 = *(void *)(v3 + 8 * i);
    ++v15;
    if (v14) {
      goto LABEL_23;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

void sub_100007F30()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_1000203C0();
  }
}

unint64_t sub_100007F84()
{
  unint64_t result = qword_1001634F8;
  if (!qword_1001634F8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1001634F8);
  }
  return result;
}

uint64_t type metadata accessor for SecondaryAppleAccountSectionModelProvider()
{
  return self;
}

uint64_t sub_100007FE8()
{
  uint64_t result = type metadata accessor for ObservationRegistrar();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

id sub_10000808C()
{
  id result = [objc_allocWithZone((Class)type metadata accessor for CellularNotificationRelay()) init];
  qword_10016AE88 = (uint64_t)result;
  return result;
}

uint64_t sub_1000080BC(uint64_t a1, int *a2)
{
  unint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1000075B8;
  return v6(a1);
}

uint64_t sub_100008198()
{
  uint64_t result = type metadata accessor for URL();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for SettingsURLDestination.Action(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for ConnectedHeadphonesSectionModelProvider()
{
  return self;
}

uint64_t sub_10000829C@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v27 = a3;
  uint64_t v9 = v5;
  uint64_t v11 = type metadata accessor for EnvironmentValues();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  unint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100046B9C(a1);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003F75C(v9, (uint64_t)v17, a1);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v18 = a2(0);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(a5, v17, v18);
  }
  else
  {
    os_log_type_t v20 = static os_log_type_t.fault.getter();
    v21 = static Log.runtimeIssuesLog.getter();
    if (os_log_type_enabled(v21, v20))
    {
      unint64_t v25 = a4;
      uint64_t v22 = swift_slowAlloc();
      uint64_t v26 = a5;
      v23 = (uint8_t *)v22;
      uint64_t v29 = swift_slowAlloc();
      *(_DWORD *)v23 = 136315138;
      uint64_t v28 = sub_100042948(v27, v25, &v29);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v21, v20, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v23, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
}

uint64_t sub_100008554()
{
  return swift_getOpaqueTypeConformance2();
}

int main(int argc, const char **argv, const char **envp)
{
  sub_10000E4A8();
  type metadata accessor for SettingsApp();
  sub_100007BA8(&qword_1001633E0, (void (*)(uint64_t))type metadata accessor for SettingsApp);
  static App.main()();
  return 0;
}

uint64_t sub_10000862C()
{
  sub_100046B9C(&qword_10015FC98);
  swift_allocObject();
  uint64_t result = TaskLocal.init(wrappedValue:)();
  qword_10016AE08 = result;
  return result;
}

uint64_t sub_100008688()
{
  uint64_t result = type metadata accessor for ObservationRegistrar();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for SettingsAppDebugMenuGestureProxyView()
{
  return self;
}

uint64_t sub_10000874C()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1000150D8();
    return swift_release();
  }
  return result;
}

uint64_t sub_1000087A4()
{
  return UIViewControllerRepresentable.sizeThatFits(_:uiViewController:context:)();
}

unint64_t sub_1000087D8()
{
  unint64_t result = qword_1001644C8;
  if (!qword_1001644C8)
  {
    sub_10004D318(&qword_1001644D0);
    type metadata accessor for SettingsAnyPlatformViewControllerView();
    sub_1000373FC(&qword_1001644D8, (void (*)(uint64_t))&type metadata accessor for SettingsAnyPlatformViewControllerView);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001644C8);
  }
  return result;
}

uint64_t sub_1000088C8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100046B9C(&qword_10015FCA0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100046B9C(&qword_10015FCA8);
  uint64_t v7 = v6 - 8;
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v10 = *(_OWORD *)(v1 + 16);
  v14[0] = *(_OWORD *)v1;
  v14[1] = v10;
  v14[2] = *(_OWORD *)(v1 + 32);
  char v15 = *(unsigned char *)(v1 + 48);
  *(void *)uint64_t v5 = static VerticalAlignment.center.getter();
  *((void *)v5 + 1) = 0;
  v5[16] = 1;
  uint64_t v11 = sub_100046B9C(&qword_10015FCB0);
  sub_100010218((uint64_t)v14, (uint64_t)&v5[*(int *)(v11 + 44)]);
  if (v15) {
    double v12 = 0.5;
  }
  else {
    double v12 = 1.0;
  }
  sub_10003F75C((uint64_t)v5, (uint64_t)v9, &qword_10015FCA0);
  *(double *)&v9[*(int *)(v7 + 44)] = v12;
  sub_10003F5D0((uint64_t)v5, &qword_10015FCA0);
  return sub_1000663A0((uint64_t)v9, a1);
}

uint64_t sub_100008A28@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_100046B9C(&qword_1001643C8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001C908((uint64_t)v4);
  sub_10003F75C((uint64_t)v4, a1, &qword_1001643C8);
  *(unsigned char *)(a1 + *(int *)(sub_100046B9C(&qword_1001643A8) + 36)) = 1;
  return sub_10003F5D0((uint64_t)v4, &qword_1001643C8);
}

uint64_t sub_100008AE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100046B9C(&qword_100161CD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100008B48()
{
  return sub_1000377D8(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

unint64_t sub_100008B64()
{
  unint64_t result = qword_1001644A0;
  if (!qword_1001644A0)
  {
    sub_10004D318(&qword_1001644A8);
    sub_1000373FC(&qword_1001644B0, (void (*)(uint64_t))&type metadata accessor for AppleIDSignInView);
    sub_1000373FC(&qword_100162CF8, (void (*)(uint64_t))type metadata accessor for AppleAccountSignInSheet);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001644A0);
  }
  return result;
}

uint64_t sub_100008C40(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100008CA8()
{
  return Transaction.animation.setter();
}

void sub_100008CD0()
{
  id v0 = [self sharedInstance];
  [v0 setLaunchHasCompleted];
}

id sub_100008D30(uint64_t a1, char *a2)
{
  ObjectType = (objc_class *)swift_getObjectType();
  v11[3] = type metadata accessor for PrimarySettingsListModel();
  v11[4] = &off_100155278;
  v11[0] = a1;
  type metadata accessor for PrimarySettingsListItemIdentifier();
  swift_storeEnumTagMultiPayload();
  uint64_t v5 = OBJC_IVAR____TtC11SettingsApp25SatelliteListItemProvider_satelliteStateLock;
  sub_100046B9C(&qword_100163C90);
  uint64_t v6 = swift_allocObject();
  *(_DWORD *)(v6 + 16) = 0;
  *(void *)&a2[v5] = v6;
  *(_OWORD *)&a2[OBJC_IVAR____TtC11SettingsApp25SatelliteListItemProvider_satelliteState] = xmmword_10011FF70;
  *(void *)&a2[OBJC_IVAR____TtC11SettingsApp25SatelliteListItemProvider_stewieStateMonitor] = 0;
  *(void *)&a2[OBJC_IVAR____TtC11SettingsApp25SatelliteListItemProvider_idsOffGridStateManager] = 0;
  uint64_t v7 = OBJC_IVAR____TtC11SettingsApp25SatelliteListItemProvider_slotInfos;
  *(void *)&a2[v7] = sub_100065608((uint64_t)_swiftEmptyArrayStorage);
  *(void *)&a2[OBJC_IVAR____TtC11SettingsApp25SatelliteListItemProvider_ctClient] = 0;
  sub_1000620F8((uint64_t)v11, (uint64_t)&a2[OBJC_IVAR____TtC11SettingsApp25SatelliteListItemProvider_invalidator]);
  v10.receiver = a2;
  v10.super_class = ObjectType;
  id v8 = [super init];
  sub_100042A1C((uint64_t)v11);
  return v8;
}

void sub_100008E64()
{
  type metadata accessor for NavigationPath();
  if (v0 <= 0x3F)
  {
    type metadata accessor for SettingsAppDetailContent();
    if (v1 <= 0x3F)
    {
      sub_100009098(319, &qword_100163E10, (void (*)(uint64_t))type metadata accessor for SettingsURLDestination);
      if (v2 <= 0x3F)
      {
        sub_100009098(319, &qword_100163E18, (void (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass);
        if (v3 <= 0x3F)
        {
          sub_100009098(319, (unint64_t *)&unk_100163E20, (void (*)(uint64_t))&type metadata accessor for ScenePhase);
          if (v4 <= 0x3F)
          {
            type metadata accessor for ObservationRegistrar();
            if (v5 <= 0x3F) {
              swift_updateClassMetadata2();
            }
          }
        }
      }
    }
  }
}

void sub_100009098(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1000090EC(char a1)
{
  if (qword_10015F0B0 != -1) {
    swift_once();
  }
  unint64_t v3 = (void *)qword_10016AEA0;
  int v4 = a1 & 1;
  Class isa = Bool._bridgeToObjectiveC()().super.super.isa;
  NSString v6 = String._bridgeToObjectiveC()();
  [v3 setValue:isa forKey:v6];

  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC11SettingsApp31PersonalHotspotListItemProvider_shouldShow) == 1
    && *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC11SettingsApp31PersonalHotspotListItemProvider_shouldDisable) != v4)
  {
    sub_1000403E0((void *)(v1 + OBJC_IVAR____TtC11SettingsApp31PersonalHotspotListItemProvider_invalidator), *(void *)(v1 + OBJC_IVAR____TtC11SettingsApp31PersonalHotspotListItemProvider_invalidator + 24));
    PassthroughSubject.send(_:)();
  }
}

uint64_t sub_100009218()
{
  uint64_t v1 = OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel____lazy_storage___secondaryAppleAccountSectionModelProvider;
  if (*(void *)(v0
                 + OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel____lazy_storage___secondaryAppleAccountSectionModelProvider))
  {
    uint64_t v2 = *(void *)(v0
                   + OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel____lazy_storage___secondaryAppleAccountSectionModelProvider);
  }
  else
  {
    unint64_t v3 = sub_10000BE84();
    int v4 = sub_100056ED8();
    type metadata accessor for SecondaryAppleAccountSectionModelProvider();
    uint64_t v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_100120C40;
    *(unsigned char *)(v2 + 32) = 2;
    *(void *)(v2 + 40) = v3;
    *(void *)(v2 + 48) = v4;
    *(void *)(v0 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_1000092BC()
{
  uint64_t v1 = OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel____lazy_storage___connectedHeadphonesSectionModelProvider;
  if (*(uint64_t *)((char *)v0
                  + OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel____lazy_storage___connectedHeadphonesSectionModelProvider))
  {
    uint64_t v2 = *(uint64_t *)((char *)v0
                    + OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel____lazy_storage___connectedHeadphonesSectionModelProvider);
  }
  else
  {
    uint64_t v12 = *v0;
    uint64_t v3 = v12;
    uint64_t v13 = &off_100155278;
    v11[0] = v0;
    type metadata accessor for ConnectedHeadphonesSectionModelProvider();
    uint64_t v2 = swift_allocObject();
    uint64_t v4 = sub_10002BF58((uint64_t)v11, v12);
    __chkstk_darwin(v4);
    NSString v6 = (void *)((char *)&v11[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v7 + 16))(v6);
    uint64_t v8 = *v6;
    *(void *)(v2 + 64) = v3;
    *(void *)(v2 + 72) = &off_100155278;
    *(void *)(v2 + 40) = v8;
    *(_OWORD *)(v2 + 16) = xmmword_100120C30;
    *(unsigned char *)(v2 + 32) = 2;
    *(void *)(v2 + 80) = _swiftEmptyArrayStorage;
    *(void *)(v2 + 88) = 0;
    swift_retain();
    sub_100042A1C((uint64_t)v11);
    *(uint64_t *)((char *)v0 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

id sub_100009458()
{
  if (qword_10015F078 != -1) {
    swift_once();
  }
  if (![(id)qword_10016AE38 airplaneMode]) {
    goto LABEL_6;
  }
  id result = (id)MobileGestalt_get_current_device();
  if (result)
  {
    uint64_t v1 = result;
    MobileGestalt_get_wapiCapability();

LABEL_6:
    LocalizedStringKey.init(stringLiteral:)();
    return (id)Text.init(_:tableName:bundle:comment:)();
  }
  __break(1u);
  return result;
}

uint64_t assignWithCopy for PrimarySettingsListLinkModel(uint64_t a1, uint64_t a2)
{
  id v4 = *(id *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  char v6 = *(unsigned char *)(a2 + 16);
  sub_100047728(*(id *)a2, v5, v6);
  uint64_t v7 = *(void **)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  char v9 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v6;
  sub_100046F04(v7, v8, v9);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  return a1;
}

id sub_1000095FC()
{
  if (qword_10015F078 != -1) {
    swift_once();
  }
  if (![(id)qword_10016AE38 airplaneMode]) {
    goto LABEL_6;
  }
  id result = (id)MobileGestalt_get_current_device();
  if (result)
  {
    uint64_t v1 = result;
    MobileGestalt_get_wapiCapability();

LABEL_6:
    LocalizedStringKey.init(stringLiteral:)();
    return (id)Text.init(_:tableName:bundle:comment:)();
  }
  __break(1u);
  return result;
}

uint64_t sub_10000970C()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    return 0;
  }
  uint64_t v1 = (char *)*(id *)(Strong + 56);
  swift_release();
  uint64_t v2 = *(void *)&v1[OBJC_IVAR____TtC11SettingsApp33PrimaryAppleAccountStatusObserver_accountStatus];
  uint64_t v3 = *(void *)&v1[OBJC_IVAR____TtC11SettingsApp33PrimaryAppleAccountStatusObserver_accountStatus + 8];
  uint64_t v4 = *(void *)&v1[OBJC_IVAR____TtC11SettingsApp33PrimaryAppleAccountStatusObserver_accountStatus + 16];
  unint64_t v5 = *(void *)&v1[OBJC_IVAR____TtC11SettingsApp33PrimaryAppleAccountStatusObserver_accountStatus + 24];
  uint64_t v6 = *(void *)&v1[OBJC_IVAR____TtC11SettingsApp33PrimaryAppleAccountStatusObserver_accountStatus + 32];
  uint64_t v7 = *(void **)&v1[OBJC_IVAR____TtC11SettingsApp33PrimaryAppleAccountStatusObserver_accountStatus + 40];
  sub_10005F260(v2, v3, v4, v5, v6, v7);
  sub_10005DE20(v1);

  if (!v3) {
    return 0;
  }
  uint64_t v8 = HIBYTE(v5) & 0xF;
  if ((v5 & 0x2000000000000000) == 0) {
    uint64_t v8 = v4 & 0xFFFFFFFFFFFFLL;
  }
  if (v8)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = v4;
  }
  else
  {
    uint64_t v9 = 0;
  }
  sub_10003CB34(v2, v3, v4, v5, v6, v7);
  return v9;
}

unint64_t sub_10000982C()
{
  unint64_t result = qword_100160198;
  if (!qword_100160198)
  {
    sub_10004D318(&qword_10015FFB0);
    sub_10004D318(&qword_10015FFA0);
    sub_100049FC8();
    swift_getOpaqueTypeConformance2();
    sub_10004D54C(&qword_1001601A0, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160198);
  }
  return result;
}

uint64_t sub_10000990C(uint64_t *a1)
{
  uint64_t v3 = type metadata accessor for FollowUpInformationProviderSnapshot();
  __chkstk_darwin(v3 - 8);
  unint64_t v5 = (void *)((char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = v1 + OBJC_IVAR____TtC11SettingsApp29FollowUpListElementsGenerator_currentSnapshot;
  swift_beginAccess();
  sub_100008C40(v6, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for FollowUpInformationProviderSnapshot);
  char v7 = sub_100023AF8(a1, v5);
  sub_10000C810((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for FollowUpInformationProviderSnapshot);
  if ((v7 & 1) == 0)
  {
    sub_1000403E0((void *)(v1 + 16), *(void *)(v1 + 40));
    v9[0] = "Follow Ups";
    v9[1] = 10;
    char v10 = 2;
    PassthroughSubject.send(_:)();
  }
  swift_beginAccess();
  sub_100066DA0((uint64_t)a1, v6);
  return swift_endAccess();
}

uint64_t type metadata accessor for NavigationSplitViewProxyViewController()
{
  return self;
}

id sub_100009A74()
{
  uint64_t v1 = OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel____lazy_storage___primaryAppleAccountListSectionProvider;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel____lazy_storage___primaryAppleAccountListSectionProvider);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel____lazy_storage___primaryAppleAccountListSectionProvider);
  }
  else
  {
    swift_retain();
    uint64_t v4 = sub_10000B8DC();
    unint64_t v5 = sub_100056ED8();
    id v6 = sub_10000A488(v0, (uint64_t)v4, (uint64_t)v5);
    char v7 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v6;
    id v3 = v6;

    uint64_t v2 = 0;
  }
  id v8 = v2;
  return v3;
}

unint64_t sub_100009B84()
{
  unint64_t result = qword_1001643C0;
  if (!qword_1001643C0)
  {
    sub_10004D318(&qword_1001643C8);
    sub_10004D318(&qword_1001643D0);
    type metadata accessor for PrimarySettingsList();
    sub_1000373FC(&qword_1001643D8, (void (*)(uint64_t))type metadata accessor for PrimarySettingsList);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_10004D2D4(&qword_1001643E0, &qword_1001643E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001643C0);
  }
  return result;
}

void *sub_100009CC0(uint64_t a1, void *a2)
{
  if (a1 || !a2)
  {
    if (qword_10015F168 != -1) {
      swift_once();
    }
    uint64_t v8 = type metadata accessor for Logger();
    sub_1000477B0(v8, (uint64_t)qword_10016B028);
    id v9 = a2;
    swift_errorRetain();
    id v10 = v9;
    swift_errorRetain();
    id v3 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v3, v11))
    {
      swift_errorRelease();
      swift_errorRelease();

      return _swiftEmptyArrayStorage;
    }
    uint64_t v12 = swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136446466;
    swift_errorRetain();
    sub_100046B9C(&qword_100162508);
    uint64_t v13 = String.init<A>(describing:)();
    sub_100042948(v13, v14, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    *(_WORD *)(v12 + 12) = 2082;
    id v15 = v10;
    sub_100046B9C(&qword_100162528);
    uint64_t v16 = String.init<A>(describing:)();
    sub_100042948(v16, v17, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v11, "getActiveContexts failed: %{public}s, contexts: %{public}s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
LABEL_9:

    return _swiftEmptyArrayStorage;
  }
  id v3 = a2;
  id v4 = [v3 subscriptions];
  if (!v4) {
    goto LABEL_9;
  }
  unint64_t v5 = v4;
  sub_1000AE5F8();
  unint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  char v7 = sub_1000ABA84(v6);
  swift_bridgeObjectRelease();
  return v7;
}

void sub_100009F84()
{
  uint64_t v0 = (void *)kISImageDescriptorTableUIName;
  uint64_t v1 = self;
  id v2 = v0;
  id v3 = [v1 imageDescriptorNamed:v2];

  qword_10016AE10 = (uint64_t)v3;
}

void sub_10000A0B4(uint64_t a1, void *a2, void *a3)
{
  unint64_t v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t sub_10000A140(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a2;
  unint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_10002E1D8(0, (unint64_t *)&qword_100162EC0);
    uint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  swift_retain();
  id v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10000A1E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v6 = *v2;
  uint64_t v5 = v2[1];
  char v7 = *((unsigned char *)v2 + 16);
  uint64_t v8 = v2[3];
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v6;
  *(void *)(v9 + 24) = v5;
  *(unsigned char *)(v9 + 32) = v7;
  *(void *)(v9 + 40) = v8;
  uint64_t v10 = sub_100046B9C(&qword_1001633A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(a2, a1, v10);
  os_log_type_t v11 = (uint64_t (**)())(a2 + *(int *)(sub_100046B9C(&qword_1001633A8) + 36));
  *os_log_type_t v11 = sub_100067DEC;
  v11[1] = (uint64_t (*)())v9;
  v11[2] = 0;
  void v11[3] = 0;
  swift_retain();

  return swift_retain();
}

uint64_t sub_10000A2D8@<X0>(uint64_t a1@<X0>, uint64_t (**a2)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)@<X8>)
{
  uint64_t v4 = v2;
  uint64_t v6 = sub_100046B9C(&qword_100163738);
  uint64_t v7 = v6 - 8;
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(a1 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin(v8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000279B4(v4, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for PrimarySettingsList);
  unint64_t v14 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v15 = swift_allocObject();
  sub_100068E78((uint64_t)v13, v15 + v14);
  uint64_t v16 = static Alignment.center.getter();
  uint64_t v18 = v17;
  sub_1000190F4(v4, (uint64_t)v10);
  uint64_t v19 = (uint64_t *)&v10[*(int *)(v7 + 44)];
  uint64_t *v19 = v16;
  v19[1] = v18;
  uint64_t v20 = sub_100046B9C(&qword_100163740);
  sub_10003F75C((uint64_t)v10, (uint64_t)a2 + *(int *)(v20 + 36), &qword_100163738);
  *a2 = sub_10003770C;
  a2[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v15;
  return sub_10003F5D0((uint64_t)v10, &qword_100163738);
}

id sub_10000A488(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for PrimarySettingsListModel();
  v21[3] = v6;
  v21[4] = &off_100155278;
  v21[0] = a1;
  uint64_t v7 = (objc_class *)type metadata accessor for PrimaryAppleAccountListSectionProvider();
  uint64_t v8 = objc_allocWithZone(v7);
  uint64_t v9 = sub_10002BF58((uint64_t)v21, v6);
  __chkstk_darwin(v9);
  uint64_t v11 = (uint64_t *)((char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v12 + 16))(v11);
  uint64_t v13 = *v11;
  v20[3] = v6;
  v20[4] = &off_100155278;
  v20[0] = v13;
  unint64_t v14 = &v8[OBJC_IVAR____TtC11SettingsApp38PrimaryAppleAccountListSectionProvider_id];
  *(_OWORD *)unint64_t v14 = xmmword_100120D50;
  v14[16] = 2;
  v8[OBJC_IVAR____TtC11SettingsApp38PrimaryAppleAccountListSectionProvider_registeredForFamilyChange] = 0;
  uint64_t v15 = &v8[OBJC_IVAR____TtC11SettingsApp38PrimaryAppleAccountListSectionProvider____lazy_storage___familyModel];
  uint64_t v16 = type metadata accessor for PrimarySettingsListFamilyLinkModel();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
  sub_1000620F8((uint64_t)v20, (uint64_t)&v8[OBJC_IVAR____TtC11SettingsApp38PrimaryAppleAccountListSectionProvider_invalidator]);
  *(void *)&v8[OBJC_IVAR____TtC11SettingsApp38PrimaryAppleAccountListSectionProvider_primaryAppleAccountStatusObserver] = a2;
  *(void *)&v8[OBJC_IVAR____TtC11SettingsApp38PrimaryAppleAccountListSectionProvider_followUpListElementsGenerator] = a3;
  v19.receiver = v8;
  v19.super_class = v7;
  id v17 = [super init];
  sub_100042A1C((uint64_t)v20);
  sub_100042A1C((uint64_t)v21);
  return v17;
}

id sub_10000A674(uint64_t *a1)
{
  uint64_t v1 = *a1;
  v13[3] = v1;
  v13[4] = &off_100155278;
  v13[0] = a1;
  uint64_t v2 = (objc_class *)type metadata accessor for GeneralSettingsListItemProvider();
  id v3 = objc_allocWithZone(v2);
  uint64_t v4 = sub_10002BF58((uint64_t)v13, v1);
  __chkstk_darwin(v4);
  uint64_t v6 = (uint64_t *)((char *)&v11 - v5);
  (*(void (**)(char *))(v7 + 16))((char *)&v11 - v5);
  uint64_t v8 = *v6;
  v12[3] = v1;
  v12[4] = &off_100155278;
  v12[0] = v8;
  type metadata accessor for PrimarySettingsListItemIdentifier();
  swift_storeEnumTagMultiPayload();
  v3[OBJC_IVAR____TtC11SettingsApp31GeneralSettingsListItemProvider_badgedForSoftwareUpdate] = 0;
  *(void *)&v3[OBJC_IVAR____TtC11SettingsApp31GeneralSettingsListItemProvider_softwareUpdateClient] = 0;
  sub_1000620F8((uint64_t)v12, (uint64_t)&v3[OBJC_IVAR____TtC11SettingsApp31GeneralSettingsListItemProvider_invalidator]);
  v11.receiver = v3;
  v11.super_class = v2;
  [super init];
  sub_100042A1C((uint64_t)v12);
  sub_100042A1C((uint64_t)v13);
  return v9;
}

id sub_10000A810(uint64_t *a1)
{
  uint64_t v1 = *a1;
  _OWORD v14[3] = v1;
  v14[4] = &off_100155278;
  v14[0] = a1;
  uint64_t v2 = (objc_class *)type metadata accessor for SupervisedDeviceSectionModelProvider();
  id v3 = objc_allocWithZone(v2);
  uint64_t v4 = sub_10002BF58((uint64_t)v14, v1);
  __chkstk_darwin(v4);
  uint64_t v6 = (uint64_t *)((char *)&v12 - v5);
  (*(void (**)(char *))(v7 + 16))((char *)&v12 - v5);
  uint64_t v8 = *v6;
  v13[3] = v1;
  v13[4] = &off_100155278;
  v13[0] = v8;
  id v9 = &v3[OBJC_IVAR____TtC11SettingsApp36SupervisedDeviceSectionModelProvider_id];
  *(void *)id v9 = 0;
  *((void *)v9 + 1) = 0;
  v9[16] = 2;
  v3[OBJC_IVAR____TtC11SettingsApp36SupervisedDeviceSectionModelProvider_setupObserver] = 0;
  sub_1000620F8((uint64_t)v13, (uint64_t)&v3[OBJC_IVAR____TtC11SettingsApp36SupervisedDeviceSectionModelProvider_invalidator]);
  v12.receiver = v3;
  v12.super_class = v2;
  id v10 = [super init];
  sub_100042A1C((uint64_t)v13);
  sub_100042A1C((uint64_t)v14);
  return v10;
}

id sub_10000A994(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for PrimarySettingsListModel();
  v19[3] = v6;
  v19[4] = &off_100155278;
  v19[0] = a1;
  uint64_t v7 = (objc_class *)type metadata accessor for CellularDataListItemProvider();
  uint64_t v8 = (char *)objc_allocWithZone(v7);
  uint64_t v9 = sub_10002BF58((uint64_t)v19, v6);
  __chkstk_darwin(v9);
  objc_super v11 = (uint64_t *)((char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v12 + 16))(v11);
  uint64_t v13 = *v11;
  v18[3] = v6;
  v18[4] = &off_100155278;
  v18[0] = v13;
  type metadata accessor for PrimarySettingsListItemIdentifier();
  swift_storeEnumTagMultiPayload();
  unint64_t v14 = &v8[OBJC_IVAR____TtC11SettingsApp28CellularDataListItemProvider_cancellable];
  *((void *)v14 + 4) = 0;
  *(_OWORD *)unint64_t v14 = 0u;
  *((_OWORD *)v14 + 1) = 0u;
  sub_1000620F8((uint64_t)v18, (uint64_t)&v8[OBJC_IVAR____TtC11SettingsApp28CellularDataListItemProvider_invalidator]);
  *(void *)&v8[OBJC_IVAR____TtC11SettingsApp28CellularDataListItemProvider_airplaneModeListItemProvider] = a2;
  *(void *)&v8[OBJC_IVAR____TtC11SettingsApp28CellularDataListItemProvider_cellularDataSettingObserver] = a3;
  v17.receiver = v8;
  v17.super_class = v7;
  id v15 = [super init];
  sub_100042A1C((uint64_t)v18);
  sub_100042A1C((uint64_t)v19);
  return v15;
}

double sub_10000AB44@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  long long v3 = *(_OWORD *)(a1 + 16);
  v9[0] = *(_OWORD *)a1;
  v9[1] = v3;
  void v9[2] = *(_OWORD *)(a1 + 32);
  char v10 = *(unsigned char *)(a1 + 48);
  sub_10003CE28((uint64_t)v9, (uint64_t)v11);
  sub_10003CE28((uint64_t)v11, (uint64_t)v12);
  if (v13)
  {
    LocalizedStringKey.init(stringLiteral:)();
    Text.init(_:tableName:bundle:comment:)();
    _ConditionalContent<>.init(storage:)();
  }
  else
  {
    LocalizedStringKey.init(stringLiteral:)();
    Text.init(_:tableName:bundle:comment:)();
  }
  sub_100046B9C(&qword_10015FCE8);
  sub_100065CE0();
  _ConditionalContent<>.init(storage:)();
  double result = *(double *)&v5;
  *(_OWORD *)a2 = v5;
  *(_OWORD *)(a2 + 16) = v6;
  *(unsigned char *)(a2 + 32) = v7;
  *(unsigned char *)(a2 + 33) = v8;
  return result;
}

void sub_10000ADF4()
{
  id v0 = [self defaultCenter];
  NSString v1 = String._bridgeToObjectiveC()();
  [v0 postNotificationName:v1 object:0];
}

unint64_t sub_10000AE84()
{
  unint64_t result = qword_10015FFD8;
  if (!qword_10015FFD8)
  {
    sub_10004D318(&qword_10015FF80);
    sub_10004D318(&qword_10015FF88);
    sub_10004D2D4(&qword_10015FFC0, &qword_10015FF88);
    swift_getOpaqueTypeConformance2();
    sub_10004D2D4(&qword_10015FFE0, &qword_10015FFE8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015FFD8);
  }
  return result;
}

uint64_t sub_10000AF84()
{
  uint64_t v1 = type metadata accessor for ScrollViewProxy();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10000B014(unint64_t a1)
{
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)((char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_10015F128 != -1) {
    swift_once();
  }
  uint64_t v6 = (void *)qword_10016AF88;
  void *v5 = qword_10016AF88;
  (*(void (**)(void *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  id v7 = v6;
  char v8 = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v3 + 8))(v5, v2);
  if ((v8 & 1) == 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  id v25 = *(id *)(v24 + OBJC_IVAR____TtC11SettingsApp25SatelliteListItemProvider_ctClient);
  if (!v25) {
    return result;
  }
  if (a1 >> 62)
  {
LABEL_14:
    id v23 = v25;
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v10 = result;
    if (result) {
      goto LABEL_7;
    }
    goto LABEL_15;
  }
  uint64_t v10 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  id v11 = v25;
  uint64_t result = swift_bridgeObjectRetain();
  if (v10)
  {
LABEL_7:
    if (v10 < 1)
    {
      __break(1u);
      return result;
    }
    uint64_t v12 = 0;
    unint64_t v13 = a1 & 0xC000000000000001;
    unint64_t v14 = a1;
    do
    {
      if (v13) {
        id v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v15 = *(id *)(a1 + 8 * v12 + 32);
      }
      uint64_t v16 = v15;
      ++v12;
      NSString v17 = String._bridgeToObjectiveC()();
      id v18 = [objc_allocWithZone((Class)CTBundle) initWithBundleType:1];
      uint64_t v19 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v20 = swift_allocObject();
      *(void *)(v20 + 16) = v19;
      *(void *)(v20 + 24) = v16;
      aBlock[4] = sub_1000AE5F0;
      aBlock[5] = v20;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100065230;
      aBlock[3] = &unk_1001541F0;
      v21 = _Block_copy(aBlock);
      id v22 = v16;
      swift_release();
      [v25 copyCarrierBundleValueWithDefault:v22 key:v17 bundleType:v18 completion:v21];
      _Block_release(v21);

      a1 = v14;
    }
    while (v10 != v12);
  }
LABEL_15:

  return swift_bridgeObjectRelease();
}

id sub_10000B36C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void **)a1;
  uint64_t v4 = *(void *)(a1 + 8);
  char v5 = *(unsigned char *)(a1 + 16);
  *(void *)a2 = swift_getKeyPath();
  *(unsigned char *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = v3;
  *(void *)(a2 + 24) = v4;
  *(unsigned char *)(a2 + 32) = v5;

  return sub_100047728(v3, v4, v5);
}

uint64_t sub_10000B3D4(unint64_t a1)
{
  uint64_t v3 = (void *)type metadata accessor for DispatchPredicate();
  uint64_t v4 = *(v3 - 1);
  __chkstk_darwin(v3);
  uint64_t v6 = (void *)((char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_10015F128 != -1) {
    swift_once();
  }
  uint64_t v7 = qword_10016AF88;
  void *v6 = qword_10016AF88;
  (*(void (**)(void *, void, void *))(v4 + 104))(v6, enum case for DispatchPredicate.onQueue(_:), v3);
  id v8 = (id)v7;
  LOBYTE(v7) = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(void *, void *))(v4 + 8))(v6, v3);
  if ((v7 & 1) == 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC11SettingsApp25SatelliteListItemProvider_ctClient);
  if (!v3) {
    return result;
  }
  if (a1 >> 62)
  {
LABEL_14:
    uint64_t v19 = v3;
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v10 = result;
    if (result) {
      goto LABEL_7;
    }
    goto LABEL_15;
  }
  uint64_t v10 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  id v11 = v3;
  uint64_t result = swift_bridgeObjectRetain();
  if (v10)
  {
LABEL_7:
    if (v10 < 1)
    {
      __break(1u);
      return result;
    }
    uint64_t v12 = 0;
    do
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v13 = *(id *)(a1 + 8 * v12 + 32);
      }
      unint64_t v14 = v13;
      ++v12;
      uint64_t v15 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v16 = swift_allocObject();
      *(void *)(v16 + 16) = v14;
      *(void *)(v16 + 24) = v15;
      aBlock[4] = sub_1000AE594;
      aBlock[5] = v16;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100065230;
      aBlock[3] = &unk_1001541A0;
      NSString v17 = _Block_copy(aBlock);
      id v18 = v14;
      swift_release();
      [v3 copyRegistrationDisplayStatus:v18 completion:v17];
      _Block_release(v17);
    }
    while (v10 != v12);
  }
LABEL_15:

  return swift_bridgeObjectRelease();
}

char *sub_10000B6B8()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = *(void *)(Strong + 64);
    swift_retain();
    swift_release();
    uint64_t v2 = *(char **)(v1 + 16);
    swift_bridgeObjectRetain();
    sub_10005D41C(v1);
    swift_release();
    uint64_t v3 = *((void *)v2 + 2);
    if (v3) {
      goto LABEL_3;
    }
LABEL_13:
    uint64_t v5 = (char *)_swiftEmptyArrayStorage;
    goto LABEL_14;
  }
  uint64_t v2 = (char *)_swiftEmptyArrayStorage;
  uint64_t v3 = _swiftEmptyArrayStorage[2];
  if (!v3) {
    goto LABEL_13;
  }
LABEL_3:
  swift_bridgeObjectRetain();
  uint64_t v4 = v2 + 96;
  uint64_t v5 = (char *)_swiftEmptyArrayStorage;
  do
  {
    if ((*v4 & 1) == 0)
    {
      uint64_t v8 = *((void *)v4 - 8);
      uint64_t v7 = *((void *)v4 - 7);
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v5 = sub_100027268(0, *((void *)v5 + 2) + 1, 1, v5);
      }
      unint64_t v10 = *((void *)v5 + 2);
      unint64_t v9 = *((void *)v5 + 3);
      if (v10 >= v9 >> 1) {
        uint64_t v5 = sub_100027268((char *)(v9 > 1), v10 + 1, 1, v5);
      }
      *((void *)v5 + 2) = v10 + 1;
      uint64_t v6 = &v5[16 * v10];
      *((void *)v6 + 4) = v8;
      *((void *)v6 + 5) = v7;
    }
    v4 += 72;
    --v3;
  }
  while (v3);
  swift_bridgeObjectRelease();
LABEL_14:
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_10000B824()
{
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    PassthroughSubject.send(_:)();
    swift_release();
  }
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_10000EEB4();
    return swift_release();
  }
  return result;
}

char *sub_10000B8DC()
{
  uint64_t v1 = OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel____lazy_storage___primaryAppleAccountStatusObserver;
  uint64_t v2 = *(void **)((char *)v0
                + OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel____lazy_storage___primaryAppleAccountStatusObserver);
  if (v2)
  {
    uint64_t v3 = *(char **)((char *)v0
                  + OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel____lazy_storage___primaryAppleAccountStatusObserver);
  }
  else
  {
    uint64_t v16 = *v0;
    NSString v17 = &off_100155278;
    v15[0] = v0;
    id v4 = objc_allocWithZone((Class)type metadata accessor for PrimaryAppleAccountStatusObserver());
    uint64_t v5 = sub_10002BF58((uint64_t)v15, v16);
    __chkstk_darwin(v5);
    uint64_t v7 = (void *)((char *)&v15[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v8 + 16))(v7);
    uint64_t v9 = *v7;
    swift_retain();
    unint64_t v10 = sub_1000267EC(v9, v4);
    sub_100042A1C((uint64_t)v15);
    id v11 = *(void **)((char *)v0 + v1);
    *(uint64_t *)((char *)v0 + v1) = (uint64_t)v10;
    uint64_t v3 = v10;

    uint64_t v2 = 0;
  }
  id v12 = v2;
  return v3;
}

uint64_t type metadata accessor for SettingsAppDependencyStore()
{
  return self;
}

uint64_t sub_10000BA74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TaskPriority();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_10003F5D0(a1, &qword_100164100);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  sub_100046B9C(&qword_100163D38);
  return swift_task_create();
}

uint64_t sub_10000BC28()
{
  uint64_t v0 = type metadata accessor for Logger();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for OSSignposter();
  sub_10001C174(v4, qword_10016B070);
  sub_1000477B0(v4, (uint64_t)qword_10016B070);
  if (qword_10015F178 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1000477B0(v0, (uint64_t)qword_10016B058);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v5, v0);
  return OSSignposter.init(logger:)();
}

void sub_10000BD64(char a1)
{
  uint64_t v2 = v1;
  if (qword_10015F0B0 != -1) {
    swift_once();
  }
  uint64_t v4 = (void *)qword_10016AEA0;
  int v5 = a1 & 1;
  Class isa = Bool._bridgeToObjectiveC()().super.super.isa;
  NSString v7 = String._bridgeToObjectiveC()();
  [v4 setValue:isa forKey:v7];

  uint64_t v8 = OBJC_IVAR____TtC11SettingsApp31PersonalHotspotListItemProvider_shouldShow;
  if (*(unsigned __int8 *)(v2 + OBJC_IVAR____TtC11SettingsApp31PersonalHotspotListItemProvider_shouldShow) != v5)
  {
    sub_1000403E0((void *)(v2 + OBJC_IVAR____TtC11SettingsApp31PersonalHotspotListItemProvider_invalidator), *(void *)(v2 + OBJC_IVAR____TtC11SettingsApp31PersonalHotspotListItemProvider_invalidator + 24));
    PassthroughSubject.send(_:)();
  }
  *(unsigned char *)(v2 + v8) = v5;
}

void *sub_10000BE84()
{
  uint64_t v1 = OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel____lazy_storage___secondaryAppleAccountItemsObserver;
  if (*(uint64_t *)((char *)v0
                  + OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel____lazy_storage___secondaryAppleAccountItemsObserver))
  {
    uint64_t v2 = *(void **)((char *)v0
                    + OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel____lazy_storage___secondaryAppleAccountItemsObserver);
  }
  else
  {
    uint64_t v12 = *v0;
    uint64_t v3 = v12;
    id v13 = &off_100155278;
    v11[0] = v0;
    type metadata accessor for SecondaryAppleAccountItemsObserver();
    uint64_t v2 = (void *)swift_allocObject();
    uint64_t v4 = sub_10002BF58((uint64_t)v11, v12);
    __chkstk_darwin(v4);
    uint64_t v6 = (void *)((char *)&v11[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v7 + 16))(v6);
    uint64_t v8 = *v6;
    v2[7] = v3;
    v2[8] = &off_100155278;
    v2[4] = v8;
    v2[2] = &_swiftEmptyArrayStorage;
    v2[3] = 0;
    swift_retain();
    sub_100042A1C((uint64_t)v11);
    *(uint64_t *)((char *)v0 + v1) = (uint64_t)v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_10000C00C()
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v1 = (void *)result;
    swift_retain();

    sub_100046B9C((uint64_t *)&unk_100163BE0);
    sub_10004D2D4(&qword_100162ED0, (uint64_t *)&unk_100163BE0);
    Subject<>.send()();
    return swift_release();
  }
  return result;
}

uint64_t sub_10000C0C4(uint64_t a1, const char *a2, SEL *a3)
{
  v43 = a2;
  uint64_t v5 = sub_100046B9C(&qword_1001640B8);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for PreferencesControllerRecipe();
  v46 = *(void (***)(char *, uint64_t))(v8 - 8);
  __chkstk_darwin(v8);
  v47 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for NavigationPath.CollectionProxy();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  v52 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100046B9C(&qword_1001640D8);
  uint64_t v14 = v13 - 8;
  uint64_t v15 = __chkstk_darwin(v13);
  NSString v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v40 - v18;
  v49 = (void (**)(char *, uint64_t))v11;
  v50 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  uint64_t v51 = v11 + 16;
  v50(v17, a1, v10);
  sub_1000373B4(&qword_1001640E0, (void (*)(uint64_t))&type metadata accessor for NavigationPath.CollectionProxy);
  dispatch thunk of Collection.startIndex.getter();
  *(void *)&v17[*(int *)(v14 + 44)] = *(void *)&v54[0];
  sub_100049B74((uint64_t)v17, (uint64_t)v19, &qword_1001640D8);
  uint64_t v20 = &v19[*(int *)(v14 + 44)];
  uint64_t v21 = *(void *)v20;
  dispatch thunk of Collection.endIndex.getter();
  if (v21 != v53[0])
  {
    uint64_t v24 = v8;
    v48 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v46 + 7);
    ++v49;
    v45 = (void (**)(char *, char *, uint64_t))(v46 + 4);
    ++v46;
    *(void *)&long long v22 = 141558275;
    long long v40 = v22;
    v42 = a3;
    v41 = v7;
    uint64_t v44 = v8;
    do
    {
      uint64_t v26 = (void (*)(void *, void))dispatch thunk of Collection.subscript.read();
      sub_1000620F8(v27, (uint64_t)v54);
      v26(v53, 0);
      uint64_t v28 = v52;
      v50(v52, (uint64_t)v19, v10);
      dispatch thunk of Collection.formIndex(after:)();
      (*v49)(v28, v10);
      sub_1000498B0(v54, (uint64_t)v53);
      sub_100046B9C((uint64_t *)&unk_1001640F0);
      char v29 = swift_dynamicCast();
      v30 = *v48;
      if (v29)
      {
        v30(v7, 0, 1, v24);
        v31 = v47;
        (*v45)(v47, v7, v24);
        uint64_t v32 = PreferencesControllerRecipe.viewControllerIfLoaded.getter();
        if (v32)
        {
          v33 = (void *)v32;
          if (qword_10015F140 != -1) {
            swift_once();
          }
          uint64_t v34 = type metadata accessor for Logger();
          sub_1000477B0(v34, (uint64_t)qword_10016AFB0);
          v35 = v33;
          v36 = Logger.logObject.getter();
          os_log_type_t v37 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v36, v37))
          {
            uint64_t v38 = swift_slowAlloc();
            v39 = (void *)swift_slowAlloc();
            *(_DWORD *)uint64_t v38 = v40;
            *(void *)(v38 + 4) = 1752392040;
            *(_WORD *)(v38 + 12) = 2113;
            *(void *)(v38 + 14) = v35;
            void *v39 = v33;
            _os_log_impl((void *)&_mh_execute_header, v36, v37, v43, (uint8_t *)v38, 0x16u);
            sub_100046B9C((uint64_t *)&unk_100163570);
            swift_arrayDestroy();
            uint64_t v7 = v41;
            swift_slowDealloc();
            a3 = v42;
            swift_slowDealloc();
          }
          else
          {

            v36 = v35;
          }
          uint64_t v24 = v44;

          if ([v35 respondsToSelector:*a3]) {
            [v35 *a3];
          }

          (*v46)(v47, v24);
        }
        else
        {
          (*v46)(v31, v24);
        }
      }
      else
      {
        v30(v7, 1, 1, v24);
        sub_10003F5D0((uint64_t)v7, &qword_1001640B8);
      }
      uint64_t v25 = *(void *)v20;
      dispatch thunk of Collection.endIndex.getter();
    }
    while (v25 != v53[0]);
  }
  return sub_10003F5D0((uint64_t)v19, &qword_1001640D8);
}

uint64_t sub_10000C6D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100046B9C((uint64_t *)&unk_100163F70);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = &v12[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  uint64_t v9 = &v12[-v8];
  sub_10003F75C(a2, (uint64_t)&v12[-v8], (uint64_t *)&unk_100163F70);
  uint64_t v10 = a1 + OBJC_IVAR____TtC11SettingsApp26SettingsAppNavigationModel__horizontalSizeClass;
  swift_beginAccess();
  sub_10003F75C(v10, (uint64_t)v7, (uint64_t *)&unk_100163F70);
  swift_beginAccess();
  sub_100039904((uint64_t)v9, v10, (uint64_t *)&unk_100163F70);
  swift_endAccess();
  sub_10000D188((uint64_t)v7);
  sub_10003F5D0((uint64_t)v9, (uint64_t *)&unk_100163F70);
  return sub_10003F5D0((uint64_t)v7, (uint64_t *)&unk_100163F70);
}

uint64_t sub_10000C810(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_10000C870(uint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  if (!a5)
  {
    if (!a1)
    {
      if (a2)
      {
        if (a2 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if (v18) {
            goto LABEL_7;
          }
        }
        else if (*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          goto LABEL_7;
        }
      }
      if (a3)
      {
        if (a3 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if (v19) {
            goto LABEL_7;
          }
        }
        else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          goto LABEL_7;
        }
      }
      if (!a4)
      {
        swift_beginAccess();
        uint64_t Strong = swift_weakLoadStrong();
        if (!Strong) {
          return;
        }
        uint64_t v16 = Strong;
        uint64_t v17 = OBJC_IVAR____TtC11SettingsApp33ExposureNotificationsItemProvider_shouldShowExposureNotifications;
        if (*(unsigned char *)(Strong
                      + OBJC_IVAR____TtC11SettingsApp33ExposureNotificationsItemProvider_shouldShowExposureNotifications) == 1)
        {
          sub_1000403E0((void *)(Strong + OBJC_IVAR____TtC11SettingsApp33ExposureNotificationsItemProvider_invalidator), *(void *)(Strong + OBJC_IVAR____TtC11SettingsApp33ExposureNotificationsItemProvider_invalidator + 24));
          PassthroughSubject.send(_:)();
        }
        *(unsigned char *)(v16 + v17) = 0;
LABEL_11:
        swift_release();
        return;
      }
    }
LABEL_7:
    swift_beginAccess();
    uint64_t v10 = swift_weakLoadStrong();
    if (!v10) {
      return;
    }
    uint64_t v11 = v10;
    uint64_t v12 = OBJC_IVAR____TtC11SettingsApp33ExposureNotificationsItemProvider_shouldShowExposureNotifications;
    if ((*(unsigned char *)(v10
                   + OBJC_IVAR____TtC11SettingsApp33ExposureNotificationsItemProvider_shouldShowExposureNotifications) & 1) == 0)
    {
      sub_1000403E0((void *)(v10 + OBJC_IVAR____TtC11SettingsApp33ExposureNotificationsItemProvider_invalidator), *(void *)(v10 + OBJC_IVAR____TtC11SettingsApp33ExposureNotificationsItemProvider_invalidator + 24));
      PassthroughSubject.send(_:)();
    }
    *(unsigned char *)(v11 + v12) = 1;
    goto LABEL_11;
  }
  if (qword_10015F168 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  sub_1000477B0(v5, (uint64_t)qword_10016B028);
  swift_errorRetain();
  swift_errorRetain();
  oslog = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(oslog, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    v21[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136446210;
    swift_getErrorValue();
    uint64_t v8 = Error.localizedDescription.getter();
    sub_100042948(v8, v9, v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, oslog, v6, "Error in querying EN status: %{public}s.", v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
}

Swift::Int sub_10000CC20(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_100046B9C(&qword_100161660);
    uint64_t v3 = static _SetStorage.allocate(capacity:)();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v25 = a1 + 32;
    while (1)
    {
      os_log_type_t v6 = (uint64_t *)(v25 + 16 * v4);
      uint64_t v8 = *v6;
      uint64_t v7 = v6[1];
      Hasher.init(_seed:)();
      swift_bridgeObjectRetain();
      String.hash(into:)();
      Swift::Int result = Hasher._finalize()();
      uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v11 = result & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        uint64_t v15 = *(void *)(v3 + 48);
        uint64_t v16 = (void *)(v15 + 16 * v11);
        BOOL v17 = *v16 == v8 && v16[1] == v7;
        if (v17 || (Swift::Int result = _stringCompareWithSmolCheck(_:_:expecting:)(), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        uint64_t v18 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v18;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0) {
            break;
          }
          uint64_t v19 = (void *)(v15 + 16 * v11);
          if (*v19 != v8 || v19[1] != v7)
          {
            Swift::Int result = _stringCompareWithSmolCheck(_:_:expecting:)();
            if ((result & 1) == 0) {
              continue;
            }
          }
          goto LABEL_3;
        }
      }
      *(void *)(v5 + 8 * v12) = v14 | v13;
      uint64_t v21 = (void *)(*(void *)(v3 + 48) + 16 * v11);
      void *v21 = v8;
      v21[1] = v7;
      uint64_t v22 = *(void *)(v3 + 16);
      BOOL v23 = __OFADD__(v22, 1);
      uint64_t v24 = v22 + 1;
      if (v23)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v24;
LABEL_4:
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return (Swift::Int)&_swiftEmptySetSingleton;
}

void sub_10000CDC4(void *a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = (char *)Strong;
    os_log_type_t v6 = sub_100009CC0(a2, a1);
    uint64_t v7 = (uint64_t *)&v5[OBJC_IVAR____TtC11SettingsApp25SatelliteListItemProvider_slotInfos];
    uint64_t v8 = swift_beginAccess();
    __chkstk_darwin(v8);
    v11[2] = v6;
    uint64_t v9 = swift_bridgeObjectRetain();
    uint64_t v10 = sub_100064AA4(v9, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1000AE0D8, (uint64_t)v11);
    swift_bridgeObjectRelease();
    uint64_t *v7 = v10;
    swift_bridgeObjectRelease();
    sub_10000B014((unint64_t)v6);
    sub_10000B3D4((unint64_t)v6);
    swift_bridgeObjectRelease();
    sub_1000194FC();
  }
}

uint64_t assignWithTake for PrimarySettingsListDataModelSnapshot(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10000CF38()
{
  uint64_t v0 = sub_100046B9C(&qword_100164100);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v4 = result;
    uint64_t v5 = *(void *)(result + 72);
    if (v5)
    {
      uint64_t v6 = type metadata accessor for TaskPriority();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v2, 1, 1, v6);
      uint64_t v7 = (void *)swift_allocObject();
      v7[2] = 0;
      v7[3] = 0;
      v7[4] = v5;
      v7[5] = v4;
      v7[6] = 0;
      v7[7] = 0;
      swift_retain_n();
      swift_retain();
      sub_10000D9E4((uint64_t)v2, (uint64_t)&unk_1001629D0, (uint64_t)v7);
      swift_release();
      swift_release();
      sub_10003F5D0((uint64_t)v2, &qword_100164100);
    }
    return swift_release();
  }
  return result;
}

int *sub_10000D0A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v6 = *v2;
  uint64_t v5 = v2[1];
  uint64_t v7 = static Alignment.center.getter();
  uint64_t v9 = v8;
  uint64_t result = (int *)(id)MobileGestalt_get_current_device();
  if (result)
  {
    unint64_t v11 = result;
    int appleInternalInstallCapability = MobileGestalt_get_appleInternalInstallCapability();

    if (appleInternalInstallCapability)
    {
      swift_retain();
    }
    else
    {
      uint64_t v6 = 0;
      uint64_t v5 = 0;
    }
    uint64_t v13 = sub_100046B9C(&qword_100163428);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(a2, a1, v13);
    uint64_t result = (int *)sub_100046B9C(&qword_100163430);
    uint64_t v14 = (void *)(a2 + result[9]);
    *uint64_t v14 = v6;
    v14[1] = v5;
    v14[2] = v7;
    _OWORD v14[3] = v9;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10000D188(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for UserInterfaceSizeClass();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v20 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100046B9C((uint64_t *)&unk_100163F70);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100046B9C(&qword_100163F68);
  uint64_t v10 = v9 - 8;
  __chkstk_darwin(v9);
  unint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  uint64_t v21 = v1;
  sub_1000373B4((unint64_t *)&qword_10015F5A0, (void (*)(uint64_t))type metadata accessor for SettingsAppNavigationModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v13 = v1 + OBJC_IVAR____TtC11SettingsApp26SettingsAppNavigationModel__horizontalSizeClass;
  swift_beginAccess();
  uint64_t v14 = (uint64_t)&v12[*(int *)(v10 + 56)];
  sub_10003F75C(a1, (uint64_t)v12, (uint64_t *)&unk_100163F70);
  sub_10003F75C(v13, v14, (uint64_t *)&unk_100163F70);
  uint64_t v15 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v15((uint64_t)v12, 1, v3) == 1)
  {
    if (v15(v14, 1, v3) == 1) {
      return sub_10003F5D0((uint64_t)v12, (uint64_t *)&unk_100163F70);
    }
  }
  else
  {
    sub_10003F75C((uint64_t)v12, (uint64_t)v8, (uint64_t *)&unk_100163F70);
    if (v15(v14, 1, v3) != 1)
    {
      BOOL v17 = v20;
      (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(v20, v14, v3);
      sub_1000373B4((unint64_t *)&unk_100163F80, (void (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass);
      char v18 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v19 = *(void (**)(char *, uint64_t))(v4 + 8);
      v19(v17, v3);
      v19(v8, v3);
      uint64_t result = sub_10003F5D0((uint64_t)v12, (uint64_t *)&unk_100163F70);
      if (v18) {
        return result;
      }
      return sub_10001044C();
    }
    (*(void (**)(char *, uint64_t))(v4 + 8))(v8, v3);
  }
  sub_10003F5D0((uint64_t)v12, &qword_100163F68);
  return sub_10001044C();
}

uint64_t sub_10000D514(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PrimarySettingsListItemIdentifier();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100046B9C(&qword_100163680);
  uint64_t v9 = v8 - 8;
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100046B9C((uint64_t *)&unk_100161530);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v13);
  char v18 = (char *)&v29 - v17;
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v29 - v19;
  sub_10000D930(a1, (uint64_t)&v29 - v19);
  uint64_t v30 = a2;
  sub_10000D930(a2, (uint64_t)v18);
  uint64_t v21 = (uint64_t)&v11[*(int *)(v9 + 56)];
  sub_10000D930((uint64_t)v20, (uint64_t)v11);
  sub_10000D930((uint64_t)v18, v21);
  uint64_t v22 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v22((uint64_t)v11, 1, v4) == 1)
  {
    sub_10003F5D0((uint64_t)v18, (uint64_t *)&unk_100161530);
    sub_10003F5D0((uint64_t)v20, (uint64_t *)&unk_100161530);
    if (v22(v21, 1, v4) == 1)
    {
      sub_10003F5D0((uint64_t)v11, (uint64_t *)&unk_100161530);
      goto LABEL_9;
    }
    goto LABEL_6;
  }
  sub_10000D930((uint64_t)v11, (uint64_t)v15);
  if (v22(v21, 1, v4) == 1)
  {
    sub_10003F5D0((uint64_t)v18, (uint64_t *)&unk_100161530);
    sub_10003F5D0((uint64_t)v20, (uint64_t *)&unk_100161530);
    sub_100045F84((uint64_t)v15);
LABEL_6:
    sub_10003F5D0((uint64_t)v11, &qword_100163680);
    return 0;
  }
  sub_10004984C(v21, (uint64_t)v7);
  char v24 = sub_1000460F4((uint64_t)v15, (uint64_t)v7);
  sub_100045F84((uint64_t)v7);
  sub_10003F5D0((uint64_t)v18, (uint64_t *)&unk_100161530);
  sub_10003F5D0((uint64_t)v20, (uint64_t *)&unk_100161530);
  sub_100045F84((uint64_t)v15);
  sub_10003F5D0((uint64_t)v11, (uint64_t *)&unk_100161530);
  if ((v24 & 1) == 0) {
    return 0;
  }
LABEL_9:
  uint64_t v25 = *(int *)(type metadata accessor for SettingsAppDetailContent() + 20);
  unint64_t v26 = *(void *)(a1 + v25);
  unint64_t v27 = *(void *)(v30 + v25);
  switch(v26 >> 62)
  {
    case 1uLL:
      if (v27 >> 62 != 1) {
        return 0;
      }
      type metadata accessor for PreferencesControllerRepresentableModel();
      swift_retain();
      swift_retain();
      char v28 = static PreferencesControllerRepresentableModel.== infix(_:_:)();
      goto LABEL_14;
    case 2uLL:
      if (v27 >> 62 != 2 || (v26 & 0x3FFFFFFFFFFFFFFFLL) != (v27 & 0x3FFFFFFFFFFFFFFFLL)) {
        return 0;
      }
      goto LABEL_20;
    case 3uLL:
      if (v27 != 0xC000000000000000) {
        return 0;
      }
      goto LABEL_20;
    default:
      if (v27 >> 62) {
        return 0;
      }
      type metadata accessor for SettingsAnyPlatformViewControllerModel();
      swift_retain();
      swift_retain();
      char v28 = static SettingsAnyPlatformViewControllerModel.== infix(_:_:)();
LABEL_14:
      swift_release();
      swift_release();
      if ((v28 & 1) == 0) {
        return 0;
      }
LABEL_20:
      uint64_t result = 1;
      break;
  }
  return result;
}

uint64_t sub_10000D930(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100046B9C((uint64_t *)&unk_100161530);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10000D998()
{
  sub_100046F04(*(void **)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 74, 7);
}

uint64_t sub_10000D9E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100046B9C(&qword_100164100);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003F75C(a1, (uint64_t)v8, &qword_100164100);
  uint64_t v9 = type metadata accessor for TaskPriority();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_10003F5D0((uint64_t)v8, &qword_100164100);
    if (*(void *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v11 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v13 = v12;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    if (*(void *)(a3 + 16)) {
      goto LABEL_3;
    }
  }
  uint64_t v11 = 0;
  uint64_t v13 = 0;
LABEL_6:
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  *(void *)(v14 + 24) = a3;
  if (v13 | v11)
  {
    v16[0] = 0;
    v16[1] = 0;
    v16[2] = v11;
    v16[3] = v13;
  }
  return swift_task_create();
}

void *sub_10000DBD8()
{
  sub_100046B9C(&qword_10015FC88);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_10011CEA0;
  *(void *)(v1 + 32) = &type metadata for OAuthURLRoute;
  *(void *)(v1 + 40) = &off_1001562F0;
  *(void *)(v1 + 48) = &type metadata for ApplicationPrefsURLRoute;
  *(void *)(v1 + 56) = &off_1001560F8;
  *(void *)(v1 + 64) = &type metadata for PreBuddyURLRoute;
  *(void *)(v1 + 72) = &off_1001563F8;
  *(void *)(v1 + 80) = &type metadata for TVProviderURLRoute;
  *(void *)(v1 + 88) = &off_100156430;
  *(void *)(v1 + 96) = &type metadata for SettingsNavigationTVProviderURLRoute;
  *(void *)(v1 + 104) = &off_100156050;
  *(void *)(v1 + 112) = &type metadata for ESIMProvisioningURLRoute;
  *(void *)(v1 + 120) = &off_100156130;
  *(void *)(v1 + 128) = &type metadata for FinanceScriptURLRoute;
  *(void *)(v1 + 136) = &off_100156168;
  *(void *)(v1 + 144) = &type metadata for LegacyPreferencesRootURLRoute;
  *(void *)(v1 + 152) = &off_100156280;
  *(void *)(v1 + 160) = &type metadata for FinishSetupURLRoute;
  *(void *)(v1 + 168) = &off_1001561A0;
  *(void *)(v1 + 176) = &type metadata for InternetAccountsSettingsURLRoute;
  *(void *)(v1 + 184) = &off_100156210;
  *(void *)(v1 + 192) = &type metadata for OSBetaUpdatesURLRoute;
  *(void *)(v1 + 200) = &off_100156360;
  *(void *)(v1 + 208) = &type metadata for FollowUpURLRoute;
  *(void *)(v1 + 216) = &off_1001561D8;
  *(void *)(v1 + 224) = &type metadata for OSAutomaticUpdatesURLRoute;
  *(void *)(v1 + 232) = &off_100156328;
  *(void *)(v1 + 240) = &type metadata for LegacyCastleURLRoute;
  *(void *)(v1 + 248) = &off_100156248;
  *(void *)(v1 + 256) = &type metadata for UninstalledAppsRedirectRoute;
  *(void *)(v1 + 264) = &off_100156468;
  *(void *)(v1 + 272) = &type metadata for AppInstallationSettingsURLRoute;
  *(void *)(v1 + 280) = &off_1001560C0;
  *(void *)(v1 + 288) = &type metadata for PaymentsAndContactlessRedirectRoute;
  *(void *)(v1 + 296) = &off_100156398;
  *(void *)(v1 + 304) = &type metadata for SettingsNavigationURLRoute;
  *(void *)(v1 + 312) = &off_100156088;
  *(void *)(v1 + 320) = &type metadata for LegacyPreferencesURLRoute;
  *(void *)(v1 + 328) = &off_1001562B8;
  v0[2] = v1;
  sub_100046B9C((uint64_t *)&unk_100164140);
  swift_allocObject();
  v0[3] = PassthroughSubject.init()();
  sub_100046B9C(&qword_10015FC90);
  swift_allocObject();
  v0[4] = PassthroughSubject.init()();
  sub_100046B9C((uint64_t *)&unk_100163F90);
  swift_allocObject();
  v0[5] = PassthroughSubject.init()();
  return v0;
}

uint64_t sub_10000DE0C()
{
  uint64_t v5 = &type metadata for DeviceOSExpertFeatureFlags;
  unint64_t v6 = sub_1000676C8();
  v4[0] = 1;
  isFeatureEnabled(_:)();
  sub_100042A1C((uint64_t)v4);
  sub_100046B9C((uint64_t *)&unk_100161610);
  type metadata accessor for URL();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_10011C360;
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = (id)SFRuntimeAbsoluteFilePathForPath();

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  URL.init(fileURLWithPath:)();
  swift_bridgeObjectRelease();
  return v0;
}

unsigned char *sub_10000DF58()
{
  v0[16] = 0;
  if (qword_10015F088 != -1) {
    swift_once();
  }
  NSString v1 = (void *)qword_10016AE60;
  NSString v2 = String._bridgeToObjectiveC()();
  LOBYTE(v1) = [v1 BOOLForKey:v2];

  v0[17] = (_BYTE)v1;
  uint64_t v3 = (void *)qword_10016AE60;
  NSString v4 = String._bridgeToObjectiveC()();
  LOBYTE(v3) = [v3 BOOLForKey:v4];

  v0[18] = (_BYTE)v3;
  uint64_t v5 = (void *)qword_10016AE60;
  NSString v6 = String._bridgeToObjectiveC()();
  LOBYTE(v5) = [v5 BOOLForKey:v6];

  v0[19] = (_BYTE)v5;
  return v0;
}

char *sub_10000E084(char *a1, void *a2, int *a3)
{
  *(void *)a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[2];
  *((void *)a1 + 1) = a2[1];
  *((void *)a1 + 2) = v6;
  swift_bridgeObjectRelease();
  *((void *)a1 + 3) = a2[3];
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[5];
  *((void *)a1 + 4) = a2[4];
  *((void *)a1 + 5) = v7;
  swift_bridgeObjectRelease();
  *((void *)a1 + 6) = a2[6];
  swift_bridgeObjectRelease();
  *((void *)a1 + 7) = a2[7];
  swift_bridgeObjectRelease();
  *((void *)a1 + 8) = a2[8];
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[11];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for FLFollowUpGroupSectionElement();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v15)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
LABEL_6:
    uint64_t v16 = sub_100046B9C(&qword_1001629E0);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
LABEL_7:
  *(void *)&a1[a3[12]] = *(void *)((char *)a2 + a3[12]);
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[13];
  char v18 = &a1[v17];
  uint64_t v19 = (char *)a2 + v17;
  int v20 = v13(&a1[v17], 1, v11);
  int v21 = v13(v19, 1, v11);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v18, v19, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v18, 0, 1, v11);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v21)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v18, v11);
LABEL_12:
    uint64_t v22 = sub_100046B9C(&qword_1001629E0);
    memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v18, v19, v11);
LABEL_13:
  *(void *)&a1[a3[14]] = *(void *)((char *)a2 + a3[14]);
  swift_bridgeObjectRelease();
  uint64_t v23 = a3[15];
  char v24 = &a1[v23];
  uint64_t v25 = (char *)a2 + v23;
  int v26 = v13(&a1[v23], 1, v11);
  int v27 = v13(v25, 1, v11);
  if (!v26)
  {
    if (!v27)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v24, v25, v11);
      goto LABEL_19;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v24, v11);
    goto LABEL_18;
  }
  if (v27)
  {
LABEL_18:
    uint64_t v28 = sub_100046B9C(&qword_1001629E0);
    memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v24, v25, v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v24, 0, 1, v11);
LABEL_19:
  *(void *)&a1[a3[16]] = *(void *)((char *)a2 + a3[16]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10000E4A8()
{
  uint64_t v0 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v15 = *(void *)(v0 - 8);
  __chkstk_darwin();
  NSString v2 = (char *)&v13 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for DispatchQoS();
  uint64_t v3 = *(void *)(v14 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100055498();
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for DispatchQoS.QoSClass.userInteractive(_:), v6);
  uint64_t v10 = (void *)static OS_dispatch_queue.global(qos:)();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  aBlock[4] = sub_1000113B8;
  aBlock[5] = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002CC68;
  aBlock[3] = &unk_100154E40;
  uint64_t v11 = _Block_copy(aBlock);
  static DispatchQoS.unspecified.getter();
  aBlock[7] = &_swiftEmptyArrayStorage;
  sub_100007BA8((unint64_t *)&qword_1001614F0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100046B9C((uint64_t *)&unk_1001609C0);
  sub_10002F644();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v11);

  (*(void (**)(char *, uint64_t))(v15 + 8))(v2, v0);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v14);
}

uint64_t sub_10000E7F0(uint64_t a1, uint64_t a2)
{
  uint64_t v15 = type metadata accessor for PrimarySettingsListModel();
  uint64_t v16 = &off_100155278;
  *(void *)&long long v14 = a1;
  type metadata accessor for PrimarySettingsListItemIdentifier();
  swift_storeEnumTagMultiPayload();
  uint64_t v4 = OBJC_IVAR____TtC11SettingsApp19VPNListItemProvider_hasRelayConfigurations;
  if (qword_10015F0B8 != -1) {
    swift_once();
  }
  uint64_t v5 = (void *)qword_10016AEC0;
  NSString v6 = String._bridgeToObjectiveC()();
  LOBYTE(v5) = [v5 BOOLForKey:v6];

  *(unsigned char *)(a2 + v4) = (_BYTE)v5;
  uint64_t v7 = (void *)qword_10016AEC0;
  NSString v8 = String._bridgeToObjectiveC()();
  unint64_t v9 = (unint64_t)[v7 integerForKey:v8];

  if ((v9 & 0x8000000000000000) != 0
    || (*(void *)(a2 + OBJC_IVAR____TtC11SettingsApp19VPNListItemProvider_visibilityStyle) = v9,
        uint64_t v10 = (void *)qword_10016AEC0,
        NSString v11 = String._bridgeToObjectiveC()(),
        unint64_t v12 = (unint64_t)[v10 integerForKey:v11],
        v11,
        (v12 & 0x8000000000000000) != 0))
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    *(void *)(a2 + OBJC_IVAR____TtC11SettingsApp19VPNListItemProvider_connectivityState) = v12;
    *(void *)(a2 + OBJC_IVAR____TtC11SettingsApp19VPNListItemProvider_vpnConnectivityManager) = 0;
    sub_1000498B0(&v14, a2 + OBJC_IVAR____TtC11SettingsApp19VPNListItemProvider_invalidator);
    return a2;
  }
  return result;
}

void sub_10000EA04(uint64_t a1)
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = *(void **)(Strong + OBJC_IVAR____TtC11SettingsApp25BluetoothListItemProvider_bluetoothController);
    id v4 = v3;
    swift_release();
    if (v3)
    {
      aBlock[4] = sub_100067B34;
      aBlock[5] = a1;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1000077F4;
      aBlock[3] = &unk_100153B68;
      uint64_t v5 = _Block_copy(aBlock);
      swift_retain();
      swift_release();
      [v4 activateWithCompletion:v5];
      _Block_release(v5);
    }
    else
    {
      __break(1u);
    }
  }
}

id sub_10000EB18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void **)a1;
  uint64_t v4 = *(void *)(a1 + 8);
  char v5 = *(unsigned char *)(a1 + 16);
  *(void *)a2 = swift_getKeyPath();
  *(unsigned char *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = v3;
  *(void *)(a2 + 24) = v4;
  *(unsigned char *)(a2 + 32) = v5;

  return sub_100047728(v3, v4, v5);
}

void sub_10000EB80()
{
  uint64_t v1 = type metadata accessor for DispatchPredicate();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (void *)((char *)aBlock - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_10015F128 != -1) {
    swift_once();
  }
  uint64_t v5 = qword_10016AF88;
  *uint64_t v4 = qword_10016AF88;
  (*(void (**)(void *, void, uint64_t))(v2 + 104))(v4, enum case for DispatchPredicate.onQueue(_:), v1);
  id v6 = (id)v5;
  LOBYTE(v5) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v2 + 8))(v4, v1);
  if (v5)
  {
    uint64_t v7 = *(void **)(v0 + OBJC_IVAR____TtC11SettingsApp25SatelliteListItemProvider_ctClient);
    if (v7)
    {
      uint64_t v8 = swift_allocObject();
      swift_unknownObjectWeakInit();
      aBlock[4] = sub_100067888;
      aBlock[5] = v8;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100065230;
      aBlock[3] = &unk_100154150;
      unint64_t v9 = _Block_copy(aBlock);
      id v10 = v7;
      swift_release();
      [v10 getActiveContextsWithCallback:v9];
      _Block_release(v9);
    }
  }
  else
  {
    __break(1u);
  }
}

BOOL sub_10000ED8C(long long *a1, long long *a2)
{
  long long v2 = a1[1];
  long long v5 = *a1;
  v6[0] = v2;
  *(_OWORD *)((char *)v6 + 10) = *(long long *)((char *)a1 + 26);
  long long v3 = a2[1];
  long long v7 = *a2;
  v8[0] = v3;
  *(_OWORD *)((char *)v8 + 10) = *(long long *)((char *)a2 + 26);
  return sub_10003C848((uint64_t)&v5, (uint64_t)&v7);
}

uint64_t sub_10000EEB4()
{
  uint64_t v0 = type metadata accessor for OSSignpostID();
  uint64_t v16 = *(void *)(v0 - 8);
  uint64_t v17 = v0;
  __chkstk_darwin(v0);
  long long v2 = (char *)&v15 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for OSSignposter();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10015F180 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_1000477B0(v3, (uint64_t)qword_10016B070);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v7, v3);
  static OSSignpostID.exclusive.getter();
  uint64_t v8 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)uint64_t v8 = 0;
  unint64_t v9 = OSSignposter.logHandle.getter();
  os_signpost_type_t v10 = static os_signpost_type_t.begin.getter();
  os_signpost_id_t v11 = OSSignpostID.rawValue.getter();
  _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v9, v10, v11, "PrimarySettingsListDataModelSnapshotProviding.performPostApplicationLaunchSetup()", "", v8, 2u);
  sub_100061B9C();
  os_signpost_type_t v12 = static os_signpost_type_t.end.getter();
  os_signpost_id_t v13 = OSSignpostID.rawValue.getter();
  _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v9, v12, v13, "PrimarySettingsListDataModelSnapshotProviding.performPostApplicationLaunchSetup()", "", v8, 2u);

  swift_slowDealloc();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v2, v17);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_10000F13C(uint64_t a1, uint64_t a2)
{
  v6[3] = type metadata accessor for PrimarySettingsListModel();
  v6[4] = &off_100155278;
  v6[0] = a1;
  *(_OWORD *)(a2 + 16) = xmmword_100120D40;
  *(unsigned char *)(a2 + 32) = 2;
  *(void *)(a2 + 40) = &_swiftEmptySetSingleton;
  sub_1000620F8((uint64_t)v6, a2 + 48);
  type metadata accessor for ScreenSharingInteractionController();
  uint64_t v4 = (void *)static ScreenSharingInteractionController.shared.getter();
  sub_10003736C(&qword_100163C98, (void (*)(uint64_t))&type metadata accessor for ScreenSharingInteractionController);
  ObservableObject<>.objectWillChange.getter();

  type metadata accessor for ObservableObjectPublisher();
  swift_retain();
  Publisher<>.sink(receiveValue:)();
  swift_release();
  swift_release();
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  sub_100042A1C((uint64_t)v6);
  return a2;
}

unint64_t sub_10000F2A8()
{
  unint64_t result = qword_100164438;
  if (!qword_100164438)
  {
    sub_10004D318(&qword_100164348);
    sub_10004D318(&qword_100164338);
    sub_10004D318(&qword_100164330);
    sub_10004D318(&qword_100164328);
    sub_10004D318(&qword_100164320);
    sub_10004D318(&qword_100164318);
    sub_10004D318(&qword_100164310);
    sub_10004D2D4(&qword_100164420, &qword_100164310);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_100067D7C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100164438);
  }
  return result;
}

void sub_10000F480(void *a1)
{
  v9.receiver = v1;
  v9.super_class = (Class)type metadata accessor for SettingsAppDebugMenuGestureProxyView();
  [super willMoveToWindow:a1];
  if (a1)
  {
    id v3 = [a1 windowScene];
    if (v3)
    {
      uint64_t v4 = v3;
      id v5 = [v3 statusBarManager];

      if (v5)
      {
        uint64_t v6 = swift_allocObject();
        swift_unknownObjectWeakInit();
        v8[4] = sub_1000C19C8;
        v8[5] = v6;
        v8[0] = _NSConcreteStackBlock;
        v8[1] = 1107296256;
        _OWORD v8[2] = sub_10002CC68;
        v8[3] = &unk_100154E90;
        uint64_t v7 = _Block_copy(v8);
        swift_release();
        [v5 setDebugMenuHandler:v7];
        _Block_release(v7);
      }
    }
  }
}

uint64_t sub_10000F5C4(char a1, int a2, uint64_t a3, char a4, uint64_t a5)
{
  int v20 = a2;
  uint64_t v8 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  os_signpost_id_t v11 = &v19[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v21 = type metadata accessor for DispatchQoS();
  uint64_t v12 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  long long v14 = &v19[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10002E1D8(0, (unint64_t *)&qword_1001609D0);
  uint64_t v15 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v16 = swift_allocObject();
  *(unsigned char *)(v16 + 16) = a1;
  *(unsigned char *)(v16 + 17) = a4;
  *(unsigned char *)(v16 + 18) = v20;
  *(void *)(v16 + 24) = a5;
  aBlock[4] = sub_10006703C;
  aBlock[5] = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002CC68;
  aBlock[3] = &unk_100153828;
  uint64_t v17 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10006572C((unint64_t *)&qword_1001614F0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100046B9C((uint64_t *)&unk_1001609C0);
  sub_10004D2D4((unint64_t *)&qword_100161500, (uint64_t *)&unk_1001609C0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v17);

  (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v11, v8);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v12 + 8))(v14, v21);
}

id sub_10000F8C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v19 = type metadata accessor for PrimarySettingsListModel();
  int v20 = &off_100155278;
  *(void *)&long long v18 = a1;
  id result = [self sharedManager];
  if (result)
  {
    uint64_t v9 = result;
    unsigned __int8 v10 = [result isTetheringEnabled];

    *(unsigned char *)(a4 + 16) = v10;
    type metadata accessor for PrimarySettingsListItemIdentifier();
    swift_storeEnumTagMultiPayload();
    uint64_t v11 = a4 + OBJC_IVAR____TtC11SettingsApp31PersonalHotspotListItemProvider_cancellable;
    *(void *)(v11 + 32) = 0;
    *(_OWORD *)uint64_t v11 = 0u;
    *(_OWORD *)(v11 + 16) = 0u;
    uint64_t v12 = OBJC_IVAR____TtC11SettingsApp31PersonalHotspotListItemProvider_shouldShow;
    if (qword_10015F0B0 != -1) {
      swift_once();
    }
    uint64_t v13 = (void *)qword_10016AEA0;
    NSString v14 = String._bridgeToObjectiveC()();
    LOBYTE(v13) = [v13 BOOLForKey:v14];

    *(unsigned char *)(a4 + v12) = (_BYTE)v13;
    uint64_t v15 = OBJC_IVAR____TtC11SettingsApp31PersonalHotspotListItemProvider_shouldDisable;
    uint64_t v16 = (void *)qword_10016AEA0;
    NSString v17 = String._bridgeToObjectiveC()();
    LOBYTE(v16) = [v16 BOOLForKey:v17];

    *(unsigned char *)(a4 + v15) = (_BYTE)v16;
    sub_1000498B0(&v18, a4 + OBJC_IVAR____TtC11SettingsApp31PersonalHotspotListItemProvider_invalidator);
    *(void *)(a4 + OBJC_IVAR____TtC11SettingsApp31PersonalHotspotListItemProvider_airplaneModeListItemProvider) = a2;
    *(void *)(a4 + OBJC_IVAR____TtC11SettingsApp31PersonalHotspotListItemProvider_cellularDataSettingObserver) = a3;
    return (id)a4;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10000FAA4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  char IsBadgedForSoftwareUpdate = SUSUISettingsIsBadgedForSoftwareUpdate();
  sub_100055498();
  uint64_t v11 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  *(unsigned char *)(v12 + 24) = IsBadgedForSoftwareUpdate;
  aBlock[4] = sub_100069B80;
  aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002CC68;
  aBlock[3] = &unk_1001545C8;
  uint64_t v13 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10002F6A0();
  sub_100046B9C((uint64_t *)&unk_1001609C0);
  sub_10002F644();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_10000FD30()
{
  uint64_t v0 = sub_10001829C();
  uint64_t v1 = type metadata accessor for StaticPrimarySettingsListSectionProvider();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_100120C70;
  *(_WORD *)(v2 + 32) = 2;
  *(void *)(v2 + 40) = v0;
  uint64_t v10 = v1;
  uint64_t v11 = &off_100155F50;
  *(void *)&long long v9 = v2;
  sub_100046B9C(&qword_1001615A0);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_10011C360;
  sub_1000498B0(&v9, v3 + 32);
  uint64_t v4 = sub_100029E64();
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_100120C70;
  *(_WORD *)(v5 + 32) = 258;
  *(void *)(v5 + 40) = v4;
  uint64_t v10 = v1;
  uint64_t v11 = &off_100155F50;
  *(void *)&long long v9 = v5;
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_10011C360;
  sub_1000498B0(&v9, v6 + 32);
  *(void *)&long long v9 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRetain();
  sub_1000633DC(v3);
  uint64_t v7 = swift_bridgeObjectRetain();
  sub_1000633DC(v7);
  sub_100046B9C(&qword_100163C88);
  swift_arrayDestroy();
  return v9;
}

BOOL sub_10000FEA4(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  v5[0] = *a1;
  v5[1] = v2;
  v6[0] = a1[2];
  *(_OWORD *)((char *)v6 + 10) = *(_OWORD *)((char *)a1 + 42);
  long long v3 = a2[1];
  v7[0] = *a2;
  v7[1] = v3;
  v8[0] = a2[2];
  *(_OWORD *)((char *)v8 + 10) = *(_OWORD *)((char *)a2 + 42);
  return sub_10003B534((uint64_t)v5, (uint64_t)v7);
}

uint64_t sub_10000FF00(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5, void *a6)
{
  uint64_t v9 = a3;
  uint64_t v11 = *(void (**)(void *, uint64_t, uint64_t, void *, void *))(a1 + 32);
  if (a3)
  {
    sub_10000FFF8();
    uint64_t v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  if (a4)
  {
    sub_10000FFF8();
    a4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  swift_retain();
  id v12 = a2;
  id v13 = a5;
  id v14 = a6;
  v11(a2, v9, a4, a5, a6);
  swift_release();

  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

unint64_t sub_10000FFF8()
{
  unint64_t result = qword_100162FB8;
  if (!qword_100162FB8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100162FB8);
  }
  return result;
}

uint64_t sub_100010038()
{
  long long v1 = v0[1];
  long long v12 = *v0;
  long long v13 = v1;
  long long v2 = v0[3];
  long long v14 = v0[2];
  long long v15 = v2;
  type metadata accessor for MainActor();
  sub_1000101C4((uint64_t)&v12);
  uint64_t v3 = static MainActor.shared.getter();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v3;
  *(void *)(v4 + 24) = &protocol witness table for MainActor;
  long long v5 = v13;
  *(_OWORD *)(v4 + 32) = v12;
  *(_OWORD *)(v4 + 48) = v5;
  long long v6 = v15;
  *(_OWORD *)(v4 + 64) = v14;
  *(_OWORD *)(v4 + 80) = v6;
  sub_1000101C4((uint64_t)&v12);
  uint64_t v7 = static MainActor.shared.getter();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v7;
  *(void *)(v8 + 24) = &protocol witness table for MainActor;
  long long v9 = v13;
  *(_OWORD *)(v8 + 32) = v12;
  *(_OWORD *)(v8 + 48) = v9;
  long long v10 = v15;
  *(_OWORD *)(v8 + 64) = v14;
  *(_OWORD *)(v8 + 80) = v10;
  Binding.init(get:set:)();
  sub_100046B9C(&qword_10015FD68);
  sub_10004D2D4((unint64_t *)&qword_10015FD90, &qword_10015FD68);
  return Toggle.init(isOn:label:)();
}

uint64_t sub_1000101C4(uint64_t a1)
{
  return a1;
}

uint64_t sub_100010218@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_100046B9C(&qword_10015FCB8);
  uint64_t v4 = ((uint64_t (*)(void))__chkstk_darwin)();
  long long v6 = &v17[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  uint64_t v8 = &v17[-v7];
  uint64_t v9 = sub_100046B9C(&qword_10015FCC0);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  long long v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  long long v14 = &v17[-v13];
  sub_100017E04((uint64_t)&v17[-v13]);
  *(void *)uint64_t v8 = static HorizontalAlignment.leading.getter();
  *((void *)v8 + 1) = 0;
  v8[16] = 1;
  sub_100046B9C(&qword_10015FCC8);
  uint64_t v18 = a1;
  sub_100046B9C(&qword_10015FCD0);
  sub_10004D2D4(&qword_10015FCD8, &qword_10015FCD0);
  LabelGroup.init(content:)();
  sub_10003F75C((uint64_t)v14, (uint64_t)v12, &qword_10015FCC0);
  sub_10003F75C((uint64_t)v8, (uint64_t)v6, &qword_10015FCB8);
  sub_10003F75C((uint64_t)v12, a2, &qword_10015FCC0);
  uint64_t v15 = sub_100046B9C(&qword_10015FCE0);
  sub_10003F75C((uint64_t)v6, a2 + *(int *)(v15 + 48), &qword_10015FCB8);
  sub_10003F5D0((uint64_t)v8, &qword_10015FCB8);
  sub_10003F5D0((uint64_t)v14, &qword_10015FCC0);
  sub_10003F5D0((uint64_t)v6, &qword_10015FCB8);
  return sub_10003F5D0((uint64_t)v12, &qword_10015FCC0);
}

uint64_t sub_10001044C()
{
  uint64_t v1 = sub_100046B9C((uint64_t *)&unk_100161530);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  v31 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v33 = (uint64_t)&v31 - v4;
  uint64_t v5 = type metadata accessor for UserInterfaceSizeClass();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v32 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100046B9C(&qword_100163F68);
  uint64_t v9 = v8 - 8;
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100046B9C((uint64_t *)&unk_100163F70);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  NSString v17 = (char *)&v31 - v16;
  swift_getKeyPath();
  uint64_t v36 = v0;
  sub_1000373B4((unint64_t *)&qword_10015F5A0, (void (*)(uint64_t))type metadata accessor for SettingsAppNavigationModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v34 = v0;
  uint64_t v18 = v0 + OBJC_IVAR____TtC11SettingsApp26SettingsAppNavigationModel__horizontalSizeClass;
  swift_beginAccess();
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v17, enum case for UserInterfaceSizeClass.regular(_:), v5);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v17, 0, 1, v5);
  uint64_t v19 = (uint64_t)&v11[*(int *)(v9 + 56)];
  sub_10003F75C(v18, (uint64_t)v11, (uint64_t *)&unk_100163F70);
  sub_10003F75C((uint64_t)v17, v19, (uint64_t *)&unk_100163F70);
  int v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (v20((uint64_t)v11, 1, v5) != 1)
  {
    sub_10003F75C((uint64_t)v11, (uint64_t)v15, (uint64_t *)&unk_100163F70);
    if (v20(v19, 1, v5) != 1)
    {
      uint64_t v22 = v32;
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v32, v19, v5);
      sub_1000373B4((unint64_t *)&unk_100163F80, (void (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass);
      char v23 = dispatch thunk of static Equatable.== infix(_:_:)();
      char v24 = *(void (**)(char *, uint64_t))(v6 + 8);
      v24(v22, v5);
      sub_10003F5D0((uint64_t)v17, (uint64_t *)&unk_100163F70);
      v24(v15, v5);
      uint64_t result = sub_10003F5D0((uint64_t)v11, (uint64_t *)&unk_100163F70);
      if ((v23 & 1) == 0) {
        return result;
      }
      goto LABEL_8;
    }
    sub_10003F5D0((uint64_t)v17, (uint64_t *)&unk_100163F70);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    return sub_10003F5D0((uint64_t)v11, &qword_100163F68);
  }
  sub_10003F5D0((uint64_t)v17, (uint64_t *)&unk_100163F70);
  if (v20(v19, 1, v5) != 1) {
    return sub_10003F5D0((uint64_t)v11, &qword_100163F68);
  }
  sub_10003F5D0((uint64_t)v11, (uint64_t *)&unk_100163F70);
LABEL_8:
  uint64_t v25 = sub_100036FFC();
  swift_getKeyPath();
  v35 = v25;
  sub_1000373B4((unint64_t *)&unk_100163AC0, (void (*)(uint64_t))type metadata accessor for PrimarySettingsListModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v26 = (uint64_t)&v25[OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel_effectiveSelection];
  swift_beginAccess();
  uint64_t v27 = v33;
  sub_10003F75C(v26, v33, (uint64_t *)&unk_100161530);
  swift_release();
  uint64_t v28 = type metadata accessor for PrimarySettingsListItemIdentifier();
  uint64_t v29 = *(void *)(v28 - 8);
  LODWORD(v26) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28);
  uint64_t result = sub_10003F5D0(v27, (uint64_t *)&unk_100161530);
  if (v26 == 1)
  {
    sub_100036FFC();
    uint64_t v30 = (uint64_t)v31;
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v29 + 56))(v30, 0, 1, v28);
    sub_1000C98F4(v30);
    return swift_release();
  }
  return result;
}

uint64_t sub_100010A60(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for PrimarySettingsListItem() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_100036F58(a1, v4);
}

id sub_100010CB0()
{
  id result = [self sharedConnection];
  if (result)
  {
    uint64_t v1 = result;
    id v2 = [result effectiveUserSettings];

    if (v2)
    {
      uint64_t v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      AnyHashable.init<A>(_:)();
      if (*(void *)(v3 + 16) && (unint64_t v4 = sub_1000619E0((uint64_t)v9), (v5 & 1) != 0))
      {
        sub_100061984(*(void *)(v3 + 56) + 32 * v4, (uint64_t)&v10);
      }
      else
      {
        long long v10 = 0u;
        long long v11 = 0u;
      }
      swift_bridgeObjectRelease();
      sub_100061AEC((uint64_t)v9);
      if (*((void *)&v11 + 1))
      {
        sub_100046B9C(&qword_1001609A8);
        if (swift_dynamicCast())
        {
          uint64_t v6 = sub_10006494C(v9[0]);
          swift_bridgeObjectRelease();
          uint64_t v7 = sub_100026FA4(v6);
          swift_release();
          uint64_t v8 = sub_100029478(v7);
          swift_bridgeObjectRelease();
          return (id)v8;
        }
        return &_swiftEmptySetSingleton;
      }
    }
    else
    {
      long long v10 = 0u;
      long long v11 = 0u;
    }
    sub_10003F5D0((uint64_t)&v10, &qword_1001609A0);
    return &_swiftEmptySetSingleton;
  }
  __break(1u);
  return result;
}

uint64_t sub_100010E60(uint64_t a1, char a2)
{
  uint64_t v3 = type metadata accessor for OSSignpostID();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)v20 - v8;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    long long v11 = (unsigned char *)Strong;
    uint64_t v12 = OBJC_IVAR____TtC11SettingsApp31GeneralSettingsListItemProvider_badgedForSoftwareUpdate;
    if (*(unsigned char *)(Strong + OBJC_IVAR____TtC11SettingsApp31GeneralSettingsListItemProvider_badgedForSoftwareUpdate) != (a2 & 1))
    {
      sub_1000403E0((void *)(Strong + OBJC_IVAR____TtC11SettingsApp31GeneralSettingsListItemProvider_invalidator), *(void *)(Strong + OBJC_IVAR____TtC11SettingsApp31GeneralSettingsListItemProvider_invalidator + 24));
      v20[0] = "General Software Update Badge";
      v20[1] = 29;
      char v21 = 2;
      PassthroughSubject.send(_:)();
    }
    v11[v12] = a2 & 1;
  }
  if (qword_10015F180 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for OSSignposter();
  sub_1000477B0(v13, (uint64_t)qword_10016B070);
  static OSSignpostID.exclusive.getter();
  uint64_t v14 = OSSignposter.logHandle.getter();
  os_signpost_type_t v15 = static os_signpost_type_t.event.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v9, v3);
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v16 = 0;
    os_signpost_id_t v17 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v14, v15, v17, "GeneralSettingsListItemProvider.updateBadgeForSoftwareUpdate completed", "", v16, 2u);
    swift_slowDealloc();

    uint64_t v18 = *(void (**)(char *, uint64_t))(v4 + 8);
    v18(v9, v3);
    return ((uint64_t (*)(char *, uint64_t))v18)(v7, v3);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  }
}

uint64_t sub_100011100(unsigned __int8 a1, unsigned __int8 a2, char a3)
{
  uint64_t v6 = type metadata accessor for OSSignpostID();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  long long v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)v24 - v11;
  if (a3) {
    char v13 = 2;
  }
  else {
    char v13 = 1;
  }
  if ((a1 | a2)) {
    unsigned __int8 v14 = v13;
  }
  else {
    unsigned __int8 v14 = 0;
  }
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v16 = Strong;
    if (*(unsigned __int8 *)(Strong + 16) != v14)
    {
      sub_1000403E0((void *)(Strong + OBJC_IVAR____TtC11SettingsApp33WalletAndApplePayListItemProvider_invalidator), *(void *)(Strong + OBJC_IVAR____TtC11SettingsApp33WalletAndApplePayListItemProvider_invalidator + 24));
      v24[0] = "Wallet & Apple Pay";
      v24[1] = 18;
      char v25 = 2;
      PassthroughSubject.send(_:)();
    }
    *(unsigned char *)(v16 + 16) = v14;
    swift_release();
  }
  if (qword_10015F180 != -1) {
    swift_once();
  }
  uint64_t v17 = type metadata accessor for OSSignposter();
  sub_1000477B0(v17, (uint64_t)qword_10016B070);
  static OSSignpostID.exclusive.getter();
  uint64_t v18 = OSSignposter.logHandle.getter();
  os_signpost_type_t v19 = static os_signpost_type_t.event.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, v6);
    int v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)int v20 = 0;
    os_signpost_id_t v21 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v18, v19, v21, "WalletAndApplePayListItemProvider.resolveApplePayState completed", "", v20, 2u);
    swift_slowDealloc();

    uint64_t v22 = *(void (**)(char *, uint64_t))(v7 + 8);
    v22(v12, v6);
    return ((uint64_t (*)(char *, uint64_t))v22)(v10, v6);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  }
}

uint64_t sub_1000113B8()
{
  uint64_t v0 = type metadata accessor for Tips.ConfigurationOption.AnalyticsEngine();
  uint64_t v14 = *(void *)(v0 - 8);
  uint64_t v15 = v0;
  __chkstk_darwin();
  id v2 = (char *)&v11 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for Tips.ConfigurationOption.DatastoreLocation();
  uint64_t v12 = *(void *)(v3 - 8);
  uint64_t v13 = v3;
  __chkstk_darwin();
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Tips.ConfigurationOption.DisplayFrequency();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10015F0A8 != -1) {
    swift_once();
  }
  if (qword_10015F058 != -1) {
    swift_once();
  }
  sub_100046B9C(&qword_1001633E8);
  type metadata accessor for Tips.ConfigurationOption();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_10011C380;
  static Tips.ConfigurationOption.DisplayFrequency.system.getter();
  static Tips.ConfigurationOption.displayFrequency(_:)();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  static Tips.ConfigurationOption.DatastoreLocation.tipsGroupContainer.getter();
  static Tips.ConfigurationOption.datastoreLocation(_:)();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v5, v13);
  static Tips.ConfigurationOption.AnalyticsEngine.coreAnalytics.getter();
  static Tips.ConfigurationOption.analyticsEngine(_:)();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v2, v15);
  static Tips.configure(_:)();
  return swift_bridgeObjectRelease();
}

char *sub_1000117F0()
{
  ObjectType = (objc_class *)swift_getObjectType();
  id v2 = v0;
  if (PSIsInEDUMode()) {
    goto LABEL_5;
  }
  id result = (char *)(id)MobileGestalt_get_current_device();
  if (!result)
  {
    __break(1u);
    return result;
  }
  uint64_t v4 = result;
  int cellularDataCapability = MobileGestalt_get_cellularDataCapability();

  if (!cellularDataCapability)
  {
LABEL_5:
    id v7 = 0;
  }
  else
  {
    sub_100055498();
    uint64_t v6 = (void *)static OS_dispatch_queue.main.getter();
    id v7 = [objc_allocWithZone((Class)CoreTelephonyClient) initWithQueue:v6];
  }
  *(void *)&v2[OBJC_IVAR____TtC11SettingsApp25CellularNotificationRelay_telephonyClient] = v7;

  v10.receiver = v2;
  v10.super_class = ObjectType;
  uint64_t v8 = (char *)[super init];
  uint64_t v9 = *(void **)&v8[OBJC_IVAR____TtC11SettingsApp25CellularNotificationRelay_telephonyClient];
  if (v9) {
    [v9 setDelegate:v8];
  }
  return v8;
}

uint64_t sub_1000118E8(uint64_t a1, char a2)
{
  uint64_t v3 = type metadata accessor for OSSignpostID();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  id v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)v20 - v8;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v11 = Strong;
    uint64_t v12 = OBJC_IVAR____TtC11SettingsApp24EthernetListItemProvider_hasEthernetNetworkInterfaces;
    if (*(unsigned char *)(Strong + OBJC_IVAR____TtC11SettingsApp24EthernetListItemProvider_hasEthernetNetworkInterfaces) != (a2 & 1))
    {
      sub_1000403E0((void *)(Strong + OBJC_IVAR____TtC11SettingsApp24EthernetListItemProvider_invalidator), *(void *)(Strong + OBJC_IVAR____TtC11SettingsApp24EthernetListItemProvider_invalidator + 24));
      v20[0] = "Ethernet";
      v20[1] = 8;
      char v21 = 2;
      PassthroughSubject.send(_:)();
    }
    *(unsigned char *)(v11 + v12) = a2 & 1;
    swift_release();
  }
  if (qword_10015F180 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for OSSignposter();
  sub_1000477B0(v13, (uint64_t)qword_10016B070);
  static OSSignpostID.exclusive.getter();
  uint64_t v14 = OSSignposter.logHandle.getter();
  os_signpost_type_t v15 = static os_signpost_type_t.event.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v9, v3);
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v16 = 0;
    os_signpost_id_t v17 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v14, v15, v17, "EthernetListItemProvider.updateEthernet completed", "", v16, 2u);
    swift_slowDealloc();

    uint64_t v18 = *(void (**)(char *, uint64_t))(v4 + 8);
    v18(v9, v3);
    return ((uint64_t (*)(char *, uint64_t))v18)(v7, v3);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  }
}

uint64_t sub_100011B8C(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v3 = type metadata accessor for OSSignpostID();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  id v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)v20 - v8;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v11 = Strong;
    uint64_t v12 = OBJC_IVAR____TtC11SettingsApp25BluetoothListItemProvider_bluetoothState;
    if (*(unsigned __int8 *)(Strong + OBJC_IVAR____TtC11SettingsApp25BluetoothListItemProvider_bluetoothState) != a2)
    {
      sub_1000403E0((void *)(Strong + OBJC_IVAR____TtC11SettingsApp25BluetoothListItemProvider_invalidator), *(void *)(Strong + OBJC_IVAR____TtC11SettingsApp25BluetoothListItemProvider_invalidator + 24));
      v20[0] = "Bluetooth State";
      v20[1] = 15;
      char v21 = 2;
      PassthroughSubject.send(_:)();
    }
    *(unsigned char *)(v11 + v12) = a2;
    swift_release();
  }
  if (qword_10015F180 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for OSSignposter();
  sub_1000477B0(v13, (uint64_t)qword_10016B070);
  static OSSignpostID.exclusive.getter();
  uint64_t v14 = OSSignposter.logHandle.getter();
  os_signpost_type_t v15 = static os_signpost_type_t.event.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v9, v3);
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v16 = 0;
    os_signpost_id_t v17 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v14, v15, v17, "BluetoothListItemProvider.updateBluetoothState completed", "", v16, 2u);
    swift_slowDealloc();

    uint64_t v18 = *(void (**)(char *, uint64_t))(v4 + 8);
    v18(v9, v3);
    return ((uint64_t (*)(char *, uint64_t))v18)(v7, v3);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  }
}

uint64_t sub_100011E2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for FamilyRowStatus();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  void *v8 = *v9;
  v8[1] = v10;
  swift_bridgeObjectRetain();
  return a1;
}

id sub_100011EB4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for DispatchQoS();
  uint64_t v6 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = [self sharedManager];
  if (result)
  {
    uint64_t v10 = result;
    unsigned __int8 v11 = [result hasEthernetNetworkInterfaces];

    sub_100055498();
    uint64_t v12 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = a1;
    *(unsigned char *)(v13 + 24) = v11;
    aBlock[4] = sub_100067C50;
    aBlock[5] = v13;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10002CC68;
    aBlock[3] = &unk_100153EC8;
    uint64_t v14 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_100055450((unint64_t *)&qword_1001614F0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100046B9C((uint64_t *)&unk_1001609C0);
    sub_10004D2D4((unint64_t *)&qword_100161500, (uint64_t *)&unk_1001609C0);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v14);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return (id)(*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v16);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1000121CC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for OSSignpostID();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)v20 - v8;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    unsigned __int8 v11 = (void *)Strong;
    if (sub_1000653C8(a2, *(void *)(Strong + 16)))
    {
      swift_bridgeObjectRetain();
    }
    else
    {
      type metadata accessor for SecondaryAppleAccountItemsObserver();
      sub_1000657BC(&qword_1001631D0, v12, (void (*)(uint64_t))type metadata accessor for SecondaryAppleAccountItemsObserver);
      swift_bridgeObjectRetain();
      ObservableObject<>.objectWillChange.getter();
      ObservableObjectPublisher.send()();
      swift_release();
      sub_1000403E0(v11 + 4, v11[7]);
      v20[0] = "Secondary Account";
      v20[1] = 17;
      char v21 = 2;
      PassthroughSubject.send(_:)();
    }
    v11[2] = a2;
    swift_release();
    swift_bridgeObjectRelease();
  }
  if (qword_10015F180 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for OSSignposter();
  sub_1000477B0(v13, (uint64_t)qword_10016B070);
  static OSSignpostID.exclusive.getter();
  uint64_t v14 = OSSignposter.logHandle.getter();
  os_signpost_type_t v15 = static os_signpost_type_t.event.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v9, v3);
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v16 = 0;
    os_signpost_id_t v17 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v14, v15, v17, "PrimaryAppleAccountStatusObserver.updateSecondaryAppleAccountItems completed", "", v16, 2u);
    swift_slowDealloc();

    uint64_t v18 = *(void (**)(char *, uint64_t))(v4 + 8);
    v18(v9, v3);
    return ((uint64_t (*)(char *, uint64_t))v18)(v7, v3);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  }
}

uint64_t destroy for FirstAppearanceModifier()
{
  swift_release();

  return swift_release();
}

uint64_t sub_10001251C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = (uint64_t)a1;
  sub_1000070FC(a1, (uint64_t)&v21);
  uint64_t v4 = v21;
  uint64_t v19 = v23;
  uint64_t v20 = v22;
  uint64_t v18 = v24;
  unsigned __int8 v17 = v25;
  static Font.title3.getter();
  uint64_t v16 = Font.bold()();
  swift_release();
  uint64_t KeyPath = swift_getKeyPath();
  sub_10000AB44(v2, (uint64_t)&v21);
  uint64_t v7 = v21;
  uint64_t v6 = v22;
  uint64_t v8 = v24;
  uint64_t v13 = v23;
  uint64_t v14 = v22;
  LOBYTE(v2) = v26;
  char v15 = v26;
  uint64_t v9 = v25;
  uint64_t v10 = static Font.footnote.getter();
  uint64_t v11 = swift_getKeyPath();
  *(void *)a2 = v4;
  *(void *)(a2 + 8) = v20;
  *(void *)(a2 + 16) = v19;
  *(void *)(a2 + 24) = v18;
  *(unsigned char *)(a2 + 32) = v17;
  *(void *)(a2 + 40) = KeyPath;
  *(void *)(a2 + 48) = v16;
  *(void *)(a2 + 56) = v7;
  *(void *)(a2 + 64) = v6;
  *(void *)(a2 + 72) = v13;
  *(void *)(a2 + 80) = v8;
  *(unsigned char *)(a2 + 88) = v9;
  *(unsigned char *)(a2 + 89) = v2;
  *(void *)(a2 + 96) = v11;
  *(void *)(a2 + 104) = v10;
  sub_100065F9C(v4, v20, v19);
  swift_retain();
  swift_retain();
  sub_100065ED4(v7, v14, v13, v8, v9, v15);
  swift_retain();
  swift_retain();
  sub_100065F38(v7, v14, v13, v8, v9, v15);
  swift_release();
  swift_release();
  sub_100065FD8(v4, v20, v19);
  swift_release();

  return swift_release();
}

uint64_t sub_1000126E0()
{
  uint64_t result = type metadata accessor for PrimarySettingsListItemIdentifier();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100012790@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_10003736C((unint64_t *)&unk_100163AC0, (void (*)(uint64_t))type metadata accessor for PrimarySettingsListModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v4 = *(void *)(v3 + OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel__cachedDataModel);
  uint64_t v5 = *(void *)(v3 + OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel__cachedDataModel + 8);
  uint64_t v6 = *(void *)(v3 + OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel__cachedDataModel + 16);
  *a2 = v4;
  a2[1] = v5;
  a2[2] = v6;
  return sub_100037444(v4);
}

uint64_t sub_100012850@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_100027924(&qword_10015F570, (void (*)(uint64_t))type metadata accessor for SettingsAppSearchViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + 81);
  return result;
}

uint64_t sub_1000128F8(void *a1, uint64_t a2)
{
  uint64_t v51 = a2;
  uint64_t v3 = type metadata accessor for OSSignpostID();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v44 - v8;
  uint64_t v10 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for DispatchQoS();
  uint64_t v52 = *(void *)(v14 - 8);
  uint64_t v53 = v14;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v17 = a1[3];
  if (v17 == 1)
  {
    if (qword_10015F180 != -1) {
      swift_once();
    }
    uint64_t v18 = type metadata accessor for OSSignposter();
    sub_1000477B0(v18, (uint64_t)qword_10016B070);
    static OSSignpostID.exclusive.getter();
    uint64_t v19 = OSSignposter.logHandle.getter();
    os_signpost_type_t v20 = static os_signpost_type_t.event.getter();
    if (OS_os_log.signpostsEnabled.getter())
    {
      (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v9, v3);
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v21 = 0;
      os_signpost_id_t v22 = OSSignpostID.rawValue.getter();
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v19, v20, v22, "PrimaryAppleAccountStatusObserver.updateAccountStatus bailed", "", v21, 2u);
      swift_slowDealloc();

      uint64_t v23 = *(void (**)(char *, uint64_t))(v4 + 8);
      v23(v9, v3);
      return ((uint64_t (*)(char *, uint64_t))v23)(v7, v3);
    }
    else
    {

      return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v9, v3);
    }
  }
  else
  {
    uint64_t v26 = a1[6];
    unsigned __int8 v25 = (void *)a1[7];
    uint64_t v28 = a1[4];
    uint64_t v27 = a1[5];
    uint64_t v50 = v11;
    v55[0] = a1[2];
    uint64_t v29 = v55[0];
    v55[1] = v17;
    v55[2] = v28;
    v55[3] = v27;
    v55[4] = v26;
    v55[5] = v25;
    sub_10002E1D8(0, (unint64_t *)&qword_1001609D0);
    uint64_t v30 = v29;
    uint64_t v49 = v10;
    uint64_t v31 = v29;
    uint64_t v45 = v29;
    uint64_t v32 = v28;
    uint64_t v33 = v28;
    uint64_t v46 = v28;
    uint64_t v34 = v27;
    uint64_t v35 = v27;
    uint64_t v47 = v27;
    uint64_t v36 = v26;
    uint64_t v37 = v26;
    uint64_t v38 = v25;
    sub_10005F260(v30, v17, v32, v34, v36, v25);
    uint64_t v48 = static OS_dispatch_queue.main.getter();
    uint64_t v39 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v40 = swift_allocObject();
    *(void *)(v40 + 16) = v39;
    sub_10003CE28((uint64_t)v55, v40 + 24);
    aBlock[4] = sub_100067090;
    aBlock[5] = v40;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10002CC68;
    aBlock[3] = &unk_100154898;
    v41 = _Block_copy(aBlock);
    sub_10005F260(v31, v17, v33, v35, v37, v38);
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = &_swiftEmptyArrayStorage;
    sub_100065774((unint64_t *)&qword_1001614F0, 255, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100046B9C((uint64_t *)&unk_1001609C0);
    sub_10004D2D4((unint64_t *)&qword_100161500, (uint64_t *)&unk_1001609C0);
    uint64_t v42 = v49;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    v43 = (void *)v48;
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v41);

    sub_100067890(v45, v17, v46, v47, v37, v38);
    (*(void (**)(char *, uint64_t))(v50 + 8))(v13, v42);
    return (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v16, v53);
  }
}

void *assignWithCopy for PrimarySettingsListDataModelSnapshot(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100012F34(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Notification();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void (**)(char *))(a1 + 32);
  static Notification._unconditionallyBridgeFromObjectiveC(_:)();
  swift_retain();
  v6(v5);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_100013028(uint64_t a1)
{
  return sub_10005FD4C(a1, *(void *)(v1 + 16));
}

uint64_t sub_100013030(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  v11[1] = a3;
  uint64_t v12 = a4;
  uint64_t v4 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v8);
  uint64_t v9 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v9 - 8);
  sub_100055498();
  static DispatchQoS.userInteractive.getter();
  uint64_t v13 = &_swiftEmptyArrayStorage;
  sub_100013228();
  sub_100046B9C(&qword_10015F4F8);
  sub_100013280();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v4);
  uint64_t result = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  *uint64_t v12 = result;
  return result;
}

unint64_t sub_100013228()
{
  unint64_t result = qword_10015F4F0;
  if (!qword_10015F4F0)
  {
    type metadata accessor for OS_dispatch_queue.Attributes();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015F4F0);
  }
  return result;
}

unint64_t sub_100013280()
{
  unint64_t result = qword_10015F500;
  if (!qword_10015F500)
  {
    sub_10004D318(&qword_10015F4F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015F500);
  }
  return result;
}

void sub_1000132DC(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if (qword_10015F140 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  sub_1000477B0(v5, (uint64_t)qword_10016AFB0);
  swift_retain_n();
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315394;
    uint64_t v9 = _typeName(_:qualified:)();
    sub_100042948(v9, v10, &v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2080;
    sub_100042948(a2, a3, &v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "…Complete (%s.%s)", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
}

uint64_t sub_1000134EC(uint64_t a1, void *a2)
{
  uint64_t v3 = type metadata accessor for OSSignpostID();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  os_log_type_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v28 - v8;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v11 = (char *)Strong;
    uint64_t v29 = v9;
    uint64_t v30 = v7;
    uint64_t v31 = v3;
    uint64_t v12 = (uint64_t *)(Strong + OBJC_IVAR____TtC11SettingsApp33PrimaryAppleAccountStatusObserver_accountStatus);
    sub_10003CE28(Strong + OBJC_IVAR____TtC11SettingsApp33PrimaryAppleAccountStatusObserver_accountStatus, (uint64_t)v35);
    sub_10005F2AC(a2, (void (*)(void, void, void, void, void, void))sub_10005F260);
    sub_10005F2AC(v35, (void (*)(void, void, void, void, void, void))sub_10005F260);
    char v13 = sub_10003CBE0((uint64_t)a2, (uint64_t)v35);
    sub_10005F2AC(v35, (void (*)(void, void, void, void, void, void))sub_10003CB34);
    if ((v13 & 1) == 0)
    {
      type metadata accessor for PrimaryAppleAccountStatusObserver();
      sub_100065774((unint64_t *)&unk_100162EB0, v14, (void (*)(uint64_t))type metadata accessor for PrimaryAppleAccountStatusObserver);
      ObservableObject<>.objectWillChange.getter();
      ObservableObjectPublisher.send()();
      swift_release();
      sub_1000403E0(&v11[OBJC_IVAR____TtC11SettingsApp33PrimaryAppleAccountStatusObserver_invalidator], *(void *)&v11[OBJC_IVAR____TtC11SettingsApp33PrimaryAppleAccountStatusObserver_invalidator + 24]);
      uint64_t v32 = "Primary Apple Account Status";
      uint64_t v33 = 28;
      char v34 = 2;
      PassthroughSubject.send(_:)();
    }
    uint64_t v15 = *v12;
    uint64_t v16 = v12[1];
    uint64_t v17 = v12[2];
    uint64_t v18 = v12[3];
    uint64_t v20 = v12[4];
    uint64_t v19 = (void *)v12[5];
    sub_10003CE28((uint64_t)a2, (uint64_t)v12);
    sub_10003CB34(v15, v16, v17, v18, v20, v19);

    os_log_type_t v7 = v30;
    uint64_t v3 = v31;
    uint64_t v9 = v29;
  }
  if (qword_10015F180 != -1) {
    swift_once();
  }
  uint64_t v21 = type metadata accessor for OSSignposter();
  sub_1000477B0(v21, (uint64_t)qword_10016B070);
  static OSSignpostID.exclusive.getter();
  os_signpost_id_t v22 = OSSignposter.logHandle.getter();
  os_signpost_type_t v23 = static os_signpost_type_t.event.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v9, v3);
    uint64_t v24 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v24 = 0;
    os_signpost_id_t v25 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v22, v23, v25, "PrimaryAppleAccountStatusObserver.updateAccountStatus completed", "", v24, 2u);
    swift_slowDealloc();

    uint64_t v26 = *(void (**)(char *, uint64_t))(v4 + 8);
    v26(v9, v3);
    return ((uint64_t (*)(char *, uint64_t))v26)(v7, v3);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  }
}

uint64_t sub_10001388C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100046B9C(&qword_1001637B8);
  uint64_t v44 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = sub_100046B9C(&qword_1001637A8);
  uint64_t v6 = __chkstk_darwin(v46);
  uint64_t v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  unint64_t v10 = (char *)&v41 - v9;
  uint64_t v45 = sub_100046B9C(&qword_1001637D8);
  __chkstk_darwin(v45);
  uint64_t v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v13 = *(unsigned char *)(v1 + 32);
  uint64_t v14 = swift_retain();
  uint64_t v15 = sub_1000375A0(v14, v13);
  swift_release();
  swift_getKeyPath();
  uint64_t v50 = v15;
  sub_10002796C(&qword_10015F570, (void (*)(uint64_t))type metadata accessor for SettingsAppSearchViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v16 = *(unsigned __int8 *)(v15 + 80);
  swift_release();
  switch(v16)
  {
    case 1:
      type metadata accessor for SettingsZeroKeywordNavigationItemsProvider();
      sub_10002796C(&qword_10015F578, (void (*)(uint64_t))&type metadata accessor for SettingsZeroKeywordNavigationItemsProvider);
      uint64_t v47 = Environment.init<A>(_:)();
      LOBYTE(v48) = v21 & 1;
      HIBYTE(v48) = 1;
      sub_10006895C();
      swift_retain();
      _ConditionalContent<>.init(storage:)();
      if (HIBYTE(v51)) {
        __int16 v22 = 256;
      }
      else {
        __int16 v22 = 0;
      }
      uint64_t v47 = v50;
      __int16 v48 = v22 | v51;
      char v49 = 0;
      goto LABEL_14;
    case 2:
      type metadata accessor for SettingsZeroKeywordNavigationItemsProvider();
      sub_10002796C(&qword_10015F578, (void (*)(uint64_t))&type metadata accessor for SettingsZeroKeywordNavigationItemsProvider);
      uint64_t v47 = Environment.init<A>(_:)();
      __int16 v48 = v23 & 1;
      sub_10006895C();
      sub_100068B90();
      swift_retain();
      _ConditionalContent<>.init(storage:)();
      if (HIBYTE(v51)) {
        __int16 v24 = 256;
      }
      else {
        __int16 v24 = 0;
      }
      uint64_t v47 = v50;
      __int16 v48 = v24 | v51;
      char v49 = 1;
LABEL_14:
      sub_100046B9C(&qword_100163778);
      sub_100046B9C(&qword_100163790);
      sub_100065BB8();
      sub_100065E98();
      _ConditionalContent<>.init(storage:)();
      __int16 v25 = v51;
      char v26 = v52;
      *(void *)uint64_t v12 = v50;
      *((_WORD *)v12 + 4) = v25;
      v12[10] = v26;
      swift_storeEnumTagMultiPayload();
      sub_100046B9C(&qword_100163768);
      sub_100065A84();
      sub_1000064A4();
      goto LABEL_19;
    case 3:
      type metadata accessor for SettingsAppSearchViewModel();
      uint64_t v47 = Environment.init<A>(_:)();
      LOBYTE(v48) = v27 & 1;
      HIBYTE(v48) = 1;
      sub_10006895C();
      sub_100068B90();
      swift_retain();
      _ConditionalContent<>.init(storage:)();
      if (HIBYTE(v51)) {
        __int16 v28 = 256;
      }
      else {
        __int16 v28 = 0;
      }
      uint64_t v47 = v50;
      __int16 v48 = v28 | v51;
      char v49 = 1;
      sub_100046B9C(&qword_100163778);
      sub_100046B9C(&qword_100163790);
      sub_100065BB8();
      sub_100065E98();
      _ConditionalContent<>.init(storage:)();
      __int16 v29 = v51;
      char v30 = v52;
      *(void *)uint64_t v12 = v50;
      *((_WORD *)v12 + 4) = v29;
      v12[10] = v30;
      swift_storeEnumTagMultiPayload();
      sub_100046B9C(&qword_100163768);
      sub_100065A84();
      sub_1000064A4();
LABEL_19:
      _ConditionalContent<>.init(storage:)();
      uint64_t result = swift_release();
      break;
    case 4:
      static ContentUnavailableView<>.search.getter();
      uint64_t v31 = static Alignment.center.getter();
      uint64_t v41 = v32;
      uint64_t v42 = v31;
      id v33 = [self systemGroupedBackgroundColor];
      uint64_t v34 = Color.init(uiColor:)();
      uint64_t v35 = static SafeAreaRegions.all.getter();
      char v36 = static Edge.Set.all.getter();
      uint64_t v43 = a1;
      char v37 = v36;
      uint64_t v38 = v44;
      (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v8, v5, v3);
      uint64_t v39 = &v8[*(int *)(v46 + 36)];
      *(void *)uint64_t v39 = v34;
      *((void *)v39 + 1) = v35;
      v39[16] = v37;
      uint64_t v40 = v41;
      *((void *)v39 + 3) = v42;
      *((void *)v39 + 4) = v40;
      (*(void (**)(char *, uint64_t))(v38 + 8))(v5, v3);
      sub_100049B74((uint64_t)v8, (uint64_t)v10, &qword_1001637A8);
      sub_10003F75C((uint64_t)v10, (uint64_t)v12, &qword_1001637A8);
      swift_storeEnumTagMultiPayload();
      sub_100046B9C(&qword_100163768);
      sub_100065A84();
      sub_1000064A4();
      _ConditionalContent<>.init(storage:)();
      uint64_t result = sub_10003F5D0((uint64_t)v10, &qword_1001637A8);
      break;
    default:
      uint64_t v47 = 0;
      __int16 v48 = 0;
      sub_10006895C();
      _ConditionalContent<>.init(storage:)();
      if (HIBYTE(v51)) {
        __int16 v17 = 256;
      }
      else {
        __int16 v17 = 0;
      }
      uint64_t v47 = v50;
      __int16 v48 = v17 | v51;
      char v49 = 0;
      sub_100046B9C(&qword_100163778);
      sub_100046B9C(&qword_100163790);
      sub_100065BB8();
      sub_100065E98();
      _ConditionalContent<>.init(storage:)();
      __int16 v18 = v51;
      char v19 = v52;
      *(void *)uint64_t v12 = v50;
      *((_WORD *)v12 + 4) = v18;
      v12[10] = v19;
      swift_storeEnumTagMultiPayload();
      sub_100046B9C(&qword_100163768);
      sub_100065A84();
      sub_1000064A4();
      uint64_t result = _ConditionalContent<>.init(storage:)();
      break;
  }
  return result;
}

uint64_t sub_100014078(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10004D318(a2);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100014100@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v27 = a2;
  uint64_t v3 = sub_100046B9C(&qword_100164570);
  __chkstk_darwin(v3 - 8);
  uint64_t v4 = sub_100046B9C(&qword_100164200);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SettingsNavigationSplitView();
  Bindable.projectedValue.getter();
  swift_getKeyPath();
  Bindable<A>.subscript.getter();
  swift_release();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v28 = a1;
  uint64_t v26 = sub_100046B9C(&qword_100164578);
  uint64_t v25 = sub_10004D318(&qword_100164580);
  uint64_t v8 = type metadata accessor for SettingsAnyPlatformViewControllerRecipe();
  uint64_t v9 = type metadata accessor for SettingsAnyPlatformViewControllerView();
  uint64_t v10 = sub_10004D318(&qword_100164588);
  uint64_t v11 = type metadata accessor for SettingsAnyViewRecipe();
  uint64_t v12 = sub_10004D318(&qword_100164590);
  uint64_t v13 = type metadata accessor for PreferencesControllerRecipe();
  uint64_t v14 = type metadata accessor for PreferencesControllerView();
  uint64_t v15 = sub_10004D2D4(&qword_100164598, &qword_100164590);
  uint64_t v16 = sub_1000373FC((unint64_t *)&qword_100164190, (void (*)(uint64_t))&type metadata accessor for PreferencesControllerRecipe);
  uint64_t v17 = sub_1000373FC(&qword_1001645A0, (void (*)(uint64_t))&type metadata accessor for PreferencesControllerView);
  uint64_t v29 = v12;
  uint64_t v30 = v13;
  uint64_t v31 = (void *)v14;
  uint64_t v32 = v15;
  uint64_t v33 = v16;
  uint64_t v34 = (void *)v17;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v19 = sub_1000373FC(&qword_1001645A8, (void (*)(uint64_t))&type metadata accessor for SettingsAnyViewRecipe);
  uint64_t v29 = v10;
  uint64_t v30 = v11;
  uint64_t v31 = &type metadata for AnyView;
  uint64_t v32 = OpaqueTypeConformance2;
  uint64_t v33 = v19;
  uint64_t v34 = &protocol witness table for AnyView;
  uint64_t v20 = swift_getOpaqueTypeConformance2();
  uint64_t v21 = sub_1000373FC(&qword_100164198, (void (*)(uint64_t))&type metadata accessor for SettingsAnyPlatformViewControllerRecipe);
  uint64_t v22 = sub_1000373FC(&qword_1001644D8, (void (*)(uint64_t))&type metadata accessor for SettingsAnyPlatformViewControllerView);
  uint64_t v29 = v25;
  uint64_t v30 = v8;
  uint64_t v31 = (void *)v9;
  uint64_t v32 = v20;
  uint64_t v33 = v21;
  uint64_t v34 = (void *)v22;
  swift_getOpaqueTypeConformance2();
  return NavigationStack.init<>(path:root:)();
}

uint64_t sub_1000144D0@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_100014550@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for SettingsApplicationDelegate();
  sub_1000232CC(&qword_10015F4C0, (void (*)(uint64_t))type metadata accessor for SettingsApplicationDelegate);
  UIApplicationDelegateAdaptor<>.init(_:)();
  uint64_t v2 = (int *)type metadata accessor for SettingsApp();
  uint64_t v3 = (void *)(a1 + v2[5]);
  type metadata accessor for SettingsAppLaunchActions();
  swift_allocObject();
  uint64_t v25 = (uint64_t)sub_100023314();
  State.init(wrappedValue:)();
  uint64_t v4 = v22;
  *uint64_t v3 = v21;
  v3[1] = v4;
  uint64_t v5 = (void *)(a1 + v2[7]);
  type metadata accessor for SettingsZeroKeywordNavigationItemsProvider();
  swift_allocObject();
  uint64_t v25 = SettingsZeroKeywordNavigationItemsProvider.init(settingsHostApplicationBundleIdentifier:)();
  State.init(wrappedValue:)();
  uint64_t v6 = v22;
  void *v5 = v21;
  v5[1] = v6;
  type metadata accessor for SettingsAppModel();
  uint64_t v7 = (void *)swift_allocObject();
  _OWORD v7[2] = swift_getKeyPath();
  v7[3] = swift_getKeyPath();
  type metadata accessor for SettingsAppNavigationModel();
  swift_allocObject();
  v7[4] = sub_10001D278();
  ObservationRegistrar.init()();
  uint64_t v8 = sub_100036FFC();
  uint64_t v23 = type metadata accessor for PrimarySettingsListModel();
  uint64_t v24 = &off_100155288;
  uint64_t v21 = v8;
  type metadata accessor for SettingsAppSearchViewModel();
  uint64_t v9 = swift_allocObject();
  uint64_t v10 = sub_10002BF58((uint64_t)&v21, v23);
  __chkstk_darwin(v10);
  uint64_t v12 = (uint64_t *)((char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v13 + 16))(v12);
  uint64_t v14 = *v12;
  swift_retain();
  swift_retain();
  uint64_t v15 = sub_100021690(v14, (uint64_t)sub_10006C054, (uint64_t)v7, v9);
  swift_release();
  sub_100042A1C((uint64_t)&v21);
  swift_release();
  uint64_t v25 = (uint64_t)v7;
  swift_retain();
  State.init(wrappedValue:)();
  uint64_t v16 = v22;
  uint64_t v17 = (void *)(a1 + v2[8]);
  *uint64_t v17 = v21;
  v17[1] = v16;
  uint64_t v25 = v15;
  State.init(wrappedValue:)();
  uint64_t result = swift_release();
  uint64_t v19 = v22;
  uint64_t v20 = (void *)(a1 + v2[6]);
  *uint64_t v20 = v21;
  v20[1] = v19;
  return result;
}

uint64_t sub_100014888(uint64_t a1, char a2, char a3, char a4)
{
  uint64_t v7 = type metadata accessor for OSSignpostID();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)v27 - v12;
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    sub_10000BD64(a2 & 1);
    swift_release();
  }
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v15 = Strong;
    char v16 = a3 & 1;
    sub_1000090EC(v16);
    *(unsigned char *)(v15 + OBJC_IVAR____TtC11SettingsApp31PersonalHotspotListItemProvider_shouldDisable) = v16;
    swift_release();
  }
  swift_beginAccess();
  uint64_t v17 = swift_weakLoadStrong();
  if (v17)
  {
    uint64_t v18 = v17;
    int v19 = a4 & 1;
    if (*(unsigned __int8 *)(v17 + 16) != v19)
    {
      sub_1000403E0((void *)(v17 + OBJC_IVAR____TtC11SettingsApp31PersonalHotspotListItemProvider_invalidator), *(void *)(v17 + OBJC_IVAR____TtC11SettingsApp31PersonalHotspotListItemProvider_invalidator + 24));
      v27[0] = "Personal Hotspot State";
      v27[1] = 22;
      char v28 = 2;
      PassthroughSubject.send(_:)();
    }
    *(unsigned char *)(v18 + 16) = v19;
    swift_release();
  }
  if (qword_10015F180 != -1) {
    swift_once();
  }
  uint64_t v20 = type metadata accessor for OSSignposter();
  sub_1000477B0(v20, (uint64_t)qword_10016B070);
  static OSSignpostID.exclusive.getter();
  uint64_t v21 = OSSignposter.logHandle.getter();
  os_signpost_type_t v22 = static os_signpost_type_t.event.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, v7);
    uint64_t v23 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v23 = 0;
    os_signpost_id_t v24 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v21, v22, v24, "PersonalHotspotListItemProvider.updatePersonalHotspotState completed", "", v23, 2u);
    swift_slowDealloc();

    uint64_t v25 = *(void (**)(char *, uint64_t))(v8 + 8);
    v25(v13, v7);
    return ((uint64_t (*)(char *, uint64_t))v25)(v11, v7);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  }
}

uint64_t sub_100014BB0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for OSSignpostID();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v30 - v7;
  uint64_t v9 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v32 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = type metadata accessor for DispatchQoS();
  uint64_t v12 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    char v16 = *(void **)(Strong + OBJC_IVAR____TtC11SettingsApp25BluetoothListItemProvider_bluetoothController);
    id v17 = v16;
    uint64_t result = swift_release();
    if (v16)
    {
      id v19 = [v17 bluetoothState];

      if (qword_10015F080 != -1) {
        swift_once();
      }
      if ((id)qword_10016AE50 == v19)
      {
        LOBYTE(v20) = 4;
      }
      else if ((unint64_t)v19 > 5)
      {
        LOBYTE(v20) = 0;
      }
      else
      {
        unint64_t v20 = 0x30200010000uLL >> (8 * v19);
      }
      sub_100055498();
      uint64_t v27 = (void *)static OS_dispatch_queue.main.getter();
      uint64_t v28 = swift_allocObject();
      *(void *)(v28 + 16) = a1;
      *(unsigned char *)(v28 + 24) = v20;
      aBlock[4] = sub_100067B44;
      aBlock[5] = v28;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10002CC68;
      aBlock[3] = &unk_100153BE0;
      uint64_t v29 = _Block_copy(aBlock);
      swift_retain();
      swift_release();
      static DispatchQoS.unspecified.getter();
      aBlock[0] = _swiftEmptyArrayStorage;
      sub_10002F6A0();
      sub_100046B9C((uint64_t *)&unk_1001609C0);
      sub_10002F644();
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v29);

      (*(void (**)(char *, uint64_t))(v32 + 8))(v11, v9);
      return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v31);
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    if (qword_10015F180 != -1) {
      swift_once();
    }
    uint64_t v21 = type metadata accessor for OSSignposter();
    sub_1000477B0(v21, (uint64_t)qword_10016B070);
    static OSSignpostID.exclusive.getter();
    os_signpost_type_t v22 = OSSignposter.logHandle.getter();
    os_signpost_type_t v23 = static os_signpost_type_t.event.getter();
    if (OS_os_log.signpostsEnabled.getter())
    {
      (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
      os_signpost_id_t v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_signpost_id_t v24 = 0;
      os_signpost_id_t v25 = OSSignpostID.rawValue.getter();
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v22, v23, v25, "BluetoothListItemProvider.updateBluetoothState bailed", "", v24, 2u);
      swift_slowDealloc();

      uint64_t v26 = *(void (**)(char *, uint64_t))(v3 + 8);
      v26(v8, v2);
      return ((uint64_t (*)(char *, uint64_t))v26)(v6, v2);
    }
    else
    {

      return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
    }
  }
  return result;
}

uint64_t sub_1000150D8()
{
  uint64_t v0 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v27 = *(void *)(v0 - 8);
  uint64_t v28 = v0;
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)&v24 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for DispatchQoS();
  uint64_t v25 = *(void *)(v3 - 8);
  uint64_t v26 = v3;
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for OSSignpostID();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v24 - v11;
  if (qword_10015F180 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for OSSignposter();
  sub_1000477B0(v13, (uint64_t)qword_10016B070);
  static OSSignpostID.exclusive.getter();
  uint64_t v14 = OSSignposter.logHandle.getter();
  os_signpost_type_t v15 = static os_signpost_type_t.event.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, v6);
    char v16 = (uint8_t *)swift_slowAlloc();
    os_signpost_id_t v24 = v5;
    id v17 = v16;
    *(_WORD *)char v16 = 0;
    os_signpost_id_t v18 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v14, v15, v18, "BluetoothListItemProvider.updateBluetoothState began", "", v17, 2u);
    uint64_t v5 = v24;
    swift_slowDealloc();

    id v19 = *(void (**)(char *, uint64_t))(v7 + 8);
    v19(v12, v6);
    v19(v10, v6);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  }
  if (qword_10015F128 != -1) {
    swift_once();
  }
  uint64_t v20 = swift_allocObject();
  swift_weakInit();
  aBlock[4] = sub_100067B50;
  aBlock[5] = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002CC68;
  aBlock[3] = &unk_100153B90;
  uint64_t v21 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  uint64_t v29 = _swiftEmptyArrayStorage;
  sub_10002F6A0();
  sub_100046B9C((uint64_t *)&unk_1001609C0);
  sub_10002F644();
  uint64_t v22 = v28;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v21);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v2, v22);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v5, v26);
  swift_release();
  return swift_release();
}

uint64_t sub_100015574()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) + 16);
  *(void *)(v0 + 224) = v1;
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 208);
    *(_DWORD *)(v0 + 296) = *(_DWORD *)(v2 + 80);
    *(void *)(v0 + 232) = *(void *)(v2 + 72);
    *(void *)(v0 + 240) = *(void *)(v2 + 16);
    *(_DWORD *)(v0 + 300) = enum case for FLRenderStyle.headerAndActions(_:);
    *(_DWORD *)(v0 + 304) = enum case for FLAccountType.primary(_:);
    swift_bridgeObjectRetain();
    uint64_t v3 = 0;
    while (1)
    {
      *(void *)(v0 + 248) = v3;
      *(void *)(v0 + 256) = _swiftEmptyArrayStorage;
      uint64_t v4 = *(unsigned int *)(v0 + 300);
      uint64_t v5 = *(void (**)(uint64_t, unint64_t, uint64_t))(v0 + 240);
      uint64_t v6 = *(void *)(v0 + 216);
      uint64_t v8 = *(void *)(v0 + 192);
      uint64_t v7 = *(void *)(v0 + 200);
      uint64_t v10 = *(void *)(v0 + 176);
      uint64_t v9 = *(void *)(v0 + 184);
      uint64_t v11 = *(void *)(v0 + 168);
      unint64_t v12 = *(void *)(v0 + 16)
          + ((*(unsigned __int8 *)(v0 + 296) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 296))
          + *(void *)(v0 + 232) * v3;
      *(void *)(v0 + 264) = (*(void *)(v0 + 208) + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
      v5(v6, v12, v7);
      FLFollowUpInformation.renderStyle.getter();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 104))(v9, v4, v11);
      LOBYTE(v6) = static FLRenderStyle.== infix(_:_:)();
      uint64_t v13 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
      v13(v9, v11);
      v13(v8, v11);
      if (v6)
      {
        uint64_t v14 = *(void *)(*(void *)(v0 + 24) + 72);
        *(void *)(v0 + 272) = v14;
        if (v14) {
          break;
        }
      }
      (*(void (**)(void, void))(*(void *)(v0 + 208) + 8))(*(void *)(v0 + 216), *(void *)(v0 + 200));
      uint64_t v3 = *(void *)(v0 + 248) + 1;
      if (v3 == *(void *)(v0 + 224))
      {
        swift_bridgeObjectRelease();
        goto LABEL_10;
      }
    }
    type metadata accessor for MainActor();
    swift_retain();
    *(void *)(v0 + 280) = static MainActor.shared.getter();
    uint64_t v16 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(sub_1000B38E4, v16, v15);
  }
  else
  {
LABEL_10:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v17 = *(uint64_t (**)(void *))(v0 + 8);
    return v17(_swiftEmptyArrayStorage);
  }
}

uint64_t sub_10001584C()
{
  uint64_t v0 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v27 = *(void *)(v0 - 8);
  uint64_t v28 = v0;
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)&v24 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for DispatchQoS();
  uint64_t v25 = *(void *)(v3 - 8);
  uint64_t v26 = v3;
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for OSSignpostID();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  unint64_t v12 = (char *)&v24 - v11;
  if (qword_10015F180 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for OSSignposter();
  sub_1000477B0(v13, (uint64_t)qword_10016B070);
  static OSSignpostID.exclusive.getter();
  uint64_t v14 = OSSignposter.logHandle.getter();
  os_signpost_type_t v15 = static os_signpost_type_t.event.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, v6);
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    os_signpost_id_t v24 = v5;
    id v17 = v16;
    *(_WORD *)uint64_t v16 = 0;
    os_signpost_id_t v18 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v14, v15, v18, "WalletAndApplePayListItemProvider.resolveApplePayState began", "", v17, 2u);
    uint64_t v5 = v24;
    swift_slowDealloc();

    uint64_t v19 = *(void (**)(char *, uint64_t))(v7 + 8);
    v19(v12, v6);
    v19(v10, v6);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  }
  if (qword_10015F128 != -1) {
    swift_once();
  }
  uint64_t v20 = swift_allocObject();
  swift_weakInit();
  aBlock[4] = sub_10006705C;
  aBlock[5] = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002CC68;
  aBlock[3] = &unk_100153788;
  uint64_t v21 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  uint64_t v29 = _swiftEmptyArrayStorage;
  sub_10006572C((unint64_t *)&qword_1001614F0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100046B9C((uint64_t *)&unk_1001609C0);
  sub_10004D2D4((unint64_t *)&qword_100161500, (uint64_t *)&unk_1001609C0);
  uint64_t v22 = v28;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v21);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v2, v22);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v5, v26);
  swift_release();
  return swift_release();
}

uint64_t sub_100015D3C()
{
  uint64_t v0 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v27 = *(void *)(v0 - 8);
  uint64_t v28 = v0;
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)&v24 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for DispatchQoS();
  uint64_t v25 = *(void *)(v3 - 8);
  uint64_t v26 = v3;
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for OSSignpostID();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  unint64_t v12 = (char *)&v24 - v11;
  if (qword_10015F180 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for OSSignposter();
  sub_1000477B0(v13, (uint64_t)qword_10016B070);
  static OSSignpostID.exclusive.getter();
  uint64_t v14 = OSSignposter.logHandle.getter();
  os_signpost_type_t v15 = static os_signpost_type_t.event.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, v6);
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    os_signpost_id_t v24 = v5;
    id v17 = v16;
    *(_WORD *)uint64_t v16 = 0;
    os_signpost_id_t v18 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v14, v15, v18, "PersonalHotspotListItemProvider.updatePersonalHotspotState began", "", v17, 2u);
    uint64_t v5 = v24;
    swift_slowDealloc();

    uint64_t v19 = *(void (**)(char *, uint64_t))(v7 + 8);
    v19(v12, v6);
    v19(v10, v6);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  }
  if (qword_10015F128 != -1) {
    swift_once();
  }
  uint64_t v20 = swift_allocObject();
  swift_weakInit();
  aBlock[4] = sub_10006732C;
  aBlock[5] = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002CC68;
  aBlock[3] = &unk_100153F48;
  uint64_t v21 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  uint64_t v29 = _swiftEmptyArrayStorage;
  sub_100055450((unint64_t *)&qword_1001614F0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100046B9C((uint64_t *)&unk_1001609C0);
  sub_10004D2D4((unint64_t *)&qword_100161500, (uint64_t *)&unk_1001609C0);
  uint64_t v22 = v28;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v21);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v2, v22);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v5, v26);
  swift_release();
  return swift_release();
}

uint64_t sub_10001622C()
{
  uint64_t v0 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v27 = *(void *)(v0 - 8);
  uint64_t v28 = v0;
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)&v24 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for DispatchQoS();
  uint64_t v25 = *(void *)(v3 - 8);
  uint64_t v26 = v3;
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for OSSignpostID();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  unint64_t v12 = (char *)&v24 - v11;
  if (qword_10015F180 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for OSSignposter();
  sub_1000477B0(v13, (uint64_t)qword_10016B070);
  static OSSignpostID.exclusive.getter();
  uint64_t v14 = OSSignposter.logHandle.getter();
  os_signpost_type_t v15 = static os_signpost_type_t.event.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, v6);
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    os_signpost_id_t v24 = v5;
    id v17 = v16;
    *(_WORD *)uint64_t v16 = 0;
    os_signpost_id_t v18 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v14, v15, v18, "GeneralSettingsListItemProvider.updateBadgeForSoftwareUpdate began", "", v17, 2u);
    uint64_t v5 = v24;
    swift_slowDealloc();

    uint64_t v19 = *(void (**)(char *, uint64_t))(v7 + 8);
    v19(v12, v6);
    v19(v10, v6);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  }
  if (qword_10015F128 != -1) {
    swift_once();
  }
  uint64_t v20 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_100069B8C;
  aBlock[5] = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002CC68;
  aBlock[3] = &unk_100154578;
  uint64_t v21 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  uint64_t v29 = _swiftEmptyArrayStorage;
  sub_10002F6A0();
  sub_100046B9C((uint64_t *)&unk_1001609C0);
  sub_10002F644();
  uint64_t v22 = v28;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v21);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v2, v22);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v5, v26);
  swift_release();
  return swift_release();
}

uint64_t sub_1000166C8()
{
  uint64_t v0 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v27 = *(void *)(v0 - 8);
  uint64_t v28 = v0;
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)&v24 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for DispatchQoS();
  uint64_t v25 = *(void *)(v3 - 8);
  uint64_t v26 = v3;
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for OSSignpostID();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  unint64_t v12 = (char *)&v24 - v11;
  if (qword_10015F180 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for OSSignposter();
  sub_1000477B0(v13, (uint64_t)qword_10016B070);
  static OSSignpostID.exclusive.getter();
  uint64_t v14 = OSSignposter.logHandle.getter();
  os_signpost_type_t v15 = static os_signpost_type_t.event.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, v6);
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    os_signpost_id_t v24 = v5;
    id v17 = v16;
    *(_WORD *)uint64_t v16 = 0;
    os_signpost_id_t v18 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v14, v15, v18, "PrimaryAppleAccountStatusObserver.updateSecondaryAppleAccountItems began", "", v17, 2u);
    uint64_t v5 = v24;
    swift_slowDealloc();

    uint64_t v19 = *(void (**)(char *, uint64_t))(v7 + 8);
    v19(v12, v6);
    v19(v10, v6);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  }
  if (qword_10015F128 != -1) {
    swift_once();
  }
  uint64_t v20 = swift_allocObject();
  swift_weakInit();
  aBlock[4] = sub_100066F2C;
  aBlock[5] = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002CC68;
  aBlock[3] = &unk_100154B88;
  uint64_t v21 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  uint64_t v29 = &_swiftEmptyArrayStorage;
  sub_1000657BC((unint64_t *)&qword_1001614F0, 255, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100046B9C((uint64_t *)&unk_1001609C0);
  sub_10002F644();
  uint64_t v22 = v28;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v21);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v2, v22);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v5, v26);
  swift_release();
  return swift_release();
}

uint64_t sub_100016B98()
{
  uint64_t v0 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v27 = *(void *)(v0 - 8);
  uint64_t v28 = v0;
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)&v24 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for DispatchQoS();
  uint64_t v25 = *(void *)(v3 - 8);
  uint64_t v26 = v3;
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for OSSignpostID();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  unint64_t v12 = (char *)&v24 - v11;
  if (qword_10015F180 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for OSSignposter();
  sub_1000477B0(v13, (uint64_t)qword_10016B070);
  static OSSignpostID.exclusive.getter();
  uint64_t v14 = OSSignposter.logHandle.getter();
  os_signpost_type_t v15 = static os_signpost_type_t.event.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, v6);
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    os_signpost_id_t v24 = v5;
    id v17 = v16;
    *(_WORD *)uint64_t v16 = 0;
    os_signpost_id_t v18 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v14, v15, v18, "EthernetListItemProvider.updateEthernet began", "", v17, 2u);
    uint64_t v5 = v24;
    swift_slowDealloc();

    uint64_t v19 = *(void (**)(char *, uint64_t))(v7 + 8);
    v19(v12, v6);
    v19(v10, v6);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  }
  if (qword_10015F128 != -1) {
    swift_once();
  }
  uint64_t v20 = swift_allocObject();
  swift_weakInit();
  aBlock[4] = sub_100067C5C;
  aBlock[5] = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002CC68;
  aBlock[3] = &unk_100153E78;
  uint64_t v21 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  uint64_t v29 = _swiftEmptyArrayStorage;
  sub_100055450((unint64_t *)&qword_1001614F0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100046B9C((uint64_t *)&unk_1001609C0);
  sub_10004D2D4((unint64_t *)&qword_100161500, (uint64_t *)&unk_1001609C0);
  uint64_t v22 = v28;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v21);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v2, v22);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v5, v26);
  swift_release();
  return swift_release();
}

uint64_t sub_100017088(uint64_t a1)
{
  uint64_t v2 = sub_100046B9C(&qword_10015F410);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

void sub_10001715C(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for PrimarySettingsListItemIdentifier();
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10015F168 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  sub_1000477B0(v8, (uint64_t)qword_10016B028);
  sub_1000579A8(a3, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
  swift_retain_n();
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315906;
    uint64_t v12 = _typeName(_:qualified:)();
    uint64_t v16 = sub_100042948(v12, v13, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2080;
    uint64_t v16 = sub_100042948(0xD000000000000019, 0x800000010012A430, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v11 + 22) = 2082;
    uint64_t v14 = sub_100048BDC();
    uint64_t v16 = sub_100042948(v14, v15, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10003DC6C((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
    *(_WORD *)(v11 + 32) = 1024;
    LODWORD(v16) = a1 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "…Complete (%s.%s), item: %{public}s, success: %{BOOL}d", (uint8_t *)v11, 0x26u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_release_n();
    sub_10003DC6C((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
  }
}

void sub_100017480(void *a1, uint64_t a2, unint64_t a3)
{
  if (qword_10015F170 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_1000477B0(v6, (uint64_t)qword_10016B040);
  id v12 = a1;
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136315394;
    swift_getObjectType();
    uint64_t v10 = _typeName(_:qualified:)();
    sub_100042948(v10, v11, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2080;
    sub_100042948(a2, a3, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "…Complete (%s.%s)", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

void sub_1000176A0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for OSSignpostID();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  os_log_type_t v8 = (char *)v29 - v7;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    goto LABEL_13;
  }
  uint64_t v10 = *(void **)(Strong + OBJC_IVAR____TtC11SettingsApp33WalletAndApplePayListItemProvider_appSettingsContext);
  id v11 = v10;
  swift_release();
  if (!v10) {
    goto LABEL_13;
  }
  if ([v11 topLevelSettingsEntryType] != (id)1)
  {

LABEL_13:
    if ([self isPassLibraryAvailable])
    {
      id v20 = [objc_allocWithZone((Class)PKPassLibrary) init];
      id v21 = [v20 passesOfType:1];

      sub_10002E1D8(0, &qword_100161988);
      unint64_t v22 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (v22 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v23 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      BOOL v24 = v23 != 0;
    }
    else
    {
      BOOL v24 = 0;
    }
    uint64_t v25 = self;
    id v26 = [self sharedService];
    uint64_t v27 = swift_allocObject();
    *(unsigned char *)(v27 + 16) = v24;
    *(void *)(v27 + 24) = a1;
    aBlock[4] = sub_100067050;
    aBlock[5] = v27;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100007860;
    aBlock[3] = &unk_1001537D8;
    uint64_t v28 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    [v25 shouldShowWalletInSettingsWithApplePaySupportInformation:v26 completion:v28];
    _Block_release(v28);

    return;
  }
  swift_beginAccess();
  uint64_t v12 = swift_weakLoadStrong();
  if (v12)
  {
    uint64_t v13 = v12;
    if (*(unsigned char *)(v12 + 16))
    {
      sub_1000403E0((void *)(v12 + OBJC_IVAR____TtC11SettingsApp33WalletAndApplePayListItemProvider_invalidator), *(void *)(v12 + OBJC_IVAR____TtC11SettingsApp33WalletAndApplePayListItemProvider_invalidator + 24));
      v29[0] = "Wallet & Apple Pay";
      v29[1] = 18;
      char v30 = 2;
      PassthroughSubject.send(_:)();
    }
    *(unsigned char *)(v13 + 16) = 0;
    swift_release();
  }
  if (qword_10015F180 != -1) {
    swift_once();
  }
  uint64_t v14 = type metadata accessor for OSSignposter();
  sub_1000477B0(v14, (uint64_t)qword_10016B070);
  static OSSignpostID.exclusive.getter();
  unint64_t v15 = OSSignposter.logHandle.getter();
  os_signpost_type_t v16 = static os_signpost_type_t.event.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v17 = 0;
    os_signpost_id_t v18 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v15, v16, v18, "WalletAndApplePayListItemProvider.resolveApplePayState completed: hidden due to sesnfcAppTopLevelSettingsEntryTypePaymentContactless", "", v17, 2u);
    swift_slowDealloc();

    uint64_t v19 = *(void (**)(char *, uint64_t))(v3 + 8);
    v19(v8, v2);
    v19(v6, v2);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  }
}

uint64_t sub_100017B64@<X0>(unsigned __int8 *a1@<X3>, BOOL *a2@<X8>)
{
  int v3 = *a1;
  sub_100046B9C(&qword_100164508);
  uint64_t result = Binding.wrappedValue.getter();
  BOOL v6 = v7 != 7 && v7 == v3;
  *a2 = v6;
  return result;
}

void *sub_100017BD4(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100045F84((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
        uint64_t v6 = type metadata accessor for FLFollowUpInformation();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        uint64_t v7 = type metadata accessor for FLFollowUpInformation();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        uint64_t v8 = *(int *)(sub_100046B9C(&qword_10015F7F8) + 48);
        uint64_t v9 = (void *)((char *)a1 + v8);
        uint64_t v10 = (void *)((char *)a2 + v8);
        *uint64_t v9 = *v10;
        v9[1] = v10[1];
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
      case 4u:
      case 5u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_100017E04@<X0>(uint64_t a1@<X8>)
{
  uint64_t v31 = a1;
  uint64_t v30 = sub_100046B9C(&qword_10015FCF8) - 8;
  __chkstk_darwin();
  uint64_t v29 = (uint64_t *)((char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100046B9C(&qword_10015FD00);
  __chkstk_darwin();
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Image.ResizingMode();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100046B9C(&qword_10015FD08) - 8;
  __chkstk_darwin();
  id v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_100046B9C(&qword_10015FD10) - 8;
  __chkstk_darwin();
  uint64_t v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_100046B9C(&qword_10015FD18) - 8;
  __chkstk_darwin();
  unint64_t v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v16 = *(_OWORD *)(v1 + 16);
  v35[0] = *(_OWORD *)v1;
  v35[1] = v16;
  v35[2] = *(_OWORD *)(v1 + 32);
  char v36 = *(unsigned char *)(v1 + 48);
  sub_10003CE28((uint64_t)v35, (uint64_t)v37);
  sub_1000678B0();
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, enum case for Image.ResizingMode.stretch(_:), v5);
  uint64_t v17 = Image.resizable(capInsets:resizingMode:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  static SymbolRenderingMode.hierarchical.getter();
  uint64_t v18 = type metadata accessor for SymbolRenderingMode();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v4, 0, 1, v18);
  uint64_t KeyPath = swift_getKeyPath();
  id v20 = v29;
  sub_10003F75C((uint64_t)v4, (uint64_t)v29 + *(int *)(v30 + 36), &qword_10015FD00);
  *id v20 = KeyPath;
  sub_10003F75C((uint64_t)v20, (uint64_t)&v11[*(int *)(v9 + 44)], &qword_10015FCF8);
  *(void *)id v11 = v17;
  *((_WORD *)v11 + 4) = 256;
  swift_retain();
  sub_10003F5D0((uint64_t)v20, &qword_10015FCF8);
  sub_10003F5D0((uint64_t)v4, &qword_10015FD00);
  swift_release();
  uint64_t v21 = static Color.blue.getter();
  sub_10003F75C((uint64_t)v11, (uint64_t)v13, &qword_10015FD08);
  *(void *)&v13[*(int *)(v27 + 44)] = v21;
  sub_10003F5D0((uint64_t)v11, &qword_10015FD08);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  sub_10003F75C((uint64_t)v13, (uint64_t)v15, &qword_10015FD10);
  unint64_t v22 = &v15[*(int *)(v28 + 44)];
  long long v23 = v33;
  *(_OWORD *)unint64_t v22 = v32;
  *((_OWORD *)v22 + 1) = v23;
  *((_OWORD *)v22 + 2) = v34;
  sub_10003F5D0((uint64_t)v13, &qword_10015FD10);
  uint64_t v24 = v31;
  sub_10003F75C((uint64_t)v15, v31, &qword_10015FD18);
  *(unsigned char *)(v24 + *(int *)(sub_100046B9C(&qword_10015FCC0) + 36)) = 1;
  return sub_10003F5D0((uint64_t)v15, &qword_10015FD18);
}

uint64_t sub_10001829C()
{
  uint64_t v1 = (uint64_t *)swift_retain();
  id v2 = sub_10000A674(v1);
  uint64_t v25 = type metadata accessor for GeneralSettingsListItemProvider();
  uint64_t v26 = &off_100154520;
  *(void *)&long long v24 = v2;
  sub_100046B9C(&qword_1001615C0);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_10011C360;
  unint64_t v4 = v3 + 32;
  sub_1000498B0(&v24, v3 + 32);
  uint64_t v25 = type metadata accessor for PrimarySettingsListItemIdentifier();
  uint64_t v26 = &off_100151968;
  sub_10002A3A4((uint64_t *)&v24);
  swift_storeEnumTagMultiPayload();
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_10011C360;
  sub_1000498B0(&v24, v5 + 32);
  sub_100046B9C((uint64_t *)&unk_100163C70);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10011C370;
  *(void *)(inited + 32) = v3;
  *(void *)(inited + 40) = v5;
  int64_t v7 = *(void *)(v3 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_10002AF40(0, v7, 1, (char *)_swiftEmptyArrayStorage);
  uint64_t v9 = v8;
  if (*(void *)(v3 + 16))
  {
    uint64_t v10 = *((void *)v8 + 2);
    if ((*((void *)v8 + 3) >> 1) - v10 < v7)
    {
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
    unint64_t v11 = (unint64_t)&v8[40 * v10 + 32];
    if (v4 < v11 + 40 * v7 && v11 < v4 + 40 * v7) {
      goto LABEL_37;
    }
    sub_100046B9C(&qword_1001615C8);
    swift_arrayInitWithCopy();
    if (v7)
    {
      uint64_t v13 = *((void *)v9 + 2);
      BOOL v14 = __OFADD__(v13, v7);
      uint64_t v15 = v13 + v7;
      if (v14)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      *((void *)v9 + 2) = v15;
    }
  }
  else if (v7)
  {
    __break(1u);
    goto LABEL_25;
  }
  swift_bridgeObjectRelease();
  uint64_t v3 = *(void *)(inited + 40);
  unint64_t v4 = *(void *)(v3 + 16);
  int64_t v7 = *((void *)v9 + 2);
  int64_t v0 = v7 + v4;
  if (__OFADD__(v7, v4))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  unint64_t v16 = *((void *)v9 + 3);
  swift_bridgeObjectRetain();
  if (v0 <= (uint64_t)(v16 >> 1))
  {
    if (v4) {
      goto LABEL_15;
    }
    goto LABEL_30;
  }
LABEL_26:
  if (v7 <= v0) {
    int64_t v22 = v0;
  }
  else {
    int64_t v22 = v7;
  }
  uint64_t v9 = sub_10002AF40((char *)1, v22, 1, v9);
  if (!*(void *)(v3 + 16))
  {
LABEL_30:
    if (!v4) {
      goto LABEL_31;
    }
    __break(1u);
    goto LABEL_33;
  }
LABEL_15:
  uint64_t v17 = *((void *)v9 + 2);
  if ((*((void *)v9 + 3) >> 1) - v17 < (uint64_t)v4)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  unint64_t v18 = (unint64_t)&v9[40 * v17 + 32];
  if (v3 + 32 < v18 + 40 * v4 && v18 < v3 + 32 + 40 * v4) {
    goto LABEL_37;
  }
  sub_100046B9C(&qword_1001615C8);
  swift_arrayInitWithCopy();
  if (!v4)
  {
LABEL_31:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    sub_100046B9C(&qword_100163C80);
    swift_arrayDestroy();
    return (uint64_t)v9;
  }
  uint64_t v20 = *((void *)v9 + 2);
  BOOL v14 = __OFADD__(v20, v4);
  uint64_t v21 = v20 + v4;
  if (!v14)
  {
    *((void *)v9 + 2) = v21;
    goto LABEL_31;
  }
LABEL_36:
  __break(1u);
LABEL_37:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

id sub_1000185E4()
{
  uint64_t v1 = v0;
  v1[OBJC_IVAR____TtC11SettingsApp19RestrictionsManager__isInEDUMode] = PSIsInEDUMode();
  uint64_t v2 = OBJC_IVAR____TtC11SettingsApp19RestrictionsManager__blockedAppBundleIDs;
  *(void *)&v1[OBJC_IVAR____TtC11SettingsApp19RestrictionsManager__blockedAppBundleIDs] = 0;
  uint64_t v3 = OBJC_IVAR____TtC11SettingsApp19RestrictionsManager__allowedAppBundleIDs;
  *(void *)&v1[OBJC_IVAR____TtC11SettingsApp19RestrictionsManager__allowedAppBundleIDs] = 0;
  ObservationRegistrar.init()();
  *(void *)&v1[OBJC_IVAR____TtC11SettingsApp19RestrictionsManager__restrictedFeatures] = sub_100010CB0();
  unint64_t v4 = self;
  id result = [v4 sharedConnection];
  if (!result)
  {
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v6 = result;
  id v7 = [result effectiveBlockedAppBundleIDs];

  if (v7)
  {
    uint64_t v8 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v9 = sub_100007CDC(v8);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v9 = 0;
  }
  swift_bridgeObjectRelease();
  *(void *)&v1[v2] = v9;
  id result = [v4 sharedConnection];
  if (!result) {
    goto LABEL_12;
  }
  uint64_t v10 = result;
  id v11 = [result effectiveWhitelistedAppBundleIDs];

  if (v11)
  {
    uint64_t v12 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v13 = sub_100007CDC(v12);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v13 = 0;
  }
  swift_bridgeObjectRelease();
  *(void *)&v1[v3] = v13;

  v16.receiver = v1;
  v16.super_class = (Class)type metadata accessor for RestrictionsManager();
  id v14 = [super init];
  id result = [v4 sharedConnection];
  if (result)
  {
    uint64_t v15 = result;
    [result registerObserver:v14];

    return v14;
  }
LABEL_13:
  __break(1u);
  return result;
}

void sub_1000187F4()
{
  uint64_t v0 = type metadata accessor for OSSignpostID();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  unint64_t v4 = (char *)&v75 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v75 - v5;
  id v7 = (void *)type metadata accessor for DispatchWorkItemFlags();
  uint64_t v8 = *(v7 - 1);
  __chkstk_darwin(v7);
  v80 = (char *)&v75 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = type metadata accessor for DispatchQoS();
  uint64_t v79 = *(void *)(v81 - 8);
  __chkstk_darwin(v81);
  v78 = (char *)&v75 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    if (qword_10015F180 != -1) {
      swift_once();
    }
    uint64_t v61 = type metadata accessor for OSSignposter();
    sub_1000477B0(v61, (uint64_t)qword_10016B070);
    static OSSignpostID.exclusive.getter();
    v62 = OSSignposter.logHandle.getter();
    os_signpost_type_t v63 = static os_signpost_type_t.event.getter();
    if (OS_os_log.signpostsEnabled.getter())
    {
      (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v4, v6, v0);
      v64 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v64 = 0;
      os_signpost_id_t v65 = OSSignpostID.rawValue.getter();
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v62, v63, v65, "PrimaryAppleAccountStatusObserver.updateSecondaryAppleAccountItems bailed", "", v64, 2u);
      swift_slowDealloc();

      v66 = *(void (**)(char *, uint64_t))(v1 + 8);
      v66(v6, v0);
      v66(v4, v0);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v0);
    }
    return;
  }
  uint64_t v77 = Strong;
  uint64_t v12 = *(void **)(Strong + 24);
  if (!v12) {
    goto LABEL_40;
  }
  id v13 = [v12 secondaryAccountViewModels];
  sub_10002E1D8(0, &qword_1001631C8);
  unint64_t v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v14 >> 62)
  {
LABEL_37:
    swift_bridgeObjectRetain();
    uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v15 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v75 = v8;
  v76 = v7;
  if (!v15)
  {
    v88 = (char *)&_swiftEmptyArrayStorage;
LABEL_34:
    swift_bridgeObjectRelease();
    sub_10002E1D8(0, (unint64_t *)&qword_1001609D0);
    v67 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v68 = swift_allocObject();
    swift_weakInit();
    uint64_t v69 = swift_allocObject();
    v70 = v88;
    *(void *)(v69 + 16) = v68;
    *(void *)(v69 + 24) = v70;
    aBlock[4] = sub_100066F24;
    aBlock[5] = v69;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10002CC68;
    aBlock[3] = &unk_100154BD8;
    v71 = _Block_copy(aBlock);
    swift_release();
    v72 = v78;
    static DispatchQoS.unspecified.getter();
    aBlock[0] = &_swiftEmptyArrayStorage;
    sub_1000657BC((unint64_t *)&qword_1001614F0, 255, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100046B9C((uint64_t *)&unk_1001609C0);
    sub_10002F644();
    v73 = v80;
    v74 = v76;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v71);
    swift_release();

    (*(void (**)(char *, void *))(v75 + 8))(v73, v74);
    (*(void (**)(char *, uint64_t))(v79 + 8))(v72, v81);
    return;
  }
  v88 = (char *)&_swiftEmptyArrayStorage;
  unint64_t v83 = v14;
  unint64_t v84 = v14 & 0xC000000000000001;
  uint64_t v8 = 4;
  objc_super v16 = &selRef_application_configurationForConnectingSceneSession_options_;
  uint64_t v82 = v15;
  while (1)
  {
    if (v84) {
      id v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v18 = *(id *)(v14 + 8 * v8);
    }
    uint64_t v19 = v18;
    if (__OFADD__(v8 - 4, 1))
    {
      __break(1u);
      goto LABEL_37;
    }
    id v20 = [v18 account];
    id v21 = [v20 v16[205]];

    if (!v21) {
      break;
    }
    uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v86 = v23;
    uint64_t v87 = v22;

    id v24 = [v19 v16[205]];
    uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v27 = v26;

    id v28 = [v19 title];
    uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v31 = v30;

    id v32 = [v19 subtitle];
    uint64_t v33 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v7 = v34;

    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v85 = v8 - 3;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      v88 = sub_10009EEF0(0, *((void *)v88 + 2) + 1, 1, v88);
    }
    unint64_t v37 = *((void *)v88 + 2);
    unint64_t v36 = *((void *)v88 + 3);
    if (v37 >= v36 >> 1) {
      v88 = sub_10009EEF0((char *)(v36 > 1), v37 + 1, 1, v88);
    }
    uint64_t v38 = v88;
    *((void *)v88 + 2) = v37 + 1;
    uint64_t v39 = &v38[72 * v37];
    uint64_t v40 = v86;
    *((void *)v39 + 4) = v87;
    *((void *)v39 + 5) = v40;
    *((void *)v39 + 6) = v25;
    *((void *)v39 + 7) = v27;
    *((void *)v39 + 8) = v29;
    *((void *)v39 + 9) = v31;
    *((void *)v39 + 10) = v33;
    *((void *)v39 + 11) = v7;
    v39[96] = 0;
    id v41 = [v19 reauthIdentifer:v75];
    if (v41)
    {
      uint64_t v42 = v41;
      id v7 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v44 = v43;

      id v45 = [v19 reauthTitle];
      objc_super v16 = &selRef_application_configurationForConnectingSceneSession_options_;
      if (!v45) {
        goto LABEL_28;
      }
      uint64_t v46 = v45;
      uint64_t v47 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v49 = v48;

      id v50 = [v19 reauthBadgeNumber];
      if (!v50)
      {
        swift_bridgeObjectRelease();
LABEL_28:
        swift_bridgeObjectRelease();
        uint64_t v17 = v19;
        goto LABEL_9;
      }
      uint64_t v17 = v50;
      __int16 v51 = v7;
      id v52 = [v19 account];
      id v53 = [v52 identifier];

      if (!v53) {
        goto LABEL_39;
      }
      uint64_t v54 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v86 = v55;
      uint64_t v87 = v54;

      id v7 = [v17 integerValue];
      unint64_t v57 = *((void *)v88 + 2);
      unint64_t v56 = *((void *)v88 + 3);
      if (v57 >= v56 >> 1) {
        v88 = sub_10009EEF0((char *)(v56 > 1), v57 + 1, 1, v88);
      }
      v58 = v88;
      *((void *)v88 + 2) = v57 + 1;
      v59 = &v58[72 * v57];
      uint64_t v60 = v86;
      *((void *)v59 + 4) = v87;
      *((void *)v59 + 5) = v60;
      *((void *)v59 + 6) = v51;
      *((void *)v59 + 7) = v44;
      *((void *)v59 + 8) = v47;
      *((void *)v59 + 9) = v49;
      *((void *)v59 + 10) = v7;
      *((void *)v59 + 11) = 0;
      v59[96] = 1;
    }
    else
    {
      uint64_t v17 = v19;
    }
    objc_super v16 = &selRef_application_configurationForConnectingSceneSession_options_;
LABEL_9:

    ++v8;
    unint64_t v14 = v83;
    if (v85 == v82) {
      goto LABEL_34;
    }
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
}

uint64_t sub_1000190F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v28 = a2;
  uint64_t v3 = type metadata accessor for AccessibilityTraits();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v26 = v3;
  uint64_t v27 = v4;
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100046B9C(&qword_100163748);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_100046B9C(&qword_100163750);
  uint64_t v10 = __chkstk_darwin(v25);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  unint64_t v14 = (char *)&v24 - v13;
  sub_10001388C((uint64_t)v9);
  char v15 = *(unsigned char *)(a1 + 32);
  uint64_t v16 = swift_retain();
  uint64_t v17 = sub_1000375A0(v16, v15);
  swift_release();
  swift_getKeyPath();
  uint64_t v29 = (void *)v17;
  sub_10002796C(&qword_10015F570, (void (*)(uint64_t))type metadata accessor for SettingsAppSearchViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_release();
  sub_100014078(&qword_100163758, &qword_100163748, (void (*)(void))sub_100065A84, (void (*)(void))sub_1000064A4);
  View.accessibilityHidden(_:)();
  sub_10003F5D0((uint64_t)v9, &qword_100163748);
  char v18 = *(unsigned char *)(a1 + 32);
  uint64_t v19 = swift_retain();
  uint64_t v20 = sub_1000375A0(v19, v18);
  swift_release();
  swift_getKeyPath();
  uint64_t v29 = (void *)v20;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  LODWORD(v9) = *(unsigned __int8 *)(v20 + 80);
  swift_release();
  if (v9)
  {
    static AccessibilityTraits.isModal.getter();
    uint64_t v21 = v26;
  }
  else
  {
    uint64_t v29 = &_swiftEmptyArrayStorage;
    sub_10002796C(&qword_1001637C0, (void (*)(uint64_t))&type metadata accessor for AccessibilityTraits);
    sub_100046B9C(&qword_1001637C8);
    sub_10004D2D4(&qword_1001637D0, &qword_1001637C8);
    uint64_t v22 = v26;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    uint64_t v21 = v22;
  }
  ModifiedContent<>.accessibilityAddTraits(_:)();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v6, v21);
  sub_10003F5D0((uint64_t)v12, &qword_100163750);
  return sub_100049B74((uint64_t)v14, v28, &qword_100163750);
}

uint64_t sub_1000194FC()
{
  uint64_t v1 = type metadata accessor for DispatchPredicate();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_10015F128 != -1) {
    swift_once();
  }
  uint64_t v5 = qword_10016AF88;
  *uint64_t v4 = qword_10016AF88;
  (*(void (**)(void *, void, uint64_t))(v2 + 104))(v4, enum case for DispatchPredicate.onQueue(_:), v1);
  id v6 = (id)v5;
  LOBYTE(v5) = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v2 + 8))(v4, v1);
  if (v5)
  {
    id v8 = sub_100019898(v0);
    uint64_t v10 = v9;
    uint64_t v11 = __chkstk_darwin(v8);
    *(void *)&v16[-32] = v0;
    *(void *)&v16[-24] = v11;
    *(void *)&v16[-16] = v12;
    __chkstk_darwin(v11);
    *(void *)&v16[-16] = sub_100019724;
    *(void *)&v16[-8] = v13;
    char v15 = v14 + 4;
    os_unfair_lock_lock(v14 + 4);
    sub_1000196FC();
    os_unfair_lock_unlock(v15);
    return sub_1000196E4((uint64_t)v8, v10);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1000196E4(uint64_t a1, uint64_t a2)
{
  if ((unint64_t)(a2 - 1) >= 3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1000196FC()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_100019724()
{
  return sub_100019744(v0[2], v0[3], v0[4]);
}

uint64_t sub_100019744(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6 = (uint64_t *)(a1 + OBJC_IVAR____TtC11SettingsApp25SatelliteListItemProvider_satelliteState);
  uint64_t v7 = *(void *)(a1 + OBJC_IVAR____TtC11SettingsApp25SatelliteListItemProvider_satelliteState + 8);
  switch(a3)
  {
    case 3:
      if (v7 == 3) {
        goto LABEL_13;
      }
      break;
    case 2:
      if (v7 == 2) {
        goto LABEL_13;
      }
      break;
    case 1:
      if (v7 == 1) {
        goto LABEL_13;
      }
      break;
    default:
      if ((unint64_t)(v7 - 1) >= 3)
      {
        uint64_t v11 = *v6;
        if (!a3)
        {
          if (!v7)
          {
            sub_100051F08(a2, 0);
            sub_100051F08(v11, 0);
            goto LABEL_13;
          }
          break;
        }
        if (v7)
        {
          BOOL v12 = v11 == a2 && v7 == a3;
          if (v12 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            swift_bridgeObjectRetain();
            goto LABEL_13;
          }
        }
      }
      swift_bridgeObjectRetain();
      break;
  }
  sub_1000403E0((void *)(a1 + OBJC_IVAR____TtC11SettingsApp25SatelliteListItemProvider_invalidator), *(void *)(a1 + OBJC_IVAR____TtC11SettingsApp25SatelliteListItemProvider_invalidator + 24));
  PassthroughSubject.send(_:)();
LABEL_13:
  uint64_t v8 = *v6;
  uint64_t v9 = v6[1];
  uint64_t *v6 = a2;
  v6[1] = a3;
  return sub_1000196E4(v8, v9);
}

id sub_100019898(uint64_t a1)
{
  id result = (id)sub_100019988();
  if (!v3)
  {
    id result = *(id *)(a1 + OBJC_IVAR____TtC11SettingsApp25SatelliteListItemProvider_stewieStateMonitor);
    if (result)
    {
      id result = [result getState];
      if (result)
      {
        uint64_t v4 = result;
        if ([result displayStewieInStatusBar]
          && ![v4 isStewieActiveOverBB])
        {
          uint64_t v5 = *(void **)(a1 + OBJC_IVAR____TtC11SettingsApp25SatelliteListItemProvider_idsOffGridStateManager);
          if (v5)
          {
            id v6 = v5;
            id v7 = [v6 offGridMode];

            if (v7 == (id)2) {
              return 0;
            }
          }
          else
          {
          }
          return 0;
        }
        else
        {

          return 0;
        }
      }
    }
  }
  return result;
}

uint64_t sub_100019988()
{
  uint64_t v1 = type metadata accessor for DispatchPredicate();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (uint64_t *)((char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_10015F128 != -1) {
LABEL_34:
  }
    swift_once();
  uint64_t v5 = qword_10016AF88;
  *uint64_t v4 = qword_10016AF88;
  (*(void (**)(void *, void, uint64_t))(v2 + 104))(v4, enum case for DispatchPredicate.onQueue(_:), v1);
  id v6 = (id)v5;
  LOBYTE(v5) = _dispatchPreconditionTest(_:)();
  id v7 = *(uint64_t (**)(void *, uint64_t))(v2 + 8);
  v2 += 8;
  uint64_t result = v7(v4, v1);
  if (v5)
  {
    uint64_t v1 = v0 + OBJC_IVAR____TtC11SettingsApp25SatelliteListItemProvider_slotInfos;
    uint64_t result = swift_beginAccess();
    int64_t v9 = 0;
    uint64_t v10 = *(void *)v1;
    uint64_t v11 = *(void *)v1;
    uint64_t v12 = 1 << *(unsigned char *)(*(void *)v1 + 32);
    uint64_t v13 = -1;
    if (v12 < 64) {
      uint64_t v13 = ~(-1 << v12);
    }
    uint64_t v15 = *(void *)(v11 + 64);
    uint64_t v14 = v11 + 64;
    unint64_t v16 = v13 & v15;
    int64_t v17 = (unint64_t)(v12 + 63) >> 6;
    while (1)
    {
      if (v16)
      {
        unint64_t v18 = __clz(__rbit64(v16));
        v16 &= v16 - 1;
        unint64_t v19 = v18 | (v9 << 6);
      }
      else
      {
        int64_t v22 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          goto LABEL_34;
        }
        if (v22 >= v17) {
          return 0;
        }
        unint64_t v23 = *(void *)(v14 + 8 * v22);
        ++v9;
        if (!v23)
        {
          int64_t v9 = v22 + 1;
          if (v22 + 1 >= v17) {
            return 0;
          }
          unint64_t v23 = *(void *)(v14 + 8 * v9);
          if (!v23)
          {
            int64_t v9 = v22 + 2;
            if (v22 + 2 >= v17) {
              return 0;
            }
            unint64_t v23 = *(void *)(v14 + 8 * v9);
            if (!v23)
            {
              int64_t v9 = v22 + 3;
              if (v22 + 3 >= v17) {
                return 0;
              }
              unint64_t v23 = *(void *)(v14 + 8 * v9);
              if (!v23)
              {
                int64_t v9 = v22 + 4;
                if (v22 + 4 >= v17) {
                  return 0;
                }
                unint64_t v23 = *(void *)(v14 + 8 * v9);
                if (!v23)
                {
                  int64_t v24 = v22 + 5;
                  if (v24 >= v17) {
                    return 0;
                  }
                  unint64_t v23 = *(void *)(v14 + 8 * v24);
                  if (!v23)
                  {
                    while (1)
                    {
                      int64_t v9 = v24 + 1;
                      if (__OFADD__(v24, 1)) {
                        goto LABEL_36;
                      }
                      if (v9 >= v17) {
                        return 0;
                      }
                      unint64_t v23 = *(void *)(v14 + 8 * v9);
                      ++v24;
                      if (v23) {
                        goto LABEL_30;
                      }
                    }
                  }
                  int64_t v9 = v24;
                }
              }
            }
          }
        }
LABEL_30:
        unint64_t v16 = (v23 - 1) & v23;
        unint64_t v19 = __clz(__rbit64(v23)) + (v9 << 6);
      }
      uint64_t v20 = *(void *)(v10 + 56) + 24 * v19;
      uint64_t v1 = *(void *)(v20 + 16);
      if (*(unsigned char *)v20 == 1 && v1 != 0)
      {
        uint64_t v25 = *(void *)(v20 + 8);
        swift_bridgeObjectRetain();
        return v25;
      }
    }
  }
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_100019C44@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_10003736C((unint64_t *)&unk_100163AC0, (void (*)(uint64_t))type metadata accessor for PrimarySettingsListModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel_effectiveCurrentPresentedItemIdentifier);
  return result;
}

void sub_100019CF4(unint64_t a1, const char *a2, SEL *a3)
{
  uint64_t v29 = a2;
  uint64_t v30 = a3;
  unint64_t v32 = a1;
  uint64_t v4 = v3;
  uint64_t v5 = type metadata accessor for NavigationPath();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10015F140 != -1) {
    swift_once();
  }
  uint64_t v9 = type metadata accessor for Logger();
  sub_1000477B0(v9, (uint64_t)qword_10016AFB0);
  swift_retain_n();
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    uint64_t v28 = (uint64_t)v8;
    v34[0] = v27;
    *(_DWORD *)uint64_t v12 = 136315394;
    uint64_t v13 = _typeName(_:qualified:)();
    uint64_t v33 = sub_100042948(v13, v14, v34);
    uint64_t v31 = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 12) = 2080;
    uint64_t v33 = sub_100042948(0xD00000000000001DLL, v32, v34);
    uint64_t v6 = v31;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Start (%s.%s)…", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    uint64_t v8 = (char *)v28;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  swift_getKeyPath();
  v34[0] = v4;
  sub_1000373B4((unint64_t *)&qword_10015F5A0, (void (*)(uint64_t))type metadata accessor for SettingsAppNavigationModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v15 = v4 + OBJC_IVAR____TtC11SettingsApp26SettingsAppNavigationModel__detailContent;
  swift_beginAccess();
  unint64_t v16 = *(void *)(v15 + *(int *)(type metadata accessor for SettingsAppDetailContent() + 20));
  if (v16 >> 62 == 1)
  {
    uint64_t v28 = v16 & 0x3FFFFFFFFFFFFFFFLL;
    swift_retain();
    int64_t v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = swift_slowAlloc();
      uint64_t v31 = v6;
      uint64_t v20 = v19;
      uint64_t v25 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v20 = 141558275;
      uint64_t v33 = 1752392040;
      uint64_t v27 = v5;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v20 + 12) = 2113;
      os_log_t v26 = v17;
      uint64_t v21 = PreferencesControllerRepresentableModel.makeViewControllerIfNeeded()();
      uint64_t v33 = v21;
      uint64_t v5 = v27;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v25 = v21;
      int64_t v17 = v26;
      _os_log_impl((void *)&_mh_execute_header, v26, v18, v29, (uint8_t *)v20, 0x16u);
      sub_100046B9C((uint64_t *)&unk_100163570);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v6 = v31;
      swift_slowDealloc();
    }

    int64_t v22 = (void *)PreferencesControllerRepresentableModel.makeViewControllerIfNeeded()();
    unint64_t v23 = v30;
    if ([v22 respondsToSelector:*v30])
    {
      [v22 *v23];

      swift_release();
    }
    else
    {
      swift_release();
    }
  }
  swift_getKeyPath();
  uint64_t v33 = v4;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v24 = v4 + OBJC_IVAR____TtC11SettingsApp26SettingsAppNavigationModel__navigationPath;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v24, v5);
  NavigationPath.withCollectionProxy(_:)();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_1000132DC(v4, 0xD00000000000001DLL, v32);
}

uint64_t sub_10001A2B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v50 = a1;
  uint64_t v1 = type metadata accessor for SettingsExperienceConnectionOptions();
  uint64_t v41 = *(void *)(v1 - 8);
  uint64_t v42 = v1;
  __chkstk_darwin(v1);
  uint64_t v40 = (char *)&v36 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_100046B9C(&qword_1001645F8);
  __chkstk_darwin(v43);
  uint64_t v4 = (uint64_t *)((char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v49 = sub_100046B9C(&qword_1001645F0);
  __chkstk_darwin(v49);
  uint64_t v46 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = type metadata accessor for PreferencesControllerView();
  uint64_t v39 = *(void *)(v45 - 8);
  __chkstk_darwin(v45);
  uint64_t v38 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = type metadata accessor for SettingsAnyPlatformViewControllerView();
  uint64_t v37 = *(void *)(v44 - 8);
  __chkstk_darwin(v44);
  unint64_t v36 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_100046B9C(&qword_100164600);
  __chkstk_darwin(v47);
  uint64_t v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100046B9C(&qword_100164608);
  __chkstk_darwin(v10);
  uint64_t v12 = (uint64_t *)((char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v48 = sub_100046B9C(&qword_1001645E0);
  __chkstk_darwin(v48);
  unint64_t v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for SettingsAppDetailContent();
  uint64_t v16 = v15 - 8;
  __chkstk_darwin(v15);
  os_log_type_t v18 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SettingsNavigationSplitView();
  sub_100046B9C(&qword_100164200);
  Bindable.wrappedValue.getter();
  uint64_t v19 = v51;
  swift_getKeyPath();
  uint64_t v51 = v19;
  sub_1000373FC((unint64_t *)&qword_10015F5A0, (void (*)(uint64_t))type metadata accessor for SettingsAppNavigationModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v20 = v19 + OBJC_IVAR____TtC11SettingsApp26SettingsAppNavigationModel__detailContent;
  swift_beginAccess();
  sub_100034C08(v20, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for SettingsAppDetailContent);
  swift_release();
  unint64_t v21 = *(void *)&v18[*(int *)(v16 + 28)];
  swift_retain();
  sub_100067DFC((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for SettingsAppDetailContent);
  switch(v21 >> 62)
  {
    case 1uLL:
      swift_retain();
      unint64_t v32 = v38;
      PreferencesControllerView.init(preferencesControllerRepresentableModel:)();
      uint64_t v33 = v39;
      uint64_t v34 = v45;
      (*(void (**)(uint64_t *, char *, uint64_t))(v39 + 16))(v4, v32, v45);
      swift_storeEnumTagMultiPayload();
      sub_1000373FC(&qword_1001645A0, (void (*)(uint64_t))&type metadata accessor for PreferencesControllerView);
      uint64_t v35 = (uint64_t)v46;
      _ConditionalContent<>.init(storage:)();
      sub_10003F75C(v35, (uint64_t)v9, &qword_1001645F0);
      swift_storeEnumTagMultiPayload();
      sub_100065C34();
      sub_100065D4C();
      _ConditionalContent<>.init(storage:)();
      swift_release();
      sub_10003F5D0(v35, &qword_1001645F0);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v32, v34);
      break;
    case 2uLL:
      os_log_t v26 = v40;
      SettingsExperienceConnectionOptions.init()();
      uint64_t v27 = SettingsExperiencePlugin.requestRootView(options:)();
      (*(void (**)(char *, uint64_t))(v41 + 8))(v26, v42);
      *uint64_t v4 = v27;
      swift_storeEnumTagMultiPayload();
      sub_1000373FC(&qword_1001645A0, (void (*)(uint64_t))&type metadata accessor for PreferencesControllerView);
      swift_retain();
      uint64_t v28 = (uint64_t)v46;
      _ConditionalContent<>.init(storage:)();
      sub_10003F75C(v28, (uint64_t)v9, &qword_1001645F0);
      swift_storeEnumTagMultiPayload();
      sub_100065C34();
      sub_100065D4C();
      _ConditionalContent<>.init(storage:)();
      swift_release();
      uint64_t v29 = v28;
      uint64_t v30 = &qword_1001645F0;
      goto LABEL_5;
    case 3uLL:
      id v31 = [self systemGroupedBackgroundColor];
      *uint64_t v12 = Color.init(_:)();
      swift_storeEnumTagMultiPayload();
      sub_1000373FC(&qword_1001644D8, (void (*)(uint64_t))&type metadata accessor for SettingsAnyPlatformViewControllerView);
      swift_retain();
      _ConditionalContent<>.init(storage:)();
      sub_10003F75C((uint64_t)v14, (uint64_t)v9, &qword_1001645E0);
      swift_storeEnumTagMultiPayload();
      sub_100065C34();
      sub_100065D4C();
      _ConditionalContent<>.init(storage:)();
      uint64_t v29 = (uint64_t)v14;
      uint64_t v30 = &qword_1001645E0;
LABEL_5:
      sub_10003F5D0(v29, v30);
      uint64_t result = swift_release();
      break;
    default:
      swift_retain();
      int64_t v22 = v36;
      SettingsAnyPlatformViewControllerView.init(platformViewControllerModel:)();
      uint64_t v23 = v37;
      uint64_t v24 = v44;
      (*(void (**)(uint64_t *, char *, uint64_t))(v37 + 16))(v12, v22, v44);
      swift_storeEnumTagMultiPayload();
      sub_1000373FC(&qword_1001644D8, (void (*)(uint64_t))&type metadata accessor for SettingsAnyPlatformViewControllerView);
      _ConditionalContent<>.init(storage:)();
      sub_10003F75C((uint64_t)v14, (uint64_t)v9, &qword_1001645E0);
      swift_storeEnumTagMultiPayload();
      sub_100065C34();
      sub_100065D4C();
      _ConditionalContent<>.init(storage:)();
      swift_release();
      sub_10003F5D0((uint64_t)v14, &qword_1001645E0);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v22, v24);
      break;
  }
  return result;
}

id sub_10001ABB8()
{
  uint64_t v0 = type metadata accessor for OSSignpostID();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = &v37[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v2);
  uint64_t v6 = &v37[-v5];
  uint64_t v7 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = &v37[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = type metadata accessor for DispatchQoS();
  uint64_t v40 = *(void *)(v11 - 8);
  uint64_t v41 = v11;
  __chkstk_darwin(v11);
  uint64_t v13 = &v37[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v15 = Strong;
    uint64_t v39 = v8;
    uint64_t v16 = self;
    id result = [v16 sharedManager];
    if (result)
    {
      os_log_type_t v18 = result;
      unsigned int v38 = [result shouldShowTethering];

      char v19 = *(unsigned char *)(*(void *)(v15
                                 + OBJC_IVAR____TtC11SettingsApp31PersonalHotspotListItemProvider_airplaneModeListItemProvider)
                     + OBJC_IVAR____TtC11SettingsApp28AirplaneModeListItemProvider_airplaneMode);
      uint64_t v20 = *(void *)(v15 + OBJC_IVAR____TtC11SettingsApp31PersonalHotspotListItemProvider_cellularDataSettingObserver);
      sub_1000531F0();
      char v21 = *(unsigned char *)(v20 + 18);
      id result = [v16 sharedManager];
      if (result)
      {
        int64_t v22 = result;
        unsigned __int8 v23 = [result isDataEnabled];

        if (v23) {
          char v24 = 0;
        }
        else {
          char v24 = v19 | v21 ^ 1;
        }
        id result = [v16 sharedManager];
        if (result)
        {
          uint64_t v25 = result;
          unsigned __int8 v26 = [result isTetheringEnabled];

          sub_100055498();
          uint64_t v27 = (void *)static OS_dispatch_queue.main.getter();
          uint64_t v28 = swift_allocObject();
          swift_weakInit();
          uint64_t v29 = swift_allocObject();
          *(void *)(v29 + 16) = v28;
          *(unsigned char *)(v29 + 24) = v38;
          *(unsigned char *)(v29 + 25) = v24;
          *(unsigned char *)(v29 + 26) = v26;
          aBlock[4] = sub_100067318;
          aBlock[5] = v29;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          aBlock[2] = sub_10002CC68;
          aBlock[3] = &unk_100153F98;
          uint64_t v30 = _Block_copy(aBlock);
          swift_release();
          static DispatchQoS.unspecified.getter();
          aBlock[0] = _swiftEmptyArrayStorage;
          sub_100055450((unint64_t *)&qword_1001614F0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
          sub_100046B9C((uint64_t *)&unk_1001609C0);
          sub_10004D2D4((unint64_t *)&qword_100161500, (uint64_t *)&unk_1001609C0);
          dispatch thunk of SetAlgebra.init<A>(_:)();
          OS_dispatch_queue.async(group:qos:flags:execute:)();
          _Block_release(v30);
          swift_release();

          (*(void (**)(unsigned char *, uint64_t))(v39 + 8))(v10, v7);
          return (id)(*(uint64_t (**)(unsigned char *, uint64_t))(v40 + 8))(v13, v41);
        }
        goto LABEL_16;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_16:
    __break(1u);
    return result;
  }
  if (qword_10015F180 != -1) {
    swift_once();
  }
  uint64_t v31 = type metadata accessor for OSSignposter();
  sub_1000477B0(v31, (uint64_t)qword_10016B070);
  static OSSignpostID.exclusive.getter();
  unint64_t v32 = OSSignposter.logHandle.getter();
  os_signpost_type_t v33 = static os_signpost_type_t.event.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v1 + 16))(v4, v6, v0);
    uint64_t v34 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v34 = 0;
    os_signpost_id_t v35 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v32, v33, v35, "PersonalHotspotListItemProvider.updatePersonalHotspotState bailed", "", v34, 2u);
    swift_slowDealloc();

    unint64_t v36 = *(void (**)(unsigned char *, uint64_t))(v1 + 8);
    v36(v6, v0);
    return (id)((uint64_t (*)(unsigned char *, uint64_t))v36)(v4, v0);
  }
  else
  {

    return (id)(*(uint64_t (**)(unsigned char *, uint64_t))(v1 + 8))(v6, v0);
  }
}

uint64_t sub_10001B1A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100046B9C(&qword_1001601E8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v10[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  long long v7 = v1[1];
  v13[0] = *v1;
  v13[1] = v7;
  *(_OWORD *)unint64_t v14 = v1[2];
  *(_OWORD *)&v14[10] = *(_OWORD *)((char *)v1 + 42);
  uint64_t v12 = v13;
  uint64_t v11 = v13;
  sub_100046B9C(&qword_10015FD68);
  sub_100046B9C(&qword_1001601F0);
  sub_10001B364();
  sub_10001B3C0();
  LabeledContent<>.init(content:label:)();
  if (v14[24]) {
    double v8 = 0.5;
  }
  else {
    double v8 = 1.0;
  }
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v4 + 16))(a1, v6, v3);
  *(double *)(a1 + *(int *)(sub_100046B9C(&qword_100160200) + 36)) = v8;
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_10001B364()
{
  unint64_t result = qword_10015FD90;
  if (!qword_10015FD90)
  {
    sub_10004D318(&qword_10015FD68);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015FD90);
  }
  return result;
}

unint64_t sub_10001B3C0()
{
  unint64_t result = qword_1001601F8;
  if (!qword_1001601F8)
  {
    sub_10004D318(&qword_1001601F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001601F8);
  }
  return result;
}

uint64_t initializeWithCopy for FirstAppearanceModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_10001B47C()
{
  uint64_t v0 = sub_100046B9C((uint64_t *)&unk_100163BC0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for NSNotificationCenter.Publisher();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100046B9C(&qword_100161798);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v20 = v7;
  uint64_t v21 = v8;
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v11 = String._bridgeToObjectiveC()();
  sub_100055498();
  uint64_t v12 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v13 = _CTServerConnectionCreateOnTargetQueue();

  unint64_t v14 = (void *)swift_allocObject();
  swift_weakInit();
  aBlock[4] = sub_1000A8DD4;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_1000A89D4;
  aBlock[3] = &unk_100153D28;
  uint64_t v15 = _Block_copy(aBlock);
  swift_release();
  _CTServerConnectionRegisterBlockForNotification();
  _Block_release(v15);
  id v16 = [self defaultCenter];
  NSNotificationCenter.publisher(for:object:)();

  aBlock[0] = (id)static OS_dispatch_queue.main.getter();
  uint64_t v17 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v2, 1, 1, v17);
  sub_100055408(&qword_100163CE0, (void (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Publisher);
  sub_100055408((unint64_t *)&qword_100163C00, (void (*)(uint64_t))sub_100055498);
  Publisher.receive<A>(on:options:)();
  sub_10005FB20((uint64_t)v2);

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  swift_allocObject();
  swift_weakInit();
  sub_100066854();
  uint64_t v18 = v20;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v10, v18);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  return v13;
}

uint64_t sub_10001B90C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v42 = a1;
  uint64_t v1 = type metadata accessor for NavigationBarItem.TitleDisplayMode();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100046B9C(&qword_1001645B0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_100046B9C(&qword_1001645B8);
  uint64_t v34 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  uint64_t v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100046B9C(&qword_100164590);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100046B9C(&qword_100164588);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v38 = v13;
  uint64_t v39 = v14;
  __chkstk_darwin(v13);
  os_signpost_id_t v35 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100046B9C(&qword_100164580);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v40 = v16;
  uint64_t v41 = v17;
  __chkstk_darwin(v16);
  uint64_t v37 = (char *)&v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001A2B0((uint64_t)v7);
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, enum case for NavigationBarItem.TitleDisplayMode.inline(_:), v1);
  sub_10005FB80(&qword_1001645C0, &qword_1001645B0, (void (*)(void))sub_100065AC0);
  View.navigationBarTitleDisplayMode(_:)();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_10003F5D0((uint64_t)v7, &qword_1001645B0);
  type metadata accessor for SettingsNavigationSplitView();
  sub_100046B9C(&qword_100164200);
  Bindable.wrappedValue.getter();
  uint64_t v19 = v43;
  swift_getKeyPath();
  uint64_t v43 = v19;
  sub_1000373FC((unint64_t *)&qword_10015F5A0, (void (*)(uint64_t))type metadata accessor for SettingsAppNavigationModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v20 = v19 + OBJC_IVAR____TtC11SettingsApp26SettingsAppNavigationModel__detailContent;
  swift_beginAccess();
  sub_100034C08(v20, (uint64_t)&v12[*(int *)(v10 + 52)], (uint64_t (*)(void))type metadata accessor for SettingsAppDetailContent);
  swift_release();
  (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v12, v9, v36);
  uint64_t v21 = type metadata accessor for PreferencesControllerRecipe();
  uint64_t v22 = type metadata accessor for PreferencesControllerView();
  uint64_t v23 = sub_10004D2D4(&qword_100164598, &qword_100164590);
  uint64_t v24 = sub_1000373FC((unint64_t *)&qword_100164190, (void (*)(uint64_t))&type metadata accessor for PreferencesControllerRecipe);
  uint64_t v25 = sub_1000373FC(&qword_1001645A0, (void (*)(uint64_t))&type metadata accessor for PreferencesControllerView);
  unsigned __int8 v26 = v35;
  View.navigationDestination<A, B>(for:destination:)();
  sub_10003F5D0((uint64_t)v12, &qword_100164590);
  uint64_t v27 = type metadata accessor for SettingsAnyViewRecipe();
  uint64_t v43 = v10;
  uint64_t v44 = v21;
  uint64_t v45 = (void *)v22;
  uint64_t v46 = v23;
  uint64_t v47 = v24;
  uint64_t v48 = (void *)v25;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v29 = sub_1000373FC(&qword_1001645A8, (void (*)(uint64_t))&type metadata accessor for SettingsAnyViewRecipe);
  uint64_t v30 = v37;
  uint64_t v31 = v38;
  View.navigationDestination<A, B>(for:destination:)();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v26, v31);
  type metadata accessor for SettingsAnyPlatformViewControllerRecipe();
  type metadata accessor for SettingsAnyPlatformViewControllerView();
  uint64_t v43 = v31;
  uint64_t v44 = v27;
  uint64_t v45 = &type metadata for AnyView;
  uint64_t v46 = OpaqueTypeConformance2;
  uint64_t v47 = v29;
  uint64_t v48 = &protocol witness table for AnyView;
  swift_getOpaqueTypeConformance2();
  sub_1000373FC(&qword_100164198, (void (*)(uint64_t))&type metadata accessor for SettingsAnyPlatformViewControllerRecipe);
  sub_1000373FC(&qword_1001644D8, (void (*)(uint64_t))&type metadata accessor for SettingsAnyPlatformViewControllerView);
  uint64_t v32 = v40;
  View.navigationDestination<A, B>(for:destination:)();
  return (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v30, v32);
}

uint64_t sub_10001C08C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = type metadata accessor for Logger();
  sub_10001C174(v3, a2);
  sub_1000477B0(v3, (uint64_t)a2);
  swift_bridgeObjectRetain();
  return Logger.init(subsystem:category:)();
}

uint64_t sub_10001C114(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = type metadata accessor for PPTTestCase.Name();
  sub_10001C174(v3, a2);
  sub_1000477B0(v3, (uint64_t)a2);
  return PPTTestCase.Name.init(_:)();
}

uint64_t *sub_10001C174(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_10001C1D8(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  uint64_t v3 = type metadata accessor for PrimarySettingsListSectionModel();
  v2[4] = v3;
  void v2[5] = *(void *)(v3 - 8);
  v2[6] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for FLAccountType();
  v2[7] = v4;
  v2[8] = *(void *)(v4 - 8);
  v2[9] = swift_task_alloc();
  v2[10] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for FLFollowUpGroupIdentity();
  v2[11] = v5;
  void v2[12] = *(void *)(v5 - 8);
  v2[13] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for PrimarySettingsListItemModel();
  v2[14] = v6;
  v2[15] = *(void *)(v6 - 8);
  v2[16] = swift_task_alloc();
  v2[17] = swift_task_alloc();
  v2[18] = type metadata accessor for PrimarySettingsListItemIdentifier();
  v2[19] = swift_task_alloc();
  v2[20] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for FLRenderStyle();
  v2[21] = v7;
  v2[22] = *(void *)(v7 - 8);
  v2[23] = swift_task_alloc();
  v2[24] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for FLFollowUpInformation();
  v2[25] = v8;
  v2[26] = *(void *)(v8 - 8);
  v2[27] = swift_task_alloc();
  return _swift_task_switch(sub_100015574, 0, 0);
}

void sub_10001C530(char a1, char a2)
{
  if (sub_10001C66C() & 1) != 0 && (a1)
  {
    if (qword_10015F148 != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    sub_1000477B0(v5, (uint64_t)qword_10016AFC8);
    oslog = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(oslog, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v6, "Ignoring request to hide navigation bar.", v7, 2u);
      swift_slowDealloc();
    }
  }
  else
  {
    [v2 sa_setNavigationBarHidden:a1 & 1 animated:a2 & 1];
  }
}

id sub_10001C66C()
{
  uint64_t v1 = v0;
  swift_beginAccess();
  id v2 = objc_getAssociatedObject(v0, &unk_100163688);
  swift_endAccess();
  if (v2)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v16, 0, sizeof(v16));
  }
  sub_10001C8A0((uint64_t)v16, (uint64_t)v17);
  if (v18)
  {
    if (swift_dynamicCast())
    {
      char v3 = v15;
      return (id)(v3 & 1);
    }
  }
  else
  {
    sub_100064640((uint64_t)v17);
  }
  id v4 = [v1 splitViewController];
  if (!v4)
  {
    char v3 = 0;
    return (id)(v3 & 1);
  }
  uint64_t v5 = v4;
  id v6 = [v4 parentViewController];
  if (!v6)
  {

    char v3 = 0;
    return (id)(v3 & 1);
  }
  uint64_t v7 = v6;
  id result = [v1 view];
  if (result)
  {
    uint64_t v9 = result;
    id v10 = [result window];

    id v11 = [v10 rootViewController];
    if (v11)
    {
      sub_100007F84();
      id v12 = v7;
      id v13 = v11;
      char v3 = static NSObject.== infix(_:_:)();
    }
    else
    {
      char v3 = 0;
    }
    Class isa = Bool._bridgeToObjectiveC()().super.super.isa;
    swift_beginAccess();
    objc_setAssociatedObject(v1, &unk_100163688, isa, 0);
    swift_endAccess();

    return (id)(v3 & 1);
  }
  __break(1u);
  return result;
}

uint64_t sub_10001C8A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100046B9C(&qword_1001609A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10001C908@<X0>(uint64_t a1@<X8>)
{
  uint64_t v62 = a1;
  uint64_t v2 = sub_100046B9C(&qword_100164610);
  __chkstk_darwin(v2 - 8);
  uint64_t v61 = (char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for SearchFieldPlacement();
  uint64_t v55 = *(void *)(v4 - 8);
  uint64_t v56 = v4;
  __chkstk_darwin(v4);
  uint64_t v49 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = type metadata accessor for PrimarySettingsList();
  __chkstk_darwin(v47);
  uint64_t v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = sub_100046B9C(&qword_1001643D0);
  uint64_t v60 = *(void *)(v58 - 8);
  __chkstk_darwin(v58);
  uint64_t v48 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = sub_100046B9C(&qword_100164618);
  uint64_t v57 = *(void *)(v59 - 8);
  __chkstk_darwin(v59);
  uint64_t v50 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_100046B9C(&qword_1001643C8) - 8;
  __chkstk_darwin(v54);
  uint64_t v51 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_100046B9C(&qword_100163690);
  uint64_t v52 = *(void *)(v53 - 8);
  __chkstk_darwin(v53);
  os_signpost_id_t v65 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = sub_100046B9C(&qword_100164620);
  uint64_t v66 = *(void *)(v63 - 8);
  uint64_t v12 = __chkstk_darwin(v63);
  uint64_t v46 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v43 - v15;
  __chkstk_darwin(v14);
  v64 = (char *)&v43 - v17;
  char v18 = *(unsigned char *)(v1 + *(int *)(type metadata accessor for SettingsNavigationSplitView() + 32) + 8);
  uint64_t v19 = swift_retain();
  sub_1000EFB80(v19, v18, 0xD00000000000001ALL, 0x800000010012AA60);
  swift_release();
  type metadata accessor for SettingsAppSearchViewModel();
  sub_1000373FC(&qword_10015F570, (void (*)(uint64_t))type metadata accessor for SettingsAppSearchViewModel);
  Bindable<A>.init(wrappedValue:)();
  sub_100046B9C(&qword_100164200);
  Bindable.wrappedValue.getter();
  sub_100036FFC();
  swift_release();
  type metadata accessor for PrimarySettingsListModel();
  sub_1000373FC((unint64_t *)&unk_100163AC0, (void (*)(uint64_t))type metadata accessor for PrimarySettingsListModel);
  Bindable<A>.init(wrappedValue:)();
  Bindable.wrappedValue.getter();
  sub_100036FFC();
  swift_release();
  *(void *)uint64_t v7 = swift_getKeyPath();
  *((void *)v7 + 1) = swift_getKeyPath();
  v7[16] = 0;
  uint64_t v20 = Environment.init<A>(_:)();
  uint64_t v44 = v7;
  *((void *)v7 + 3) = v20;
  v7[32] = v21 & 1;
  uint64_t v22 = v47;
  Bindable<A>.init(wrappedValue:)();
  uint64_t v23 = v63;
  Bindable.projectedValue.getter();
  swift_getKeyPath();
  Bindable<A>.subscript.getter();
  swift_release();
  uint64_t v24 = v66 + 8;
  uint64_t v25 = *(void (**)(char *, uint64_t))(v66 + 8);
  v25(v16, v23);
  uint64_t v45 = (uint64_t (*)(char *, uint64_t))v25;
  uint64_t v66 = v24;
  uint64_t v43 = v69;
  unsigned __int8 v26 = v46;
  Bindable.projectedValue.getter();
  swift_getKeyPath();
  Bindable<A>.subscript.getter();
  swift_release();
  v25(v26, v23);
  uint64_t v27 = v49;
  static SearchFieldPlacement.automatic.getter();
  uint64_t v42 = sub_1000373FC(&qword_1001643D8, (void (*)(uint64_t))type metadata accessor for PrimarySettingsList);
  uint64_t v28 = v48;
  uint64_t v29 = (uint64_t)v44;
  View.searchable(text:isPresented:placement:prompt:)();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v27, v56);
  sub_100067DFC(v29, (uint64_t (*)(void))type metadata accessor for PrimarySettingsList);
  uint64_t v30 = (uint64_t)v61;
  static ToolbarDefaultItemKind.sidebarToggle.getter();
  uint64_t v31 = type metadata accessor for ToolbarDefaultItemKind();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v30, 0, 1, v31);
  uint64_t v67 = v22;
  uint64_t v68 = v42;
  swift_getOpaqueTypeConformance2();
  uint64_t v32 = v50;
  uint64_t v33 = v58;
  View.toolbar(removing:)();
  sub_10003F5D0(v30, &qword_100164610);
  (*(void (**)(char *, uint64_t))(v60 + 8))(v28, v33);
  uint64_t v34 = static Alignment.center.getter();
  uint64_t v36 = v35;
  uint64_t v37 = v57;
  uint64_t v38 = (uint64_t)v51;
  uint64_t v39 = v59;
  (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v51, v32, v59);
  uint64_t v40 = (uint64_t *)(v38 + *(int *)(v54 + 44));
  *uint64_t v40 = v34;
  v40[1] = v36;
  (*(void (**)(char *, uint64_t))(v37 + 8))(v32, v39);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v65, v53);
  sub_100066524(v38, v62);
  return v45(v64, v63);
}

uint64_t sub_10001D210(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((sub_1000460F4(a1, a2) & 1) == 0) {
    return 0;
  }
  uint64_t v6 = *(int *)(a3 + 20);

  return sub_10003B998(a1 + v6, a2 + v6);
}

uint64_t sub_10001D278()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100046B9C(&qword_100163CC8);
  __chkstk_darwin(v2 - 8);
  uint64_t v53 = (char *)v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100046B9C((uint64_t *)&unk_100164160);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = type metadata accessor for NSRunLoop.SchedulerTimeType.Stride();
  uint64_t v48 = *(void *)(v50 - 8);
  __chkstk_darwin(v50);
  uint64_t v8 = (char *)v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100046B9C(&qword_100163BD0);
  uint64_t v51 = *(void *)(v9 - 8);
  uint64_t v52 = v9;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100046B9C((uint64_t *)&unk_100164170);
  uint64_t v55 = *(void *)(v12 - 8);
  uint64_t v56 = v12;
  __chkstk_darwin(v12);
  uint64_t v54 = (char *)v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for SettingsAppDetailContent();
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for NavigationPath();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)v44 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v1 + 16) = 0;
  NavigationPath.init()();
  (*(void (**)(uint64_t, char *, uint64_t))(v18 + 32))(v1 + OBJC_IVAR____TtC11SettingsApp26SettingsAppNavigationModel__navigationPath, v20, v17);
  if (qword_10015F198 != -1) {
    swift_once();
  }
  uint64_t v21 = sub_1000477B0(v14, (uint64_t)qword_10016B0A8);
  sub_10003DFC0(v21, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for SettingsAppDetailContent);
  sub_10004F000((uint64_t)v16, v1 + OBJC_IVAR____TtC11SettingsApp26SettingsAppNavigationModel__detailContent, (uint64_t (*)(void))type metadata accessor for SettingsAppDetailContent);
  uint64_t v22 = v1 + OBJC_IVAR____TtC11SettingsApp26SettingsAppNavigationModel_pendingURLDestination;
  uint64_t v23 = type metadata accessor for SettingsURLDestination(0);
  uint64_t v24 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56);
  v24(v22, 1, 1, v23);
  v24(v1 + OBJC_IVAR____TtC11SettingsApp26SettingsAppNavigationModel_currentlyInProgressURLDestination, 1, 1, v23);
  uint64_t v25 = OBJC_IVAR____TtC11SettingsApp26SettingsAppNavigationModel__primarySettingsListScrollToItemSubject;
  *(void *)(v1 + v25) = swift_getKeyPath();
  uint64_t v26 = OBJC_IVAR____TtC11SettingsApp26SettingsAppNavigationModel_cleanupCurrentlyInProgressURLDestinationSubject;
  sub_100046B9C((uint64_t *)&unk_100163BE0);
  swift_allocObject();
  *(void *)(v1 + v26) = PassthroughSubject.init()();
  uint64_t v49 = OBJC_IVAR____TtC11SettingsApp26SettingsAppNavigationModel_observer;
  *(void *)(v1 + OBJC_IVAR____TtC11SettingsApp26SettingsAppNavigationModel_observer) = 0;
  *(unsigned char *)(v1 + OBJC_IVAR____TtC11SettingsApp26SettingsAppNavigationModel__shouldDismissSearch) = 0;
  uint64_t v27 = v1 + OBJC_IVAR____TtC11SettingsApp26SettingsAppNavigationModel__horizontalSizeClass;
  uint64_t v28 = type metadata accessor for UserInterfaceSizeClass();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v27, 1, 1, v28);
  uint64_t v29 = v1 + OBJC_IVAR____TtC11SettingsApp26SettingsAppNavigationModel__scenePhase;
  uint64_t v30 = type metadata accessor for ScenePhase();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v29, 1, 1, v30);
  ObservationRegistrar.init()();
  [self registerApplicationURLStateProvider:v1];
  id v58 = *(id *)(v1
              + OBJC_IVAR____TtC11SettingsApp26SettingsAppNavigationModel_cleanupCurrentlyInProgressURLDestinationSubject);
  swift_retain();
  static NSRunLoop.SchedulerTimeType.Stride.milliseconds(_:)();
  id v47 = self;
  id v57 = [v47 mainRunLoop];
  uint64_t v31 = type metadata accessor for NSRunLoop.SchedulerOptions();
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v45 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v32 + 56);
  uint64_t v46 = v32 + 56;
  v45(v6, 1, 1, v31);
  v44[0] = sub_10002E1D8(0, &qword_10015F510);
  sub_10004D2D4((unint64_t *)&unk_100163BF0, (uint64_t *)&unk_100163BE0);
  v44[1] = sub_1000651C8();
  Publisher.debounce<A>(for:scheduler:options:)();
  sub_10003F5D0((uint64_t)v6, (uint64_t *)&unk_100164160);

  uint64_t v33 = v48;
  uint64_t v34 = *(void (**)(char *, uint64_t))(v48 + 8);
  uint64_t v35 = v50;
  v34(v8, v50);
  swift_release();
  static NSRunLoop.SchedulerTimeType.Stride.seconds(_:)();
  uint64_t v36 = (uint64_t)v53;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v33 + 56))(v53, 1, 1, v35);
  id v58 = [v47 mainRunLoop];
  v45(v6, 1, 1, v31);
  sub_10004D2D4(&qword_100164180, &qword_100163BD0);
  uint64_t v37 = v54;
  uint64_t v38 = v52;
  Publisher.delay<A>(for:tolerance:scheduler:options:)();
  sub_10003F5D0((uint64_t)v6, (uint64_t *)&unk_100164160);

  sub_10003F5D0(v36, &qword_100163CC8);
  v34(v8, v35);
  (*(void (**)(char *, uint64_t))(v51 + 8))(v11, v38);
  uint64_t v39 = swift_allocObject();
  swift_weakInit();
  uint64_t v40 = swift_allocObject();
  *(void *)(v40 + 16) = sub_1000E8F38;
  *(void *)(v40 + 24) = v39;
  sub_10004D2D4(&qword_100164188, (uint64_t *)&unk_100164170);
  uint64_t v41 = v56;
  uint64_t v42 = Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v37, v41);
  *(void *)(v1 + v49) = v42;
  swift_release();
  return v1;
}

uint64_t sub_10001DB1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000F5A34);
}

void *initializeBufferWithCopyOfBuffer for SettingsAppDebugMenuGesture(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

uint64_t sub_10001DB60()
{
  uint64_t v0 = type metadata accessor for PrimarySettingsListItemIdentifier();
  uint64_t v22 = v0;
  uint64_t v23 = &off_100151968;
  sub_10002A3A4((uint64_t *)&v21);
  swift_storeEnumTagMultiPayload();
  sub_100046B9C(&qword_1001615C0);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_10011C360;
  sub_1000498B0(&v21, v1 + 32);
  uint64_t v22 = v0;
  uint64_t v23 = &off_100151968;
  sub_10002A3A4((uint64_t *)&v21);
  swift_storeEnumTagMultiPayload();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_10011C360;
  sub_1000498B0(&v21, v2 + 32);
  uint64_t v22 = v0;
  uint64_t v23 = &off_100151968;
  sub_10002A3A4((uint64_t *)&v21);
  swift_storeEnumTagMultiPayload();
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_10011C360;
  sub_1000498B0(&v21, v3 + 32);
  uint64_t v22 = v0;
  uint64_t v23 = &off_100151968;
  sub_10002A3A4((uint64_t *)&v21);
  swift_storeEnumTagMultiPayload();
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_10011C360;
  sub_1000498B0(&v21, v4 + 32);
  sub_100046B9C((uint64_t *)&unk_100163C70);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10011C390;
  *(void *)(inited + 32) = v1;
  *(void *)(inited + 40) = v2;
  *(void *)(inited + 48) = v3;
  *(void *)(inited + 56) = v4;
  swift_bridgeObjectRetain();
  uint64_t v6 = (char *)_swiftEmptyArrayStorage;
  uint64_t v7 = 32;
  while (1)
  {
    uint64_t v8 = *(void *)(inited + v7);
    uint64_t v9 = *(void *)(v8 + 16);
    int64_t v10 = *((void *)v6 + 2);
    int64_t v11 = v10 + v9;
    if (__OFADD__(v10, v9)) {
      break;
    }
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
    if (isUniquelyReferenced_nonNull_native && v11 <= *((void *)v6 + 3) >> 1)
    {
      if (*(void *)(v8 + 16)) {
        goto LABEL_13;
      }
    }
    else
    {
      if (v10 <= v11) {
        int64_t v13 = v10 + v9;
      }
      else {
        int64_t v13 = v10;
      }
      uint64_t v6 = sub_10002AF40(isUniquelyReferenced_nonNull_native, v13, 1, v6);
      if (*(void *)(v8 + 16))
      {
LABEL_13:
        uint64_t v14 = *((void *)v6 + 2);
        if ((*((void *)v6 + 3) >> 1) - v14 < v9) {
          goto LABEL_25;
        }
        unint64_t v15 = (unint64_t)&v6[40 * v14 + 32];
        if (v8 + 32 < v15 + 40 * v9 && v15 < v8 + 32 + 40 * v9) {
          goto LABEL_27;
        }
        sub_100046B9C(&qword_1001615C8);
        swift_arrayInitWithCopy();
        if (v9)
        {
          uint64_t v17 = *((void *)v6 + 2);
          BOOL v18 = __OFADD__(v17, v9);
          uint64_t v19 = v17 + v9;
          if (v18) {
            goto LABEL_26;
          }
          *((void *)v6 + 2) = v19;
        }
        goto LABEL_3;
      }
    }
    if (v9) {
      goto LABEL_24;
    }
LABEL_3:
    swift_bridgeObjectRelease();
    v7 += 8;
    if (v7 == 64)
    {
      swift_bridgeObjectRelease();
      swift_setDeallocating();
      sub_100046B9C(&qword_100163C80);
      swift_arrayDestroy();
      return (uint64_t)v6;
    }
  }
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10001DE94(uint64_t a1, uint64_t a2, int *a3)
{
  char v6 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v6;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v7 = a3[9];
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (void *)(a2 + v7);
    sub_100045F84(a1 + v7);
    uint64_t v10 = type metadata accessor for PrimarySettingsListItemIdentifier();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
        uint64_t v11 = type metadata accessor for FLFollowUpInformation();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v8, v9, v11);
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        uint64_t v12 = type metadata accessor for FLFollowUpInformation();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v8, v9, v12);
        uint64_t v13 = *(int *)(sub_100046B9C(&qword_10015F7F8) + 48);
        uint64_t v14 = (void *)((char *)v8 + v13);
        unint64_t v15 = (void *)((char *)v9 + v13);
        *uint64_t v14 = *v15;
        v14[1] = v15[1];
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
      case 4u:
      case 5u:
        void *v8 = *v9;
        v8[1] = v9[1];
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
        break;
    }
  }
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  uint64_t v16 = a3[11];
  uint64_t v17 = (void *)(a1 + v16);
  BOOL v18 = (void *)(a2 + v16);
  uint64_t v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_10001E134()
{
  uint64_t v0 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v27 = *(void *)(v0 - 8);
  uint64_t v28 = v0;
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)&v24 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for DispatchQoS();
  uint64_t v25 = *(void *)(v3 - 8);
  uint64_t v26 = v3;
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for OSSignpostID();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v24 - v11;
  if (qword_10015F180 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for OSSignposter();
  sub_1000477B0(v13, (uint64_t)qword_10016B070);
  static OSSignpostID.exclusive.getter();
  uint64_t v14 = OSSignposter.logHandle.getter();
  os_signpost_type_t v15 = static os_signpost_type_t.event.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, v6);
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    uint64_t v24 = v5;
    uint64_t v17 = v16;
    *(_WORD *)uint64_t v16 = 0;
    os_signpost_id_t v18 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v14, v15, v18, "ClassKitListItemProvider.updateClassKitVisibility began", "", v17, 2u);
    uint64_t v5 = v24;
    swift_slowDealloc();

    uint64_t v19 = *(void (**)(char *, uint64_t))(v7 + 8);
    v19(v12, v6);
    v19(v10, v6);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  }
  if (qword_10015F128 != -1) {
    swift_once();
  }
  uint64_t v20 = swift_allocObject();
  swift_weakInit();
  aBlock[4] = sub_10002E9E0;
  aBlock[5] = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002CC68;
  aBlock[3] = &unk_100153530;
  long long v21 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  uint64_t v29 = _swiftEmptyArrayStorage;
  sub_1000553C0((unint64_t *)&qword_1001614F0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100046B9C((uint64_t *)&unk_1001609C0);
  sub_10004D2D4((unint64_t *)&qword_100161500, (uint64_t *)&unk_1001609C0);
  uint64_t v22 = v28;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v21);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v2, v22);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v5, v26);
  swift_release();
  return swift_release();
}

uint64_t sub_10001E624()
{
  uint64_t v0 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v27 = *(void *)(v0 - 8);
  uint64_t v28 = v0;
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)&v24 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for DispatchQoS();
  uint64_t v25 = *(void *)(v3 - 8);
  uint64_t v26 = v3;
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for OSSignpostID();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v24 - v11;
  if (qword_10015F180 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for OSSignposter();
  sub_1000477B0(v13, (uint64_t)qword_10016B070);
  static OSSignpostID.exclusive.getter();
  uint64_t v14 = OSSignposter.logHandle.getter();
  os_signpost_type_t v15 = static os_signpost_type_t.event.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, v6);
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    uint64_t v24 = v5;
    uint64_t v17 = v16;
    *(_WORD *)uint64_t v16 = 0;
    os_signpost_id_t v18 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v14, v15, v18, "ConnectedHeadphonesSectionModelProvider.updateConnectedHeadphones began", "", v17, 2u);
    uint64_t v5 = v24;
    swift_slowDealloc();

    uint64_t v19 = *(void (**)(char *, uint64_t))(v7 + 8);
    v19(v12, v6);
    v19(v10, v6);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  }
  if (qword_10015F128 != -1) {
    swift_once();
  }
  uint64_t v20 = swift_allocObject();
  swift_weakInit();
  aBlock[4] = sub_10002D998;
  aBlock[5] = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002CC68;
  aBlock[3] = &unk_100153938;
  long long v21 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  uint64_t v29 = _swiftEmptyArrayStorage;
  sub_10002F6A0();
  sub_100046B9C((uint64_t *)&unk_1001609C0);
  sub_10002F644();
  uint64_t v22 = v28;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v21);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v2, v22);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v5, v26);
  swift_release();
  return swift_release();
}

uint64_t sub_10001EAC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v6;
  swift_retain();
  swift_release();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a2 + v7);
  uint64_t v11 = *(void *)(a2 + v7 + 8);
  unsigned __int8 v12 = *(unsigned char *)(v9 + 16);
  sub_10003DA14(v10, v11, v12);
  uint64_t v13 = *(void *)v8;
  uint64_t v14 = *(void *)(v8 + 8);
  *(void *)uint64_t v8 = v10;
  *(void *)(v8 + 8) = v11;
  unsigned __int8 v15 = *(unsigned char *)(v8 + 16);
  *(unsigned char *)(v8 + 16) = v12;
  sub_10003E2B4(v13, v14, v15);
  *(void *)(v8 + 24) = *(void *)(v9 + 24);
  *(void *)(v8 + 32) = *(void *)(v9 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v26 = type metadata accessor for PrimarySettingsListSectionModel();
  uint64_t v16 = *(int *)(v26 + 24);
  uint64_t v17 = (void *)(v8 + v16);
  os_signpost_id_t v18 = (void *)(v9 + v16);
  uint64_t v19 = type metadata accessor for LocalizedStringResource();
  uint64_t v20 = *(void *)(v19 - 8);
  long long v21 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v20 + 48);
  int v22 = v21(v17, 1, v19);
  int v23 = v21(v18, 1, v19);
  if (!v22)
  {
    if (!v23)
    {
      (*(void (**)(void *, void *, uint64_t))(v20 + 24))(v17, v18, v19);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v20 + 8))(v17, v19);
    goto LABEL_6;
  }
  if (v23)
  {
LABEL_6:
    uint64_t v24 = sub_100046B9C(&qword_100163C30);
    memcpy(v17, v18, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v20 + 16))(v17, v18, v19);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
LABEL_7:
  *(void *)(v8 + *(int *)(v26 + 28)) = *(void *)(v9 + *(int *)(v26 + 28));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10001ECEC()
{
  uint64_t result = (uint64_t)[self sharedConnection];
  if (result)
  {
    uint64_t v2 = (void *)result;
    [(id)result registerObserver:v0];

    uint64_t v3 = self;
    id v4 = [v3 defaultCenter];
    uint64_t v5 = self;
    id v6 = [v5 mainQueue];
    int v22 = sub_100068B7C;
    uint64_t v23 = 0;
    os_signpost_id_t v18 = _NSConcreteStackBlock;
    uint64_t v19 = 1107296256;
    uint64_t v20 = sub_100012F34;
    long long v21 = &unk_1001527E0;
    uint64_t v7 = _Block_copy(&v18);
    id v8 = [v4 addObserverForName:UIApplicationDidBecomeActiveNotification object:0 queue:v6 usingBlock:v7];
    _Block_release(v7);

    uint64_t v9 = (void *)(v0 + OBJC_IVAR____TtC11SettingsApp27SettingsApplicationDelegate_observationTokens);
    swift_beginAccess();
    swift_unknownObjectRetain();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((*v9 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    swift_endAccess();
    id v10 = [v3 defaultCenter];
    id v11 = [v5 mainQueue];
    int v22 = sub_100081C28;
    uint64_t v23 = 0;
    os_signpost_id_t v18 = _NSConcreteStackBlock;
    uint64_t v19 = 1107296256;
    uint64_t v20 = sub_100012F34;
    long long v21 = &unk_100152808;
    unsigned __int8 v12 = _Block_copy(&v18);
    id v13 = [v10 addObserverForName:UIApplicationWillResignActiveNotification object:0 queue:v11 usingBlock:v12];
    _Block_release(v12);

    swift_beginAccess();
    swift_unknownObjectRetain();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((*v9 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    swift_endAccess();
    id v14 = [v3 defaultCenter];
    id v15 = [v5 mainQueue];
    int v22 = sub_100081C3C;
    uint64_t v23 = 0;
    os_signpost_id_t v18 = _NSConcreteStackBlock;
    uint64_t v19 = 1107296256;
    uint64_t v20 = sub_100012F34;
    long long v21 = &unk_100152830;
    uint64_t v16 = _Block_copy(&v18);
    id v17 = [v14 addObserverForName:UIApplicationDidEnterBackgroundNotification object:0 queue:v15 usingBlock:v16];
    _Block_release(v16);

    swift_beginAccess();
    swift_unknownObjectRetain();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((*v9 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    swift_endAccess();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    return 1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_10001F170(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v18 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = *(void *)a2;
    uint64_t v8 = *(void *)(a2 + 8);
    unsigned __int8 v9 = *(unsigned char *)(a2 + 16);
    sub_10003DA14(*(void *)a2, v8, v9);
    *(void *)a1 = v7;
    *(void *)(a1 + 8) = v8;
    *(unsigned char *)(a1 + 16) = v9;
    uint64_t v10 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = v10;
    uint64_t v11 = *(int *)(a3 + 24);
    unsigned __int8 v12 = (void *)(a1 + v11);
    id v13 = (const void *)(a2 + v11);
    uint64_t v14 = type metadata accessor for LocalizedStringResource();
    uint64_t v15 = *(void *)(v14 - 8);
    uint64_t v16 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48);
    swift_bridgeObjectRetain();
    if (v16(v13, 1, v14))
    {
      uint64_t v17 = sub_100046B9C(&qword_100163C30);
      memcpy(v12, v13, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    *(void *)(a1 + *(int *)(a3 + 28)) = *(void *)(a2 + *(int *)(a3 + 28));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_10001F324(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  v5(a2, a3);

  return swift_release();
}

uint64_t sub_10001F384()
{
  return sub_10001F38C();
}

uint64_t sub_10001F38C()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_10001F3E4();
    return swift_release();
  }
  return result;
}

uint64_t sub_10001F3E4()
{
  uint64_t v0 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v27 = *(void *)(v0 - 8);
  uint64_t v28 = v0;
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)&v24 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for DispatchQoS();
  uint64_t v25 = *(void *)(v3 - 8);
  uint64_t v26 = v3;
  __chkstk_darwin(v3);
  int v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for OSSignpostID();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  unsigned __int8 v12 = (char *)&v24 - v11;
  if (qword_10015F180 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for OSSignposter();
  sub_1000477B0(v13, (uint64_t)qword_10016B070);
  static OSSignpostID.exclusive.getter();
  uint64_t v14 = OSSignposter.logHandle.getter();
  os_signpost_type_t v15 = static os_signpost_type_t.event.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, v6);
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    uint64_t v24 = v5;
    uint64_t v17 = v16;
    *(_WORD *)uint64_t v16 = 0;
    os_signpost_id_t v18 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v14, v15, v18, "WiFiListItemProvider.updateWiFiState began", "", v17, 2u);
    int v5 = v24;
    swift_slowDealloc();

    uint64_t v19 = *(void (**)(char *, uint64_t))(v7 + 8);
    v19(v12, v6);
    v19(v10, v6);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  }
  if (qword_10015F128 != -1) {
    swift_once();
  }
  uint64_t v20 = swift_allocObject();
  swift_weakInit();
  aBlock[4] = sub_10002F054;
  aBlock[5] = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002CC68;
  aBlock[3] = &unk_1001543F8;
  long long v21 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  uint64_t v29 = _swiftEmptyArrayStorage;
  sub_10002F6A0();
  sub_100046B9C((uint64_t *)&unk_1001609C0);
  sub_10002F644();
  uint64_t v22 = v28;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v21);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v2, v22);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v5, v26);
  swift_release();
  return swift_release();
}

uint64_t sub_10001F880(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PrimarySettingsListItemIdentifier();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 1, v2))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
        uint64_t v3 = type metadata accessor for FLFollowUpInformation();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
        break;
      case 2u:
        uint64_t v4 = type metadata accessor for FLFollowUpInformation();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
        sub_100046B9C(&qword_10015F7F8);
        goto LABEL_5;
      case 3u:
      case 4u:
      case 5u:
LABEL_5:
        swift_bridgeObjectRelease();
        break;
      default:
        break;
    }
  }

  return swift_release();
}

uint64_t sub_10001F9DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SettingsApp();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10001FA40(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SettingsApp();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for SettingsApp()
{
  uint64_t result = qword_10015F470;
  if (!qword_10015F470) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10001FAF0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100046B9C(&qword_10015F410);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  unsigned __int8 v12 = (void *)(a1 + v8);
  uint64_t v13 = (void *)(a2 + v8);
  uint64_t v14 = v13[1];
  *unsigned __int8 v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = a3[7];
  uint64_t v16 = a3[8];
  uint64_t v17 = (void *)(a1 + v15);
  os_signpost_id_t v18 = (void *)(a2 + v15);
  uint64_t v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  uint64_t v20 = (void *)(a1 + v16);
  long long v21 = (void *)(a2 + v16);
  uint64_t v22 = v21[1];
  *uint64_t v20 = *v21;
  v20[1] = v22;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_10001FBF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v6;
  swift_retain();
  swift_release();
  if (a1 == a2)
  {
    type metadata accessor for PrimarySettingsListItemModel();
  }
  else
  {
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (void *)(a2 + v7);
    sub_10003DA8C(a1 + v7, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
    uint64_t v10 = type metadata accessor for PrimarySettingsListItemIdentifier();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
        uint64_t v11 = type metadata accessor for FLFollowUpInformation();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v8, v9, v11);
        goto LABEL_8;
      case 2u:
        uint64_t v12 = type metadata accessor for FLFollowUpInformation();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v8, v9, v12);
        uint64_t v13 = *(int *)(sub_100046B9C(&qword_10015F7F8) + 48);
        uint64_t v14 = (void *)((char *)v8 + v13);
        uint64_t v15 = (void *)((char *)v9 + v13);
        *uint64_t v14 = *v15;
        v14[1] = v15[1];
        swift_bridgeObjectRetain();
        goto LABEL_8;
      case 3u:
      case 4u:
      case 5u:
        void *v8 = *v9;
        v8[1] = v9[1];
        swift_bridgeObjectRetain();
LABEL_8:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
        break;
    }
    uint64_t v16 = *(int *)(type metadata accessor for PrimarySettingsListItemModel() + 20);
    uint64_t v17 = (uint64_t)v8 + v16;
    os_signpost_id_t v18 = (char *)v9 + v16;
    sub_10003DA8C(v17, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemViewType);
    type metadata accessor for PrimarySettingsListItemViewType();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v21 = type metadata accessor for FamilyRowStatus();
        (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v17, v18, v21);
        uint64_t v22 = *(int *)(type metadata accessor for PrimarySettingsListFamilyLinkModel() + 20);
        uint64_t v23 = (void *)(v17 + v22);
        uint64_t v24 = &v18[v22];
        void *v23 = *(void *)v24;
        v23[1] = *((void *)v24 + 1);
        swift_bridgeObjectRetain();
        break;
      case 2u:
        id v25 = *(id *)v18;
        uint64_t v26 = *((void *)v18 + 1);
        char v27 = v18[16];
        sub_100047728(*(id *)v18, v26, v27);
        *(void *)uint64_t v17 = v25;
        *(void *)(v17 + 8) = v26;
        *(unsigned char *)(v17 + 16) = v27;
        *(void *)(v17 + 24) = *((void *)v18 + 3);
        *(void *)(v17 + 32) = *((void *)v18 + 4);
        *(unsigned char *)(v17 + 40) = v18[40];
        *(unsigned char *)(v17 + 41) = v18[41];
        uint64_t v28 = *((void *)v18 + 6);
        uint64_t v29 = *((void *)v18 + 7);
        *(void *)(v17 + 48) = v28;
        *(void *)(v17 + 56) = v29;
        swift_bridgeObjectRetain();
        swift_retain();
        break;
      case 3u:
        *(void *)uint64_t v17 = *(void *)v18;
        *(void *)(v17 + 8) = *((void *)v18 + 1);
        *(unsigned char *)(v17 + 16) = v18[16];
        *(unsigned char *)(v17 + 17) = v18[17];
        swift_bridgeObjectRetain();
        break;
      case 4u:
        *(void *)uint64_t v17 = *(void *)v18;
        *(void *)(v17 + 8) = *((void *)v18 + 1);
        *(void *)(v17 + 16) = *((void *)v18 + 2);
        *(unsigned char *)(v17 + 24) = v18[24];
        *(unsigned char *)(v17 + 25) = v18[25];
        swift_bridgeObjectRetain();
        break;
      case 5u:
        id v30 = *(id *)v18;
        uint64_t v31 = *((void *)v18 + 1);
        char v32 = v18[16];
        sub_100047728(*(id *)v18, v31, v32);
        *(void *)uint64_t v17 = v30;
        *(void *)(v17 + 8) = v31;
        *(unsigned char *)(v17 + 16) = v32;
        *(void *)(v17 + 24) = *((void *)v18 + 3);
        *(void *)(v17 + 32) = *((void *)v18 + 4);
        *(unsigned char *)(v17 + 40) = v18[40];
        *(unsigned char *)(v17 + 41) = v18[41];
        swift_bridgeObjectRetain();
        break;
      case 6u:
        id v33 = *(id *)v18;
        uint64_t v34 = *((void *)v18 + 1);
        char v35 = v18[16];
        sub_100047728(*(id *)v18, v34, v35);
        *(void *)uint64_t v17 = v33;
        *(void *)(v17 + 8) = v34;
        *(unsigned char *)(v17 + 16) = v35;
        *(void *)(v17 + 24) = *((void *)v18 + 3);
        *(void *)(v17 + 32) = *((void *)v18 + 4);
        *(void *)(v17 + 40) = *((void *)v18 + 5);
        *(unsigned char *)(v17 + 48) = v18[48];
        *(unsigned char *)(v17 + 49) = v18[49];
        swift_bridgeObjectRetain();
        break;
      case 7u:
      case 8u:
        id v36 = *(id *)v18;
        uint64_t v37 = *((void *)v18 + 1);
        char v38 = v18[16];
        sub_100047728(*(id *)v18, v37, v38);
        *(void *)uint64_t v17 = v36;
        *(void *)(v17 + 8) = v37;
        *(unsigned char *)(v17 + 16) = v38;
        *(void *)(v17 + 24) = *((void *)v18 + 3);
        *(void *)(v17 + 32) = *((void *)v18 + 4);
        *(void *)(v17 + 40) = *((void *)v18 + 5);
        *(void *)(v17 + 48) = *((void *)v18 + 6);
        *(unsigned char *)(v17 + 56) = v18[56];
        *(unsigned char *)(v17 + 57) = v18[57];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 9u:
        int v39 = v18[16];
        if (v39 == 255)
        {
          long long v47 = *(_OWORD *)v18;
          *(unsigned char *)(v17 + 16) = v18[16];
          *(_OWORD *)uint64_t v17 = v47;
        }
        else
        {
          id v40 = *(id *)v18;
          uint64_t v41 = *((void *)v18 + 1);
          sub_100047728(*(id *)v18, v41, v18[16]);
          *(void *)uint64_t v17 = v40;
          *(void *)(v17 + 8) = v41;
          *(unsigned char *)(v17 + 16) = v39;
        }
        *(void *)(v17 + 24) = *((void *)v18 + 3);
        *(void *)(v17 + 32) = *((void *)v18 + 4);
        *(void *)(v17 + 40) = *((void *)v18 + 5);
        *(void *)(v17 + 48) = *((void *)v18 + 6);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 0xAu:
        int v42 = v18[16];
        if (v42 == 255)
        {
          long long v48 = *(_OWORD *)v18;
          *(unsigned char *)(v17 + 16) = v18[16];
          *(_OWORD *)uint64_t v17 = v48;
        }
        else
        {
          id v43 = *(id *)v18;
          uint64_t v44 = *((void *)v18 + 1);
          sub_100047728(*(id *)v18, v44, v18[16]);
          *(void *)uint64_t v17 = v43;
          *(void *)(v17 + 8) = v44;
          *(unsigned char *)(v17 + 16) = v42;
        }
        *(void *)(v17 + 24) = *((void *)v18 + 3);
        *(void *)(v17 + 32) = *((void *)v18 + 4);
        *(unsigned char *)(v17 + 40) = v18[40];
        swift_bridgeObjectRetain();
        break;
      default:
        if (*((void *)v18 + 1))
        {
          *(void *)uint64_t v17 = *(void *)v18;
          *(void *)(v17 + 8) = *((void *)v18 + 1);
          *(void *)(v17 + 16) = *((void *)v18 + 2);
          *(void *)(v17 + 24) = *((void *)v18 + 3);
          *(unsigned char *)(v17 + 32) = v18[32];
          uint64_t v19 = (void *)*((void *)v18 + 5);
          *(void *)(v17 + 40) = v19;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v20 = v19;
        }
        else
        {
          long long v45 = *(_OWORD *)v18;
          long long v46 = *((_OWORD *)v18 + 2);
          *(_OWORD *)(v17 + 16) = *((_OWORD *)v18 + 1);
          *(_OWORD *)(v17 + 32) = v46;
          *(_OWORD *)uint64_t v17 = v45;
        }
        *(unsigned char *)(v17 + 48) = v18[48];
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t assignWithCopy for PrimarySettingsListValueLinkModel(uint64_t a1, uint64_t a2)
{
  id v4 = *(id *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  char v6 = *(unsigned char *)(a2 + 16);
  sub_100047728(*(id *)a2, v5, v6);
  uint64_t v7 = *(void **)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  char v9 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v6;
  sub_100046F04(v7, v8, v9);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  return a1;
}

void sub_1000203C0()
{
  uint64_t v1 = type metadata accessor for OSSignpostID();
  uint64_t v100 = *(void *)(v1 - 8);
  uint64_t v2 = __chkstk_darwin(v1);
  v99 = (char *)&v96 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __chkstk_darwin(v2);
  v97 = (char *)&v96 - v5;
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v96 - v6;
  if (qword_10015F170 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  uint64_t v9 = sub_1000477B0(v8, (uint64_t)qword_10016B040);
  uint64_t v10 = v0;
  uint64_t v98 = v9;
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.default.getter();
  BOOL v13 = os_log_type_enabled(v11, v12);
  v101 = v10;
  if (v13)
  {
    uint64_t v14 = swift_slowAlloc();
    uint64_t aBlock = swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 136315394;
    swift_getObjectType();
    uint64_t v15 = _typeName(_:qualified:)();
    uint64_t v108 = sub_100042948(v15, v16, &aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    uint64_t v10 = v101;
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2080;
    uint64_t v108 = sub_100042948(0xD000000000000015, 0x80000001001288F0, &aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "Start (%s.%s)…", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v17 = v100;
  if (qword_10015F180 != -1) {
    swift_once();
  }
  uint64_t v18 = type metadata accessor for OSSignposter();
  sub_1000477B0(v18, (uint64_t)qword_10016B070);
  static OSSignpostID.exclusive.getter();
  uint64_t v19 = OSSignposter.logHandle.getter();
  os_signpost_type_t v20 = static os_signpost_type_t.event.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    uint64_t v21 = v97;
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v97, v7, v1);
    uint64_t v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v22 = 0;
    os_signpost_id_t v23 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v19, v20, v23, "PrimaryAppleAccountStatusObserver.updateAccountStatus began", "", v22, 2u);
    swift_slowDealloc();

    uint64_t v24 = *(void (**)(char *, uint64_t))(v17 + 8);
    v24(v7, v1);
    v24(v21, v1);
  }
  else
  {

    uint64_t v24 = *(void (**)(char *, uint64_t))(v17 + 8);
    v24(v7, v1);
  }
  id v25 = *(void **)&v10[OBJC_IVAR____TtC11SettingsApp33PrimaryAppleAccountStatusObserver_accountStore];
  uint64_t v26 = v99;
  if (v25)
  {
    id v27 = objc_allocWithZone((Class)AIDAServiceOwnersManager);
    uint64_t v28 = v25;
    id v29 = [v27 initWithAccountStore:v28];
    id v109 = [v29 accountForService:AIDAServiceTypeCloud];
    if (!v109)
    {
      id v30 = Logger.logObject.getter();
      os_log_type_t v31 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v30, v31))
      {
        char v32 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)char v32 = 0;
        _os_log_impl((void *)&_mh_execute_header, v30, v31, "No Apple Account found for iCloud, falling back to store account if available.", v32, 2u);
        swift_slowDealloc();
      }

      id v109 = [v29 accountForService:AIDAServiceTypeStore];
    }
    id v33 = Logger.logObject.getter();
    os_log_type_t v34 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v33, v34))
    {
      char v35 = (uint8_t *)swift_slowAlloc();
      uint64_t aBlock = swift_slowAlloc();
      *(_DWORD *)char v35 = 136315138;
      swift_beginAccess();
      if (v109)
      {
        id v36 = [v109 debugDescription];
        uint64_t v37 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v39 = v38;
      }
      else
      {
        unint64_t v39 = 0xE300000000000000;
        uint64_t v37 = 7104878;
      }
      uint64_t v108 = sub_100042948(v37, v39, &aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v33, v34, "Primary Apple Account is %s.", v35, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    uint64_t v46 = swift_allocObject();
    *(_OWORD *)(v46 + 16) = xmmword_10011FF70;
    long long v47 = (_OWORD *)(v46 + 16);
    *(_OWORD *)(v46 + 32) = 0u;
    *(_OWORD *)(v46 + 48) = 0u;
    swift_beginAccess();
    if (!v109)
    {
      uint64_t v67 = Logger.logObject.getter();
      os_log_type_t v68 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v67, v68))
      {
        uint64_t v69 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v69 = 0;
        _os_log_impl((void *)&_mh_execute_header, v67, v68, "No Primary Apple Account signed in.", v69, 2u);
        swift_slowDealloc();
      }

      swift_beginAccess();
      uint64_t v70 = *(void *)(v46 + 16);
      uint64_t v71 = *(void *)(v46 + 24);
      uint64_t v72 = *(void *)(v46 + 32);
      uint64_t v73 = *(void *)(v46 + 40);
      uint64_t v74 = *(void *)(v46 + 48);
      uint64_t v75 = *(void **)(v46 + 56);
      _OWORD *v47 = 0u;
      *(_OWORD *)(v46 + 32) = 0u;
      *(_OWORD *)(v46 + 48) = 0u;
      sub_100067890(v70, v71, v72, v73, v74, v75);
      id v45 = v101;
      sub_1000128F8((void *)v46, (uint64_t)v101);
      swift_release();

      goto LABEL_34;
    }
    id v48 = v109;
    id v49 = [v48 userFullName];
    if (v49)
    {
      uint64_t v50 = v49;
      uint64_t v51 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v53 = v52;

      id v54 = [v48 identifier];
      if (v54)
      {
        uint64_t v55 = v54;
        uint64_t aBlock = 0;
        uint64_t v103 = 0;
        static String._conditionallyBridgeFromObjectiveC(_:result:)();

        uint64_t v56 = v103;
        if (v103)
        {
          uint64_t v100 = v53;
          uint64_t v57 = aBlock;
          unsigned int v58 = [self isCloudSubscriber];
          uint64_t v59 = (char *)[objc_allocWithZone((Class)AAUIProfilePictureStore) initWithAppleAccount:v48 store:v28];
          uint64_t v60 = v28;
          if (!v59)
          {
            v97 = (char *)v57;
            uint64_t v87 = v51;
            v99 = v60;
            v88 = Logger.logObject.getter();
            os_log_type_t v89 = static os_log_type_t.default.getter();
            if (os_log_type_enabled(v88, v89))
            {
              v90 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)v90 = 0;
              _os_log_impl((void *)&_mh_execute_header, v88, v89, "Apple Account is signed in (no profile picture).", v90, 2u);
              swift_slowDealloc();
            }

            swift_beginAccess();
            uint64_t v91 = *(void *)(v46 + 16);
            uint64_t v92 = *(void *)(v46 + 24);
            uint64_t v93 = *(void *)(v46 + 32);
            uint64_t v94 = *(void *)(v46 + 40);
            uint64_t v98 = *(void *)(v46 + 48);
            v96 = *(void **)(v46 + 56);
            *(void *)(v46 + 16) = v87;
            v95 = v97;
            *(void *)(v46 + 24) = v100;
            *(void *)(v46 + 32) = v95;
            *(void *)(v46 + 40) = v56;
            *(void *)(v46 + 48) = v58;
            *(void *)(v46 + 56) = 0;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_100067890(v91, v92, v93, v94, v98, v96);
            id v45 = v101;
            sub_1000128F8((void *)v46, (uint64_t)v101);
            swift_release();

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_35;
          }
          uint64_t v28 = v59;
          uint64_t v61 = v60;
          uint64_t v62 = swift_allocObject();
          uint64_t v63 = v100;
          id v64 = v101;
          *(void *)(v62 + 16) = v46;
          *(void *)(v62 + 24) = v64;
          *(void *)(v62 + 32) = v51;
          *(void *)(v62 + 40) = v63;
          *(void *)(v62 + 48) = v57;
          *(void *)(v62 + 56) = v56;
          *(unsigned char *)(v62 + 64) = v58;
          v106 = sub_1000BA4BC;
          uint64_t v107 = v62;
          uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
          uint64_t v103 = 1107296256;
          v104 = sub_10000A0B4;
          v105 = &unk_100154820;
          os_signpost_id_t v65 = _Block_copy(&aBlock);
          id v66 = v64;
          swift_retain();
          id v45 = v64;
          swift_release();
          [v28 fetchProfilePictureFromCacheForAccountOwner:v65];

          _Block_release(v65);
          swift_release();
LABEL_34:

LABEL_35:
          goto LABEL_42;
        }
      }
      swift_bridgeObjectRelease();
      v76 = Logger.logObject.getter();
      os_log_type_t v77 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v76, v77))
      {
        v78 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v78 = 0;
        uint64_t v79 = "No identifier found, unable to sign in.";
LABEL_40:
        _os_log_impl((void *)&_mh_execute_header, v76, v77, v79, v78, 2u);
        swift_slowDealloc();
      }
    }
    else
    {
      v76 = Logger.logObject.getter();
      os_log_type_t v77 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v76, v77))
      {
        v78 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v78 = 0;
        uint64_t v79 = "No user full name found, unable to sign in.";
        goto LABEL_40;
      }
    }

    swift_beginAccess();
    uint64_t v80 = *(void *)(v46 + 16);
    uint64_t v81 = *(void *)(v46 + 24);
    uint64_t v82 = *(void *)(v46 + 32);
    uint64_t v83 = *(void *)(v46 + 40);
    uint64_t v84 = *(void *)(v46 + 48);
    uint64_t v85 = *(void **)(v46 + 56);
    _OWORD *v47 = 0u;
    *(_OWORD *)(v46 + 32) = 0u;
    *(_OWORD *)(v46 + 48) = 0u;
    sub_100067890(v80, v81, v82, v83, v84, v85);
    id v45 = v101;
    sub_1000128F8((void *)v46, (uint64_t)v101);
    swift_release();

    id v86 = v109;
    goto LABEL_42;
  }
  static OSSignpostID.exclusive.getter();
  id v40 = OSSignposter.logHandle.getter();
  os_signpost_type_t v41 = static os_signpost_type_t.event.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    int v42 = v97;
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v97, v26, v1);
    id v43 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v43 = 0;
    os_signpost_id_t v44 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v40, v41, v44, "PrimaryAppleAccountStatusObserver.updateAccountStatus bailed", "", v43, 2u);
    swift_slowDealloc();

    v24(v26, v1);
    v24(v42, v1);
  }
  else
  {

    v24(v26, v1);
  }
  id v45 = v101;
LABEL_42:
  sub_100017480(v45, 0xD000000000000015, 0x80000001001288F0);
}

uint64_t sub_100021068()
{
  uint64_t v0 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v27 = *(void *)(v0 - 8);
  uint64_t v28 = v0;
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)&v24 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for DispatchQoS();
  uint64_t v25 = *(void *)(v3 - 8);
  uint64_t v26 = v3;
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for OSSignpostID();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  os_log_type_t v12 = (char *)&v24 - v11;
  if (qword_10015F180 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for OSSignposter();
  sub_1000477B0(v13, (uint64_t)qword_10016B070);
  static OSSignpostID.exclusive.getter();
  uint64_t v14 = OSSignposter.logHandle.getter();
  os_signpost_type_t v15 = static os_signpost_type_t.event.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, v6);
    unint64_t v16 = (uint8_t *)swift_slowAlloc();
    uint64_t v24 = v5;
    uint64_t v17 = v16;
    *(_WORD *)unint64_t v16 = 0;
    os_signpost_id_t v18 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v14, v15, v18, "VPNListItemProvider.updateVPNState began", "", v17, 2u);
    uint64_t v5 = v24;
    swift_slowDealloc();

    uint64_t v19 = *(void (**)(char *, uint64_t))(v7 + 8);
    v19(v12, v6);
    v19(v10, v6);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  }
  if (qword_10015F128 != -1) {
    swift_once();
  }
  uint64_t v20 = swift_allocObject();
  swift_weakInit();
  aBlock[4] = sub_10002FD54;
  aBlock[5] = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002CC68;
  aBlock[3] = &unk_100154270;
  uint64_t v21 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  id v29 = _swiftEmptyArrayStorage;
  sub_10002F6A0();
  sub_100046B9C((uint64_t *)&unk_1001609C0);
  sub_10002F644();
  uint64_t v22 = v28;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v21);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v2, v22);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v5, v26);
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for PrimarySettingsListToggleModel(uint64_t a1, uint64_t a2)
{
  id v4 = *(id *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  char v6 = *(unsigned char *)(a2 + 16);
  sub_100047728(*(id *)a2, v5, v6);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  uint64_t v8 = *(void *)(a2 + 48);
  uint64_t v9 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v9;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_100021580(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  sub_100046B9C(&qword_10015F598);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for WithCurrentHostingControllerAction();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  uint64_t v6 = a1 + *(int *)(a2 + 40);
  uint64_t v7 = sub_100046B9C(&qword_100164200);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);

  return v8(v6, v7);
}

uint64_t sub_100021690(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v65 = a3;
  uint64_t v64 = a2;
  uint64_t v6 = sub_100046B9C((uint64_t *)&unk_100164160);
  __chkstk_darwin(v6 - 8);
  uint64_t v81 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = type metadata accessor for NSRunLoop.SchedulerTimeType.Stride();
  uint64_t v86 = *(void *)(v88 - 8);
  __chkstk_darwin(v88);
  v78 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = sub_100046B9C(&qword_10015F4C8);
  uint64_t v84 = *(void *)(v82 - 8);
  __chkstk_darwin(v82);
  os_log_type_t v77 = (char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = sub_100046B9C(&qword_10015F4D0);
  uint64_t v85 = *(void *)(v83 - 8);
  __chkstk_darwin(v83);
  uint64_t v79 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = sub_100046B9C(&qword_10015F4D8);
  uint64_t v89 = *(void *)(v87 - 8);
  __chkstk_darwin(v87);
  uint64_t v80 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100046B9C((uint64_t *)&unk_100163BC0);
  __chkstk_darwin(v12 - 8);
  uint64_t v71 = (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v68 = *(void *)(v69 - 8);
  __chkstk_darwin(v69);
  id v66 = (char *)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = (void *)type metadata accessor for OS_dispatch_queue.SchedulerTimeType.Stride();
  uint64_t v73 = *(v75 - 1);
  __chkstk_darwin(v75);
  uint64_t v63 = (char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = type metadata accessor for NSNotificationCenter.Publisher();
  uint64_t v72 = *(void *)(v70 - 8);
  __chkstk_darwin(v70);
  uint64_t v61 = (char *)&v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = sub_100046B9C(&qword_10015F4E0);
  uint64_t v76 = *(void *)(v74 - 8);
  __chkstk_darwin(v74);
  uint64_t v67 = (char *)&v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v18 = *(void *)(v60 - 8);
  __chkstk_darwin(v60);
  uint64_t v20 = (char *)&v59 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v21);
  uint64_t v22 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v22 - 8);
  uint64_t v23 = sub_100046B9C(&qword_10015F4E8);
  uint64_t v62 = v23;
  uint64_t v24 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v59 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92[3] = type metadata accessor for PrimarySettingsListModel();
  v92[4] = &off_100155288;
  v92[0] = a1;
  *(void *)(a4 + 16) = sub_10000DE0C();
  *(_WORD *)(a4 + 80) = 0;
  *(void *)(a4 + 112) = 0;
  *(void *)(a4 + 88) = 0;
  *(void *)(a4 + 96) = 0;
  *(void *)(a4 + 128) = [objc_allocWithZone((Class)LSObserver) init];
  *(void *)(a4 + 136) = [objc_allocWithZone((Class)type metadata accessor for SettingsAppLSObserver()) init];
  uint64_t v27 = a4 + OBJC_IVAR____TtC11SettingsApp26SettingsAppSearchViewModel__searchQuery;
  v90 = 0;
  unint64_t v91 = 0xE000000000000000;
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v24 + 32))(v27, v26, v23);
  uint64_t v28 = OBJC_IVAR____TtC11SettingsApp26SettingsAppSearchViewModel_linkSearchIndexer;
  id v29 = [self standardUserDefaults];
  type metadata accessor for LinkMetadataIndexer();
  swift_allocObject();
  *(void *)(a4 + v28) = LinkMetadataIndexer.init(with:)();
  *(void *)(a4 + OBJC_IVAR____TtC11SettingsApp26SettingsAppSearchViewModel__searchResults) = _swiftEmptyArrayStorage;
  *(void *)(a4 + OBJC_IVAR____TtC11SettingsApp26SettingsAppSearchViewModel_cancellables) = &_swiftEmptySetSingleton;
  *(unsigned char *)(a4 + OBJC_IVAR____TtC11SettingsApp26SettingsAppSearchViewModel____lazy_storage___oneTimeConfiguration) = 1;
  ObservationRegistrar.init()();
  sub_1000620F8((uint64_t)v92, a4 + 40);
  uint64_t v30 = v65;
  *(void *)(a4 + 24) = v64;
  *(void *)(a4 + 32) = v30;
  sub_10002E1D8(0, (unint64_t *)&qword_1001609D0);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  v90 = _swiftEmptyArrayStorage;
  sub_1000232CC((unint64_t *)&qword_10015F4F0, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_100046B9C(&qword_10015F4F8);
  sub_10004D2D4((unint64_t *)&qword_10015F500, &qword_10015F4F8);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v18 + 104))(v20, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v60);
  os_log_type_t v31 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  *(void *)(a4 + 104) = v31;
  dispatch_suspend(v31);
  *(void *)(a4 + 120) = &_swiftEmptyDictionarySingleton;
  char v32 = (uint64_t *)(*(void *)(a4 + 136) + OBJC_IVAR____TtC11SettingsApp21SettingsAppLSObserver_callback);
  uint64_t v33 = *v32;
  *char v32 = (uint64_t)sub_10006BD3C;
  v32[1] = a4;
  swift_retain();
  sub_10006BD44(v33);
  os_log_type_t v34 = *(void **)(a4 + 128);
  [v34 setDelegate:*(void *)(a4 + 136)];
  [v34 startObserving];
  id v35 = [self defaultCenter];
  id v36 = v61;
  NSNotificationCenter.publisher(for:object:)();

  uint64_t v37 = v63;
  static OS_dispatch_queue.SchedulerTimeType.Stride.milliseconds(_:)();
  uint64_t v38 = v68;
  unint64_t v39 = v66;
  uint64_t v40 = v69;
  (*(void (**)(char *, void, uint64_t))(v68 + 104))(v66, enum case for DispatchQoS.QoSClass.userInitiated(_:), v69);
  os_signpost_type_t v41 = (void *)static OS_dispatch_queue.global(qos:)();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v39, v40);
  v90 = v41;
  uint64_t v42 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  uint64_t v43 = (uint64_t)v71;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v71, 1, 1, v42);
  sub_1000232CC(&qword_100163CE0, (void (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Publisher);
  sub_100026EC8((unint64_t *)&qword_100163C00, (unint64_t *)&qword_1001609D0);
  os_signpost_id_t v44 = v67;
  id v45 = v37;
  uint64_t v46 = v70;
  Publisher.debounce<A>(for:scheduler:options:)();
  sub_10003F5D0(v43, (uint64_t *)&unk_100163BC0);

  (*(void (**)(char *, void *))(v73 + 8))(v45, v75);
  (*(void (**)(char *, uint64_t))(v72 + 8))(v36, v46);
  swift_allocObject();
  swift_weakInit();
  uint64_t v75 = &protocol conformance descriptor for Publishers.Debounce<A, B>;
  sub_10004D2D4(&qword_10015F508, &qword_10015F4E0);
  uint64_t v47 = v74;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v76 + 8))(v44, v47);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  swift_beginAccess();
  id v48 = v77;
  Published.projectedValue.getter();
  swift_endAccess();
  id v49 = v78;
  static NSRunLoop.SchedulerTimeType.Stride.milliseconds(_:)();
  v90 = [self mainRunLoop];
  uint64_t v50 = type metadata accessor for NSRunLoop.SchedulerOptions();
  uint64_t v51 = (uint64_t)v81;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v81, 1, 1, v50);
  sub_10002E1D8(0, &qword_10015F510);
  sub_10004D2D4(&qword_10015F518, &qword_10015F4C8);
  sub_100026EC8((unint64_t *)&qword_10015F520, &qword_10015F510);
  uint64_t v52 = v79;
  uint64_t v53 = v49;
  uint64_t v54 = v82;
  Publisher.debounce<A>(for:scheduler:options:)();
  sub_10003F5D0(v51, (uint64_t *)&unk_100164160);

  (*(void (**)(char *, uint64_t))(v86 + 8))(v53, v88);
  (*(void (**)(char *, uint64_t))(v84 + 8))(v48, v54);
  sub_10004D2D4(&qword_10015F528, &qword_10015F4D0);
  uint64_t v55 = v80;
  uint64_t v56 = v83;
  Publisher<>.removeDuplicates()();
  (*(void (**)(char *, uint64_t))(v85 + 8))(v52, v56);
  swift_allocObject();
  swift_weakInit();
  sub_10004D2D4(&qword_10015F530, &qword_10015F4D8);
  uint64_t v57 = v87;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v89 + 8))(v55, v57);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  sub_100042A1C((uint64_t)v92);
  return a4;
}

uint64_t sub_100022604@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v45 = a1;
  uint64_t v3 = type metadata accessor for SettingsApp();
  uint64_t v4 = v3 - 8;
  uint64_t v5 = *(void *)(v3 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v3);
  uint64_t v42 = sub_100046B9C(&qword_10015F538);
  uint64_t v44 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_100046B9C(&qword_10015F540);
  uint64_t v9 = *(void *)(v43 - 8);
  uint64_t v10 = __chkstk_darwin(v43);
  os_signpost_type_t v41 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v37 - v12;
  sub_10001FA40(v2, (uint64_t)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v14 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v15 = swift_allocObject();
  sub_10001F9DC((uint64_t)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v15 + v14);
  uint64_t v39 = sub_100046B9C(&qword_10015F548);
  uint64_t v38 = sub_10004D318(&qword_10015F550);
  uint64_t v16 = type metadata accessor for SettingsZeroKeywordNavigationItemsProvider();
  uint64_t v17 = sub_10004D318(&qword_10015F558);
  uint64_t v18 = type metadata accessor for SettingsAppSearchViewModel();
  uint64_t v19 = sub_10004D318(&qword_10015F560);
  uint64_t v20 = type metadata accessor for SettingsNavigationSplitView();
  uint64_t v21 = sub_1000232CC(&qword_10015F568, (void (*)(uint64_t))type metadata accessor for SettingsNavigationSplitView);
  uint64_t v46 = v20;
  uint64_t v47 = v21;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v46 = v19;
  uint64_t v47 = OpaqueTypeConformance2;
  uint64_t v23 = swift_getOpaqueTypeConformance2();
  uint64_t v24 = sub_1000232CC(&qword_10015F570, (void (*)(uint64_t))type metadata accessor for SettingsAppSearchViewModel);
  uint64_t v46 = v17;
  uint64_t v47 = v18;
  uint64_t v48 = v23;
  uint64_t v49 = v24;
  uint64_t v25 = swift_getOpaqueTypeConformance2();
  uint64_t v26 = sub_1000232CC(&qword_10015F578, (void (*)(uint64_t))&type metadata accessor for SettingsZeroKeywordNavigationItemsProvider);
  uint64_t v46 = v38;
  uint64_t v47 = v16;
  uint64_t v48 = v25;
  uint64_t v49 = v26;
  swift_getOpaqueTypeConformance2();
  WindowGroup.init(id:title:lazyContent:)();
  uint64_t v27 = (uint64_t *)(v40 + *(int *)(v4 + 40));
  uint64_t v29 = *v27;
  uint64_t v28 = v27[1];
  uint64_t v46 = v29;
  uint64_t v47 = v28;
  sub_100046B9C(&qword_10015F580);
  State.wrappedValue.getter();
  uint64_t v30 = type metadata accessor for SettingsAppModel();
  uint64_t v31 = sub_10004D2D4(&qword_10015F588, &qword_10015F538);
  uint64_t v32 = sub_1000232CC(&qword_10015F590, (void (*)(uint64_t))type metadata accessor for SettingsAppModel);
  os_log_type_t v34 = v41;
  uint64_t v33 = v42;
  Scene.environment<A>(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v8, v33);
  uint64_t v35 = v43;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v13, v34, v43);
  uint64_t v46 = v33;
  uint64_t v47 = v30;
  uint64_t v48 = v31;
  uint64_t v49 = v32;
  swift_getOpaqueTypeConformance2();
  static SceneBuilder.buildBlock<A>(_:)();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v13, v35);
}

uint64_t sub_100022B64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v54 = a1;
  uint64_t v67 = a2;
  uint64_t v3 = type metadata accessor for SettingsApp();
  uint64_t v59 = *(void *)(v3 - 8);
  uint64_t v4 = *(void *)(v59 + 64);
  uint64_t v5 = v3 - 8;
  uint64_t v56 = v3 - 8;
  uint64_t v58 = v4;
  __chkstk_darwin(v3 - 8);
  uint64_t v57 = (uint64_t)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (int *)type metadata accessor for SettingsNavigationSplitView();
  __chkstk_darwin(v7);
  uint64_t v9 = (uint64_t *)((char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = sub_100046B9C(&qword_10015F560);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v61 = v10;
  uint64_t v62 = v11;
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100046B9C(&qword_10015F558);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v63 = v14;
  uint64_t v64 = v15;
  __chkstk_darwin(v14);
  uint64_t v55 = (char *)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100046B9C(&qword_10015F550);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v65 = v17;
  uint64_t v66 = v18;
  __chkstk_darwin(v17);
  uint64_t v60 = (char *)&v52 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = (int **)(a1 + *(int *)(v5 + 40));
  uint64_t v21 = (uint64_t)v20[1];
  uint64_t v68 = *v20;
  uint64_t v69 = v21;
  sub_100046B9C(&qword_10015F580);
  State.wrappedValue.getter();
  swift_retain();
  swift_release();
  *uint64_t v9 = swift_getKeyPath();
  v9[1] = swift_getKeyPath();
  uint64_t v22 = (uint64_t *)((char *)v9 + v7[6]);
  *uint64_t v22 = swift_getKeyPath();
  sub_100046B9C(&qword_10015F598);
  swift_storeEnumTagMultiPayload();
  uint64_t v23 = (char *)v9 + v7[7];
  type metadata accessor for SettingsAppModel();
  sub_1000232CC(&qword_10015F590, (void (*)(uint64_t))type metadata accessor for SettingsAppModel);
  *(void *)uint64_t v23 = Environment.init<A>(_:)();
  v23[8] = v24 & 1;
  uint64_t v25 = (char *)v9 + v7[8];
  uint64_t v26 = type metadata accessor for SettingsAppSearchViewModel();
  uint64_t v53 = sub_1000232CC(&qword_10015F570, (void (*)(uint64_t))type metadata accessor for SettingsAppSearchViewModel);
  *(void *)uint64_t v25 = Environment.init<A>(_:)();
  v25[8] = v27 & 1;
  *(uint64_t *)((char *)v9 + v7[9]) = 0;
  type metadata accessor for SettingsAppNavigationModel();
  sub_1000232CC((unint64_t *)&qword_10015F5A0, (void (*)(uint64_t))type metadata accessor for SettingsAppNavigationModel);
  Bindable<A>.init(wrappedValue:)();
  uint64_t v28 = (uint64_t)v20[1];
  uint64_t v68 = *v20;
  uint64_t v69 = v28;
  State.wrappedValue.getter();
  uint64_t v29 = sub_1000232CC(&qword_10015F568, (void (*)(uint64_t))type metadata accessor for SettingsNavigationSplitView);
  View.onOpenURL(perform:)();
  swift_release();
  sub_100068AE8((uint64_t)v9);
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v30 = v54;
  uint64_t v31 = v57;
  sub_10001FA40(v54, v57);
  unint64_t v32 = (*(unsigned __int8 *)(v59 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
  uint64_t v33 = swift_allocObject();
  sub_10001F9DC(v31, v33 + v32);
  uint64_t v68 = v7;
  uint64_t v69 = v29;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v35 = v55;
  id v36 = (int *)v61;
  View.onContinueUserActivity(_:perform:)();
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(char *, int *))(v62 + 8))(v13, v36);
  uint64_t v37 = v56;
  uint64_t v38 = (int **)(v30 + *(int *)(v56 + 32));
  uint64_t v39 = v30;
  os_signpost_type_t v41 = *v38;
  uint64_t v40 = (uint64_t)v38[1];
  uint64_t v68 = v41;
  uint64_t v69 = v40;
  sub_100046B9C(&qword_10015F5A8);
  State.wrappedValue.getter();
  uint64_t v68 = v36;
  uint64_t v69 = OpaqueTypeConformance2;
  uint64_t v42 = swift_getOpaqueTypeConformance2();
  uint64_t v43 = v60;
  uint64_t v44 = (int *)v63;
  uint64_t v45 = v26;
  uint64_t v46 = v53;
  View.environment<A>(_:)();
  swift_release();
  (*(void (**)(char *, int *))(v64 + 8))(v35, v44);
  uint64_t v47 = (int **)(v39 + *(int *)(v37 + 36));
  uint64_t v49 = *v47;
  uint64_t v48 = (uint64_t)v47[1];
  uint64_t v68 = v49;
  uint64_t v69 = v48;
  sub_100046B9C(&qword_10015F5B0);
  State.wrappedValue.getter();
  type metadata accessor for SettingsZeroKeywordNavigationItemsProvider();
  uint64_t v68 = v44;
  uint64_t v69 = v45;
  uint64_t v70 = v42;
  uint64_t v71 = v46;
  swift_getOpaqueTypeConformance2();
  sub_1000232CC(&qword_10015F578, (void (*)(uint64_t))&type metadata accessor for SettingsZeroKeywordNavigationItemsProvider);
  uint64_t v50 = v65;
  View.environment<A>(_:)();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v66 + 8))(v43, v50);
}

uint64_t sub_1000232CC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

objc_method *sub_100023314()
{
  uint64_t v1 = type metadata accessor for IntentDonationSettingsNavigationEventResponder();
  uint64_t v45 = *(void *)(v1 - 8);
  uint64_t v46 = v1;
  __chkstk_darwin(v1);
  uint64_t v44 = (char *)&v44 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v44 - v8;
  uint64_t v47 = v0;
  ObservationRegistrar.init()();
  uint64_t v10 = self;
  id v11 = [v10 appearance];
  uint64_t v12 = self;
  id v13 = [v12 labelColor];
  [v11 setTextColor:v13];

  id v14 = [v10 appearance];
  id v15 = [v12 secondaryLabelColor];
  [v14 setAltTextColor:v15];

  id v16 = [v10 appearance];
  id v17 = [v12 placeholderTextColor];
  [v16 setEditablePlaceholderTextColor:v17];

  id v18 = [v10 appearance];
  id v19 = [v12 labelColor];
  [v18 setEditableTextColor:v19];

  id v20 = [v10 appearance];
  id v21 = [v12 linkColor];
  [v20 setButtonTextColor:v21];

  id v22 = [v10 appearance];
  id v23 = [v12 linkColor];
  [v22 setFooterHyperlinkColor:v23];

  id v24 = [v10 appearance];
  id v25 = [v12 systemGroupedBackgroundColor];
  [v24 setBackgroundColor:v25];

  id v26 = [v10 appearance];
  id v27 = [v12 secondarySystemGroupedBackgroundColor];
  [v26 setForegroundColor:v27];

  id v28 = [v10 appearance];
  id v29 = [v12 separatorColor];
  [v28 setSeparatorColor:v29];

  type metadata accessor for PreferencesListControllerNavigationCoordinator();
  [v10 registerDefaultNavigationCoordinatorClass:swift_getObjCClassFromMetadata()];
  uint64_t v30 = self;
  id v31 = [v30 standardUserDefaults];
  static URL.libraryDirectory.getter();
  URL.appendingPathComponent(_:)();
  unint64_t v32 = *(void (**)(char *, uint64_t))(v4 + 8);
  v32(v7, v3);
  URL.path.getter();
  v32(v9, v3);
  NSString v33 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v31 setObject:v33 forKey:WebStorageDirectoryDefaultsKey];

  id v34 = [v30 standardUserDefaults];
  static URL.libraryDirectory.getter();
  URL.appendingPathComponent(_:)();
  v32(v7, v3);
  URL.path.getter();
  v32(v9, v3);
  NSString v35 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v34 setObject:v35 forKey:WebDatabaseDirectoryDefaultsKey];

  aBlock[4] = variable initialization expression of RestrictionsManager._blockedAppBundleIDs;
  aBlock[5] = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10006C100;
  aBlock[3] = &unk_100151530;
  id v36 = _Block_copy(aBlock);
  uint64_t v37 = imp_implementationWithBlock(v36);
  sub_10002E1D8(0, &qword_10015F670);
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  class_addMethod(ObjCClassFromMetadata, "rootController", v37, 0);
  _Block_release(v36);
  sub_10002E1D8(0, &qword_10015F678);
  uint64_t v39 = (objc_class *)swift_getObjCClassFromMetadata();
  InstanceMethod = class_getInstanceMethod(v39, "setNavigationBarHidden:animated:");
  uint64_t result = class_getInstanceMethod(v39, "sa_setNavigationBarHidden:animated:");
  if (InstanceMethod)
  {
    if (result)
    {
      method_exchangeImplementations(InstanceMethod, result);
      type metadata accessor for SettingsEventCenter();
      static SettingsEventCenter.default.getter();
      static IntentDonationSettingsNavigationEventResponder.defaultPlatformSettingsHostApplicationBundleIdentifier.getter();
      uint64_t v42 = v44;
      IntentDonationSettingsNavigationEventResponder.init(settingsHostApplicationBundleIdentifier:)();
      uint64_t v43 = v46;
      SettingsEventCenter.addResponder<A>(_:)();
      swift_release();
      (*(void (**)(char *, uint64_t))(v45 + 8))(v42, v43);
      return (objc_method *)v47;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_100023A78(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[2];
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  if ((sub_1000245A8(*a1, *a2) & 1) == 0 || (sub_100075690(v2, v4) & 1) == 0) {
    return 0;
  }

  return sub_100076288(v3, v5);
}

uint64_t sub_100023AF8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for FLFollowUpGroupSectionElement();
  uint64_t v81 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v79 = &v67[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v80 = sub_100046B9C(&qword_100162AD0);
  uint64_t v6 = __chkstk_darwin(v80);
  uint64_t v76 = &v67[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = __chkstk_darwin(v6);
  v78 = &v67[-v9];
  __chkstk_darwin(v8);
  id v11 = &v67[-v10];
  uint64_t v12 = sub_100046B9C(&qword_1001629E0);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v74 = &v67[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = __chkstk_darwin(v13);
  os_log_type_t v77 = &v67[-v16];
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v75 = &v67[-v18];
  uint64_t v19 = __chkstk_darwin(v17);
  id v21 = &v67[-v20];
  uint64_t v22 = __chkstk_darwin(v19);
  id v24 = &v67[-v23];
  uint64_t v25 = __chkstk_darwin(v22);
  id v27 = &v67[-v26];
  uint64_t v28 = __chkstk_darwin(v25);
  uint64_t v30 = &v67[-v29];
  uint64_t v31 = __chkstk_darwin(v28);
  NSString v33 = &v67[-v32];
  __chkstk_darwin(v31);
  NSString v35 = &v67[-v34];
  if ((sub_10003B750(*a1, *a2) & 1) == 0) {
    goto LABEL_45;
  }
  uint64_t v36 = a1[2];
  uint64_t v37 = a2[2];
  if (v36)
  {
    if (!v37) {
      goto LABEL_45;
    }
    if (a1[1] != a2[1] || v36 != v37)
    {
      char v38 = _stringCompareWithSmolCheck(_:_:expecting:)();
      char v39 = 0;
      if ((v38 & 1) == 0) {
        return v39 & 1;
      }
    }
  }
  else if (v37)
  {
    goto LABEL_45;
  }
  if ((sub_10003B750(a1[3], a2[3]) & 1) == 0) {
    goto LABEL_45;
  }
  uint64_t v40 = a1[5];
  uint64_t v41 = a2[5];
  if (!v40)
  {
    if (v41) {
      goto LABEL_45;
    }
    goto LABEL_17;
  }
  if (!v41) {
    goto LABEL_45;
  }
  if (a1[4] == a2[4] && v40 == v41 || (v42 = _stringCompareWithSmolCheck(_:_:expecting:)(), char v39 = 0, (v42 & 1) != 0))
  {
LABEL_17:
    if ((sub_1000245A8(a1[6], a2[6]) & 1) == 0
      || (sub_10003B750(a1[7], a2[7]) & 1) == 0
      || (sub_1000245A8(a1[8], a2[8]) & 1) == 0)
    {
      goto LABEL_45;
    }
    uint64_t v72 = (int *)type metadata accessor for FollowUpInformationProviderSnapshot();
    sub_10003F75C((uint64_t)a1 + v72[11], (uint64_t)v35, &qword_1001629E0);
    sub_10003F75C((uint64_t)a2 + v72[11], (uint64_t)v33, &qword_1001629E0);
    uint64_t v73 = &v11[*(int *)(v80 + 48)];
    sub_10003F75C((uint64_t)v35, (uint64_t)v11, &qword_1001629E0);
    sub_10003F75C((uint64_t)v33, (uint64_t)v73, &qword_1001629E0);
    uint64_t v70 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v81 + 48);
    uint64_t v71 = v81 + 48;
    if (v70(v11, 1, v4) == 1)
    {
      sub_10003F5D0((uint64_t)v33, &qword_1001629E0);
      sub_10003F5D0((uint64_t)v35, &qword_1001629E0);
      if (v70(v73, 1, v4) == 1)
      {
        sub_10003F5D0((uint64_t)v11, &qword_1001629E0);
LABEL_28:
        uint64_t v45 = v72;
        if ((sub_10003B750(*(uint64_t *)((char *)a1 + v72[12]), *(uint64_t *)((char *)a2 + v72[12])) & 1) == 0) {
          goto LABEL_45;
        }
        sub_10003F75C((uint64_t)a1 + v45[13], (uint64_t)v27, &qword_1001629E0);
        sub_10003F75C((uint64_t)a2 + v45[13], (uint64_t)v24, &qword_1001629E0);
        uint64_t v46 = v78;
        uint64_t v47 = &v78[*(int *)(v80 + 48)];
        sub_10003F75C((uint64_t)v27, (uint64_t)v78, &qword_1001629E0);
        uint64_t v73 = v47;
        sub_10003F75C((uint64_t)v24, (uint64_t)v47, &qword_1001629E0);
        uint64_t v48 = v70;
        if (v70(v46, 1, v4) == 1)
        {
          sub_10003F5D0((uint64_t)v24, &qword_1001629E0);
          sub_10003F5D0((uint64_t)v27, &qword_1001629E0);
          if (v48(v73, 1, v4) == 1)
          {
            sub_10003F5D0((uint64_t)v46, &qword_1001629E0);
LABEL_36:
            if ((sub_10003B750(*(uint64_t *)((char *)a1 + v45[14]), *(uint64_t *)((char *)a2 + v45[14])) & 1) == 0) {
              goto LABEL_45;
            }
            uint64_t v54 = (uint64_t)a1 + v45[15];
            uint64_t v55 = v45;
            uint64_t v56 = v75;
            sub_10003F75C(v54, (uint64_t)v75, &qword_1001629E0);
            uint64_t v57 = v77;
            sub_10003F75C((uint64_t)a2 + v55[15], (uint64_t)v77, &qword_1001629E0);
            uint64_t v58 = v76;
            uint64_t v59 = (uint64_t)&v76[*(int *)(v80 + 48)];
            sub_10003F75C((uint64_t)v56, (uint64_t)v76, &qword_1001629E0);
            sub_10003F75C((uint64_t)v57, v59, &qword_1001629E0);
            uint64_t v60 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v70;
            if (v70(v58, 1, v4) == 1)
            {
              sub_10003F5D0((uint64_t)v77, &qword_1001629E0);
              sub_10003F5D0((uint64_t)v56, &qword_1001629E0);
              if (v60(v59, 1, v4) == 1)
              {
                sub_10003F5D0((uint64_t)v58, &qword_1001629E0);
LABEL_44:
                char v39 = sub_10003B750(*(uint64_t *)((char *)a1 + v72[16]), *(uint64_t *)((char *)a2 + v72[16]));
                return v39 & 1;
              }
              goto LABEL_42;
            }
            uint64_t v61 = v74;
            sub_10003F75C((uint64_t)v58, (uint64_t)v74, &qword_1001629E0);
            if (v60(v59, 1, v4) == 1)
            {
              sub_10003F5D0((uint64_t)v77, &qword_1001629E0);
              sub_10003F5D0((uint64_t)v56, &qword_1001629E0);
              (*(void (**)(unsigned char *, uint64_t))(v81 + 8))(v61, v4);
LABEL_42:
              uint64_t v43 = (uint64_t)v58;
              goto LABEL_26;
            }
            uint64_t v62 = v81;
            uint64_t v63 = v79;
            (*(void (**)(unsigned char *, uint64_t, uint64_t))(v81 + 32))(v79, v59, v4);
            sub_1000B7D90(&qword_100162AD8, (void (*)(uint64_t))&type metadata accessor for FLFollowUpGroupSectionElement);
            char v64 = dispatch thunk of static Equatable.== infix(_:_:)();
            uint64_t v65 = *(void (**)(unsigned char *, uint64_t))(v62 + 8);
            v65(v63, v4);
            sub_10003F5D0((uint64_t)v77, &qword_1001629E0);
            sub_10003F5D0((uint64_t)v56, &qword_1001629E0);
            v65(v61, v4);
            sub_10003F5D0((uint64_t)v58, &qword_1001629E0);
            if (v64) {
              goto LABEL_44;
            }
LABEL_45:
            char v39 = 0;
            return v39 & 1;
          }
        }
        else
        {
          sub_10003F75C((uint64_t)v46, (uint64_t)v21, &qword_1001629E0);
          uint64_t v49 = (void (*)(void, void))v73;
          if (v48(v73, 1, v4) != 1)
          {
            uint64_t v50 = v81;
            uint64_t v51 = v79;
            (*(void (**)(unsigned char *, void (*)(void, void), uint64_t))(v81 + 32))(v79, v49, v4);
            sub_1000B7D90(&qword_100162AD8, (void (*)(uint64_t))&type metadata accessor for FLFollowUpGroupSectionElement);
            char v52 = dispatch thunk of static Equatable.== infix(_:_:)();
            uint64_t v53 = *(void (**)(unsigned char *, uint64_t))(v50 + 8);
            v53(v51, v4);
            sub_10003F5D0((uint64_t)v24, &qword_1001629E0);
            sub_10003F5D0((uint64_t)v27, &qword_1001629E0);
            v53(v21, v4);
            uint64_t v45 = v72;
            sub_10003F5D0((uint64_t)v78, &qword_1001629E0);
            if ((v52 & 1) == 0) {
              goto LABEL_45;
            }
            goto LABEL_36;
          }
          sub_10003F5D0((uint64_t)v24, &qword_1001629E0);
          sub_10003F5D0((uint64_t)v27, &qword_1001629E0);
          (*(void (**)(unsigned char *, uint64_t))(v81 + 8))(v21, v4);
        }
        uint64_t v43 = (uint64_t)v46;
LABEL_26:
        sub_10003F5D0(v43, &qword_100162AD0);
        goto LABEL_45;
      }
    }
    else
    {
      sub_10003F75C((uint64_t)v11, (uint64_t)v30, &qword_1001629E0);
      if (v70(v73, 1, v4) != 1)
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v81 + 32))(v79, v73, v4);
        sub_1000B7D90(&qword_100162AD8, (void (*)(uint64_t))&type metadata accessor for FLFollowUpGroupSectionElement);
        int v68 = dispatch thunk of static Equatable.== infix(_:_:)();
        uint64_t v44 = *(unsigned char **)(v81 + 8);
        uint64_t v69 = v81 + 8;
        uint64_t v73 = v44;
        ((void (*)(unsigned char *, uint64_t))v44)(v79, v4);
        sub_10003F5D0((uint64_t)v33, &qword_1001629E0);
        sub_10003F5D0((uint64_t)v35, &qword_1001629E0);
        ((void (*)(unsigned char *, uint64_t))v73)(v30, v4);
        sub_10003F5D0((uint64_t)v11, &qword_1001629E0);
        if ((v68 & 1) == 0) {
          goto LABEL_45;
        }
        goto LABEL_28;
      }
      sub_10003F5D0((uint64_t)v33, &qword_1001629E0);
      sub_10003F5D0((uint64_t)v35, &qword_1001629E0);
      (*(void (**)(unsigned char *, uint64_t))(v81 + 8))(v30, v4);
    }
    uint64_t v43 = (uint64_t)v11;
    goto LABEL_26;
  }
  return v39 & 1;
}

uint64_t sub_1000245A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PrimarySettingsListItemModel();
  uint64_t v77 = *(void *)(v4 - 8);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v63 - v8;
  uint64_t v10 = type metadata accessor for LocalizedStringResource();
  uint64_t v78 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100046B9C(&qword_100163C30);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100046B9C(&qword_10015FA80);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for PrimarySettingsListSectionModel();
  uint64_t v20 = __chkstk_darwin(v19);
  uint64_t v21 = __chkstk_darwin(v20);
  uint64_t v25 = *(void *)(a1 + 16);
  if (v25 != *(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v26 = v9;
  uint64_t v74 = v16;
  uint64_t v75 = v18;
  uint64_t v73 = v15;
  if (!v25 || a1 == a2) {
    return 1;
  }
  uint64_t v76 = v21;
  uint64_t v72 = v10;
  uint64_t v79 = v4;
  uint64_t v27 = 0;
  unint64_t v28 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  uint64_t v29 = a1 + v28;
  uint64_t v30 = a2 + v28;
  uint64_t v31 = *(void *)(v22 + 72);
  uint64_t v70 = v25;
  uint64_t v71 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v78 + 48);
  char v64 = (void (**)(char *, uint64_t, uint64_t))(v78 + 32);
  uint64_t v65 = v12;
  uint64_t v66 = (void (**)(uint64_t, uint64_t))(v78 + 8);
  uint64_t v67 = v31;
  uint64_t v32 = v24;
  NSString v33 = (char *)&v63 - v23;
  uint64_t v68 = v30;
  uint64_t v69 = v29;
  uint64_t v34 = (uint64_t)v7;
  uint64_t v35 = (uint64_t)v26;
  uint64_t v80 = v24;
  while (1)
  {
    uint64_t v37 = v31 * v27;
    sub_10003D7B0(v29 + v31 * v27, (uint64_t)v33, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListSectionModel);
    sub_10003D7B0(v30 + v37, v32, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListSectionModel);
    uint64_t v39 = *(void *)v33;
    uint64_t v38 = *((void *)v33 + 1);
    int v40 = v33[16];
    uint64_t v41 = *(void *)v32;
    uint64_t v42 = *(void *)(v32 + 8);
    int v43 = *(unsigned __int8 *)(v32 + 16);
    uint64_t v78 = v27;
    if (!v40)
    {
      if (v43) {
        goto LABEL_91;
      }
LABEL_12:
      if ((v39 != v41 || v38 != v42) && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
        goto LABEL_91;
      }
      goto LABEL_68;
    }
    if (v40 == 1)
    {
      if (v43 != 1) {
        goto LABEL_91;
      }
      goto LABEL_12;
    }
    switch(v39)
    {
      case 1:
        if (v43 != 2 || v41 != 1) {
          goto LABEL_91;
        }
        break;
      case 2:
        if (v43 != 2 || v41 != 2) {
          goto LABEL_91;
        }
        break;
      case 3:
        if (v43 != 2 || v41 != 3) {
          goto LABEL_91;
        }
        break;
      case 4:
        if (v43 != 2 || v41 != 4) {
          goto LABEL_91;
        }
        break;
      case 5:
        if (v43 != 2 || v41 != 5) {
          goto LABEL_91;
        }
        break;
      case 6:
        if (v43 != 2 || v41 != 6) {
          goto LABEL_91;
        }
        break;
      case 7:
        if (v43 != 2 || v41 != 7) {
          goto LABEL_91;
        }
        break;
      case 8:
        if (v43 != 2 || v41 != 8) {
          goto LABEL_91;
        }
        break;
      case 9:
        if (v43 != 2 || v41 != 9) {
          goto LABEL_91;
        }
        break;
      case 10:
        if (v43 != 2 || v41 != 10) {
          goto LABEL_91;
        }
        break;
      case 11:
        if (v43 != 2 || v41 != 11) {
          goto LABEL_91;
        }
        break;
      case 12:
        if (v43 != 2 || v41 != 12) {
          goto LABEL_91;
        }
        break;
      case 13:
        if (v43 != 2 || v41 != 13) {
          goto LABEL_91;
        }
        break;
      case 14:
        if (v43 != 2 || v41 != 14) {
          goto LABEL_91;
        }
        break;
      case 15:
        if (v43 != 2 || v41 != 15) {
          goto LABEL_91;
        }
        break;
      case 16:
        if (v43 != 2 || v41 != 16) {
          goto LABEL_91;
        }
        break;
      default:
        if (v43 != 2 || v42 | v41) {
          goto LABEL_91;
        }
        goto LABEL_68;
    }
    if (v42) {
      goto LABEL_91;
    }
LABEL_68:
    uint64_t v44 = *((void *)v33 + 4);
    uint64_t v45 = *(void *)(v80 + 32);
    if (v44)
    {
      if (!v45
        || (*((void *)v33 + 3) != *(void *)(v80 + 24) || v44 != v45)
        && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
      {
        goto LABEL_91;
      }
    }
    else if (v45)
    {
      goto LABEL_91;
    }
    uint64_t v46 = (uint64_t)v75;
    uint64_t v47 = *(int *)(v76 + 24);
    uint64_t v48 = v80 + v47;
    uint64_t v49 = (uint64_t)&v75[*(int *)(v74 + 48)];
    sub_10003F75C((uint64_t)&v33[v47], (uint64_t)v75, &qword_100163C30);
    sub_10003F75C(v48, v49, &qword_100163C30);
    uint64_t v50 = v72;
    uint64_t v51 = *v71;
    if ((*v71)(v46, 1, v72) == 1)
    {
      if (v51(v49, 1, v50) != 1) {
        goto LABEL_90;
      }
      sub_10003F5D0(v46, &qword_100163C30);
    }
    else
    {
      uint64_t v52 = (uint64_t)v73;
      sub_10003F75C(v46, (uint64_t)v73, &qword_100163C30);
      if (v51(v49, 1, v50) == 1)
      {
        (*v66)(v52, v50);
LABEL_90:
        sub_10003F5D0(v46, &qword_10015FA80);
        goto LABEL_91;
      }
      uint64_t v53 = v65;
      (*v64)(v65, v49, v50);
      sub_1000B7D90((unint64_t *)&qword_10015FA88, (void (*)(uint64_t))&type metadata accessor for LocalizedStringResource);
      char v54 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v55 = *v66;
      (*v66)((uint64_t)v53, v50);
      v55(v52, v50);
      sub_10003F5D0(v46, &qword_100163C30);
      if ((v54 & 1) == 0) {
        goto LABEL_91;
      }
    }
    uint64_t v56 = *(int *)(v76 + 28);
    uint64_t v57 = *(void *)&v33[v56];
    uint64_t v58 = *(void *)(v80 + v56);
    uint64_t v59 = *(void *)(v57 + 16);
    if (v59 != *(void *)(v58 + 16)) {
      goto LABEL_91;
    }
    if (v59 && v57 != v58) {
      break;
    }
LABEL_6:
    uint64_t v27 = v78 + 1;
    uint64_t v32 = v80;
    sub_10003B938(v80, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListSectionModel);
    sub_10003B938((uint64_t)v33, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListSectionModel);
    uint64_t result = 1;
    uint64_t v29 = v69;
    uint64_t v31 = v67;
    uint64_t v30 = v68;
    if (v27 == v70) {
      return result;
    }
  }
  unint64_t v60 = (*(unsigned __int8 *)(v77 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v77 + 80);
  uint64_t v61 = *(void *)(v77 + 72);
  while (1)
  {
    sub_10003D7B0(v57 + v60, v35, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
    sub_10003D7B0(v58 + v60, v34, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
    if ((sub_1000460F4(v35, v34) & 1) == 0) {
      break;
    }
    char v62 = sub_10003B998(v35 + *(int *)(v79 + 20), v34 + *(int *)(v79 + 20));
    sub_10003B938(v34, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
    sub_10003B938(v35, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
    if ((v62 & 1) == 0) {
      goto LABEL_91;
    }
    v60 += v61;
    if (!--v59) {
      goto LABEL_6;
    }
  }
  sub_10003B938(v34, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
  sub_10003B938(v35, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
LABEL_91:
  sub_10003B938(v80, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListSectionModel);
  sub_10003B938((uint64_t)v33, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListSectionModel);
  return 0;
}

uint64_t sub_100024E3C()
{
  uint64_t v1 = type metadata accessor for OSSignpostID();
  uint64_t v17 = *(void *)(v1 - 8);
  uint64_t v18 = v1;
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for OSSignposter();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10015F180 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_1000477B0(v4, (uint64_t)qword_10016B070);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  static OSSignpostID.exclusive.getter();
  uint64_t v9 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)uint64_t v9 = 0;
  uint64_t v10 = OSSignposter.logHandle.getter();
  os_signpost_type_t v11 = static os_signpost_type_t.begin.getter();
  os_signpost_id_t v12 = OSSignpostID.rawValue.getter();
  _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v10, v11, v12, "PrimarySettingsList Data Model Snapshot", "", v9, 2u);
  sub_100057FC4(v0, &v19);
  os_signpost_type_t v13 = static os_signpost_type_t.end.getter();
  os_signpost_id_t v14 = OSSignpostID.rawValue.getter();
  _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v10, v13, v14, "PrimarySettingsList Data Model Snapshot", "", v9, 2u);

  uint64_t v15 = v19;
  swift_slowDealloc();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v3, v18);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v15;
}

uint64_t sub_1000250DC(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3) {
    return (uint64_t)&_swiftEmptyDictionarySingleton;
  }
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  sub_100046B9C((uint64_t *)&unk_100162540);
  uint64_t result = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v9 = result;
  uint64_t v29 = a1;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 64;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
    }
    else
    {
      uint64_t v15 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_40;
      }
      if (v15 >= a2) {
        return v9;
      }
      unint64_t v16 = v29[v15];
      ++v11;
      if (!v16)
      {
        uint64_t v11 = v15 + 1;
        if (v15 + 1 >= a2) {
          return v9;
        }
        unint64_t v16 = v29[v11];
        if (!v16)
        {
          uint64_t v11 = v15 + 2;
          if (v15 + 2 >= a2) {
            return v9;
          }
          unint64_t v16 = v29[v11];
          if (!v16)
          {
            uint64_t v17 = v15 + 3;
            if (v17 >= a2) {
              return v9;
            }
            unint64_t v16 = v29[v17];
            if (!v16)
            {
              while (1)
              {
                uint64_t v11 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_41;
                }
                if (v11 >= a2) {
                  return v9;
                }
                unint64_t v16 = v29[v11];
                ++v17;
                if (v16) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v11 = v17;
          }
        }
      }
LABEL_24:
      unint64_t v10 = (v16 - 1) & v16;
      unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
    }
    sub_100061B40(*(void *)(v4 + 48) + 40 * v14, (uint64_t)v35);
    sub_100061984(*(void *)(v4 + 56) + 32 * v14, (uint64_t)v34);
    long long v31 = v35[0];
    long long v32 = v35[1];
    uint64_t v33 = v36;
    sub_100025390(v34, v30);
    uint64_t result = AnyHashable._rawHashValue(seed:)(*(void *)(v9 + 40));
    uint64_t v18 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v19 = result & ~v18;
    unint64_t v20 = v19 >> 6;
    if (((-1 << v19) & ~*(void *)(v12 + 8 * (v19 >> 6))) != 0)
    {
      unint64_t v21 = __clz(__rbit64((-1 << v19) & ~*(void *)(v12 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v18) >> 6;
      do
      {
        if (++v20 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v24 = v20 == v23;
        if (v20 == v23) {
          unint64_t v20 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v12 + 8 * v20);
      }
      while (v25 == -1);
      unint64_t v21 = __clz(__rbit64(~v25)) + (v20 << 6);
    }
    *(void *)(v12 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    uint64_t v26 = *(void *)(v9 + 48) + 40 * v21;
    long long v27 = v32;
    *(_OWORD *)uint64_t v26 = v31;
    *(_OWORD *)(v26 + 16) = v27;
    *(void *)(v26 + 32) = v33;
    uint64_t result = (uint64_t)sub_100025390(v30, (_OWORD *)(*(void *)(v9 + 56) + 32 * v21));
    ++*(void *)(v9 + 16);
    if (__OFSUB__(v5--, 1)) {
      break;
    }
    if (!v5) {
      return v9;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

_OWORD *sub_100025390(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

unsigned char *sub_1000253A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v102 = a3;
  uint64_t v9 = sub_100046B9C((uint64_t *)&unk_100163BC0);
  __chkstk_darwin(v9 - 8);
  uint64_t v83 = (char *)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = sub_100046B9C(&qword_100163CA0);
  uint64_t v82 = *(void *)(v84 - 8);
  __chkstk_darwin(v84);
  uint64_t v81 = (char *)&v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = sub_100046B9C(&qword_100163CA8);
  uint64_t v86 = *(void *)(v87 - 8);
  __chkstk_darwin(v87);
  uint64_t v85 = (char *)&v74 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = sub_100046B9C(&qword_100163CB0);
  uint64_t v90 = *(void *)(v91 - 8);
  __chkstk_darwin(v91);
  uint64_t v88 = (char *)&v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = sub_100046B9C(&qword_100163CB8);
  uint64_t v92 = *(void *)(v93 - 8);
  __chkstk_darwin(v93);
  uint64_t v89 = (char *)&v74 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = sub_100046B9C(&qword_100163CC0);
  uint64_t v108 = *(char **)(v101 - 8);
  __chkstk_darwin(v101);
  uint64_t v79 = (char *)&v74 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100046B9C((uint64_t *)&unk_100164160);
  __chkstk_darwin(v16 - 8);
  uint64_t v100 = (char *)&v74 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100046B9C(&qword_100163CC8);
  __chkstk_darwin(v18 - 8);
  uint64_t v76 = (char *)&v74 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = type metadata accessor for NSRunLoop.SchedulerTimeType.Stride();
  uint64_t v109 = *(void *)(v98 - 8);
  __chkstk_darwin(v98);
  v96 = (char *)&v74 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = type metadata accessor for NSNotificationCenter.Publisher();
  uint64_t v103 = *(void *)(v99 - 8);
  __chkstk_darwin(v99);
  uint64_t v74 = (char *)&v74 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = (void *)sub_100046B9C(&qword_100163CD0);
  uint64_t v78 = *(v77 - 1);
  __chkstk_darwin(v77);
  unint64_t v23 = (char *)&v74 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4[16] = 0;
  BOOL v24 = &v4[OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel_pendingSelectionForSuccessfulPrimaryAppleAccountSignIn];
  uint64_t v25 = type metadata accessor for PrimarySettingsListItemIdentifier();
  uint64_t v26 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56);
  v26(v24, 1, 1, v25);
  v26(&v5[OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel_effectiveSelection], 1, 1, v25);
  v5[OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel_effectiveCurrentPresentedItemIdentifier] = 7;
  long long v27 = &v5[OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel_cachedPasscodeCredentialWrapper];
  *long long v27 = 0;
  v27[1] = 0;
  *(void *)&v5[OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel_pendingFollowUpController] = 0;
  unint64_t v28 = &v5[OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel__currentlyLoadingFollowUp];
  uint64_t v29 = type metadata accessor for FLFollowUpInformation();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v28, 1, 1, v29);
  uint64_t v30 = &v5[OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel__cachedDataModel];
  v30[1] = 0;
  _OWORD v30[2] = 0;
  *uint64_t v30 = 0;
  *(void *)&v5[OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel_viewControllerForPresentation] = 0;
  *(void *)&v5[OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel____lazy_storage___followUpListElementsGenerator] = 0;
  *(void *)&v5[OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel____lazy_storage___primaryAppleAccountStatusObserver] = 0;
  *(void *)&v5[OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel____lazy_storage___connectedHeadphonesSectionModelProvider] = 0;
  *(void *)&v5[OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel____lazy_storage___primaryAppleAccountListSectionProvider] = 0;
  *(void *)&v5[OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel____lazy_storage___secondaryAppleAccountItemsObserver] = 0;
  *(void *)&v5[OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel____lazy_storage___secondaryAppleAccountSectionModelProvider] = 0;
  *(void *)&v5[OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel____lazy_storage___airplaneModeListItemProvider] = 0;
  *(void *)&v5[OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel____lazy_storage___cellularDataSettingObserver] = 0;
  *(void *)&v5[OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel____lazy_storage___sectionDataModelProviders] = 0;
  *(void *)&v5[OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel_cancellables] = &_swiftEmptySetSingleton;
  uint64_t v31 = OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel_invalidationSubject;
  uint64_t v80 = sub_100046B9C(&qword_100163CD8);
  swift_allocObject();
  *(void *)&v5[v31] = PassthroughSubject.init()();
  *(void *)&v5[OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel__selectionDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v5[OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel__updateDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  ObservationRegistrar.init()();
  swift_getKeyPath();
  v115 = v5;
  uint64_t v116 = a1;
  uint64_t v117 = a2;
  id v119 = v5;
  sub_10003736C((unint64_t *)&unk_100163AC0, (void (*)(uint64_t))type metadata accessor for PrimarySettingsListModel);
  swift_unknownObjectRetain();
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  uint64_t v94 = a1;
  swift_unknownObjectRelease();
  swift_getKeyPath();
  v112 = v5;
  uint64_t v113 = v102;
  uint64_t v114 = a4;
  id v119 = v5;
  swift_unknownObjectRetain();
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  swift_unknownObjectRelease();
  id v97 = self;
  id v32 = [v97 defaultCenter];
  NSNotificationCenter.publisher(for:object:)();

  uint64_t v33 = v96;
  static NSRunLoop.SchedulerTimeType.Stride.milliseconds(_:)();
  uint64_t v34 = v76;
  uint64_t v35 = v98;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v109 + 56))(v76, 1, 1, v98);
  id v107 = self;
  id v119 = [v107 mainRunLoop];
  uint64_t v111 = type metadata accessor for NSRunLoop.SchedulerOptions();
  uint64_t v36 = *(void *)(v111 - 8);
  v105 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v36 + 56);
  uint64_t v110 = v36 + 56;
  uint64_t v37 = (uint64_t)v100;
  v105(v100, 1, 1, v111);
  uint64_t v106 = sub_10002E1D8(0, &qword_10015F510);
  uint64_t v95 = sub_10003736C(&qword_100163CE0, (void (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Publisher);
  uint64_t v104 = sub_100026EC8((unint64_t *)&qword_10015F520, &qword_10015F510);
  uint64_t v38 = v23;
  uint64_t v39 = (uint64_t)v34;
  uint64_t v40 = v99;
  uint64_t v41 = v74;
  Publisher.delay<A>(for:tolerance:scheduler:options:)();
  sub_10003F5D0(v37, (uint64_t *)&unk_100164160);

  sub_10003F5D0(v39, &qword_100163CC8);
  uint64_t v42 = *(char **)(v109 + 8);
  v109 += 8;
  uint64_t v76 = v42;
  ((void (*)(char *, uint64_t))v42)(v33, v35);
  uint64_t v44 = v103 + 8;
  int v43 = *(void (**)(char *, uint64_t))(v103 + 8);
  uint64_t v45 = v41;
  uint64_t v46 = v40;
  v43(v41, v40);
  uint64_t v75 = v43;
  uint64_t v103 = v44;
  sub_10004D2D4(&qword_100163CE8, &qword_100163CD0);
  uint64_t v47 = v77;
  Publisher<>.sink(receiveValue:)();
  (*(void (**)(char *, void *))(v78 + 8))(v38, v47);
  uint64_t v48 = &v5[OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel_cancellables];
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  id v49 = [v97 defaultCenter];
  NSNotificationCenter.publisher(for:object:)();

  id v119 = [v107 mainRunLoop];
  uint64_t v50 = (uint64_t)v100;
  v105(v100, 1, 1, v111);
  uint64_t v51 = v79;
  Publisher.receive<A>(on:options:)();
  sub_10003F5D0(v50, (uint64_t *)&unk_100164160);

  v43(v45, v46);
  swift_allocObject();
  swift_weakInit();
  uint64_t v78 = sub_10004D2D4(&qword_100163CF0, &qword_100163CC0);
  uint64_t v52 = v101;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  uint64_t v53 = (void *)*((void *)v108 + 1);
  v108 += 8;
  uint64_t v77 = v53;
  ((void (*)(char *, uint64_t))v53)(v51, v52);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  id v54 = [v97 defaultCenter];
  NSNotificationCenter.publisher(for:object:)();

  id v55 = v107;
  id v119 = [v107 mainRunLoop];
  uint64_t v56 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v105;
  v105((char *)v50, 1, 1, v111);
  uint64_t v57 = v99;
  Publisher.receive<A>(on:options:)();
  sub_10003F5D0(v50, (uint64_t *)&unk_100164160);

  v75(v45, v57);
  swift_allocObject();
  swift_weakInit();
  uint64_t v58 = v101;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  ((void (*)(char *, uint64_t))v77)(v51, v58);
  swift_beginAccess();
  uint64_t v108 = v48;
  uint64_t v59 = v50;
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  id v119 = *(id *)&v5[OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel_invalidationSubject];
  swift_retain();
  unint64_t v60 = v96;
  static NSRunLoop.SchedulerTimeType.Stride.milliseconds(_:)();
  id v118 = [v55 mainRunLoop];
  v56(v50, 1, 1, v111);
  sub_10004D2D4(&qword_100163CF8, &qword_100163CD8);
  uint64_t v61 = v81;
  Publisher.debounce<A>(for:scheduler:options:)();
  sub_10003F5D0(v50, (uint64_t *)&unk_100164160);

  ((void (*)(char *, uint64_t))v76)(v60, v98);
  swift_release();
  if (qword_10015F130 != -1) {
    swift_once();
  }
  char v62 = (void *)qword_10016AF90;
  id v119 = (id)qword_10016AF90;
  uint64_t v63 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  uint64_t v64 = (uint64_t)v83;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v63 - 8) + 56))(v83, 1, 1, v63);
  sub_10002E1D8(0, (unint64_t *)&qword_1001609D0);
  sub_10004D2D4(&qword_100163D00, &qword_100163CA0);
  sub_100026EC8((unint64_t *)&qword_100163C00, (unint64_t *)&qword_1001609D0);
  id v65 = v62;
  uint64_t v66 = v85;
  uint64_t v67 = v84;
  Publisher.receive<A>(on:options:)();
  sub_10003F5D0(v64, (uint64_t *)&unk_100163BC0);

  (*(void (**)(char *, uint64_t))(v82 + 8))(v61, v67);
  swift_allocObject();
  swift_weakInit();
  sub_100046B9C(&qword_100163D08);
  sub_10004D2D4(&qword_100163D10, &qword_100163CA8);
  uint64_t v68 = v88;
  uint64_t v69 = v87;
  Publisher.compactMap<A>(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v86 + 8))(v66, v69);
  id v119 = [v107 mainRunLoop];
  v105((char *)v59, 1, 1, v111);
  sub_10004D2D4(&qword_100163D18, &qword_100163CB0);
  uint64_t v70 = v89;
  uint64_t v71 = v91;
  Publisher.receive<A>(on:options:)();
  sub_10003F5D0(v59, (uint64_t *)&unk_100164160);

  (*(void (**)(char *, uint64_t))(v90 + 8))(v68, v71);
  swift_getKeyPath();
  id v119 = v5;
  sub_10004D2D4(&qword_100163D20, &qword_100163CB8);
  uint64_t v72 = v93;
  Publisher<>.assign<A>(to:on:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v92 + 8))(v70, v72);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v5;
}

char *sub_1000267EC(uint64_t a1, void *a2)
{
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v5 = sub_100046B9C((uint64_t *)&unk_100163BC0);
  __chkstk_darwin(v5 - 8);
  uint64_t v38 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100046B9C((uint64_t *)&unk_100164160);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = type metadata accessor for NSRunLoop.SchedulerTimeType.Stride();
  uint64_t v10 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_100046B9C(&qword_100163BD0);
  uint64_t v33 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100046B9C(&qword_100163BD8);
  uint64_t v36 = *(void *)(v15 - 8);
  uint64_t v37 = v15;
  __chkstk_darwin(v15);
  uint64_t v35 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42[3] = type metadata accessor for PrimarySettingsListModel();
  v42[4] = &off_100155278;
  v42[0] = a1;
  uint64_t v17 = (uint64_t)a2 + OBJC_IVAR____TtC11SettingsApp33PrimaryAppleAccountStatusObserver_accountStatus;
  uint64_t v18 = a2;
  sub_1000615D0(v43);
  sub_10003CE28((uint64_t)v43, v17);
  *(void *)&v18[OBJC_IVAR____TtC11SettingsApp33PrimaryAppleAccountStatusObserver_accountStore] = 0;
  uint64_t v19 = OBJC_IVAR____TtC11SettingsApp33PrimaryAppleAccountStatusObserver_updateAccountStatusSubject;
  sub_100046B9C((uint64_t *)&unk_100163BE0);
  swift_allocObject();
  *(void *)&v18[v19] = PassthroughSubject.init()();
  *(void *)&v18[OBJC_IVAR____TtC11SettingsApp33PrimaryAppleAccountStatusObserver_cancellables] = &_swiftEmptySetSingleton;
  sub_1000620F8((uint64_t)v42, (uint64_t)&v18[OBJC_IVAR____TtC11SettingsApp33PrimaryAppleAccountStatusObserver_invalidator]);

  v41.receiver = v18;
  v41.super_class = ObjectType;
  uint64_t v20 = (char *)[v41 init];
  id v39 = *(id *)&v20[OBJC_IVAR____TtC11SettingsApp33PrimaryAppleAccountStatusObserver_updateAccountStatusSubject];
  uint64_t v21 = v20;
  swift_retain();
  static NSRunLoop.SchedulerTimeType.Stride.milliseconds(_:)();
  id v40 = [self mainRunLoop];
  uint64_t v22 = type metadata accessor for NSRunLoop.SchedulerOptions();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v9, 1, 1, v22);
  sub_10002E1D8(0, &qword_10015F510);
  sub_10004D2D4((unint64_t *)&unk_100163BF0, (uint64_t *)&unk_100163BE0);
  sub_100026EC8((unint64_t *)&qword_10015F520, &qword_10015F510);
  Publisher.debounce<A>(for:scheduler:options:)();
  sub_10003F5D0((uint64_t)v9, (uint64_t *)&unk_100164160);

  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v32);
  swift_release();
  if (qword_10015F128 != -1) {
    swift_once();
  }
  unint64_t v23 = (void *)qword_10016AF88;
  id v39 = (id)qword_10016AF88;
  uint64_t v24 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  uint64_t v25 = (uint64_t)v38;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v38, 1, 1, v24);
  sub_10002E1D8(0, (unint64_t *)&qword_1001609D0);
  sub_10004D2D4(&qword_100164180, &qword_100163BD0);
  sub_100026EC8((unint64_t *)&qword_100163C00, (unint64_t *)&qword_1001609D0);
  id v26 = v23;
  long long v27 = v35;
  uint64_t v28 = v34;
  Publisher.receive<A>(on:options:)();
  sub_10003F5D0(v25, (uint64_t *)&unk_100163BC0);

  (*(void (**)(char *, uint64_t))(v33 + 8))(v14, v28);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_10004D2D4(&qword_100163C08, &qword_100163BD8);
  uint64_t v29 = v37;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v27, v29);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();

  sub_100042A1C((uint64_t)v42);
  return v21;
}

uint64_t sub_100026EC8(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10002E1D8(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100026F0C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *_s11SettingsApp36PrimarySettingsListDataModelSnapshotVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100026FA4(uint64_t a1)
{
  uint64_t v2 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  unint64_t v4 = v3 & *(void *)(a1 + 64);
  int64_t v19 = (unint64_t)(v2 + 63) >> 6;
  uint64_t v30 = (uint64_t)v28 + 8;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v6 = 0;
  uint64_t v7 = (char *)_swiftEmptyArrayStorage;
  while (1)
  {
    if (v4)
    {
      unint64_t v8 = __clz(__rbit64(v4));
      v4 &= v4 - 1;
      unint64_t v9 = v8 | (v6 << 6);
      goto LABEL_22;
    }
    int64_t v10 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v10 >= v19) {
      goto LABEL_30;
    }
    unint64_t v11 = *(void *)(v18 + 8 * v10);
    ++v6;
    if (!v11)
    {
      int64_t v6 = v10 + 1;
      if (v10 + 1 >= v19) {
        goto LABEL_30;
      }
      unint64_t v11 = *(void *)(v18 + 8 * v6);
      if (!v11)
      {
        int64_t v6 = v10 + 2;
        if (v10 + 2 >= v19) {
          goto LABEL_30;
        }
        unint64_t v11 = *(void *)(v18 + 8 * v6);
        if (!v11)
        {
          int64_t v6 = v10 + 3;
          if (v10 + 3 >= v19) {
            goto LABEL_30;
          }
          unint64_t v11 = *(void *)(v18 + 8 * v6);
          if (!v11) {
            break;
          }
        }
      }
    }
LABEL_21:
    unint64_t v4 = (v11 - 1) & v11;
    unint64_t v9 = __clz(__rbit64(v11)) + (v6 << 6);
LABEL_22:
    sub_100061B40(*(void *)(a1 + 48) + 40 * v9, (uint64_t)v27);
    sub_100061984(*(void *)(a1 + 56) + 32 * v9, v30);
    v25[0] = v28[0];
    v25[1] = v28[1];
    uint64_t v26 = v29;
    v24[0] = v27[0];
    v24[1] = v27[1];
    sub_100061B40((uint64_t)v24, (uint64_t)v20);
    sub_100061984((uint64_t)v25 + 8, (uint64_t)v21);
    if ((swift_dynamicCast() & 1) == 0)
    {
      uint64_t v22 = 0;
      uint64_t v23 = 0;
    }
    sub_100042A1C((uint64_t)v21);
    uint64_t result = sub_10003F5D0((uint64_t)v24, (uint64_t *)&unk_1001609B0);
    uint64_t v13 = v23;
    if (v23)
    {
      uint64_t v14 = v22;
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_100027268(0, *((void *)v7 + 2) + 1, 1, v7);
        uint64_t v7 = (char *)result;
      }
      unint64_t v16 = *((void *)v7 + 2);
      unint64_t v15 = *((void *)v7 + 3);
      if (v16 >= v15 >> 1)
      {
        uint64_t result = (uint64_t)sub_100027268((char *)(v15 > 1), v16 + 1, 1, v7);
        uint64_t v7 = (char *)result;
      }
      *((void *)v7 + 2) = v16 + 1;
      uint64_t v17 = &v7[16 * v16];
      *((void *)v17 + 4) = v14;
      *((void *)v17 + 5) = v13;
    }
  }
  int64_t v12 = v10 + 4;
  if (v12 >= v19)
  {
LABEL_30:
    swift_release();
    return (uint64_t)v7;
  }
  unint64_t v11 = *(void *)(v18 + 8 * v12);
  if (v11)
  {
    int64_t v6 = v12;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v6 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v6 >= v19) {
      goto LABEL_30;
    }
    unint64_t v11 = *(void *)(v18 + 8 * v6);
    ++v12;
    if (v11) {
      goto LABEL_21;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

char *sub_100027268(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100046B9C(&qword_1001615B0);
      int64_t v10 = (char *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 32;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      int64_t v10 = (char *)&_swiftEmptyArrayStorage;
      uint64_t v13 = (char *)&_swiftEmptyArrayStorage + 32;
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[16 * v8 + 32]) {
          memmove(v13, a4 + 32, 16 * v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_1000650D4(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_100027378()
{
  return ForEach<>.init(_:content:)();
}

uint64_t sub_1000274D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a2;
  *(void *)(v5 + 24) = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100046B9C(&qword_100163878);
  type metadata accessor for PrimarySettingsListSection();
  sub_10004D2D4(&qword_100163880, &qword_100163878);
  sub_10002796C(&qword_100163830, (void (*)(uint64_t))type metadata accessor for PrimarySettingsListSection);
  sub_10002796C(&qword_100163888, (void (*)(uint64_t))type metadata accessor for PrimarySettingsListSectionModel);
  return ForEach<>.init(_:content:)();
}

uint64_t sub_100027640()
{
  uint64_t v1 = sub_100046B9C(&qword_1001602A8);
  __chkstk_darwin(v1);
  uint64_t v3 = &v12[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = v0;
  uint64_t v4 = v0 + *(int *)(type metadata accessor for PrimarySettingsListSection() + 20);
  uint64_t v5 = *(void *)(v4 + 32);
  if (v5)
  {
    uint64_t v14 = *(void *)(v4 + 24);
    uint64_t v15 = v5;
    sub_100030C58();
    swift_bridgeObjectRetain();
    uint64_t v6 = Text.init<A>(_:)();
    uint64_t v10 = v9 & 1;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v7 = 0;
    uint64_t v10 = 0;
    uint64_t v8 = 0;
  }
  uint64_t v14 = v6;
  uint64_t v15 = v7;
  uint64_t v16 = v10;
  uint64_t v17 = v8;
  sub_100027B34(v0, (uint64_t)v3);
  sub_100046B9C(&qword_1001602B0);
  sub_100046B9C(&qword_1001602B8);
  sub_1000280D4();
  sub_100027A1C();
  sub_100027AC0();
  return Section<>.init(header:footer:content:)();
}

uint64_t sub_1000277BC()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1000277E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for PrimarySettingsListSection();
  sub_1000279B4(a1, a2 + *(int *)(v4 + 20), (uint64_t (*)(void))type metadata accessor for PrimarySettingsListSectionModel);
  type metadata accessor for SettingsAppModel();
  sub_10002796C(&qword_10015F590, (void (*)(uint64_t))type metadata accessor for SettingsAppModel);
  uint64_t result = Environment.init<A>(_:)();
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v6 & 1;
  return result;
}

uint64_t type metadata accessor for PrimarySettingsListSection()
{
  uint64_t result = qword_100160270;
  if (!qword_100160270) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000278DC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100027924(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10002796C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000279B4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_100027A1C()
{
  unint64_t result = qword_1001602C8;
  if (!qword_1001602C8)
  {
    sub_10004D318(&qword_1001602B8);
    sub_100049A5C(&qword_1001602D0, (void (*)(uint64_t))type metadata accessor for PrimarySettingsListItem);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001602C8);
  }
  return result;
}

unint64_t sub_100027AC0()
{
  unint64_t result = qword_1001602D8;
  if (!qword_1001602D8)
  {
    sub_10004D318(&qword_1001602A8);
    sub_10006658C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001602D8);
  }
  return result;
}

uint64_t sub_100027B34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v51 = a2;
  uint64_t v47 = sub_100046B9C(&qword_1001602F8);
  __chkstk_darwin(v47);
  uint64_t v50 = (uint64_t *)((char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = type metadata accessor for PrimarySettingsListSection();
  uint64_t v5 = v4 - 8;
  uint64_t v43 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v43 + 64);
  __chkstk_darwin(v4);
  uint64_t v44 = (uint64_t)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for OpenURLAction();
  uint64_t v48 = *(void *)(v7 - 8);
  uint64_t v49 = v7;
  __chkstk_darwin(v7);
  uint64_t v46 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for LocalizedStringResource();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v42 - v14;
  uint64_t v16 = sub_100046B9C(&qword_100163C30);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100046B9C(&qword_1001602A8);
  __chkstk_darwin(v19 - 8);
  uint64_t v21 = (char *)&v42 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = *(int *)(v5 + 28);
  uint64_t v23 = *(int *)(type metadata accessor for PrimarySettingsListSectionModel() + 24);
  uint64_t v45 = a1;
  sub_10003F75C(a1 + v23 + v22, (uint64_t)v18, &qword_100163C30);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v18, 1, v9) == 1)
  {
    uint64_t v24 = sub_100046B9C(&qword_1001602E8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v21, 1, 1, v24);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v18, v9);
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
    uint64_t v25 = Text.init(_:)();
    uint64_t v27 = v26;
    uint64_t v29 = v28;
    char v31 = v30 & 1;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v33 = v44;
    sub_100049AA4(v45, v44, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListSection);
    unint64_t v34 = (*(unsigned __int8 *)(v43 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
    uint64_t v35 = swift_allocObject();
    sub_10007B250(v33, v35 + v34);
    uint64_t v36 = v46;
    OpenURLAction.init(handler:)();
    uint64_t v37 = v48;
    uint64_t v39 = v49;
    uint64_t v38 = v50;
    (*(void (**)(char *, char *, uint64_t))(v48 + 16))((char *)v50 + *(int *)(v47 + 28), v36, v49);
    *uint64_t v38 = KeyPath;
    uint64_t v40 = sub_100046B9C(&qword_1001602E8);
    sub_10003F75C((uint64_t)v38, (uint64_t)&v21[*(int *)(v40 + 36)], &qword_1001602F8);
    *(void *)uint64_t v21 = v25;
    *((void *)v21 + 1) = v27;
    v21[16] = v31;
    *((void *)v21 + 3) = v29;
    sub_10006591C(v25, v27, v31);
    swift_bridgeObjectRetain();
    sub_10007B334((uint64_t)v38);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v36, v39);
    sub_100037590(v25, v27, v31);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v21, 0, 1, v40);
  }
  return sub_10002806C((uint64_t)v21, v51);
}

uint64_t sub_10002806C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100046B9C(&qword_1001602A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1000280D4()
{
  unint64_t result = qword_1001602C0;
  if (!qword_1001602C0)
  {
    sub_10004D318(&qword_1001602B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001602C0);
  }
  return result;
}

uint64_t sub_100028140@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v3 = type metadata accessor for Button();
  uint64_t v4 = sub_10004D318(&qword_100163370);
  uint64_t WitnessTable = swift_getWitnessTable();
  unint64_t v6 = sub_1000291D4();
  swift_getOpaqueTypeMetadata2();
  type metadata accessor for _ConditionalContent();
  type metadata accessor for NavigationLink();
  uint64_t v7 = type metadata accessor for _ConditionalContent();
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v22 - v8;
  uint64_t v28 = v3;
  uint64_t v29 = v4;
  uint64_t v30 = WitnessTable;
  unint64_t v31 = v6;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v27 = WitnessTable;
  uint64_t v10 = swift_getWitnessTable();
  uint64_t v11 = swift_getWitnessTable();
  uint64_t v24 = v10;
  uint64_t v25 = v11;
  swift_getWitnessTable();
  uint64_t v12 = type metadata accessor for _UnaryViewAdaptor();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v22 - v17;
  sub_100028454(a1, (uint64_t)v9);
  _UnaryViewAdaptor.init(_:)();
  swift_getWitnessTable();
  uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
  v19(v18, v16, v12);
  uint64_t v20 = *(void (**)(char *, uint64_t))(v13 + 8);
  v20(v16, v12);
  v19(v23, v18, v12);
  return ((uint64_t (*)(char *, uint64_t))v20)(v18, v12);
}

uint64_t sub_100028454@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v115 = a2;
  uint64_t v3 = sub_100046B9C((uint64_t *)&unk_100161530);
  __chkstk_darwin(v3 - 8);
  uint64_t v106 = (uint64_t)&v94 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(a1 + 24);
  uint64_t v131 = *(void *)(a1 + 16);
  uint64_t v5 = v131;
  v132 = &type metadata for Never;
  uint64_t v133 = v6;
  v134 = &protocol witness table for Never;
  uint64_t v7 = type metadata accessor for NavigationLink();
  uint64_t v109 = *(void *)(v7 - 8);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v108 = (char *)&v94 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  id v107 = (char *)&v94 - v10;
  uint64_t v11 = sub_100046B9C(&qword_100163370);
  uint64_t v101 = *(void *)(v11 - 8);
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v100 = (char *)&v94 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t OpaqueTypeConformance2 = a1;
  uint64_t v104 = *(void *)(a1 - 8);
  __chkstk_darwin(v12);
  uint64_t v103 = v14;
  v105 = (char *)&v94 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = v5;
  uint64_t v112 = v6;
  uint64_t v15 = type metadata accessor for Button();
  uint64_t v110 = *(void *)(v15 - 8);
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v99 = (char *)&v94 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v102 = (char *)&v94 - v18;
  uint64_t WitnessTable = swift_getWitnessTable();
  unint64_t v20 = sub_1000291D4();
  uint64_t v131 = v15;
  v132 = (void *)v11;
  v121 = (void *)v20;
  v122 = (void *)v11;
  uint64_t v117 = WitnessTable;
  uint64_t v133 = WitnessTable;
  v134 = (void *)v20;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v98 = *(void *)(OpaqueTypeMetadata2 - 8);
  uint64_t v22 = __chkstk_darwin(OpaqueTypeMetadata2);
  uint64_t v24 = (char *)&v94 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v26 = (char *)&v94 - v25;
  uint64_t v27 = type metadata accessor for _ConditionalContent();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = __chkstk_darwin(v27);
  unint64_t v31 = (char *)&v94 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  uint64_t v33 = (char *)&v94 - v32;
  uint64_t v114 = v7;
  uint64_t v34 = type metadata accessor for _ConditionalContent();
  uint64_t v35 = __chkstk_darwin(v34);
  uint64_t v37 = (char *)&v94 - v36;
  uint64_t v38 = *(int *)(a1 + 40);
  uint64_t v39 = v116;
  BOOL v40 = *(unsigned char *)(v116 + v38) == 1;
  uint64_t v118 = v41;
  uint64_t v119 = v35;
  uint64_t v113 = v37;
  if (v40)
  {
    uint64_t v95 = v26;
    v96 = v24;
    uint64_t v106 = OpaqueTypeMetadata2;
    id v107 = v33;
    uint64_t v108 = v31;
    uint64_t v109 = v28;
    uint64_t v42 = v111;
    uint64_t v97 = v27;
    uint64_t v43 = OpaqueTypeConformance2;
    BOOL v44 = sub_1000BE30C(OpaqueTypeConformance2);
    uint64_t v45 = v104 + 16;
    uint64_t v46 = v105;
    (*(void (**)(char *, uint64_t, uint64_t))(v104 + 16))(v105, v39, v43);
    unint64_t v47 = (*(unsigned __int8 *)(v45 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 64);
    uint64_t v48 = (uint64_t (**)(unint64_t, char *, uint64_t))(v45 + 16);
    uint64_t v49 = v112;
    uint64_t v50 = v102;
    uint64_t v51 = swift_allocObject();
    *(void *)(v51 + 16) = v42;
    *(void *)(v51 + 24) = v49;
    uint64_t v52 = (*v48)(v51 + v47, v46, OpaqueTypeConformance2);
    __chkstk_darwin(v52);
    *(&v94 - 4) = v42;
    *(&v94 - 3) = v49;
    *(&v94 - 2) = v39;
    if (v44)
    {
      Button.init(action:label:)();
      uint64_t v53 = v100;
      static PrimitiveButtonStyle<>.navigationLink.getter();
      uint64_t v54 = (uint64_t)v96;
      id v55 = v122;
      uint64_t v80 = v117;
      uint64_t v56 = v121;
      View.buttonStyle<A>(_:)();
      (*(void (**)(char *, void *))(v101 + 8))(v53, v55);
      (*(void (**)(char *, uint64_t))(v110 + 8))(v50, v15);
      uint64_t v131 = v15;
      v132 = v55;
      uint64_t v133 = v80;
      v134 = v56;
      uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
      uint64_t v57 = v98;
      uint64_t v58 = *(void (**)(char *, uint64_t, uint64_t))(v98 + 16);
      uint64_t v59 = v95;
      uint64_t v60 = v106;
      v58(v95, v54, v106);
      uint64_t v61 = *(void (**)(uint64_t, uint64_t))(v57 + 8);
      v61(v54, v60);
      v58((char *)v54, (uint64_t)v59, v60);
      char v62 = v107;
      sub_100029380(v54, v60);
      uint64_t v78 = v121;
      v61(v54, v60);
      uint64_t v63 = v59;
      uint64_t v64 = v62;
      v61((uint64_t)v63, v60);
    }
    else
    {
      uint64_t v81 = (uint64_t)v99;
      Button.init(action:label:)();
      uint64_t v82 = v110;
      uint64_t v83 = *(void (**)(char *, uint64_t, uint64_t))(v110 + 16);
      v83(v50, v81, v15);
      uint64_t v84 = *(void (**)(uint64_t, uint64_t))(v82 + 8);
      v84(v81, v15);
      v83((char *)v81, (uint64_t)v50, v15);
      uint64_t v78 = v121;
      id v55 = v122;
      uint64_t v131 = v15;
      v132 = v122;
      uint64_t v80 = v117;
      uint64_t v133 = v117;
      v134 = v121;
      swift_getOpaqueTypeConformance2();
      uint64_t v64 = v107;
      sub_100029230(v81, v106, v15);
      v84(v81, v15);
      v84((uint64_t)v50, v15);
    }
    uint64_t v85 = v109;
    uint64_t v86 = (uint64_t)v108;
    uint64_t v131 = v15;
    v132 = v55;
    uint64_t v133 = v80;
    v134 = v78;
    uint64_t v123 = swift_getOpaqueTypeConformance2();
    uint64_t v124 = v80;
    uint64_t v87 = v97;
    swift_getWitnessTable();
    (*(void (**)(uint64_t, char *, uint64_t))(v85 + 16))(v86, v64, v87);
    swift_getWitnessTable();
    uint64_t v76 = v113;
    sub_100029380(v86, v87);
    uint64_t v88 = *(void (**)(uint64_t, uint64_t))(v85 + 8);
    v88(v86, v87);
    v88((uint64_t)v64, v87);
    uint64_t v79 = v122;
    uint64_t v77 = v115;
  }
  else
  {
    uint64_t v65 = v106;
    sub_100046BE0(v116 + *(int *)(OpaqueTypeConformance2 + 36), v106);
    uint64_t v66 = type metadata accessor for PrimarySettingsListItemIdentifier();
    uint64_t v67 = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v66 - 8) + 56))(v65, 0, 1, v66);
    __chkstk_darwin(v67);
    uint64_t v68 = v112;
    *(&v94 - 4) = v111;
    *(&v94 - 3) = v68;
    *(&v94 - 2) = v39;
    sub_100029328();
    uint64_t v69 = (uint64_t)v108;
    NavigationLink<>.init<A>(value:label:)();
    uint64_t v70 = v114;
    uint64_t OpaqueTypeConformance2 = swift_getWitnessTable();
    uint64_t v71 = v109;
    uint64_t v72 = *(void (**)(char *, uint64_t, uint64_t))(v109 + 16);
    uint64_t v73 = v107;
    v72(v107, v69, v70);
    uint64_t v74 = *(void (**)(uint64_t, uint64_t))(v71 + 8);
    v74(v69, v70);
    v72((char *)v69, (uint64_t)v73, v70);
    uint64_t v131 = v15;
    v132 = v122;
    uint64_t v75 = v117;
    uint64_t v133 = v117;
    v134 = v121;
    uint64_t v129 = swift_getOpaqueTypeConformance2();
    uint64_t v130 = v75;
    swift_getWitnessTable();
    uint64_t v76 = v113;
    sub_100029230(v69, v27, v70);
    v74(v69, v70);
    v74((uint64_t)v73, v70);
    uint64_t v77 = v115;
    uint64_t v78 = v121;
    uint64_t v79 = v122;
    uint64_t v80 = v75;
  }
  uint64_t v131 = v15;
  v132 = v79;
  uint64_t v133 = v80;
  v134 = v78;
  uint64_t v127 = swift_getOpaqueTypeConformance2();
  uint64_t v128 = v80;
  uint64_t v89 = swift_getWitnessTable();
  uint64_t v90 = swift_getWitnessTable();
  uint64_t v125 = v89;
  uint64_t v126 = v90;
  uint64_t v91 = v119;
  swift_getWitnessTable();
  uint64_t v92 = v118;
  (*(void (**)(uint64_t, char *, uint64_t))(v118 + 16))(v77, v76, v91);
  return (*(uint64_t (**)(char *, uint64_t))(v92 + 8))(v76, v91);
}

unint64_t sub_1000291D4()
{
  unint64_t result = qword_100163378;
  if (!qword_100163378)
  {
    sub_10004D318(&qword_100163370);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_100163378);
  }
  return result;
}

uint64_t sub_100029230(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for _ConditionalContent.Storage();
  __chkstk_darwin(v5);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))((char *)&v8 - v6, a1, a3);
  swift_storeEnumTagMultiPayload();
  return _ConditionalContent<>.init(storage:)();
}

unint64_t sub_100029328()
{
  unint64_t result = qword_10015F8B0;
  if (!qword_10015F8B0)
  {
    type metadata accessor for PrimarySettingsListItemIdentifier();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015F8B0);
  }
  return result;
}

uint64_t sub_100029380(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for _ConditionalContent.Storage();
  __chkstk_darwin(v4);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))((char *)&v7 - v5, a1, a2);
  swift_storeEnumTagMultiPayload();
  return _ConditionalContent<>.init(storage:)();
}

uint64_t sub_100029478(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = Set.init(minimumCapacity:)();
  uint64_t v8 = result;
  if (v2)
  {
    uint64_t v4 = (Swift::Int *)(a1 + 40);
    do
    {
      Swift::Int v5 = *(v4 - 1);
      Swift::Int v6 = *v4;
      swift_bridgeObjectRetain();
      sub_100029510(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_100029510(Swift::Int *a1, Swift::Int a2, Swift::Int a3)
{
  uint64_t v7 = *v3;
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  Swift::Int v8 = Hasher._finalize()();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    uint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = (Swift::Int *)(*(void *)(*v3 + 48) + 16 * v10);
      Swift::Int v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      uint64_t v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_1000296C0(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

Swift::Int sub_1000296C0(Swift::Int result, Swift::Int a2, unint64_t a3, char a4)
{
  Swift::Int v5 = v4;
  Swift::Int v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_1000A1CB0();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (Swift::Int)sub_1000A262C();
      goto LABEL_22;
    }
    sub_1000A2A84();
  }
  uint64_t v11 = *v4;
  Hasher.init(_seed:)();
  String.hash(into:)();
  uint64_t result = Hasher._finalize()();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    Swift::Int v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        uint64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v21 = (Swift::Int *)(*(void *)(v20 + 48) + 16 * a3);
  Swift::Int *v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

uint64_t sub_10002985C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = type metadata accessor for PrimarySettingsListItemIdentifier();
  uint64_t v46 = v3;
  unint64_t v47 = &off_100151968;
  sub_10002A3A4((uint64_t *)&v45);
  swift_storeEnumTagMultiPayload();
  sub_100046B9C(&qword_1001615C0);
  uint64_t v4 = swift_allocObject();
  long long v44 = xmmword_10011C360;
  *(_OWORD *)(v4 + 16) = xmmword_10011C360;
  sub_1000498B0(&v45, v4 + 32);
  if ([self deviceSupportsSOS])
  {
    uint64_t v42 = v4;
    uint64_t v46 = v3;
    unint64_t v47 = &off_100151968;
    sub_10002A3A4((uint64_t *)&v45);
    swift_storeEnumTagMultiPayload();
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = v44;
    unint64_t v6 = v5 + 32;
    sub_1000498B0(&v45, v5 + 32);
    sub_100046B9C((uint64_t *)&unk_100163C70);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = v44;
    *(void *)(inited + 32) = v5;
    int64_t v8 = *(void *)(v5 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v9 = sub_10002AF40(0, v8, 1, (char *)_swiftEmptyArrayStorage);
    uint64_t v10 = *(void *)(v5 + 16);
    uint64_t v43 = v9;
    if (v10)
    {
      uint64_t v11 = *((void *)v9 + 2);
      if ((*((void *)v9 + 3) >> 1) - v11 < v8) {
        goto LABEL_42;
      }
      unint64_t v12 = (unint64_t)&v9[40 * v11 + 32];
      if (v6 < v12 + 40 * v8 && v12 < v6 + 40 * v8) {
        goto LABEL_44;
      }
      sub_100046B9C(&qword_1001615C8);
      swift_arrayInitWithCopy();
      uint64_t v4 = v42;
      if (v8)
      {
        uint64_t v14 = *((void *)v43 + 2);
        BOOL v15 = __OFADD__(v14, v8);
        uint64_t v16 = v14 + v8;
        if (v15) {
          goto LABEL_43;
        }
        *((void *)v43 + 2) = v16;
      }
    }
    else
    {
      uint64_t v4 = v42;
      if (v8) {
        goto LABEL_41;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    sub_100046B9C(&qword_100163C80);
    swift_arrayDestroy();
  }
  else
  {
    uint64_t v43 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v46 = v2;
  unint64_t v47 = &off_100155278;
  *(void *)&long long v45 = a1;
  uint64_t v17 = type metadata accessor for ExposureNotificationsItemProvider();
  uint64_t v18 = swift_allocObject();
  uint64_t v19 = sub_10002BF58((uint64_t)&v45, v2);
  __chkstk_darwin(v19);
  uint64_t v21 = (uint64_t *)((char *)&v42 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v22 + 16))(v21);
  uint64_t v23 = *v21;
  uint64_t v24 = (void *)(v18 + OBJC_IVAR____TtC11SettingsApp33ExposureNotificationsItemProvider_invalidator);
  v24[3] = v2;
  v24[4] = &off_100155278;
  *uint64_t v24 = v23;
  swift_storeEnumTagMultiPayload();
  *(void *)(v18 + OBJC_IVAR____TtC11SettingsApp33ExposureNotificationsItemProvider_enManager) = 0;
  *(unsigned char *)(v18 + OBJC_IVAR____TtC11SettingsApp33ExposureNotificationsItemProvider_shouldShowExposureNotifications) = 0;
  swift_retain();
  sub_100042A1C((uint64_t)&v45);
  uint64_t v46 = v17;
  unint64_t v47 = &off_1001548E8;
  *(void *)&long long v45 = v18;
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = v44;
  sub_1000498B0(&v45, v25 + 32);
  uint64_t v46 = v3;
  unint64_t v47 = &off_100151968;
  sub_10002A3A4((uint64_t *)&v45);
  swift_storeEnumTagMultiPayload();
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = v44;
  sub_1000498B0(&v45, v26 + 32);
  sub_100046B9C((uint64_t *)&unk_100163C70);
  uint64_t v27 = swift_initStackObject();
  *(_OWORD *)(v27 + 16) = xmmword_10011C390;
  *(void *)(v27 + 32) = v4;
  *(void *)(v27 + 40) = v43;
  *(void *)(v27 + 48) = v25;
  *(void *)(v27 + 56) = v26;
  swift_bridgeObjectRetain();
  uint64_t v28 = (char *)_swiftEmptyArrayStorage;
  uint64_t v29 = 32;
  while (1)
  {
    uint64_t v30 = *(void *)(v27 + v29);
    uint64_t v31 = *(void *)(v30 + 16);
    int64_t v32 = *((void *)v28 + 2);
    int64_t v33 = v32 + v31;
    if (__OFADD__(v32, v31)) {
      break;
    }
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
    if (isUniquelyReferenced_nonNull_native && v33 <= *((void *)v28 + 3) >> 1)
    {
      if (*(void *)(v30 + 16)) {
        goto LABEL_27;
      }
    }
    else
    {
      if (v32 <= v33) {
        int64_t v35 = v32 + v31;
      }
      else {
        int64_t v35 = v32;
      }
      uint64_t v28 = sub_10002AF40(isUniquelyReferenced_nonNull_native, v35, 1, v28);
      if (*(void *)(v30 + 16))
      {
LABEL_27:
        uint64_t v36 = *((void *)v28 + 2);
        if ((*((void *)v28 + 3) >> 1) - v36 < v31) {
          goto LABEL_39;
        }
        unint64_t v37 = (unint64_t)&v28[40 * v36 + 32];
        if (v30 + 32 < v37 + 40 * v31 && v37 < v30 + 32 + 40 * v31) {
          goto LABEL_44;
        }
        sub_100046B9C(&qword_1001615C8);
        swift_arrayInitWithCopy();
        if (v31)
        {
          uint64_t v39 = *((void *)v28 + 2);
          BOOL v15 = __OFADD__(v39, v31);
          uint64_t v40 = v39 + v31;
          if (v15) {
            goto LABEL_40;
          }
          *((void *)v28 + 2) = v40;
        }
        goto LABEL_17;
      }
    }
    if (v31) {
      goto LABEL_38;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    v29 += 8;
    if (v29 == 64)
    {
      swift_bridgeObjectRelease();
      swift_setDeallocating();
      sub_100046B9C(&qword_100163C80);
      swift_arrayDestroy();
      return (uint64_t)v28;
    }
  }
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100029E64()
{
  uint64_t v0 = type metadata accessor for PrimarySettingsListItemIdentifier();
  uint64_t v31 = v0;
  int64_t v32 = &off_100151968;
  sub_10002A3A4((uint64_t *)&v30);
  swift_storeEnumTagMultiPayload();
  sub_100046B9C(&qword_1001615C0);
  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_10011C360;
  sub_1000498B0(&v30, v29 + 32);
  uint64_t v1 = type metadata accessor for CameraSettingsListItemProvider();
  uint64_t v2 = swift_allocObject();
  swift_storeEnumTagMultiPayload();
  uint64_t v31 = v1;
  int64_t v32 = &off_1001544F0;
  *(void *)&long long v30 = v2;
  uint64_t v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_10011C360;
  sub_1000498B0(&v30, v28 + 32);
  uint64_t v31 = v0;
  int64_t v32 = &off_100151968;
  sub_10002A3A4((uint64_t *)&v30);
  swift_storeEnumTagMultiPayload();
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_10011C360;
  sub_1000498B0(&v30, v27 + 32);
  uint64_t v31 = v0;
  int64_t v32 = &off_100151968;
  sub_10002A3A4((uint64_t *)&v30);
  swift_storeEnumTagMultiPayload();
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_10011C360;
  sub_1000498B0(&v30, v26 + 32);
  uint64_t v31 = v0;
  int64_t v32 = &off_100151968;
  sub_10002A3A4((uint64_t *)&v30);
  swift_storeEnumTagMultiPayload();
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_10011C360;
  sub_1000498B0(&v30, v3 + 32);
  uint64_t v31 = v0;
  int64_t v32 = &off_100151968;
  sub_10002A3A4((uint64_t *)&v30);
  swift_storeEnumTagMultiPayload();
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_10011C360;
  sub_1000498B0(&v30, v4 + 32);
  uint64_t v31 = v0;
  int64_t v32 = &off_100151968;
  sub_10002A3A4((uint64_t *)&v30);
  uint64_t v5 = 32;
  swift_storeEnumTagMultiPayload();
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_10011C360;
  sub_1000498B0(&v30, v6 + 32);
  uint64_t v31 = v0;
  int64_t v32 = &off_100151968;
  sub_10002A3A4((uint64_t *)&v30);
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_10011C360;
  sub_1000498B0(&v30, v7 + 32);
  uint64_t v31 = v0;
  int64_t v32 = &off_100151968;
  sub_10002A3A4((uint64_t *)&v30);
  swift_storeEnumTagMultiPayload();
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_10011C360;
  sub_1000498B0(&v30, v8 + 32);
  uint64_t v31 = v0;
  int64_t v32 = &off_100151968;
  sub_10002A3A4((uint64_t *)&v30);
  swift_storeEnumTagMultiPayload();
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_10011C360;
  sub_1000498B0(&v30, v9 + 32);
  uint64_t v31 = v0;
  int64_t v32 = &off_100151968;
  sub_10002A3A4((uint64_t *)&v30);
  swift_storeEnumTagMultiPayload();
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_10011C360;
  sub_1000498B0(&v30, v10 + 32);
  sub_100046B9C((uint64_t *)&unk_100163C70);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100120CE0;
  *(void *)(inited + 32) = v29;
  *(void *)(inited + 40) = v28;
  *(void *)(inited + 48) = v27;
  *(void *)(inited + 56) = v26;
  *(void *)(inited + 64) = v3;
  *(void *)(inited + 72) = v4;
  *(void *)(inited + 80) = v6;
  *(void *)(inited + 88) = v7;
  *(void *)(inited + 96) = v8;
  *(void *)(inited + 104) = v9;
  *(void *)(inited + 112) = v10;
  swift_bridgeObjectRetain();
  unint64_t v12 = (char *)_swiftEmptyArrayStorage;
  while (1)
  {
    uint64_t v13 = *(void *)(inited + v5);
    uint64_t v14 = *(void *)(v13 + 16);
    int64_t v15 = *((void *)v12 + 2);
    int64_t v16 = v15 + v14;
    if (__OFADD__(v15, v14)) {
      break;
    }
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
    if (isUniquelyReferenced_nonNull_native && v16 <= *((void *)v12 + 3) >> 1)
    {
      if (*(void *)(v13 + 16)) {
        goto LABEL_13;
      }
    }
    else
    {
      if (v15 <= v16) {
        int64_t v18 = v15 + v14;
      }
      else {
        int64_t v18 = v15;
      }
      unint64_t v12 = sub_10002AF40(isUniquelyReferenced_nonNull_native, v18, 1, v12);
      if (*(void *)(v13 + 16))
      {
LABEL_13:
        uint64_t v19 = *((void *)v12 + 2);
        if ((*((void *)v12 + 3) >> 1) - v19 < v14) {
          goto LABEL_25;
        }
        unint64_t v20 = (unint64_t)&v12[40 * v19 + 32];
        if (v13 + 32 < v20 + 40 * v14 && v20 < v13 + 32 + 40 * v14) {
          goto LABEL_27;
        }
        sub_100046B9C(&qword_1001615C8);
        swift_arrayInitWithCopy();
        if (v14)
        {
          uint64_t v22 = *((void *)v12 + 2);
          BOOL v23 = __OFADD__(v22, v14);
          uint64_t v24 = v22 + v14;
          if (v23) {
            goto LABEL_26;
          }
          *((void *)v12 + 2) = v24;
        }
        goto LABEL_3;
      }
    }
    if (v14) {
      goto LABEL_24;
    }
LABEL_3:
    swift_bridgeObjectRelease();
    v5 += 8;
    if (v5 == 120)
    {
      swift_bridgeObjectRelease();
      swift_setDeallocating();
      sub_100046B9C(&qword_100163C80);
      swift_arrayDestroy();
      return (uint64_t)v12;
    }
  }
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t *sub_10002A3A4(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_10002A408(uint64_t a1)
{
  *(void *)&long long v87 = a1;
  uint64_t v1 = type metadata accessor for PrimarySettingsListItemIdentifier();
  __chkstk_darwin(v1);
  uint64_t v84 = (char *)&v83 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = self;
  id v4 = [v3 currentDevice];
  unsigned int v5 = [v4 sf_isDeveloperModeEnabled];

  uint64_t v6 = (uint64_t)&unk_10011C000;
  if (v5)
  {
    uint64_t v89 = v1;
    uint64_t v90 = &off_100151968;
    sub_10002A3A4((uint64_t *)&v88);
    swift_storeEnumTagMultiPayload();
    sub_100046B9C(&qword_1001615C0);
    uint64_t v7 = swift_allocObject();
    long long v86 = xmmword_10011C360;
    *(_OWORD *)(v7 + 16) = xmmword_10011C360;
    unint64_t v8 = v7 + 32;
    sub_1000498B0(&v88, v7 + 32);
    sub_100046B9C((uint64_t *)&unk_100163C70);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = v86;
    *(void *)(inited + 32) = v7;
    int64_t v10 = *(void *)(v7 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_10002AF40(0, v10, 1, (char *)_swiftEmptyArrayStorage);
    uint64_t v12 = *(void *)(v7 + 16);
    *(void *)&long long v86 = v11;
    if (v12)
    {
      uint64_t v13 = *((void *)v11 + 2);
      if ((*((void *)v11 + 3) >> 1) - v13 < v10)
      {
LABEL_72:
        __break(1u);
LABEL_73:
        __break(1u);
        goto LABEL_74;
      }
      unint64_t v14 = (unint64_t)&v11[40 * v13 + 32];
      if (v8 < v14 + 40 * v10 && v14 < v8 + 40 * v10) {
        goto LABEL_80;
      }
      sub_100046B9C(&qword_1001615C8);
      swift_arrayInitWithCopy();
      uint64_t v6 = (uint64_t)&unk_10011C000;
      if (v10)
      {
        uint64_t v16 = *(void *)(v86 + 16);
        BOOL v17 = __OFADD__(v16, v10);
        uint64_t v18 = v16 + v10;
        if (v17)
        {
LABEL_75:
          __break(1u);
LABEL_76:
          __break(1u);
          goto LABEL_77;
        }
        *(void *)(v86 + 16) = v18;
      }
    }
    else if (v10)
    {
      __break(1u);
LABEL_70:
      __break(1u);
      goto LABEL_71;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    sub_100046B9C(&qword_100163C80);
    swift_arrayDestroy();
  }
  else
  {
    *(void *)&long long v86 = _swiftEmptyArrayStorage;
  }
  id v19 = [v3 currentDevice];
  unsigned int v20 = [v19 sf_isCarrierInstall];

  if (!v20) {
    goto LABEL_27;
  }
  id v21 = (id)MobileGestalt_get_current_device();
  if (!v21)
  {
LABEL_78:
    __break(1u);
    goto LABEL_79;
  }
  uint64_t v22 = v21;
  char cellularDataCapability = MobileGestalt_get_cellularDataCapability();

  if (cellularDataCapability) {
    goto LABEL_20;
  }
  id v24 = (id)MobileGestalt_get_current_device();
  if (v24)
  {
    uint64_t v25 = v24;
    int telephonyCapability = MobileGestalt_get_telephonyCapability();

    if (telephonyCapability)
    {
LABEL_20:
      uint64_t v89 = v1;
      uint64_t v90 = &off_100151968;
      sub_10002A3A4((uint64_t *)&v88);
      swift_storeEnumTagMultiPayload();
      sub_100046B9C(&qword_1001615C0);
      uint64_t v27 = swift_allocObject();
      long long v85 = xmmword_10011C360;
      *(_OWORD *)(v27 + 16) = xmmword_10011C360;
      unint64_t v28 = v27 + 32;
      sub_1000498B0(&v88, v27 + 32);
      sub_100046B9C((uint64_t *)&unk_100163C70);
      uint64_t v29 = swift_initStackObject();
      *(_OWORD *)(v29 + 16) = v85;
      *(void *)(v29 + 32) = v27;
      int64_t v30 = *(void *)(v27 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v31 = sub_10002AF40(0, v30, 1, (char *)_swiftEmptyArrayStorage);
      int64_t v32 = v31;
      if (*(void *)(v27 + 16))
      {
        uint64_t v33 = *((void *)v31 + 2);
        if ((*((void *)v31 + 3) >> 1) - v33 < v30)
        {
LABEL_74:
          __break(1u);
          goto LABEL_75;
        }
        unint64_t v34 = (unint64_t)&v31[40 * v33 + 32];
        if (v28 < v34 + 40 * v30 && v34 < v28 + 40 * v30) {
          goto LABEL_80;
        }
        sub_100046B9C(&qword_1001615C8);
        swift_arrayInitWithCopy();
        if (v30)
        {
          uint64_t v35 = *((void *)v32 + 2);
          BOOL v17 = __OFADD__(v35, v30);
          uint64_t v36 = v35 + v30;
          if (v17)
          {
LABEL_77:
            __break(1u);
            goto LABEL_78;
          }
          *((void *)v32 + 2) = v36;
        }
      }
      else if (v30)
      {
LABEL_71:
        __break(1u);
        goto LABEL_72;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_setDeallocating();
      sub_100046B9C(&qword_100163C80);
      swift_arrayDestroy();
      uint64_t v6 = (uint64_t)&unk_10011C000;
      goto LABEL_30;
    }
LABEL_27:
    int64_t v32 = (char *)_swiftEmptyArrayStorage;
LABEL_30:
    uint64_t v83 = v32;
    id v37 = [v3 currentDevice];
    unsigned int v38 = [v37 sf_isInternalInstall];

    if (!v38)
    {
      *(void *)&long long v85 = _swiftEmptyArrayStorage;
      uint64_t v47 = v87;
      uint64_t v48 = (uint64_t)v84;
LABEL_41:
      swift_storeEnumTagMultiPayload();
      uint64_t v51 = qword_10015F190;
      swift_retain();
      if (v51 != -1) {
LABEL_68:
      }
        swift_once();
      id v52 = (id)qword_10016B0A0;
      id v53 = sub_10002BCC8(v48, v47, 0xD000000000000014, 0x8000000100124810, v52, 1);

      uint64_t v54 = type metadata accessor for DefaultsObservingPrimarySettingsListItemProvider();
      uint64_t v89 = v54;
      uint64_t v90 = &off_100155D48;
      *(void *)&long long v88 = v53;
      sub_100046B9C(&qword_1001615C0);
      uint64_t v55 = swift_allocObject();
      uint64_t v84 = (char *)v55;
      long long v87 = *(_OWORD *)(v6 + 864);
      *(_OWORD *)(v55 + 16) = v87;
      sub_1000498B0(&v88, v55 + 32);
      swift_storeEnumTagMultiPayload();
      uint64_t v56 = (void *)qword_10016B0A0;
      swift_retain();
      id v57 = v56;
      id v58 = sub_10002BCC8(v48, v47, 0xD00000000000001ALL, 0x8000000100124830, v57, 1);

      uint64_t v89 = v54;
      uint64_t v90 = &off_100155D48;
      *(void *)&long long v88 = v58;
      uint64_t v59 = swift_allocObject();
      *(_OWORD *)(v59 + 16) = v87;
      sub_1000498B0(&v88, v59 + 32);
      swift_storeEnumTagMultiPayload();
      uint64_t v60 = (void *)qword_10016B0A0;
      swift_retain();
      id v61 = v60;
      id v62 = sub_10002BCC8(v48, v47, 0xD000000000000015, 0x8000000100124850, v61, 1);

      uint64_t v89 = v54;
      uint64_t v90 = &off_100155D48;
      *(void *)&long long v88 = v62;
      uint64_t v63 = swift_allocObject();
      *(_OWORD *)(v63 + 16) = v87;
      sub_1000498B0(&v88, v63 + 32);
      swift_storeEnumTagMultiPayload();
      uint64_t v64 = (void *)qword_10016B0A0;
      swift_retain();
      id v65 = v64;
      id v66 = sub_10002BCC8(v48, v47, 0xD000000000000019, 0x8000000100124870, v65, 1);

      uint64_t v89 = v54;
      uint64_t v90 = &off_100155D48;
      *(void *)&long long v88 = v66;
      uint64_t v67 = swift_allocObject();
      *(_OWORD *)(v67 + 16) = v87;
      sub_1000498B0(&v88, v67 + 32);
      sub_100046B9C((uint64_t *)&unk_100163C70);
      uint64_t v68 = swift_initStackObject();
      *(_OWORD *)(v68 + 16) = xmmword_100120CF0;
      *(void *)(v68 + 32) = v86;
      uint64_t v47 = v68 + 32;
      uint64_t v69 = v85;
      *(void *)(v68 + 40) = v83;
      *(void *)(v68 + 48) = v69;
      *(void *)(v68 + 56) = v84;
      *(void *)(v68 + 64) = v59;
      *(void *)(v68 + 72) = v63;
      *(void *)(v68 + 80) = v67;
      swift_bridgeObjectRetain();
      uint64_t v70 = (char *)_swiftEmptyArrayStorage;
      uint64_t v71 = 32;
      uint64_t v6 = 40;
      while (1)
      {
        uint64_t v72 = *(void *)(v68 + v71);
        uint64_t v48 = *(void *)(v72 + 16);
        int64_t v73 = *((void *)v70 + 2);
        int64_t v74 = v73 + v48;
        if (__OFADD__(v73, v48))
        {
          __break(1u);
LABEL_65:
          __break(1u);
LABEL_66:
          __break(1u);
LABEL_67:
          __break(1u);
          goto LABEL_68;
        }
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
        if (isUniquelyReferenced_nonNull_native && v74 <= *((void *)v70 + 3) >> 1)
        {
          if (*(void *)(v72 + 16)) {
            goto LABEL_54;
          }
        }
        else
        {
          if (v73 <= v74) {
            int64_t v76 = v73 + v48;
          }
          else {
            int64_t v76 = v73;
          }
          uint64_t v70 = sub_10002AF40(isUniquelyReferenced_nonNull_native, v76, 1, v70);
          if (*(void *)(v72 + 16))
          {
LABEL_54:
            uint64_t v77 = *((void *)v70 + 2);
            if ((*((void *)v70 + 3) >> 1) - v77 < v48) {
              goto LABEL_66;
            }
            unint64_t v78 = (unint64_t)&v70[40 * v77 + 32];
            if (v72 + 32 < v78 + 40 * v48 && v78 < v72 + 32 + 40 * v48) {
              goto LABEL_80;
            }
            sub_100046B9C(&qword_1001615C8);
            swift_arrayInitWithCopy();
            if (v48)
            {
              uint64_t v80 = *((void *)v70 + 2);
              BOOL v17 = __OFADD__(v80, v48);
              uint64_t v81 = v80 + v48;
              if (v17) {
                goto LABEL_67;
              }
              *((void *)v70 + 2) = v81;
            }
            goto LABEL_44;
          }
        }
        if (v48) {
          goto LABEL_65;
        }
LABEL_44:
        swift_bridgeObjectRelease();
        v71 += 8;
        if (v71 == 88)
        {
          swift_bridgeObjectRelease();
          swift_setDeallocating();
          sub_100046B9C(&qword_100163C80);
          swift_arrayDestroy();
          return (uint64_t)v70;
        }
      }
    }
    uint64_t v89 = v1;
    uint64_t v90 = &off_100151968;
    sub_10002A3A4((uint64_t *)&v88);
    swift_storeEnumTagMultiPayload();
    sub_100046B9C(&qword_1001615C0);
    uint64_t v39 = swift_allocObject();
    long long v85 = xmmword_10011C360;
    *(_OWORD *)(v39 + 16) = xmmword_10011C360;
    unint64_t v40 = v39 + 32;
    sub_1000498B0(&v88, v39 + 32);
    sub_100046B9C((uint64_t *)&unk_100163C70);
    uint64_t v41 = swift_initStackObject();
    *(_OWORD *)(v41 + 16) = v85;
    *(void *)(v41 + 32) = v39;
    int64_t v42 = *(void *)(v39 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v43 = sub_10002AF40(0, v42, 1, (char *)_swiftEmptyArrayStorage);
    uint64_t v44 = *(void *)(v39 + 16);
    *(void *)&long long v85 = v43;
    if (v44)
    {
      uint64_t v45 = *((void *)v43 + 2);
      if ((*((void *)v43 + 3) >> 1) - v45 >= v42)
      {
        unint64_t v46 = (unint64_t)&v43[40 * v45 + 32];
        if (v40 < v46 + 40 * v42 && v46 < v40 + 40 * v42) {
          goto LABEL_80;
        }
        sub_100046B9C(&qword_1001615C8);
        swift_arrayInitWithCopy();
        uint64_t v47 = v87;
        uint64_t v48 = (uint64_t)v84;
        if (!v42)
        {
LABEL_40:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_setDeallocating();
          sub_100046B9C(&qword_100163C80);
          swift_arrayDestroy();
          uint64_t v6 = (uint64_t)&unk_10011C000;
          goto LABEL_41;
        }
        uint64_t v49 = *(void *)(v85 + 16);
        BOOL v17 = __OFADD__(v49, v42);
        uint64_t v50 = v49 + v42;
        if (!v17)
        {
          *(void *)(v85 + 16) = v50;
          goto LABEL_40;
        }
        goto LABEL_76;
      }
      goto LABEL_73;
    }
    uint64_t v47 = v87;
    uint64_t v48 = (uint64_t)v84;
    if (!v42) {
      goto LABEL_40;
    }
    goto LABEL_70;
  }
LABEL_79:
  __break(1u);
LABEL_80:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

char *sub_10002AF40(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_10005969C(a1, a2, a3, a4, &qword_1001615C0, &qword_1001615C8);
}

uint64_t sub_10002AF54(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = sub_10002C364();
  uint64_t v112 = type metadata accessor for AirplaneModeListItemProvider();
  uint64_t v113 = &off_1001539D8;
  *(void *)&long long v111 = v3;
  uint64_t v105 = sub_100046B9C(&qword_1001615C0);
  uint64_t v4 = swift_allocObject();
  long long v110 = xmmword_10011C360;
  *(_OWORD *)(v4 + 16) = xmmword_10011C360;
  uint64_t v103 = v4;
  sub_1000498B0(&v111, v4 + 32);
  uint64_t v112 = v2;
  uint64_t v113 = &off_100155278;
  *(void *)&long long v111 = a1;
  uint64_t v5 = type metadata accessor for WiFiListItemProvider();
  uint64_t v6 = swift_allocObject();
  uint64_t v7 = sub_10002BF58((uint64_t)&v111, v2);
  uint64_t v8 = *(void *)(v2 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7);
  uint64_t v109 = v9;
  unint64_t v108 = (v9 + 15) & 0xFFFFFFFFFFFFFFF0;
  int64_t v10 = (uint64_t *)((char *)&v96 - v108);
  uint64_t v11 = *(void (**)(char *))(v8 + 16);
  v11((char *)&v96 - v108);
  uint64_t v104 = v8 + 16;
  uint64_t v12 = *v10;
  uint64_t v13 = (void *)(v6 + OBJC_IVAR____TtC11SettingsApp20WiFiListItemProvider_invalidator);
  v13[3] = v2;
  v13[4] = &off_100155278;
  *uint64_t v13 = v12;
  *(void *)(v6 + 16) = 0;
  *(void *)(v6 + 24) = 0;
  uint64_t v106 = type metadata accessor for PrimarySettingsListItemIdentifier();
  swift_storeEnumTagMultiPayload();
  *(void *)(v6 + OBJC_IVAR____TtC11SettingsApp20WiFiListItemProvider_wifiMonitor) = 0;
  swift_retain();
  sub_100042A1C((uint64_t)&v111);
  uint64_t v112 = v5;
  uint64_t v113 = &off_100154378;
  *(void *)&long long v111 = v6;
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = v110;
  uint64_t v102 = v14;
  sub_1000498B0(&v111, v14 + 32);
  uint64_t v112 = v2;
  uint64_t v113 = &off_100155278;
  *(void *)&long long v111 = a1;
  uint64_t v15 = type metadata accessor for EthernetListItemProvider();
  uint64_t v16 = swift_allocObject();
  uint64_t v17 = sub_10002BF58((uint64_t)&v111, v2);
  __chkstk_darwin(v17);
  unint64_t v18 = v108;
  v11((char *)&v96 - v108);
  id v107 = v11;
  uint64_t v19 = *(uint64_t *)((char *)&v96 - v18);
  unsigned int v20 = (void *)(v16 + OBJC_IVAR____TtC11SettingsApp24EthernetListItemProvider_invalidator);
  v20[3] = v2;
  v20[4] = &off_100155278;
  *unsigned int v20 = v19;
  swift_storeEnumTagMultiPayload();
  *(unsigned char *)(v16 + OBJC_IVAR____TtC11SettingsApp24EthernetListItemProvider_hasEthernetNetworkInterfaces) = 0;
  uint64_t v21 = v16 + OBJC_IVAR____TtC11SettingsApp24EthernetListItemProvider_cancellable;
  *(void *)(v21 + 32) = 0;
  *(_OWORD *)uint64_t v21 = 0u;
  *(_OWORD *)(v21 + 16) = 0u;
  swift_retain();
  sub_100042A1C((uint64_t)&v111);
  uint64_t v112 = v15;
  uint64_t v113 = &off_100153E20;
  *(void *)&long long v111 = v16;
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = v110;
  uint64_t v101 = v22;
  sub_1000498B0(&v111, v22 + 32);
  uint64_t v112 = v2;
  uint64_t v113 = &off_100155278;
  *(void *)&long long v111 = a1;
  uint64_t v23 = type metadata accessor for BluetoothListItemProvider();
  uint64_t v24 = swift_allocObject();
  uint64_t v25 = sub_10002BF58((uint64_t)&v111, v2);
  __chkstk_darwin(v25);
  v11((char *)&v96 - v18);
  uint64_t v26 = *(uint64_t *)((char *)&v96 - v18);
  uint64_t v27 = (void *)(v24 + OBJC_IVAR____TtC11SettingsApp25BluetoothListItemProvider_invalidator);
  v27[3] = v2;
  v27[4] = &off_100155278;
  *uint64_t v27 = v26;
  *(void *)(v24 + 48) = 0;
  *(_OWORD *)(v24 + 16) = 0u;
  *(_OWORD *)(v24 + 32) = 0u;
  swift_storeEnumTagMultiPayload();
  *(void *)(v24 + OBJC_IVAR____TtC11SettingsApp25BluetoothListItemProvider_bluetoothController) = 0;
  *(unsigned char *)(v24 + OBJC_IVAR____TtC11SettingsApp25BluetoothListItemProvider_bluetoothState) = 0;
  swift_retain();
  sub_100042A1C((uint64_t)&v111);
  uint64_t v112 = v23;
  uint64_t v113 = &off_100153AC0;
  *(void *)&long long v111 = v24;
  uint64_t v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = v110;
  uint64_t v100 = v28;
  sub_1000498B0(&v111, v28 + 32);
  swift_retain();
  uint64_t v29 = sub_10002C364();
  uint64_t v30 = sub_10002C1CC();
  id v31 = sub_10000A994((uint64_t)a1, v29, v30);
  uint64_t v112 = type metadata accessor for CellularDataListItemProvider();
  uint64_t v113 = &off_100153C08;
  *(void *)&long long v111 = v31;
  uint64_t v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = v110;
  uint64_t v99 = v32;
  sub_1000498B0(&v111, v32 + 32);
  swift_retain();
  uint64_t v33 = sub_10002C364();
  uint64_t v34 = sub_10002C1CC();
  uint64_t v112 = v2;
  uint64_t v113 = &off_100155278;
  *(void *)&long long v111 = a1;
  uint64_t v35 = type metadata accessor for PersonalHotspotListItemProvider();
  uint64_t v36 = swift_allocObject();
  uint64_t v37 = sub_10002BF58((uint64_t)&v111, v2);
  __chkstk_darwin(v37);
  unsigned int v38 = (uint64_t *)((char *)&v96 - v108);
  v107((char *)&v96 - v108);
  uint64_t v39 = *v38;
  swift_retain();
  id v40 = sub_10000F8C4(v39, v33, v34, v36);
  sub_100042A1C((uint64_t)&v111);
  swift_release();
  uint64_t v112 = v35;
  uint64_t v113 = &off_100153EF0;
  *(void *)&long long v111 = v40;
  uint64_t v41 = swift_allocObject();
  *(_OWORD *)(v41 + 16) = v110;
  uint64_t v98 = v41;
  sub_1000498B0(&v111, v41 + 32);
  uint64_t v112 = v106;
  uint64_t v113 = &off_100151968;
  sub_10002A3A4((uint64_t *)&v111);
  swift_storeEnumTagMultiPayload();
  uint64_t v42 = swift_allocObject();
  *(_OWORD *)(v42 + 16) = v110;
  uint64_t v97 = v42;
  sub_1000498B0(&v111, v42 + 32);
  uint64_t v112 = v2;
  uint64_t v113 = &off_100155278;
  *(void *)&long long v111 = a1;
  uint64_t v43 = type metadata accessor for VPNListItemProvider();
  uint64_t v44 = swift_allocObject();
  uint64_t v45 = sub_10002BF58((uint64_t)&v111, v2);
  __chkstk_darwin(v45);
  unint64_t v46 = v108;
  v107((char *)&v96 - v108);
  uint64_t v47 = *(uint64_t *)((char *)&v96 - v46);
  swift_retain();
  uint64_t v48 = sub_10000E7F0(v47, v44);
  sub_100042A1C((uint64_t)&v111);
  uint64_t v112 = v43;
  uint64_t v113 = &off_100154218;
  *(void *)&long long v111 = v48;
  uint64_t v49 = swift_allocObject();
  *(_OWORD *)(v49 + 16) = v110;
  uint64_t v96 = v49;
  sub_1000498B0(&v111, v49 + 32);
  id v50 = [self currentDevice];
  id v51 = [v50 userInterfaceIdiom];

  if (v51 == (id)1)
  {
    uint64_t v112 = v2;
    uint64_t v113 = &off_100155278;
    *(void *)&long long v111 = a1;
    uint64_t v52 = type metadata accessor for ClassroomListItemProvider();
    uint64_t v53 = swift_allocObject();
    uint64_t v54 = sub_10002BF58((uint64_t)&v111, v2);
    __chkstk_darwin(v54);
    v107((char *)&v96 - v46);
    uint64_t v55 = *(uint64_t *)((char *)&v96 - v46);
    uint64_t v56 = (void *)(v53 + OBJC_IVAR____TtC11SettingsApp25ClassroomListItemProvider_invalidator);
    v56[3] = v2;
    v56[4] = &off_100155278;
    *uint64_t v56 = v55;
    swift_storeEnumTagMultiPayload();
    *(void *)(v53 + OBJC_IVAR____TtC11SettingsApp25ClassroomListItemProvider_cancellables) = &_swiftEmptySetSingleton;
    *(void *)(v53
              + OBJC_IVAR____TtC11SettingsApp25ClassroomListItemProvider____lazy_storage___classroomVisibilityArbitrator) = 0;
    *(unsigned char *)(v53 + OBJC_IVAR____TtC11SettingsApp25ClassroomListItemProvider_classroomVisible) = 0;
    id v57 = (void *)(v53 + OBJC_IVAR____TtC11SettingsApp25ClassroomListItemProvider_classroomStatus);
    *id v57 = 0;
    v57[1] = 0;
    swift_retain();
    sub_100042A1C((uint64_t)&v111);
    uint64_t v112 = v52;
    uint64_t v113 = &off_100153D50;
    *(void *)&long long v111 = v53;
    uint64_t v58 = swift_allocObject();
    *(_OWORD *)(v58 + 16) = v110;
    unint64_t v59 = v58 + 32;
    sub_1000498B0(&v111, v58 + 32);
    sub_100046B9C((uint64_t *)&unk_100163C70);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = v110;
    *(void *)(inited + 32) = v58;
    int64_t v61 = *(void *)(v58 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v62 = sub_10002AF40(0, v61, 1, (char *)_swiftEmptyArrayStorage);
    uint64_t v63 = v62;
    if (*(void *)(v58 + 16))
    {
      uint64_t v64 = *((void *)v62 + 2);
      if ((*((void *)v62 + 3) >> 1) - v64 < v61) {
        goto LABEL_39;
      }
      unint64_t v65 = (unint64_t)&v62[40 * v64 + 32];
      if (v59 < v65 + 40 * v61 && v65 < v59 + 40 * v61) {
        goto LABEL_41;
      }
      sub_100046B9C(&qword_1001615C8);
      swift_arrayInitWithCopy();
      if (v61)
      {
        uint64_t v66 = *((void *)v63 + 2);
        BOOL v67 = __OFADD__(v66, v61);
        uint64_t v68 = v66 + v61;
        if (v67) {
          goto LABEL_40;
        }
        *((void *)v63 + 2) = v68;
      }
    }
    else if (v61)
    {
      goto LABEL_38;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    sub_100046B9C(&qword_100163C80);
    swift_arrayDestroy();
  }
  else
  {
    uint64_t v63 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v112 = v2;
  uint64_t v113 = &off_100155278;
  *(void *)&long long v111 = a1;
  uint64_t v69 = (objc_class *)type metadata accessor for SatelliteListItemProvider();
  uint64_t v70 = (char *)objc_allocWithZone(v69);
  uint64_t v71 = sub_10002BF58((uint64_t)&v111, v112);
  __chkstk_darwin(v71);
  int64_t v73 = (uint64_t *)((char *)&v96 - ((v72 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v74 + 16))(v73);
  uint64_t v75 = *v73;
  swift_retain();
  id v76 = sub_100008D30(v75, v70);
  sub_100042A1C((uint64_t)&v111);
  uint64_t v112 = (uint64_t)v69;
  uint64_t v113 = &off_1001540D0;
  *(void *)&long long v111 = v76;
  uint64_t v77 = swift_allocObject();
  *(_OWORD *)(v77 + 16) = v110;
  sub_1000498B0(&v111, v77 + 32);
  sub_100046B9C((uint64_t *)&unk_100163C70);
  uint64_t v78 = swift_initStackObject();
  *(_OWORD *)(v78 + 16) = xmmword_100120CD0;
  *(void *)(v78 + 32) = v103;
  uint64_t v79 = v101;
  *(void *)(v78 + 40) = v102;
  *(void *)(v78 + 48) = v79;
  uint64_t v80 = v99;
  *(void *)(v78 + 56) = v100;
  *(void *)(v78 + 64) = v80;
  uint64_t v81 = v97;
  *(void *)(v78 + 72) = v98;
  *(void *)(v78 + 80) = v81;
  *(void *)(v78 + 88) = v96;
  *(void *)(v78 + 96) = v63;
  *(void *)(v78 + 104) = v77;
  swift_bridgeObjectRetain();
  uint64_t v82 = (char *)_swiftEmptyArrayStorage;
  uint64_t v83 = 32;
  while (1)
  {
    uint64_t v84 = *(void *)(v78 + v83);
    uint64_t v85 = *(void *)(v84 + 16);
    int64_t v86 = *((void *)v82 + 2);
    int64_t v87 = v86 + v85;
    if (__OFADD__(v86, v85)) {
      break;
    }
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
    if (isUniquelyReferenced_nonNull_native && v87 <= *((void *)v82 + 3) >> 1)
    {
      if (*(void *)(v84 + 16)) {
        goto LABEL_24;
      }
    }
    else
    {
      if (v86 <= v87) {
        int64_t v89 = v86 + v85;
      }
      else {
        int64_t v89 = v86;
      }
      uint64_t v82 = sub_10002AF40(isUniquelyReferenced_nonNull_native, v89, 1, v82);
      if (*(void *)(v84 + 16))
      {
LABEL_24:
        uint64_t v90 = *((void *)v82 + 2);
        if ((*((void *)v82 + 3) >> 1) - v90 < v85) {
          goto LABEL_36;
        }
        unint64_t v91 = (unint64_t)&v82[40 * v90 + 32];
        if (v84 + 32 < v91 + 40 * v85 && v91 < v84 + 32 + 40 * v85) {
          goto LABEL_41;
        }
        sub_100046B9C(&qword_1001615C8);
        swift_arrayInitWithCopy();
        if (v85)
        {
          uint64_t v93 = *((void *)v82 + 2);
          BOOL v67 = __OFADD__(v93, v85);
          uint64_t v94 = v93 + v85;
          if (v67) {
            goto LABEL_37;
          }
          *((void *)v82 + 2) = v94;
        }
        goto LABEL_14;
      }
    }
    if (v85) {
      goto LABEL_35;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    v83 += 8;
    if (v83 == 112)
    {
      swift_bridgeObjectRelease();
      swift_setDeallocating();
      sub_100046B9C(&qword_100163C80);
      swift_arrayDestroy();
      return (uint64_t)v82;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

id sub_10002BCC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, int a6)
{
  int v29 = a6;
  uint64_t v11 = type metadata accessor for PrimarySettingsListItemIdentifier();
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = &v28[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = type metadata accessor for PrimarySettingsListModel();
  _OWORD v35[3] = v14;
  v35[4] = &off_100155278;
  v35[0] = a2;
  sub_1000579A8(a1, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
  sub_1000620F8((uint64_t)v35, (uint64_t)v33);
  uint64_t v15 = sub_10002BF58((uint64_t)v33, v34);
  __chkstk_darwin(v15);
  uint64_t v17 = (uint64_t *)&v28[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(uint64_t *))(v18 + 16))(v17);
  uint64_t v19 = *v17;
  uint64_t v31 = v14;
  uint64_t v32 = &off_100155278;
  v30[0] = v19;
  unsigned int v20 = objc_allocWithZone((Class)type metadata accessor for DefaultsObservingPrimarySettingsListItemProvider());
  uint64_t v21 = sub_10002BF58((uint64_t)v30, v31);
  __chkstk_darwin(v21);
  uint64_t v23 = (uint64_t *)&v28[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(uint64_t *))(v24 + 16))(v23);
  uint64_t v25 = *v23;
  swift_bridgeObjectRetain();
  id v26 = sub_10002BFA8((uint64_t)v13, v25, a3, a4, a5, v29, v20);
  sub_100042A1C((uint64_t)v30);
  sub_100042A1C((uint64_t)v33);
  sub_100042A1C((uint64_t)v35);
  sub_10003DC6C(a1, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
  return v26;
}

uint64_t sub_10002BF58(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

id sub_10002BFA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, char a6, unsigned char *a7)
{
  v22[3] = type metadata accessor for PrimarySettingsListModel();
  v22[4] = &off_100155278;
  v22[0] = a2;
  uint64_t v14 = &a7[OBJC_IVAR____TtC11SettingsApp48DefaultsObservingPrimarySettingsListItemProvider_defaultsObserver];
  *uint64_t v14 = 0u;
  v14[1] = 0u;
  sub_1000579A8(a1, (uint64_t)&a7[OBJC_IVAR____TtC11SettingsApp48DefaultsObservingPrimarySettingsListItemProvider_id], (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
  sub_1000620F8((uint64_t)v22, (uint64_t)&a7[OBJC_IVAR____TtC11SettingsApp48DefaultsObservingPrimarySettingsListItemProvider_invalidator]);
  uint64_t v15 = &a7[OBJC_IVAR____TtC11SettingsApp48DefaultsObservingPrimarySettingsListItemProvider_defaultsKey];
  *uint64_t v15 = a3;
  v15[1] = a4;
  *(void *)&a7[OBJC_IVAR____TtC11SettingsApp48DefaultsObservingPrimarySettingsListItemProvider_userDefaults] = a5;
  a7[OBJC_IVAR____TtC11SettingsApp48DefaultsObservingPrimarySettingsListItemProvider_shownWhen] = a6;
  uint64_t v16 = a7;
  swift_bridgeObjectRetain();
  id v17 = a5;
  NSString v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  LOBYTE(a4) = [v17 BOOLForKey:v18];

  v16[OBJC_IVAR____TtC11SettingsApp48DefaultsObservingPrimarySettingsListItemProvider_shouldShow] = a4 ^ a6 ^ 1;
  v21.receiver = v16;
  v21.super_class = (Class)type metadata accessor for DefaultsObservingPrimarySettingsListItemProvider();
  id v19 = [super init];
  sub_100042A1C((uint64_t)v22);
  sub_10003DC6C(a1, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
  return v19;
}

uint64_t type metadata accessor for PrimarySettingsListModel()
{
  uint64_t result = qword_100163978;
  if (!qword_100163978) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for DefaultsObservingPrimarySettingsListItemProvider()
{
  uint64_t result = qword_100164680;
  if (!qword_100164680) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10002C1CC()
{
  uint64_t v1 = OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel____lazy_storage___cellularDataSettingObserver;
  if (*(uint64_t *)((char *)v0
                  + OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel____lazy_storage___cellularDataSettingObserver))
  {
    uint64_t v2 = *(uint64_t *)((char *)v0
                    + OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel____lazy_storage___cellularDataSettingObserver);
  }
  else
  {
    uint64_t v12 = *v0;
    uint64_t v3 = v12;
    uint64_t v13 = &off_100155278;
    v11[0] = v0;
    type metadata accessor for CellularDataSettingObserver();
    uint64_t v2 = swift_allocObject();
    uint64_t v4 = sub_10002BF58((uint64_t)v11, v12);
    __chkstk_darwin(v4);
    uint64_t v6 = (void *)((char *)&v11[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v7 + 16))(v6);
    uint64_t v8 = *v6;
    *(void *)(v2 + 64) = v3;
    *(void *)(v2 + 72) = &off_100155278;
    *(void *)(v2 + 40) = v8;
    *(void *)(v2 + 24) = 0;
    *(_DWORD *)(v2 + 16) = 0;
    *(unsigned char *)(v2 + 32) = 1;
    *(void *)(v2 + 80) = &_swiftEmptySetSingleton;
    swift_retain();
    sub_100042A1C((uint64_t)v11);
    *(uint64_t *)((char *)v0 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_10002C364()
{
  uint64_t v1 = OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel____lazy_storage___airplaneModeListItemProvider;
  if (*(uint64_t *)((char *)v0
                  + OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel____lazy_storage___airplaneModeListItemProvider))
  {
    uint64_t v2 = *(uint64_t *)((char *)v0
                    + OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel____lazy_storage___airplaneModeListItemProvider);
  }
  else
  {
    uint64_t v13 = *v0;
    uint64_t v3 = v13;
    uint64_t v14 = &off_100155278;
    v12[0] = v0;
    type metadata accessor for AirplaneModeListItemProvider();
    uint64_t v2 = swift_allocObject();
    uint64_t v4 = sub_10002BF58((uint64_t)v12, v13);
    __chkstk_darwin(v4);
    uint64_t v6 = (void *)((char *)&v12[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v7 + 16))(v6);
    uint64_t v8 = *v6;
    uint64_t v9 = (void *)(v2 + OBJC_IVAR____TtC11SettingsApp28AirplaneModeListItemProvider_invalidator);
    _OWORD v9[3] = v3;
    v9[4] = &off_100155278;
    *uint64_t v9 = v8;
    type metadata accessor for PrimarySettingsListItemIdentifier();
    swift_storeEnumTagMultiPayload();
    *(unsigned char *)(v2 + OBJC_IVAR____TtC11SettingsApp28AirplaneModeListItemProvider_airplaneMode) = 0;
    *(void *)(v2 + OBJC_IVAR____TtC11SettingsApp28AirplaneModeListItemProvider_airplaneModeController) = 0;
    swift_retain();
    sub_100042A1C((uint64_t)v12);
    *(uint64_t *)((char *)v0 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t *sub_10002C530(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for PrimarySettingsListItemIdentifier();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
        uint64_t v8 = type metadata accessor for FLFollowUpInformation();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
        goto LABEL_8;
      case 2u:
        uint64_t v10 = type metadata accessor for FLFollowUpInformation();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
        uint64_t v11 = *(int *)(sub_100046B9C(&qword_10015F7F8) + 48);
        uint64_t v12 = (uint64_t *)((char *)a1 + v11);
        uint64_t v13 = (uint64_t *)((char *)a2 + v11);
        uint64_t v14 = v13[1];
        *uint64_t v12 = *v13;
        v12[1] = v14;
        swift_bridgeObjectRetain();
        goto LABEL_8;
      case 3u:
      case 4u:
      case 5u:
        uint64_t v15 = a2[1];
        *a1 = *a2;
        a1[1] = v15;
        swift_bridgeObjectRetain();
LABEL_8:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
        break;
    }
    uint64_t v16 = *(int *)(a3 + 20);
    id v17 = (char *)a1 + v16;
    NSString v18 = (char *)a2 + v16;
    type metadata accessor for PrimarySettingsListItemViewType();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v23 = type metadata accessor for FamilyRowStatus();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v17, v18, v23);
        uint64_t v24 = *(int *)(type metadata accessor for PrimarySettingsListFamilyLinkModel() + 20);
        uint64_t v25 = &v17[v24];
        id v26 = &v18[v24];
        uint64_t v27 = *((void *)v26 + 1);
        *(void *)uint64_t v25 = *(void *)v26;
        *((void *)v25 + 1) = v27;
        swift_bridgeObjectRetain();
        break;
      case 2u:
        id v28 = *(id *)v18;
        uint64_t v29 = *((void *)v18 + 1);
        char v30 = v18[16];
        sub_100047728(*(id *)v18, v29, v30);
        *(void *)id v17 = v28;
        *((void *)v17 + 1) = v29;
        unsigned char v17[16] = v30;
        uint64_t v31 = *((void *)v18 + 4);
        *((void *)v17 + 3) = *((void *)v18 + 3);
        *((void *)v17 + 4) = v31;
        *((_WORD *)v17 + 20) = *((_WORD *)v18 + 20);
        uint64_t v32 = *((void *)v18 + 6);
        uint64_t v33 = *((void *)v18 + 7);
        *((void *)v17 + 6) = v32;
        *((void *)v17 + 7) = v33;
        swift_bridgeObjectRetain();
        swift_retain();
        break;
      case 3u:
        uint64_t v34 = *((void *)v18 + 1);
        *(void *)id v17 = *(void *)v18;
        *((void *)v17 + 1) = v34;
        *((_WORD *)v17 + 8) = *((_WORD *)v18 + 8);
        swift_bridgeObjectRetain();
        break;
      case 4u:
        uint64_t v35 = *((void *)v18 + 1);
        *(void *)id v17 = *(void *)v18;
        *((void *)v17 + 1) = v35;
        *((void *)v17 + 2) = *((void *)v18 + 2);
        *((_WORD *)v17 + 12) = *((_WORD *)v18 + 12);
        swift_bridgeObjectRetain();
        break;
      case 5u:
        id v36 = *(id *)v18;
        uint64_t v37 = *((void *)v18 + 1);
        char v38 = v18[16];
        sub_100047728(*(id *)v18, v37, v38);
        *(void *)id v17 = v36;
        *((void *)v17 + 1) = v37;
        unsigned char v17[16] = v38;
        uint64_t v39 = *((void *)v18 + 4);
        *((void *)v17 + 3) = *((void *)v18 + 3);
        *((void *)v17 + 4) = v39;
        *((_WORD *)v17 + 20) = *((_WORD *)v18 + 20);
        swift_bridgeObjectRetain();
        break;
      case 6u:
        id v40 = *(id *)v18;
        uint64_t v41 = *((void *)v18 + 1);
        char v42 = v18[16];
        sub_100047728(*(id *)v18, v41, v42);
        *(void *)id v17 = v40;
        *((void *)v17 + 1) = v41;
        unsigned char v17[16] = v42;
        uint64_t v43 = *((void *)v18 + 4);
        *((void *)v17 + 3) = *((void *)v18 + 3);
        *((void *)v17 + 4) = v43;
        *((void *)v17 + 5) = *((void *)v18 + 5);
        *((_WORD *)v17 + 24) = *((_WORD *)v18 + 24);
        swift_bridgeObjectRetain();
        break;
      case 7u:
      case 8u:
        id v44 = *(id *)v18;
        uint64_t v45 = *((void *)v18 + 1);
        char v46 = v18[16];
        sub_100047728(*(id *)v18, v45, v46);
        *(void *)id v17 = v44;
        *((void *)v17 + 1) = v45;
        unsigned char v17[16] = v46;
        uint64_t v47 = *((void *)v18 + 4);
        *((void *)v17 + 3) = *((void *)v18 + 3);
        *((void *)v17 + 4) = v47;
        uint64_t v48 = *((void *)v18 + 6);
        *((void *)v17 + 5) = *((void *)v18 + 5);
        *((void *)v17 + 6) = v48;
        *((_WORD *)v17 + 28) = *((_WORD *)v18 + 28);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 9u:
        int v49 = v18[16];
        if (v49 == 255)
        {
          *(_OWORD *)id v17 = *(_OWORD *)v18;
          unsigned char v17[16] = v18[16];
        }
        else
        {
          id v50 = *(id *)v18;
          uint64_t v51 = *((void *)v18 + 1);
          sub_100047728(*(id *)v18, v51, v18[16]);
          *(void *)id v17 = v50;
          *((void *)v17 + 1) = v51;
          unsigned char v17[16] = v49;
        }
        uint64_t v56 = *((void *)v18 + 4);
        *((void *)v17 + 3) = *((void *)v18 + 3);
        *((void *)v17 + 4) = v56;
        uint64_t v57 = *((void *)v18 + 5);
        uint64_t v58 = *((void *)v18 + 6);
        *((void *)v17 + 5) = v57;
        *((void *)v17 + 6) = v58;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 0xAu:
        int v52 = v18[16];
        if (v52 == 255)
        {
          *(_OWORD *)id v17 = *(_OWORD *)v18;
          unsigned char v17[16] = v18[16];
        }
        else
        {
          id v53 = *(id *)v18;
          uint64_t v54 = *((void *)v18 + 1);
          sub_100047728(*(id *)v18, v54, v18[16]);
          *(void *)id v17 = v53;
          *((void *)v17 + 1) = v54;
          unsigned char v17[16] = v52;
        }
        uint64_t v59 = *((void *)v18 + 4);
        *((void *)v17 + 3) = *((void *)v18 + 3);
        *((void *)v17 + 4) = v59;
        v17[40] = v18[40];
        swift_bridgeObjectRetain();
        break;
      default:
        uint64_t v19 = *((void *)v18 + 1);
        if (v19)
        {
          *(void *)id v17 = *(void *)v18;
          *((void *)v17 + 1) = v19;
          uint64_t v20 = *((void *)v18 + 3);
          *((void *)v17 + 2) = *((void *)v18 + 2);
          *((void *)v17 + 3) = v20;
          v17[32] = v18[32];
          objc_super v21 = (void *)*((void *)v18 + 5);
          *((void *)v17 + 5) = v21;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v22 = v21;
        }
        else
        {
          long long v55 = *((_OWORD *)v18 + 1);
          *(_OWORD *)id v17 = *(_OWORD *)v18;
          *((_OWORD *)v17 + 1) = v55;
          *((_OWORD *)v17 + 2) = *((_OWORD *)v18 + 2);
        }
        v17[48] = v18[48];
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_10002CB44(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      swift_bridgeObjectRelease();
      uint64_t v3 = a1 + *(int *)(sub_100046B9C(&qword_10015F8F0) + 48);
      uint64_t v4 = type metadata accessor for NSBundle.PreferencesPluginLocation();
      int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
      uint64_t result = v5(v3, v4);
      break;
    case 1:
    case 2:
    case 3:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 4:
      uint64_t result = swift_release();
      break;
    case 5:
      uint64_t result = sub_100042A1C(a1);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10002CC68(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

uint64_t sub_10002CCAC()
{
  return sub_10002CCC4(*(unsigned char **)(v0 + 16), *(unsigned char *)(v0 + 24), *(unsigned char *)(v0 + 25), *(unsigned char *)(v0 + 26), *(uint64_t (**)(void))(v0 + 32));
}

uint64_t sub_10002CCC4(unsigned char *a1, char a2, char a3, char a4, uint64_t (*a5)(void))
{
  char v10 = *(unsigned char *)(swift_unownedRetainStrong() + 17);
  swift_release();
  char v11 = v10 ^ a2;
  if (v11)
  {
    uint64_t v12 = a5;
    swift_unownedRetainStrong();
    if (qword_10015F088 != -1) {
      swift_once();
    }
    uint64_t v13 = (void *)qword_10016AE60;
    Class isa = Bool._bridgeToObjectiveC()().super.super.isa;
    NSString v15 = String._bridgeToObjectiveC()();
    [v13 setValue:isa forKey:v15];

    a1[17] = a2 & 1;
    swift_release();
    a5 = v12;
  }
  swift_unownedRetainStrong();
  int v16 = a1[18];
  swift_release();
  if (v16 != (a3 & 1))
  {
    swift_unownedRetainStrong();
    if (qword_10015F088 != -1) {
      swift_once();
    }
    id v17 = (void *)qword_10016AE60;
    Class v18 = Bool._bridgeToObjectiveC()().super.super.isa;
    NSString v19 = String._bridgeToObjectiveC()();
    [v17 setValue:v18 forKey:v19];

    a1[18] = a3 & 1;
    swift_release();
    char v11 = 1;
  }
  swift_unownedRetainStrong();
  int v20 = a1[19];
  swift_release();
  swift_unownedRetainStrong();
  if (v20 != (a4 & 1))
  {
    if (qword_10015F088 != -1) {
      swift_once();
    }
    objc_super v21 = (void *)qword_10016AE60;
    Class v22 = Bool._bridgeToObjectiveC()().super.super.isa;
    NSString v23 = String._bridgeToObjectiveC()();
    [v21 setValue:v22 forKey:v23];

    a1[19] = a4 & 1;
    swift_release();
    swift_unownedRetainStrong();
    a1[16] = 1;
    uint64_t result = swift_release();
    return a5(result);
  }
  a1[16] = 1;
  uint64_t result = swift_release();
  if (v11) {
    return a5(result);
  }
  swift_unownedRetainStrong();
  char v25 = a1[16];
  uint64_t result = swift_release();
  if ((v25 & 1) == 0) {
    return a5(result);
  }
  return result;
}

id sub_10002CFB8()
{
  return sub_10002CFC4(v0[2], v0[3], v0[4]);
}

id sub_10002CFC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v19 = a2;
  uint64_t v20 = a3;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v22 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v10 = sub_10002D338();
  char IsRequired = PSSimIsRequired();
  id result = [self sharedInstance];
  if (result)
  {
    uint64_t v13 = result;
    unsigned __int8 v14 = [result isCellularDisabled];

    sub_100055498();
    NSString v15 = (void *)static OS_dispatch_queue.main.getter();
    swift_unownedRetainStrong();
    swift_unownedRetain();
    swift_unownedRetain();
    swift_release();
    swift_unownedRetainStrong();
    swift_unownedRelease();
    swift_unownedRelease();
    swift_unownedRetain();
    swift_release();
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = a1;
    *(unsigned char *)(v16 + 24) = v10;
    *(unsigned char *)(v16 + 25) = IsRequired;
    *(unsigned char *)(v16 + 26) = v14;
    uint64_t v17 = v20;
    *(void *)(v16 + 32) = v19;
    *(void *)(v16 + 40) = v17;
    aBlock[4] = sub_10002CCAC;
    aBlock[5] = v16;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10002CC68;
    aBlock[3] = &unk_100153CD8;
    Class v18 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_100055450((unint64_t *)&qword_1001614F0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100046B9C((uint64_t *)&unk_1001609C0);
    sub_10004D2D4((unint64_t *)&qword_100161500, (uint64_t *)&unk_1001609C0);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v18);

    (*(void (**)(char *, uint64_t))(v22 + 8))(v6, v4);
    return (id)(*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v21);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10002D338()
{
  if (!MGGetBoolAnswer()) {
    return 0;
  }
  uint64_t v0 = +[PSSimStatusCache sharedInstance];
  uint64_t v1 = [v0 subscriptionContexts];

  if ([v1 count])
  {
    long long v15 = 0u;
    long long v16 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    id v2 = v1;
    id v3 = [v2 countByEnumeratingWithState:&v13 objects:v17 count:16];
    if (v3)
    {
      id v4 = v3;
      uint64_t v5 = *(void *)v14;
      uint64_t v6 = kCTSIMSupportSIMStatusNotInserted;
      while (2)
      {
        uint64_t v7 = 0;
        do
        {
          if (*(void *)v14 != v5) {
            objc_enumerationMutation(v2);
          }
          uint64_t v8 = *(void *)(*((void *)&v13 + 1) + 8 * (void)v7);
          uint64_t v9 = +[PSSimStatusCache sharedInstance];
          char v10 = [v9 simStatus:v8];

          LODWORD(v9) = [v10 isEqualToString:v6];
          if (!v9)
          {
            uint64_t v11 = 0;
            goto LABEL_14;
          }
          uint64_t v7 = (char *)v7 + 1;
        }
        while (v4 != v7);
        id v4 = [v2 countByEnumeratingWithState:&v13 objects:v17 count:16];
        if (v4) {
          continue;
        }
        break;
      }
    }
    uint64_t v11 = 1;
LABEL_14:
  }
  else
  {
    uint64_t v11 = 0;
  }

  return v11;
}

uint64_t sub_10002D4D8()
{
  return sub_10002D4E0(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_10002D4E0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for OSSignpostID();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)v21 - v8;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v11 = (void *)Strong;
    uint64_t v12 = *(void *)(Strong + 80);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v13 = sub_10002D7A0(a2, v12);
    swift_bridgeObjectRelease();
    if ((v13 & 1) == 0)
    {
      sub_1000403E0(v11 + 5, v11[8]);
      v21[0] = "Connected Headphones";
      v21[1] = 20;
      char v22 = 2;
      PassthroughSubject.send(_:)();
    }
    v11[10] = a2;
    swift_release();
    swift_bridgeObjectRelease();
  }
  if (qword_10015F180 != -1) {
    swift_once();
  }
  uint64_t v14 = type metadata accessor for OSSignposter();
  sub_1000477B0(v14, (uint64_t)qword_10016B070);
  static OSSignpostID.exclusive.getter();
  long long v15 = OSSignposter.logHandle.getter();
  os_signpost_type_t v16 = static os_signpost_type_t.event.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v9, v3);
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v17 = 0;
    os_signpost_id_t v18 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v15, v16, v18, "ConnectedHeadphonesSectionModelProvider.updateConnectedHeadphones completed", "", v17, 2u);
    swift_slowDealloc();

    uint64_t v19 = *(void (**)(char *, uint64_t))(v4 + 8);
    v19(v9, v3);
    return ((uint64_t (*)(char *, uint64_t))v19)(v7, v3);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  }
}

uint64_t sub_10002D7A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    goto LABEL_24;
  }
  if (!v2 || a1 == a2)
  {
    char v9 = 1;
    return v9 & 1;
  }
  uint64_t v3 = (void *)(a1 + 32);
  uint64_t v4 = (void *)(a2 + 32);
  uint64_t v5 = v2 - 1;
  while (1)
  {
    sub_1000A763C(v3, (uint64_t)v22);
    sub_1000A763C(v4, (uint64_t)v21);
    if (v22[0] == v21[0] && v22[1] == v21[1])
    {
      sub_1000A763C(v22, (uint64_t)v18);
      sub_1000A763C(v21, (uint64_t)v15);
      goto LABEL_12;
    }
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
    sub_1000A763C(v22, (uint64_t)v18);
    sub_1000A763C(v21, (uint64_t)v15);
    if ((v7 & 1) == 0) {
      break;
    }
LABEL_12:
    if (v19 == v16 && v20 == v17)
    {
      sub_1000A7674((uint64_t)v18);
      sub_1000A7674((uint64_t)v15);
      sub_1000A763C(v22, (uint64_t)v14);
      sub_1000A763C(v21, (uint64_t)v13);
    }
    else
    {
      char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
      sub_1000A7674((uint64_t)v18);
      sub_1000A7674((uint64_t)v15);
      sub_1000A763C(v22, (uint64_t)v14);
      sub_1000A763C(v21, (uint64_t)v13);
      if ((v8 & 1) == 0) {
        goto LABEL_23;
      }
    }
    sub_10006E244();
    char v9 = static NSObject.== infix(_:_:)();
    sub_1000A7674((uint64_t)v14);
    sub_1000A7674((uint64_t)v13);
    sub_1000A7674((uint64_t)v21);
    sub_1000A7674((uint64_t)v22);
    BOOL v11 = v5-- != 0;
    if (v9)
    {
      v3 += 10;
      v4 += 10;
      if (v11) {
        continue;
      }
    }
    return v9 & 1;
  }
  sub_1000A7674((uint64_t)v18);
  sub_1000A7674((uint64_t)v15);
  sub_1000A763C(v22, (uint64_t)v14);
  sub_1000A763C(v21, (uint64_t)v13);
LABEL_23:
  sub_1000A7674((uint64_t)v14);
  sub_1000A7674((uint64_t)v13);
  sub_1000A7674((uint64_t)v21);
  sub_1000A7674((uint64_t)v22);
LABEL_24:
  char v9 = 0;
  return v9 & 1;
}

uint64_t sub_10002D998()
{
  return sub_10002D9A0(v0);
}

uint64_t sub_10002D9A0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for OSSignpostID();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  unint64_t v6 = (unint64_t)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  char v8 = (char *)&v56 - v7;
  uint64_t v9 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for DispatchQoS();
  uint64_t v62 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v60 = (char *)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = a1;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v16 = *(void **)(Strong + 88);
    id v17 = v16;
    uint64_t result = swift_release();
    if (!v16)
    {
      __break(1u);
      return result;
    }
    id v19 = [v17 connectedHeadphoneInfo];

    sub_10002E1D8(0, &qword_100161AA0);
    unint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v6 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v2 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v59 = v12;
    if (!v2)
    {
      swift_bridgeObjectRelease();
      uint64_t v21 = _swiftEmptyArrayStorage;
LABEL_25:
      sub_10002E1D8(0, (unint64_t *)&qword_1001609D0);
      uint64_t v51 = (void *)static OS_dispatch_queue.main.getter();
      uint64_t v52 = swift_allocObject();
      *(void *)(v52 + 16) = v61;
      *(void *)(v52 + 24) = v21;
      *(void *)&long long v73 = sub_10002D4D8;
      *((void *)&v73 + 1) = v52;
      *(void *)&long long aBlock = _NSConcreteStackBlock;
      *((void *)&aBlock + 1) = 1107296256;
      *(void *)&long long v72 = sub_10002CC68;
      *((void *)&v72 + 1) = &unk_100153988;
      id v53 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      uint64_t v54 = v60;
      static DispatchQoS.unspecified.getter();
      *(void *)&long long aBlock = _swiftEmptyArrayStorage;
      sub_10002F6A0();
      sub_100046B9C((uint64_t *)&unk_1001609C0);
      sub_10002F644();
      long long v55 = v59;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v53);

      (*(void (**)(char *, uint64_t))(v10 + 8))(v55, v9);
      return (*(uint64_t (**)(char *, uint64_t))(v62 + 8))(v54, v13);
    }
    uint64_t v75 = _swiftEmptyArrayStorage;
    sub_1000F80A8(0, v2 & ~(v2 >> 63), 0);
    if ((v2 & 0x8000000000000000) == 0)
    {
      uint64_t v56 = v13;
      uint64_t v57 = v10;
      uint64_t v58 = v9;
      uint64_t v20 = 0;
      uint64_t v21 = v75;
      unint64_t v65 = v6 & 0xC000000000000001;
      uint64_t v64 = v74;
      char v22 = &selRef_application_configurationForConnectingSceneSession_options_;
      uint64_t v63 = (char *)&type metadata for Any + 8;
      unint64_t v67 = v6;
      uint64_t v66 = v2;
      do
      {
        if (v65) {
          id v23 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v23 = *(id *)(v6 + 8 * v20 + 32);
        }
        uint64_t v24 = v23;
        id v25 = [v23 deviceID:v56, v57, v58];
        uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v68 = v27;
        uint64_t v69 = v26;

        id v28 = [v24 deviceName];
        uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v31 = v30;

        id v32 = [v24 deviceImage];
        id v33 = [v24 v22[148]];
        id v34 = [v33 properties];

        if (v34)
        {
          uint64_t v35 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
        }
        else
        {
          uint64_t v35 = 0;
        }
        id v36 = v22;
        id v37 = [v24 v22[148]];
        id v38 = [v37 userInfo];

        if (v38)
        {
          _bridgeAnyObjectToAny(_:)();
          swift_unknownObjectRelease();
        }
        else
        {
          memset(v70, 0, sizeof(v70));
        }
        *(void *)&long long aBlock = v69;
        *((void *)&aBlock + 1) = v68;
        *(void *)&long long v72 = v29;
        *((void *)&v72 + 1) = v31;
        *(void *)&long long v73 = v32;
        *((void *)&v73 + 1) = v35;
        sub_10001C8A0((uint64_t)v70, (uint64_t)v64);

        uint64_t v75 = v21;
        unint64_t v40 = v21[2];
        unint64_t v39 = v21[3];
        char v22 = v36;
        if (v40 >= v39 >> 1)
        {
          sub_1000F80A8(v39 > 1, v40 + 1, 1);
          uint64_t v21 = v75;
        }
        ++v20;
        void v21[2] = v40 + 1;
        uint64_t v41 = &v21[10 * v40];
        v41[2] = aBlock;
        long long v42 = v72;
        long long v43 = v73;
        long long v44 = v74[1];
        v41[5] = v74[0];
        v41[6] = v44;
        v41[3] = v42;
        v41[4] = v43;
        unint64_t v6 = v67;
      }
      while (v66 != v20);
      swift_bridgeObjectRelease();
      uint64_t v9 = v58;
      uint64_t v10 = v57;
      uint64_t v13 = v56;
      goto LABEL_25;
    }
    __break(1u);
  }
  else if (qword_10015F180 == -1)
  {
    goto LABEL_22;
  }
  swift_once();
LABEL_22:
  uint64_t v45 = type metadata accessor for OSSignposter();
  sub_1000477B0(v45, (uint64_t)qword_10016B070);
  static OSSignpostID.exclusive.getter();
  char v46 = OSSignposter.logHandle.getter();
  os_signpost_type_t v47 = static os_signpost_type_t.event.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 16))(v6, v8, v2);
    uint64_t v48 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v48 = 0;
    os_signpost_id_t v49 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v46, v47, v49, "ConnectedHeadphonesSectionModelProvider.updateConnectedHeadphones bailed", "", v48, 2u);
    swift_slowDealloc();

    id v50 = *(void (**)(char *, uint64_t))(v3 + 8);
    v50(v8, v2);
    return ((uint64_t (*)(unint64_t, uint64_t))v50)(v6, v2);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  }
}

uint64_t sub_10002E1D8(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

void sub_10002E214()
{
}

void sub_10002E21C()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_10002E270();
  }
}

void sub_10002E270()
{
  uint64_t v2 = v0;
  uint64_t v3 = type metadata accessor for DispatchPredicate();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unint64_t v6 = (id *)((char *)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_10015F128 != -1) {
    swift_once();
  }
  uint64_t v7 = (void *)qword_10016AF88;
  void *v6 = qword_10016AF88;
  (*(void (**)(void *, void, uint64_t))(v4 + 104))(v6, enum case for DispatchPredicate.onQueue(_:), v3);
  id v8 = v7;
  uint64_t v9 = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v4 + 8))(v6, v3);
  if ((v9 & 1) == 0)
  {
    __break(1u);
LABEL_24:
    swift_once();
LABEL_20:
    uint64_t v29 = type metadata accessor for Logger();
    sub_1000477B0(v29, (uint64_t)qword_10016B028);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v30 = Logger.logObject.getter();
    os_log_type_t v31 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v30, v31))
    {
      id v32 = (uint8_t *)swift_slowAlloc();
      v36[0] = (id)swift_slowAlloc();
      *(_DWORD *)id v32 = 136446210;
      uint64_t v35 = v9;
      swift_errorRetain();
      sub_100046B9C(&qword_100162500);
      uint64_t v33 = String.init<A>(describing:)();
      uint64_t v35 = sub_100042948(v33, v34, (uint64_t *)v36);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "Error initializing IDSOffGridStateManager: %{public}s", v32, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
    goto LABEL_13;
  }
  uint64_t v10 = OBJC_IVAR____TtC11SettingsApp25SatelliteListItemProvider_stewieStateMonitor;
  uint64_t v11 = *(void *)(v2 + OBJC_IVAR____TtC11SettingsApp25SatelliteListItemProvider_stewieStateMonitor);
  BOOL v1 = v11 == 0;
  if (!v11)
  {
    id v12 = [objc_allocWithZone((Class)CTStewieStateMonitor) initWithDelegate:v2 queue:qword_10016AF88];
    uint64_t v13 = *(void **)(v2 + v10);
    *(void *)(v2 + v10) = v12;

    uint64_t v14 = *(void **)(v2 + v10);
    if (v14) {
      [v14 start];
    }
  }
  v36[3] = &type metadata for CoreTelephonyFeatureFlags;
  v36[4] = (id)sub_10004FADC();
  LOBYTE(v36[0]) = 1;
  char v15 = isFeatureEnabled(_:)();
  sub_100042A1C((uint64_t)v36);
  if (v15)
  {
    uint64_t v16 = OBJC_IVAR____TtC11SettingsApp25SatelliteListItemProvider_ctClient;
    if (!*(void *)(v2 + OBJC_IVAR____TtC11SettingsApp25SatelliteListItemProvider_ctClient))
    {
      id v17 = [objc_allocWithZone((Class)CoreTelephonyClient) initWithQueue:qword_10016AF88];
      os_signpost_id_t v18 = *(void **)(v2 + v16);
      *(void *)(v2 + v16) = v17;

      id v19 = *(void **)(v2 + v16);
      if (v19) {
        [v19 setDelegate:v2];
      }
      sub_10000EB80();
      BOOL v1 = 1;
    }
  }
  uint64_t v20 = OBJC_IVAR____TtC11SettingsApp25SatelliteListItemProvider_idsOffGridStateManager;
  if (!*(void *)(v2 + OBJC_IVAR____TtC11SettingsApp25SatelliteListItemProvider_idsOffGridStateManager))
  {
    uint64_t v21 = (void *)qword_10016AF88;
    id v22 = objc_allocWithZone((Class)IDSOffGridStateManager);
    v36[0] = 0;
    id v23 = v21;
    id v24 = [v22 initWithQueue:v23 error:v36];
    id v25 = v36[0];
    if (v24)
    {

      uint64_t v26 = *(void **)(v2 + v20);
      *(void *)(v2 + v20) = v24;

      uint64_t v27 = *(void **)(v2 + v20);
      if (v27) {
        [v27 setDelegate:v2];
      }
      goto LABEL_18;
    }
    id v28 = v25;
    uint64_t v9 = _convertNSErrorToError(_:)();

    swift_willThrow();
    if (qword_10015F168 == -1) {
      goto LABEL_20;
    }
    goto LABEL_24;
  }
LABEL_13:
  if (v1) {
LABEL_18:
  }
    sub_1000194FC();
}

uint64_t sub_10002E730()
{
  return sub_10002E73C(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_10002E73C(uint64_t a1, char a2)
{
  uint64_t v3 = type metadata accessor for OSSignpostID();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)v20 - v8;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v11 = Strong;
    uint64_t v12 = OBJC_IVAR____TtC11SettingsApp24ClassKitListItemProvider_showClassKit;
    if (*(unsigned char *)(Strong + OBJC_IVAR____TtC11SettingsApp24ClassKitListItemProvider_showClassKit) != (a2 & 1))
    {
      sub_1000403E0((void *)(Strong + OBJC_IVAR____TtC11SettingsApp24ClassKitListItemProvider_invalidator), *(void *)(Strong + OBJC_IVAR____TtC11SettingsApp24ClassKitListItemProvider_invalidator + 24));
      v20[0] = "ClassKit";
      v20[1] = 8;
      char v21 = 2;
      PassthroughSubject.send(_:)();
    }
    *(unsigned char *)(v11 + v12) = a2 & 1;
    swift_release();
  }
  if (qword_10015F180 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for OSSignposter();
  sub_1000477B0(v13, (uint64_t)qword_10016B070);
  static OSSignpostID.exclusive.getter();
  uint64_t v14 = OSSignposter.logHandle.getter();
  os_signpost_type_t v15 = static os_signpost_type_t.event.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v9, v3);
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v16 = 0;
    os_signpost_id_t v17 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v14, v15, v17, "ClassKitListItemProvider.updateClassKitVisibility completed", "", v16, 2u);
    swift_slowDealloc();

    os_signpost_id_t v18 = *(void (**)(char *, uint64_t))(v4 + 8);
    v18(v9, v3);
    return ((uint64_t (*)(char *, uint64_t))v18)(v7, v3);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  }
}

id sub_10002E9E0()
{
  return sub_10002E9E8(v0);
}

id sub_10002E9E8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for DispatchQoS();
  uint64_t v6 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = [self shared];
  if (result)
  {
    uint64_t v10 = result;
    unsigned __int8 v11 = [result settingsUIVisible];

    sub_100055498();
    uint64_t v12 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = a1;
    *(unsigned char *)(v13 + 24) = v11;
    aBlock[4] = sub_10002E730;
    aBlock[5] = v13;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10002CC68;
    aBlock[3] = &unk_100153580;
    uint64_t v14 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_1000553C0((unint64_t *)&qword_1001614F0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100046B9C((uint64_t *)&unk_1001609C0);
    sub_10004D2D4((unint64_t *)&qword_100161500, (uint64_t *)&unk_1001609C0);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v14);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return (id)(*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v16);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10002ED00()
{
  return sub_10002ED0C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_10002ED0C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v5 = type metadata accessor for OSSignpostID();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  unsigned __int8 v11 = (char *)v25 - v10;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v13 = Strong;
    unint64_t v14 = *(void *)(Strong + 24);
    switch(a3)
    {
      case 0uLL:
        if (v14) {
          goto LABEL_17;
        }
        break;
      case 1uLL:
        if (v14 != 1) {
          goto LABEL_17;
        }
        break;
      case 2uLL:
        if (v14 != 2) {
          goto LABEL_17;
        }
        break;
      case 3uLL:
        if (v14 != 3) {
          goto LABEL_17;
        }
        break;
      default:
        if (v14 >= 4
          && (*(void *)(Strong + 16) == a2 ? (BOOL v15 = v14 == a3) : (BOOL v15 = 0),
              v15 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
        {
          swift_bridgeObjectRetain();
        }
        else
        {
LABEL_17:
          sub_1000403E0((void *)(v13 + OBJC_IVAR____TtC11SettingsApp20WiFiListItemProvider_invalidator), *(void *)(v13 + OBJC_IVAR____TtC11SettingsApp20WiFiListItemProvider_invalidator + 24));
          v25[0] = "WiFi State";
          v25[1] = 10;
          char v26 = 2;
          sub_100054970(a2, a3);
          PassthroughSubject.send(_:)();
        }
        break;
    }
    uint64_t v16 = *(void *)(v13 + 16);
    unint64_t v17 = *(void *)(v13 + 24);
    *(void *)(v13 + 16) = a2;
    *(void *)(v13 + 24) = a3;
    sub_10002F040(v16, v17);
    swift_release();
  }
  if (qword_10015F180 != -1) {
    swift_once();
  }
  uint64_t v18 = type metadata accessor for OSSignposter();
  sub_1000477B0(v18, (uint64_t)qword_10016B070);
  static OSSignpostID.exclusive.getter();
  id v19 = OSSignposter.logHandle.getter();
  os_signpost_type_t v20 = static os_signpost_type_t.event.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v5);
    char v21 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)char v21 = 0;
    os_signpost_id_t v22 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v19, v20, v22, "WiFiListItemProvider.updateWiFiState completed", "", v21, 2u);
    swift_slowDealloc();

    id v23 = *(void (**)(char *, uint64_t))(v6 + 8);
    v23(v11, v5);
    return ((uint64_t (*)(char *, uint64_t))v23)(v9, v5);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  }
}

uint64_t sub_10002F040(uint64_t a1, unint64_t a2)
{
  if (a2 >= 4) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10002F054()
{
  return sub_10002F05C(v0);
}

uint64_t sub_10002F05C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for OSSignpostID();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v38 - v7;
  uint64_t v9 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v41 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  unsigned __int8 v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DispatchQoS();
  uint64_t v39 = *(void *)(v12 - 8);
  uint64_t v40 = v12;
  __chkstk_darwin(v12);
  unint64_t v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v16 = *(void **)(Strong + OBJC_IVAR____TtC11SettingsApp20WiFiListItemProvider_wifiMonitor);
    id v17 = v16;
    uint64_t result = swift_release();
    if (v16)
    {
      id v19 = [v17 state];

      swift_beginAccess();
      uint64_t v20 = swift_weakLoadStrong();
      id v21 = (id)v20;
      if (!v20) {
        goto LABEL_15;
      }
      os_signpost_id_t v22 = *(void **)(v20 + OBJC_IVAR____TtC11SettingsApp20WiFiListItemProvider_wifiMonitor);
      id v23 = v22;
      uint64_t result = swift_release();
      if (v22)
      {
        id v21 = [v23 linkQuality];

        if (v21)
        {
          id v24 = [v21 ssid];

          if (v24)
          {
            id v21 = (id)static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v26 = v25;

            if ((unint64_t)v19 > 5)
            {
LABEL_18:
              swift_bridgeObjectRelease();
              id v33 = 0;
              uint64_t v34 = 1;
LABEL_26:
              sub_100055498();
              uint64_t v35 = (void *)static OS_dispatch_queue.main.getter();
              id v36 = (void *)swift_allocObject();
              v36[2] = a1;
              v36[3] = v33;
              v36[4] = v34;
              aBlock[4] = sub_10002ED00;
              aBlock[5] = v36;
              aBlock[0] = _NSConcreteStackBlock;
              aBlock[1] = 1107296256;
              aBlock[2] = sub_10002CC68;
              aBlock[3] = &unk_100154448;
              id v37 = _Block_copy(aBlock);
              swift_retain();
              swift_release();
              static DispatchQoS.unspecified.getter();
              aBlock[0] = _swiftEmptyArrayStorage;
              sub_10002F6A0();
              sub_100046B9C((uint64_t *)&unk_1001609C0);
              sub_10002F644();
              dispatch thunk of SetAlgebra.init<A>(_:)();
              OS_dispatch_queue.async(group:qos:flags:execute:)();
              _Block_release(v37);

              (*(void (**)(char *, uint64_t))(v41 + 8))(v11, v9);
              return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v14, v40);
            }
LABEL_16:
            switch((unint64_t)v19)
            {
              case 1uLL:
                swift_bridgeObjectRelease();
                id v33 = 0;
                uint64_t v34 = 2;
                break;
              case 2uLL:
              case 3uLL:
              case 5uLL:
                swift_bridgeObjectRelease();
                id v33 = 0;
                uint64_t v34 = 3;
                break;
              case 4uLL:
                if (v26) {
                  id v33 = v21;
                }
                else {
                  id v33 = 0;
                }
                if (v26) {
                  uint64_t v34 = v26;
                }
                else {
                  uint64_t v34 = 3;
                }
                break;
              default:
                goto LABEL_18;
            }
            goto LABEL_26;
          }
          id v21 = 0;
        }
LABEL_15:
        uint64_t v26 = 0;
        goto LABEL_16;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  else
  {
    if (qword_10015F180 != -1) {
      swift_once();
    }
    uint64_t v27 = type metadata accessor for OSSignposter();
    sub_1000477B0(v27, (uint64_t)qword_10016B070);
    static OSSignpostID.exclusive.getter();
    id v28 = OSSignposter.logHandle.getter();
    os_signpost_type_t v29 = static os_signpost_type_t.event.getter();
    if (OS_os_log.signpostsEnabled.getter())
    {
      (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
      uint64_t v30 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v30 = 0;
      os_signpost_id_t v31 = OSSignpostID.rawValue.getter();
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v28, v29, v31, "WiFiListItemProvider.updateWiFiState bailed", "", v30, 2u);
      swift_slowDealloc();

      id v32 = *(void (**)(char *, uint64_t))(v3 + 8);
      v32(v8, v2);
      return ((uint64_t (*)(char *, uint64_t))v32)(v6, v2);
    }
    else
    {

      return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
    }
  }
  return result;
}

unint64_t sub_10002F644()
{
  unint64_t result = qword_100161500;
  if (!qword_100161500)
  {
    sub_10004D318((uint64_t *)&unk_1001609C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100161500);
  }
  return result;
}

unint64_t sub_10002F6A0()
{
  unint64_t result = qword_1001614F0;
  if (!qword_1001614F0)
  {
    type metadata accessor for DispatchWorkItemFlags();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001614F0);
  }
  return result;
}

uint64_t sub_10002F6F8()
{
  return sub_10002F710(*(unsigned char *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40), *(void *)(v0 + 48), *(unsigned char *)(v0 + 56));
}

uint64_t sub_10002F710(unsigned __int8 a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6)
{
  uint64_t v24 = a5;
  int v9 = a1;
  uint64_t v10 = type metadata accessor for OSSignpostID();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  unint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v24 - v15;
  if (v9 != 2)
  {
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      sub_10002F9EC(v9 & 1);
      swift_release();
    }
  }
  if ((a4 & 1) == 0)
  {
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      sub_10002FC30(a3);
      swift_release();
    }
  }
  if ((a6 & 1) == 0)
  {
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      sub_10002FB0C(v24);
      swift_release();
    }
  }
  if (qword_10015F180 != -1) {
    swift_once();
  }
  uint64_t v17 = type metadata accessor for OSSignposter();
  sub_1000477B0(v17, (uint64_t)qword_10016B070);
  static OSSignpostID.exclusive.getter();
  uint64_t v18 = OSSignposter.logHandle.getter();
  os_signpost_type_t v19 = static os_signpost_type_t.event.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v14, v16, v10);
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v20 = 0;
    os_signpost_id_t v21 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v18, v19, v21, "VPNListItemProvider.updateVPNState completed", "", v20, 2u);
    swift_slowDealloc();

    os_signpost_id_t v22 = *(void (**)(char *, uint64_t))(v11 + 8);
    v22(v16, v10);
    return ((uint64_t (*)(char *, uint64_t))v22)(v14, v10);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v16, v10);
  }
}

void sub_10002F9EC(char a1)
{
  uint64_t v2 = v1;
  if (qword_10015F0B8 != -1) {
    swift_once();
  }
  uint64_t v4 = (void *)qword_10016AEC0;
  int v5 = a1 & 1;
  Class isa = Bool._bridgeToObjectiveC()().super.super.isa;
  NSString v7 = String._bridgeToObjectiveC()();
  [v4 setValue:isa forKey:v7];

  uint64_t v8 = OBJC_IVAR____TtC11SettingsApp19VPNListItemProvider_hasRelayConfigurations;
  if (*(unsigned __int8 *)(v2 + OBJC_IVAR____TtC11SettingsApp19VPNListItemProvider_hasRelayConfigurations) != v5)
  {
    sub_1000403E0((void *)(v2 + OBJC_IVAR____TtC11SettingsApp19VPNListItemProvider_invalidator), *(void *)(v2 + OBJC_IVAR____TtC11SettingsApp19VPNListItemProvider_invalidator + 24));
    PassthroughSubject.send(_:)();
  }
  *(unsigned char *)(v2 + v8) = v5;
}

void sub_10002FB0C(uint64_t a1)
{
  uint64_t v2 = v1;
  if (qword_10015F0B8 != -1) {
    swift_once();
  }
  uint64_t v4 = (void *)qword_10016AEC0;
  Class isa = UInt._bridgeToObjectiveC()().super.super.isa;
  NSString v6 = String._bridgeToObjectiveC()();
  [v4 setValue:isa forKey:v6];

  uint64_t v7 = OBJC_IVAR____TtC11SettingsApp19VPNListItemProvider_connectivityState;
  if (*(void *)(v2 + OBJC_IVAR____TtC11SettingsApp19VPNListItemProvider_connectivityState) != a1)
  {
    sub_1000403E0((void *)(v2 + OBJC_IVAR____TtC11SettingsApp19VPNListItemProvider_invalidator), *(void *)(v2 + OBJC_IVAR____TtC11SettingsApp19VPNListItemProvider_invalidator + 24));
    PassthroughSubject.send(_:)();
  }
  *(void *)(v2 + v7) = a1;
}

void sub_10002FC30(uint64_t a1)
{
  uint64_t v2 = v1;
  if (qword_10015F0B8 != -1) {
    swift_once();
  }
  uint64_t v4 = (void *)qword_10016AEC0;
  Class isa = UInt._bridgeToObjectiveC()().super.super.isa;
  NSString v6 = String._bridgeToObjectiveC()();
  [v4 setValue:isa forKey:v6];

  uint64_t v7 = OBJC_IVAR____TtC11SettingsApp19VPNListItemProvider_visibilityStyle;
  if (*(void *)(v2 + OBJC_IVAR____TtC11SettingsApp19VPNListItemProvider_visibilityStyle) != a1)
  {
    sub_1000403E0((void *)(v2 + OBJC_IVAR____TtC11SettingsApp19VPNListItemProvider_invalidator), *(void *)(v2 + OBJC_IVAR____TtC11SettingsApp19VPNListItemProvider_invalidator + 24));
    PassthroughSubject.send(_:)();
  }
  *(void *)(v2 + v7) = a1;
}

uint64_t sub_10002FD54()
{
  return sub_10002FD5C(v0);
}

uint64_t sub_10002FD5C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  int v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v41 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  p_superclass = &OBJC_METACLASS____TtC11SettingsApp25ClassroomListItemProvider.superclass;
  if (Strong)
  {
    uint64_t v11 = *(void **)(Strong + OBJC_IVAR____TtC11SettingsApp19VPNListItemProvider_vpnConnectivityManager);
    id v12 = v11;
    uint64_t result = swift_release();
    if (!v11)
    {
      __break(1u);
      goto LABEL_15;
    }
    unsigned __int8 v14 = [v12 hasRelayConfigurations];

    p_superclass = (__objc2_class **)(&OBJC_METACLASS____TtC11SettingsApp25ClassroomListItemProvider + 8);
  }
  else
  {
    unsigned __int8 v14 = 2;
  }
  uint64_t v39 = v6;
  swift_beginAccess();
  uint64_t v15 = swift_weakLoadStrong();
  uint64_t v16 = v15;
  uint64_t v40 = v3;
  uint64_t v38 = v2;
  if (!v15)
  {
    id v25 = 0;
    goto LABEL_9;
  }
  unsigned __int8 v17 = v14;
  uint64_t v18 = v8;
  uint64_t v19 = a1;
  uint64_t v20 = v5;
  os_signpost_id_t v21 = p_superclass;
  os_signpost_id_t v22 = *(__objc2_class **)((char *)&p_superclass[174]->isa + v15);
  id v23 = v22;
  uint64_t result = swift_release();
  if (!v22)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  id v24 = [v23 visibilityStyle];

  p_superclass = v21;
  int v5 = v20;
  a1 = v19;
  uint64_t v8 = v18;
  id v25 = v24;
  unsigned __int8 v14 = v17;
LABEL_9:
  swift_beginAccess();
  uint64_t v26 = swift_weakLoadStrong();
  uint64_t v27 = v26;
  uint64_t v28 = a1;
  if (!v26)
  {
    unsigned __int8 v31 = v14;
    id v32 = 0;
    goto LABEL_13;
  }
  os_signpost_type_t v29 = *(__objc2_class **)((char *)&p_superclass[174]->isa + v26);
  id v30 = v29;
  uint64_t result = swift_release();
  if (v29)
  {
    unsigned __int8 v31 = v14;
    id v32 = [v30 connectivityState];

LABEL_13:
    BOOL v33 = v16 == 0;
    sub_100055498();
    uint64_t v34 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v35 = swift_allocObject();
    *(unsigned char *)(v35 + 16) = v31;
    *(void *)(v35 + 24) = v28;
    *(void *)(v35 + 32) = v25;
    *(unsigned char *)(v35 + 40) = v33;
    *(void *)(v35 + 48) = v32;
    *(unsigned char *)(v35 + 56) = v27 == 0;
    aBlock[4] = sub_10002F6F8;
    aBlock[5] = v35;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10002CC68;
    aBlock[3] = &unk_1001542C0;
    id v36 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_10002F6A0();
    sub_100046B9C((uint64_t *)&unk_1001609C0);
    sub_10002F644();
    uint64_t v37 = v38;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v36);

    (*(void (**)(char *, uint64_t))(v40 + 8))(v5, v37);
    return (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v8, v39);
  }
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_100030184(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v4 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = *(void *)(a2 + v5);
  uint64_t v9 = *(void *)(a2 + v5 + 8);
  unsigned __int8 v10 = *(unsigned char *)(a2 + v5 + 16);
  swift_retain();
  sub_10003DA14(v8, v9, v10);
  *(void *)uint64_t v6 = v8;
  *(void *)(v6 + 8) = v9;
  *(unsigned char *)(v6 + 16) = v10;
  uint64_t v11 = *(void *)(v7 + 32);
  *(void *)(v6 + 24) = *(void *)(v7 + 24);
  *(void *)(v6 + 32) = v11;
  uint64_t v12 = type metadata accessor for PrimarySettingsListSectionModel();
  uint64_t v13 = *(int *)(v12 + 24);
  __dst = (void *)(v6 + v13);
  unsigned __int8 v14 = (const void *)(v7 + v13);
  uint64_t v15 = type metadata accessor for LocalizedStringResource();
  uint64_t v16 = *(void *)(v15 - 8);
  unsigned __int8 v17 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48);
  swift_bridgeObjectRetain();
  if (v17(v14, 1, v15))
  {
    uint64_t v18 = sub_100046B9C(&qword_100163C30);
    memcpy(__dst, v14, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v16 + 16))(__dst, v14, v15);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(__dst, 0, 1, v15);
  }
  *(void *)(v6 + *(int *)(v12 + 28)) = *(void *)(v7 + *(int *)(v12 + 28));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_10003031C@<X0>(uint64_t a1@<X8>)
{
  return sub_100030350(v1, a1, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
}

uint64_t sub_100030350(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000303B8@<X0>(uint64_t a1@<X8>)
{
  sub_100030C58();
  swift_bridgeObjectRetain();
  uint64_t result = Text.init<A>(_:)();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_100030424(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v65 = a1;
  uint64_t v76 = type metadata accessor for PrimarySettingsListItemViewType();
  uint64_t v7 = __chkstk_darwin(v76);
  uint64_t v9 = (char *)&v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v63 - v10;
  uint64_t v83 = type metadata accessor for PrimarySettingsListItemModel();
  uint64_t v12 = __chkstk_darwin(v83);
  uint64_t v72 = (uint64_t)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v63 - v15;
  uint64_t result = __chkstk_darwin(v14);
  uint64_t v75 = (uint64_t)&v63 - v19;
  uint64_t v69 = a3;
  uint64_t v64 = a2;
  if (a3 != a2)
  {
    uint64_t v20 = *(void *)(v18 + 72);
    unint64_t v67 = a4;
    uint64_t v68 = v20;
    uint64_t v77 = v20 * v69;
    uint64_t v78 = v20 * (v69 - 1);
    uint64_t v70 = v16;
    while (1)
    {
      uint64_t v21 = 0;
      uint64_t v22 = v65;
      while (2)
      {
        uint64_t v23 = *a4;
        uint64_t v74 = v77 + v21;
        uint64_t v24 = v75;
        sub_100030B30(v77 + v21 + v23, v75, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
        uint64_t v73 = v78 + v21;
        sub_100030B30(v78 + v21 + v23, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
        sub_100030B30(v24 + *(int *)(v83 + 20), (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemViewType);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            id v30 = type metadata accessor for PrimarySettingsListFamilyLinkModel;
            goto LABEL_13;
          case 2u:
            id v32 = *(void **)v11;
            uint64_t v31 = *((void *)v11 + 1);
            uint64_t v25 = *((void *)v11 + 4);
            uint64_t v71 = *((void *)v11 + 3);
            char v33 = v11[16];
            swift_bridgeObjectRetain();
            char v34 = v33;
            a4 = v67;
            sub_100046F04(v32, v31, v34);
            uint64_t v16 = v70;
            swift_release();
            goto LABEL_17;
          case 3u:
          case 4u:
            uint64_t v25 = *((void *)v11 + 1);
            uint64_t v71 = *(void *)v11;
            break;
          case 5u:
            uint64_t v35 = *(void **)v11;
            uint64_t v36 = *((void *)v11 + 1);
            uint64_t v25 = *((void *)v11 + 4);
            uint64_t v71 = *((void *)v11 + 3);
            sub_100046F04(v35, v36, v11[16]);
            break;
          case 6u:
            uint64_t v38 = *(void **)v11;
            uint64_t v37 = *((void *)v11 + 1);
            uint64_t v25 = *((void *)v11 + 4);
            uint64_t v71 = *((void *)v11 + 3);
            char v39 = v11[16];
            swift_bridgeObjectRetain();
            char v40 = v39;
            a4 = v67;
            sub_100046F04(v38, v37, v40);
            goto LABEL_17;
          case 7u:
          case 8u:
            uint64_t v27 = *(void **)v11;
            uint64_t v26 = *((void *)v11 + 1);
            uint64_t v25 = *((void *)v11 + 4);
            uint64_t v71 = *((void *)v11 + 3);
            char v28 = v11[16];
            swift_bridgeObjectRetain();
            char v29 = v28;
            uint64_t v16 = v70;
            sub_100046F04(v27, v26, v29);
            a4 = v67;
            swift_bridgeObjectRelease();
            goto LABEL_17;
          case 9u:
            os_signpost_type_t v47 = *(void **)v11;
            uint64_t v48 = *((void *)v11 + 1);
            uint64_t v25 = *((void *)v11 + 4);
            uint64_t v71 = *((void *)v11 + 3);
            sub_10006EB80(v47, v48, v11[16]);
LABEL_17:
            swift_bridgeObjectRelease();
            break;
          case 0xAu:
            os_signpost_id_t v49 = *(void **)v11;
            uint64_t v50 = *((void *)v11 + 1);
            uint64_t v25 = *((void *)v11 + 4);
            uint64_t v71 = *((void *)v11 + 3);
            sub_10006EB80(v49, v50, v11[16]);
            break;
          default:
            id v30 = type metadata accessor for PrimarySettingsListItemViewType;
LABEL_13:
            sub_100030BF8((uint64_t)v11, (uint64_t (*)(void))v30);
            uint64_t v71 = 0;
            uint64_t v25 = 0;
            break;
        }
        sub_100030B30((uint64_t)&v16[*(int *)(v83 + 20)], (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemViewType);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v51 = type metadata accessor for PrimarySettingsListFamilyLinkModel;
            goto LABEL_26;
          case 2u:
            id v53 = *(void **)v9;
            uint64_t v52 = *((void *)v9 + 1);
            uint64_t v41 = *((void *)v9 + 3);
            uint64_t v42 = *((void *)v9 + 4);
            uint64_t v66 = *((void *)v9 + 7);
            char v54 = v9[16];
            swift_bridgeObjectRetain();
            char v55 = v54;
            a4 = v67;
            sub_100046F04(v53, v52, v55);
            swift_release();
            goto LABEL_32;
          case 3u:
          case 4u:
            uint64_t v41 = *(void *)v9;
            uint64_t v42 = *((void *)v9 + 1);
            if (!v25) {
              goto LABEL_41;
            }
            goto LABEL_33;
          case 5u:
            uint64_t v41 = *((void *)v9 + 3);
            uint64_t v42 = *((void *)v9 + 4);
            sub_100046F04(*(void **)v9, *((void *)v9 + 1), v9[16]);
            if (!v25) {
              goto LABEL_41;
            }
            goto LABEL_33;
          case 6u:
            uint64_t v56 = *(void **)v9;
            uint64_t v57 = *((void *)v9 + 1);
            uint64_t v41 = *((void *)v9 + 3);
            uint64_t v42 = *((void *)v9 + 4);
            char v58 = v9[16];
            swift_bridgeObjectRetain();
            uint64_t v59 = v57;
            a4 = v67;
            sub_100046F04(v56, v59, v58);
            goto LABEL_32;
          case 7u:
          case 8u:
            long long v44 = *(void **)v9;
            uint64_t v43 = *((void *)v9 + 1);
            uint64_t v41 = *((void *)v9 + 3);
            uint64_t v42 = *((void *)v9 + 4);
            uint64_t v66 = *((void *)v9 + 6);
            char v45 = v9[16];
            swift_bridgeObjectRetain();
            char v46 = v45;
            a4 = v67;
            sub_100046F04(v44, v43, v46);
            swift_bridgeObjectRelease();
            goto LABEL_32;
          case 9u:
            uint64_t v41 = *((void *)v9 + 3);
            uint64_t v42 = *((void *)v9 + 4);
            sub_10006EB80(*(void **)v9, *((void *)v9 + 1), v9[16]);
LABEL_32:
            swift_bridgeObjectRelease();
            if (v25) {
              goto LABEL_33;
            }
            goto LABEL_41;
          case 0xAu:
            uint64_t v41 = *((void *)v9 + 3);
            uint64_t v42 = *((void *)v9 + 4);
            sub_10006EB80(*(void **)v9, *((void *)v9 + 1), v9[16]);
            if (!v25) {
              goto LABEL_41;
            }
            goto LABEL_33;
          default:
            uint64_t v51 = type metadata accessor for PrimarySettingsListItemViewType;
LABEL_26:
            sub_100030BF8((uint64_t)v9, (uint64_t (*)(void))v51);
            uint64_t v41 = 0;
            uint64_t v42 = 0;
            if (v25)
            {
LABEL_33:
              if (v42)
              {
                uint64_t v81 = v71;
                uint64_t v82 = v25;
                uint64_t v79 = v41;
                uint64_t v80 = v42;
                sub_100030C58();
                uint64_t v60 = StringProtocol.localizedStandardCompare<A>(_:)();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                uint64_t v16 = v70;
                sub_100030BF8((uint64_t)v70, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
                uint64_t result = sub_100030BF8(v75, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
                if (v60 != -1) {
                  goto LABEL_5;
                }
                uint64_t v61 = *a4;
                if (!*a4)
                {
LABEL_43:
                  __break(1u);
                  return result;
                }
              }
              else
              {
                swift_bridgeObjectRelease();
                uint64_t v16 = v70;
                sub_100030BF8((uint64_t)v70, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
                uint64_t result = sub_100030BF8(v75, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
                uint64_t v61 = *a4;
                if (!*a4) {
                  goto LABEL_43;
                }
              }
              uint64_t v62 = v61 + v78 + v21;
              sub_100030CAC(v61 + v77 + v21, v72);
              swift_arrayInitWithTakeFrontToBack();
              uint64_t result = sub_100030CAC(v72, v62);
              v21 -= v68;
              if (v69 == ++v22) {
                goto LABEL_5;
              }
              continue;
            }
LABEL_41:
            if (v42) {
              swift_bridgeObjectRelease();
            }
            uint64_t v16 = v70;
            sub_100030BF8((uint64_t)v70, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
            uint64_t result = sub_100030BF8(v75, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
LABEL_5:
            v78 += v68;
            v77 += v68;
            if (++v69 == v64) {
              return result;
            }
            break;
        }
        break;
      }
    }
  }
  return result;
}

uint64_t sub_100030B30(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100030B98(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100030BF8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_100030C58()
{
  unint64_t result = qword_100164010;
  if (!qword_100164010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100164010);
  }
  return result;
}

uint64_t sub_100030CAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PrimarySettingsListItemModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100030D10(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FamilyRowStatus();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);

  return swift_bridgeObjectRelease();
}

void sub_100030D88(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  type metadata accessor for PrimarySettingsListItemIdentifier();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
      uint64_t v5 = type metadata accessor for FLFollowUpInformation();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
      break;
    case 2u:
      uint64_t v6 = type metadata accessor for FLFollowUpInformation();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v4, v6);
      sub_100046B9C(&qword_10015F7F8);
      goto LABEL_4;
    case 3u:
    case 4u:
    case 5u:
LABEL_4:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }
  uint64_t v7 = v4 + *(int *)(type metadata accessor for PrimarySettingsListItemModel() + 20);
  type metadata accessor for PrimarySettingsListItemViewType();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      if (*(void *)(v7 + 8))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v14 = *(void **)(v7 + 40);
      }
      return;
    case 1u:
      uint64_t v15 = type metadata accessor for FamilyRowStatus();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v7, v15);
      type metadata accessor for PrimarySettingsListFamilyLinkModel();
      break;
    case 2u:
      sub_100046F04(*(void **)v7, *(void *)(v7 + 8), *(unsigned char *)(v7 + 16));
      swift_bridgeObjectRelease();
      swift_release();
      return;
    case 3u:
    case 4u:
      break;
    case 5u:
    case 6u:
      uint64_t v8 = *(void **)v7;
      uint64_t v9 = *(void *)(v7 + 8);
      LOBYTE(v10) = *(unsigned char *)(v7 + 16);
      goto LABEL_23;
    case 7u:
    case 8u:
      uint64_t v11 = *(void **)v7;
      uint64_t v12 = *(void *)(v7 + 8);
      LOBYTE(v13) = *(unsigned char *)(v7 + 16);
      goto LABEL_19;
    case 9u:
      int v13 = *(unsigned __int8 *)(v7 + 16);
      if (v13 == 255) {
        goto LABEL_20;
      }
      uint64_t v11 = *(void **)v7;
      uint64_t v12 = *(void *)(v7 + 8);
LABEL_19:
      sub_100046F04(v11, v12, v13);
LABEL_20:
      swift_bridgeObjectRelease();
      break;
    case 0xAu:
      int v10 = *(unsigned __int8 *)(v7 + 16);
      if (v10 == 255) {
        break;
      }
      uint64_t v8 = *(void **)v7;
      uint64_t v9 = *(void *)(v7 + 8);
LABEL_23:
      sub_100046F04(v8, v9, v10);
      break;
    default:
      return;
  }

  swift_bridgeObjectRelease();
}

uint64_t sub_100031014(uint64_t *a1)
{
  uint64_t v1 = *a1;
  swift_getKeyPath();
  sub_100037444(v1);
  sub_10003736C((unint64_t *)&unk_100163AC0, (void (*)(uint64_t))type metadata accessor for PrimarySettingsListModel);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  sub_100035494(v1);
  return swift_release();
}

uint64_t sub_100031110@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v335 = a1;
  uint64_t v3 = sub_100046B9C(&qword_100163690);
  uint64_t v360 = *(void *)(v3 - 8);
  uint64_t v4 = __chkstk_darwin(v3);
  v358 = (char *)&v255 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v359 = (char *)&v255 - v6;
  uint64_t v322 = type metadata accessor for SettingsAppPrimaryNavigationMode();
  uint64_t v321 = *(void *)(v322 - 8);
  __chkstk_darwin(v322);
  v320 = (char *)&v255 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v343 = (char *)type metadata accessor for PPTTestCase.Name();
  v356 = (char *)*((void *)v343 - 1);
  __chkstk_darwin(v343);
  v316 = (char *)&v255 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v282 = type metadata accessor for BalancedNavigationSplitViewStyle();
  uint64_t v283 = *(void *)(v282 - 8);
  __chkstk_darwin(v282);
  v278 = (char *)&v255 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for SettingsNavigationSplitView();
  uint64_t v11 = v10 - 8;
  v361 = *(void **)(v10 - 8);
  v354 = (char *)v361[8];
  __chkstk_darwin(v10);
  v350 = (uint64_t (*)(void))((char *)&v255 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v277 = type metadata accessor for ResetSettingsNavigationStateAction();
  uint64_t v275 = *(void *)(v277 - 8);
  __chkstk_darwin(v277);
  v273 = (char *)&v255 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v353 = type metadata accessor for ClearSettingsNavigationPathAction();
  v336 = *(uint64_t (**)())(v353 - 8);
  __chkstk_darwin(v353);
  v267 = (uint64_t (*)())((char *)&v255 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t appended = type metadata accessor for AppendSettingsNavigationPathAction();
  uint64_t v264 = *(void *)(appended - 8);
  __chkstk_darwin(appended);
  v257 = (char *)&v255 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v256 = type metadata accessor for NavigationSplitViewVisibility();
  uint64_t v16 = *(void *)(v256 - 8);
  __chkstk_darwin(v256);
  uint64_t v18 = (char *)&v255 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100046B9C(&qword_1001642C8);
  __chkstk_darwin(v19 - 8);
  uint64_t v260 = sub_100046B9C(&qword_1001642D0);
  uint64_t v258 = *(void *)(v260 - 8);
  __chkstk_darwin(v260);
  v255 = (char *)&v255 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v263 = sub_100046B9C(&qword_1001642D8);
  uint64_t v265 = *(void *)(v263 - 8);
  __chkstk_darwin(v263);
  v259 = (char *)&v255 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v266 = sub_100046B9C(&qword_1001642E0);
  uint64_t v268 = *(void *)(v266 - 8);
  __chkstk_darwin(v266);
  v261 = (char *)&v255 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v269 = sub_100046B9C(&qword_1001642E8);
  uint64_t v270 = *(void *)(v269 - 8);
  __chkstk_darwin(v269);
  v262 = (char *)&v255 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v271 = sub_100046B9C(&qword_1001642F0);
  uint64_t v272 = *(void *)(v271 - 8);
  __chkstk_darwin(v271);
  v337 = (uint64_t (*)())((char *)&v255 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v274 = sub_100046B9C(&qword_1001642F8);
  uint64_t v276 = *(void *)(v274 - 8);
  __chkstk_darwin(v274);
  v338 = (uint64_t (*)())((char *)&v255 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v281 = sub_100046B9C(&qword_100164300);
  uint64_t v280 = *(void *)(v281 - 8);
  __chkstk_darwin(v281);
  v352 = (char *)&v255 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v279 = sub_100046B9C(&qword_100164308);
  __chkstk_darwin(v279);
  v284 = (char *)&v255 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v286 = sub_100046B9C(&qword_100164310);
  __chkstk_darwin(v286);
  uint64_t v285 = (uint64_t)&v255 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v289 = sub_100046B9C(&qword_100164318);
  uint64_t v288 = *(void *)(v289 - 8);
  __chkstk_darwin(v289);
  v287 = (char *)&v255 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v291 = sub_100046B9C(&qword_100164320);
  uint64_t v290 = *(void *)(v291 - 8);
  __chkstk_darwin(v291);
  v349 = (uint64_t (*)(void))((char *)&v255 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v294 = sub_100046B9C(&qword_100164328);
  uint64_t v293 = *(void *)(v294 - 8);
  __chkstk_darwin(v294);
  v292 = (char *)&v255 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v297 = sub_100046B9C(&qword_100164330);
  uint64_t v296 = *(void *)(v297 - 8);
  __chkstk_darwin(v297);
  v295 = (char *)&v255 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v299 = sub_100046B9C(&qword_100164338);
  uint64_t v298 = *(void *)(v299 - 8);
  __chkstk_darwin(v299);
  v340 = (char *)&v255 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v304 = sub_100046B9C(&qword_100164340);
  uint64_t v303 = *(void *)(v304 - 8);
  __chkstk_darwin(v304);
  v301 = (char *)&v255 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v300 = sub_100046B9C(&qword_100164348);
  __chkstk_darwin(v300);
  v302 = (char *)&v255 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v307 = sub_100046B9C(&qword_100164350);
  __chkstk_darwin(v307);
  uint64_t v305 = (uint64_t)&v255 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v310 = sub_100046B9C(&qword_100164358);
  uint64_t v308 = *(void *)(v310 - 8);
  __chkstk_darwin(v310);
  v306 = (char *)&v255 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v312 = sub_100046B9C(&qword_100164360);
  uint64_t v311 = *(void *)(v312 - 8);
  __chkstk_darwin(v312);
  v309 = (char *)&v255 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v314 = sub_100046B9C(&qword_100164368);
  uint64_t v313 = *(void *)(v314 - 8);
  __chkstk_darwin(v314);
  v341 = (char *)&v255 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v317 = sub_100046B9C(&qword_100164370);
  uint64_t v315 = *(void *)(v317 - 8);
  __chkstk_darwin(v317);
  v342 = (char *)&v255 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v319 = sub_100046B9C(&qword_100164378);
  uint64_t v318 = *(void *)(v319 - 8);
  __chkstk_darwin(v319);
  v344 = (char *)&v255 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v324 = sub_100046B9C(&qword_100164380);
  uint64_t v323 = *(void *)(v324 - 8);
  __chkstk_darwin(v324);
  v345 = (char *)&v255 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v326 = sub_100046B9C(&qword_100164388);
  uint64_t v325 = *(void *)(v326 - 8);
  __chkstk_darwin(v326);
  v346 = (char *)&v255 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v328 = sub_100046B9C(&qword_100164390);
  uint64_t v327 = *(void *)(v328 - 8);
  __chkstk_darwin(v328);
  v347 = (char *)&v255 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v333 = sub_100046B9C(&qword_100164398);
  uint64_t v332 = *(void *)(v333 - 8);
  __chkstk_darwin(v333);
  v348 = (char *)&v255 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v331 = sub_100046B9C(&qword_1001643A0);
  uint64_t v330 = *(void *)(v331 - 8);
  __chkstk_darwin(v331);
  v329 = (char *)&v255 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v334 = v3;
  uint64_t v351 = swift_allocBox();
  uint64_t v48 = v47;
  uint64_t v49 = v1 + *(int *)(v11 + 48);
  uint64_t v50 = sub_100046B9C(&qword_100164200);
  uint64_t v355 = v49;
  Bindable.wrappedValue.getter();
  sub_100036FFC();
  swift_release();
  type metadata accessor for PrimarySettingsListModel();
  sub_1000373FC((unint64_t *)&unk_100163AC0, (void (*)(uint64_t))type metadata accessor for PrimarySettingsListModel);
  uint64_t v357 = v48;
  Bindable<A>.init(wrappedValue:)();
  static NavigationSplitViewVisibility.all.getter();
  uint64_t v51 = v256;
  static Binding.constant(_:)();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v51);
  uint64_t v364 = v2;
  uint64_t v363 = v2;
  sub_100046B9C(&qword_1001643A8);
  sub_100046B9C(&qword_1001643B0);
  sub_100066144();
  sub_10004D2D4(&qword_100164400, &qword_1001643B0);
  uint64_t v52 = v255;
  NavigationSplitView.init<>(columnVisibility:sidebar:detail:)();
  Namespace.wrappedValue.getter();
  swift_allocObject();
  Bindable.wrappedValue.getter();
  swift_weakInit();
  swift_release();
  id v53 = v257;
  AppendSettingsNavigationPathAction.init(namespace:onAppend:)();
  uint64_t v54 = sub_10004D2D4(&qword_100164408, &qword_1001642D0);
  char v55 = v259;
  uint64_t v56 = v260;
  View.appendSettingsNavigationPathAction(_:)();
  (*(void (**)(char *, uint64_t))(v264 + 8))(v53, appended);
  (*(void (**)(char *, uint64_t))(v258 + 8))(v52, v56);
  Namespace.wrappedValue.getter();
  swift_allocObject();
  uint64_t appended = v50;
  Bindable.wrappedValue.getter();
  swift_weakInit();
  swift_release();
  uint64_t v57 = v267;
  ClearSettingsNavigationPathAction.init(namespace:onClear:)();
  uint64_t v368 = v56;
  v369 = (uint64_t (*)(void))v54;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v59 = v261;
  uint64_t v60 = v263;
  View.clearSettingsNavigationPathAction(_:)();
  (*((void (**)(uint64_t (*)(), uint64_t))v336 + 1))(v57, v353);
  uint64_t v61 = v60;
  (*(void (**)(char *, uint64_t))(v265 + 8))(v55, v60);
  uint64_t v62 = (uint64_t)v350;
  Namespace.wrappedValue.getter();
  v267 = type metadata accessor for SettingsNavigationSplitView;
  uint64_t v63 = v2;
  v362 = (uint64_t *)v2;
  sub_100034C08(v2, v62, (uint64_t (*)(void))type metadata accessor for SettingsNavigationSplitView);
  uint64_t v64 = *((unsigned __int8 *)v361 + 80);
  uint64_t v65 = &v354[(v64 + 16) & ~v64];
  uint64_t v66 = (v64 + 16) & ~v64;
  uint64_t v353 = v66;
  v354 = (char *)(v64 | 7);
  v361 = v65;
  uint64_t v67 = swift_allocObject();
  v336 = type metadata accessor for SettingsNavigationSplitView;
  sub_100035134(v62, v67 + v66, (uint64_t (*)(void))type metadata accessor for SettingsNavigationSplitView);
  uint64_t v68 = v273;
  ResetSettingsNavigationStateAction.init(namespace:onReset:)();
  uint64_t v368 = v61;
  v369 = (uint64_t (*)(void))OpaqueTypeConformance2;
  uint64_t v69 = swift_getOpaqueTypeConformance2();
  uint64_t v70 = v262;
  uint64_t v71 = v68;
  uint64_t v72 = v266;
  View.resetSettingsNavigationStateAction(_:)();
  (*(void (**)(char *, uint64_t))(v275 + 8))(v71, v277);
  (*(void (**)(char *, uint64_t))(v268 + 8))(v59, v72);
  uint64_t v73 = v278;
  static NavigationSplitViewStyle<>.balanced.getter();
  uint64_t v368 = v72;
  v369 = (uint64_t (*)(void))v69;
  uint64_t v74 = swift_getOpaqueTypeConformance2();
  uint64_t v75 = sub_1000373FC(&qword_100164410, (void (*)(uint64_t))&type metadata accessor for BalancedNavigationSplitViewStyle);
  uint64_t v76 = v269;
  uint64_t v77 = (uint64_t (*)(void))v282;
  View.navigationSplitViewStyle<A>(_:)();
  (*(void (**)(char *, uint64_t (*)(void)))(v283 + 8))(v73, v77);
  (*(void (**)(char *, uint64_t))(v270 + 8))(v70, v76);
  swift_getKeyPath();
  uint64_t v78 = v63;
  uint64_t v79 = v267;
  sub_100034C08(v78, v62, (uint64_t (*)(void))v267);
  uint64_t v80 = swift_allocObject();
  uint64_t v81 = v353;
  sub_100035134(v62, v80 + v353, (uint64_t (*)(void))v336);
  uint64_t v368 = v76;
  v369 = v77;
  uint64_t v370 = v74;
  v371 = (void *)v75;
  uint64_t v82 = swift_getOpaqueTypeConformance2();
  unint64_t v83 = sub_100065984();
  uint64_t v84 = v271;
  uint64_t v85 = v337;
  View._onEnvironmentChange<A>(_:perform:)();
  swift_release();
  uint64_t v86 = v81;
  swift_release();
  (*(void (**)(uint64_t (*)(), uint64_t))(v272 + 8))(v85, v84);
  swift_getKeyPath();
  uint64_t v87 = (uint64_t)v362;
  uint64_t v88 = (uint64_t)v350;
  sub_100034C08((uint64_t)v362, (uint64_t)v350, (uint64_t (*)(void))v79);
  uint64_t v89 = swift_allocObject();
  uint64_t v90 = v88;
  sub_100035134(v88, v89 + v86, (uint64_t (*)(void))v336);
  uint64_t v91 = sub_10004D318((uint64_t *)&unk_100163F70);
  uint64_t v368 = v84;
  v369 = (uint64_t (*)(void))v91;
  uint64_t v370 = v82;
  v371 = (void *)v83;
  swift_getOpaqueTypeConformance2();
  sub_1000373FC(&qword_1001641C0, (void (*)(uint64_t))&type metadata accessor for ScenePhase);
  uint64_t v92 = v274;
  uint64_t v93 = v338;
  View._onEnvironmentChange<A>(_:perform:)();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t (*)(), uint64_t))(v276 + 8))(v93, v92);
  uint64_t v94 = *(void *)(v87 + 8);
  if (qword_10015F048 != -1) {
    swift_once();
  }
  TaskLocal.get()();
  uint64_t v95 = sub_1000682E8(v94, v368);
  swift_bridgeObjectRelease();
  v338 = type metadata accessor for SettingsNavigationSplitView;
  uint64_t v96 = v362;
  sub_100034C08((uint64_t)v362, v88, (uint64_t (*)(void))type metadata accessor for SettingsNavigationSplitView);
  uint64_t v97 = swift_allocObject();
  uint64_t v98 = v353;
  v337 = type metadata accessor for SettingsNavigationSplitView;
  sub_100035134(v88, v97 + v353, (uint64_t (*)(void))type metadata accessor for SettingsNavigationSplitView);
  uint64_t v99 = v280;
  uint64_t v100 = (uint64_t)v284;
  uint64_t v101 = v352;
  uint64_t v102 = v281;
  (*(void (**)(char *, char *, uint64_t))(v280 + 16))(v284, v352, v281);
  uint64_t v103 = v279;
  *(void *)(v100 + *(int *)(v279 + 52)) = v95;
  uint64_t v104 = (void (**)(char *))(v100 + *(int *)(v103 + 56));
  *uint64_t v104 = sub_1000EF774;
  v104[1] = (void (*)(char *))v97;
  (*(void (**)(char *, uint64_t))(v99 + 8))(v101, v102);
  uint64_t v105 = *v96;
  TaskLocal.get()();
  uint64_t v106 = sub_1000682F4(v105, v368);
  swift_bridgeObjectRelease();
  id v107 = v338;
  sub_100034C08((uint64_t)v96, v88, (uint64_t (*)(void))v338);
  uint64_t v108 = swift_allocObject();
  uint64_t v109 = v337;
  sub_100035134(v90, v108 + v98, (uint64_t (*)(void))v337);
  uint64_t v110 = v285;
  sub_10003F75C(v100, v285, &qword_100164308);
  uint64_t v111 = v286;
  *(void *)(v110 + *(int *)(v286 + 52)) = v106;
  uint64_t v112 = (uint64_t (**)(uint64_t))(v110 + *(int *)(v111 + 56));
  unsigned char *v112 = sub_1000EF7E8;
  v112[1] = (uint64_t (*)(uint64_t))v108;
  sub_10003F5D0(v100, &qword_100164308);
  Bindable.wrappedValue.getter();
  uint64_t v113 = v368;
  swift_getKeyPath();
  uint64_t v368 = v113;
  sub_1000373FC((unint64_t *)&qword_10015F5A0, (void (*)(uint64_t))type metadata accessor for SettingsAppNavigationModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  LOBYTE(v108) = *(unsigned char *)(v113 + OBJC_IVAR____TtC11SettingsApp26SettingsAppNavigationModel__shouldDismissSearch);
  swift_release();
  LOBYTE(v368) = v108;
  sub_100034C08((uint64_t)v96, v90, (uint64_t (*)(void))v107);
  uint64_t v114 = swift_allocObject();
  uint64_t v115 = v353;
  sub_100035134(v90, v114 + v353, (uint64_t (*)(void))v109);
  uint64_t v116 = sub_10004D2D4(&qword_100164420, &qword_100164310);
  uint64_t v117 = v115;
  uint64_t v118 = v287;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  sub_10003F5D0(v110, &qword_100164310);
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v119 = (uint64_t)v350;
  sub_100034C08((uint64_t)v362, (uint64_t)v350, (uint64_t (*)(void))v338);
  uint64_t v120 = swift_allocObject();
  uint64_t v121 = v119;
  sub_100035134(v119, v120 + v115, (uint64_t (*)(void))v337);
  uint64_t v368 = v111;
  v369 = (uint64_t (*)(void))&type metadata for Bool;
  uint64_t v370 = v116;
  v371 = &protocol witness table for Bool;
  uint64_t v122 = swift_getOpaqueTypeConformance2();
  uint64_t v123 = v289;
  View.onContinueUserActivity(_:perform:)();
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(char *, uint64_t))(v288 + 8))(v118, v123);
  uint64_t v124 = v121;
  if (qword_10015F1B8 != -1) {
    swift_once();
  }
  uint64_t v125 = (uint64_t)v343;
  uint64_t v126 = sub_1000477B0((uint64_t)v343, (uint64_t)qword_10016B118);
  uint64_t v127 = v356;
  uint64_t v128 = (uint64_t (*)())*((void *)v356 + 2);
  uint64_t v129 = v316;
  v338 = (uint64_t (*)())(v356 + 16);
  v337 = v128;
  ((void (*)(char *, uint64_t, uint64_t))v128)(v316, v126, v125);
  sub_100034C08((uint64_t)v362, v124, (uint64_t (*)(void))type metadata accessor for SettingsNavigationSplitView);
  uint64_t v130 = swift_allocObject();
  sub_100035134(v124, v130 + v115, (uint64_t (*)(void))type metadata accessor for SettingsNavigationSplitView);
  uint64_t v368 = v123;
  v369 = (uint64_t (*)(void))v122;
  uint64_t v131 = swift_getOpaqueTypeConformance2();
  v132 = v292;
  uint64_t v133 = v291;
  v134 = v349;
  View.onTest(_:handler:)();
  swift_release();
  v136 = (char *)*((void *)v127 + 1);
  v135 = v127 + 8;
  v352 = v136;
  ((void (*)(char *, uint64_t))v136)(v129, v125);
  (*(void (**)(uint64_t (*)(void), uint64_t))(v290 + 8))(v134, v133);
  uint64_t v137 = v124;
  uint64_t v138 = v117;
  v139 = v295;
  if (qword_10015F1A8 != -1) {
    swift_once();
  }
  uint64_t v140 = sub_1000477B0(v125, (uint64_t)qword_10016B0E8);
  ((void (*)(char *, uint64_t, uint64_t))v337)(v129, v140, v125);
  sub_100034C08((uint64_t)v362, v137, (uint64_t (*)(void))type metadata accessor for SettingsNavigationSplitView);
  uint64_t v141 = swift_allocObject();
  sub_100035134(v137, v141 + v138, (uint64_t (*)(void))type metadata accessor for SettingsNavigationSplitView);
  uint64_t v368 = v133;
  v369 = (uint64_t (*)(void))v131;
  v142 = (uint64_t (*)(void))swift_getOpaqueTypeConformance2();
  uint64_t v143 = v294;
  v349 = v142;
  uint64_t v144 = v137;
  View.onTest(_:handler:)();
  swift_release();
  ((void (*)(char *, uint64_t))v352)(v129, v125);
  (*(void (**)(char *, uint64_t))(v293 + 8))(v132, v143);
  v356 = v135;
  v145 = v139;
  if (qword_10015F1B0 != -1) {
    swift_once();
  }
  uint64_t v146 = sub_1000477B0(v125, (uint64_t)qword_10016B100);
  v147 = v337;
  ((void (*)(char *, uint64_t, uint64_t))v337)(v129, v146, v125);
  sub_100034C08((uint64_t)v362, v144, (uint64_t (*)(void))type metadata accessor for SettingsNavigationSplitView);
  uint64_t v148 = swift_allocObject();
  uint64_t v149 = v353;
  sub_100035134(v144, v148 + v353, (uint64_t (*)(void))type metadata accessor for SettingsNavigationSplitView);
  uint64_t v368 = v143;
  v369 = v349;
  uint64_t v150 = swift_getOpaqueTypeConformance2();
  uint64_t v151 = v297;
  View.onTest(_:handler:)();
  uint64_t v152 = (uint64_t)v343;
  swift_release();
  ((void (*)(char *, uint64_t))v352)(v129, v152);
  (*(void (**)(char *, uint64_t))(v296 + 8))(v145, v151);
  if (qword_10015F1C0 != -1) {
    swift_once();
  }
  uint64_t v153 = sub_1000477B0(v152, (uint64_t)qword_10016B130);
  ((void (*)(char *, uint64_t, uint64_t))v147)(v129, v153, v152);
  v338 = type metadata accessor for SettingsNavigationSplitView;
  sub_100034C08((uint64_t)v362, v144, (uint64_t (*)(void))type metadata accessor for SettingsNavigationSplitView);
  uint64_t v154 = swift_allocObject();
  v349 = (uint64_t (*)(void))type metadata accessor for SettingsNavigationSplitView;
  sub_100035134(v144, v154 + v149, (uint64_t (*)(void))type metadata accessor for SettingsNavigationSplitView);
  uint64_t v368 = v151;
  v369 = (uint64_t (*)(void))v150;
  swift_getOpaqueTypeConformance2();
  uint64_t v155 = v149;
  v156 = v301;
  uint64_t v157 = v299;
  v158 = v340;
  View.onTest(_:handler:)();
  swift_release();
  ((void (*)(char *, uint64_t))v352)(v129, v152);
  (*(void (**)(char *, uint64_t))(v298 + 8))(v158, v157);
  sub_100034C08((uint64_t)v362, v144, (uint64_t (*)(void))type metadata accessor for SettingsNavigationSplitView);
  uint64_t v159 = swift_allocObject();
  uint64_t v160 = v159 + v155;
  uint64_t v161 = v144;
  sub_100035134(v144, v160, v349);
  LOBYTE(v365) = 0;
  swift_retain();
  State.init(wrappedValue:)();
  LOBYTE(v158) = v368;
  v162 = v369;
  uint64_t v163 = v303;
  uint64_t v164 = (uint64_t)v302;
  uint64_t v165 = v304;
  (*(void (**)(char *, char *, uint64_t))(v303 + 16))(v302, v156, v304);
  swift_release();
  uint64_t v166 = v164 + *(int *)(v300 + 36);
  *(void *)uint64_t v166 = sub_1000EFA18;
  *(void *)(v166 + 8) = v159;
  *(unsigned char *)(v166 + 16) = (_BYTE)v158;
  *(void *)(v166 + 24) = v162;
  (*(void (**)(char *, uint64_t))(v163 + 8))(v156, v165);
  uint64_t v167 = v305;
  sub_10003F75C(v164, v305, &qword_100164348);
  uint64_t v168 = v307;
  v169 = (uint64_t (**)())(v167 + *(int *)(v307 + 36));
  uint64_t v170 = v351;
  *v169 = sub_1000EFA30;
  v169[1] = (uint64_t (*)())v170;
  swift_retain();
  sub_10003F5D0(v164, &qword_100164348);
  Bindable.wrappedValue.getter();
  v371 = (void *)type metadata accessor for SettingsAppNavigationModel();
  uint64_t v372 = sub_1000373FC(&qword_100164428, (void (*)(uint64_t))type metadata accessor for SettingsAppNavigationModel);
  unint64_t v171 = sub_1000661E4();
  v172 = v306;
  View.navigationPresentationAdaptor(_:)();
  sub_10003F5D0(v167, &qword_100164350);
  sub_100042A1C((uint64_t)&v368);
  uint64_t v368 = v168;
  v369 = (uint64_t (*)(void))v171;
  uint64_t v173 = swift_getOpaqueTypeConformance2();
  v174 = v309;
  uint64_t v175 = v310;
  View.navigationTransitionEagerRenderEnabled(_:)();
  (*(void (**)(char *, uint64_t))(v308 + 8))(v172, v175);
  uint64_t v176 = v321;
  v177 = v320;
  uint64_t v178 = v322;
  (*(void (**)(char *, void, uint64_t))(v321 + 104))(v320, enum case for SettingsAppPrimaryNavigationMode.stateDriven(_:), v322);
  uint64_t v368 = v175;
  v369 = (uint64_t (*)(void))v173;
  v343 = (char *)swift_getOpaqueTypeConformance2();
  uint64_t v179 = v312;
  View.settingsAppPrimaryNavigationMode(_:)();
  (*(void (**)(char *, uint64_t))(v176 + 8))(v177, v178);
  (*(void (**)(char *, uint64_t))(v311 + 8))(v174, v179);
  uint64_t v180 = v360;
  v181 = *(char **)(v360 + 16);
  uint64_t v355 = v360 + 16;
  v356 = v181;
  v182 = v358;
  uint64_t v183 = v334;
  ((void (*)(char *, uint64_t, uint64_t))v181)(v358, v357, v334);
  v184 = v359;
  Bindable.projectedValue.getter();
  v185 = *(void (**)(char *, uint64_t))(v180 + 8);
  v185(v182, v183);
  v352 = (char *)v185;
  uint64_t v360 = v180 + 8;
  swift_getKeyPath();
  Bindable<A>.subscript.getter();
  swift_release();
  v185(v184, v183);
  uint64_t v186 = v161;
  uint64_t v188 = v368;
  uint64_t v187 = (uint64_t)v369;
  LOBYTE(v177) = v370;
  sub_100034C08((uint64_t)v362, v186, (uint64_t (*)(void))v338);
  uint64_t v189 = swift_allocObject();
  sub_100035134(v186, v189 + v353, v349);
  sub_100035308(0, v188, v187, (char)v177);
  uint64_t v190 = swift_allocObject();
  *(void *)(v190 + 16) = v188;
  *(void *)(v190 + 24) = v187;
  *(unsigned char *)(v190 + 32) = (_BYTE)v177;
  *(unsigned char *)(v190 + 33) = 0;
  *(void *)(v190 + 40) = sub_1000EFA5C;
  *(void *)(v190 + 48) = v189;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t appended = sub_100046B9C(&qword_100164450);
  v365 = (char *)v179;
  v366 = v343;
  v340 = (char *)swift_getOpaqueTypeConformance2();
  v343 = (char *)sub_1000660AC();
  uint64_t v191 = v314;
  v192 = v341;
  View.sheet<A>(isPresented:onDismiss:content:)();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v313 + 8))(v192, v191);
  v193 = v358;
  ((void (*)(char *, uint64_t, uint64_t))v356)(v358, v357, v183);
  v194 = v359;
  Bindable.projectedValue.getter();
  v195 = v352;
  ((void (*)(char *, uint64_t))v352)(v193, v183);
  swift_getKeyPath();
  Bindable<A>.subscript.getter();
  swift_release();
  ((void (*)(char *, uint64_t))v195)(v194, v183);
  uint64_t v197 = (uint64_t)v365;
  uint64_t v196 = (uint64_t)v366;
  LOBYTE(v193) = v367;
  uint64_t v198 = (uint64_t)v350;
  sub_100034C08((uint64_t)v362, (uint64_t)v350, (uint64_t (*)(void))v338);
  uint64_t v199 = swift_allocObject();
  sub_100035134(v198, v199 + v353, v349);
  sub_100035308(1, v197, v196, (char)v193);
  uint64_t v200 = swift_allocObject();
  *(void *)(v200 + 16) = v197;
  *(void *)(v200 + 24) = v196;
  *(unsigned char *)(v200 + 32) = (_BYTE)v193;
  *(unsigned char *)(v200 + 33) = 1;
  *(void *)(v200 + 40) = sub_1000EFD9C;
  *(void *)(v200 + 48) = v199;
  swift_retain();
  swift_retain();
  swift_retain();
  v350 = (uint64_t (*)(void))sub_100046B9C(&qword_100164470);
  uint64_t v368 = v191;
  v369 = (uint64_t (*)(void))appended;
  uint64_t v370 = (uint64_t)v340;
  v371 = v343;
  v361 = &opaque type descriptor for <<opaque return type of View.sheet<A>(isPresented:onDismiss:content:)>>;
  uint64_t v353 = swift_getOpaqueTypeConformance2();
  v354 = (char *)sub_100066014();
  uint64_t v201 = v317;
  v202 = v342;
  View.sheet<A>(isPresented:onDismiss:content:)();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v315 + 8))(v202, v201);
  v203 = v358;
  ((void (*)(char *, uint64_t, uint64_t))v356)(v358, v357, v183);
  v204 = v359;
  Bindable.projectedValue.getter();
  v205 = v352;
  ((void (*)(char *, uint64_t))v352)(v203, v183);
  swift_getKeyPath();
  Bindable<A>.subscript.getter();
  swift_release();
  ((void (*)(char *, uint64_t))v205)(v204, v183);
  uint64_t v207 = (uint64_t)v365;
  uint64_t v206 = (uint64_t)v366;
  LOBYTE(v187) = v367;
  uint64_t v208 = v351;
  swift_retain();
  sub_100035308(2, v207, v206, v187);
  uint64_t v209 = swift_allocObject();
  *(void *)(v209 + 16) = v207;
  *(void *)(v209 + 24) = v206;
  *(unsigned char *)(v209 + 32) = v187;
  *(unsigned char *)(v209 + 33) = 2;
  *(void *)(v209 + 40) = sub_1000EFE74;
  *(void *)(v209 + 48) = v208;
  swift_retain();
  swift_retain();
  swift_retain();
  v349 = (uint64_t (*)(void))sub_100046B9C(&qword_100164490);
  uint64_t v368 = v201;
  v369 = v350;
  uint64_t v370 = v353;
  v371 = v354;
  v350 = (uint64_t (*)(void))swift_getOpaqueTypeConformance2();
  v354 = (char *)&protocol conformance descriptor for <A> A?;
  uint64_t v353 = sub_10005FB80(&qword_100164498, &qword_100164490, (void (*)(void))sub_100008B64);
  uint64_t v210 = v319;
  v211 = v344;
  View.sheet<A>(isPresented:onDismiss:content:)();
  swift_release();
  swift_release();
  uint64_t v212 = v351;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v318 + 8))(v211, v210);
  v213 = v358;
  ((void (*)(char *, uint64_t, uint64_t))v356)(v358, v357, v183);
  v214 = v359;
  Bindable.projectedValue.getter();
  v215 = v352;
  ((void (*)(char *, uint64_t))v352)(v213, v183);
  swift_getKeyPath();
  Bindable<A>.subscript.getter();
  swift_release();
  ((void (*)(char *, uint64_t))v215)(v214, v183);
  uint64_t v216 = (uint64_t)v365;
  uint64_t v217 = (uint64_t)v366;
  LOBYTE(v198) = v367;
  swift_retain_n();
  sub_100035308(6, v216, v217, v198);
  uint64_t v218 = swift_allocObject();
  *(void *)(v218 + 16) = v216;
  *(void *)(v218 + 24) = v217;
  *(unsigned char *)(v218 + 32) = v198;
  *(unsigned char *)(v218 + 33) = 6;
  *(void *)(v218 + 40) = sub_1000EFE94;
  *(void *)(v218 + 48) = v212;
  swift_retain();
  swift_retain();
  swift_retain();
  v344 = (char *)sub_100046B9C(&qword_1001644B8);
  uint64_t v368 = v210;
  v369 = v349;
  uint64_t v370 = (uint64_t)v350;
  v371 = (void *)v353;
  uint64_t v353 = swift_getOpaqueTypeConformance2();
  v361 = (void *)sub_100065B3C();
  uint64_t v219 = v324;
  v220 = v345;
  View.fullScreenCover<A>(isPresented:onDismiss:content:)();
  swift_release();
  swift_release();
  swift_release_n();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v323 + 8))(v220, v219);
  v221 = v358;
  ((void (*)(char *, uint64_t, uint64_t))v356)(v358, v357, v183);
  v222 = v359;
  Bindable.projectedValue.getter();
  v223 = v352;
  ((void (*)(char *, uint64_t))v352)(v221, v183);
  swift_getKeyPath();
  Bindable<A>.subscript.getter();
  swift_release();
  ((void (*)(char *, uint64_t))v223)(v222, v183);
  uint64_t v224 = (uint64_t)v365;
  uint64_t v225 = (uint64_t)v366;
  LOBYTE(v223) = v367;
  sub_100035308(3, (uint64_t)v365, (uint64_t)v366, v367);
  uint64_t v226 = swift_allocObject();
  *(void *)(v226 + 16) = v224;
  *(void *)(v226 + 24) = v225;
  *(unsigned char *)(v226 + 32) = (_BYTE)v223;
  *(unsigned char *)(v226 + 33) = 3;
  *(void *)(v226 + 40) = sub_1000EE238;
  *(void *)(v226 + 48) = 0;
  swift_retain();
  swift_retain();
  v349 = (uint64_t (*)(void))sub_100046B9C(&qword_1001644E0);
  uint64_t v368 = v219;
  v369 = (uint64_t (*)(void))v344;
  uint64_t v370 = v353;
  v371 = v361;
  v350 = (uint64_t (*)(void))swift_getOpaqueTypeConformance2();
  v361 = (void *)sub_10005FB80(&qword_1001644E8, &qword_1001644E0, (void (*)(void))sub_1000689B0);
  uint64_t v227 = v326;
  v228 = v346;
  View.formSheet<A>(isPresented:content:)();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v325 + 8))(v228, v227);
  v229 = v358;
  ((void (*)(char *, uint64_t, uint64_t))v356)(v358, v357, v183);
  v230 = v359;
  Bindable.projectedValue.getter();
  v231 = v352;
  ((void (*)(char *, uint64_t))v352)(v229, v183);
  swift_getKeyPath();
  Bindable<A>.subscript.getter();
  swift_release();
  ((void (*)(char *, uint64_t))v231)(v230, v183);
  uint64_t v232 = (uint64_t)v365;
  uint64_t v233 = (uint64_t)v366;
  v346 = v365;
  v345 = v366;
  LOBYTE(v222) = v367;
  id v234 = sub_100009458();
  uint64_t v236 = v235;
  v344 = v237;
  LOBYTE(v230) = v238 & 1;
  sub_100035308(4, v232, v233, (char)v222);
  uint64_t v353 = sub_100046B9C(&qword_1001604B0);
  uint64_t v368 = v227;
  v369 = v349;
  uint64_t v370 = (uint64_t)v350;
  v371 = v361;
  v354 = (char *)swift_getOpaqueTypeConformance2();
  v361 = (void *)sub_10004D2D4(&qword_1001604B8, &qword_1001604B0);
  uint64_t v239 = v328;
  v240 = v347;
  View.alert<A>(_:isPresented:actions:)();
  swift_release();
  swift_release();
  sub_100037590((uint64_t)v234, v236, (char)v230);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(char *, uint64_t))(v327 + 8))(v240, v239);
  v241 = v358;
  ((void (*)(char *, uint64_t, uint64_t))v356)(v358, v357, v183);
  v242 = v359;
  Bindable.projectedValue.getter();
  v243 = v352;
  ((void (*)(char *, uint64_t))v352)(v241, v183);
  swift_getKeyPath();
  Bindable<A>.subscript.getter();
  swift_release();
  ((void (*)(char *, uint64_t))v243)(v242, v183);
  uint64_t v244 = (uint64_t)v365;
  uint64_t v245 = (uint64_t)v366;
  v359 = v366;
  uint64_t v360 = (uint64_t)v365;
  LOBYTE(v241) = v367;
  id v246 = sub_1000095FC();
  uint64_t v248 = v247;
  v362 = (uint64_t *)v249;
  LOBYTE(v243) = v250 & 1;
  sub_100035308(5, v244, v245, (char)v241);
  sub_100046B9C(&qword_1001602B0);
  uint64_t v368 = v239;
  v369 = (uint64_t (*)(void))v353;
  uint64_t v370 = (uint64_t)v354;
  v371 = v361;
  swift_getOpaqueTypeConformance2();
  sub_1000280D4();
  uint64_t v251 = v333;
  v252 = v329;
  v253 = v348;
  View.alert<A, B>(_:isPresented:actions:message:)();
  swift_release();
  swift_release();
  sub_100037590((uint64_t)v246, v248, (char)v243);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(char *, uint64_t))(v332 + 8))(v253, v251);
  (*(void (**)(uint64_t, char *, uint64_t))(v330 + 32))(v335, v252, v331);
  return swift_release();
}

uint64_t sub_100034C08(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void *sub_100034C70(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for PrimarySettingsListItemIdentifier();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_100046B9C((uint64_t *)&unk_100161530);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
        uint64_t v9 = type metadata accessor for FLFollowUpInformation();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
        goto LABEL_8;
      case 2u:
        uint64_t v10 = type metadata accessor for FLFollowUpInformation();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
        uint64_t v11 = *(int *)(sub_100046B9C(&qword_10015F7F8) + 48);
        uint64_t v12 = (void *)((char *)a1 + v11);
        uint64_t v13 = (void *)((char *)a2 + v11);
        uint64_t v14 = v13[1];
        *uint64_t v12 = *v13;
        v12[1] = v14;
        swift_bridgeObjectRetain();
        goto LABEL_8;
      case 3u:
      case 4u:
      case 5u:
        uint64_t v15 = a2[1];
        *a1 = *a2;
        a1[1] = v15;
        swift_bridgeObjectRetain();
LABEL_8:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v7 + 64));
        break;
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  swift_retain();
  return a1;
}

uint64_t type metadata accessor for SettingsNavigationSplitView()
{
  uint64_t result = qword_100164268;
  if (!qword_100164268) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for SettingsAppDetailContent()
{
  uint64_t result = qword_100163620;
  if (!qword_100163620) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void *sub_100034FC0(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  swift_retain();
  swift_retain();
  sub_100046B9C(&qword_10015F598);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for WithCurrentHostingControllerAction();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    void *v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = a3[7];
  uint64_t v12 = a3[8];
  uint64_t v13 = (char *)a1 + v11;
  uint64_t v14 = (char *)a2 + v11;
  uint64_t v15 = *(void *)v14;
  LOBYTE(v14) = v14[8];
  *(void *)uint64_t v13 = v15;
  v13[8] = (char)v14;
  uint64_t v16 = (char *)a1 + v12;
  uint64_t v17 = (char *)a2 + v12;
  uint64_t v18 = *(void *)v17;
  LOBYTE(v17) = v17[8];
  *(void *)uint64_t v16 = v18;
  v16[8] = (char)v17;
  uint64_t v19 = a3[10];
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  swift_retain();
  swift_retain();
  uint64_t v22 = sub_100046B9C(&qword_100164200);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  return a1;
}

uint64_t sub_100035134(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

_OWORD *sub_10003519C(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_100046B9C(&qword_10015F598);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for WithCurrentHostingControllerAction();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  uint64_t v11 = a3[7];
  uint64_t v12 = a3[8];
  uint64_t v13 = (char *)a1 + v11;
  uint64_t v14 = (char *)a2 + v11;
  *(void *)uint64_t v13 = *(void *)v14;
  v13[8] = v14[8];
  uint64_t v15 = (char *)a1 + v12;
  uint64_t v16 = (char *)a2 + v12;
  *(void *)uint64_t v15 = *(void *)v16;
  v15[8] = v16[8];
  uint64_t v17 = a3[10];
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  uint64_t v20 = sub_100046B9C(&qword_100164200);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
  return a1;
}

uint64_t sub_100035308(char a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = 0;
  *(void *)(v8 + 24) = 0;
  *(void *)(v8 + 32) = a2;
  *(void *)(v8 + 40) = a3;
  *(unsigned char *)(v8 + 48) = a4;
  *(unsigned char *)(v8 + 49) = a1;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = 0;
  *(void *)(v9 + 24) = 0;
  *(void *)(v9 + 32) = a2;
  *(void *)(v9 + 40) = a3;
  *(unsigned char *)(v9 + 48) = a4;
  *(unsigned char *)(v9 + 49) = a1;
  swift_retain_n();
  swift_retain_n();
  Binding.init(get:set:)();
  return v11;
}

uint64_t sub_1000353FC()
{
  return sub_10003541C(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_10003541C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = (uint64_t *)(a1 + OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel__cachedDataModel);
  uint64_t v5 = *(void *)(a1 + OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel__cachedDataModel);
  *uint64_t v4 = a2;
  v4[1] = a3;
  v4[2] = a4;
  sub_100037444(a2);
  sub_100035494(v5);
  return sub_1000354E0();
}

uint64_t sub_100035494(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1000354E0()
{
  swift_getKeyPath();
  sub_10003736C((unint64_t *)&unk_100163AC0, (void (*)(uint64_t))type metadata accessor for PrimarySettingsListModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel__cachedDataModel);
  if (v2)
  {
    uint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel__cachedDataModel + 16);
    swift_getKeyPath();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    if (swift_unknownObjectWeakLoadStrong())
    {
      sub_10003564C(v2, v3);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_unknownObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_10003564C(uint64_t a1, uint64_t a2)
{
  uint64_t v80 = a2;
  uint64_t v4 = sub_100046B9C((uint64_t *)&unk_100163AD0);
  __chkstk_darwin(v4 - 8);
  uint64_t v78 = (uint64_t)&v74 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = type metadata accessor for SettingsURLDestination.Action(0);
  __chkstk_darwin(v81);
  uint64_t v82 = (uint64_t)&v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100046B9C(&qword_100163F60);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v77 = (uint64_t)&v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v74 - v10;
  uint64_t v12 = type metadata accessor for SettingsURLDestination(0);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v84 = v12;
  uint64_t v85 = v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v75 = (uint64_t)&v74 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v76 = (char *)&v74 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v74 = (uint64_t)&v74 - v19;
  __chkstk_darwin(v18);
  uint64_t v83 = (uint64_t)&v74 - v20;
  uint64_t v21 = sub_100046B9C((uint64_t *)&unk_100161530);
  __chkstk_darwin(v21 - 8);
  uint64_t v23 = (char *)&v74 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for PrimarySettingsListItemIdentifier();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v79 = (uint64_t)&v74 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  uint64_t v29 = (char *)&v74 - v28;
  uint64_t v86 = v2;
  uint64_t v30 = sub_100036FFC();
  swift_getKeyPath();
  uint64_t v90 = v30;
  sub_1000373B4((unint64_t *)&unk_100163AC0, (void (*)(uint64_t))type metadata accessor for PrimarySettingsListModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v31 = (uint64_t)&v30[OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel_effectiveSelection];
  swift_beginAccess();
  sub_10003F75C(v31, (uint64_t)v23, (uint64_t *)&unk_100161530);
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24) == 1)
  {
    sub_10003F5D0((uint64_t)v23, (uint64_t *)&unk_100161530);
  }
  else
  {
    sub_10004F000((uint64_t)v23, (uint64_t)v29, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
    uint64_t v32 = _swiftEmptyArrayStorage;
    uint64_t v89 = _swiftEmptyArrayStorage;
    uint64_t v33 = *(void *)(a1 + 16);
    if (v33)
    {
      uint64_t v34 = *(void *)(type metadata accessor for PrimarySettingsListSectionModel() - 8);
      uint64_t v35 = a1 + ((*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80));
      uint64_t v36 = *(void *)(v34 + 72);
      swift_bridgeObjectRetain();
      do
      {
        uint64_t v37 = swift_bridgeObjectRetain();
        sub_1000D6C88(v37, (uint64_t (*)(void))sub_100059C00, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
        v35 += v36;
        --v33;
      }
      while (v33);
      swift_bridgeObjectRelease();
      uint64_t v32 = v89;
    }
    uint64_t v38 = v32[2];
    if (!v38)
    {
      swift_bridgeObjectRelease();
LABEL_13:
      sub_1000D44DC();
      uint64_t v42 = (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier;
      uint64_t v43 = (uint64_t)v29;
      return sub_10003DF60(v43, v42);
    }
    uint64_t v39 = *(void *)(type metadata accessor for PrimarySettingsListItemModel() - 8);
    uint64_t v40 = (uint64_t)v32 + ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80));
    uint64_t v41 = *(void *)(v39 + 72);
    swift_bridgeObjectRetain();
    while ((sub_1000460F4(v40, (uint64_t)v29) & 1) == 0)
    {
      v40 += v41;
      if (!--v38)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_13;
      }
    }
    swift_bridgeObjectRelease_n();
    sub_10003DF60((uint64_t)v29, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
  }
  uint64_t v44 = v86 + OBJC_IVAR____TtC11SettingsApp26SettingsAppNavigationModel_pendingURLDestination;
  swift_beginAccess();
  sub_10003F75C(v44, (uint64_t)v11, &qword_100163F60);
  uint64_t v45 = v84;
  uint64_t v47 = v85 + 48;
  uint64_t v46 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v85 + 48);
  if (v46(v11, 1, v84) == 1) {
    return sub_10003F5D0((uint64_t)v11, &qword_100163F60);
  }
  uint64_t v49 = v83;
  sub_10004F000((uint64_t)v11, v83, type metadata accessor for SettingsURLDestination);
  uint64_t v50 = v49 + *(int *)(v45 + 20);
  uint64_t v51 = v82;
  sub_10003DFC0(v50, v82, type metadata accessor for SettingsURLDestination.Action);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v52 = v79;
    sub_10004F000(v51, v79, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
    if (*(void *)(v80 + 16) && (unint64_t v53 = sub_10003DD34(v52), (v54 & 1) != 0))
    {
      unint64_t v55 = v53;
      uint64_t v85 = v47;
      uint64_t v56 = *(void *)(v80 + 56);
      uint64_t v57 = type metadata accessor for PrimarySettingsListItemModel();
      uint64_t v58 = *(void *)(v57 - 8);
      uint64_t v59 = v56 + *(void *)(v58 + 72) * v55;
      uint64_t v60 = v78;
      sub_10003DFC0(v59, v78, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v58 + 56))(v60, 0, 1, v57);
      sub_10003F5D0(v60, (uint64_t *)&unk_100163AD0);
      if (qword_10015F158 != -1) {
        swift_once();
      }
      uint64_t v61 = type metadata accessor for Logger();
      sub_1000477B0(v61, (uint64_t)qword_10016AFF8);
      uint64_t v62 = v74;
      sub_10003DFC0(v49, v74, type metadata accessor for SettingsURLDestination);
      uint64_t v63 = Logger.logObject.getter();
      os_log_type_t v64 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v63, v64))
      {
        uint64_t v65 = swift_slowAlloc();
        uint64_t v66 = swift_slowAlloc();
        *(_DWORD *)uint64_t v65 = 141558275;
        uint64_t v87 = 1752392040;
        uint64_t v88 = v66;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v65 + 12) = 2081;
        unint64_t v67 = sub_1000F6F94();
        uint64_t v87 = sub_100042948(v67, v68, &v88);
        uint64_t v52 = v79;
        uint64_t v49 = v83;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_10003DF60(v62, type metadata accessor for SettingsURLDestination);
        _os_log_impl((void *)&_mh_execute_header, v63, v64, "Pending URL Destination '%{private,mask.hash}s' has actionable selection now.", (uint8_t *)v65, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        sub_10003DF60(v62, type metadata accessor for SettingsURLDestination);
      }

      uint64_t v72 = (uint64_t)v76;
      uint64_t v71 = v77;
      sub_1000D8B48(v77);
      uint64_t v73 = v75;
      sub_10003DFC0(v49, v75, type metadata accessor for SettingsURLDestination);
      if (v46((char *)v71, 1, v84) == 1)
      {
        sub_10004F000(v73, v72, type metadata accessor for SettingsURLDestination);
        sub_10003F5D0(v71, &qword_100163F60);
      }
      else
      {
        sub_10003DF60(v73, type metadata accessor for SettingsURLDestination);
        sub_10004F000(v71, v72, type metadata accessor for SettingsURLDestination);
      }
      sub_1000D46AC(v72);
      sub_10003DF60(v72, type metadata accessor for SettingsURLDestination);
      sub_10003DF60(v52, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
      uint64_t v43 = v49;
      uint64_t v42 = type metadata accessor for SettingsURLDestination;
    }
    else
    {
      uint64_t v69 = type metadata accessor for PrimarySettingsListItemModel();
      uint64_t v70 = v78;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v69 - 8) + 56))(v78, 1, 1, v69);
      sub_10003F5D0(v70, (uint64_t *)&unk_100163AD0);
      sub_10003DF60(v52, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
      uint64_t v42 = type metadata accessor for SettingsURLDestination;
      uint64_t v43 = v49;
    }
  }
  else
  {
    sub_10003DF60(v49, type metadata accessor for SettingsURLDestination);
    uint64_t v42 = type metadata accessor for SettingsURLDestination.Action;
    uint64_t v43 = v51;
  }
  return sub_10003DF60(v43, v42);
}

uint64_t sub_100036190(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000361C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000F5920);
}

uint64_t type metadata accessor for SettingsURLDestination(uint64_t a1)
{
  return sub_100036190(a1, qword_100164940);
}

uint64_t type metadata accessor for SettingsURLDestination.Action(uint64_t a1)
{
  return sub_100036190(a1, qword_1001649F0);
}

uint64_t sub_10003621C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v105 = a1;
  uint64_t v100 = a3;
  uint64_t v99 = type metadata accessor for ScrollViewProxy();
  uint64_t v97 = *(void *)(v99 - 8);
  __chkstk_darwin(v99);
  uint64_t v93 = v4;
  uint64_t v104 = (char *)&v76 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = type metadata accessor for PPTTestCase.Name();
  uint64_t v95 = *(void *)(v96 - 8);
  __chkstk_darwin(v96);
  uint64_t v94 = (char *)&v76 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = type metadata accessor for InsetGroupedListStyle();
  uint64_t v88 = *(void *)(v87 - 8);
  __chkstk_darwin(v87);
  uint64_t v86 = (char *)&v76 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100046B9C(&qword_100163690);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v76 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100046B9C(&qword_1001637E0);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v77 = (uint64_t)&v76 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v76 - v14;
  uint64_t v98 = (uint64_t *)sub_100046B9C(&qword_1001637E8);
  uint64_t v81 = *(v98 - 1);
  __chkstk_darwin(v98);
  uint64_t v78 = (char *)&v76 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = sub_100046B9C(&qword_1001637F0) - 8;
  __chkstk_darwin(v80);
  uint64_t v79 = (char *)&v76 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = sub_100046B9C(&qword_1001637F8);
  __chkstk_darwin(v84);
  uint64_t v82 = (uint64_t)&v76 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = sub_100046B9C(&qword_100163800);
  uint64_t v85 = *(void *)(v101 - 8);
  __chkstk_darwin(v101);
  uint64_t v83 = (char *)&v76 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = sub_100046B9C(&qword_100163808);
  uint64_t v89 = *(void *)(v90 - 8);
  __chkstk_darwin(v90);
  uint64_t v102 = (char *)&v76 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = sub_100046B9C(&qword_100163810);
  uint64_t v91 = *(void *)(v92 - 8);
  __chkstk_darwin(v92);
  uint64_t v103 = (char *)&v76 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for PrimarySettingsList();
  Bindable.wrappedValue.getter();
  uint64_t v22 = sub_1000370AC();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  Bindable.projectedValue.getter();
  swift_getKeyPath();
  Bindable<A>.subscript.getter();
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  uint64_t v23 = sub_100046B9C(&qword_100163818);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v15, 0, 1, v23);
  uint64_t v109 = v22;
  sub_10003F75C((uint64_t)v15, v77, &qword_1001637E0);
  uint64_t v106 = &v109;
  id v107 = sub_1000277E4;
  uint64_t v108 = 0;
  type metadata accessor for PrimarySettingsListItemIdentifier();
  sub_100046B9C(&qword_100163820);
  sub_10002796C((unint64_t *)&qword_10015F8B0, (void (*)(uint64_t))type metadata accessor for PrimarySettingsListItemIdentifier);
  sub_1000375BC();
  uint64_t v24 = v78;
  List.init(selection:content:)();
  sub_10003F5D0((uint64_t)v15, &qword_1001637E0);
  swift_bridgeObjectRelease();
  uint64_t v25 = static Animation.default.getter();
  Bindable.wrappedValue.getter();
  uint64_t v26 = sub_1000370AC();
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  swift_release();
  uint64_t v31 = v81;
  uint64_t v32 = (uint64_t)v79;
  uint64_t v33 = v98;
  (*(void (**)(char *, char *, uint64_t *))(v81 + 16))(v79, v24, v98);
  uint64_t v34 = (uint64_t *)(v32 + *(int *)(v80 + 44));
  *uint64_t v34 = v25;
  v34[1] = v26;
  _OWORD v34[2] = v28;
  uint64_t v34[3] = v30;
  (*(void (**)(char *, uint64_t *))(v31 + 8))(v24, v33);
  uint64_t v35 = static Animation.default.getter();
  uint64_t v98 = (uint64_t *)a2;
  LOBYTE(v26) = *(unsigned char *)(a2 + 32);
  uint64_t v36 = swift_retain();
  uint64_t v37 = sub_1000375A0(v36, v26);
  swift_release();
  swift_getKeyPath();
  uint64_t v109 = v37;
  sub_10002796C(&qword_10015F570, (void (*)(uint64_t))type metadata accessor for SettingsAppSearchViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  LOBYTE(v33) = *(unsigned char *)(v37 + 80);
  swift_release();
  uint64_t v38 = v82;
  sub_10003F75C(v32, v82, &qword_1001637F0);
  uint64_t v39 = v84;
  uint64_t v40 = v38 + *(int *)(v84 + 36);
  *(void *)uint64_t v40 = v35;
  *(unsigned char *)(v40 + 8) = (_BYTE)v33;
  sub_10003F5D0(v32, &qword_1001637F0);
  uint64_t v41 = v86;
  InsetGroupedListStyle.init()();
  unint64_t v42 = sub_100037660();
  uint64_t v43 = v83;
  uint64_t v44 = v39;
  uint64_t v45 = v87;
  View.listStyle<A>(_:)();
  uint64_t v46 = v45;
  (*(void (**)(char *, uint64_t))(v88 + 8))(v41, v45);
  sub_10003F5D0(v38, &qword_1001637F8);
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v47 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v49 = v48;
  uint64_t v109 = v44;
  uint64_t v110 = v46;
  LOBYTE(v44) = v50 & 1;
  unint64_t v111 = v42;
  uint64_t v112 = &protocol witness table for InsetGroupedListStyle;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v52 = v101;
  View.navigationTitle(_:)();
  sub_100037590(v47, v49, v44);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v85 + 8))(v43, v52);
  if (qword_10015F1A0 != -1) {
    swift_once();
  }
  uint64_t v53 = v96;
  uint64_t v54 = sub_1000477B0(v96, (uint64_t)qword_10016B0D0);
  uint64_t v55 = v95;
  uint64_t v56 = v94;
  (*(void (**)(char *, uint64_t, uint64_t))(v95 + 16))(v94, v54, v53);
  uint64_t v57 = v97;
  uint64_t v58 = v104;
  uint64_t v59 = v99;
  uint64_t v88 = *(void *)(v97 + 16);
  ((void (*)(char *, uint64_t, uint64_t))v88)(v104, v105, v99);
  uint64_t v60 = *(unsigned __int8 *)(v57 + 80);
  uint64_t v61 = (v60 + 16) & ~v60;
  v93 += v61;
  uint64_t v87 = v60 | 7;
  uint64_t v62 = swift_allocObject();
  uint64_t v97 = *(void *)(v57 + 32);
  ((void (*)(uint64_t, char *, uint64_t))v97)(v62 + v61, v58, v59);
  uint64_t v109 = v101;
  uint64_t v110 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  uint64_t v63 = v102;
  uint64_t v64 = v90;
  View.onTest(_:handler:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v56, v53);
  (*(void (**)(char *, uint64_t))(v89 + 8))(v63, v64);
  uint64_t v65 = *v98;
  if (qword_10015F048 != -1) {
    swift_once();
  }
  TaskLocal.get()();
  uint64_t v66 = sub_100037700(v65, v109);
  swift_bridgeObjectRelease();
  unint64_t v67 = v104;
  ((void (*)(char *, uint64_t, uint64_t))v88)(v104, v105, v59);
  uint64_t v68 = swift_allocObject();
  ((void (*)(uint64_t, char *, uint64_t))v97)(v68 + v61, v67, v59);
  uint64_t v69 = v91;
  uint64_t v70 = v100;
  uint64_t v71 = v103;
  uint64_t v72 = v92;
  (*(void (**)(uint64_t, char *, uint64_t))(v91 + 16))(v100, v103, v92);
  uint64_t v73 = sub_100046B9C(&qword_100163870);
  *(void *)(v70 + *(int *)(v73 + 52)) = v66;
  uint64_t v74 = (uint64_t (**)())(v70 + *(int *)(v73 + 56));
  char *v74 = sub_1000C9088;
  v74[1] = (uint64_t (*)())v68;
  return (*(uint64_t (**)(char *, uint64_t))(v69 + 8))(v71, v72);
}

uint64_t sub_100036F58(uint64_t result, uint64_t a2)
{
  if (result)
  {
    char v3 = *(unsigned char *)(a2 + 8);
    uint64_t v4 = swift_retain();
    sub_100037090(v4, v3);
    swift_release();
    swift_retain();
    swift_release();
    sub_100036FFC();
    swift_release();
    uint64_t v5 = type metadata accessor for PrimarySettingsListItem();
    sub_10005716C(a2 + *(int *)(v5 + 20));
    return swift_release();
  }
  return result;
}

unsigned char *sub_100036FFC()
{
  if (*(void *)(v0 + 16))
  {
    uint64_t v1 = *(unsigned char **)(v0 + 16);
  }
  else
  {
    uint64_t v2 = v0;
    type metadata accessor for PrimarySettingsListModel();
    swift_allocObject();
    uint64_t v3 = swift_retain_n();
    uint64_t v1 = sub_1000253A0(v3, (uint64_t)&off_1001554A8, v0, (uint64_t)&off_100155498);
    *(void *)(v2 + 16) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_100037090(uint64_t a1, char a2)
{
  return sub_1000EFB80(a1, a2, 0xD000000000000010, 0x800000010012A9D0);
}

uint64_t sub_1000370AC()
{
  uint64_t v1 = v0;
  swift_getKeyPath();
  uint64_t v2 = v0 + OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel___observationRegistrar;
  uint64_t v14 = v1;
  sub_10003736C((unint64_t *)&unk_100163AC0, (void (*)(uint64_t))type metadata accessor for PrimarySettingsListModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel__cachedDataModel);
  uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel__cachedDataModel);
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel__cachedDataModel + 8);
  if (v5)
  {
    uint64_t v6 = *(void *)(v1 + OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel__cachedDataModel);
LABEL_9:
    sub_100037444(v5);
    return v6;
  }
  v13[0] = *(void *)(v1 + OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel__cachedDataModel + 16);
  v13[1] = v4;
  if (qword_10015F168 != -1) {
    swift_once();
  }
  v13[3] = v2;
  uint64_t v7 = type metadata accessor for Logger();
  sub_1000477B0(v7, (uint64_t)qword_10016B028);
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "No cached data model found, requesting new snapshot.", v10, 2u);
    swift_slowDealloc();
  }

  sub_100024E3C();
  uint64_t KeyPath = swift_getKeyPath();
  _OWORD v13[2] = v13;
  __chkstk_darwin(KeyPath);
  uint64_t v14 = v1;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  uint64_t v14 = v1;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  uint64_t v6 = *v3;
  if (*v3)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

uint64_t sub_10003736C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000373B4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000373FC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100037444(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_100037490@<X0>(uint64_t a1@<X8>)
{
  sub_100030C58();
  swift_bridgeObjectRetain();
  uint64_t v2 = Text.init<A>(_:)();
  uint64_t v4 = v3;
  char v6 = v5 & 1;
  static HierarchicalShapeStyle.secondary.getter();
  uint64_t v7 = Text.foregroundStyle<A>(_:)();
  uint64_t v9 = v8;
  char v11 = v10;
  uint64_t v13 = v12;
  sub_100037590(v2, v4, v6);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a1 = v7;
  *(void *)(a1 + 8) = v9;
  *(unsigned char *)(a1 + 16) = v11 & 1;
  *(void *)(a1 + 24) = v13;
  *(void *)(a1 + 32) = sub_100008CA8;
  *(void *)(a1 + 40) = 0;
  return result;
}

uint64_t sub_100037590(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_release();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1000375A0(uint64_t a1, char a2)
{
  return sub_1000EFB80(a1, a2, 0xD00000000000001ALL, 0x800000010012AA60);
}

unint64_t sub_1000375BC()
{
  unint64_t result = qword_100163828;
  if (!qword_100163828)
  {
    sub_10004D318(&qword_100163820);
    sub_10002796C(&qword_100163830, (void (*)(uint64_t))type metadata accessor for PrimarySettingsListSection);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100163828);
  }
  return result;
}

unint64_t sub_100037660()
{
  unint64_t result = qword_100163838;
  if (!qword_100163838)
  {
    sub_10004D318(&qword_1001637F8);
    sub_1000066F0();
    sub_10004D2D4(&qword_100163860, &qword_100163868);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100163838);
  }
  return result;
}

uint64_t sub_100037700(uint64_t a1, uint64_t a2)
{
  return sub_1000D67AC(a1, a2, (uint64_t *)&unk_100163F90);
}

uint64_t sub_10003770C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for PrimarySettingsList() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_10003621C(a1, v6, a2);
}

uint64_t type metadata accessor for PrimarySettingsList()
{
  uint64_t result = qword_1001636F0;
  if (!qword_1001636F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000377D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100046B9C((uint64_t *)&unk_1001641A0);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = &v12[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  uint64_t v9 = &v12[-v8];
  sub_10003F75C(a2, (uint64_t)&v12[-v8], (uint64_t *)&unk_1001641A0);
  uint64_t v10 = a1 + OBJC_IVAR____TtC11SettingsApp26SettingsAppNavigationModel__scenePhase;
  swift_beginAccess();
  sub_10003F75C(v10, (uint64_t)v7, (uint64_t *)&unk_1001641A0);
  sub_10003791C((uint64_t)v9);
  swift_beginAccess();
  sub_100039904((uint64_t)v9, v10, (uint64_t *)&unk_1001641A0);
  swift_endAccess();
  sub_100038FF8((uint64_t)v7);
  sub_10003F5D0((uint64_t)v9, (uint64_t *)&unk_1001641A0);
  return sub_10003F5D0((uint64_t)v7, (uint64_t *)&unk_1001641A0);
}

void sub_10003791C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ScenePhase();
  uint64_t v179 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v166 = (char *)&v150 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v180 = sub_100046B9C(&qword_1001641B8);
  uint64_t v4 = __chkstk_darwin(v180);
  uint64_t v163 = (uint64_t)&v150 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v164 = (uint64_t)&v150 - v7;
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v165 = (uint64_t)&v150 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v170 = (char *)&v150 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v159 = (uint64_t)&v150 - v13;
  __chkstk_darwin(v12);
  uint64_t v173 = (uint64_t)&v150 - v14;
  uint64_t v15 = sub_100046B9C((uint64_t *)&unk_1001641A0);
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v151 = (uint64_t)&v150 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v155 = (char *)&v150 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v157 = (uint64_t)&v150 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v172 = (uint64_t)&v150 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v152 = (uint64_t)&v150 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  v158 = (char *)&v150 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v161 = (char *)&v150 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v171 = (uint64_t)&v150 - v31;
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v34 = (char *)&v150 - v33;
  uint64_t v35 = __chkstk_darwin(v32);
  uint64_t v37 = (char *)&v150 - v36;
  uint64_t v38 = __chkstk_darwin(v35);
  uint64_t v167 = (uint64_t)&v150 - v39;
  uint64_t v40 = __chkstk_darwin(v38);
  unint64_t v42 = (char *)&v150 - v41;
  uint64_t v43 = __chkstk_darwin(v40);
  uint64_t v45 = (char *)&v150 - v44;
  __chkstk_darwin(v43);
  uint64_t v47 = (char *)&v150 - v46;
  if (qword_10015F140 != -1) {
    swift_once();
  }
  uint64_t v48 = type metadata accessor for Logger();
  sub_1000477B0(v48, (uint64_t)qword_10016AFB0);
  uint64_t v169 = a1;
  sub_10003F75C(a1, (uint64_t)v47, (uint64_t *)&unk_1001641A0);
  swift_retain_n();
  uint64_t v49 = Logger.logObject.getter();
  os_log_type_t v50 = static os_log_type_t.default.getter();
  int v51 = v50;
  BOOL v52 = os_log_type_enabled(v49, v50);
  uint64_t v53 = _TtC11SettingsApp33RemoteControlSectionModelProvider;
  uint64_t v153 = v34;
  uint64_t v160 = v37;
  if (v52)
  {
    uint64_t v54 = swift_slowAlloc();
    uint64_t v175 = v15;
    uint64_t v55 = v54;
    uint64_t v56 = swift_slowAlloc();
    uint64_t v57 = v181;
    uint64_t v178 = v56;
    uint64_t v184 = v56;
    *(_DWORD *)uint64_t v55 = 136315394;
    uint64_t v176 = (char *)(v55 + 4);
    swift_getKeyPath();
    uint64_t v182 = v57;
    sub_1000373B4((unint64_t *)&qword_10015F5A0, (void (*)(uint64_t))type metadata accessor for SettingsAppNavigationModel);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v58 = v57 + OBJC_IVAR____TtC11SettingsApp26SettingsAppNavigationModel__scenePhase;
    swift_beginAccess();
    sub_10003F75C(v58, (uint64_t)v45, (uint64_t *)&unk_1001641A0);
    LODWORD(v177) = v51;
    uint64_t v59 = String.init<A>(describing:)();
    uint64_t v183 = sub_100042948(v59, v60, &v184);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v55 + 12) = 2080;
    sub_10003F75C((uint64_t)v47, (uint64_t)v45, (uint64_t *)&unk_1001641A0);
    uint64_t v61 = String.init<A>(describing:)();
    uint64_t v183 = sub_100042948(v61, v62, &v184);
    uint64_t v53 = _TtC11SettingsApp33RemoteControlSectionModelProvider;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10003F5D0((uint64_t)v47, (uint64_t *)&unk_1001641A0);
    _os_log_impl((void *)&_mh_execute_header, v49, (os_log_type_t)v177, "Scene phase will change from '%s' to '%s'.", (uint8_t *)v55, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_release_n();
    sub_10003F5D0((uint64_t)v47, (uint64_t *)&unk_1001641A0);
  }

  swift_getKeyPath();
  uint64_t v63 = v181;
  uint64_t v64 = (char *)v53[88].cache + v181;
  uint64_t v184 = v181;
  uint64_t v175 = sub_1000373B4((unint64_t *)&qword_10015F5A0, (void (*)(uint64_t))type metadata accessor for SettingsAppNavigationModel);
  uint64_t v176 = v64;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v65 = v63 + OBJC_IVAR____TtC11SettingsApp26SettingsAppNavigationModel__scenePhase;
  swift_beginAccess();
  uint64_t v66 = v179;
  uint64_t v68 = v179 + 104;
  unint64_t v67 = *(void (**)(void))(v179 + 104);
  unsigned int v156 = enum case for ScenePhase.active(_:);
  v174 = v67;
  v67(v42);
  v177 = *(void (**)(char *, void, uint64_t, uint64_t))(v66 + 56);
  uint64_t v178 = v66 + 56;
  v177(v42, 0, 1, v2);
  uint64_t v69 = v173;
  uint64_t v70 = v173 + *(int *)(v180 + 48);
  uint64_t v71 = v65;
  sub_10003F75C(v65, v173, (uint64_t *)&unk_1001641A0);
  sub_10003F75C((uint64_t)v42, v70, (uint64_t *)&unk_1001641A0);
  uint64_t v73 = v66 + 48;
  uint64_t v72 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v66 + 48);
  unsigned int v74 = v72(v69, 1, v2);
  uint64_t v168 = v72;
  if (v74 == 1)
  {
    sub_10003F5D0((uint64_t)v42, (uint64_t *)&unk_1001641A0);
    unsigned int v75 = v72(v70, 1, v2);
    uint64_t v76 = v171;
    if (v75 != 1)
    {
      uint64_t v78 = (uint64_t)v170;
      uint64_t v79 = v71;
      uint64_t v69 = v173;
      uint64_t v80 = v174;
LABEL_20:
      sub_10003F5D0(v69, &qword_1001641B8);
      uint64_t v77 = v168;
      goto LABEL_21;
    }
    uint64_t v77 = v72;
    sub_10003F5D0(v173, (uint64_t *)&unk_1001641A0);
    uint64_t v78 = (uint64_t)v170;
    uint64_t v79 = v71;
    uint64_t v80 = v174;
  }
  else
  {
    uint64_t v81 = v167;
    sub_10003F75C(v69, v167, (uint64_t *)&unk_1001641A0);
    if (v72(v70, 1, v2) == 1)
    {
      uint64_t v76 = v171;
      uint64_t v79 = v71;
LABEL_18:
      uint64_t v80 = v174;
      sub_10003F5D0((uint64_t)v42, (uint64_t *)&unk_1001641A0);
      (*(void (**)(uint64_t, uint64_t))(v179 + 8))(v167, v2);
      uint64_t v78 = (uint64_t)v170;
      goto LABEL_20;
    }
    uint64_t v150 = v73;
    uint64_t v82 = v179;
    uint64_t v83 = *(void (**)(char *, uint64_t, uint64_t))(v179 + 32);
    uint64_t v162 = v68;
    uint64_t v84 = v166;
    v83(v166, v70, v2);
    sub_1000373B4(&qword_1001641C0, (void (*)(uint64_t))&type metadata accessor for ScenePhase);
    char v85 = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t v79 = v71;
    uint64_t v86 = *(void (**)(char *, uint64_t))(v82 + 8);
    uint64_t v87 = v84;
    uint64_t v68 = v162;
    v86(v87, v2);
    sub_10003F5D0((uint64_t)v42, (uint64_t *)&unk_1001641A0);
    v86((char *)v81, v2);
    uint64_t v73 = v150;
    uint64_t v80 = v174;
    sub_10003F5D0(v69, (uint64_t *)&unk_1001641A0);
    uint64_t v78 = (uint64_t)v170;
    uint64_t v76 = v171;
    uint64_t v77 = v168;
    if ((v85 & 1) == 0) {
      goto LABEL_21;
    }
  }
  uint64_t v154 = v79;
  uint64_t v88 = (uint64_t)v160;
  ((void (*)(char *, void, uint64_t))v80)(v160, enum case for ScenePhase.inactive(_:), v2);
  v177((char *)v88, 0, 1, v2);
  uint64_t v89 = v159;
  uint64_t v90 = v159 + *(int *)(v180 + 48);
  sub_10003F75C(v169, v159, (uint64_t *)&unk_1001641A0);
  sub_10003F75C(v88, v90, (uint64_t *)&unk_1001641A0);
  if (v77(v89, 1, v2) == 1)
  {
    sub_10003F5D0(v88, (uint64_t *)&unk_1001641A0);
    if (v77(v90, 1, v2) == 1)
    {
      sub_10003F5D0(v89, (uint64_t *)&unk_1001641A0);
LABEL_33:
      unint64_t v114 = 0x800000010012A750;
      uint64_t v115 = "Calling will resign active on %{private,mask.hash}@.";
      uint64_t v116 = &selRef_willResignActive;
LABEL_51:
      sub_100019CF4(v114, v115, (SEL *)v116);
      return;
    }
    uint64_t v69 = v89;
    uint64_t v79 = v154;
    uint64_t v80 = v174;
    goto LABEL_20;
  }
  uint64_t v91 = (uint64_t)v153;
  sub_10003F75C(v89, (uint64_t)v153, (uint64_t *)&unk_1001641A0);
  if (v77(v90, 1, v2) == 1)
  {
    unint64_t v42 = v160;
    uint64_t v167 = v91;
    uint64_t v69 = v89;
    uint64_t v79 = v154;
    goto LABEL_18;
  }
  uint64_t v108 = v179;
  uint64_t v109 = *(void (**)(char *, uint64_t, uint64_t))(v179 + 32);
  uint64_t v162 = v68;
  uint64_t v110 = v166;
  v109(v166, v90, v2);
  sub_1000373B4(&qword_1001641C0, (void (*)(uint64_t))&type metadata accessor for ScenePhase);
  char v111 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v112 = *(void (**)(char *, uint64_t))(v108 + 8);
  uint64_t v113 = v110;
  uint64_t v68 = v162;
  v112(v113, v2);
  sub_10003F5D0((uint64_t)v160, (uint64_t *)&unk_1001641A0);
  v112((char *)v91, v2);
  uint64_t v80 = v174;
  uint64_t v76 = v171;
  sub_10003F5D0(v159, (uint64_t *)&unk_1001641A0);
  uint64_t v78 = (uint64_t)v170;
  uint64_t v79 = v154;
  if (v111) {
    goto LABEL_33;
  }
LABEL_21:
  swift_getKeyPath();
  uint64_t v183 = v181;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  LODWORD(v173) = enum case for ScenePhase.inactive(_:);
  v80(v76);
  v177((char *)v76, 0, 1, v2);
  uint64_t v92 = v78 + *(int *)(v180 + 48);
  sub_10003F75C(v79, v78, (uint64_t *)&unk_1001641A0);
  sub_10003F75C(v76, v92, (uint64_t *)&unk_1001641A0);
  if (v77(v78, 1, v2) == 1)
  {
    sub_10003F5D0(v76, (uint64_t *)&unk_1001641A0);
    if (v77(v92, 1, v2) != 1)
    {
LABEL_35:
      sub_10003F5D0(v78, &qword_1001641B8);
      goto LABEL_36;
    }
    sub_10003F5D0(v78, (uint64_t *)&unk_1001641A0);
    uint64_t v76 = (uint64_t)v158;
  }
  else
  {
    uint64_t v93 = (uint64_t)v161;
    sub_10003F75C(v78, (uint64_t)v161, (uint64_t *)&unk_1001641A0);
    if (v77(v92, 1, v2) == 1)
    {
LABEL_31:
      sub_10003F5D0(v76, (uint64_t *)&unk_1001641A0);
      (*(void (**)(uint64_t, uint64_t))(v179 + 8))(v93, v2);
      goto LABEL_35;
    }
    uint64_t v94 = v179;
    uint64_t v95 = *(void (**)(char *, uint64_t, uint64_t))(v179 + 32);
    uint64_t v162 = v68;
    uint64_t v96 = v166;
    v95(v166, v92, v2);
    sub_1000373B4(&qword_1001641C0, (void (*)(uint64_t))&type metadata accessor for ScenePhase);
    LODWORD(v170) = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t v97 = v80;
    uint64_t v98 = v79;
    uint64_t v99 = v78;
    uint64_t v100 = v98;
    uint64_t v101 = v94;
    uint64_t v76 = (uint64_t)v158;
    uint64_t v102 = v77;
    uint64_t v103 = v73;
    uint64_t v104 = *(void (**)(char *, uint64_t))(v101 + 8);
    v104(v96, v2);
    sub_10003F5D0(v171, (uint64_t *)&unk_1001641A0);
    v104(v161, v2);
    uint64_t v73 = v103;
    uint64_t v77 = v102;
    uint64_t v105 = v99;
    uint64_t v79 = v100;
    uint64_t v80 = v97;
    uint64_t v68 = v162;
    sub_10003F5D0(v105, (uint64_t *)&unk_1001641A0);
    if ((v170 & 1) == 0) {
      goto LABEL_36;
    }
  }
  uint64_t v154 = v79;
  ((void (*)(uint64_t, void, uint64_t))v80)(v76, v156, v2);
  v177((char *)v76, 0, 1, v2);
  uint64_t v106 = v165;
  uint64_t v107 = v165 + *(int *)(v180 + 48);
  sub_10003F75C(v169, v165, (uint64_t *)&unk_1001641A0);
  sub_10003F75C(v76, v107, (uint64_t *)&unk_1001641A0);
  if (v77(v106, 1, v2) == 1)
  {
    sub_10003F5D0(v76, (uint64_t *)&unk_1001641A0);
    if (v77(v107, 1, v2) == 1)
    {
      sub_10003F5D0(v165, (uint64_t *)&unk_1001641A0);
LABEL_50:
      unint64_t v114 = 0x800000010012A770;
      uint64_t v115 = "Calling will become active on %{private,mask.hash}@.";
      uint64_t v116 = &selRef_willBecomeActive;
      goto LABEL_51;
    }
    uint64_t v78 = v165;
    uint64_t v80 = v174;
    uint64_t v79 = v154;
    goto LABEL_35;
  }
  uint64_t v93 = v152;
  sub_10003F75C(v165, v152, (uint64_t *)&unk_1001641A0);
  if (v77(v107, 1, v2) == 1)
  {
    uint64_t v78 = v165;
    uint64_t v80 = v174;
    uint64_t v79 = v154;
    goto LABEL_31;
  }
  uint64_t v136 = v76;
  uint64_t v137 = v179;
  uint64_t v138 = *(void (**)(char *, uint64_t, uint64_t))(v179 + 32);
  uint64_t v162 = v68;
  v139 = v166;
  v138(v166, v107, v2);
  sub_1000373B4(&qword_1001641C0, (void (*)(uint64_t))&type metadata accessor for ScenePhase);
  uint64_t v140 = v93;
  char v141 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v142 = v73;
  uint64_t v143 = *(void (**)(char *, uint64_t))(v137 + 8);
  uint64_t v144 = v139;
  uint64_t v68 = v162;
  v143(v144, v2);
  sub_10003F5D0(v136, (uint64_t *)&unk_1001641A0);
  v143((char *)v140, v2);
  uint64_t v73 = v142;
  uint64_t v79 = v154;
  sub_10003F5D0(v165, (uint64_t *)&unk_1001641A0);
  uint64_t v80 = v174;
  if (v141) {
    goto LABEL_50;
  }
LABEL_36:
  swift_getKeyPath();
  uint64_t v183 = v181;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v117 = v77;
  uint64_t v118 = v172;
  ((void (*)(uint64_t, void, uint64_t))v80)(v172, enum case for ScenePhase.background(_:), v2);
  v177((char *)v118, 0, 1, v2);
  uint64_t v119 = v164;
  uint64_t v120 = v164 + *(int *)(v180 + 48);
  sub_10003F75C(v79, v164, (uint64_t *)&unk_1001641A0);
  uint64_t v121 = v118;
  uint64_t v122 = v117;
  uint64_t v123 = v119;
  sub_10003F75C(v121, v120, (uint64_t *)&unk_1001641A0);
  if (v117(v119, 1, v2) == 1)
  {
    sub_10003F5D0(v172, (uint64_t *)&unk_1001641A0);
    if (v117(v120, 1, v2) == 1)
    {
      sub_10003F5D0(v119, (uint64_t *)&unk_1001641A0);
      uint64_t v124 = v180;
      goto LABEL_43;
    }
LABEL_41:
    sub_10003F5D0(v123, &qword_1001641B8);
    return;
  }
  uint64_t v125 = v119;
  uint64_t v126 = v157;
  sub_10003F75C(v125, v157, (uint64_t *)&unk_1001641A0);
  if (v117(v120, 1, v2) == 1)
  {
    sub_10003F5D0(v172, (uint64_t *)&unk_1001641A0);
    (*(void (**)(uint64_t, uint64_t))(v179 + 8))(v126, v2);
    goto LABEL_41;
  }
  uint64_t v150 = v73;
  uint64_t v127 = v179;
  uint64_t v128 = *(void (**)(char *, uint64_t, uint64_t))(v179 + 32);
  uint64_t v162 = v68;
  uint64_t v129 = v166;
  v128(v166, v120, v2);
  sub_1000373B4(&qword_1001641C0, (void (*)(uint64_t))&type metadata accessor for ScenePhase);
  char v130 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v131 = *(void (**)(char *, uint64_t))(v127 + 8);
  uint64_t v124 = v180;
  v131(v129, v2);
  sub_10003F5D0(v172, (uint64_t *)&unk_1001641A0);
  v131((char *)v126, v2);
  sub_10003F5D0(v123, (uint64_t *)&unk_1001641A0);
  if ((v130 & 1) == 0) {
    return;
  }
LABEL_43:
  uint64_t v132 = (uint64_t)v155;
  ((void (*)(char *, void, uint64_t))v80)(v155, v173, v2);
  v177((char *)v132, 0, 1, v2);
  uint64_t v133 = v163;
  uint64_t v134 = v163 + *(int *)(v124 + 48);
  sub_10003F75C(v169, v163, (uint64_t *)&unk_1001641A0);
  sub_10003F75C(v132, v134, (uint64_t *)&unk_1001641A0);
  if (v122(v133, 1, v2) != 1)
  {
    uint64_t v135 = v151;
    sub_10003F75C(v163, v151, (uint64_t *)&unk_1001641A0);
    if (v122(v134, 1, v2) != 1)
    {
      uint64_t v145 = v179;
      uint64_t v146 = v132;
      v147 = v166;
      (*(void (**)(char *, uint64_t, uint64_t))(v179 + 32))(v166, v134, v2);
      sub_1000373B4(&qword_1001641C0, (void (*)(uint64_t))&type metadata accessor for ScenePhase);
      char v148 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v149 = *(void (**)(char *, uint64_t))(v145 + 8);
      v149(v147, v2);
      sub_10003F5D0(v146, (uint64_t *)&unk_1001641A0);
      v149((char *)v135, v2);
      sub_10003F5D0(v163, (uint64_t *)&unk_1001641A0);
      if ((v148 & 1) == 0) {
        return;
      }
      goto LABEL_53;
    }
    sub_10003F5D0(v132, (uint64_t *)&unk_1001641A0);
    (*(void (**)(uint64_t, uint64_t))(v179 + 8))(v135, v2);
LABEL_48:
    sub_10003F5D0(v163, &qword_1001641B8);
    return;
  }
  sub_10003F5D0(v132, (uint64_t *)&unk_1001641A0);
  if (v122(v134, 1, v2) != 1) {
    goto LABEL_48;
  }
  sub_10003F5D0(v163, (uint64_t *)&unk_1001641A0);
LABEL_53:
  sub_1000D920C();
}

void sub_100038FF8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for ScenePhase();
  uint64_t v44 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v40 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_100046B9C(&qword_1001641B8);
  __chkstk_darwin(v42);
  uint64_t v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100046B9C((uint64_t *)&unk_1001641A0);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v43 = (uint64_t)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v41 = (char *)&v38 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v38 - v14;
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v38 - v16;
  if (qword_10015F140 != -1) {
    swift_once();
  }
  uint64_t v18 = type metadata accessor for Logger();
  sub_1000477B0(v18, (uint64_t)qword_10016AFB0);
  sub_10003F75C(a1, (uint64_t)v17, (uint64_t *)&unk_1001641A0);
  swift_retain_n();
  uint64_t v19 = Logger.logObject.getter();
  os_log_type_t v20 = static os_log_type_t.default.getter();
  uint64_t v21 = _TtC11SettingsApp33RemoteControlSectionModelProvider;
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v22 = swift_slowAlloc();
    uint64_t v38 = swift_slowAlloc();
    v47[0] = v38;
    *(_DWORD *)uint64_t v22 = 136315394;
    sub_10003F75C((uint64_t)v17, (uint64_t)v15, (uint64_t *)&unk_1001641A0);
    uint64_t v23 = String.init<A>(describing:)();
    uint64_t v39 = v7;
    uint64_t v46 = sub_100042948(v23, v24, v47);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10003F5D0((uint64_t)v17, (uint64_t *)&unk_1001641A0);
    *(_WORD *)(v22 + 12) = 2080;
    swift_getKeyPath();
    uint64_t v46 = v2;
    sub_1000373B4((unint64_t *)&qword_10015F5A0, (void (*)(uint64_t))type metadata accessor for SettingsAppNavigationModel);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    uint64_t v7 = v39;
    swift_release();
    uint64_t v25 = v2 + OBJC_IVAR____TtC11SettingsApp26SettingsAppNavigationModel__scenePhase;
    swift_beginAccess();
    sub_10003F75C(v25, (uint64_t)v15, (uint64_t *)&unk_1001641A0);
    uint64_t v26 = String.init<A>(describing:)();
    uint64_t v45 = sub_100042948(v26, v27, v47);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "Scene phase did change from '%s' to '%s'.", (uint8_t *)v22, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v21 = _TtC11SettingsApp33RemoteControlSectionModelProvider;
    swift_slowDealloc();
  }
  else
  {
    sub_10003F5D0((uint64_t)v17, (uint64_t *)&unk_1001641A0);

    swift_release_n();
  }
  swift_getKeyPath();
  v47[0] = v2;
  sub_1000373B4((unint64_t *)&qword_10015F5A0, (void (*)(uint64_t))type metadata accessor for SettingsAppNavigationModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v28 = (uint64_t)v21[88].superclass + v2;
  swift_beginAccess();
  uint64_t v29 = v44;
  uint64_t v30 = (uint64_t)v41;
  (*(void (**)(char *, void, uint64_t))(v44 + 104))(v41, enum case for ScenePhase.background(_:), v4);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v29 + 56))(v30, 0, 1, v4);
  uint64_t v31 = (uint64_t)&v7[*(int *)(v42 + 48)];
  sub_10003F75C(v28, (uint64_t)v7, (uint64_t *)&unk_1001641A0);
  sub_10003F75C(v30, v31, (uint64_t *)&unk_1001641A0);
  uint64_t v32 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v29 + 48);
  int v33 = v32(v7, 1, v4);
  uint64_t v34 = v43;
  if (v33 != 1)
  {
    sub_10003F75C((uint64_t)v7, v43, (uint64_t *)&unk_1001641A0);
    if (v32((char *)v31, 1, v4) != 1)
    {
      uint64_t v35 = v40;
      (*(void (**)(char *, uint64_t, uint64_t))(v29 + 32))(v40, v31, v4);
      sub_1000373B4(&qword_1001641C0, (void (*)(uint64_t))&type metadata accessor for ScenePhase);
      char v36 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v37 = *(void (**)(char *, uint64_t))(v29 + 8);
      v37(v35, v4);
      sub_10003F5D0(v30, (uint64_t *)&unk_1001641A0);
      v37((char *)v34, v4);
      sub_10003F5D0((uint64_t)v7, (uint64_t *)&unk_1001641A0);
      if ((v36 & 1) == 0) {
        return;
      }
      goto LABEL_13;
    }
    sub_10003F5D0(v30, (uint64_t *)&unk_1001641A0);
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v34, v4);
LABEL_11:
    sub_10003F5D0((uint64_t)v7, &qword_1001641B8);
    return;
  }
  sub_10003F5D0(v30, (uint64_t *)&unk_1001641A0);
  if (v32((char *)v31, 1, v4) != 1) {
    goto LABEL_11;
  }
  sub_10003F5D0((uint64_t)v7, (uint64_t *)&unk_1001641A0);
LABEL_13:
  sub_1000D981C();
}

uint64_t sub_100039734@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1000373B4((unint64_t *)&qword_10015F5A0, (void (*)(uint64_t))type metadata accessor for SettingsAppNavigationModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v4 = v3 + OBJC_IVAR____TtC11SettingsApp26SettingsAppNavigationModel__navigationPath;
  swift_beginAccess();
  uint64_t v5 = type metadata accessor for NavigationPath();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_100039830@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1000373B4((unint64_t *)&unk_100163AC0, (void (*)(uint64_t))type metadata accessor for PrimarySettingsListModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v4 = v3 + OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel_effectiveSelection;
  swift_beginAccess();
  return sub_10003F75C(v4, a2, (uint64_t *)&unk_100161530);
}

uint64_t sub_100039904(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_100046B9C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 24))(a2, a1, v5);
  return a2;
}

uint64_t sub_100039968()
{
  return Label.init(title:icon:)();
}

uint64_t sub_1000399F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100046B9C(&qword_10015FD68);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v10[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  long long v7 = v1[1];
  long long v13 = *v1;
  *(_OWORD *)uint64_t v14 = v7;
  *(_OWORD *)&v14[10] = *(long long *)((char *)v1 + 26);
  uint64_t v12 = &v13;
  uint64_t v11 = &v13;
  sub_100039B80();
  Label.init(title:icon:)();
  if (v14[24]) {
    double v8 = 0.5;
  }
  else {
    double v8 = 1.0;
  }
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v4 + 16))(a1, v6, v3);
  *(double *)(a1 + *(int *)(sub_100046B9C(&qword_1001601B8) + 36)) = v8;
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_100039B80()
{
  unint64_t result = qword_10015FD88;
  if (!qword_10015FD88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015FD88);
  }
  return result;
}

uint64_t assignWithCopy for Icon(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v4 = *(void *)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  sub_10003A440(*(void *)a2, v5);
  uint64_t v6 = *(void *)a1;
  char v7 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  sub_10003A520(v6, v7);
  double v8 = *(void **)(v2 + 16);
  uint64_t v9 = *(void *)(v2 + 24);
  LOBYTE(v2) = *(unsigned char *)(v2 + 32);
  sub_100047728(v8, v9, v2);
  uint64_t v10 = *(void **)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  *(void *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v9;
  char v12 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v2;
  sub_100046F04(v10, v11, v12);
  return a1;
}

uint64_t sub_100039C58@<X0>(uint64_t a1@<X8>)
{
  return sub_100039C94(a1);
}

uint64_t sub_100039C94@<X0>(uint64_t a1@<X8>)
{
  uint64_t v35 = sub_100046B9C(&qword_1001608D8);
  __chkstk_darwin(v35);
  uint64_t v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_100046B9C(&qword_1001608E0);
  __chkstk_darwin(v34);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100046B9C(&qword_1001608E8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100046B9C(&qword_1001608F0);
  __chkstk_darwin(v10);
  long long v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void **)(v1 + 16);
  uint64_t v14 = *(void *)(v1 + 24);
  switch(*(unsigned char *)(v1 + 32))
  {
    case 1:
      uint64_t v31 = v11;
      uint64_t v32 = v7;
      uint64_t v33 = a1;
      id v20 = objc_allocWithZone((Class)ISIcon);
      swift_bridgeObjectRetain();
      NSString v21 = String._bridgeToObjectiveC()();
      sub_100046F04(v15, v14, 1);
      [v20 initWithBundleIdentifier:v21];

      if (qword_10015F050 != -1) {
        goto LABEL_9;
      }
      goto LABEL_6;
    case 2:
      uint64_t v31 = v11;
      uint64_t v32 = v7;
      uint64_t v33 = a1;
      id v22 = objc_allocWithZone((Class)ISIcon);
      swift_bridgeObjectRetain();
      NSString v23 = String._bridgeToObjectiveC()();
      sub_100046F04(v15, v14, 2);
      [v22 initWithType:v23];

      if (qword_10015F050 != -1) {
LABEL_9:
      }
        swift_once();
LABEL_6:
      uint64_t v24 = *(void *)v1;
      char v25 = *(unsigned char *)(v1 + 8);
      id v26 = (id)qword_10016AE10;
      sub_10003A440(v24, v25);
      double v27 = sub_10003A700(v24, v25);
      sub_10003A520(v24, v25);
      [v26 setScale:v27];
      [v26 setDrawBorder:1];
      AsyncIconImage.init<>(icon:descriptor:)();
      uint64_t v28 = v31;
      (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v6, v13, v10);
      swift_storeEnumTagMultiPayload();
      sub_10004D2D4(&qword_100160908, &qword_1001608F0);
      _ConditionalContent<>.init(storage:)();
      sub_10003A600((uint64_t)v9, (uint64_t)v4);
      swift_storeEnumTagMultiPayload();
      sub_100046B9C(&qword_1001608F8);
      sub_10003A668();
      sub_10003A52C();
      _ConditionalContent<>.init(storage:)();
      sub_10003A5A0((uint64_t)v9);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v13, v10);
      break;
    case 3:
      uint64_t v36 = 0;
      char v37 = 1;
      _ConditionalContent<>.init(storage:)();
      char v29 = v39;
      *(void *)uint64_t v4 = v38;
      v4[8] = v29;
      swift_storeEnumTagMultiPayload();
      sub_100046B9C(&qword_1001608F8);
      sub_10003A668();
      sub_10003A52C();
      uint64_t result = _ConditionalContent<>.init(storage:)();
      break;
    default:
      sub_100047728(*(id *)(v1 + 16), *(void *)(v1 + 24), 0);
      id v16 = v15;
      uint64_t v36 = Image.init(uiImage:)();
      char v37 = 0;
      swift_retain();
      _ConditionalContent<>.init(storage:)();
      uint64_t v17 = v38;
      char v18 = v39;
      *(void *)uint64_t v4 = v38;
      v4[8] = v18;
      swift_storeEnumTagMultiPayload();
      sub_10003A440(v17, v18);
      sub_100046B9C(&qword_1001608F8);
      sub_10003A668();
      sub_10003A52C();
      _ConditionalContent<>.init(storage:)();
      sub_100046F04(v15, v14, 0);
      sub_10003A520(v17, v18);
      uint64_t result = swift_release();
      break;
  }
  return result;
}

uint64_t sub_10003A314(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 16);
  swift_retain();
  sub_10003A440(v6, v7);
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = v7;
  char v8 = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = v8;
  uint64_t v9 = *(int *)(a3 + 28);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  swift_retain();
  uint64_t v12 = sub_100046B9C(&qword_100163690);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
  return a1;
}

uint64_t initializeWithCopy for Icon(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v4 = *(void *)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  sub_10003A440(*(void *)a2, v5);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  uint64_t v6 = *(void **)(v2 + 16);
  uint64_t v7 = *(void *)(v2 + 24);
  LOBYTE(v2) = *(unsigned char *)(v2 + 32);
  sub_100047728(v6, v7, v2);
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = v2;
  return a1;
}

uint64_t sub_10003A440(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_10003A44C(uint64_t a1, uint64_t a2)
{
  swift_release();
  sub_10003A520(*(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_100046B9C(&qword_100163690);
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void destroy for Icon(uint64_t a1)
{
  sub_10003A520(*(void *)a1, *(unsigned char *)(a1 + 8));
  uint64_t v2 = *(void **)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  char v4 = *(unsigned char *)(a1 + 32);

  sub_100046F04(v2, v3, v4);
}

uint64_t sub_10003A520(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_release();
  }
  return result;
}

unint64_t sub_10003A52C()
{
  unint64_t result = qword_100160910;
  if (!qword_100160910)
  {
    sub_10004D318(&qword_1001608F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160910);
  }
  return result;
}

uint64_t sub_10003A5A0(uint64_t a1)
{
  uint64_t v2 = sub_100046B9C(&qword_1001608E8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10003A600(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100046B9C(&qword_1001608E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_10003A668()
{
  unint64_t result = qword_100160900;
  if (!qword_100160900)
  {
    sub_10004D318(&qword_1001608E8);
    sub_10004D2D4(&qword_100160908, &qword_1001608F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160900);
  }
  return result;
}

double sub_10003A700(uint64_t a1, char a2)
{
  uint64_t v4 = type metadata accessor for EnvironmentValues();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2) {
    return *(double *)&a1;
  }
  swift_retain();
  os_log_type_t v8 = static os_log_type_t.fault.getter();
  uint64_t v9 = static Log.runtimeIssuesLog.getter();
  os_log_type_t v10 = v8;
  if (os_log_type_enabled(v9, v8))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315138;
    uint64_t v13 = sub_100042948(0x74616F6C464743, 0xE700000000000000, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  EnvironmentValues.init()();
  swift_getAtKeyPath();
  sub_10003A520(a1, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return *(double *)&v14;
}

uint64_t sub_10003A90C@<X0>(char *a1@<X8>)
{
  return sub_10003A92C(*(void *)(v1 + 32), *(void *)(v1 + 16), a1);
}

uint64_t sub_10003A92C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v6 = *(void *)(a2 - 8);
  uint64_t v7 = __chkstk_darwin(a1);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v16 - v10;
  uint64_t v12 = type metadata accessor for AdaptiveNavigationDisclosureIndicatorWrapper();
  (*(void (**)(void))(a1 + *(int *)(v12 + 44)))();
  uint64_t v13 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
  v13(v11, v9, a2);
  uint64_t v14 = *(void (**)(char *, uint64_t))(v6 + 8);
  v14(v9, a2);
  v13(a3, v11, a2);
  return ((uint64_t (*)(char *, uint64_t))v14)(v11, a2);
}

uint64_t initializeWithCopy for PrimarySettingsListLinkModel(uint64_t a1, uint64_t a2)
{
  id v4 = *(id *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  char v6 = *(unsigned char *)(a2 + 16);
  sub_100047728(*(id *)a2, v5, v6);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for PrimarySettingsListLinkModel(uint64_t a1)
{
  sub_100046F04(*(void **)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PrimarySettingsListValueLinkModel(uint64_t a1, uint64_t a2)
{
  id v4 = *(id *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  char v6 = *(unsigned char *)(a2 + 16);
  sub_100047728(*(id *)a2, v5, v6);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for PrimarySettingsListValueLinkModel(uint64_t a1)
{
  sub_100046F04(*(void **)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10003ABF8()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for AdaptiveNavigationDisclosureIndicatorWrapper()
{
  return sub_10003ABF8();
}

uint64_t initializeWithCopy for PrimarySettingsListAppleAccountLinkModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4)
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v4;
    uint64_t v5 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v5;
    *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
    char v6 = *(void **)(a2 + 40);
    *(void *)(a1 + 40) = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v7 = v6;
  }
  else
  {
    long long v8 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v8;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  }
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

void destroy for PrimarySettingsListAppleAccountLinkModel(uint64_t a1)
{
  if (*(void *)(a1 + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v2 = *(void **)(a1 + 40);
  }
}

uint64_t sub_10003AD18@<X0>(uint64_t a1@<X8>)
{
  return sub_10003AD20(v1 + 16, a1);
}

uint64_t sub_10003AD20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void **)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v5 = *(void *)(a1 + 32);
  char v6 = *(unsigned char *)(a1 + 40);
  char v7 = *(unsigned char *)(a1 + 41);
  *(void *)a2 = *(void *)a1;
  *(void *)(a2 + 8) = v2;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a2 + 16) = v8;
  *(void *)(a2 + 24) = v4;
  *(void *)(a2 + 32) = v5;
  *(unsigned char *)(a2 + 40) = v6;
  *(unsigned char *)(a2 + 41) = v7;
  sub_100047728(v3, v2, v8);

  return swift_bridgeObjectRetain();
}

uint64_t sub_10003AD84@<X0>(uint64_t a1@<X8>)
{
  return sub_10003ADA0(v1 + 16, a1);
}

uint64_t sub_10003ADA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void **)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 40);
  uint64_t v7 = *(void *)(a1 + 48);
  char v8 = *(unsigned char *)(a1 + 56);
  char v9 = *(unsigned char *)(a1 + 57);
  *(void *)a2 = *(void *)a1;
  *(void *)(a2 + 8) = v2;
  char v10 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a2 + 16) = v10;
  *(void *)(a2 + 24) = v4;
  *(void *)(a2 + 32) = v5;
  *(void *)(a2 + 40) = v6;
  *(void *)(a2 + 48) = v7;
  *(unsigned char *)(a2 + 56) = v8;
  *(unsigned char *)(a2 + 57) = v9;
  sub_100047728(v3, v2, v10);
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t sub_10003AE10(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LocalizedStringResource();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100046B9C(&qword_10015FA80);
  __chkstk_darwin(v8);
  char v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100046B9C(&qword_100163C30);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v17 = (char *)&v30 - v16;
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v30 - v18;
  if ((sub_10003B220(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(unsigned char *)(a2 + 16)) & 1) == 0)goto LABEL_15; {
  uint64_t v20 = *(void *)(a1 + 32);
  }
  uint64_t v21 = *(void *)(a2 + 32);
  if (!v20)
  {
    if (v21) {
      goto LABEL_15;
    }
    goto LABEL_9;
  }
  if (!v21) {
    goto LABEL_15;
  }
  if (*(void *)(a1 + 24) == *(void *)(a2 + 24) && v20 == v21
    || (char v22 = _stringCompareWithSmolCheck(_:_:expecting:)(), v23 = 0, (v22 & 1) != 0))
  {
LABEL_9:
    uint64_t v31 = v7;
    uint64_t v24 = type metadata accessor for PrimarySettingsListSectionModel();
    sub_10003B4CC(a1 + *(int *)(v24 + 24), (uint64_t)v19);
    uint64_t v32 = v24;
    sub_10003B4CC(a2 + *(int *)(v24 + 24), (uint64_t)v17);
    uint64_t v25 = (uint64_t)&v10[*(int *)(v8 + 48)];
    sub_10003B4CC((uint64_t)v19, (uint64_t)v10);
    uint64_t v33 = v25;
    sub_10003B4CC((uint64_t)v17, v25);
    id v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    if (v26((uint64_t)v10, 1, v4) == 1)
    {
      sub_10003F5D0((uint64_t)v17, &qword_100163C30);
      sub_10003F5D0((uint64_t)v19, &qword_100163C30);
      if (v26(v33, 1, v4) == 1)
      {
        sub_10003F5D0((uint64_t)v10, &qword_100163C30);
LABEL_18:
        char v23 = sub_10003B750(*(void *)(a1 + *(int *)(v32 + 28)), *(void *)(a2 + *(int *)(v32 + 28)));
        return v23 & 1;
      }
    }
    else
    {
      sub_10003B4CC((uint64_t)v10, (uint64_t)v14);
      if (v26(v33, 1, v4) != 1)
      {
        uint64_t v28 = v31;
        (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v31, v33, v4);
        sub_100074F5C();
        LODWORD(v33) = dispatch thunk of static Equatable.== infix(_:_:)();
        char v29 = *(void (**)(char *, uint64_t))(v5 + 8);
        v29(v28, v4);
        sub_10003F5D0((uint64_t)v17, &qword_100163C30);
        sub_10003F5D0((uint64_t)v19, &qword_100163C30);
        v29(v14, v4);
        sub_10003F5D0((uint64_t)v10, &qword_100163C30);
        if (v33) {
          goto LABEL_18;
        }
        goto LABEL_15;
      }
      sub_10003F5D0((uint64_t)v17, &qword_100163C30);
      sub_10003F5D0((uint64_t)v19, &qword_100163C30);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v4);
    }
    sub_10003F5D0((uint64_t)v10, &qword_10015FA80);
LABEL_15:
    char v23 = 0;
  }
  return v23 & 1;
}

uint64_t sub_10003B220(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if (!a3)
  {
    if (!a6)
    {
      if (a1 == a4 && a2 == a5) {
        return 1;
      }
      return _stringCompareWithSmolCheck(_:_:expecting:)();
    }
    return 0;
  }
  if (a3 == 1)
  {
    if (a6 == 1)
    {
      if (a1 == a4 && a2 == a5) {
        return 1;
      }
      return _stringCompareWithSmolCheck(_:_:expecting:)();
    }
    return 0;
  }
  switch(a1)
  {
    case 1:
      if (a6 != 2 || a4 != 1 || a5) {
        return 0;
      }
      uint64_t result = 1;
      break;
    case 2:
      if (a6 != 2 || a4 != 2 || a5) {
        return 0;
      }
      uint64_t result = 1;
      break;
    case 3:
      if (a6 != 2 || a4 != 3 || a5) {
        return 0;
      }
      uint64_t result = 1;
      break;
    case 4:
      if (a6 != 2 || a4 != 4 || a5) {
        return 0;
      }
      uint64_t result = 1;
      break;
    case 5:
      if (a6 != 2 || a4 != 5 || a5) {
        return 0;
      }
      uint64_t result = 1;
      break;
    case 6:
      if (a6 != 2 || a4 != 6 || a5) {
        return 0;
      }
      uint64_t result = 1;
      break;
    case 7:
      if (a6 != 2 || a4 != 7 || a5) {
        return 0;
      }
      uint64_t result = 1;
      break;
    case 8:
      if (a6 != 2 || a4 != 8 || a5) {
        return 0;
      }
      uint64_t result = 1;
      break;
    case 9:
      if (a6 != 2 || a4 != 9 || a5) {
        return 0;
      }
      uint64_t result = 1;
      break;
    case 10:
      if (a6 != 2 || a4 != 10 || a5) {
        return 0;
      }
      uint64_t result = 1;
      break;
    case 11:
      if (a6 != 2 || a4 != 11 || a5) {
        return 0;
      }
      uint64_t result = 1;
      break;
    case 12:
      if (a6 != 2 || a4 != 12 || a5) {
        return 0;
      }
      uint64_t result = 1;
      break;
    case 13:
      if (a6 != 2 || a4 != 13 || a5) {
        return 0;
      }
      uint64_t result = 1;
      break;
    case 14:
      if (a6 != 2 || a4 != 14 || a5) {
        return 0;
      }
      uint64_t result = 1;
      break;
    case 15:
      if (a6 != 2 || a4 != 15 || a5) {
        return 0;
      }
      uint64_t result = 1;
      break;
    case 16:
      if (a6 != 2 || a4 != 16 || a5) {
        return 0;
      }
      uint64_t result = 1;
      break;
    default:
      if (a6 != 2 || a5 | a4) {
        return 0;
      }
      uint64_t result = 1;
      break;
  }
  return result;
}

uint64_t sub_10003B4CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100046B9C(&qword_100163C30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

BOOL sub_10003B534(uint64_t a1, uint64_t a2)
{
  sub_10003CA38(a1, (uint64_t)v16);
  sub_10003CA38(a2, (uint64_t)v15);
  sub_10003CA38((uint64_t)v16, (uint64_t)&v17);
  switch(v19)
  {
    case 1:
      uint64_t v5 = v17;
      uint64_t v6 = v18;
      sub_10003CA38((uint64_t)v15, (uint64_t)&v20);
      if (v21 == 1) {
        goto LABEL_8;
      }
      return 0;
    case 2:
      uint64_t v5 = v17;
      uint64_t v6 = v18;
      sub_10003CA38((uint64_t)v15, (uint64_t)&v20);
      if (v21 != 2) {
        return 0;
      }
LABEL_8:
      if (v5 != (void)v20 || v6 != *((void *)&v20 + 1))
      {
        char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
        BOOL result = 0;
        if ((v8 & 1) == 0) {
          return result;
        }
      }
LABEL_16:
      if (*(void *)(a1 + 24) != *(void *)(a2 + 24) || *(void *)(a1 + 32) != *(void *)(a2 + 32))
      {
        char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
        BOOL result = 0;
        if ((v10 & 1) == 0) {
          return result;
        }
      }
      if (*(void *)(a1 + 40) != *(void *)(a2 + 40) || *(void *)(a1 + 48) != *(void *)(a2 + 48))
      {
        char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
        BOOL result = 0;
        if ((v11 & 1) == 0) {
          return result;
        }
      }
      if ((*(unsigned __int8 *)(a1 + 56) ^ *(unsigned __int8 *)(a2 + 56))) {
        return 0;
      }
      int v12 = *(unsigned __int8 *)(a1 + 57);
      int v13 = *(unsigned __int8 *)(a2 + 57);
      if (v12 != 2)
      {
        BOOL v14 = (v12 & 1) == 0;
        return v13 != 2 && ((v14 ^ v13) & 1) != 0;
      }
      return v13 == 2;
    case 3:
      sub_10003CA38((uint64_t)v15, (uint64_t)&v20);
      if (v21 == 3 && v20 == 0) {
        goto LABEL_16;
      }
      return 0;
    default:
      sub_10003CA38((uint64_t)v15, (uint64_t)&v20);
      if (v21) {
        return 0;
      }
      sub_10006E244();
      sub_10006E284((uint64_t)v16);
      sub_10006E284((uint64_t)v15);
      char v4 = static NSObject.== infix(_:_:)();
      sub_10003C634((uint64_t)v15);
      sub_10003C634((uint64_t)v16);
      if ((v4 & 1) == 0) {
        return 0;
      }
      goto LABEL_16;
  }
}

uint64_t sub_10003B750(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PrimarySettingsListItemModel();
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  char v10 = (char *)&v19 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 != *(void *)(a2 + 16))
  {
LABEL_14:
    char v15 = 0;
    return v15 & 1;
  }
  if (v11 && a1 != a2)
  {
    unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v13 = *(void *)(v8 + 72);
    uint64_t v14 = v11 - 1;
    while (1)
    {
      sub_10003D7B0(a1 + v12, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
      sub_10003D7B0(a2 + v12, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
      if ((sub_1000460F4((uint64_t)v10, (uint64_t)v7) & 1) == 0) {
        break;
      }
      char v15 = sub_10003B998((uint64_t)&v10[*(int *)(v4 + 20)], (uint64_t)&v7[*(int *)(v4 + 20)]);
      sub_10003B938((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
      sub_10003B938((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
      BOOL v17 = v14-- != 0;
      if (v15)
      {
        v12 += v13;
        if (v17) {
          continue;
        }
      }
      return v15 & 1;
    }
    sub_10003B938((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
    sub_10003B938((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
    goto LABEL_14;
  }
  char v15 = 1;
  return v15 & 1;
}

uint64_t sub_10003B938(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10003B998(uint64_t a1, uint64_t a2)
{
  unint64_t v114 = (long long *)a1;
  uint64_t v115 = (char *)a2;
  uint64_t v107 = type metadata accessor for PrimarySettingsListFamilyLinkModel();
  __chkstk_darwin(v107);
  uint64_t v108 = (uint64_t)&v106 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for PrimarySettingsListItemViewType();
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v112 = (long long *)((char *)&v106 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v111 = (uint64_t)&v106 - v7;
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v110 = (long long *)((char *)&v106 - v9);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v109 = (long long *)((char *)&v106 - v11);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v106 - v13;
  uint64_t v15 = __chkstk_darwin(v12);
  BOOL v17 = (long long *)((char *)&v106 - v16);
  uint64_t v18 = __chkstk_darwin(v15);
  long long v20 = (char *)&v106 - v19;
  uint64_t v21 = __chkstk_darwin(v18);
  char v23 = (char *)&v106 - v22;
  uint64_t v24 = __chkstk_darwin(v21);
  id v26 = (long long *)((char *)&v106 - v25);
  uint64_t v27 = __chkstk_darwin(v24);
  uint64_t v113 = (uint64_t)&v106 - v28;
  __chkstk_darwin(v27);
  uint64_t v30 = (char *)&v106 - v29;
  uint64_t v31 = sub_100046B9C(&qword_10015F9B0);
  uint64_t v32 = __chkstk_darwin(v31 - 8);
  uint64_t v34 = (char *)&v106 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = (uint64_t)&v34[*(int *)(v32 + 56)];
  sub_10003C558((uint64_t)v114, (uint64_t)v34);
  unint64_t v114 = (long long *)v35;
  sub_10003C558((uint64_t)v115, v35);
  uint64_t v115 = v34;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v36 = (uint64_t)v115;
      uint64_t v38 = v113;
      sub_10003C558((uint64_t)v115, v113);
      uint64_t v39 = (uint64_t)v114;
      if (swift_getEnumCaseMultiPayload() != 1)
      {
        sub_10003C668(v38, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListFamilyLinkModel);
        goto LABEL_51;
      }
      uint64_t v40 = v108;
      sub_100073034(v39, v108);
      type metadata accessor for FamilyRowStatus();
      sub_100073098();
      dispatch thunk of RawRepresentable.rawValue.getter();
      dispatch thunk of RawRepresentable.rawValue.getter();
      if (v118 == v116)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v100 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v100 & 1) == 0)
        {
LABEL_71:
          sub_10003C668(v40, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListFamilyLinkModel);
          sub_10003C668(v38, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListFamilyLinkModel);
          goto LABEL_72;
        }
      }
      uint64_t v101 = *(int *)(v107 + 20);
      uint64_t v102 = *(void *)(v38 + v101);
      uint64_t v103 = *(void *)(v38 + v101 + 8);
      uint64_t v104 = (void *)(v40 + v101);
      if (v102 == *v104 && v103 == v104[1] || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        sub_10003C668(v40, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListFamilyLinkModel);
        sub_10003C668(v38, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListFamilyLinkModel);
        goto LABEL_60;
      }
      goto LABEL_71;
    case 2u:
      uint64_t v36 = (uint64_t)v115;
      sub_10003C558((uint64_t)v115, (uint64_t)v26);
      long long v41 = v26[1];
      long long v116 = *v26;
      v117[0] = v41;
      long long v42 = v26[3];
      v117[1] = v26[2];
      v117[2] = v42;
      uint64_t v43 = v114;
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        long long v44 = v43[1];
        long long v118 = *v43;
        v119[0] = v44;
        long long v45 = v43[3];
        v119[1] = v43[2];
        v119[2] = v45;
        char v46 = sub_10003CEF8((uint64_t)&v116, (uint64_t)&v118);
        sub_10003CB8C((uint64_t)&v118);
        sub_10003CB8C((uint64_t)&v116);
        goto LABEL_39;
      }
      sub_10003CB8C((uint64_t)&v116);
      goto LABEL_51;
    case 3u:
      uint64_t v36 = (uint64_t)v115;
      sub_10003C558((uint64_t)v115, (uint64_t)v23);
      uint64_t v48 = *(void *)v23;
      uint64_t v47 = *((void *)v23 + 1);
      int v49 = v23[16];
      int v50 = v23[17];
      uint64_t v51 = (uint64_t)v114;
      if (swift_getEnumCaseMultiPayload() != 3)
      {
        swift_bridgeObjectRelease();
        goto LABEL_51;
      }
      uint64_t v52 = *(void *)v51;
      uint64_t v53 = *(void *)(v51 + 8);
      int v54 = *(unsigned __int8 *)(v51 + 16);
      int v55 = *(unsigned __int8 *)(v51 + 17);
      if (v48 == v52 && v47 == v53)
      {
        swift_bridgeObjectRelease_n();
        if (v49 != v54) {
          goto LABEL_72;
        }
LABEL_62:
        if (v50 == 2)
        {
          if (v55 != 2) {
            goto LABEL_72;
          }
        }
        else if (v55 == 2 || ((((v50 & 1) == 0) ^ v55) & 1) == 0)
        {
          goto LABEL_72;
        }
LABEL_60:
        uint64_t v105 = v36;
        goto LABEL_79;
      }
      char v57 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v57 & 1) != 0 && ((v49 ^ v54) & 1) == 0) {
        goto LABEL_62;
      }
LABEL_72:
      sub_10003C668(v36, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemViewType);
LABEL_52:
      char v46 = 0;
      return v46 & 1;
    case 4u:
      sub_10003C558((uint64_t)v115, (uint64_t)v20);
      uint64_t v59 = *(void *)v20;
      uint64_t v58 = *((void *)v20 + 1);
      uint64_t v60 = *((void *)v20 + 2);
      int v61 = v20[24];
      int v62 = v20[25];
      uint64_t v63 = (uint64_t)v114;
      if (swift_getEnumCaseMultiPayload() != 4)
      {
        swift_bridgeObjectRelease();
        uint64_t v36 = (uint64_t)v115;
        goto LABEL_51;
      }
      uint64_t v64 = *(void *)v63;
      uint64_t v65 = *(void *)(v63 + 8);
      uint64_t v66 = *(void *)(v63 + 16);
      int v67 = *(unsigned __int8 *)(v63 + 24);
      int v68 = *(unsigned __int8 *)(v63 + 25);
      if (v59 == v64 && v58 == v65)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v70 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v70 & 1) == 0)
        {
LABEL_80:
          sub_10003C668((uint64_t)v115, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemViewType);
          goto LABEL_52;
        }
      }
      if (v60 != v66 || ((v61 ^ v67) & 1) != 0) {
        goto LABEL_80;
      }
      if (v62 == 2)
      {
        if (v68 != 2) {
          goto LABEL_80;
        }
      }
      else if (v68 == 2 || ((((v62 & 1) == 0) ^ v68) & 1) == 0)
      {
        goto LABEL_80;
      }
      uint64_t v105 = (uint64_t)v115;
LABEL_79:
      sub_10003C668(v105, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemViewType);
      char v46 = 1;
      return v46 & 1;
    case 5u:
      uint64_t v36 = (uint64_t)v115;
      sub_10003C558((uint64_t)v115, (uint64_t)v17);
      long long v71 = v17[1];
      long long v116 = *v17;
      v117[0] = v71;
      *(_OWORD *)((char *)v117 + 10) = *(long long *)((char *)v17 + 26);
      uint64_t v72 = v114;
      if (swift_getEnumCaseMultiPayload() == 5)
      {
        long long v73 = v72[1];
        long long v118 = *v72;
        v119[0] = v73;
        *(_OWORD *)((char *)v119 + 10) = *(long long *)((char *)v72 + 26);
        char v46 = sub_10003C848((uint64_t)&v116, (uint64_t)&v118);
        sub_10003CA38((uint64_t)&v118, (uint64_t)v123);
        sub_10003C634((uint64_t)v123);
        long long v122 = *(_OWORD *)((char *)v119 + 8);
        sub_10003C608((uint64_t)&v122);
        sub_10003CA38((uint64_t)&v116, (uint64_t)v125);
        sub_10003C634((uint64_t)v125);
        goto LABEL_37;
      }
      sub_10003CA38((uint64_t)&v116, (uint64_t)&v118);
      sub_10003C634((uint64_t)&v118);
      goto LABEL_49;
    case 6u:
      uint64_t v36 = (uint64_t)v115;
      sub_10003C558((uint64_t)v115, (uint64_t)v14);
      long long v74 = *((_OWORD *)v14 + 1);
      long long v116 = *(_OWORD *)v14;
      v117[0] = v74;
      v117[1] = *((_OWORD *)v14 + 2);
      LOWORD(v117[2]) = *((_WORD *)v14 + 24);
      uint64_t v75 = (uint64_t)v114;
      if (swift_getEnumCaseMultiPayload() == 6)
      {
        long long v76 = *(_OWORD *)(v75 + 16);
        long long v118 = *(_OWORD *)v75;
        v119[0] = v76;
        v119[1] = *(_OWORD *)(v75 + 32);
        LOWORD(v119[2]) = *(_WORD *)(v75 + 48);
        char v46 = sub_10006E034((uint64_t)&v116, (uint64_t)&v118);
        sub_100072FF4((uint64_t)&v118);
        sub_100072FF4((uint64_t)&v116);
        goto LABEL_39;
      }
      sub_100072FF4((uint64_t)&v116);
      goto LABEL_51;
    case 7u:
      uint64_t v36 = (uint64_t)v115;
      uint64_t v77 = v109;
      sub_10003C558((uint64_t)v115, (uint64_t)v109);
      long long v78 = v77[1];
      long long v116 = *v77;
      v117[0] = v78;
      v117[1] = v77[2];
      *(_OWORD *)((char *)&v117[1] + 10) = *(long long *)((char *)v77 + 42);
      uint64_t v79 = v114;
      if (swift_getEnumCaseMultiPayload() != 7) {
        goto LABEL_40;
      }
      long long v80 = v79[1];
      long long v118 = *v79;
      v119[0] = v80;
      v119[1] = v79[2];
      *(_OWORD *)((char *)&v119[1] + 10) = *(long long *)((char *)v79 + 42);
      BOOL v81 = sub_10003B534((uint64_t)&v116, (uint64_t)&v118);
      goto LABEL_32;
    case 8u:
      uint64_t v36 = (uint64_t)v115;
      uint64_t v82 = v110;
      sub_10003C558((uint64_t)v115, (uint64_t)v110);
      long long v83 = v82[1];
      long long v116 = *v82;
      v117[0] = v83;
      v117[1] = v82[2];
      *(_OWORD *)((char *)&v117[1] + 10) = *(long long *)((char *)v82 + 42);
      uint64_t v84 = v114;
      if (swift_getEnumCaseMultiPayload() != 8)
      {
LABEL_40:
        sub_10003CAA8((uint64_t)&v116);
        goto LABEL_51;
      }
      long long v85 = v84[1];
      long long v118 = *v84;
      v119[0] = v85;
      v119[1] = v84[2];
      *(_OWORD *)((char *)&v119[1] + 10) = *(long long *)((char *)v84 + 42);
      BOOL v81 = sub_100073CB8((uint64_t)&v116, (uint64_t)&v118);
LABEL_32:
      char v46 = v81;
      sub_10003CAA8((uint64_t)&v118);
      sub_10003CAA8((uint64_t)&v116);
      goto LABEL_39;
    case 9u:
      uint64_t v36 = (uint64_t)v115;
      uint64_t v86 = v111;
      sub_10003C558((uint64_t)v115, v111);
      long long v87 = *(_OWORD *)(v86 + 16);
      long long v116 = *(_OWORD *)v86;
      v117[0] = v87;
      v117[1] = *(_OWORD *)(v86 + 32);
      *(void *)&v117[2] = *(void *)(v86 + 48);
      uint64_t v88 = (uint64_t)v114;
      if (swift_getEnumCaseMultiPayload() == 9)
      {
        long long v89 = *(_OWORD *)(v88 + 16);
        long long v118 = *(_OWORD *)v88;
        v119[0] = v89;
        v119[1] = *(_OWORD *)(v88 + 32);
        *(void *)&v119[2] = *(void *)(v88 + 48);
        char v46 = sub_10006EF4C((uint64_t)&v116, (uint64_t)&v118);
        sub_100072F58((uint64_t)&v118, (uint64_t)v123);
        sub_100072FC0((uint64_t)v123);
        long long v121 = *(_OWORD *)((char *)v119 + 8);
        sub_10003C608((uint64_t)&v121);
        long long v120 = *(_OWORD *)((char *)&v119[1] + 8);
        sub_10003C608((uint64_t)&v120);
        sub_100072F58((uint64_t)&v116, (uint64_t)v125);
        sub_100072FC0((uint64_t)v125);
        long long v124 = *(_OWORD *)((char *)v117 + 8);
        sub_10003C608((uint64_t)&v124);
        long long v122 = *(_OWORD *)((char *)&v117[1] + 8);
        uint64_t v90 = &v122;
        goto LABEL_38;
      }
      sub_100072F58((uint64_t)&v116, (uint64_t)&v118);
      sub_100072FC0((uint64_t)&v118);
      v125[0] = *(_OWORD *)((char *)v117 + 8);
      sub_10003C608((uint64_t)v125);
      v123[0] = *(_OWORD *)((char *)&v117[1] + 8);
      uint64_t v95 = v123;
      goto LABEL_50;
    case 0xAu:
      uint64_t v36 = (uint64_t)v115;
      uint64_t v91 = v112;
      sub_10003C558((uint64_t)v115, (uint64_t)v112);
      long long v92 = v91[1];
      long long v116 = *v91;
      v117[0] = v92;
      *(_OWORD *)((char *)v117 + 9) = *(long long *)((char *)v91 + 25);
      uint64_t v93 = v114;
      if (swift_getEnumCaseMultiPayload() == 10)
      {
        long long v94 = v93[1];
        long long v118 = *v93;
        v119[0] = v94;
        *(_OWORD *)((char *)v119 + 9) = *(long long *)((char *)v93 + 25);
        char v46 = sub_10006E9D0((uint64_t)&v116, (uint64_t)&v118);
        sub_100072F58((uint64_t)&v118, (uint64_t)v123);
        sub_100072FC0((uint64_t)v123);
        long long v122 = *(_OWORD *)((char *)v119 + 8);
        sub_10003C608((uint64_t)&v122);
        sub_100072F58((uint64_t)&v116, (uint64_t)v125);
        sub_100072FC0((uint64_t)v125);
LABEL_37:
        long long v124 = *(_OWORD *)((char *)v117 + 8);
        uint64_t v90 = &v124;
LABEL_38:
        sub_10003C608((uint64_t)v90);
LABEL_39:
        sub_10003C668(v36, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemViewType);
        return v46 & 1;
      }
      sub_100072F58((uint64_t)&v116, (uint64_t)&v118);
      sub_100072FC0((uint64_t)&v118);
LABEL_49:
      v125[0] = *(_OWORD *)((char *)v117 + 8);
      uint64_t v95 = v125;
LABEL_50:
      sub_10003C608((uint64_t)v95);
      goto LABEL_51;
    default:
      uint64_t v36 = (uint64_t)v115;
      sub_10003C558((uint64_t)v115, (uint64_t)v30);
      sub_10003CE28((uint64_t)v30, (uint64_t)&v116);
      uint64_t v37 = (uint64_t)v114;
      if (!swift_getEnumCaseMultiPayload())
      {
        char v97 = v30[48];
        sub_10003CE28(v37, (uint64_t)&v118);
        char v98 = *(unsigned char *)(v37 + 48);
        char v99 = sub_10003CBE0((uint64_t)&v116, (uint64_t)&v118);
        sub_10003CAFC((uint64_t)&v118);
        sub_10003CAFC((uint64_t)&v116);
        sub_10003C668(v36, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemViewType);
        char v46 = v99 & (v97 ^ v98 ^ 1);
        return v46 & 1;
      }
      sub_10003CAFC((uint64_t)&v116);
LABEL_51:
      sub_10003CE98(v36);
      goto LABEL_52;
  }
}

uint64_t sub_10003C558(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PrimarySettingsListItemViewType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for PrimarySettingsListFamilyLinkModel()
{
  uint64_t result = qword_10015F7C0;
  if (!qword_10015F7C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10003C608(uint64_t a1)
{
  return a1;
}

uint64_t sub_10003C634(uint64_t a1)
{
  return a1;
}

uint64_t sub_10003C668(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_10003C6C8(uint64_t a1)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      if (*(void *)(a1 + 8))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v8 = *(void **)(a1 + 40);
      }
      return;
    case 1u:
      uint64_t v9 = type metadata accessor for FamilyRowStatus();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(a1, v9);
      type metadata accessor for PrimarySettingsListFamilyLinkModel();
      break;
    case 2u:
      sub_100046F04(*(void **)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
      swift_bridgeObjectRelease();
      swift_release();
      return;
    case 3u:
    case 4u:
      break;
    case 5u:
    case 6u:
      uint64_t v2 = *(void **)a1;
      uint64_t v3 = *(void *)(a1 + 8);
      LOBYTE(v4) = *(unsigned char *)(a1 + 16);
      goto LABEL_19;
    case 7u:
    case 8u:
      uint64_t v5 = *(void **)a1;
      uint64_t v6 = *(void *)(a1 + 8);
      LOBYTE(v7) = *(unsigned char *)(a1 + 16);
      goto LABEL_15;
    case 9u:
      int v7 = *(unsigned __int8 *)(a1 + 16);
      if (v7 == 255) {
        goto LABEL_16;
      }
      uint64_t v5 = *(void **)a1;
      uint64_t v6 = *(void *)(a1 + 8);
LABEL_15:
      sub_100046F04(v5, v6, v7);
LABEL_16:
      swift_bridgeObjectRelease();
      break;
    case 0xAu:
      int v4 = *(unsigned __int8 *)(a1 + 16);
      if (v4 == 255) {
        break;
      }
      uint64_t v2 = *(void **)a1;
      uint64_t v3 = *(void *)(a1 + 8);
LABEL_19:
      sub_100046F04(v2, v3, v4);
      break;
    default:
      return;
  }

  swift_bridgeObjectRelease();
}

BOOL sub_10003C848(uint64_t a1, uint64_t a2)
{
  sub_10003CA38(a1, (uint64_t)v15);
  sub_10003CA38(a2, (uint64_t)v14);
  sub_10003CA38((uint64_t)v15, (uint64_t)&v16);
  switch(v18)
  {
    case 1:
      uint64_t v5 = v16;
      uint64_t v6 = v17;
      sub_10003CA38((uint64_t)v14, (uint64_t)&v19);
      if (v20 == 1) {
        goto LABEL_8;
      }
      return 0;
    case 2:
      uint64_t v5 = v16;
      uint64_t v6 = v17;
      sub_10003CA38((uint64_t)v14, (uint64_t)&v19);
      if (v20 != 2) {
        return 0;
      }
LABEL_8:
      if (v5 != (void)v19 || v6 != *((void *)&v19 + 1))
      {
        char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
        BOOL result = 0;
        if ((v8 & 1) == 0) {
          return result;
        }
      }
LABEL_16:
      if (*(void *)(a1 + 24) != *(void *)(a2 + 24) || *(void *)(a1 + 32) != *(void *)(a2 + 32))
      {
        char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
        BOOL result = 0;
        if ((v10 & 1) == 0) {
          return result;
        }
      }
      if ((*(unsigned __int8 *)(a1 + 40) ^ *(unsigned __int8 *)(a2 + 40))) {
        return 0;
      }
      int v11 = *(unsigned __int8 *)(a1 + 41);
      int v12 = *(unsigned __int8 *)(a2 + 41);
      if (v11 != 2)
      {
        BOOL v13 = (v11 & 1) == 0;
        return v12 != 2 && ((v13 ^ v12) & 1) != 0;
      }
      return v12 == 2;
    case 3:
      sub_10003CA38((uint64_t)v14, (uint64_t)&v19);
      if (v20 == 3 && v19 == 0) {
        goto LABEL_16;
      }
      return 0;
    default:
      sub_10003CA38((uint64_t)v14, (uint64_t)&v19);
      if (v20) {
        return 0;
      }
      sub_10006E244();
      sub_10006E284((uint64_t)v15);
      sub_10006E284((uint64_t)v14);
      char v4 = static NSObject.== infix(_:_:)();
      sub_10003C634((uint64_t)v14);
      sub_10003C634((uint64_t)v15);
      if ((v4 & 1) == 0) {
        return 0;
      }
      goto LABEL_16;
  }
}

uint64_t sub_10003CA38(uint64_t a1, uint64_t a2)
{
  return a2;
}

__n128 initializeWithTake for Icon.IconType(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t sub_10003CAA8(uint64_t a1)
{
  return a1;
}

uint64_t sub_10003CAFC(uint64_t a1)
{
  return a1;
}

void sub_10003CB34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_10003CB8C(uint64_t a1)
{
  return a1;
}

uint64_t sub_10003CBE0(uint64_t a1, uint64_t a2)
{
  sub_10003CE28(a1, (uint64_t)&v35);
  uint64_t v3 = v36;
  if (!v36)
  {
    sub_10003CE28(a2, (uint64_t)&v29);
    return v30 == 0;
  }
  uint64_t v4 = v35;
  uint64_t v5 = v37;
  uint64_t v6 = v38;
  int v7 = v39;
  char v8 = v40;
  sub_10003CE28(a2, (uint64_t)&v29);
  if (!v30) {
    return 0;
  }
  uint64_t v9 = v31;
  uint64_t v10 = v32;
  int v11 = v33;
  int v12 = v34;
  if (v4 == v29 && v3 == v30 || (v13 = _stringCompareWithSmolCheck(_:_:expecting:)(), uint64_t result = 0, (v13 & 1) != 0))
  {
    if (v5 == v9 && v6 == v10 || (v15 = _stringCompareWithSmolCheck(_:_:expecting:)(), uint64_t result = 0, (v15 & 1) != 0))
    {
      if (v8)
      {
        uint64_t v16 = v12;
        uint64_t v17 = UIImagePNGRepresentation((UIImage *)v8);
        if (v17)
        {
          char v18 = v17;
          uint64_t v19 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v21 = v20;

          if (!v12) {
            goto LABEL_18;
          }
LABEL_16:
          char v23 = UIImagePNGRepresentation(v12);
          if (v23)
          {
            uint64_t v24 = v23;
            uint64_t v25 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
            unint64_t v27 = v26;

LABEL_19:
            if (v21 >> 60 == 15)
            {

              if (v27 >> 60 == 15) {
                return v7 ^ v11 ^ 1u;
              }
            }
            else
            {
              sub_1000B9C58(v19, v21);
              if (v27 >> 60 != 15)
              {
                char v28 = sub_1000B9954(v19, v21, v25, v27);

                sub_1000B9BEC(v25, v27);
                sub_1000B9BEC(v19, v21);
                sub_1000B9BEC(v19, v21);
                if (v28) {
                  return v7 ^ v11 ^ 1u;
                }
                return 0;
              }

              sub_1000B9BEC(v19, v21);
            }
            sub_1000B9BEC(v19, v21);
            sub_1000B9BEC(v25, v27);
            return 0;
          }
LABEL_18:
          uint64_t v25 = 0;
          unint64_t v27 = 0xF000000000000000;
          goto LABEL_19;
        }
      }
      else
      {
        uint64_t v22 = v12;
      }
      uint64_t v19 = 0;
      unint64_t v21 = 0xF000000000000000;
      if (!v12) {
        goto LABEL_18;
      }
      goto LABEL_16;
    }
  }
  return result;
}

uint64_t sub_10003CE28(uint64_t a1, uint64_t a2)
{
  return a2;
}

__n128 initializeWithTake for PrimaryAppleAccountStatus(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_10003CE98(uint64_t a1)
{
  uint64_t v2 = sub_100046B9C(&qword_10015F9B0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10003CEF8(uint64_t a1, uint64_t a2)
{
  sub_10003CA38(a1, (uint64_t)v13);
  sub_10003CA38(a2, (uint64_t)v12);
  sub_10003CA38((uint64_t)v13, (uint64_t)&v14);
  switch(v16)
  {
    case 1:
      uint64_t v5 = v14;
      uint64_t v6 = v15;
      sub_10003CA38((uint64_t)v12, (uint64_t)&v17);
      if (v18 != 1) {
        goto LABEL_17;
      }
      goto LABEL_8;
    case 2:
      uint64_t v5 = v14;
      uint64_t v6 = v15;
      sub_10003CA38((uint64_t)v12, (uint64_t)&v17);
      if (v18 != 2) {
        goto LABEL_17;
      }
LABEL_8:
      BOOL v7 = v5 == (void)v17 && v6 == *((void *)&v17 + 1);
      if (v7 || (char v8 = _stringCompareWithSmolCheck(_:_:expecting:)(), v9 = 0, (v8 & 1) != 0))
      {
LABEL_16:
        if ((*(unsigned __int8 *)(a1 + 40) ^ *(unsigned __int8 *)(a2 + 40)))
        {
LABEL_17:
          char v9 = 0;
        }
        else if (*(void *)(a1 + 24) == *(void *)(a2 + 24) && *(void *)(a1 + 32) == *(void *)(a2 + 32) {
               || (v11 = _stringCompareWithSmolCheck(_:_:expecting:)(), char v9 = 0, (v11 & 1) != 0))
        }
        {
          char v9 = ((*(unsigned char *)(a1 + 41) & 1) == 0) ^ *(unsigned char *)(a2 + 41);
        }
      }
      return v9 & 1;
    case 3:
      sub_10003CA38((uint64_t)v12, (uint64_t)&v17);
      if (v18 == 3 && v17 == 0) {
        goto LABEL_16;
      }
      goto LABEL_17;
    default:
      sub_10003CA38((uint64_t)v12, (uint64_t)&v17);
      if (v18) {
        goto LABEL_17;
      }
      sub_10006E244();
      sub_10006E284((uint64_t)v13);
      sub_10006E284((uint64_t)v12);
      char v4 = static NSObject.== infix(_:_:)();
      sub_10003C634((uint64_t)v12);
      sub_10003C634((uint64_t)v13);
      if ((v4 & 1) == 0) {
        goto LABEL_17;
      }
      goto LABEL_16;
  }
}

uint64_t sub_10003D0C0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PrimarySettingsListItemIdentifier();
  uint64_t v67 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  char v4 = (char *)v55 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for PrimarySettingsListItemModel();
  uint64_t v57 = *(void *)(v5 - 8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v68 = (uint64_t)v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  char v9 = (char *)v55 - v8;
  uint64_t v60 = type metadata accessor for PrimarySettingsListSectionModel();
  uint64_t v10 = __chkstk_darwin(v60);
  int v12 = (char *)v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v15 = (char *)v55 - v14;
  uint64_t v59 = *(void *)(a1 + 16);
  uint64_t v56 = a1;
  if (!v59)
  {
    swift_bridgeObjectRetain();
    uint64_t v66 = &_swiftEmptyDictionarySingleton;
    return v56;
  }
  v55[1] = v2;
  uint64_t v58 = a1 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
  uint64_t v65 = *(void *)(v13 + 72);
  swift_bridgeObjectRetain();
  uint64_t v16 = 0;
  long long v17 = &_swiftEmptyDictionarySingleton;
  uint64_t v66 = &_swiftEmptyDictionarySingleton;
  int v62 = v15;
  uint64_t v63 = v12;
  while (1)
  {
    uint64_t v64 = v16;
    sub_10003D748(v58 + v65 * v16, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListSectionModel);
    uint64_t v18 = *(void *)v15;
    uint64_t v19 = *((void *)v15 + 1);
    char v20 = v15[16];
    sub_10003D748((uint64_t)v15, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListSectionModel);
    sub_10003DA14(v18, v19, v20);
    unint64_t v21 = v66;
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v69 = v21;
    char v23 = v20;
    unint64_t v25 = sub_10003E2CC(v18, v19, v20);
    uint64_t v26 = v21[2];
    BOOL v27 = (v24 & 1) == 0;
    uint64_t v28 = v26 + v27;
    if (__OFADD__(v26, v27)) {
      goto LABEL_35;
    }
    char v29 = v24;
    if (v21[3] >= v28)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_1000A1188();
      }
      unsigned __int8 v30 = v23;
    }
    else
    {
      sub_10004E5F0(v28, isUniquelyReferenced_nonNull_native);
      unsigned __int8 v30 = v23;
      unint64_t v31 = sub_10003E2CC(v18, v19, v23);
      if ((v29 & 1) != (v32 & 1)) {
        goto LABEL_38;
      }
      unint64_t v25 = v31;
    }
    int v12 = v63;
    unsigned __int8 v33 = v69;
    if (v29)
    {
      sub_100076878((uint64_t)v63, v69[7] + v25 * v65, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListSectionModel);
    }
    else
    {
      v69[(v25 >> 6) + 8] |= 1 << v25;
      uint64_t v34 = v33[6] + 24 * v25;
      *(void *)uint64_t v34 = v18;
      *(void *)(v34 + 8) = v19;
      *(unsigned char *)(v34 + 16) = v30;
      sub_10003DCCC((uint64_t)v12, v33[7] + v25 * v65, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListSectionModel);
      uint64_t v35 = v33[2];
      BOOL v36 = __OFADD__(v35, 1);
      uint64_t v37 = v35 + 1;
      if (v36) {
        goto LABEL_36;
      }
      v33[2] = v37;
      sub_10003DA14(v18, v19, v30);
    }
    uint64_t v66 = v33;
    swift_bridgeObjectRelease();
    sub_10003E2B4(v18, v19, v30);
    uint64_t v15 = v62;
    uint64_t v38 = *(void *)&v62[*(int *)(v60 + 28)];
    uint64_t v39 = *(void *)(v38 + 16);
    if (v39) {
      break;
    }
LABEL_4:
    uint64_t v16 = v64 + 1;
    sub_10003DA2C((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListSectionModel);
    if (v16 == v59) {
      return v56;
    }
  }
  uint64_t v40 = v57;
  uint64_t v41 = v38 + ((*(unsigned __int8 *)(v57 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80));
  uint64_t v61 = *(void *)&v62[*(int *)(v60 + 28)];
  swift_bridgeObjectRetain();
  uint64_t v42 = *(void *)(v40 + 72);
  while (1)
  {
    sub_10003D748(v41, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
    sub_10003D748((uint64_t)v9, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
    sub_10003DCCC((uint64_t)v9, v68, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
    int v43 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v69 = v17;
    unint64_t v45 = sub_10003DD34((uint64_t)v4);
    uint64_t v46 = v17[2];
    BOOL v47 = (v44 & 1) == 0;
    uint64_t v48 = v46 + v47;
    if (__OFADD__(v46, v47)) {
      break;
    }
    char v49 = v44;
    if (v17[3] >= v48)
    {
      if (v43)
      {
        long long v17 = v69;
        if (v44) {
          goto LABEL_18;
        }
      }
      else
      {
        sub_1000A0E58();
        long long v17 = v69;
        if (v49) {
          goto LABEL_18;
        }
      }
    }
    else
    {
      sub_10004EAEC(v48, v43);
      unint64_t v50 = sub_10003DD34((uint64_t)v4);
      if ((v49 & 1) != (v51 & 1)) {
        goto LABEL_37;
      }
      unint64_t v45 = v50;
      long long v17 = v69;
      if (v49)
      {
LABEL_18:
        sub_100076878(v68, v17[7] + v45 * v42, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
        goto LABEL_19;
      }
    }
    v17[(v45 >> 6) + 8] |= 1 << v45;
    sub_10003D748((uint64_t)v4, v17[6] + *(void *)(v67 + 72) * v45, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
    sub_10003DCCC(v68, v17[7] + v45 * v42, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
    uint64_t v52 = v17[2];
    BOOL v36 = __OFADD__(v52, 1);
    uint64_t v53 = v52 + 1;
    if (v36) {
      goto LABEL_34;
    }
    v17[2] = v53;
LABEL_19:
    swift_bridgeObjectRelease();
    sub_10003DA2C((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
    v41 += v42;
    if (!--v39)
    {
      swift_bridgeObjectRelease();
      uint64_t v15 = v62;
      int v12 = v63;
      goto LABEL_4;
    }
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
LABEL_38:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_10003D748(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10003D7B0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for PrimarySettingsListItemModel()
{
  uint64_t result = qword_10015F978;
  if (!qword_10015F978) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10003D864(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  unsigned __int8 v8 = *(unsigned char *)(a2 + 16);
  sub_10003DA14(*(void *)a2, v7, v8);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(unsigned char *)(a1 + 16) = v8;
  uint64_t v9 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v9;
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (void *)(a1 + v10);
  int v12 = (const void *)(a2 + v10);
  uint64_t v13 = type metadata accessor for LocalizedStringResource();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48);
  swift_bridgeObjectRetain();
  if (v15(v12, 1, v13))
  {
    uint64_t v16 = sub_100046B9C(&qword_100163C30);
    memcpy(v11, v12, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v14 + 16))(v11, v12, v13);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  *(void *)(a1 + *(int *)(a3 + 28)) = *(void *)(a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s11SettingsApp36PrimarySettingsListSectionIdentifierOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_10003DA14(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t sub_10003DA14(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 1u) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_10003DA2C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10003DA8C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10003DAEC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10003DB4C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10003DBAC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10003DC0C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10003DC6C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10003DCCC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_10003DD34(uint64_t a1)
{
  Hasher.init(_seed:)();
  sub_100045B14();
  Swift::Int v2 = Hasher._finalize()();

  return sub_10003DDA0(a1, v2);
}

unint64_t sub_10003DDA0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for PrimarySettingsListItemIdentifier() - 8;
  __chkstk_darwin(v5);
  unsigned __int8 v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v10 = a2 & ~v9;
  if ((*(void *)(v2 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = ~v9;
    uint64_t v12 = *(void *)(v6 + 72);
    do
    {
      sub_1000A4650(*(void *)(v2 + 48) + v12 * v10, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
      char v13 = sub_1000460F4((uint64_t)v8, a1);
      sub_1000A38D0((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
      if (v13) {
        break;
      }
      unint64_t v10 = (v10 + 1) & v11;
    }
    while (((*(void *)(v2 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  }
  return v10;
}

uint64_t sub_10003DF00(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10003DF60(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10003DFC0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10003E028(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10003E090(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  sub_10003E2B4(*(void *)v4, *(void *)(v4 + 8), *(unsigned char *)(v4 + 16));
  swift_bridgeObjectRelease();
  uint64_t v5 = v4 + *(int *)(type metadata accessor for PrimarySettingsListSectionModel() + 24);
  uint64_t v6 = type metadata accessor for LocalizedStringResource();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }

  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for PrimarySettingsListSectionModel()
{
  uint64_t result = qword_10015FAE8;
  if (!qword_10015FAE8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10003E1D4(uint64_t a1, uint64_t a2)
{
  sub_10003E2B4(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = type metadata accessor for LocalizedStringResource();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_10003E2B4(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 1u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_10003E2CC(uint64_t a1, uint64_t a2, char a3)
{
  Hasher.init(_seed:)();
  sub_10003E3B0((uint64_t)v8, a1, a2, a3);
  Swift::Int v6 = Hasher._finalize()();

  return sub_10003E4D8(a1, a2, a3, v6);
}

Swift::Int sub_10003E358()
{
  uint64_t v1 = *(void *)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  char v3 = *(unsigned char *)(v0 + 16);
  Hasher.init(_seed:)();
  sub_10003E3B0((uint64_t)v5, v1, v2, v3);
  return Hasher._finalize()();
}

void sub_10003E3B0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (!a4)
  {
    Swift::UInt v4 = 5;
    goto LABEL_5;
  }
  if (a4 == 1)
  {
    Swift::UInt v4 = 6;
LABEL_5:
    Hasher._combine(_:)(v4);
    String.hash(into:)();
    return;
  }
  switch(a2)
  {
    case 1:
      Swift::UInt v5 = 1;
      break;
    case 2:
      Swift::UInt v5 = 2;
      break;
    case 3:
      Swift::UInt v5 = 3;
      break;
    case 4:
      Swift::UInt v5 = 4;
      break;
    case 5:
      Swift::UInt v5 = 7;
      break;
    case 6:
      Swift::UInt v5 = 8;
      break;
    case 7:
      Swift::UInt v5 = 9;
      break;
    case 8:
      Swift::UInt v5 = 10;
      break;
    case 9:
      Swift::UInt v5 = 11;
      break;
    case 10:
      Swift::UInt v5 = 12;
      break;
    case 11:
      Swift::UInt v5 = 13;
      break;
    case 12:
      Swift::UInt v5 = 14;
      break;
    case 13:
      Swift::UInt v5 = 15;
      break;
    case 14:
      Swift::UInt v5 = 16;
      break;
    case 15:
      Swift::UInt v5 = 17;
      break;
    case 16:
      Swift::UInt v5 = 18;
      break;
    default:
      Swift::UInt v5 = 0;
      break;
  }
  Hasher._combine(_:)(v5);
}

unint64_t sub_10003E4D8(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  uint64_t v5 = v4 + 64;
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v7 = a4 & ~v6;
  if (((*(void *)(v4 + 64 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
    return v7;
  }
  uint64_t v11 = ~v6;
  uint64_t v12 = *(void *)(v4 + 48);
  int v13 = a3;
  BOOL v14 = a1 != 16;
  BOOL v15 = a1 != 15;
  BOOL v16 = a1 != 14;
  BOOL v17 = a1 != 13;
  BOOL v18 = a1 != 12;
  BOOL v19 = a1 != 11;
  BOOL v20 = a1 != 10;
  BOOL v21 = a1 != 9;
  BOOL v22 = a1 != 8;
  BOOL v23 = a1 != 7;
  BOOL v24 = a1 != 6;
  BOOL v25 = a1 != 5;
  BOOL v26 = a1 == 4;
  BOOL v27 = a1 == 3;
  BOOL v28 = a1 == 2;
  BOOL v29 = a1 == 1;
  if (a2)
  {
    BOOL v14 = 1;
    BOOL v15 = 1;
    BOOL v16 = 1;
    BOOL v17 = 1;
    BOOL v18 = 1;
    BOOL v19 = 1;
    BOOL v20 = 1;
    BOOL v21 = 1;
    BOOL v22 = 1;
    BOOL v23 = 1;
    BOOL v24 = 1;
    BOOL v25 = 1;
    BOOL v26 = 0;
    BOOL v27 = 0;
    BOOL v28 = 0;
    BOOL v29 = 0;
  }
  BOOL v30 = v13 == 2;
  BOOL v31 = v30 && v26;
  BOOL v32 = v30 && v27;
  BOOL v66 = v32;
  BOOL v67 = v31;
  BOOL v33 = v30 && v28;
  BOOL v34 = v30 && v29;
  BOOL v64 = v34;
  BOOL v65 = v33;
  if (!v30) {
    BOOL v14 = 1;
  }
  BOOL v63 = v14;
  char v35 = !v30 || v15;
  char v62 = v35;
  char v36 = !v30 || v16;
  char v37 = !v30 || v17;
  char v60 = v37;
  char v61 = v36;
  char v38 = !v30 || v18;
  char v39 = !v30 || v19;
  char v58 = v39;
  char v59 = v38;
  char v40 = !v30 || v20;
  char v41 = !v30 || v21;
  char v56 = v41;
  char v57 = v40;
  char v42 = !v30 || v22;
  char v43 = !v30 || v23;
  char v54 = v43;
  char v55 = v42;
  char v44 = !v30 || v24;
  char v53 = v44;
  char v45 = !v30 || v25;
  if (a2 | a1) {
    BOOL v46 = 0;
  }
  else {
    BOOL v46 = v30;
  }
  while (1)
  {
    BOOL v47 = (uint64_t *)(v12 + 24 * v7);
    uint64_t v49 = *v47;
    uint64_t v48 = v47[1];
    int v50 = *((unsigned __int8 *)v47 + 16);
    if (!v50)
    {
      if (a3) {
        goto LABEL_55;
      }
      goto LABEL_59;
    }
    if (v50 != 1) {
      break;
    }
    if (a3 != 1) {
      goto LABEL_55;
    }
LABEL_59:
    BOOL v51 = v49 == a1 && v48 == a2;
    if (v51 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
      return v7;
    }
LABEL_55:
    unint64_t v7 = (v7 + 1) & v11;
    if (((*(void *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
      return v7;
    }
  }
  switch(v49)
  {
    case 1:
      if (!v64) {
        goto LABEL_55;
      }
      break;
    case 2:
      if (!v65) {
        goto LABEL_55;
      }
      break;
    case 3:
      if (!v66) {
        goto LABEL_55;
      }
      break;
    case 4:
      if (!v67) {
        goto LABEL_55;
      }
      break;
    case 5:
      if (v45) {
        goto LABEL_55;
      }
      break;
    case 6:
      if (v53) {
        goto LABEL_55;
      }
      break;
    case 7:
      if (v54) {
        goto LABEL_55;
      }
      break;
    case 8:
      if (v55) {
        goto LABEL_55;
      }
      break;
    case 9:
      if (v56) {
        goto LABEL_55;
      }
      break;
    case 10:
      if (v57) {
        goto LABEL_55;
      }
      break;
    case 11:
      if (v58) {
        goto LABEL_55;
      }
      break;
    case 12:
      if (v59) {
        goto LABEL_55;
      }
      break;
    case 13:
      if (v60) {
        goto LABEL_55;
      }
      break;
    case 14:
      if (v61) {
        goto LABEL_55;
      }
      break;
    case 15:
      if (v62) {
        goto LABEL_55;
      }
      break;
    case 16:
      if (v63) {
        goto LABEL_55;
      }
      break;
    default:
      if (!v46) {
        goto LABEL_55;
      }
      break;
  }
  return v7;
}

uint64_t sub_10003E800(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[11];
  uint64_t v5 = type metadata accessor for FLFollowUpGroupSectionElement();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();
  uint64_t v8 = a1 + a2[13];
  if (!v7(v8, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
  }
  swift_bridgeObjectRelease();
  uint64_t v9 = a1 + a2[15];
  if (!v7(v9, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v9, v5);
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_10003E9A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v101 = a1;
  uint64_t v97 = type metadata accessor for PrimarySettingsListItemViewType();
  __chkstk_darwin(v97);
  uint64_t v95 = (uint64_t)&v70 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for AccessibilityTraits();
  uint64_t v99 = *(void *)(v3 - 8);
  uint64_t v100 = v3;
  uint64_t v4 = __chkstk_darwin(v3);
  char v98 = (char *)&v70 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v96 = (char *)&v70 - v6;
  uint64_t v7 = type metadata accessor for AccessibilityChildBehavior();
  uint64_t v93 = *(void *)(v7 - 8);
  uint64_t v94 = v7;
  __chkstk_darwin(v7);
  long long v92 = (char *)&v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100046B9C(&qword_10015FF70);
  __chkstk_darwin(v9 - 8);
  uint64_t v86 = (uint64_t)&v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100046B9C(&qword_10015FF78);
  __chkstk_darwin(v11 - 8);
  uint64_t v83 = (uint64_t)&v70 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100046B9C(&qword_10015FF80);
  uint64_t v14 = v13 - 8;
  __chkstk_darwin(v13);
  uint64_t v82 = (char *)&v70 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = type metadata accessor for PrimarySettingsListItemIdentifier();
  uint64_t v77 = *(void *)(v80 - 8);
  __chkstk_darwin(v80);
  uint64_t v73 = (uint64_t)&v70 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for PrimarySettingsListItem();
  uint64_t v18 = v17 - 8;
  uint64_t v19 = *(void *)(v17 - 8);
  uint64_t v20 = *(void *)(v19 + 64);
  __chkstk_darwin(v17);
  uint64_t v21 = sub_100046B9C(&qword_10015FF88);
  __chkstk_darwin(v21);
  BOOL v23 = (char *)&v70 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = sub_100046B9C(&qword_10015FF90);
  uint64_t v102 = *(void *)(v74 - 8);
  __chkstk_darwin(v74);
  BOOL v25 = (char *)&v70 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = sub_100046B9C(&qword_10015FF98) - 8;
  __chkstk_darwin(v76);
  uint64_t v75 = (char *)&v70 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = sub_100046B9C(&qword_10015FFA0);
  __chkstk_darwin(v81);
  uint64_t v79 = (uint64_t)&v70 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_100046B9C(&qword_10015FFA8);
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v84 = v28;
  uint64_t v85 = v29;
  __chkstk_darwin(v28);
  long long v78 = (char *)&v70 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = sub_100046B9C(&qword_10015FFB0);
  uint64_t v31 = __chkstk_darwin(v88);
  uint64_t v72 = (char *)&v70 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = __chkstk_darwin(v31);
  long long v87 = (char *)&v70 - v34;
  __chkstk_darwin(v33);
  uint64_t v91 = (char *)&v70 - v35;
  uint64_t v89 = sub_100046B9C(&qword_10015FFB8);
  __chkstk_darwin(v89);
  uint64_t v90 = (uint64_t)&v70 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004A068((uint64_t)v23);
  uint64_t v37 = v1;
  sub_10003FA0C(v1, (uint64_t)&v70 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItem);
  unint64_t v38 = (*(unsigned __int8 *)(v19 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v39 = swift_allocObject();
  sub_100049B0C((uint64_t)&v70 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0), v39 + v38, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItem);
  sub_10004D2D4(&qword_10015FFC0, &qword_10015FF88);
  char v70 = v25;
  View.onScrollVisibilityChange(threshold:_:)();
  swift_release();
  sub_10003F5D0((uint64_t)v23, &qword_10015FF88);
  uint64_t v71 = v37 + *(int *)(v18 + 28);
  uint64_t v40 = v73;
  sub_10003FA0C(v71, v73, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
  uint64_t v41 = v83;
  sub_10003FA0C(v40, v83, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
  char v42 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v77 + 56);
  uint64_t v43 = v80;
  v42(v41, 0, 1, v80);
  uint64_t v44 = (uint64_t)v82;
  sub_10003F75C(v41, (uint64_t)&v82[*(int *)(v14 + 44)], &qword_10015FF78);
  uint64_t v45 = v74;
  (*(void (**)(uint64_t, char *, uint64_t))(v102 + 16))(v44, v25, v74);
  sub_10003F5D0(v41, &qword_10015FF78);
  uint64_t v46 = v86;
  sub_10003FA0C(v40, v86, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
  v42(v46, 0, 1, v43);
  uint64_t v47 = sub_100046B9C((uint64_t *)&unk_100161530);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v46, 0, 1, v47);
  uint64_t v48 = (uint64_t)v75;
  sub_10003F75C(v46, (uint64_t)&v75[*(int *)(v76 + 44)], &qword_10015FF70);
  sub_10003F75C(v44, v48, &qword_10015FF80);
  sub_10003F5D0(v46, &qword_10015FF70);
  sub_10003F5D0(v44, &qword_10015FF80);
  sub_10003DA8C(v40, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
  (*(void (**)(char *, uint64_t))(v102 + 8))(v70, v45);
  uint64_t v49 = v71 + *(int *)(type metadata accessor for PrimarySettingsListItemModel() + 20);
  LOBYTE(v38) = sub_10004DEE8();
  uint64_t v50 = v79;
  sub_10003F75C(v48, v79, &qword_10015FF98);
  uint64_t v51 = v81;
  *(unsigned char *)(v50 + *(int *)(v81 + 36)) = v38 & 1;
  sub_10003F5D0(v48, &qword_10015FF98);
  uint64_t v52 = v92;
  static AccessibilityChildBehavior.combine.getter();
  unint64_t v53 = sub_100049FC8();
  char v54 = v78;
  View.accessibilityElement(children:)();
  (*(void (**)(char *, uint64_t))(v93 + 8))(v52, v94);
  sub_10003F5D0(v50, &qword_10015FFA0);
  sub_10004D594();
  uint64_t v103 = v51;
  unint64_t v104 = v53;
  swift_getOpaqueTypeConformance2();
  char v55 = v72;
  uint64_t v56 = v84;
  View.accessibility(identifier:)();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v85 + 8))(v54, v56);
  uint64_t v57 = v95;
  sub_10003FA0C(v49, v95, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemViewType);
  LODWORD(v56) = swift_getEnumCaseMultiPayload();
  sub_10003DA8C(v57, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemViewType);
  if (v56 == 9)
  {
    char v58 = v96;
    static AccessibilityTraits.isHeader.getter();
  }
  else
  {
    char v58 = v96;
    static AccessibilityTraits.isButton.getter();
  }
  uint64_t v59 = (uint64_t)v87;
  uint64_t v60 = (uint64_t)v55;
  ModifiedContent<>.accessibilityAddTraits(_:)();
  uint64_t v61 = v100;
  char v62 = *(void (**)(char *, uint64_t))(v99 + 8);
  v62(v58, v100);
  sub_10003F5D0(v60, &qword_10015FFB0);
  BOOL v63 = v98;
  static AccessibilityTraits.isStaticText.getter();
  uint64_t v64 = (uint64_t)v91;
  ModifiedContent<>.accessibilityAddTraits(_:)();
  v62(v63, v61);
  sub_10003F5D0(v59, &qword_10015FFB0);
  LOBYTE(v60) = sub_10004E11C();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v66 = swift_allocObject();
  *(unsigned char *)(v66 + 16) = v60 & 1;
  uint64_t v67 = v90;
  sub_10003F75C(v64, v90, &qword_10015FFB0);
  uint64_t v68 = (uint64_t *)(v67 + *(int *)(v89 + 36));
  *uint64_t v68 = KeyPath;
  v68[1] = (uint64_t)sub_10006394C;
  v68[2] = v66;
  sub_10003F5D0(v64, &qword_10015FFB0);
  return sub_100049B74(v67, v101, &qword_10015FFB8);
}

uint64_t sub_10003F5D0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_100046B9C(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10003F62C(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 36);
  type metadata accessor for PrimarySettingsListItemIdentifier();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
      uint64_t v5 = type metadata accessor for FLFollowUpInformation();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
      break;
    case 2u:
      uint64_t v6 = type metadata accessor for FLFollowUpInformation();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v4, v6);
      sub_100046B9C(&qword_10015F7F8);
      goto LABEL_4;
    case 3u:
    case 4u:
    case 5u:
LABEL_4:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }

  return swift_release();
}

uint64_t sub_10003F75C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_100046B9C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10003F7C0(uint64_t a1, uint64_t a2, int *a3)
{
  char v6 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v6;
  uint64_t v7 = a3[9];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for PrimarySettingsListItemIdentifier();
  swift_retain();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
      uint64_t v11 = type metadata accessor for FLFollowUpInformation();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v8, v9, v11);
      goto LABEL_6;
    case 2u:
      uint64_t v12 = type metadata accessor for FLFollowUpInformation();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v8, v9, v12);
      uint64_t v13 = *(int *)(sub_100046B9C(&qword_10015F7F8) + 48);
      uint64_t v14 = (void *)((char *)v8 + v13);
      uint64_t v15 = (void *)((char *)v9 + v13);
      uint64_t v16 = v15[1];
      *uint64_t v14 = *v15;
      v14[1] = v16;
      swift_bridgeObjectRetain();
      goto LABEL_6;
    case 3u:
    case 4u:
    case 5u:
      uint64_t v17 = v9[1];
      void *v8 = *v9;
      v8[1] = v17;
      swift_bridgeObjectRetain();
LABEL_6:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
      break;
  }
  uint64_t v18 = a3[11];
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (void *)(a2 + v18);
  uint64_t v21 = v20[1];
  void *v19 = *v20;
  v19[1] = v21;
  swift_retain();
  return a1;
}

uint64_t sub_10003FA0C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10003FA74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v4 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  char v6 = (void *)(a1 + v5);
  uint64_t v7 = (void *)(a2 + v5);
  uint64_t v8 = type metadata accessor for PrimarySettingsListItemIdentifier();
  swift_retain();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
      uint64_t v9 = type metadata accessor for FLFollowUpInformation();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v6, v7, v9);
      goto LABEL_6;
    case 2u:
      uint64_t v10 = type metadata accessor for FLFollowUpInformation();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v6, v7, v10);
      uint64_t v11 = *(int *)(sub_100046B9C(&qword_10015F7F8) + 48);
      uint64_t v12 = (void *)((char *)v6 + v11);
      uint64_t v13 = (void *)((char *)v7 + v11);
      uint64_t v14 = v13[1];
      *uint64_t v12 = *v13;
      v12[1] = v14;
      swift_bridgeObjectRetain();
      goto LABEL_6;
    case 3u:
    case 4u:
    case 5u:
      uint64_t v15 = v7[1];
      void *v6 = *v7;
      v6[1] = v15;
      swift_bridgeObjectRetain();
LABEL_6:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v6, v7, *(void *)(*(void *)(v8 - 8) + 64));
      break;
  }
  uint64_t v16 = *(int *)(type metadata accessor for PrimarySettingsListItemModel() + 20);
  uint64_t v17 = (char *)v6 + v16;
  uint64_t v18 = (char *)v7 + v16;
  type metadata accessor for PrimarySettingsListItemViewType();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v28 = type metadata accessor for FamilyRowStatus();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v17, v18, v28);
      uint64_t v29 = *(int *)(type metadata accessor for PrimarySettingsListFamilyLinkModel() + 20);
      uint64_t v30 = &v17[v29];
      uint64_t v31 = &v18[v29];
      uint64_t v32 = *((void *)v31 + 1);
      *(void *)uint64_t v30 = *(void *)v31;
      *((void *)v30 + 1) = v32;
      goto LABEL_27;
    case 2u:
      id v33 = *(id *)v18;
      uint64_t v34 = *((void *)v18 + 1);
      char v35 = v18[16];
      sub_100047728(*(id *)v18, v34, v35);
      *(void *)uint64_t v17 = v33;
      *((void *)v17 + 1) = v34;
      unsigned char v17[16] = v35;
      uint64_t v36 = *((void *)v18 + 4);
      *((void *)v17 + 3) = *((void *)v18 + 3);
      *((void *)v17 + 4) = v36;
      *((_WORD *)v17 + 20) = *((_WORD *)v18 + 20);
      uint64_t v37 = *((void *)v18 + 6);
      uint64_t v38 = *((void *)v18 + 7);
      *((void *)v17 + 6) = v37;
      *((void *)v17 + 7) = v38;
      swift_bridgeObjectRetain();
      swift_retain();
      break;
    case 3u:
      uint64_t v39 = *((void *)v18 + 1);
      *(void *)uint64_t v17 = *(void *)v18;
      *((void *)v17 + 1) = v39;
      *((_WORD *)v17 + 8) = *((_WORD *)v18 + 8);
      goto LABEL_27;
    case 4u:
      uint64_t v40 = *((void *)v18 + 1);
      *(void *)uint64_t v17 = *(void *)v18;
      *((void *)v17 + 1) = v40;
      *((void *)v17 + 2) = *((void *)v18 + 2);
      *((_WORD *)v17 + 12) = *((_WORD *)v18 + 12);
      goto LABEL_27;
    case 5u:
      id v41 = *(id *)v18;
      uint64_t v42 = *((void *)v18 + 1);
      char v43 = v18[16];
      sub_100047728(*(id *)v18, v42, v43);
      *(void *)uint64_t v17 = v41;
      *((void *)v17 + 1) = v42;
      unsigned char v17[16] = v43;
      uint64_t v44 = *((void *)v18 + 4);
      *((void *)v17 + 3) = *((void *)v18 + 3);
      *((void *)v17 + 4) = v44;
      *((_WORD *)v17 + 20) = *((_WORD *)v18 + 20);
      goto LABEL_27;
    case 6u:
      id v45 = *(id *)v18;
      uint64_t v46 = *((void *)v18 + 1);
      char v47 = v18[16];
      sub_100047728(*(id *)v18, v46, v47);
      *(void *)uint64_t v17 = v45;
      *((void *)v17 + 1) = v46;
      unsigned char v17[16] = v47;
      uint64_t v48 = *((void *)v18 + 4);
      *((void *)v17 + 3) = *((void *)v18 + 3);
      *((void *)v17 + 4) = v48;
      *((void *)v17 + 5) = *((void *)v18 + 5);
      *((_WORD *)v17 + 24) = *((_WORD *)v18 + 24);
      goto LABEL_27;
    case 7u:
    case 8u:
      id v19 = *(id *)v18;
      uint64_t v20 = *((void *)v18 + 1);
      char v21 = v18[16];
      sub_100047728(*(id *)v18, v20, v21);
      *(void *)uint64_t v17 = v19;
      *((void *)v17 + 1) = v20;
      unsigned char v17[16] = v21;
      uint64_t v22 = *((void *)v18 + 4);
      *((void *)v17 + 3) = *((void *)v18 + 3);
      *((void *)v17 + 4) = v22;
      uint64_t v23 = *((void *)v18 + 6);
      *((void *)v17 + 5) = *((void *)v18 + 5);
      *((void *)v17 + 6) = v23;
      *((_WORD *)v17 + 28) = *((_WORD *)v18 + 28);
      swift_bridgeObjectRetain();
      goto LABEL_27;
    case 9u:
      int v49 = v18[16];
      if (v49 == 255)
      {
        *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
        unsigned char v17[16] = v18[16];
      }
      else
      {
        id v50 = *(id *)v18;
        uint64_t v51 = *((void *)v18 + 1);
        sub_100047728(*(id *)v18, v51, v18[16]);
        *(void *)uint64_t v17 = v50;
        *((void *)v17 + 1) = v51;
        unsigned char v17[16] = v49;
      }
      uint64_t v56 = *((void *)v18 + 4);
      *((void *)v17 + 3) = *((void *)v18 + 3);
      *((void *)v17 + 4) = v56;
      uint64_t v57 = *((void *)v18 + 5);
      uint64_t v58 = *((void *)v18 + 6);
      *((void *)v17 + 5) = v57;
      *((void *)v17 + 6) = v58;
      swift_bridgeObjectRetain();
      goto LABEL_27;
    case 0xAu:
      int v52 = v18[16];
      if (v52 == 255)
      {
        *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
        unsigned char v17[16] = v18[16];
      }
      else
      {
        id v53 = *(id *)v18;
        uint64_t v54 = *((void *)v18 + 1);
        sub_100047728(*(id *)v18, v54, v18[16]);
        *(void *)uint64_t v17 = v53;
        *((void *)v17 + 1) = v54;
        unsigned char v17[16] = v52;
      }
      uint64_t v59 = *((void *)v18 + 4);
      *((void *)v17 + 3) = *((void *)v18 + 3);
      *((void *)v17 + 4) = v59;
      v17[40] = v18[40];
LABEL_27:
      swift_bridgeObjectRetain();
      break;
    default:
      uint64_t v24 = *((void *)v18 + 1);
      if (v24)
      {
        *(void *)uint64_t v17 = *(void *)v18;
        *((void *)v17 + 1) = v24;
        uint64_t v25 = *((void *)v18 + 3);
        *((void *)v17 + 2) = *((void *)v18 + 2);
        *((void *)v17 + 3) = v25;
        v17[32] = v18[32];
        uint64_t v26 = (void *)*((void *)v18 + 5);
        *((void *)v17 + 5) = v26;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v27 = v26;
      }
      else
      {
        long long v55 = *((_OWORD *)v18 + 1);
        *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
        *((_OWORD *)v17 + 1) = v55;
        *((_OWORD *)v17 + 2) = *((_OWORD *)v18 + 2);
      }
      v17[48] = v18[48];
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

id sub_10003FF84@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for PrimarySettingsListItemIdentifier();
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for PrimarySettingsListItemViewType();
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = v2 + OBJC_IVAR____TtC11SettingsApp37StaticPrimarySettingsListItemProvider_id;
  unint64_t v12 = sub_100042C2C();
  uint64_t v13 = (void **)sub_1000403E0(a1, a1[3]);
  unsigned __int8 v14 = sub_1000409DC(0, v12, *v13);
  swift_bridgeObjectRelease();
  if (v14)
  {
    if (qword_10015F168 != -1) {
      swift_once();
    }
    uint64_t v15 = type metadata accessor for Logger();
    sub_1000477B0(v15, (uint64_t)qword_10016B028);
    swift_retain_n();
    uint64_t v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v43 = swift_slowAlloc();
      *(_DWORD *)uint64_t v18 = 136446210;
      uint64_t v19 = sub_100048BDC();
      uint64_t v42 = sub_100042948(v19, v20, &v43);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "Not including %{public}s due to being hidden.", v18, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    uint64_t v28 = type metadata accessor for PrimarySettingsListItemModel();
    return (id)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(a2, 1, 1, v28);
  }
  else
  {
    unint64_t v21 = sub_100042C2C();
    uint64_t v22 = (void **)sub_1000403E0(a1, a1[3]);
    unsigned __int8 v23 = sub_1000409DC(1, v21, *v22);
    swift_bridgeObjectRelease();
    swift_storeEnumTagMultiPayload();
    LOBYTE(v21) = sub_1000460F4(v11, (uint64_t)v7);
    sub_100045F84((uint64_t)v7);
    if (v21)
    {
      id result = [self sharedConnection];
      if (!result)
      {
        __break(1u);
        return result;
      }
      uint64_t v25 = result;
      unsigned int v26 = [result isPasscodeSet];

      if (v26) {
        char v27 = 0;
      }
      else {
        char v27 = 2;
      }
    }
    else
    {
      char v27 = 2;
    }
    uint64_t v29 = (void *)sub_100040424();
    if (v31 >= 3u)
    {
      *(void *)uint64_t v10 = sub_1000477E8();
      *((void *)v10 + 1) = v40;
      unsigned char v10[16] = v23 & 1;
      uint64_t v39 = v10 + 17;
    }
    else
    {
      sub_100046F04(v29, v30, v31);
      uint64_t v32 = sub_100040424();
      uint64_t v34 = v33;
      char v36 = v35;
      id v37 = sub_1000477E8();
      *(void *)uint64_t v10 = v32;
      *((void *)v10 + 1) = v34;
      unsigned char v10[16] = v36;
      *((void *)v10 + 3) = v37;
      *((void *)v10 + 4) = v38;
      uint64_t v39 = v10 + 41;
      v10[40] = v23 & 1;
    }
    char *v39 = v27;
    swift_storeEnumTagMultiPayload();
    sub_100046BE0(v11, a2);
    uint64_t v41 = type metadata accessor for PrimarySettingsListItemModel();
    sub_100049698((uint64_t)v10, a2 + *(int *)(v41 + 20));
    return (id)(*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(a2, 0, 1, v41);
  }
}

void *sub_1000403E0(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_100040424()
{
  uint64_t v1 = v0;
  unint64_t v2 = 0xD00000000000001ELL;
  uint64_t v3 = type metadata accessor for PrimarySettingsListItemIdentifier();
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100046BE0(v1, (uint64_t)v5);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
      sub_100046B9C(&qword_10015F7F8);
      swift_bridgeObjectRelease();
      goto LABEL_6;
    case 3u:
      swift_bridgeObjectRelease();
      return 0xD00000000000001ALL;
    case 4u:
    case 5u:
      swift_bridgeObjectRelease();
      return 0;
    case 6u:
    case 0x18u:
    case 0x1Du:
    case 0x24u:
    case 0x25u:
      return v2;
    case 7u:
      return 0xD000000000000021;
    case 8u:
      return 0xD000000000000024;
    case 9u:
      return 0xD00000000000001BLL;
    case 0xAu:
      return 0xD00000000000001FLL;
    case 0xBu:
      return 0xD000000000000020;
    case 0xCu:
      return 0xD000000000000028;
    case 0xDu:
      return 0xD000000000000027;
    case 0xEu:
      return 0xD00000000000001ALL;
    case 0xFu:
      return 0xD000000000000024;
    case 0x10u:
      return 0xD000000000000020;
    case 0x11u:
      return 0xD000000000000024;
    case 0x12u:
      return 0xD00000000000001CLL;
    case 0x13u:
      return 0xD00000000000001CLL;
    case 0x14u:
      return 0xD000000000000022;
    case 0x15u:
      return 0xD00000000000001BLL;
    case 0x16u:
      return 0xD000000000000025;
    case 0x17u:
      return 0xD00000000000002BLL;
    case 0x19u:
      uint64_t result = (uint64_t)(id)MobileGestalt_get_current_device();
      if (result)
      {
        uint64_t v8 = (void *)result;
        int iPadCapability = MobileGestalt_get_iPadCapability();

        if (iPadCapability) {
          return 0xD000000000000023;
        }
        else {
          return 0xD000000000000025;
        }
      }
      else
      {
        __break(1u);
LABEL_66:
        __break(1u);
LABEL_67:
        __break(1u);
LABEL_68:
        __break(1u);
LABEL_69:
        __break(1u);
      }
      return result;
    case 0x1Au:
      return 0xD000000000000024;
    case 0x1Bu:
      return 0xD000000000000024;
    case 0x1Cu:
      return 0xD000000000000020;
    case 0x1Eu:
      if (sub_10004F244()) {
        return 0xD00000000000002DLL;
      }
      else {
        return 0x6C7070612E6D6F63;
      }
    case 0x1Fu:
      return 0xD00000000000001DLL;
    case 0x20u:
      return 0xD00000000000001DLL;
    case 0x21u:
      uint64_t result = (uint64_t)(id)MobileGestalt_get_current_device();
      if (!result) {
        goto LABEL_66;
      }
      uint64_t v10 = (void *)result;
      int pearlIDCapability = MobileGestalt_get_pearlIDCapability();

      if (!pearlIDCapability) {
        goto LABEL_38;
      }
      uint64_t result = (uint64_t)(id)MobileGestalt_get_current_device();
      if (!result) {
        goto LABEL_68;
      }
      unint64_t v12 = (void *)result;
      int isSimulator = MobileGestalt_get_isSimulator();

      if (!isSimulator) {
        return v2;
      }
LABEL_38:
      uint64_t result = (uint64_t)(id)MobileGestalt_get_current_device();
      if (!result) {
        goto LABEL_67;
      }
      unsigned __int8 v14 = (void *)result;
      int v15 = MobileGestalt_get_pearlIDCapability();

      if (!v15) {
        return 0xD00000000000001FLL;
      }
      uint64_t result = (uint64_t)(id)MobileGestalt_get_current_device();
      if (!result) {
        goto LABEL_69;
      }
      uint64_t v16 = (void *)result;
      int v17 = MobileGestalt_get_isSimulator();

      if (v17) {
        return 0xD00000000000001FLL;
      }
      else {
        return 0xD00000000000001FLL;
      }
    case 0x22u:
      return 0xD000000000000024;
    case 0x23u:
      return 0xD00000000000002DLL;
    case 0x26u:
      id v18 = [self currentDevice];
      id v19 = [v18 userInterfaceIdiom];

      if (v19) {
        return 0xD000000000000016;
      }
      else {
        return 0xD000000000000012;
      }
    case 0x27u:
      return 0xD00000000000002ELL;
    case 0x28u:
      return 0xD000000000000023;
    case 0x29u:
      return 0xD00000000000001DLL;
    case 0x2Au:
      return 0xD00000000000001CLL;
    case 0x2Bu:
      return 0xD000000000000021;
    case 0x2Cu:
      return 0xD000000000000026;
    case 0x2Du:
      return 0xD000000000000027;
    case 0x2Eu:
      return 0xD000000000000028;
    case 0x2Fu:
    case 0x30u:
    case 0x31u:
    case 0x32u:
      return 0xD000000000000023;
    case 0x33u:
      return 0xD000000000000022;
    default:
LABEL_6:
      uint64_t v7 = type metadata accessor for FLFollowUpInformation();
      (*(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8))(v5, v7);
      return 0;
  }
}

id sub_1000409DC(char a1, uint64_t a2, void *a3)
{
  uint64_t v6 = type metadata accessor for NSBundle.PreferencesPluginLocation();
  uint64_t v176 = *(void *)(v6 - 8);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v167 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v167 - v10;
  uint64_t v180 = type metadata accessor for PrimarySettingsListItemVisibilityRule();
  uint64_t v181 = *(void *)(v180 - 8);
  __chkstk_darwin(v180);
  uint64_t v13 = (unsigned __int8 *)&v167 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v189 = &type metadata for PrimarySettingsListDataModelGenerationContext;
  uint64_t v190 = &off_100152B50;
  uint64_t v188 = a3;
  if (!*(void *)(a2 + 16)
    || (unint64_t v14 = sub_100044F70(a1 & 1), (v15 & 1) == 0)
    || (uint64_t v16 = *(void *)(*(void *)(a2 + 56) + 8 * v14), (v178 = *(void *)(v16 + 16)) == 0))
  {
    id v21 = a3;
LABEL_6:
    char v22 = 0;
    goto LABEL_7;
  }
  uint64_t v167 = v9;
  uint64_t v173 = v11;
  int v168 = a1 & 1;
  uint64_t v17 = v16 + ((*(unsigned __int8 *)(v181 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v181 + 80));
  uint64_t v171 = (void (**)(char *, unsigned __int8 *, uint64_t))(v176 + 32);
  uint64_t v172 = (void (**)(char *, uint64_t))(v176 + 8);
  id v18 = a3;
  swift_bridgeObjectRetain();
  unint64_t v19 = 0;
  uint64_t v20 = v16;
  uint64_t v174 = v16;
  uint64_t v175 = v17;
  uint64_t v169 = v6;
  while (v19 < *(void *)(v20 + 16))
  {
    uint64_t v29 = v19++;
    sub_10004509C(v17 + *(void *)(v181 + 72) * v29, (uint64_t)v13);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v35 = *(void *)v13;
        unint64_t v34 = *((void *)v13 + 1);
        char v36 = (void *)*sub_1000403E0(&v188, (uint64_t)v189);
        swift_getKeyPath();
        v185[0] = (uint64_t)v36;
        sub_100048AB4((unint64_t *)&unk_100160990, (void (*)(uint64_t))type metadata accessor for RestrictionsManager);
        id v37 = v36;
        ObservationRegistrar.access<A, B>(_:keyPath:)();
        swift_release();
        uint64_t v38 = *(void *)&v37[OBJC_IVAR____TtC11SettingsApp19RestrictionsManager__allowedAppBundleIDs];
        swift_bridgeObjectRetain();

        if (!v38 || (char v39 = sub_100049E90(v35, v34, v38), swift_bridgeObjectRelease(), (v39 & 1) != 0))
        {
          uint64_t v40 = (void *)*sub_1000403E0(&v188, (uint64_t)v189);
          swift_getKeyPath();
          v185[0] = (uint64_t)v40;
          uint64_t v41 = v40;
          ObservationRegistrar.access<A, B>(_:keyPath:)();
          swift_release();
          uint64_t v42 = *(void *)&v41[OBJC_IVAR____TtC11SettingsApp19RestrictionsManager__blockedAppBundleIDs];
          swift_bridgeObjectRetain();

          if (v42)
          {
            char v43 = sub_100049E90(v35, v34, v42);
            swift_bridgeObjectRelease();
            uint64_t v20 = v174;
            if (v43)
            {
              swift_bridgeObjectRelease();
              if (qword_10015F160 != -1) {
                swift_once();
              }
              uint64_t v157 = type metadata accessor for Logger();
              sub_1000477B0(v157, (uint64_t)qword_10016B010);
              swift_bridgeObjectRetain();
              uint64_t v128 = Logger.logObject.getter();
              os_log_type_t v152 = static os_log_type_t.debug.getter();
              if (!os_log_type_enabled(v128, v152)) {
                goto LABEL_167;
              }
              uint64_t v153 = swift_slowAlloc();
              v185[0] = swift_slowAlloc();
              *(_DWORD *)uint64_t v153 = 136446466;
              swift_bridgeObjectRetain();
              v186[0] = sub_100042948(v35, v34, v185);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease_n();
              *(_WORD *)(v153 + 12) = 2082;
              if (v168) {
                uint64_t v158 = 0xD000000000000013;
              }
              else {
                uint64_t v158 = 0x6E6564646968;
              }
              if (v168) {
                unint64_t v159 = 0x8000000100124E30;
              }
              else {
                unint64_t v159 = 0xE600000000000000;
              }
              v186[0] = sub_100042948(v158, v159, v185);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease();
              unsigned int v156 = "Application '%{public}s' is in restricted application list, should apply '%{public}s' visibility.";
LABEL_164:
              _os_log_impl((void *)&_mh_execute_header, v128, v152, v156, (uint8_t *)v153, 0x16u);
              swift_arrayDestroy();
LABEL_165:
              swift_slowDealloc();
              swift_slowDealloc();
              goto LABEL_166;
            }
            swift_bridgeObjectRelease();
          }
          else
          {
LABEL_20:
            swift_bridgeObjectRelease();
            uint64_t v20 = v174;
          }
          uint64_t v17 = v175;
          goto LABEL_9;
        }
        swift_bridgeObjectRelease();
        if (qword_10015F160 != -1) {
          swift_once();
        }
        uint64_t v151 = type metadata accessor for Logger();
        sub_1000477B0(v151, (uint64_t)qword_10016B010);
        swift_bridgeObjectRetain();
        uint64_t v128 = Logger.logObject.getter();
        os_log_type_t v152 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v128, v152))
        {
          uint64_t v153 = swift_slowAlloc();
          v185[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v153 = 136446466;
          swift_bridgeObjectRetain();
          v186[0] = sub_100042948(v35, v34, v185);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v153 + 12) = 2082;
          if (v168) {
            uint64_t v154 = 0xD000000000000013;
          }
          else {
            uint64_t v154 = 0x6E6564646968;
          }
          if (v168) {
            unint64_t v155 = 0x8000000100124E30;
          }
          else {
            unint64_t v155 = 0xE600000000000000;
          }
          v186[0] = sub_100042948(v154, v155, v185);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          unsigned int v156 = "Application '%{public}s' is not in allowed application list, should apply '%{public}s' visibility.";
          goto LABEL_164;
        }
LABEL_167:

LABEL_168:
        swift_bridgeObjectRelease_n();
        char v22 = 1;
LABEL_7:
        sub_100042A1C((uint64_t)&v188);
        return (id)(v22 & 1);
      case 2u:
        uint64_t v45 = *(void *)v13;
        unint64_t v44 = *((void *)v13 + 1);
        uint64_t v46 = (void *)*sub_1000403E0(&v188, (uint64_t)v189);
        swift_getKeyPath();
        v185[0] = (uint64_t)v46;
        sub_100048AB4((unint64_t *)&unk_100160990, (void (*)(uint64_t))type metadata accessor for RestrictionsManager);
        char v47 = v46;
        ObservationRegistrar.access<A, B>(_:keyPath:)();
        swift_release();
        uint64_t v48 = *(void *)&v47[OBJC_IVAR____TtC11SettingsApp19RestrictionsManager__restrictedFeatures];
        swift_bridgeObjectRetain();

        char v49 = sub_100049E90(v45, v44, v48);
        swift_bridgeObjectRelease();
        if ((v49 & 1) == 0) {
          goto LABEL_20;
        }
        swift_bridgeObjectRelease();
        if (qword_10015F160 != -1) {
          swift_once();
        }
        uint64_t v127 = type metadata accessor for Logger();
        sub_1000477B0(v127, (uint64_t)qword_10016B010);
        swift_bridgeObjectRetain();
        uint64_t v128 = Logger.logObject.getter();
        os_log_type_t v129 = static os_log_type_t.debug.getter();
        if (!os_log_type_enabled(v128, v129)) {
          goto LABEL_167;
        }
        uint64_t v130 = swift_slowAlloc();
        v185[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v130 = 136446466;
        swift_bridgeObjectRetain();
        v186[0] = sub_100042948(v45, v44, v185);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v130 + 12) = 2082;
        if (v168) {
          uint64_t v131 = 0xD000000000000013;
        }
        else {
          uint64_t v131 = 0x6E6564646968;
        }
        if (v168) {
          unint64_t v132 = 0x8000000100124E30;
        }
        else {
          unint64_t v132 = 0xE600000000000000;
        }
        v186[0] = sub_100042948(v131, v132, v185);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v128, v129, "Feature '%{public}s' is restricted, should apply '%{public}s' visibility.", (uint8_t *)v130, 0x16u);
        swift_arrayDestroy();
        goto LABEL_165;
      case 3u:
        uint64_t v50 = *(void *)v13;
        unsigned __int8 v51 = v13[8];
        sub_1000620F8((uint64_t)&v188, (uint64_t)v186);
        uint64_t v52 = *(void *)(v50 + 16);
        uint64_t v179 = v52;
        if (v51)
        {
          if (!v52)
          {
LABEL_78:
            swift_bridgeObjectRelease();
            if (qword_10015F160 != -1) {
              swift_once();
            }
            uint64_t v98 = type metadata accessor for Logger();
            sub_1000477B0(v98, (uint64_t)qword_10016B010);
            swift_bridgeObjectRetain();
            uint64_t v89 = Logger.logObject.getter();
            os_log_type_t v90 = static os_log_type_t.debug.getter();
            if (os_log_type_enabled(v89, v90))
            {
              uint64_t v91 = swift_slowAlloc();
              v185[0] = swift_slowAlloc();
              *(_DWORD *)uint64_t v91 = 136446466;
              swift_bridgeObjectRetain();
              uint64_t v99 = Array.description.getter();
              unint64_t v101 = v100;
              swift_bridgeObjectRelease();
              uint64_t v182 = sub_100042948(v99, v101, v185);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease();
              *(_WORD *)(v91 + 12) = 2082;
              if (v168) {
                uint64_t v102 = 0xD000000000000013;
              }
              else {
                uint64_t v102 = 0x6E6564646968;
              }
              if (v168) {
                unint64_t v103 = 0x8000000100124E30;
              }
              else {
                unint64_t v103 = 0xE600000000000000;
              }
              uint64_t v182 = sub_100042948(v102, v103, v185);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease();
              uint64_t v97 = "All Features in '%{public}s' are restricted, should apply '%{public}s' visibility.";
LABEL_88:
              _os_log_impl((void *)&_mh_execute_header, v89, v90, v97, (uint8_t *)v91, 0x16u);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();

              unint64_t v104 = v186;
LABEL_89:
              sub_100042A1C((uint64_t)v104);
              char v22 = 1;
              goto LABEL_7;
            }
            goto LABEL_90;
          }
          uint64_t v177 = v50 + 32;
          uint64_t v170 = v50;
          swift_bridgeObjectRetain();
          uint64_t v53 = 0;
          while (1)
          {
            uint64_t v54 = (uint64_t *)(v177 + 16 * v53);
            uint64_t v55 = *v54;
            uint64_t v56 = v54[1];
            uint64_t v57 = (void *)*sub_1000403E0(v186, v187);
            swift_getKeyPath();
            v185[0] = (uint64_t)v57;
            sub_100048AB4((unint64_t *)&unk_100160990, (void (*)(uint64_t))type metadata accessor for RestrictionsManager);
            swift_bridgeObjectRetain();
            uint64_t v58 = v57;
            ObservationRegistrar.access<A, B>(_:keyPath:)();
            swift_release();
            uint64_t v59 = *(void *)&v58[OBJC_IVAR____TtC11SettingsApp19RestrictionsManager__restrictedFeatures];
            swift_bridgeObjectRetain();

            if (!*(void *)(v59 + 16)) {
              goto LABEL_64;
            }
            Hasher.init(_seed:)();
            String.hash(into:)();
            Swift::Int v60 = Hasher._finalize()();
            uint64_t v61 = -1 << *(unsigned char *)(v59 + 32);
            unint64_t v62 = v60 & ~v61;
            if (((*(void *)(v59 + 56 + ((v62 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v62) & 1) == 0) {
              goto LABEL_64;
            }
            uint64_t v63 = *(void *)(v59 + 48);
            uint64_t v64 = (void *)(v63 + 16 * v62);
            BOOL v65 = *v64 == v55 && v64[1] == v56;
            if (!v65 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
              break;
            }
LABEL_25:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (++v53 == v179)
            {
              swift_bridgeObjectRelease();
              goto LABEL_78;
            }
          }
          uint64_t v66 = ~v61;
          while (1)
          {
            unint64_t v62 = (v62 + 1) & v66;
            if (((*(void *)(v59 + 56 + ((v62 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v62) & 1) == 0) {
              break;
            }
            uint64_t v67 = (void *)(v63 + 16 * v62);
            BOOL v68 = *v67 == v55 && v67[1] == v56;
            if (v68 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
              goto LABEL_25;
            }
          }
LABEL_64:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_65:
          swift_bridgeObjectRelease();
          uint64_t v6 = v169;
          uint64_t v20 = v174;
          uint64_t v17 = v175;
        }
        else if (v52)
        {
          uint64_t v177 = v50 + 32;
          uint64_t v170 = v50;
          swift_bridgeObjectRetain();
          uint64_t v72 = 0;
          while (1)
          {
            uint64_t v73 = (uint64_t *)(v177 + 16 * v72);
            uint64_t v74 = *v73;
            uint64_t v75 = v73[1];
            uint64_t v76 = (void *)*sub_1000403E0(v186, v187);
            swift_getKeyPath();
            v185[0] = (uint64_t)v76;
            sub_100048AB4((unint64_t *)&unk_100160990, (void (*)(uint64_t))type metadata accessor for RestrictionsManager);
            swift_bridgeObjectRetain();
            uint64_t v77 = v76;
            ObservationRegistrar.access<A, B>(_:keyPath:)();
            swift_release();
            uint64_t v78 = *(void *)&v77[OBJC_IVAR____TtC11SettingsApp19RestrictionsManager__restrictedFeatures];
            swift_bridgeObjectRetain();

            if (*(void *)(v78 + 16))
            {
              Hasher.init(_seed:)();
              String.hash(into:)();
              Swift::Int v79 = Hasher._finalize()();
              uint64_t v80 = -1 << *(unsigned char *)(v78 + 32);
              unint64_t v81 = v79 & ~v80;
              if ((*(void *)(v78 + 56 + ((v81 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v81))
              {
                uint64_t v82 = *(void *)(v78 + 48);
                uint64_t v83 = (void *)(v82 + 16 * v81);
                BOOL v84 = *v83 == v74 && v83[1] == v75;
                if (v84 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
                {
LABEL_67:
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  if (qword_10015F160 == -1) {
                    goto LABEL_68;
                  }
                  goto LABEL_188;
                }
                uint64_t v85 = ~v80;
                while (1)
                {
                  unint64_t v81 = (v81 + 1) & v85;
                  if (((*(void *)(v78 + 56 + ((v81 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v81) & 1) == 0) {
                    break;
                  }
                  uint64_t v86 = (void *)(v82 + 16 * v81);
                  BOOL v87 = *v86 == v74 && v86[1] == v75;
                  if (v87 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
                    goto LABEL_67;
                  }
                }
              }
            }
            ++v72;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v72 == v179) {
              goto LABEL_65;
            }
          }
        }
        sub_100042A1C((uint64_t)v186);
        swift_bridgeObjectRelease();
LABEL_9:
        if (v19 == v178)
        {
          swift_bridgeObjectRelease();
          goto LABEL_6;
        }
        break;
      case 4u:
        int v69 = v13[8];
        id result = (id)MobileGestalt_get_current_device();
        if (!result)
        {
          __break(1u);
          return result;
        }
        char v70 = result;
        v185[0] = (uint64_t)result;
        swift_getAtKeyPath();

        if (v69 == LOBYTE(v186[0]))
        {
          swift_bridgeObjectRelease();
          swift_retain();
          uint64_t v133 = dispatch thunk of AnyKeyPath._kvcKeyPathString.getter();
          unint64_t v135 = v134;
          swift_release();
          int v136 = v168;
          if (v135)
          {
            if (qword_10015F160 != -1) {
              swift_once();
            }
            uint64_t v137 = type metadata accessor for Logger();
            sub_1000477B0(v137, (uint64_t)qword_10016B010);
            swift_bridgeObjectRetain();
            uint64_t v128 = Logger.logObject.getter();
            os_log_type_t v138 = static os_log_type_t.debug.getter();
            if (os_log_type_enabled(v128, v138))
            {
              uint64_t v139 = swift_slowAlloc();
              v185[0] = swift_slowAlloc();
              *(_DWORD *)uint64_t v139 = 136446722;
              swift_bridgeObjectRetain();
              HIDWORD(v186[0]) = (unint64_t)sub_100042948(v133, v135, v185) >> 32;
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease_n();
              *(_WORD *)(v139 + 12) = 1026;
              LODWORD(v186[0]) = v69;
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              *(_WORD *)(v139 + 18) = 2082;
              if (v168) {
                uint64_t v140 = 0xD000000000000013;
              }
              else {
                uint64_t v140 = 0x6E6564646968;
              }
              if (v168) {
                unint64_t v141 = 0x8000000100124E30;
              }
              else {
                unint64_t v141 = 0xE600000000000000;
              }
              v186[0] = sub_100042948(v140, v141, v185);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease();
              _os_log_impl((void *)&_mh_execute_header, v128, v138, "Capability '%{public}s' is equal to '%{BOOL,public}d', should apply '%{public}s' visibility.", (uint8_t *)v139, 0x1Cu);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
              swift_release();
LABEL_166:

              char v22 = 1;
              goto LABEL_7;
            }

            swift_bridgeObjectRelease_n();
          }
          else
          {
            if (qword_10015F160 != -1) {
              swift_once();
            }
            uint64_t v161 = type metadata accessor for Logger();
            sub_1000477B0(v161, (uint64_t)qword_10016B010);
            uint64_t v162 = Logger.logObject.getter();
            os_log_type_t v163 = static os_log_type_t.debug.getter();
            if (os_log_type_enabled(v162, v163))
            {
              uint64_t v164 = swift_slowAlloc();
              v185[0] = swift_slowAlloc();
              *(_DWORD *)uint64_t v164 = 67240450;
              LODWORD(v186[0]) = v69;
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              *(_WORD *)(v164 + 8) = 2082;
              if (v136) {
                uint64_t v165 = 0xD000000000000013;
              }
              else {
                uint64_t v165 = 0x6E6564646968;
              }
              if (v136) {
                unint64_t v166 = 0x8000000100124E30;
              }
              else {
                unint64_t v166 = 0xE600000000000000;
              }
              v186[0] = sub_100042948(v165, v166, v185);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease();
              _os_log_impl((void *)&_mh_execute_header, v162, v163, "Capability is equal to '%{BOOL,public}d', should apply '%{public}s' visibility.", (uint8_t *)v164, 0x12u);
              char v22 = 1;
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
              swift_release();

              goto LABEL_7;
            }
          }
          swift_release();
          char v22 = 1;
          goto LABEL_7;
        }
        swift_release();
        goto LABEL_9;
      case 5u:
        int v71 = v13[40];
        sub_1000498B0((long long *)v13, (uint64_t)v185);
        if (v71 == (isFeatureEnabled(_:)() & 1))
        {
          swift_bridgeObjectRelease();
          if (qword_10015F160 != -1) {
            swift_once();
          }
          uint64_t v142 = type metadata accessor for Logger();
          sub_1000477B0(v142, (uint64_t)qword_10016B010);
          sub_1000620F8((uint64_t)v185, (uint64_t)v186);
          uint64_t v143 = Logger.logObject.getter();
          os_log_type_t v144 = static os_log_type_t.debug.getter();
          if (os_log_type_enabled(v143, v144))
          {
            uint64_t v145 = swift_slowAlloc();
            uint64_t v184 = swift_slowAlloc();
            *(_DWORD *)uint64_t v145 = 136315650;
            sub_1000403E0(v186, v187);
            dispatch thunk of FeatureFlagsKey.domain.getter();
            uint64_t v182 = StaticString.description.getter();
            unint64_t v183 = v146;
            v147._countAndFlagsBits = 47;
            v147._object = (void *)0xE100000000000000;
            String.append(_:)(v147);
            sub_1000403E0(v186, v187);
            dispatch thunk of FeatureFlagsKey.feature.getter();
            v148._countAndFlagsBits = StaticString.description.getter();
            String.append(_:)(v148);
            swift_bridgeObjectRelease();
            HIDWORD(v182) = (unint64_t)sub_100042948(v182, v183, &v184) >> 32;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            sub_100042A1C((uint64_t)v186);
            *(_WORD *)(v145 + 12) = 1026;
            LODWORD(v182) = v71;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *(_WORD *)(v145 + 18) = 2082;
            if (v168) {
              uint64_t v149 = 0xD000000000000013;
            }
            else {
              uint64_t v149 = 0x6E6564646968;
            }
            if (v168) {
              unint64_t v150 = 0x8000000100124E30;
            }
            else {
              unint64_t v150 = 0xE600000000000000;
            }
            uint64_t v182 = sub_100042948(v149, v150, &v184);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, v143, v144, "Feature Flag '%s' is equal to '%{BOOL,public}d', should apply '%{public}s' visibility.", (uint8_t *)v145, 0x1Cu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {

            sub_100042A1C((uint64_t)v186);
          }
          unint64_t v104 = v185;
          goto LABEL_89;
        }
        sub_100042A1C((uint64_t)v185);
        goto LABEL_9;
      case 6u:
        swift_bridgeObjectRelease();
        char v22 = *v13 ^ v13[1] ^ 1;
        goto LABEL_7;
      case 7u:
        int v24 = *v13;
        uint64_t v25 = (void *)*sub_1000403E0(&v188, (uint64_t)v189);
        swift_getKeyPath();
        v185[0] = (uint64_t)v25;
        sub_100048AB4((unint64_t *)&unk_100160990, (void (*)(uint64_t))type metadata accessor for RestrictionsManager);
        unsigned int v26 = v25;
        uint64_t v17 = v175;
        char v27 = v26;
        ObservationRegistrar.access<A, B>(_:keyPath:)();
        swift_release();
        int v28 = v27[OBJC_IVAR____TtC11SettingsApp19RestrictionsManager__isInEDUMode];

        if (v24 != v28) {
          goto LABEL_9;
        }
        swift_bridgeObjectRelease();
        if (qword_10015F160 != -1) {
          swift_once();
        }
        uint64_t v105 = type metadata accessor for Logger();
        sub_1000477B0(v105, (uint64_t)qword_10016B010);
        uint64_t v106 = Logger.logObject.getter();
        os_log_type_t v107 = static os_log_type_t.debug.getter();
        BOOL v108 = os_log_type_enabled(v106, v107);
        int v109 = v168;
        if (v108)
        {
          uint64_t v110 = swift_slowAlloc();
          v185[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v110 = 67240450;
          LODWORD(v186[0]) = v24;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v110 + 8) = 2082;
          if (v109) {
            uint64_t v111 = 0xD000000000000013;
          }
          else {
            uint64_t v111 = 0x6E6564646968;
          }
          if (v109) {
            unint64_t v112 = 0x8000000100124E30;
          }
          else {
            unint64_t v112 = 0xE600000000000000;
          }
          v186[0] = sub_100042948(v111, v112, v185);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v106, v107, "Shared iPad is equal to '%{BOOL,public}d', should apply '%{public}s' visibility.", (uint8_t *)v110, 0x12u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          char v22 = 1;
        }
        else
        {

          char v22 = 1;
        }
        goto LABEL_7;
      default:
        uint64_t v31 = *(void *)v13;
        unint64_t v30 = *((void *)v13 + 1);
        uint64_t v32 = sub_100046B9C(&qword_10015F8F0);
        uint64_t v33 = v173;
        (*v171)(v173, &v13[*(int *)(v32 + 48)], v6);
        sub_100049E50();
        if ((static NSBundle.preferencesPluginExists(name:location:)() & 1) == 0)
        {
          swift_bridgeObjectRelease();
          if (qword_10015F160 != -1) {
            swift_once();
          }
          uint64_t v113 = type metadata accessor for Logger();
          sub_1000477B0(v113, (uint64_t)qword_10016B010);
          unint64_t v114 = v167;
          uint64_t v115 = v173;
          (*(void (**)(char *, char *, uint64_t))(v176 + 16))(v167, v173, v6);
          swift_bridgeObjectRetain();
          long long v116 = Logger.logObject.getter();
          os_log_type_t v117 = static os_log_type_t.debug.getter();
          if (os_log_type_enabled(v116, v117))
          {
            uint64_t v118 = swift_slowAlloc();
            uint64_t v119 = v6;
            uint64_t v181 = swift_slowAlloc();
            v185[0] = v181;
            *(_DWORD *)uint64_t v118 = 136446722;
            swift_bridgeObjectRetain();
            sub_100042948(v31, v30, v185);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease_n();
            *(_WORD *)(v118 + 12) = 2082;
            sub_100048AB4(&qword_100160B30, (void (*)(uint64_t))&type metadata accessor for NSBundle.PreferencesPluginLocation);
            long long v120 = v167;
            uint64_t v121 = v119;
            uint64_t v122 = dispatch thunk of CustomStringConvertible.description.getter();
            v186[0] = sub_100042948(v122, v123, v185);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            long long v124 = *v172;
            (*v172)(v120, v121);
            *(_WORD *)(v118 + 22) = 2082;
            if (v168) {
              uint64_t v125 = 0xD000000000000013;
            }
            else {
              uint64_t v125 = 0x6E6564646968;
            }
            if (v168) {
              unint64_t v126 = 0x8000000100124E30;
            }
            else {
              unint64_t v126 = 0xE600000000000000;
            }
            v186[0] = sub_100042948(v125, v126, v185);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, v116, v117, "Bundle '%{public}s' in location '%{public}s' does not exist, should apply '%{public}s' visibility.", (uint8_t *)v118, 0x20u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            v124(v173, v121);
            char v22 = 1;
          }
          else
          {

            uint64_t v160 = *v172;
            (*v172)(v114, v6);
            swift_bridgeObjectRelease_n();
            v160(v115, v6);
            char v22 = 1;
          }
          goto LABEL_7;
        }
        (*v172)(v33, v6);
        swift_bridgeObjectRelease();
        goto LABEL_9;
    }
  }
  __break(1u);
LABEL_188:
  swift_once();
LABEL_68:
  uint64_t v88 = type metadata accessor for Logger();
  sub_1000477B0(v88, (uint64_t)qword_10016B010);
  swift_bridgeObjectRetain();
  uint64_t v89 = Logger.logObject.getter();
  os_log_type_t v90 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v89, v90))
  {
    uint64_t v91 = swift_slowAlloc();
    v185[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v91 = 136446466;
    swift_bridgeObjectRetain();
    uint64_t v92 = Array.description.getter();
    unint64_t v94 = v93;
    swift_bridgeObjectRelease();
    uint64_t v182 = sub_100042948(v92, v94, v185);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v91 + 12) = 2082;
    if (v168) {
      uint64_t v95 = 0xD000000000000013;
    }
    else {
      uint64_t v95 = 0x6E6564646968;
    }
    if (v168) {
      unint64_t v96 = 0x8000000100124E30;
    }
    else {
      unint64_t v96 = 0xE600000000000000;
    }
    uint64_t v182 = sub_100042948(v95, v96, v185);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v97 = "Some Features in '%{public}s' are restricted, should apply '%{public}s' visibility.";
    goto LABEL_88;
  }
LABEL_90:
  sub_100042A1C((uint64_t)v186);

  goto LABEL_168;
}

uint64_t type metadata accessor for PrimarySettingsListItemVisibilityRule()
{
  uint64_t result = qword_100160A50;
  if (!qword_100160A50) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100042948(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_100042A6C(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    ObjectType = (void *)swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_100061984((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_100061984((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  sub_100042A1C((uint64_t)v12);
  return v7;
}

uint64_t sub_100042A1C(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_100042A6C(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            UnsafeMutableRawBufferPointer.subscript.setter();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_100049BD8(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = _StringObject.sharedUTF8.getter();
  if (!v8)
  {
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
LABEL_17:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

unint64_t sub_100042C2C()
{
  uint64_t v1 = type metadata accessor for PrimarySettingsListItemIdentifier();
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v146 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100046BE0(v0, (uint64_t)v3);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 6u:
    case 0x2Bu:
      sub_100046B9C(&qword_10015F8C8);
      uint64_t v4 = swift_allocObject();
      long long v146 = xmmword_10011C360;
      *(_OWORD *)(v4 + 16) = xmmword_10011C360;
      *(unsigned char *)(v4 + 32) = 1;
      sub_100046B9C(&qword_10015F8D0);
      uint64_t v8 = *(void *)(type metadata accessor for PrimarySettingsListItemVisibilityRule() - 8);
      unint64_t v9 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      uint64_t v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = v146;
      uint64_t v10 = (uint64_t *)(v7 + v9);
      *uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      v10[1] = v11;
      goto LABEL_6;
    case 8u:
    case 0x19u:
      sub_100046B9C(&qword_10015F8C8);
      uint64_t v4 = swift_allocObject();
      long long v146 = xmmword_10011C360;
      *(_OWORD *)(v4 + 16) = xmmword_10011C360;
      *(unsigned char *)(v4 + 32) = 0;
      sub_100046B9C(&qword_10015F8D0);
      uint64_t v5 = *(void *)(type metadata accessor for PrimarySettingsListItemVisibilityRule() - 8);
      unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
      uint64_t v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = v146;
      *(unsigned char *)(v7 + v6) = 1;
      goto LABEL_6;
    case 9u:
      sub_100046B9C(&qword_10015F8C8);
      uint64_t v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_10011C360;
      *(unsigned char *)(v12 + 32) = 0;
      sub_100046B9C(&qword_10015F8D0);
      uint64_t v13 = *(void *)(type metadata accessor for PrimarySettingsListItemVisibilityRule() - 8);
      uint64_t v14 = *(void *)(v13 + 72);
      unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
      uint64_t v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_10011C370;
      unint64_t v17 = v16 + v15;
      *(void *)unint64_t v17 = swift_getKeyPath();
      *(unsigned char *)(v17 + 8) = 0;
      swift_storeEnumTagMultiPayload();
      id v18 = (unint64_t *)(v17 + v14);
      sub_100046B9C(&qword_10015F8F0);
      unint64_t v19 = 0x7474655369466957;
      unint64_t v20 = 0xEC00000073676E69;
      goto LABEL_12;
    case 0xAu:
      sub_100046B9C(&qword_10015F8C8);
      uint64_t v4 = swift_allocObject();
      long long v146 = xmmword_10011C360;
      *(_OWORD *)(v4 + 16) = xmmword_10011C360;
      *(unsigned char *)(v4 + 32) = 0;
      sub_100046B9C(&qword_10015F8D0);
      uint64_t v21 = *(void *)(type metadata accessor for PrimarySettingsListItemVisibilityRule() - 8);
      unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
      uint64_t v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = v146;
      unsigned __int8 v23 = (void *)(v7 + v22);
      sub_100046B9C(&qword_10015F8F0);
      void *v23 = 0xD000000000000020;
      v23[1] = 0x8000000100123900;
      static NSBundle.PreferencesPluginLocation.default.getter();
LABEL_6:
      swift_storeEnumTagMultiPayload();
      *(void *)(v4 + 40) = v7;
      unint64_t v24 = sub_100044E6C(v4);
      swift_setDeallocating();
      sub_100046B9C(&qword_10015F8E0);
      goto LABEL_24;
    case 0xBu:
      sub_100046B9C(&qword_10015F8C8);
      uint64_t v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_10011C360;
      *(unsigned char *)(v12 + 32) = 0;
      sub_100046B9C(&qword_10015F8D0);
      uint64_t v25 = *(void *)(type metadata accessor for PrimarySettingsListItemVisibilityRule() - 8);
      uint64_t v26 = *(void *)(v25 + 72);
      unint64_t v27 = (*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
      uint64_t v28 = 2 * v26;
      uint64_t v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_10011C380;
      unint64_t v29 = v16 + v27;
      *(void *)unint64_t v29 = swift_getKeyPath();
      *(unsigned char *)(v29 + 8) = 1;
      swift_storeEnumTagMultiPayload();
      uint64_t v30 = v29 + v26;
      *(void *)uint64_t v30 = swift_getKeyPath();
      *(unsigned char *)(v30 + 8) = 0;
      swift_storeEnumTagMultiPayload();
      id v18 = (unint64_t *)(v29 + v28);
      sub_100046B9C(&qword_10015F8F0);
      unint64_t v19 = 0xD000000000000011;
      uint64_t v31 = "BluetoothSettings";
      goto LABEL_9;
    case 0xCu:
      sub_100046B9C(&qword_10015F8C8);
      uint64_t v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_10011C360;
      *(unsigned char *)(v12 + 32) = 0;
      sub_100046B9C(&qword_10015F8D0);
      uint64_t v32 = *(void *)(type metadata accessor for PrimarySettingsListItemVisibilityRule() - 8);
      uint64_t v33 = *(void *)(v32 + 72);
      unint64_t v34 = (*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
      uint64_t v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_10011C390;
      uint64_t v35 = (unsigned char *)(v16 + v34);
      unsigned char *v35 = 1;
      swift_storeEnumTagMultiPayload();
      char v36 = &v35[v33];
      *(void *)char v36 = swift_getKeyPath();
      v36[8] = 1;
      swift_storeEnumTagMultiPayload();
      id v37 = &v35[2 * v33];
      *(void *)id v37 = swift_getKeyPath();
      v37[8] = 0;
      swift_storeEnumTagMultiPayload();
      id v18 = (unint64_t *)&v35[3 * v33];
      sub_100046B9C(&qword_10015F8F0);
      unint64_t v19 = 0xD000000000000010;
      uint64_t v31 = "SettingsCellular";
LABEL_9:
      unint64_t v20 = (unint64_t)(v31 - 32) | 0x8000000000000000;
      goto LABEL_12;
    case 0xDu:
      sub_100046B9C(&qword_10015F8C8);
      uint64_t v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_10011C360;
      *(unsigned char *)(v12 + 32) = 0;
      sub_100046B9C(&qword_10015F8D0);
      uint64_t v38 = *(void *)(type metadata accessor for PrimarySettingsListItemVisibilityRule() - 8);
      uint64_t v39 = *(void *)(v38 + 72);
      unint64_t v40 = (*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
      uint64_t v41 = 2 * v39;
      uint64_t v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_10011C380;
      uint64_t v42 = (unsigned char *)(v16 + v40);
      unsigned char *v42 = 1;
      swift_storeEnumTagMultiPayload();
      char v43 = &v42[v39];
      *(void *)char v43 = swift_getKeyPath();
      v43[8] = 0;
      swift_storeEnumTagMultiPayload();
      unint64_t v44 = &v42[v41];
      *(void *)unint64_t v44 = swift_getKeyPath();
      v44[8] = 0;
      goto LABEL_13;
    case 0xEu:
      sub_100046B9C(&qword_10015F8C8);
      uint64_t v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_10011C360;
      *(unsigned char *)(v12 + 32) = 0;
      sub_100046B9C(&qword_10015F8D0);
      uint64_t v45 = *(void *)(type metadata accessor for PrimarySettingsListItemVisibilityRule() - 8);
      uint64_t v46 = *(void *)(v45 + 72);
      unint64_t v47 = (*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80);
      uint64_t v48 = 2 * v46;
      uint64_t v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_10011C380;
      char v49 = (unsigned char *)(v16 + v47);
      *char v49 = 1;
      swift_storeEnumTagMultiPayload();
      uint64_t v50 = &v49[v46];
      *(void *)uint64_t v50 = swift_getKeyPath();
      v50[8] = 1;
      swift_storeEnumTagMultiPayload();
      id v18 = (unint64_t *)&v49[v48];
      sub_100046B9C(&qword_10015F8F0);
      unint64_t v19 = 0x65666572504E5056;
      unint64_t v20 = 0xEE007365636E6572;
LABEL_12:
      *id v18 = v19;
      v18[1] = v20;
      static NSBundle.PreferencesPluginLocation.default.getter();
LABEL_13:
      swift_storeEnumTagMultiPayload();
      *(void *)(v12 + 40) = v16;
      goto LABEL_23;
    case 0xFu:
      sub_100046B9C(&qword_10015F8C8);
      uint64_t v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_10011C360;
      *(unsigned char *)(v12 + 32) = 0;
      sub_100046B9C(&qword_10015F8D0);
      uint64_t v51 = *(void *)(type metadata accessor for PrimarySettingsListItemVisibilityRule() - 8);
      uint64_t v52 = *(void *)(v51 + 72);
      unint64_t v53 = (*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
      uint64_t v54 = swift_allocObject();
      *(_OWORD *)(v54 + 16) = xmmword_10011C370;
      unint64_t v55 = v54 + v53;
      *(void *)unint64_t v55 = swift_getKeyPath();
      *(unsigned char *)(v55 + 8) = 0;
      swift_storeEnumTagMultiPayload();
      uint64_t v56 = v55 + v52;
      *(void *)uint64_t v56 = swift_getKeyPath();
      *(unsigned char *)(v56 + 8) = 0;
      goto LABEL_22;
    case 0x10u:
      sub_100046B9C(&qword_10015F8C8);
      uint64_t inited = swift_initStackObject();
      long long v146 = xmmword_10011C360;
      *(_OWORD *)(inited + 16) = xmmword_10011C360;
      *(unsigned char *)(inited + 32) = 0;
      sub_100046B9C(&qword_10015F8D0);
      uint64_t v58 = *(void *)(type metadata accessor for PrimarySettingsListItemVisibilityRule() - 8);
      unint64_t v59 = (*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
      uint64_t v60 = swift_allocObject();
      *(_OWORD *)(v60 + 16) = v146;
      unint64_t v61 = v60 + v59;
      *(void *)(v61 + 24) = &type metadata for CoreTelephonyFeatureFlags;
      *(void *)(v61 + 32) = sub_10004FADC();
      *(unsigned char *)unint64_t v61 = 0;
      *(unsigned char *)(v61 + 40) = 0;
      goto LABEL_30;
    case 0x11u:
    case 0x13u:
      sub_100046B9C(&qword_10015F8C8);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10011C360;
      *(unsigned char *)(inited + 32) = 0;
      sub_100046B9C(&qword_10015F8D0);
      uint64_t v65 = *(void *)(type metadata accessor for PrimarySettingsListItemVisibilityRule() - 8);
      uint64_t v66 = *(void *)(v65 + 72);
      unint64_t v67 = (*(unsigned __int8 *)(v65 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80);
      uint64_t v60 = swift_allocObject();
      *(_OWORD *)(v60 + 16) = xmmword_10011C370;
      unint64_t v68 = v60 + v67;
      *(void *)unint64_t v68 = swift_getKeyPath();
      *(unsigned char *)(v68 + 8) = 1;
      swift_storeEnumTagMultiPayload();
      *(unsigned char *)(v68 + v66) = 1;
      goto LABEL_30;
    case 0x12u:
      sub_100046B9C(&qword_10015F8C8);
      uint64_t inited = swift_initStackObject();
      long long v146 = xmmword_10011C360;
      *(_OWORD *)(inited + 16) = xmmword_10011C360;
      *(unsigned char *)(inited + 32) = 0;
      sub_100046B9C(&qword_10015F8D0);
      uint64_t v62 = *(void *)(type metadata accessor for PrimarySettingsListItemVisibilityRule() - 8);
      unint64_t v63 = (*(unsigned __int8 *)(v62 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80);
      uint64_t v60 = swift_allocObject();
      *(_OWORD *)(v60 + 16) = v146;
      unint64_t v64 = v60 + v63;
      *(void *)unint64_t v64 = swift_getKeyPath();
      *(unsigned char *)(v64 + 8) = 1;
      goto LABEL_30;
    case 0x14u:
      sub_100046B9C(&qword_10015F8C8);
      uint64_t inited = swift_initStackObject();
      long long v146 = xmmword_10011C360;
      *(_OWORD *)(inited + 16) = xmmword_10011C360;
      *(unsigned char *)(inited + 32) = 0;
      sub_100046B9C(&qword_10015F8D0);
      uint64_t v69 = *(void *)(type metadata accessor for PrimarySettingsListItemVisibilityRule() - 8);
      unint64_t v70 = (*(unsigned __int8 *)(v69 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80);
      uint64_t v60 = swift_allocObject();
      *(_OWORD *)(v60 + 16) = v146;
      *(unsigned char *)(v60 + v70) = 1;
      goto LABEL_30;
    case 0x16u:
      sub_100046B9C(&qword_10015F8C8);
      uint64_t v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_10011C360;
      *(unsigned char *)(v12 + 32) = 0;
      sub_100046B9C(&qword_10015F8D0);
      uint64_t v71 = *(void *)(type metadata accessor for PrimarySettingsListItemVisibilityRule() - 8);
      uint64_t v72 = *(void *)(v71 + 72);
      unint64_t v73 = (*(unsigned __int8 *)(v71 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80);
      uint64_t v54 = swift_allocObject();
      *(_OWORD *)(v54 + 16) = xmmword_10011C370;
      unint64_t v74 = v54 + v73;
      *(void *)unint64_t v74 = swift_getKeyPath();
      *(unsigned char *)(v74 + 8) = 1;
      swift_storeEnumTagMultiPayload();
      *(unsigned char *)(v74 + v72) = 1;
      goto LABEL_22;
    case 0x17u:
      sub_100046B9C(&qword_10015F8C8);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10011C360;
      *(unsigned char *)(inited + 32) = 0;
      sub_100046B9C(&qword_10015F8D0);
      uint64_t v75 = *(void *)(type metadata accessor for PrimarySettingsListItemVisibilityRule() - 8);
      uint64_t v76 = *(void *)(v75 + 72);
      unint64_t v77 = (*(unsigned __int8 *)(v75 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v75 + 80);
      uint64_t v78 = swift_allocObject();
      *(_OWORD *)(v78 + 16) = xmmword_10011C370;
      unint64_t v79 = v78 + v77;
      *(void *)unint64_t v79 = swift_getKeyPath();
      *(unsigned char *)(v79 + 8) = 0;
      swift_storeEnumTagMultiPayload();
      uint64_t v80 = (unint64_t *)(v79 + v76);
      sub_100046B9C(&qword_10015F8F0);
      unint64_t v81 = 0xD000000000000014;
      uint64_t v82 = "ActionButtonSettings";
      goto LABEL_33;
    case 0x18u:
      sub_100046B9C(&qword_10015F8C8);
      uint64_t v12 = swift_allocObject();
      long long v146 = xmmword_10011C360;
      *(_OWORD *)(v12 + 16) = xmmword_10011C360;
      *(unsigned char *)(v12 + 32) = 0;
      sub_100046B9C(&qword_10015F8D0);
      uint64_t v83 = *(void *)(type metadata accessor for PrimarySettingsListItemVisibilityRule() - 8);
      unint64_t v84 = (*(unsigned __int8 *)(v83 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v83 + 80);
      uint64_t v54 = swift_allocObject();
      *(_OWORD *)(v54 + 16) = v146;
      unint64_t v85 = v54 + v84;
      *(void *)unint64_t v85 = swift_getKeyPath();
      *(unsigned char *)(v85 + 8) = 1;
LABEL_22:
      swift_storeEnumTagMultiPayload();
      *(void *)(v12 + 40) = v54;
LABEL_23:
      unint64_t v24 = sub_100044E6C(v12);
      swift_setDeallocating();
      sub_100046B9C(&qword_10015F8E0);
LABEL_24:
      swift_arrayDestroy();
      swift_deallocClassInstance();
      return v24;
    case 0x1Au:
      sub_100046B9C(&qword_10015F8C8);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10011C360;
      *(unsigned char *)(inited + 32) = 0;
      sub_100046B9C(&qword_10015F8D0);
      uint64_t v86 = *(void *)(type metadata accessor for PrimarySettingsListItemVisibilityRule() - 8);
      uint64_t v87 = *(void *)(v86 + 72);
      unint64_t v88 = (*(unsigned __int8 *)(v86 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v86 + 80);
      uint64_t v78 = swift_allocObject();
      *(_OWORD *)(v78 + 16) = xmmword_10011C380;
      unint64_t v89 = v78 + v88;
      *(void *)unint64_t v89 = swift_getKeyPath();
      *(unsigned char *)(v89 + 8) = 0;
      swift_storeEnumTagMultiPayload();
      *(unsigned char *)(v89 + v87) = 1;
      swift_storeEnumTagMultiPayload();
      uint64_t v80 = (unint64_t *)(v89 + 2 * v87);
      sub_100046B9C(&qword_10015F8F0);
      unint64_t v81 = 0xD00000000000001FLL;
      uint64_t v82 = "MultitaskingAndGesturesSettings";
      goto LABEL_33;
    case 0x1Bu:
    case 0x1Eu:
    case 0x20u:
      sub_100046B9C(&qword_10015F8C8);
      uint64_t inited = swift_initStackObject();
      long long v146 = xmmword_10011C360;
      *(_OWORD *)(inited + 16) = xmmword_10011C360;
      *(unsigned char *)(inited + 32) = 0;
      sub_100046B9C(&qword_10015F8D0);
      uint64_t v104 = *(void *)(type metadata accessor for PrimarySettingsListItemVisibilityRule() - 8);
      unint64_t v105 = (*(unsigned __int8 *)(v104 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v104 + 80);
      uint64_t v60 = swift_allocObject();
      *(_OWORD *)(v60 + 16) = v146;
      unint64_t v106 = v60 + v105;
      *(void *)unint64_t v106 = swift_getKeyPath();
      *(unsigned char *)(v106 + 8) = 0;
      goto LABEL_30;
    case 0x1Cu:
      sub_100046B9C(&qword_10015F8C8);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10011C360;
      *(unsigned char *)(inited + 32) = 0;
      sub_100046B9C(&qword_10015F8D0);
      uint64_t v90 = *(void *)(type metadata accessor for PrimarySettingsListItemVisibilityRule() - 8);
      uint64_t v91 = *(void *)(v90 + 72);
      unint64_t v92 = (*(unsigned __int8 *)(v90 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v90 + 80);
      uint64_t v78 = swift_allocObject();
      *(_OWORD *)(v78 + 16) = xmmword_10011C380;
      unint64_t v93 = v78 + v92;
      *(void *)unint64_t v93 = swift_getKeyPath();
      *(unsigned char *)(v93 + 8) = 1;
      swift_storeEnumTagMultiPayload();
      *(unsigned char *)(v93 + v91) = 1;
      swift_storeEnumTagMultiPayload();
      unint64_t v94 = (uint64_t *)(v93 + 2 * v91);
      *unint64_t v94 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      v94[1] = v95;
      goto LABEL_45;
    case 0x1Du:
      sub_100046B9C(&qword_10015F8C8);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10011C360;
      *(unsigned char *)(inited + 32) = 0;
      sub_100046B9C(&qword_10015F8D0);
      uint64_t v96 = *(void *)(type metadata accessor for PrimarySettingsListItemVisibilityRule() - 8);
      uint64_t v97 = *(void *)(v96 + 72);
      unint64_t v98 = (*(unsigned __int8 *)(v96 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v96 + 80);
      uint64_t v78 = swift_allocObject();
      *(_OWORD *)(v78 + 16) = xmmword_10011C370;
      unint64_t v99 = v78 + v98;
      *(void *)unint64_t v99 = swift_getKeyPath();
      *(unsigned char *)(v99 + 8) = 1;
      swift_storeEnumTagMultiPayload();
      uint64_t v80 = (unint64_t *)(v99 + v97);
      sub_100046B9C(&qword_10015F8F0);
      unint64_t v81 = 0x53746E6569626D41;
      unint64_t v100 = 0xEF73676E69747465;
      goto LABEL_34;
    case 0x1Fu:
      sub_100046B9C(&qword_10015F8C8);
      uint64_t inited = swift_initStackObject();
      long long v146 = xmmword_10011C360;
      *(_OWORD *)(inited + 16) = xmmword_10011C360;
      *(unsigned char *)(inited + 32) = 0;
      sub_100046B9C(&qword_10015F8D0);
      uint64_t v101 = *(void *)(type metadata accessor for PrimarySettingsListItemVisibilityRule() - 8);
      unint64_t v102 = (*(unsigned __int8 *)(v101 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v101 + 80);
      uint64_t v60 = swift_allocObject();
      *(_OWORD *)(v60 + 16) = v146;
      unint64_t v103 = (uint64_t *)(v60 + v102);
      goto LABEL_39;
    case 0x21u:
      sub_100046B9C(&qword_10015F8C8);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10011C360;
      *(unsigned char *)(inited + 32) = 0;
      sub_100046B9C(&qword_10015F8D0);
      uint64_t v107 = *(void *)(type metadata accessor for PrimarySettingsListItemVisibilityRule() - 8);
      uint64_t v108 = *(void *)(v107 + 72);
      unint64_t v109 = (*(unsigned __int8 *)(v107 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v107 + 80);
      uint64_t v78 = swift_allocObject();
      *(_OWORD *)(v78 + 16) = xmmword_10011C390;
      unint64_t v110 = v78 + v109;
      *(void *)unint64_t v110 = swift_getKeyPath();
      *(unsigned char *)(v110 + 8) = 1;
      swift_storeEnumTagMultiPayload();
      *(unsigned char *)(v110 + v108) = 1;
      swift_storeEnumTagMultiPayload();
      uint64_t v111 = (uint64_t *)(v110 + 2 * v108);
      *uint64_t v111 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      v111[1] = v112;
      swift_storeEnumTagMultiPayload();
      uint64_t v113 = (BOOL *)(v110 + 3 * v108);
      *uint64_t v113 = sub_10004FB30();
      v113[1] = 1;
      goto LABEL_45;
    case 0x23u:
      sub_100046B9C(&qword_10015F8C8);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10011C360;
      *(unsigned char *)(inited + 32) = 0;
      sub_100046B9C(&qword_10015F8D0);
      uint64_t v114 = *(void *)(type metadata accessor for PrimarySettingsListItemVisibilityRule() - 8);
      uint64_t v115 = *(void *)(v114 + 72);
      unint64_t v116 = (*(unsigned __int8 *)(v114 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v114 + 80);
      uint64_t v78 = swift_allocObject();
      *(_OWORD *)(v78 + 16) = xmmword_10011C370;
      unint64_t v117 = v78 + v116;
      *(void *)unint64_t v117 = swift_getKeyPath();
      *(unsigned char *)(v117 + 8) = 1;
      swift_storeEnumTagMultiPayload();
      uint64_t v80 = (unint64_t *)(v117 + v115);
      sub_100046B9C(&qword_10015F8F0);
      unint64_t v81 = 0xD00000000000001ELL;
      uint64_t v82 = "ExposureNotificationSettingsUI";
LABEL_33:
      unint64_t v100 = (unint64_t)(v82 - 32) | 0x8000000000000000;
LABEL_34:
      unint64_t *v80 = v81;
      v80[1] = v100;
      static NSBundle.PreferencesPluginLocation.default.getter();
      goto LABEL_45;
    case 0x24u:
      sub_100046B9C(&qword_10015F8C8);
      uint64_t inited = swift_initStackObject();
      long long v146 = xmmword_10011C360;
      *(_OWORD *)(inited + 16) = xmmword_10011C360;
      *(unsigned char *)(inited + 32) = 0;
      sub_100046B9C(&qword_10015F8D0);
      uint64_t v118 = *(void *)(type metadata accessor for PrimarySettingsListItemVisibilityRule() - 8);
      unint64_t v119 = (*(unsigned __int8 *)(v118 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v118 + 80);
      uint64_t v60 = swift_allocObject();
      *(_OWORD *)(v60 + 16) = v146;
      long long v120 = (char *)(v60 + v119);
      sub_100046B9C(&qword_10015F8F0);
      strcpy(v120, "BatteryUsageUI");
      v120[15] = -18;
      static NSBundle.PreferencesPluginLocation.default.getter();
      goto LABEL_30;
    case 0x29u:
      sub_100046B9C(&qword_10015F8C8);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10011C360;
      *(unsigned char *)(inited + 32) = 0;
      sub_100046B9C(&qword_10015F8D0);
      uint64_t v121 = *(void *)(type metadata accessor for PrimarySettingsListItemVisibilityRule() - 8);
      uint64_t v122 = *(void *)(v121 + 72);
      unint64_t v123 = (*(unsigned __int8 *)(v121 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v121 + 80);
      uint64_t v78 = swift_allocObject();
      *(_OWORD *)(v78 + 16) = xmmword_10011C380;
      long long v124 = (unsigned char *)(v78 + v123);
      *long long v124 = 1;
      swift_storeEnumTagMultiPayload();
      uint64_t v125 = &v124[v122];
      *uint64_t v125 = 0xD000000000000010;
      v125[1] = 0x8000000100123860;
      swift_storeEnumTagMultiPayload();
      unint64_t v126 = (uint64_t *)&v124[2 * v122];
      *unint64_t v126 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      v126[1] = v127;
      goto LABEL_45;
    case 0x2Au:
      sub_100046B9C(&qword_10015F8C8);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10011C360;
      *(unsigned char *)(inited + 32) = 0;
      sub_100046B9C(&qword_10015F8D0);
      uint64_t v128 = *(void *)(type metadata accessor for PrimarySettingsListItemVisibilityRule() - 8);
      uint64_t v129 = *(void *)(v128 + 72);
      unint64_t v130 = (*(unsigned __int8 *)(v128 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v128 + 80);
      uint64_t v60 = swift_allocObject();
      *(_OWORD *)(v60 + 16) = xmmword_10011C370;
      uint64_t v131 = (unsigned char *)(v60 + v130);
      *uint64_t v131 = 1;
      swift_storeEnumTagMultiPayload();
      unint64_t v103 = (uint64_t *)&v131[v129];
LABEL_39:
      *unint64_t v103 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      v103[1] = v132;
      goto LABEL_30;
    case 0x2Cu:
      sub_100046B9C(&qword_10015F8C8);
      uint64_t inited = swift_initStackObject();
      long long v146 = xmmword_10011C360;
      *(_OWORD *)(inited + 16) = xmmword_10011C360;
      *(unsigned char *)(inited + 32) = 0;
      sub_100046B9C(&qword_10015F8D0);
      uint64_t v133 = *(void *)(type metadata accessor for PrimarySettingsListItemVisibilityRule() - 8);
      unint64_t v134 = (*(unsigned __int8 *)(v133 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v133 + 80);
      uint64_t v60 = swift_allocObject();
      *(_OWORD *)(v60 + 16) = v146;
      unint64_t v135 = v60 + v134;
      *(void *)(v135 + 24) = &type metadata for ForSettingsAppOnlyDoNotUseGenerallyFeatureFlags;
      *(void *)(v135 + 32) = sub_10004E2E0();
      *(unsigned char *)unint64_t v135 = 0;
      *(unsigned char *)(v135 + 40) = 1;
LABEL_30:
      swift_storeEnumTagMultiPayload();
      *(void *)(inited + 40) = v60;
      goto LABEL_46;
    case 0x2Du:
      sub_100046B9C(&qword_10015F8C8);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10011C360;
      *(unsigned char *)(inited + 32) = 0;
      sub_100046B9C(&qword_10015F8D0);
      uint64_t v136 = *(void *)(type metadata accessor for PrimarySettingsListItemVisibilityRule() - 8);
      uint64_t v137 = *(void *)(v136 + 72);
      unint64_t v138 = (*(unsigned __int8 *)(v136 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v136 + 80);
      uint64_t v78 = swift_allocObject();
      *(_OWORD *)(v78 + 16) = xmmword_10011C370;
      uint64_t v139 = (void *)(v78 + v138);
      sub_100046B9C(&qword_10015F8F0);
      void *v139 = 0xD000000000000010;
      v139[1] = 0x8000000100123800;
      static NSBundle.PreferencesPluginLocation.appleInternal.getter();
      swift_storeEnumTagMultiPayload();
      uint64_t v140 = (char *)v139 + v137;
      *((void *)v140 + 3) = &type metadata for ForSettingsAppOnlyDoNotUseGenerallyFeatureFlags;
      *((void *)v140 + 4) = sub_10004E2E0();
      *uint64_t v140 = 1;
      goto LABEL_44;
    case 0x2Eu:
      sub_100046B9C(&qword_10015F8C8);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10011C360;
      *(unsigned char *)(inited + 32) = 0;
      sub_100046B9C(&qword_10015F8D0);
      uint64_t v141 = *(void *)(type metadata accessor for PrimarySettingsListItemVisibilityRule() - 8);
      uint64_t v142 = *(void *)(v141 + 72);
      unint64_t v143 = (*(unsigned __int8 *)(v141 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v141 + 80);
      uint64_t v78 = swift_allocObject();
      *(_OWORD *)(v78 + 16) = xmmword_10011C370;
      os_log_type_t v144 = (void *)(v78 + v143);
      sub_100046B9C(&qword_10015F8F0);
      *os_log_type_t v144 = 0xD000000000000011;
      v144[1] = 0x8000000100123820;
      static NSBundle.PreferencesPluginLocation.appleInternal.getter();
      swift_storeEnumTagMultiPayload();
      uint64_t v140 = (char *)v144 + v142;
      *((void *)v140 + 3) = &type metadata for ForSettingsAppOnlyDoNotUseGenerallyFeatureFlags;
      *((void *)v140 + 4) = sub_10004E2E0();
      *uint64_t v140 = 2;
LABEL_44:
      v140[40] = 1;
LABEL_45:
      swift_storeEnumTagMultiPayload();
      *(void *)(inited + 40) = v78;
LABEL_46:
      unint64_t v24 = sub_100044E6C(inited);
      swift_setDeallocating();
      sub_100046B9C(&qword_10015F8E0);
      swift_arrayDestroy();
      break;
    default:
      unint64_t v24 = sub_100044E6C((uint64_t)_swiftEmptyArrayStorage);
      sub_100045F84((uint64_t)v3);
      break;
  }
  return v24;
}

unint64_t sub_100044E6C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  sub_100046B9C(&qword_10015F8F8);
  uint64_t v3 = (void *)static _DictionaryStorage.allocate(capacity:)();
  char v4 = *(unsigned char *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  unint64_t result = sub_100044F70(v4);
  if (v7)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  uint64_t v8 = (void *)(a1 + 56);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v3[6] + result) = v4;
    *(void *)(v3[7] + 8 * result) = v5;
    uint64_t v9 = v3[2];
    BOOL v10 = __OFADD__(v9, 1);
    uint64_t v11 = v9 + 1;
    if (v10) {
      break;
    }
    v3[2] = v11;
    if (!--v1) {
      goto LABEL_8;
    }
    uint64_t v12 = v8 + 2;
    char v4 = *((unsigned char *)v8 - 8);
    uint64_t v13 = *v8;
    swift_bridgeObjectRetain();
    unint64_t result = sub_100044F70(v4);
    uint64_t v8 = v12;
    uint64_t v5 = v13;
    if (v14) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_100044F70(char a1)
{
  char v2 = a1 & 1;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a1 & 1);
  Swift::Int v3 = Hasher._finalize()();

  return sub_100044FE0(v2, v3);
}

unint64_t sub_100044FE0(char a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (((((a1 & 1) == 0) ^ *(unsigned __int8 *)(v7 + result)) & 1) == 0)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if ((((a1 & 1) == 0) ^ *(unsigned char *)(v7 + result))) {
          break;
        }
      }
    }
  }
  return result;
}

uint64_t sub_10004509C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PrimarySettingsListItemVisibilityRule();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

char *sub_100045100(char *a1, char *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v6;
      swift_bridgeObjectRetain();
      uint64_t v7 = *(int *)(sub_100046B9C(&qword_10015F8F0) + 48);
      uint64_t v8 = &a1[v7];
      uint64_t v9 = &a2[v7];
      uint64_t v10 = type metadata accessor for NSBundle.PreferencesPluginLocation();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
      goto LABEL_8;
    case 1u:
    case 2u:
      uint64_t v11 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v11;
      swift_bridgeObjectRetain();
      goto LABEL_8;
    case 3u:
      *(void *)a1 = *(void *)a2;
      a1[8] = a2[8];
      swift_bridgeObjectRetain();
      goto LABEL_8;
    case 4u:
      *(void *)a1 = *(void *)a2;
      a1[8] = a2[8];
      swift_retain();
      goto LABEL_8;
    case 5u:
      long long v12 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v12;
      (**(void (***)(void *, const void *))(v12 - 8))(a1, a2);
      a1[40] = a2[40];
LABEL_8:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

uint64_t sub_1000452D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100072B90);
}

uint64_t sub_1000452E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v37 = a1;
  uint64_t v38 = a3;
  uint64_t v36 = a4;
  uint64_t v7 = type metadata accessor for OSSignpostID();
  uint64_t v39 = *(void *)(v7 - 8);
  uint64_t v40 = v7;
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(a2 - 8);
  __chkstk_darwin(v8);
  uint64_t v13 = (char *)v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for OSSignposter();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  unint64_t v17 = (char *)v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10015F180 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_1000477B0(v14, (uint64_t)qword_10016B070);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v18, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v5, a2);
  static OSSignpostID.exclusive.getter();
  uint64_t v35 = v15;
  uint64_t v19 = swift_slowAlloc();
  v32[0] = v10;
  uint64_t v33 = v17;
  unint64_t v20 = (uint8_t *)v19;
  uint64_t v21 = swift_slowAlloc();
  uint64_t v34 = v14;
  *(_DWORD *)unint64_t v20 = 136315138;
  uint64_t v42 = v21;
  v32[1] = v5;
  uint64_t v22 = v38;
  uint64_t v23 = (*(uint64_t (**)(uint64_t, uint64_t))(v38 + 16))(a2, v38);
  uint64_t v41 = sub_100042948(v23, v24, &v42);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, a2);
  uint64_t v25 = OSSignposter.logHandle.getter();
  os_signpost_type_t v26 = static os_signpost_type_t.begin.getter();
  uint64_t v27 = v32[0];
  os_signpost_id_t v28 = OSSignpostID.rawValue.getter();
  _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v25, v26, v28, "PrimarySettingsListItemModelProviding.produceListItemModel(with:)", "Item Provider: %s", v20, 0xCu);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 32))(v37, a2, v22);
  os_signpost_type_t v29 = static os_signpost_type_t.end.getter();
  os_signpost_id_t v30 = OSSignpostID.rawValue.getter();
  _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v25, v29, v30, "PrimarySettingsListItemModelProviding.produceListItemModel(with:)", "Item Provider: %s", v20, 0xCu);

  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();
  (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v27, v40);
  return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v33, v34);
}

uint64_t sub_1000456F8(uint64_t a1, uint64_t a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v8 = type metadata accessor for FamilyRowStatus();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      uint64_t v9 = *(int *)(type metadata accessor for PrimarySettingsListFamilyLinkModel() + 20);
      uint64_t v10 = (void *)(a1 + v9);
      uint64_t v11 = (void *)(a2 + v9);
      uint64_t v12 = v11[1];
      *uint64_t v10 = *v11;
      v10[1] = v12;
      swift_bridgeObjectRetain();
      break;
    case 2u:
      id v13 = *(id *)a2;
      uint64_t v14 = *(void *)(a2 + 8);
      char v15 = *(unsigned char *)(a2 + 16);
      sub_100047728(*(id *)a2, v14, v15);
      *(void *)a1 = v13;
      *(void *)(a1 + 8) = v14;
      *(unsigned char *)(a1 + 16) = v15;
      uint64_t v16 = *(void *)(a2 + 32);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = v16;
      *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
      uint64_t v17 = *(void *)(a2 + 48);
      uint64_t v18 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = v17;
      *(void *)(a1 + 56) = v18;
      swift_bridgeObjectRetain();
      swift_retain();
      break;
    case 3u:
      uint64_t v19 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v19;
      *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
      swift_bridgeObjectRetain();
      break;
    case 4u:
      uint64_t v20 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v20;
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
      swift_bridgeObjectRetain();
      break;
    case 5u:
      id v21 = *(id *)a2;
      uint64_t v22 = *(void *)(a2 + 8);
      char v23 = *(unsigned char *)(a2 + 16);
      sub_100047728(*(id *)a2, v22, v23);
      *(void *)a1 = v21;
      *(void *)(a1 + 8) = v22;
      *(unsigned char *)(a1 + 16) = v23;
      uint64_t v24 = *(void *)(a2 + 32);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = v24;
      *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
      swift_bridgeObjectRetain();
      break;
    case 6u:
      id v25 = *(id *)a2;
      uint64_t v26 = *(void *)(a2 + 8);
      char v27 = *(unsigned char *)(a2 + 16);
      sub_100047728(*(id *)a2, v26, v27);
      *(void *)a1 = v25;
      *(void *)(a1 + 8) = v26;
      *(unsigned char *)(a1 + 16) = v27;
      uint64_t v28 = *(void *)(a2 + 32);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = v28;
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
      swift_bridgeObjectRetain();
      break;
    case 7u:
    case 8u:
      id v29 = *(id *)a2;
      uint64_t v30 = *(void *)(a2 + 8);
      char v31 = *(unsigned char *)(a2 + 16);
      sub_100047728(*(id *)a2, v30, v31);
      *(void *)a1 = v29;
      *(void *)(a1 + 8) = v30;
      *(unsigned char *)(a1 + 16) = v31;
      uint64_t v32 = *(void *)(a2 + 32);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = v32;
      uint64_t v33 = *(void *)(a2 + 48);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = v33;
      *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      break;
    case 9u:
      int v34 = *(unsigned __int8 *)(a2 + 16);
      if (v34 == 255)
      {
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
      }
      else
      {
        id v35 = *(id *)a2;
        uint64_t v36 = *(void *)(a2 + 8);
        sub_100047728(*(id *)a2, v36, *(unsigned char *)(a2 + 16));
        *(void *)a1 = v35;
        *(void *)(a1 + 8) = v36;
        *(unsigned char *)(a1 + 16) = v34;
      }
      uint64_t v41 = *(void *)(a2 + 32);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = v41;
      uint64_t v42 = *(void *)(a2 + 40);
      uint64_t v43 = *(void *)(a2 + 48);
      *(void *)(a1 + 40) = v42;
      *(void *)(a1 + 48) = v43;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      break;
    case 0xAu:
      int v37 = *(unsigned __int8 *)(a2 + 16);
      if (v37 == 255)
      {
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
      }
      else
      {
        id v38 = *(id *)a2;
        uint64_t v39 = *(void *)(a2 + 8);
        sub_100047728(*(id *)a2, v39, *(unsigned char *)(a2 + 16));
        *(void *)a1 = v38;
        *(void *)(a1 + 8) = v39;
        *(unsigned char *)(a1 + 16) = v37;
      }
      uint64_t v44 = *(void *)(a2 + 32);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = v44;
      *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
      swift_bridgeObjectRetain();
      break;
    default:
      uint64_t v4 = *(void *)(a2 + 8);
      if (v4)
      {
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v4;
        uint64_t v5 = *(void *)(a2 + 24);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = v5;
        *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
        uint64_t v6 = *(void **)(a2 + 40);
        *(void *)(a1 + 40) = v6;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v7 = v6;
      }
      else
      {
        long long v40 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v40;
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      }
      *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

Swift::Int sub_100045AD8()
{
  return Hasher._finalize()();
}

void sub_100045B14()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for FLFollowUpInformation();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for PrimarySettingsListItemIdentifier();
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100046BE0(v1, (uint64_t)v8);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
      Swift::UInt v9 = 3;
      goto LABEL_4;
    case 2u:
      sub_100046B9C(&qword_10015F7F8);
      (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
      Hasher._combine(_:)(4uLL);
      sub_100069358(&qword_10015F8C0, (void (*)(uint64_t))&type metadata accessor for FLFollowUpInformation);
      dispatch thunk of Hashable.hash(into:)();
      String.hash(into:)();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      swift_bridgeObjectRelease();
      return;
    case 3u:
      Swift::UInt v10 = 5;
      goto LABEL_9;
    case 4u:
      Swift::UInt v10 = 6;
      goto LABEL_9;
    case 5u:
      Swift::UInt v10 = 7;
LABEL_9:
      Hasher._combine(_:)(v10);
      String.hash(into:)();
      swift_bridgeObjectRelease();
      return;
    case 6u:
      Swift::UInt v11 = 0;
      goto LABEL_56;
    case 7u:
      Swift::UInt v11 = 1;
      goto LABEL_56;
    case 8u:
      Swift::UInt v11 = 8;
      goto LABEL_56;
    case 9u:
      Swift::UInt v11 = 9;
      goto LABEL_56;
    case 0xAu:
      Swift::UInt v11 = 10;
      goto LABEL_56;
    case 0xBu:
      Swift::UInt v11 = 11;
      goto LABEL_56;
    case 0xCu:
      Swift::UInt v11 = 12;
      goto LABEL_56;
    case 0xDu:
      Swift::UInt v11 = 13;
      goto LABEL_56;
    case 0xEu:
      Swift::UInt v11 = 14;
      goto LABEL_56;
    case 0xFu:
      Swift::UInt v11 = 15;
      goto LABEL_56;
    case 0x10u:
      Swift::UInt v11 = 16;
      goto LABEL_56;
    case 0x11u:
      Swift::UInt v11 = 17;
      goto LABEL_56;
    case 0x12u:
      Swift::UInt v11 = 18;
      goto LABEL_56;
    case 0x13u:
      Swift::UInt v11 = 19;
      goto LABEL_56;
    case 0x14u:
      Swift::UInt v11 = 20;
      goto LABEL_56;
    case 0x15u:
      Swift::UInt v11 = 21;
      goto LABEL_56;
    case 0x16u:
      Swift::UInt v11 = 22;
      goto LABEL_56;
    case 0x17u:
      Swift::UInt v11 = 23;
      goto LABEL_56;
    case 0x18u:
      Swift::UInt v11 = 24;
      goto LABEL_56;
    case 0x19u:
      Swift::UInt v11 = 25;
      goto LABEL_56;
    case 0x1Au:
      Swift::UInt v11 = 26;
      goto LABEL_56;
    case 0x1Bu:
      Swift::UInt v11 = 27;
      goto LABEL_56;
    case 0x1Cu:
      Swift::UInt v11 = 28;
      goto LABEL_56;
    case 0x1Du:
      Swift::UInt v11 = 29;
      goto LABEL_56;
    case 0x1Eu:
      Swift::UInt v11 = 30;
      goto LABEL_56;
    case 0x1Fu:
      Swift::UInt v11 = 31;
      goto LABEL_56;
    case 0x20u:
      Swift::UInt v11 = 32;
      goto LABEL_56;
    case 0x21u:
      Swift::UInt v11 = 33;
      goto LABEL_56;
    case 0x22u:
      Swift::UInt v11 = 34;
      goto LABEL_56;
    case 0x23u:
      Swift::UInt v11 = 35;
      goto LABEL_56;
    case 0x24u:
      Swift::UInt v11 = 36;
      goto LABEL_56;
    case 0x25u:
      Swift::UInt v11 = 37;
      goto LABEL_56;
    case 0x26u:
      Swift::UInt v11 = 38;
      goto LABEL_56;
    case 0x27u:
      Swift::UInt v11 = 39;
      goto LABEL_56;
    case 0x28u:
      Swift::UInt v11 = 40;
      goto LABEL_56;
    case 0x29u:
      Swift::UInt v11 = 41;
      goto LABEL_56;
    case 0x2Au:
      Swift::UInt v11 = 42;
      goto LABEL_56;
    case 0x2Bu:
      Swift::UInt v11 = 43;
      goto LABEL_56;
    case 0x2Cu:
      Swift::UInt v11 = 44;
      goto LABEL_56;
    case 0x2Du:
      Swift::UInt v11 = 45;
      goto LABEL_56;
    case 0x2Eu:
      Swift::UInt v11 = 46;
      goto LABEL_56;
    case 0x2Fu:
      Swift::UInt v11 = 47;
      goto LABEL_56;
    case 0x30u:
      Swift::UInt v11 = 48;
      goto LABEL_56;
    case 0x31u:
      Swift::UInt v11 = 49;
      goto LABEL_56;
    case 0x32u:
      Swift::UInt v11 = 50;
      goto LABEL_56;
    case 0x33u:
      Swift::UInt v11 = 51;
LABEL_56:
      Hasher._combine(_:)(v11);
      break;
    default:
      (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
      Swift::UInt v9 = 2;
LABEL_4:
      Hasher._combine(_:)(v9);
      sub_100069358(&qword_10015F8C0, (void (*)(uint64_t))&type metadata accessor for FLFollowUpInformation);
      dispatch thunk of Hashable.hash(into:)();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      break;
  }
}

uint64_t sub_100045F84(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PrimarySettingsListItemIdentifier();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100045FE0(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 1:
      uint64_t v3 = type metadata accessor for FLFollowUpInformation();
      uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
      uint64_t result = v4(a1, v3);
      break;
    case 2:
      uint64_t v5 = type metadata accessor for FLFollowUpInformation();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
      sub_100046B9C(&qword_10015F7F8);
      goto LABEL_6;
    case 3:
    case 4:
    case 5:
LABEL_6:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000460F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FLFollowUpInformation();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v71 = v4;
  uint64_t v72 = v5;
  uint64_t v6 = __chkstk_darwin(v4);
  unint64_t v70 = (char *)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v69 = (char *)&v67 - v9;
  __chkstk_darwin(v8);
  unint64_t v68 = (char *)&v67 - v10;
  uint64_t v11 = type metadata accessor for PrimarySettingsListItemIdentifier();
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v14 = (uint64_t *)((char *)&v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v17 = (uint64_t *)((char *)&v67 - v16);
  uint64_t v18 = __chkstk_darwin(v15);
  uint64_t v20 = (uint64_t *)((char *)&v67 - v19);
  uint64_t v21 = __chkstk_darwin(v18);
  char v23 = (char *)&v67 - v22;
  uint64_t v24 = __chkstk_darwin(v21);
  uint64_t v26 = (char *)&v67 - v25;
  __chkstk_darwin(v24);
  uint64_t v28 = (char *)&v67 - v27;
  uint64_t v29 = sub_100046B9C(&qword_10015F8B8);
  uint64_t v30 = __chkstk_darwin(v29 - 8);
  uint64_t v32 = (char *)&v67 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = &v32[*(int *)(v30 + 56)];
  uint64_t v34 = a1;
  id v35 = v33;
  sub_100046BE0(v34, (uint64_t)v32);
  sub_100046BE0(a2, (uint64_t)v35);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_100046BE0((uint64_t)v32, (uint64_t)v26);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v39 = v71;
        uint64_t v38 = v72;
        long long v40 = v69;
        (*(void (**)(char *, void *, uint64_t))(v72 + 32))(v69, v35, v71);
        char v41 = static FLFollowUpInformation.== infix(_:_:)();
        uint64_t v42 = *(void (**)(char *, uint64_t))(v38 + 8);
        v42(v40, v39);
        v42(v26, v39);
        goto LABEL_131;
      }
      (*(void (**)(char *, uint64_t))(v72 + 8))(v26, v71);
      goto LABEL_127;
    case 2u:
      sub_100046BE0((uint64_t)v32, (uint64_t)v23);
      uint64_t v43 = *(int *)(sub_100046B9C(&qword_10015F7F8) + 48);
      uint64_t v45 = *(char **)&v23[v43];
      uint64_t v44 = *(void *)&v23[v43 + 8];
      if (swift_getEnumCaseMultiPayload() != 2)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v72 + 8))(v23, v71);
        goto LABEL_127;
      }
      uint64_t v46 = *(char **)((char *)v35 + v43);
      uint64_t v47 = *(void *)((char *)v35 + v43 + 8);
      uint64_t v69 = v46;
      uint64_t v48 = v72;
      char v49 = v70;
      uint64_t v50 = v35;
      uint64_t v51 = v71;
      (*(void (**)(char *, void *, uint64_t))(v72 + 32))(v70, v50, v71);
      char v52 = static FLFollowUpInformation.== infix(_:_:)();
      unint64_t v53 = *(void (**)(char *, uint64_t))(v48 + 8);
      v53(v23, v51);
      if ((v52 & 1) == 0)
      {
        v53(v49, v51);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_133;
      }
      if (v45 == v69 && v44 == v47)
      {
        swift_bridgeObjectRelease_n();
        v53(v70, v51);
        goto LABEL_124;
      }
      char v55 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v53(v70, v51);
      if (v55) {
        goto LABEL_124;
      }
      goto LABEL_133;
    case 3u:
      sub_100046BE0((uint64_t)v32, (uint64_t)v20);
      uint64_t v37 = *v20;
      uint64_t v36 = v20[1];
      if (swift_getEnumCaseMultiPayload() == 3) {
        goto LABEL_57;
      }
      goto LABEL_70;
    case 4u:
      sub_100046BE0((uint64_t)v32, (uint64_t)v17);
      uint64_t v37 = *v17;
      uint64_t v36 = v17[1];
      if (swift_getEnumCaseMultiPayload() != 4) {
        goto LABEL_70;
      }
LABEL_57:
      if (v37 == *v35 && v36 == v35[1]) {
        goto LABEL_123;
      }
      char v57 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v57 & 1) == 0) {
        goto LABEL_133;
      }
      goto LABEL_124;
    case 5u:
      sub_100046BE0((uint64_t)v32, (uint64_t)v14);
      uint64_t v59 = *v14;
      uint64_t v58 = v14[1];
      if (swift_getEnumCaseMultiPayload() != 5)
      {
LABEL_70:
        swift_bridgeObjectRelease();
        goto LABEL_127;
      }
      if (v59 == *v35 && v58 == v35[1])
      {
LABEL_123:
        swift_bridgeObjectRelease_n();
        goto LABEL_124;
      }
      char v61 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v61)
      {
LABEL_124:
        sub_100045F84((uint64_t)v32);
        char v41 = 1;
        return v41 & 1;
      }
LABEL_133:
      sub_100045F84((uint64_t)v32);
LABEL_128:
      char v41 = 0;
      return v41 & 1;
    case 6u:
      if (swift_getEnumCaseMultiPayload() != 6) {
        goto LABEL_127;
      }
      goto LABEL_124;
    case 7u:
      if (swift_getEnumCaseMultiPayload() != 7) {
        goto LABEL_127;
      }
      goto LABEL_124;
    case 8u:
      if (swift_getEnumCaseMultiPayload() != 8) {
        goto LABEL_127;
      }
      goto LABEL_124;
    case 9u:
      if (swift_getEnumCaseMultiPayload() != 9) {
        goto LABEL_127;
      }
      goto LABEL_124;
    case 0xAu:
      if (swift_getEnumCaseMultiPayload() != 10) {
        goto LABEL_127;
      }
      goto LABEL_124;
    case 0xBu:
      if (swift_getEnumCaseMultiPayload() != 11) {
        goto LABEL_127;
      }
      goto LABEL_124;
    case 0xCu:
      if (swift_getEnumCaseMultiPayload() != 12) {
        goto LABEL_127;
      }
      goto LABEL_124;
    case 0xDu:
      if (swift_getEnumCaseMultiPayload() != 13) {
        goto LABEL_127;
      }
      goto LABEL_124;
    case 0xEu:
      if (swift_getEnumCaseMultiPayload() != 14) {
        goto LABEL_127;
      }
      goto LABEL_124;
    case 0xFu:
      if (swift_getEnumCaseMultiPayload() != 15) {
        goto LABEL_127;
      }
      goto LABEL_124;
    case 0x10u:
      if (swift_getEnumCaseMultiPayload() != 16) {
        goto LABEL_127;
      }
      goto LABEL_124;
    case 0x11u:
      if (swift_getEnumCaseMultiPayload() != 17) {
        goto LABEL_127;
      }
      goto LABEL_124;
    case 0x12u:
      if (swift_getEnumCaseMultiPayload() != 18) {
        goto LABEL_127;
      }
      goto LABEL_124;
    case 0x13u:
      if (swift_getEnumCaseMultiPayload() != 19) {
        goto LABEL_127;
      }
      goto LABEL_124;
    case 0x14u:
      if (swift_getEnumCaseMultiPayload() != 20) {
        goto LABEL_127;
      }
      goto LABEL_124;
    case 0x15u:
      if (swift_getEnumCaseMultiPayload() != 21) {
        goto LABEL_127;
      }
      goto LABEL_124;
    case 0x16u:
      if (swift_getEnumCaseMultiPayload() != 22) {
        goto LABEL_127;
      }
      goto LABEL_124;
    case 0x17u:
      if (swift_getEnumCaseMultiPayload() != 23) {
        goto LABEL_127;
      }
      goto LABEL_124;
    case 0x18u:
      if (swift_getEnumCaseMultiPayload() != 24) {
        goto LABEL_127;
      }
      goto LABEL_124;
    case 0x19u:
      if (swift_getEnumCaseMultiPayload() != 25) {
        goto LABEL_127;
      }
      goto LABEL_124;
    case 0x1Au:
      if (swift_getEnumCaseMultiPayload() != 26) {
        goto LABEL_127;
      }
      goto LABEL_124;
    case 0x1Bu:
      if (swift_getEnumCaseMultiPayload() != 27) {
        goto LABEL_127;
      }
      goto LABEL_124;
    case 0x1Cu:
      if (swift_getEnumCaseMultiPayload() != 28) {
        goto LABEL_127;
      }
      goto LABEL_124;
    case 0x1Du:
      if (swift_getEnumCaseMultiPayload() != 29) {
        goto LABEL_127;
      }
      goto LABEL_124;
    case 0x1Eu:
      if (swift_getEnumCaseMultiPayload() != 30) {
        goto LABEL_127;
      }
      goto LABEL_124;
    case 0x1Fu:
      if (swift_getEnumCaseMultiPayload() != 31) {
        goto LABEL_127;
      }
      goto LABEL_124;
    case 0x20u:
      if (swift_getEnumCaseMultiPayload() != 32) {
        goto LABEL_127;
      }
      goto LABEL_124;
    case 0x21u:
      if (swift_getEnumCaseMultiPayload() != 33) {
        goto LABEL_127;
      }
      goto LABEL_124;
    case 0x22u:
      if (swift_getEnumCaseMultiPayload() != 34) {
        goto LABEL_127;
      }
      goto LABEL_124;
    case 0x23u:
      if (swift_getEnumCaseMultiPayload() != 35) {
        goto LABEL_127;
      }
      goto LABEL_124;
    case 0x24u:
      if (swift_getEnumCaseMultiPayload() != 36) {
        goto LABEL_127;
      }
      goto LABEL_124;
    case 0x25u:
      if (swift_getEnumCaseMultiPayload() != 37) {
        goto LABEL_127;
      }
      goto LABEL_124;
    case 0x26u:
      if (swift_getEnumCaseMultiPayload() != 38) {
        goto LABEL_127;
      }
      goto LABEL_124;
    case 0x27u:
      if (swift_getEnumCaseMultiPayload() != 39) {
        goto LABEL_127;
      }
      goto LABEL_124;
    case 0x28u:
      if (swift_getEnumCaseMultiPayload() != 40) {
        goto LABEL_127;
      }
      goto LABEL_124;
    case 0x29u:
      if (swift_getEnumCaseMultiPayload() != 41) {
        goto LABEL_127;
      }
      goto LABEL_124;
    case 0x2Au:
      if (swift_getEnumCaseMultiPayload() != 42) {
        goto LABEL_127;
      }
      goto LABEL_124;
    case 0x2Bu:
      if (swift_getEnumCaseMultiPayload() != 43) {
        goto LABEL_127;
      }
      goto LABEL_124;
    case 0x2Cu:
      if (swift_getEnumCaseMultiPayload() != 44) {
        goto LABEL_127;
      }
      goto LABEL_124;
    case 0x2Du:
      if (swift_getEnumCaseMultiPayload() != 45) {
        goto LABEL_127;
      }
      goto LABEL_124;
    case 0x2Eu:
      if (swift_getEnumCaseMultiPayload() != 46) {
        goto LABEL_127;
      }
      goto LABEL_124;
    case 0x2Fu:
      if (swift_getEnumCaseMultiPayload() != 47) {
        goto LABEL_127;
      }
      goto LABEL_124;
    case 0x30u:
      if (swift_getEnumCaseMultiPayload() != 48) {
        goto LABEL_127;
      }
      goto LABEL_124;
    case 0x31u:
      if (swift_getEnumCaseMultiPayload() != 49) {
        goto LABEL_127;
      }
      goto LABEL_124;
    case 0x32u:
      if (swift_getEnumCaseMultiPayload() != 50) {
        goto LABEL_127;
      }
      goto LABEL_124;
    case 0x33u:
      if (swift_getEnumCaseMultiPayload() != 51) {
        goto LABEL_127;
      }
      goto LABEL_124;
    default:
      sub_100046BE0((uint64_t)v32, (uint64_t)v28);
      if (!swift_getEnumCaseMultiPayload())
      {
        uint64_t v64 = v71;
        uint64_t v63 = v72;
        uint64_t v65 = v68;
        (*(void (**)(char *, void *, uint64_t))(v72 + 32))(v68, v35, v71);
        char v41 = static FLFollowUpInformation.== infix(_:_:)();
        uint64_t v66 = *(void (**)(char *, uint64_t))(v63 + 8);
        v66(v65, v64);
        v66(v28, v64);
LABEL_131:
        sub_100045F84((uint64_t)v32);
        return v41 & 1;
      }
      (*(void (**)(char *, uint64_t))(v72 + 8))(v28, v71);
LABEL_127:
      sub_100047750((uint64_t)v32);
      goto LABEL_128;
  }
}

uint64_t sub_100046B9C(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_100046BE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PrimarySettingsListItemIdentifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for PrimarySettingsListItemIdentifier()
{
  uint64_t result = qword_10015F870;
  if (!qword_10015F870) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100046C90(uint64_t a1, uint64_t a2)
{
  type metadata accessor for PrimarySettingsListItemIdentifier();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
      uint64_t v4 = type metadata accessor for FLFollowUpInformation();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
      break;
    case 2u:
      uint64_t v5 = type metadata accessor for FLFollowUpInformation();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
      sub_100046B9C(&qword_10015F7F8);
      goto LABEL_4;
    case 3u:
    case 4u:
    case 5u:
LABEL_4:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }
  uint64_t v6 = a1 + *(int *)(a2 + 20);
  type metadata accessor for PrimarySettingsListItemViewType();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      if (*(void *)(v6 + 8))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v13 = *(void **)(v6 + 40);
      }
      return;
    case 1u:
      uint64_t v14 = type metadata accessor for FamilyRowStatus();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v6, v14);
      type metadata accessor for PrimarySettingsListFamilyLinkModel();
      break;
    case 2u:
      sub_100046F04(*(void **)v6, *(void *)(v6 + 8), *(unsigned char *)(v6 + 16));
      swift_bridgeObjectRelease();
      swift_release();
      return;
    case 3u:
    case 4u:
      break;
    case 5u:
    case 6u:
      uint64_t v7 = *(void **)v6;
      uint64_t v8 = *(void *)(v6 + 8);
      LOBYTE(v9) = *(unsigned char *)(v6 + 16);
      goto LABEL_23;
    case 7u:
    case 8u:
      uint64_t v10 = *(void **)v6;
      uint64_t v11 = *(void *)(v6 + 8);
      LOBYTE(v12) = *(unsigned char *)(v6 + 16);
      goto LABEL_19;
    case 9u:
      int v12 = *(unsigned __int8 *)(v6 + 16);
      if (v12 == 255) {
        goto LABEL_20;
      }
      uint64_t v10 = *(void **)v6;
      uint64_t v11 = *(void *)(v6 + 8);
LABEL_19:
      sub_100046F04(v10, v11, v12);
LABEL_20:
      swift_bridgeObjectRelease();
      break;
    case 0xAu:
      int v9 = *(unsigned __int8 *)(v6 + 16);
      if (v9 == 255) {
        break;
      }
      uint64_t v7 = *(void **)v6;
      uint64_t v8 = *(void *)(v6 + 8);
LABEL_23:
      sub_100046F04(v7, v8, v9);
      break;
    default:
      return;
  }

  swift_bridgeObjectRelease();
}

void sub_100046F04(void *a1, uint64_t a2, char a3)
{
  if (a3 == 2 || a3 == 1)
  {
    swift_bridgeObjectRelease();
  }
  else if (!a3)
  {
  }
}

void *sub_100046F2C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for PrimarySettingsListItemIdentifier();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
      uint64_t v7 = type metadata accessor for FLFollowUpInformation();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      goto LABEL_6;
    case 2u:
      uint64_t v8 = type metadata accessor for FLFollowUpInformation();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      uint64_t v9 = *(int *)(sub_100046B9C(&qword_10015F7F8) + 48);
      uint64_t v10 = (void *)((char *)a1 + v9);
      uint64_t v11 = (void *)((char *)a2 + v9);
      uint64_t v12 = v11[1];
      *uint64_t v10 = *v11;
      v10[1] = v12;
      swift_bridgeObjectRetain();
      goto LABEL_6;
    case 3u:
    case 4u:
    case 5u:
      uint64_t v13 = a2[1];
      *a1 = *a2;
      a1[1] = v13;
      swift_bridgeObjectRetain();
LABEL_6:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      break;
  }
  uint64_t v14 = *(int *)(a3 + 20);
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  type metadata accessor for PrimarySettingsListItemViewType();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v21 = type metadata accessor for FamilyRowStatus();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v15, v16, v21);
      uint64_t v22 = *(int *)(type metadata accessor for PrimarySettingsListFamilyLinkModel() + 20);
      char v23 = &v15[v22];
      uint64_t v24 = &v16[v22];
      uint64_t v25 = *((void *)v24 + 1);
      *(void *)char v23 = *(void *)v24;
      *((void *)v23 + 1) = v25;
      swift_bridgeObjectRetain();
      break;
    case 2u:
      id v26 = *(id *)v16;
      uint64_t v27 = *((void *)v16 + 1);
      char v28 = v16[16];
      sub_100047728(*(id *)v16, v27, v28);
      *(void *)uint64_t v15 = v26;
      *((void *)v15 + 1) = v27;
      unsigned char v15[16] = v28;
      uint64_t v29 = *((void *)v16 + 4);
      *((void *)v15 + 3) = *((void *)v16 + 3);
      *((void *)v15 + 4) = v29;
      *((_WORD *)v15 + 20) = *((_WORD *)v16 + 20);
      uint64_t v30 = *((void *)v16 + 6);
      uint64_t v31 = *((void *)v16 + 7);
      *((void *)v15 + 6) = v30;
      *((void *)v15 + 7) = v31;
      swift_bridgeObjectRetain();
      swift_retain();
      break;
    case 3u:
      uint64_t v32 = *((void *)v16 + 1);
      *(void *)uint64_t v15 = *(void *)v16;
      *((void *)v15 + 1) = v32;
      *((_WORD *)v15 + 8) = *((_WORD *)v16 + 8);
      swift_bridgeObjectRetain();
      break;
    case 4u:
      uint64_t v33 = *((void *)v16 + 1);
      *(void *)uint64_t v15 = *(void *)v16;
      *((void *)v15 + 1) = v33;
      *((void *)v15 + 2) = *((void *)v16 + 2);
      *((_WORD *)v15 + 12) = *((_WORD *)v16 + 12);
      swift_bridgeObjectRetain();
      break;
    case 5u:
      id v34 = *(id *)v16;
      uint64_t v35 = *((void *)v16 + 1);
      char v36 = v16[16];
      sub_100047728(*(id *)v16, v35, v36);
      *(void *)uint64_t v15 = v34;
      *((void *)v15 + 1) = v35;
      unsigned char v15[16] = v36;
      uint64_t v37 = *((void *)v16 + 4);
      *((void *)v15 + 3) = *((void *)v16 + 3);
      *((void *)v15 + 4) = v37;
      *((_WORD *)v15 + 20) = *((_WORD *)v16 + 20);
      swift_bridgeObjectRetain();
      break;
    case 6u:
      id v38 = *(id *)v16;
      uint64_t v39 = *((void *)v16 + 1);
      char v40 = v16[16];
      sub_100047728(*(id *)v16, v39, v40);
      *(void *)uint64_t v15 = v38;
      *((void *)v15 + 1) = v39;
      unsigned char v15[16] = v40;
      uint64_t v41 = *((void *)v16 + 4);
      *((void *)v15 + 3) = *((void *)v16 + 3);
      *((void *)v15 + 4) = v41;
      *((void *)v15 + 5) = *((void *)v16 + 5);
      *((_WORD *)v15 + 24) = *((_WORD *)v16 + 24);
      swift_bridgeObjectRetain();
      break;
    case 7u:
    case 8u:
      id v42 = *(id *)v16;
      uint64_t v43 = *((void *)v16 + 1);
      char v44 = v16[16];
      sub_100047728(*(id *)v16, v43, v44);
      *(void *)uint64_t v15 = v42;
      *((void *)v15 + 1) = v43;
      unsigned char v15[16] = v44;
      uint64_t v45 = *((void *)v16 + 4);
      *((void *)v15 + 3) = *((void *)v16 + 3);
      *((void *)v15 + 4) = v45;
      uint64_t v46 = *((void *)v16 + 6);
      *((void *)v15 + 5) = *((void *)v16 + 5);
      *((void *)v15 + 6) = v46;
      *((_WORD *)v15 + 28) = *((_WORD *)v16 + 28);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      break;
    case 9u:
      int v47 = v16[16];
      if (v47 == 255)
      {
        *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
        unsigned char v15[16] = v16[16];
      }
      else
      {
        id v48 = *(id *)v16;
        uint64_t v49 = *((void *)v16 + 1);
        sub_100047728(*(id *)v16, v49, v16[16]);
        *(void *)uint64_t v15 = v48;
        *((void *)v15 + 1) = v49;
        unsigned char v15[16] = v47;
      }
      uint64_t v54 = *((void *)v16 + 4);
      *((void *)v15 + 3) = *((void *)v16 + 3);
      *((void *)v15 + 4) = v54;
      uint64_t v55 = *((void *)v16 + 5);
      uint64_t v56 = *((void *)v16 + 6);
      *((void *)v15 + 5) = v55;
      *((void *)v15 + 6) = v56;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      break;
    case 0xAu:
      int v50 = v16[16];
      if (v50 == 255)
      {
        *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
        unsigned char v15[16] = v16[16];
      }
      else
      {
        id v51 = *(id *)v16;
        uint64_t v52 = *((void *)v16 + 1);
        sub_100047728(*(id *)v16, v52, v16[16]);
        *(void *)uint64_t v15 = v51;
        *((void *)v15 + 1) = v52;
        unsigned char v15[16] = v50;
      }
      uint64_t v57 = *((void *)v16 + 4);
      *((void *)v15 + 3) = *((void *)v16 + 3);
      *((void *)v15 + 4) = v57;
      v15[40] = v16[40];
      swift_bridgeObjectRetain();
      break;
    default:
      uint64_t v17 = *((void *)v16 + 1);
      if (v17)
      {
        *(void *)uint64_t v15 = *(void *)v16;
        *((void *)v15 + 1) = v17;
        uint64_t v18 = *((void *)v16 + 3);
        *((void *)v15 + 2) = *((void *)v16 + 2);
        *((void *)v15 + 3) = v18;
        v15[32] = v16[32];
        uint64_t v19 = (void *)*((void *)v16 + 5);
        *((void *)v15 + 5) = v19;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v20 = v19;
      }
      else
      {
        long long v53 = *((_OWORD *)v16 + 1);
        *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
        *((_OWORD *)v15 + 1) = v53;
        *((_OWORD *)v15 + 2) = *((_OWORD *)v16 + 2);
      }
      v15[48] = v16[48];
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_1000474F0(void *a1, void *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
      uint64_t v6 = type metadata accessor for FLFollowUpInformation();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      goto LABEL_6;
    case 2u:
      uint64_t v7 = type metadata accessor for FLFollowUpInformation();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      uint64_t v8 = *(int *)(sub_100046B9C(&qword_10015F7F8) + 48);
      uint64_t v9 = (void *)((char *)a1 + v8);
      uint64_t v10 = (void *)((char *)a2 + v8);
      uint64_t v11 = v10[1];
      *uint64_t v9 = *v10;
      v9[1] = v11;
      swift_bridgeObjectRetain();
      goto LABEL_6;
    case 3u:
    case 4u:
    case 5u:
      uint64_t v12 = a2[1];
      *a1 = *a2;
      a1[1] = v12;
      swift_bridgeObjectRetain();
LABEL_6:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

uint64_t type metadata accessor for PrimarySettingsListItemViewType()
{
  uint64_t result = qword_10015FA38;
  if (!qword_10015FA38) {
    return swift_getSingletonMetadata();
  }
  return result;
}

id sub_100047728(id result, uint64_t a2, char a3)
{
  if (a3 == 2 || a3 == 1) {
    return (id)swift_bridgeObjectRetain();
  }
  if (!a3) {
    return result;
  }
  return result;
}

uint64_t sub_100047750(uint64_t a1)
{
  uint64_t v2 = sub_100046B9C(&qword_10015F8B8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000477B0(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

id sub_1000477E8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for PrimarySettingsListItemIdentifier();
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100046BE0(v1, (uint64_t)v4);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
      sub_100046B9C(&qword_10015F7F8);
      swift_bridgeObjectRelease();
      goto LABEL_4;
    case 3u:
    case 4u:
    case 5u:
      swift_bridgeObjectRelease();
      goto LABEL_5;
    case 6u:
      id v9 = [self mainBundle];
      unint64_t v32 = 0x8000000100122CF0;
      uint64_t v10 = 0x634120656C707041;
      unint64_t v11 = 0xED0000746E756F63;
      goto LABEL_68;
    case 7u:
      id v9 = [self mainBundle];
      unint64_t v32 = 0x8000000100122CF0;
      uint64_t v10 = 0x796C696D6146;
      unint64_t v11 = 0xE600000000000000;
      goto LABEL_68;
    case 8u:
      id v9 = [self mainBundle];
      unint64_t v32 = 0x8000000100124340;
      uint64_t v10 = 0x656E616C70726941;
      unint64_t v11 = 0xED000065646F4D20;
      goto LABEL_68;
    case 9u:
      id result = (id)MobileGestalt_get_current_device();
      if (!result)
      {
        __break(1u);
LABEL_78:
        __break(1u);
LABEL_79:
        __break(1u);
        goto LABEL_80;
      }
      uint64_t v13 = result;
      int wapiCapability = MobileGestalt_get_wapiCapability();

      id v9 = [self mainBundle];
      if (wapiCapability)
      {
        unint64_t v32 = 0x8000000100122CF0;
        uint64_t v10 = 1312902231;
        goto LABEL_72;
      }
      unint64_t v32 = 0x8000000100122CF0;
      uint64_t v10 = 0x69462D6957;
      unint64_t v11 = 0xE500000000000000;
      goto LABEL_68;
    case 0xAu:
      id v9 = [self mainBundle];
      unint64_t v32 = 0x8000000100122CF0;
      uint64_t v10 = 0x74656E7265687445;
      unint64_t v11 = 0xE800000000000000;
      goto LABEL_68;
    case 0xBu:
      id v9 = [self mainBundle];
      unint64_t v11 = 0xE900000000000068;
      unint64_t v32 = 0x8000000100122CF0;
      uint64_t v10 = 0x746F6F7465756C42;
      goto LABEL_68;
    case 0xCu:
      id v9 = [self mainBundle];
      unint64_t v32 = 0x8000000100122CF0;
      uint64_t v10 = 0x72616C756C6C6543;
      unint64_t v11 = 0xE800000000000000;
      goto LABEL_68;
    case 0xDu:
      id v9 = [self mainBundle];
      uint64_t v10 = 0xD000000000000010;
      unint64_t v32 = 0x8000000100122CF0;
      uint64_t v15 = "Personal Hotspot";
      goto LABEL_67;
    case 0xEu:
      id v9 = [self mainBundle];
      unint64_t v32 = 0x8000000100122CF0;
      uint64_t v10 = 5132374;
      unint64_t v11 = 0xE300000000000000;
      goto LABEL_68;
    case 0xFu:
      id v9 = [self mainBundle];
      unint64_t v11 = 0xE90000000000006DLL;
      unint64_t v32 = 0x8000000100122CF0;
      uint64_t v10 = 0x6F6F727373616C43;
      goto LABEL_68;
    case 0x10u:
      id v9 = [self mainBundle];
      unint64_t v11 = 0xE900000000000065;
      unint64_t v32 = 0x8000000100122CF0;
      uint64_t v10 = 0x74696C6C65746153;
      goto LABEL_68;
    case 0x11u:
      id v9 = [self mainBundle];
      unint64_t v32 = 0x8000000100122CF0;
      uint64_t v10 = 0x6163696669746F4ELL;
      unint64_t v11 = 0xED0000736E6F6974;
      goto LABEL_68;
    case 0x12u:
      id result = (id)MobileGestalt_get_current_device();
      if (!result) {
        goto LABEL_78;
      }
      uint64_t v16 = result;
      int deviceSupportsClosedLoopHaptics = MobileGestalt_get_deviceSupportsClosedLoopHaptics();

      id v9 = [self mainBundle];
      if (deviceSupportsClosedLoopHaptics)
      {
        uint64_t v10 = 0xD000000000000010;
        unint64_t v32 = 0x8000000100122CF0;
        uint64_t v15 = "Sounds & Haptics";
        goto LABEL_67;
      }
      unint64_t v32 = 0x8000000100122CF0;
      uint64_t v10 = 0x73646E756F53;
      unint64_t v11 = 0xE600000000000000;
      goto LABEL_68;
    case 0x13u:
      id v9 = [self mainBundle];
      unint64_t v32 = 0x8000000100122CF0;
      uint64_t v10 = 0x7375636F46;
      unint64_t v11 = 0xE500000000000000;
      goto LABEL_68;
    case 0x14u:
      id v9 = [self mainBundle];
      unint64_t v32 = 0x8000000100122CF0;
      uint64_t v10 = 0x54206E6565726353;
      unint64_t v11 = 0xEB00000000656D69;
      goto LABEL_68;
    case 0x15u:
      id v9 = [self mainBundle];
      unint64_t v32 = 0x8000000100122CF0;
      uint64_t v10 = 0x6C6172656E6547;
      unint64_t v11 = 0xE700000000000000;
      goto LABEL_68;
    case 0x16u:
      id v9 = [self mainBundle];
      unint64_t v32 = 0x8000000100122CF0;
      uint64_t v10 = 0x206C6F72746E6F43;
      unint64_t v11 = 0xEE007265746E6543;
      goto LABEL_68;
    case 0x17u:
      id v9 = [self mainBundle];
      unint64_t v32 = 0x8000000100122CF0;
      uint64_t v10 = 0x42206E6F69746341;
      unint64_t v11 = 0xED00006E6F747475;
      goto LABEL_68;
    case 0x18u:
      id v9 = [self mainBundle];
      unint64_t v32 = 0x8000000100122CF0;
      uint64_t v18 = "Display & Brightness";
      goto LABEL_52;
    case 0x19u:
      id v9 = [self mainBundle];
      uint64_t v10 = 0xD000000000000019;
      unint64_t v32 = 0x8000000100122CF0;
      uint64_t v15 = "Home Screen & App Library";
      goto LABEL_67;
    case 0x1Au:
      id v9 = [self mainBundle];
      uint64_t v10 = 0xD000000000000017;
      unint64_t v32 = 0x8000000100122CF0;
      uint64_t v15 = "Multitasking & Gestures";
      goto LABEL_67;
    case 0x1Bu:
      id v9 = [self mainBundle];
      unint64_t v32 = 0x8000000100122CF0;
      uint64_t v10 = 0x6269737365636341;
      unint64_t v11 = 0xED00007974696C69;
      goto LABEL_68;
    case 0x1Cu:
      id v9 = [self mainBundle];
      unint64_t v32 = 0x8000000100122CF0;
      uint64_t v29 = 0x61706C6C6157;
      goto LABEL_59;
    case 0x1Du:
      id v9 = [self mainBundle];
      unint64_t v32 = 0x8000000100122CF0;
      uint64_t v28 = 0x42646E617453;
      goto LABEL_61;
    case 0x1Eu:
      char v19 = sub_10004F244();
      id v9 = [self mainBundle];
      if (v19)
      {
        uint64_t v10 = 0xD000000000000019;
        unint64_t v32 = 0x8000000100122CF0;
        uint64_t v15 = "Apple Intelligence & Siri";
        goto LABEL_67;
      }
      unint64_t v32 = 0x8000000100122CF0;
      uint64_t v10 = 1769105747;
LABEL_72:
      unint64_t v11 = 0xE400000000000000;
      goto LABEL_68;
    case 0x1Fu:
      id v9 = [self mainBundle];
      unint64_t v32 = 0x8000000100122CF0;
      uint64_t v10 = 0x686372616553;
      unint64_t v11 = 0xE600000000000000;
      goto LABEL_68;
    case 0x20u:
      id v9 = [self mainBundle];
      unint64_t v32 = 0x8000000100122CF0;
      uint64_t v10 = 0x655020656C707041;
      unint64_t v11 = 0xEC0000006C69636ELL;
      goto LABEL_68;
    case 0x21u:
      id result = (id)MobileGestalt_get_current_device();
      if (!result) {
        goto LABEL_79;
      }
      id v20 = result;
      int pearlIDCapability = MobileGestalt_get_pearlIDCapability();

      if (!pearlIDCapability) {
        goto LABEL_36;
      }
      id result = (id)MobileGestalt_get_current_device();
      if (!result) {
        goto LABEL_81;
      }
      uint64_t v22 = result;
      char isSimulator = MobileGestalt_get_isSimulator();

      if ((isSimulator & 1) == 0)
      {
        id v9 = [self mainBundle];
        uint64_t v10 = 0xD000000000000012;
        unint64_t v32 = 0x8000000100122CF0;
        uint64_t v15 = "Face ID & Passcode";
        goto LABEL_67;
      }
LABEL_36:
      id result = (id)MobileGestalt_get_current_device();
      if (!result)
      {
LABEL_80:
        __break(1u);
LABEL_81:
        __break(1u);
        goto LABEL_82;
      }
      uint64_t v24 = result;
      int touchIDCapability = MobileGestalt_get_touchIDCapability();

      if (!touchIDCapability)
      {
LABEL_40:
        id v9 = [self mainBundle];
        unint64_t v32 = 0x8000000100122CF0;
        uint64_t v10 = 0x65646F6373736150;
        unint64_t v11 = 0xE800000000000000;
        goto LABEL_68;
      }
      id result = (id)MobileGestalt_get_current_device();
      if (!result)
      {
LABEL_82:
        __break(1u);
        return result;
      }
      id v26 = result;
      char v27 = MobileGestalt_get_isSimulator();

      if (v27) {
        goto LABEL_40;
      }
      id v9 = [self mainBundle];
      uint64_t v10 = 0xD000000000000013;
      unint64_t v32 = 0x8000000100122CF0;
      uint64_t v15 = "Touch ID & Passcode";
LABEL_67:
      unint64_t v11 = (unint64_t)(v15 - 32) | 0x8000000000000000;
LABEL_68:
      v30._uint64_t countAndFlagsBits = 0;
      v30._object = (void *)0xE000000000000000;
      unint64_t v31 = 0xD000000000000014;
      uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v10, (Swift::String_optional)0, (NSBundle)v9, v30, *(Swift::String *)(&v32 - 1))._countAndFlagsBits;

      return (id)countAndFlagsBits;
    case 0x22u:
      id v9 = [self mainBundle];
      unint64_t v32 = 0x8000000100122CF0;
      uint64_t v10 = 0x636E656772656D45;
      unint64_t v11 = 0xED0000534F532079;
      goto LABEL_68;
    case 0x23u:
      id v9 = [self mainBundle];
      uint64_t v10 = 0xD000000000000016;
      unint64_t v32 = 0x8000000100122CF0;
      uint64_t v15 = "Exposure Notifications";
      goto LABEL_67;
    case 0x24u:
      id v9 = [self mainBundle];
      unint64_t v32 = 0x8000000100122CF0;
      uint64_t v28 = 0x726574746142;
LABEL_61:
      uint64_t v10 = v28 & 0xFFFFFFFFFFFFLL | 0x79000000000000;
      unint64_t v11 = 0xE700000000000000;
      goto LABEL_68;
    case 0x25u:
      id v9 = [self mainBundle];
      uint64_t v10 = 0xD000000000000012;
      unint64_t v32 = 0x8000000100122CF0;
      uint64_t v15 = "Privacy & Security";
      goto LABEL_67;
    case 0x26u:
      id v9 = [self mainBundle];
      unint64_t v32 = 0x8000000100122CF0;
      unint64_t v11 = 0x80000001001241E0;
      uint64_t v10 = 0x1000000000000013;
      goto LABEL_68;
    case 0x27u:
      id v9 = [self mainBundle];
      uint64_t v10 = 0xD000000000000015;
      unint64_t v32 = 0x8000000100122CF0;
      uint64_t v15 = "Payment & Contactless";
      goto LABEL_67;
    case 0x28u:
      id v9 = [self mainBundle];
      unint64_t v32 = 0x8000000100122CF0;
      uint64_t v10 = 0x7250207373616C43;
      unint64_t v11 = 0xEE0073736572676FLL;
      goto LABEL_68;
    case 0x29u:
      id v9 = [self mainBundle];
      unint64_t v32 = 0x8000000100122CF0;
      uint64_t v10 = 0x6172656D6143;
      unint64_t v11 = 0xE600000000000000;
      goto LABEL_68;
    case 0x2Au:
      id v9 = [self mainBundle];
      unint64_t v32 = 0x8000000100122CF0;
      uint64_t v10 = 0x6E654320656D6147;
      unint64_t v11 = 0xEB00000000726574;
      goto LABEL_68;
    case 0x2Bu:
      id v9 = [self mainBundle];
      unint64_t v32 = 0x8000000100122CF0;
      uint64_t v10 = 0x64756F6C4369;
      unint64_t v11 = 0xE600000000000000;
      goto LABEL_68;
    case 0x2Cu:
      id v9 = [self mainBundle];
      unint64_t v32 = 0x8000000100122CF0;
      uint64_t v29 = 0x6F6C65766544;
LABEL_59:
      uint64_t v10 = v29 & 0xFFFFFFFFFFFFLL | 0x6570000000000000;
      unint64_t v11 = 0xE900000000000072;
      goto LABEL_68;
    case 0x2Du:
      id v9 = [self mainBundle];
      uint64_t v10 = 0xD000000000000010;
      unint64_t v32 = 0x8000000100122CF0;
      uint64_t v15 = "Carrier Settings";
      goto LABEL_67;
    case 0x2Eu:
      id v9 = [self mainBundle];
      uint64_t v10 = 0xD000000000000011;
      unint64_t v32 = 0x8000000100122CF0;
      uint64_t v15 = "Internal Settings";
      goto LABEL_67;
    case 0x2Fu:
      id v9 = [self mainBundle];
      uint64_t v10 = 0xD000000000000012;
      unint64_t v32 = 0x8000000100122CF0;
      uint64_t v15 = "FaceTime Debugging";
      goto LABEL_67;
    case 0x30u:
      id v9 = [self mainBundle];
      uint64_t v10 = 0xD000000000000012;
      unint64_t v32 = 0x8000000100122CF0;
      uint64_t v15 = "iMessage Debugging";
      goto LABEL_67;
    case 0x31u:
      id v9 = [self mainBundle];
      unint64_t v32 = 0x8000000100122CF0;
      uint64_t v18 = "Continuity Debugging";
LABEL_52:
      unint64_t v11 = (unint64_t)(v18 - 32) | 0x8000000000000000;
      uint64_t v10 = 0xD000000000000014;
      goto LABEL_68;
    case 0x32u:
      id v9 = [self mainBundle];
      uint64_t v10 = 0xD000000000000013;
      unint64_t v32 = 0x8000000100122CF0;
      uint64_t v15 = "Accessory Developer";
      goto LABEL_67;
    case 0x33u:
      id v9 = [self mainBundle];
      unint64_t v32 = 0x8000000100122CF0;
      uint64_t v10 = 1936748609;
      goto LABEL_72;
    default:
LABEL_4:
      uint64_t v5 = type metadata accessor for FLFollowUpInformation();
      (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
LABEL_5:
      unint64_t v33 = 0;
      unint64_t v34 = 0xE000000000000000;
      _StringGuts.grow(_:)(42);
      swift_bridgeObjectRelease();
      unint64_t v33 = 0xD00000000000001CLL;
      unint64_t v34 = 0x8000000100124120;
      v6._uint64_t countAndFlagsBits = sub_100048BDC();
      String.append(_:)(v6);
      swift_bridgeObjectRelease();
      v7._uint64_t countAndFlagsBits = 0x6120656C6966202CLL;
      v7._object = (void *)0xEC00000067756220;
      String.append(_:)(v7);
      return (id)v33;
  }
}

uint64_t sub_100048A6C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100048AB4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100048AFC()
{
  uint64_t v1 = type metadata accessor for PrimarySettingsListItemIdentifier();
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[0] = _typeName(_:qualified:)();
  v9[1] = v4;
  v5._uint64_t countAndFlagsBits = 0x203A6469207B20;
  v5._object = (void *)0xE700000000000000;
  String.append(_:)(v5);
  sub_100046BE0(v0, (uint64_t)v3);
  v6._uint64_t countAndFlagsBits = sub_100048BDC();
  String.append(_:)(v6);
  swift_bridgeObjectRelease();
  sub_100045F84((uint64_t)v3);
  v7._uint64_t countAndFlagsBits = 32032;
  v7._object = (void *)0xE200000000000000;
  String.append(_:)(v7);
  return v9[0];
}

uint64_t sub_100048BDC()
{
  uint64_t v1 = type metadata accessor for FLFollowUpGroupIdentity();
  uint64_t v61 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v60 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for FLFollowUpInformation();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v6);
  unint64_t v11 = (char *)&v60 - v10;
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v60 - v12;
  uint64_t v14 = type metadata accessor for PrimarySettingsListItemIdentifier();
  __chkstk_darwin(v14);
  uint64_t v16 = (uint64_t *)((char *)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100046BE0(v0, (uint64_t)v16);
  unint64_t v17 = 0xD000000000000013;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      (*(void (**)(char *, uint64_t *, uint64_t))(v5 + 32))(v11, v16, v4);
      unint64_t v28 = 0xE000000000000000;
      v64[0] = 0;
      v64[1] = 0xE000000000000000;
      _StringGuts.grow(_:)(19);
      swift_bridgeObjectRelease();
      v64[0] = 0x7055776F6C6C6F66;
      v64[1] = 0xEF2E726564616548;
      FLFollowUpInformation.groupIdentity.getter();
      uint64_t v29 = FLFollowUpGroupIdentity.id.getter();
      unint64_t v31 = v30;
      (*(void (**)(char *, uint64_t))(v61 + 8))(v3, v1);
      v32._uint64_t countAndFlagsBits = v29;
      v32._object = v31;
      String.append(_:)(v32);
      swift_bridgeObjectRelease();
      FLFollowUpInformation.itemIdentifier.getter();
      uint64_t v34 = v33;
      swift_bridgeObjectRelease();
      if (v34)
      {
        uint64_t v62 = 46;
        unint64_t v63 = 0xE100000000000000;
        uint64_t result = FLFollowUpInformation.itemIdentifier.getter();
        if (!v35) {
          goto LABEL_68;
        }
        String.append(_:)(*(Swift::String *)&result);
        swift_bridgeObjectRelease();
        uint64_t v36 = v62;
        unint64_t v28 = v63;
      }
      else
      {
        uint64_t v36 = 0;
      }
      unint64_t v58 = v28;
      String.append(_:)(*(Swift::String *)&v36);
      swift_bridgeObjectRelease();
      unint64_t v17 = v64[0];
      (*(void (**)(char *, uint64_t))(v5 + 8))(v11, v4);
      return v17;
    case 2u:
      uint64_t v37 = (uint64_t *)((char *)v16 + *(int *)(sub_100046B9C(&qword_10015F7F8) + 48));
      uint64_t v38 = *v37;
      uint64_t v39 = (void *)v37[1];
      (*(void (**)(char *, uint64_t *, uint64_t))(v5 + 32))(v8, v16, v4);
      unint64_t v40 = 0xE000000000000000;
      v64[0] = 0;
      v64[1] = 0xE000000000000000;
      _StringGuts.grow(_:)(22);
      swift_bridgeObjectRelease();
      v64[0] = 0x7055776F6C6C6F66;
      v64[1] = 0xEF2E6E6F69746341;
      v41._uint64_t countAndFlagsBits = v38;
      v41._object = v39;
      String.append(_:)(v41);
      swift_bridgeObjectRelease();
      v42._uint64_t countAndFlagsBits = 46;
      v42._object = (void *)0xE100000000000000;
      String.append(_:)(v42);
      FLFollowUpInformation.groupIdentity.getter();
      uint64_t v43 = FLFollowUpGroupIdentity.id.getter();
      uint64_t v45 = v44;
      (*(void (**)(char *, uint64_t))(v61 + 8))(v3, v1);
      v46._uint64_t countAndFlagsBits = v43;
      v46._object = v45;
      String.append(_:)(v46);
      swift_bridgeObjectRelease();
      FLFollowUpInformation.itemIdentifier.getter();
      uint64_t v48 = v47;
      swift_bridgeObjectRelease();
      if (v48)
      {
        uint64_t v62 = 46;
        unint64_t v63 = 0xE100000000000000;
        uint64_t result = FLFollowUpInformation.itemIdentifier.getter();
        if (!v49) {
          goto LABEL_69;
        }
        String.append(_:)(*(Swift::String *)&result);
        swift_bridgeObjectRelease();
        uint64_t v50 = v62;
        unint64_t v40 = v63;
      }
      else
      {
        uint64_t v50 = 0;
      }
      unint64_t v59 = v40;
      String.append(_:)(*(Swift::String *)&v50);
      swift_bridgeObjectRelease();
      unint64_t v17 = v64[0];
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
      return v17;
    case 3u:
      uint64_t v52 = *v16;
      id v51 = (void *)v16[1];
      v64[0] = 0;
      v64[1] = 0xE000000000000000;
      _StringGuts.grow(_:)(24);
      swift_bridgeObjectRelease();
      unint64_t v53 = 0xD000000000000016;
      uint64_t v54 = "secondaryAppleAccount.";
      goto LABEL_14;
    case 4u:
      uint64_t v52 = *v16;
      id v51 = (void *)v16[1];
      v64[0] = 0;
      v64[1] = 0xE000000000000000;
      _StringGuts.grow(_:)(38);
      swift_bridgeObjectRelease();
      unint64_t v53 = 0xD000000000000024;
      uint64_t v54 = "secondaryAppleAccountAuthentication.";
      goto LABEL_14;
    case 5u:
      uint64_t v52 = *v16;
      id v51 = (void *)v16[1];
      v64[0] = 0;
      v64[1] = 0xE000000000000000;
      _StringGuts.grow(_:)(21);
      swift_bridgeObjectRelease();
      unint64_t v53 = 0xD000000000000013;
      uint64_t v54 = "connectedHeadphone.";
LABEL_14:
      v64[0] = v53;
      v64[1] = (unint64_t)(v54 - 32) | 0x8000000000000000;
      v55._uint64_t countAndFlagsBits = v52;
      v55._object = v51;
      String.append(_:)(v55);
      swift_bridgeObjectRelease();
      return v64[0];
    case 6u:
      return v17;
    case 7u:
      return 0x796C696D6166;
    case 8u:
      return 0x656E616C70726961;
    case 9u:
      return 1768319351;
    case 0xAu:
      return 0x74656E7265687465;
    case 0xBu:
      return 0x746F6F7465756C62;
    case 0xCu:
      return 0x72616C756C6C6563;
    case 0xDu:
      return 0x6C616E6F73726570;
    case 0xEu:
      return 7237750;
    case 0xFu:
      return 0x6F6F727373616C63;
    case 0x10u:
      return 0x74696C6C65746173;
    case 0x11u:
      return 0x6163696669746F6ELL;
    case 0x12u:
      return 0x73646E756F73;
    case 0x13u:
      return 0x7375636F66;
    case 0x14u:
      return 0x69546E6565726373;
    case 0x15u:
      return 0x6C6172656E6567;
    case 0x16u:
      return 0x436C6F72746E6F63;
    case 0x17u:
      return 0x75426E6F69746361;
    case 0x18u:
      return 0xD000000000000014;
    case 0x19u:
      return 0x65726353656D6F68;
    case 0x1Au:
      return 0xD000000000000017;
    case 0x1Bu:
      return 0x6269737365636361;
    case 0x1Cu:
      uint64_t v56 = 0x61706C6C6177;
      return v56 & 0xFFFFFFFFFFFFLL | 0x6570000000000000;
    case 0x1Du:
      return 0x7942646E617473;
    case 0x1Eu:
      return 1769105779;
    case 0x1Fu:
      return 0x686372616573;
    case 0x20u:
      return 0x6C69636E6570;
    case 0x21u:
      return 0xD000000000000015;
    case 0x22u:
      return 7565171;
    case 0x23u:
      return 0xD000000000000015;
    case 0x24u:
      return 0x79726574746162;
    case 0x25u:
      return 0xD000000000000012;
    case 0x26u:
    case 0x2Fu:
    case 0x30u:
      return 0xD000000000000011;
    case 0x27u:
      return 0xD000000000000015;
    case 0x28u:
      return 0x74694B7373616C63;
    case 0x29u:
      return 0x6172656D6163;
    case 0x2Au:
      return 0x746E6543656D6167;
    case 0x2Bu:
      return 0x64756F6C4369;
    case 0x2Cu:
      uint64_t v56 = 0x6F6C65766564;
      return v56 & 0xFFFFFFFFFFFFLL | 0x6570000000000000;
    case 0x2Du:
      return 0x72656972726163;
    case 0x2Eu:
      return 0x6C616E7265746E69;
    case 0x31u:
      return 0xD000000000000013;
    case 0x32u:
      return 0xD000000000000012;
    case 0x33u:
      return 1936748641;
    default:
      (*(void (**)(char *, uint64_t *, uint64_t))(v5 + 32))(v13, v16, v4);
      unint64_t v18 = 0xE000000000000000;
      v64[0] = 0;
      v64[1] = 0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease();
      strcpy((char *)v64, "followUpLink.");
      HIWORD(v64[1]) = -4864;
      FLFollowUpInformation.groupIdentity.getter();
      uint64_t v19 = FLFollowUpGroupIdentity.id.getter();
      uint64_t v21 = v20;
      (*(void (**)(char *, uint64_t))(v61 + 8))(v3, v1);
      v22._uint64_t countAndFlagsBits = v19;
      v22._object = v21;
      String.append(_:)(v22);
      swift_bridgeObjectRelease();
      FLFollowUpInformation.itemIdentifier.getter();
      uint64_t v24 = v23;
      swift_bridgeObjectRelease();
      if (v24)
      {
        uint64_t v62 = 46;
        unint64_t v63 = 0xE100000000000000;
        uint64_t result = FLFollowUpInformation.itemIdentifier.getter();
        if (!v26)
        {
          __break(1u);
LABEL_68:
          __break(1u);
LABEL_69:
          __break(1u);
          return result;
        }
        String.append(_:)(*(Swift::String *)&result);
        swift_bridgeObjectRelease();
        uint64_t v27 = v62;
        unint64_t v18 = v63;
      }
      else
      {
        uint64_t v27 = 0;
      }
      unint64_t v57 = v18;
      String.append(_:)(*(Swift::String *)&v27);
      swift_bridgeObjectRelease();
      unint64_t v17 = v64[0];
      (*(void (**)(char *, uint64_t))(v5 + 8))(v13, v4);
      return v17;
  }
}

uint64_t sub_100049698(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PrimarySettingsListItemViewType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000496FC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  __chkstk_darwin(a1);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100046BE0(v2, (uint64_t)v6);
  type metadata accessor for StaticPrimarySettingsListItemProvider();
  uint64_t v7 = swift_allocObject();
  sub_10004984C((uint64_t)v6, v7 + OBJC_IVAR____TtC11SettingsApp37StaticPrimarySettingsListItemProvider_id);
  sub_10003FF84(a1, a2);
  swift_setDeallocating();
  sub_100045F84(v7 + OBJC_IVAR____TtC11SettingsApp37StaticPrimarySettingsListItemProvider_id);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StaticPrimarySettingsListItemProvider()
{
  uint64_t result = qword_1001646B8;
  if (!qword_1001646B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10004984C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PrimarySettingsListItemIdentifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000498B0(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t destroy for PrimarySettingsListDataModelSnapshot()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

unsigned char *initializeBufferWithCopyOfBuffer for SettingsAppQuickAction(unsigned char *result, unsigned char *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t sub_100049918@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for PrimarySettingsListItem();
  sub_100049AA4(a1, a2 + *(int *)(v4 + 20), (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
  type metadata accessor for SettingsAppModel();
  sub_100049A5C(&qword_10015F590, (void (*)(uint64_t))type metadata accessor for SettingsAppModel);
  uint64_t result = Environment.init<A>(_:)();
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v6 & 1;
  return result;
}

uint64_t type metadata accessor for PrimarySettingsListItem()
{
  uint64_t result = qword_10015FF38;
  if (!qword_10015FF38) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for SettingsAppModel()
{
  uint64_t result = qword_10015F6B0;
  if (!qword_10015F6B0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100049A5C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100049AA4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100049B0C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100049B74(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_100046B9C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100049BD8(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = (uint64_t)sub_100049C70(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_10009F018(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_10009F018(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

void *sub_100049C70(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_100049DE8(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = _StringGuts.copyUTF8(into:)();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return v4;
      }
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
LABEL_10:
      uint64_t v2 = String.UTF8View._foreignCount()();
      if (!v2) {
        return &_swiftEmptyArrayStorage;
      }
    }
    _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
LABEL_14:
    uint64_t result = (void *)_assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    return &_swiftEmptyArrayStorage;
  }
  return result;
}

void *sub_100049DE8(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return &_swiftEmptyArrayStorage;
  }
  sub_100046B9C(&qword_100161508);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

unint64_t sub_100049E50()
{
  unint64_t result = qword_1001641D0;
  if (!qword_1001641D0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1001641D0);
  }
  return result;
}

uint64_t sub_100049E90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    Hasher.init(_seed:)();
    String.hash(into:)();
    Swift::Int v6 = Hasher._finalize()();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v8 = v6 & ~v7;
    uint64_t v9 = a3 + 56;
    if ((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
    {
      uint64_t v10 = *(void *)(a3 + 48);
      unint64_t v11 = (void *)(v10 + 16 * v8);
      BOOL v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
        return 1;
      }
      uint64_t v14 = ~v7;
      unint64_t v15 = (v8 + 1) & v14;
      if ((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
      {
        while (1)
        {
          uint64_t v16 = (void *)(v10 + 16 * v15);
          BOOL v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
            break;
          }
          uint64_t result = 0;
          unint64_t v15 = (v15 + 1) & v14;
          if (((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
            return result;
          }
        }
        return 1;
      }
    }
  }
  return 0;
}

unint64_t sub_100049FC8()
{
  unint64_t result = qword_10015FFC8;
  if (!qword_10015FFC8)
  {
    sub_10004D318(&qword_10015FFA0);
    sub_100066260();
    sub_10004D2D4(&qword_100160000, &qword_100160008);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015FFC8);
  }
  return result;
}

uint64_t sub_10004A068@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v350 = a1;
  uint64_t v329 = sub_100046B9C(&qword_100160010);
  uint64_t v3 = __chkstk_darwin(v329);
  uint64_t v300 = (uint64_t *)((char *)&v277 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v3);
  uint64_t v302 = (uint64_t)&v277 - v5;
  uint64_t v326 = sub_100046B9C(&qword_100160018);
  __chkstk_darwin(v326);
  uint64_t v328 = (uint64_t)&v277 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v304 = sub_100046B9C(&qword_100160020);
  __chkstk_darwin(v304);
  uint64_t v305 = (uint64_t *)((char *)&v277 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v327 = sub_100046B9C(&qword_100160028);
  __chkstk_darwin(v327);
  v306 = (char *)&v277 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v349 = sub_100046B9C(&qword_100160030);
  __chkstk_darwin(v349);
  uint64_t v330 = (char *)&v277 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v303 = sub_100046B9C(&qword_100160038);
  uint64_t v10 = __chkstk_darwin(v303);
  uint64_t v280 = (uint64_t *)((char *)&v277 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v10);
  uint64_t v281 = (uint64_t)&v277 - v12;
  uint64_t v324 = sub_100046B9C(&qword_100160040);
  uint64_t v13 = __chkstk_darwin(v324);
  uint64_t v297 = (uint64_t *)((char *)&v277 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v13);
  uint64_t v301 = (uint64_t)&v277 - v15;
  uint64_t v321 = sub_100046B9C(&qword_100160048);
  __chkstk_darwin(v321);
  uint64_t v323 = (uint64_t)&v277 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v339 = sub_100046B9C(&qword_100160050);
  __chkstk_darwin(v339);
  uint64_t v325 = (char *)&v277 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v322 = sub_100046B9C(&qword_100160058);
  uint64_t v18 = __chkstk_darwin(v322);
  v295 = (uint64_t *)((char *)&v277 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v18);
  uint64_t v299 = (uint64_t)&v277 - v20;
  uint64_t v320 = sub_100046B9C(&qword_100160060);
  uint64_t v21 = __chkstk_darwin(v320);
  uint64_t v294 = (uint64_t *)((char *)&v277 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v21);
  uint64_t v298 = (uint64_t)&v277 - v23;
  uint64_t v336 = sub_100046B9C(&qword_100160068);
  __chkstk_darwin(v336);
  uint64_t v338 = (uint64_t)&v277 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v317 = sub_100046B9C(&qword_100160070);
  __chkstk_darwin(v317);
  uint64_t v318 = (uint64_t)&v277 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v337 = sub_100046B9C(&qword_100160078);
  __chkstk_darwin(v337);
  uint64_t v319 = (char *)&v277 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v344 = sub_100046B9C(&qword_100160080);
  __chkstk_darwin(v344);
  uint64_t v340 = (uint64_t)&v277 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v316 = sub_100046B9C(&qword_100160088);
  uint64_t v28 = __chkstk_darwin(v316);
  uint64_t v291 = (uint64_t *)((char *)&v277 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v28);
  uint64_t v296 = (uint64_t)&v277 - v30;
  uint64_t v313 = sub_100046B9C(&qword_100160090);
  uint64_t v31 = __chkstk_darwin(v313);
  uint64_t v290 = (uint64_t *)((char *)&v277 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v31);
  uint64_t v293 = (uint64_t)&v277 - v33;
  uint64_t v310 = sub_100046B9C(&qword_100160098);
  __chkstk_darwin(v310);
  uint64_t v312 = (uint64_t *)((char *)&v277 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v335 = (void *)sub_100046B9C(&qword_1001600A0);
  __chkstk_darwin(v335);
  uint64_t v314 = (char *)&v277 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = type metadata accessor for PrimarySettingsListFamilyLink();
  uint64_t v286 = *(void *)(v36 - 8);
  uint64_t v37 = *(void *)(v286 + 64);
  uint64_t v38 = __chkstk_darwin(v36 - 8);
  uint64_t v287 = (uint64_t)&v277 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v38);
  uint64_t v289 = (uint64_t)&v277 - v39;
  uint64_t v315 = sub_100046B9C(&qword_1001600A8);
  uint64_t v40 = __chkstk_darwin(v315);
  uint64_t v288 = (uint64_t *)((char *)&v277 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v40);
  uint64_t v292 = (uint64_t)&v277 - v42;
  uint64_t v43 = type metadata accessor for PrimarySettingsListFamilyLinkModel();
  __chkstk_darwin(v43 - 8);
  uint64_t v285 = (uint64_t)&v277 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v346 = sub_100046B9C(&qword_1001600B0);
  __chkstk_darwin(v346);
  uint64_t v348 = (uint64_t)&v277 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v341 = sub_100046B9C(&qword_1001600B8);
  __chkstk_darwin(v341);
  uint64_t v343 = (uint64_t)&v277 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v331 = sub_100046B9C(&qword_1001600C0);
  __chkstk_darwin(v331);
  uint64_t v333 = (uint64_t)&v277 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v308 = sub_100046B9C(&qword_1001600C8);
  __chkstk_darwin(v308);
  uint64_t v309 = (uint64_t)&v277 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v332 = sub_100046B9C(&qword_1001600D0);
  __chkstk_darwin(v332);
  uint64_t v311 = (char *)&v277 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v342 = sub_100046B9C(&qword_1001600D8);
  __chkstk_darwin(v342);
  uint64_t v334 = (char *)&v277 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v347 = sub_100046B9C(&qword_1001600E0);
  __chkstk_darwin(v347);
  v345 = (char *)&v277 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = type metadata accessor for PrimarySettingsListItemIdentifier();
  uint64_t v53 = __chkstk_darwin(v52 - 8);
  uint64_t v279 = (uint64_t)&v277 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = __chkstk_darwin(v53);
  uint64_t v283 = (uint64_t)&v277 - v56;
  uint64_t v57 = __chkstk_darwin(v55);
  uint64_t v282 = (uint64_t)&v277 - v58;
  uint64_t v59 = __chkstk_darwin(v57);
  uint64_t v61 = (char *)&v277 - v60;
  uint64_t v62 = __chkstk_darwin(v59);
  uint64_t v64 = (char *)&v277 - v63;
  uint64_t v65 = __chkstk_darwin(v62);
  uint64_t v67 = (char *)&v277 - v66;
  uint64_t v68 = __chkstk_darwin(v65);
  unint64_t v70 = (char *)&v277 - v69;
  uint64_t v71 = __chkstk_darwin(v68);
  uint64_t v351 = (uint64_t)&v277 - v72;
  __chkstk_darwin(v71);
  unint64_t v74 = (char *)&v277 - v73;
  uint64_t v307 = sub_100046B9C(&qword_1001600E8);
  uint64_t v75 = __chkstk_darwin(v307);
  unint64_t v77 = (char *)&v277 - ((v76 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v75);
  uint64_t v284 = (uint64_t)&v277 - v78;
  uint64_t v79 = type metadata accessor for PrimarySettingsListItemViewType();
  __chkstk_darwin(v79);
  unint64_t v81 = (char *)&v277 - ((v80 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = v2 + *(int *)(type metadata accessor for PrimarySettingsListItem() + 20);
  uint64_t v83 = type metadata accessor for PrimarySettingsListItemModel();
  sub_10003FA0C(v82 + *(int *)(v83 + 20), (uint64_t)v81, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemViewType);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v107 = v285;
      sub_100049B0C((uint64_t)v81, v285, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListFamilyLinkModel);
      uint64_t v108 = v289;
      sub_10003FA0C(v107, v289, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListFamilyLinkModel);
      uint64_t v109 = v351;
      sub_10003FA0C(v82, v351, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
      uint64_t v110 = (uint64_t)v70;
      sub_10003FA0C(v109, (uint64_t)v70, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
      uint64_t v111 = v287;
      sub_10003FA0C(v108, v287, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListFamilyLink);
      unint64_t v112 = (*(unsigned __int8 *)(v286 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v286 + 80);
      uint64_t v113 = swift_allocObject();
      sub_100049B0C(v111, v113 + v112, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListFamilyLink);
      type metadata accessor for SettingsAppModel();
      sub_10004D54C(&qword_10015F590, (void (*)(uint64_t))type metadata accessor for SettingsAppModel);
      uint64_t v114 = Environment.init<A>(_:)();
      uint64_t v115 = (uint64_t)v288;
      *uint64_t v288 = v114;
      *(unsigned char *)(v115 + 8) = v116 & 1;
      uint64_t v117 = v315;
      sub_100049B0C(v110, v115 + *(int *)(v315 + 36), (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
      *(unsigned char *)(v115 + *(int *)(v117 + 40)) = 0;
      uint64_t v118 = (uint64_t (**)@<X0>(uint64_t@<X8>))(v115 + *(int *)(v117 + 44));
      *uint64_t v118 = sub_10007A0B8;
      v118[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v113;
      sub_10003DA8C(v109, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
      sub_10003DA8C(v108, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListFamilyLink);
      uint64_t v119 = v292;
      sub_100049B74(v115, v292, &qword_1001600A8);
      sub_10003F75C(v119, v309, &qword_1001600A8);
      swift_storeEnumTagMultiPayload();
      sub_10004D2D4(&qword_100160128, &qword_1001600E8);
      sub_10004D2D4(&qword_100160130, &qword_1001600A8);
      uint64_t v120 = (uint64_t)v311;
      _ConditionalContent<>.init(storage:)();
      sub_10003F75C(v120, v333, &qword_1001600D0);
      swift_storeEnumTagMultiPayload();
      sub_10005FBEC();
      sub_10005FCAC();
      uint64_t v121 = (uint64_t)v334;
      _ConditionalContent<>.init(storage:)();
      sub_10003F5D0(v120, &qword_1001600D0);
      sub_10003F75C(v121, v343, &qword_1001600D8);
      swift_storeEnumTagMultiPayload();
      sub_10004D470();
      sub_10004D434();
      uint64_t v122 = (uint64_t)v345;
      _ConditionalContent<>.init(storage:)();
      sub_10003F5D0(v121, &qword_1001600D8);
      sub_10003F75C(v122, v348, &qword_1001600E0);
      swift_storeEnumTagMultiPayload();
      sub_10004D360(&qword_100160110, &qword_1001600E0, (void (*)(void))sub_10004D470, (void (*)(void))sub_10004D434);
      sub_10004D4AC();
      _ConditionalContent<>.init(storage:)();
      sub_10003F5D0(v122, &qword_1001600E0);
      sub_10003F5D0(v119, &qword_1001600A8);
      return sub_10003DA8C(v107, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListFamilyLinkModel);
    case 2u:
      long long v124 = *(void **)v81;
      uint64_t v125 = *((void *)v81 + 1);
      uint64_t v126 = *((void *)v81 + 3);
      uint64_t v127 = *((void *)v81 + 4);
      char v128 = v81[40];
      char v129 = v81[41];
      uint64_t v130 = *((void *)v81 + 6);
      uint64_t v131 = *((void *)v81 + 7);
      uint64_t v132 = v312;
      *uint64_t v312 = *(void *)v81;
      v132[1] = v125;
      char v133 = v81[16];
      *((unsigned char *)v132 + 16) = v133;
      v132[3] = v126;
      v132[4] = v127;
      *((unsigned char *)v132 + 40) = v128;
      *((unsigned char *)v132 + 41) = v129;
      v132[6] = v130;
      v132[7] = v131;
      swift_storeEnumTagMultiPayload();
      sub_100047728(v124, v125, v133);
      sub_10006990C();
      sub_10004D2D4(&qword_100160148, &qword_100160090);
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v134 = (uint64_t)v314;
      _ConditionalContent<>.init(storage:)();
      sub_10003F75C(v134, v333, &qword_1001600A0);
      swift_storeEnumTagMultiPayload();
      sub_10005FBEC();
      sub_10005FCAC();
      uint64_t v135 = (uint64_t)v334;
      _ConditionalContent<>.init(storage:)();
      sub_10003F5D0(v134, &qword_1001600A0);
      sub_10003F75C(v135, v343, &qword_1001600D8);
      swift_storeEnumTagMultiPayload();
      sub_10004D470();
      sub_10004D434();
      uint64_t v136 = (uint64_t)v345;
      _ConditionalContent<>.init(storage:)();
      sub_10003F5D0(v135, &qword_1001600D8);
      sub_10003F75C(v136, v348, &qword_1001600E0);
      swift_storeEnumTagMultiPayload();
      sub_10004D360(&qword_100160110, &qword_1001600E0, (void (*)(void))sub_10004D470, (void (*)(void))sub_10004D434);
      sub_10004D4AC();
      _ConditionalContent<>.init(storage:)();
      sub_10003F5D0(v136, &qword_1001600E0);
      sub_100046F04(v124, v125, v133);
      swift_release();
      return swift_bridgeObjectRelease();
    case 3u:
      uint64_t v138 = *(void *)v81;
      uint64_t v137 = *((void *)v81 + 1);
      char v139 = v81[16];
      int v140 = v81[17];
      sub_10003FA0C(v82, (uint64_t)v67, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
      if (v140 == 2) {
        BOOL v141 = v139;
      }
      else {
        BOOL v141 = (v140 & 1) == 0;
      }
      uint64_t v142 = v351;
      sub_10003FA0C((uint64_t)v67, v351, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
      uint64_t v143 = swift_allocObject();
      *(void *)(v143 + 16) = v138;
      *(void *)(v143 + 24) = v137;
      *(unsigned char *)(v143 + 32) = v139;
      *(unsigned char *)(v143 + 33) = v140;
      type metadata accessor for SettingsAppModel();
      sub_10004D54C(&qword_10015F590, (void (*)(uint64_t))type metadata accessor for SettingsAppModel);
      swift_bridgeObjectRetain();
      uint64_t v144 = Environment.init<A>(_:)();
      uint64_t v145 = (uint64_t)v290;
      *uint64_t v290 = v144;
      *(unsigned char *)(v145 + 8) = v146 & 1;
      uint64_t v147 = v313;
      sub_100049B0C(v142, v145 + *(int *)(v313 + 36), (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
      *(unsigned char *)(v145 + *(int *)(v147 + 40)) = v141;
      Swift::String v148 = (uint64_t (**)@<X0>(uint64_t@<X8>))(v145 + *(int *)(v147 + 44));
      *Swift::String v148 = sub_100079FAC;
      v148[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v143;
      sub_10003DA8C((uint64_t)v67, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
      swift_bridgeObjectRelease();
      uint64_t v149 = &qword_100160090;
      uint64_t v150 = v293;
      sub_100049B74(v145, v293, &qword_100160090);
      sub_10003F75C(v150, (uint64_t)v312, &qword_100160090);
      swift_storeEnumTagMultiPayload();
      sub_10006990C();
      sub_10004D2D4(&qword_100160148, &qword_100160090);
      uint64_t v151 = (uint64_t)v314;
      _ConditionalContent<>.init(storage:)();
      sub_10003F75C(v151, v333, &qword_1001600A0);
      swift_storeEnumTagMultiPayload();
      sub_10005FBEC();
      sub_10005FCAC();
      uint64_t v152 = (uint64_t)v334;
      _ConditionalContent<>.init(storage:)();
      sub_10003F5D0(v151, &qword_1001600A0);
      uint64_t v153 = &qword_1001600D8;
      sub_10003F75C(v152, v343, &qword_1001600D8);
      goto LABEL_16;
    case 4u:
      uint64_t v155 = *(void *)v81;
      uint64_t v154 = *((void *)v81 + 1);
      uint64_t v156 = *((void *)v81 + 2);
      char v157 = v81[24];
      int v158 = v81[25];
      sub_10003FA0C(v82, (uint64_t)v64, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
      if (v158 == 2) {
        BOOL v159 = v157;
      }
      else {
        BOOL v159 = (v158 & 1) == 0;
      }
      uint64_t v160 = v351;
      sub_10003FA0C((uint64_t)v64, v351, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
      uint64_t v161 = swift_allocObject();
      *(void *)(v161 + 16) = v155;
      *(void *)(v161 + 24) = v154;
      *(void *)(v161 + 32) = v156;
      *(unsigned char *)(v161 + 40) = v157;
      *(unsigned char *)(v161 + 41) = v158;
      type metadata accessor for SettingsAppModel();
      sub_10004D54C(&qword_10015F590, (void (*)(uint64_t))type metadata accessor for SettingsAppModel);
      swift_bridgeObjectRetain();
      uint64_t v162 = Environment.init<A>(_:)();
      uint64_t v163 = (uint64_t)v291;
      *uint64_t v291 = v162;
      *(unsigned char *)(v163 + 8) = v164 & 1;
      uint64_t v165 = v316;
      sub_100049B0C(v160, v163 + *(int *)(v316 + 36), (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
      *(unsigned char *)(v163 + *(int *)(v165 + 40)) = v159;
      unint64_t v166 = (uint64_t (**)@<X0>(uint64_t@<X8>))(v163 + *(int *)(v165 + 44));
      *unint64_t v166 = sub_100079F50;
      v166[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v161;
      sub_10003DA8C((uint64_t)v64, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
      swift_bridgeObjectRelease();
      uint64_t v149 = &qword_100160088;
      uint64_t v150 = v296;
      sub_100049B74(v163, v296, &qword_100160088);
      sub_10003F75C(v150, v318, &qword_100160088);
      swift_storeEnumTagMultiPayload();
      sub_10004D2D4(&qword_100160160, &qword_100160088);
      sub_10004D2D4(&qword_100160168, &qword_100160060);
      uint64_t v167 = (uint64_t)v319;
      _ConditionalContent<>.init(storage:)();
      sub_10003F75C(v167, v338, &qword_100160078);
      swift_storeEnumTagMultiPayload();
      sub_10004E334();
      sub_10004E3F4();
      uint64_t v152 = v340;
      _ConditionalContent<>.init(storage:)();
      sub_10003F5D0(v167, &qword_100160078);
      uint64_t v153 = &qword_100160080;
      sub_10003F75C(v152, v343, &qword_100160080);
LABEL_16:
      swift_storeEnumTagMultiPayload();
      sub_10004D470();
      sub_10004D434();
      uint64_t v168 = (uint64_t)v345;
      _ConditionalContent<>.init(storage:)();
      sub_10003F5D0(v152, v153);
      sub_10003F75C(v168, v348, &qword_1001600E0);
      swift_storeEnumTagMultiPayload();
      sub_10004D360(&qword_100160110, &qword_1001600E0, (void (*)(void))sub_10004D470, (void (*)(void))sub_10004D434);
      sub_10004D4AC();
      _ConditionalContent<>.init(storage:)();
      sub_10003F5D0(v168, &qword_1001600E0);
      uint64_t v106 = v150;
      uint64_t v169 = v149;
      return sub_10003F5D0(v106, v169);
    case 5u:
      uint64_t v171 = *(void **)v81;
      uint64_t v170 = (void *)*((void *)v81 + 1);
      uint64_t v172 = *((void *)v81 + 4);
      uint64_t v332 = *((void *)v81 + 3);
      int v173 = v81[40];
      int v174 = v81[41];
      int v175 = v81[16];
      sub_10003FA0C(v82, (uint64_t)v61, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
      BOOL v176 = (v174 & 1) == 0;
      if (v174 == 2) {
        BOOL v176 = v173;
      }
      LODWORD(v333) = v176;
      uint64_t v177 = v351;
      sub_10003FA0C((uint64_t)v61, v351, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
      uint64_t v178 = swift_allocObject();
      *(void *)(v178 + 16) = v171;
      *(void *)(v178 + 24) = v170;
      uint64_t v335 = v170;
      LODWORD(v334) = v175;
      *(unsigned char *)(v178 + 32) = v175;
      *(void *)(v178 + 40) = v332;
      *(void *)(v178 + 48) = v172;
      *(unsigned char *)(v178 + 56) = v173;
      *(unsigned char *)(v178 + 57) = v174;
      type metadata accessor for SettingsAppModel();
      sub_100047728(v171, (uint64_t)v170, v175);
      sub_10004D54C(&qword_10015F590, (void (*)(uint64_t))type metadata accessor for SettingsAppModel);
      swift_bridgeObjectRetain();
      uint64_t v179 = Environment.init<A>(_:)();
      uint64_t v180 = (uint64_t)v294;
      *uint64_t v294 = v179;
      *(unsigned char *)(v180 + 8) = v181 & 1;
      uint64_t v182 = v320;
      sub_100049B0C(v177, v180 + *(int *)(v320 + 36), (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
      *(unsigned char *)(v180 + *(int *)(v182 + 40)) = v333;
      unint64_t v183 = (uint64_t (**)@<X0>(uint64_t@<X8>))(v180 + *(int *)(v182 + 44));
      *unint64_t v183 = sub_10003AD18;
      v183[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v178;
      sub_10003DA8C((uint64_t)v61, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
      uint64_t v184 = v298;
      sub_100049B74(v180, v298, &qword_100160060);
      sub_10003F75C(v184, v318, &qword_100160060);
      swift_storeEnumTagMultiPayload();
      sub_10004D2D4(&qword_100160160, &qword_100160088);
      sub_10004D2D4(&qword_100160168, &qword_100160060);
      uint64_t v185 = (uint64_t)v319;
      _ConditionalContent<>.init(storage:)();
      sub_10003F75C(v185, v338, &qword_100160078);
      swift_storeEnumTagMultiPayload();
      sub_10004E334();
      sub_10004E3F4();
      uint64_t v186 = v340;
      _ConditionalContent<>.init(storage:)();
      sub_10003F5D0(v185, &qword_100160078);
      sub_10003F75C(v186, v343, &qword_100160080);
      swift_storeEnumTagMultiPayload();
      sub_10004D470();
      sub_10004D434();
      uint64_t v187 = (uint64_t)v345;
      _ConditionalContent<>.init(storage:)();
      sub_10003F5D0(v186, &qword_100160080);
      sub_10003F75C(v187, v348, &qword_1001600E0);
      swift_storeEnumTagMultiPayload();
      sub_10004D360(&qword_100160110, &qword_1001600E0, (void (*)(void))sub_10004D470, (void (*)(void))sub_10004D434);
      sub_10004D4AC();
      _ConditionalContent<>.init(storage:)();
      sub_100046F04(v171, (uint64_t)v335, (char)v334);
      swift_bridgeObjectRelease();
      sub_10003F5D0(v187, &qword_1001600E0);
      uint64_t v106 = v184;
      uint64_t v169 = &qword_100160060;
      return sub_10003F5D0(v106, v169);
    case 6u:
      uint64_t v189 = *(void **)v81;
      uint64_t v188 = (void *)*((void *)v81 + 1);
      uint64_t v191 = *((void *)v81 + 3);
      uint64_t v190 = *((void *)v81 + 4);
      uint64_t v333 = *((void *)v81 + 5);
      int v192 = v81[48];
      int v193 = v81[49];
      char v194 = v81[16];
      uint64_t v195 = v282;
      sub_10003FA0C(v82, v282, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
      BOOL v196 = (v193 & 1) == 0;
      if (v193 == 2) {
        BOOL v196 = v192;
      }
      LODWORD(v334) = v196;
      sub_10003FA0C(v195, v351, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
      uint64_t v197 = swift_allocObject();
      *(void *)(v197 + 16) = v189;
      *(void *)(v197 + 24) = v188;
      uint64_t v335 = v188;
      *(unsigned char *)(v197 + 32) = v194;
      *(void *)(v197 + 40) = v191;
      *(void *)(v197 + 48) = v190;
      *(void *)(v197 + 56) = v333;
      *(unsigned char *)(v197 + 64) = v192;
      *(unsigned char *)(v197 + 65) = v193;
      type metadata accessor for SettingsAppModel();
      sub_100047728(v189, (uint64_t)v188, v194);
      sub_10004D54C(&qword_10015F590, (void (*)(uint64_t))type metadata accessor for SettingsAppModel);
      swift_bridgeObjectRetain();
      uint64_t v198 = Environment.init<A>(_:)();
      uint64_t v199 = (uint64_t)v295;
      uint64_t *v295 = v198;
      *(unsigned char *)(v199 + 8) = v200 & 1;
      uint64_t v201 = v322;
      sub_100049B0C(v351, v199 + *(int *)(v322 + 36), (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
      *(unsigned char *)(v199 + *(int *)(v201 + 40)) = (_BYTE)v334;
      v202 = (uint64_t (**)@<X0>(uint64_t@<X8>))(v199 + *(int *)(v201 + 44));
      char *v202 = sub_100079EB8;
      v202[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v197;
      sub_10003DA8C(v195, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
      uint64_t v203 = v299;
      sub_100049B74(v199, v299, &qword_100160058);
      sub_10003F75C(v203, v323, &qword_100160058);
      swift_storeEnumTagMultiPayload();
      sub_10004D2D4(&qword_100160178, &qword_100160058);
      sub_10004D2D4(&qword_100160180, &qword_100160040);
      uint64_t v204 = (uint64_t)v325;
      _ConditionalContent<>.init(storage:)();
      sub_10003F75C(v204, v338, &qword_100160050);
      swift_storeEnumTagMultiPayload();
      sub_10004E334();
      sub_10004E3F4();
      uint64_t v205 = v340;
      _ConditionalContent<>.init(storage:)();
      sub_10003F5D0(v204, &qword_100160050);
      sub_10003F75C(v205, v343, &qword_100160080);
      swift_storeEnumTagMultiPayload();
      sub_10004D470();
      sub_10004D434();
      uint64_t v206 = (uint64_t)v345;
      _ConditionalContent<>.init(storage:)();
      sub_10003F5D0(v205, &qword_100160080);
      sub_10003F75C(v206, v348, &qword_1001600E0);
      swift_storeEnumTagMultiPayload();
      sub_10004D360(&qword_100160110, &qword_1001600E0, (void (*)(void))sub_10004D470, (void (*)(void))sub_10004D434);
      sub_10004D4AC();
      _ConditionalContent<>.init(storage:)();
      sub_100046F04(v189, (uint64_t)v335, v194);
      swift_bridgeObjectRelease();
      sub_10003F5D0(v206, &qword_1001600E0);
      uint64_t v106 = v203;
      uint64_t v169 = &qword_100160058;
      return sub_10003F5D0(v106, v169);
    case 7u:
      uint64_t v208 = *(void **)v81;
      uint64_t v207 = *((void *)v81 + 1);
      uint64_t v209 = *((void *)v81 + 3);
      uint64_t v210 = *((void *)v81 + 4);
      uint64_t v331 = *((void *)v81 + 5);
      uint64_t v332 = v209;
      uint64_t v330 = (char *)*((void *)v81 + 6);
      int v211 = v81[56];
      int v212 = v81[57];
      int v213 = v81[16];
      uint64_t v214 = v283;
      sub_10003FA0C(v82, v283, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
      BOOL v215 = (v212 & 1) == 0;
      if (v212 == 2) {
        BOOL v215 = v211;
      }
      LODWORD(v333) = v215;
      sub_10003FA0C(v214, v351, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
      uint64_t v216 = swift_allocObject();
      uint64_t v217 = v208;
      uint64_t v335 = v208;
      *(void *)(v216 + 16) = v208;
      *(void *)(v216 + 24) = v207;
      uint64_t v218 = v207;
      LODWORD(v334) = v213;
      *(unsigned char *)(v216 + 32) = v213;
      *(void *)(v216 + 40) = v332;
      *(void *)(v216 + 48) = v210;
      uint64_t v219 = v330;
      *(void *)(v216 + 56) = v331;
      *(void *)(v216 + 64) = v219;
      *(unsigned char *)(v216 + 72) = v211;
      *(unsigned char *)(v216 + 73) = v212;
      type metadata accessor for SettingsAppModel();
      sub_100047728(v217, v218, v213);
      sub_10004D54C(&qword_10015F590, (void (*)(uint64_t))type metadata accessor for SettingsAppModel);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v220 = Environment.init<A>(_:)();
      uint64_t v221 = (uint64_t)v297;
      *uint64_t v297 = v220;
      *(unsigned char *)(v221 + 8) = v222 & 1;
      uint64_t v223 = v324;
      sub_100049B0C(v351, v221 + *(int *)(v324 + 36), (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
      *(unsigned char *)(v221 + *(int *)(v223 + 40)) = v333;
      uint64_t v224 = (void *)(v221 + *(int *)(v223 + 44));
      *uint64_t v224 = sub_10003AD80;
      v224[1] = v216;
      sub_10003DA8C(v214, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
      uint64_t v225 = v301;
      sub_100049B74(v221, v301, &qword_100160040);
      sub_10003F75C(v225, v323, &qword_100160040);
      swift_storeEnumTagMultiPayload();
      sub_10004D2D4(&qword_100160178, &qword_100160058);
      sub_10004D2D4(&qword_100160180, &qword_100160040);
      uint64_t v226 = (uint64_t)v325;
      _ConditionalContent<>.init(storage:)();
      sub_10003F75C(v226, v338, &qword_100160050);
      swift_storeEnumTagMultiPayload();
      sub_10004E334();
      sub_10004E3F4();
      uint64_t v227 = v340;
      _ConditionalContent<>.init(storage:)();
      sub_10003F5D0(v226, &qword_100160050);
      sub_10003F75C(v227, v343, &qword_100160080);
      swift_storeEnumTagMultiPayload();
      sub_10004D470();
      sub_10004D434();
      uint64_t v228 = (uint64_t)v345;
      _ConditionalContent<>.init(storage:)();
      sub_10003F5D0(v227, &qword_100160080);
      sub_10003F75C(v228, v348, &qword_1001600E0);
      swift_storeEnumTagMultiPayload();
      sub_10004D360(&qword_100160110, &qword_1001600E0, (void (*)(void))sub_10004D470, (void (*)(void))sub_10004D434);
      sub_10004D4AC();
      _ConditionalContent<>.init(storage:)();
      sub_100046F04(v335, v218, (char)v334);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_10003F5D0(v228, &qword_1001600E0);
      uint64_t v106 = v225;
      uint64_t v169 = &qword_100160040;
      return sub_10003F5D0(v106, v169);
    case 8u:
      v257 = *(char **)v81;
      uint64_t v258 = *((void *)v81 + 1);
      uint64_t v260 = *((void *)v81 + 3);
      uint64_t v259 = *((void *)v81 + 4);
      uint64_t v261 = *((void *)v81 + 5);
      uint64_t v340 = *((void *)v81 + 6);
      uint64_t v341 = v261;
      int v262 = v81[56];
      int v263 = v81[57];
      int v264 = v81[16];
      uint64_t v265 = v279;
      sub_10003FA0C(v82, v279, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
      BOOL v266 = (v263 & 1) == 0;
      if (v263 == 2) {
        BOOL v266 = v262;
      }
      LODWORD(v342) = v266;
      sub_10003FA0C(v265, v351, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
      uint64_t v267 = swift_allocObject();
      uint64_t v344 = v258;
      v345 = v257;
      *(void *)(v267 + 16) = v257;
      *(void *)(v267 + 24) = v258;
      LODWORD(v343) = v264;
      *(unsigned char *)(v267 + 32) = v264;
      *(void *)(v267 + 40) = v260;
      *(void *)(v267 + 48) = v259;
      uint64_t v268 = v340;
      *(void *)(v267 + 56) = v341;
      *(void *)(v267 + 64) = v268;
      *(unsigned char *)(v267 + 72) = v262;
      *(unsigned char *)(v267 + 73) = v263;
      type metadata accessor for SettingsAppModel();
      sub_100047728(v257, v258, v264);
      sub_10004D54C(&qword_10015F590, (void (*)(uint64_t))type metadata accessor for SettingsAppModel);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v269 = Environment.init<A>(_:)();
      uint64_t v270 = (uint64_t)v280;
      *uint64_t v280 = v269;
      *(unsigned char *)(v270 + 8) = v271 & 1;
      uint64_t v272 = v303;
      sub_100049B0C(v351, v270 + *(int *)(v303 + 36), (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
      *(unsigned char *)(v270 + *(int *)(v272 + 40)) = v342;
      v273 = (uint64_t (**)@<X0>(uint64_t@<X8>))(v270 + *(int *)(v272 + 44));
      char *v273 = sub_10003AD84;
      v273[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v267;
      sub_10003DA8C(v265, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
      uint64_t v274 = v281;
      sub_100049B74(v270, v281, &qword_100160038);
      sub_10003F75C(v274, (uint64_t)v305, &qword_100160038);
      swift_storeEnumTagMultiPayload();
      sub_10004D2D4(&qword_1001600F8, &qword_100160038);
      sub_1000693A0();
      uint64_t v275 = (uint64_t)v306;
      _ConditionalContent<>.init(storage:)();
      sub_10003F75C(v275, v328, &qword_100160028);
      swift_storeEnumTagMultiPayload();
      sub_100065DF8();
      sub_10004D2D4(&qword_100160108, &qword_100160010);
      uint64_t v276 = (uint64_t)v330;
      _ConditionalContent<>.init(storage:)();
      sub_10003F5D0(v275, &qword_100160028);
      sub_10003F75C(v276, v348, &qword_100160030);
      swift_storeEnumTagMultiPayload();
      sub_10004D360(&qword_100160110, &qword_1001600E0, (void (*)(void))sub_10004D470, (void (*)(void))sub_10004D434);
      sub_10004D4AC();
      _ConditionalContent<>.init(storage:)();
      sub_100046F04(v345, v344, v343);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_10003F5D0(v276, &qword_100160030);
      uint64_t v106 = v274;
      uint64_t v169 = &qword_100160038;
      return sub_10003F5D0(v106, v169);
    case 9u:
      v230 = *(void **)v81;
      uint64_t v229 = *((void *)v81 + 1);
      uint64_t v231 = *((void *)v81 + 3);
      uint64_t v232 = *((void *)v81 + 4);
      uint64_t v233 = *((void *)v81 + 5);
      uint64_t v234 = *((void *)v81 + 6);
      uint64_t v235 = v305;
      *uint64_t v305 = *(void *)v81;
      v235[1] = v229;
      char v236 = v81[16];
      *((unsigned char *)v235 + 16) = v236;
      v235[3] = v231;
      v235[4] = v232;
      uint64_t v351 = v232;
      v235[5] = v233;
      v235[6] = v234;
      swift_storeEnumTagMultiPayload();
      sub_10006EB6C(v230, v229, v236);
      sub_10004D2D4(&qword_1001600F8, &qword_100160038);
      sub_1000693A0();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v237 = (uint64_t)v306;
      _ConditionalContent<>.init(storage:)();
      sub_10003F75C(v237, v328, &qword_100160028);
      swift_storeEnumTagMultiPayload();
      sub_100065DF8();
      sub_10004D2D4(&qword_100160108, &qword_100160010);
      uint64_t v238 = (uint64_t)v330;
      _ConditionalContent<>.init(storage:)();
      sub_10003F5D0(v237, &qword_100160028);
      sub_10003F75C(v238, v348, &qword_100160030);
      swift_storeEnumTagMultiPayload();
      sub_10004D360(&qword_100160110, &qword_1001600E0, (void (*)(void))sub_10004D470, (void (*)(void))sub_10004D434);
      sub_10004D4AC();
      _ConditionalContent<>.init(storage:)();
      sub_10003F5D0(v238, &qword_100160030);
      sub_10006EB80(v230, v229, v236);
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    case 0xAu:
      uint64_t v239 = *(void **)v81;
      uint64_t v240 = *((void *)v81 + 1);
      uint64_t v242 = *((void *)v81 + 3);
      uint64_t v241 = *((void *)v81 + 4);
      char v243 = v81[40];
      char v244 = v81[16];
      uint64_t v245 = v351;
      sub_10003FA0C(v82, v351, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
      v278 = v70;
      sub_10003FA0C(v245, (uint64_t)v70, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
      uint64_t v246 = swift_allocObject();
      *(void *)(v246 + 16) = v239;
      *(void *)(v246 + 24) = v240;
      *(unsigned char *)(v246 + 32) = v244;
      *(void *)(v246 + 40) = v242;
      *(void *)(v246 + 48) = v241;
      *(unsigned char *)(v246 + 56) = v243;
      type metadata accessor for SettingsAppModel();
      uint64_t v247 = v239;
      uint64_t v248 = v239;
      uint64_t v249 = v240;
      sub_10006EB6C(v247, v240, v244);
      sub_10004D54C(&qword_10015F590, (void (*)(uint64_t))type metadata accessor for SettingsAppModel);
      swift_bridgeObjectRetain();
      uint64_t v250 = Environment.init<A>(_:)();
      uint64_t v251 = (uint64_t)v300;
      *uint64_t v300 = v250;
      *(unsigned char *)(v251 + 8) = v252 & 1;
      uint64_t v253 = v329;
      sub_100049B0C((uint64_t)v278, v251 + *(int *)(v329 + 36), (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
      *(unsigned char *)(v251 + *(int *)(v253 + 40)) = 1;
      v254 = (uint64_t (**)@<X0>(uint64_t@<X8>))(v251 + *(int *)(v253 + 44));
      *v254 = sub_100079E38;
      v254[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v246;
      sub_10003DA8C(v245, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
      uint64_t v101 = &qword_100160010;
      uint64_t v255 = v302;
      sub_100049B74(v251, v302, &qword_100160010);
      sub_10003F75C(v255, v328, &qword_100160010);
      swift_storeEnumTagMultiPayload();
      sub_100065DF8();
      sub_10004D2D4(&qword_100160108, &qword_100160010);
      uint64_t v256 = (uint64_t)v330;
      _ConditionalContent<>.init(storage:)();
      sub_10003F75C(v256, v348, &qword_100160030);
      swift_storeEnumTagMultiPayload();
      sub_10004D360(&qword_100160110, &qword_1001600E0, (void (*)(void))sub_10004D470, (void (*)(void))sub_10004D434);
      sub_10004D4AC();
      _ConditionalContent<>.init(storage:)();
      sub_10006EB80(v248, v249, v244);
      swift_bridgeObjectRelease();
      sub_10003F5D0(v256, &qword_100160030);
      uint64_t v106 = v255;
      goto LABEL_28;
    default:
      uint64_t v84 = *(void *)v81;
      uint64_t v85 = *((void *)v81 + 1);
      uint64_t v87 = *((void *)v81 + 2);
      uint64_t v86 = *((void *)v81 + 3);
      uint64_t v339 = v87;
      uint64_t v340 = v84;
      uint64_t v88 = *((void *)v81 + 4);
      uint64_t v330 = (char *)*((void *)v81 + 5);
      int v89 = v81[48];
      sub_10003FA0C(v82, (uint64_t)v74, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
      uint64_t v90 = v85;
      if (v85) {
        int v91 = v89;
      }
      else {
        int v91 = 1;
      }
      LODWORD(v336) = v91;
      sub_10003FA0C((uint64_t)v74, v351, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
      uint64_t v92 = swift_allocObject();
      *(void *)(v92 + 16) = v84;
      *(void *)(v92 + 24) = v85;
      uint64_t v337 = v85;
      uint64_t v338 = v86;
      *(void *)(v92 + 32) = v87;
      *(void *)(v92 + 40) = v86;
      unint64_t v93 = v330;
      *(void *)(v92 + 48) = v88;
      *(void *)(v92 + 56) = v93;
      *(unsigned char *)(v92 + 64) = v89;
      type metadata accessor for SettingsAppModel();
      uint64_t v94 = v86;
      uint64_t v95 = v88;
      uint64_t v96 = v88;
      uint64_t v97 = v93;
      sub_10005F260(v84, v90, v87, v94, v95, v93);
      sub_10004D54C(&qword_10015F590, (void (*)(uint64_t))type metadata accessor for SettingsAppModel);
      *(void *)unint64_t v77 = Environment.init<A>(_:)();
      v77[8] = v98 & 1;
      uint64_t v99 = v307;
      sub_100049B0C(v351, (uint64_t)&v77[*(int *)(v307 + 36)], (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
      v77[*(int *)(v99 + 40)] = v336;
      unint64_t v100 = (uint64_t (**)@<X0>(uint64_t@<X8>))&v77[*(int *)(v99 + 44)];
      *unint64_t v100 = sub_1000658EC;
      v100[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v92;
      sub_10003DA8C((uint64_t)v74, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
      uint64_t v101 = &qword_1001600E8;
      uint64_t v102 = v284;
      sub_100049B74((uint64_t)v77, v284, &qword_1001600E8);
      sub_10003F75C(v102, v309, &qword_1001600E8);
      swift_storeEnumTagMultiPayload();
      sub_10004D2D4(&qword_100160128, &qword_1001600E8);
      sub_10004D2D4(&qword_100160130, &qword_1001600A8);
      uint64_t v103 = (uint64_t)v311;
      _ConditionalContent<>.init(storage:)();
      sub_10003F75C(v103, v333, &qword_1001600D0);
      swift_storeEnumTagMultiPayload();
      sub_10005FBEC();
      sub_10005FCAC();
      uint64_t v104 = (uint64_t)v334;
      _ConditionalContent<>.init(storage:)();
      sub_10003F5D0(v103, &qword_1001600D0);
      sub_10003F75C(v104, v343, &qword_1001600D8);
      swift_storeEnumTagMultiPayload();
      sub_10004D470();
      sub_10004D434();
      uint64_t v105 = (uint64_t)v345;
      _ConditionalContent<>.init(storage:)();
      sub_10003F5D0(v104, &qword_1001600D8);
      sub_10003F75C(v105, v348, &qword_1001600E0);
      swift_storeEnumTagMultiPayload();
      sub_10004D360(&qword_100160110, &qword_1001600E0, (void (*)(void))sub_10004D470, (void (*)(void))sub_10004D434);
      sub_10004D4AC();
      _ConditionalContent<>.init(storage:)();
      sub_10003CB34(v340, v337, v339, v338, v96, v97);
      sub_10003F5D0(v105, &qword_1001600E0);
      uint64_t v106 = v102;
LABEL_28:
      uint64_t v169 = v101;
      return sub_10003F5D0(v106, v169);
  }
}

uint64_t sub_10004D2D4(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10004D318(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10004D318(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_10004D360(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10004D318(a2);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for PrimarySettingsListFamilyLink()
{
  uint64_t result = qword_10015FE00;
  if (!qword_10015FE00) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10004D434()
{
  return sub_10004D360(&qword_100160150, &qword_100160080, (void (*)(void))sub_10004E334, (void (*)(void))sub_10004E3F4);
}

uint64_t sub_10004D470()
{
  return sub_10004D360(&qword_100160118, &qword_1001600D8, (void (*)(void))sub_10005FBEC, (void (*)(void))sub_10005FCAC);
}

unint64_t sub_10004D4AC()
{
  unint64_t result = qword_100160188;
  if (!qword_100160188)
  {
    sub_10004D318(&qword_100160030);
    sub_100065DF8();
    sub_10004D2D4(&qword_100160108, &qword_100160010);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160188);
  }
  return result;
}

uint64_t sub_10004D54C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10004D594()
{
  uint64_t v1 = type metadata accessor for FLFollowUpGroupIdentity();
  uint64_t v59 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v59 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for FLFollowUpInformation();
  uint64_t v60 = *(void *)(v4 - 8);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v10 = (char *)&v59 - v9;
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v59 - v11;
  uint64_t v13 = type metadata accessor for PrimarySettingsListItemIdentifier();
  __chkstk_darwin(v13);
  uint64_t v15 = (uint64_t *)((char *)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100046BE0(v0, (uint64_t)v15);
  unint64_t v16 = 0xD000000000000026;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      (*(void (**)(char *, uint64_t *, uint64_t))(v60 + 32))(v10, v15, v4);
      unint64_t v27 = 0xE000000000000000;
      unint64_t v63 = 0;
      unint64_t v64 = 0xE000000000000000;
      _StringGuts.grow(_:)(38);
      swift_bridgeObjectRelease();
      unint64_t v63 = 0xD000000000000022;
      unint64_t v64 = 0x8000000100124070;
      FLFollowUpInformation.groupIdentity.getter();
      uint64_t v28 = FLFollowUpGroupIdentity.id.getter();
      uint64_t v30 = v29;
      (*(void (**)(char *, uint64_t))(v59 + 8))(v3, v1);
      v31._uint64_t countAndFlagsBits = v28;
      v31._object = v30;
      String.append(_:)(v31);
      swift_bridgeObjectRelease();
      FLFollowUpInformation.itemIdentifier.getter();
      uint64_t v33 = v32;
      swift_bridgeObjectRelease();
      if (v33)
      {
        uint64_t v61 = 46;
        unint64_t v62 = 0xE100000000000000;
        uint64_t result = FLFollowUpInformation.itemIdentifier.getter();
        if (!v34) {
          goto LABEL_64;
        }
        String.append(_:)(*(Swift::String *)&result);
        swift_bridgeObjectRelease();
        uint64_t v35 = v61;
        unint64_t v27 = v62;
      }
      else
      {
        uint64_t v35 = 0;
      }
      unint64_t v57 = v27;
      String.append(_:)(*(Swift::String *)&v35);
      swift_bridgeObjectRelease();
      unint64_t v16 = v63;
      (*(void (**)(char *, uint64_t))(v60 + 8))(v10, v4);
      return v16;
    case 2u:
      uint64_t v36 = (uint64_t *)((char *)v15 + *(int *)(sub_100046B9C(&qword_10015F7F8) + 48));
      uint64_t v37 = *v36;
      uint64_t v38 = (void *)v36[1];
      (*(void (**)(char *, uint64_t *, uint64_t))(v60 + 32))(v7, v15, v4);
      unint64_t v39 = 0xE000000000000000;
      unint64_t v63 = 0;
      unint64_t v64 = 0xE000000000000000;
      _StringGuts.grow(_:)(41);
      swift_bridgeObjectRelease();
      unint64_t v63 = 0xD000000000000022;
      unint64_t v64 = 0x8000000100124040;
      v40._uint64_t countAndFlagsBits = v37;
      v40._object = v38;
      String.append(_:)(v40);
      swift_bridgeObjectRelease();
      v41._uint64_t countAndFlagsBits = 46;
      v41._object = (void *)0xE100000000000000;
      String.append(_:)(v41);
      FLFollowUpInformation.groupIdentity.getter();
      uint64_t v42 = FLFollowUpGroupIdentity.id.getter();
      uint64_t v44 = v43;
      (*(void (**)(char *, uint64_t))(v59 + 8))(v3, v1);
      v45._uint64_t countAndFlagsBits = v42;
      v45._object = v44;
      String.append(_:)(v45);
      swift_bridgeObjectRelease();
      FLFollowUpInformation.itemIdentifier.getter();
      uint64_t v47 = v46;
      swift_bridgeObjectRelease();
      if (v47)
      {
        uint64_t v61 = 46;
        unint64_t v62 = 0xE100000000000000;
        uint64_t result = FLFollowUpInformation.itemIdentifier.getter();
        if (!v48) {
          goto LABEL_65;
        }
        String.append(_:)(*(Swift::String *)&result);
        swift_bridgeObjectRelease();
        uint64_t v49 = v61;
        unint64_t v39 = v62;
      }
      else
      {
        uint64_t v49 = 0;
      }
      unint64_t v58 = v39;
      String.append(_:)(*(Swift::String *)&v49);
      swift_bridgeObjectRelease();
      unint64_t v16 = v63;
      (*(void (**)(char *, uint64_t))(v60 + 8))(v7, v4);
      return v16;
    case 3u:
      uint64_t v50 = *v15;
      uint64_t v51 = (void *)v15[1];
      unint64_t v63 = 0;
      unint64_t v64 = 0xE000000000000000;
      _StringGuts.grow(_:)(43);
      swift_bridgeObjectRelease();
      unint64_t v52 = 0xD000000000000029;
      uint64_t v53 = "com.apple.settings.secondaryAppleAccount.";
      goto LABEL_14;
    case 4u:
      uint64_t v50 = *v15;
      uint64_t v51 = (void *)v15[1];
      unint64_t v63 = 0;
      unint64_t v64 = 0xE000000000000000;
      _StringGuts.grow(_:)(57);
      v54._uint64_t countAndFlagsBits = 0xD000000000000037;
      v54._object = (void *)0x8000000100123FD0;
      String.append(_:)(v54);
      goto LABEL_15;
    case 5u:
      uint64_t v50 = *v15;
      uint64_t v51 = (void *)v15[1];
      unint64_t v63 = 0;
      unint64_t v64 = 0xE000000000000000;
      _StringGuts.grow(_:)(40);
      swift_bridgeObjectRelease();
      unint64_t v52 = 0xD000000000000026;
      uint64_t v53 = "com.apple.settings.connectedHeadphone.";
LABEL_14:
      unint64_t v63 = v52;
      unint64_t v64 = (unint64_t)(v53 - 32) | 0x8000000000000000;
LABEL_15:
      v55._uint64_t countAndFlagsBits = v50;
      v55._object = v51;
      String.append(_:)(v55);
      swift_bridgeObjectRelease();
      return v63;
    case 6u:
      return v16;
    case 7u:
    case 0x12u:
    case 0x1Fu:
    case 0x20u:
    case 0x29u:
    case 0x2Bu:
      return 0xD000000000000019;
    case 8u:
      return 0xD00000000000001FLL;
    case 9u:
      return 0xD000000000000017;
    case 0xAu:
      return 0xD00000000000001BLL;
    case 0xBu:
      return 0xD00000000000001CLL;
    case 0xCu:
      return 0xD00000000000001BLL;
    case 0xDu:
      return 0xD000000000000022;
    case 0xEu:
      return 0xD000000000000016;
    case 0xFu:
      return 0xD00000000000001CLL;
    case 0x10u:
      return 0xD00000000000001CLL;
    case 0x11u:
      return 0xD000000000000020;
    case 0x13u:
      return 0xD000000000000018;
    case 0x14u:
      return 0xD00000000000001DLL;
    case 0x15u:
      return 0xD00000000000001ALL;
    case 0x16u:
      return 0xD000000000000020;
    case 0x17u:
      return 0xD00000000000001FLL;
    case 0x18u:
      return 0xD000000000000027;
    case 0x19u:
      return 0xD00000000000001DLL;
    case 0x1Au:
      return 0xD00000000000002ALL;
    case 0x1Bu:
      return 0xD000000000000020;
    case 0x1Cu:
      return 0xD00000000000001CLL;
    case 0x1Du:
      return 0xD00000000000001ALL;
    case 0x1Eu:
      return 0xD000000000000017;
    case 0x21u:
      return 0xD000000000000028;
    case 0x22u:
      return 0xD000000000000016;
    case 0x23u:
      return 0xD000000000000028;
    case 0x24u:
      return 0xD00000000000001ALL;
    case 0x25u:
      return 0xD000000000000025;
    case 0x26u:
      return 0xD000000000000024;
    case 0x27u:
      return 0xD000000000000028;
    case 0x28u:
      return 0xD00000000000001BLL;
    case 0x2Au:
      return 0xD00000000000001DLL;
    case 0x2Cu:
      return 0xD00000000000001CLL;
    case 0x2Du:
      return 0xD00000000000001ALL;
    case 0x2Eu:
      return 0xD00000000000001BLL;
    case 0x2Fu:
      return 0xD000000000000024;
    case 0x30u:
      return 0xD000000000000024;
    case 0x31u:
      return 0xD000000000000026;
    case 0x32u:
      return 0xD000000000000025;
    case 0x33u:
      return 0xD000000000000017;
    default:
      (*(void (**)(char *, uint64_t *, uint64_t))(v60 + 32))(v12, v15, v4);
      unint64_t v17 = 0xE000000000000000;
      unint64_t v63 = 0;
      unint64_t v64 = 0xE000000000000000;
      _StringGuts.grow(_:)(36);
      swift_bridgeObjectRelease();
      unint64_t v63 = 0xD000000000000020;
      unint64_t v64 = 0x80000001001240A0;
      FLFollowUpInformation.groupIdentity.getter();
      uint64_t v18 = FLFollowUpGroupIdentity.id.getter();
      uint64_t v20 = v19;
      (*(void (**)(char *, uint64_t))(v59 + 8))(v3, v1);
      v21._uint64_t countAndFlagsBits = v18;
      v21._object = v20;
      String.append(_:)(v21);
      swift_bridgeObjectRelease();
      FLFollowUpInformation.itemIdentifier.getter();
      uint64_t v23 = v22;
      swift_bridgeObjectRelease();
      if (v23)
      {
        uint64_t v61 = 46;
        unint64_t v62 = 0xE100000000000000;
        uint64_t result = FLFollowUpInformation.itemIdentifier.getter();
        if (!v25)
        {
          __break(1u);
LABEL_64:
          __break(1u);
LABEL_65:
          __break(1u);
          return result;
        }
        String.append(_:)(*(Swift::String *)&result);
        swift_bridgeObjectRelease();
        uint64_t v26 = v61;
        unint64_t v17 = v62;
      }
      else
      {
        uint64_t v26 = 0;
      }
      unint64_t v56 = v17;
      String.append(_:)(*(Swift::String *)&v26);
      swift_bridgeObjectRelease();
      unint64_t v16 = v63;
      (*(void (**)(char *, uint64_t))(v60 + 8))(v12, v4);
      return v16;
  }
}

uint64_t sub_10004DEE8()
{
  uint64_t v1 = type metadata accessor for PrimarySettingsListItemViewType();
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003C558(v0, (uint64_t)v3);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_10003C668((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListFamilyLinkModel);
      return 1;
    case 2u:
      sub_100046F04(*(void **)v3, *((void *)v3 + 1), v3[16]);
      swift_release();
      goto LABEL_18;
    case 3u:
      int v13 = v3[16];
      int v14 = v3[17];
      goto LABEL_10;
    case 4u:
      int v13 = v3[24];
      int v14 = v3[25];
LABEL_10:
      swift_bridgeObjectRelease();
      if (v14 == 2) {
        return v13 ^ 1u;
      }
      else {
        return v14 & 1;
      }
    case 5u:
      uint64_t v15 = *(void **)v3;
      uint64_t v16 = *((void *)v3 + 1);
      int v17 = v3[40];
      int v18 = v3[41];
      goto LABEL_14;
    case 6u:
      uint64_t v15 = *(void **)v3;
      uint64_t v16 = *((void *)v3 + 1);
      int v17 = v3[48];
      int v18 = v3[49];
LABEL_14:
      sub_100046F04(v15, v16, v3[16]);
      swift_bridgeObjectRelease();
      if (v18 == 2) {
        return v17 ^ 1u;
      }
      else {
        return v18 & 1;
      }
    case 7u:
    case 8u:
      int v4 = v3[56];
      int v5 = v3[57];
      sub_100046F04(*(void **)v3, *((void *)v3 + 1), v3[16]);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v5 == 2) {
        return v4 ^ 1u;
      }
      else {
        return v5 & 1;
      }
    case 9u:
      sub_10006EB80(*(void **)v3, *((void *)v3 + 1), v3[16]);
      swift_bridgeObjectRelease();
      goto LABEL_18;
    case 0xAu:
      sub_10006EB80(*(void **)v3, *((void *)v3 + 1), v3[16]);
LABEL_18:
      swift_bridgeObjectRelease();
      return 0;
    default:
      uint64_t v7 = *(void *)v3;
      uint64_t v8 = *((void *)v3 + 1);
      uint64_t v9 = *((void *)v3 + 2);
      uint64_t v10 = *((void *)v3 + 3);
      uint64_t v11 = *((void *)v3 + 4);
      uint64_t v12 = (void *)*((void *)v3 + 5);
      if (v3[48] == 1)
      {
        sub_10003CB34(v7, v8, v9, v10, v11, v12);
        return 0;
      }
      else
      {
        BOOL v6 = v8 != 0;
        sub_10003CB34(v7, v8, v9, v10, v11, v12);
      }
      return v6;
  }
}

uint64_t sub_10004E11C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for PrimarySettingsListItemViewType();
  __chkstk_darwin(v2);
  int v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003C558(v1, (uint64_t)v4);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_10003C668((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListFamilyLinkModel);
      return 0;
    case 2u:
      uint64_t v5 = v4[40];
      sub_100046F04(*(void **)v4, *((void *)v4 + 1), v4[16]);
      swift_release();
      goto LABEL_13;
    case 3u:
      uint64_t v5 = v4[16];
      goto LABEL_13;
    case 4u:
      uint64_t v5 = v4[24];
      goto LABEL_13;
    case 5u:
      BOOL v6 = *(void **)v4;
      uint64_t v7 = *((void *)v4 + 1);
      uint64_t v5 = v4[40];
      goto LABEL_10;
    case 6u:
      BOOL v6 = *(void **)v4;
      uint64_t v7 = *((void *)v4 + 1);
      uint64_t v5 = v4[48];
LABEL_10:
      sub_100046F04(v6, v7, v4[16]);
      goto LABEL_13;
    case 7u:
    case 8u:
      uint64_t v5 = v4[56];
      sub_100046F04(*(void **)v4, *((void *)v4 + 1), v4[16]);
      swift_bridgeObjectRelease();
      goto LABEL_13;
    case 9u:
      sub_10006EB80(*(void **)v4, *((void *)v4 + 1), v4[16]);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0;
    case 0xAu:
      uint64_t v5 = v4[40];
      sub_10006EB80(*(void **)v4, *((void *)v4 + 1), v4[16]);
LABEL_13:
      swift_bridgeObjectRelease();
      break;
    default:
      uint64_t v5 = v4[48];
      sub_10003CB34(*(void *)v4, *((void *)v4 + 1), *((void *)v4 + 2), *((void *)v4 + 3), *((void *)v4 + 4), *((void **)v4 + 5));
      break;
  }
  return v5;
}

unint64_t sub_10004E2E0()
{
  unint64_t result = qword_10015F8E8;
  if (!qword_10015F8E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015F8E8);
  }
  return result;
}

unint64_t sub_10004E334()
{
  unint64_t result = qword_100160158;
  if (!qword_100160158)
  {
    sub_10004D318(&qword_100160078);
    sub_10004D2D4(&qword_100160160, &qword_100160088);
    sub_10004D2D4(&qword_100160168, &qword_100160060);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160158);
  }
  return result;
}

unint64_t sub_10004E3F4()
{
  unint64_t result = qword_100160170;
  if (!qword_100160170)
  {
    sub_10004D318(&qword_100160050);
    sub_10004D2D4(&qword_100160178, &qword_100160058);
    sub_10004D2D4(&qword_100160180, &qword_100160040);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160170);
  }
  return result;
}

uint64_t sub_10004E4B4()
{
  return sub_10004E4D8();
}

uint64_t sub_10004E4D8()
{
  _StringGuts.grow(_:)(30);
  swift_getObjectType();
  uint64_t v1 = _typeName(_:qualified:)();
  swift_bridgeObjectRelease();
  uint64_t v10 = v1;
  v2._uint64_t countAndFlagsBits = 0x203A6469207B20;
  v2._object = (void *)0xE700000000000000;
  String.append(_:)(v2);
  v3._uint64_t countAndFlagsBits = sub_100048BDC();
  String.append(_:)(v3);
  swift_bridgeObjectRelease();
  v4._uint64_t countAndFlagsBits = 0x6C7561666564202CLL;
  v4._object = (void *)0xEF203A79654B7374;
  String.append(_:)(v4);
  uint64_t v5 = *(void *)(v0 + OBJC_IVAR____TtC11SettingsApp48DefaultsObservingPrimarySettingsListItemProvider_defaultsKey);
  BOOL v6 = *(void **)(v0 + OBJC_IVAR____TtC11SettingsApp48DefaultsObservingPrimarySettingsListItemProvider_defaultsKey + 8);
  swift_bridgeObjectRetain();
  v7._uint64_t countAndFlagsBits = v5;
  v7._object = v6;
  String.append(_:)(v7);
  swift_bridgeObjectRelease();
  v8._uint64_t countAndFlagsBits = 32032;
  v8._object = (void *)0xE200000000000000;
  String.append(_:)(v8);
  return v10;
}

uint64_t sub_10004E5F0(uint64_t a1, int a2)
{
  Swift::String v3 = v2;
  uint64_t v5 = type metadata accessor for PrimarySettingsListSectionModel();
  uint64_t v44 = *(void *)(v5 - 8);
  __chkstk_darwin(v5 - 8);
  uint64_t v46 = (uint64_t)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v2;
  sub_100046B9C(&qword_100161590);
  int v45 = a2;
  uint64_t v8 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v9 = v8;
  if (*(void *)(v7 + 16))
  {
    Swift::String v41 = v2;
    uint64_t v10 = 1 << *(unsigned char *)(v7 + 32);
    uint64_t v11 = *(void *)(v7 + 64);
    uint64_t v43 = (void *)(v7 + 64);
    if (v10 < 64) {
      uint64_t v12 = ~(-1 << v10);
    }
    else {
      uint64_t v12 = -1;
    }
    unint64_t v13 = v12 & v11;
    int64_t v42 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v14 = v8 + 64;
    uint64_t result = swift_retain();
    int64_t v16 = 0;
    while (1)
    {
      if (v13)
      {
        unint64_t v19 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        unint64_t v20 = v19 | (v16 << 6);
      }
      else
      {
        int64_t v21 = v16 + 1;
        if (__OFADD__(v16, 1))
        {
LABEL_64:
          __break(1u);
LABEL_65:
          __break(1u);
          return result;
        }
        if (v21 >= v42) {
          goto LABEL_58;
        }
        unint64_t v22 = v43[v21];
        ++v16;
        if (!v22)
        {
          int64_t v16 = v21 + 1;
          if (v21 + 1 >= v42) {
            goto LABEL_58;
          }
          unint64_t v22 = v43[v16];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v42)
            {
LABEL_58:
              swift_release();
              Swift::String v3 = v41;
              if (v45)
              {
                uint64_t v39 = 1 << *(unsigned char *)(v7 + 32);
                if (v39 >= 64) {
                  bzero(v43, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v43 = -1 << v39;
                }
                *(void *)(v7 + 16) = 0;
              }
              goto LABEL_63;
            }
            unint64_t v22 = v43[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v16 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_65;
                }
                if (v16 >= v42) {
                  goto LABEL_58;
                }
                unint64_t v22 = v43[v16];
                ++v23;
                if (v22) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v16 = v23;
          }
        }
LABEL_21:
        unint64_t v13 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v16 << 6);
      }
      uint64_t v24 = *(void *)(v7 + 48) + 24 * v20;
      uint64_t v25 = *(void *)v24;
      uint64_t v26 = *(void *)(v24 + 8);
      int v27 = *(unsigned __int8 *)(v24 + 16);
      uint64_t v28 = *(void *)(v44 + 72);
      uint64_t v29 = *(void *)(v7 + 56) + v28 * v20;
      if (v45)
      {
        sub_1000A398C(v29, v46, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListSectionModel);
      }
      else
      {
        sub_1000A4650(v29, v46, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListSectionModel);
        sub_10003DA14(v25, v26, v27);
      }
      Hasher.init(_seed:)();
      if (!v27) {
        break;
      }
      if (v27 == 1)
      {
        Swift::UInt v30 = 6;
LABEL_29:
        Hasher._combine(_:)(v30);
        String.hash(into:)();
        goto LABEL_49;
      }
      switch(v25)
      {
        case 1:
          Swift::UInt v31 = 1;
          break;
        case 2:
          Swift::UInt v31 = 2;
          break;
        case 3:
          Swift::UInt v31 = 3;
          break;
        case 4:
          Swift::UInt v31 = 4;
          break;
        case 5:
          Swift::UInt v31 = 7;
          break;
        case 6:
          Swift::UInt v31 = 8;
          break;
        case 7:
          Swift::UInt v31 = 9;
          break;
        case 8:
          Swift::UInt v31 = 10;
          break;
        case 9:
          Swift::UInt v31 = 11;
          break;
        case 10:
          Swift::UInt v31 = 12;
          break;
        case 11:
          Swift::UInt v31 = 13;
          break;
        case 12:
          Swift::UInt v31 = 14;
          break;
        case 13:
          Swift::UInt v31 = 15;
          break;
        case 14:
          Swift::UInt v31 = 16;
          break;
        case 15:
          Swift::UInt v31 = 17;
          break;
        case 16:
          Swift::UInt v31 = 18;
          break;
        default:
          Swift::UInt v31 = 0;
          break;
      }
      Hasher._combine(_:)(v31);
LABEL_49:
      uint64_t result = Hasher._finalize()();
      uint64_t v32 = -1 << *(unsigned char *)(v9 + 32);
      unint64_t v33 = result & ~v32;
      unint64_t v34 = v33 >> 6;
      if (((-1 << v33) & ~*(void *)(v14 + 8 * (v33 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v33) & ~*(void *)(v14 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v35 = 0;
        unint64_t v36 = (unint64_t)(63 - v32) >> 6;
        do
        {
          if (++v34 == v36 && (v35 & 1) != 0)
          {
            __break(1u);
            goto LABEL_64;
          }
          BOOL v37 = v34 == v36;
          if (v34 == v36) {
            unint64_t v34 = 0;
          }
          v35 |= v37;
          uint64_t v38 = *(void *)(v14 + 8 * v34);
        }
        while (v38 == -1);
        unint64_t v17 = __clz(__rbit64(~v38)) + (v34 << 6);
      }
      *(void *)(v14 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      uint64_t v18 = *(void *)(v9 + 48) + 24 * v17;
      *(void *)uint64_t v18 = v25;
      *(void *)(v18 + 8) = v26;
      *(unsigned char *)(v18 + 16) = v27;
      uint64_t result = sub_1000A398C(v46, *(void *)(v9 + 56) + v28 * v17, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListSectionModel);
      ++*(void *)(v9 + 16);
    }
    Swift::UInt v30 = 5;
    goto LABEL_29;
  }
LABEL_63:
  uint64_t result = swift_release();
  *Swift::String v3 = v9;
  return result;
}

uint64_t sub_10004EAEC(uint64_t a1, int a2)
{
  Swift::String v3 = v2;
  uint64_t v5 = type metadata accessor for PrimarySettingsListItemModel();
  uint64_t v43 = *(void *)(v5 - 8);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for PrimarySettingsListItemIdentifier();
  uint64_t v44 = *(void *)(v8 - 8);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *v2;
  sub_100046B9C(&qword_100161598);
  int v45 = a2;
  uint64_t v12 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v13 = v12;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v14 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v15 = *(void *)(v11 + 64);
  int64_t v42 = (void *)(v11 + 64);
  if (v14 < 64) {
    uint64_t v16 = ~(-1 << v14);
  }
  else {
    uint64_t v16 = -1;
  }
  unint64_t v17 = v16 & v15;
  uint64_t v40 = v2;
  int64_t v41 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v18 = v12 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  while (1)
  {
    if (v17)
    {
      unint64_t v22 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v23 = v22 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v24 >= v41) {
      break;
    }
    uint64_t v25 = v42;
    unint64_t v26 = v42[v24];
    ++v20;
    if (!v26)
    {
      int64_t v20 = v24 + 1;
      if (v24 + 1 >= v41) {
        goto LABEL_34;
      }
      unint64_t v26 = v42[v20];
      if (!v26)
      {
        int64_t v27 = v24 + 2;
        if (v27 >= v41)
        {
LABEL_34:
          swift_release();
          Swift::String v3 = v40;
          if ((v45 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v26 = v42[v27];
        if (!v26)
        {
          while (1)
          {
            int64_t v20 = v27 + 1;
            if (__OFADD__(v27, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v41) {
              goto LABEL_34;
            }
            unint64_t v26 = v42[v20];
            ++v27;
            if (v26) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v27;
      }
    }
LABEL_21:
    unint64_t v17 = (v26 - 1) & v26;
    unint64_t v23 = __clz(__rbit64(v26)) + (v20 << 6);
LABEL_22:
    uint64_t v28 = *(void *)(v44 + 72);
    uint64_t v29 = *(void *)(v11 + 48) + v28 * v23;
    if (v45)
    {
      sub_1000A398C(v29, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
      uint64_t v30 = *(void *)(v43 + 72);
      sub_1000A398C(*(void *)(v11 + 56) + v30 * v23, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
    }
    else
    {
      sub_1000A4650(v29, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
      uint64_t v30 = *(void *)(v43 + 72);
      sub_1000A4650(*(void *)(v11 + 56) + v30 * v23, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
    }
    Hasher.init(_seed:)();
    sub_100045B14();
    uint64_t result = Hasher._finalize()();
    uint64_t v31 = -1 << *(unsigned char *)(v13 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v21 = __clz(__rbit64((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v18 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v21 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    sub_1000A398C((uint64_t)v10, *(void *)(v13 + 48) + v28 * v21, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
    uint64_t result = sub_1000A398C((uint64_t)v7, *(void *)(v13 + 56) + v30 * v21, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
    ++*(void *)(v13 + 16);
  }
  swift_release();
  Swift::String v3 = v40;
  uint64_t v25 = v42;
  if ((v45 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v11 + 32);
  if (v38 >= 64) {
    bzero(v25, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v25 = -1 << v38;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *Swift::String v3 = v13;
  return result;
}

uint64_t sub_10004EF98(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10004F000(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10004F068@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for PrimarySettingsListItemIdentifier();
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(*v2 + OBJC_IVAR____TtC11SettingsApp48DefaultsObservingPrimarySettingsListItemProvider_shouldShow) == 1)
  {
    sub_100046BE0(*v2 + OBJC_IVAR____TtC11SettingsApp48DefaultsObservingPrimarySettingsListItemProvider_id, (uint64_t)v7);
    type metadata accessor for StaticPrimarySettingsListItemProvider();
    uint64_t v8 = swift_allocObject();
    sub_10004984C((uint64_t)v7, v8 + OBJC_IVAR____TtC11SettingsApp37StaticPrimarySettingsListItemProvider_id);
    sub_10003FF84(a1, a2);
    swift_setDeallocating();
    sub_100045F84(v8 + OBJC_IVAR____TtC11SettingsApp37StaticPrimarySettingsListItemProvider_id);
    return swift_deallocClassInstance();
  }
  else
  {
    uint64_t v10 = type metadata accessor for PrimarySettingsListItemModel();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
    return v11(a2, 1, 1, v10);
  }
}

uint64_t destroy for PrimarySettingsListToggleModel(uint64_t a1)
{
  sub_100046F04(*(void **)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t sub_10004F244()
{
  uint64_t v0 = type metadata accessor for GenerativeModelsAvailability.Availability.UnavailableInfo.UnavailableReason();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v53 = v0;
  uint64_t v54 = v1;
  __chkstk_darwin(v0);
  unint64_t v56 = (char *)&v48 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = type metadata accessor for GenerativeModelsAvailability.Availability.UnavailableInfo();
  uint64_t v55 = *(void *)(v58 - 8);
  uint64_t v3 = __chkstk_darwin(v58);
  uint64_t v5 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v48 - v6;
  uint64_t v8 = type metadata accessor for GenerativeModelsAvailability.Availability();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v59 = v8;
  uint64_t v60 = v9;
  uint64_t v10 = __chkstk_darwin(v8);
  unint64_t v57 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v48 - v12;
  uint64_t v14 = type metadata accessor for GenerativeModelsAvailability.Parameters();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  unint64_t v17 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for GenerativeModelsAvailability();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  unint64_t v21 = (char *)&v48 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v62 = &type metadata for SiriFeatureFlags;
  unint64_t v63 = sub_10004FA88();
  char v22 = isFeatureEnabled(_:)();
  sub_100042A1C((uint64_t)v61);
  if ((v22 & 1) == 0) {
    return 0;
  }
  uint64_t v51 = v19;
  uint64_t v52 = v18;
  uint64_t v50 = v5;
  uint64_t v23 = v55;
  int64_t v24 = v56;
  uint64_t v25 = v58;
  GenerativeModelsAvailability.Parameters.init(useCaseIdentifier:)();
  static GenerativeModelsAvailability.current(parameters:)();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  GenerativeModelsAvailability.availability.getter();
  uint64_t v27 = v59;
  uint64_t v26 = v60;
  uint64_t v28 = v57;
  (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v57, v13, v59);
  if ((*(unsigned int (**)(char *, uint64_t))(v26 + 88))(v28, v27) == enum case for GenerativeModelsAvailability.Availability.unavailable(_:))
  {
    uint64_t v49 = v21;
    (*(void (**)(char *, uint64_t))(v26 + 96))(v28, v27);
    uint64_t v29 = v7;
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v7, v28, v25);
    uint64_t v30 = GenerativeModelsAvailability.Availability.UnavailableInfo.reasons.getter();
    uint64_t v31 = v54;
    uint64_t v32 = (uint64_t)v24;
    unint64_t v33 = v24;
    uint64_t v34 = v53;
    uint64_t v48 = *(void (**)(char *, void, uint64_t))(v54 + 104);
    v48(v33, enum case for GenerativeModelsAvailability.Availability.UnavailableInfo.UnavailableReason.deviceNotCapable(_:), v53);
    LODWORD(v57) = sub_10004F874(v32, v30);
    uint64_t v35 = v25;
    uint64_t v36 = v34;
    uint64_t v37 = v23;
    swift_bridgeObjectRelease();
    uint64_t v38 = *(void (**)(uint64_t, uint64_t))(v31 + 8);
    v38(v32, v36);
    uint64_t v39 = v50;
    (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v50, v29, v35);
    if (v57)
    {
      uint64_t v40 = *(void (**)(char *, uint64_t))(v23 + 8);
      v40(v39, v35);
      v40(v29, v35);
      (*(void (**)(char *, uint64_t))(v60 + 8))(v13, v59);
      (*(void (**)(char *, uint64_t))(v51 + 8))(v49, v52);
      return 0;
    }
    uint64_t v42 = GenerativeModelsAvailability.Availability.UnavailableInfo.reasons.getter();
    v48((char *)v32, enum case for GenerativeModelsAvailability.Availability.UnavailableInfo.UnavailableReason.regionIneligible(_:), v36);
    char v43 = sub_10004F874(v32, v42);
    swift_bridgeObjectRelease();
    v38(v32, v36);
    uint64_t v44 = *(void (**)(char *, uint64_t))(v37 + 8);
    int v45 = v39;
    uint64_t v46 = v58;
    v44(v45, v58);
    v44(v29, v46);
    (*(void (**)(char *, uint64_t))(v60 + 8))(v13, v59);
    (*(void (**)(char *, uint64_t))(v51 + 8))(v49, v52);
    if (v43) {
      return 0;
    }
  }
  else
  {
    int64_t v41 = *(void (**)(char *, uint64_t))(v26 + 8);
    v41(v13, v27);
    (*(void (**)(char *, uint64_t))(v51 + 8))(v21, v52);
    v41(v28, v27);
  }
  return 1;
}

uint64_t sub_10004F874(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for GenerativeModelsAvailability.Availability.UnavailableInfo.UnavailableReason();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a2 + 16)
    && (sub_100027924(&qword_100161558, (void (*)(uint64_t))&type metadata accessor for GenerativeModelsAvailability.Availability.UnavailableInfo.UnavailableReason), uint64_t v7 = dispatch thunk of Hashable._rawHashValue(seed:)(), v8 = -1 << *(unsigned char *)(a2 + 32), v9 = v7 & ~v8, v10 = a2 + 56, ((*(void *)(a2 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0))
  {
    uint64_t v17 = ~v8;
    uint64_t v18 = a2;
    uint64_t v11 = v4 + 16;
    uint64_t v12 = *(void (**)(char *, unint64_t, uint64_t))(v4 + 16);
    uint64_t v13 = *(void *)(v11 + 56);
    uint64_t v14 = (void (**)(char *, uint64_t))(v11 - 8);
    do
    {
      v12(v6, *(void *)(v18 + 48) + v13 * v9, v3);
      sub_100027924(&qword_100161560, (void (*)(uint64_t))&type metadata accessor for GenerativeModelsAvailability.Availability.UnavailableInfo.UnavailableReason);
      char v15 = dispatch thunk of static Equatable.== infix(_:_:)();
      (*v14)(v6, v3);
      if (v15) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v17;
    }
    while (((*(void *)(v10 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  else
  {
    char v15 = 0;
  }
  return v15 & 1;
}

unint64_t sub_10004FA88()
{
  unint64_t result = qword_1001633C8;
  if (!qword_1001633C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001633C8);
  }
  return result;
}

unint64_t sub_10004FADC()
{
  unint64_t result = qword_10015F8D8;
  if (!qword_10015F8D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015F8D8);
  }
  return result;
}

BOOL sub_10004FB30()
{
  Boolean keyExistsAndHasValidFormat = 0;
  uint64_t v0 = (__CFString *)String._bridgeToObjectiveC()();
  uint64_t v1 = (__CFString *)String._bridgeToObjectiveC()();
  int AppBooleanValue = CFPreferencesGetAppBooleanValue(v0, v1, &keyExistsAndHasValidFormat);

  if (AppBooleanValue) {
    BOOL v3 = keyExistsAndHasValidFormat == 0;
  }
  else {
    BOOL v3 = 1;
  }
  return !v3;
}

uint64_t sub_10004FC00()
{
  return sub_100074304();
}

void sub_10004FC2C(void *a1@<X0>, uint64_t a2@<X8>)
{
}

void sub_10004FC50(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v42 = type metadata accessor for PrimarySettingsListItemViewType();
  __chkstk_darwin(v42);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for PrimarySettingsListItemIdentifier();
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100046B9C((uint64_t *)&unk_100163AD0);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v14 = [self sharedInstance];
  unsigned int v15 = [v14 launchHasCompleted];

  if (v15
    && (uint64_t v16 = OBJC_IVAR____TtC11SettingsApp33WalletAndApplePayListItemProvider_appSettingsContext,
        !*(void *)(v3 + OBJC_IVAR____TtC11SettingsApp33WalletAndApplePayListItemProvider_appSettingsContext)))
  {
    uint64_t v32 = swift_allocObject();
    swift_weakInit();
    aBlock[4] = sub_1000A6998;
    aBlock[5] = v32;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10002CC68;
    aBlock[3] = &unk_100153738;
    unint64_t v33 = _Block_copy(aBlock);
    uint64_t v34 = self;
    swift_retain();
    id v35 = [v34 contextWithBundleId:0 onChange:v33];
    _Block_release(v33);
    swift_release();
    swift_release();
    uint64_t v36 = *(void **)(v3 + v16);
    *(void *)(v3 + v16) = v35;

    int v17 = *(unsigned __int8 *)(v3 + 16);
    if (*(unsigned char *)(v3 + 16))
    {
LABEL_4:
      uint64_t v43 = a2;
      if (v17 == 2)
      {
        uint64_t countAndFlagsBits = (uint64_t)sub_1000477E8();
        object = v18;
      }
      else
      {
        id v20 = [self mainBundle];
        v45._object = (void *)0x8000000100122CF0;
        v21._uint64_t countAndFlagsBits = 0x74656C6C6157;
        v21._object = (void *)0xE600000000000000;
        v22._uint64_t countAndFlagsBits = 0;
        v22._object = (void *)0xE000000000000000;
        v45._uint64_t countAndFlagsBits = 0xD000000000000014;
        Swift::String v23 = NSLocalizedString(_:tableName:bundle:value:comment:)(v21, (Swift::String_optional)0, (NSBundle)v20, v22, v45);
        uint64_t countAndFlagsBits = v23._countAndFlagsBits;
        object = v23._object;
      }
      sub_100057808(v3 + OBJC_IVAR____TtC11SettingsApp33WalletAndApplePayListItemProvider_id, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
      type metadata accessor for StaticPrimarySettingsListItemProvider();
      uint64_t v24 = swift_allocObject();
      sub_10004984C((uint64_t)v10, v24 + OBJC_IVAR____TtC11SettingsApp37StaticPrimarySettingsListItemProvider_id);
      sub_10003FF84(a1, (uint64_t)v13);
      swift_setDeallocating();
      sub_10003DB4C(v24 + OBJC_IVAR____TtC11SettingsApp37StaticPrimarySettingsListItemProvider_id, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
      swift_deallocClassInstance();
      uint64_t v25 = type metadata accessor for PrimarySettingsListItemModel();
      uint64_t v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 48);
      if (!v26(v13, 1, v25))
      {
        sub_100057808((uint64_t)&v13[*(int *)(v25 + 20)], (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemViewType);
        if (swift_getEnumCaseMultiPayload() != 5)
        {
          swift_bridgeObjectRelease();
          sub_10003DB4C((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemViewType);
          goto LABEL_16;
        }
        uint64_t v27 = *(void **)v7;
        uint64_t v28 = *((void *)v7 + 1);
        char v29 = v7[16];
        int v30 = v7[40];
        int v39 = v7[41];
        int v40 = v30;
        uint64_t v31 = v27;
        sub_100047728(v27, v28, v29);
        swift_bridgeObjectRelease();
        if (!v26(v13, 1, v25))
        {
          uint64_t v38 = (uint64_t)&v13[*(int *)(v25 + 20)];
          sub_10003DB4C(v38, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemViewType);
          *(void *)uint64_t v38 = v31;
          *(void *)(v38 + 8) = v28;
          *(unsigned char *)(v38 + 16) = v29;
          *(void *)(v38 + 24) = countAndFlagsBits;
          *(void *)(v38 + 32) = object;
          *(unsigned char *)(v38 + 40) = v40;
          *(unsigned char *)(v38 + 41) = v39;
          swift_storeEnumTagMultiPayload();
          sub_100046F04(v31, v28, v29);
          goto LABEL_16;
        }
        sub_100046F04(v31, v28, v29);
        sub_100046F04(v31, v28, v29);
      }
      swift_bridgeObjectRelease();
LABEL_16:
      sub_1000696E0((uint64_t)v13, v43);
      goto LABEL_17;
    }
  }
  else
  {
    int v17 = *(unsigned __int8 *)(v3 + 16);
    if (*(unsigned char *)(v3 + 16)) {
      goto LABEL_4;
    }
  }
  uint64_t v37 = type metadata accessor for PrimarySettingsListItemModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(a2, 1, 1, v37);
LABEL_17:
  sub_100060800(v3);
}

uint64_t sub_1000501E8()
{
  return sub_100074304();
}

uint64_t sub_100050214@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10005025C(a1, &OBJC_IVAR____TtC11SettingsApp33ExposureNotificationsItemProvider_shouldShowExposureNotifications, &OBJC_IVAR____TtC11SettingsApp33ExposureNotificationsItemProvider_id, (uint64_t (*)(uint64_t))sub_100050418, a2);
}

uint64_t sub_10005025C@<X0>(void *a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t (*a4)(uint64_t)@<X3>, uint64_t a5@<X8>)
{
  uint64_t v19 = a4;
  uint64_t v8 = v5;
  uint64_t v11 = type metadata accessor for PrimarySettingsListItemIdentifier();
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v8 + *a2) == 1)
  {
    sub_100046BE0(v8 + *a3, (uint64_t)v13);
    type metadata accessor for StaticPrimarySettingsListItemProvider();
    uint64_t v14 = swift_allocObject();
    sub_10004984C((uint64_t)v13, v14 + OBJC_IVAR____TtC11SettingsApp37StaticPrimarySettingsListItemProvider_id);
    sub_10003FF84(a1, a5);
    swift_setDeallocating();
    sub_100045F84(v14 + OBJC_IVAR____TtC11SettingsApp37StaticPrimarySettingsListItemProvider_id);
    swift_deallocClassInstance();
    return v19(v8);
  }
  else
  {
    uint64_t v16 = type metadata accessor for PrimarySettingsListItemModel();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(a5, 1, 1, v16);
    int v17 = v19;
    return v17(v8);
  }
}

void sub_100050418(uint64_t a1)
{
  id v2 = [self sharedInstance];
  unsigned int v3 = [v2 launchHasCompleted];

  if (v3)
  {
    uint64_t v4 = OBJC_IVAR____TtC11SettingsApp33ExposureNotificationsItemProvider_enManager;
    if (!*(void *)(a1 + OBJC_IVAR____TtC11SettingsApp33ExposureNotificationsItemProvider_enManager))
    {
      id v5 = [objc_allocWithZone((Class)ENManager) init];
      uint64_t v6 = *(void **)(a1 + v4);
      *(void *)(a1 + v4) = v5;

      uint64_t v7 = *(void **)(a1 + v4);
      if (v7)
      {
        uint64_t v8 = qword_10015F128;
        id v9 = v7;
        if (v8 != -1) {
          swift_once();
        }
        [v9 setDispatchQueue:qword_10016AF88];

        uint64_t v10 = *(void **)(a1 + v4);
        if (v10)
        {
          uint64_t v11 = swift_allocObject();
          swift_weakInit();
          v14[4] = sub_10006719C;
          void v14[5] = v11;
          v14[0] = _NSConcreteStackBlock;
          v14[1] = 1107296256;
          v14[2] = sub_10000FF00;
          _OWORD v14[3] = &unk_100154940;
          uint64_t v12 = _Block_copy(v14);
          id v13 = v10;
          swift_release();
          [v13 getEntitiesWithCompletion:v12];
          _Block_release(v12);
        }
      }
    }
  }
}

uint64_t sub_1000505DC()
{
  return sub_100074304();
}

uint64_t sub_100050608@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10005062C(a1, a2);
}

uint64_t sub_10005062C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v45 = a2;
  uint64_t v46 = a1;
  uint64_t v43 = type metadata accessor for PrimarySettingsListItemViewType();
  __chkstk_darwin(v43);
  uint64_t v4 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for PrimarySettingsListItemIdentifier();
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100046B9C((uint64_t *)&unk_100163AD0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for PrimarySettingsListItemModel();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = v2;
  sub_100057870(v2 + OBJC_IVAR____TtC11SettingsApp31PersonalHotspotListItemProvider_id, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
  type metadata accessor for StaticPrimarySettingsListItemProvider();
  uint64_t v15 = swift_allocObject();
  sub_100058594((uint64_t)v7, v15 + OBJC_IVAR____TtC11SettingsApp37StaticPrimarySettingsListItemProvider_id, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
  sub_10003FF84(v46, (uint64_t)v10);
  swift_setDeallocating();
  sub_10003DBAC(v15 + OBJC_IVAR____TtC11SettingsApp37StaticPrimarySettingsListItemProvider_id, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
  uint64_t v16 = (void *)v11;
  swift_deallocClassInstance();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_10003F5D0((uint64_t)v10, (uint64_t *)&unk_100163AD0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(v45, 1, 1, v11);
  }
  else
  {
    uint64_t v18 = v45;
    sub_100058594((uint64_t)v10, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
    uint64_t v19 = v44;
    uint64_t v20 = (uint64_t)v14;
    if (*(unsigned char *)(v44 + OBJC_IVAR____TtC11SettingsApp31PersonalHotspotListItemProvider_shouldShow) == 1)
    {
      uint64_t v46 = v16;
      uint64_t v21 = sub_100040424();
      uint64_t v42 = v22;
      int v41 = v23;
      id v24 = sub_1000477E8();
      uint64_t v26 = v25;
      if (*(unsigned char *)(v19 + 16))
      {
        uint64_t countAndFlagsBits = 0;
        object = (void *)0xE000000000000000;
      }
      else
      {
        id v40 = v24;
        uint64_t v30 = v21;
        uint64_t v31 = v20;
        id v32 = [self mainBundle];
        v47._object = (void *)0x80000001001275A0;
        v33._uint64_t countAndFlagsBits = 0x53544F485F46464FLL;
        v33._object = (void *)0xEB00000000544F50;
        v34._uint64_t countAndFlagsBits = 0;
        v34._object = (void *)0xE000000000000000;
        v47._uint64_t countAndFlagsBits = 0xD000000000000026;
        Swift::String v35 = NSLocalizedString(_:tableName:bundle:value:comment:)(v33, (Swift::String_optional)0, (NSBundle)v32, v34, v47);
        uint64_t countAndFlagsBits = v35._countAndFlagsBits;
        object = v35._object;

        id v24 = v40;
        uint64_t v20 = v31;
        uint64_t v21 = v30;
      }
      uint64_t v36 = v42;
      char v37 = *(unsigned char *)(v19 + OBJC_IVAR____TtC11SettingsApp31PersonalHotspotListItemProvider_shouldDisable);
      *(void *)uint64_t v4 = v21;
      *((void *)v4 + 1) = v36;
      v4[16] = v41;
      *((void *)v4 + 3) = v24;
      *((void *)v4 + 4) = v26;
      *((void *)v4 + 5) = countAndFlagsBits;
      *((void *)v4 + 6) = object;
      v4[56] = v37;
      v4[57] = 2;
      swift_storeEnumTagMultiPayload();
      uint64_t v38 = v46;
      sub_100052744((uint64_t)v4, v20 + *((int *)v46 + 5));
      sub_100057870(v20, v18, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
      (*(void (**)(uint64_t, void, uint64_t, void *))(v12 + 56))(v18, 0, 1, v38);
      sub_100050AE0(v19);
      uint64_t v29 = v20;
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t, void *))(v12 + 56))(v18, 1, 1, v16);
      sub_100050AE0(v19);
      uint64_t v29 = (uint64_t)v14;
    }
    return sub_10003DBAC(v29, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
  }
}

void sub_100050AE0(uint64_t a1)
{
  uint64_t v2 = sub_100046B9C((uint64_t *)&unk_100163BC0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  uint64_t v5 = type metadata accessor for NSNotificationCenter.Publisher();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  uint64_t v9 = sub_100046B9C(&qword_100161798);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  id v13 = [self sharedInstance];
  unsigned int v14 = [v13 launchHasCompleted];

  if (v14)
  {
    uint64_t v15 = a1 + OBJC_IVAR____TtC11SettingsApp31PersonalHotspotListItemProvider_cancellable;
    swift_beginAccess();
    sub_100053DEC(v15, (uint64_t)v21);
    uint64_t v16 = v22;
    sub_10003F5D0((uint64_t)v21, &qword_100161CD0);
    if (!v16)
    {
      id v17 = [self defaultCenter];
      NSNotificationCenter.publisher(for:object:)();

      sub_100055498();
      v21[0] = (id)static OS_dispatch_queue.main.getter();
      uint64_t v18 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v4, 1, 1, v18);
      sub_100055450(&qword_100163CE0, (void (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Publisher);
      uint64_t v20 = a1;
      sub_100055450((unint64_t *)&qword_100163C00, (void (*)(uint64_t))sub_100055498);
      Publisher.receive<A>(on:options:)();
      sub_10003F5D0((uint64_t)v4, (uint64_t *)&unk_100163BC0);

      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      swift_allocObject();
      swift_weakInit();
      sub_10004D2D4((unint64_t *)&qword_1001617A0, &qword_100161798);
      uint64_t v19 = (void *)Publisher<>.sink(receiveValue:)();
      swift_release();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      uint64_t v22 = type metadata accessor for AnyCancellable();
      int v23 = &protocol witness table for AnyCancellable;
      v21[0] = v19;
      swift_beginAccess();
      sub_100008AE0((uint64_t)v21, v15);
      swift_endAccess();
      sub_100015D3C();
    }
  }
}

uint64_t sub_100050F20()
{
  return sub_10005F79C();
}

uint64_t sub_100050F4C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100052318(a1, a2);
}

uint64_t sub_100050F70()
{
  return sub_100074304();
}

void sub_100050F9C(void *a1@<X0>, uint64_t a2@<X8>)
{
}

void sub_100050FC0(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = v2 + OBJC_IVAR____TtC11SettingsApp28AirplaneModeListItemProvider_id;
  unint64_t v7 = sub_100042C2C();
  uint64_t v8 = (void **)sub_1000403E0(a1, a1[3]);
  LOBYTE(a1) = sub_1000409DC(0, v7, *v8);
  swift_bridgeObjectRelease();
  if (a1)
  {
    if (qword_10015F168 != -1) {
      swift_once();
    }
    uint64_t v9 = type metadata accessor for Logger();
    sub_1000477B0(v9, (uint64_t)qword_10016B028);
    swift_retain_n();
    uint64_t v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      v52[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 136446210;
      uint64_t v13 = sub_100048BDC();
      sub_100042948(v13, v14, v52);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Not including %{public}s due to being hidden.", v12, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    uint64_t v37 = type metadata accessor for PrimarySettingsListItemModel();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(a2, 1, 1, v37);
  }
  else
  {
    uint64_t v15 = self;
    id v16 = [v15 sharedInstance];
    unsigned __int8 v17 = [v16 launchHasCompleted];

    if (v17)
    {
      id v50 = v15;
      if (qword_10015F078 != -1) {
        swift_once();
      }
      uint64_t v51 = a2;
      uint64_t v18 = (void *)qword_10016AE38;
      [(id)qword_10016AE38 setNotifyForExternalChangeOnly:1];
      unsigned int v19 = [v18 airplaneMode];
      char v20 = v19;
      uint64_t v21 = OBJC_IVAR____TtC11SettingsApp28AirplaneModeListItemProvider_airplaneMode;
      if (v19 != *(unsigned __int8 *)(v3 + OBJC_IVAR____TtC11SettingsApp28AirplaneModeListItemProvider_airplaneMode))
      {
        sub_1000403E0((void *)(v3 + OBJC_IVAR____TtC11SettingsApp28AirplaneModeListItemProvider_invalidator), *(void *)(v3 + OBJC_IVAR____TtC11SettingsApp28AirplaneModeListItemProvider_invalidator + 24));
        v52[0] = (uint64_t)"Airplane Mode";
        v52[1] = 13;
        char v53 = 2;
        PassthroughSubject.send(_:)();
      }
      *(unsigned char *)(v3 + v21) = v20;
      uint64_t v22 = *(void **)(v3 + OBJC_IVAR____TtC11SettingsApp28AirplaneModeListItemProvider_airplaneModeController);
      *(void *)(v3 + OBJC_IVAR____TtC11SettingsApp28AirplaneModeListItemProvider_airplaneModeController) = v18;
      id v23 = v18;

      uint64_t v49 = sub_100040424();
      uint64_t v25 = v24;
      char v27 = v26;
      id v28 = sub_1000477E8();
      uint64_t v30 = v29;
      char v31 = *(unsigned char *)(v3 + v21);
      uint64_t v32 = swift_allocObject();
      swift_weakInit();
      sub_100046BE0(v6, v51);
      uint64_t v33 = type metadata accessor for PrimarySettingsListItemModel();
      uint64_t v34 = v51 + *(int *)(v33 + 20);
      *(void *)uint64_t v34 = v49;
      *(void *)(v34 + 8) = v25;
      *(unsigned char *)(v34 + 16) = v27;
      *(void *)(v34 + 24) = v28;
      *(void *)(v34 + 32) = v30;
      *(unsigned char *)(v34 + 40) = 0;
      *(unsigned char *)(v34 + 41) = v31;
      *(void *)(v34 + 48) = sub_1000A7F24;
      *(void *)(v34 + 56) = v32;
      type metadata accessor for PrimarySettingsListItemViewType();
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v51, 0, 1, v33);
      id v35 = [v50 sharedInstance];
      LODWORD(v28) = [v35 launchHasCompleted];

      if (v28)
      {
        id v36 = [(id)qword_10016AE38 delegate];
        swift_unknownObjectRelease();
        if (!v36) {
          [(id)qword_10016AE38 setDelegate:v3];
        }
      }
    }
    else
    {
      uint64_t v38 = sub_100040424();
      uint64_t v40 = v39;
      char v42 = v41;
      id v43 = sub_1000477E8();
      uint64_t v45 = v44;
      sub_100046BE0(v6, a2);
      uint64_t v46 = type metadata accessor for PrimarySettingsListItemModel();
      uint64_t v47 = a2 + *(int *)(v46 + 20);
      *(void *)uint64_t v47 = v38;
      *(void *)(v47 + 8) = v40;
      *(unsigned char *)(v47 + 16) = v42;
      *(void *)(v47 + 24) = v43;
      *(void *)(v47 + 32) = v45;
      *(_WORD *)(v47 + 40) = 512;
      type metadata accessor for PrimarySettingsListItemViewType();
      swift_storeEnumTagMultiPayload();
      uint64_t v48 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56);
      v48(a2, 0, 1, v46);
    }
  }
}

uint64_t sub_100051550()
{
  return sub_10005F79C();
}

uint64_t sub_10005157C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000515A0(a1, a2);
}

uint64_t sub_1000515A0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v50 = a2;
  uint64_t v5 = type metadata accessor for PrimarySettingsListItemIdentifier();
  __chkstk_darwin(v5 - 8);
  unint64_t v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100046B9C((uint64_t *)&unk_100163AD0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for PrimarySettingsListItemModel();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  unint64_t v14 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = v3 + OBJC_IVAR____TtC11SettingsApp25SatelliteListItemProvider_id;
  sub_100057870(v3 + OBJC_IVAR____TtC11SettingsApp25SatelliteListItemProvider_id, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
  type metadata accessor for StaticPrimarySettingsListItemProvider();
  uint64_t v15 = swift_allocObject();
  uint64_t v16 = v11;
  sub_100058594((uint64_t)v7, v15 + OBJC_IVAR____TtC11SettingsApp37StaticPrimarySettingsListItemProvider_id, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
  sub_10003FF84(a1, (uint64_t)v10);
  swift_setDeallocating();
  sub_10003DC0C(v15 + OBJC_IVAR____TtC11SettingsApp37StaticPrimarySettingsListItemProvider_id, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
  swift_deallocClassInstance();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_1000AE040((uint64_t)v10);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(v50, 1, 1, v11);
  }
  else
  {
    uint64_t v18 = sub_100058594((uint64_t)v10, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
    uint64_t v19 = __chkstk_darwin(v18);
    __chkstk_darwin(v19);
    uint64_t v21 = v20 + 4;
    os_unfair_lock_lock(v20 + 4);
    sub_100051B8C(&v51);
    os_unfair_lock_unlock(v21);
    object = (void *)*((void *)&v51 + 1);
    unint64_t v22 = v51;
    switch(*((void *)&v51 + 1))
    {
      case 0:
        uint64_t v24 = v16;
        uint64_t v48 = v3;
        uint64_t v25 = (objc_class *)[self mainBundle];
        unint64_t v45 = 0x8000000100127F20;
        uint64_t v26 = 0x657463656E6E6F43;
        unint64_t v27 = 0xE900000000000064;
        unint64_t v28 = v22;
        v29.super.Class isa = v25;
        uint64_t v30 = 0;
        unint64_t v31 = 0xE000000000000000;
        unint64_t v32 = 0xD000000000000020;
        goto LABEL_10;
      case 1:
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(v50, 1, 1, v16);
        goto LABEL_12;
      case 2:
        uint64_t v24 = v16;
        uint64_t v48 = v3;
        uint64_t v25 = (objc_class *)[self mainBundle];
        unint64_t v32 = 0xD000000000000036;
        unint64_t v45 = 0x8000000100127FC0;
        uint64_t v26 = 0x455441535F46464FLL;
        uint64_t v33 = 0x4554494C4CLL;
        goto LABEL_9;
      case 3:
        uint64_t v24 = v16;
        uint64_t v48 = v3;
        uint64_t v25 = (objc_class *)[self mainBundle];
        unint64_t v32 = 0xD000000000000063;
        unint64_t v45 = 0x8000000100127F50;
        uint64_t v26 = 0x6E6E6F4320746F4ELL;
        uint64_t v33 = 0x6465746365;
LABEL_9:
        unint64_t v27 = v33 & 0xFFFFFFFFFFFFLL | 0xED00000000000000;
        unint64_t v28 = 0;
        v29.super.Class isa = v25;
        uint64_t v30 = 0;
        unint64_t v31 = 0xE000000000000000;
LABEL_10:
        Swift::String v34 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v26, (Swift::String_optional)v28, v29, *(Swift::String *)&v30, *(Swift::String *)&v32);
        uint64_t countAndFlagsBits = v34._countAndFlagsBits;
        object = v34._object;

        break;
      default:
        uint64_t v24 = v16;
        uint64_t countAndFlagsBits = v51;
        uint64_t v48 = v3;
        break;
    }
    uint64_t v35 = sub_100040424();
    uint64_t v37 = v36;
    char v39 = v38;
    id v40 = sub_1000477E8();
    uint64_t v42 = v41;
    uint64_t v43 = (uint64_t)&v14[*(int *)(v24 + 20)];
    sub_10003DC0C(v43, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemViewType);
    *(void *)uint64_t v43 = v35;
    *(void *)(v43 + 8) = v37;
    *(unsigned char *)(v43 + 16) = v39;
    *(void *)(v43 + 24) = v40;
    *(void *)(v43 + 32) = v42;
    *(void *)(v43 + 40) = countAndFlagsBits;
    *(void *)(v43 + 48) = object;
    *(_WORD *)(v43 + 56) = 512;
    type metadata accessor for PrimarySettingsListItemViewType();
    swift_storeEnumTagMultiPayload();
    uint64_t v44 = v50;
    sub_100057870((uint64_t)v14, v50, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v12 + 56))(v44, 0, 1, v24);
LABEL_12:
    sub_100051BD0();
    return sub_10003DC0C((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
  }
}

double sub_100051B8C@<D0>(_OWORD *a1@<X8>)
{
  (*(void (**)(long long *__return_ptr))(v1 + 16))(&v5);
  if (!v2)
  {
    double result = *(double *)&v5;
    *a1 = v5;
  }
  return result;
}

void sub_100051BD0()
{
  uint64_t v0 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for DispatchQoS();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  unint64_t v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = [self sharedInstance];
  unsigned int v9 = [v8 launchHasCompleted];

  if (v9)
  {
    v12[0] = v1;
    if (qword_10015F128 != -1) {
      swift_once();
    }
    uint64_t v10 = swift_allocObject();
    swift_unknownObjectWeakInit();
    aBlock[4] = sub_10002E214;
    aBlock[5] = v10;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10002CC68;
    aBlock[3] = &unk_100154128;
    uint64_t v11 = _Block_copy(aBlock);
    swift_retain();
    static DispatchQoS.unspecified.getter();
    v12[1] = _swiftEmptyArrayStorage;
    sub_10002F6A0();
    sub_100046B9C((uint64_t *)&unk_1001609C0);
    sub_10002F644();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v11);
    (*(void (**)(char *, uint64_t))(v12[0] + 8))(v3, v0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    swift_release();
    swift_release();
  }
}

uint64_t sub_100051EC8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = (uint64_t *)(*(void *)(v1 + 16) + OBJC_IVAR____TtC11SettingsApp25SatelliteListItemProvider_satelliteState);
  uint64_t v3 = *v2;
  uint64_t v4 = v2[1];
  *a1 = *v2;
  a1[1] = v4;
  return sub_100051F08(v3, v4);
}

uint64_t sub_100051F08(uint64_t a1, uint64_t a2)
{
  if ((unint64_t)(a2 - 1) >= 3) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_100051F20()
{
  return sub_100074304();
}

uint64_t sub_100051F4C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100051F70(a1, a2);
}

uint64_t sub_100051F70@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v37 = a2;
  uint64_t v35 = type metadata accessor for PrimarySettingsListItemViewType();
  __chkstk_darwin(v35);
  uint64_t v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for PrimarySettingsListItemIdentifier();
  __chkstk_darwin(v6 - 8);
  id v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100046B9C((uint64_t *)&unk_100163AD0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for PrimarySettingsListItemModel();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v34 = (uint64_t)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = v2;
  sub_100057870(v2 + OBJC_IVAR____TtC11SettingsApp25BluetoothListItemProvider_id, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
  type metadata accessor for StaticPrimarySettingsListItemProvider();
  uint64_t v15 = swift_allocObject();
  sub_100058594((uint64_t)v8, v15 + OBJC_IVAR____TtC11SettingsApp37StaticPrimarySettingsListItemProvider_id, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
  sub_10003FF84(a1, (uint64_t)v11);
  swift_setDeallocating();
  sub_10003DBAC(v15 + OBJC_IVAR____TtC11SettingsApp37StaticPrimarySettingsListItemProvider_id, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
  swift_deallocClassInstance();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_10003F5D0((uint64_t)v11, (uint64_t *)&unk_100163AD0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(v37, 1, 1, v12);
  }
  else
  {
    uint64_t v33 = type metadata accessor for PrimarySettingsListItemModel;
    uint64_t v17 = v34;
    sub_100058594((uint64_t)v11, v34, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
    uint64_t v18 = sub_100040424();
    uint64_t v20 = v19;
    char v22 = v21;
    id v23 = sub_1000477E8();
    uint64_t v25 = v24;
    uint64_t v26 = v36;
    uint64_t v27 = sub_100053308();
    BOOL v28 = *(unsigned char *)(v26 + OBJC_IVAR____TtC11SettingsApp25BluetoothListItemProvider_bluetoothState) == 1;
    *(void *)uint64_t v5 = v18;
    *((void *)v5 + 1) = v20;
    v5[16] = v22;
    *((void *)v5 + 3) = v23;
    *((void *)v5 + 4) = v25;
    *((void *)v5 + 5) = v27;
    *((void *)v5 + 6) = v29;
    v5[56] = v28;
    v5[57] = 2;
    swift_storeEnumTagMultiPayload();
    sub_100052744((uint64_t)v5, v17 + *(int *)(v12 + 20));
    uint64_t v30 = v37;
    unint64_t v31 = v33;
    sub_100057870(v17, v37, (uint64_t (*)(void))v33);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56))(v30, 0, 1, v12);
    sub_10005352C(v26);
    return sub_10003DBAC(v17, (uint64_t (*)(void))v31);
  }
}

uint64_t sub_100052318@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v47 = a2;
  uint64_t v45 = type metadata accessor for PrimarySettingsListItemViewType();
  __chkstk_darwin(v45);
  uint64_t v5 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for PrimarySettingsListItemIdentifier();
  __chkstk_darwin(v6 - 8);
  id v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100046B9C((uint64_t *)&unk_100163AD0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for PrimarySettingsListItemModel();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v44 = (uint64_t)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10015F090 != -1) {
    swift_once();
  }
  uint64_t v15 = (unsigned char *)qword_10016AE68;
  uint64_t v46 = v2;
  uint64_t v43 = v2 + OBJC_IVAR____TtC11SettingsApp28CellularDataListItemProvider_id;
  sub_100057870(v2 + OBJC_IVAR____TtC11SettingsApp28CellularDataListItemProvider_id, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
  type metadata accessor for StaticPrimarySettingsListItemProvider();
  uint64_t v16 = swift_allocObject();
  sub_100058594((uint64_t)v8, v16 + OBJC_IVAR____TtC11SettingsApp37StaticPrimarySettingsListItemProvider_id, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
  sub_10003FF84(a1, (uint64_t)v11);
  swift_setDeallocating();
  sub_10003DBAC(v16 + OBJC_IVAR____TtC11SettingsApp37StaticPrimarySettingsListItemProvider_id, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
  swift_deallocClassInstance();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_10003F5D0((uint64_t)v11, (uint64_t *)&unk_100163AD0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(v47, 1, 1, v12);
  }
  else
  {
    uint64_t v42 = type metadata accessor for PrimarySettingsListItemModel;
    uint64_t v18 = v44;
    sub_100058594((uint64_t)v11, v44, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
    uint64_t v19 = *(void *)(v46 + OBJC_IVAR____TtC11SettingsApp28CellularDataListItemProvider_airplaneModeListItemProvider);
    uint64_t v41 = v12;
    char v20 = *(unsigned char *)(v19 + OBJC_IVAR____TtC11SettingsApp28AirplaneModeListItemProvider_airplaneMode);
    char v21 = v15[17];
    char v22 = v15[18];
    uint64_t v23 = *(void *)(v46 + OBJC_IVAR____TtC11SettingsApp28CellularDataListItemProvider_cellularDataSettingObserver);
    sub_1000530E0();
    char v24 = v15[19];
    sub_1000531F0();
    uint64_t v25 = sub_100052898(v20, v21, v22, v24, *(unsigned char *)(v23 + 18));
    uint64_t v27 = v26;
    char v29 = v28;
    uint64_t v30 = sub_100040424();
    uint64_t v32 = v31;
    char v34 = v33;
    id v35 = sub_1000477E8();
    *(void *)uint64_t v5 = v30;
    *((void *)v5 + 1) = v32;
    v5[16] = v34;
    *((void *)v5 + 3) = v35;
    *((void *)v5 + 4) = v36;
    *((void *)v5 + 5) = v25;
    *((void *)v5 + 6) = v27;
    v5[56] = v29 & 1;
    v5[57] = 2;
    swift_storeEnumTagMultiPayload();
    uint64_t v37 = v41;
    sub_100052744((uint64_t)v5, v18 + *(int *)(v41 + 20));
    uint64_t v38 = v47;
    char v39 = v42;
    sub_100057870(v18, v47, (uint64_t (*)(void))v42);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56))(v38, 0, 1, v37);
    sub_100052A70(v46);
    return sub_10003DBAC(v18, (uint64_t (*)(void))v39);
  }
}

uint64_t sub_100052744(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PrimarySettingsListItemViewType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

char *sub_1000527A8(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10003C668((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemViewType);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for FamilyRowStatus();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      uint64_t v7 = type metadata accessor for PrimarySettingsListFamilyLinkModel();
      *(_OWORD *)&a1[*(int *)(v7 + 20)] = *(_OWORD *)&a2[*(int *)(v7 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100052898(char a1, char a2, char a3, char a4, char a5)
{
  if ((a4 & 1) == 0 && (a5 & 1) == 0)
  {
    uint64_t v5 = (objc_class *)[self mainBundle];
    unint64_t v6 = 0xD000000000000026;
    unint64_t v16 = 0x80000001001275A0;
    uint64_t v7 = 0x4C4C45435F46464FLL;
    unint64_t v8 = 0xEC00000052414C55;
    v9.super.Class isa = v5;
    uint64_t v10 = 0;
    unint64_t v11 = 0xE000000000000000;
LABEL_10:
    uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v7, (Swift::String_optional)0, v9, *(Swift::String *)&v10, *(Swift::String *)&v6)._countAndFlagsBits;
    goto LABEL_11;
  }
  if ((a2 & 1) == 0 || (a3 & 1) == 0 || (a4 & 1) == 0)
  {
    if ((a1 & 1) == 0) {
      return 0;
    }
    uint64_t v5 = (objc_class *)[self mainBundle];
    unint64_t v16 = 0x8000000100124770;
    uint64_t v7 = 0x656E616C70726941;
    unint64_t v8 = 0xED000065646F4D20;
    v9.super.Class isa = v5;
    uint64_t v10 = 0;
    unint64_t v11 = 0xE000000000000000;
    unint64_t v6 = 0xD000000000000010;
    goto LABEL_10;
  }
  uint64_t v5 = (objc_class *)[self mainBundle];
  v17._object = (void *)0x8000000100124770;
  v12._uint64_t countAndFlagsBits = 0x4D4953206F4ELL;
  v12._object = (void *)0xE600000000000000;
  v13._uint64_t countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  v17._uint64_t countAndFlagsBits = 0xD000000000000010;
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v12, (Swift::String_optional)0, (NSBundle)v5, v13, v17)._countAndFlagsBits;
LABEL_11:

  return countAndFlagsBits;
}

uint64_t sub_100052A70(uint64_t a1)
{
  uint64_t v33 = a1;
  uint64_t v1 = sub_100046B9C((uint64_t *)&unk_100163BC0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for NSNotificationCenter.Publisher();
  uint64_t v30 = *(void *)(v4 - 8);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  NSBundle v9 = (char *)&v29 - v8;
  uint64_t v10 = sub_100046B9C(&qword_100161DE8);
  uint64_t v31 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  Swift::String v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100046B9C(&qword_100161DF0);
  uint64_t v32 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v16 = [self sharedInstance];
  unsigned int v17 = [v16 launchHasCompleted];

  if (v17)
  {
    uint64_t v18 = v33 + OBJC_IVAR____TtC11SettingsApp28CellularDataListItemProvider_cancellable;
    swift_beginAccess();
    sub_100053DEC(v18, (uint64_t)v34);
    uint64_t v19 = v35;
    sub_10003F5D0((uint64_t)v34, &qword_100161CD0);
    if (!v19)
    {
      uint64_t v29 = v18;
      char v20 = self;
      id v21 = [v20 defaultCenter];
      if (qword_10015F098 != -1) {
        swift_once();
      }
      NSNotificationCenter.publisher(for:object:)();

      id v22 = [v20 defaultCenter];
      if (qword_10015F0A0 != -1) {
        swift_once();
      }
      NSNotificationCenter.publisher(for:object:)();

      sub_100055450(&qword_100163CE0, (void (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Publisher);
      Publisher.merge(with:)();
      uint64_t v23 = *(void (**)(char *, uint64_t))(v30 + 8);
      v23(v7, v4);
      v23(v9, v4);
      sub_100055498();
      v34[0] = (id)static OS_dispatch_queue.main.getter();
      uint64_t v24 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v3, 1, 1, v24);
      sub_10004D2D4(&qword_100161DF8, &qword_100161DE8);
      sub_100055450((unint64_t *)&qword_100163C00, (void (*)(uint64_t))sub_100055498);
      Publisher.receive<A>(on:options:)();
      sub_10003F5D0((uint64_t)v3, (uint64_t *)&unk_100163BC0);

      (*(void (**)(char *, uint64_t))(v31 + 8))(v12, v10);
      swift_allocObject();
      swift_unknownObjectWeakInit();
      sub_10004D2D4(&qword_100161E00, &qword_100161DF0);
      uint64_t v25 = (void *)Publisher<>.sink(receiveValue:)();
      swift_release();
      (*(void (**)(char *, uint64_t))(v32 + 8))(v15, v13);
      uint64_t v35 = type metadata accessor for AnyCancellable();
      uint64_t v36 = &protocol witness table for AnyCancellable;
      v34[0] = v25;
      uint64_t v26 = v29;
      swift_beginAccess();
      sub_100008AE0((uint64_t)v34, v26);
      swift_endAccess();
    }
  }
  if (qword_10015F090 != -1) {
    swift_once();
  }
  uint64_t v27 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  sub_100055008((uint64_t)sub_100067568, v27);
  return swift_release_n();
}

void sub_1000530E0()
{
  uint64_t v1 = v0;
  if ((PSIsInEDUMode() & 1) == 0)
  {
    id v2 = (id)MobileGestalt_get_current_device();
    if (v2)
    {
      uint64_t v3 = v2;
      int cellularDataCapability = MobileGestalt_get_cellularDataCapability();

      if (cellularDataCapability && (*(unsigned char *)(v1 + 17) & 1) == 0)
      {
        sub_10006768C();
        _CTServerConnectionGetRadioModuleIsDead();
        if (*(unsigned char *)(v1 + 19))
        {
          sub_1000403E0((void *)(v1 + 40), *(void *)(v1 + 64));
          PassthroughSubject.send(_:)();
        }
        *(unsigned char *)(v1 + 19) = 0;
        *(unsigned char *)(v1 + 17) = 1;
      }
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_1000531F0()
{
  uint64_t v1 = v0;
  if ((PSIsInEDUMode() & 1) == 0)
  {
    id v2 = (id)MobileGestalt_get_current_device();
    if (v2)
    {
      uint64_t v3 = v2;
      int cellularDataCapability = MobileGestalt_get_cellularDataCapability();

      if (cellularDataCapability)
      {
        if ((*(unsigned char *)(v1 + 16) & 1) == 0)
        {
          char v5 = *(unsigned char *)(v1 + 18);
          sub_10006768C();
          if (!_CTServerConnectionGetCellularDataIsEnabled())
          {
            if ((v5 != 0) != *(unsigned char *)(v1 + 18))
            {
              sub_1000403E0((void *)(v1 + 40), *(void *)(v1 + 64));
              PassthroughSubject.send(_:)();
            }
            *(unsigned char *)(v1 + 18) = v5 != 0;
            *(unsigned char *)(v1 + 16) = 1;
          }
        }
      }
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_100053308()
{
  uint64_t countAndFlagsBits = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC11SettingsApp25BluetoothListItemProvider_bluetoothState);
  switch(countAndFlagsBits)
  {
    case 1:
      id v2 = (objc_class *)[self mainBundle];
      unint64_t v10 = 0x8000000100124770;
      uint64_t v3 = 0x616C696176616E55;
      unint64_t v4 = 0xEB00000000656C62;
      goto LABEL_7;
    case 2:
      id v2 = (objc_class *)[self mainBundle];
      unint64_t v5 = 0xD000000000000026;
      unint64_t v10 = 0x80000001001275A0;
      uint64_t v3 = 0x45554C425F46464FLL;
      unint64_t v4 = 0xED000048544F4F54;
      goto LABEL_5;
    case 3:
      id v2 = (objc_class *)[self mainBundle];
      unint64_t v5 = 0xD000000000000025;
      unint64_t v10 = 0x8000000100127570;
      uint64_t v3 = 0x5445554C425F4E4FLL;
      unint64_t v4 = 0xEC00000048544F4FLL;
LABEL_5:
      v6.super.Class isa = v2;
      uint64_t v7 = 0;
      unint64_t v8 = 0xE000000000000000;
      goto LABEL_8;
    case 4:
      id v2 = (objc_class *)[self mainBundle];
      unint64_t v10 = 0x8000000100124770;
      uint64_t v3 = 0x6E6E6F4320746F4ELL;
      unint64_t v4 = 0xED00006465746365;
LABEL_7:
      v6.super.Class isa = v2;
      uint64_t v7 = 0;
      unint64_t v8 = 0xE000000000000000;
      unint64_t v5 = 0xD000000000000010;
LABEL_8:
      uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v3, (Swift::String_optional)0, v6, *(Swift::String *)&v7, *(Swift::String *)(&v10 - 1))._countAndFlagsBits;

      break;
    default:
      return countAndFlagsBits;
  }
  return countAndFlagsBits;
}

void sub_10005352C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  unint64_t v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  NSBundle v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = [self sharedInstance];
  unsigned int v11 = [v10 launchHasCompleted];

  if (v11)
  {
    uint64_t v12 = OBJC_IVAR____TtC11SettingsApp25BluetoothListItemProvider_bluetoothController;
    if (!*(void *)(a1 + OBJC_IVAR____TtC11SettingsApp25BluetoothListItemProvider_bluetoothController))
    {
      v19[0] = v3;
      id v13 = [objc_allocWithZone((Class)CBController) init];
      uint64_t v14 = *(void **)(a1 + v12);
      *(void *)(a1 + v12) = v13;

      int out_token = -1;
      sub_100055498();
      uint64_t v15 = static OS_dispatch_queue.main.getter();
      uint64_t v24 = sub_1000A84E4;
      uint64_t v25 = a1;
      long long aBlock = _NSConcreteStackBlock;
      uint64_t v21 = 1107296256;
      id v22 = sub_1000A84EC;
      uint64_t v23 = &unk_100153AF0;
      id v16 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      notify_register_dispatch("com.apple.bluetooth.state", &out_token, v15, v16);
      _Block_release(v16);

      if (qword_10015F128 != -1) {
        swift_once();
      }
      uint64_t v17 = swift_allocObject();
      swift_weakInit();
      uint64_t v24 = sub_100067B3C;
      uint64_t v25 = v17;
      long long aBlock = _NSConcreteStackBlock;
      uint64_t v21 = 1107296256;
      id v22 = sub_10002CC68;
      uint64_t v23 = &unk_100153B40;
      uint64_t v18 = _Block_copy(&aBlock);
      swift_retain();
      static DispatchQoS.unspecified.getter();
      v19[1] = _swiftEmptyArrayStorage;
      sub_10002F6A0();
      sub_100046B9C((uint64_t *)&unk_1001609C0);
      sub_10002F644();
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v18);
      (*(void (**)(char *, uint64_t))(v19[0] + 8))(v5, v2);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      swift_release();
      swift_release();
    }
  }
}

uint64_t sub_100053938()
{
  return sub_100074304();
}

uint64_t sub_100053964@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10005025C(a1, &OBJC_IVAR____TtC11SettingsApp24EthernetListItemProvider_hasEthernetNetworkInterfaces, &OBJC_IVAR____TtC11SettingsApp24EthernetListItemProvider_id, (uint64_t (*)(uint64_t))sub_1000539AC, a2);
}

void sub_1000539AC(uint64_t a1)
{
  uint64_t v2 = sub_100046B9C((uint64_t *)&unk_100163BC0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  uint64_t v5 = type metadata accessor for NSNotificationCenter.Publisher();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  uint64_t v9 = sub_100046B9C(&qword_100161798);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  id v13 = [self sharedInstance];
  unsigned int v14 = [v13 launchHasCompleted];

  if (v14)
  {
    uint64_t v15 = a1 + OBJC_IVAR____TtC11SettingsApp24EthernetListItemProvider_cancellable;
    swift_beginAccess();
    sub_100053DEC(v15, (uint64_t)v21);
    uint64_t v16 = v22;
    sub_10003F5D0((uint64_t)v21, &qword_100161CD0);
    if (!v16)
    {
      id v17 = [self defaultCenter];
      NSNotificationCenter.publisher(for:object:)();

      sub_100055498();
      v21[0] = (id)static OS_dispatch_queue.main.getter();
      uint64_t v18 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v4, 1, 1, v18);
      sub_100055450(&qword_100163CE0, (void (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Publisher);
      uint64_t v20 = a1;
      sub_100055450((unint64_t *)&qword_100163C00, (void (*)(uint64_t))sub_100055498);
      Publisher.receive<A>(on:options:)();
      sub_10003F5D0((uint64_t)v4, (uint64_t *)&unk_100163BC0);

      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      swift_allocObject();
      swift_weakInit();
      sub_10004D2D4((unint64_t *)&qword_1001617A0, &qword_100161798);
      uint64_t v19 = (void *)Publisher<>.sink(receiveValue:)();
      swift_release();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      uint64_t v22 = type metadata accessor for AnyCancellable();
      uint64_t v23 = &protocol witness table for AnyCancellable;
      v21[0] = v19;
      swift_beginAccess();
      sub_100008AE0((uint64_t)v21, v15);
      swift_endAccess();
      sub_100016B98();
    }
  }
}

uint64_t sub_100053DEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100046B9C(&qword_100161CD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100053E54()
{
  return sub_100074304();
}

uint64_t sub_100053E80@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10005025C(a1, &OBJC_IVAR____TtC11SettingsApp24ClassKitListItemProvider_showClassKit, &OBJC_IVAR____TtC11SettingsApp24ClassKitListItemProvider_id, (uint64_t (*)(uint64_t))sub_100053EC8, a2);
}

void sub_100053EC8(uint64_t a1)
{
  uint64_t v2 = sub_100046B9C((uint64_t *)&unk_100163BC0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for NSNotificationCenter.Publisher();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100046B9C(&qword_100161798);
  uint64_t v29 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = [self sharedInstance];
  unsigned int v13 = [v12 launchHasCompleted];

  if (v13)
  {
    uint64_t v14 = a1 + OBJC_IVAR____TtC11SettingsApp24ClassKitListItemProvider_cancellables;
    swift_beginAccess();
    if ((*(void *)v14 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      uint64_t v15 = __CocoaSet.count.getter();
      swift_bridgeObjectRelease();
      if (v15) {
        return;
      }
      goto LABEL_4;
    }
    if (!*(void *)(*(void *)v14 + 16))
    {
LABEL_4:
      id v27 = self;
      id v16 = [v27 defaultCenter];
      NSNotificationCenter.publisher(for:object:)();

      unint64_t v28 = sub_100055498();
      id v30 = (id)static OS_dispatch_queue.main.getter();
      uint64_t v25 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
      uint64_t v17 = *(void *)(v25 - 8);
      uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56);
      uint64_t v26 = v17 + 56;
      v24(v4, 1, 1, v25);
      uint64_t v23 = sub_1000553C0(&qword_100163CE0, (void (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Publisher);
      uint64_t v22 = sub_1000553C0((unint64_t *)&qword_100163C00, (void (*)(uint64_t))sub_100055498);
      Publisher.receive<A>(on:options:)();
      sub_10005FB20((uint64_t)v4);

      uint64_t v21 = *(void (**)(char *, uint64_t))(v6 + 8);
      v21(v8, v5);
      swift_allocObject();
      void v20[2] = a1;
      swift_weakInit();
      v20[1] = sub_10004D2D4((unint64_t *)&qword_1001617A0, &qword_100161798);
      Publisher<>.sink(receiveValue:)();
      swift_release();
      uint64_t v18 = *(void (**)(char *, uint64_t))(v29 + 8);
      v18(v11, v9);
      swift_beginAccess();
      AnyCancellable.store(in:)();
      swift_endAccess();
      swift_release();
      id v19 = [v27 defaultCenter];
      NSNotificationCenter.publisher(for:object:)();

      id v30 = (id)static OS_dispatch_queue.main.getter();
      v24(v4, 1, 1, v25);
      Publisher.receive<A>(on:options:)();
      sub_10005FB20((uint64_t)v4);

      v21(v8, v5);
      swift_allocObject();
      swift_weakInit();
      Publisher<>.sink(receiveValue:)();
      swift_release();
      v18(v11, v9);
      swift_beginAccess();
      AnyCancellable.store(in:)();
      swift_endAccess();
      swift_release();
      sub_10001E134();
    }
  }
}

uint64_t sub_100054478()
{
  return sub_100074304();
}

void sub_1000544A4(void *a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_1000544C8()
{
  return sub_100074304();
}

void sub_1000544F4(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + OBJC_IVAR____TtC11SettingsApp20WiFiListItemProvider_id;
  uint64_t v5 = sub_100040424();
  uint64_t v18 = v6;
  uint64_t v19 = v5;
  char v8 = v7;
  id v9 = sub_1000477E8();
  uint64_t v11 = v10;
  uint64_t v12 = sub_100054630();
  uint64_t v14 = v13;
  BOOL v15 = *(void *)(v3 + 24) == 1;
  sub_100046BE0(v4, a1);
  uint64_t v16 = type metadata accessor for PrimarySettingsListItemModel();
  uint64_t v17 = a1 + *(int *)(v16 + 20);
  *(void *)uint64_t v17 = v19;
  *(void *)(v17 + 8) = v18;
  *(unsigned char *)(v17 + 16) = v8;
  *(void *)(v17 + 24) = v9;
  *(void *)(v17 + 32) = v11;
  *(void *)(v17 + 40) = v12;
  *(void *)(v17 + 48) = v14;
  *(unsigned char *)(v17 + 56) = v15;
  *(unsigned char *)(v17 + 57) = 2;
  type metadata accessor for PrimarySettingsListItemViewType();
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(a1, 0, 1, v16);

  sub_100054808(v3);
}

uint64_t sub_100054630()
{
  uint64_t v1 = *(void *)(v0 + 16);
  unint64_t v2 = *(void *)(v0 + 24);
  uint64_t countAndFlagsBits = v2;
  switch(v2)
  {
    case 0uLL:
      break;
    case 1uLL:
      uint64_t v4 = (objc_class *)[self mainBundle];
      unint64_t v12 = 0x8000000100124770;
      uint64_t v5 = 0x616C696176616E55;
      unint64_t v6 = 0xEB00000000656C62;
      goto LABEL_6;
    case 2uLL:
      uint64_t v4 = (objc_class *)[self mainBundle];
      unint64_t v7 = 0xD000000000000026;
      unint64_t v12 = 0x80000001001275A0;
      uint64_t v5 = 0x494649575F46464FLL;
      unint64_t v6 = 0xE800000000000000;
      v8.super.Class isa = v4;
      uint64_t v9 = 0;
      unint64_t v10 = 0xE000000000000000;
      goto LABEL_7;
    case 3uLL:
      uint64_t v4 = (objc_class *)[self mainBundle];
      unint64_t v12 = 0x8000000100124770;
      uint64_t v5 = 0x6E6E6F4320746F4ELL;
      unint64_t v6 = 0xED00006465746365;
LABEL_6:
      v8.super.Class isa = v4;
      uint64_t v9 = 0;
      unint64_t v10 = 0xE000000000000000;
      unint64_t v7 = 0xD000000000000010;
LABEL_7:
      uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v5, (Swift::String_optional)0, v8, *(Swift::String *)&v9, *(Swift::String *)(&v12 - 1))._countAndFlagsBits;

      break;
    default:
      uint64_t countAndFlagsBits = v1;
      break;
  }
  sub_100054970(v1, v2);
  return countAndFlagsBits;
}

void sub_100054808(uint64_t a1)
{
  id v2 = [self sharedInstance];
  unsigned int v3 = [v2 launchHasCompleted];

  if (v3)
  {
    uint64_t v4 = OBJC_IVAR____TtC11SettingsApp20WiFiListItemProvider_wifiMonitor;
    if (!*(void *)(a1 + OBJC_IVAR____TtC11SettingsApp20WiFiListItemProvider_wifiMonitor))
    {
      uint64_t v5 = swift_allocObject();
      swift_weakInit();
      id v6 = objc_allocWithZone((Class)WFWiFiStateMonitor);
      v10[4] = sub_10001F384;
      v10[5] = v5;
      v10[0] = _NSConcreteStackBlock;
      v10[1] = 1107296256;
      v10[2] = sub_10001F324;
      v10[3] = &unk_1001543D0;
      unint64_t v7 = _Block_copy(v10);
      swift_retain();
      swift_release();
      id v8 = [v6 initWithClient:0 handler:v7];
      _Block_release(v7);
      swift_release();
      uint64_t v9 = *(void **)(a1 + v4);
      *(void *)(a1 + v4) = v8;
    }
  }
}

uint64_t sub_100054970(uint64_t a1, unint64_t a2)
{
  if (a2 >= 4) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_100054984@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000549A8(a1, a2);
}

uint64_t sub_1000549A8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v62 = a2;
  uint64_t v60 = type metadata accessor for PrimarySettingsListItemViewType();
  __chkstk_darwin(v60);
  uint64_t v61 = (uint64_t *)&v56[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = type metadata accessor for PrimarySettingsListItemIdentifier();
  __chkstk_darwin(v6 - 8);
  id v8 = &v56[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_100046B9C((uint64_t *)&unk_100163AD0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = &v56[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = type metadata accessor for PrimarySettingsListItemModel();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  BOOL v15 = &v56[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v59 = v2 + OBJC_IVAR____TtC11SettingsApp19VPNListItemProvider_id;
  sub_100057870(v2 + OBJC_IVAR____TtC11SettingsApp19VPNListItemProvider_id, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
  type metadata accessor for StaticPrimarySettingsListItemProvider();
  uint64_t v16 = swift_allocObject();
  sub_100058594((uint64_t)v8, v16 + OBJC_IVAR____TtC11SettingsApp37StaticPrimarySettingsListItemProvider_id, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
  sub_10003FF84(a1, (uint64_t)v11);
  swift_setDeallocating();
  sub_10003DBAC(v16 + OBJC_IVAR____TtC11SettingsApp37StaticPrimarySettingsListItemProvider_id, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
  swift_deallocClassInstance();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_1000AE040((uint64_t)v11);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(v62, 1, 1, v12);
  }
  uint64_t v18 = v62;
  sub_100058594((uint64_t)v11, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
  uint64_t v19 = *(void *)(v3 + OBJC_IVAR____TtC11SettingsApp19VPNListItemProvider_visibilityStyle);
  uint64_t v20 = v3;
  if (v19 == 2)
  {
    int v35 = *(unsigned __int8 *)(v3 + OBJC_IVAR____TtC11SettingsApp19VPNListItemProvider_hasRelayConfigurations);
    uint64_t v58 = v15;
    if (v35 == 1)
    {
      id v36 = [self mainBundle];
      v63._object = (void *)0x8000000100122CF0;
      v37._uint64_t countAndFlagsBits = 0x65522026204E5056;
      v37._object = (void *)0xEC0000007379616CLL;
      v38._uint64_t countAndFlagsBits = 0;
      v38._object = (void *)0xE000000000000000;
      v63._uint64_t countAndFlagsBits = 0xD000000000000014;
      Swift::String v39 = NSLocalizedString(_:tableName:bundle:value:comment:)(v37, (Swift::String_optional)0, (NSBundle)v36, v38, v63);
      uint64_t countAndFlagsBits = v39._countAndFlagsBits;
      object = v39._object;
    }
    else
    {
      uint64_t countAndFlagsBits = (uint64_t)sub_1000477E8();
      object = v42;
    }
    uint64_t v43 = sub_100040424();
    uint64_t v45 = v44;
    char v47 = v46;
    uint64_t v48 = sub_1000AB544(*(void *)(v3 + OBJC_IVAR____TtC11SettingsApp19VPNListItemProvider_connectivityState));
    uint64_t v49 = v61;
    *uint64_t v61 = v43;
    v49[1] = v45;
    uint64_t v34 = (uint64_t)v49;
    *((unsigned char *)v49 + 16) = v47;
    v49[3] = countAndFlagsBits;
    v49[4] = (uint64_t)object;
    v49[5] = v48;
    v49[6] = v50;
    *((_WORD *)v49 + 28) = 512;
    goto LABEL_13;
  }
  if (v19 == 1)
  {
    uint64_t v22 = OBJC_IVAR____TtC11SettingsApp19VPNListItemProvider_connectivityState;
    unint64_t v23 = *(void *)(v3 + OBJC_IVAR____TtC11SettingsApp19VPNListItemProvider_connectivityState);
    if (v23 < 6)
    {
      uint64_t v58 = v15;
      unsigned int v57 = (0x26u >> v23) & 1;
      uint64_t v24 = sub_100040424();
      uint64_t v26 = v25;
      char v28 = v27;
      uint64_t v29 = sub_1000AB3EC(*(void *)(v3 + v22));
      uint64_t v31 = v30;
      uint64_t v32 = swift_allocObject();
      swift_weakInit();
      uint64_t v33 = v61;
      *uint64_t v61 = v24;
      v33[1] = v26;
      uint64_t v34 = (uint64_t)v33;
      *((unsigned char *)v33 + 16) = v28;
      v33[3] = v29;
      v33[4] = v31;
      *((unsigned char *)v33 + 40) = 0;
      *((unsigned char *)v33 + 41) = v57;
      v33[6] = (uint64_t)sub_1000AE838;
      v33[7] = v32;
LABEL_13:
      swift_storeEnumTagMultiPayload();
      BOOL v15 = v58;
      sub_100052744(v34, (uint64_t)&v58[*(int *)(v12 + 20)]);
      sub_100057870((uint64_t)v15, v18, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56))(v18, 0, 1, v12);
      id v21 = [self sharedInstance];
      goto LABEL_14;
    }
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(v18, 1, 1, v12);
  id v21 = [self sharedInstance];
LABEL_14:
  id v51 = v21;
  unsigned int v52 = [v51 launchHasCompleted];

  if (v52)
  {
    uint64_t v53 = OBJC_IVAR____TtC11SettingsApp19VPNListItemProvider_vpnConnectivityManager;
    if (!*(void *)(v20 + OBJC_IVAR____TtC11SettingsApp19VPNListItemProvider_vpnConnectivityManager))
    {
      id v54 = [objc_allocWithZone((Class)NEVPNConnectivityManager) initWithDelegate:v20];
      uint64_t v55 = *(void **)(v20 + v53);
      *(void *)(v20 + v53) = v54;

      sub_100021068();
    }
  }
  return sub_10003DBAC((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
}

uint64_t sub_100055008(uint64_t a1, uint64_t a2)
{
  uint64_t v20 = a1;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v23 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  uint64_t v21 = *(void *)(v7 - 8);
  uint64_t v22 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100055498();
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, enum case for DispatchQoS.QoSClass.userInitiated(_:), v10);
  uint64_t v14 = (void *)static OS_dispatch_queue.global(qos:)();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  swift_unownedRetainStrong();
  swift_unownedRetain();
  swift_unownedRetain();
  swift_release();
  BOOL v15 = (void *)swift_allocObject();
  uint64_t v16 = v20;
  v15[2] = v2;
  void v15[3] = v16;
  v15[4] = a2;
  aBlock[4] = sub_10002CFB8;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002CC68;
  aBlock[3] = &unk_100153C88;
  uint64_t v17 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  uint64_t v24 = _swiftEmptyArrayStorage;
  sub_100055450((unint64_t *)&qword_1001614F0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100046B9C((uint64_t *)&unk_1001609C0);
  sub_10004D2D4((unint64_t *)&qword_100161500, (uint64_t *)&unk_1001609C0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  swift_unownedRelease();
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v23 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v9, v22);
  return swift_release();
}

uint64_t sub_1000553C0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100055408(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100055450(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100055498()
{
  unint64_t result = qword_1001609D0;
  if (!qword_1001609D0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1001609D0);
  }
  return result;
}

void sub_1000554D8(uint64_t a1, id *a2, uint64_t *a3)
{
  uint64_t v218 = a2;
  uint64_t v5 = sub_100046B9C(&qword_1001629E0);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v200 = (uint64_t)&v195 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v212 = (uint64_t)&v195 - v9;
  __chkstk_darwin(v8);
  uint64_t v209 = (uint64_t)&v195 - v10;
  uint64_t v11 = type metadata accessor for FLFollowUpGroupSectionElement();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v216 = v11;
  uint64_t v217 = v12;
  uint64_t v13 = __chkstk_darwin(v11);
  BOOL v196 = (char *)&v195 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v198 = (char *)&v195 - v16;
  __chkstk_darwin(v15);
  uint64_t v203 = (char *)&v195 - v17;
  uint64_t v18 = sub_100046B9C(&qword_100163C30);
  uint64_t v19 = __chkstk_darwin(v18 - 8);
  uint64_t v197 = (char *)&v195 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v205 = (char *)&v195 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v204 = (char *)&v195 - v24;
  __chkstk_darwin(v23);
  uint64_t v201 = (char *)&v195 - v25;
  uint64_t v220 = type metadata accessor for PrimarySettingsListSectionModel();
  uint64_t v26 = __chkstk_darwin(v220);
  uint64_t v207 = (uint64_t)&v195 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v206 = (_OWORD *)((char *)&v195 - v29);
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v215 = (uint64_t)&v195 - v31;
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v214 = (_OWORD *)((char *)&v195 - v33);
  uint64_t v34 = __chkstk_darwin(v32);
  uint64_t v210 = (uint64_t)&v195 - v35;
  uint64_t v36 = __chkstk_darwin(v34);
  int v213 = (_OWORD *)((char *)&v195 - v37);
  __chkstk_darwin(v36);
  v202 = (_OWORD *)((char *)&v195 - v38);
  uint64_t v221 = (int *)type metadata accessor for FollowUpInformationProviderSnapshot();
  uint64_t v39 = __chkstk_darwin(v221);
  uint64_t v199 = (uint64_t)&v195 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = __chkstk_darwin(v39);
  uint64_t v211 = (uint64_t)&v195 - v42;
  uint64_t v43 = __chkstk_darwin(v41);
  uint64_t v208 = (uint64_t)&v195 - v44;
  __chkstk_darwin(v43);
  char v46 = (uint64_t *)((char *)&v195 - v45);
  char v47 = (char *)sub_100056ED8() + OBJC_IVAR____TtC11SettingsApp29FollowUpListElementsGenerator_currentSnapshot;
  swift_beginAccess();
  sub_1000579A8((uint64_t)v47, (uint64_t)v46, (uint64_t (*)(void))type metadata accessor for FollowUpInformationProviderSnapshot);
  swift_release();
  uint64_t v48 = *v46;
  swift_bridgeObjectRetain();
  sub_10003DC6C((uint64_t)v46, (uint64_t (*)(void))type metadata accessor for FollowUpInformationProviderSnapshot);
  uint64_t v49 = *(void *)(v48 + 16);
  swift_bridgeObjectRelease();
  uint64_t v222 = a1;
  if (v49)
  {
    uint64_t v50 = (char *)sub_100056ED8() + OBJC_IVAR____TtC11SettingsApp29FollowUpListElementsGenerator_currentSnapshot;
    swift_beginAccess();
    sub_1000579A8((uint64_t)v50, (uint64_t)v46, (uint64_t (*)(void))type metadata accessor for FollowUpInformationProviderSnapshot);
    swift_release();
    uint64_t v51 = v46[3];
    swift_bridgeObjectRetain();
    sub_10003DC6C((uint64_t)v46, (uint64_t (*)(void))type metadata accessor for FollowUpInformationProviderSnapshot);
    uint64_t v52 = *(void *)(v51 + 16);
    swift_bridgeObjectRelease();
    if (v52)
    {
      uint64_t v53 = *a3;
      uint64_t v54 = *(void *)(*a3 + 16);
      if (v54)
      {
        uint64_t v219 = a3;
        uint64_t v55 = v53 + 32;
        swift_bridgeObjectRetain();
        uint64_t v56 = 0;
        while (1)
        {
          sub_1000620F8(v55, (uint64_t)&v224);
          uint64_t v58 = v225;
          unsigned int v57 = v226;
          sub_1000403E0(&v224, v225);
          uint64_t v59 = ((uint64_t (*)(uint64_t, _UNKNOWN **))v57[1])(v58, v57);
          uint64_t v61 = v60;
          LODWORD(v58) = v62;
          sub_10003E2B4(v59, v60, v62);
          sub_100042A1C((uint64_t)&v224);
          BOOL v63 = v58 == 2 && v59 == 3;
          if (v63 && v61 == 0) {
            break;
          }
          ++v56;
          v55 += 40;
          if (v54 == v56)
          {
            swift_bridgeObjectRelease();
            a3 = v219;
            goto LABEL_21;
          }
        }
        swift_bridgeObjectRelease();
        uint64_t v65 = (char *)sub_100056ED8() + OBJC_IVAR____TtC11SettingsApp29FollowUpListElementsGenerator_currentSnapshot;
        swift_beginAccess();
        sub_1000579A8((uint64_t)v65, (uint64_t)v46, (uint64_t (*)(void))type metadata accessor for FollowUpInformationProviderSnapshot);
        swift_release();
        uint64_t v66 = v46[5];
        swift_bridgeObjectRetain();
        sub_10003DC6C((uint64_t)v46, (uint64_t (*)(void))type metadata accessor for FollowUpInformationProviderSnapshot);
        if (v66)
        {
          swift_bridgeObjectRetain();
          uint64_t v67 = (uint64_t)v201;
          LocalizedStringResource.init(stringLiteral:)();
          uint64_t v68 = type metadata accessor for LocalizedStringResource();
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v68 - 8) + 56))(v67, 0, 1, v68);
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v69 = type metadata accessor for LocalizedStringResource();
          uint64_t v67 = (uint64_t)v201;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v69 - 8) + 56))(v201, 1, 1, v69);
        }
        uint64_t v70 = v220;
        uint64_t v71 = (char *)sub_100056ED8() + OBJC_IVAR____TtC11SettingsApp29FollowUpListElementsGenerator_currentSnapshot;
        swift_beginAccess();
        sub_1000579A8((uint64_t)v71, (uint64_t)v46, (uint64_t (*)(void))type metadata accessor for FollowUpInformationProviderSnapshot);
        swift_release();
        uint64_t v72 = v46[3];
        swift_bridgeObjectRetain();
        sub_10003DC6C((uint64_t)v46, (uint64_t (*)(void))type metadata accessor for FollowUpInformationProviderSnapshot);
        uint64_t v73 = (uint64_t)v202;
        _OWORD *v202 = xmmword_100120D00;
        *(unsigned char *)(v73 + 16) = 2;
        *(void *)(v73 + 24) = 0;
        *(void *)(v73 + 32) = 0;
        sub_100049B74(v67, v73 + *(int *)(v70 + 24), &qword_100163C30);
        *(void *)(v73 + *(int *)(v70 + 28)) = v72;
        uint64_t v225 = v70;
        uint64_t v226 = &off_100151D00;
        unint64_t v74 = sub_10002A3A4((uint64_t *)&v224);
        sub_1000579A8(v73, (uint64_t)v74, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListSectionModel);
        uint64_t v75 = v56 + 1;
        if (__OFADD__(v56, 1)) {
          goto LABEL_115;
        }
        a3 = v219;
        if (*(void *)(*v219 + 16) < v75) {
          goto LABEL_116;
        }
        if (v75 < 0) {
          goto LABEL_117;
        }
        sub_1000498B0(&v224, (uint64_t)v223);
        sub_1000E6B70(v56 + 1, v56 + 1, (uint64_t)v223);
        sub_10003DC6C(v73, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListSectionModel);
      }
    }
  }
LABEL_21:
  uint64_t v76 = *a3;
  uint64_t v77 = *(void *)(*a3 + 16);
  if (v77)
  {
    uint64_t v219 = a3;
    uint64_t v78 = v76 + 32;
    swift_bridgeObjectRetain();
    uint64_t v70 = 0;
    while (1)
    {
      sub_1000620F8(v78, (uint64_t)&v224);
      uint64_t v79 = v225;
      uint64_t v80 = v226;
      sub_1000403E0(&v224, v225);
      uint64_t v81 = ((uint64_t (*)(uint64_t, _UNKNOWN **))v80[1])(v79, v80);
      uint64_t v83 = v82;
      LODWORD(v80) = v84;
      sub_10003E2B4(v81, v82, v84);
      sub_100042A1C((uint64_t)&v224);
      BOOL v85 = v80 == 2 && v81 == 8;
      if (v85 && v83 == 0) {
        break;
      }
      ++v70;
      v78 += 40;
      if (v77 == v70) {
        goto LABEL_110;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v227 = (char *)_swiftEmptyArrayStorage;
    uint64_t v87 = (char *)sub_100056ED8() + OBJC_IVAR____TtC11SettingsApp29FollowUpListElementsGenerator_currentSnapshot;
    swift_beginAccess();
    sub_1000579A8((uint64_t)v87, (uint64_t)v46, (uint64_t (*)(void))type metadata accessor for FollowUpInformationProviderSnapshot);
    swift_release();
    uint64_t v88 = v46[6];
    swift_bridgeObjectRetain();
    sub_10003DC6C((uint64_t)v46, (uint64_t (*)(void))type metadata accessor for FollowUpInformationProviderSnapshot);
    uint64_t v89 = *(void *)(v88 + 16);
    swift_bridgeObjectRelease();
    if (v89)
    {
      uint64_t v90 = (char *)sub_100056ED8() + OBJC_IVAR____TtC11SettingsApp29FollowUpListElementsGenerator_currentSnapshot;
      swift_beginAccess();
      sub_1000579A8((uint64_t)v90, (uint64_t)v46, (uint64_t (*)(void))type metadata accessor for FollowUpInformationProviderSnapshot);
      swift_release();
      uint64_t v91 = v46[6];
      swift_bridgeObjectRetain();
      sub_10003DC6C((uint64_t)v46, (uint64_t (*)(void))type metadata accessor for FollowUpInformationProviderSnapshot);
      uint64_t v92 = sub_1000D2E10(v91);
      swift_bridgeObjectRelease();
      sub_1000633DC((uint64_t)v92);
    }
    unint64_t v93 = (char *)sub_100056ED8() + OBJC_IVAR____TtC11SettingsApp29FollowUpListElementsGenerator_currentSnapshot;
    swift_beginAccess();
    sub_1000579A8((uint64_t)v93, (uint64_t)v46, (uint64_t (*)(void))type metadata accessor for FollowUpInformationProviderSnapshot);
    swift_release();
    uint64_t v94 = v46[8];
    swift_bridgeObjectRetain();
    sub_10003DC6C((uint64_t)v46, (uint64_t (*)(void))type metadata accessor for FollowUpInformationProviderSnapshot);
    uint64_t v95 = *(void *)(v94 + 16);
    swift_bridgeObjectRelease();
    if (v95)
    {
      uint64_t v96 = (char *)sub_100056ED8() + OBJC_IVAR____TtC11SettingsApp29FollowUpListElementsGenerator_currentSnapshot;
      swift_beginAccess();
      sub_1000579A8((uint64_t)v96, (uint64_t)v46, (uint64_t (*)(void))type metadata accessor for FollowUpInformationProviderSnapshot);
      swift_release();
      uint64_t v97 = v46[8];
      swift_bridgeObjectRetain();
      sub_10003DC6C((uint64_t)v46, (uint64_t (*)(void))type metadata accessor for FollowUpInformationProviderSnapshot);
      char v98 = sub_1000D2E10(v97);
      swift_bridgeObjectRelease();
      sub_1000633DC((uint64_t)v98);
    }
    uint64_t v99 = (char *)sub_100056ED8() + OBJC_IVAR____TtC11SettingsApp29FollowUpListElementsGenerator_currentSnapshot;
    swift_beginAccess();
    sub_1000579A8((uint64_t)v99, (uint64_t)v46, (uint64_t (*)(void))type metadata accessor for FollowUpInformationProviderSnapshot);
    swift_release();
    unint64_t v100 = v221;
    uint64_t v101 = *(uint64_t *)((char *)v46 + v221[12]);
    swift_bridgeObjectRetain();
    sub_10003DC6C((uint64_t)v46, (uint64_t (*)(void))type metadata accessor for FollowUpInformationProviderSnapshot);
    uint64_t v102 = *(void *)(v101 + 16);
    swift_bridgeObjectRelease();
    if (!v102)
    {
LABEL_60:
      uint64_t v131 = (char *)sub_100056ED8() + OBJC_IVAR____TtC11SettingsApp29FollowUpListElementsGenerator_currentSnapshot;
      swift_beginAccess();
      sub_1000579A8((uint64_t)v131, (uint64_t)v46, (uint64_t (*)(void))type metadata accessor for FollowUpInformationProviderSnapshot);
      swift_release();
      uint64_t v132 = *(uint64_t *)((char *)v46 + v100[14]);
      swift_bridgeObjectRetain();
      sub_10003DC6C((uint64_t)v46, (uint64_t (*)(void))type metadata accessor for FollowUpInformationProviderSnapshot);
      uint64_t v133 = *(void *)(v132 + 16);
      swift_bridgeObjectRelease();
      uint64_t v134 = v219;
      if (!v133) {
        goto LABEL_83;
      }
      uint64_t v135 = (char *)sub_100056ED8() + OBJC_IVAR____TtC11SettingsApp29FollowUpListElementsGenerator_currentSnapshot;
      swift_beginAccess();
      uint64_t v136 = (uint64_t)v135;
      uint64_t v137 = v211;
      sub_1000579A8(v136, v211, (uint64_t (*)(void))type metadata accessor for FollowUpInformationProviderSnapshot);
      swift_release();
      uint64_t v138 = v212;
      sub_10003F75C(v137 + v221[13], v212, &qword_1001629E0);
      sub_10003DC6C(v137, (uint64_t (*)(void))type metadata accessor for FollowUpInformationProviderSnapshot);
      uint64_t v140 = v216;
      uint64_t v139 = v217;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v217 + 48))(v138, 1, v216) == 1)
      {
        sub_10003F5D0(v138, &qword_1001629E0);
        uint64_t v141 = 0;
        unint64_t v142 = 0;
        uint64_t v143 = (uint64_t)v205;
      }
      else
      {
        uint64_t v144 = v198;
        (*(void (**)(char *, uint64_t, uint64_t))(v139 + 32))(v198, v138, v140);
        uint64_t v145 = FLFollowUpGroupSectionElement.headerText.getter();
        unint64_t v142 = v146;
        uint64_t v143 = (uint64_t)v205;
        if (v146)
        {
          uint64_t v141 = v145;
          uint64_t v147 = HIBYTE(v146) & 0xF;
          if ((v146 & 0x2000000000000000) == 0) {
            uint64_t v147 = v145 & 0xFFFFFFFFFFFFLL;
          }
          if (!v147)
          {
            swift_bridgeObjectRelease();
            uint64_t v141 = 0;
            unint64_t v142 = 0;
          }
        }
        else
        {
          uint64_t v141 = 0;
        }
        uint64_t v148 = FLFollowUpGroupSectionElement.footerText.getter();
        if (v149)
        {
          if ((v149 & 0x2000000000000000) != 0) {
            uint64_t v150 = HIBYTE(v149) & 0xF;
          }
          else {
            uint64_t v150 = v148 & 0xFFFFFFFFFFFFLL;
          }
          (*(void (**)(char *, uint64_t))(v217 + 8))(v144, v216);
          if (v150)
          {
            swift_bridgeObjectRetain();
            LocalizedStringResource.init(stringLiteral:)();
            uint64_t v151 = type metadata accessor for LocalizedStringResource();
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v151 - 8) + 56))(v143, 0, 1, v151);
            swift_bridgeObjectRelease();
LABEL_78:
            uint64_t v153 = (char *)sub_100056ED8()
                 + OBJC_IVAR____TtC11SettingsApp29FollowUpListElementsGenerator_currentSnapshot;
            swift_beginAccess();
            sub_1000579A8((uint64_t)v153, (uint64_t)v46, (uint64_t (*)(void))type metadata accessor for FollowUpInformationProviderSnapshot);
            swift_release();
            uint64_t v154 = *(uint64_t *)((char *)v46 + v221[14]);
            swift_bridgeObjectRetain();
            sub_10003DC6C((uint64_t)v46, (uint64_t (*)(void))type metadata accessor for FollowUpInformationProviderSnapshot);
            uint64_t v155 = v214;
            _OWORD *v214 = xmmword_100120D20;
            *((unsigned char *)v155 + 16) = 2;
            *((void *)v155 + 3) = v141;
            *((void *)v155 + 4) = v142;
            uint64_t v156 = v220;
            sub_100049B74(v143, (uint64_t)v155 + *(int *)(v220 + 24), &qword_100163C30);
            *(void *)((char *)v155 + *(int *)(v156 + 28)) = v154;
            sub_1000579A8((uint64_t)v155, v215, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListSectionModel);
            char v157 = v227;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              char v157 = sub_100063548(0, *((void *)v157 + 2) + 1, 1, v157);
              uint64_t v227 = v157;
            }
            unint64_t v159 = *((void *)v157 + 2);
            unint64_t v158 = *((void *)v157 + 3);
            if (v159 >= v158 >> 1)
            {
              char v157 = sub_100063548((char *)(v158 > 1), v159 + 1, 1, v157);
              uint64_t v227 = v157;
            }
            uint64_t v225 = v220;
            uint64_t v226 = &off_100151D00;
            uint64_t v160 = sub_10002A3A4((uint64_t *)&v224);
            uint64_t v161 = v215;
            sub_1000579A8(v215, (uint64_t)v160, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListSectionModel);
            *((void *)v157 + 2) = v159 + 1;
            sub_1000498B0(&v224, (uint64_t)&v157[40 * v159 + 32]);
            sub_10003DC6C(v161, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListSectionModel);
            sub_10003DC6C((uint64_t)v214, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListSectionModel);
            uint64_t v134 = v219;
LABEL_83:
            uint64_t v75 = (uint64_t)[self currentDevice];
            unsigned int v162 = [v75 sf_isInternalInstall];

            if (!v162) {
              goto LABEL_107;
            }
            uint64_t v163 = (char *)sub_100056ED8()
                 + OBJC_IVAR____TtC11SettingsApp29FollowUpListElementsGenerator_currentSnapshot;
            swift_beginAccess();
            sub_1000579A8((uint64_t)v163, (uint64_t)v46, (uint64_t (*)(void))type metadata accessor for FollowUpInformationProviderSnapshot);
            swift_release();
            uint64_t v75 = *(uint64_t *)((char *)v46 + v221[16]);
            swift_bridgeObjectRetain();
            sub_10003DC6C((uint64_t)v46, (uint64_t (*)(void))type metadata accessor for FollowUpInformationProviderSnapshot);
            uint64_t v164 = *(void *)(v75 + 16);
            swift_bridgeObjectRelease();
            if (!v164) {
              goto LABEL_107;
            }
            uint64_t v165 = (char *)sub_100056ED8()
                 + OBJC_IVAR____TtC11SettingsApp29FollowUpListElementsGenerator_currentSnapshot;
            swift_beginAccess();
            uint64_t v166 = (uint64_t)v165;
            uint64_t v167 = v199;
            sub_1000579A8(v166, v199, (uint64_t (*)(void))type metadata accessor for FollowUpInformationProviderSnapshot);
            swift_release();
            uint64_t v168 = v200;
            sub_10003F75C(v167 + v221[15], v200, &qword_1001629E0);
            sub_10003DC6C(v167, (uint64_t (*)(void))type metadata accessor for FollowUpInformationProviderSnapshot);
            uint64_t v170 = v216;
            uint64_t v169 = v217;
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v217 + 48))(v168, 1, v216) == 1)
            {
              sub_10003F5D0(v168, &qword_1001629E0);
              uint64_t v215 = 0;
              unint64_t v171 = 0;
            }
            else
            {
              uint64_t v172 = *(void (**)(char *, uint64_t, uint64_t))(v169 + 32);
              int v173 = v196;
              v172(v196, v168, v170);
              uint64_t v174 = FLFollowUpGroupSectionElement.headerText.getter();
              unint64_t v171 = v175;
              if (v175)
              {
                uint64_t v176 = HIBYTE(v175) & 0xF;
                if ((v175 & 0x2000000000000000) == 0) {
                  uint64_t v176 = v174 & 0xFFFFFFFFFFFFLL;
                }
                if (v176)
                {
                  uint64_t v215 = v174;
                }
                else
                {
                  swift_bridgeObjectRelease();
                  uint64_t v215 = 0;
                  unint64_t v171 = 0;
                }
              }
              else
              {
                uint64_t v215 = 0;
              }
              uint64_t v177 = FLFollowUpGroupSectionElement.footerText.getter();
              if (v178)
              {
                if ((v178 & 0x2000000000000000) != 0) {
                  uint64_t v179 = HIBYTE(v178) & 0xF;
                }
                else {
                  uint64_t v179 = v177 & 0xFFFFFFFFFFFFLL;
                }
                (*(void (**)(char *, uint64_t))(v217 + 8))(v173, v170);
                if (v179)
                {
                  swift_bridgeObjectRetain();
                  uint64_t v180 = (uint64_t)v197;
                  LocalizedStringResource.init(stringLiteral:)();
                  uint64_t v181 = type metadata accessor for LocalizedStringResource();
                  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v181 - 8) + 56))(v180, 0, 1, v181);
                  swift_bridgeObjectRelease();
                  goto LABEL_103;
                }
                swift_bridgeObjectRelease();
              }
              else
              {
                (*(void (**)(char *, uint64_t))(v217 + 8))(v173, v170);
              }
            }
            uint64_t v180 = (uint64_t)v197;
            uint64_t v182 = type metadata accessor for LocalizedStringResource();
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v182 - 8) + 56))(v180, 1, 1, v182);
LABEL_103:
            unint64_t v183 = (char *)sub_100056ED8()
                 + OBJC_IVAR____TtC11SettingsApp29FollowUpListElementsGenerator_currentSnapshot;
            swift_beginAccess();
            sub_1000579A8((uint64_t)v183, (uint64_t)v46, (uint64_t (*)(void))type metadata accessor for FollowUpInformationProviderSnapshot);
            swift_release();
            uint64_t v184 = *(uint64_t *)((char *)v46 + v221[16]);
            swift_bridgeObjectRetain();
            sub_10003DC6C((uint64_t)v46, (uint64_t (*)(void))type metadata accessor for FollowUpInformationProviderSnapshot);
            uint64_t v185 = v206;
            *uint64_t v206 = xmmword_100120D30;
            *((unsigned char *)v185 + 16) = 2;
            *((void *)v185 + 3) = v215;
            *((void *)v185 + 4) = v171;
            uint64_t v186 = v220;
            sub_100049B74(v180, (uint64_t)v185 + *(int *)(v220 + 24), &qword_100163C30);
            *(void *)((char *)v185 + *(int *)(v186 + 28)) = v184;
            sub_1000579A8((uint64_t)v185, v207, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListSectionModel);
            uint64_t v75 = (uint64_t)v227;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              goto LABEL_118;
            }
            while (1)
            {
              uint64_t v134 = v219;
              unint64_t v188 = *(void *)(v75 + 16);
              unint64_t v187 = *(void *)(v75 + 24);
              if (v188 >= v187 >> 1)
              {
                uint64_t v75 = (uint64_t)sub_100063548((char *)(v187 > 1), v188 + 1, 1, (char *)v75);
                uint64_t v227 = (char *)v75;
              }
              uint64_t v225 = v220;
              uint64_t v226 = &off_100151D00;
              uint64_t v189 = sub_10002A3A4((uint64_t *)&v224);
              uint64_t v190 = v207;
              sub_1000579A8(v207, (uint64_t)v189, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListSectionModel);
              *(void *)(v75 + 16) = v188 + 1;
              sub_1000498B0(&v224, v75 + 40 * v188 + 32);
              sub_10003DC6C(v190, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListSectionModel);
              sub_10003DC6C((uint64_t)v206, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListSectionModel);
LABEL_107:
              if (!*(void *)(*v134 + 16)) {
                break;
              }
              if (!__OFADD__(v70, 1))
              {
                sub_100057DB8(v70 + 1, v70 + 1, (uint64_t)v227);
                break;
              }
              __break(1u);
LABEL_115:
              __break(1u);
LABEL_116:
              __break(1u);
LABEL_117:
              __break(1u);
LABEL_118:
              uint64_t v75 = (uint64_t)sub_100063548(0, *(void *)(v75 + 16) + 1, 1, (char *)v75);
              uint64_t v227 = (char *)v75;
            }
LABEL_110:
            swift_bridgeObjectRelease();
            goto LABEL_111;
          }
          swift_bridgeObjectRelease();
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v217 + 8))(v144, v216);
        }
      }
      uint64_t v152 = type metadata accessor for LocalizedStringResource();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v152 - 8) + 56))(v143, 1, 1, v152);
      goto LABEL_78;
    }
    uint64_t v103 = (char *)sub_100056ED8() + OBJC_IVAR____TtC11SettingsApp29FollowUpListElementsGenerator_currentSnapshot;
    swift_beginAccess();
    uint64_t v104 = (uint64_t)v103;
    uint64_t v105 = v208;
    sub_1000579A8(v104, v208, (uint64_t (*)(void))type metadata accessor for FollowUpInformationProviderSnapshot);
    swift_release();
    uint64_t v106 = v105 + v100[11];
    uint64_t v107 = v209;
    sub_10003F75C(v106, v209, &qword_1001629E0);
    sub_10003DC6C(v105, (uint64_t (*)(void))type metadata accessor for FollowUpInformationProviderSnapshot);
    uint64_t v108 = v216;
    uint64_t v109 = v217;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v217 + 48))(v107, 1, v216) == 1)
    {
      sub_10003F5D0(v107, &qword_1001629E0);
      uint64_t v110 = 0;
      unint64_t v111 = 0;
      uint64_t v112 = (uint64_t)v204;
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v109 + 32))(v203, v107, v108);
      uint64_t v113 = FLFollowUpGroupSectionElement.headerText.getter();
      unint64_t v111 = v114;
      if (v114)
      {
        uint64_t v110 = v113;
        uint64_t v115 = HIBYTE(v114) & 0xF;
        if ((v114 & 0x2000000000000000) == 0) {
          uint64_t v115 = v113 & 0xFFFFFFFFFFFFLL;
        }
        if (!v115)
        {
          swift_bridgeObjectRelease();
          uint64_t v110 = 0;
          unint64_t v111 = 0;
        }
      }
      else
      {
        uint64_t v110 = 0;
      }
      char v116 = v203;
      uint64_t v117 = FLFollowUpGroupSectionElement.footerText.getter();
      if (v118)
      {
        if ((v118 & 0x2000000000000000) != 0) {
          uint64_t v119 = HIBYTE(v118) & 0xF;
        }
        else {
          uint64_t v119 = v117 & 0xFFFFFFFFFFFFLL;
        }
        (*(void (**)(char *, uint64_t))(v217 + 8))(v116, v216);
        if (v119)
        {
          swift_bridgeObjectRetain();
          uint64_t v112 = (uint64_t)v204;
          LocalizedStringResource.init(stringLiteral:)();
          uint64_t v120 = type metadata accessor for LocalizedStringResource();
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v120 - 8) + 56))(v112, 0, 1, v120);
          swift_bridgeObjectRelease();
LABEL_55:
          uint64_t v122 = (char *)sub_100056ED8() + OBJC_IVAR____TtC11SettingsApp29FollowUpListElementsGenerator_currentSnapshot;
          swift_beginAccess();
          sub_1000579A8((uint64_t)v122, (uint64_t)v46, (uint64_t (*)(void))type metadata accessor for FollowUpInformationProviderSnapshot);
          swift_release();
          uint64_t v123 = *(uint64_t *)((char *)v46 + v221[12]);
          swift_bridgeObjectRetain();
          sub_10003DC6C((uint64_t)v46, (uint64_t (*)(void))type metadata accessor for FollowUpInformationProviderSnapshot);
          long long v124 = v213;
          _OWORD *v213 = xmmword_100120D10;
          *((unsigned char *)v124 + 16) = 2;
          *((void *)v124 + 3) = v110;
          *((void *)v124 + 4) = v111;
          uint64_t v125 = v220;
          sub_100049B74(v112, (uint64_t)v124 + *(int *)(v220 + 24), &qword_100163C30);
          *(void *)((char *)v124 + *(int *)(v125 + 28)) = v123;
          uint64_t v126 = v210;
          sub_1000579A8((uint64_t)v124, v210, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListSectionModel);
          uint64_t v127 = v227;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            uint64_t v127 = sub_100063548(0, *((void *)v127 + 2) + 1, 1, v127);
            uint64_t v227 = v127;
          }
          unint64_t v129 = *((void *)v127 + 2);
          unint64_t v128 = *((void *)v127 + 3);
          if (v129 >= v128 >> 1)
          {
            uint64_t v127 = sub_100063548((char *)(v128 > 1), v129 + 1, 1, v127);
            uint64_t v227 = v127;
          }
          uint64_t v225 = v220;
          uint64_t v226 = &off_100151D00;
          uint64_t v130 = sub_10002A3A4((uint64_t *)&v224);
          sub_1000579A8(v126, (uint64_t)v130, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListSectionModel);
          *((void *)v127 + 2) = v129 + 1;
          sub_1000498B0(&v224, (uint64_t)&v127[40 * v129 + 32]);
          sub_10003DC6C(v126, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListSectionModel);
          sub_10003DC6C((uint64_t)v213, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListSectionModel);
          unint64_t v100 = v221;
          goto LABEL_60;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v217 + 8))(v116, v216);
      }
      uint64_t v112 = (uint64_t)v204;
    }
    uint64_t v121 = type metadata accessor for LocalizedStringResource();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v121 - 8) + 56))(v112, 1, 1, v121);
    goto LABEL_55;
  }
LABEL_111:
  id v191 = [self sharedInstance];
  unsigned int v192 = [v191 launchHasCompleted];

  if (v192)
  {
    int v193 = sub_100056ED8();
    id v194 = *v218;
    sub_100060D98((uint64_t)v193);

    swift_release();
  }
}

uint64_t destroy for PrimarySettingsListSectionIdentifier(uint64_t a1)
{
  return sub_10003E2B4(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

void *sub_100056ED8()
{
  uint64_t v1 = OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel____lazy_storage___followUpListElementsGenerator;
  if (*(uint64_t *)((char *)v0
                  + OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel____lazy_storage___followUpListElementsGenerator))
  {
    uint64_t v2 = *(void **)((char *)v0
                    + OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel____lazy_storage___followUpListElementsGenerator);
  }
  else
  {
    uint64_t v3 = *v0;
    swift_retain();
    uint64_t v18 = sub_10000B8DC();
    uint64_t v17 = sub_10000BE84();
    v19[3] = v3;
    unsigned char v19[4] = &off_100155278;
    v19[0] = v0;
    type metadata accessor for FollowUpListElementsGenerator();
    uint64_t v2 = (void *)swift_allocObject();
    uint64_t v4 = sub_10002BF58((uint64_t)v19, v3);
    uint64_t v16 = (uint64_t)&v16;
    __chkstk_darwin(v4);
    uint64_t v6 = (uint64_t *)((char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v7 + 16))(v6);
    uint64_t v8 = *v6;
    void v2[5] = v3;
    v2[6] = &off_100155278;
    v2[2] = v8;
    v2[9] = 0;
    v2[10] = &_swiftEmptySetSingleton;
    uint64_t v9 = (char *)v2 + OBJC_IVAR____TtC11SettingsApp29FollowUpListElementsGenerator_currentSnapshot;
    *(void *)uint64_t v9 = &_swiftEmptyArrayStorage;
    *((void *)v9 + 1) = 0;
    *((void *)v9 + 2) = 0;
    *((void *)v9 + 3) = &_swiftEmptyArrayStorage;
    *((void *)v9 + 4) = 0;
    *((void *)v9 + 5) = 0;
    *((void *)v9 + 6) = &_swiftEmptyArrayStorage;
    *((void *)v9 + 7) = &_swiftEmptyArrayStorage;
    *((void *)v9 + 8) = &_swiftEmptyArrayStorage;
    uint64_t v10 = (int *)type metadata accessor for FollowUpInformationProviderSnapshot();
    uint64_t v11 = &v9[v10[11]];
    uint64_t v12 = type metadata accessor for FLFollowUpGroupSectionElement();
    uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    v13(v11, 1, 1, v12);
    *(void *)&v9[v10[12]] = &_swiftEmptyArrayStorage;
    v13(&v9[v10[13]], 1, 1, v12);
    *(void *)&v9[v10[14]] = &_swiftEmptyArrayStorage;
    v13(&v9[v10[15]], 1, 1, v12);
    *(void *)&v9[v10[16]] = &_swiftEmptyArrayStorage;
    uint64_t v14 = v17;
    v2[7] = v18;
    v2[8] = v14;
    sub_100042A1C((uint64_t)v19);
    *(uint64_t *)((char *)v0 + v1) = (uint64_t)v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

void sub_10005716C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for PrimarySettingsListItemIdentifier();
  uint64_t v38 = *(void *)(v4 - 8);
  uint64_t v5 = *(void *)(v38 + 64);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)v34 - v9;
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)v34 - v11;
  if (qword_10015F168 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for Logger();
  uint64_t v14 = sub_1000477B0(v13, (uint64_t)qword_10016B028);
  sub_1000579A8(a1, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
  swift_retain_n();
  uint64_t v37 = v14;
  uint64_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = swift_slowAlloc();
    v34[1] = v4;
    uint64_t v18 = v17;
    v34[0] = swift_slowAlloc();
    uint64_t v40 = v34[0];
    *(_DWORD *)uint64_t v18 = 136315650;
    uint64_t v19 = _typeName(_:qualified:)();
    uint64_t v36 = (char *)v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v39 = sub_100042948(v19, v20, &v40);
    uint64_t v35 = a1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2080;
    uint64_t v39 = sub_100042948(0xD000000000000019, 0x800000010012A430, &v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v18 + 22) = 2082;
    uint64_t v21 = sub_100048BDC();
    uint64_t v39 = sub_100042948(v21, v22, &v40);
    a1 = v35;
    uint64_t v7 = v36;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10003DC6C((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "Start (%s.%s), item: %{public}s…", (uint8_t *)v18, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_release_n();
    sub_10003DC6C((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
  }

  swift_storeEnumTagMultiPayload();
  char v23 = sub_1000460F4(a1, (uint64_t)v10);
  sub_10003DC6C((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
  if (v23)
  {
    type metadata accessor for Preloader();
    uint64_t v24 = (void *)static Preloader.shared.getter();
    sub_1000579A8(a1, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
    unint64_t v25 = (*(unsigned __int8 *)(v38 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 16) = v2;
    sub_1000585FC((uint64_t)v10, v26 + v25, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
    swift_retain();
    dispatch thunk of Preloader.preloadResources(completion:)();
    swift_release();
  }
  else
  {
    sub_1000579A8(a1, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
    swift_retain_n();
    uint64_t v27 = Logger.logObject.getter();
    os_log_type_t v28 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = swift_slowAlloc();
      uint64_t v40 = swift_slowAlloc();
      *(_DWORD *)uint64_t v29 = 136315650;
      uint64_t v30 = _typeName(_:qualified:)();
      uint64_t v39 = sub_100042948(v30, v31, &v40);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v29 + 12) = 2080;
      uint64_t v39 = sub_100042948(0xD000000000000019, 0x800000010012A430, &v40);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v29 + 22) = 2082;
      uint64_t v32 = sub_100048BDC();
      uint64_t v39 = sub_100042948(v32, v33, &v40);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10003DC6C((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "…Complete (%s.%s), item: %{public}s", (uint8_t *)v29, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_release_n();
      sub_10003DC6C((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
    }
  }
}

uint64_t sub_100057808(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100057870(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000578D8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100057940(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000579A8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for FollowUpInformationProviderSnapshot()
{
  uint64_t result = qword_100162A60;
  if (!qword_100162A60) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void *sub_100057A5C(void *a1, void *a2, int *a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  uint64_t v7 = a2[5];
  a1[4] = a2[4];
  a1[5] = v7;
  uint64_t v8 = a2[7];
  a1[6] = a2[6];
  a1[7] = v8;
  uint64_t v9 = a3[11];
  __dst = (char *)a1 + v9;
  char v23 = (char *)a2 + v9;
  a1[8] = a2[8];
  uint64_t v10 = type metadata accessor for FLFollowUpGroupSectionElement();
  uint64_t v24 = *(void *)(v10 - 8);
  uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v11(v23, 1, v10))
  {
    uint64_t v12 = sub_100046B9C(&qword_1001629E0);
    memcpy(__dst, v23, *(void *)(*(void *)(v12 - 8) + 64));
    uint64_t v13 = v24;
  }
  else
  {
    uint64_t v13 = v24;
    (*(void (**)(char *, char *, uint64_t))(v24 + 16))(__dst, v23, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(__dst, 0, 1, v10);
  }
  uint64_t v14 = a3[13];
  *(void *)((char *)a1 + a3[12]) = *(void *)((char *)a2 + a3[12]);
  uint64_t v15 = (char *)a1 + v14;
  os_log_type_t v16 = (char *)a2 + v14;
  swift_bridgeObjectRetain();
  if (v11(v16, 1, v10))
  {
    uint64_t v17 = sub_100046B9C(&qword_1001629E0);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v15, v16, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v15, 0, 1, v10);
  }
  uint64_t v18 = a3[15];
  *(void *)((char *)a1 + a3[14]) = *(void *)((char *)a2 + a3[14]);
  uint64_t v19 = (char *)a1 + v18;
  unint64_t v20 = (char *)a2 + v18;
  swift_bridgeObjectRetain();
  if (v11(v20, 1, v10))
  {
    uint64_t v21 = sub_100046B9C(&qword_1001629E0);
    memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v19, v20, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v19, 0, 1, v10);
  }
  *(void *)((char *)a1 + a3[16]) = *(void *)((char *)a2 + a3[16]);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100057D60()
{
  uint64_t v1 = *v0 + OBJC_IVAR____TtC11SettingsApp36SupervisedDeviceSectionModelProvider_id;
  uint64_t v2 = *(void *)v1;
  sub_10003DA14(*(void *)v1, *(void *)(v1 + 8), *(unsigned char *)(v1 + 16));
  return v2;
}

char *sub_100057DB8(uint64_t a1, int64_t a2, uint64_t a3)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v5 = *v3;
  int64_t v6 = *((void *)*v3 + 2);
  if (v6 < a2)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v9 = *(void *)(a3 + 16);
  uint64_t v10 = v9 - v8;
  if (__OFSUB__(v9, v8))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  int64_t v11 = v6 + v10;
  if (__OFADD__(v6, v10))
  {
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  int isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v11 > *((void *)v5 + 3) >> 1)
  {
    if (v6 <= v11) {
      int64_t v13 = v6 + v10;
    }
    else {
      int64_t v13 = v6;
    }
    uint64_t v5 = sub_100063548(isUniquelyReferenced_nonNull_native, v13, 1, v5);
  }
  uint64_t v14 = (uint64_t)&v5[40 * a1 + 32];
  sub_100046B9C(&qword_1001615A8);
  uint64_t result = (char *)swift_arrayDestroy();
  if (!v10) {
    goto LABEL_20;
  }
  uint64_t v16 = *((void *)v5 + 2);
  BOOL v17 = __OFSUB__(v16, a2);
  uint64_t v18 = v16 - a2;
  if (v17) {
    goto LABEL_28;
  }
  if (v18 < 0)
  {
LABEL_30:
    uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  uint64_t result = (char *)(v14 + 40 * v9);
  uint64_t v19 = &v5[40 * a2 + 32];
  if (result != v19 || result >= &v19[40 * v18]) {
    uint64_t result = (char *)memmove(result, v19, 40 * v18);
  }
  uint64_t v20 = *((void *)v5 + 2);
  BOOL v17 = __OFADD__(v20, v10);
  uint64_t v21 = v20 + v10;
  if (v17)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  *((void *)v5 + 2) = v21;
LABEL_20:
  if (v9) {
    uint64_t result = (char *)swift_arrayInitWithCopy();
  }
  *uint64_t v3 = v5;
  return result;
}

uint64_t sub_100057F6C()
{
  uint64_t v1 = *v0 + OBJC_IVAR____TtC11SettingsApp38PrimaryAppleAccountListSectionProvider_id;
  uint64_t v2 = *(void *)v1;
  sub_10003DA14(*(void *)v1, *(void *)(v1 + 8), *(unsigned char *)(v1 + 16));
  return v2;
}

void sub_100057FC4(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v49 = a2;
  uint64_t v3 = sub_100046B9C((uint64_t *)&unk_100163C20);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = type metadata accessor for PrimarySettingsListSectionModel();
  uint64_t v51 = *(void *)(v53 - 8);
  uint64_t v6 = __chkstk_darwin(v53);
  uint64_t v52 = (uint64_t)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v50 = (uint64_t)&v44 - v8;
  uint64_t v47 = type metadata accessor for OSSignpostID();
  uint64_t v45 = *(void *)(v47 - 8);
  __chkstk_darwin(v47);
  uint64_t v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for OSSignposter();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10015F058 != -1) {
    swift_once();
  }
  id v56 = (id)qword_10016AE18;
  id v15 = (id)qword_10016AE18;
  uint64_t v55 = sub_10005F524();
  if (qword_10015F180 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_1000477B0(v11, (uint64_t)qword_10016B070);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v16, v11);
  static OSSignpostID.exclusive.getter();
  BOOL v17 = (uint8_t *)swift_slowAlloc();
  char v46 = v14;
  uint64_t v18 = v12;
  uint64_t v19 = v17;
  *(_WORD *)BOOL v17 = 0;
  uint64_t v20 = v10;
  uint64_t v21 = v11;
  unint64_t v22 = OSSignposter.logHandle.getter();
  os_signpost_type_t v23 = static os_signpost_type_t.begin.getter();
  os_signpost_id_t v24 = OSSignpostID.rawValue.getter();
  _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v22, v23, v24, "PrimarySettingsList Data Model Section Snapshot", "Followups", v19, 2u);
  uint64_t v25 = v48;
  sub_1000554D8(a1, &v56, &v55);
  os_signpost_type_t v26 = static os_signpost_type_t.end.getter();
  os_signpost_id_t v27 = OSSignpostID.rawValue.getter();
  _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v22, v26, v27, "PrimarySettingsList Data Model Section Snapshot", "Followups", v19, 2u);

  swift_slowDealloc();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v20, v47);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v46, v21);
  uint64_t v28 = *(void *)(v55 + 16);
  if (v28)
  {
    uint64_t v47 = v55;
    uint64_t v48 = v25;
    uint64_t v29 = (void *)(v55 + 32);
    uint64_t v30 = (unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48);
    swift_bridgeObjectRetain_n();
    unint64_t v31 = _swiftEmptyArrayStorage;
    do
    {
      uint64_t v33 = v29[3];
      uint64_t v32 = v29[4];
      sub_1000403E0(v29, v33);
      v54[4] = &off_100152B50;
      long long v54[3] = &type metadata for PrimarySettingsListDataModelGenerationContext;
      v54[0] = v56;
      id v34 = v56;
      sub_100058678((uint64_t)v54, v33, v32, (uint64_t)v5);
      sub_100042A1C((uint64_t)v54);
      if ((*v30)(v5, 1, v53) == 1)
      {
        sub_10003F5D0((uint64_t)v5, (uint64_t *)&unk_100163C20);
      }
      else
      {
        uint64_t v35 = v50;
        sub_1000585FC((uint64_t)v5, v50, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListSectionModel);
        sub_1000585FC(v35, v52, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListSectionModel);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v31 = (void *)sub_100059D90(0, v31[2] + 1, 1, (unint64_t)v31);
        }
        unint64_t v37 = v31[2];
        unint64_t v36 = v31[3];
        if (v37 >= v36 >> 1) {
          unint64_t v31 = (void *)sub_100059D90(v36 > 1, v37 + 1, 1, (unint64_t)v31);
        }
        v31[2] = v37 + 1;
        sub_1000585FC(v52, (uint64_t)v31+ ((*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80))+ *(void *)(v51 + 72) * v37, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListSectionModel);
      }
      v29 += 5;
      --v28;
    }
    while (v28);
    swift_bridgeObjectRelease_n();
    uint64_t v38 = v49;
  }
  else
  {
    unint64_t v31 = _swiftEmptyArrayStorage;
    uint64_t v38 = v49;
  }
  uint64_t v39 = sub_10003D0C0((uint64_t)v31);
  uint64_t v41 = v40;
  uint64_t v43 = v42;
  swift_bridgeObjectRelease();
  *uint64_t v38 = v39;
  v38[1] = v41;
  v38[2] = v43;
  swift_bridgeObjectRelease();
}

uint64_t sub_100058594(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000585FC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100058664(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100075504);
}

uint64_t sub_100058678@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v37 = a1;
  uint64_t v38 = a3;
  uint64_t v36 = a4;
  uint64_t v7 = type metadata accessor for OSSignpostID();
  uint64_t v39 = *(void *)(v7 - 8);
  uint64_t v40 = v7;
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(a2 - 8);
  __chkstk_darwin(v8);
  uint64_t v13 = (char *)v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for OSSignposter();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  BOOL v17 = (char *)v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10015F180 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_1000477B0(v14, (uint64_t)qword_10016B070);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v18, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v5, a2);
  static OSSignpostID.exclusive.getter();
  uint64_t v35 = v15;
  uint64_t v19 = swift_slowAlloc();
  v32[0] = v10;
  uint64_t v33 = v17;
  uint64_t v20 = (uint8_t *)v19;
  uint64_t v21 = swift_slowAlloc();
  uint64_t v34 = v14;
  *(_DWORD *)uint64_t v20 = 136315138;
  uint64_t v42 = v21;
  v32[1] = v5;
  uint64_t v22 = v38;
  uint64_t v23 = (*(uint64_t (**)(uint64_t, uint64_t))(v38 + 16))(a2, v38);
  uint64_t v41 = sub_100042948(v23, v24, &v42);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, a2);
  uint64_t v25 = OSSignposter.logHandle.getter();
  os_signpost_type_t v26 = static os_signpost_type_t.begin.getter();
  uint64_t v27 = v32[0];
  os_signpost_id_t v28 = OSSignpostID.rawValue.getter();
  _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v25, v26, v28, "PrimarySettingsListSectionModelProviding.produceListSectionModel(with:)", "Section Provider: %s", v20, 0xCu);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 32))(v37, a2, v22);
  os_signpost_type_t v29 = static os_signpost_type_t.end.getter();
  os_signpost_id_t v30 = OSSignpostID.rawValue.getter();
  _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v25, v29, v30, "PrimarySettingsListSectionModelProviding.produceListSectionModel(with:)", "Section Provider: %s", v20, 0xCu);

  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();
  (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v27, v40);
  return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v33, v34);
}

uint64_t sub_100058A88(uint64_t a1, uint64_t a2)
{
  swift_getDynamicType();
  uint64_t v12 = _typeName(_:qualified:)();
  v4._uint64_t countAndFlagsBits = 0x203A6469207B20;
  v4._object = (void *)0xE700000000000000;
  String.append(_:)(v4);
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 8))(a1, a2);
  uint64_t v7 = (uint64_t)v6;
  LOBYTE(a1) = v8;
  v9._uint64_t countAndFlagsBits = sub_100058B68(v5, v6, v8);
  String.append(_:)(v9);
  swift_bridgeObjectRelease();
  sub_10003E2B4(v5, v7, a1);
  v10._uint64_t countAndFlagsBits = 32032;
  v10._object = (void *)0xE200000000000000;
  String.append(_:)(v10);
  return v12;
}

unint64_t sub_100058B68(uint64_t a1, void *a2, char a3)
{
  if (!a3)
  {
    _StringGuts.grow(_:)(29);
    swift_bridgeObjectRelease();
    unint64_t v5 = 0xD00000000000001BLL;
    goto LABEL_5;
  }
  if (a3 == 1)
  {
    _StringGuts.grow(_:)(31);
    swift_bridgeObjectRelease();
    unint64_t v5 = 0xD00000000000001DLL;
LABEL_5:
    unint64_t v8 = v5;
    v6._uint64_t countAndFlagsBits = a1;
    v6._object = a2;
    String.append(_:)(v6);
    return v8;
  }
  unint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 1:
    case 3:
    case 9:
      unint64_t result = 0xD000000000000013;
      break;
    case 2:
      unint64_t result = 0x7974697275636573;
      break;
    case 4:
      unint64_t result = 0xD000000000000016;
      break;
    case 5:
      unint64_t result = 0x6F46656369766564;
      break;
    case 6:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 7:
      unint64_t result = 0xD000000000000015;
      break;
    case 8:
      unint64_t result = 0xD000000000000015;
      break;
    case 10:
      unint64_t result = 0xD000000000000011;
      break;
    case 11:
      unint64_t result = 0xD000000000000012;
      break;
    case 12:
      unint64_t result = 0x6C616E6F73726570;
      break;
    case 14:
      unint64_t result = 0xD000000000000012;
      break;
    case 15:
      unint64_t result = 0x65636976726573;
      break;
    case 16:
      unint64_t result = 1936748641;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100058DBC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 16);
  sub_10003DA14(v1, *(void *)(*(void *)v0 + 24), *(unsigned char *)(*(void *)v0 + 32));
  return v1;
}

uint64_t sub_100058E0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100058E30(a1, a2);
}

uint64_t sub_100058E30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for OSSignpostError();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v76 = (char *)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for OSSignpostID();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v64 - v13;
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v18 = (char *)&v64 - v17;
  uint64_t v19 = *(void *)(v3 + 40);
  if (*(void *)(v19 + 16))
  {
    uint64_t v73 = v7;
    uint64_t v74 = v6;
    uint64_t v75 = v16;
    __chkstk_darwin(v15);
    *(&v64 - 2) = a1;
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_100059640((void (*)(uint64_t))sub_100059918, (uint64_t)(&v64 - 4), v19);
    swift_bridgeObjectRelease();
    uint64_t v80 = v20;
    if (*(unsigned char *)(v3 + 33) == 1)
    {
      uint64_t v77 = v9;
      uint64_t v21 = swift_retain();
      uint64_t v69 = sub_10005BE34(v21);
      unint64_t v23 = v22;
      swift_release();
      if (qword_10015F180 != -1) {
        swift_once();
      }
      uint64_t v24 = type metadata accessor for OSSignposter();
      uint64_t v25 = sub_1000477B0(v24, (uint64_t)qword_10016B070);
      swift_bridgeObjectRetain_n();
      static OSSignpostID.exclusive.getter();
      uint64_t v68 = v25;
      os_signpost_type_t v26 = OSSignposter.logHandle.getter();
      int v27 = static os_signpost_type_t.begin.getter();
      if (OS_os_log.signpostsEnabled.getter())
      {
        os_signpost_id_t v28 = *(void (**)(void, void, void))(v10 + 16);
        unint64_t v71 = (v10 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
        uint64_t v72 = v28;
        v28(v14, v18, v77);
        LODWORD(v66) = v27;
        uint64_t v29 = swift_slowAlloc();
        unint64_t v67 = 0;
        os_signpost_id_t v30 = (uint8_t *)v29;
        uint64_t v31 = swift_slowAlloc();
        uint64_t v70 = v10;
        v79[0] = v31;
        *(_DWORD *)os_signpost_id_t v30 = 136315138;
        swift_bridgeObjectRetain();
        uint64_t v78 = sub_100042948(v69, v23, v79);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        os_signpost_id_t v32 = OSSignpostID.rawValue.getter();
        _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v26, (os_signpost_type_t)v66, v32, "StaticPrimarySettingsListSectionProvider.produceListSectionModel(with:) Sorting", "Section Provider: %s", v30, 0xCu);
        swift_arrayDestroy();
        uint64_t v10 = v70;
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v77);
        unint64_t v34 = v71;
        uint64_t v33 = v72;
      }
      else
      {
        swift_bridgeObjectRelease_n();

        uint64_t v33 = *(void (**)(void, void, void))(v10 + 16);
        unint64_t v34 = (v10 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
      }
      uint64_t v38 = v75;
      uint64_t v39 = v77;
      unint64_t v71 = v34;
      uint64_t v72 = v33;
      v33(v14, v18, v77);
      type metadata accessor for OSSignpostIntervalState();
      swift_allocObject();
      OSSignpostIntervalState.init(id:isOpen:)();
      uint64_t v41 = *(void (**)(char *, uint64_t))(v10 + 8);
      uint64_t v40 = v10 + 8;
      uint64_t v42 = v18;
      uint64_t v43 = v41;
      v41(v42, v39);
      sub_10005A51C((unint64_t *)&v80);
      swift_bridgeObjectRetain();
      uint64_t v44 = OSSignposter.logHandle.getter();
      OSSignpostIntervalState.signpostID.getter();
      LODWORD(v68) = static os_signpost_type_t.end.getter();
      if (OS_os_log.signpostsEnabled.getter())
      {
        os_log_t v65 = v44;
        uint64_t v66 = v43;
        unint64_t v67 = v23;
        swift_retain();
        uint64_t v45 = v76;
        checkForErrorAndConsumeState(state:)();
        swift_release();
        uint64_t v47 = v73;
        uint64_t v46 = v74;
        int v48 = (*(uint64_t (**)(const char *, uint64_t))(v73 + 88))(v45, v74);
        uint64_t v70 = v40;
        if (v48 == enum case for OSSignpostError.doubleEnd(_:))
        {
          char v50 = 0;
          char v49 = 0;
          uint64_t v76 = "[Error] Interval already ended";
        }
        else
        {
          (*(void (**)(const char *, uint64_t))(v47 + 8))(v45, v46);
          uint64_t v76 = "Section Provider: %s";
          char v49 = 2;
          char v50 = 1;
        }
        uint64_t v51 = v77;
        v72(v14, v38, v77);
        uint64_t v52 = swift_slowAlloc();
        v79[0] = swift_slowAlloc();
        *(unsigned char *)uint64_t v52 = v49;
        *(unsigned char *)(v52 + 1) = v50;
        *(_WORD *)(v52 + 2) = 2080;
        unint64_t v53 = v67;
        swift_bridgeObjectRetain();
        uint64_t v78 = sub_100042948(v69, v53, v79);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        os_signpost_id_t v54 = OSSignpostID.rawValue.getter();
        os_log_t v55 = v65;
        _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v65, (os_signpost_type_t)v68, v54, "StaticPrimarySettingsListSectionProvider.produceListSectionModel(with:) Sorting", v76, (uint8_t *)v52, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        id v56 = v66;
        v66(v75, v51);
        swift_release();
        v56(v14, v51);
      }
      else
      {
        swift_bridgeObjectRelease_n();

        v43(v38, v77);
        swift_release();
      }
    }
    uint64_t v57 = *(void *)(v3 + 16);
    uint64_t v58 = *(void *)(v3 + 24);
    unsigned __int8 v59 = *(unsigned char *)(v3 + 32);
    uint64_t v60 = type metadata accessor for PrimarySettingsListSectionModel();
    uint64_t v61 = a2 + *(int *)(v60 + 24);
    uint64_t v62 = type metadata accessor for LocalizedStringResource();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 56))(v61, 1, 1, v62);
    unint64_t v63 = (unint64_t)v80;
    *(void *)a2 = v57;
    *(void *)(a2 + 8) = v58;
    *(unsigned char *)(a2 + 16) = v59;
    *(void *)(a2 + 24) = 0;
    *(void *)(a2 + 32) = 0;
    *(void *)(a2 + *(int *)(v60 + 28)) = v63;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v60 - 8) + 56))(a2, 0, 1, v60);
    return sub_10003DA14(v57, v58, v59);
  }
  else
  {
    uint64_t v35 = type metadata accessor for PrimarySettingsListSectionModel();
    uint64_t v36 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56);
    return v36(a2, 1, 1, v35);
  }
}

uint64_t sub_10005962C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000755CC);
}

void *sub_100059640(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  return sub_1000BC4AC(a1, a2, a3, (uint64_t *)&unk_100163AD0, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel, (uint64_t)sub_100059C00);
}

char *sub_10005969C(char *result, int64_t a2, char a3, char *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v10 = a2;
    goto LABEL_8;
  }
  unint64_t v9 = *((void *)a4 + 3);
  uint64_t v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v10 = a2;
    }
LABEL_8:
    uint64_t v11 = *((void *)a4 + 2);
    if (v10 <= v11) {
      uint64_t v12 = *((void *)a4 + 2);
    }
    else {
      uint64_t v12 = v10;
    }
    if (v12)
    {
      sub_100046B9C(a5);
      uint64_t v13 = (char *)swift_allocObject();
      size_t v14 = j__malloc_size(v13);
      *((void *)v13 + 2) = v11;
      *((void *)v13 + 3) = 2 * ((uint64_t)(v14 - 32) / 40);
      uint64_t v15 = v13 + 32;
      if (v8)
      {
LABEL_13:
        if (v13 != a4 || v15 >= &a4[40 * v11 + 32]) {
          memmove(v15, a4 + 32, 40 * v11);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v13 = (char *)&_swiftEmptyArrayStorage;
      uint64_t v15 = (char *)&_swiftEmptyArrayStorage + 32;
      if (result) {
        goto LABEL_13;
      }
    }
    sub_100059DC4(0, v11, (unint64_t)v15, (uint64_t)a4, a6);
LABEL_22:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000597CC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100059834(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10005989C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100059904(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100072A98);
}

uint64_t sub_100059918@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(v2 + 16);
  uint64_t v5 = a1[3];
  uint64_t v6 = a1[4];
  sub_1000403E0(a1, v5);
  return sub_1000452E8(v4, v5, v6, a2);
}

uint64_t sub_10005997C(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    uint64_t v18 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_100046B9C(a5);
  uint64_t v15 = *(void *)(a6(0) - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v18 = (void *)swift_allocObject();
  size_t v19 = j__malloc_size(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  v18[2] = v13;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  uint64_t v21 = *(void *)(a6(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (unint64_t)v18 + v22;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(void *)(v21 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_100059C34(0, v13, v23, a4, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

uint64_t sub_100059C00(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10005997C(a1, a2, a3, a4, &qword_100161578, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
}

uint64_t sub_100059C34(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100059D90(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10005997C(a1, a2, a3, a4, &qword_100161588, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListSectionModel, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListSectionModel);
}

uint64_t sub_100059DC4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    unint64_t v6 = a4 + 40 * a1 + 32;
    unint64_t v7 = a3 + 40 * v5;
    if (v6 >= v7 || v6 + 40 * v5 <= a3)
    {
      sub_100046B9C(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100059ED0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(v2 + 16);
  uint64_t v5 = a1[3];
  uint64_t v6 = a1[4];
  sub_1000403E0(a1, v5);
  return sub_100058678(v4, v5, v6, a2);
}

uint64_t sub_100059F38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t sub_100059F4C()
{
  uint64_t v8 = _typeName(_:qualified:)();
  v1._uint64_t countAndFlagsBits = 0x203A6469207B20;
  v1._object = (void *)0xE700000000000000;
  String.append(_:)(v1);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void **)(v0 + 24);
  char v4 = *(unsigned char *)(v0 + 32);
  sub_10003DA14(v2, (uint64_t)v3, v4);
  v5._uint64_t countAndFlagsBits = sub_100058B68(v2, v3, v4);
  String.append(_:)(v5);
  swift_bridgeObjectRelease();
  sub_10003E2B4(v2, (uint64_t)v3, v4);
  v6._uint64_t countAndFlagsBits = 32032;
  v6._object = (void *)0xE200000000000000;
  String.append(_:)(v6);
  return v8;
}

uint64_t sub_10005A034()
{
  return sub_10005A058();
}

uint64_t sub_10005A058()
{
  _StringGuts.grow(_:)(39);
  uint64_t v1 = _typeName(_:qualified:)();
  swift_bridgeObjectRelease();
  uint64_t v15 = v1;
  v2._uint64_t countAndFlagsBits = 0x203A6469207B20;
  v2._object = (void *)0xE700000000000000;
  String.append(_:)(v2);
  uint64_t v3 = *(void *)(v0 + 16);
  char v4 = *(void **)(v0 + 24);
  char v5 = *(unsigned char *)(v0 + 32);
  sub_10003DA14(v3, (uint64_t)v4, v5);
  v6._uint64_t countAndFlagsBits = sub_100058B68(v3, v4, v5);
  String.append(_:)(v6);
  swift_bridgeObjectRelease();
  sub_10003E2B4(v3, (uint64_t)v4, v5);
  v7._object = (void *)0x800000010012ACE0;
  v7._uint64_t countAndFlagsBits = 0xD000000000000016;
  String.append(_:)(v7);
  uint64_t v8 = swift_bridgeObjectRetain();
  sub_10005A208(v8);
  swift_bridgeObjectRelease();
  sub_100046B9C(&qword_100164810);
  sub_10005A4C0();
  uint64_t v9 = BidirectionalCollection<>.joined(separator:)();
  uint64_t v11 = v10;
  swift_bridgeObjectRelease();
  v12._uint64_t countAndFlagsBits = v9;
  v12._object = v11;
  String.append(_:)(v12);
  swift_bridgeObjectRelease();
  v13._uint64_t countAndFlagsBits = 2099272992;
  v13._object = (void *)0xE400000000000000;
  String.append(_:)(v13);
  return v15;
}

void *sub_10005A208(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_10005A334(0, v1, 0);
    uint64_t v3 = (void *)(a1 + 32);
    do
    {
      uint64_t v4 = v3[3];
      uint64_t v5 = v3[4];
      sub_1000403E0(v3, v4);
      uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 16))(v4, v5);
      uint64_t v8 = v7;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_10005A334(0, _swiftEmptyArrayStorage[2] + 1, 1);
      }
      unint64_t v10 = _swiftEmptyArrayStorage[2];
      unint64_t v9 = _swiftEmptyArrayStorage[3];
      if (v10 >= v9 >> 1) {
        sub_10005A334(v9 > 1, v10 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v10 + 1;
      uint64_t v11 = &_swiftEmptyArrayStorage[2 * v10];
      v11[4] = v6;
      void v11[5] = v8;
      v3 += 5;
      --v1;
    }
    while (v1);
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_10005A334(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10005A354(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10005A354(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100046B9C(&qword_1001615B0);
    unint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    unint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  Swift::String v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

unint64_t sub_10005A4C0()
{
  unint64_t result = qword_100164818;
  if (!qword_100164818)
  {
    sub_10004D318(&qword_100164810);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100164818);
  }
  return result;
}

Swift::Int sub_10005A51C(unint64_t *a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for PrimarySettingsListItemModel() - 8);
  unint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v3 = sub_1000E6D34(v3);
  }
  uint64_t v4 = *(void *)(v3 + 16);
  v6[0] = v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  Swift::Int result = sub_10005A5C8(v6);
  *a1 = v3;
  return result;
}

Swift::Int sub_10005A5C8(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v258 = type metadata accessor for PrimarySettingsListItemViewType();
  uint64_t v4 = __chkstk_darwin(v258);
  uint64_t v256 = (uint64_t)&v229 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v229 - v7;
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v243 = (uint64_t)&v229 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v242 = (uint64_t)&v229 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v234 = (uint64_t)&v229 - v14;
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v229 - v15;
  uint64_t v259 = type metadata accessor for PrimarySettingsListItemModel();
  uint64_t v17 = *(void *)(v259 - 8);
  uint64_t v18 = __chkstk_darwin(v259);
  uint64_t v238 = (uint64_t)&v229 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v253 = (uint64_t)&v229 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v264 = (uint64_t)&v229 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v255 = (uint64_t)&v229 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v246 = (uint64_t)&v229 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v241 = (uint64_t)&v229 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v236 = (uint64_t)&v229 - v31;
  __chkstk_darwin(v30);
  uint64_t v235 = (uint64_t)&v229 - v32;
  Swift::Int v33 = a1[1];
  Swift::Int result = _minimumMergeRunLength(_:)(v33);
  if (result >= v33)
  {
    if (v33 < 0) {
      goto LABEL_244;
    }
    if (v33) {
      return sub_100030424(0, v33, 1, a1);
    }
    return result;
  }
  if (v33 >= 0) {
    uint64_t v35 = v33;
  }
  else {
    uint64_t v35 = v33 + 1;
  }
  if (v33 < -1) {
    goto LABEL_252;
  }
  uint64_t v232 = v16;
  Swift::Int v231 = result;
  uint64_t v245 = v17;
  if (v33 < 2)
  {
    uint64_t v39 = (char *)_swiftEmptyArrayStorage;
    unint64_t v244 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
    v230 = _swiftEmptyArrayStorage;
    if (v33 != 1)
    {
      unint64_t v41 = _swiftEmptyArrayStorage[2];
LABEL_210:
      if (v41 >= 2)
      {
        uint64_t v223 = *a1;
        do
        {
          unint64_t v224 = v41 - 2;
          if (v41 < 2) {
            goto LABEL_239;
          }
          if (!v223) {
            goto LABEL_251;
          }
          uint64_t v225 = *(void *)&v39[16 * v224 + 32];
          uint64_t v226 = *(void *)&v39[16 * v41 + 24];
          sub_1000F25F8((char *)(v223 + *(void *)(v245 + 72) * v225), v223 + *(void *)(v245 + 72) * *(void *)&v39[16 * v41 + 16], v223 + *(void *)(v245 + 72) * v226, v244);
          if (v2) {
            break;
          }
          if (v226 < v225) {
            goto LABEL_240;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v39 = sub_1000F3750((uint64_t)v39);
          }
          if (v224 >= *((void *)v39 + 2)) {
            goto LABEL_241;
          }
          uint64_t v227 = &v39[16 * v224 + 32];
          *(void *)uint64_t v227 = v225;
          *((void *)v227 + 1) = v226;
          unint64_t v228 = *((void *)v39 + 2);
          if (v41 > v228) {
            goto LABEL_242;
          }
          memmove(&v39[16 * v41 + 16], &v39[16 * v41 + 32], 16 * (v228 - v41));
          *((void *)v39 + 2) = v228 - 1;
          unint64_t v41 = v228 - 1;
        }
        while (v228 > 2);
      }
LABEL_221:
      swift_bridgeObjectRelease();
      v230[2] = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v36 = v35 >> 1;
    uint64_t v37 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)(v37 + 16) = v36;
    unint64_t v38 = (*(unsigned __int8 *)(v245 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v245 + 80);
    v230 = (void *)v37;
    unint64_t v244 = v37 + v38;
  }
  Swift::Int v40 = 0;
  uint64_t v39 = (char *)_swiftEmptyArrayStorage;
  uint64_t v247 = a1;
  uint64_t v248 = v8;
LABEL_15:
  uint64_t v239 = v39;
  Swift::Int v42 = v40 + 1;
  Swift::Int v240 = v40;
  if (v40 + 1 >= v33)
  {
    Swift::Int v50 = v40 + 1;
    uint64_t v39 = v239;
    goto LABEL_160;
  }
  uint64_t v43 = *a1;
  uint64_t v44 = *(void *)(v245 + 72);
  uint64_t v45 = v235;
  sub_100030B30(v43 + v44 * v42, v235, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
  uint64_t v250 = v43;
  sub_100030B30(v43 + v44 * v40, v236, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
  uint64_t v46 = (uint64_t)v232;
  sub_100030B30(v45 + *(int *)(v259 + 20), (uint64_t)v232, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemViewType);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  Swift::Int v251 = v33;
  switch(EnumCaseMultiPayload)
  {
    case 1:
      uint64_t v61 = type metadata accessor for PrimarySettingsListFamilyLinkModel;
      goto LABEL_24;
    case 2:
      uint64_t v56 = v46;
      uint64_t v58 = *(void **)v46;
      uint64_t v57 = *(void *)(v46 + 8);
      int v48 = *(void **)(v56 + 24);
      uint64_t v49 = *(void *)(v56 + 32);
      char v59 = *(unsigned char *)(v56 + 16);
      swift_bridgeObjectRetain();
      char v60 = v59;
      Swift::Int v33 = v251;
      sub_100046F04(v58, v57, v60);
      swift_release();
      goto LABEL_27;
    case 3:
    case 4:
      int v48 = *(void **)v46;
      uint64_t v49 = *(void *)(v46 + 8);
      break;
    case 5:
      int v48 = *(void **)(v46 + 24);
      uint64_t v49 = *(void *)(v46 + 32);
      sub_100046F04(*(void **)v46, *(void *)(v46 + 8), *(unsigned char *)(v46 + 16));
      break;
    case 6:
      uint64_t v62 = v46;
      uint64_t v64 = *(void **)v46;
      uint64_t v63 = *(void *)(v46 + 8);
      int v48 = *(void **)(v62 + 24);
      uint64_t v49 = *(void *)(v62 + 32);
      char v65 = *(unsigned char *)(v62 + 16);
      swift_bridgeObjectRetain();
      sub_100046F04(v64, v63, v65);
      goto LABEL_27;
    case 7:
    case 8:
      uint64_t v51 = v46;
      unint64_t v53 = *(void **)v46;
      uint64_t v52 = *(void *)(v46 + 8);
      int v48 = *(void **)(v51 + 24);
      uint64_t v49 = *(void *)(v51 + 32);
      char v54 = *(unsigned char *)(v51 + 16);
      swift_bridgeObjectRetain();
      char v55 = v54;
      Swift::Int v33 = v251;
      sub_100046F04(v53, v52, v55);
      swift_bridgeObjectRelease();
      goto LABEL_27;
    case 9:
      int v48 = *(void **)(v46 + 24);
      uint64_t v49 = *(void *)(v46 + 32);
      sub_10006EB80(*(void **)v46, *(void *)(v46 + 8), *(unsigned char *)(v46 + 16));
LABEL_27:
      swift_bridgeObjectRelease();
      break;
    case 10:
      int v48 = *(void **)(v46 + 24);
      uint64_t v49 = *(void *)(v46 + 32);
      sub_10006EB80(*(void **)v46, *(void *)(v46 + 8), *(unsigned char *)(v46 + 16));
      break;
    default:
      uint64_t v61 = type metadata accessor for PrimarySettingsListItemViewType;
LABEL_24:
      sub_100030BF8(v46, (uint64_t (*)(void))v61);
      int v48 = 0;
      uint64_t v49 = 0;
      break;
  }
  sub_100030B30(v236 + *(int *)(v259 + 20), v234, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemViewType);
  int v66 = swift_getEnumCaseMultiPayload();
  uint64_t v233 = v2;
  switch(v66)
  {
    case 1:
      uint64_t v77 = type metadata accessor for PrimarySettingsListFamilyLinkModel;
      goto LABEL_39;
    case 2:
      uint64_t v74 = *(void **)v234;
      uint64_t v73 = *(void *)(v234 + 8);
      uint64_t v68 = *(void **)(v234 + 24);
      uint64_t v67 = *(void *)(v234 + 32);
      char v75 = *(unsigned char *)(v234 + 16);
      swift_bridgeObjectRetain();
      char v76 = v75;
      Swift::Int v33 = v251;
      sub_100046F04(v74, v73, v76);
      swift_release();
      goto LABEL_45;
    case 3:
    case 4:
      uint64_t v68 = *(void **)v234;
      uint64_t v67 = *(void *)(v234 + 8);
      if (!v49) {
        goto LABEL_30;
      }
      goto LABEL_46;
    case 5:
      uint64_t v68 = *(void **)(v234 + 24);
      uint64_t v67 = *(void *)(v234 + 32);
      sub_100046F04(*(void **)v234, *(void *)(v234 + 8), *(unsigned char *)(v234 + 16));
      if (!v49) {
        goto LABEL_30;
      }
      goto LABEL_46;
    case 6:
      uint64_t v79 = *(void **)v234;
      uint64_t v78 = *(void *)(v234 + 8);
      uint64_t v68 = *(void **)(v234 + 24);
      uint64_t v67 = *(void *)(v234 + 32);
      char v80 = *(unsigned char *)(v234 + 16);
      swift_bridgeObjectRetain();
      char v81 = v80;
      Swift::Int v33 = v251;
      sub_100046F04(v79, v78, v81);
      goto LABEL_45;
    case 7:
    case 8:
      uint64_t v70 = *(void **)v234;
      uint64_t v69 = *(void *)(v234 + 8);
      uint64_t v68 = *(void **)(v234 + 24);
      uint64_t v67 = *(void *)(v234 + 32);
      char v71 = *(unsigned char *)(v234 + 16);
      swift_bridgeObjectRetain();
      char v72 = v71;
      Swift::Int v33 = v251;
      sub_100046F04(v70, v69, v72);
      swift_bridgeObjectRelease();
LABEL_45:
      swift_bridgeObjectRelease();
      if (v49) {
        goto LABEL_46;
      }
      goto LABEL_30;
    case 9:
      uint64_t v68 = *(void **)(v234 + 24);
      uint64_t v67 = *(void *)(v234 + 32);
      sub_10006EB80(*(void **)v234, *(void *)(v234 + 8), *(unsigned char *)(v234 + 16));
      swift_bridgeObjectRelease();
      if (!v49) {
        goto LABEL_30;
      }
      goto LABEL_46;
    case 10:
      uint64_t v68 = *(void **)(v234 + 24);
      uint64_t v67 = *(void *)(v234 + 32);
      sub_10006EB80(*(void **)v234, *(void *)(v234 + 8), *(unsigned char *)(v234 + 16));
      if (!v49) {
        goto LABEL_30;
      }
      goto LABEL_46;
    default:
      uint64_t v77 = type metadata accessor for PrimarySettingsListItemViewType;
LABEL_39:
      sub_100030BF8(v234, (uint64_t (*)(void))v77);
      uint64_t v68 = 0;
      uint64_t v67 = 0;
      if (v49)
      {
LABEL_46:
        if (v67)
        {
          Swift::Int v262 = (Swift::Int)v48;
          uint64_t v263 = v49;
          uint64_t v260 = v68;
          uint64_t v261 = v67;
          sub_100030C58();
          uint64_t v82 = StringProtocol.localizedStandardCompare<A>(_:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          BOOL v83 = v82 == -1;
        }
        else
        {
          swift_bridgeObjectRelease();
          BOOL v83 = 1;
        }
        LODWORD(v257) = v83;
      }
      else
      {
LABEL_30:
        if (v67) {
          swift_bridgeObjectRelease();
        }
        LODWORD(v257) = 0;
      }
      uint64_t v2 = v233;
      sub_100030BF8(v236, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
      sub_100030BF8(v235, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
      Swift::Int v40 = v240;
      Swift::Int v50 = v240 + 2;
      if (v240 + 2 >= v33)
      {
        uint64_t v39 = v239;
        if (v257) {
          goto LABEL_94;
        }
        goto LABEL_106;
      }
      uint64_t v254 = v44 * v42;
      uint64_t v84 = v250;
      Swift::Int v252 = v44 * v50;
      break;
  }
  while (2)
  {
    Swift::Int v85 = v50;
    uint64_t v86 = v241;
    sub_100030B30(v84 + v252, v241, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
    sub_100030B30(v84 + v254, v246, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
    sub_100030B30(v86 + *(int *)(v259 + 20), v242, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemViewType);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        char v98 = type metadata accessor for PrimarySettingsListFamilyLinkModel;
        goto LABEL_59;
      case 2u:
        uint64_t v95 = *(void **)v242;
        uint64_t v94 = *(void *)(v242 + 8);
        uint64_t v88 = *(void **)(v242 + 24);
        uint64_t v91 = *(void *)(v242 + 32);
        char v96 = *(unsigned char *)(v242 + 16);
        swift_bridgeObjectRetain();
        char v97 = v96;
        Swift::Int v33 = v251;
        sub_100046F04(v95, v94, v97);
        swift_release();
        goto LABEL_62;
      case 3u:
      case 4u:
        uint64_t v88 = *(void **)v242;
        uint64_t v87 = *(void *)(v242 + 8);
        break;
      case 5u:
        uint64_t v88 = *(void **)(v242 + 24);
        uint64_t v87 = *(void *)(v242 + 32);
        sub_100046F04(*(void **)v242, *(void *)(v242 + 8), *(unsigned char *)(v242 + 16));
        break;
      case 6u:
        unint64_t v100 = *(void **)v242;
        uint64_t v99 = *(void *)(v242 + 8);
        uint64_t v88 = *(void **)(v242 + 24);
        uint64_t v91 = *(void *)(v242 + 32);
        char v101 = *(unsigned char *)(v242 + 16);
        swift_bridgeObjectRetain();
        sub_100046F04(v100, v99, v101);
        goto LABEL_62;
      case 7u:
      case 8u:
        uint64_t v90 = *(void **)v242;
        uint64_t v89 = *(void *)(v242 + 8);
        uint64_t v88 = *(void **)(v242 + 24);
        uint64_t v91 = *(void *)(v242 + 32);
        char v92 = *(unsigned char *)(v242 + 16);
        swift_bridgeObjectRetain();
        char v93 = v92;
        Swift::Int v33 = v251;
        sub_100046F04(v90, v89, v93);
        swift_bridgeObjectRelease();
LABEL_62:
        uint64_t v87 = v91;
        goto LABEL_63;
      case 9u:
        uint64_t v88 = *(void **)(v242 + 24);
        uint64_t v87 = *(void *)(v242 + 32);
        sub_10006EB80(*(void **)v242, *(void *)(v242 + 8), *(unsigned char *)(v242 + 16));
LABEL_63:
        swift_bridgeObjectRelease();
        break;
      case 0xAu:
        uint64_t v88 = *(void **)(v242 + 24);
        uint64_t v87 = *(void *)(v242 + 32);
        sub_10006EB80(*(void **)v242, *(void *)(v242 + 8), *(unsigned char *)(v242 + 16));
        break;
      default:
        char v98 = type metadata accessor for PrimarySettingsListItemViewType;
LABEL_59:
        sub_100030BF8(v242, (uint64_t (*)(void))v98);
        uint64_t v88 = 0;
        uint64_t v87 = 0;
        break;
    }
    sub_100030B30(v246 + *(int *)(v259 + 20), v243, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemViewType);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v112 = type metadata accessor for PrimarySettingsListFamilyLinkModel;
        goto LABEL_73;
      case 2u:
        uint64_t v109 = *(void **)v243;
        uint64_t v108 = *(void *)(v243 + 8);
        uint64_t v103 = *(void **)(v243 + 24);
        uint64_t v102 = *(void *)(v243 + 32);
        Swift::Int v237 = *(void *)(v243 + 56);
        char v110 = *(unsigned char *)(v243 + 16);
        swift_bridgeObjectRetain();
        char v111 = v110;
        Swift::Int v33 = v251;
        sub_100046F04(v109, v108, v111);
        swift_release();
        goto LABEL_79;
      case 3u:
      case 4u:
        uint64_t v103 = *(void **)v243;
        uint64_t v102 = *(void *)(v243 + 8);
        if (!v87) {
          goto LABEL_74;
        }
        goto LABEL_80;
      case 5u:
        uint64_t v103 = *(void **)(v243 + 24);
        uint64_t v102 = *(void *)(v243 + 32);
        sub_100046F04(*(void **)v243, *(void *)(v243 + 8), *(unsigned char *)(v243 + 16));
        if (!v87) {
          goto LABEL_74;
        }
        goto LABEL_80;
      case 6u:
        unint64_t v114 = *(void **)v243;
        uint64_t v113 = *(void *)(v243 + 8);
        uint64_t v103 = *(void **)(v243 + 24);
        uint64_t v102 = *(void *)(v243 + 32);
        char v115 = *(unsigned char *)(v243 + 16);
        swift_bridgeObjectRetain();
        char v116 = v115;
        Swift::Int v33 = v251;
        sub_100046F04(v114, v113, v116);
        goto LABEL_79;
      case 7u:
      case 8u:
        uint64_t v105 = *(void **)v243;
        uint64_t v104 = *(void *)(v243 + 8);
        uint64_t v103 = *(void **)(v243 + 24);
        uint64_t v102 = *(void *)(v243 + 32);
        Swift::Int v237 = *(void *)(v243 + 48);
        char v106 = *(unsigned char *)(v243 + 16);
        swift_bridgeObjectRetain();
        char v107 = v106;
        Swift::Int v33 = v251;
        sub_100046F04(v105, v104, v107);
        swift_bridgeObjectRelease();
LABEL_79:
        swift_bridgeObjectRelease();
        if (v87) {
          goto LABEL_80;
        }
        goto LABEL_74;
      case 9u:
        uint64_t v103 = *(void **)(v243 + 24);
        uint64_t v102 = *(void *)(v243 + 32);
        sub_10006EB80(*(void **)v243, *(void *)(v243 + 8), *(unsigned char *)(v243 + 16));
        swift_bridgeObjectRelease();
        if (!v87) {
          goto LABEL_74;
        }
        goto LABEL_80;
      case 0xAu:
        uint64_t v103 = *(void **)(v243 + 24);
        uint64_t v102 = *(void *)(v243 + 32);
        sub_10006EB80(*(void **)v243, *(void *)(v243 + 8), *(unsigned char *)(v243 + 16));
        if (!v87) {
          goto LABEL_74;
        }
        goto LABEL_80;
      default:
        uint64_t v112 = type metadata accessor for PrimarySettingsListItemViewType;
LABEL_73:
        sub_100030BF8(v243, (uint64_t (*)(void))v112);
        uint64_t v103 = 0;
        uint64_t v102 = 0;
        if (v87)
        {
LABEL_80:
          if (v102)
          {
            Swift::Int v262 = (Swift::Int)v88;
            uint64_t v263 = v87;
            uint64_t v260 = v103;
            uint64_t v261 = v102;
            sub_100030C58();
            uint64_t v117 = StringProtocol.localizedStandardCompare<A>(_:)();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            LODWORD(v102) = v117 == -1;
          }
          else
          {
            swift_bridgeObjectRelease();
            LODWORD(v102) = 1;
          }
        }
        else
        {
LABEL_74:
          if (v102)
          {
            swift_bridgeObjectRelease();
            LODWORD(v102) = 0;
          }
        }
        uint64_t v39 = v239;
        sub_100030BF8(v246, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
        sub_100030BF8(v241, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
        if (v257 == v102)
        {
          Swift::Int v50 = v85 + 1;
          v84 += v44;
          if (v33 == v85 + 1)
          {
            Swift::Int v50 = v33;
            uint64_t v2 = v233;
            Swift::Int v40 = v240;
            if (v257) {
              goto LABEL_94;
            }
            goto LABEL_106;
          }
          continue;
        }
        uint64_t v2 = v233;
        Swift::Int v40 = v240;
        Swift::Int v50 = v85;
        if (!v257) {
          goto LABEL_106;
        }
LABEL_94:
        if (v50 < v40) {
          goto LABEL_245;
        }
        if (v40 >= v50)
        {
LABEL_106:
          a1 = v247;
          uint64_t v125 = (uint64_t)v248;
          if (v50 >= v33) {
            goto LABEL_160;
          }
          goto LABEL_109;
        }
        uint64_t v233 = v2;
        uint64_t v118 = 0;
        uint64_t v119 = v44 * (v50 - 1);
        Swift::Int v120 = v50 * v44;
        Swift::Int v121 = v40;
        uint64_t v122 = v40 * v44;
        uint64_t v249 = v44;
        do
        {
          if (v121 != v50 + v118 - 1)
          {
            uint64_t v123 = v250;
            if (!v250) {
              goto LABEL_250;
            }
            unint64_t v124 = v250 + v122;
            sub_100030CAC(v250 + v122, v238);
            if (v122 < v119 || v124 >= v123 + v120)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v122 != v119)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            sub_100030CAC(v238, v123 + v119);
            Swift::Int v40 = v240;
            uint64_t v44 = v249;
          }
          ++v121;
          --v118;
          v119 -= v44;
          v120 -= v44;
          v122 += v44;
        }
        while (v121 < v50 + v118);
        uint64_t v2 = v233;
        a1 = v247;
        uint64_t v125 = (uint64_t)v248;
        uint64_t v39 = v239;
        Swift::Int v33 = v251;
        if (v50 >= v251) {
          goto LABEL_160;
        }
LABEL_109:
        if (__OFSUB__(v50, v40)) {
          goto LABEL_243;
        }
        if (v50 - v40 >= v231) {
          goto LABEL_160;
        }
        if (__OFADD__(v40, v231)) {
          goto LABEL_246;
        }
        if (v40 + v231 >= v33) {
          Swift::Int v126 = v33;
        }
        else {
          Swift::Int v126 = v40 + v231;
        }
        if (v126 >= v40)
        {
          if (v50 == v126) {
            goto LABEL_160;
          }
          uint64_t v233 = v2;
          uint64_t v127 = *(void *)(v245 + 72);
          uint64_t v128 = v127 * (v50 - 1);
          uint64_t v249 = v127;
          Swift::Int v257 = v50 * v127;
          Swift::Int v237 = v126;
LABEL_121:
          uint64_t v130 = 0;
          Swift::Int v131 = v40;
          uint64_t v250 = v128;
          Swift::Int v251 = v50;
          while (2)
          {
            uint64_t v132 = *a1;
            uint64_t v254 = v257 + v130;
            uint64_t v133 = v255;
            sub_100030B30(v257 + v130 + v132, v255, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
            sub_100030B30(v128 + v130 + v132, v264, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
            sub_100030B30(v133 + *(int *)(v259 + 20), v125, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemViewType);
            switch(swift_getEnumCaseMultiPayload())
            {
              case 1u:
                uint64_t v145 = type metadata accessor for PrimarySettingsListFamilyLinkModel;
                goto LABEL_130;
              case 2u:
                uint64_t v140 = *(void **)v125;
                uint64_t v139 = *(void *)(v125 + 8);
                uint64_t v134 = *(void *)(v125 + 32);
                Swift::Int v252 = *(void *)(v125 + 24);
                char v141 = *(unsigned char *)(v125 + 16);
                swift_bridgeObjectRetain();
                char v142 = v141;
                a1 = v247;
                sub_100046F04(v140, v139, v142);
                swift_release();
                goto LABEL_133;
              case 3u:
              case 4u:
                uint64_t v134 = *(void *)(v125 + 8);
                Swift::Int v252 = *(void *)v125;
                break;
              case 5u:
                unint64_t v146 = *(void **)v125;
                uint64_t v147 = *(void *)(v125 + 8);
                uint64_t v134 = *(void *)(v125 + 32);
                Swift::Int v252 = *(void *)(v125 + 24);
                sub_100046F04(v146, v147, *(unsigned char *)(v125 + 16));
                break;
              case 6u:
                unint64_t v149 = *(void **)v125;
                uint64_t v148 = *(void *)(v125 + 8);
                uint64_t v134 = *(void *)(v125 + 32);
                Swift::Int v252 = *(void *)(v125 + 24);
                char v150 = *(unsigned char *)(v125 + 16);
                swift_bridgeObjectRetain();
                sub_100046F04(v149, v148, v150);
                goto LABEL_133;
              case 7u:
              case 8u:
                uint64_t v136 = *(void **)v125;
                uint64_t v135 = *(void *)(v125 + 8);
                uint64_t v134 = *(void *)(v125 + 32);
                Swift::Int v252 = *(void *)(v125 + 24);
                char v137 = *(unsigned char *)(v125 + 16);
                swift_bridgeObjectRetain();
                char v138 = v137;
                a1 = v247;
                sub_100046F04(v136, v135, v138);
                swift_bridgeObjectRelease();
                goto LABEL_133;
              case 9u:
                uint64_t v143 = *(void **)v125;
                uint64_t v144 = *(void *)(v125 + 8);
                uint64_t v134 = *(void *)(v125 + 32);
                Swift::Int v252 = *(void *)(v125 + 24);
                sub_10006EB80(v143, v144, *(unsigned char *)(v125 + 16));
LABEL_133:
                swift_bridgeObjectRelease();
                break;
              case 0xAu:
                uint64_t v169 = *(void **)v125;
                uint64_t v170 = *(void *)(v125 + 8);
                uint64_t v134 = *(void *)(v125 + 32);
                Swift::Int v252 = *(void *)(v125 + 24);
                sub_10006EB80(v169, v170, *(unsigned char *)(v125 + 16));
                break;
              default:
                uint64_t v145 = type metadata accessor for PrimarySettingsListItemViewType;
LABEL_130:
                sub_100030BF8(v125, (uint64_t (*)(void))v145);
                Swift::Int v252 = 0;
                uint64_t v134 = 0;
                break;
            }
            sub_100030B30(v264 + *(int *)(v259 + 20), v256, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemViewType);
            switch(swift_getEnumCaseMultiPayload())
            {
              case 1u:
                uint64_t v161 = type metadata accessor for PrimarySettingsListFamilyLinkModel;
                goto LABEL_143;
              case 2u:
                unint64_t v158 = *(void **)v256;
                uint64_t v157 = *(void *)(v256 + 8);
                uint64_t v151 = *(void **)(v256 + 24);
                uint64_t v152 = *(void *)(v256 + 32);
                char v159 = *(unsigned char *)(v256 + 16);
                swift_bridgeObjectRetain();
                char v160 = v159;
                uint64_t v125 = (uint64_t)v248;
                sub_100046F04(v158, v157, v160);
                a1 = v247;
                swift_release();
                goto LABEL_148;
              case 3u:
              case 4u:
                uint64_t v151 = *(void **)v256;
                uint64_t v152 = *(void *)(v256 + 8);
                if (!v134) {
                  goto LABEL_157;
                }
                goto LABEL_149;
              case 5u:
                uint64_t v151 = *(void **)(v256 + 24);
                uint64_t v152 = *(void *)(v256 + 32);
                sub_100046F04(*(void **)v256, *(void *)(v256 + 8), *(unsigned char *)(v256 + 16));
                if (!v134) {
                  goto LABEL_157;
                }
                goto LABEL_149;
              case 6u:
                uint64_t v163 = *(void **)v256;
                uint64_t v162 = *(void *)(v256 + 8);
                uint64_t v151 = *(void **)(v256 + 24);
                uint64_t v152 = *(void *)(v256 + 32);
                char v164 = *(unsigned char *)(v256 + 16);
                swift_bridgeObjectRetain();
                char v165 = v164;
                uint64_t v125 = (uint64_t)v248;
                sub_100046F04(v163, v162, v165);
                goto LABEL_148;
              case 7u:
              case 8u:
                uint64_t v154 = *(void **)v256;
                uint64_t v153 = *(void *)(v256 + 8);
                uint64_t v151 = *(void **)(v256 + 24);
                uint64_t v152 = *(void *)(v256 + 32);
                char v155 = *(unsigned char *)(v256 + 16);
                swift_bridgeObjectRetain();
                char v156 = v155;
                a1 = v247;
                sub_100046F04(v154, v153, v156);
                uint64_t v125 = (uint64_t)v248;
                swift_bridgeObjectRelease();
LABEL_148:
                swift_bridgeObjectRelease();
                if (v134) {
                  goto LABEL_149;
                }
                goto LABEL_157;
              case 9u:
                uint64_t v151 = *(void **)(v256 + 24);
                uint64_t v152 = *(void *)(v256 + 32);
                sub_10006EB80(*(void **)v256, *(void *)(v256 + 8), *(unsigned char *)(v256 + 16));
                swift_bridgeObjectRelease();
                if (!v134) {
                  goto LABEL_157;
                }
                goto LABEL_149;
              case 0xAu:
                uint64_t v151 = *(void **)(v256 + 24);
                uint64_t v152 = *(void *)(v256 + 32);
                sub_10006EB80(*(void **)v256, *(void *)(v256 + 8), *(unsigned char *)(v256 + 16));
                if (!v134) {
                  goto LABEL_157;
                }
                goto LABEL_149;
              default:
                uint64_t v161 = type metadata accessor for PrimarySettingsListItemViewType;
LABEL_143:
                sub_100030BF8(v256, (uint64_t (*)(void))v161);
                uint64_t v151 = 0;
                uint64_t v152 = 0;
                if (v134)
                {
LABEL_149:
                  if (v152)
                  {
                    Swift::Int v262 = v252;
                    uint64_t v263 = v134;
                    uint64_t v260 = v151;
                    uint64_t v261 = v152;
                    sub_100030C58();
                    uint64_t v166 = StringProtocol.localizedStandardCompare<A>(_:)();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    sub_100030BF8(v264, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
                    uint64_t v125 = (uint64_t)v248;
                    sub_100030BF8(v255, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
                    if (v166 != -1) {
                      goto LABEL_119;
                    }
                  }
                  else
                  {
                    swift_bridgeObjectRelease();
                    sub_100030BF8(v264, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
                    sub_100030BF8(v255, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
                  }
                  uint64_t v167 = *a1;
                  uint64_t v128 = v250;
                  if (!*a1) {
                    goto LABEL_248;
                  }
                  uint64_t v168 = v167 + v250 + v130;
                  sub_100030CAC(v167 + v257 + v130, v253);
                  swift_arrayInitWithTakeFrontToBack();
                  sub_100030CAC(v253, v168);
                  v130 -= v249;
                  ++v131;
                  Swift::Int v129 = v251;
                  if (v251 == v131) {
                    goto LABEL_120;
                  }
                  continue;
                }
LABEL_157:
                if (v152) {
                  swift_bridgeObjectRelease();
                }
                sub_100030BF8(v264, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
                sub_100030BF8(v255, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
LABEL_119:
                uint64_t v128 = v250;
                Swift::Int v129 = v251;
LABEL_120:
                Swift::Int v50 = v129 + 1;
                v128 += v249;
                v257 += v249;
                Swift::Int v40 = v240;
                if (v50 != v237) {
                  goto LABEL_121;
                }
                Swift::Int v50 = v237;
                uint64_t v2 = v233;
                uint64_t v39 = v239;
LABEL_160:
                if (v50 < v40) {
                  goto LABEL_238;
                }
                char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                Swift::Int v251 = v50;
                if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
                  uint64_t v39 = sub_1000F3458(0, *((void *)v39 + 2) + 1, 1, v39);
                }
                unint64_t v173 = *((void *)v39 + 2);
                unint64_t v172 = *((void *)v39 + 3);
                unint64_t v41 = v173 + 1;
                if (v173 >= v172 >> 1) {
                  uint64_t v39 = sub_1000F3458((char *)(v172 > 1), v173 + 1, 1, v39);
                }
                *((void *)v39 + 2) = v41;
                uint64_t v174 = v39 + 32;
                unint64_t v175 = &v39[16 * v173 + 32];
                Swift::Int v176 = v251;
                *(void *)unint64_t v175 = v40;
                *((void *)v175 + 1) = v176;
                if (v173)
                {
                  while (2)
                  {
                    unint64_t v177 = v41 - 1;
                    if (v41 >= 4)
                    {
                      uint64_t v182 = &v174[16 * v41];
                      uint64_t v183 = *((void *)v182 - 8);
                      uint64_t v184 = *((void *)v182 - 7);
                      BOOL v188 = __OFSUB__(v184, v183);
                      uint64_t v185 = v184 - v183;
                      if (v188) {
                        goto LABEL_227;
                      }
                      uint64_t v187 = *((void *)v182 - 6);
                      uint64_t v186 = *((void *)v182 - 5);
                      BOOL v188 = __OFSUB__(v186, v187);
                      uint64_t v180 = v186 - v187;
                      char v181 = v188;
                      if (v188) {
                        goto LABEL_228;
                      }
                      unint64_t v189 = v41 - 2;
                      uint64_t v190 = &v174[16 * v41 - 32];
                      uint64_t v192 = *(void *)v190;
                      uint64_t v191 = *((void *)v190 + 1);
                      BOOL v188 = __OFSUB__(v191, v192);
                      uint64_t v193 = v191 - v192;
                      if (v188) {
                        goto LABEL_230;
                      }
                      BOOL v188 = __OFADD__(v180, v193);
                      uint64_t v194 = v180 + v193;
                      if (v188) {
                        goto LABEL_233;
                      }
                      if (v194 >= v185)
                      {
                        uint64_t v212 = &v174[16 * v177];
                        uint64_t v214 = *(void *)v212;
                        uint64_t v213 = *((void *)v212 + 1);
                        BOOL v188 = __OFSUB__(v213, v214);
                        uint64_t v215 = v213 - v214;
                        if (v188) {
                          goto LABEL_237;
                        }
                        BOOL v205 = v180 < v215;
                      }
                      else
                      {
LABEL_179:
                        if (v181) {
                          goto LABEL_229;
                        }
                        unint64_t v189 = v41 - 2;
                        uint64_t v195 = &v174[16 * v41 - 32];
                        uint64_t v197 = *(void *)v195;
                        uint64_t v196 = *((void *)v195 + 1);
                        BOOL v198 = __OFSUB__(v196, v197);
                        uint64_t v199 = v196 - v197;
                        char v200 = v198;
                        if (v198) {
                          goto LABEL_232;
                        }
                        uint64_t v201 = &v174[16 * v177];
                        uint64_t v203 = *(void *)v201;
                        uint64_t v202 = *((void *)v201 + 1);
                        BOOL v188 = __OFSUB__(v202, v203);
                        uint64_t v204 = v202 - v203;
                        if (v188) {
                          goto LABEL_235;
                        }
                        if (__OFADD__(v199, v204)) {
                          goto LABEL_236;
                        }
                        if (v199 + v204 < v180) {
                          goto LABEL_191;
                        }
                        BOOL v205 = v180 < v204;
                      }
                      if (v205) {
                        unint64_t v177 = v189;
                      }
                    }
                    else
                    {
                      if (v41 == 3)
                      {
                        uint64_t v179 = *((void *)v39 + 4);
                        uint64_t v178 = *((void *)v39 + 5);
                        BOOL v188 = __OFSUB__(v178, v179);
                        uint64_t v180 = v178 - v179;
                        char v181 = v188;
                        goto LABEL_179;
                      }
                      uint64_t v206 = *((void *)v39 + 4);
                      uint64_t v207 = *((void *)v39 + 5);
                      BOOL v188 = __OFSUB__(v207, v206);
                      uint64_t v199 = v207 - v206;
                      char v200 = v188;
LABEL_191:
                      if (v200) {
                        goto LABEL_231;
                      }
                      uint64_t v208 = &v174[16 * v177];
                      uint64_t v210 = *(void *)v208;
                      uint64_t v209 = *((void *)v208 + 1);
                      BOOL v188 = __OFSUB__(v209, v210);
                      uint64_t v211 = v209 - v210;
                      if (v188) {
                        goto LABEL_234;
                      }
                      if (v211 < v199) {
                        goto LABEL_14;
                      }
                    }
                    unint64_t v216 = v177 - 1;
                    if (v177 - 1 >= v41)
                    {
                      __break(1u);
LABEL_224:
                      __break(1u);
LABEL_225:
                      __break(1u);
LABEL_226:
                      __break(1u);
LABEL_227:
                      __break(1u);
LABEL_228:
                      __break(1u);
LABEL_229:
                      __break(1u);
LABEL_230:
                      __break(1u);
LABEL_231:
                      __break(1u);
LABEL_232:
                      __break(1u);
LABEL_233:
                      __break(1u);
LABEL_234:
                      __break(1u);
LABEL_235:
                      __break(1u);
LABEL_236:
                      __break(1u);
LABEL_237:
                      __break(1u);
LABEL_238:
                      __break(1u);
LABEL_239:
                      __break(1u);
LABEL_240:
                      __break(1u);
LABEL_241:
                      __break(1u);
LABEL_242:
                      __break(1u);
LABEL_243:
                      __break(1u);
LABEL_244:
                      __break(1u);
LABEL_245:
                      __break(1u);
LABEL_246:
                      __break(1u);
                      goto LABEL_247;
                    }
                    uint64_t v217 = *a1;
                    if (!*a1) {
                      goto LABEL_249;
                    }
                    uint64_t v218 = &v174[16 * v216];
                    uint64_t v219 = *(void *)v218;
                    uint64_t v220 = &v174[16 * v177];
                    uint64_t v221 = *((void *)v220 + 1);
                    sub_1000F25F8((char *)(v217 + *(void *)(v245 + 72) * *(void *)v218), v217 + *(void *)(v245 + 72) * *(void *)v220, v217 + *(void *)(v245 + 72) * v221, v244);
                    if (v2) {
                      goto LABEL_221;
                    }
                    if (v221 < v219) {
                      goto LABEL_224;
                    }
                    if (v177 > *((void *)v39 + 2)) {
                      goto LABEL_225;
                    }
                    *(void *)uint64_t v218 = v219;
                    *(void *)&v174[16 * v216 + 8] = v221;
                    unint64_t v222 = *((void *)v39 + 2);
                    if (v177 >= v222) {
                      goto LABEL_226;
                    }
                    unint64_t v41 = v222 - 1;
                    memmove(&v174[16 * v177], v220 + 16, 16 * (v222 - 1 - v177));
                    *((void *)v39 + 2) = v222 - 1;
                    a1 = v247;
                    if (v222 <= 2) {
                      goto LABEL_14;
                    }
                    continue;
                  }
                }
                unint64_t v41 = 1;
LABEL_14:
                Swift::Int v33 = a1[1];
                Swift::Int v40 = v251;
                if (v251 < v33) {
                  goto LABEL_15;
                }
                goto LABEL_210;
            }
          }
        }
LABEL_247:
        __break(1u);
LABEL_248:
        __break(1u);
LABEL_249:
        __break(1u);
LABEL_250:
        __break(1u);
LABEL_251:
        __break(1u);
LABEL_252:
        Swift::Int result = _assertionFailure(_:_:file:line:flags:)();
        __break(1u);
        return result;
    }
  }
}

uint64_t sub_10005BE38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10005BE5C(a1, a2);
}

uint64_t sub_10005BE5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(v2 + 40);
  if (*(void *)(v4 + 16))
  {
    uint64_t v5 = v2;
    _OWORD v28[2] = __chkstk_darwin(a1);
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_10005C494((void (*)(uint64_t))sub_100059ED0, (uint64_t)v28, v4);
    swift_bridgeObjectRelease();
    uint64_t v7 = v6[2];
    if (v7)
    {
      uint64_t v29 = v5;
      uint64_t v8 = type metadata accessor for PrimarySettingsListSectionModel();
      uint64_t v9 = (char *)v6
         + ((*(unsigned __int8 *)(*(void *)(v8 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v8 - 8) + 80));
      uint64_t v10 = *(void *)(*(void *)(v8 - 8) + 72);
      swift_bridgeObjectRetain();
      uint64_t v11 = _swiftEmptyArrayStorage;
      do
      {
        sub_10005C1E4((uint64_t)&v9[*(int *)(v8 + 28)], (uint64_t)&v30);
        uint64_t v12 = v30;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v11 = sub_10005C278(0, v11[2] + 1, 1, v11);
        }
        unint64_t v14 = v11[2];
        unint64_t v13 = v11[3];
        if (v14 >= v13 >> 1) {
          uint64_t v11 = sub_10005C278((void *)(v13 > 1), v14 + 1, 1, v11);
        }
        void v11[2] = v14 + 1;
        v11[v14 + 4] = v12;
        v9 += v10;
        --v7;
      }
      while (v7);
      swift_bridgeObjectRelease_n();
      uint64_t v5 = v29;
      uint64_t v15 = v11[2];
      if (v15) {
        goto LABEL_10;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v11 = _swiftEmptyArrayStorage;
      uint64_t v15 = _swiftEmptyArrayStorage[2];
      if (v15)
      {
LABEL_10:
        swift_bridgeObjectRetain();
        uint64_t v16 = 0;
        uint64_t v17 = _swiftEmptyArrayStorage;
        do
        {
          uint64_t v18 = v11[v16++ + 4];
          uint64_t v30 = v17;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_10005C24C(v18);
          swift_bridgeObjectRelease();
          uint64_t v17 = v30;
        }
        while (v15 != v16);
        swift_bridgeObjectRelease();
        goto LABEL_18;
      }
    }
    uint64_t v17 = _swiftEmptyArrayStorage;
LABEL_18:
    swift_bridgeObjectRelease();
    uint64_t v22 = *(void *)(v5 + 16);
    uint64_t v23 = *(void *)(v5 + 24);
    unsigned __int8 v24 = *(unsigned char *)(v5 + 32);
    uint64_t v25 = type metadata accessor for PrimarySettingsListSectionModel();
    uint64_t v26 = a2 + *(int *)(v25 + 24);
    uint64_t v27 = type metadata accessor for LocalizedStringResource();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v26, 1, 1, v27);
    *(void *)a2 = v22;
    *(void *)(a2 + 8) = v23;
    *(unsigned char *)(a2 + 16) = v24;
    *(void *)(a2 + 24) = 0;
    *(void *)(a2 + 32) = 0;
    *(void *)(a2 + *(int *)(v25 + 28)) = v17;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(a2, 0, 1, v25);
    return sub_10003DA14(v22, v23, v24);
  }
  uint64_t v19 = type metadata accessor for PrimarySettingsListSectionModel();
  uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);

  return v20(a2, 1, 1, v19);
}

uint64_t sub_10005C1E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100046B9C(&qword_100160310);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10005C24C(uint64_t a1)
{
  return sub_1000D6C88(a1, (uint64_t (*)(void))sub_100059C00, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
}

void *sub_10005C278(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100046B9C((uint64_t *)&unk_100161640);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      unint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      unint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_10005C388(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_10005C388(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      sub_100046B9C(&qword_100160310);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void *sub_10005C494(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  return sub_1000BC4AC(a1, a2, a3, (uint64_t *)&unk_100163C20, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListSectionModel, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListSectionModel, (uint64_t)sub_100059D90);
}

uint64_t sub_10005C4F0()
{
  return sub_10005F660(*(void *)v0, *(void **)(v0 + 8), *(unsigned char *)(v0 + 16));
}

id sub_10005C4FC@<X0>(uint64_t a1@<X8>)
{
  return sub_10005C508(*(void *)v1, *(void *)(v1 + 8), *(unsigned __int8 *)(v1 + 16), a1);
}

id sub_10005C508@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, int a3@<W3>, uint64_t a4@<X8>)
{
  int v24 = a3;
  uint64_t v7 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Locale();
  __chkstk_darwin(v11 - 8);
  uint64_t v12 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v12 - 8);
  id result = (id)MobileGestalt_get_current_device();
  if (result)
  {
    unint64_t v14 = result;
    int researchFuse = MobileGestalt_get_researchFuse();

    uint64_t v16 = type metadata accessor for PrimarySettingsListSectionModel();
    uint64_t v17 = v16;
    if (researchFuse)
    {
      uint64_t v18 = a4 + *(int *)(v16 + 24);
      uint64_t v23 = a1;
      uint64_t v19 = a1;
      char v20 = v24;
      sub_10003DA14(v19, a2, v24);
      String.LocalizationValue.init(stringLiteral:)();
      static Locale.current.getter();
      (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for LocalizedStringResource.BundleDescription.main(_:), v7);
      LocalizedStringResource.init(_:table:locale:bundle:comment:)();
      uint64_t v21 = type metadata accessor for LocalizedStringResource();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v18, 0, 1, v21);
      *(void *)a4 = v23;
      *(void *)(a4 + 8) = a2;
      *(unsigned char *)(a4 + 16) = v20;
      *(void *)(a4 + 24) = 0;
      *(void *)(a4 + 32) = 0;
      *(void *)(a4 + *(int *)(v17 + 28)) = _swiftEmptyArrayStorage;
      return (id)(*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(a4, 0, 1, v17);
    }
    else
    {
      uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
      return (id)v22(a4, 1, 1, v16);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10005C824()
{
  return sub_100059F4C();
}

uint64_t sub_10005C848@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10005C86C(a1, a2);
}

uint64_t sub_10005C86C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(void *)(v2 + 40);
  uint64_t v7 = *(void *)(v6 + 16);
  swift_bridgeObjectRetain();
  sub_10005D41C(v6);
  if (*(void *)(v7 + 16))
  {
    __chkstk_darwin(v8);
    void v21[2] = a1;
    uint64_t v9 = sub_1000BC774((void (*)(void *))sub_1000BCEEC, (uint64_t)v21, v7);
    swift_bridgeObjectRelease();
    uint64_t v22 = v9;
    uint64_t v10 = *(void *)(v3 + 48) + OBJC_IVAR____TtC11SettingsApp29FollowUpListElementsGenerator_currentSnapshot;
    swift_beginAccess();
    if (*(void *)(*(void *)(v10 + 56) + 16))
    {
      uint64_t v11 = swift_bridgeObjectRetain();
      sub_10005C24C(v11);
    }
    uint64_t v12 = *(void *)(v3 + 16);
    uint64_t v13 = *(void *)(v3 + 24);
    unsigned __int8 v14 = *(unsigned char *)(v3 + 32);
    uint64_t v15 = type metadata accessor for PrimarySettingsListSectionModel();
    uint64_t v16 = a2 + *(int *)(v15 + 24);
    uint64_t v17 = type metadata accessor for LocalizedStringResource();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 1, v17);
    uint64_t v18 = v22;
    *(void *)a2 = v12;
    *(void *)(a2 + 8) = v13;
    *(unsigned char *)(a2 + 16) = v14;
    *(void *)(a2 + 24) = 0;
    *(void *)(a2 + 32) = 0;
    *(void *)(a2 + *(int *)(v15 + 28)) = v18;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a2, 0, 1, v15);
    return sub_10003DA14(v12, v13, v14);
  }
  else
  {
    uint64_t v20 = type metadata accessor for PrimarySettingsListSectionModel();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(a2, 1, 1, v20);
    return swift_bridgeObjectRelease();
  }
}

void sub_10005CA90(uint64_t a1@<X8>)
{
}

void sub_10005CAB4(uint64_t a1)
{
  id v2 = [self sharedInstance];
  unsigned int v3 = [v2 launchHasCompleted];

  if (v3 && !*(void *)(a1 + 88))
  {
    id v4 = [objc_allocWithZone((Class)HPSConnectedHeadphonesController) init];
    unint64_t v5 = *(void **)(a1 + 88);
    *(void *)(a1 + 88) = v4;

    uint64_t v6 = *(void **)(a1 + 88);
    if (v6)
    {
      uint64_t v7 = swift_allocObject();
      swift_weakInit();
      v10[4] = sub_100066C1C;
      v10[5] = v7;
      v10[0] = _NSConcreteStackBlock;
      v10[1] = 1107296256;
      v10[2] = sub_10002CC68;
      v10[3] = &unk_1001539B0;
      uint64_t v8 = _Block_copy(v10);
      id v9 = v6;
      swift_release();
      [v9 setDeviceChangeHandler:v8];
      _Block_release(v8);

      sub_10001E624();
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_10005CC18(uint64_t a1@<X8>)
{
  uint64_t v43 = type metadata accessor for PrimarySettingsListItemIdentifier();
  __chkstk_darwin(v43);
  id v4 = (void *)((char *)v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = sub_100046B9C((uint64_t *)&unk_100163AD0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for PrimarySettingsListItemModel();
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v42 = (uint64_t)v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v39 = (uint64_t)v35 - v12;
  uint64_t v13 = *(void *)(v1 + 80);
  uint64_t v14 = *(void *)(v13 + 16);
  if (v14)
  {
    uint64_t v36 = a1;
    uint64_t v37 = v1;
    uint64_t v15 = (void *)(v13 + 32);
    uint64_t v38 = v11;
    Swift::Int v40 = (unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    unint64_t v41 = (void (**)(char *, void, uint64_t, uint64_t))(v11 + 56);
    v35[1] = v13;
    swift_bridgeObjectRetain_n();
    uint64_t v44 = _swiftEmptyArrayStorage;
    do
    {
      sub_1000A763C(v15, (uint64_t)v45);
      uint64_t v16 = v45[1];
      *id v4 = v45[0];
      v4[1] = v16;
      swift_storeEnumTagMultiPayload();
      uint64_t v18 = v45[3];
      uint64_t v17 = (void *)v45[4];
      uint64_t v19 = v45[2];
      sub_100046BE0((uint64_t)v4, (uint64_t)v7);
      uint64_t v20 = &v7[*(int *)(v8 + 20)];
      *(void *)uint64_t v20 = v17;
      *((void *)v20 + 1) = 0;
      v20[16] = 0;
      *((void *)v20 + 3) = v19;
      *((void *)v20 + 4) = v18;
      *((_WORD *)v20 + 20) = 512;
      type metadata accessor for PrimarySettingsListItemViewType();
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
      id v21 = v17;
      swift_bridgeObjectRetain();
      sub_100045F84((uint64_t)v4);
      (*v41)(v7, 0, 1, v8);
      sub_1000A7674((uint64_t)v45);
      if ((*v40)(v7, 1, v8) == 1)
      {
        sub_10003F5D0((uint64_t)v7, (uint64_t *)&unk_100163AD0);
      }
      else
      {
        uint64_t v22 = v39;
        sub_100030CAC((uint64_t)v7, v39);
        sub_100030CAC(v22, v42);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v44 = (void *)sub_100059C00(0, v44[2] + 1, 1, (unint64_t)v44);
        }
        unint64_t v24 = v44[2];
        unint64_t v23 = v44[3];
        if (v24 >= v23 >> 1) {
          uint64_t v44 = (void *)sub_100059C00(v23 > 1, v24 + 1, 1, (unint64_t)v44);
        }
        uint64_t v25 = v44;
        void v44[2] = v24 + 1;
        sub_100030CAC(v42, (uint64_t)v25+ ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80))+ *(void *)(v38 + 72) * v24);
      }
      v15 += 10;
      --v14;
    }
    while (v14);
    swift_bridgeObjectRelease_n();
    uint64_t v26 = v37;
    uint64_t v27 = *(void *)(v37 + 16);
    uint64_t v28 = *(void *)(v37 + 24);
    unsigned __int8 v29 = *(unsigned char *)(v37 + 32);
    uint64_t v30 = type metadata accessor for PrimarySettingsListSectionModel();
    uint64_t v31 = v36;
    uint64_t v32 = v36 + *(int *)(v30 + 24);
    uint64_t v33 = type metadata accessor for LocalizedStringResource();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v32, 1, 1, v33);
    *(void *)uint64_t v31 = v27;
    *(void *)(v31 + 8) = v28;
    *(unsigned char *)(v31 + 16) = v29;
    *(void *)(v31 + 24) = 0;
    *(void *)(v31 + 32) = 0;
    *(void *)(v31 + *(int *)(v30 + 28)) = v44;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v31, 0, 1, v30);
    sub_10003DA14(v27, v28, v29);
    sub_10005CAB4(v26);
  }
  else
  {
    uint64_t v34 = type metadata accessor for PrimarySettingsListSectionModel();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(a1, 1, 1, v34);
    sub_10005CAB4(v1);
  }
}

uint64_t sub_10005D0C4()
{
  return sub_10005F588();
}

void sub_10005D0E8(void *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_10005D10C(uint64_t a1@<X8>)
{
}

void sub_10005D130(uint64_t a1@<X8>)
{
  id v3 = [self sharedInstance];
  unsigned int v4 = [v3 launchHasCompleted];

  if (!v4)
  {
LABEL_7:
    uint64_t v16 = type metadata accessor for PrimarySettingsListSectionModel();
    uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
    v17(a1, 1, 1, v16);
    return;
  }
  uint64_t v5 = self;
  id v6 = [v5 sharedConnection];
  if (!v6)
  {
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v7 = v6;
  unsigned int v8 = [v6 isSupervised];

  if (!v8)
  {
    uint64_t v18 = type metadata accessor for PrimarySettingsListSectionModel();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(a1, 1, 1, v18);
    if (*(unsigned char *)(v1 + OBJC_IVAR____TtC11SettingsApp36SupervisedDeviceSectionModelProvider_setupObserver)) {
      return;
    }
    id v15 = [v5 sharedConnection];
    if (v15) {
      goto LABEL_13;
    }
LABEL_17:
    __break(1u);
    return;
  }
  uint64_t v9 = *(void *)(v1 + OBJC_IVAR____TtC11SettingsApp36SupervisedDeviceSectionModelProvider_id);
  uint64_t v10 = *(void *)(v1 + OBJC_IVAR____TtC11SettingsApp36SupervisedDeviceSectionModelProvider_id + 8);
  unsigned __int8 v11 = *(unsigned char *)(v1 + OBJC_IVAR____TtC11SettingsApp36SupervisedDeviceSectionModelProvider_id + 16);
  uint64_t v12 = type metadata accessor for PrimarySettingsListSectionModel();
  uint64_t v13 = a1 + *(int *)(v12 + 24);
  sub_10003DA14(v9, v10, v11);
  sub_1000BD5D0();
  uint64_t v14 = type metadata accessor for LocalizedStringResource();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 0, 1, v14);
  *(void *)a1 = v9;
  *(void *)(a1 + 8) = v10;
  *(unsigned char *)(a1 + 16) = v11;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + *(int *)(v12 + 28)) = _swiftEmptyArrayStorage;
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(a1, 0, 1, v12);
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC11SettingsApp36SupervisedDeviceSectionModelProvider_setupObserver)) {
    return;
  }
  id v15 = [v5 sharedConnection];
  if (!v15)
  {
    __break(1u);
    goto LABEL_7;
  }
LABEL_13:
  id v19 = v15;
  [v15 registerObserver:v1];
}

void sub_10005D41C(uint64_t a1)
{
  id v2 = [self sharedInstance];
  unsigned int v3 = [v2 launchHasCompleted];

  if (v3 && !*(void *)(a1 + 24))
  {
    id v4 = [objc_allocWithZone((Class)DMCAccountSpecifierProvider) init];
    uint64_t v5 = *(void **)(a1 + 24);
    *(void *)(a1 + 24) = v4;

    id v6 = *(void **)(a1 + 24);
    if (v6)
    {
      [v6 setViewModelDelegate:a1];
      sub_1000166C8();
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_10005D4CC@<X0>(uint64_t a1@<X8>)
{
  return sub_10005D4F0(a1);
}

uint64_t sub_10005D4F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Locale();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v9 - 8);
  id v10 = [self sharedInstance];
  unsigned int v11 = [v10 launchHasCompleted];

  if (v11
    && (type metadata accessor for ScreenSharingInteractionController(),
        uint64_t v12 = (void *)static ScreenSharingInteractionController.shared.getter(),
        uint64_t v13 = dispatch thunk of ScreenSharingInteractionController.remoteControlStatus.getter(),
        v12,
        v13 == 2))
  {
    uint64_t v15 = *(void *)(v2 + 16);
    uint64_t v14 = *(void *)(v2 + 24);
    unsigned __int8 v16 = *(unsigned char *)(v2 + 32);
    uint64_t v17 = type metadata accessor for PrimarySettingsListSectionModel();
    uint64_t v23 = a1 + *(int *)(v17 + 24);
    sub_10003DA14(v15, v14, v16);
    String.LocalizationValue.init(stringLiteral:)();
    static Locale.current.getter();
    (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.main(_:), v4);
    uint64_t v18 = v23;
    LocalizedStringResource.init(_:table:locale:bundle:comment:)();
    uint64_t v19 = type metadata accessor for LocalizedStringResource();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 0, 1, v19);
    *(void *)a1 = v15;
    *(void *)(a1 + 8) = v14;
    *(unsigned char *)(a1 + 16) = v16;
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
    *(void *)(a1 + *(int *)(v17 + 28)) = _swiftEmptyArrayStorage;
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(a1, 0, 1, v17);
  }
  else
  {
    uint64_t v21 = type metadata accessor for PrimarySettingsListSectionModel();
    uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56);
    return v22(a1, 1, 1, v21);
  }
}

void sub_10005D84C(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for PrimarySettingsListItemViewType();
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for PrimarySettingsListItemIdentifier();
  __chkstk_darwin(v9 - 8);
  unsigned int v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100046B9C((uint64_t *)&unk_100163AD0);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for PrimarySettingsListItemModel();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v52 = (uint64_t)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v54 = &type metadata for SettingsAppFeatureFlags;
  unint64_t v55 = sub_10005F4D0();
  v53[0] = 1;
  char v18 = isFeatureEnabled(_:)();
  sub_100042A1C((uint64_t)v53);
  if (v18)
  {
    uint64_t v50 = v6;
    uint64_t v51 = a2;
    sub_1000578D8(v3 + OBJC_IVAR____TtC11SettingsApp22iCloudListItemProvider_id, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
    type metadata accessor for StaticPrimarySettingsListItemProvider();
    uint64_t v19 = swift_allocObject();
    sub_100058594((uint64_t)v11, v19 + OBJC_IVAR____TtC11SettingsApp37StaticPrimarySettingsListItemProvider_id, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
    sub_10003FF84(a1, (uint64_t)v14);
    swift_setDeallocating();
    sub_10003DC0C(v19 + OBJC_IVAR____TtC11SettingsApp37StaticPrimarySettingsListItemProvider_id, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
    swift_deallocClassInstance();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
    {
      sub_1000AE040((uint64_t)v14);
    }
    else
    {
      uint64_t v20 = v52;
      sub_100058594((uint64_t)v14, v52, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
      uint64_t v21 = v20 + *(int *)(v15 + 20);
      sub_1000578D8(v21, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemViewType);
      if (swift_getEnumCaseMultiPayload() == 5)
      {
        uint64_t v49 = *(void **)v8;
        uint64_t v22 = *((void *)v8 + 1);
        int v23 = v8[16];
        uint64_t v44 = *((void *)v8 + 3);
        uint64_t v45 = v22;
        uint64_t v43 = *((void *)v8 + 4);
        LODWORD(v48) = v8[40];
        int v24 = v8[41];
        int v46 = v23;
        int v47 = v24;
        uint64_t v25 = *(char **)(v3 + OBJC_IVAR____TtC11SettingsApp22iCloudListItemProvider_primaryAppleAccountStatusObserver);
        uint64_t v26 = *(void *)&v25[OBJC_IVAR____TtC11SettingsApp33PrimaryAppleAccountStatusObserver_accountStatus];
        uint64_t v27 = *(void *)&v25[OBJC_IVAR____TtC11SettingsApp33PrimaryAppleAccountStatusObserver_accountStatus + 8];
        uint64_t v28 = *(void *)&v25[OBJC_IVAR____TtC11SettingsApp33PrimaryAppleAccountStatusObserver_accountStatus + 16];
        uint64_t v29 = *(void *)&v25[OBJC_IVAR____TtC11SettingsApp33PrimaryAppleAccountStatusObserver_accountStatus + 24];
        uint64_t v31 = *(void *)&v25[OBJC_IVAR____TtC11SettingsApp33PrimaryAppleAccountStatusObserver_accountStatus + 32];
        uint64_t v30 = *(void **)&v25[OBJC_IVAR____TtC11SettingsApp33PrimaryAppleAccountStatusObserver_accountStatus + 40];
        sub_10005F260(v26, v27, v28, v29, v31, v30);
        sub_10005DE20(v25);
        sub_10003CB34(v26, v27, v28, v29, v31, v30);
        if (v27) {
          char v32 = v47;
        }
        else {
          char v32 = 0;
        }
        if (v48)
        {
          unsigned __int8 v33 = 1;
          uint64_t v34 = v51;
          uint64_t v35 = v52;
          char v36 = v46;
          uint64_t v37 = v45;
        }
        else
        {
          id v38 = [self defaultStore];
          if (!v38)
          {
            sub_100046F04(v49, v45, v46);
            __break(1u);
            return;
          }
          uint64_t v39 = v38;
          id v40 = [v38 aa_primaryAppleAccount];

          uint64_t v34 = v51;
          uint64_t v35 = v52;
          char v36 = v46;
          uint64_t v37 = v45;
          if (v40)
          {
            if ((objc_msgSend(v40, "aa_isSuspended") & 1) != 0
              || !objc_msgSend(v40, "aa_isPrimaryEmailVerified"))
            {
              unsigned __int8 v33 = 1;
            }
            else
            {
              id v41 = [v40 aa_suspensionInfo];
              if (v41)
              {
                id v48 = v41;
                unsigned __int8 v33 = [v41 isiCloudSuspended];
              }
              else
              {
                unsigned __int8 v33 = 0;
              }
            }
          }
          else
          {
            unsigned __int8 v33 = 0;
          }
        }
        sub_10003DC0C(v21, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemViewType);
        *(void *)uint64_t v21 = v49;
        *(void *)(v21 + 8) = v37;
        *(unsigned char *)(v21 + 16) = v36;
        uint64_t v42 = v43;
        *(void *)(v21 + 24) = v44;
        *(void *)(v21 + 32) = v42;
        *(unsigned char *)(v21 + 40) = v33;
        *(unsigned char *)(v21 + 41) = v32;
        swift_storeEnumTagMultiPayload();
        sub_1000578D8(v35, v34, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v16 + 56))(v34, 0, 1, v15);
        sub_10003DC0C(v35, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
        return;
      }
      sub_10003DC0C((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemViewType);
      sub_10003DC0C(v20, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
    }
    a2 = v51;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56))(a2, 1, 1, v15);
}

void sub_10005DE20(char *a1)
{
  id v2 = [self sharedInstance];
  unsigned int v3 = [v2 launchHasCompleted];

  if (v3)
  {
    uint64_t v4 = OBJC_IVAR____TtC11SettingsApp33PrimaryAppleAccountStatusObserver_accountStore;
    if (!*(void *)&a1[OBJC_IVAR____TtC11SettingsApp33PrimaryAppleAccountStatusObserver_accountStore])
    {
      sub_100046B9C(&qword_1001615B0);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10011C370;
      *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
      *(void *)(inited + 40) = v6;
      *(void *)(inited + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)();
      *(void *)(inited + 56) = v7;
      sub_10000CC20(inited);
      swift_setDeallocating();
      swift_arrayDestroy();
      id v8 = objc_allocWithZone((Class)ACMonitoredAccountStore);
      uint64_t v9 = a1;
      Class isa = Set._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v11 = [v8 initWithAccountTypes:isa delegate:v9];

      uint64_t v12 = *(void **)&a1[v4];
      *(void *)&a1[v4] = v11;

      uint64_t v13 = *(void **)&a1[v4];
      if (v13)
      {
        uint64_t v14 = swift_allocObject();
        swift_unknownObjectWeakInit();
        v17[4] = sub_10006709C;
        v17[5] = v14;
        v17[0] = _NSConcreteStackBlock;
        v17[1] = 1107296256;
        v17[2] = sub_10000A140;
        v17[3] = &unk_1001548C0;
        uint64_t v15 = _Block_copy(v17);
        id v16 = v13;
        swift_release();
        [v16 registerWithCompletion:v15];
        _Block_release(v15);
      }
      else
      {
        __break(1u);
      }
    }
  }
}

void sub_10005E054(void *a1@<X0>, uint64_t *a2@<X8>)
{
  unsigned int v3 = v2;
  uint64_t v161 = a2;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = sub_100046B9C(&qword_100163C30);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  *(void *)&long long v155 = (char *)&v140 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v154 = (uint64_t)&v140 - v8;
  uint64_t v9 = sub_100046B9C(&qword_100162DE0);
  __chkstk_darwin(v9 - 8);
  uint64_t v147 = (uint64_t)&v140 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v146 = type metadata accessor for PrimarySettingsListFamilyLinkModel();
  uint64_t v145 = *(void **)(v146 - 8);
  __chkstk_darwin(v146);
  uint64_t v156 = (uint64_t)&v140 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100046B9C(&qword_100162DE8);
  __chkstk_darwin(v12 - 8);
  uint64_t v149 = (uint64_t)&v140 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v160 = type metadata accessor for FamilyRowStatus();
  uint64_t v158 = *(void *)(v160 - 8);
  uint64_t v14 = __chkstk_darwin(v160);
  *(void *)&long long v152 = (char *)&v140 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v157 = (char *)&v140 - v17;
  __chkstk_darwin(v16);
  uint64_t v153 = (char *)&v140 - v18;
  uint64_t v19 = type metadata accessor for PrimarySettingsListItemModel();
  char v159 = *(void (**)(char *, uint64_t))(v19 - 8);
  uint64_t v20 = __chkstk_darwin(v19);
  uint64_t v148 = (uint64_t)&v140 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v20);
  int v24 = (char *)&v140 - v23;
  uint64_t v25 = __chkstk_darwin(v22);
  uint64_t v151 = (uint64_t)&v140 - v26;
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v29 = (char *)&v140 - v28;
  uint64_t v30 = __chkstk_darwin(v27);
  uint64_t v143 = (uint64_t)&v140 - v31;
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v144 = (char *)&v140 - v33;
  uint64_t v34 = __chkstk_darwin(v32);
  char v36 = (char *)&v140 - v35;
  __chkstk_darwin(v34);
  id v38 = (char *)&v140 - v37;
  uint64_t v39 = type metadata accessor for PrimarySettingsListItemIdentifier();
  __chkstk_darwin(v39);
  id v41 = (char *)&v140 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v164 = _swiftEmptyArrayStorage;
  uint64_t v150 = v42;
  swift_storeEnumTagMultiPayload();
  unint64_t v43 = sub_100042C2C();
  uint64_t v44 = (void **)sub_1000403E0(a1, a1[3]);
  unsigned int v45 = sub_1000409DC(1, v43, *v44);
  swift_bridgeObjectRelease();
  id v46 = [self sharedInstance];
  LOBYTE(v43) = [v46 launchHasCompleted];

  uint64_t v163 = v3;
  if (v43)
  {
    uint64_t v144 = v24;
    int v47 = *(char **)&v3[OBJC_IVAR____TtC11SettingsApp38PrimaryAppleAccountListSectionProvider_primaryAppleAccountStatusObserver];
    LODWORD(v154) = v45;
    uint64_t v48 = v19;
    uint64_t v49 = *(void *)&v47[OBJC_IVAR____TtC11SettingsApp33PrimaryAppleAccountStatusObserver_accountStatus];
    uint64_t v50 = *(void *)&v47[OBJC_IVAR____TtC11SettingsApp33PrimaryAppleAccountStatusObserver_accountStatus + 8];
    uint64_t v51 = *(void *)&v47[OBJC_IVAR____TtC11SettingsApp33PrimaryAppleAccountStatusObserver_accountStatus + 16];
    uint64_t v52 = *(void *)&v47[OBJC_IVAR____TtC11SettingsApp33PrimaryAppleAccountStatusObserver_accountStatus + 24];
    uint64_t v54 = *(void *)&v47[OBJC_IVAR____TtC11SettingsApp33PrimaryAppleAccountStatusObserver_accountStatus + 32];
    unint64_t v53 = *(void **)&v47[OBJC_IVAR____TtC11SettingsApp33PrimaryAppleAccountStatusObserver_accountStatus + 40];
    sub_10005F260(v49, v50, v51, v52, v54, v53);
    sub_10005DE20(v47);
    uint64_t v153 = v41;
    sub_100057940((uint64_t)v41, (uint64_t)v29, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
    uint64_t v55 = v48;
    uint64_t v56 = &v29[*(int *)(v48 + 20)];
    *(void *)uint64_t v56 = v49;
    *((void *)v56 + 1) = v50;
    *((void *)v56 + 2) = v51;
    *((void *)v56 + 3) = v52;
    *((void *)v56 + 4) = v54;
    *((void *)v56 + 5) = v53;
    v56[48] = v154 & 1;
    char v141 = (char *)type metadata accessor for PrimarySettingsListItemViewType();
    swift_storeEnumTagMultiPayload();
    char v142 = v29;
    uint64_t v57 = (uint64_t)v29;
    uint64_t v58 = v151;
    sub_100057940(v57, v151, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
    sub_10005F260(v49, v50, v51, v52, v54, v53);
    uint64_t v143 = v49;
    uint64_t v147 = v50;
    uint64_t v154 = v51;
    uint64_t v149 = v52;
    uint64_t v146 = v54;
    uint64_t v145 = v53;
    sub_10005F260(v49, v50, v51, v52, v54, v53);
    unint64_t v59 = sub_100059C00(0, 1, 1, (unint64_t)_swiftEmptyArrayStorage);
    unint64_t v61 = *(void *)(v59 + 16);
    unint64_t v60 = *(void *)(v59 + 24);
    uint64_t v62 = v55;
    if (v61 >= v60 >> 1) {
      unint64_t v59 = sub_100059C00(v60 > 1, v61 + 1, 1, v59);
    }
    *(void *)(v59 + 16) = v61 + 1;
    unint64_t v63 = (*((unsigned __int8 *)v159 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v159 + 80);
    uint64_t v64 = *((void *)v159 + 9);
    sub_100059834(v58, v59 + v63 + v64 * v61, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
    char v164 = (void *)v59;
    uint64_t v65 = v156;
    int v66 = v163;
    sub_100060518(v156);
    uint64_t v68 = v157;
    uint64_t v67 = v158;
    uint64_t v69 = v160;
    (*(void (**)(char *, uint64_t, uint64_t))(v158 + 16))(v157, v65, v160);
    sub_100030B98(v65, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListFamilyLinkModel);
    uint64_t v70 = v152;
    (*(void (**)(void, void, uint64_t))(v67 + 104))(v152, enum case for FamilyRowStatus.hidden(_:), v69);
    sub_1000607A8();
    LOBYTE(v65) = dispatch thunk of static Equatable.== infix(_:_:)();
    char v71 = *(void (**)(uint64_t, uint64_t))(v67 + 8);
    v71(v70, v69);
    v71((uint64_t)v68, v69);
    if ((v65 & 1) == 0)
    {
      uint64_t v72 = (uint64_t)v144;
      swift_storeEnumTagMultiPayload();
      sub_100060518(v72 + *(int *)(v62 + 20));
      swift_storeEnumTagMultiPayload();
      uint64_t v73 = v148;
      sub_100057940(v72, v148, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
      unint64_t v74 = (unint64_t)v164;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v74 = sub_100059C00(0, *(void *)(v74 + 16) + 1, 1, v74);
      }
      unint64_t v76 = *(void *)(v74 + 16);
      unint64_t v75 = *(void *)(v74 + 24);
      if (v76 >= v75 >> 1) {
        unint64_t v74 = sub_100059C00(v75 > 1, v76 + 1, 1, v74);
      }
      *(void *)(v74 + 16) = v76 + 1;
      sub_100059834(v73, v74 + v63 + v76 * v64, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
      char v164 = (void *)v74;
      sub_100030B98((uint64_t)v144, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
    }
    uint64_t v77 = (void *)(*(void *)&v66[OBJC_IVAR____TtC11SettingsApp38PrimaryAppleAccountListSectionProvider_followUpListElementsGenerator]
                   + OBJC_IVAR____TtC11SettingsApp29FollowUpListElementsGenerator_currentSnapshot);
    swift_beginAccess();
    if (*(void *)(*v77 + 16))
    {
      uint64_t v78 = swift_bridgeObjectRetain();
      sub_10005C24C(v78);
      uint64_t v79 = (uint64_t)v153;
      uint64_t v80 = v155;
      if (v77[2])
      {
        uint64_t v81 = v143;
LABEL_23:
        swift_bridgeObjectRetain();
        uint64_t v101 = *(void *)&v66[OBJC_IVAR____TtC11SettingsApp38PrimaryAppleAccountListSectionProvider_id];
        unsigned __int8 v102 = v66[OBJC_IVAR____TtC11SettingsApp38PrimaryAppleAccountListSectionProvider_id + 16];
        char v159 = *(void (**)(char *, uint64_t))&v66[OBJC_IVAR____TtC11SettingsApp38PrimaryAppleAccountListSectionProvider_id
                                                          + 8];
        uint64_t v160 = v101;
        sub_10003DA14(v101, (uint64_t)v159, v102);
        swift_bridgeObjectRetain();
        LocalizedStringResource.init(stringLiteral:)();
        uint64_t v103 = type metadata accessor for LocalizedStringResource();
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v103 - 8) + 56))(v80, 0, 1, v103);
        uint64_t v79 = (uint64_t)v153;
LABEL_25:
        uint64_t v107 = v80;
        uint64_t v108 = v147;
        uint64_t v109 = v154;
        uint64_t v110 = v149;
        uint64_t v111 = v146;
        uint64_t v112 = v145;
        sub_10003CB34(v81, v147, v154, v149, v146, v145);
        sub_10003CB34(v81, v108, v109, v110, v111, v112);
        swift_bridgeObjectRelease();
        sub_100030B98((uint64_t)v142, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
        sub_100030B98(v79, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
        uint64_t v113 = v164;
        unint64_t v114 = v161;
        uint64_t v115 = (uint64_t)v159;
        *uint64_t v161 = v160;
        v114[1] = v115;
        *((unsigned char *)v114 + 16) = v102;
        uint64_t v116 = type metadata accessor for PrimarySettingsListSectionModel();
        v114[3] = 0;
        v114[4] = 0;
        sub_10005FAB8(v107, (uint64_t)v114 + *(int *)(v116 + 24));
        *(uint64_t *)((char *)v114 + *(int *)(v116 + 28)) = (uint64_t)v113;
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v116 - 8) + 56))(v114, 0, 1, v116);
        uint64_t v117 = v163;
        goto LABEL_34;
      }
    }
    else
    {
      uint64_t v79 = (uint64_t)v153;
      uint64_t v80 = v155;
      if (*(void *)(v77[3] + 16))
      {
        uint64_t v100 = swift_bridgeObjectRetain();
        sub_10005C24C(v100);
        if (v77[5])
        {
          uint64_t v81 = v143;
          goto LABEL_23;
        }
      }
    }
    uint64_t v81 = v143;
    uint64_t v104 = *(void *)&v66[OBJC_IVAR____TtC11SettingsApp38PrimaryAppleAccountListSectionProvider_id];
    uint64_t v105 = *(void *)&v66[OBJC_IVAR____TtC11SettingsApp38PrimaryAppleAccountListSectionProvider_id + 8];
    unsigned __int8 v102 = v66[OBJC_IVAR____TtC11SettingsApp38PrimaryAppleAccountListSectionProvider_id + 16];
    uint64_t v106 = type metadata accessor for LocalizedStringResource();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v106 - 8) + 56))(v80, 1, 1, v106);
    char v159 = (void (*)(char *, uint64_t))v105;
    uint64_t v160 = v104;
    sub_10003DA14(v104, v105, v102);
    goto LABEL_25;
  }
  sub_1000615D0((uint64_t *)v165);
  long long v155 = v165[0];
  long long v152 = v165[1];
  uint64_t v82 = v166;
  uint64_t v83 = v167;
  sub_100057940((uint64_t)v41, (uint64_t)v38, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
  uint64_t v151 = v19;
  uint64_t v84 = &v38[*(int *)(v19 + 20)];
  long long v85 = v152;
  *(_OWORD *)uint64_t v84 = v155;
  *((_OWORD *)v84 + 1) = v85;
  *((void *)v84 + 4) = v82;
  *((void *)v84 + 5) = v83;
  v84[48] = v45 & 1;
  type metadata accessor for PrimarySettingsListItemViewType();
  swift_storeEnumTagMultiPayload();
  sub_100057940((uint64_t)v38, (uint64_t)v36, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
  sub_10005F2AC(v165, (void (*)(void, void, void, void, void, void))sub_10005F260);
  unint64_t v86 = sub_100059C00(0, 1, 1, (unint64_t)_swiftEmptyArrayStorage);
  unint64_t v88 = *(void *)(v86 + 16);
  unint64_t v87 = *(void *)(v86 + 24);
  uint64_t v89 = (uint64_t)v41;
  char v141 = v38;
  if (v88 >= v87 >> 1) {
    unint64_t v86 = sub_100059C00(v87 > 1, v88 + 1, 1, v86);
  }
  uint64_t v90 = (uint64_t)v159;
  uint64_t v91 = v160;
  char v92 = v153;
  *(void *)(v86 + 16) = v88 + 1;
  unint64_t v93 = (*(unsigned __int8 *)(v90 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v90 + 80);
  uint64_t v94 = *(void *)(v90 + 72);
  sub_100059834((uint64_t)v36, v86 + v93 + v94 * v88, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
  char v164 = (void *)v86;
  if (qword_10015F0C0 != -1) {
    swift_once();
  }
  uint64_t v95 = (void *)qword_10016AF08;
  NSString v96 = String._bridgeToObjectiveC()();
  id v97 = [v95 stringForKey:v96];

  if (v97)
  {
    uint64_t v160 = v93;
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v98 = v149;
    FamilyRowStatus.init(rawValue:)();
    uint64_t v99 = v158;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v158 + 48))(v98, 1, v91) == 1)
    {
      sub_10003F5D0(v98, &qword_100162DE8);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v99 + 32))(v92, v98, v91);
      uint64_t v118 = v92;
      uint64_t v119 = v157;
      (*(void (**)(char *, void, uint64_t))(v99 + 104))(v157, enum case for FamilyRowStatus.hidden(_:), v91);
      sub_1000607A8();
      char v120 = dispatch thunk of static Equatable.== infix(_:_:)();
      Swift::Int v121 = *(void (**)(char *, uint64_t))(v99 + 8);
      v121(v119, v91);
      if (v120)
      {
        v121(v118, v91);
      }
      else
      {
        char v159 = v121;
        uint64_t v153 = (char *)v89;
        uint64_t v122 = v156;
        uint64_t v123 = v163;
        sub_100060518(v156);
        (*(void (**)(uint64_t, char *, uint64_t))(v99 + 24))(v122, v118, v91);
        uint64_t v124 = v147;
        sub_100059834(v122, v147, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListFamilyLinkModel);
        (*((void (**)(uint64_t, void, uint64_t, uint64_t))v145 + 7))(v124, 0, 1, v146);
        uint64_t v125 = (uint64_t)&v123[OBJC_IVAR____TtC11SettingsApp38PrimaryAppleAccountListSectionProvider____lazy_storage___familyModel];
        swift_beginAccess();
        sub_1000691A0(v124, v125);
        swift_endAccess();
        uint64_t v126 = (uint64_t)v144;
        swift_storeEnumTagMultiPayload();
        sub_100060518(v126 + *(int *)(v151 + 20));
        swift_storeEnumTagMultiPayload();
        uint64_t v127 = v143;
        sub_100057940(v126, v143, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
        unint64_t v128 = (unint64_t)v164;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v128 = sub_100059C00(0, *(void *)(v128 + 16) + 1, 1, v128);
        }
        unint64_t v130 = *(void *)(v128 + 16);
        unint64_t v129 = *(void *)(v128 + 24);
        uint64_t v89 = (uint64_t)v153;
        if (v130 >= v129 >> 1) {
          unint64_t v128 = sub_100059C00(v129 > 1, v130 + 1, 1, v128);
        }
        *(void *)(v128 + 16) = v130 + 1;
        sub_100059834(v127, v128 + v160 + v130 * v94, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
        char v164 = (void *)v128;
        sub_100030B98(v126, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
        v159(v118, v91);
      }
    }
  }
  Swift::Int v131 = v163;
  uint64_t v132 = *(void *)&v163[OBJC_IVAR____TtC11SettingsApp38PrimaryAppleAccountListSectionProvider_id];
  uint64_t v133 = *(void *)&v163[OBJC_IVAR____TtC11SettingsApp38PrimaryAppleAccountListSectionProvider_id + 8];
  unsigned __int8 v134 = v163[OBJC_IVAR____TtC11SettingsApp38PrimaryAppleAccountListSectionProvider_id + 16];
  uint64_t v135 = type metadata accessor for LocalizedStringResource();
  uint64_t v136 = v154;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v135 - 8) + 56))(v154, 1, 1, v135);
  sub_10003DA14(v132, v133, v134);
  sub_10005F2AC(v165, (void (*)(void, void, void, void, void, void))sub_10003CB34);
  sub_100030B98((uint64_t)v141, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
  sub_100030B98(v89, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
  char v137 = v164;
  char v138 = v161;
  *uint64_t v161 = v132;
  v138[1] = v133;
  *((unsigned char *)v138 + 16) = v134;
  uint64_t v139 = type metadata accessor for PrimarySettingsListSectionModel();
  v138[3] = 0;
  v138[4] = 0;
  sub_10005FAB8(v136, (uint64_t)v138 + *(int *)(v139 + 24));
  *(uint64_t *)((char *)v138 + *(int *)(v139 + 28)) = (uint64_t)v137;
  (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v139 - 8) + 56))(v138, 0, 1, v139);
  uint64_t v117 = v131;
LABEL_34:
  sub_10005F2EC(v117, ObjectType);
}

uint64_t sub_10005F260(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  if (a2)
  {
    id v6 = a6;
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

void *sub_10005F2AC(void *a1, void (*a2)(void, void, void, void, void, void))
{
  return a1;
}

void sub_10005F2EC(unsigned char *a1, uint64_t a2)
{
  id v4 = [self sharedInstance];
  unsigned int v5 = [v4 launchHasCompleted];

  if (v5)
  {
    if ((a1[OBJC_IVAR____TtC11SettingsApp38PrimaryAppleAccountListSectionProvider_registeredForFamilyChange] & 1) == 0)
    {
      a1[OBJC_IVAR____TtC11SettingsApp38PrimaryAppleAccountListSectionProvider_registeredForFamilyChange] = 1;
      id v6 = [self defaultCenter];
      uint64_t v7 = (void *)static FamilySettingsFactory.FamilySettingsViewsHaveChanged.getter();
      id v8 = [self mainQueue];
      uint64_t v9 = swift_allocObject();
      *(void *)(v9 + 16) = a1;
      *(void *)(v9 + 24) = a2;
      uint64_t v15 = sub_100013028;
      uint64_t v16 = v9;
      v13[0] = _NSConcreteStackBlock;
      v13[1] = 1107296256;
      _OWORD v13[2] = sub_100012F34;
      uint64_t v14 = &unk_100154718;
      uint64_t v10 = _Block_copy(v13);
      uint64_t v11 = a1;
      swift_release();
      id v12 = [v6 addObserverForName:v7 object:0 queue:v8 usingBlock:v10];
      _Block_release(v10);
      swift_unknownObjectRelease();

      static FamilySettingsFactory.sharedProvider.getter();
      sub_1000403E0(v13, (uint64_t)v14);
      dispatch thunk of FamilySettingsViewsProtocol.sendWakeupNotification()();
      sub_100042A1C((uint64_t)v13);
    }
  }
}

unint64_t sub_10005F4D0()
{
  unint64_t result = qword_100162BA8;
  if (!qword_100162BA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100162BA8);
  }
  return result;
}

uint64_t sub_10005F524()
{
  uint64_t v1 = OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel____lazy_storage___sectionDataModelProviders;
  if (*(void *)(v0
                 + OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel____lazy_storage___sectionDataModelProviders))
  {
    uint64_t v2 = *(void *)(v0
                   + OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel____lazy_storage___sectionDataModelProviders);
  }
  else
  {
    uint64_t v2 = sub_100062A50();
    *(void *)(v0 + v1) = v2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_10005F588()
{
  swift_getObjectType();
  uint64_t v8 = _typeName(_:qualified:)();
  v1._uint64_t countAndFlagsBits = 0x203A6469207B20;
  v1._object = (void *)0xE700000000000000;
  String.append(_:)(v1);
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC11SettingsApp38PrimaryAppleAccountListSectionProvider_id);
  unsigned int v3 = *(void **)(v0 + OBJC_IVAR____TtC11SettingsApp38PrimaryAppleAccountListSectionProvider_id + 8);
  char v4 = *(unsigned char *)(v0 + OBJC_IVAR____TtC11SettingsApp38PrimaryAppleAccountListSectionProvider_id + 16);
  sub_10003DA14(v2, (uint64_t)v3, v4);
  v5._uint64_t countAndFlagsBits = sub_100058B68(v2, v3, v4);
  String.append(_:)(v5);
  swift_bridgeObjectRelease();
  sub_10003E2B4(v2, (uint64_t)v3, v4);
  v6._uint64_t countAndFlagsBits = 32032;
  v6._object = (void *)0xE200000000000000;
  String.append(_:)(v6);
  return v8;
}

uint64_t sub_10005F660(uint64_t a1, void *a2, char a3)
{
  uint64_t v10 = _typeName(_:qualified:)();
  v6._uint64_t countAndFlagsBits = 0x203A6469207B20;
  v6._object = (void *)0xE700000000000000;
  String.append(_:)(v6);
  sub_10003DA14(a1, (uint64_t)a2, a3);
  v7._uint64_t countAndFlagsBits = sub_100058B68(a1, a2, a3);
  String.append(_:)(v7);
  swift_bridgeObjectRelease();
  sub_10003E2B4(a1, (uint64_t)a2, a3);
  v8._uint64_t countAndFlagsBits = 32032;
  v8._object = (void *)0xE200000000000000;
  String.append(_:)(v8);
  return v10;
}

uint64_t sub_10005F728()
{
  uint64_t v1 = *(void *)v0;
  sub_10003DA14(*(void *)v0, *(void *)(v0 + 8), *(unsigned char *)(v0 + 16));
  return v1;
}

uint64_t sub_10005F770()
{
  return sub_10005F79C();
}

uint64_t sub_10005F79C()
{
  swift_getObjectType();
  uint64_t v4 = _typeName(_:qualified:)();
  v0._uint64_t countAndFlagsBits = 0x203A6469207B20;
  v0._object = (void *)0xE700000000000000;
  String.append(_:)(v0);
  v1._uint64_t countAndFlagsBits = sub_100048BDC();
  String.append(_:)(v1);
  swift_bridgeObjectRelease();
  v2._uint64_t countAndFlagsBits = 32032;
  v2._object = (void *)0xE200000000000000;
  String.append(_:)(v2);
  return v4;
}

void sub_10005F834(uint64_t a1@<X8>)
{
}

void sub_10005F858(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for PrimarySettingsListItemViewType();
  uint64_t v5 = __chkstk_darwin(v4);
  Swift::String v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v25 - v8;
  int v10 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC11SettingsApp31GeneralSettingsListItemProvider_badgedForSoftwareUpdate);
  uint64_t v11 = sub_100040424();
  uint64_t v13 = v12;
  char v15 = v14;
  id v16 = sub_1000477E8();
  *(void *)Swift::String v7 = v11;
  *((void *)v7 + 1) = v13;
  v7[16] = v15;
  *((void *)v7 + 3) = v16;
  *((void *)v7 + 4) = v17;
  if (v10 == 1)
  {
    *((void *)v7 + 5) = 1;
    v7[48] = 0;
    uint64_t v18 = v7 + 49;
  }
  else
  {
    uint64_t v18 = v7 + 41;
    v7[40] = 0;
  }
  *uint64_t v18 = 2;
  swift_storeEnumTagMultiPayload();
  sub_100049698((uint64_t)v7, (uint64_t)v9);
  sub_100046BE0(v1 + OBJC_IVAR____TtC11SettingsApp31GeneralSettingsListItemProvider_id, a1);
  uint64_t v19 = type metadata accessor for PrimarySettingsListItemModel();
  sub_100049698((uint64_t)v9, a1 + *(int *)(v19 + 20));
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(a1, 0, 1, v19);
  id v20 = [self sharedInstance];
  unsigned int v21 = [v20 launchHasCompleted];

  if (v21)
  {
    uint64_t v22 = OBJC_IVAR____TtC11SettingsApp31GeneralSettingsListItemProvider_softwareUpdateClient;
    if (!*(void *)(v2 + OBJC_IVAR____TtC11SettingsApp31GeneralSettingsListItemProvider_softwareUpdateClient))
    {
      if (qword_10015F128 != -1) {
        swift_once();
      }
      id v23 = [objc_allocWithZone((Class)SUManagerClient) initWithDelegate:v2 queue:qword_10016AF88 clientType:1];
      int v24 = *(void **)(v2 + v22);
      *(void *)(v2 + v22) = v23;

      sub_10001622C();
    }
  }
}

uint64_t sub_10005FAB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100046B9C(&qword_100163C30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10005FB20(uint64_t a1)
{
  uint64_t v2 = sub_100046B9C((uint64_t *)&unk_100163BC0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10005FB80(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10004D318(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10005FBEC()
{
  unint64_t result = qword_100160120;
  if (!qword_100160120)
  {
    sub_10004D318(&qword_1001600D0);
    sub_10004D2D4(&qword_100160128, &qword_1001600E8);
    sub_10004D2D4(&qword_100160130, &qword_1001600A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160120);
  }
  return result;
}

unint64_t sub_10005FCAC()
{
  unint64_t result = qword_100160138;
  if (!qword_100160138)
  {
    sub_10004D318(&qword_1001600A0);
    sub_10006990C();
    sub_10004D2D4(&qword_100160148, &qword_100160090);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160138);
  }
  return result;
}

uint64_t sub_10005FD4C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_100046B9C(&qword_100162DE0);
  __chkstk_darwin(v3 - 8);
  uint64_t v50 = (uint64_t)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = type metadata accessor for PrimarySettingsListFamilyLinkModel();
  uint64_t v49 = *(void *)(v56 - 8);
  uint64_t v5 = __chkstk_darwin(v56);
  uint64_t v54 = (uint64_t)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v48 - v7;
  uint64_t v9 = sub_100046B9C(&qword_100162DE8);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for FamilyRowStatus();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  id v16 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v48 - v17;
  uint64_t v19 = Notification.userInfo.getter();
  if (!v19) {
    uint64_t v19 = (uint64_t)sub_10006FBB4((uint64_t)_swiftEmptyArrayStorage);
  }
  uint64_t v20 = v19;
  uint64_t v57 = static FamilySettingsFactory.Marquee.getter();
  unint64_t v58 = v21;
  AnyHashable.init<A>(_:)();
  if (*(void *)(v20 + 16) && (unint64_t v22 = sub_1000619E0((uint64_t)v59), (v23 & 1) != 0))
  {
    sub_100061984(*(void *)(v20 + 56) + 32 * v22, (uint64_t)&v62);
  }
  else
  {
    long long v62 = 0u;
    long long v63 = 0u;
  }
  sub_100061AEC((uint64_t)v59);
  if (!*((void *)&v63 + 1))
  {
    sub_10003F5D0((uint64_t)&v62, &qword_1001609A0);
    goto LABEL_11;
  }
  if (!swift_dynamicCast())
  {
LABEL_11:
    uint64_t v52 = 0;
    unint64_t v24 = 0xE000000000000000;
    goto LABEL_12;
  }
  uint64_t v52 = v57;
  unint64_t v24 = v58;
LABEL_12:
  unint64_t v53 = v24;
  uint64_t v57 = static FamilySettingsFactory.Status.getter();
  unint64_t v58 = v25;
  AnyHashable.init<A>(_:)();
  if (*(void *)(v20 + 16) && (unint64_t v26 = sub_1000619E0((uint64_t)v59), (v27 & 1) != 0))
  {
    sub_100061984(*(void *)(v20 + 56) + 32 * v26, (uint64_t)&v62);
  }
  else
  {
    long long v62 = 0u;
    long long v63 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_100061AEC((uint64_t)v59);
  if (*((void *)&v63 + 1))
  {
    int v28 = swift_dynamicCast();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v11, v28 ^ 1u, 1, v12);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v18, v11, v12);
      goto LABEL_21;
    }
  }
  else
  {
    sub_10003F5D0((uint64_t)&v62, &qword_1001609A0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
  }
  static FamilySettingsFactory.sharedProvider.getter();
  sub_1000403E0(v59, v61);
  dispatch thunk of FamilySettingsViewsProtocol.rowStatus.getter();
  sub_100042A1C((uint64_t)v59);
  sub_10003F5D0((uint64_t)v11, &qword_100162DE8);
LABEL_21:
  sub_100060518((uint64_t)v8);
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v16, v8, v12);
  sub_100030B98((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListFamilyLinkModel);
  sub_1000607A8();
  uint64_t v55 = v18;
  char v29 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v51 = *(void (**)(char *, uint64_t))(v13 + 8);
  v51(v16, v12);
  if ((v29 & 1) == 0)
  {
    sub_100060518((uint64_t)v8);
    (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v8, v55, v12);
    uint64_t v30 = v50;
    sub_100059834((uint64_t)v8, v50, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListFamilyLinkModel);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v49 + 56))(v30, 0, 1, v56);
    uint64_t v31 = a2;
    uint64_t v32 = a2 + OBJC_IVAR____TtC11SettingsApp38PrimaryAppleAccountListSectionProvider____lazy_storage___familyModel;
    swift_beginAccess();
    sub_1000691A0(v30, v32);
    swift_endAccess();
    if (qword_10015F0C0 != -1) {
      swift_once();
    }
    uint64_t v33 = (void *)qword_10016AF08;
    FamilyRowStatus.rawValue.getter();
    NSString v34 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    NSString v35 = String._bridgeToObjectiveC()();
    [v33 setValue:v34 forKey:v35];

    a2 = v31;
  }
  uint64_t v36 = v54;
  sub_100060518(v54);
  uint64_t v37 = (uint64_t *)(v36 + *(int *)(v56 + 20));
  uint64_t v39 = *v37;
  uint64_t v38 = v37[1];
  swift_bridgeObjectRetain();
  sub_100030B98(v36, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListFamilyLinkModel);
  uint64_t v40 = v52;
  unint64_t v41 = v53;
  if (v39 == v52 && v38 == v53)
  {
    swift_bridgeObjectRelease();
    goto LABEL_29;
  }
  char v42 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if (v42)
  {
LABEL_29:
    swift_bridgeObjectRelease();
    if (v29) {
      return ((uint64_t (*)(char *, uint64_t))v51)(v55, v12);
    }
    goto LABEL_32;
  }
  sub_100060518((uint64_t)v8);
  uint64_t v43 = v56;
  uint64_t v44 = &v8[*(int *)(v56 + 20)];
  swift_bridgeObjectRelease();
  *(void *)uint64_t v44 = v40;
  *((void *)v44 + 1) = v41;
  uint64_t v45 = v50;
  sub_100059834((uint64_t)v8, v50, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListFamilyLinkModel);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v49 + 56))(v45, 0, 1, v43);
  uint64_t v46 = a2 + OBJC_IVAR____TtC11SettingsApp38PrimaryAppleAccountListSectionProvider____lazy_storage___familyModel;
  swift_beginAccess();
  sub_1000691A0(v45, v46);
  swift_endAccess();
LABEL_32:
  sub_1000403E0((void *)(a2 + OBJC_IVAR____TtC11SettingsApp38PrimaryAppleAccountListSectionProvider_invalidator), *(void *)(a2 + OBJC_IVAR____TtC11SettingsApp38PrimaryAppleAccountListSectionProvider_invalidator + 24));
  v59[0] = "Family Row";
  v59[1] = 10;
  char v60 = 2;
  PassthroughSubject.send(_:)();
  return ((uint64_t (*)(char *, uint64_t))v51)(v55, v12);
}

uint64_t sub_100060518@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100046B9C(&qword_100162DE0);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)v14 - v7;
  uint64_t v9 = v1 + OBJC_IVAR____TtC11SettingsApp38PrimaryAppleAccountListSectionProvider____lazy_storage___familyModel;
  swift_beginAccess();
  sub_100060740(v9, (uint64_t)v8);
  uint64_t v10 = type metadata accessor for PrimarySettingsListFamilyLinkModel();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1) {
    return sub_100059834((uint64_t)v8, a1, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListFamilyLinkModel);
  }
  sub_10003F5D0((uint64_t)v8, &qword_100162DE0);
  static FamilySettingsFactory.sharedProvider.getter();
  sub_1000403E0(v14, v14[3]);
  dispatch thunk of FamilySettingsViewsProtocol.rowStatus.getter();
  uint64_t v12 = (void *)(a1 + *(int *)(v10 + 20));
  *uint64_t v12 = 0;
  v12[1] = 0xE000000000000000;
  sub_100042A1C((uint64_t)v14);
  sub_100057940(a1, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListFamilyLinkModel);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v6, 0, 1, v10);
  swift_beginAccess();
  sub_1000691A0((uint64_t)v6, v9);
  return swift_endAccess();
}

uint64_t sub_10006072C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10006E778);
}

uint64_t sub_100060740(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100046B9C(&qword_100162DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1000607A8()
{
  unint64_t result = qword_100162DF0;
  if (!qword_100162DF0)
  {
    type metadata accessor for FamilyRowStatus();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100162DF0);
  }
  return result;
}

void sub_100060800(uint64_t a1)
{
  uint64_t v2 = sub_100046B9C((uint64_t *)&unk_100163BC0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for NSNotificationCenter.Publisher();
  uint64_t v25 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100046B9C(&qword_100161798);
  unint64_t v24 = *(void **)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = [self sharedInstance];
  unsigned int v12 = [v11 launchHasCompleted];

  if (v12)
  {
    swift_beginAccess();
    uint64_t v13 = *(void *)(a1 + 24);
    if ((v13 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      uint64_t v14 = __CocoaSet.count.getter();
      swift_bridgeObjectRelease();
      if (v14) {
        return;
      }
      goto LABEL_4;
    }
    if (!*(void *)(v13 + 16))
    {
LABEL_4:
      id v23 = self;
      id v15 = [v23 defaultCenter];
      NSNotificationCenter.publisher(for:object:)();

      void v19[2] = sub_10002E1D8(0, (unint64_t *)&qword_1001609D0);
      id v26 = (id)static OS_dispatch_queue.main.getter();
      uint64_t v21 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
      uint64_t v16 = *(void *)(v21 - 8);
      uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
      uint64_t v22 = v16 + 56;
      v20(v4, 1, 1, v21);
      void v19[5] = sub_10006572C(&qword_100163CE0, (void (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Publisher);
      unsigned char v19[4] = sub_1000652EC();
      Publisher.receive<A>(on:options:)();
      sub_10005FB20((uint64_t)v4);

      v19[1] = a1 + 24;
      uint64_t v25 = *(void *)(v25 + 8);
      ((void (*)(char *, uint64_t))v25)(v7, v5);
      swift_allocObject();
      uint64_t v17 = v24;
      swift_weakInit();
      v19[3] = sub_10004D2D4((unint64_t *)&qword_1001617A0, &qword_100161798);
      Publisher<>.sink(receiveValue:)();
      swift_release();
      unint64_t v24 = (void *)v17[1];
      ((void (*)(char *, uint64_t))v24)(v10, v8);
      swift_beginAccess();
      AnyCancellable.store(in:)();
      swift_endAccess();
      swift_release();
      id v18 = [v23 defaultCenter];
      NSNotificationCenter.publisher(for:object:)();

      id v26 = (id)static OS_dispatch_queue.main.getter();
      v20(v4, 1, 1, v21);
      Publisher.receive<A>(on:options:)();
      sub_10005FB20((uint64_t)v4);

      ((void (*)(char *, uint64_t))v25)(v7, v5);
      swift_allocObject();
      swift_weakInit();
      Publisher<>.sink(receiveValue:)();
      swift_release();
      ((void (*)(char *, uint64_t))v24)(v10, v8);
      swift_beginAccess();
      AnyCancellable.store(in:)();
      swift_endAccess();
      swift_release();
      sub_10001584C();
    }
  }
}

void sub_100060D98(uint64_t a1)
{
  uint64_t v2 = sub_100046B9C(&qword_100163C38);
  uint64_t v38 = *(void *)(v2 - 8);
  uint64_t v39 = v2;
  __chkstk_darwin(v2);
  uint64_t v37 = (char *)v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100046B9C((uint64_t *)&unk_100163BC0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for OS_dispatch_queue.SchedulerTimeType.Stride();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v41 = v7;
  uint64_t v42 = v8;
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100046B9C(&qword_100163C40);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100046B9C(&qword_100163C48);
  uint64_t v40 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v18 = [self sharedInstance];
  unsigned int v19 = [v18 launchHasCompleted];

  if (v19 && !*(void *)(a1 + 72))
  {
    type metadata accessor for PrimaryAppleAccountStatusObserver();
    sub_10003736C((unint64_t *)&unk_100162EB0, (void (*)(uint64_t))type metadata accessor for PrimaryAppleAccountStatusObserver);
    id v43 = (id)ObservableObject<>.objectWillChange.getter();
    type metadata accessor for SecondaryAppleAccountItemsObserver();
    uint64_t v36 = a1;
    sub_10003736C(&qword_1001631D0, (void (*)(uint64_t))type metadata accessor for SecondaryAppleAccountItemsObserver);
    id v44 = (id)ObservableObject<>.objectWillChange.getter();
    uint64_t v35 = type metadata accessor for ObservableObjectPublisher();
    Publisher.merge(with:)();
    swift_release();
    swift_release();
    static OS_dispatch_queue.SchedulerTimeType.Stride.milliseconds(_:)();
    uint64_t v20 = sub_10002E1D8(0, (unint64_t *)&qword_1001609D0);
    id v43 = (id)static OS_dispatch_queue.main.getter();
    uint64_t v21 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
    uint64_t v22 = *(void *)(v21 - 8);
    uint64_t v32 = *(void (**)(char *, uint64_t, uint64_t))(v22 + 56);
    uint64_t v33 = v21;
    v31[2] = v22 + 56;
    v32(v6, 1, 1);
    sub_10004D2D4(&qword_100163C50, &qword_100163C40);
    uint64_t v23 = sub_100026EC8((unint64_t *)&qword_100163C00, (unint64_t *)&qword_1001609D0);
    uint64_t v34 = v20;
    v31[1] = v23;
    Publisher.debounce<A>(for:scheduler:options:)();
    sub_10003F5D0((uint64_t)v6, (uint64_t *)&unk_100163BC0);

    unint64_t v24 = *(void (**)(char *, uint64_t))(v42 + 8);
    v42 += 8;
    v31[0] = v24;
    v24(v10, v41);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    sub_10004D2D4(&qword_100163C58, &qword_100163C48);
    Publisher.eraseToAnyPublisher()();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v17, v15);
    swift_allocObject();
    swift_weakInit();
    swift_allocObject();
    swift_weakInit();
    type metadata accessor for FLFollowUpModelObserver();
    swift_allocObject();
    swift_retain();
    uint64_t v25 = v36;
    *(void *)(v25 + 72) = FLFollowUpModelObserver.init(primaryAppleAccountIdentifierForFollowUpsRetriever:secondaryAppleAccountsIdentifiersForFollowUpsRetriever:accountChangePublisher:onUpdateBlock:)();
    swift_release();
    if (*(void *)(v25 + 72))
    {
      sub_10003736C(&qword_100163C60, (void (*)(uint64_t))&type metadata accessor for FLFollowUpModelObserver);
      swift_retain();
      id v26 = (void *)ObservableObject<>.objectWillChange.getter();
      swift_release();
      id v43 = v26;
      static OS_dispatch_queue.SchedulerTimeType.Stride.milliseconds(_:)();
      if (qword_10015F128 != -1) {
        swift_once();
      }
      char v27 = (void *)qword_10016AF88;
      id v44 = (id)qword_10016AF88;
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v32)(v6, 1, 1, v33);
      id v28 = v27;
      char v29 = v37;
      Publisher.debounce<A>(for:scheduler:options:)();
      sub_10003F5D0((uint64_t)v6, (uint64_t *)&unk_100163BC0);

      ((void (*)(char *, uint64_t))v31[0])(v10, v41);
      swift_release();
      swift_allocObject();
      swift_weakInit();
      sub_10004D2D4(&qword_100163C68, &qword_100163C38);
      uint64_t v30 = v39;
      Publisher<>.sink(receiveValue:)();
      swift_release();
      (*(void (**)(char *, uint64_t))(v38 + 8))(v29, v30);
      swift_beginAccess();
      AnyCancellable.store(in:)();
      swift_endAccess();
      swift_release();
      swift_release();
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_1000615D0(uint64_t *a1@<X8>)
{
  id v2 = [objc_allocWithZone((Class)AAAppleAccountInformationCache) init];
  unsigned int v3 = [self isCloudSubscriber];
  if ([v2 isSignedIn]
    && (id v4 = [v2 accountFullName]) != 0)
  {
    uint64_t v5 = v4;
    uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v8 = v7;

    uint64_t v9 = v3;
    unint64_t v10 = 0xE000000000000000;
  }
  else
  {

    uint64_t v6 = 0;
    uint64_t v8 = 0;
    unint64_t v10 = 0;
    uint64_t v9 = 0;
  }
  *a1 = v6;
  a1[1] = v8;
  a1[2] = 0;
  a1[3] = v10;
  a1[4] = v9;
  a1[5] = 0;
}

uint64_t sub_1000616AC()
{
  return sub_100074304();
}

uint64_t sub_1000616D8(uint64_t result, uint64_t a2, uint64_t a3)
{
  unsigned int v19 = (unint64_t *)result;
  uint64_t v25 = 0;
  int64_t v4 = 0;
  uint64_t v5 = a3 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a3 + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v11 = v10 | (v4 << 6);
      goto LABEL_19;
    }
    BOOL v12 = __OFADD__(v4++, 1);
    if (v12)
    {
      __break(1u);
      goto LABEL_36;
    }
    if (v4 >= v9) {
      return sub_1000250DC(v19, a2, v25, a3);
    }
    unint64_t v13 = *(void *)(v5 + 8 * v4);
    if (!v13) {
      break;
    }
LABEL_18:
    unint64_t v8 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_19:
    sub_100061984(*(void *)(a3 + 56) + 32 * v11, (uint64_t)v24);
    sub_100061984((uint64_t)v24, (uint64_t)v21);
    sub_100046B9C(&qword_1001609A8);
    if (!swift_dynamicCast()) {
      goto LABEL_5;
    }
    uint64_t v15 = v22;
    char v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    AnyHashable.init<A>(_:)();
    if (*(void *)(v15 + 16) && (unint64_t v16 = sub_1000619E0((uint64_t)v21), (v17 & 1) != 0))
    {
      sub_100061984(*(void *)(v15 + 56) + 32 * v16, (uint64_t)&v22);
    }
    else
    {
      long long v22 = 0u;
      long long v23 = 0u;
    }
    swift_bridgeObjectRelease();
    sub_100061AEC((uint64_t)v21);
    if (!*((void *)&v23 + 1))
    {
      sub_10003F5D0((uint64_t)&v22, &qword_1001609A0);
      goto LABEL_5;
    }
    if (swift_dynamicCast())
    {
      unint64_t result = sub_100042A1C((uint64_t)v24);
      if ((v20 & 1) == 0)
      {
        *(unint64_t *)((char *)v19 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
        BOOL v12 = __OFADD__(v25++, 1);
        if (v12) {
          goto LABEL_37;
        }
      }
    }
    else
    {
LABEL_5:
      unint64_t result = sub_100042A1C((uint64_t)v24);
    }
  }
  int64_t v14 = v4 + 1;
  if (v4 + 1 >= v9) {
    return sub_1000250DC(v19, a2, v25, a3);
  }
  unint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13) {
    goto LABEL_17;
  }
  int64_t v14 = v4 + 2;
  if (v4 + 2 >= v9) {
    return sub_1000250DC(v19, a2, v25, a3);
  }
  unint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13) {
    goto LABEL_17;
  }
  int64_t v14 = v4 + 3;
  if (v4 + 3 >= v9) {
    return sub_1000250DC(v19, a2, v25, a3);
  }
  unint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13)
  {
LABEL_17:
    int64_t v4 = v14;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v9) {
      return sub_1000250DC(v19, a2, v25, a3);
    }
    unint64_t v13 = *(void *)(v5 + 8 * v4);
    ++v14;
    if (v13) {
      goto LABEL_18;
    }
  }
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_100061984(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

unint64_t sub_1000619E0(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = AnyHashable._rawHashValue(seed:)(*(void *)(v2 + 40));

  return sub_100061A24(a1, v4);
}

unint64_t sub_100061A24(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    do
    {
      sub_100061B40(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v8);
      char v6 = static AnyHashable.== infix(_:_:)();
      sub_100061AEC((uint64_t)v8);
      if (v6) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v5;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

uint64_t sub_100061AEC(uint64_t a1)
{
  return a1;
}

uint64_t sub_100061B40(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100061B9C()
{
  uint64_t v0 = sub_10005F524();
  uint64_t v1 = *(void *)(v0 + 16);
  if (v1)
  {
    uint64_t v2 = v0 + 32;
    do
    {
      sub_1000620F8(v2, (uint64_t)v6);
      uint64_t v3 = v7;
      uint64_t v4 = v8;
      sub_1000403E0(v6, v7);
      sub_100061C3C(v3, v4);
      sub_100042A1C((uint64_t)v6);
      v2 += 40;
      --v1;
    }
    while (v1);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_100061C3C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v33 = a2;
  uint64_t v5 = type metadata accessor for OSSignpostID();
  uint64_t v34 = *(void *)(v5 - 8);
  uint64_t v35 = v5;
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = (char *)v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(a1 - 8);
  __chkstk_darwin(v6);
  unint64_t v11 = (char *)v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for OSSignposter();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10015F180 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_1000477B0(v12, (uint64_t)qword_10016B070);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v16, v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v3, a1);
  static OSSignpostID.exclusive.getter();
  uint64_t v32 = v13;
  char v17 = (uint8_t *)swift_slowAlloc();
  uint64_t v18 = swift_slowAlloc();
  uint64_t v30 = v15;
  uint64_t v31 = v12;
  *(_DWORD *)char v17 = 136315138;
  uint64_t v37 = v18;
  v29[0] = v8;
  v29[1] = v3;
  uint64_t v19 = v33;
  uint64_t v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 16))(a1, v33);
  uint64_t v36 = sub_100042948(v20, v21, &v37);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, a1);
  long long v22 = OSSignposter.logHandle.getter();
  os_signpost_type_t v23 = static os_signpost_type_t.begin.getter();
  uint64_t v24 = v29[0];
  os_signpost_id_t v25 = OSSignpostID.rawValue.getter();
  _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v22, v23, v25, "PrimarySettingsListSectionModelProviding.performPostApplicationLaunchSetup()", "Section Provider: %s", v17, 0xCu);
  (*(void (**)(uint64_t, uint64_t))(v19 + 24))(a1, v19);
  os_signpost_type_t v26 = static os_signpost_type_t.end.getter();
  os_signpost_id_t v27 = OSSignpostID.rawValue.getter();
  _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v22, v26, v27, "PrimarySettingsListSectionModelProviding.performPostApplicationLaunchSetup()", "Section Provider: %s", v17, 0xCu);

  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();
  (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v24, v35);
  return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v30, v31);
}

uint64_t sub_10006203C()
{
  return sub_100062060();
}

uint64_t sub_100062060()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = v1 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_1000620F8(v3, (uint64_t)v7);
      uint64_t v4 = v8;
      uint64_t v5 = v9;
      sub_1000403E0(v7, v8);
      sub_100062160(v4, v5);
      sub_100042A1C((uint64_t)v7);
      v3 += 40;
      --v2;
    }
    while (v2);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1000620F8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_100062160(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v33 = a2;
  uint64_t v5 = type metadata accessor for OSSignpostID();
  uint64_t v34 = *(void *)(v5 - 8);
  uint64_t v35 = v5;
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = (char *)v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(a1 - 8);
  __chkstk_darwin(v6);
  unint64_t v11 = (char *)v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for OSSignposter();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10015F180 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_1000477B0(v12, (uint64_t)qword_10016B070);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v16, v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v3, a1);
  static OSSignpostID.exclusive.getter();
  uint64_t v32 = v13;
  char v17 = (uint8_t *)swift_slowAlloc();
  uint64_t v18 = swift_slowAlloc();
  uint64_t v30 = v15;
  uint64_t v31 = v12;
  *(_DWORD *)char v17 = 136315138;
  uint64_t v37 = v18;
  v29[0] = v8;
  v29[1] = v3;
  uint64_t v19 = v33;
  uint64_t v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 16))(a1, v33);
  uint64_t v36 = sub_100042948(v20, v21, &v37);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, a1);
  long long v22 = OSSignposter.logHandle.getter();
  os_signpost_type_t v23 = static os_signpost_type_t.begin.getter();
  uint64_t v24 = v29[0];
  os_signpost_id_t v25 = OSSignpostID.rawValue.getter();
  _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v22, v23, v25, "PrimarySettingsListItemModelProviding.performPostApplicationLaunchSetup()", "Item Provider: %s", v17, 0xCu);
  (*(void (**)(uint64_t, uint64_t))(v19 + 24))(a1, v19);
  os_signpost_type_t v26 = static os_signpost_type_t.end.getter();
  os_signpost_id_t v27 = OSSignpostID.rawValue.getter();
  _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v22, v26, v27, "PrimarySettingsListItemModelProviding.performPostApplicationLaunchSetup()", "Item Provider: %s", v17, 0xCu);

  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();
  (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v24, v35);
  return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v30, v31);
}

uint64_t *sub_100062564(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
        uint64_t v7 = type metadata accessor for FLFollowUpInformation();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        uint64_t v10 = type metadata accessor for FLFollowUpInformation();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
        uint64_t v11 = *(int *)(sub_100046B9C(&qword_10015F7F8) + 48);
        uint64_t v12 = (uint64_t *)((char *)a1 + v11);
        uint64_t v13 = (uint64_t *)((char *)a2 + v11);
        uint64_t v14 = v13[1];
        *uint64_t v12 = *v13;
        v12[1] = v14;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
      case 4u:
      case 5u:
        uint64_t v15 = a2[1];
        *a1 = *a2;
        a1[1] = v15;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1000627A8()
{
  return sub_1000627CC();
}

uint64_t sub_1000627CC()
{
  uint64_t v1 = *(void *)&v0[OBJC_IVAR____TtC11SettingsApp48DefaultsObservingPrimarySettingsListItemProvider_userDefaults];
  NSString v2 = String._bridgeToObjectiveC()();
  uint64_t v3 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_1000F1B9C;
  aBlock[5] = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000F136C;
  aBlock[3] = &unk_100155E18;
  uint64_t v4 = _Block_copy(aBlock);
  swift_release();
  id v5 = [v0 na_addNotificationBlockObserverForObject:v1 keyPath:v2 options:1 usingBlock:v4];

  _Block_release(v4);
  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  uint64_t v6 = (uint64_t)&v0[OBJC_IVAR____TtC11SettingsApp48DefaultsObservingPrimarySettingsListItemProvider_defaultsObserver];
  swift_beginAccess();
  sub_10006292C((uint64_t)aBlock, v6);
  return swift_endAccess();
}

uint64_t sub_10006292C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100046B9C(&qword_1001609A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100062994()
{
  return sub_1000629B8();
}

uint64_t sub_1000629B8()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = v1 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_1000620F8(v3, (uint64_t)v7);
      uint64_t v4 = v8;
      uint64_t v5 = v9;
      sub_1000403E0(v7, v8);
      sub_100061C3C(v4, v5);
      sub_100042A1C((uint64_t)v7);
      v3 += 40;
      --v2;
    }
    while (v2);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100062A50()
{
  uint64_t v1 = *v0;
  unint64_t v86 = &type metadata for SecurityResearchDeviceSectionModelProvider;
  unint64_t v87 = &off_100155F20;
  long long v84 = xmmword_100120C50;
  char v85 = 2;
  uint64_t v2 = sub_100046B9C(&qword_1001615A0);
  uint64_t v3 = swift_allocObject();
  long long v82 = xmmword_10011C360;
  *(_OWORD *)(v3 + 16) = xmmword_10011C360;
  uint64_t v79 = v3;
  sub_1000498B0(&v84, v3 + 32);
  uint64_t v4 = (uint64_t *)swift_retain();
  id v5 = sub_10000A810(v4);
  unint64_t v86 = (ValueMetadata *)type metadata accessor for SupervisedDeviceSectionModelProvider();
  unint64_t v87 = &off_100154C70;
  *(void *)&long long v84 = v5;
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = v82;
  uint64_t v78 = v6;
  sub_1000498B0(&v84, v6 + 32);
  unint64_t v86 = (ValueMetadata *)v1;
  unint64_t v87 = &off_100155278;
  *(void *)&long long v84 = v0;
  uint64_t v7 = type metadata accessor for RemoteControlSectionModelProvider();
  uint64_t v8 = swift_allocObject();
  uint64_t v9 = sub_10002BF58((uint64_t)&v84, v1);
  __chkstk_darwin(v9);
  uint64_t v11 = (uint64_t *)((char *)&v70 - v10);
  (*(void (**)(char *))(v12 + 16))((char *)&v70 - v10);
  uint64_t v13 = *v11;
  swift_retain();
  uint64_t v14 = sub_10000F13C(v13, v8);
  sub_100042A1C((uint64_t)&v84);
  unint64_t v86 = (ValueMetadata *)v7;
  unint64_t v87 = &off_100154968;
  *(void *)&long long v84 = v14;
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = v82;
  sub_1000498B0(&v84, v15 + 32);
  id v16 = sub_100009A74();
  unint64_t v86 = (ValueMetadata *)type metadata accessor for PrimaryAppleAccountListSectionProvider();
  unint64_t v87 = &off_1001546C0;
  *(void *)&long long v84 = v16;
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = v82;
  uint64_t v77 = v17;
  sub_1000498B0(&v84, v17 + 32);
  uint64_t v18 = sub_100009218();
  unint64_t v86 = (ValueMetadata *)type metadata accessor for SecondaryAppleAccountSectionModelProvider();
  unint64_t v87 = &off_100154C00;
  *(void *)&long long v84 = v18;
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = v82;
  uint64_t v76 = v19;
  sub_1000498B0(&v84, v19 + 32);
  uint64_t v20 = sub_1000092BC();
  unint64_t v86 = (ValueMetadata *)type metadata accessor for ConnectedHeadphonesSectionModelProvider();
  unint64_t v87 = &off_1001538E0;
  *(void *)&long long v84 = v20;
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = v82;
  uint64_t v75 = v21;
  sub_1000498B0(&v84, v21 + 32);
  uint64_t v22 = sub_10002AF54(v0);
  uint64_t v23 = type metadata accessor for StaticPrimarySettingsListSectionProvider();
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_100120C60;
  *(_WORD *)(v24 + 32) = 2;
  *(void *)(v24 + 40) = v22;
  unint64_t v86 = (ValueMetadata *)v23;
  unint64_t v87 = &off_100155F50;
  *(void *)&long long v84 = v24;
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = v82;
  uint64_t v74 = v25;
  sub_1000498B0(&v84, v25 + 32);
  uint64_t v26 = sub_10000FD30();
  uint64_t v27 = type metadata accessor for ComposablePrimarySettingsListSectionProvider();
  uint64_t v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_100120C70;
  *(unsigned char *)(v28 + 32) = 2;
  *(void *)(v28 + 40) = v26;
  unint64_t v86 = (ValueMetadata *)v27;
  unint64_t v87 = &off_100155E70;
  *(void *)&long long v84 = v28;
  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = v82;
  uint64_t v73 = v29;
  sub_1000498B0(&v84, v29 + 32);
  uint64_t v30 = sub_10001DB60();
  uint64_t v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_100120C80;
  *(_WORD *)(v31 + 32) = 2;
  *(void *)(v31 + 40) = v30;
  unint64_t v86 = (ValueMetadata *)v23;
  unint64_t v87 = &off_100155F50;
  *(void *)&long long v84 = v31;
  uint64_t v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = v82;
  uint64_t v72 = v32;
  sub_1000498B0(&v84, v32 + 32);
  uint64_t v33 = sub_10002985C(v0);
  uint64_t v34 = swift_allocObject();
  *(_OWORD *)(v34 + 16) = xmmword_100120C90;
  *(_WORD *)(v34 + 32) = 2;
  *(void *)(v34 + 40) = v33;
  unint64_t v86 = (ValueMetadata *)v23;
  unint64_t v87 = &off_100155F50;
  *(void *)&long long v84 = v34;
  uint64_t v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = v82;
  uint64_t v81 = v35;
  sub_1000498B0(&v84, v35 + 32);
  char v71 = v0;
  uint64_t v36 = sub_1000CEEC4(v0);
  uint64_t v37 = swift_allocObject();
  *(_OWORD *)(v37 + 16) = xmmword_100120CA0;
  *(_WORD *)(v37 + 32) = 258;
  *(void *)(v37 + 40) = v36;
  unint64_t v86 = (ValueMetadata *)v23;
  unint64_t v87 = &off_100155F50;
  *(void *)&long long v84 = v37;
  uint64_t v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = v82;
  uint64_t v80 = v38;
  sub_1000498B0(&v84, v38 + 32);
  unint64_t v86 = (ValueMetadata *)type metadata accessor for PrimarySettingsListItemIdentifier();
  unint64_t v87 = &off_100151968;
  sub_10002A3A4((uint64_t *)&v84);
  swift_storeEnumTagMultiPayload();
  sub_100046B9C(&qword_1001615C0);
  uint64_t v39 = swift_allocObject();
  *(_OWORD *)(v39 + 16) = v82;
  unint64_t v40 = v39 + 32;
  sub_1000498B0(&v84, v39 + 32);
  sub_100046B9C((uint64_t *)&unk_100163C70);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = v82;
  *(void *)(inited + 32) = v39;
  int64_t v42 = *(void *)(v39 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v43 = sub_10002AF40(0, v42, 1, (char *)_swiftEmptyArrayStorage);
  id v44 = v43;
  if (!*(void *)(v39 + 16))
  {
    if (!v42) {
      goto LABEL_9;
    }
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v45 = *((void *)v43 + 2);
  if ((*((void *)v43 + 3) >> 1) - v45 < v42)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v70 = v2;
  uint64_t v46 = v15;
  unint64_t v47 = (unint64_t)&v43[40 * v45 + 32];
  if (v40 < v47 + 40 * v42 && v47 < v40 + 40 * v42) {
    goto LABEL_13;
  }
  sub_100046B9C(&qword_1001615C8);
  swift_arrayInitWithCopy();
  uint64_t v15 = v46;
  if (!v42)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    sub_100046B9C(&qword_100163C80);
    swift_arrayDestroy();
    uint64_t v51 = swift_allocObject();
    *(_OWORD *)(v51 + 16) = xmmword_100120CB0;
    *(_WORD *)(v51 + 32) = 2;
    *(void *)(v51 + 40) = v44;
    unint64_t v86 = (ValueMetadata *)v23;
    unint64_t v87 = &off_100155F50;
    *(void *)&long long v84 = v51;
    uint64_t v52 = swift_allocObject();
    *(_OWORD *)(v52 + 16) = v82;
    uint64_t v70 = v52;
    sub_1000498B0(&v84, v52 + 32);
    uint64_t v53 = sub_10002A408((uint64_t)v71);
    uint64_t v54 = swift_allocObject();
    *(_OWORD *)(v54 + 16) = xmmword_100120CC0;
    *(_WORD *)(v54 + 32) = 2;
    *(void *)(v54 + 40) = v53;
    unint64_t v86 = (ValueMetadata *)v23;
    unint64_t v87 = &off_100155F50;
    *(void *)&long long v84 = v54;
    uint64_t v55 = swift_allocObject();
    *(_OWORD *)(v55 + 16) = v82;
    sub_1000498B0(&v84, v55 + 32);
    *(void *)&long long v82 = v83;
    v83[0] = v79;
    v83[1] = v78;
    v83[2] = v15;
    v83[3] = v77;
    v83[4] = v76;
    v83[5] = v75;
    v83[6] = v74;
    v83[7] = v73;
    v83[8] = v72;
    v83[9] = v81;
    v83[10] = v80;
    v83[11] = v52;
    v83[12] = v55;
    *(void *)&long long v84 = _swiftEmptyArrayStorage;
    uint64_t v56 = swift_bridgeObjectRetain();
    sub_1000633DC(v56);
    uint64_t v57 = swift_bridgeObjectRetain();
    sub_1000633DC(v57);
    uint64_t v58 = swift_bridgeObjectRetain();
    sub_1000633DC(v58);
    uint64_t v59 = swift_bridgeObjectRetain();
    sub_1000633DC(v59);
    uint64_t v60 = swift_bridgeObjectRetain();
    sub_1000633DC(v60);
    uint64_t v61 = swift_bridgeObjectRetain();
    sub_1000633DC(v61);
    uint64_t v62 = swift_bridgeObjectRetain();
    sub_1000633DC(v62);
    uint64_t v63 = swift_bridgeObjectRetain();
    sub_1000633DC(v63);
    uint64_t v64 = swift_bridgeObjectRetain();
    sub_1000633DC(v64);
    uint64_t v65 = swift_bridgeObjectRetain();
    sub_1000633DC(v65);
    uint64_t v66 = swift_bridgeObjectRetain();
    sub_1000633DC(v66);
    uint64_t v67 = swift_bridgeObjectRetain();
    sub_1000633DC(v67);
    uint64_t v68 = swift_bridgeObjectRetain();
    sub_1000633DC(v68);
    sub_100046B9C(&qword_100163C88);
    swift_arrayDestroy();
    return v84;
  }
  uint64_t v48 = *((void *)v44 + 2);
  BOOL v49 = __OFADD__(v48, v42);
  uint64_t v50 = v48 + v42;
  if (!v49)
  {
    *((void *)v44 + 2) = v50;
    goto LABEL_9;
  }
LABEL_12:
  __break(1u);
LABEL_13:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000633DC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *v1;
  int64_t v4 = *((void *)*v1 + 2);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *((void *)v3 + 3) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_100063548(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = *((void *)v3 + 2);
  if ((*((void *)v3 + 3) >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[40 * v8 + 32];
  if (a1 + 32 < v9 + 40 * v2 && v9 < a1 + 32 + 40 * v2) {
    goto LABEL_24;
  }
  sub_100046B9C(&qword_1001615A8);
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = *((void *)v3 + 2);
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    *((void *)v3 + 2) = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

char *sub_100063548(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_10005969C(a1, a2, a3, a4, &qword_1001615A0, &qword_1001615A8);
}

uint64_t getEnumTagSinglePayload for PrimarySettingsListSectionIdentifier(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PrimarySettingsListSectionIdentifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1000635F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100063608(a1, a2, a3, a4, (uint64_t (*)(void, void, void, void, void, void))sub_10003B220);
}

uint64_t sub_100063608(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, void, void, void, void, void))
{
  return a5(*(void *)a1, *(void *)(a1 + 8), *(unsigned __int8 *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(unsigned __int8 *)(a2 + 16));
}

uint64_t sub_100063630(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100063640(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100063650(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100063660(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100063670(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100063680(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100063690(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000636A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000636B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000636C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000636D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000636E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000636F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100063700(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100063710(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100063720(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100063730(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100063740(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100063750(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100063760(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100063770(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100063780(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100063790(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000637A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000637B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000637C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000637D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000637E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000637F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100063800(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100063810(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100063820(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100063834@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)v1;
  uint64_t v3 = *(void *)(v1 + 8);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v3;
  unsigned __int8 v4 = *(unsigned char *)(v1 + 16);
  *(unsigned char *)(a1 + 16) = v4;
  return sub_10003DA14(v2, v3, v4);
}

uint64_t sub_10006384C()
{
  return swift_release();
}

uint64_t sub_100063854()
{
  return swift_release();
}

uint64_t sub_10006385C()
{
  return swift_release();
}

uint64_t sub_100063864()
{
  return swift_release();
}

uint64_t sub_10006386C()
{
  return swift_release();
}

uint64_t sub_100063874()
{
  return swift_release();
}

uint64_t sub_10006387C()
{
  return swift_release();
}

uint64_t sub_100063884()
{
  return swift_release();
}

uint64_t sub_10006388C()
{
  return swift_release();
}

uint64_t sub_100063894()
{
  return swift_release();
}

uint64_t sub_10006389C()
{
  return swift_release();
}

uint64_t sub_1000638A4()
{
  return swift_release();
}

uint64_t sub_1000638AC()
{
  return swift_release();
}

uint64_t sub_1000638B4()
{
  return swift_release();
}

uint64_t sub_1000638BC()
{
  return swift_release();
}

uint64_t sub_1000638C4()
{
  return swift_release();
}

uint64_t sub_1000638CC()
{
  return swift_release();
}

uint64_t sub_1000638D4()
{
  return swift_release();
}

uint64_t sub_1000638DC()
{
  return swift_release();
}

uint64_t sub_1000638E4()
{
  return swift_release();
}

uint64_t sub_1000638EC()
{
  return swift_release();
}

uint64_t sub_1000638F4()
{
  return swift_release();
}

uint64_t sub_1000638FC()
{
  return swift_release();
}

uint64_t sub_100063904()
{
  return swift_release();
}

uint64_t sub_10006390C()
{
  return swift_release();
}

uint64_t sub_100063914()
{
  return swift_release();
}

uint64_t sub_10006391C()
{
  return swift_release();
}

uint64_t sub_100063924()
{
  return swift_release();
}

uint64_t sub_10006392C()
{
  return swift_release();
}

uint64_t sub_100063934()
{
  return swift_release();
}

uint64_t sub_10006393C()
{
  return swift_release();
}

uint64_t sub_100063944()
{
  return swift_release();
}

unsigned char *sub_10006394C(unsigned char *result)
{
  *result &= ~*(unsigned char *)(v1 + 16) & 1;
  return result;
}

uint64_t getEnumTagSinglePayload for PrimarySettingsListDataModelSnapshot(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

__n128 initializeWithTake for PrimarySettingsListLinkModel(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 26) = *(_OWORD *)(a2 + 26);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

ValueMetadata *type metadata accessor for NavigationSplitViewProxyToWorkaroundMissingSPI()
{
  return &type metadata for NavigationSplitViewProxyToWorkaroundMissingSPI;
}

uint64_t destroy for SettingsAppDebugMenuGesture()
{
  return swift_release();
}

__n128 initializeWithTake for Icon(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

ValueMetadata *type metadata accessor for SettingsAppQuickAction()
{
  return &type metadata for SettingsAppQuickAction;
}

ValueMetadata *type metadata accessor for PrimarySettingsListValueLink()
{
  return &type metadata for PrimarySettingsListValueLink;
}

uint64_t sub_100063A18@<X0>(uint64_t a1@<X8>)
{
  return sub_1000303B8(a1);
}

__n128 initializeWithTake for PrimarySettingsListValueLinkModel(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 42) = *(_OWORD *)(a2 + 42);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

ValueMetadata *type metadata accessor for FirstAppearanceModifier()
{
  return &type metadata for FirstAppearanceModifier;
}

ValueMetadata *type metadata accessor for SettingsSearchZeroKeywordList()
{
  return &type metadata for SettingsSearchZeroKeywordList;
}

ValueMetadata *type metadata accessor for PrimarySettingsListLink()
{
  return &type metadata for PrimarySettingsListLink;
}

ValueMetadata *type metadata accessor for PrimarySettingsListBadgedImagelessLink()
{
  return &type metadata for PrimarySettingsListBadgedImagelessLink;
}

uint64_t storeEnumTagSinglePayload for PrimarySettingsListDataModelSnapshot(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PrimarySettingsListAppleAccountLink()
{
  return &type metadata for PrimarySettingsListAppleAccountLink;
}

ValueMetadata *type metadata accessor for PrimarySettingsListImagelessLink()
{
  return &type metadata for PrimarySettingsListImagelessLink;
}

ValueMetadata *type metadata accessor for PrimarySettingsListBadgedLink()
{
  return &type metadata for PrimarySettingsListBadgedLink;
}

ValueMetadata *type metadata accessor for PrimarySettingsListToggle()
{
  return &type metadata for PrimarySettingsListToggle;
}

ValueMetadata *type metadata accessor for DebugMenuModifier()
{
  return &type metadata for DebugMenuModifier;
}

uint64_t type metadata accessor for SettingsAppSearchViewModel()
{
  uint64_t result = qword_100161320;
  if (!qword_100161320) {
    return swift_getSingletonMetadata();
  }
  return result;
}

ValueMetadata *type metadata accessor for PrimarySettingsListDataModelSnapshot()
{
  return &type metadata for PrimarySettingsListDataModelSnapshot;
}

ValueMetadata *type metadata accessor for PrimarySettingsListFollowUpHeader()
{
  return &type metadata for PrimarySettingsListFollowUpHeader;
}

ValueMetadata *type metadata accessor for PrimarySettingsListSubtitleLink()
{
  return &type metadata for PrimarySettingsListSubtitleLink;
}

const char *sub_100063B88()
{
  return "sae";
}

const char *sub_100063B9C()
{
  return "SiriUI";
}

ValueMetadata *type metadata accessor for PrimarySettingsListSectionIdentifier()
{
  return &type metadata for PrimarySettingsListSectionIdentifier;
}

ValueMetadata *type metadata accessor for PrimarySettingsListFollowUpAction()
{
  return &type metadata for PrimarySettingsListFollowUpAction;
}

uint64_t sub_100063BD4()
{
  return sub_100027378();
}

const char *sub_100063BDC()
{
  uint64_t v1 = "ForceCarrierSettingsHidden";
  if (*v0 != 1) {
    uint64_t v1 = "ForceInternalSettingsHidden";
  }
  if (*v0) {
    return v1;
  }
  else {
    return "ForceDeveloperSettingsHidden";
  }
}

const char *sub_100063C24()
{
  return "ForSettingsAppOnlyDoNotUseGenerallyAsASourceOfTruth";
}

ValueMetadata *type metadata accessor for AboutSecurityResearchDeviceRepresentable()
{
  return &type metadata for AboutSecurityResearchDeviceRepresentable;
}

ValueMetadata *type metadata accessor for SettingsAppSearchViewModel.SearchState()
{
  return &type metadata for SettingsAppSearchViewModel.SearchState;
}

uint64_t type metadata accessor for SettingsAppNavigationModel()
{
  uint64_t result = qword_100163E00;
  if (!qword_100163E00) {
    return swift_getSingletonMetadata();
  }
  return result;
}

id sub_100063CA8@<X0>(uint64_t a1@<X8>)
{
  return sub_10000EB18(*(void *)(v1 + 16), a1);
}

uint64_t sub_100063CB0@<X0>(BOOL *a1@<X8>)
{
  return sub_100017B64((unsigned __int8 *)(v1 + 49), a1);
}

uint64_t _s11SettingsApp17DebugMenuModifierVwet_0(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

ValueMetadata *type metadata accessor for Icon()
{
  return &type metadata for Icon;
}

uint64_t sub_100063D1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 32);
}

ValueMetadata *type metadata accessor for AboutSupervisedDeviceRepresentable()
{
  return &type metadata for AboutSupervisedDeviceRepresentable;
}

uint64_t type metadata accessor for AppleAccountSignInSheet(uint64_t a1)
{
  return sub_100036190(a1, qword_100162CB8);
}

ValueMetadata *type metadata accessor for SettingsSearchResultsList()
{
  return &type metadata for SettingsSearchResultsList;
}

__n128 initializeWithTake for PrimarySettingsListDataModelSnapshot(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t sub_100063D98(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 - 8);
  __chkstk_darwin();
  long long v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v2 + 16))(v4);
  int v5 = (*(uint64_t (**)(char *, uint64_t))(v2 + 88))(v4, a1);
  if (v5 == enum case for ScenePhase.background(_:)) {
    return 0x756F72676B636162;
  }
  if (v5 == enum case for ScenePhase.inactive(_:)) {
    return 0x6576697463616E69;
  }
  if (v5 == enum case for ScenePhase.active(_:)) {
    return 0x657669746361;
  }
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, a1);
  return 0x6E776F6E6B6E75;
}

const char *sub_100063F1C()
{
  if (*v0) {
    return "EmperorPenguin";
  }
  else {
    return "IML";
  }
}

const char *sub_100063F4C()
{
  return "CoreTelephony";
}

uint64_t sub_100063F60(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for SettingsAppPresentableItemIdentifier(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

uint64_t type metadata accessor for SettingsApplicationDebugRoot()
{
  uint64_t result = qword_1001603E0;
  if (!qword_1001603E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10006407C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10006E83C);
}

uint64_t sub_100064090()
{
  return sub_100039968();
}

id sub_100064098@<X0>(uint64_t a1@<X8>)
{
  return sub_10000B36C(*(void *)(v1 + 16), a1);
}

uint64_t sub_1000640A0@<X0>(uint64_t a1@<X8>)
{
  return sub_100037490(a1);
}

uint64_t sub_1000640F8()
{
  return sub_1000274D8(v0[2], v0[3], v0[4]);
}

uint64_t type metadata accessor for RestrictionsManager()
{
  uint64_t result = qword_100160980;
  if (!qword_100160980) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100064150(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000C7D90);
}

const char *sub_100064164()
{
  if (*v0) {
    return "iCloudInPrimaryList";
  }
  else {
    return "UpdatedPrivacySettings";
  }
}

const char *sub_100064194()
{
  return "SettingsApp";
}

__n128 initializeWithTake for PrimarySettingsListAppleAccountLinkModel(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_100064208(uint64_t a1, uint64_t a2)
{
  return sub_100064234(*(void **)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(unsigned char *)(a2 + 16));
}

ValueMetadata *type metadata accessor for Icon.IconType()
{
  return &type metadata for Icon.IconType;
}

uint64_t sub_100064234(void *a1, uint64_t a2, char a3, unint64_t a4, uint64_t a5, char a6)
{
  switch(a3)
  {
    case 1:
      if (a6 != 1) {
        goto LABEL_15;
      }
      goto LABEL_7;
    case 2:
      if (a6 != 2) {
        goto LABEL_15;
      }
LABEL_7:
      if (a1 == (void *)a4 && a2 == a5)
      {
LABEL_14:
        uint64_t result = 1;
      }
      else
      {
        uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
      }
      break;
    case 3:
      if (a6 == 3 && !(a5 | a4)) {
        goto LABEL_14;
      }
      goto LABEL_15;
    default:
      if (a6)
      {
LABEL_15:
        uint64_t result = 0;
      }
      else
      {
        sub_10006E244();
        sub_100047728(a1, a2, 0);
        sub_100047728((id)a4, a5, 0);
        char v10 = static NSObject.== infix(_:_:)();
        sub_100046F04((void *)a4, a5, 0);
        sub_100046F04(a1, a2, 0);
        uint64_t result = v10 & 1;
      }
      break;
  }
  return result;
}

ValueMetadata *type metadata accessor for SettingsAppPresentableItemIdentifier()
{
  return &type metadata for SettingsAppPresentableItemIdentifier;
}

ValueMetadata *type metadata accessor for SettingsAppDebugMenuGesture()
{
  return &type metadata for SettingsAppDebugMenuGesture;
}

uint64_t sub_1000643AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 16);
}

uint64_t type metadata accessor for SettingsAppDependency()
{
  return sub_10003ABF8();
}

void sub_1000643CC()
{
  sub_10006451C(319, &qword_100164278, (uint64_t (*)(uint64_t))&type metadata accessor for WithCurrentHostingControllerAction, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v0 <= 0x3F)
  {
    sub_10006451C(319, (unint64_t *)&unk_100164280, (uint64_t (*)(uint64_t))type metadata accessor for SettingsAppNavigationModel, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Bindable);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_10006451C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t type metadata accessor for SettingsApplicationDelegate()
{
  uint64_t result = qword_1001606B8;
  if (!qword_1001606B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

ValueMetadata *type metadata accessor for PrimarySettingsListAppleAccountLinkModel()
{
  return &type metadata for PrimarySettingsListAppleAccountLinkModel;
}

ValueMetadata *type metadata accessor for PrimarySettingsListValueLinkModel()
{
  return &type metadata for PrimarySettingsListValueLinkModel;
}

ValueMetadata *type metadata accessor for PrimarySettingsListItemVisibility()
{
  return &type metadata for PrimarySettingsListItemVisibility;
}

ValueMetadata *type metadata accessor for PrimarySettingsListToggleModel()
{
  return &type metadata for PrimarySettingsListToggleModel;
}

ValueMetadata *type metadata accessor for PrimarySettingsListLinkModel()
{
  return &type metadata for PrimarySettingsListLinkModel;
}

uint64_t sub_100064640(uint64_t a1)
{
  uint64_t v2 = sub_100046B9C(&qword_1001609A0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000646A0()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(unsigned char **)(*v0 + 16);
  uint64_t v5 = *v0;
  swift_task_dealloc();
  *uint64_t v2 = *(unsigned char *)(v1 + 32);
  long long v3 = *(uint64_t (**)(void))(v5 + 8);
  return v3();
}

uint64_t sub_1000647B4(uint64_t a1)
{
  long long v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_10007B630;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_100163D28 + dword_100163D28);
  return v6(a1, v4);
}

uint64_t sub_10006486C(uint64_t a1, int *a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  long long v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v3;
  *long long v3 = v2;
  v3[1] = sub_1000646A0;
  return v5(v2 + 32);
}

uint64_t sub_10006494C(uint64_t isStackAllocationSafe)
{
  uint64_t v2 = isStackAllocationSafe;
  char v3 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v4 = (unint64_t)((1 << v3) + 63) >> 6;
  size_t v5 = 8 * v4;
  if ((v3 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v5);
    uint64_t v6 = sub_1000616D8((uint64_t)&v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v4, v2);
    if (v1) {
      swift_willThrow();
    }
    else {
      return v6;
    }
  }
  else
  {
    uint64_t v7 = (void *)swift_slowAlloc();
    bzero(v7, v5);
    uint64_t v2 = sub_1000616D8((uint64_t)v7, v4, v2);
    swift_slowDealloc();
  }
  return v2;
}

uint64_t sub_100064AA4(uint64_t isStackAllocationSafe, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t a3)
{
  uint64_t v6 = isStackAllocationSafe;
  char v7 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v8 = (unint64_t)((1 << v7) + 63) >> 6;
  size_t v9 = 8 * v8;
  if ((v7 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v9);
    uint64_t v10 = sub_100064C1C((uint64_t)&v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v8, v6, a2);
    if (v3) {
      swift_willThrow();
    }
    else {
      return v10;
    }
  }
  else
  {
    uint64_t v11 = (void *)swift_slowAlloc();
    bzero(v11, v9);
    a3 = sub_100064C1C((uint64_t)v11, v8, v6, a2);
    swift_slowDealloc();
  }
  return a3;
}

uint64_t sub_100064C1C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v22 = (unint64_t *)result;
  uint64_t v23 = 0;
  int64_t v6 = 0;
  uint64_t v7 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a3 + 64);
  int64_t v25 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      unint64_t v10 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v11 = v10 | (v6 << 6);
      goto LABEL_5;
    }
    int64_t v17 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v17 >= v25) {
      return sub_100064E1C(v22, a2, v23, a3);
    }
    unint64_t v18 = *(void *)(v24 + 8 * v17);
    ++v6;
    if (!v18)
    {
      int64_t v6 = v17 + 1;
      if (v17 + 1 >= v25) {
        return sub_100064E1C(v22, a2, v23, a3);
      }
      unint64_t v18 = *(void *)(v24 + 8 * v6);
      if (!v18)
      {
        int64_t v6 = v17 + 2;
        if (v17 + 2 >= v25) {
          return sub_100064E1C(v22, a2, v23, a3);
        }
        unint64_t v18 = *(void *)(v24 + 8 * v6);
        if (!v18) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v11 = __clz(__rbit64(v18)) + (v6 << 6);
LABEL_5:
    uint64_t v12 = *(void *)(*(void *)(a3 + 48) + 8 * v11);
    uint64_t v13 = (unsigned __int8 *)(*(void *)(a3 + 56) + 24 * v11);
    uint64_t v14 = *v13;
    uint64_t v16 = *((void *)v13 + 1);
    uint64_t v15 = *((void *)v13 + 2);
    swift_bridgeObjectRetain();
    LOBYTE(v14) = a4(v12, v14, v16, v15);
    uint64_t result = swift_bridgeObjectRelease();
    if (v14)
    {
      *(unint64_t *)((char *)v22 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      if (__OFADD__(v23++, 1))
      {
        __break(1u);
        return sub_100064E1C(v22, a2, v23, a3);
      }
    }
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v25) {
    return sub_100064E1C(v22, a2, v23, a3);
  }
  unint64_t v18 = *(void *)(v24 + 8 * v19);
  if (v18)
  {
    int64_t v6 = v19;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v6 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v6 >= v25) {
      return sub_100064E1C(v22, a2, v23, a3);
    }
    unint64_t v18 = *(void *)(v24 + 8 * v6);
    ++v19;
    if (v18) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_100064E1C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3) {
    return (uint64_t)&_swiftEmptyDictionarySingleton;
  }
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  sub_100046B9C(&qword_100162520);
  uint64_t result = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v9 = result;
  uint64_t v35 = a1;
  uint64_t v36 = a2;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 64;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      uint64_t v37 = v11;
      unint64_t v14 = v13 | (v11 << 6);
    }
    else
    {
      uint64_t v15 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_40;
      }
      if (v15 >= v36) {
        return v9;
      }
      unint64_t v16 = v35[v15];
      uint64_t v17 = v11 + 1;
      if (!v16)
      {
        uint64_t v17 = v11 + 2;
        if (v11 + 2 >= v36) {
          return v9;
        }
        unint64_t v16 = v35[v17];
        if (!v16)
        {
          uint64_t v17 = v11 + 3;
          if (v11 + 3 >= v36) {
            return v9;
          }
          unint64_t v16 = v35[v17];
          if (!v16)
          {
            uint64_t v18 = v11 + 4;
            if (v11 + 4 >= v36) {
              return v9;
            }
            unint64_t v16 = v35[v18];
            if (!v16)
            {
              while (1)
              {
                uint64_t v17 = v18 + 1;
                if (__OFADD__(v18, 1)) {
                  goto LABEL_41;
                }
                if (v17 >= v36) {
                  return v9;
                }
                unint64_t v16 = v35[v17];
                ++v18;
                if (v16) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v17 = v11 + 4;
          }
        }
      }
LABEL_24:
      unint64_t v10 = (v16 - 1) & v16;
      uint64_t v37 = v17;
      unint64_t v14 = __clz(__rbit64(v16)) + (v17 << 6);
    }
    uint64_t v19 = v4;
    Swift::UInt v20 = *(void *)(*(void *)(v4 + 48) + 8 * v14);
    uint64_t v21 = *(void *)(v4 + 56) + 24 * v14;
    char v22 = *(unsigned char *)v21;
    uint64_t v23 = *(void *)(v21 + 8);
    uint64_t v24 = *(void *)(v21 + 16);
    Hasher.init(_seed:)();
    Hasher._combine(_:)(v20);
    uint64_t result = Hasher._finalize()();
    uint64_t v25 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v26 = result & ~v25;
    unint64_t v27 = v26 >> 6;
    if (((-1 << v26) & ~*(void *)(v12 + 8 * (v26 >> 6))) != 0)
    {
      unint64_t v28 = __clz(__rbit64((-1 << v26) & ~*(void *)(v12 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v31 = v27 == v30;
        if (v27 == v30) {
          unint64_t v27 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v12 + 8 * v27);
      }
      while (v32 == -1);
      unint64_t v28 = __clz(__rbit64(~v32)) + (v27 << 6);
    }
    *(void *)(v12 + ((v28 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v28;
    *(void *)(*(void *)(v9 + 48) + 8 * v28) = v20;
    uint64_t v33 = *(void *)(v9 + 56) + 24 * v28;
    *(unsigned char *)uint64_t v33 = v22;
    *(void *)(v33 + 8) = v23;
    *(void *)(v33 + 16) = v24;
    ++*(void *)(v9 + 16);
    if (__OFSUB__(v5--, 1)) {
      break;
    }
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v4 = v19;
    uint64_t v11 = v37;
    if (!v5) {
      return v9;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1000650D4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

unint64_t sub_1000651C8()
{
  unint64_t result = qword_10015F520;
  if (!qword_10015F520)
  {
    sub_10002E1D8(255, &qword_10015F510);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015F520);
  }
  return result;
}

NSString sub_100065234()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10016AE80 = (uint64_t)result;
  return result;
}

NSString sub_10006526C()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10016AE78 = (uint64_t)result;
  return result;
}

uint64_t sub_1000652A4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000652EC()
{
  unint64_t result = qword_100163C00;
  if (!qword_100163C00)
  {
    sub_10002E1D8(255, (unint64_t *)&qword_1001609D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100163C00);
  }
  return result;
}

uint64_t sub_100065354(uint64_t a1)
{
  return sub_100013030(a1, 0xD000000000000026, 0x80000001001292E0, &qword_10016AF90);
}

uint64_t sub_100065378(uint64_t a1)
{
  return sub_100013030(a1, 0xD000000000000028, 0x80000001001292B0, &qword_10016AF88);
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
}

void sub_1000653B0()
{
  qword_10016AE50 = 10;
}

uint64_t sub_1000653C0()
{
  return swift_release();
}

uint64_t sub_1000653C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (uint64_t *)(a1 + 48);
    uint64_t v4 = (uint64_t *)(a2 + 48);
    do
    {
      uint64_t v5 = *(v3 - 2);
      uint64_t v6 = *(v3 - 1);
      uint64_t v8 = *v3;
      uint64_t v7 = v3[1];
      uint64_t v9 = v3[2];
      uint64_t v10 = v3[3];
      uint64_t v11 = *(v4 - 2);
      uint64_t v12 = *(v4 - 1);
      uint64_t v13 = *v4;
      uint64_t v14 = v4[1];
      uint64_t v15 = v4[2];
      uint64_t v16 = v4[3];
      uint64_t v32 = v4[4];
      uint64_t v33 = v3[4];
      if (v3[6])
      {
        if ((v4[6] & 1) == 0) {
          return 0;
        }
        if (v5 != v11 || v6 != v12)
        {
          uint64_t v17 = v4[2];
          uint64_t v30 = v3[1];
          char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
          uint64_t v7 = v30;
          uint64_t v15 = v17;
          if ((v18 & 1) == 0) {
            return 0;
          }
        }
        if (v8 != v13 || v7 != v14)
        {
          uint64_t v19 = v15;
          char v20 = _stringCompareWithSmolCheck(_:_:expecting:)();
          uint64_t v15 = v19;
          if ((v20 & 1) == 0) {
            return 0;
          }
        }
        if (v9 == v15 && v10 == v16)
        {
          if (v33 != v32) {
            return 0;
          }
        }
        else
        {
          char v26 = _stringCompareWithSmolCheck(_:_:expecting:)();
          uint64_t result = 0;
          if ((v26 & 1) == 0 || v33 != v32) {
            return result;
          }
        }
      }
      else
      {
        if (v4[6]) {
          return 0;
        }
        uint64_t v29 = v3[5];
        uint64_t v21 = v4[5];
        if (v5 != v11 || v6 != v12)
        {
          uint64_t v28 = v4[5];
          uint64_t v22 = v4[2];
          uint64_t v31 = v3[1];
          char v23 = _stringCompareWithSmolCheck(_:_:expecting:)();
          uint64_t v7 = v31;
          uint64_t v15 = v22;
          uint64_t v21 = v28;
          if ((v23 & 1) == 0) {
            return 0;
          }
        }
        if (v8 != v13 || v7 != v14)
        {
          uint64_t v24 = v15;
          char v25 = _stringCompareWithSmolCheck(_:_:expecting:)();
          uint64_t v15 = v24;
          if ((v25 & 1) == 0) {
            return 0;
          }
        }
        if ((v9 != v15 || v10 != v16) && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0
          || (v33 != v32 || v29 != v21) && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
        {
          return 0;
        }
      }
      v3 += 9;
      v4 += 9;
      --v2;
    }
    while (v2);
  }
  return 1;
}

unint64_t sub_100065608(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  sub_100046B9C(&qword_100162520);
  uint64_t v3 = (void *)static _DictionaryStorage.allocate(capacity:)();
  Swift::UInt v4 = *(void *)(a1 + 32);
  char v5 = *(unsigned char *)(a1 + 40);
  uint64_t v7 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 56);
  unint64_t result = sub_10009F298(v4);
  if (v9)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  uint64_t v10 = (void *)(a1 + 88);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(void *)(v3[6] + 8 * result) = v4;
    uint64_t v11 = v3[7] + 24 * result;
    *(unsigned char *)uint64_t v11 = v5 & 1;
    *(void *)(v11 + 8) = v7;
    *(void *)(v11 + 16) = v6;
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      break;
    }
    v3[2] = v14;
    if (!--v1) {
      goto LABEL_8;
    }
    uint64_t v15 = v10 + 4;
    Swift::UInt v4 = *(v10 - 3);
    char v5 = *((unsigned char *)v10 - 16);
    uint64_t v7 = *(v10 - 1);
    uint64_t v16 = *v10;
    swift_bridgeObjectRetain();
    unint64_t result = sub_10009F298(v4);
    uint64_t v10 = v15;
    uint64_t v6 = v16;
    if (v17) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_10006572C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100065774(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000657BC(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_100065804()
{
  if (!qword_100163700)
  {
    type metadata accessor for PrimarySettingsListModel();
    unint64_t v0 = type metadata accessor for Bindable();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100163700);
    }
  }
}

unint64_t sub_10006585C()
{
  unint64_t result = qword_100160328;
  if (!qword_100160328)
  {
    sub_10004D318(&qword_100160330);
    sub_1000280D4();
    sub_100027A1C();
    sub_100027AC0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160328);
  }
  return result;
}

uint64_t sub_1000658EC@<X0>(uint64_t a1@<X8>)
{
  return sub_1000658F4(v1 + 16, a1);
}

uint64_t sub_1000658F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v6 = *(void *)(a1 + 32);
  uint64_t v7 = *(void **)(a1 + 40);
  char v8 = *(unsigned char *)(a1 + 48);
  *(void *)a2 = *(void *)a1;
  *(void *)(a2 + 8) = v2;
  *(void *)(a2 + 16) = v4;
  *(void *)(a2 + 24) = v5;
  *(void *)(a2 + 32) = v6;
  *(void *)(a2 + 40) = v7;
  *(unsigned char *)(a2 + 48) = v8;
  return sub_10005F260(v3, v2, v4, v5, v6, v7);
}

uint64_t sub_10006591C(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_retain();
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

void sub_10006592C()
{
  if (!qword_10015F480)
  {
    type metadata accessor for SettingsApplicationDelegate();
    unint64_t v0 = type metadata accessor for UIApplicationDelegateAdaptor();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10015F480);
    }
  }
}

unint64_t sub_100065984()
{
  unint64_t result = qword_100164418;
  if (!qword_100164418)
  {
    sub_10004D318((uint64_t *)&unk_100163F70);
    sub_1000373FC((unint64_t *)&unk_100163F80, (void (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100164418);
  }
  return result;
}

unint64_t sub_100065A28()
{
  unint64_t result = qword_1001633C0;
  if (!qword_1001633C0)
  {
    sub_10004D318(&qword_1001633A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001633C0);
  }
  return result;
}

uint64_t sub_100065A84()
{
  return sub_100014078(&qword_100163760, &qword_100163768, (void (*)(void))sub_100065BB8, (void (*)(void))sub_100065E98);
}

unint64_t sub_100065AC0()
{
  unint64_t result = qword_1001645C8;
  if (!qword_1001645C8)
  {
    sub_10004D318(&qword_1001645D0);
    sub_100065C34();
    sub_100065D4C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001645C8);
  }
  return result;
}

unint64_t sub_100065B3C()
{
  unint64_t result = qword_1001644C0;
  if (!qword_1001644C0)
  {
    sub_10004D318(&qword_1001644B8);
    sub_1000087D8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001644C0);
  }
  return result;
}

unint64_t sub_100065BB8()
{
  unint64_t result = qword_100163770;
  if (!qword_100163770)
  {
    sub_10004D318(&qword_100163778);
    sub_10006895C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100163770);
  }
  return result;
}

unint64_t sub_100065C34()
{
  unint64_t result = qword_1001645D8;
  if (!qword_1001645D8)
  {
    sub_10004D318(&qword_1001645E0);
    sub_1000373FC(&qword_1001644D8, (void (*)(uint64_t))&type metadata accessor for SettingsAnyPlatformViewControllerView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001645D8);
  }
  return result;
}

unint64_t sub_100065CE0()
{
  unint64_t result = qword_10015FCF0;
  if (!qword_10015FCF0)
  {
    sub_10004D318(&qword_10015FCE8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015FCF0);
  }
  return result;
}

unint64_t sub_100065D4C()
{
  unint64_t result = qword_1001645E8;
  if (!qword_1001645E8)
  {
    sub_10004D318(&qword_1001645F0);
    sub_1000373FC(&qword_1001645A0, (void (*)(uint64_t))&type metadata accessor for PreferencesControllerView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001645E8);
  }
  return result;
}

unint64_t sub_100065DF8()
{
  unint64_t result = qword_1001600F0;
  if (!qword_1001600F0)
  {
    sub_10004D318(&qword_100160028);
    sub_10004D2D4(&qword_1001600F8, &qword_100160038);
    sub_1000693A0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001600F0);
  }
  return result;
}

uint64_t sub_100065E98()
{
  return sub_100014078(&qword_100163788, &qword_100163790, (void (*)(void))sub_10006895C, (void (*)(void))sub_100068B90);
}

uint64_t sub_100065ED4(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if (a6)
  {
    sub_10006591C(a1, a2, a3 & 1);
    return swift_bridgeObjectRetain();
  }
  else
  {
    return sub_100065F9C(a1, a2, a3);
  }
}

uint64_t sub_100065F38(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if (a6)
  {
    sub_100037590(a1, a2, a3 & 1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    return sub_100065FD8(a1, a2, a3);
  }
}

uint64_t sub_100065F9C(uint64_t a1, uint64_t a2, char a3)
{
  sub_10006591C(a1, a2, a3 & 1);

  return swift_bridgeObjectRetain();
}

uint64_t sub_100065FD8(uint64_t a1, uint64_t a2, char a3)
{
  sub_100037590(a1, a2, a3 & 1);

  return swift_bridgeObjectRelease();
}

unint64_t sub_100066014()
{
  unint64_t result = qword_100164478;
  if (!qword_100164478)
  {
    sub_10004D318(&qword_100164470);
    sub_10004D2D4(&qword_100164480, &qword_100164488);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100164478);
  }
  return result;
}

unint64_t sub_1000660AC()
{
  unint64_t result = qword_100164458;
  if (!qword_100164458)
  {
    sub_10004D318(&qword_100164450);
    sub_10004D2D4(&qword_100164460, &qword_100164468);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100164458);
  }
  return result;
}

unint64_t sub_100066144()
{
  unint64_t result = qword_1001643B8;
  if (!qword_1001643B8)
  {
    sub_10004D318(&qword_1001643A8);
    sub_100009B84();
    sub_10004D2D4(&qword_1001643F0, &qword_1001643F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001643B8);
  }
  return result;
}

unint64_t sub_1000661E4()
{
  unint64_t result = qword_100164430;
  if (!qword_100164430)
  {
    sub_10004D318(&qword_100164350);
    sub_10000F2A8();
    sub_100068268();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100164430);
  }
  return result;
}

unint64_t sub_100066260()
{
  unint64_t result = qword_10015FFD0;
  if (!qword_10015FFD0)
  {
    sub_10004D318(&qword_10015FF98);
    sub_10000AE84();
    sub_10004D2D4(&qword_10015FFF0, &qword_10015FFF8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015FFD0);
  }
  return result;
}

unint64_t sub_100066300()
{
  unint64_t result = qword_100160190;
  if (!qword_100160190)
  {
    sub_10004D318(&qword_10015FFB8);
    sub_10000982C();
    sub_10004D2D4(&qword_1001601A8, &qword_1001601B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160190);
  }
  return result;
}

uint64_t sub_1000663A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100046B9C(&qword_10015FCA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_100066408()
{
  unint64_t result = qword_10015FD20;
  if (!qword_10015FD20)
  {
    sub_10004D318(&qword_10015FCA8);
    sub_10004D2D4(&qword_10015FD28, &qword_10015FCA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015FD20);
  }
  return result;
}

unint64_t sub_1000664A8()
{
  unint64_t result = qword_1001601C0;
  if (!qword_1001601C0)
  {
    sub_10004D318(&qword_1001601B8);
    sub_10001B364();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001601C0);
  }
  return result;
}

uint64_t sub_100066524(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100046B9C(&qword_1001643C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_10006658C()
{
  unint64_t result = qword_1001602E0;
  if (!qword_1001602E0)
  {
    sub_10004D318(&qword_1001602E8);
    sub_10004D2D4(&qword_1001602F0, &qword_1001602F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001602E0);
  }
  return result;
}

unint64_t sub_10006662C()
{
  unint64_t result = qword_100160208;
  if (!qword_100160208)
  {
    sub_10004D318(&qword_100160200);
    sub_100066724();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160208);
  }
  return result;
}

unint64_t sub_1000666A8()
{
  unint64_t result = qword_1001633B8;
  if (!qword_1001633B8)
  {
    sub_10004D318(&qword_1001633A8);
    sub_100065A28();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001633B8);
  }
  return result;
}

unint64_t sub_100066724()
{
  unint64_t result = qword_100160210;
  if (!qword_100160210)
  {
    sub_10004D318(&qword_1001601E8);
    sub_10001B364();
    sub_10001B3C0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160210);
  }
  return result;
}

uint64_t sub_1000667A0(uint64_t a1)
{
  return sub_10001C114(a1, qword_10016B100);
}

uint64_t sub_1000667C4(uint64_t a1)
{
  return sub_10001C114(a1, qword_10016B0E8);
}

uint64_t sub_1000667E8(uint64_t a1)
{
  return sub_10001C114(a1, qword_10016B0D0);
}

uint64_t sub_10006680C(uint64_t a1)
{
  return sub_10001C114(a1, qword_10016B118);
}

uint64_t sub_100066830(uint64_t a1)
{
  return sub_10001C114(a1, qword_10016B130);
}

unint64_t sub_100066854()
{
  unint64_t result = qword_1001617A0;
  if (!qword_1001617A0)
  {
    sub_10004D318(&qword_100161798);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001617A0);
  }
  return result;
}

uint64_t sub_1000668B0(uint64_t a1)
{
  return sub_10001C08C(a1, qword_10016B010);
}

uint64_t sub_1000668DC(uint64_t a1)
{
  return sub_10001C08C(a1, qword_10016B028);
}

uint64_t sub_100066900(uint64_t a1)
{
  return sub_10001C08C(a1, qword_10016AFB0);
}

uint64_t sub_100066924(uint64_t a1)
{
  return sub_10001C08C(a1, qword_10016B040);
}

uint64_t sub_100066948(uint64_t a1)
{
  return sub_10001C08C(a1, qword_10016B058);
}

uint64_t sub_100066970(uint64_t (*a1)(void))
{
  return a1();
}

void sub_100066998()
{
  sub_10006592C();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_100066A3C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100066A58@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for SettingsApp() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_100022B64(v4, a1);
}

uint64_t sub_100066AC8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for PreferencesListControllerNavigationCoordinator()
{
  return self;
}

unint64_t sub_100066B08()
{
  unint64_t result = qword_100163D78;
  if (!qword_100163D78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100163D78);
  }
  return result;
}

unint64_t sub_100066B5C()
{
  unint64_t result = qword_100163D70;
  if (!qword_100163D70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100163D70);
  }
  return result;
}

uint64_t sub_100066BB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_100066B08();

  return static UIViewControllerRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_100066C1C()
{
  return sub_10000790C();
}

void sub_100066C24()
{
  sub_100069208();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t type metadata accessor for PrimaryAppleAccountListSectionProvider()
{
  uint64_t result = qword_100162DC8;
  if (!qword_100162DC8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

id sub_100066D3C()
{
  if (qword_10015F190 != -1) {
    swift_once();
  }
  unint64_t v0 = (void *)qword_10016B0A0;
  qword_10016AF08 = qword_10016B0A0;

  return v0;
}

uint64_t sub_100066DA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FollowUpInformationProviderSnapshot();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100066E04(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_100066E6C()
{
  sub_100006E70();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_100066F24()
{
  return sub_1000121CC(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_100066F2C()
{
}

uint64_t sub_100066F34()
{
  uint64_t result = type metadata accessor for PrimarySettingsListItemIdentifier();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for WalletAndApplePayListItemProvider()
{
  uint64_t result = qword_1001618C8;
  if (!qword_1001618C8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10006703C()
{
  return sub_100011100(*(unsigned char *)(v0 + 16), *(unsigned char *)(v0 + 17), *(unsigned char *)(v0 + 18));
}

uint64_t sub_100067050(char a1, int a2, uint64_t a3)
{
  return sub_10000F5C4(a1, a2, a3, *(unsigned char *)(v3 + 16), *(void *)(v3 + 24));
}

void sub_10006705C()
{
  sub_1000176A0(v0);
}

uint64_t type metadata accessor for RemoteControlSectionModelProvider()
{
  return self;
}

void sub_100067088()
{
}

uint64_t sub_100067090()
{
  return sub_1000134EC(*(void *)(v0 + 16), (void *)(v0 + 24));
}

uint64_t sub_10006709C()
{
  return sub_10000C00C();
}

uint64_t sub_1000670A4()
{
  uint64_t result = type metadata accessor for PrimarySettingsListItemIdentifier();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for ExposureNotificationsItemProvider()
{
  uint64_t result = qword_100162F18;
  if (!qword_100162F18) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10006719C(uint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
}

uint64_t sub_1000671A4()
{
  uint64_t result = type metadata accessor for PrimarySettingsListItemIdentifier();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for PersonalHotspotListItemProvider()
{
  uint64_t result = qword_100162248;
  if (!qword_100162248) {
    return swift_getSingletonMetadata();
  }
  return result;
}

id sub_1000672B4()
{
  if (qword_10015F190 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_10016B0A0;
  qword_10016AEA0 = qword_10016B0A0;

  return v0;
}

uint64_t sub_100067318()
{
  return sub_100014888(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24), *(unsigned char *)(v0 + 25), *(unsigned char *)(v0 + 26));
}

id sub_10006732C()
{
  return sub_10001ABB8();
}

uint64_t sub_100067334()
{
  uint64_t result = type metadata accessor for FollowUpInformationProviderSnapshot();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for FollowUpListElementsGenerator()
{
  uint64_t result = qword_100162918;
  if (!qword_100162918) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100067450()
{
  return sub_10000CF38();
}

char *sub_100067458()
{
  return sub_10000B6B8();
}

uint64_t sub_100067460()
{
  return sub_10000970C();
}

uint64_t sub_100067468()
{
  uint64_t result = type metadata accessor for PrimarySettingsListItemIdentifier();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for CellularDataListItemProvider()
{
  uint64_t result = qword_100161DD8;
  if (!qword_100161DD8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100067568()
{
  return sub_100007200();
}

uint64_t sub_100067570()
{
  uint64_t result = type metadata accessor for PrimarySettingsListItemIdentifier();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for AirplaneModeListItemProvider()
{
  uint64_t result = qword_100161AE0;
  if (!qword_100161AE0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for CellularDataSettingObserver()
{
  return self;
}

uint64_t sub_10006768C()
{
  if (*(unsigned char *)(v0 + 32) != 1) {
    return *(void *)(v0 + 24);
  }
  uint64_t result = sub_10001B47C();
  *(void *)(v0 + 24) = result;
  *(unsigned char *)(v0 + 32) = 0;
  return result;
}

unint64_t sub_1000676C8()
{
  unint64_t result = qword_1001614D0;
  if (!qword_1001614D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001614D0);
  }
  return result;
}

const char *sub_10006771C()
{
  if (*v0) {
    return "SemanticSearch";
  }
  else {
    return "DoItForMe";
  }
}

const char *sub_10006774C()
{
  return "DeviceOSExpert";
}

ValueMetadata *type metadata accessor for SecondaryAppleAccountItem()
{
  return &type metadata for SecondaryAppleAccountItem;
}

uint64_t sub_100067770()
{
  uint64_t result = type metadata accessor for PrimarySettingsListItemIdentifier();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for SatelliteListItemProvider()
{
  uint64_t result = qword_100162368;
  if (!qword_100162368) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100067888(void *a1, uint64_t a2)
{
}

void sub_100067890(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  if (a2 != 1) {
    sub_10003CB34(a1, a2, a3, a4, a5, a6);
  }
}

ValueMetadata *type metadata accessor for PrimaryAppleAccountStatus()
{
  return &type metadata for PrimaryAppleAccountStatus;
}

uint64_t sub_1000678B0()
{
  sub_10003CE28(v0, (uint64_t)v12);
  if (!v12[1]) {
    return Image.init(_internalSystemName:)();
  }
  unint64_t v1 = (void *)v12[5];
  id v2 = objc_allocWithZone((Class)AAAppleAccountInformationCache);
  id v3 = v1;
  id v4 = [v2 init];
  id v5 = [v4 profilePictureCacheURL];

  if (!v5
    || (static String._unconditionallyBridgeFromObjectiveC(_:)(),
        v5,
        id v6 = objc_allocWithZone((Class)UIImage),
        NSString v7 = String._bridgeToObjectiveC()(),
        swift_bridgeObjectRelease(),
        id v8 = [v6 initWithContentsOfFile:v7],
        v7,
        !v8))
  {
    if (v1) {
      return Image.init(uiImage:)();
    }
    return Image.init(_internalSystemName:)();
  }
  uint64_t v9 = Image.init(uiImage:)();

  return v9;
}

uint64_t type metadata accessor for CellularNotificationRelay()
{
  return self;
}

uint64_t sub_100067A30()
{
  uint64_t result = type metadata accessor for PrimarySettingsListItemIdentifier();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for BluetoothListItemProvider()
{
  uint64_t result = qword_100161C20;
  if (!qword_100161C20) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100067B34()
{
  return sub_10000874C();
}

void sub_100067B3C()
{
  sub_10000EA04(v0);
}

uint64_t sub_100067B44()
{
  return sub_100011B8C(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_100067B50()
{
  return sub_100014BB0(v0);
}

uint64_t sub_100067B58()
{
  uint64_t result = type metadata accessor for PrimarySettingsListItemIdentifier();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for EthernetListItemProvider()
{
  uint64_t result = qword_100162150;
  if (!qword_100162150) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100067C50()
{
  return sub_1000118E8(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

id sub_100067C5C()
{
  return sub_100011EB4(v0);
}

uint64_t sub_100067C64()
{
  uint64_t result = type metadata accessor for PrimarySettingsListItemIdentifier();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for ClassKitListItemProvider()
{
  uint64_t result = qword_1001616F8;
  if (!qword_1001616F8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100067D60()
{
  return sub_100006C10();
}

unint64_t sub_100067D7C()
{
  unint64_t result = qword_100164440;
  if (!qword_100164440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100164440);
  }
  return result;
}

uint64_t sub_100067DD0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100067DEC()
{
  return sub_100007964(*(uint64_t (**)(uint64_t))(v0 + 16));
}

uint64_t sub_100067DFC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_100067E5C()
{
  sub_10000779C();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_100067EF4()
{
  uint64_t result = type metadata accessor for PrimarySettingsListItemIdentifier();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for iCloudListItemProvider()
{
  uint64_t result = qword_100162B18;
  if (!qword_100162B18) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100067FDC()
{
  uint64_t result = type metadata accessor for PrimarySettingsListItemIdentifier();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for WiFiListItemProvider()
{
  uint64_t result = qword_1001626E8;
  if (!qword_1001626E8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000680D8()
{
  uint64_t result = type metadata accessor for PrimarySettingsListItemIdentifier();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for VPNListItemProvider()
{
  uint64_t result = qword_1001625A0;
  if (!qword_1001625A0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

id sub_1000681E0()
{
  if (qword_10015F190 != -1) {
    swift_once();
  }
  unint64_t v0 = (void *)qword_10016B0A0;
  qword_10016AEC0 = qword_10016B0A0;

  return v0;
}

unint64_t sub_100068268()
{
  unint64_t result = qword_100164448;
  if (!qword_100164448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100164448);
  }
  return result;
}

uint64_t sub_1000682BC()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for SettingsAppDependencyStoreProxy()
{
  return &type metadata for SettingsAppDependencyStoreProxy;
}

uint64_t sub_1000682E8(uint64_t a1, uint64_t a2)
{
  return sub_1000D67AC(a1, a2, &qword_10015FC90);
}

uint64_t sub_1000682F4(uint64_t a1, uint64_t a2)
{
  return sub_1000D67AC(a1, a2, (uint64_t *)&unk_100164140);
}

unint64_t sub_100068300()
{
  unint64_t result = qword_100163458;
  if (!qword_100163458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100163458);
  }
  return result;
}

unint64_t sub_100068354()
{
  unint64_t result = qword_100163460;
  if (!qword_100163460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100163460);
  }
  return result;
}

uint64_t sub_1000683A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_100068354();

  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_10006840C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_100068354();

  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_100068484()
{
  return UIViewRepresentable.sizeThatFits(_:uiView:context:)();
}

unsigned char *storeEnumTagSinglePayload for SettingsAppSearchViewModel.SearchState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        break;
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for SettingsAppSearchViewModel.SearchState(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

uint64_t sub_100068618(uint64_t a1)
{
  return sub_10000C0C4(a1, "Calling will become active on %{private,mask.hash}@.", (SEL *)&selRef_willBecomeActive);
}

uint64_t sub_10006862C()
{
  return sub_10000C6D4(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void *sub_100068648()
{
  type metadata accessor for SettingsAppDependencyStore();
  uint64_t v0 = swift_allocObject();
  unint64_t result = sub_10000DBD8();
  qword_10016AE00 = v0;
  return result;
}

uint64_t type metadata accessor for SettingsAppSceneDelegate()
{
  uint64_t result = qword_100160800;
  if (!qword_100160800) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_1000686D0()
{
  unint64_t result = qword_100160810;
  if (!qword_100160810)
  {
    type metadata accessor for SettingsAppSceneDelegate();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160810);
  }
  return result;
}

void sub_100068728()
{
}

uint64_t type metadata accessor for SettingsAppLaunchActions()
{
  uint64_t result = qword_10015F5E8;
  if (!qword_10015F5E8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10006878C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000C7E68);
}

uint64_t sub_1000687A4()
{
  return sub_100068880(&qword_100163660, (void (*)(uint64_t))type metadata accessor for SettingsAppDetailContent);
}

void sub_1000687EC()
{
  sub_1000692B8();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_100068880(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000688C8()
{
  uint64_t v0 = type metadata accessor for SettingsAppDetailContent();
  sub_10001C174(v0, qword_10016B0A8);
  uint64_t v1 = sub_1000477B0(v0, (uint64_t)qword_10016B0A8);
  uint64_t v2 = type metadata accessor for PrimarySettingsListItemIdentifier();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  *(void *)(v1 + *(int *)(v0 + 20)) = 0xC000000000000000;
  return result;
}

unint64_t sub_10006895C()
{
  unint64_t result = qword_100163780;
  if (!qword_100163780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100163780);
  }
  return result;
}

unint64_t sub_1000689B0()
{
  unint64_t result = qword_1001644F0;
  if (!qword_1001644F0)
  {
    sub_10004D318(&qword_1001644F8);
    sub_1000373FC(&qword_100164500, (void (*)(uint64_t))type metadata accessor for SettingsApplicationDebugRoot);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001644F0);
  }
  return result;
}

void sub_100068A54()
{
  sub_10000779C();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_100068AE8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SettingsNavigationSplitView();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100068B48()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100068B64@<X0>(uint64_t a1@<X8>)
{
  return sub_10001B90C(a1);
}

uint64_t sub_100068B6C@<X0>(uint64_t a1@<X8>)
{
  return sub_100014100(*(void *)(v1 + 16), a1);
}

uint64_t sub_100068B74@<X0>(uint64_t a1@<X8>)
{
  return sub_100008A28(a1);
}

void sub_100068B7C()
{
}

unint64_t sub_100068B90()
{
  unint64_t result = qword_100163798;
  if (!qword_100163798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100163798);
  }
  return result;
}

uint64_t type metadata accessor for CellularSettings()
{
  return self;
}

id sub_100068C08()
{
  if (qword_10015F190 != -1) {
    swift_once();
  }
  unint64_t v0 = (void *)qword_10016B0A0;
  qword_10016AE60 = qword_10016B0A0;

  return v0;
}

unsigned char *sub_100068C6C()
{
  type metadata accessor for CellularSettings();
  uint64_t v0 = swift_allocObject();
  unint64_t result = sub_10000DF58();
  qword_10016AE68 = v0;
  return result;
}

uint64_t sub_100068CA8()
{
  return PassthroughSubject.send(_:)();
}

void sub_100068CEC(char a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for PrimarySettingsListItemIdentifier() - 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  sub_10001715C(a1, v4, v5);
}

uint64_t sub_100068D60()
{
  return sub_100006E44(&OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel__selectionDelegate);
}

uint64_t sub_100068D80()
{
  return sub_10000B824();
}

uint64_t sub_100068D88()
{
  return sub_100006E44(&OBJC_IVAR____TtC11SettingsApp24PrimarySettingsListModel__updateDelegate);
}

uint64_t sub_100068DA8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100068DC4()
{
  uint64_t result = type metadata accessor for PrimarySettingsListItemModel();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100068E5C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100068E78(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PrimarySettingsList();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_100068EDC()
{
  sub_100065804();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_100068F84()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for PrimarySettingsListFollowUpHeaderModel()
{
  return &type metadata for PrimarySettingsListFollowUpHeaderModel;
}

unint64_t sub_100068FB4()
{
  unint64_t result = qword_10015FA70;
  if (!qword_10015FA70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015FA70);
  }
  return result;
}

unint64_t sub_100069008()
{
  unint64_t result = qword_10015FA78;
  if (!qword_10015FA78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015FA78);
  }
  return result;
}

uint64_t assignWithCopy for PrimarySettingsListAppleAccountLink(uint64_t a1, long long *a2)
{
  uint64_t v4 = *((void *)a2 + 1);
  if (*(void *)(a1 + 8))
  {
    if (v4)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *((void *)a2 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 16) = *((void *)a2 + 2);
      *(void *)(a1 + 24) = *((void *)a2 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
      uint64_t v5 = *(void **)(a1 + 40);
      unsigned int v6 = (void *)*((void *)a2 + 5);
      *(void *)(a1 + 40) = v6;
      id v7 = v6;
    }
    else
    {
      sub_10003F5D0(a1, &qword_10015F758);
      long long v11 = a2[1];
      long long v10 = a2[2];
      *(_OWORD *)a1 = *a2;
      *(_OWORD *)(a1 + 16) = v11;
      *(_OWORD *)(a1 + 32) = v10;
    }
  }
  else if (v4)
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = *((void *)a2 + 1);
    *(void *)(a1 + 16) = *((void *)a2 + 2);
    *(void *)(a1 + 24) = *((void *)a2 + 3);
    *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
    int v8 = (void *)*((void *)a2 + 5);
    *(void *)(a1 + 40) = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v9 = v8;
  }
  else
  {
    long long v12 = *a2;
    long long v13 = a2[2];
    *(_OWORD *)(a1 + 16) = a2[1];
    *(_OWORD *)(a1 + 32) = v13;
    *(_OWORD *)a1 = v12;
  }
  *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
  return a1;
}

uint64_t sub_10006917C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100069198@<X0>(uint64_t a1@<X8>)
{
  return sub_10001251C(*(void **)(v1 + 16), a1);
}

uint64_t sub_1000691A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100046B9C(&qword_100162DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_100069208()
{
  if (!qword_100162DD8)
  {
    type metadata accessor for PrimarySettingsListFamilyLinkModel();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100162DD8);
    }
  }
}

unint64_t sub_100069264()
{
  unint64_t result = qword_100160A88;
  if (!qword_100160A88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160A88);
  }
  return result;
}

void sub_1000692B8()
{
  if (!qword_100163630)
  {
    type metadata accessor for PrimarySettingsListItemIdentifier();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100163630);
    }
  }
}

uint64_t sub_100069310()
{
  return sub_100069358(&qword_10015F8A8, (void (*)(uint64_t))type metadata accessor for PrimarySettingsListItemIdentifier);
}

uint64_t sub_100069358(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000693A0()
{
  unint64_t result = qword_100160100;
  if (!qword_100160100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160100);
  }
  return result;
}

uint64_t sub_1000693F4()
{
  return static View._viewListCount(inputs:)();
}

void sub_100069414()
{
  sub_100006D10();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_1000694C0()
{
  uint64_t result = type metadata accessor for PrimarySettingsListFamilyLinkModel();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1000695A4(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  long long v3 = a1[3];
  _OWORD v7[2] = a1[2];
  void v7[3] = v3;
  long long v4 = a2[1];
  v8[0] = *a2;
  v8[1] = v4;
  long long v5 = a2[3];
  _OWORD v8[2] = a2[2];
  v8[3] = v5;
  return sub_10003CEF8((uint64_t)v7, (uint64_t)v8) & 1;
}

uint64_t sub_1000695F0()
{
  uint64_t result = type metadata accessor for PrimarySettingsListFamilyLinkModel();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10006967C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100069698()
{
  return sub_100069810((unint64_t *)&qword_10015F8B0, (void (*)(uint64_t))type metadata accessor for PrimarySettingsListItemIdentifier);
}

uint64_t sub_1000696E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100046B9C((uint64_t *)&unk_100163AD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100069748()
{
  uint64_t result = type metadata accessor for PrimarySettingsListItemIdentifier();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for PrimarySettingsListItemViewType();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_100069810(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100069858()
{
  uint64_t result = type metadata accessor for PrimarySettingsListSectionModel();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1000698F0()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_10006990C()
{
  unint64_t result = qword_100160140;
  if (!qword_100160140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160140);
  }
  return result;
}

uint64_t sub_100069960()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_10006997C(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 73);
}

uint64_t sub_100069988()
{
  return sub_100069A00();
}

id sub_100069990@<X0>(uint64_t a1@<X8>)
{
  return sub_100069998(*(void *)(v1 + 16), a1);
}

id sub_100069998@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  long long v3 = *(void **)a1;
  uint64_t v4 = *(void *)(a1 + 8);
  char v5 = *(unsigned char *)(a1 + 16);
  *(void *)a2 = swift_getKeyPath();
  *(unsigned char *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = v3;
  *(void *)(a2 + 24) = v4;
  *(unsigned char *)(a2 + 32) = v5;

  return sub_100047728(v3, v4, v5);
}

uint64_t sub_100069A00()
{
  return Label.init(title:icon:)();
}

uint64_t sub_100069A88()
{
  uint64_t result = type metadata accessor for PrimarySettingsListItemIdentifier();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for GeneralSettingsListItemProvider()
{
  uint64_t result = qword_100162880;
  if (!qword_100162880) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100069B80()
{
  return sub_100010E60(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_100069B8C()
{
  return sub_10000FAA4(v0);
}

uint64_t sub_100069B94()
{
  uint64_t result = type metadata accessor for PrimarySettingsListItemIdentifier();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for ComposablePrimarySettingsListSectionProvider()
{
  return self;
}

uint64_t sub_100069C80()
{
  uint64_t result = type metadata accessor for PrimarySettingsListItemIdentifier();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_100069D10(unsigned __int8 *a1, char *a2)
{
  return sub_100072D48(*a1, *a2);
}

Swift::Int sub_100069D1C()
{
  return Hasher._finalize()();
}

uint64_t sub_100069DF4()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100069EB4()
{
  return Hasher._finalize()();
}

unint64_t sub_100069F88@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_10006A8D8(*a1);
  *a2 = result;
  return result;
}

void sub_100069FB8(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE900000000000068;
  uint64_t v3 = 0x746F6F7465756C62;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE400000000000000;
      uint64_t v3 = 1768319351;
      goto LABEL_3;
    case 2:
      *a1 = 0x72616C756C6C6563;
      a1[1] = 0xE800000000000000;
      break;
    case 3:
      *a1 = 0x79726574746162;
      a1[1] = 0xE700000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t variable initialization expression of RestrictionsManager.isInEDUMode()
{
  return PSIsInEDUMode();
}

uint64_t variable initialization expression of RestrictionsManager._blockedAppBundleIDs()
{
  return 0;
}

void type metadata accessor for NEVPNConnectivityState(uint64_t a1)
{
}

void type metadata accessor for NEVPNSettingsVisibilityStyle(uint64_t a1)
{
}

void type metadata accessor for CTSubscriptionSlot(uint64_t a1)
{
}

uint64_t getEnumTagSinglePayload for SettingsAppQuickAction(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for SettingsAppQuickAction(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10006A20CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

uint64_t sub_10006A234(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_10006A23C(unsigned char *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

unint64_t sub_10006A248()
{
  unint64_t result = qword_10015F278;
  if (!qword_10015F278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015F278);
  }
  return result;
}

uint64_t sub_10006A29C()
{
  return sub_1000652A4(&qword_10015F280, type metadata accessor for CTSubscriptionSlot);
}

uint64_t sub_10006A2E4(uint64_t a1, uint64_t a2)
{
  return sub_10006A740(a1, a2, (uint64_t (*)(uint64_t))&String.hashValue.getter);
}

uint64_t sub_10006A310(uint64_t a1, uint64_t a2)
{
  return sub_10006A740(a1, a2, (uint64_t (*)(uint64_t))&String._bridgeToObjectiveC());
}

uint64_t sub_10006A328(uint64_t a1, id *a2)
{
  uint64_t result = static String._forceBridgeFromObjectiveC(_:result:)();
  *a2 = 0;
  return result;
}

uint64_t sub_10006A3A0(uint64_t a1, id *a2)
{
  char v3 = static String._conditionallyBridgeFromObjectiveC(_:result:)();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_10006A420@<X0>(void *a1@<X8>)
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v2 = String._bridgeToObjectiveC()();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

BOOL sub_10006A464(void *a1, void *a2)
{
  return *a1 == *a2;
}

Swift::Int sub_10006A478()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_10006A4C0()
{
  Hasher._combine(_:)(*v0);
}

Swift::Int sub_10006A4EC()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void *sub_10006A530@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

void sub_10006A544(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_10006A554(uint64_t a1)
{
  uint64_t v2 = sub_1000652A4((unint64_t *)&qword_10015F330, type metadata accessor for LaunchOptionsKey);
  uint64_t v3 = sub_1000652A4(&qword_10015F338, type metadata accessor for LaunchOptionsKey);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_10006A610@<X0>(void *a1@<X8>)
{
  NSString v2 = String._bridgeToObjectiveC()();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_10006A658@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_10006A684(uint64_t a1)
{
  uint64_t v2 = sub_1000652A4(&qword_10015F340, type metadata accessor for FileProtectionType);
  uint64_t v3 = sub_1000652A4(&qword_10015F348, type metadata accessor for FileProtectionType);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_10006A740(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_10006A784()
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10006A7D8()
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  Hasher.init(_seed:)();
  String.hash(into:)();
  Swift::Int v0 = Hasher._finalize()();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_10006A84C()
{
  uint64_t v0 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v2 = v1;
  if (v0 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

unint64_t sub_10006A8D8(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1001503F8, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 4) {
    return 4;
  }
  else {
    return v3;
  }
}

void type metadata accessor for LaunchOptionsKey(uint64_t a1)
{
}

void type metadata accessor for FileProtectionType(uint64_t a1)
{
}

void sub_10006A94C(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t sub_10006A994()
{
  return sub_1000652A4(&qword_10015F300, type metadata accessor for FileProtectionType);
}

uint64_t sub_10006A9DC()
{
  return sub_1000652A4(&qword_10015F308, type metadata accessor for FileProtectionType);
}

uint64_t sub_10006AA24()
{
  return sub_1000652A4(&qword_10015F310, type metadata accessor for FileProtectionType);
}

uint64_t sub_10006AA6C()
{
  return sub_1000652A4(&qword_10015F318, type metadata accessor for LaunchOptionsKey);
}

uint64_t sub_10006AAB4()
{
  return sub_1000652A4(&qword_10015F320, type metadata accessor for LaunchOptionsKey);
}

uint64_t sub_10006AAFC()
{
  return sub_1000652A4(&qword_10015F328, type metadata accessor for LaunchOptionsKey);
}

void sub_10006AB58()
{
  id v0 = [self mainBundle];
  v9._object = (void *)0x8000000100122CF0;
  v1._uint64_t countAndFlagsBits = 0x746F6F7465756C42;
  v1._object = (void *)0xE900000000000068;
  v2._uint64_t countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v9._uint64_t countAndFlagsBits = 0xD000000000000014;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v9);

  if (qword_10015F020 != -1) {
    swift_once();
  }
  unint64_t v3 = (void *)qword_10016ADE0;
  id v4 = objc_allocWithZone((Class)UIApplicationShortcutItem);
  id v5 = v3;
  NSString v6 = String._bridgeToObjectiveC()();
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v8 = [v4 initWithType:v6 localizedTitle:v7 localizedSubtitle:0 icon:v5 userInfo:0];

  qword_10016ADC0 = (uint64_t)v8;
}

void sub_10006ACD0()
{
  id v0 = (id)MobileGestalt_get_current_device();
  if (v0)
  {
    Swift::String v1 = v0;
    int wapiCapability = MobileGestalt_get_wapiCapability();

    id v3 = [self mainBundle];
    unint64_t v14 = 0x8000000100122CF0;
    if (wapiCapability)
    {
      uint64_t v4 = 1312902231;
      unint64_t v5 = 0xE400000000000000;
    }
    else
    {
      uint64_t v4 = 0x69462D6957;
      unint64_t v5 = 0xE500000000000000;
    }
    v6._uint64_t countAndFlagsBits = 0;
    v6._object = (void *)0xE000000000000000;
    unint64_t v7 = 0xD000000000000014;
    NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v4, (Swift::String_optional)0, (NSBundle)v3, v6, *(Swift::String *)(&v14 - 1));

    if (qword_10015F028 != -1) {
      swift_once();
    }
    id v8 = (void *)qword_10016ADE8;
    id v9 = objc_allocWithZone((Class)UIApplicationShortcutItem);
    id v10 = v8;
    NSString v11 = String._bridgeToObjectiveC()();
    NSString v12 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v13 = [v9 initWithType:v11 localizedTitle:v12 localizedSubtitle:0 icon:v10 userInfo:0];

    qword_10016ADC8 = (uint64_t)v13;
  }
  else
  {
    __break(1u);
  }
}

void sub_10006AE6C()
{
  id v0 = [self mainBundle];
  v9._object = (void *)0x8000000100122CF0;
  v1._uint64_t countAndFlagsBits = 0x72616C756C6C6543;
  v1._object = (void *)0xE800000000000000;
  v2._uint64_t countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v9._uint64_t countAndFlagsBits = 0xD000000000000014;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v9);

  if (qword_10015F030 != -1) {
    swift_once();
  }
  id v3 = (void *)qword_10016ADF0;
  id v4 = objc_allocWithZone((Class)UIApplicationShortcutItem);
  id v5 = v3;
  NSString v6 = String._bridgeToObjectiveC()();
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v8 = [v4 initWithType:v6 localizedTitle:v7 localizedSubtitle:0 icon:v5 userInfo:0];

  qword_10016ADD0 = (uint64_t)v8;
}

void sub_10006AFDC()
{
  id v0 = [self mainBundle];
  v9._object = (void *)0x8000000100122CF0;
  v1._uint64_t countAndFlagsBits = 0x79726574746142;
  v1._object = (void *)0xE700000000000000;
  v2._uint64_t countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v9._uint64_t countAndFlagsBits = 0xD000000000000014;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v9);

  if (qword_10015F038 != -1) {
    swift_once();
  }
  id v3 = (void *)qword_10016ADF8;
  id v4 = objc_allocWithZone((Class)UIApplicationShortcutItem);
  id v5 = v3;
  NSString v6 = String._bridgeToObjectiveC()();
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v8 = [v4 initWithType:v6 localizedTitle:v7 localizedSubtitle:0 icon:v5 userInfo:0];

  qword_10016ADD8 = (uint64_t)v8;
}

void sub_10006B14C()
{
  id v0 = objc_allocWithZone((Class)SBSApplicationShortcutSystemPrivateIcon);
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [v0 initWithSystemImageName:v1];

  id v3 = [objc_allocWithZone((Class)UIApplicationShortcutIcon) initWithSBSApplicationShortcutIcon:v2];
  qword_10016ADE0 = (uint64_t)v3;
}

void sub_10006B1E0(uint64_t a1)
{
}

void sub_10006B1F8(uint64_t a1)
{
}

void sub_10006B21C(uint64_t a1)
{
}

void sub_10006B244(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  NSString v5 = String._bridgeToObjectiveC()();
  id v6 = [self iconWithSystemImageName:v5];

  *a4 = v6;
}

uint64_t sub_10006B2AC(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_100046B9C((uint64_t *)&unk_100163C10);
  __chkstk_darwin(v4 - 8);
  id v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for URL();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  id v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = [a1 userInfo];
  if (!v11)
  {
    long long v25 = 0u;
    long long v26 = 0u;
LABEL_11:
    char v18 = &qword_1001609A0;
    uint64_t v19 = (char *)&v25;
    return sub_10003F5D0((uint64_t)v19, v18);
  }
  NSString v12 = v11;
  uint64_t v13 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  v23[1] = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v23[2] = v14;
  AnyHashable.init<A>(_:)();
  if (*(void *)(v13 + 16) && (unint64_t v15 = sub_1000619E0((uint64_t)v24), (v16 & 1) != 0))
  {
    sub_100061984(*(void *)(v13 + 56) + 32 * v15, (uint64_t)&v25);
  }
  else
  {
    long long v25 = 0u;
    long long v26 = 0u;
  }
  sub_100061AEC((uint64_t)v24);
  swift_bridgeObjectRelease();
  if (!*((void *)&v26 + 1)) {
    goto LABEL_11;
  }
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0) {
    return result;
  }
  URL.init(string:)();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    char v20 = (uint64_t *)(a2 + *(int *)(type metadata accessor for SettingsApp() + 32));
    uint64_t v22 = *v20;
    uint64_t v21 = v20[1];
    v24[0] = v22;
    v24[1] = v21;
    sub_100046B9C(&qword_10015F580);
    State.wrappedValue.getter();
    sub_10006C16C((uint64_t)v10);
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  char v18 = (uint64_t *)&unk_100163C10;
  uint64_t v19 = v6;
  return sub_10003F5D0((uint64_t)v19, v18);
}

uint64_t ScenePhase.description.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for ScenePhase();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
  int v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == enum case for ScenePhase.background(_:)) {
    return 0x756F72676B636162;
  }
  if (v6 == enum case for ScenePhase.inactive(_:)) {
    return 0x6576697463616E69;
  }
  if (v6 == enum case for ScenePhase.active(_:)) {
    return 0x657669746361;
  }
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return 0x6E776F6E6B6E75;
}

uint64_t *sub_10006B708(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v24 = *a2;
    *a1 = *a2;
    uint64_t v4 = (uint64_t *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = sub_100046B9C(&qword_10015F410);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(v4, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    id v10 = (uint64_t *)((char *)v4 + v8);
    id v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *id v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = (uint64_t *)((char *)v4 + v9);
    uint64_t v14 = (uint64_t *)((char *)a2 + v9);
    uint64_t v15 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v15;
    uint64_t v16 = a3[7];
    uint64_t v17 = a3[8];
    char v18 = (uint64_t *)((char *)v4 + v16);
    uint64_t v19 = (uint64_t *)((char *)a2 + v16);
    uint64_t v20 = v19[1];
    *char v18 = *v19;
    v18[1] = v20;
    uint64_t v21 = (uint64_t *)((char *)v4 + v17);
    uint64_t v22 = (uint64_t *)((char *)a2 + v17);
    uint64_t v23 = v22[1];
    void *v21 = *v22;
    v21[1] = v23;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_10006B85C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100046B9C(&qword_10015F410);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  swift_retain();
  swift_release();
  *(void *)(v8 + 8) = *(void *)(v9 + 8);
  swift_retain();
  swift_release();
  uint64_t v10 = a3[6];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  *(void *)(a1 + v10) = *(void *)(a2 + v10);
  swift_retain();
  swift_release();
  *(void *)(v11 + 8) = *(void *)(v12 + 8);
  swift_retain();
  swift_release();
  uint64_t v13 = a3[7];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  *(void *)(a1 + v13) = *(void *)(a2 + v13);
  swift_retain();
  swift_release();
  *(void *)(v14 + 8) = *(void *)(v15 + 8);
  swift_retain();
  swift_release();
  uint64_t v16 = a3[8];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  *(void *)(a1 + v16) = *(void *)(a2 + v16);
  swift_retain();
  swift_release();
  *(void *)(v17 + 8) = *(void *)(v18 + 8);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_10006B9C8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100046B9C(&qword_10015F410);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  return a1;
}

uint64_t sub_10006BA64(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100046B9C(&qword_10015F410);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  swift_release();
  *(void *)(v8 + 8) = *(void *)(v9 + 8);
  swift_release();
  uint64_t v10 = a3[6];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  *(void *)(a1 + v10) = *(void *)(a2 + v10);
  swift_release();
  *(void *)(v11 + 8) = *(void *)(v12 + 8);
  swift_release();
  uint64_t v13 = a3[7];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  *(void *)(a1 + v13) = *(void *)(a2 + v13);
  swift_release();
  *(void *)(v14 + 8) = *(void *)(v15 + 8);
  swift_release();
  uint64_t v16 = a3[8];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = (void *)(a2 + v16);
  *(void *)(a1 + v16) = *v18;
  swift_release();
  *(void *)(v17 + 8) = v18[1];
  swift_release();
  return a1;
}

uint64_t sub_10006BB90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10006BBA4);
}

uint64_t sub_10006BBA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100046B9C(&qword_10015F410);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_10006BC68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10006BC7C);
}

uint64_t sub_10006BC7C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_100046B9C(&qword_10015F410);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_10006BD3C()
{
  return sub_100099B30(v0);
}

uint64_t sub_10006BD44(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t sub_10006BD54()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10006BD8C()
{
  return sub_100099E88();
}

uint64_t sub_10006BD94()
{
  return sub_100099EE0();
}

uint64_t sub_10006BDA0()
{
  return EnvironmentValues.withCurrentHostingController.getter();
}

uint64_t sub_10006BDCC()
{
  uint64_t v1 = *(void *)(type metadata accessor for SettingsApp() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_100046B9C(&qword_10015F410);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_10006BF14(void *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for SettingsApp() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_10006B2AC(a1, v4);
}

uint64_t sub_10006BF84()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10006C058()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC11SettingsApp24SettingsAppLaunchActions___observationRegistrar;
  uint64_t v2 = type metadata accessor for ObservationRegistrar();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_10006C0F8()
{
  return type metadata accessor for SettingsAppLaunchActions();
}

id sub_10006C100(uint64_t a1)
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  swift_retain();
  uint64_t v2 = swift_unknownObjectRetain();
  uint64_t v3 = (void *)v1(v2);
  swift_release();
  swift_unknownObjectRelease();

  return v3;
}

uint64_t sub_10006C16C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100046B9C((uint64_t *)&unk_100161530);
  __chkstk_darwin(v4 - 8);
  uint64_t v145 = (uint64_t)&v140 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v144 = type metadata accessor for PrimarySettingsListItemIdentifier();
  uint64_t v143 = *(void *)(v144 - 8);
  __chkstk_darwin(v144);
  uint64_t v142 = (uint64_t)&v140 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v148 = type metadata accessor for URLQueryItem();
  uint64_t v147 = *(void *)(v148 - 8);
  __chkstk_darwin(v148);
  uint64_t v146 = (char *)&v140 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v152 = type metadata accessor for SettingsURLDestination.Action(0);
  __chkstk_darwin(v152);
  uint64_t v154 = (uint64_t *)((char *)&v140 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v151 = type metadata accessor for SettingsURLDestination(0);
  __chkstk_darwin(v151);
  unint64_t v10 = (char *)&v140 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for SettingsURLRoute();
  __chkstk_darwin(v11 - 8);
  uint64_t v156 = (char *)&v140 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for URL();
  uint64_t v166 = *(void *)(v13 - 8);
  uint64_t v167 = v13;
  uint64_t v14 = __chkstk_darwin(v13);
  char v159 = (char *)&v140 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v149 = (char *)&v140 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v150 = (char *)&v140 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v153 = (char *)&v140 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v24 = (char *)&v140 - v23;
  uint64_t v25 = __chkstk_darwin(v22);
  uint64_t v157 = (char *)&v140 - v26;
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v29 = (char *)&v140 - v28;
  __chkstk_darwin(v27);
  uint64_t v31 = (char *)&v140 - v30;
  if (qword_10015F158 != -1) {
    swift_once();
  }
  uint64_t v32 = type metadata accessor for Logger();
  uint64_t v33 = sub_1000477B0(v32, (uint64_t)qword_10016AFF8);
  uint64_t v162 = *(void (**)(char *, uint64_t, uint64_t))(v166 + 16);
  uint64_t v163 = v166 + 16;
  v162(v31, a1, v167);
  swift_retain_n();
  uint64_t v164 = v33;
  uint64_t v34 = Logger.logObject.getter();
  os_log_type_t v35 = static os_log_type_t.default.getter();
  BOOL v36 = os_log_type_enabled(v34, v35);
  uint64_t v160 = a1;
  uint64_t v161 = v2;
  uint64_t v168 = v29;
  long long v155 = v10;
  uint64_t v158 = v24;
  if (v36)
  {
    uint64_t v37 = swift_slowAlloc();
    v173[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v37 = 136315907;
    uint64_t v38 = _typeName(_:qualified:)();
    uint64_t v171 = sub_100042948(v38, v39, v173);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v40 = v166;
    uint64_t v41 = v167;
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v37 + 12) = 2080;
    uint64_t v171 = sub_100042948(0x5255656C646E6168, 0xED0000293A5F284CLL, v173);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v37 + 22) = 2160;
    uint64_t v171 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v37 + 32) = 2081;
    uint64_t v42 = URL.absoluteString.getter();
    uint64_t v171 = sub_100042948(v42, v43, v173);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    char v165 = *(void (**)(char *, uint64_t))(v40 + 8);
    v165(v31, v41);
    _os_log_impl((void *)&_mh_execute_header, v34, v35, "Start (%s.%s) url: '%{private,mask.hash}s'…", (uint8_t *)v37, 0x2Au);
    swift_arrayDestroy();
    a1 = v160;
    swift_slowDealloc();
    uint64_t v24 = v158;
    uint64_t v29 = v168;
    swift_slowDealloc();
  }
  else
  {
    swift_release_n();
    char v165 = *(void (**)(char *, uint64_t))(v166 + 8);
    v165(v31, v167);
  }

  sub_1000FC214((uint64_t)v29);
  id v44 = v157;
  uint64_t v45 = a1;
  uint64_t v46 = v167;
  unint64_t v47 = (void (*)(char *, char *, uint64_t))v162;
  v162(v157, v45, v167);
  v47(v24, v29, v46);
  uint64_t v48 = Logger.logObject.getter();
  os_log_type_t v49 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v48, v49))
  {
    uint64_t v50 = swift_slowAlloc();
    uint64_t v141 = swift_slowAlloc();
    v173[0] = v141;
    *(_DWORD *)uint64_t v50 = 141558787;
    uint64_t v171 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v50 + 12) = 2081;
    uint64_t v51 = URL.absoluteString.getter();
    uint64_t v171 = sub_100042948(v51, v52, v173);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v53 = v167;
    uint64_t v54 = v165;
    v165(v44, v167);
    *(_WORD *)(v50 + 22) = 2160;
    uint64_t v171 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v50 + 32) = 2081;
    uint64_t v55 = v158;
    uint64_t v56 = URL.absoluteString.getter();
    uint64_t v171 = sub_100042948(v56, v57, v173);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    v54(v55, v53);
    _os_log_impl((void *)&_mh_execute_header, v48, v49, "Transformed URL: from '%{private,mask.hash}s' to '%{private,mask.hash}s'", (uint8_t *)v50, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v58 = v167;
    uint64_t v59 = v165;
    v165(v44, v167);
    v59(v24, v58);
  }

  uint64_t v60 = v161;
  uint64_t v61 = v159;
  uint64_t v62 = *(void *)(v161 + 16);
  uint64_t v63 = qword_10015F048;
  swift_retain();
  if (v63 != -1) {
    swift_once();
  }
  TaskLocal.get()();
  uint64_t v64 = sub_1000D68E0(v62, v173[0]);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v65 = *(void *)(v64 + 16);
  if (v65)
  {
    swift_bridgeObjectRetain();
    uint64_t v66 = (void *)(v64 + 40);
    while (1)
    {
      uint64_t v67 = *(v66 - 1);
      uint64_t v68 = *v66;
      if ((*(uint64_t (**)(char *, uint64_t, void))(*v66 + 8))(v168, v67, *v66)) {
        break;
      }
      v66 += 2;
      if (!--v65)
      {
        swift_bridgeObjectRelease();
        goto LABEL_16;
      }
    }
    swift_bridgeObjectRelease_n();
    uint64_t v78 = *(void *)(v60 + 32);
    sub_100036FFC();
    uint64_t v79 = sub_1000370AC();
    uint64_t v81 = v80;
    uint64_t v83 = v82;
    swift_release();
    long long v84 = v156;
    uint64_t v69 = v168;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v68 + 16))(v168, v79, v81, v83, v67, v68);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v85 = sub_100046B9C(&qword_10015F750);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v85 - 8) + 48))(v84, 1, v85) == 1)
    {
      unint64_t v86 = v153;
      v162(v153, (uint64_t)v69, v167);
      unint64_t v87 = Logger.logObject.getter();
      os_log_type_t v88 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v87, v88))
      {
        uint64_t v89 = swift_slowAlloc();
        v173[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v89 = 136446466;
        swift_getMetatypeMetadata();
        uint64_t v90 = _typeName(_:qualified:)();
        uint64_t v171 = sub_100042948(v90, v91, v173);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v89 + 12) = 2082;
        uint64_t v92 = URL.absoluteString.getter();
        uint64_t v171 = sub_100042948(v92, v93, v173);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        uint64_t v75 = (uint64_t (*)(char *, uint64_t))v165;
        v165(v86, v167);
        _os_log_impl((void *)&_mh_execute_header, v87, v88, "Route provider %{public}s discarded url '%{public}s'.", (uint8_t *)v89, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        uint64_t v75 = (uint64_t (*)(char *, uint64_t))v165;
        v165(v86, v167);
      }

      uint64_t v76 = v160;
      uint64_t v60 = v161;
    }
    else
    {
      uint64_t v94 = (uint64_t)v84;
      uint64_t v95 = (uint64_t)v155;
      sub_10004EF98(v94, (uint64_t)v155, type metadata accessor for SettingsURLDestination);
      uint64_t v96 = v151;
      id v97 = v154;
      sub_10006D914(v95 + *(int *)(v151 + 20), (uint64_t)v154);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v60 = v161;
      switch(EnumCaseMultiPayload)
      {
        case 1:
          sub_1000D46AC(v95);
          sub_10003DF00(v95, type metadata accessor for SettingsURLDestination);
          uint64_t v100 = (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier;
          uint64_t v101 = (uint64_t)v97;
          goto LABEL_47;
        case 2:
          uint64_t v102 = v167;
          uint64_t v103 = v150;
          (*(void (**)(char *, uint64_t *, uint64_t))(v166 + 32))(v150, v97, v167);
          uint64_t v104 = *(void *)(v60 + 24);
          swift_retain();
          TaskLocal.get()();
          sub_1000682F4(v104, v173[0]);
          swift_release();
          swift_bridgeObjectRelease();
          PassthroughSubject.send(_:)();
          swift_release();
          goto LABEL_31;
        case 3:
          uint64_t v102 = v167;
          uint64_t v103 = v150;
          (*(void (**)(char *, uint64_t *, uint64_t))(v166 + 32))(v150, v97, v167);
          id v105 = [self defaultCenter];
          uint64_t isa = (uint64_t)SSScriptSafariViewControllerDataUpdateNotification.super.isa;
          URL._bridgeToObjectiveC()(&SSScriptSafariViewControllerDataUpdateNotification);
          uint64_t v108 = v107;
          [v105 postNotificationName:isa object:v107];

LABEL_31:
          uint64_t v109 = v103;
          uint64_t v110 = v102;
          goto LABEL_34;
        case 4:
          uint64_t v111 = v149;
          (*(void (**)(char *, uint64_t *, uint64_t))(v166 + 32))(v149, v97, v167);
          id v112 = [self sharedInstance];
          if (!v112)
          {
            __break(1u);
            JUMPOUT(0x10006D4E0);
          }
          unint64_t v114 = v112;
          URL._bridgeToObjectiveC()(v113);
          uint64_t v116 = v115;
          [v114 handleOAuthRedirectURL:v115];

          uint64_t v110 = v167;
          uint64_t v109 = v111;
LABEL_34:
          uint64_t v75 = (uint64_t (*)(char *, uint64_t))v165;
          v165(v109, v110);
          sub_10003DF00(v95, type metadata accessor for SettingsURLDestination);
          uint64_t v76 = v160;
          uint64_t v69 = v168;
          goto LABEL_20;
        case 5:
          sub_1000D6558(*v97, v97[1], v97[2], v97[3]);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_46;
        case 6:
          sub_1000D44DC();
          uint64_t v117 = *(void *)(v95 + *(int *)(v96 + 24));
          if (!*(void *)(v117 + 16)) {
            goto LABEL_46;
          }
          uint64_t v118 = v147;
          uint64_t v119 = v146;
          uint64_t v120 = v148;
          (*(void (**)(char *, unint64_t, uint64_t))(v147 + 16))(v146, v117 + ((*(unsigned __int8 *)(v118 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v118 + 80)), v148);
          uint64_t v121 = URLQueryItem.value.getter();
          uint64_t v123 = v122;
          (*(void (**)(char *, uint64_t))(v118 + 8))(v119, v120);
          if (!v123) {
            goto LABEL_46;
          }
          v173[0] = v121;
          v173[1] = v123;
          uint64_t v171 = 35;
          unint64_t v172 = 0xE100000000000000;
          uint64_t v169 = 0;
          unint64_t v170 = 0xE000000000000000;
          sub_100030C58();
          uint64_t v124 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
          uint64_t v126 = v125;
          uint64_t v127 = 45;
          uint64_t v128 = v124;
          unint64_t v129 = &byte_100151170;
          break;
        default:
          char v99 = *(unsigned char *)v97;
          sub_100036FFC();
          sub_1000C9150(v99);
          swift_release();
          goto LABEL_46;
      }
      while (1)
      {
        char v131 = *v129++;
        char v130 = v131;
        sub_10010177C(v131);
        v132._uint64_t countAndFlagsBits = v128;
        v132._object = v126;
        Swift::Bool v133 = String.hasSuffix(_:)(v132);
        swift_bridgeObjectRelease();
        if (v133) {
          break;
        }
        if (!--v127)
        {
          swift_bridgeObjectRelease();
          uint64_t v134 = v143;
          uint64_t v135 = v145;
          uint64_t v136 = v144;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v143 + 56))(v145, 1, 1, v144);
          goto LABEL_43;
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v135 = v145;
      sub_1001011A8(v130, v145);
      uint64_t v136 = v144;
      uint64_t v134 = v143;
LABEL_43:
      swift_bridgeObjectRelease();
      int v137 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v134 + 48))(v135, 1, v136);
      uint64_t v60 = v161;
      if (v137 == 1)
      {
        sub_10003DF00(v95, type metadata accessor for SettingsURLDestination);
        sub_10006D978(v135);
      }
      else
      {
        uint64_t v138 = v142;
        sub_10004EF98(v135, v142, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
        uint64_t v139 = *(void *)(v78
                         + OBJC_IVAR____TtC11SettingsApp26SettingsAppNavigationModel__primarySettingsListScrollToItemSubject);
        swift_retain();
        TaskLocal.get()();
        sub_100037700(v139, v173[0]);
        swift_release();
        swift_bridgeObjectRelease();
        PassthroughSubject.send(_:)();
        swift_release();
        sub_10003DF00(v138, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
LABEL_46:
        uint64_t v100 = type metadata accessor for SettingsURLDestination;
        uint64_t v101 = v95;
LABEL_47:
        sub_10003DF00(v101, v100);
      }
      uint64_t v76 = v160;
      uint64_t v69 = v168;
      uint64_t v75 = (uint64_t (*)(char *, uint64_t))v165;
    }
  }
  else
  {
LABEL_16:
    swift_bridgeObjectRelease();
    uint64_t v69 = v168;
    v162(v61, (uint64_t)v168, v167);
    uint64_t v70 = Logger.logObject.getter();
    os_log_type_t v71 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v70, v71))
    {
      uint64_t v72 = (uint8_t *)swift_slowAlloc();
      v173[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v72 = 136446210;
      uint64_t v73 = URL.absoluteString.getter();
      uint64_t v171 = sub_100042948(v73, v74, v173);
      uint64_t v60 = v161;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v75 = (uint64_t (*)(char *, uint64_t))v165;
      v165(v61, v167);
      _os_log_impl((void *)&_mh_execute_header, v70, v71, "No route provider found for url '%{public}s'", v72, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      uint64_t v75 = (uint64_t (*)(char *, uint64_t))v165;
      v165(v61, v167);
    }

    uint64_t v76 = v160;
  }
LABEL_20:
  sub_10006D4FC(v60, v76);
  return v75(v69, v167);
}

void sub_10006D4FC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10015F158 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  sub_1000477B0(v7, (uint64_t)qword_10016AFF8);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a2, v3);
  swift_retain_n();
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    uint64_t v18 = v16;
    *(_DWORD *)uint64_t v10 = 136315907;
    uint64_t v11 = _typeName(_:qualified:)();
    uint64_t v17 = sub_100042948(v11, v12, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2080;
    uint64_t v17 = sub_100042948(0x5255656C646E6168, 0xED0000293A5F284CLL, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v10 + 22) = 2160;
    uint64_t v17 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v10 + 32) = 2081;
    uint64_t v13 = URL.absoluteString.getter();
    uint64_t v17 = sub_100042948(v13, v14, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "…Complete (%s.%s) url: '%{private,mask.hash}s'", (uint8_t *)v10, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_release_n();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
}

uint64_t sub_10006D854()
{
  swift_release();
  swift_release();
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC11SettingsApp16SettingsAppModel___observationRegistrar;
  uint64_t v2 = type metadata accessor for ObservationRegistrar();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_10006D90C()
{
  return type metadata accessor for SettingsAppModel();
}

uint64_t sub_10006D914(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SettingsURLDestination.Action(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10006D978(uint64_t a1)
{
  uint64_t v2 = sub_100046B9C((uint64_t *)&unk_100161530);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10006D9D8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1;
  sub_10003CE28(a1, (uint64_t)v5);
  LODWORD(v3) = *(unsigned __int8 *)(v3 + 48);
  sub_10003CE28(a2, (uint64_t)v6);
  LODWORD(a2) = *(unsigned __int8 *)(a2 + 48);
  return sub_10003CBE0((uint64_t)v5, (uint64_t)v6) & ~(v3 ^ a2) & 1;
}

uint64_t initializeBufferWithCopyOfBuffer for Icon(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t assignWithCopy for PrimarySettingsListAppleAccountLinkModel(uint64_t a1, long long *a2)
{
  uint64_t v4 = *((void *)a2 + 1);
  if (*(void *)(a1 + 8))
  {
    if (v4)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *((void *)a2 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 16) = *((void *)a2 + 2);
      *(void *)(a1 + 24) = *((void *)a2 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
      uint64_t v5 = *(void **)(a1 + 40);
      uint64_t v6 = (void *)*((void *)a2 + 5);
      *(void *)(a1 + 40) = v6;
      id v7 = v6;
    }
    else
    {
      sub_10006DB84(a1);
      long long v11 = a2[1];
      long long v10 = a2[2];
      *(_OWORD *)a1 = *a2;
      *(_OWORD *)(a1 + 16) = v11;
      *(_OWORD *)(a1 + 32) = v10;
    }
  }
  else if (v4)
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = *((void *)a2 + 1);
    *(void *)(a1 + 16) = *((void *)a2 + 2);
    *(void *)(a1 + 24) = *((void *)a2 + 3);
    *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
    uint64_t v8 = (void *)*((void *)a2 + 5);
    *(void *)(a1 + 40) = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v9 = v8;
  }
  else
  {
    long long v12 = *a2;
    long long v13 = a2[2];
    *(_OWORD *)(a1 + 16) = a2[1];
    *(_OWORD *)(a1 + 32) = v13;
    *(_OWORD *)a1 = v12;
  }
  *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
  return a1;
}

uint64_t sub_10006DB84(uint64_t a1)
{
  uint64_t v2 = sub_100046B9C(&qword_10015F758);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t assignWithTake for PrimarySettingsListAppleAccountLinkModel(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a1 + 8)) {
    goto LABEL_5;
  }
  uint64_t v4 = *(void *)(a2 + 8);
  if (!v4)
  {
    sub_10006DB84(a1);
LABEL_5:
    long long v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    goto LABEL_6;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v6 = *(void **)(a1 + 40);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);

LABEL_6:
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for PrimarySettingsListAppleAccountLinkModel(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 49)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PrimarySettingsListAppleAccountLinkModel(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 49) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

uint64_t sub_10006DD34(uint64_t a1, uint64_t a2)
{
  return sub_10006DD68(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned __int8 *)(a1 + 24) | (unsigned __int16)(*(unsigned __int8 *)(a1 + 25) << 8), *(void *)a2, *(void *)(a2 + 8), *(void *)(a2 + 16), *(unsigned __int8 *)(a2 + 24) | (*(unsigned __int8 *)(a2 + 25) << 8));
}

uint64_t sub_10006DD68(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int16 a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v11 = a4;
  if (a1 == a5 && a2 == a6)
  {
    uint64_t result = 0;
  }
  else
  {
    char v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t result = 0;
    if ((v13 & 1) == 0) {
      return result;
    }
  }
  if (a3 == a7 && ((v11 ^ a8) & 1) == 0)
  {
    if ((v11 & 0xFF00) == 0x200)
    {
      if (BYTE1(a8) != 2) {
        return 0;
      }
    }
    else if (BYTE1(a8) == 2 || ((((v11 & 0x100) == 0) ^ ((unsigned __int16)(a8 & 0x100) >> 8)) & 1) == 0)
    {
      return 0;
    }
    return 1;
  }
  return result;
}

uint64_t destroy for PasscodeCredentialWrapper()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PrimarySettingsListBadgedImagelessLinkModel(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PrimarySettingsListBadgedImagelessLinkModel(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  return a1;
}

__n128 initializeWithTake for PrimarySettingsListBadgedImagelessLinkModel(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 10) = *(_OWORD *)(a2 + 10);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for PrimarySettingsListBadgedImagelessLinkModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  return a1;
}

uint64_t getEnumTagSinglePayload for PrimarySettingsListBadgedImagelessLinkModel(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 26)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PrimarySettingsListBadgedImagelessLinkModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(_WORD *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 26) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 26) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PrimarySettingsListBadgedImagelessLinkModel()
{
  return &type metadata for PrimarySettingsListBadgedImagelessLinkModel;
}

BOOL sub_10006DFD8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  _OWORD v5[2] = *(_OWORD *)(a1 + 32);
  __int16 v6 = *(_WORD *)(a1 + 48);
  long long v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  _OWORD v7[2] = *(_OWORD *)(a2 + 32);
  __int16 v8 = *(_WORD *)(a2 + 48);
  return sub_10006E034((uint64_t)v5, (uint64_t)v7);
}

BOOL sub_10006E034(uint64_t a1, uint64_t a2)
{
  sub_10003CA38(a1, (uint64_t)v15);
  sub_10003CA38(a2, (uint64_t)v14);
  sub_10003CA38((uint64_t)v15, (uint64_t)&v16);
  switch(v18)
  {
    case 1:
      uint64_t v5 = v16;
      uint64_t v6 = v17;
      sub_10003CA38((uint64_t)v14, (uint64_t)&v19);
      if (v20 == 1) {
        goto LABEL_8;
      }
      return 0;
    case 2:
      uint64_t v5 = v16;
      uint64_t v6 = v17;
      sub_10003CA38((uint64_t)v14, (uint64_t)&v19);
      if (v20 != 2) {
        return 0;
      }
LABEL_8:
      if (v5 != (void)v19 || v6 != *((void *)&v19 + 1))
      {
        char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
        BOOL result = 0;
        if ((v8 & 1) == 0) {
          return result;
        }
      }
LABEL_16:
      if (*(void *)(a1 + 24) != *(void *)(a2 + 24) || *(void *)(a1 + 32) != *(void *)(a2 + 32))
      {
        char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
        BOOL result = 0;
        if ((v10 & 1) == 0) {
          return result;
        }
      }
      if (*(void *)(a1 + 40) != *(void *)(a2 + 40)
        || ((*(unsigned __int8 *)(a1 + 48) ^ *(unsigned __int8 *)(a2 + 48)) & 1) != 0)
      {
        return 0;
      }
      int v11 = *(unsigned __int8 *)(a1 + 49);
      int v12 = *(unsigned __int8 *)(a2 + 49);
      if (v11 != 2)
      {
        BOOL v13 = (v11 & 1) == 0;
        return v12 != 2 && ((v13 ^ v12) & 1) != 0;
      }
      return v12 == 2;
    case 3:
      sub_10003CA38((uint64_t)v14, (uint64_t)&v19);
      if (v20 == 3 && v19 == 0) {
        goto LABEL_16;
      }
      return 0;
    default:
      sub_10003CA38((uint64_t)v14, (uint64_t)&v19);
      if (v20) {
        return 0;
      }
      sub_10006E244();
      sub_10006E284((uint64_t)v15);
      sub_10006E284((uint64_t)v14);
      char v4 = static NSObject.== infix(_:_:)();
      sub_10003C634((uint64_t)v14);
      sub_10003C634((uint64_t)v15);
      if ((v4 & 1) == 0) {
        return 0;
      }
      goto LABEL_16;
  }
}

unint64_t sub_10006E244()
{
  unint64_t result = qword_10015F760;
  if (!qword_10015F760)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10015F760);
  }
  return result;
}

uint64_t sub_10006E284(uint64_t a1)
{
  return a1;
}

uint64_t initializeWithCopy for PrimarySettingsListBadgedLinkModel(uint64_t a1, uint64_t a2)
{
  id v4 = *(id *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  char v6 = *(unsigned char *)(a2 + 16);
  sub_100047728(*(id *)a2, v5, v6);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PrimarySettingsListBadgedLinkModel(uint64_t a1, uint64_t a2)
{
  id v4 = *(id *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  char v6 = *(unsigned char *)(a2 + 16);
  sub_100047728(*(id *)a2, v5, v6);
  uint64_t v7 = *(void **)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  char v9 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v6;
  sub_100046F04(v7, v8, v9);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  return a1;
}

__n128 initializeWithTake for PrimarySettingsListBadgedLinkModel(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for PrimarySettingsListBadgedLinkModel(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void **)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v7 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v4;
  sub_100046F04(v5, v6, v7);
  uint64_t v8 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v8;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  return a1;
}

uint64_t getEnumTagSinglePayload for PrimarySettingsListBadgedLinkModel(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 50)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PrimarySettingsListBadgedLinkModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 48) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 50) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 50) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PrimarySettingsListBadgedLinkModel()
{
  return &type metadata for PrimarySettingsListBadgedLinkModel;
}

uint64_t *sub_10006E4FC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for FamilyRowStatus();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    char v9 = (uint64_t *)((char *)a1 + v8);
    char v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    *char v9 = *v10;
    v9[1] = v11;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_10006E5D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for FamilyRowStatus();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  char v9 = (void *)(a2 + v7);
  void *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10006E670(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for FamilyRowStatus();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_10006E6EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for FamilyRowStatus();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  char v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  void *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10006E778(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for FamilyRowStatus();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_10006E83C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for FamilyRowStatus();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_10006E8FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((sub_100072C94() & 1) == 0) {
    return 0;
  }
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = *(void *)(a1 + v6);
  uint64_t v8 = *(void *)(a1 + v6 + 8);
  uint64_t v9 = (void *)(a2 + v6);
  if (v7 == *v9 && v8 == v9[1]) {
    return 1;
  }

  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t sub_10006E984(long long *a1, long long *a2)
{
  long long v2 = a1[1];
  long long v5 = *a1;
  v6[0] = v2;
  *(_OWORD *)((char *)v6 + 9) = *(long long *)((char *)a1 + 25);
  long long v3 = a2[1];
  long long v7 = *a2;
  v8[0] = v3;
  *(_OWORD *)((char *)v8 + 9) = *(long long *)((char *)a2 + 25);
  return sub_10006E9D0((uint64_t)&v5, (uint64_t)&v7) & 1;
}

uint64_t sub_10006E9D0(uint64_t a1, uint64_t a2)
{
  int v4 = *(unsigned __int8 *)(a2 + 16);
  if (*(unsigned __int8 *)(a1 + 16) != 255)
  {
    if (v4 != 255)
    {
      unint64_t v10 = *(void **)a1;
      uint64_t v9 = *(void *)(a1 + 8);
      unint64_t v12 = *(void *)a2;
      uint64_t v11 = *(void *)(a2 + 8);
      switch(*(unsigned char *)(a1 + 16))
      {
        case 1:
          if (v4 != 1) {
            goto LABEL_10;
          }
          goto LABEL_19;
        case 2:
          if (v4 != 2) {
            goto LABEL_10;
          }
LABEL_19:
          if (v10 != (void *)v12 || v9 != v11)
          {
            char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
            char v7 = 0;
            if ((v15 & 1) == 0) {
              return v7 & 1;
            }
          }
          goto LABEL_3;
        case 3:
          if (v4 != 3 || (v11 | v12) != 0) {
            goto LABEL_10;
          }
          goto LABEL_3;
        default:
          if (*(unsigned char *)(a2 + 16)) {
            goto LABEL_10;
          }
          sub_10006E244();
          sub_10006EB6C((id)v12, v11, 0);
          sub_10006EB6C(v10, v9, 0);
          char v13 = static NSObject.== infix(_:_:)();
          sub_10006EB80((void *)v12, v11, 0);
          sub_10006EB80(v10, v9, 0);
          char v7 = 0;
          if ((v13 & 1) == 0) {
            return v7 & 1;
          }
          goto LABEL_3;
      }
    }
    goto LABEL_10;
  }
  if (v4 != 255)
  {
LABEL_10:
    char v7 = 0;
    return v7 & 1;
  }
LABEL_3:
  BOOL v5 = *(void *)(a1 + 24) == *(void *)(a2 + 24) && *(void *)(a1 + 32) == *(void *)(a2 + 32);
  if (v5 || (v6 = _stringCompareWithSmolCheck(_:_:expecting:)(), char v7 = 0, (v6 & 1) != 0)) {
    char v7 = ((*(unsigned char *)(a1 + 40) & 1) == 0) ^ *(unsigned char *)(a2 + 40);
  }
  return v7 & 1;
}

id sub_10006EB6C(id result, uint64_t a2, char a3)
{
  if (a3 != -1) {
    return sub_100047728(result, a2, a3);
  }
  return result;
}

void sub_10006EB80(void *a1, uint64_t a2, char a3)
{
  if (a3 != -1) {
    sub_100046F04(a1, a2, a3);
  }
}

uint64_t destroy for PrimarySettingsListFollowUpActionModel(uint64_t a1)
{
  int v1 = *(unsigned __int8 *)(a1 + 16);
  if (v1 != 255) {
    sub_100046F04(*(void **)a1, *(void *)(a1 + 8), v1);
  }

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PrimarySettingsListFollowUpActionModel(uint64_t a1, uint64_t *a2)
{
  int v4 = *((unsigned __int8 *)a2 + 16);
  if (v4 == 255)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
  }
  else
  {
    uint64_t v5 = *a2;
    uint64_t v6 = a2[1];
    sub_100047728((id)*a2, v6, v4);
    *(void *)a1 = v5;
    *(void *)(a1 + 8) = v6;
    *(unsigned char *)(a1 + 16) = v4;
  }
  uint64_t v7 = a2[4];
  *(void *)(a1 + 24) = a2[3];
  *(void *)(a1 + 32) = v7;
  *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PrimarySettingsListFollowUpActionModel(uint64_t a1, long long *a2)
{
  int v4 = *((unsigned __int8 *)a2 + 16);
  if (*(unsigned __int8 *)(a1 + 16) == 255)
  {
    if (v4 == 255)
    {
      long long v13 = *a2;
      *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
      *(_OWORD *)a1 = v13;
    }
    else
    {
      uint64_t v10 = *(void *)a2;
      uint64_t v11 = *((void *)a2 + 1);
      sub_100047728(*(id *)a2, v11, v4);
      *(void *)a1 = v10;
      *(void *)(a1 + 8) = v11;
      *(unsigned char *)(a1 + 16) = v4;
    }
  }
  else if (v4 == 255)
  {
    sub_10006ED5C(a1);
    char v12 = *((unsigned char *)a2 + 16);
    *(_OWORD *)a1 = *a2;
    *(unsigned char *)(a1 + 16) = v12;
  }
  else
  {
    id v5 = *(id *)a2;
    uint64_t v6 = *((void *)a2 + 1);
    sub_100047728(*(id *)a2, v6, v4);
    uint64_t v7 = *(void **)a1;
    uint64_t v8 = *(void *)(a1 + 8);
    *(void *)a1 = v5;
    *(void *)(a1 + 8) = v6;
    char v9 = *(unsigned char *)(a1 + 16);
    *(unsigned char *)(a1 + 16) = v4;
    sub_100046F04(v7, v8, v9);
  }
  *(void *)(a1 + 24) = *((void *)a2 + 3);
  *(void *)(a1 + 32) = *((void *)a2 + 4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
  return a1;
}

uint64_t sub_10006ED5C(uint64_t a1)
{
  return a1;
}

__n128 initializeWithTake for PrimarySettingsListFollowUpActionModel(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for PrimarySettingsListFollowUpActionModel(uint64_t a1, uint64_t a2)
{
  int v4 = *(unsigned __int8 *)(a1 + 16);
  if (v4 == 255) {
    goto LABEL_5;
  }
  int v5 = *(unsigned __int8 *)(a2 + 16);
  if (v5 == 255)
  {
    sub_10006ED5C(a1);
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
    goto LABEL_6;
  }
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v5;
  sub_100046F04(v6, v7, v4);
LABEL_6:
  uint64_t v8 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v8;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for PrimarySettingsListFollowUpActionModel(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 41)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PrimarySettingsListFollowUpActionModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 41) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PrimarySettingsListFollowUpActionModel()
{
  return &type metadata for PrimarySettingsListFollowUpActionModel;
}

uint64_t sub_10006EEF0(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  _OWORD v5[2] = *(_OWORD *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 48);
  long long v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  _OWORD v7[2] = *(_OWORD *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 48);
  return sub_10006EF4C((uint64_t)v5, (uint64_t)v7) & 1;
}

uint64_t sub_10006EF4C(uint64_t a1, uint64_t a2)
{
  int v4 = *(unsigned __int8 *)(a2 + 16);
  if (*(unsigned __int8 *)(a1 + 16) != 255)
  {
    if (v4 != 255)
    {
      char v9 = *(void **)a1;
      uint64_t v8 = *(void *)(a1 + 8);
      unint64_t v11 = *(void *)a2;
      uint64_t v10 = *(void *)(a2 + 8);
      switch(*(unsigned char *)(a1 + 16))
      {
        case 1:
          if (v4 != 1) {
            return 0;
          }
          goto LABEL_24;
        case 2:
          if (v4 != 2) {
            return 0;
          }
LABEL_24:
          if (v9 != (void *)v11 || v8 != v10)
          {
            char v14 = _stringCompareWithSmolCheck(_:_:expecting:)();
            uint64_t result = 0;
            if ((v14 & 1) == 0) {
              return result;
            }
          }
          goto LABEL_3;
        case 3:
          if (v4 != 3 || (v10 | v11) != 0) {
            return 0;
          }
          goto LABEL_3;
        default:
          if (*(unsigned char *)(a2 + 16)) {
            return 0;
          }
          sub_10006E244();
          sub_10006EB6C((id)v11, v10, 0);
          sub_10006EB6C(v9, v8, 0);
          char v12 = static NSObject.== infix(_:_:)();
          sub_10006EB80((void *)v11, v10, 0);
          sub_10006EB80(v9, v8, 0);
          uint64_t result = 0;
          if ((v12 & 1) == 0) {
            return result;
          }
          goto LABEL_3;
      }
    }
    return 0;
  }
  if (v4 != 255) {
    return 0;
  }
LABEL_3:
  BOOL v5 = *(void *)(a1 + 24) == *(void *)(a2 + 24) && *(void *)(a1 + 32) == *(void *)(a2 + 32);
  if (v5 || (v6 = _stringCompareWithSmolCheck(_:_:expecting:)(), uint64_t result = 0, (v6 & 1) != 0))
  {
    if (*(void *)(a1 + 40) == *(void *)(a2 + 40) && *(void *)(a1 + 48) == *(void *)(a2 + 48))
    {
      return 1;
    }
    else
    {
      return _stringCompareWithSmolCheck(_:_:expecting:)();
    }
  }
  return result;
}

uint64_t destroy for PrimarySettingsListFollowUpHeaderModel(uint64_t a1)
{
  int v1 = *(unsigned __int8 *)(a1 + 16);
  if (v1 != 255) {
    sub_100046F04(*(void **)a1, *(void *)(a1 + 8), v1);
  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PrimarySettingsListFollowUpHeaderModel(uint64_t a1, uint64_t *a2)
{
  int v4 = *((unsigned __int8 *)a2 + 16);
  if (v4 == 255)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
  }
  else
  {
    uint64_t v5 = *a2;
    uint64_t v6 = a2[1];
    sub_100047728((id)*a2, v6, v4);
    *(void *)a1 = v5;
    *(void *)(a1 + 8) = v6;
    *(unsigned char *)(a1 + 16) = v4;
  }
  uint64_t v7 = a2[4];
  *(void *)(a1 + 24) = a2[3];
  *(void *)(a1 + 32) = v7;
  uint64_t v8 = a2[5];
  uint64_t v9 = a2[6];
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PrimarySettingsListFollowUpHeaderModel(uint64_t a1, long long *a2)
{
  int v4 = *((unsigned __int8 *)a2 + 16);
  if (*(unsigned __int8 *)(a1 + 16) == 255)
  {
    if (v4 == 255)
    {
      long long v13 = *a2;
      *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
      *(_OWORD *)a1 = v13;
    }
    else
    {
      uint64_t v10 = *(void *)a2;
      uint64_t v11 = *((void *)a2 + 1);
      sub_100047728(*(id *)a2, v11, v4);
      *(void *)a1 = v10;
      *(void *)(a1 + 8) = v11;
      *(unsigned char *)(a1 + 16) = v4;
    }
  }
  else if (v4 == 255)
  {
    sub_10006ED5C(a1);
    char v12 = *((unsigned char *)a2 + 16);
    *(_OWORD *)a1 = *a2;
    *(unsigned char *)(a1 + 16) = v12;
  }
  else
  {
    id v5 = *(id *)a2;
    uint64_t v6 = *((void *)a2 + 1);
    sub_100047728(*(id *)a2, v6, v4);
    uint64_t v7 = *(void **)a1;
    uint64_t v8 = *(void *)(a1 + 8);
    *(void *)a1 = v5;
    *(void *)(a1 + 8) = v6;
    char v9 = *(unsigned char *)(a1 + 16);
    *(unsigned char *)(a1 + 16) = v4;
    sub_100046F04(v7, v8, v9);
  }
  *(void *)(a1 + 24) = *((void *)a2 + 3);
  *(void *)(a1 + 32) = *((void *)a2 + 4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *((void *)a2 + 5);
  *(void *)(a1 + 48) = *((void *)a2 + 6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for PrimarySettingsListFollowUpHeaderModel(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for PrimarySettingsListFollowUpHeaderModel(uint64_t a1, uint64_t a2)
{
  int v4 = *(unsigned __int8 *)(a1 + 16);
  if (v4 == 255) {
    goto LABEL_5;
  }
  int v5 = *(unsigned __int8 *)(a2 + 16);
  if (v5 == 255)
  {
    sub_10006ED5C(a1);
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
    goto LABEL_6;
  }
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v5;
  sub_100046F04(v6, v7, v4);
LABEL_6:
  uint64_t v8 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v9;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PrimarySettingsListFollowUpHeaderModel(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PrimarySettingsListFollowUpHeaderModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_10006F450(uint64_t a1, uint64_t a2)
{
  return sub_10006F47C(*(void *)a1, *(void *)(a1 + 8), *(unsigned __int8 *)(a1 + 16) | (unsigned __int16)(*(unsigned __int8 *)(a1 + 17) << 8), *(void *)a2, *(void *)(a2 + 8), *(unsigned __int8 *)(a2 + 16) | (*(unsigned __int8 *)(a2 + 17) << 8));
}

uint64_t sub_10006F47C(uint64_t a1, uint64_t a2, unsigned __int16 a3, uint64_t a4, uint64_t a5, int a6)
{
  int v7 = a3;
  if (a1 == a4 && a2 == a5)
  {
    if ((a3 ^ a6)) {
      return 0;
    }
LABEL_7:
    if ((v7 & 0xFF00) == 0x200)
    {
      if (BYTE1(a6) != 2) {
        return 0;
      }
    }
    else if (BYTE1(a6) == 2 || ((((v7 & 0x100) == 0) ^ ((unsigned __int16)(a6 & 0x100) >> 8)) & 1) == 0)
    {
      return 0;
    }
    return 1;
  }
  char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
  uint64_t result = 0;
  if ((v8 & 1) != 0 && ((v7 ^ a6) & 1) == 0) {
    goto LABEL_7;
  }
  return result;
}

uint64_t sub_10006F52C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PrimarySettingsListImagelessLinkModel(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  return a1;
}

__n128 initializeWithTake for PrimarySettingsListImagelessLinkModel(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u16[0] = a2[1].n128_u16[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for PrimarySettingsListImagelessLinkModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  return a1;
}

uint64_t getEnumTagSinglePayload for PrimarySettingsListImagelessLinkModel(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 18)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PrimarySettingsListImagelessLinkModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_WORD *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 18) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 18) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PrimarySettingsListImagelessLinkModel()
{
  return &type metadata for PrimarySettingsListImagelessLinkModel;
}

char *sub_10006F718(char *a1, char *a2, uint64_t a3)
{
  unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v8 = type metadata accessor for FLFollowUpInformation();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
    uint64_t v9 = sub_100046B9C(&qword_10015F7F8);
    *(_OWORD *)&a1[*(int *)(v9 + 48)] = *(_OWORD *)&a2[*(int *)(v9 + 48)];
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload > 1)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = type metadata accessor for FLFollowUpInformation();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_10006F894(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100045F84((uint64_t)a1);
    unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v8 = type metadata accessor for FLFollowUpInformation();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
      uint64_t v9 = sub_100046B9C(&qword_10015F7F8);
      *(_OWORD *)&a1[*(int *)(v9 + 48)] = *(_OWORD *)&a2[*(int *)(v9 + 48)];
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload > 1)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v7 = type metadata accessor for FLFollowUpInformation();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_10006FA20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t sub_10006FA48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_10006FA74()
{
  return swift_storeEnumTagMultiPayload();
}

unint64_t sub_10006FA84(uint64_t a1)
{
  return sub_10006FA9C(a1, &qword_10015F900);
}

unint64_t sub_10006FA90(uint64_t a1)
{
  return sub_10006FA9C(a1, &qword_10015F910);
}

unint64_t sub_10006FA9C(uint64_t a1, uint64_t *a2)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100046B9C(a2);
  uint64_t v3 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  int v5 = (void **)(a1 + 48);
  while (1)
  {
    uint64_t v6 = (uint64_t)*(v5 - 2);
    uint64_t v7 = (uint64_t)*(v5 - 1);
    uint64_t v8 = *v5;
    swift_bridgeObjectRetain();
    id v9 = v8;
    unint64_t result = sub_10009F1DC(v6, v7);
    if (v11) {
      break;
    }
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    char v12 = (uint64_t *)(v3[6] + 16 * result);
    *char v12 = v6;
    v12[1] = v7;
    *(void *)(v3[7] + 8 * result) = v9;
    uint64_t v13 = v3[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v3[2] = v15;
    v5 += 3;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void *sub_10006FBB4(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_100046B9C((uint64_t *)&unk_100162540);
    uint64_t v2 = static _DictionaryStorage.allocate(capacity:)();
    uint64_t v3 = (void *)v2;
    uint64_t v4 = *(void *)(a1 + 16);
    if (v4)
    {
      uint64_t v5 = v2 + 64;
      uint64_t v6 = a1 + 32;
      swift_retain();
      do
      {
        sub_100071948(v6, (uint64_t)v16);
        unint64_t v7 = sub_1000619E0((uint64_t)v16);
        if (v8)
        {
          __break(1u);
LABEL_11:
          __break(1u);
          JUMPOUT(0x10006FCE4);
        }
        *(void *)(v5 + ((v7 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v7;
        uint64_t v9 = v3[6] + 40 * v7;
        long long v10 = v16[0];
        long long v11 = v16[1];
        *(void *)(v9 + 32) = v17;
        *(_OWORD *)uint64_t v9 = v10;
        *(_OWORD *)(v9 + 16) = v11;
        sub_100025390(&v18, (_OWORD *)(v3[7] + 32 * v7));
        uint64_t v12 = v3[2];
        BOOL v13 = __OFADD__(v12, 1);
        uint64_t v14 = v12 + 1;
        if (v13) {
          goto LABEL_11;
        }
        v3[2] = v14;
        v6 += 72;
        --v4;
      }
      while (v4);
      swift_release();
    }
  }
  else
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
  }
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_100070024()
{
  uint64_t v1 = type metadata accessor for PrimarySettingsListItemIdentifier();
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100046BE0(v0, (uint64_t)v3);
  unsigned int v4 = swift_getEnumCaseMultiPayload() - 6;
  if (v4 < 0x29 && ((0x1DDFDFFFBFFuLL >> v4) & 1) != 0) {
    return byte_10011C6B6[v4];
  }
  sub_100045F84((uint64_t)v3);
  return 74;
}

Swift::Int sub_100070260()
{
  return Hasher._finalize()();
}

BOOL sub_1000702A4(uint64_t a1, uint64_t a2)
{
  return (sub_100070428(a2, a1) & 1) == 0;
}

BOOL sub_1000702D0(uint64_t a1, uint64_t a2)
{
  return (sub_100070428(a1, a2) & 1) == 0;
}

uint64_t sub_1000702F0(uint64_t a1, uint64_t a2)
{
  return sub_100070428(a2, a1);
}

uint64_t sub_100070304@<X0>(uint64_t a1@<X8>)
{
  return sub_100046BE0(v1, a1);
}

uint64_t sub_100070310()
{
  return sub_100069358((unint64_t *)&qword_10015F8B0, (void (*)(uint64_t))type metadata accessor for PrimarySettingsListItemIdentifier);
}

uint64_t sub_100070428(uint64_t a1, uint64_t a2)
{
  uint64_t v101 = type metadata accessor for FLFollowUpInformation();
  uint64_t v106 = *(void *)(v101 - 8);
  uint64_t v4 = __chkstk_darwin(v101);
  char v99 = (char *)&v94 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v100 = (char *)&v94 - v7;
  uint64_t v8 = __chkstk_darwin(v6);
  id v97 = (char *)&v94 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v98 = (char *)&v94 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v95 = (char *)&v94 - v13;
  __chkstk_darwin(v12);
  uint64_t v96 = (char *)&v94 - v14;
  uint64_t v15 = type metadata accessor for PrimarySettingsListItemIdentifier();
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v104 = (char *)&v94 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v102 = (uint64_t)&v94 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v22 = (uint64_t *)((char *)&v94 - v21);
  uint64_t v23 = __chkstk_darwin(v20);
  uint64_t v25 = (uint64_t *)((char *)&v94 - v24);
  uint64_t v26 = __chkstk_darwin(v23);
  uint64_t v28 = (uint64_t *)((char *)&v94 - v27);
  uint64_t v29 = __chkstk_darwin(v26);
  uint64_t v31 = (char *)&v94 - v30;
  uint64_t v32 = __chkstk_darwin(v29);
  uint64_t v34 = (char *)&v94 - v33;
  __chkstk_darwin(v32);
  BOOL v36 = (char *)&v94 - v35;
  uint64_t v37 = sub_100046B9C(&qword_10015F8B8);
  uint64_t v38 = __chkstk_darwin(v37 - 8);
  uint64_t v40 = (char *)&v94 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = &v40[*(int *)(v38 + 56)];
  uint64_t v103 = a1;
  uint64_t v42 = a1;
  unint64_t v43 = v41;
  sub_100046BE0(v42, (uint64_t)v40);
  uint64_t v105 = a2;
  sub_100046BE0(a2, (uint64_t)v43);
  uint64_t v107 = v40;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_100046BE0((uint64_t)v107, (uint64_t)v34);
      if (swift_getEnumCaseMultiPayload() != 1)
      {
        (*(void (**)(char *, uint64_t))(v106 + 8))(v34, v101);
        uint64_t v44 = (uint64_t)v107;
        goto LABEL_76;
      }
      uint64_t v49 = v106;
      uint64_t v50 = *(void (**)(char *, char *, uint64_t))(v106 + 32);
      uint64_t v51 = v98;
      uint64_t v52 = v101;
      v50(v98, v34, v101);
      uint64_t v53 = v97;
      v50(v97, v43, v52);
      if (static FLFollowUpInformation.== infix(_:_:)())
      {
        uint64_t v54 = *(void (**)(char *, uint64_t))(v49 + 8);
        v54(v53, v52);
        v54(v51, v52);
        uint64_t v55 = (uint64_t)v107;
        goto LABEL_73;
      }
      char v70 = static FLFollowUpInformation.< infix(_:_:)();
      uint64_t v85 = *(void (**)(char *, uint64_t))(v49 + 8);
      v85(v53, v52);
      v85(v51, v52);
      sub_100045F84((uint64_t)v107);
      return v70 & 1;
    case 2u:
      uint64_t v44 = (uint64_t)v107;
      sub_100046BE0((uint64_t)v107, (uint64_t)v31);
      uint64_t v56 = *(int *)(sub_100046B9C(&qword_10015F7F8) + 48);
      uint64_t v58 = *(char **)&v31[v56];
      uint64_t v57 = *(void *)&v31[v56 + 8];
      if (swift_getEnumCaseMultiPayload() != 2)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v106 + 8))(v31, v101);
        goto LABEL_76;
      }
      uint64_t v59 = &v43[v56];
      uint64_t v61 = *(char **)&v43[v56];
      uint64_t v60 = *((void *)v59 + 1);
      uint64_t v104 = v58;
      uint64_t v105 = v60;
      uint64_t v62 = v106;
      uint64_t v63 = *(void (**)(char *, char *, uint64_t))(v106 + 32);
      uint64_t v64 = v100;
      uint64_t v65 = v101;
      v63(v100, v31, v101);
      uint64_t v66 = v99;
      v63(v99, v43, v65);
      uint64_t v67 = v64;
      if (static FLFollowUpInformation.== infix(_:_:)())
      {
        if (v104 == v61 && v57 == v105 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v68 = *(void (**)(char *, uint64_t))(v62 + 8);
          uint64_t v69 = v101;
          v68(v66, v101);
          v68(v67, v69);
          goto LABEL_72;
        }
        uint64_t v90 = v66;
        char v70 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v91 = *(void (**)(char *, uint64_t))(v62 + 8);
        uint64_t v92 = v90;
        uint64_t v93 = v101;
        v91(v92, v101);
        v91(v67, v93);
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        char v86 = static FLFollowUpInformation.< infix(_:_:)();
        unint64_t v87 = v66;
        char v70 = v86;
        os_log_type_t v88 = *(void (**)(char *, uint64_t))(v62 + 8);
        v88(v87, v65);
        v88(v64, v65);
      }
      goto LABEL_189;
    case 3u:
      uint64_t v44 = (uint64_t)v107;
      sub_100046BE0((uint64_t)v107, (uint64_t)v28);
      uint64_t v46 = *v28;
      uint64_t v45 = v28[1];
      if (swift_getEnumCaseMultiPayload() != 3) {
        goto LABEL_40;
      }
      goto LABEL_5;
    case 4u:
      uint64_t v44 = (uint64_t)v107;
      sub_100046BE0((uint64_t)v107, (uint64_t)v25);
      uint64_t v46 = *v25;
      uint64_t v45 = v25[1];
      if (swift_getEnumCaseMultiPayload() == 4) {
        goto LABEL_5;
      }
      goto LABEL_40;
    case 5u:
      uint64_t v44 = (uint64_t)v107;
      sub_100046BE0((uint64_t)v107, (uint64_t)v22);
      uint64_t v46 = *v22;
      uint64_t v45 = v22[1];
      if (swift_getEnumCaseMultiPayload() != 5)
      {
LABEL_40:
        swift_bridgeObjectRelease();
        goto LABEL_76;
      }
LABEL_5:
      BOOL v47 = v46 == *(void *)v43 && v45 == *((void *)v43 + 1);
      if (v47 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_72;
      }
      char v70 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_189;
    case 6u:
      BOOL v48 = swift_getEnumCaseMultiPayload() == 6;
      goto LABEL_70;
    case 7u:
      BOOL v48 = swift_getEnumCaseMultiPayload() == 7;
      goto LABEL_70;
    case 8u:
      BOOL v48 = swift_getEnumCaseMultiPayload() == 8;
      goto LABEL_70;
    case 9u:
      BOOL v48 = swift_getEnumCaseMultiPayload() == 9;
      goto LABEL_70;
    case 0xAu:
      BOOL v48 = swift_getEnumCaseMultiPayload() == 10;
      goto LABEL_70;
    case 0xBu:
      BOOL v48 = swift_getEnumCaseMultiPayload() == 11;
      goto LABEL_70;
    case 0xCu:
      BOOL v48 = swift_getEnumCaseMultiPayload() == 12;
      goto LABEL_70;
    case 0xDu:
      BOOL v48 = swift_getEnumCaseMultiPayload() == 13;
      goto LABEL_70;
    case 0xEu:
      BOOL v48 = swift_getEnumCaseMultiPayload() == 14;
      goto LABEL_70;
    case 0xFu:
      BOOL v48 = swift_getEnumCaseMultiPayload() == 15;
      goto LABEL_70;
    case 0x10u:
      BOOL v48 = swift_getEnumCaseMultiPayload() == 16;
      goto LABEL_70;
    case 0x11u:
      BOOL v48 = swift_getEnumCaseMultiPayload() == 17;
      goto LABEL_70;
    case 0x12u:
      BOOL v48 = swift_getEnumCaseMultiPayload() == 18;
      goto LABEL_70;
    case 0x13u:
      BOOL v48 = swift_getEnumCaseMultiPayload() == 19;
      goto LABEL_70;
    case 0x14u:
      BOOL v48 = swift_getEnumCaseMultiPayload() == 20;
      goto LABEL_70;
    case 0x15u:
      BOOL v48 = swift_getEnumCaseMultiPayload() == 21;
      goto LABEL_70;
    case 0x16u:
      BOOL v48 = swift_getEnumCaseMultiPayload() == 22;
      goto LABEL_70;
    case 0x17u:
      BOOL v48 = swift_getEnumCaseMultiPayload() == 23;
      goto LABEL_70;
    case 0x18u:
      BOOL v48 = swift_getEnumCaseMultiPayload() == 24;
      goto LABEL_70;
    case 0x19u:
      BOOL v48 = swift_getEnumCaseMultiPayload() == 25;
      goto LABEL_70;
    case 0x1Au:
      BOOL v48 = swift_getEnumCaseMultiPayload() == 26;
      goto LABEL_70;
    case 0x1Bu:
      BOOL v48 = swift_getEnumCaseMultiPayload() == 27;
      goto LABEL_70;
    case 0x1Cu:
      BOOL v48 = swift_getEnumCaseMultiPayload() == 28;
      goto LABEL_70;
    case 0x1Du:
      BOOL v48 = swift_getEnumCaseMultiPayload() == 29;
      goto LABEL_70;
    case 0x1Eu:
      BOOL v48 = swift_getEnumCaseMultiPayload() == 30;
      goto LABEL_70;
    case 0x1Fu:
      BOOL v48 = swift_getEnumCaseMultiPayload() == 31;
      goto LABEL_70;
    case 0x20u:
      BOOL v48 = swift_getEnumCaseMultiPayload() == 32;
      goto LABEL_70;
    case 0x21u:
      BOOL v48 = swift_getEnumCaseMultiPayload() == 33;
      goto LABEL_70;
    case 0x22u:
      BOOL v48 = swift_getEnumCaseMultiPayload() == 34;
      goto LABEL_70;
    case 0x23u:
      BOOL v48 = swift_getEnumCaseMultiPayload() == 35;
      goto LABEL_70;
    case 0x24u:
      BOOL v48 = swift_getEnumCaseMultiPayload() == 36;
      goto LABEL_70;
    case 0x25u:
      BOOL v48 = swift_getEnumCaseMultiPayload() == 37;
      goto LABEL_70;
    case 0x26u:
      BOOL v48 = swift_getEnumCaseMultiPayload() == 38;
      goto LABEL_70;
    case 0x27u:
      BOOL v48 = swift_getEnumCaseMultiPayload() == 39;
      goto LABEL_70;
    case 0x28u:
      BOOL v48 = swift_getEnumCaseMultiPayload() == 40;
      goto LABEL_70;
    case 0x29u:
      BOOL v48 = swift_getEnumCaseMultiPayload() == 41;
      goto LABEL_70;
    case 0x2Au:
      BOOL v48 = swift_getEnumCaseMultiPayload() == 42;
      goto LABEL_70;
    case 0x2Bu:
      BOOL v48 = swift_getEnumCaseMultiPayload() == 43;
      goto LABEL_70;
    case 0x2Cu:
      BOOL v48 = swift_getEnumCaseMultiPayload() == 44;
      goto LABEL_70;
    case 0x2Du:
      BOOL v48 = swift_getEnumCaseMultiPayload() == 45;
      goto LABEL_70;
    case 0x2Eu:
      BOOL v48 = swift_getEnumCaseMultiPayload() == 46;
      goto LABEL_70;
    case 0x2Fu:
      BOOL v48 = swift_getEnumCaseMultiPayload() == 47;
      goto LABEL_70;
    case 0x30u:
      BOOL v48 = swift_getEnumCaseMultiPayload() == 48;
      goto LABEL_70;
    case 0x31u:
      BOOL v48 = swift_getEnumCaseMultiPayload() == 49;
      goto LABEL_70;
    case 0x32u:
      BOOL v48 = swift_getEnumCaseMultiPayload() == 50;
      goto LABEL_70;
    case 0x33u:
      BOOL v48 = swift_getEnumCaseMultiPayload() == 51;
LABEL_70:
      uint64_t v44 = (uint64_t)v107;
      if (!v48) {
        goto LABEL_76;
      }
      goto LABEL_72;
    default:
      uint64_t v44 = (uint64_t)v107;
      sub_100046BE0((uint64_t)v107, (uint64_t)v36);
      if (swift_getEnumCaseMultiPayload())
      {
        (*(void (**)(char *, uint64_t))(v106 + 8))(v36, v101);
LABEL_76:
        uint64_t v71 = v102;
        sub_100046BE0(v103, v102);
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        unint64_t v73 = 0;
        uint64_t v74 = v106;
        uint64_t v75 = (uint64_t)v104;
        switch(EnumCaseMultiPayload)
        {
          case 1:
            (*(void (**)(uint64_t, uint64_t))(v106 + 8))(v71, v101);
            unint64_t v73 = 3;
            break;
          case 2:
            sub_100046B9C(&qword_10015F7F8);
            swift_bridgeObjectRelease();
            (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v71, v101);
            unint64_t v73 = 4;
            break;
          case 3:
            sub_100045F84(v71);
            unint64_t v73 = 5;
            break;
          case 4:
            sub_100045F84(v71);
            unint64_t v73 = 6;
            break;
          case 5:
            sub_100045F84(v71);
            unint64_t v73 = 7;
            break;
          case 6:
            break;
          case 7:
            unint64_t v73 = 1;
            break;
          case 8:
            unint64_t v73 = 8;
            break;
          case 9:
            unint64_t v73 = 9;
            break;
          case 10:
            unint64_t v73 = 10;
            break;
          case 11:
            unint64_t v73 = 11;
            break;
          case 12:
            unint64_t v73 = 12;
            break;
          case 13:
            unint64_t v73 = 13;
            break;
          case 14:
            unint64_t v73 = 14;
            break;
          case 15:
            unint64_t v73 = 15;
            break;
          case 16:
            unint64_t v73 = 16;
            break;
          case 17:
            unint64_t v73 = 17;
            break;
          case 18:
            unint64_t v73 = 18;
            break;
          case 19:
            unint64_t v73 = 19;
            break;
          case 20:
            unint64_t v73 = 20;
            break;
          case 21:
            unint64_t v73 = 21;
            break;
          case 22:
            unint64_t v73 = 22;
            break;
          case 23:
            unint64_t v73 = 23;
            break;
          case 24:
            unint64_t v73 = 24;
            break;
          case 25:
            unint64_t v73 = 25;
            break;
          case 26:
            unint64_t v73 = 26;
            break;
          case 27:
            unint64_t v73 = 27;
            break;
          case 28:
            unint64_t v73 = 28;
            break;
          case 29:
            unint64_t v73 = 29;
            break;
          case 30:
            unint64_t v73 = 30;
            break;
          case 31:
            unint64_t v73 = 31;
            break;
          case 32:
            unint64_t v73 = 32;
            break;
          case 33:
            unint64_t v73 = 33;
            break;
          case 34:
            unint64_t v73 = 34;
            break;
          case 35:
            unint64_t v73 = 35;
            break;
          case 36:
            unint64_t v73 = 36;
            break;
          case 37:
            unint64_t v73 = 37;
            break;
          case 38:
            unint64_t v73 = 38;
            break;
          case 39:
            unint64_t v73 = 39;
            break;
          case 40:
            unint64_t v73 = 40;
            break;
          case 41:
            unint64_t v73 = 41;
            break;
          case 42:
            unint64_t v73 = 42;
            break;
          case 43:
            unint64_t v73 = 43;
            break;
          case 44:
            unint64_t v73 = 44;
            break;
          case 45:
            unint64_t v73 = 45;
            break;
          case 46:
            unint64_t v73 = 46;
            break;
          case 47:
            unint64_t v73 = 47;
            break;
          case 48:
            unint64_t v73 = 48;
            break;
          case 49:
            unint64_t v73 = 49;
            break;
          case 50:
            unint64_t v73 = 50;
            break;
          case 51:
            unint64_t v73 = 51;
            break;
          default:
            (*(void (**)(uint64_t, uint64_t))(v106 + 8))(v71, v101);
            unint64_t v73 = 2;
            break;
        }
        sub_100046BE0(v105, v75);
        int v76 = swift_getEnumCaseMultiPayload();
        unint64_t v77 = 0;
        switch(v76)
        {
          case 1:
            (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v75, v101);
            unint64_t v77 = 3;
            break;
          case 2:
            sub_100046B9C(&qword_10015F7F8);
            swift_bridgeObjectRelease();
            (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v75, v101);
            unint64_t v77 = 4;
            break;
          case 3:
            sub_100045F84(v75);
            unint64_t v77 = 5;
            break;
          case 4:
            sub_100045F84(v75);
            unint64_t v77 = 6;
            break;
          case 5:
            sub_100045F84(v75);
            unint64_t v77 = 7;
            break;
          case 6:
            break;
          case 7:
            unint64_t v77 = 1;
            break;
          case 8:
            unint64_t v77 = 8;
            break;
          case 9:
            unint64_t v77 = 9;
            break;
          case 10:
            unint64_t v77 = 10;
            break;
          case 11:
            unint64_t v77 = 11;
            break;
          case 12:
            unint64_t v77 = 12;
            break;
          case 13:
            unint64_t v77 = 13;
            break;
          case 14:
            unint64_t v77 = 14;
            break;
          case 15:
            unint64_t v77 = 15;
            break;
          case 16:
            unint64_t v77 = 16;
            break;
          case 17:
            unint64_t v77 = 17;
            break;
          case 18:
            unint64_t v77 = 18;
            break;
          case 19:
            unint64_t v77 = 19;
            break;
          case 20:
            unint64_t v77 = 20;
            break;
          case 21:
            unint64_t v77 = 21;
            break;
          case 22:
            unint64_t v77 = 22;
            break;
          case 23:
            unint64_t v77 = 23;
            break;
          case 24:
            unint64_t v77 = 24;
            break;
          case 25:
            unint64_t v77 = 25;
            break;
          case 26:
            unint64_t v77 = 26;
            break;
          case 27:
            unint64_t v77 = 27;
            break;
          case 28:
            unint64_t v77 = 28;
            break;
          case 29:
            unint64_t v77 = 29;
            break;
          case 30:
            unint64_t v77 = 30;
            break;
          case 31:
            unint64_t v77 = 31;
            break;
          case 32:
            unint64_t v77 = 32;
            break;
          case 33:
            unint64_t v77 = 33;
            break;
          case 34:
            unint64_t v77 = 34;
            break;
          case 35:
            unint64_t v77 = 35;
            break;
          case 36:
            unint64_t v77 = 36;
            break;
          case 37:
            unint64_t v77 = 37;
            break;
          case 38:
            unint64_t v77 = 38;
            break;
          case 39:
            unint64_t v77 = 39;
            break;
          case 40:
            unint64_t v77 = 40;
            break;
          case 41:
            unint64_t v77 = 41;
            break;
          case 42:
            unint64_t v77 = 42;
            break;
          case 43:
            unint64_t v77 = 43;
            break;
          case 44:
            unint64_t v77 = 44;
            break;
          case 45:
            unint64_t v77 = 45;
            break;
          case 46:
            unint64_t v77 = 46;
            break;
          case 47:
            unint64_t v77 = 47;
            break;
          case 48:
            unint64_t v77 = 48;
            break;
          case 49:
            unint64_t v77 = 49;
            break;
          case 50:
            unint64_t v77 = 50;
            break;
          case 51:
            unint64_t v77 = 51;
            break;
          default:
            (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v75, v101);
            unint64_t v77 = 2;
            break;
        }
        char v70 = v73 < v77;
        sub_100047750(v44);
      }
      else
      {
        uint64_t v79 = v106;
        uint64_t v80 = *(void (**)(char *, char *, uint64_t))(v106 + 32);
        uint64_t v81 = v96;
        uint64_t v82 = v101;
        v80(v96, v36, v101);
        uint64_t v83 = v95;
        v80(v95, v43, v82);
        if (static FLFollowUpInformation.== infix(_:_:)())
        {
          long long v84 = *(void (**)(char *, uint64_t))(v79 + 8);
          v84(v83, v82);
          v84(v81, v82);
LABEL_72:
          uint64_t v55 = v44;
LABEL_73:
          sub_100045F84(v55);
          char v70 = 0;
        }
        else
        {
          char v70 = static FLFollowUpInformation.< infix(_:_:)();
          uint64_t v89 = *(void (**)(char *, uint64_t))(v79 + 8);
          v89(v83, v82);
          v89(v81, v82);
LABEL_189:
          sub_100045F84(v44);
        }
      }
      return v70 & 1;
  }
}

uint64_t sub_100071764@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = MobileGestalt_get_ringerButtonCapability();
  *a1 = result;
  return result;
}

uint64_t sub_100071790@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = MobileGestalt_get_iPadCapability();
  *a1 = result;
  return result;
}

uint64_t sub_1000717BC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = MobileGestalt_get_isSimulator();
  *a1 = result;
  return result;
}

uint64_t sub_1000717E8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = MobileGestalt_get_deviceSupportsApplePencil();
  *a1 = result;
  return result;
}

uint64_t sub_100071814@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = MobileGestalt_get_assistantCapability();
  *a1 = result;
  return result;
}

uint64_t sub_100071840@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = MobileGestalt_get_accessibilityCapability();
  *a1 = result;
  return result;
}

uint64_t sub_10007186C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = MobileGestalt_get_bluetoothLECapability();
  *a1 = result;
  return result;
}

uint64_t sub_100071898@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = MobileGestalt_get_cellularDataCapability();
  *a1 = result;
  return result;
}

uint64_t sub_1000718C4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = MobileGestalt_get_personalHotspotCapability();
  *a1 = result;
  return result;
}

uint64_t sub_1000718F0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = MobileGestalt_get_bluetoothCapability();
  *a1 = result;
  return result;
}

uint64_t sub_10007191C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = MobileGestalt_get_wifiCapability();
  *a1 = result;
  return result;
}

uint64_t sub_100071948(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100046B9C(&qword_10015F908);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000719B4()
{
  uint64_t v1 = type metadata accessor for PrimarySettingsListItemViewType();
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for PrimarySettingsListItemModel();
  sub_100030350(v0 + *(int *)(v4 + 20), (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemViewType);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v9 = type metadata accessor for PrimarySettingsListFamilyLinkModel;
      goto LABEL_6;
    case 2u:
      uint64_t v10 = *(void **)v3;
      uint64_t v11 = *((void *)v3 + 1);
      uint64_t v5 = *((void *)v3 + 3);
      char v12 = v3[16];
      swift_bridgeObjectRetain();
      sub_100046F04(v10, v11, v12);
      swift_release();
      goto LABEL_10;
    case 3u:
    case 4u:
      return *(void *)v3;
    case 5u:
      uint64_t v5 = *((void *)v3 + 3);
      sub_100046F04(*(void **)v3, *((void *)v3 + 1), v3[16]);
      return v5;
    case 6u:
      uint64_t v13 = *(void **)v3;
      uint64_t v14 = *((void *)v3 + 1);
      uint64_t v5 = *((void *)v3 + 3);
      char v15 = v3[16];
      swift_bridgeObjectRetain();
      sub_100046F04(v13, v14, v15);
      goto LABEL_10;
    case 7u:
    case 8u:
      uint64_t v6 = *(void **)v3;
      uint64_t v7 = *((void *)v3 + 1);
      uint64_t v5 = *((void *)v3 + 3);
      char v8 = v3[16];
      swift_bridgeObjectRetain();
      sub_100046F04(v6, v7, v8);
      swift_bridgeObjectRelease();
LABEL_10:
      swift_bridgeObjectRelease();
      break;
    case 9u:
      uint64_t v5 = *((void *)v3 + 3);
      sub_10006EB80(*(void **)v3, *((void *)v3 + 1), v3[16]);
      swift_bridgeObjectRelease();
      break;
    case 0xAu:
      uint64_t v5 = *((void *)v3 + 3);
      sub_10006EB80(*(void **)v3, *((void *)v3 + 1), v3[16]);
      break;
    default:
      uint64_t v9 = type metadata accessor for PrimarySettingsListItemViewType;
LABEL_6:
      sub_100072588((uint64_t)v3, (uint64_t (*)(void))v9);
      uint64_t v5 = 0;
      break;
  }
  return v5;
}

BOOL sub_100071BE4()
{
  return !sub_100071CE4();
}

BOOL sub_100071C10()
{
  return !sub_100071CE4();
}

BOOL sub_100071C30()
{
  return sub_100071CE4();
}

unint64_t sub_100071C40()
{
  v0._uint64_t countAndFlagsBits = sub_100048BDC();
  String.append(_:)(v0);
  swift_bridgeObjectRelease();
  return 0xD00000000000001DLL;
}

uint64_t sub_100071C9C()
{
  return sub_100069810(&qword_10015F918, (void (*)(uint64_t))type metadata accessor for PrimarySettingsListItemModel);
}

BOOL sub_100071CE4()
{
  sub_1000719B4();
  uint64_t v1 = v0;
  sub_1000719B4();
  if (v1)
  {
    if (v2)
    {
      sub_100030C58();
      uint64_t v3 = StringProtocol.localizedStandardCompare<A>(_:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v3 == -1;
    }
    else
    {
      swift_bridgeObjectRelease();
      return 1;
    }
  }
  else
  {
    if (v2) {
      swift_bridgeObjectRelease();
    }
    return 0;
  }
}

void *sub_100071E70(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100072588((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
    uint64_t v6 = type metadata accessor for PrimarySettingsListItemIdentifier();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
        uint64_t v7 = type metadata accessor for FLFollowUpInformation();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        goto LABEL_7;
      case 2u:
        uint64_t v8 = type metadata accessor for FLFollowUpInformation();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
        uint64_t v9 = *(int *)(sub_100046B9C(&qword_10015F7F8) + 48);
        uint64_t v10 = (void *)((char *)a1 + v9);
        uint64_t v11 = (void *)((char *)a2 + v9);
        *uint64_t v10 = *v11;
        v10[1] = v11[1];
        swift_bridgeObjectRetain();
        goto LABEL_7;
      case 3u:
      case 4u:
      case 5u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
LABEL_7:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
        break;
    }
    uint64_t v12 = *(int *)(a3 + 20);
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    sub_100072588((uint64_t)a1 + v12, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemViewType);
    type metadata accessor for PrimarySettingsListItemViewType();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v17 = type metadata accessor for FamilyRowStatus();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v13, v14, v17);
        uint64_t v18 = *(int *)(type metadata accessor for PrimarySettingsListFamilyLinkModel() + 20);
        uint64_t v19 = &v13[v18];
        uint64_t v20 = &v14[v18];
        *(void *)uint64_t v19 = *(void *)v20;
        *((void *)v19 + 1) = *((void *)v20 + 1);
        swift_bridgeObjectRetain();
        break;
      case 2u:
        id v21 = *(id *)v14;
        uint64_t v22 = *((void *)v14 + 1);
        char v23 = v14[16];
        sub_100047728(*(id *)v14, v22, v23);
        *(void *)uint64_t v13 = v21;
        *((void *)v13 + 1) = v22;
        v13[16] = v23;
        *((void *)v13 + 3) = *((void *)v14 + 3);
        *((void *)v13 + 4) = *((void *)v14 + 4);
        v13[40] = v14[40];
        v13[41] = v14[41];
        uint64_t v24 = *((void *)v14 + 6);
        uint64_t v25 = *((void *)v14 + 7);
        *((void *)v13 + 6) = v24;
        *((void *)v13 + 7) = v25;
        swift_bridgeObjectRetain();
        swift_retain();
        break;
      case 3u:
        *(void *)uint64_t v13 = *(void *)v14;
        *((void *)v13 + 1) = *((void *)v14 + 1);
        v13[16] = v14[16];
        v13[17] = v14[17];
        swift_bridgeObjectRetain();
        break;
      case 4u:
        *(void *)uint64_t v13 = *(void *)v14;
        *((void *)v13 + 1) = *((void *)v14 + 1);
        *((void *)v13 + 2) = *((void *)v14 + 2);
        unsigned char v13[24] = v14[24];
        v13[25] = v14[25];
        swift_bridgeObjectRetain();
        break;
      case 5u:
        id v26 = *(id *)v14;
        uint64_t v27 = *((void *)v14 + 1);
        char v28 = v14[16];
        sub_100047728(*(id *)v14, v27, v28);
        *(void *)uint64_t v13 = v26;
        *((void *)v13 + 1) = v27;
        v13[16] = v28;
        *((void *)v13 + 3) = *((void *)v14 + 3);
        *((void *)v13 + 4) = *((void *)v14 + 4);
        v13[40] = v14[40];
        v13[41] = v14[41];
        swift_bridgeObjectRetain();
        break;
      case 6u:
        id v29 = *(id *)v14;
        uint64_t v30 = *((void *)v14 + 1);
        char v31 = v14[16];
        sub_100047728(*(id *)v14, v30, v31);
        *(void *)uint64_t v13 = v29;
        *((void *)v13 + 1) = v30;
        v13[16] = v31;
        *((void *)v13 + 3) = *((void *)v14 + 3);
        *((void *)v13 + 4) = *((void *)v14 + 4);
        *((void *)v13 + 5) = *((void *)v14 + 5);
        v13[48] = v14[48];
        v13[49] = v14[49];
        swift_bridgeObjectRetain();
        break;
      case 7u:
      case 8u:
        id v32 = *(id *)v14;
        uint64_t v33 = *((void *)v14 + 1);
        char v34 = v14[16];
        sub_100047728(*(id *)v14, v33, v34);
        *(void *)uint64_t v13 = v32;
        *((void *)v13 + 1) = v33;
        v13[16] = v34;
        *((void *)v13 + 3) = *((void *)v14 + 3);
        *((void *)v13 + 4) = *((void *)v14 + 4);
        *((void *)v13 + 5) = *((void *)v14 + 5);
        *((void *)v13 + 6) = *((void *)v14 + 6);
        v13[56] = v14[56];
        v13[57] = v14[57];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 9u:
        int v35 = v14[16];
        if (v35 == 255)
        {
          long long v43 = *(_OWORD *)v14;
          v13[16] = v14[16];
          *(_OWORD *)uint64_t v13 = v43;
        }
        else
        {
          id v36 = *(id *)v14;
          uint64_t v37 = *((void *)v14 + 1);
          sub_100047728(*(id *)v14, v37, v14[16]);
          *(void *)uint64_t v13 = v36;
          *((void *)v13 + 1) = v37;
          v13[16] = v35;
        }
        *((void *)v13 + 3) = *((void *)v14 + 3);
        *((void *)v13 + 4) = *((void *)v14 + 4);
        *((void *)v13 + 5) = *((void *)v14 + 5);
        *((void *)v13 + 6) = *((void *)v14 + 6);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 0xAu:
        int v38 = v14[16];
        if (v38 == 255)
        {
          long long v44 = *(_OWORD *)v14;
          v13[16] = v14[16];
          *(_OWORD *)uint64_t v13 = v44;
        }
        else
        {
          id v39 = *(id *)v14;
          uint64_t v40 = *((void *)v14 + 1);
          sub_100047728(*(id *)v14, v40, v14[16]);
          *(void *)uint64_t v13 = v39;
          *((void *)v13 + 1) = v40;
          v13[16] = v38;
        }
        *((void *)v13 + 3) = *((void *)v14 + 3);
        *((void *)v13 + 4) = *((void *)v14 + 4);
        v13[40] = v14[40];
        swift_bridgeObjectRetain();
        break;
      default:
        if (*((void *)v14 + 1))
        {
          *(void *)uint64_t v13 = *(void *)v14;
          *((void *)v13 + 1) = *((void *)v14 + 1);
          *((void *)v13 + 2) = *((void *)v14 + 2);
          *((void *)v13 + 3) = *((void *)v14 + 3);
          unsigned char v13[32] = v14[32];
          char v15 = (void *)*((void *)v14 + 5);
          *((void *)v13 + 5) = v15;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v16 = v15;
        }
        else
        {
          long long v41 = *(_OWORD *)v14;
          long long v42 = *((_OWORD *)v14 + 2);
          *((_OWORD *)v13 + 1) = *((_OWORD *)v14 + 1);
          *((_OWORD *)v13 + 2) = v42;
          *(_OWORD *)uint64_t v13 = v41;
        }
        v13[48] = v14[48];
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100072588(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

char *sub_1000725E8(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for PrimarySettingsListItemIdentifier();
  unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v9 = type metadata accessor for FLFollowUpInformation();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
    uint64_t v10 = sub_100046B9C(&qword_10015F7F8);
    *(_OWORD *)&a1[*(int *)(v10 + 48)] = *(_OWORD *)&a2[*(int *)(v10 + 48)];
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload > 1)
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    uint64_t v8 = type metadata accessor for FLFollowUpInformation();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v11 = *(int *)(a3 + 20);
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  uint64_t v14 = type metadata accessor for PrimarySettingsListItemViewType();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = type metadata accessor for FamilyRowStatus();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v12, v13, v15);
    uint64_t v16 = type metadata accessor for PrimarySettingsListFamilyLinkModel();
    *(_OWORD *)&v12[*(int *)(v16 + 20)] = *(_OWORD *)&v13[*(int *)(v16 + 20)];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
  }
  return a1;
}

char *sub_100072820(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100072588((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
    uint64_t v6 = type metadata accessor for PrimarySettingsListItemIdentifier();
    unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v9 = type metadata accessor for FLFollowUpInformation();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
      uint64_t v10 = sub_100046B9C(&qword_10015F7F8);
      *(_OWORD *)&a1[*(int *)(v10 + 48)] = *(_OWORD *)&a2[*(int *)(v10 + 48)];
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload > 1)
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    else
    {
      uint64_t v8 = type metadata accessor for FLFollowUpInformation();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
    uint64_t v11 = *(int *)(a3 + 20);
    uint64_t v12 = &a1[v11];
    uint64_t v13 = &a2[v11];
    sub_100072588((uint64_t)&a1[v11], (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemViewType);
    uint64_t v14 = type metadata accessor for PrimarySettingsListItemViewType();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v15 = type metadata accessor for FamilyRowStatus();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v12, v13, v15);
      uint64_t v16 = type metadata accessor for PrimarySettingsListFamilyLinkModel();
      *(_OWORD *)&v12[*(int *)(v16 + 20)] = *(_OWORD *)&v13[*(int *)(v16 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100072A98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for PrimarySettingsListItemIdentifier();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = type metadata accessor for PrimarySettingsListItemViewType();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_100072B90(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for PrimarySettingsListItemIdentifier();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = type metadata accessor for PrimarySettingsListItemViewType();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t sub_100072C94()
{
  type metadata accessor for FamilyRowStatus();
  sub_100073098();
  dispatch thunk of RawRepresentable.rawValue.getter();
  dispatch thunk of RawRepresentable.rawValue.getter();
  if (v5 == v3 && v6 == v4) {
    char v1 = 1;
  }
  else {
    char v1 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1 & 1;
}

uint64_t sub_100072D48(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xE900000000000068;
  uint64_t v3 = 0x746F6F7465756C62;
  uint64_t v4 = a1;
  uint64_t v5 = 0x746F6F7465756C62;
  unint64_t v6 = 0xE900000000000068;
  switch(v4)
  {
    case 1:
      unint64_t v6 = 0xE400000000000000;
      uint64_t v5 = 1768319351;
      break;
    case 2:
      unint64_t v6 = 0xE800000000000000;
      uint64_t v5 = 0x72616C756C6C6563;
      break;
    case 3:
      unint64_t v6 = 0xE700000000000000;
      uint64_t v5 = 0x79726574746162;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xE400000000000000;
      if (v5 == 1768319351) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v2 = 0xE800000000000000;
      uint64_t v3 = 0x72616C756C6C6563;
      goto LABEL_9;
    case 3:
      unint64_t v2 = 0xE700000000000000;
      if (v5 == 0x79726574746162) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v3) {
        goto LABEL_14;
      }
LABEL_12:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_100072F58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100046B9C(&qword_10015F9B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100072FC0(uint64_t a1)
{
  return a1;
}

uint64_t sub_100072FF4(uint64_t a1)
{
  return a1;
}

uint64_t sub_100073034(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PrimarySettingsListFamilyLinkModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_100073098()
{
  unint64_t result = qword_10015F9C0;
  if (!qword_10015F9C0)
  {
    type metadata accessor for FamilyRowStatus();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015F9C0);
  }
  return result;
}

char *sub_1000730F0(char *a1, char **a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *(void *)a1 = *a2;
    a1 = &v10[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v11 = type metadata accessor for FamilyRowStatus();
        (*(void (**)(char *, char **, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
        uint64_t v12 = *(int *)(type metadata accessor for PrimarySettingsListFamilyLinkModel() + 20);
        uint64_t v13 = &a1[v12];
        uint64_t v14 = (char **)((char *)a2 + v12);
        uint64_t v15 = v14[1];
        *(void *)uint64_t v13 = *v14;
        *((void *)v13 + 1) = v15;
        swift_bridgeObjectRetain();
        break;
      case 2u:
        uint64_t v16 = *a2;
        uint64_t v17 = (uint64_t)a2[1];
        char v18 = *((unsigned char *)a2 + 16);
        sub_100047728(*a2, v17, v18);
        *(void *)a1 = v16;
        *((void *)a1 + 1) = v17;
        a1[16] = v18;
        uint64_t v19 = a2[4];
        *((void *)a1 + 3) = a2[3];
        *((void *)a1 + 4) = v19;
        *((_WORD *)a1 + 20) = *((_WORD *)a2 + 20);
        uint64_t v20 = a2[6];
        id v21 = a2[7];
        *((void *)a1 + 6) = v20;
        *((void *)a1 + 7) = v21;
        swift_bridgeObjectRetain();
        swift_retain();
        break;
      case 3u:
        uint64_t v22 = a2[1];
        *(void *)a1 = *a2;
        *((void *)a1 + 1) = v22;
        *((_WORD *)a1 + 8) = *((_WORD *)a2 + 8);
        swift_bridgeObjectRetain();
        break;
      case 4u:
        char v23 = a2[1];
        *(void *)a1 = *a2;
        *((void *)a1 + 1) = v23;
        *((void *)a1 + 2) = a2[2];
        *((_WORD *)a1 + 12) = *((_WORD *)a2 + 12);
        swift_bridgeObjectRetain();
        break;
      case 5u:
        uint64_t v24 = *a2;
        uint64_t v25 = (uint64_t)a2[1];
        char v26 = *((unsigned char *)a2 + 16);
        sub_100047728(*a2, v25, v26);
        *(void *)a1 = v24;
        *((void *)a1 + 1) = v25;
        a1[16] = v26;
        uint64_t v27 = a2[4];
        *((void *)a1 + 3) = a2[3];
        *((void *)a1 + 4) = v27;
        *((_WORD *)a1 + 20) = *((_WORD *)a2 + 20);
        swift_bridgeObjectRetain();
        break;
      case 6u:
        char v28 = *a2;
        uint64_t v29 = (uint64_t)a2[1];
        char v30 = *((unsigned char *)a2 + 16);
        sub_100047728(*a2, v29, v30);
        *(void *)a1 = v28;
        *((void *)a1 + 1) = v29;
        a1[16] = v30;
        char v31 = a2[4];
        *((void *)a1 + 3) = a2[3];
        *((void *)a1 + 4) = v31;
        *((void *)a1 + 5) = a2[5];
        *((_WORD *)a1 + 24) = *((_WORD *)a2 + 24);
        swift_bridgeObjectRetain();
        break;
      case 7u:
      case 8u:
        id v32 = *a2;
        uint64_t v33 = (uint64_t)a2[1];
        char v34 = *((unsigned char *)a2 + 16);
        sub_100047728(*a2, v33, v34);
        *(void *)a1 = v32;
        *((void *)a1 + 1) = v33;
        a1[16] = v34;
        int v35 = a2[4];
        *((void *)a1 + 3) = a2[3];
        *((void *)a1 + 4) = v35;
        id v36 = a2[6];
        *((void *)a1 + 5) = a2[5];
        *((void *)a1 + 6) = v36;
        *((_WORD *)a1 + 28) = *((_WORD *)a2 + 28);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 9u:
        int v37 = *((unsigned __int8 *)a2 + 16);
        if (v37 == 255)
        {
          *(_OWORD *)a1 = *(_OWORD *)a2;
          a1[16] = *((unsigned char *)a2 + 16);
        }
        else
        {
          int v38 = *a2;
          uint64_t v39 = (uint64_t)a2[1];
          sub_100047728(*a2, v39, *((unsigned char *)a2 + 16));
          *(void *)a1 = v38;
          *((void *)a1 + 1) = v39;
          a1[16] = v37;
        }
        long long v44 = a2[4];
        *((void *)a1 + 3) = a2[3];
        *((void *)a1 + 4) = v44;
        uint64_t v45 = a2[5];
        uint64_t v46 = a2[6];
        *((void *)a1 + 5) = v45;
        *((void *)a1 + 6) = v46;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 0xAu:
        int v40 = *((unsigned __int8 *)a2 + 16);
        if (v40 == 255)
        {
          *(_OWORD *)a1 = *(_OWORD *)a2;
          a1[16] = *((unsigned char *)a2 + 16);
        }
        else
        {
          long long v41 = *a2;
          uint64_t v42 = (uint64_t)a2[1];
          sub_100047728(*a2, v42, *((unsigned char *)a2 + 16));
          *(void *)a1 = v41;
          *((void *)a1 + 1) = v42;
          a1[16] = v40;
        }
        BOOL v47 = a2[4];
        *((void *)a1 + 3) = a2[3];
        *((void *)a1 + 4) = v47;
        a1[40] = *((unsigned char *)a2 + 40);
        swift_bridgeObjectRetain();
        break;
      default:
        unint64_t v6 = a2[1];
        if (v6)
        {
          *(void *)a1 = *a2;
          *((void *)a1 + 1) = v6;
          char v7 = a2[3];
          *((void *)a1 + 2) = a2[2];
          *((void *)a1 + 3) = v7;
          a1[32] = *((unsigned char *)a2 + 32);
          uint64_t v8 = a2[5];
          *((void *)a1 + 5) = v8;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v9 = v8;
        }
        else
        {
          long long v43 = *((_OWORD *)a2 + 1);
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *((_OWORD *)a1 + 1) = v43;
          *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
        }
        a1[48] = *((unsigned char *)a2 + 48);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1000735A4(uint64_t a1, long long *a2)
{
  if ((long long *)a1 != a2)
  {
    sub_10003C668(a1, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemViewType);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v6 = type metadata accessor for FamilyRowStatus();
        (*(void (**)(uint64_t, long long *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        uint64_t v7 = *(int *)(type metadata accessor for PrimarySettingsListFamilyLinkModel() + 20);
        uint64_t v8 = (void *)(a1 + v7);
        uint64_t v9 = (void *)((char *)a2 + v7);
        void *v8 = *v9;
        v8[1] = v9[1];
        swift_bridgeObjectRetain();
        break;
      case 2u:
        id v10 = *(id *)a2;
        uint64_t v11 = *((void *)a2 + 1);
        char v12 = *((unsigned char *)a2 + 16);
        sub_100047728(*(id *)a2, v11, v12);
        *(void *)a1 = v10;
        *(void *)(a1 + 8) = v11;
        *(unsigned char *)(a1 + 16) = v12;
        *(void *)(a1 + 24) = *((void *)a2 + 3);
        *(void *)(a1 + 32) = *((void *)a2 + 4);
        *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
        *(unsigned char *)(a1 + 41) = *((unsigned char *)a2 + 41);
        uint64_t v13 = *((void *)a2 + 6);
        uint64_t v14 = *((void *)a2 + 7);
        *(void *)(a1 + 48) = v13;
        *(void *)(a1 + 56) = v14;
        swift_bridgeObjectRetain();
        swift_retain();
        break;
      case 3u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *((void *)a2 + 1);
        *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
        *(unsigned char *)(a1 + 17) = *((unsigned char *)a2 + 17);
        swift_bridgeObjectRetain();
        break;
      case 4u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *((void *)a2 + 1);
        *(void *)(a1 + 16) = *((void *)a2 + 2);
        *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
        *(unsigned char *)(a1 + 25) = *((unsigned char *)a2 + 25);
        swift_bridgeObjectRetain();
        break;
      case 5u:
        id v15 = *(id *)a2;
        uint64_t v16 = *((void *)a2 + 1);
        char v17 = *((unsigned char *)a2 + 16);
        sub_100047728(*(id *)a2, v16, v17);
        *(void *)a1 = v15;
        *(void *)(a1 + 8) = v16;
        *(unsigned char *)(a1 + 16) = v17;
        *(void *)(a1 + 24) = *((void *)a2 + 3);
        *(void *)(a1 + 32) = *((void *)a2 + 4);
        *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
        *(unsigned char *)(a1 + 41) = *((unsigned char *)a2 + 41);
        swift_bridgeObjectRetain();
        break;
      case 6u:
        id v18 = *(id *)a2;
        uint64_t v19 = *((void *)a2 + 1);
        char v20 = *((unsigned char *)a2 + 16);
        sub_100047728(*(id *)a2, v19, v20);
        *(void *)a1 = v18;
        *(void *)(a1 + 8) = v19;
        *(unsigned char *)(a1 + 16) = v20;
        *(void *)(a1 + 24) = *((void *)a2 + 3);
        *(void *)(a1 + 32) = *((void *)a2 + 4);
        *(void *)(a1 + 40) = *((void *)a2 + 5);
        *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
        *(unsigned char *)(a1 + 49) = *((unsigned char *)a2 + 49);
        swift_bridgeObjectRetain();
        break;
      case 7u:
      case 8u:
        id v21 = *(id *)a2;
        uint64_t v22 = *((void *)a2 + 1);
        char v23 = *((unsigned char *)a2 + 16);
        sub_100047728(*(id *)a2, v22, v23);
        *(void *)a1 = v21;
        *(void *)(a1 + 8) = v22;
        *(unsigned char *)(a1 + 16) = v23;
        *(void *)(a1 + 24) = *((void *)a2 + 3);
        *(void *)(a1 + 32) = *((void *)a2 + 4);
        *(void *)(a1 + 40) = *((void *)a2 + 5);
        *(void *)(a1 + 48) = *((void *)a2 + 6);
        *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
        *(unsigned char *)(a1 + 57) = *((unsigned char *)a2 + 57);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 9u:
        int v24 = *((unsigned __int8 *)a2 + 16);
        if (v24 == 255)
        {
          long long v32 = *a2;
          *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
          *(_OWORD *)a1 = v32;
        }
        else
        {
          id v25 = *(id *)a2;
          uint64_t v26 = *((void *)a2 + 1);
          sub_100047728(*(id *)a2, v26, *((unsigned char *)a2 + 16));
          *(void *)a1 = v25;
          *(void *)(a1 + 8) = v26;
          *(unsigned char *)(a1 + 16) = v24;
        }
        *(void *)(a1 + 24) = *((void *)a2 + 3);
        *(void *)(a1 + 32) = *((void *)a2 + 4);
        *(void *)(a1 + 40) = *((void *)a2 + 5);
        *(void *)(a1 + 48) = *((void *)a2 + 6);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 0xAu:
        int v27 = *((unsigned __int8 *)a2 + 16);
        if (v27 == 255)
        {
          long long v33 = *a2;
          *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
          *(_OWORD *)a1 = v33;
        }
        else
        {
          id v28 = *(id *)a2;
          uint64_t v29 = *((void *)a2 + 1);
          sub_100047728(*(id *)a2, v29, *((unsigned char *)a2 + 16));
          *(void *)a1 = v28;
          *(void *)(a1 + 8) = v29;
          *(unsigned char *)(a1 + 16) = v27;
        }
        *(void *)(a1 + 24) = *((void *)a2 + 3);
        *(void *)(a1 + 32) = *((void *)a2 + 4);
        *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
        swift_bridgeObjectRetain();
        break;
      default:
        if (*((void *)a2 + 1))
        {
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = *((void *)a2 + 1);
          *(void *)(a1 + 16) = *((void *)a2 + 2);
          *(void *)(a1 + 24) = *((void *)a2 + 3);
          *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
          uint64_t v4 = (void *)*((void *)a2 + 5);
          *(void *)(a1 + 40) = v4;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v5 = v4;
        }
        else
        {
          long long v30 = *a2;
          long long v31 = a2[2];
          *(_OWORD *)(a1 + 16) = a2[1];
          *(_OWORD *)(a1 + 32) = v31;
          *(_OWORD *)a1 = v30;
        }
        *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_100073A84(char *a1, char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for FamilyRowStatus();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    uint64_t v7 = type metadata accessor for PrimarySettingsListFamilyLinkModel();
    *(_OWORD *)&a1[*(int *)(v7 + 20)] = *(_OWORD *)&a2[*(int *)(v7 + 20)];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t assignWithTake for PrimarySettingsListLinkModel(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 16);
  id v5 = *(void **)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v7 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v4;
  sub_100046F04(v5, v6, v7);
  uint64_t v8 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v8;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  return a1;
}

uint64_t getEnumTagSinglePayload for PrimarySettingsListLinkModel(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 42)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PrimarySettingsListLinkModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 40) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 42) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 42) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

BOOL sub_100073C5C(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  v5[0] = *a1;
  v5[1] = v2;
  v6[0] = a1[2];
  *(_OWORD *)((char *)v6 + 10) = *(_OWORD *)((char *)a1 + 42);
  long long v3 = a2[1];
  v7[0] = *a2;
  v7[1] = v3;
  v8[0] = a2[2];
  *(_OWORD *)((char *)v8 + 10) = *(_OWORD *)((char *)a2 + 42);
  return sub_100073CB8((uint64_t)v5, (uint64_t)v7);
}

BOOL sub_100073CB8(uint64_t a1, uint64_t a2)
{
  sub_10003CA38(a1, (uint64_t)v16);
  sub_10003CA38(a2, (uint64_t)v15);
  sub_10003CA38((uint64_t)v16, (uint64_t)&v17);
  switch(v19)
  {
    case 1:
      uint64_t v5 = v17;
      uint64_t v6 = v18;
      sub_10003CA38((uint64_t)v15, (uint64_t)&v20);
      if (v21 == 1) {
        goto LABEL_8;
      }
      return 0;
    case 2:
      uint64_t v5 = v17;
      uint64_t v6 = v18;
      sub_10003CA38((uint64_t)v15, (uint64_t)&v20);
      if (v21 != 2) {
        return 0;
      }
LABEL_8:
      if (v5 != (void)v20 || v6 != *((void *)&v20 + 1))
      {
        char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
        BOOL result = 0;
        if ((v8 & 1) == 0) {
          return result;
        }
      }
LABEL_16:
      if (*(void *)(a1 + 24) != *(void *)(a2 + 24) || *(void *)(a1 + 32) != *(void *)(a2 + 32))
      {
        char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
        BOOL result = 0;
        if ((v10 & 1) == 0) {
          return result;
        }
      }
      if (*(void *)(a1 + 40) != *(void *)(a2 + 40) || *(void *)(a1 + 48) != *(void *)(a2 + 48))
      {
        char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
        BOOL result = 0;
        if ((v11 & 1) == 0) {
          return result;
        }
      }
      if ((*(unsigned __int8 *)(a1 + 56) ^ *(unsigned __int8 *)(a2 + 56))) {
        return 0;
      }
      int v12 = *(unsigned __int8 *)(a1 + 57);
      int v13 = *(unsigned __int8 *)(a2 + 57);
      if (v12 != 2)
      {
        BOOL v14 = (v12 & 1) == 0;
        return v13 != 2 && ((v14 ^ v13) & 1) != 0;
      }
      return v13 == 2;
    case 3:
      sub_10003CA38((uint64_t)v15, (uint64_t)&v20);
      if (v21 == 3 && v20 == 0) {
        goto LABEL_16;
      }
      return 0;
    default:
      sub_10003CA38((uint64_t)v15, (uint64_t)&v20);
      if (v21) {
        return 0;
      }
      sub_10006E244();
      sub_10006E284((uint64_t)v16);
      sub_10006E284((uint64_t)v15);
      char v4 = static NSObject.== infix(_:_:)();
      sub_10003C634((uint64_t)v15);
      sub_10003C634((uint64_t)v16);
      if ((v4 & 1) == 0) {
        return 0;
      }
      goto LABEL_16;
  }
}

uint64_t assignWithTake for PrimarySettingsListValueLinkModel(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void **)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v7 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v4;
  sub_100046F04(v5, v6, v7);
  uint64_t v8 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v9;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  return a1;
}

uint64_t getEnumTagSinglePayload for PrimarySettingsListValueLinkModel(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 58)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PrimarySettingsListValueLinkModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 56) = 0;
    *(void *)BOOL result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 58) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 58) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PrimarySettingsListSubtitleLinkModel()
{
  return &type metadata for PrimarySettingsListSubtitleLinkModel;
}

uint64_t assignWithCopy for PrimarySettingsListToggleModel(uint64_t a1, uint64_t a2)
{
  id v4 = *(id *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  char v6 = *(unsigned char *)(a2 + 16);
  sub_100047728(*(id *)a2, v5, v6);
  char v7 = *(void **)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  char v9 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v6;
  sub_100046F04(v7, v8, v9);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  uint64_t v10 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v10;
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for PrimarySettingsListToggleModel(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for PrimarySettingsListToggleModel(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void **)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v7 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v4;
  sub_100046F04(v5, v6, v7);
  uint64_t v8 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v8;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for PrimarySettingsListToggleModel(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PrimarySettingsListToggleModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_1000741F4()
{
  uint64_t v1 = type metadata accessor for PrimarySettingsListItemIdentifier();
  __chkstk_darwin(v1 - 8);
  long long v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[0] = _typeName(_:qualified:)();
  v9[1] = v4;
  v5._uint64_t countAndFlagsBits = 0x203A6469207B20;
  v5._object = (void *)0xE700000000000000;
  String.append(_:)(v5);
  sub_100046BE0(v0 + OBJC_IVAR____TtC11SettingsApp30CameraSettingsListItemProvider_id, (uint64_t)v3);
  v6._uint64_t countAndFlagsBits = sub_100048BDC();
  String.append(_:)(v6);
  swift_bridgeObjectRelease();
  sub_100045F84((uint64_t)v3);
  v7._uint64_t countAndFlagsBits = 32032;
  v7._object = (void *)0xE200000000000000;
  String.append(_:)(v7);
  return v9[0];
}

uint64_t sub_100074304()
{
  uint64_t v4 = _typeName(_:qualified:)();
  v0._uint64_t countAndFlagsBits = 0x203A6469207B20;
  v0._object = (void *)0xE700000000000000;
  String.append(_:)(v0);
  v1._uint64_t countAndFlagsBits = sub_100048BDC();
  String.append(_:)(v1);
  swift_bridgeObjectRelease();
  v2._uint64_t countAndFlagsBits = 32032;
  v2._object = (void *)0xE200000000000000;
  String.append(_:)(v2);
  return v4;
}

uint64_t sub_1000743BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PrimarySettingsListItemIdentifier();
  __chkstk_darwin(v4 - 8);
  Swift::String v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getDynamicType();
  v12[0] = _typeName(_:qualified:)();
  v12[1] = v7;
  v8._uint64_t countAndFlagsBits = 0x203A6469207B20;
  v8._object = (void *)0xE700000000000000;
  String.append(_:)(v8);
  (*(void (**)(uint64_t, uint64_t))(a2 + 8))(a1, a2);
  v9._uint64_t countAndFlagsBits = sub_100048BDC();
  String.append(_:)(v9);
  swift_bridgeObjectRelease();
  sub_100045F84((uint64_t)v6);
  v10._uint64_t countAndFlagsBits = 32032;
  v10._object = (void *)0xE200000000000000;
  String.append(_:)(v10);
  return v12[0];
}

uint64_t sub_1000744D0()
{
  return sub_100074304();
}

void sub_1000744FC(void *a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_100074520()
{
  return sub_100074304();
}

void sub_10007454C(void *a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_100074570()
{
  return sub_1000741F4();
}

uint64_t sub_100074598()
{
  type metadata accessor for PrimarySettingsListSectionModel();
  uint64_t v8 = _typeName(_:qualified:)();
  v1._uint64_t countAndFlagsBits = 0x203A6469207B20;
  v1._object = (void *)0xE700000000000000;
  String.append(_:)(v1);
  uint64_t v2 = *(void *)v0;
  long long v3 = *(void **)(v0 + 8);
  char v4 = *(unsigned char *)(v0 + 16);
  sub_10003DA14(*(void *)v0, (uint64_t)v3, v4);
  v5._uint64_t countAndFlagsBits = sub_100058B68(v2, v3, v4);
  String.append(_:)(v5);
  swift_bridgeObjectRelease();
  sub_10003E2B4(v2, (uint64_t)v3, v4);
  v6._uint64_t countAndFlagsBits = 32032;
  v6._object = (void *)0xE200000000000000;
  String.append(_:)(v6);
  return v8;
}

uint64_t sub_100074660@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for PrimarySettingsListSectionModel();
  long long v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(a1, 1, 1, v2);
}

uint64_t sub_1000746D0@<X0>(uint64_t a1@<X8>)
{
  return sub_100074660(a1);
}

uint64_t assignWithCopy for PrimarySettingsListSectionIdentifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_10003DA14(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_10003E2B4(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for PrimarySettingsListSectionIdentifier(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_10003E2B4(v4, v5, v6);
  return a1;
}

uint64_t sub_100074788(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 1u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_1000747A0(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)__n128 result = a2 - 2;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

Swift::Int sub_1000747FC()
{
  uint64_t v1 = *(void *)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  char v3 = *(unsigned char *)(v0 + 16);
  Hasher.init(_seed:)();
  sub_10003E3B0((uint64_t)v5, v1, v2, v3);
  return Hasher._finalize()();
}

void sub_100074858(uint64_t a1)
{
  sub_10003E3B0(a1, *(void *)v1, *(void *)(v1 + 8), *(unsigned char *)(v1 + 16));
}

uint64_t sub_100074864(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100063608(a1, a2, a3, a4, (uint64_t (*)(void, void, void, void, void, void))sub_10007499C);
}

BOOL sub_10007487C(uint64_t a1, uint64_t a2)
{
  return (sub_10007499C(*(void *)a2, *(void *)(a2 + 8), *(unsigned char *)(a2 + 16), *(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16)) & 1) == 0;
}

BOOL sub_1000748B4(uint64_t a1, uint64_t a2)
{
  return (sub_10007499C(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(unsigned char *)(a2 + 16)) & 1) == 0;
}

uint64_t sub_1000748EC(uint64_t a1, uint64_t a2)
{
  return sub_10007499C(*(void *)a2, *(void *)(a2 + 8), *(unsigned char *)(a2 + 16), *(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

unint64_t sub_10007494C()
{
  return sub_100058B68(*(void *)v0, *(void **)(v0 + 8), *(unsigned char *)(v0 + 16));
}

uint64_t sub_10007499C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if (!a3)
  {
    if (a6)
    {
      unint64_t v6 = 5;
      goto LABEL_7;
    }
LABEL_14:
    if (a1 == a4 && a2 == a5) {
      return 0;
    }
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t result = 0;
    if ((v8 & 1) == 0)
    {
      return _stringCompareWithSmolCheck(_:_:expecting:)();
    }
    return result;
  }
  if (a3 != 1)
  {
    switch(a1)
    {
      case 1:
        if (a6 != 2)
        {
          unint64_t v6 = 1;
          goto LABEL_7;
        }
        unint64_t v6 = 1;
        if (a4 == 1) {
          goto LABEL_69;
        }
        goto LABEL_72;
      case 2:
        if (a6 != 2)
        {
          unint64_t v6 = 2;
          goto LABEL_7;
        }
        unint64_t v6 = 2;
        if (a4 == 2) {
          goto LABEL_69;
        }
        goto LABEL_72;
      case 3:
        if (a6 != 2)
        {
          unint64_t v6 = 3;
          goto LABEL_7;
        }
        unint64_t v6 = 3;
        if (a4 == 3) {
          goto LABEL_69;
        }
        goto LABEL_72;
      case 4:
        if (a6 != 2)
        {
          unint64_t v6 = 4;
          goto LABEL_7;
        }
        unint64_t v6 = 4;
        if (a4 == 4) {
          goto LABEL_69;
        }
        goto LABEL_72;
      case 5:
        if (a6 != 2)
        {
          unint64_t v6 = 7;
          goto LABEL_7;
        }
        unint64_t v6 = 7;
        if (a4 == 5) {
          goto LABEL_69;
        }
        goto LABEL_72;
      case 6:
        if (a6 != 2)
        {
          unint64_t v6 = 8;
          goto LABEL_7;
        }
        unint64_t v6 = 8;
        if (a4 == 6) {
          goto LABEL_69;
        }
        goto LABEL_72;
      case 7:
        if (a6 != 2)
        {
          unint64_t v6 = 9;
          goto LABEL_7;
        }
        unint64_t v6 = 9;
        if (a4 == 7) {
          goto LABEL_69;
        }
        goto LABEL_72;
      case 8:
        if (a6 != 2)
        {
          unint64_t v6 = 10;
          goto LABEL_7;
        }
        unint64_t v6 = 10;
        if (a4 == 8) {
          goto LABEL_69;
        }
        goto LABEL_72;
      case 9:
        if (a6 != 2)
        {
          unint64_t v6 = 11;
          goto LABEL_7;
        }
        unint64_t v6 = 11;
        if (a4 == 9) {
          goto LABEL_69;
        }
        goto LABEL_72;
      case 10:
        if (a6 != 2)
        {
          unint64_t v6 = 12;
          goto LABEL_7;
        }
        unint64_t v6 = 12;
        if (a4 == 10) {
          goto LABEL_69;
        }
        goto LABEL_72;
      case 11:
        if (a6 != 2)
        {
          unint64_t v6 = 13;
          goto LABEL_7;
        }
        unint64_t v6 = 13;
        if (a4 == 11) {
          goto LABEL_69;
        }
        goto LABEL_72;
      case 12:
        if (a6 != 2)
        {
          unint64_t v6 = 14;
          goto LABEL_7;
        }
        unint64_t v6 = 14;
        if (a4 == 12) {
          goto LABEL_69;
        }
        goto LABEL_72;
      case 13:
        if (a6 != 2)
        {
          unint64_t v6 = 15;
          goto LABEL_7;
        }
        unint64_t v6 = 15;
        if (a4 == 13) {
          goto LABEL_69;
        }
        goto LABEL_72;
      case 14:
        if (a6 != 2)
        {
          unint64_t v6 = 16;
          goto LABEL_7;
        }
        unint64_t v6 = 16;
        if (a4 == 14) {
          goto LABEL_69;
        }
        goto LABEL_72;
      case 15:
        if (a6 != 2)
        {
          unint64_t v6 = 17;
          goto LABEL_7;
        }
        unint64_t v6 = 17;
        if (a4 == 15) {
          goto LABEL_69;
        }
        goto LABEL_72;
      case 16:
        if (a6 != 2)
        {
          unint64_t v6 = 18;
          goto LABEL_7;
        }
        unint64_t v6 = 18;
LABEL_69:
        if (!a5) {
          return 0;
        }
        goto LABEL_72;
      default:
        unint64_t v6 = 0;
        if (a6 != 2 || a5 | a4) {
          goto LABEL_7;
        }
        return 0;
    }
  }
  if (a6 == 1) {
    goto LABEL_14;
  }
  unint64_t v6 = 6;
LABEL_7:
  if (a6)
  {
    if (a6 == 1)
    {
      unint64_t v7 = 6;
    }
    else
    {
LABEL_72:
      unint64_t v7 = 0;
      switch(a4)
      {
        case 0:
          return v6 < v7;
        case 1:
          unint64_t v7 = 1;
          break;
        case 2:
          unint64_t v7 = 2;
          break;
        case 3:
          unint64_t v7 = 3;
          break;
        case 4:
          unint64_t v7 = 4;
          break;
        case 5:
          unint64_t v7 = 7;
          break;
        case 6:
          unint64_t v7 = 8;
          break;
        case 7:
          unint64_t v7 = 9;
          break;
        case 8:
          unint64_t v7 = 10;
          break;
        case 9:
          unint64_t v7 = 11;
          break;
        case 10:
          unint64_t v7 = 12;
          break;
        case 11:
          unint64_t v7 = 13;
          break;
        case 12:
          unint64_t v7 = 14;
          break;
        case 13:
          unint64_t v7 = 15;
          break;
        case 14:
          unint64_t v7 = 16;
          break;
        case 15:
          unint64_t v7 = 17;
          break;
        case 16:
          unint64_t v7 = 18;
          break;
        default:
          JUMPOUT(0);
      }
    }
  }
  else
  {
    unint64_t v7 = 5;
  }
  return v6 < v7;
}

unint64_t sub_100074E44()
{
  uint64_t v1 = *(void *)v0;
  uint64_t v2 = *(void **)(v0 + 8);
  char v3 = *(unsigned char *)(v0 + 16);
  sub_10003DA14(*(void *)v0, (uint64_t)v2, v3);
  v4._uint64_t countAndFlagsBits = sub_100058B68(v1, v2, v3);
  String.append(_:)(v4);
  swift_bridgeObjectRelease();
  sub_10003E2B4(v1, (uint64_t)v2, v3);
  return 0xD000000000000020;
}

uint64_t sub_100074EE8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2;
  sub_100074FB4(v4, a2);
  unint64_t v6 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(a1 - 8) + 56);

  return v6(a2, 0, 1, a1);
}

unint64_t sub_100074F5C()
{
  unint64_t result = qword_10015FA88;
  if (!qword_10015FA88)
  {
    type metadata accessor for LocalizedStringResource();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015FA88);
  }
  return result;
}

uint64_t sub_100074FB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PrimarySettingsListSectionModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100075018(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  unsigned __int8 v8 = *(unsigned char *)(a2 + 16);
  sub_10003DA14(*(void *)a2, v7, v8);
  uint64_t v9 = *(void *)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  unsigned __int8 v11 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v8;
  sub_10003E2B4(v9, v10, v11);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v12 = *(int *)(a3 + 24);
  int v13 = (void *)(a1 + v12);
  BOOL v14 = (void *)(a2 + v12);
  uint64_t v15 = type metadata accessor for LocalizedStringResource();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v16 + 24))(v13, v14, v15);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_6;
  }
  if (v19)
  {
LABEL_6:
    uint64_t v20 = sub_100046B9C(&qword_100163C30);
    memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v16 + 16))(v13, v14, v15);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
LABEL_7:
  *(void *)(a1 + *(int *)(a3 + 28)) = *(void *)(a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100075200(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (void *)(a1 + v6);
  unsigned __int8 v8 = (const void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for LocalizedStringResource();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = sub_100046B9C(&qword_100163C30);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  *(void *)(a1 + *(int *)(a3 + 28)) = *(void *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_100075340(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6 = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v9 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v6;
  sub_10003E2B4(v7, v8, v9);
  uint64_t v10 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (void *)(a1 + v11);
  int v13 = (void *)(a2 + v11);
  uint64_t v14 = type metadata accessor for LocalizedStringResource();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  int v17 = v16(v12, 1, v14);
  int v18 = v16(v13, 1, v14);
  if (!v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 40))(v12, v13, v14);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v15 + 8))(v12, v14);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    uint64_t v19 = sub_100046B9C(&qword_100163C30);
    memcpy(v12, v13, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v15 + 32))(v12, v13, v14);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
LABEL_7:
  *(void *)(a1 + *(int *)(a3 + 28)) = *(void *)(a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100075504(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100046B9C(&qword_100163C30);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 24);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 28));
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t sub_1000755CC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_100046B9C(&qword_100163C30);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 24);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_100075690(uint64_t a1, uint64_t a2)
{
  uint64_t v100 = type metadata accessor for PrimarySettingsListItemModel();
  uint64_t v91 = *(void *)(v100 - 8);
  uint64_t v4 = __chkstk_darwin(v100);
  uint64_t v6 = (char *)&v79 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v79 - v7;
  uint64_t v96 = type metadata accessor for LocalizedStringResource();
  uint64_t v9 = *(void *)(v96 - 8);
  __chkstk_darwin(v96);
  uint64_t v92 = (char *)&v79 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100046B9C(&qword_100163C30);
  __chkstk_darwin(v11 - 8);
  int v13 = (char *)&v79 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = sub_100046B9C(&qword_10015FA80);
  __chkstk_darwin(v94);
  uint64_t v95 = (uint64_t)&v79 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for PrimarySettingsListSectionModel();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v98 = v15;
  uint64_t v99 = v16;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v101 = (uint64_t)&v79 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v79 - v19;
  uint64_t v21 = sub_100046B9C(&qword_10015FB40);
  uint64_t v22 = __chkstk_darwin(v21 - 8);
  int v24 = (char *)&v79 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v26 = (char *)&v79 - v25;
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v27 = 0;
  uint64_t v28 = *(void *)(a1 + 64);
  uint64_t v81 = a1 + 64;
  uint64_t v29 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v30 = -1;
  if (v29 < 64) {
    uint64_t v30 = ~(-1 << v29);
  }
  unint64_t v31 = v30 & v28;
  os_log_type_t v88 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  uint64_t v82 = (void (**)(char *, uint64_t, uint64_t))(v9 + 32);
  long long v84 = (void (**)(uint64_t, uint64_t))(v9 + 8);
  int64_t v85 = (unint64_t)(v29 + 63) >> 6;
  int64_t v80 = v85 - 1;
  uint64_t v86 = a1;
  uint64_t v87 = a2;
  id v97 = v24;
  uint64_t v93 = (char *)&v79 - v25;
  uint64_t v83 = v13;
  while (1)
  {
    if (v31)
    {
      uint64_t v89 = (v31 - 1) & v31;
      int64_t v90 = v27;
      unint64_t v32 = __clz(__rbit64(v31)) | (v27 << 6);
LABEL_9:
      uint64_t v33 = *(void *)(a1 + 56);
      uint64_t v34 = *(void *)(a1 + 48) + 24 * v32;
      uint64_t v35 = *(void *)v34;
      uint64_t v36 = *(void *)(v34 + 8);
      unsigned __int8 v37 = *(unsigned char *)(v34 + 16);
      *(void *)int v24 = *(void *)v34;
      *((void *)v24 + 1) = v36;
      v24[16] = v37;
      uint64_t v38 = v33 + *(void *)(v99 + 72) * v32;
      uint64_t v39 = sub_100046B9C(qword_10015FB48);
      uint64_t v40 = v38;
      int v24 = v97;
      sub_10003D748(v40, (uint64_t)&v97[*(int *)(v39 + 48)], (uint64_t (*)(void))type metadata accessor for PrimarySettingsListSectionModel);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v24, 0, 1, v39);
      sub_10003DA14(v35, v36, v37);
      uint64_t v26 = v93;
      goto LABEL_31;
    }
    int64_t v41 = v27 + 1;
    if (__OFADD__(v27, 1))
    {
      __break(1u);
LABEL_123:
      __break(1u);
      JUMPOUT(0x100076244);
    }
    if (v41 < v85)
    {
      unint64_t v42 = *(void *)(v81 + 8 * v41);
      if (v42) {
        goto LABEL_13;
      }
      int64_t v43 = v27 + 2;
      ++v27;
      if (v41 + 1 < v85)
      {
        unint64_t v42 = *(void *)(v81 + 8 * v43);
        if (v42) {
          goto LABEL_16;
        }
        int64_t v27 = v41 + 1;
        if (v41 + 2 < v85)
        {
          unint64_t v42 = *(void *)(v81 + 8 * (v41 + 2));
          if (v42)
          {
            v41 += 2;
            goto LABEL_13;
          }
          int64_t v27 = v41 + 2;
          if (v41 + 3 < v85)
          {
            unint64_t v42 = *(void *)(v81 + 8 * (v41 + 3));
            if (v42)
            {
              v41 += 3;
              goto LABEL_13;
            }
            int64_t v43 = v41 + 4;
            int64_t v27 = v41 + 3;
            if (v41 + 4 < v85)
            {
              unint64_t v42 = *(void *)(v81 + 8 * v43);
              if (v42)
              {
LABEL_16:
                int64_t v41 = v43;
LABEL_13:
                uint64_t v89 = (v42 - 1) & v42;
                int64_t v90 = v41;
                unint64_t v32 = __clz(__rbit64(v42)) + (v41 << 6);
                goto LABEL_9;
              }
              while (1)
              {
                int64_t v41 = v43 + 1;
                if (__OFADD__(v43, 1)) {
                  goto LABEL_123;
                }
                if (v41 >= v85) {
                  break;
                }
                unint64_t v42 = *(void *)(v81 + 8 * v41);
                ++v43;
                if (v42) {
                  goto LABEL_13;
                }
              }
              int64_t v27 = v80;
            }
          }
        }
      }
    }
    int64_t v90 = v27;
    uint64_t v44 = sub_100046B9C(qword_10015FB48);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v24, 1, 1, v44);
    uint64_t v89 = 0;
LABEL_31:
    sub_100049B74((uint64_t)v24, (uint64_t)v26, &qword_10015FB40);
    uint64_t v45 = sub_100046B9C(qword_10015FB48);
    uint64_t v46 = 1;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v45 - 8) + 48))(v26, 1, v45) == 1) {
      return v46;
    }
    uint64_t v47 = (uint64_t)&v26[*(int *)(v45 + 48)];
    uint64_t v48 = *(void *)v26;
    uint64_t v49 = *((void *)v26 + 1);
    char v50 = v26[16];
    sub_10003DCCC(v47, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListSectionModel);
    unint64_t v51 = sub_10003E2CC(v48, v49, v50);
    char v53 = v52;
    sub_10003E2B4(v48, v49, v50);
    if ((v53 & 1) == 0) {
      goto LABEL_119;
    }
    uint64_t v54 = v101;
    sub_10003D748(*(void *)(a2 + 56) + *(void *)(v99 + 72) * v51, v101, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListSectionModel);
    uint64_t v55 = *(void *)v54;
    uint64_t v56 = *(void *)v20;
    uint64_t v57 = *((void *)v20 + 1);
    int v58 = v20[16];
    if (*(unsigned char *)(v54 + 16))
    {
      if (*(unsigned char *)(v54 + 16) != 1)
      {
        switch(v55)
        {
          case 1:
            if (v58 != 2 || v56 != 1) {
              goto LABEL_118;
            }
            goto LABEL_93;
          case 2:
            if (v58 != 2 || v56 != 2) {
              goto LABEL_118;
            }
            goto LABEL_93;
          case 3:
            if (v58 != 2 || v56 != 3) {
              goto LABEL_118;
            }
            goto LABEL_93;
          case 4:
            if (v58 != 2 || v56 != 4) {
              goto LABEL_118;
            }
            goto LABEL_93;
          case 5:
            if (v58 != 2 || v56 != 5) {
              goto LABEL_118;
            }
            goto LABEL_93;
          case 6:
            if (v58 != 2 || v56 != 6) {
              goto LABEL_118;
            }
            goto LABEL_93;
          case 7:
            if (v58 != 2 || v56 != 7) {
              goto LABEL_118;
            }
            goto LABEL_93;
          case 8:
            if (v58 != 2 || v56 != 8) {
              goto LABEL_118;
            }
            goto LABEL_93;
          case 9:
            if (v58 != 2 || v56 != 9) {
              goto LABEL_118;
            }
            goto LABEL_93;
          case 10:
            if (v58 != 2 || v56 != 10) {
              goto LABEL_118;
            }
            goto LABEL_93;
          case 11:
            if (v58 != 2 || v56 != 11) {
              goto LABEL_118;
            }
            goto LABEL_93;
          case 12:
            if (v58 != 2 || v56 != 12) {
              goto LABEL_118;
            }
            goto LABEL_93;
          case 13:
            if (v58 != 2 || v56 != 13) {
              goto LABEL_118;
            }
            goto LABEL_93;
          case 14:
            if (v58 != 2 || v56 != 14) {
              goto LABEL_118;
            }
            goto LABEL_93;
          case 15:
            if (v58 != 2 || v56 != 15) {
              goto LABEL_118;
            }
            goto LABEL_93;
          case 16:
            if (v58 != 2 || v56 != 16) {
              goto LABEL_118;
            }
LABEL_93:
            if (!v57) {
              goto LABEL_94;
            }
            goto LABEL_118;
          default:
            if (v58 != 2 || v57 | v56) {
              goto LABEL_118;
            }
            goto LABEL_94;
        }
      }
      if (v58 != 1) {
        goto LABEL_118;
      }
    }
    else if (v20[16])
    {
      goto LABEL_118;
    }
    if ((v55 != v56 || *(void *)(v54 + 8) != v57) && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
      goto LABEL_118;
    }
LABEL_94:
    uint64_t v59 = *(void *)(v101 + 32);
    uint64_t v60 = *((void *)v20 + 4);
    if (v59)
    {
      if (!v60
        || (*(void *)(v101 + 24) != *((void *)v20 + 3) || v59 != v60)
        && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
      {
        goto LABEL_118;
      }
    }
    else if (v60)
    {
      goto LABEL_118;
    }
    uint64_t v61 = *(int *)(v98 + 24);
    uint64_t v62 = (uint64_t)&v20[v61];
    uint64_t v63 = v95;
    uint64_t v64 = v95 + *(int *)(v94 + 48);
    sub_10003B4CC(v101 + v61, v95);
    sub_10003B4CC(v62, v64);
    uint64_t v65 = *v88;
    uint64_t v66 = v96;
    if ((*v88)(v63, 1, v96) == 1)
    {
      if (v65(v64, 1, v66) != 1) {
        goto LABEL_117;
      }
      sub_10003F5D0(v63, &qword_100163C30);
    }
    else
    {
      uint64_t v67 = (uint64_t)v83;
      sub_10003B4CC(v63, (uint64_t)v83);
      if (v65(v64, 1, v66) == 1)
      {
        (*v84)(v67, v66);
LABEL_117:
        sub_10003F5D0(v63, &qword_10015FA80);
        goto LABEL_118;
      }
      uint64_t v68 = v92;
      (*v82)(v92, v64, v66);
      sub_100074F5C();
      char v69 = dispatch thunk of static Equatable.== infix(_:_:)();
      char v70 = *v84;
      (*v84)((uint64_t)v68, v66);
      v70(v67, v66);
      sub_10003F5D0(v63, &qword_100163C30);
      if ((v69 & 1) == 0) {
        goto LABEL_118;
      }
    }
    uint64_t v71 = *(int *)(v98 + 28);
    uint64_t v72 = *(void *)(v101 + v71);
    uint64_t v73 = *(void *)&v20[v71];
    uint64_t v74 = *(void *)(v72 + 16);
    if (v74 != *(void *)(v73 + 16)) {
      goto LABEL_118;
    }
    if (v74 && v72 != v73) {
      break;
    }
LABEL_6:
    sub_10003DA2C(v101, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListSectionModel);
    sub_10003DA2C((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListSectionModel);
    a1 = v86;
    a2 = v87;
    int v24 = v97;
    uint64_t v26 = v93;
    unint64_t v31 = v89;
    int64_t v27 = v90;
  }
  unint64_t v75 = (*(unsigned __int8 *)(v91 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v91 + 80);
  uint64_t v76 = *(void *)(v91 + 72);
  while (1)
  {
    sub_10003D748(v72 + v75, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
    sub_10003D748(v73 + v75, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
    if ((sub_1000460F4((uint64_t)v8, (uint64_t)v6) & 1) == 0) {
      break;
    }
    char v77 = sub_10003B998((uint64_t)&v8[*(int *)(v100 + 20)], (uint64_t)&v6[*(int *)(v100 + 20)]);
    sub_10003DA2C((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
    sub_10003DA2C((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
    if ((v77 & 1) == 0) {
      goto LABEL_118;
    }
    v75 += v76;
    if (!--v74) {
      goto LABEL_6;
    }
  }
  sub_10003DA2C((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
  sub_10003DA2C((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
LABEL_118:
  sub_10003DA2C(v101, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListSectionModel);
LABEL_119:
  sub_10003DA2C((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListSectionModel);
  return 0;
}

uint64_t sub_100076288(uint64_t a1, uint64_t a2)
{
  uint64_t v45 = type metadata accessor for PrimarySettingsListItemModel();
  uint64_t v47 = *(void *)(v45 - 8);
  uint64_t v4 = __chkstk_darwin(v45);
  uint64_t v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v40 - v7;
  uint64_t v9 = type metadata accessor for PrimarySettingsListItemIdentifier();
  uint64_t v44 = *(void *)(v9 - 8);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100046B9C(&qword_10015FB30);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v13);
  uint64_t v18 = (char *)&v40 - v17;
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v46 = 0;
  uint64_t v43 = a1;
  uint64_t v19 = *(void *)(a1 + 64);
  uint64_t v41 = a1 + 64;
  uint64_t v20 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v21 = -1;
  if (v20 < 64) {
    uint64_t v21 = ~(-1 << v20);
  }
  unint64_t v22 = v21 & v19;
  int64_t v42 = (unint64_t)(v20 + 63) >> 6;
  int64_t v40 = v42 - 1;
  while (1)
  {
    if (v22)
    {
      unint64_t v23 = __clz(__rbit64(v22));
      v22 &= v22 - 1;
      unint64_t v24 = v23 | (v46 << 6);
LABEL_8:
      uint64_t v25 = v43;
      sub_10003D748(*(void *)(v43 + 48) + *(void *)(v44 + 72) * v24, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
      uint64_t v26 = *(void *)(v25 + 56) + *(void *)(v47 + 72) * v24;
      uint64_t v27 = sub_100046B9C(&qword_10015FB38);
      sub_10003D748(v26, (uint64_t)&v15[*(int *)(v27 + 48)], (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v15, 0, 1, v27);
      goto LABEL_30;
    }
    int64_t v28 = v46 + 1;
    if (__OFADD__(v46, 1))
    {
      __break(1u);
      goto LABEL_41;
    }
    if (v28 < v42)
    {
      unint64_t v29 = *(void *)(v41 + 8 * v28);
      if (v29) {
        goto LABEL_12;
      }
      int64_t v30 = v46 + 2;
      ++v46;
      if (v28 + 1 < v42)
      {
        unint64_t v29 = *(void *)(v41 + 8 * v30);
        if (v29) {
          goto LABEL_15;
        }
        int64_t v46 = v28 + 1;
        if (v28 + 2 < v42)
        {
          unint64_t v29 = *(void *)(v41 + 8 * (v28 + 2));
          if (v29)
          {
            v28 += 2;
            goto LABEL_12;
          }
          int64_t v46 = v28 + 2;
          if (v28 + 3 < v42)
          {
            unint64_t v29 = *(void *)(v41 + 8 * (v28 + 3));
            if (v29)
            {
              v28 += 3;
              goto LABEL_12;
            }
            int64_t v30 = v28 + 4;
            int64_t v46 = v28 + 3;
            if (v28 + 4 < v42) {
              break;
            }
          }
        }
      }
    }
LABEL_29:
    uint64_t v31 = sub_100046B9C(&qword_10015FB38);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v15, 1, 1, v31);
    unint64_t v22 = 0;
LABEL_30:
    sub_100049B74((uint64_t)v15, (uint64_t)v18, &qword_10015FB30);
    uint64_t v32 = sub_100046B9C(&qword_10015FB38);
    int v33 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v32 - 8) + 48))(v18, 1, v32);
    BOOL v34 = v33 == 1;
    if (v33 == 1) {
      return v34;
    }
    uint64_t v35 = (uint64_t)&v18[*(int *)(v32 + 48)];
    sub_10003DCCC((uint64_t)v18, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
    sub_10003DCCC(v35, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
    unint64_t v36 = sub_10003DD34((uint64_t)v11);
    char v38 = v37;
    sub_10003DA2C((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
    if ((v38 & 1) == 0) {
      goto LABEL_37;
    }
    sub_10003D748(*(void *)(a2 + 56) + *(void *)(v47 + 72) * v36, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
    if ((sub_1000460F4((uint64_t)v6, (uint64_t)v8) & 1) == 0)
    {
      sub_10003DA2C((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
LABEL_37:
      sub_10003DA2C((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
      return 0;
    }
    char v39 = sub_10003B998((uint64_t)&v6[*(int *)(v45 + 20)], (uint64_t)&v8[*(int *)(v45 + 20)]);
    sub_10003DA2C((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
    uint64_t result = sub_10003DA2C((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
    if ((v39 & 1) == 0) {
      return v34;
    }
  }
  unint64_t v29 = *(void *)(v41 + 8 * v30);
  if (v29)
  {
LABEL_15:
    int64_t v28 = v30;
LABEL_12:
    unint64_t v22 = (v29 - 1) & v29;
    unint64_t v24 = __clz(__rbit64(v29)) + (v28 << 6);
    int64_t v46 = v28;
    goto LABEL_8;
  }
  while (1)
  {
    int64_t v28 = v30 + 1;
    if (__OFADD__(v30, 1)) {
      break;
    }
    if (v28 >= v42)
    {
      int64_t v46 = v40;
      goto LABEL_29;
    }
    unint64_t v29 = *(void *)(v41 + 8 * v28);
    ++v30;
    if (v29) {
      goto LABEL_12;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_100076878(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000768E0()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t assignWithTake for PrimarySettingsListAppleAccountLink(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a1 + 8)) {
    goto LABEL_5;
  }
  uint64_t v4 = *(void *)(a2 + 8);
  if (!v4)
  {
    sub_10003F5D0(a1, &qword_10015F758);
LABEL_5:
    long long v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    goto LABEL_6;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v6 = *(void **)(a1 + 40);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);

LABEL_6:
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

uint64_t sub_1000769C8(uint64_t a1)
{
  uint64_t v2 = sub_100046B9C(&qword_10015FD00);
  __chkstk_darwin(v2 - 8);
  sub_10003F75C(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_10015FD00);
  return EnvironmentValues.symbolRenderingMode.setter();
}

uint64_t sub_100076A5C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.font.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100076A88()
{
  return EnvironmentValues.font.setter();
}

uint64_t sub_100076AB4()
{
  return EnvironmentValues.symbolRenderingMode.getter();
}

uint64_t sub_100076AE0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100076AFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X8>)
{
  int v41 = a4;
  v36[1] = a3;
  uint64_t v42 = a5;
  uint64_t v7 = type metadata accessor for BadgeProminence();
  uint64_t v39 = *(void *)(v7 - 8);
  uint64_t v40 = v7;
  __chkstk_darwin(v7);
  v36[0] = (char *)v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100046B9C(&qword_10015FD30);
  uint64_t v37 = *(void *)(v9 - 8);
  uint64_t v38 = v9;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100046B9C(&qword_10015FD38);
  uint64_t v13 = v12 - 8;
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100046B9C(&qword_10015FD40);
  uint64_t v17 = v16 - 8;
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = a1;
  uint64_t v44 = a2;
  sub_100030C58();
  swift_bridgeObjectRetain();
  uint64_t v20 = Text.init<A>(_:)();
  uint64_t v22 = v21;
  uint64_t v43 = v20;
  uint64_t v44 = v21;
  char v24 = v23 & 1;
  char v45 = v23 & 1;
  uint64_t v46 = v25;
  View.badge(_:)();
  sub_100037590(v20, v22, v24);
  swift_bridgeObjectRelease();
  uint64_t v26 = v36[0];
  static BadgeProminence.increased.getter();
  uint64_t KeyPath = swift_getKeyPath();
  int64_t v28 = (uint64_t *)&v15[*(int *)(v13 + 44)];
  uint64_t v29 = sub_100046B9C(&qword_10015FD48);
  uint64_t v31 = v39;
  uint64_t v30 = v40;
  (*(void (**)(char *, uint64_t, uint64_t))(v39 + 16))((char *)v28 + *(int *)(v29 + 28), v26, v40);
  *int64_t v28 = KeyPath;
  uint64_t v33 = v37;
  uint64_t v32 = v38;
  (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v15, v11, v38);
  (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v26, v30);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v11, v32);
  if (v41) {
    double v34 = 0.5;
  }
  else {
    double v34 = 1.0;
  }
  sub_100076E74((uint64_t)v15, (uint64_t)v19);
  *(double *)&v19[*(int *)(v17 + 44)] = v34;
  sub_100076EDC((uint64_t)v15);
  return sub_100076F3C((uint64_t)v19, v42);
}

uint64_t sub_100076E54@<X0>(uint64_t a1@<X8>)
{
  return sub_100076AFC(*(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), *(unsigned __int8 *)(v1 + 24) | (*(unsigned __int8 *)(v1 + 25) << 8), a1);
}

uint64_t sub_100076E74(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100046B9C(&qword_10015FD38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100076EDC(uint64_t a1)
{
  uint64_t v2 = sub_100046B9C(&qword_10015FD38);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100076F3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100046B9C(&qword_10015FD40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_100076FA8()
{
  unint64_t result = qword_10015FD50;
  if (!qword_10015FD50)
  {
    sub_10004D318(&qword_10015FD40);
    sub_100077024();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015FD50);
  }
  return result;
}

unint64_t sub_100077024()
{
  unint64_t result = qword_10015FD58;
  if (!qword_10015FD58)
  {
    sub_10004D318(&qword_10015FD38);
    swift_getOpaqueTypeConformance2();
    sub_1000770D0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015FD58);
  }
  return result;
}

unint64_t sub_1000770D0()
{
  unint64_t result = qword_10015FD60;
  if (!qword_10015FD60)
  {
    sub_10004D318(&qword_10015FD48);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015FD60);
  }
  return result;
}

uint64_t sub_10007712C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100077148@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v36 = a1;
  uint64_t v3 = type metadata accessor for BadgeProminence();
  uint64_t v34 = *(void *)(v3 - 8);
  uint64_t v35 = v3;
  __chkstk_darwin(v3);
  uint64_t v32 = &v29[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v31 = sub_100046B9C(&qword_10015FD68);
  uint64_t v5 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v7 = &v29[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v33 = sub_100046B9C(&qword_10015FD70);
  uint64_t v8 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  uint64_t v10 = &v29[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = sub_100046B9C(&qword_10015FD78);
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  uint64_t v14 = &v29[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = sub_100046B9C(&qword_10015FD80);
  uint64_t v16 = v15 - 8;
  __chkstk_darwin(v15);
  uint64_t v18 = &v29[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v38 = v2;
  uint64_t v37 = v2;
  sub_100039B80();
  Label.init(title:icon:)();
  int v30 = *(unsigned __int8 *)(v2 + 48);
  sub_10004D2D4((unint64_t *)&qword_10015FD90, &qword_10015FD68);
  uint64_t v19 = v31;
  View.badge(_:)();
  (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v19);
  uint64_t v20 = v32;
  static BadgeProminence.increased.getter();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v22 = (uint64_t *)&v14[*(int *)(v12 + 44)];
  uint64_t v23 = sub_100046B9C(&qword_10015FD48);
  uint64_t v25 = v34;
  uint64_t v24 = v35;
  (*(void (**)(char *, unsigned char *, uint64_t))(v34 + 16))((char *)v22 + *(int *)(v23 + 28), v20, v35);
  *uint64_t v22 = KeyPath;
  uint64_t v26 = v33;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v8 + 16))(v14, v10, v33);
  (*(void (**)(unsigned char *, uint64_t))(v25 + 8))(v20, v24);
  (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v26);
  if (v30) {
    double v27 = 0.5;
  }
  else {
    double v27 = 1.0;
  }
  sub_100077720((uint64_t)v14, (uint64_t)v18);
  *(double *)&v18[*(int *)(v16 + 44)] = v27;
  sub_100077788((uint64_t)v14);
  return sub_1000777E8((uint64_t)v18, v36);
}

id sub_100077558@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void **)a1;
  uint64_t v4 = *(void *)(a1 + 8);
  char v5 = *(unsigned char *)(a1 + 16);
  *(void *)a2 = swift_getKeyPath();
  *(unsigned char *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = v3;
  *(void *)(a2 + 24) = v4;
  *(unsigned char *)(a2 + 32) = v5;

  return sub_100047728(v3, v4, v5);
}

uint64_t sub_1000775C0@<X0>(uint64_t a1@<X8>)
{
  return sub_100077148(a1);
}

id sub_100077604@<X0>(uint64_t a1@<X8>)
{
  return sub_100077558(*(void *)(v1 + 16), a1);
}

uint64_t sub_10007760C()
{
  return EnvironmentValues.badgeProminence.getter();
}

uint64_t sub_100077630()
{
  return EnvironmentValues.badgeProminence.getter();
}

uint64_t sub_100077654(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for BadgeProminence();
  __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return EnvironmentValues.badgeProminence.setter();
}

uint64_t sub_100077720(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100046B9C(&qword_10015FD78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100077788(uint64_t a1)
{
  uint64_t v2 = sub_100046B9C(&qword_10015FD78);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000777E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100046B9C(&qword_10015FD80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_10007785C()
{
  unint64_t result = qword_10015FD98;
  if (!qword_10015FD98)
  {
    sub_10004D318(&qword_10015FD80);
    sub_1000778D8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015FD98);
  }
  return result;
}

unint64_t sub_1000778D8()
{
  unint64_t result = qword_10015FDA0;
  if (!qword_10015FDA0)
  {
    sub_10004D318(&qword_10015FD78);
    sub_10004D318(&qword_10015FD68);
    sub_10004D2D4((unint64_t *)&qword_10015FD90, &qword_10015FD68);
    swift_getOpaqueTypeConformance2();
    sub_10004D2D4((unint64_t *)&qword_10015FD60, &qword_10015FD48);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015FDA0);
  }
  return result;
}

uint64_t *sub_1000779D8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for PrimarySettingsListFamilyLinkModel();
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = v4;
    uint64_t v7 = type metadata accessor for FamilyRowStatus();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(v6 + 20);
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    *uint64_t v9 = *v10;
    v9[1] = v11;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_100077AB8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FamilyRowStatus();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  type metadata accessor for PrimarySettingsListFamilyLinkModel();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100077B34(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FamilyRowStatus();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  uint64_t v5 = *(int *)(type metadata accessor for PrimarySettingsListFamilyLinkModel() + 20);
  uint64_t v6 = (void *)(a1 + v5);
  uint64_t v7 = (void *)(a2 + v5);
  uint64_t v8 = v7[1];
  void *v6 = *v7;
  v6[1] = v8;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100077BB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FamilyRowStatus();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  uint64_t v5 = *(int *)(type metadata accessor for PrimarySettingsListFamilyLinkModel() + 20);
  uint64_t v6 = (void *)(a1 + v5);
  uint64_t v7 = (void *)(a2 + v5);
  void *v6 = *v7;
  v6[1] = v7[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100077C50(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FamilyRowStatus();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  uint64_t v5 = type metadata accessor for PrimarySettingsListFamilyLinkModel();
  *(_OWORD *)(a1 + *(int *)(v5 + 20)) = *(_OWORD *)(a2 + *(int *)(v5 + 20));
  return a1;
}

uint64_t sub_100077CC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FamilyRowStatus();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  uint64_t v5 = *(int *)(type metadata accessor for PrimarySettingsListFamilyLinkModel() + 20);
  uint64_t v6 = (void *)(a1 + v5);
  uint64_t v7 = (uint64_t *)(a2 + v5);
  uint64_t v9 = *v7;
  uint64_t v8 = v7[1];
  void *v6 = v9;
  v6[1] = v8;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100077D50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100077D64);
}

uint64_t sub_100077D64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PrimarySettingsListFamilyLinkModel();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_100077DD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100077DE4);
}

uint64_t sub_100077DE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PrimarySettingsListFamilyLinkModel();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_100077E54()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100077E70@<X0>(uint64_t *a1@<X8>)
{
  static FamilySettingsFactory.sharedProvider.getter();
  sub_1000403E0(v4, v4[3]);
  type metadata accessor for PrimarySettingsListFamilyLinkModel();
  uint64_t v2 = dispatch thunk of FamilySettingsViewsProtocol.familyRow(for:info:)();
  uint64_t result = sub_100042A1C((uint64_t)v4);
  *a1 = v2;
  return result;
}

void *sub_100077EFC()
{
  return &protocol witness table for AnyView;
}

uint64_t sub_100077F08()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100077F24@<X0>(uint64_t a1@<X8>)
{
  sub_100030C58();
  swift_bridgeObjectRetain();
  uint64_t v2 = Text.init<A>(_:)();
  uint64_t v4 = v3;
  char v6 = v5 & 1;
  static Color.blue.getter();
  uint64_t v7 = Text.foregroundStyle<A>(_:)();
  uint64_t v9 = v8;
  char v11 = v10;
  uint64_t v13 = v12;
  sub_100037590(v2, v4, v6);
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a1 = v7;
  *(void *)(a1 + 8) = v9;
  *(unsigned char *)(a1 + 16) = v11 & 1;
  *(void *)(a1 + 24) = v13;
  return result;
}

double sub_10007801C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void **)a1;
  uint64_t v4 = *(void *)(a1 + 8);
  int v5 = *(unsigned __int8 *)(a1 + 16);
  if (v5 == 255)
  {
    uint64_t KeyPath = 0;
    uint64_t v8 = 0;
    uint64_t v9 = 0;
    char v10 = 0;
    uint64_t v7 = 255;
  }
  else
  {
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v7 = 0;
    uint64_t v8 = v3;
    uint64_t v9 = v4;
    char v10 = v5;
  }
  sub_10006EB6C(v3, v4, v5);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  *(void *)a2 = KeyPath;
  *(void *)(a2 + 8) = v7;
  *(void *)(a2 + 16) = v8;
  *(void *)(a2 + 24) = v9;
  *(unsigned char *)(a2 + 32) = v10;
  *(void *)(a2 + 40) = v12;
  *(unsigned char *)(a2 + 48) = v13;
  *(void *)(a2 + 56) = v14;
  *(unsigned char *)(a2 + 64) = v15;
  double result = *(double *)&v16;
  *(_OWORD *)(a2 + 72) = v16;
  return result;
}

uint64_t sub_100078114@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100046B9C(&qword_10015FE38);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = &v10[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  long long v7 = v1[1];
  long long v13 = *v1;
  *(_OWORD *)uint64_t v14 = v7;
  *(_OWORD *)&v14[9] = *(long long *)((char *)v1 + 25);
  uint64_t v12 = &v13;
  char v11 = &v13;
  sub_100046B9C(&qword_10015FE40);
  sub_1000782C0();
  Label.init(title:icon:)();
  if (v14[24]) {
    double v8 = 0.5;
  }
  else {
    double v8 = 1.0;
  }
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v4 + 16))(a1, v6, v3);
  *(double *)(a1 + *(int *)(sub_100046B9C(&qword_10015FE78) + 36)) = v8;
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1000782B0@<X0>(uint64_t a1@<X8>)
{
  return sub_100077F24(a1);
}

double sub_1000782B8@<D0>(uint64_t a1@<X8>)
{
  return sub_10007801C(*(void *)(v1 + 16), a1);
}

unint64_t sub_1000782C0()
{
  unint64_t result = qword_10015FE48;
  if (!qword_10015FE48)
  {
    sub_10004D318(&qword_10015FE40);
    sub_10007847C(&qword_10015FE50, &qword_10015FE58, (void (*)(void))sub_100078368);
    sub_1000783DC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015FE48);
  }
  return result;
}

unint64_t sub_100078368()
{
  unint64_t result = qword_10015FE60;
  if (!qword_10015FE60)
  {
    sub_10004D318(&qword_10015FE68);
    sub_100039B80();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015FE60);
  }
  return result;
}

unint64_t sub_1000783DC()
{
  unint64_t result = qword_10015FE70;
  if (!qword_10015FE70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015FE70);
  }
  return result;
}

uint64_t sub_100078438()
{
  return sub_10007847C(&qword_10015FE80, &qword_10015FE78, (void (*)(void))sub_1000784F8);
}

uint64_t sub_10007847C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10004D318(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000784F8()
{
  unint64_t result = qword_10015FE88;
  if (!qword_10015FE88)
  {
    sub_10004D318(&qword_10015FE38);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015FE88);
  }
  return result;
}

uint64_t sub_100078554()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100078570@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100046B9C(&qword_10015FE98);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  long long v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v22 - v8;
  char v11 = *(void **)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  uint64_t v12 = *(unsigned __int8 *)(a1 + 16);
  if (v12 == 255)
  {
    uint64_t v24 = 0;
    uint64_t v25 = 0;
    uint64_t v23 = 0;
    uint64_t v15 = 0;
    uint64_t v14 = 255;
  }
  else
  {
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v24 = (uint64_t)v11;
    uint64_t v25 = KeyPath;
    uint64_t v14 = 0;
    uint64_t v23 = v10;
    uint64_t v15 = v12;
  }
  sub_10006EB6C(v11, v10, v12);
  *(void *)uint64_t v9 = static HorizontalAlignment.leading.getter();
  *((void *)v9 + 1) = 0;
  v9[16] = 1;
  uint64_t v16 = sub_100046B9C(&qword_10015FEA0);
  __chkstk_darwin(v16);
  *(&v22 - 2) = a1;
  sub_100046B9C(&qword_10015FEA8);
  sub_10004D2D4(&qword_10015FEB0, &qword_10015FEA8);
  LabelGroup.init(content:)();
  sub_100078998((uint64_t)v9, (uint64_t)v7);
  uint64_t v18 = v24;
  uint64_t v17 = v25;
  *(void *)a2 = v25;
  *(void *)(a2 + 8) = v14;
  uint64_t v19 = v23;
  *(void *)(a2 + 16) = v18;
  *(void *)(a2 + 24) = v19;
  *(unsigned char *)(a2 + 32) = v15;
  uint64_t v20 = sub_100046B9C(&qword_10015FEB8);
  sub_100078998((uint64_t)v7, a2 + *(int *)(v20 + 48));
  sub_100078A60(v17, v14, v18, v19, v15, (void (*)(uint64_t, void))sub_10003A440, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100047728);
  sub_100078A00((uint64_t)v9);
  sub_100078A00((uint64_t)v7);
  return sub_100078A60(v17, v14, v18, v19, v15, (void (*)(uint64_t, void))sub_10003A520, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100046F04);
}

uint64_t sub_1000787F0@<X0>(uint64_t a1@<X8>)
{
  sub_100030C58();
  swift_bridgeObjectRetain();
  uint64_t v2 = Text.init<A>(_:)();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  char v8 = v7 & 1;
  swift_bridgeObjectRetain();
  uint64_t v9 = Text.init<A>(_:)();
  uint64_t v11 = v10;
  char v13 = v12 & 1;
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v9;
  *(void *)(a1 + 40) = v10;
  *(unsigned char *)(a1 + 48) = v12 & 1;
  *(void *)(a1 + 56) = v14;
  sub_10006591C(v2, v4, v8);
  swift_bridgeObjectRetain();
  sub_10006591C(v9, v11, v13);
  swift_bridgeObjectRetain();
  sub_100037590(v9, v11, v13);
  swift_bridgeObjectRelease();
  sub_100037590(v2, v4, v8);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100078924@<X0>(uint64_t a1@<X8>)
{
  long long v3 = *(_OWORD *)(v1 + 16);
  v6[0] = *(_OWORD *)v1;
  v6[1] = v3;
  _OWORD v6[2] = *(_OWORD *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 48);
  *(void *)a1 = static VerticalAlignment.top.getter();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  uint64_t v4 = sub_100046B9C(&qword_10015FE90);
  return sub_100078570((uint64_t)v6, a1 + *(int *)(v4 + 44));
}

uint64_t sub_100078990@<X0>(uint64_t a1@<X8>)
{
  return sub_1000787F0(a1);
}

uint64_t sub_100078998(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100046B9C(&qword_10015FE98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100078A00(uint64_t a1)
{
  uint64_t v2 = sub_100046B9C(&qword_10015FE98);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100078A60(uint64_t result, char a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t, void), uint64_t (*a7)(uint64_t, uint64_t, uint64_t))
{
  if (a2 != -1)
  {
    a6(result, a2 & 1);
    return a7(a3, a4, a5);
  }
  return result;
}

uint64_t sub_100078AE4()
{
  return sub_10004D2D4(&qword_10015FEC0, &qword_10015FEC8);
}

uint64_t sub_100078B20()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100078B3C@<X0>(uint64_t a1@<X8>)
{
  int v3 = *(unsigned __int8 *)(v1 + 16);
  sub_100030C58();
  swift_bridgeObjectRetain();
  uint64_t result = Text.init<A>(_:)();
  double v6 = 1.0;
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v7;
  *(unsigned char *)(a1 + 16) = v8 & 1;
  if (v3) {
    double v6 = 0.5;
  }
  *(void *)(a1 + 24) = v5;
  *(double *)(a1 + 32) = v6;
  return result;
}

unint64_t sub_100078BC4()
{
  unint64_t result = qword_10015FED0;
  if (!qword_10015FED0)
  {
    sub_10004D318(&qword_10015FED8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015FED0);
  }
  return result;
}

void *sub_100078C38(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *int v3 = *a2;
    int v3 = (void *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    char v5 = *((unsigned char *)a2 + 8);
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = v5;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (void *)(a1 + v6);
    char v8 = (uint64_t *)((char *)a2 + v6);
    uint64_t v9 = type metadata accessor for PrimarySettingsListItemIdentifier();
    swift_retain();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
        uint64_t v10 = type metadata accessor for FLFollowUpInformation();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v7, v8, v10);
        goto LABEL_8;
      case 2u:
        uint64_t v12 = type metadata accessor for FLFollowUpInformation();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v7, v8, v12);
        uint64_t v13 = *(int *)(sub_100046B9C(&qword_10015F7F8) + 48);
        uint64_t v14 = (void *)((char *)v7 + v13);
        uint64_t v15 = (void *)((char *)v8 + v13);
        uint64_t v16 = v15[1];
        *uint64_t v14 = *v15;
        v14[1] = v16;
        swift_bridgeObjectRetain();
        goto LABEL_8;
      case 3u:
      case 4u:
      case 5u:
        uint64_t v17 = v8[1];
        void *v7 = *v8;
        v7[1] = v17;
        swift_bridgeObjectRetain();
LABEL_8:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
        break;
    }
    uint64_t v18 = *(int *)(type metadata accessor for PrimarySettingsListItemModel() + 20);
    uint64_t v19 = (char *)v7 + v18;
    uint64_t v20 = (char *)v8 + v18;
    type metadata accessor for PrimarySettingsListItemViewType();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v25 = type metadata accessor for FamilyRowStatus();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v19, v20, v25);
        uint64_t v26 = *(int *)(type metadata accessor for PrimarySettingsListFamilyLinkModel() + 20);
        double v27 = &v19[v26];
        int64_t v28 = &v20[v26];
        uint64_t v29 = *((void *)v28 + 1);
        *(void *)double v27 = *(void *)v28;
        *((void *)v27 + 1) = v29;
        swift_bridgeObjectRetain();
        break;
      case 2u:
        id v30 = *(id *)v20;
        uint64_t v31 = *((void *)v20 + 1);
        char v32 = v20[16];
        sub_100047728(*(id *)v20, v31, v32);
        *(void *)uint64_t v19 = v30;
        *((void *)v19 + 1) = v31;
        v19[16] = v32;
        uint64_t v33 = *((void *)v20 + 4);
        *((void *)v19 + 3) = *((void *)v20 + 3);
        *((void *)v19 + 4) = v33;
        *((_WORD *)v19 + 20) = *((_WORD *)v20 + 20);
        uint64_t v34 = *((void *)v20 + 6);
        uint64_t v35 = *((void *)v20 + 7);
        *((void *)v19 + 6) = v34;
        *((void *)v19 + 7) = v35;
        swift_bridgeObjectRetain();
        swift_retain();
        break;
      case 3u:
        uint64_t v36 = *((void *)v20 + 1);
        *(void *)uint64_t v19 = *(void *)v20;
        *((void *)v19 + 1) = v36;
        *((_WORD *)v19 + 8) = *((_WORD *)v20 + 8);
        swift_bridgeObjectRetain();
        break;
      case 4u:
        uint64_t v37 = *((void *)v20 + 1);
        *(void *)uint64_t v19 = *(void *)v20;
        *((void *)v19 + 1) = v37;
        *((void *)v19 + 2) = *((void *)v20 + 2);
        *((_WORD *)v19 + 12) = *((_WORD *)v20 + 12);
        swift_bridgeObjectRetain();
        break;
      case 5u:
        id v38 = *(id *)v20;
        uint64_t v39 = *((void *)v20 + 1);
        char v40 = v20[16];
        sub_100047728(*(id *)v20, v39, v40);
        *(void *)uint64_t v19 = v38;
        *((void *)v19 + 1) = v39;
        v19[16] = v40;
        uint64_t v41 = *((void *)v20 + 4);
        *((void *)v19 + 3) = *((void *)v20 + 3);
        *((void *)v19 + 4) = v41;
        *((_WORD *)v19 + 20) = *((_WORD *)v20 + 20);
        swift_bridgeObjectRetain();
        break;
      case 6u:
        id v42 = *(id *)v20;
        uint64_t v43 = *((void *)v20 + 1);
        char v44 = v20[16];
        sub_100047728(*(id *)v20, v43, v44);
        *(void *)uint64_t v19 = v42;
        *((void *)v19 + 1) = v43;
        v19[16] = v44;
        uint64_t v45 = *((void *)v20 + 4);
        *((void *)v19 + 3) = *((void *)v20 + 3);
        *((void *)v19 + 4) = v45;
        *((void *)v19 + 5) = *((void *)v20 + 5);
        *((_WORD *)v19 + 24) = *((_WORD *)v20 + 24);
        swift_bridgeObjectRetain();
        break;
      case 7u:
      case 8u:
        id v46 = *(id *)v20;
        uint64_t v47 = *((void *)v20 + 1);
        char v48 = v20[16];
        sub_100047728(*(id *)v20, v47, v48);
        *(void *)uint64_t v19 = v46;
        *((void *)v19 + 1) = v47;
        v19[16] = v48;
        uint64_t v49 = *((void *)v20 + 4);
        *((void *)v19 + 3) = *((void *)v20 + 3);
        *((void *)v19 + 4) = v49;
        uint64_t v50 = *((void *)v20 + 6);
        *((void *)v19 + 5) = *((void *)v20 + 5);
        *((void *)v19 + 6) = v50;
        *((_WORD *)v19 + 28) = *((_WORD *)v20 + 28);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 9u:
        int v51 = v20[16];
        if (v51 == 255)
        {
          *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
          v19[16] = v20[16];
        }
        else
        {
          id v52 = *(id *)v20;
          uint64_t v53 = *((void *)v20 + 1);
          sub_100047728(*(id *)v20, v53, v20[16]);
          *(void *)uint64_t v19 = v52;
          *((void *)v19 + 1) = v53;
          v19[16] = v51;
        }
        uint64_t v58 = *((void *)v20 + 4);
        *((void *)v19 + 3) = *((void *)v20 + 3);
        *((void *)v19 + 4) = v58;
        uint64_t v59 = *((void *)v20 + 5);
        uint64_t v60 = *((void *)v20 + 6);
        *((void *)v19 + 5) = v59;
        *((void *)v19 + 6) = v60;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 0xAu:
        int v54 = v20[16];
        if (v54 == 255)
        {
          *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
          v19[16] = v20[16];
        }
        else
        {
          id v55 = *(id *)v20;
          uint64_t v56 = *((void *)v20 + 1);
          sub_100047728(*(id *)v20, v56, v20[16]);
          *(void *)uint64_t v19 = v55;
          *((void *)v19 + 1) = v56;
          v19[16] = v54;
        }
        uint64_t v61 = *((void *)v20 + 4);
        *((void *)v19 + 3) = *((void *)v20 + 3);
        *((void *)v19 + 4) = v61;
        v19[40] = v20[40];
        swift_bridgeObjectRetain();
        break;
      default:
        uint64_t v21 = *((void *)v20 + 1);
        if (v21)
        {
          *(void *)uint64_t v19 = *(void *)v20;
          *((void *)v19 + 1) = v21;
          uint64_t v22 = *((void *)v20 + 3);
          *((void *)v19 + 2) = *((void *)v20 + 2);
          *((void *)v19 + 3) = v22;
          v19[32] = v20[32];
          uint64_t v23 = (void *)*((void *)v20 + 5);
          *((void *)v19 + 5) = v23;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v24 = v23;
        }
        else
        {
          long long v57 = *((_OWORD *)v20 + 1);
          *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
          *((_OWORD *)v19 + 1) = v57;
          *((_OWORD *)v19 + 2) = *((_OWORD *)v20 + 2);
        }
        v19[48] = v20[48];
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return v3;
}

uint64_t sub_100079380(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 20);
  char v5 = (char *)(a1 + v4);
  uint64_t v6 = (char *)(a2 + v4);
  uint64_t v7 = type metadata accessor for PrimarySettingsListItemIdentifier();
  unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v10 = type metadata accessor for FLFollowUpInformation();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v5, v6, v10);
    uint64_t v11 = sub_100046B9C(&qword_10015F7F8);
    *(_OWORD *)&v5[*(int *)(v11 + 48)] = *(_OWORD *)&v6[*(int *)(v11 + 48)];
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload > 1)
  {
    memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    uint64_t v9 = type metadata accessor for FLFollowUpInformation();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v5, v6, v9);
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v12 = *(int *)(type metadata accessor for PrimarySettingsListItemModel() + 20);
  uint64_t v13 = &v5[v12];
  uint64_t v14 = &v6[v12];
  uint64_t v15 = type metadata accessor for PrimarySettingsListItemViewType();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v16 = type metadata accessor for FamilyRowStatus();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v13, v14, v16);
    uint64_t v17 = type metadata accessor for PrimarySettingsListFamilyLinkModel();
    *(_OWORD *)&v13[*(int *)(v17 + 20)] = *(_OWORD *)&v14[*(int *)(v17 + 20)];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1000795D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v6;
  swift_release();
  if (a1 == a2)
  {
    type metadata accessor for PrimarySettingsListItemModel();
    return a1;
  }
  uint64_t v7 = *(int *)(a3 + 20);
  char v8 = (char *)(a1 + v7);
  uint64_t v9 = (char *)(a2 + v7);
  sub_10003DA8C(a1 + v7, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
  uint64_t v10 = type metadata accessor for PrimarySettingsListItemIdentifier();
  unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v12 = type metadata accessor for FLFollowUpInformation();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v8, v9, v12);
    uint64_t v13 = sub_100046B9C(&qword_10015F7F8);
    *(_OWORD *)&v8[*(int *)(v13 + 48)] = *(_OWORD *)&v9[*(int *)(v13 + 48)];
    goto LABEL_7;
  }
  if (EnumCaseMultiPayload <= 1)
  {
    uint64_t v14 = type metadata accessor for FLFollowUpInformation();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v8, v9, v14);
LABEL_7:
    swift_storeEnumTagMultiPayload();
    goto LABEL_9;
  }
  memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
LABEL_9:
  uint64_t v15 = *(int *)(type metadata accessor for PrimarySettingsListItemModel() + 20);
  uint64_t v16 = &v8[v15];
  uint64_t v17 = &v9[v15];
  sub_10003DA8C((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemViewType);
  uint64_t v18 = type metadata accessor for PrimarySettingsListItemViewType();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v19 = type metadata accessor for FamilyRowStatus();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v16, v17, v19);
    uint64_t v20 = type metadata accessor for PrimarySettingsListFamilyLinkModel();
    *(_OWORD *)&v16[*(int *)(v20 + 20)] = *(_OWORD *)&v17[*(int *)(v20 + 20)];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
  }
  return a1;
}

uint64_t sub_10007987C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100079890);
}

uint64_t sub_100079890(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 8);
    if (v4 > 1) {
      return (v4 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = type metadata accessor for PrimarySettingsListItemModel();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_100079938(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10007994C);
}

uint64_t sub_10007994C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 254)
  {
    *(unsigned char *)(result + 8) = -(char)a2;
  }
  else
  {
    uint64_t v7 = type metadata accessor for PrimarySettingsListItemModel();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_100079A1C()
{
  uint64_t v1 = (int *)(type metadata accessor for PrimarySettingsListItem() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)v1 + 64);
  swift_release();
  uint64_t v5 = v0 + v3 + v1[7];
  type metadata accessor for PrimarySettingsListItemIdentifier();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
      uint64_t v6 = type metadata accessor for FLFollowUpInformation();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
      break;
    case 2u:
      uint64_t v7 = type metadata accessor for FLFollowUpInformation();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v5, v7);
      sub_100046B9C(&qword_10015F7F8);
      goto LABEL_4;
    case 3u:
    case 4u:
    case 5u:
LABEL_4:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }
  uint64_t v8 = v5 + *(int *)(type metadata accessor for PrimarySettingsListItemModel() + 20);
  type metadata accessor for PrimarySettingsListItemViewType();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      if (*(void *)(v8 + 8))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      goto LABEL_20;
    case 1u:
      uint64_t v15 = type metadata accessor for FamilyRowStatus();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v8, v15);
      type metadata accessor for PrimarySettingsListFamilyLinkModel();
      break;
    case 2u:
      sub_100046F04(*(void **)v8, *(void *)(v8 + 8), *(unsigned char *)(v8 + 16));
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_20;
    case 3u:
    case 4u:
      break;
    case 5u:
    case 6u:
      uint64_t v9 = *(void **)v8;
      uint64_t v10 = *(void *)(v8 + 8);
      LOBYTE(v11) = *(unsigned char *)(v8 + 16);
      goto LABEL_18;
    case 7u:
    case 8u:
      uint64_t v12 = *(void **)v8;
      uint64_t v13 = *(void *)(v8 + 8);
      LOBYTE(v14) = *(unsigned char *)(v8 + 16);
      goto LABEL_14;
    case 9u:
      int v14 = *(unsigned __int8 *)(v8 + 16);
      if (v14 == 255) {
        goto LABEL_15;
      }
      uint64_t v12 = *(void **)v8;
      uint64_t v13 = *(void *)(v8 + 8);
LABEL_14:
      sub_100046F04(v12, v13, v14);
LABEL_15:
      swift_bridgeObjectRelease();
      break;
    case 0xAu:
      int v11 = *(unsigned __int8 *)(v8 + 16);
      if (v11 == 255) {
        break;
      }
      uint64_t v9 = *(void **)v8;
      uint64_t v10 = *(void *)(v8 + 8);
LABEL_18:
      sub_100046F04(v9, v10, v11);
      break;
    default:
      goto LABEL_20;
  }
  swift_bridgeObjectRelease();
LABEL_20:

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_100079D2C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = EnvironmentValues.isEnabled.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_100079D5C()
{
  return EnvironmentValues.isEnabled.setter();
}

uint64_t sub_100079D84()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100079D94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void **)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v5 = *(void *)(a1 + 32);
  char v6 = *(unsigned char *)(a1 + 40);
  *(void *)a2 = *(void *)a1;
  *(void *)(a2 + 8) = v2;
  char v7 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a2 + 16) = v7;
  *(void *)(a2 + 24) = v4;
  *(void *)(a2 + 32) = v5;
  *(unsigned char *)(a2 + 40) = v6;
  sub_10006EB6C(v3, v2, v7);

  return swift_bridgeObjectRetain();
}

uint64_t sub_100079DEC()
{
  int v1 = *(unsigned __int8 *)(v0 + 32);
  if (v1 != 255) {
    sub_100046F04(*(void **)(v0 + 16), *(void *)(v0 + 24), v1);
  }
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 57, 7);
}

uint64_t sub_100079E38@<X0>(uint64_t a1@<X8>)
{
  return sub_100079D94(v1 + 16, a1);
}

uint64_t sub_100079E48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void **)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 40);
  char v7 = *(unsigned char *)(a1 + 48);
  char v8 = *(unsigned char *)(a1 + 49);
  *(void *)a2 = *(void *)a1;
  *(void *)(a2 + 8) = v2;
  char v9 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a2 + 16) = v9;
  *(void *)(a2 + 24) = v4;
  *(void *)(a2 + 32) = v5;
  *(void *)(a2 + 40) = v6;
  *(unsigned char *)(a2 + 48) = v7;
  *(unsigned char *)(a2 + 49) = v8;
  sub_100047728(v3, v2, v9);

  return swift_bridgeObjectRetain();
}

uint64_t sub_100079EB0()
{
  return sub_100079EC8(66);
}

uint64_t sub_100079EB8@<X0>(uint64_t a1@<X8>)
{
  return sub_100079E48(v1 + 16, a1);
}

uint64_t sub_100079EC0()
{
  return sub_100079EC8(58);
}

uint64_t sub_100079EC8(uint64_t a1)
{
  sub_100046F04(*(void **)(v1 + 16), *(void *)(v1 + 24), *(unsigned char *)(v1 + 32));
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v1, a1, 7);
}

uint64_t sub_100079F18()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 42, 7);
}

uint64_t sub_100079F50@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 24);
  uint64_t v3 = *(void *)(v1 + 32);
  char v4 = *(unsigned char *)(v1 + 40);
  char v5 = *(unsigned char *)(v1 + 41);
  *(void *)a1 = *(void *)(v1 + 16);
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 25) = v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_100079F74()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 34, 7);
}

uint64_t sub_100079FAC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 24);
  char v3 = *(unsigned char *)(v1 + 32);
  char v4 = *(unsigned char *)(v1 + 33);
  *(void *)a1 = *(void *)(v1 + 16);
  *(void *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 17) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_100079FC8()
{
  uint64_t v1 = *(void *)(type metadata accessor for PrimarySettingsListFamilyLink() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = type metadata accessor for FamilyRowStatus();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  type metadata accessor for PrimarySettingsListFamilyLinkModel();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_10007A0B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for PrimarySettingsListFamilyLink() - 8);
  return sub_10003FA0C(v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)), a1, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListFamilyLink);
}

uint64_t sub_10007A130()
{
  if (*(void *)(v0 + 24))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return _swift_deallocObject(v0, 65, 7);
}

uint64_t sub_10007A18C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10007A1A8@<X0>(uint64_t a1@<X8>)
{
  sub_100030C58();
  swift_bridgeObjectRetain();
  uint64_t v2 = Text.init<A>(_:)();
  uint64_t v20 = v3;
  uint64_t v21 = v2;
  uint64_t v22 = v4;
  char v19 = v5 & 1;
  swift_bridgeObjectRetain();
  uint64_t v6 = Text.init<A>(_:)();
  uint64_t v8 = v7;
  char v10 = v9 & 1;
  static Font.footnote.getter();
  uint64_t v11 = Text.font(_:)();
  uint64_t v13 = v12;
  char v15 = v14;
  uint64_t v17 = v16;
  swift_release();
  v15 &= 1u;
  sub_100037590(v6, v8, v10);
  swift_bridgeObjectRelease();
  *(void *)a1 = v21;
  *(void *)(a1 + 8) = v20;
  *(unsigned char *)(a1 + 16) = v19;
  *(void *)(a1 + 24) = v22;
  *(void *)(a1 + 32) = v11;
  *(void *)(a1 + 40) = v13;
  *(unsigned char *)(a1 + 48) = v15;
  *(void *)(a1 + 56) = v17;
  sub_10006591C(v21, v20, v19);
  swift_bridgeObjectRetain();
  sub_10006591C(v11, v13, v15);
  swift_bridgeObjectRetain();
  sub_100037590(v11, v13, v15);
  swift_bridgeObjectRelease();
  sub_100037590(v21, v20, v19);
  return swift_bridgeObjectRelease();
}

id sub_10007A334@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void **)a1;
  uint64_t v4 = *(void *)(a1 + 8);
  char v5 = *(unsigned char *)(a1 + 16);
  *(void *)a2 = swift_getKeyPath();
  *(unsigned char *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = v3;
  *(void *)(a2 + 24) = v4;
  *(unsigned char *)(a2 + 32) = v5;

  return sub_100047728(v3, v4, v5);
}

uint64_t sub_10007A39C()
{
  return Label.init(title:icon:)();
}

uint64_t sub_10007A47C@<X0>(uint64_t a1@<X8>)
{
  return sub_10007A1A8(a1);
}

id sub_10007A484@<X0>(uint64_t a1@<X8>)
{
  return sub_10007A334(*(void *)(v1 + 16), a1);
}

uint64_t sub_10007A494()
{
  return sub_10004D2D4(&qword_1001601C8, &qword_1001601D0);
}

uint64_t sub_10007A4D8()
{
  swift_unknownObjectRelease();
  sub_100046F04(*(void **)(v0 + 32), *(void *)(v0 + 40), *(unsigned char *)(v0 + 48));
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 96, 7);
}

uint64_t sub_10007A52C(unsigned __int8 *a1)
{
  return (*(uint64_t (**)(void))(v1 + 80))(*a1);
}

uint64_t sub_10007A560()
{
  return sub_10004D2D4(&qword_1001601D8, &qword_1001601E0);
}

void *sub_10007A5A8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v20 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    char v5 = *((unsigned char *)a2 + 8);
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = v5;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = a1 + v6;
    uint64_t v8 = (uint64_t)a2 + v6;
    uint64_t v9 = *(uint64_t *)((char *)a2 + v6);
    uint64_t v10 = *(uint64_t *)((char *)a2 + v6 + 8);
    unsigned __int8 v11 = *((unsigned char *)a2 + v6 + 16);
    swift_retain();
    sub_10003DA14(v9, v10, v11);
    *(void *)uint64_t v7 = v9;
    *(void *)(v7 + 8) = v10;
    *(unsigned char *)(v7 + 16) = v11;
    uint64_t v12 = *(void *)(v8 + 32);
    *(void *)(v7 + 24) = *(void *)(v8 + 24);
    *(void *)(v7 + 32) = v12;
    uint64_t v13 = type metadata accessor for PrimarySettingsListSectionModel();
    uint64_t v14 = *(int *)(v13 + 24);
    __dst = (void *)(v7 + v14);
    char v15 = (const void *)(v8 + v14);
    uint64_t v16 = type metadata accessor for LocalizedStringResource();
    uint64_t v17 = *(void *)(v16 - 8);
    uint64_t v18 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48);
    swift_bridgeObjectRetain();
    if (v18(v15, 1, v16))
    {
      uint64_t v19 = sub_100046B9C(&qword_100163C30);
      memcpy(__dst, v15, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v17 + 16))(__dst, v15, v16);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(__dst, 0, 1, v16);
    }
    *(void *)(v7 + *(int *)(v13 + 28)) = *(void *)(v8 + *(int *)(v13 + 28));
    swift_bridgeObjectRetain();
  }
  return v3;
}

uint64_t sub_10007A790(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  *(_OWORD *)uint64_t v5 = *(_OWORD *)(a2 + v4);
  *(unsigned char *)(v5 + 16) = *(unsigned char *)(a2 + v4 + 16);
  *(_OWORD *)(v5 + 24) = *(_OWORD *)(a2 + v4 + 24);
  uint64_t v7 = type metadata accessor for PrimarySettingsListSectionModel();
  uint64_t v8 = *(int *)(v7 + 24);
  uint64_t v9 = (void *)(v5 + v8);
  uint64_t v10 = (const void *)(v6 + v8);
  uint64_t v11 = type metadata accessor for LocalizedStringResource();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    uint64_t v13 = sub_100046B9C(&qword_100163C30);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v9, v10, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  *(void *)(v5 + *(int *)(v7 + 28)) = *(void *)(v6 + *(int *)(v7 + 28));
  return a1;
}

uint64_t sub_10007A8F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v6;
  swift_release();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  LOBYTE(v7) = *(unsigned char *)(a2 + v7 + 16);
  uint64_t v10 = *(void *)v8;
  uint64_t v11 = *(void *)(v8 + 8);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  unsigned __int8 v12 = *(unsigned char *)(v8 + 16);
  *(unsigned char *)(v8 + 16) = v7;
  sub_10003E2B4(v10, v11, v12);
  uint64_t v13 = *(void *)(v9 + 32);
  *(void *)(v8 + 24) = *(void *)(v9 + 24);
  *(void *)(v8 + 32) = v13;
  swift_bridgeObjectRelease();
  uint64_t v24 = type metadata accessor for PrimarySettingsListSectionModel();
  uint64_t v14 = *(int *)(v24 + 24);
  char v15 = (void *)(v8 + v14);
  uint64_t v16 = (void *)(v9 + v14);
  uint64_t v17 = type metadata accessor for LocalizedStringResource();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v18 + 48);
  int v20 = v19(v15, 1, v17);
  int v21 = v19(v16, 1, v17);
  if (!v20)
  {
    if (!v21)
    {
      (*(void (**)(void *, void *, uint64_t))(v18 + 40))(v15, v16, v17);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v18 + 8))(v15, v17);
    goto LABEL_6;
  }
  if (v21)
  {
LABEL_6:
    uint64_t v22 = sub_100046B9C(&qword_100163C30);
    memcpy(v15, v16, *(void *)(*(void *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v18 + 32))(v15, v16, v17);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
LABEL_7:
  *(void *)(v8 + *(int *)(v24 + 28)) = *(void *)(v9 + *(int *)(v24 + 28));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10007AAEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10007AB00);
}

uint64_t sub_10007AB00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 8);
    if (v4 > 1) {
      return (v4 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = type metadata accessor for PrimarySettingsListSectionModel();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_10007ABA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10007ABBC);
}

uint64_t sub_10007ABBC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 254)
  {
    *(unsigned char *)(result + 8) = -(char)a2;
  }
  else
  {
    uint64_t v7 = type metadata accessor for PrimarySettingsListSectionModel();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_10007AC60(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for OpenURLAction();
  __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return EnvironmentValues.openURL.setter();
}

uint64_t sub_10007AD28(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for PrimarySettingsListSection();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100046B9C(&qword_100164100);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = URL.scheme.getter();
  char v12 = sub_1000E9870(v10, v11);
  if (v12 == 7)
  {
    return static OpenURLAction.Result.systemAction.getter();
  }
  else
  {
    char v13 = v12;
    uint64_t v14 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v9, 1, 1, v14);
    sub_100049AA4(a2, (uint64_t)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for PrimarySettingsListSection);
    type metadata accessor for MainActor();
    uint64_t v15 = static MainActor.shared.getter();
    unint64_t v16 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    uint64_t v17 = v16 + v5;
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = v15;
    *(void *)(v18 + 24) = &protocol witness table for MainActor;
    sub_10007B250((uint64_t)v6, v18 + v16);
    *(unsigned char *)(v18 + v17) = v13;
    sub_1000C9558((uint64_t)v9, (uint64_t)&unk_100160308, v18);
    swift_release();
    return static OpenURLAction.Result.handled.getter();
  }
}

uint64_t sub_10007AF50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(unsigned char *)(v5 + 32) = a5;
  *(void *)(v5 + 16) = a4;
  type metadata accessor for MainActor();
  *(void *)(v5 + 24) = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10007AFEC, v7, v6);
}

uint64_t sub_10007AFEC()
{
  uint64_t v1 = *(void *)(v0 + 16);
  char v2 = *(unsigned char *)(v0 + 32);
  swift_release();
  LOBYTE(v1) = *(unsigned char *)(v1 + 8);
  uint64_t v3 = swift_retain();
  sub_100037090(v3, v1);
  swift_release();
  swift_retain();
  swift_release();
  sub_100036FFC();
  swift_release();
  sub_1000C9150(v2);
  swift_release();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_10007B0B4()
{
  return EnvironmentValues.openURL.getter();
}

uint64_t sub_10007B0DC()
{
  uint64_t v1 = (int *)(type metadata accessor for PrimarySettingsListSection() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)v1 + 64);
  swift_release();
  uint64_t v5 = v0 + v3 + v1[7];
  sub_10003E2B4(*(void *)v5, *(void *)(v5 + 8), *(unsigned char *)(v5 + 16));
  swift_bridgeObjectRelease();
  uint64_t v6 = v5 + *(int *)(type metadata accessor for PrimarySettingsListSectionModel() + 24);
  uint64_t v7 = type metadata accessor for LocalizedStringResource();
  uint64_t v8 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_10007B250(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PrimarySettingsListSection();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10007B2B4(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for PrimarySettingsListSection() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_10007AD28(a1, v4);
}

uint64_t sub_10007B334(uint64_t a1)
{
  uint64_t v2 = sub_100046B9C(&qword_1001602F8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10007B394()
{
  uint64_t v1 = (int *)(type metadata accessor for PrimarySettingsListSection() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = *(void *)(*(void *)v1 + 64);
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v5 = v0 + v3 + v1[7];
  sub_10003E2B4(*(void *)v5, *(void *)(v5 + 8), *(unsigned char *)(v5 + 16));
  swift_bridgeObjectRelease();
  uint64_t v6 = v5 + *(int *)(type metadata accessor for PrimarySettingsListSectionModel() + 24);
  uint64_t v7 = type metadata accessor for LocalizedStringResource();
  uint64_t v8 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v4 + v3 + 1, v2 | 7);
}

uint64_t sub_10007B514(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for PrimarySettingsListSection() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = v1 + v5;
  char v9 = *(unsigned char *)(v1 + v5 + *(void *)(v4 + 64));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_10007B630;
  return sub_10007AF50(a1, v6, v7, v8, v9);
}

uint64_t sub_10007B630()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t getEnumTagSinglePayload for DeviceOSExpertFeatureFlags(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for DeviceOSExpertFeatureFlags(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10007B884);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_10007B8AC(unsigned char *result, char a2)
{
  *uint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for DeviceOSExpertFeatureFlags()
{
  return &type metadata for DeviceOSExpertFeatureFlags;
}

unint64_t sub_10007B8CC()
{
  unint64_t result = qword_100160338;
  if (!qword_100160338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160338);
  }
  return result;
}

BOOL sub_10007B920(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

Swift::Int sub_10007B938()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_10007B980()
{
  Hasher._combine(_:)(*v0);
}

Swift::Int sub_10007B9AC()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

uint64_t getEnumTagSinglePayload for SiriFeatureFlags(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *storeEnumTagSinglePayload for SiriFeatureFlags(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x10007BAE0);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10007BB08()
{
  return 0;
}

ValueMetadata *type metadata accessor for SiriFeatureFlags()
{
  return &type metadata for SiriFeatureFlags;
}

unint64_t sub_10007BB24()
{
  unint64_t result = qword_100160340;
  if (!qword_100160340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160340);
  }
  return result;
}

uint64_t sub_10007BB78()
{
  return 1;
}

Swift::Int sub_10007BB80()
{
  return Hasher._finalize()();
}

void sub_10007BBC4()
{
}

Swift::Int sub_10007BBEC()
{
  return Hasher._finalize()();
}

uint64_t sub_10007BC2C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, char *a4@<X8>)
{
  uint64_t v36 = a3;
  v34[1] = a1;
  void v34[2] = a2;
  uint64_t v41 = a4;
  uint64_t v4 = sub_100046B9C(&qword_100160368);
  uint64_t v44 = *(void *)(v4 - 8);
  uint64_t v5 = __chkstk_darwin(v4);
  char v40 = (char *)v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v39 = (char *)v34 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  id v38 = (char *)v34 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v37 = (char *)v34 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v35 = (char *)v34 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v43 = (char *)v34 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v19 = (char *)v34 - v18;
  __chkstk_darwin(v17);
  id v42 = (char *)v34 - v20;
  AppStorage.projectedValue.getter();
  uint64_t v45 = v48;
  uint64_t v46 = v49;
  char v47 = v50;
  static Animation.default.getter();
  sub_100046B9C(&qword_100160370);
  Binding.animation(_:)();
  swift_release();
  swift_release();
  swift_release();
  Toggle.init(isOn:label:)();
  AppStorage.projectedValue.getter();
  uint64_t v45 = v48;
  uint64_t v46 = v49;
  char v47 = v50;
  static Animation.default.getter();
  Binding.animation(_:)();
  swift_release();
  swift_release();
  swift_release();
  int v21 = v19;
  v34[0] = v19;
  Toggle.init(isOn:label:)();
  AppStorage.projectedValue.getter();
  uint64_t v45 = v48;
  uint64_t v46 = v49;
  char v47 = v50;
  static Animation.default.getter();
  Binding.animation(_:)();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v22 = v43;
  Toggle.init(isOn:label:)();
  AppStorage.projectedValue.getter();
  uint64_t v45 = v48;
  uint64_t v46 = v49;
  char v47 = v50;
  static Animation.default.getter();
  Binding.animation(_:)();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v23 = v35;
  Toggle.init(isOn:label:)();
  uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v44 + 16);
  uint64_t v25 = v37;
  v24(v37, v42, v4);
  uint64_t v26 = v38;
  v24(v38, v21, v4);
  double v27 = v39;
  v24(v39, v22, v4);
  int64_t v28 = v40;
  uint64_t v29 = v23;
  v24(v40, v23, v4);
  id v30 = v41;
  v24(v41, v25, v4);
  uint64_t v31 = (int *)sub_100046B9C(&qword_100160378);
  v24(&v30[v31[12]], v26, v4);
  v24(&v30[v31[16]], v27, v4);
  v24(&v30[v31[20]], v28, v4);
  char v32 = *(void (**)(char *, uint64_t))(v44 + 8);
  v32(v29, v4);
  v32(v43, v4);
  v32((char *)v34[0], v4);
  v32(v42, v4);
  v32(v28, v4);
  v32(v27, v4);
  v32(v26, v4);
  return ((uint64_t (*)(char *, uint64_t))v32)(v25, v4);
}

void sub_10007C1D4(uint64_t a1@<X8>)
{
  *(void *)a1 = 0xD000000000000012;
  *(void *)(a1 + 8) = 0x8000000100124180;
  *(unsigned char *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = &_swiftEmptyArrayStorage;
}

void sub_10007C204(uint64_t a1@<X8>)
{
  *(void *)a1 = 0xD000000000000012;
  *(void *)(a1 + 8) = 0x8000000100124890;
  *(unsigned char *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = &_swiftEmptyArrayStorage;
}

void sub_10007C234(uint64_t a1@<X8>)
{
  *(void *)a1 = 0xD000000000000013;
  *(void *)(a1 + 8) = 0x8000000100124140;
  *(unsigned char *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = &_swiftEmptyArrayStorage;
}

uint64_t sub_10007C264()
{
  uint64_t v1 = sub_100046B9C(&qword_100160348);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = &v7[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  long long v5 = v0[1];
  long long v8 = *v0;
  long long v9 = v5;
  sub_100046B9C(&qword_100160350);
  sub_10004D2D4(&qword_100160358, &qword_100160350);
  List<>.init(content:)();
  sub_10004D2D4(&qword_100160360, &qword_100160348);
  View.navigationTitle(_:)();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t sub_10007C408()
{
  if (qword_10015F190 != -1) {
    swift_once();
  }
  id v0 = (id)qword_10016B0A0;
  uint64_t v1 = AppStorage.init<A>(wrappedValue:_:store:)();
  id v2 = v0;
  AppStorage.init<A>(wrappedValue:_:store:)();
  id v3 = v2;
  AppStorage.init<A>(wrappedValue:_:store:)();
  id v4 = v3;
  AppStorage.init<A>(wrappedValue:_:store:)();
  return v1;
}

uint64_t destroy for DebugSettingsList()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

void *initializeWithCopy for DebugSettingsList(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for DebugSettingsList(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for DebugSettingsList(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

_OWORD *assignWithTake for DebugSettingsList(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  swift_release();
  a1[1] = a2[1];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for DebugSettingsList(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DebugSettingsList(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugSettingsList()
{
  return &type metadata for DebugSettingsList;
}

uint64_t sub_10007C760()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10007C77C@<X0>(char *a1@<X8>)
{
  return sub_10007BC2C(v1[3], v1[4], v1[5], a1);
}

uint64_t sub_10007C788()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t *sub_10007C80C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    sub_100046B9C((uint64_t *)&unk_100162C50);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for DismissAction();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = *(void *)v11;
    LOBYTE(v11) = v11[8];
    *(void *)uint64_t v10 = v12;
    v10[8] = (char)v11;
  }
  swift_retain();
  return a1;
}

uint64_t sub_10007C938(uint64_t a1)
{
  sub_100046B9C((uint64_t *)&unk_100162C50);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = type metadata accessor for DismissAction();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  }
  else
  {
    swift_release();
  }

  return swift_release();
}

void *sub_10007C9D8(void *a1, void *a2, uint64_t a3)
{
  sub_100046B9C((uint64_t *)&unk_100162C50);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for DismissAction();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = *(void *)v9;
  LOBYTE(v9) = v9[8];
  *(void *)uint64_t v8 = v10;
  v8[8] = (char)v9;
  swift_retain();
  return a1;
}

void *sub_10007CAB8(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10003F5D0((uint64_t)a1, (uint64_t *)&unk_100162C50);
    sub_100046B9C((uint64_t *)&unk_100162C50);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for DismissAction();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = *(void *)v9;
  LOBYTE(v9) = v9[8];
  *(void *)uint64_t v8 = v10;
  v8[8] = (char)v9;
  swift_retain();
  swift_release();
  return a1;
}

char *sub_10007CBBC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_100046B9C((uint64_t *)&unk_100162C50);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for DismissAction();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  *(void *)uint64_t v9 = *(void *)v10;
  v9[8] = v10[8];
  return a1;
}

char *sub_10007CCA0(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10003F5D0((uint64_t)a1, (uint64_t *)&unk_100162C50);
    uint64_t v6 = sub_100046B9C((uint64_t *)&unk_100162C50);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for DismissAction();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = *(void *)v10;
  LOBYTE(v10) = v10[8];
  *(void *)uint64_t v9 = v11;
  v9[8] = (char)v10;
  swift_release();
  return a1;
}

uint64_t sub_10007CDA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10007CDB8);
}

uint64_t sub_10007CDB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100046B9C(&qword_100160380);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 > 1) {
      return (v10 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_10007CE7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10007CE90);
}

uint64_t sub_10007CE90(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_100046B9C(&qword_100160380);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20) + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_10007CF54()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10007CF70@<X0>(uint64_t a1@<X8>)
{
  uint64_t v24 = a1;
  uint64_t v2 = sub_100046B9C(&qword_100160420);
  uint64_t v22 = *(void *)(v2 - 8);
  uint64_t v23 = v2;
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_100046B9C(&qword_100160428);
  uint64_t v5 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = v1;
  sub_100046B9C(&qword_100160430);
  uint64_t v8 = sub_10004D318(&qword_100160438);
  uint64_t v9 = sub_10004D318(&qword_100160440);
  uint64_t v10 = sub_10004D318(&qword_100160448);
  uint64_t v11 = sub_10004D318(&qword_100160450);
  uint64_t v12 = sub_10004D2D4(&qword_100160458, &qword_100160450);
  uint64_t v26 = v11;
  uint64_t v27 = v12;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v14 = sub_10004D2D4(&qword_100160460, &qword_100160448);
  uint64_t v26 = v9;
  uint64_t v27 = v10;
  uint64_t v28 = OpaqueTypeConformance2;
  uint64_t v29 = v14;
  uint64_t v15 = swift_getOpaqueTypeConformance2();
  uint64_t v26 = v8;
  uint64_t v27 = v15;
  swift_getOpaqueTypeConformance2();
  NavigationStack.init<>(root:)();
  id v16 = [self currentDevice];
  id v17 = [v16 userInterfaceIdiom];

  if (!v17)
  {
    sub_100046B9C(&qword_100160470);
    type metadata accessor for PresentationDetent();
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_10011C370;
    static PresentationDetent.medium.getter();
    static PresentationDetent.large.getter();
    sub_100100AD0(v18);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
  }
  sub_10004D2D4(&qword_100160468, &qword_100160420);
  uint64_t v19 = v23;
  View.presentationDetents(_:)();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v4, v19);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(v24, v7, v21);
}

uint64_t sub_10007D38C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v24 = a1;
  uint64_t v29 = a2;
  uint64_t v25 = type metadata accessor for NavigationBarItem.TitleDisplayMode();
  uint64_t v3 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100046B9C(&qword_100160450);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100046B9C(&qword_100160440);
  uint64_t v26 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100046B9C(&qword_100160438);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v27 = v13;
  uint64_t v28 = v14;
  __chkstk_darwin(v13);
  id v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = a1;
  sub_100046B9C(&qword_100160478);
  sub_10004D2D4(&qword_100160480, &qword_100160478);
  List<>.init(content:)();
  uint64_t v17 = v25;
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for NavigationBarItem.TitleDisplayMode.inline(_:), v25);
  uint64_t v18 = sub_10004D2D4(&qword_100160458, &qword_100160450);
  View.navigationBarTitleDisplayMode(_:)();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v17);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v30 = v24;
  uint64_t v19 = sub_100046B9C(&qword_100160448);
  uint64_t v32 = v6;
  uint64_t v33 = v18;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v21 = sub_10004D2D4(&qword_100160460, &qword_100160448);
  View.toolbar<A>(content:)();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v12, v10);
  uint64_t v32 = v10;
  uint64_t v33 = v19;
  uint64_t v34 = OpaqueTypeConformance2;
  uint64_t v35 = v21;
  swift_getOpaqueTypeConformance2();
  uint64_t v22 = v27;
  View.settingsListAppearance()();
  return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v16, v22);
}

uint64_t sub_10007D7DC@<X0>(void (*a1)(char *, char *, uint64_t)@<X0>, char *a2@<X8>)
{
  uint64_t v66 = a2;
  uint64_t v84 = sub_100046B9C(&qword_1001604D8);
  uint64_t v68 = *(void *)(v84 - 8);
  uint64_t v3 = __chkstk_darwin(v84);
  uint64_t v83 = (char *)&v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  int64_t v80 = (char *)&v63 - v5;
  uint64_t v77 = sub_100046B9C(&qword_1001604E0);
  uint64_t v67 = *(void *)(v77 - 8);
  uint64_t v6 = __chkstk_darwin(v77);
  uint64_t v82 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  unint64_t v75 = (char *)&v63 - v8;
  uint64_t v81 = sub_100046B9C(&qword_1001604E8);
  uint64_t v76 = *(void *)(v81 - 8);
  uint64_t v9 = __chkstk_darwin(v81);
  uint64_t v79 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v74 = (char *)&v63 - v11;
  uint64_t v12 = type metadata accessor for NavigationPath();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100046B9C(&qword_1001604F0);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  uint64_t v78 = (uint64_t)&v63 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v69 = (uint64_t)&v63 - v19;
  uint64_t v20 = type metadata accessor for SettingsApplicationDebugRoot();
  uint64_t v21 = v20 - 8;
  uint64_t v22 = *(void *)(v20 - 8);
  uint64_t v23 = *(void *)(v22 + 64);
  __chkstk_darwin(v20);
  uint64_t v24 = (char *)&v63 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_100046B9C(&qword_1001604B0);
  uint64_t v72 = *(void *)(v25 - 8);
  uint64_t v73 = v25;
  uint64_t v26 = __chkstk_darwin(v25);
  uint64_t v71 = (char *)&v63 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  uint64_t v29 = (char *)&v63 - v28;
  sub_10007FADC((uint64_t)a1, (uint64_t)v24);
  unint64_t v30 = (*(unsigned __int8 *)(v22 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  uint64_t v64 = (void (*)(char *, char *, uint64_t))(v30 + v23);
  uint64_t v31 = swift_allocObject();
  sub_10007FB44((uint64_t)v24, v31 + v30);
  char v70 = v29;
  Button.init(action:label:)();
  uint64_t v32 = *(int *)(v21 + 28);
  uint64_t v65 = a1;
  char v33 = *((unsigned char *)a1 + v32 + 8);
  uint64_t v34 = swift_retain();
  uint64_t v35 = sub_100037090(v34, v33);
  swift_release();
  uint64_t v36 = *(void *)(v35 + 32);
  swift_retain();
  swift_release();
  swift_getKeyPath();
  *(void *)&long long v85 = v36;
  sub_10007FC38();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v37 = v36 + OBJC_IVAR____TtC11SettingsApp26SettingsAppNavigationModel__navigationPath;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v37, v12);
  swift_release();
  LOBYTE(v37) = NavigationPath.isEmpty.getter();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  if (v37)
  {
    uint64_t v38 = 1;
    uint64_t v39 = v69;
  }
  else
  {
    char v40 = v65;
    sub_10007FADC((uint64_t)v65, (uint64_t)v24);
    uint64_t v41 = swift_allocObject();
    uint64_t v42 = sub_10007FB44((uint64_t)v24, v41 + v30);
    __chkstk_darwin(v42);
    *(&v63 - 2) = v40;
    uint64_t v39 = v69;
    Button.init(action:label:)();
    uint64_t v38 = 0;
  }
  uint64_t v43 = v73;
  uint64_t v44 = v72;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v72 + 56))(v39, v38, 1, v73);
  sub_100046B9C(&qword_1001604F8);
  sub_10004D2D4(&qword_100160500, &qword_1001604F8);
  uint64_t v45 = v74;
  Section<>.init(content:)();
  long long v85 = xmmword_10011D990;
  char v86 = 0;
  uint64_t v87 = _swiftEmptyArrayStorage;
  sub_100046B9C(&qword_100160508);
  sub_10004D2D4(&qword_100160510, &qword_100160508);
  uint64_t v46 = v75;
  Section<>.init(header:content:)();
  long long v85 = xmmword_10011D9A0;
  char v86 = 0;
  uint64_t v87 = _swiftEmptyArrayStorage;
  sub_100046B9C(&qword_100160518);
  sub_10007FE48();
  Section<>.init(header:content:)();
  char v47 = *(void (**)(char *, char *, uint64_t))(v44 + 16);
  uint64_t v48 = v71;
  v47(v71, v70, v43);
  sub_10007FF38(v39, v78);
  uint64_t v65 = *(void (**)(char *, char *, uint64_t))(v76 + 16);
  v65(v79, v45, v81);
  uint64_t v49 = v67;
  uint64_t v64 = *(void (**)(char *, char *, uint64_t))(v67 + 16);
  v64(v82, v46, v77);
  uint64_t v50 = v68;
  uint64_t v63 = *(void (**)(char *, char *, uint64_t))(v68 + 16);
  v63(v83, v80, v84);
  int v51 = v66;
  v47(v66, v48, v43);
  id v52 = (int *)sub_100046B9C(&qword_100160538);
  sub_10007FF38(v78, (uint64_t)&v51[v52[12]]);
  uint64_t v53 = v81;
  v65(&v51[v52[16]], v79, v81);
  uint64_t v54 = v77;
  v64(&v51[v52[20]], v82, v77);
  id v55 = &v51[v52[24]];
  uint64_t v56 = v84;
  v63(v55, v83, v84);
  long long v57 = *(void (**)(char *, uint64_t))(v50 + 8);
  v57(v80, v56);
  uint64_t v58 = *(void (**)(char *, uint64_t))(v49 + 8);
  v58(v75, v54);
  uint64_t v59 = *(void (**)(char *, uint64_t))(v76 + 8);
  v59(v74, v53);
  sub_10003F5D0(v69, &qword_1001604F0);
  uint64_t v60 = v73;
  uint64_t v61 = *(void (**)(char *, uint64_t))(v72 + 8);
  v61(v70, v73);
  v57(v83, v84);
  v58(v82, v54);
  v59(v79, v81);
  sub_10003F5D0(v78, &qword_1001604F0);
  return ((uint64_t (*)(char *, uint64_t))v61)(v71, v60);
}

uint64_t sub_10007E234(uint64_t a1)
{
  char v1 = *(unsigned char *)(a1 + *(int *)(type metadata accessor for SettingsApplicationDebugRoot() + 20) + 8);
  uint64_t v2 = swift_retain();
  sub_100037090(v2, v1);
  swift_release();
  swift_retain();
  swift_release();
  sub_1000D44DC();

  return swift_release();
}

void sub_10007E2B8(uint64_t a1@<X8>)
{
  *(void *)a1 = 0xD00000000000001BLL;
  *(void *)(a1 + 8) = 0x8000000100124960;
  *(unsigned char *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = &_swiftEmptyArrayStorage;
}

uint64_t sub_10007E2E8(uint64_t a1)
{
  char v1 = *(unsigned char *)(a1 + *(int *)(type metadata accessor for SettingsApplicationDebugRoot() + 20) + 8);
  uint64_t v2 = swift_retain();
  sub_100037090(v2, v1);
  swift_release();
  swift_retain();
  swift_release();
  swift_getKeyPath();
  sub_10007FC38();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_getKeyPath();
  ObservationRegistrar.willSet<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  NavigationPath.removeLast(_:)(1);
  swift_endAccess();
  swift_getKeyPath();
  ObservationRegistrar.didSet<A, B>(_:keyPath:)();
  swift_release();
  return swift_release();
}

void sub_10007E43C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for NavigationPath();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = 0;
  unint64_t v20 = 0xE000000000000000;
  _StringGuts.grow(_:)(16);
  uint64_t v21 = v19;
  unint64_t v22 = v20;
  LOBYTE(a1) = *(unsigned char *)(a1 + *(int *)(type metadata accessor for SettingsApplicationDebugRoot() + 20) + 8);
  uint64_t v8 = swift_retain();
  uint64_t v9 = sub_100037090(v8, a1);
  swift_release();
  uint64_t v10 = *(void *)(v9 + 32);
  swift_retain();
  swift_release();
  swift_getKeyPath();
  uint64_t v19 = v10;
  sub_10007FC38();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v11 = v10 + OBJC_IVAR____TtC11SettingsApp26SettingsAppNavigationModel__navigationPath;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v11, v4);
  swift_release();
  uint64_t v12 = NavigationPath.count.getter();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v18 = v12;
  uint64_t v13 = dispatch thunk of CustomStringConvertible.description.getter();
  unint64_t v15 = v14;
  swift_bridgeObjectRelease();
  uint64_t v21 = v13;
  unint64_t v22 = v15;
  v16._uint64_t countAndFlagsBits = 0x6F20736D65746920;
  v16._object = (void *)0xEE0068746170206ELL;
  String.append(_:)(v16);
  unint64_t v17 = v22;
  *(void *)a2 = v21;
  *(void *)(a2 + 8) = v17;
  *(unsigned char *)(a2 + 16) = 0;
  *(void *)(a2 + 24) = _swiftEmptyArrayStorage;
}

uint64_t sub_10007E674@<X0>(char *a1@<X8>)
{
  uint64_t v38 = a1;
  uint64_t v39 = sub_100046B9C(&qword_100160560);
  uint64_t v1 = *(void *)(v39 - 8);
  uint64_t v2 = __chkstk_darwin(v39);
  uint64_t v37 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v32 - v4;
  uint64_t v6 = sub_100046B9C(&qword_100160568);
  uint64_t v36 = *(void *)(v6 - 8);
  uint64_t v7 = v36;
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v32 - v11;
  uint64_t v13 = AppStorage.init<A>(wrappedValue:_:store:)();
  uint64_t v14 = AppStorage.init<A>(wrappedValue:_:store:)();
  uint64_t v15 = AppStorage.init<A>(wrappedValue:_:store:)();
  uint64_t v16 = AppStorage.init<A>(wrappedValue:_:store:)();
  uint64_t v40 = v13;
  uint64_t v41 = v14;
  uint64_t v42 = v15;
  uint64_t v43 = v16;
  sub_10007FFC0();
  unint64_t v17 = v12;
  uint64_t v35 = v12;
  NavigationLink.init(destination:label:)();
  uint64_t v40 = sub_10007C408();
  uint64_t v41 = v18;
  uint64_t v42 = v19;
  uint64_t v43 = v20;
  sub_100080014();
  uint64_t v21 = v5;
  char v33 = v5;
  NavigationLink.init(destination:label:)();
  unint64_t v22 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  uint64_t v34 = v10;
  v22(v10, v17, v6);
  uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v1 + 16);
  uint64_t v24 = v37;
  uint64_t v25 = v21;
  uint64_t v26 = v39;
  v23(v37, v25, v39);
  uint64_t v27 = v38;
  v22(v38, v10, v6);
  uint64_t v28 = sub_100046B9C(&qword_100160580);
  v23(&v27[*(int *)(v28 + 48)], v24, v26);
  uint64_t v29 = *(void (**)(char *, uint64_t))(v1 + 8);
  v29(v33, v26);
  unint64_t v30 = *(void (**)(char *, uint64_t))(v36 + 8);
  v30(v35, v6);
  v29(v24, v26);
  return ((uint64_t (*)(char *, uint64_t))v30)(v34, v6);
}

double sub_10007EA34@<D0>(uint64_t a1@<X8>)
{
  *(void *)&double result = 0x686372616553;
  *(_OWORD *)a1 = xmmword_10011D9B0;
  *(unsigned char *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = &_swiftEmptyArrayStorage;
  return result;
}

double sub_10007EA54@<D0>(uint64_t a1@<X8>)
{
  double result = 1.24009431e180;
  *(_OWORD *)a1 = xmmword_10011D9C0;
  *(unsigned char *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = &_swiftEmptyArrayStorage;
  return result;
}

uint64_t sub_10007EA74@<X0>(char *a1@<X8>)
{
  uint64_t v31 = a1;
  uint64_t v30 = sub_100046B9C(&qword_100160550);
  uint64_t v26 = *(void *)(v30 - 8);
  uint64_t v1 = v26;
  uint64_t v2 = __chkstk_darwin(v30);
  uint64_t v29 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v24 - v4;
  uint64_t v6 = sub_100046B9C(&qword_100160530);
  uint64_t v28 = *(void *)(v6 - 8);
  uint64_t v7 = v28;
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v24 - v11;
  sub_100046B9C(&qword_1001602B0);
  sub_1000280D4();
  LabeledContent<>.init(content:label:)();
  uint64_t v25 = v5;
  LabeledContent<>.init(content:label:)();
  uint64_t v13 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  uint64_t v27 = v10;
  v13(v10, v12, v6);
  uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v1 + 16);
  uint64_t v15 = v29;
  uint64_t v16 = v5;
  uint64_t v17 = v30;
  v14(v29, v16, v30);
  uint64_t v18 = v31;
  v13(v31, v10, v6);
  uint64_t v19 = sub_100046B9C(&qword_100160558);
  uint64_t v20 = v15;
  v14(&v18[*(int *)(v19 + 48)], v15, v17);
  uint64_t v21 = *(void (**)(char *, uint64_t))(v26 + 8);
  v21(v25, v17);
  unint64_t v22 = *(void (**)(char *, uint64_t))(v28 + 8);
  v22(v12, v6);
  v21(v20, v17);
  return ((uint64_t (*)(char *, uint64_t))v22)(v27, v6);
}

void sub_10007EDAC(uint64_t *a1@<X8>)
{
  uint64_t v2 = self;
  id v3 = [v2 mainBundle];
  uint64_t v4 = sub_1000BF118();
  uint64_t v6 = v5;

  if (!v6) {
    goto LABEL_5;
  }
  id v7 = [v2 mainBundle];
  uint64_t v8 = sub_1000BF13C();
  uint64_t v10 = v9;

  if (!v10)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    uint64_t v14 = 0;
    uint64_t v15 = 0;
    uint64_t v16 = 0;
    goto LABEL_6;
  }
  v11._uint64_t countAndFlagsBits = 10272;
  v11._object = (void *)0xE200000000000000;
  String.append(_:)(v11);
  v12._uint64_t countAndFlagsBits = v8;
  v12._object = v10;
  String.append(_:)(v12);
  swift_bridgeObjectRelease();
  v13._uint64_t countAndFlagsBits = 41;
  v13._object = (void *)0xE100000000000000;
  String.append(_:)(v13);
  uint64_t v14 = v4;
  uint64_t v15 = v6;
  uint64_t v16 = _swiftEmptyArrayStorage;
LABEL_6:
  *a1 = v14;
  a1[1] = v15;
  a1[2] = 0;
  a1[3] = (uint64_t)v16;
}

double sub_10007EEB4@<D0>(uint64_t a1@<X8>)
{
  double result = 1.35441148e-306;
  *(_OWORD *)a1 = xmmword_10011D9D0;
  *(unsigned char *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = &_swiftEmptyArrayStorage;
  return result;
}

double sub_10007EED4@<D0>(uint64_t a1@<X8>)
{
  *(void *)&double result = 28494;
  *(_OWORD *)a1 = xmmword_10011D9E0;
  *(unsigned char *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = &_swiftEmptyArrayStorage;
  return result;
}

void sub_10007EEF4(uint64_t a1@<X8>)
{
  *(void *)a1 = 0xD000000000000013;
  *(void *)(a1 + 8) = 0x80000001001248B0;
  *(unsigned char *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = &_swiftEmptyArrayStorage;
}

uint64_t sub_10007EF24()
{
  if (qword_10015F118 != -1) {
    swift_once();
  }
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  sub_100046B9C(&qword_100160540);
  sub_100046B9C(&qword_100160530);
  sub_10004D2D4(&qword_100160548, &qword_100160540);
  sub_10007FEBC();
  return ForEach<>.init(_:id:content:)();
}

void sub_10007F040(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = [*a1 bundlePath];
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v6 = v5;

  *a2 = v4;
  a2[1] = v6;
}

uint64_t sub_10007F098()
{
  return LabeledContent<>.init(content:label:)();
}

void sub_10007F130(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1000BF118();
  if (!v3) {
    goto LABEL_5;
  }
  uint64_t v4 = v2;
  uint64_t v5 = v3;
  uint64_t v6 = sub_1000BF13C();
  if (!v7)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    uint64_t v13 = 0;
    uint64_t v14 = 0;
    uint64_t v15 = 0;
    goto LABEL_6;
  }
  uint64_t v8 = v6;
  uint64_t v9 = v7;
  v10._uint64_t countAndFlagsBits = 10272;
  v10._object = (void *)0xE200000000000000;
  String.append(_:)(v10);
  v11._uint64_t countAndFlagsBits = v8;
  v11._object = v9;
  String.append(_:)(v11);
  swift_bridgeObjectRelease();
  v12._uint64_t countAndFlagsBits = 41;
  v12._object = (void *)0xE100000000000000;
  String.append(_:)(v12);
  uint64_t v13 = v4;
  uint64_t v14 = v5;
  uint64_t v15 = _swiftEmptyArrayStorage;
LABEL_6:
  *a1 = v13;
  a1[1] = v14;
  a1[2] = 0;
  a1[3] = (uint64_t)v15;
}

uint64_t sub_10007F1F4@<X0>(uint64_t a1@<X8>)
{
  sub_1000BF270();
  sub_100030C58();
  uint64_t result = Text.init<A>(_:)();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_10007F250@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v20 = a2;
  uint64_t v19 = sub_100046B9C(&qword_100160488);
  __chkstk_darwin(v19);
  char v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100046B9C(&qword_100160490);
  uint64_t v5 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  id v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ToolbarItemPlacement();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_100046B9C(&qword_100160498);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  Swift::String v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  static ToolbarItemPlacement.principal.getter();
  sub_100046B9C(&qword_1001604A0);
  sub_10004D2D4(&qword_1001604A8, &qword_1001604A0);
  ToolbarItem<>.init(placement:content:)();
  static ToolbarItemPlacement.navigationBarTrailing.getter();
  uint64_t v21 = a1;
  sub_100046B9C(&qword_1001604B0);
  sub_10004D2D4(&qword_1001604B8, &qword_1001604B0);
  ToolbarItem<>.init(placement:content:)();
  uint64_t v13 = &v4[*(int *)(v19 + 48)];
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v4, v12, v9);
  uint64_t v14 = v13;
  uint64_t v15 = v18;
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v14, v7, v18);
  TupleToolbarContent.init(_:)();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v15);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_10007F594@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = static VerticalAlignment.center.getter();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  uint64_t v2 = sub_100046B9C(&qword_1001604C0);
  return sub_10007F5DC((char *)(a1 + *(int *)(v2 + 44)));
}

uint64_t sub_10007F5DC@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_100046B9C(&qword_1001604C8);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)v13 - v7;
  v13[1] = swift_getKeyPath();
  char v14 = 0;
  unint64_t v15 = 0xD000000000000015;
  unint64_t v16 = 0x8000000100122C90;
  char v17 = 1;
  if (qword_10015F050 != -1) {
    swift_once();
  }
  [(id)qword_10016AE10 size];
  sub_100039B80();
  View.iconSize(_:)();
  swift_release();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
  v9(v6, v8, v2);
  v9(a1, v6, v2);
  uint64_t v10 = &a1[*(int *)(sub_100046B9C(&qword_1001604D0) + 48)];
  *(_OWORD *)uint64_t v10 = xmmword_10011D9F0;
  unsigned char v10[16] = 0;
  *((void *)v10 + 3) = _swiftEmptyArrayStorage;
  sub_10006591C(0x6775626544, 0xE500000000000000, 0);
  uint64_t v11 = *(void (**)(char *, uint64_t))(v3 + 8);
  swift_bridgeObjectRetain();
  v11(v8, v2);
  sub_100037590(0x6775626544, 0xE500000000000000, 0);
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(char *, uint64_t))v11)(v6, v2);
}

uint64_t sub_10007F84C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SettingsApplicationDebugRoot();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2 - 8);
  sub_10007FADC(a1, (uint64_t)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = swift_allocObject();
  sub_10007FB44((uint64_t)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v6 + v5);
  return Button.init(action:label:)();
}

uint64_t sub_10007F978()
{
  uint64_t v0 = type metadata accessor for DismissAction();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000EFA74((uint64_t)v3);
  DismissAction.callAsFunction()();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

double sub_10007FA44@<D0>(uint64_t a1@<X8>)
{
  double result = 1.73118111e-306;
  *(_OWORD *)a1 = xmmword_10011DA00;
  *(unsigned char *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = &_swiftEmptyArrayStorage;
  return result;
}

uint64_t sub_10007FA68@<X0>(uint64_t a1@<X8>)
{
  return sub_10007D38C(*(void *)(v1 + 16), a1);
}

uint64_t sub_10007FA70@<X0>(void *a1@<X8>)
{
  uint64_t result = EnvironmentValues.displayScale.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_10007FA9C()
{
  return EnvironmentValues.displayScale.setter();
}

uint64_t sub_10007FAC4@<X0>(char *a1@<X8>)
{
  return sub_10007D7DC(*(void (**)(char *, char *, uint64_t))(v1 + 16), a1);
}

uint64_t sub_10007FACC@<X0>(uint64_t a1@<X8>)
{
  return sub_10007F250(*(void *)(v1 + 16), a1);
}

uint64_t sub_10007FAD4()
{
  return sub_10007F84C(*(void *)(v0 + 16));
}

uint64_t sub_10007FADC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SettingsApplicationDebugRoot();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10007FB44(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SettingsApplicationDebugRoot();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10007FBA8()
{
  return sub_10007FDCC((uint64_t (*)(uint64_t))sub_10007F978);
}

uint64_t sub_10007FBC0@<X0>(void *a1@<X8>)
{
  uint64_t result = EnvironmentValues.displayScale.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_10007FBEC()
{
  return EnvironmentValues.displayScale.setter();
}

uint64_t sub_10007FC18()
{
  return sub_10007FDCC(sub_10007E234);
}

unint64_t sub_10007FC38()
{
  unint64_t result = qword_10015F5A0;
  if (!qword_10015F5A0)
  {
    type metadata accessor for SettingsAppNavigationModel();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015F5A0);
  }
  return result;
}

uint64_t sub_10007FC94()
{
  uint64_t v1 = *(void *)(type metadata accessor for SettingsApplicationDebugRoot() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  sub_100046B9C((uint64_t *)&unk_100162C50);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for DismissAction();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v0 + v3, v5);
  }
  else
  {
    swift_release();
  }
  swift_release();

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_10007FDB4()
{
  return sub_10007FDCC(sub_10007E2E8);
}

uint64_t sub_10007FDCC(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for SettingsApplicationDebugRoot() - 8);
  uint64_t v3 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return a1(v3);
}

void sub_10007FE40(uint64_t a1@<X8>)
{
  sub_10007E43C(*(void *)(v1 + 16), a1);
}

unint64_t sub_10007FE48()
{
  unint64_t result = qword_100160520;
  if (!qword_100160520)
  {
    sub_10004D318(&qword_100160518);
    sub_10007FEBC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160520);
  }
  return result;
}

unint64_t sub_10007FEBC()
{
  unint64_t result = qword_100160528;
  if (!qword_100160528)
  {
    sub_10004D318(&qword_100160530);
    sub_1000280D4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160528);
  }
  return result;
}

uint64_t sub_10007FF38(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100046B9C(&qword_1001604F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

const char *sub_10007FFA0()
{
  return "bundlePath";
}

void sub_10007FFB0(uint64_t *a1@<X8>)
{
}

uint64_t sub_10007FFB8@<X0>(uint64_t a1@<X8>)
{
  return sub_10007F1F4(a1);
}

unint64_t sub_10007FFC0()
{
  unint64_t result = qword_100160570;
  if (!qword_100160570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160570);
  }
  return result;
}

unint64_t sub_100080014()
{
  unint64_t result = qword_100160578;
  if (!qword_100160578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160578);
  }
  return result;
}

uint64_t sub_100080068()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for SettingsSearchDebug()
{
  return &type metadata for SettingsSearchDebug;
}

uint64_t sub_1000800F8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100080114@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v27 = a3;
  uint64_t v28 = a4;
  uint64_t v33 = a5;
  uint64_t v32 = type metadata accessor for NavigationBarItem.TitleDisplayMode();
  uint64_t v7 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100046B9C(&qword_100160588);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100046B9C(&qword_100160590);
  uint64_t v29 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  unint64_t v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100046B9C(&qword_100160598);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v30 = v17;
  uint64_t v31 = v18;
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v26 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = a1;
  uint64_t v35 = a2;
  uint64_t v36 = v27;
  uint64_t v37 = v28;
  sub_100046B9C(&qword_1001605A0);
  sub_10004D2D4(&qword_1001605A8, &qword_1001605A0);
  List<>.init(content:)();
  uint64_t v21 = sub_10004D2D4(&qword_1001605B0, &qword_100160588);
  View.navigationTitle(_:)();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  uint64_t v22 = v32;
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for NavigationBarItem.TitleDisplayMode.inline(_:), v32);
  uint64_t v38 = v10;
  uint64_t v39 = v21;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  View.navigationBarTitleDisplayMode(_:)();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v22);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v16, v14);
  uint64_t v38 = v14;
  uint64_t v39 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  uint64_t v24 = v30;
  View.settingsListAppearance()();
  return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v20, v24);
}

uint64_t sub_100080528@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  uint64_t v45 = a5;
  uint64_t v44 = sub_100046B9C(&qword_1001605B8);
  uint64_t v52 = *(void *)(v44 - 8);
  uint64_t v9 = __chkstk_darwin(v44);
  uint64_t v43 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  int v51 = (char *)&v37 - v11;
  uint64_t v42 = sub_100046B9C(&qword_1001605C0);
  uint64_t v49 = *(void *)(v42 - 8);
  uint64_t v12 = __chkstk_darwin(v42);
  uint64_t v50 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  char v47 = (char *)&v37 - v14;
  uint64_t v48 = sub_100046B9C(&qword_1001605C8);
  uint64_t v41 = *(void *)(v48 - 8);
  uint64_t v15 = v41;
  uint64_t v16 = __chkstk_darwin(v48);
  uint64_t v46 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v37 - v18;
  uint64_t v57 = a1;
  uint64_t v58 = a2;
  uint64_t v59 = a3;
  uint64_t v60 = a4;
  long long v61 = xmmword_10011DB30;
  char v62 = 0;
  uint64_t v63 = _swiftEmptyArrayStorage;
  sub_100046B9C(&qword_1001605D0);
  sub_10004D2D4(&qword_1001605D8, &qword_1001605D0);
  uint64_t v40 = v19;
  Section<>.init(header:content:)();
  uint64_t v53 = a1;
  uint64_t v54 = a2;
  uint64_t v55 = a3;
  uint64_t v56 = a4;
  *(void *)&long long v61 = 0xD000000000000010;
  *((void *)&v61 + 1) = 0x8000000100124980;
  char v62 = 0;
  uint64_t v63 = _swiftEmptyArrayStorage;
  sub_100046B9C(&qword_1001605E0);
  sub_10004D2D4(&qword_1001605E8, &qword_1001605E0);
  uint64_t v20 = v47;
  Section<>.init(header:content:)();
  uint64_t v21 = v51;
  Section<>.init(content:)();
  uint64_t v37 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
  uint64_t v22 = v46;
  uint64_t v23 = v48;
  v37(v46, v19, v48);
  uint64_t v39 = *(void (**)(char *, char *, uint64_t))(v49 + 16);
  uint64_t v24 = v50;
  uint64_t v25 = v42;
  v39(v50, v20, v42);
  uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v52 + 16);
  uint64_t v26 = v43;
  uint64_t v27 = v21;
  uint64_t v28 = v44;
  v38(v43, v27, v44);
  uint64_t v29 = v45;
  v37(v45, v22, v23);
  uint64_t v30 = sub_100046B9C(&qword_1001605F0);
  v39(&v29[*(int *)(v30 + 48)], v24, v25);
  v38(&v29[*(int *)(v30 + 64)], v26, v28);
  uint64_t v31 = *(void (**)(char *, uint64_t))(v52 + 8);
  uint64_t v32 = v28;
  v31(v51, v28);
  uint64_t v33 = *(void (**)(char *, uint64_t))(v49 + 8);
  v33(v47, v25);
  uint64_t v34 = *(void (**)(char *, uint64_t))(v41 + 8);
  uint64_t v35 = v48;
  v34(v40, v48);
  v31(v26, v32);
  v33(v50, v25);
  return ((uint64_t (*)(char *, uint64_t))v34)(v46, v35);
}

uint64_t sub_100080AE4@<X0>(char *a1@<X8>)
{
  uint64_t v26 = a1;
  uint64_t v25 = sub_100046B9C(&qword_100160368);
  uint64_t v23 = *(void *)(v25 - 8);
  uint64_t v1 = v23;
  uint64_t v2 = __chkstk_darwin(v25);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v22 - v5;
  uint64_t v7 = sub_100046B9C(&qword_1001605F8);
  uint64_t v24 = *(void *)(v7 - 8);
  uint64_t v8 = v24;
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v22 - v12;
  sub_100046B9C(&qword_10015FCE8);
  sub_100065CE0();
  LabeledContent<>.init(content:label:)();
  AppStorage.projectedValue.getter();
  uint64_t v22 = v6;
  Toggle.init(isOn:label:)();
  uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  v14(v11, v13, v7);
  uint64_t v15 = *(void (**)(char *, char *, uint64_t))(v1 + 16);
  uint64_t v16 = v25;
  v15(v4, v6, v25);
  uint64_t v17 = v26;
  v14(v26, v11, v7);
  uint64_t v18 = sub_100046B9C((uint64_t *)&unk_100160610);
  v15(&v17[*(int *)(v18 + 48)], v4, v16);
  uint64_t v19 = *(void (**)(char *, uint64_t))(v23 + 8);
  v19(v22, v16);
  uint64_t v20 = *(void (**)(char *, uint64_t))(v24 + 8);
  v20(v13, v7);
  v19(v4, v16);
  return ((uint64_t (*)(char *, uint64_t))v20)(v11, v7);
}

uint64_t sub_100080E14@<X0>(uint64_t a1@<X8>)
{
  return sub_1000813BC(a1);
}

double sub_100080E30@<D0>(uint64_t a1@<X8>)
{
  double result = 5.99244987e175;
  *(_OWORD *)a1 = xmmword_10011DB40;
  *(unsigned char *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = &_swiftEmptyArrayStorage;
  return result;
}

void sub_100080E50(uint64_t a1@<X8>)
{
  *(void *)a1 = 0xD00000000000001ALL;
  *(void *)(a1 + 8) = 0x80000001001249C0;
  *(unsigned char *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = &_swiftEmptyArrayStorage;
}

uint64_t sub_100080E80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(char *, char *, uint64_t)@<X2>, char *a4@<X8>)
{
  uint64_t v44 = a2;
  uint64_t v45 = a3;
  uint64_t v42 = a1;
  uint64_t v48 = a4;
  uint64_t v47 = sub_100046B9C(&qword_100160368);
  uint64_t v49 = *(void *)(v47 - 8);
  uint64_t v4 = __chkstk_darwin(v47);
  uint64_t v52 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v46 = (char *)&v37 - v7;
  uint64_t v8 = __chkstk_darwin(v6);
  int v51 = (char *)&v37 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v50 = (char *)&v37 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v37 - v13;
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v37 - v15;
  uint64_t v43 = sub_100046B9C(&qword_1001605F8);
  uint64_t v41 = *(void *)(v43 - 8);
  uint64_t v17 = v41;
  uint64_t v18 = __chkstk_darwin(v43);
  uint64_t v20 = (char *)&v37 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v37 - v21;
  sub_100046B9C(&qword_10015FCE8);
  sub_100065CE0();
  uint64_t v40 = v22;
  LabeledContent<>.init(content:label:)();
  AppStorage.projectedValue.getter();
  uint64_t v38 = v16;
  Toggle.init(isOn:label:)();
  AppStorage.projectedValue.getter();
  uint64_t v23 = v14;
  uint64_t v37 = v14;
  Toggle.init(isOn:label:)();
  AppStorage.projectedValue.getter();
  uint64_t v24 = v50;
  Toggle.init(isOn:label:)();
  uint64_t v45 = *(void (**)(char *, char *, uint64_t))(v17 + 16);
  uint64_t v39 = v20;
  uint64_t v25 = v43;
  v45(v20, v22, v43);
  uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v49 + 16);
  uint64_t v27 = v51;
  uint64_t v28 = v47;
  v26(v51, v16, v47);
  uint64_t v29 = v46;
  v26(v46, v23, v28);
  uint64_t v30 = v28;
  v26(v52, v24, v28);
  uint64_t v31 = v48;
  v45(v48, v20, v25);
  uint64_t v32 = (int *)sub_100046B9C(&qword_100160600);
  v26(&v31[v32[12]], v27, v30);
  v26(&v31[v32[16]], v29, v30);
  uint64_t v33 = v52;
  v26(&v31[v32[20]], v52, v30);
  uint64_t v34 = *(void (**)(char *, uint64_t))(v49 + 8);
  v34(v50, v30);
  v34(v37, v30);
  v34(v38, v30);
  uint64_t v35 = *(void (**)(char *, uint64_t))(v41 + 8);
  v35(v40, v25);
  v34(v33, v30);
  v34(v29, v30);
  v34(v51, v30);
  return ((uint64_t (*)(char *, uint64_t))v35)(v39, v25);
}

uint64_t sub_1000813A0@<X0>(uint64_t a1@<X8>)
{
  return sub_1000813BC(a1);
}

uint64_t sub_1000813BC@<X0>(uint64_t a1@<X8>)
{
  *(void *)&long long v31 = type metadata accessor for Date.FormatStyle.TimeStyle();
  *(void *)&long long v30 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v3 = (char *)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Date.FormatStyle.DateStyle();
  uint64_t v28 = *(void *)(v4 - 8);
  uint64_t v29 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100046B9C(&qword_100160608);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v14 = [self standardUserDefaults];
  NSString v15 = String._bridgeToObjectiveC()();
  id v16 = [v14 objectForKey:v15];

  if (v16)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v32 = 0u;
    long long v33 = 0u;
  }
  sub_10001C8A0((uint64_t)&v32, (uint64_t)&v35);
  if (!*((void *)&v36 + 1))
  {
    sub_10003F5D0((uint64_t)&v35, &qword_1001609A0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
    goto LABEL_8;
  }
  int v17 = swift_dynamicCast();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v9, v17 ^ 1u, 1, v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
LABEL_8:
    sub_10003F5D0((uint64_t)v9, &qword_100160608);
    long long v32 = xmmword_10011DB50;
    *(void *)&long long v33 = 0;
    *((void *)&v33 + 1) = _swiftEmptyArrayStorage;
    char v34 = 1;
    uint64_t result = _ConditionalContent<>.init(storage:)();
    long long v26 = v35;
    long long v27 = v36;
    char v24 = v37;
    goto LABEL_9;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
  static Date.FormatStyle.DateStyle.abbreviated.getter();
  static Date.FormatStyle.TimeStyle.shortened.getter();
  uint64_t v18 = Date.formatted(date:time:)();
  uint64_t v20 = v19;
  (*(void (**)(char *, void))(v30 + 8))(v3, v31);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v6, v29);
  *(void *)&long long v35 = v18;
  *((void *)&v35 + 1) = v20;
  sub_100030C58();
  *(void *)&long long v32 = Text.init<A>(_:)();
  *((void *)&v32 + 1) = v21;
  *(void *)&long long v33 = v22 & 1;
  *((void *)&v33 + 1) = v23;
  char v34 = 0;
  _ConditionalContent<>.init(storage:)();
  long long v30 = v36;
  long long v31 = v35;
  char v24 = v37;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  long long v27 = v30;
  long long v26 = v31;
LABEL_9:
  *(_OWORD *)a1 = v26;
  *(_OWORD *)(a1 + 16) = v27;
  *(unsigned char *)(a1 + 32) = v24;
  return result;
}

void sub_100081844(uint64_t a1@<X8>)
{
  *(void *)a1 = 0xD000000000000016;
  *(void *)(a1 + 8) = 0x80000001001249A0;
  *(unsigned char *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = &_swiftEmptyArrayStorage;
}

double sub_100081874@<D0>(uint64_t a1@<X8>)
{
  double result = 1.81653197e223;
  *(_OWORD *)a1 = xmmword_10011DB60;
  *(unsigned char *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = &_swiftEmptyArrayStorage;
  return result;
}

uint64_t sub_100081894@<X0>(uint64_t a1@<X8>)
{
  return sub_100080114(*v1, v1[1], v1[2], v1[3], a1);
}

uint64_t sub_1000818A0@<X0>(char *a1@<X8>)
{
  return sub_100080528(v1[2], v1[3], v1[4], v1[5], a1);
}

uint64_t sub_1000818AC@<X0>(char *a1@<X8>)
{
  return sub_100080AE4(a1);
}

uint64_t sub_1000818B8@<X0>(char *a1@<X8>)
{
  return sub_100080E80(*(void *)(v1 + 16), *(void *)(v1 + 24), *(void (**)(char *, char *, uint64_t))(v1 + 32), a1);
}

uint64_t sub_1000818C4()
{
  return swift_getOpaqueTypeConformance2();
}

id sub_1000819BC()
{
  id result = [self sharedConnection];
  if (!result) {
    goto LABEL_13;
  }
  uint64_t v2 = result;
  [result unregisterObserver:v0];

  uint64_t v10 = v0;
  uint64_t v3 = &v0[OBJC_IVAR____TtC11SettingsApp27SettingsApplicationDelegate_observationTokens];
  swift_beginAccess();
  uint64_t v4 = *(void *)v3;
  if (*(void *)v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    if (v5) {
      goto LABEL_4;
    }
LABEL_11:
    swift_bridgeObjectRelease();
    *(void *)uint64_t v3 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRelease();
    v11.receiver = v10;
    v11.super_class = (Class)type metadata accessor for SettingsApplicationDelegate();
    return [super dealloc];
  }
  uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v5) {
    goto LABEL_11;
  }
LABEL_4:
  id result = self;
  if (v5 >= 1)
  {
    uint64_t v6 = result;
    uint64_t v7 = 0;
    do
    {
      if ((v4 & 0xC000000000000001) != 0)
      {
        uint64_t v8 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v8 = *(void *)(v4 + 8 * v7 + 32);
        swift_unknownObjectRetain();
      }
      ++v7;
      id v9 = [v6 defaultCenter];
      [v9 removeObserver:v8];
      swift_unknownObjectRelease();
    }
    while (v5 != v7);
    goto LABEL_11;
  }
  __break(1u);
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_100081C20()
{
  return type metadata accessor for SettingsApplicationDelegate();
}

void sub_100081C28()
{
}

void sub_100081C3C()
{
  id v0 = (id)MobileGestalt_get_current_device();
  if (v0)
  {
    uint64_t v1 = v0;
    int cellularDataCapability = MobileGestalt_get_cellularDataCapability();

    id v3 = [self sharedApplication];
    sub_100046B9C(&qword_100160738);
    if (cellularDataCapability)
    {
      uint64_t v4 = swift_allocObject();
      *(_OWORD *)(v4 + 16) = xmmword_10011DBF0;
      if (qword_10015F000 != -1) {
        swift_once();
      }
      uint64_t v5 = (void *)qword_10016ADC0;
      *(void *)(v4 + 32) = qword_10016ADC0;
      uint64_t v6 = qword_10015F008;
      id v7 = v5;
      if (v6 != -1) {
        swift_once();
      }
      uint64_t v8 = (void *)qword_10016ADC8;
      *(void *)(v4 + 40) = qword_10016ADC8;
      uint64_t v9 = qword_10015F010;
      id v10 = v8;
      if (v9 != -1) {
        swift_once();
      }
      objc_super v11 = (void *)qword_10016ADD0;
      *(void *)(v4 + 48) = qword_10016ADD0;
      uint64_t v12 = qword_10015F018;
      id v13 = v11;
      if (v12 != -1) {
        swift_once();
      }
      id v14 = (void *)qword_10016ADD8;
      *(void *)(v4 + 56) = qword_10016ADD8;
    }
    else
    {
      uint64_t v15 = swift_allocObject();
      *(_OWORD *)(v15 + 16) = xmmword_10011DBE0;
      if (qword_10015F000 != -1) {
        swift_once();
      }
      id v16 = (void *)qword_10016ADC0;
      *(void *)(v15 + 32) = qword_10016ADC0;
      uint64_t v17 = qword_10015F008;
      id v18 = v16;
      if (v17 != -1) {
        swift_once();
      }
      uint64_t v19 = (void *)qword_10016ADC8;
      *(void *)(v15 + 40) = qword_10016ADC8;
      uint64_t v20 = qword_10015F018;
      id v21 = v19;
      if (v20 != -1) {
        swift_once();
      }
      id v14 = (void *)qword_10016ADD8;
      *(void *)(v15 + 48) = qword_10016ADD8;
    }
    specialized Array._endMutation()();
    sub_100082170();
    id v22 = v14;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v3 setShortcutItems:isa];
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100081F50(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  if (a4) {
    uint64_t v6 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else {
    uint64_t v6 = 0;
  }
  id v7 = a3;
  id v8 = a1;
  sub_100082038(v6);

  return swift_bridgeObjectRelease();
}

void sub_100082038(uint64_t a1)
{
  id v3 = [self defaultCenter];
  NSString v4 = String._bridgeToObjectiveC()();
  if (a1) {
    v5.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  }
  else {
    v5.super.Class isa = 0;
  }
  Class isa = v5.super.isa;
  [v3 postNotificationName:v4 object:v1];
}

unint64_t sub_100082118()
{
  unint64_t result = qword_10015F330;
  if (!qword_10015F330)
  {
    type metadata accessor for LaunchOptionsKey(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015F330);
  }
  return result;
}

unint64_t sub_100082170()
{
  unint64_t result = qword_100160740;
  if (!qword_100160740)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100160740);
  }
  return result;
}

ValueMetadata *type metadata accessor for SettingsAppFeatureFlags()
{
  return &type metadata for SettingsAppFeatureFlags;
}

unsigned char *_s11SettingsApp23SettingsAppFeatureFlagsOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100082298);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CoreTelephonyFeatureFlags()
{
  return &type metadata for CoreTelephonyFeatureFlags;
}

unint64_t sub_1000822D4()
{
  unint64_t result = qword_100160748;
  if (!qword_100160748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160748);
  }
  return result;
}

unint64_t sub_100082334()
{
  unint64_t result = qword_100160750;
  if (!qword_100160750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160750);
  }
  return result;
}

void *sub_100082398()
{
  swift_getKeyPath();
  sub_1000686D0();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC11SettingsApp24SettingsAppSceneDelegate__shortcutItemForInitialLaunch);
  id v2 = v1;
  return v1;
}

id sub_100082418@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1000686D0();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  unsigned int v4 = *(void **)(v3 + OBJC_IVAR____TtC11SettingsApp24SettingsAppSceneDelegate__shortcutItemForInitialLaunch);
  *a2 = v4;

  return v4;
}

void sub_1000824A8(void **a1)
{
  uint64_t v1 = *a1;
  swift_getKeyPath();
  sub_1000686D0();
  id v2 = v1;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
}

uint64_t sub_1000826D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  type metadata accessor for MainActor();
  v4[6] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100082774, v6, v5);
}

uint64_t sub_100082774()
{
  uint64_t v1 = (void *)v0[5];
  uint64_t v3 = (void *)v0[3];
  id v2 = (const void *)v0[4];
  unsigned int v4 = (void *)v0[2];
  swift_release();
  v0[7] = _Block_copy(v2);
  objc_super v11 = (uint64_t (*)(uint64_t))((char *)&dword_100160860 + dword_100160860);
  id v5 = v4;
  id v6 = v3;
  id v7 = v1;
  uint64_t v8 = (void *)swift_task_alloc();
  v0[8] = v8;
  void *v8 = v0;
  v8[1] = sub_100082858;
  uint64_t v9 = v0[3];
  return v11(v9);
}

uint64_t sub_100082858(char a1)
{
  uint64_t v3 = *(void (***)(void, void))(*v1 + 56);
  unsigned int v4 = *(void **)(*v1 + 40);
  id v5 = *(void **)(*v1 + 24);
  id v6 = *(void **)(*v1 + 16);
  uint64_t v9 = *v1;
  swift_task_dealloc();

  v3[2](v3, a1 & 1);
  _Block_release(v3);
  id v7 = *(uint64_t (**)(void))(v9 + 8);
  return v7();
}

id sub_1000829D8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SettingsAppSceneDelegate();
  return [super dealloc];
}

uint64_t sub_100082AA0()
{
  return type metadata accessor for SettingsAppSceneDelegate();
}

uint64_t sub_100082AB0()
{
  _Block_release(*(const void **)(v0 + 32));

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100082B00()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v5 = v0[4];
  uint64_t v4 = v0[5];
  id v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  void *v6 = v1;
  v6[1] = sub_10007B630;
  id v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_100160820 + dword_100160820);
  return v7(v2, v3, v5, v4);
}

uint64_t sub_100082BC0(uint64_t a1, uint64_t a2, int *a3)
{
  id v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_10000ADF0;
  return v6();
}

uint64_t sub_100082C90()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = (int *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  void *v5 = v1;
  v5[1] = sub_10000ADF0;
  id v6 = (uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_100160830 + dword_100160830);
  return v6(v2, v3, v4);
}

uint64_t sub_100082D50(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v5;
  void *v5 = v4;
  v5[1] = sub_10000ADF0;
  return v7();
}

uint64_t sub_100082E20()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100082E60(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  id v6 = (int *)v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  void *v7 = v2;
  v7[1] = sub_10000ADF0;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_100160840 + dword_100160840);
  return v8(a1, v4, v5, v6);
}

uint64_t sub_100082F2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TaskPriority();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_1000830D0(a1);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_1000830D0(uint64_t a1)
{
  uint64_t v2 = sub_100046B9C(&qword_100164100);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100083130()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100083168(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_10007B630;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_100160850 + dword_100160850);
  return v6(a1, v4);
}

uint64_t sub_100083220(uint64_t a1)
{
  v2[3] = a1;
  v2[4] = v1;
  type metadata accessor for MainActor();
  void v2[5] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1000832B8, v4, v3);
}

uint64_t sub_1000832B8()
{
  uint64_t v1 = (void *)v0[3];
  swift_release();
  id v2 = [v1 type];
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v5 = v4;

  v15._uint64_t countAndFlagsBits = v3;
  v15._object = v5;
  unsigned __int8 v6 = sub_10006A8D8(v15);
  int v7 = v6;
  if (v6 != 4)
  {
    unsigned __int8 v8 = v6;
    uint64_t v9 = v0 + 2;
    uint64_t v10 = *(void *)(v0[4] + OBJC_IVAR____TtC11SettingsApp24SettingsAppSceneDelegate__selectedQuickActionSubject);
    uint64_t v11 = qword_10015F048;
    swift_retain();
    if (v11 != -1) {
      swift_once();
    }
    TaskLocal.get()();
    sub_1000682E8(v10, *v9);
    swift_bridgeObjectRelease();
    swift_release();
    *(unsigned char *)uint64_t v9 = v8;
    PassthroughSubject.send(_:)();
    swift_release();
  }
  uint64_t v12 = (uint64_t (*)(BOOL))v0[1];
  return v12(v7 != 4);
}

unint64_t sub_100083418()
{
  unint64_t result = qword_1001608D0;
  if (!qword_1001608D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001608D0);
  }
  return result;
}

Swift::Int sub_10008347C(void *a1, uint64_t a2, char a3)
{
  Hasher.init(_seed:)();
  switch(a3)
  {
    case 1:
      Swift::UInt v7 = 2;
      goto LABEL_6;
    case 2:
      Swift::UInt v7 = 3;
LABEL_6:
      Hasher._combine(_:)(v7);
      String.hash(into:)();
      break;
    case 3:
      Hasher._combine(_:)(0);
      break;
    default:
      Hasher._combine(_:)(1uLL);
      id v6 = a1;
      NSObject.hash(into:)();
      sub_100046F04(a1, a2, 0);
      break;
  }
  return Hasher._finalize()();
}

Swift::Int sub_100083564()
{
  return sub_10008347C(*(void **)v0, *(void *)(v0 + 8), *(unsigned char *)(v0 + 16));
}

void sub_100083570()
{
  id v2 = *(void **)v0;
  uint64_t v1 = *(void *)(v0 + 8);
  switch(*(unsigned char *)(v0 + 16))
  {
    case 1:
      Swift::UInt v4 = 2;
      goto LABEL_8;
    case 2:
      Swift::UInt v4 = 3;
LABEL_8:
      Hasher._combine(_:)(v4);
      String.hash(into:)();
      break;
    case 3:
      Hasher._combine(_:)(0);
      break;
    default:
      Hasher._combine(_:)(1uLL);
      id v3 = v2;
      NSObject.hash(into:)();
      sub_100046F04(v2, v1, 0);
      break;
  }
}

Swift::Int sub_100083664()
{
  id v2 = *(void **)v0;
  uint64_t v1 = *(void *)(v0 + 8);
  uint64_t v3 = *(unsigned __int8 *)(v0 + 16);
  Hasher.init(_seed:)();
  switch(v3)
  {
    case 1:
      Swift::UInt v5 = 2;
      goto LABEL_6;
    case 2:
      Swift::UInt v5 = 3;
LABEL_6:
      Hasher._combine(_:)(v5);
      String.hash(into:)();
      break;
    case 3:
      Hasher._combine(_:)(0);
      break;
    default:
      Hasher._combine(_:)(1uLL);
      id v4 = v2;
      NSObject.hash(into:)();
      sub_100046F04(v2, v1, 0);
      break;
  }
  return Hasher._finalize()();
}

uint64_t assignWithTake for Icon(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  char v5 = *((unsigned char *)a2 + 8);
  uint64_t v6 = *(void *)a1;
  char v7 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  sub_10003A520(v6, v7);
  char v8 = *((unsigned char *)a2 + 32);
  uint64_t v9 = *(void **)(a1 + 16);
  uint64_t v10 = *(void *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
  char v11 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v8;
  sub_100046F04(v9, v10, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for Icon(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for Icon(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)unint64_t result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

void destroy for Icon.IconType(uint64_t a1)
{
}

uint64_t _s11SettingsApp4IconV8IconTypeOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_100047728(*(id *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for Icon.IconType(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_100047728(*(id *)a2, v4, v5);
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_100046F04(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for Icon.IconType(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_100046F04(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for Icon.IconType(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 3) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for Icon.IconType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 253;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1000839D0(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 2u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 3);
  }
}

uint64_t sub_1000839E8(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(void *)unint64_t result = a2 - 3;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 3;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

uint64_t sub_100083A00()
{
  return sub_10004D2D4(&qword_100160918, (uint64_t *)&unk_100160920);
}

ValueMetadata *type metadata accessor for PrimarySettingsListDataModelGenerationContext()
{
  return &type metadata for PrimarySettingsListDataModelGenerationContext;
}

uint64_t sub_100083A4C()
{
  swift_getKeyPath();
  sub_100048A6C((unint64_t *)&unk_100160990, (void (*)(uint64_t))type metadata accessor for RestrictionsManager);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC11SettingsApp19RestrictionsManager__isInEDUMode);
}

uint64_t sub_100083AF4(uint64_t result, char a2)
{
  *(unsigned char *)(result + OBJC_IVAR____TtC11SettingsApp19RestrictionsManager__isInEDUMode) = a2;
  return result;
}

uint64_t sub_100083B04()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_100083BB0(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + OBJC_IVAR____TtC11SettingsApp19RestrictionsManager__restrictedFeatures) = a2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100083BF4()
{
  return sub_100083C3C();
}

uint64_t sub_100083C08(uint64_t a1, uint64_t a2)
{
  return sub_100083D00(a1, a2, &OBJC_IVAR____TtC11SettingsApp19RestrictionsManager__blockedAppBundleIDs);
}

uint64_t sub_100083C28()
{
  return sub_100083C3C();
}

uint64_t sub_100083C3C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_100083CE0(uint64_t a1, uint64_t a2)
{
  return sub_100083D00(a1, a2, &OBJC_IVAR____TtC11SettingsApp19RestrictionsManager__allowedAppBundleIDs);
}

uint64_t sub_100083D00(uint64_t a1, uint64_t a2, void *a3)
{
  *(void *)(a1 + *a3) = a2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

id RestrictionsManager.__deallocating_deinit()
{
  id result = [self sharedConnection];
  if (result)
  {
    id v2 = result;
    [result unregisterObserver:v0];

    v3.receiver = v0;
    v3.super_class = (Class)type metadata accessor for RestrictionsManager();
    return [super dealloc];
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t _s11SettingsApp19RestrictionsManagerC027profileConnectionDidReceiveB28WhitelistChangedNotification_8userInfoySo09MCProfileF0CSg_SDys11AnyHashableVypGSgtF_0()
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  int v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  char v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10015F128 != -1) {
    swift_once();
  }
  v13[0] = qword_10016AF88;
  uint64_t v9 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v9;
  *(void *)(v10 + 24) = ObjectType;
  aBlock[4] = sub_100084BD4;
  aBlock[5] = v10;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002CC68;
  aBlock[3] = &unk_100152BB0;
  char v11 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  v13[1] = _swiftEmptyArrayStorage;
  sub_100048A6C((unint64_t *)&qword_1001614F0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100046B9C((uint64_t *)&unk_1001609C0);
  sub_10002F644();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v11);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_release();
  return swift_release();
}

id sub_100084200(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v27 = sub_100010CB0();
  uint64_t v10 = self;
  id result = [v10 sharedConnection];
  if (!result)
  {
    __break(1u);
LABEL_11:
    __break(1u);
    return result;
  }
  uint64_t v12 = result;
  uint64_t v25 = v6;
  uint64_t v26 = v3;
  id v13 = [result effectiveBlockedAppBundleIDs];

  if (v13)
  {
    uint64_t v14 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v15 = sub_100007CDC(v14);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v15 = 0;
  }
  id result = [v10 sharedConnection];
  if (!result) {
    goto LABEL_11;
  }
  id v16 = result;
  id v17 = [result effectiveWhitelistedAppBundleIDs];

  if (v17)
  {
    uint64_t v18 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v19 = sub_100007CDC(v18);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v19 = 0;
  }
  sub_100055498();
  uint64_t v20 = (void *)static OS_dispatch_queue.main.getter();
  id v21 = (void *)swift_allocObject();
  id v22 = v27;
  void v21[2] = a1;
  id v21[3] = v22;
  v21[4] = v15;
  void v21[5] = v19;
  aBlock[4] = sub_100084C2C;
  aBlock[5] = v21;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002CC68;
  aBlock[3] = &unk_100152C00;
  uint64_t v23 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100048A6C((unint64_t *)&qword_1001614F0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100046B9C((uint64_t *)&unk_1001609C0);
  sub_10002F644();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v23);

  (*(void (**)(char *, uint64_t))(v26 + 8))(v5, v2);
  return (id)(*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v25);
}

uint64_t sub_1000845D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v13[1] = a3;
  void v13[2] = a4;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = (void *)Strong;
    uint64_t KeyPath = swift_getKeyPath();
    v13[0] = v13;
    __chkstk_darwin(KeyPath);
    v13[7] = v5;
    sub_100048A6C((unint64_t *)&unk_100160990, (void (*)(uint64_t))type metadata accessor for RestrictionsManager);
    swift_bridgeObjectRetain();
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();

    swift_release();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  uint64_t v7 = swift_unknownObjectWeakLoadStrong();
  if (v7)
  {
    uint64_t v8 = (void *)v7;
    uint64_t v9 = swift_getKeyPath();
    v13[0] = v13;
    __chkstk_darwin(v9);
    v13[4] = v8;
    sub_100048A6C((unint64_t *)&unk_100160990, (void (*)(uint64_t))type metadata accessor for RestrictionsManager);
    swift_bridgeObjectRetain();
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();

    swift_release();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    char v11 = (void *)result;
    uint64_t v12 = swift_getKeyPath();
    __chkstk_darwin(v12);
    void v13[3] = v11;
    sub_100048A6C((unint64_t *)&unk_100160990, (void (*)(uint64_t))type metadata accessor for RestrictionsManager);
    swift_bridgeObjectRetain();
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();

    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100084938()
{
  return type metadata accessor for RestrictionsManager();
}

Swift::Int sub_1000849F8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  Hasher.init(_seed:)();
  String.hash(into:)();
  Swift::Int result = Hasher._finalize()();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = result & ~v7;
  uint64_t v9 = v5 + 56;
  if ((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
  {
    uint64_t v10 = *(void *)(v5 + 48);
    char v11 = (void *)(v10 + 16 * v8);
    BOOL v12 = *v11 == a1 && v11[1] == a2;
    if (v12 || (Swift::Int result = _stringCompareWithSmolCheck(_:_:expecting:)(), (result & 1) != 0))
    {
LABEL_7:
      id v13 = (void *)(v10 + 16 * v8);
      Swift::Int result = swift_bridgeObjectRelease();
      *id v13 = a1;
      v13[1] = a2;
      return result;
    }
    uint64_t v14 = ~v7;
    while (1)
    {
      unint64_t v8 = (v8 + 1) & v14;
      if (((*(void *)(v9 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        break;
      }
      uint64_t v15 = (void *)(v10 + 16 * v8);
      if (*v15 != a1 || v15[1] != a2)
      {
        Swift::Int result = _stringCompareWithSmolCheck(_:_:expecting:)();
        if ((result & 1) == 0) {
          continue;
        }
      }
      goto LABEL_7;
    }
  }
  if (*(void *)(v5 + 16) >= *(void *)(v5 + 24))
  {
    __break(1u);
    goto LABEL_21;
  }
  *(void *)(v9 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) |= 1 << v8;
  id v17 = (void *)(*(void *)(v5 + 48) + 16 * v8);
  *id v17 = a1;
  v17[1] = a2;
  uint64_t v18 = *(void *)(v5 + 16);
  BOOL v19 = __OFADD__(v18, 1);
  uint64_t v20 = v18 + 1;
  if (v19)
  {
LABEL_21:
    __break(1u);
    return result;
  }
  *(void *)(v5 + 16) = v20;
  return result;
}

uint64_t sub_100084B64()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100084B9C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

id sub_100084BD4()
{
  return sub_100084200(*(void *)(v0 + 16));
}

uint64_t sub_100084BDC()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100084C2C()
{
  return sub_1000845D0(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_100084C38()
{
  *(void *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC11SettingsApp19RestrictionsManager__restrictedFeatures) = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100084C7C()
{
  return sub_100084CBC(&OBJC_IVAR____TtC11SettingsApp19RestrictionsManager__blockedAppBundleIDs);
}

uint64_t sub_100084C9C()
{
  return sub_100084CBC(&OBJC_IVAR____TtC11SettingsApp19RestrictionsManager__allowedAppBundleIDs);
}

uint64_t sub_100084CBC(void *a1)
{
  *(void *)(*(void *)(v1 + 16) + *a1) = *(void *)(v1 + 24);
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100084D0C()
{
  if (*v0) {
    return 0xD000000000000013;
  }
  else {
    return 0x6E6564646968;
  }
}

char *sub_100084D48(char *a1, char *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v7 = *((void *)a2 + 1);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v7;
        swift_bridgeObjectRetain();
        uint64_t v8 = *(int *)(sub_100046B9C(&qword_10015F8F0) + 48);
        uint64_t v9 = &a1[v8];
        uint64_t v10 = &a2[v8];
        uint64_t v11 = type metadata accessor for NSBundle.PreferencesPluginLocation();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
      case 2u:
        uint64_t v14 = *((void *)a2 + 1);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v14;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        *(void *)a1 = *(void *)a2;
        a1[8] = a2[8];
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
        *(void *)a1 = *(void *)a2;
        a1[8] = a2[8];
        swift_retain();
        swift_storeEnumTagMultiPayload();
        break;
      case 5u:
        long long v15 = *(_OWORD *)(a2 + 24);
        *(_OWORD *)(a1 + 24) = v15;
        (**(void (***)(void *, const void *))(v15 - 8))(a1, a2);
        a1[40] = a2[40];
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

void *sub_100084FBC(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1000851E8((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        uint64_t v6 = *(int *)(sub_100046B9C(&qword_10015F8F0) + 48);
        uint64_t v7 = (char *)a1 + v6;
        uint64_t v8 = (char *)a2 + v6;
        uint64_t v9 = type metadata accessor for NSBundle.PreferencesPluginLocation();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
      case 2u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        *a1 = *a2;
        *((unsigned char *)a1 + 8) = *((unsigned char *)a2 + 8);
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
        *a1 = *a2;
        *((unsigned char *)a1 + 8) = *((unsigned char *)a2 + 8);
        swift_retain();
        swift_storeEnumTagMultiPayload();
        break;
      case 5u:
        uint64_t v10 = a2[3];
        a1[3] = v10;
        a1[4] = a2[4];
        (**(void (***)(void *, const void *))(v10 - 8))(a1, a2);
        *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1000851E8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PrimarySettingsListItemVisibilityRule();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_OWORD *sub_100085244(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    uint64_t v6 = *(int *)(sub_100046B9C(&qword_10015F8F0) + 48);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = type metadata accessor for NSBundle.PreferencesPluginLocation();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_100085318(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1000851E8((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      *a1 = *a2;
      uint64_t v6 = *(int *)(sub_100046B9C(&qword_10015F8F0) + 48);
      uint64_t v7 = (char *)a1 + v6;
      uint64_t v8 = (char *)a2 + v6;
      uint64_t v9 = type metadata accessor for NSBundle.PreferencesPluginLocation();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

unsigned char *sub_100085400(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *Swift::Int result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000854CCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *Swift::Int result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PrimarySettingsListItemVisibilityRule.EvaluationStyle()
{
  return &type metadata for PrimarySettingsListItemVisibilityRule.EvaluationStyle;
}

unint64_t sub_100085508()
{
  unint64_t result = qword_100160A90;
  if (!qword_100160A90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160A90);
  }
  return result;
}

uint64_t sub_10008555C@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_100048AB4((unint64_t *)&unk_100160990, (void (*)(uint64_t))type metadata accessor for RestrictionsManager);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + OBJC_IVAR____TtC11SettingsApp19RestrictionsManager__isInEDUMode);
  return result;
}

uint64_t sub_10008560C()
{
  return swift_release();
}

uint64_t sub_1000856DC@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_100048AB4((unint64_t *)&unk_100160990, (void (*)(uint64_t))type metadata accessor for RestrictionsManager);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  *a2 = *(void *)(v3 + OBJC_IVAR____TtC11SettingsApp19RestrictionsManager__restrictedFeatures);
  return swift_bridgeObjectRetain();
}

uint64_t sub_100085790()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_100085870@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_100085978(a1, &OBJC_IVAR____TtC11SettingsApp19RestrictionsManager__blockedAppBundleIDs, a2);
}

uint64_t sub_100085884()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_100085964@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_100085978(a1, &OBJC_IVAR____TtC11SettingsApp19RestrictionsManager__allowedAppBundleIDs, a2);
}

uint64_t sub_100085978@<X0>(uint64_t *a1@<X0>, void *a2@<X4>, void *a3@<X8>)
{
  uint64_t v5 = *a1;
  swift_getKeyPath();
  sub_100048AB4((unint64_t *)&unk_100160990, (void (*)(uint64_t))type metadata accessor for RestrictionsManager);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  *a3 = *(void *)(v5 + *a2);
  return swift_bridgeObjectRetain();
}

uint64_t sub_100085A30()
{
  return swift_bridgeObjectRelease();
}

unint64_t sub_100085B10(char *a1, uint64_t a2, uint64_t a3, void *a4)
{
  char v5 = *a1;
  unsigned int v6 = (void **)sub_1000403E0(a4, a4[3]);
  return (unint64_t)sub_1000409DC(v5, a3, *v6) & 1;
}

uint64_t sub_100085B64()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PrimarySettingsListItemVisibilityEvaluator()
{
  return self;
}

uint64_t sub_100085BC0@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_100085978(a1, &OBJC_IVAR____TtC11SettingsApp19RestrictionsManager__allowedAppBundleIDs, a2);
}

uint64_t sub_100085BEC@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_100085978(a1, &OBJC_IVAR____TtC11SettingsApp19RestrictionsManager__blockedAppBundleIDs, a2);
}

uint64_t sub_100085C20()
{
  return sub_100083AF4(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_100085C40()
{
  return sub_100083C08(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_100085C5C()
{
  return sub_100083CE0(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_100085C78()
{
  return sub_100083BB0(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_100085C94()
{
  return sub_1000861C8(&qword_100161540, (void (*)(uint64_t))&type metadata accessor for URL);
}

void sub_100085CDC()
{
  sub_100045B14();
  uint64_t v1 = (int *)type metadata accessor for SearchResult();
  type metadata accessor for URL();
  sub_1000861C8(&qword_100161540, (void (*)(uint64_t))&type metadata accessor for URL);
  dispatch thunk of Hashable.hash(into:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + v1[7] + 8))
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  Hasher._combine(_:)(*(void *)(v0 + v1[8]));
  uint64_t v2 = v0 + v1[9];
  unsigned int v4 = *(void **)v2;
  uint64_t v3 = *(void *)(v2 + 8);
  switch(*(unsigned char *)(v2 + 16))
  {
    case 1:
      Hasher._combine(_:)(2uLL);
      swift_bridgeObjectRetain();
      String.hash(into:)();
      unsigned int v6 = v4;
      uint64_t v7 = v3;
      char v8 = 1;
      goto LABEL_9;
    case 2:
      Hasher._combine(_:)(3uLL);
      swift_bridgeObjectRetain();
      String.hash(into:)();
      unsigned int v6 = v4;
      uint64_t v7 = v3;
      char v8 = 2;
      goto LABEL_9;
    case 3:
      Hasher._combine(_:)(0);
      return;
    default:
      Hasher._combine(_:)(1uLL);
      id v5 = v4;
      NSObject.hash(into:)();
      unsigned int v6 = v4;
      uint64_t v7 = v3;
      char v8 = 0;
LABEL_9:
      sub_100046F04(v6, v7, v8);
      return;
  }
}

uint64_t sub_100085F04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(int *)(a3 + 32);
  uint64_t v4 = *(void *)(a1 + v3);
  uint64_t v5 = *(void *)(a2 + v3);
  if (v4 != v5) {
    return v5 < v4;
  }
  uint64_t v6 = *(int *)(a3 + 24);
  if (*(void *)(a1 + v6) == *(void *)(a2 + v6) && *(void *)(a1 + v6 + 8) == *(void *)(a2 + v6 + 8)) {
    return 0;
  }
  else {
    return _stringCompareWithSmolCheck(_:_:expecting:)();
  }
}

BOOL sub_100085F58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(int *)(a3 + 32);
  uint64_t v4 = *(void *)(a2 + v3);
  uint64_t v5 = *(void *)(a1 + v3);
  if (v4 == v5)
  {
    uint64_t v7 = *(int *)(a3 + 24);
    uint64_t v8 = *(void *)(a2 + v7);
    uint64_t v9 = *(void *)(a2 + v7 + 8);
    uint64_t v10 = (void *)(a1 + v7);
    if (v8 == *v10 && v9 == v10[1]) {
      char v12 = 0;
    }
    else {
      char v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
    }
  }
  else
  {
    char v12 = v5 < v4;
  }
  return (v12 & 1) == 0;
}

BOOL sub_100085FC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(int *)(a3 + 32);
  uint64_t v4 = *(void *)(a1 + v3);
  uint64_t v5 = *(void *)(a2 + v3);
  if (v4 == v5)
  {
    uint64_t v6 = *(int *)(a3 + 24);
    if (*(void *)(a1 + v6) == *(void *)(a2 + v6) && *(void *)(a1 + v6 + 8) == *(void *)(a2 + v6 + 8)) {
      char v8 = 0;
    }
    else {
      char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
    }
  }
  else
  {
    char v8 = v5 < v4;
  }
  return (v8 & 1) == 0;
}

uint64_t sub_100086038(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(int *)(a3 + 32);
  uint64_t v4 = *(void *)(a2 + v3);
  uint64_t v5 = *(void *)(a1 + v3);
  if (v4 != v5) {
    return v5 < v4;
  }
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = *(void *)(a2 + v7);
  uint64_t v9 = *(void *)(a2 + v7 + 8);
  uint64_t v10 = (void *)(a1 + v7);
  if (v8 == *v10 && v9 == v10[1]) {
    return 0;
  }
  else {
    return _stringCompareWithSmolCheck(_:_:expecting:)();
  }
}

Swift::Int sub_100086090()
{
  return Hasher._finalize()();
}

Swift::Int sub_1000860D4()
{
  return Hasher._finalize()();
}

uint64_t sub_100086110@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 20);
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t sub_100086180()
{
  return sub_1000861C8(&qword_100160B38, (void (*)(uint64_t))type metadata accessor for SearchResult);
}

uint64_t sub_1000861C8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for SearchResult()
{
  uint64_t result = qword_100160B98;
  if (!qword_100160B98) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10008625C(uint64_t a1, uint64_t a2)
{
  if ((sub_1000460F4(a1, a2) & 1) == 0) {
    return 0;
  }
  uint64_t v4 = (int *)type metadata accessor for SearchResult();
  if ((static URL.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  uint64_t v5 = v4[6];
  uint64_t v6 = *(void *)(a1 + v5);
  uint64_t v7 = *(void *)(a1 + v5 + 8);
  uint64_t v8 = (void *)(a2 + v5);
  if (v6 != *v8 || v7 != v8[1])
  {
    char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t result = 0;
    if ((v10 & 1) == 0) {
      return result;
    }
  }
  uint64_t v12 = v4[7];
  id v13 = (void *)(a1 + v12);
  uint64_t v14 = *(void *)(a1 + v12 + 8);
  long long v15 = (void *)(a2 + v12);
  uint64_t v16 = v15[1];
  if (!v14)
  {
    if (!v16) {
      goto LABEL_17;
    }
    return 0;
  }
  if (!v16) {
    return 0;
  }
  if (*v13 != *v15 || v14 != v16)
  {
    char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t result = 0;
    if ((v18 & 1) == 0) {
      return result;
    }
  }
LABEL_17:
  if (*(void *)(a1 + v4[8]) != *(void *)(a2 + v4[8])) {
    return 0;
  }
  uint64_t v19 = v4[9];
  id v21 = *(void **)(a1 + v19);
  uint64_t v20 = *(void *)(a1 + v19 + 8);
  uint64_t v22 = *(unsigned __int8 *)(a1 + v19 + 16);
  uint64_t v23 = a2 + v19;
  unint64_t v25 = *(void *)v23;
  uint64_t v24 = *(void *)(v23 + 8);
  int v26 = *(unsigned __int8 *)(v23 + 16);
  switch(v22)
  {
    case 1:
      if (v26 != 1) {
        return 0;
      }
      goto LABEL_31;
    case 2:
      if (v26 != 2) {
        return 0;
      }
LABEL_31:
      BOOL v29 = v21 == (void *)v25 && v20 == v24;
      if (v29 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
        goto LABEL_36;
      }
      return 0;
    case 3:
      if (v26 != 3 || (v24 | v25) != 0) {
        return 0;
      }
      goto LABEL_36;
    default:
      if (v26) {
        return 0;
      }
      sub_10006E244();
      sub_100047728(v21, v20, 0);
      sub_100047728((id)v25, v24, 0);
      char v27 = static NSObject.== infix(_:_:)();
      sub_100046F04((void *)v25, v24, 0);
      sub_100046F04(v21, v20, 0);
      if ((v27 & 1) == 0) {
        return 0;
      }
LABEL_36:
      uint64_t result = 1;
      break;
  }
  return result;
}

uint64_t *sub_10008645C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for PrimarySettingsListItemIdentifier();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
        uint64_t v8 = type metadata accessor for FLFollowUpInformation();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
        goto LABEL_8;
      case 2u:
        uint64_t v10 = type metadata accessor for FLFollowUpInformation();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
        uint64_t v11 = *(int *)(sub_100046B9C(&qword_10015F7F8) + 48);
        uint64_t v12 = (uint64_t *)((char *)a1 + v11);
        id v13 = (uint64_t *)((char *)a2 + v11);
        uint64_t v14 = v13[1];
        *uint64_t v12 = *v13;
        v12[1] = v14;
        swift_bridgeObjectRetain();
        goto LABEL_8;
      case 3u:
      case 4u:
      case 5u:
        uint64_t v15 = a2[1];
        *a1 = *a2;
        a1[1] = v15;
        swift_bridgeObjectRetain();
LABEL_8:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
        break;
    }
    uint64_t v16 = a3[5];
    id v17 = (char *)a1 + v16;
    char v18 = (char *)a2 + v16;
    uint64_t v19 = type metadata accessor for URL();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[6];
    uint64_t v21 = a3[7];
    uint64_t v22 = (uint64_t *)((char *)a1 + v20);
    uint64_t v23 = (uint64_t *)((char *)a2 + v20);
    uint64_t v24 = v23[1];
    *uint64_t v22 = *v23;
    v22[1] = v24;
    unint64_t v25 = (uint64_t *)((char *)a1 + v21);
    int v26 = (uint64_t *)((char *)a2 + v21);
    uint64_t v27 = v26[1];
    *unint64_t v25 = *v26;
    v25[1] = v27;
    uint64_t v28 = a3[9];
    *(uint64_t *)((char *)a1 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
    BOOL v29 = (char *)a1 + v28;
    long long v30 = (char *)a2 + v28;
    long long v31 = *(void **)((char *)a2 + v28);
    uint64_t v32 = *((void *)v30 + 1);
    LOBYTE(v18) = v30[16];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_100047728(v31, v32, (char)v18);
    *(void *)BOOL v29 = v31;
    *((void *)v29 + 1) = v32;
    v29[16] = (char)v18;
  }
  return a1;
}

void sub_100086770(uint64_t a1, uint64_t a2)
{
  type metadata accessor for PrimarySettingsListItemIdentifier();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
      uint64_t v4 = type metadata accessor for FLFollowUpInformation();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
      break;
    case 2u:
      uint64_t v5 = type metadata accessor for FLFollowUpInformation();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
      sub_100046B9C(&qword_10015F7F8);
      goto LABEL_4;
    case 3u:
    case 4u:
    case 5u:
LABEL_4:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }
  uint64_t v6 = a1 + *(int *)(a2 + 20);
  uint64_t v7 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = a1 + *(int *)(a2 + 36);
  uint64_t v9 = *(void **)v8;
  uint64_t v10 = *(void *)(v8 + 8);
  char v11 = *(unsigned char *)(v8 + 16);

  sub_100046F04(v9, v10, v11);
}

void *sub_10008690C(void *a1, void *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for PrimarySettingsListItemIdentifier();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
      uint64_t v7 = type metadata accessor for FLFollowUpInformation();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      goto LABEL_6;
    case 2u:
      uint64_t v8 = type metadata accessor for FLFollowUpInformation();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      uint64_t v9 = *(int *)(sub_100046B9C(&qword_10015F7F8) + 48);
      uint64_t v10 = (void *)((char *)a1 + v9);
      char v11 = (void *)((char *)a2 + v9);
      uint64_t v12 = v11[1];
      *uint64_t v10 = *v11;
      v10[1] = v12;
      swift_bridgeObjectRetain();
      goto LABEL_6;
    case 3u:
    case 4u:
    case 5u:
      uint64_t v13 = a2[1];
      *a1 = *a2;
      a1[1] = v13;
      swift_bridgeObjectRetain();
LABEL_6:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      break;
  }
  uint64_t v14 = a3[5];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = type metadata accessor for URL();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
  uint64_t v18 = a3[6];
  uint64_t v19 = a3[7];
  uint64_t v20 = (void *)((char *)a1 + v18);
  uint64_t v21 = (void *)((char *)a2 + v18);
  uint64_t v22 = v21[1];
  *uint64_t v20 = *v21;
  v20[1] = v22;
  uint64_t v23 = (void *)((char *)a1 + v19);
  uint64_t v24 = (void *)((char *)a2 + v19);
  uint64_t v25 = v24[1];
  void *v23 = *v24;
  v23[1] = v25;
  uint64_t v26 = a3[9];
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  uint64_t v27 = (char *)a1 + v26;
  uint64_t v28 = (char *)a2 + v26;
  BOOL v29 = *(void **)((char *)a2 + v26);
  uint64_t v30 = *((void *)v28 + 1);
  LOBYTE(v16) = v28[16];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100047728(v29, v30, (char)v16);
  *(void *)uint64_t v27 = v29;
  *((void *)v27 + 1) = v30;
  v27[16] = (char)v16;
  return a1;
}

void *sub_100086BD0(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_100045F84((uint64_t)a1);
    uint64_t v6 = type metadata accessor for PrimarySettingsListItemIdentifier();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
        uint64_t v7 = type metadata accessor for FLFollowUpInformation();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        uint64_t v8 = type metadata accessor for FLFollowUpInformation();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
        uint64_t v9 = *(int *)(sub_100046B9C(&qword_10015F7F8) + 48);
        uint64_t v10 = (void *)((char *)a1 + v9);
        char v11 = (void *)((char *)a2 + v9);
        *uint64_t v10 = *v11;
        v10[1] = v11[1];
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
      case 4u:
      case 5u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
        break;
    }
  }
  uint64_t v12 = a3[5];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = type metadata accessor for URL();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
  uint64_t v16 = a3[6];
  uint64_t v17 = (void *)((char *)a1 + v16);
  uint64_t v18 = (void *)((char *)a2 + v16);
  *uint64_t v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v19 = a3[7];
  uint64_t v20 = (void *)((char *)a1 + v19);
  uint64_t v21 = (void *)((char *)a2 + v19);
  *uint64_t v20 = *v21;
  v20[1] = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  uint64_t v22 = a3[9];
  uint64_t v23 = (char *)a1 + v22;
  uint64_t v24 = (char *)a2 + v22;
  id v25 = *(id *)v24;
  uint64_t v26 = *((void *)v24 + 1);
  LOBYTE(v13) = v24[16];
  sub_100047728(*(id *)v24, v26, (char)v13);
  uint64_t v27 = *(void **)v23;
  uint64_t v28 = *((void *)v23 + 1);
  *(void *)uint64_t v23 = v25;
  *((void *)v23 + 1) = v26;
  char v29 = v23[16];
  v23[16] = (char)v13;
  sub_100046F04(v27, v28, v29);
  return a1;
}

char *sub_100086F10(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for PrimarySettingsListItemIdentifier();
  unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v9 = type metadata accessor for FLFollowUpInformation();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
    uint64_t v10 = sub_100046B9C(&qword_10015F7F8);
    *(_OWORD *)&a1[*(int *)(v10 + 48)] = *(_OWORD *)&a2[*(int *)(v10 + 48)];
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload > 1)
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    uint64_t v8 = type metadata accessor for FLFollowUpInformation();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v11 = a3[5];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  uint64_t v14 = type metadata accessor for URL();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  *(_OWORD *)&a1[a3[6]] = *(_OWORD *)&a2[a3[6]];
  *(_OWORD *)&a1[v15] = *(_OWORD *)&a2[v15];
  uint64_t v16 = a3[9];
  *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  unsigned char v17[16] = v18[16];
  return a1;
}

char *sub_100087120(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_100045F84((uint64_t)a1);
    uint64_t v6 = type metadata accessor for PrimarySettingsListItemIdentifier();
    unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v9 = type metadata accessor for FLFollowUpInformation();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
      uint64_t v10 = sub_100046B9C(&qword_10015F7F8);
      *(_OWORD *)&a1[*(int *)(v10 + 48)] = *(_OWORD *)&a2[*(int *)(v10 + 48)];
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload > 1)
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    else
    {
      uint64_t v8 = type metadata accessor for FLFollowUpInformation();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
  }
  uint64_t v11 = a3[5];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  uint64_t v14 = type metadata accessor for URL();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[6];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v19 = *(void *)v17;
  uint64_t v18 = *((void *)v17 + 1);
  *(void *)uint64_t v16 = v19;
  *((void *)v16 + 1) = v18;
  swift_bridgeObjectRelease();
  uint64_t v20 = a3[7];
  uint64_t v21 = &a1[v20];
  uint64_t v22 = &a2[v20];
  uint64_t v24 = *(void *)v22;
  uint64_t v23 = *((void *)v22 + 1);
  *(void *)uint64_t v21 = v24;
  *((void *)v21 + 1) = v23;
  swift_bridgeObjectRelease();
  uint64_t v25 = a3[9];
  *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
  uint64_t v26 = &a1[v25];
  uint64_t v27 = &a2[v25];
  char v28 = v27[16];
  char v29 = *(void **)v26;
  uint64_t v30 = *((void *)v26 + 1);
  *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
  char v31 = v26[16];
  v26[16] = v28;
  sub_100046F04(v29, v30, v31);
  return a1;
}

uint64_t sub_100087370(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100087384);
}

uint64_t sub_100087384(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for PrimarySettingsListItemIdentifier();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = type metadata accessor for URL();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t sub_10008749C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000874B0);
}

uint64_t sub_1000874B0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for PrimarySettingsListItemIdentifier();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = type metadata accessor for URL();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t sub_1000875C4()
{
  uint64_t result = type metadata accessor for PrimarySettingsListItemIdentifier();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for URL();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1000876B8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for PrimarySettingsListItemIdentifier();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
        uint64_t v8 = type metadata accessor for FLFollowUpInformation();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
        goto LABEL_8;
      case 2u:
        uint64_t v10 = type metadata accessor for FLFollowUpInformation();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
        uint64_t v11 = *(int *)(sub_100046B9C(&qword_10015F7F8) + 48);
        uint64_t v12 = (uint64_t *)((char *)a1 + v11);
        uint64_t v13 = (uint64_t *)((char *)a2 + v11);
        uint64_t v14 = v13[1];
        *uint64_t v12 = *v13;
        v12[1] = v14;
        swift_bridgeObjectRetain();
        goto LABEL_8;
      case 3u:
      case 4u:
      case 5u:
        uint64_t v15 = a2[1];
        *a1 = *a2;
        a1[1] = v15;
        swift_bridgeObjectRetain();
LABEL_8:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
        break;
    }
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_100087928(uint64_t a1)
{
  type metadata accessor for PrimarySettingsListItemIdentifier();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
      uint64_t v2 = type metadata accessor for FLFollowUpInformation();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
      break;
    case 2u:
      uint64_t v3 = type metadata accessor for FLFollowUpInformation();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
      sub_100046B9C(&qword_10015F7F8);
      goto LABEL_4;
    case 3u:
    case 4u:
    case 5u:
LABEL_4:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }

  return swift_bridgeObjectRelease();
}

void *sub_100087A54(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for PrimarySettingsListItemIdentifier();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
      uint64_t v7 = type metadata accessor for FLFollowUpInformation();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      goto LABEL_6;
    case 2u:
      uint64_t v8 = type metadata accessor for FLFollowUpInformation();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      uint64_t v9 = *(int *)(sub_100046B9C(&qword_10015F7F8) + 48);
      uint64_t v10 = (void *)((char *)a1 + v9);
      uint64_t v11 = (void *)((char *)a2 + v9);
      uint64_t v12 = v11[1];
      *uint64_t v10 = *v11;
      v10[1] = v12;
      swift_bridgeObjectRetain();
      goto LABEL_6;
    case 3u:
    case 4u:
    case 5u:
      uint64_t v13 = a2[1];
      *a1 = *a2;
      a1[1] = v13;
      swift_bridgeObjectRetain();
LABEL_6:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      break;
  }
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_100087C74(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10003DAEC((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
    uint64_t v6 = type metadata accessor for PrimarySettingsListItemIdentifier();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
        uint64_t v7 = type metadata accessor for FLFollowUpInformation();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        uint64_t v8 = type metadata accessor for FLFollowUpInformation();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
        uint64_t v9 = *(int *)(sub_100046B9C(&qword_10015F7F8) + 48);
        uint64_t v10 = (void *)((char *)a1 + v9);
        uint64_t v11 = (void *)((char *)a2 + v9);
        *uint64_t v10 = *v11;
        v10[1] = v11[1];
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
      case 4u:
      case 5u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
        break;
    }
  }
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *sub_100087EF8(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for PrimarySettingsListItemIdentifier();
  unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v9 = type metadata accessor for FLFollowUpInformation();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
    uint64_t v10 = sub_100046B9C(&qword_10015F7F8);
    *(_OWORD *)&a1[*(int *)(v10 + 48)] = *(_OWORD *)&a2[*(int *)(v10 + 48)];
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload > 1)
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    uint64_t v8 = type metadata accessor for FLFollowUpInformation();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
    swift_storeEnumTagMultiPayload();
  }
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  return a1;
}

char *sub_10008808C(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10003DAEC((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
    uint64_t v6 = type metadata accessor for PrimarySettingsListItemIdentifier();
    unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v9 = type metadata accessor for FLFollowUpInformation();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
      uint64_t v10 = sub_100046B9C(&qword_10015F7F8);
      *(_OWORD *)&a1[*(int *)(v10 + 48)] = *(_OWORD *)&a2[*(int *)(v10 + 48)];
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload > 1)
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    else
    {
      uint64_t v8 = type metadata accessor for FLFollowUpInformation();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
  }
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10008824C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100088260);
}

uint64_t sub_100088260(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for PrimarySettingsListItemIdentifier();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_100088320(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100088334);
}

uint64_t sub_100088334(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for PrimarySettingsListItemIdentifier();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for SearchResultSection()
{
  uint64_t result = qword_100160C38;
  if (!qword_100160C38) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10008843C()
{
  uint64_t result = type metadata accessor for PrimarySettingsListItemIdentifier();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1000884D4()
{
  return sub_100088A38(&qword_100160C70, (void (*)(uint64_t))type metadata accessor for SearchResultSection);
}

Swift::Int sub_10008851C(uint64_t a1)
{
  Hasher.init(_seed:)();
  sub_100045B14();
  uint64_t v3 = *(void *)(v1 + *(int *)(a1 + 20));
  swift_bridgeObjectRetain();
  sub_10008872C((uint64_t)v5, v3);
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t sub_100088584(uint64_t a1, uint64_t a2)
{
  sub_100045B14();
  uint64_t v5 = *(void *)(v2 + *(int *)(a2 + 20));
  swift_bridgeObjectRetain();
  sub_10008872C(a1, v5);

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1000885E4(uint64_t a1, uint64_t a2)
{
  Hasher.init(_seed:)();
  sub_100045B14();
  uint64_t v4 = *(void *)(v2 + *(int *)(a2 + 20));
  swift_bridgeObjectRetain();
  sub_10008872C((uint64_t)v6, v4);
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t sub_100088648(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((sub_1000460F4(a1, a2) & 1) == 0) {
    return 0;
  }
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = *(void *)(a1 + v6);
  uint64_t v8 = *(void *)(a2 + v6);

  return sub_1000B77F4(v7, v8);
}

uint64_t sub_1000886B0@<X0>(uint64_t a1@<X8>)
{
  return sub_100088A80(v1, a1, (uint64_t (*)(void))type metadata accessor for SearchResultSection);
}

uint64_t sub_1000886E4()
{
  return sub_100088A38(&qword_100160C78, (void (*)(uint64_t))type metadata accessor for SearchResultSection);
}

void sub_10008872C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (int *)type metadata accessor for SearchResult();
  uint64_t v4 = *((void *)v3 - 1);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  Swift::UInt v7 = *(void *)(a2 + 16);
  Hasher._combine(_:)(v7);
  if (v7)
  {
    uint64_t v8 = a2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v9 = *(void *)(v4 + 72);
    while (2)
    {
      sub_100088A80(v8, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for SearchResult);
      sub_100045B14();
      type metadata accessor for URL();
      sub_100088A38(&qword_100161540, (void (*)(uint64_t))&type metadata accessor for URL);
      dispatch thunk of Hashable.hash(into:)();
      swift_bridgeObjectRetain();
      String.hash(into:)();
      swift_bridgeObjectRelease();
      if (*(void *)&v6[v3[7] + 8])
      {
        Hasher._combine(_:)(1u);
        swift_bridgeObjectRetain();
        String.hash(into:)();
        swift_bridgeObjectRelease();
      }
      else
      {
        Hasher._combine(_:)(0);
      }
      Hasher._combine(_:)(*(void *)&v6[v3[8]]);
      uint64_t v13 = &v6[v3[9]];
      uint64_t v15 = *(void **)v13;
      uint64_t v14 = *((void *)v13 + 1);
      switch(v13[16])
      {
        case 1:
          Hasher._combine(_:)(2uLL);
          swift_bridgeObjectRetain();
          String.hash(into:)();
          unint64_t v10 = v15;
          uint64_t v11 = v14;
          char v12 = 1;
          goto LABEL_4;
        case 2:
          Hasher._combine(_:)(3uLL);
          swift_bridgeObjectRetain();
          String.hash(into:)();
          unint64_t v10 = v15;
          uint64_t v11 = v14;
          char v12 = 2;
          goto LABEL_4;
        case 3:
          Hasher._combine(_:)(0);
          goto LABEL_5;
        default:
          Hasher._combine(_:)(1uLL);
          id v16 = v15;
          NSObject.hash(into:)();
          unint64_t v10 = v15;
          uint64_t v11 = v14;
          char v12 = 0;
LABEL_4:
          sub_100046F04(v10, v11, v12);
LABEL_5:
          sub_10003DAEC((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for SearchResult);
          v8 += v9;
          if (--v7) {
            continue;
          }
          return;
      }
    }
  }
}

uint64_t sub_100088A38(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100088A80(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

ValueMetadata *type metadata accessor for SettingsSearchAskSiriHowTip()
{
  return &type metadata for SettingsSearchAskSiriHowTip;
}

void *sub_100088AF8()
{
  return &protocol witness table for String;
}

unint64_t sub_100088B04()
{
  return 0xD000000000000017;
}

uint64_t sub_100088B20()
{
  return Tip.title.getter();
}

uint64_t sub_100088B48()
{
  return Image.init(_:bundle:)(0x48697269536B7341, 0xEA0000000000776FLL, 0);
}

uint64_t sub_100088B70()
{
  uint64_t v0 = sub_100046B9C(&qword_100160C88);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Tips.UsesConstellation();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  Swift::UInt v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100046B9C(&qword_100160C90);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  Tips.UsesConstellation.init(_:)();
  static Tips.OptionsBuilder.buildExpression<A>(_:)();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v15 = v4;
  id v16 = &protocol witness table for Tips.UsesConstellation;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  static Tips.OptionsBuilder.buildPartialBlock<A>(first:)();
  uint64_t v15 = v8;
  id v16 = (void *)OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  uint64_t v13 = static Tips.OptionsBuilder.buildFinalResult<A>(_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return v13;
}

void sub_100088E0C(void *a1@<X8>)
{
  *a1 = 0xD000000000000017;
  a1[1] = 0x8000000100124E90;
}

unint64_t sub_100088E30()
{
  unint64_t result = qword_100160C80;
  if (!qword_100160C80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160C80);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for SettingsSearchZeroKeywordList(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  swift_retain();
  return a1;
}

uint64_t destroy for SettingsSearchZeroKeywordList()
{
  return swift_release();
}

uint64_t assignWithCopy for SettingsSearchZeroKeywordList(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for SettingsSearchZeroKeywordList(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)unint64_t result = v2;
  return result;
}

uint64_t assignWithTake for SettingsSearchZeroKeywordList(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for SettingsSearchZeroKeywordList(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SettingsSearchZeroKeywordList(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_100088FE4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100089000@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v80 = a3;
  uint64_t v5 = type metadata accessor for ScrollDismissesKeyboardMode();
  uint64_t v78 = *(void *)(v5 - 8);
  uint64_t v79 = v5;
  __chkstk_darwin(v5);
  uint64_t v77 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for PlainListStyle();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v75 = v7;
  uint64_t v76 = v8;
  __chkstk_darwin(v7);
  uint64_t v74 = (char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100046B9C(&qword_100160C98);
  __chkstk_darwin(v10 - 8);
  uint64_t v67 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100046B9C(&qword_100160CA0);
  uint64_t v13 = v12 - 8;
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for ListSectionSpacing();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v59 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_100046B9C(&qword_100160CA8);
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v81 = v20;
  uint64_t v82 = v21;
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v59 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_100046B9C(&qword_100160CB0);
  __chkstk_darwin(v64);
  uint64_t v63 = (char *)&v59 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_100046B9C(&qword_100160CB8);
  uint64_t v70 = *(void *)(v68 - 8);
  __chkstk_darwin(v68);
  uint64_t v65 = (char *)&v59 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_100046B9C(&qword_100160CC0);
  uint64_t v72 = *(void *)(v26 - 8);
  uint64_t v73 = v26;
  __chkstk_darwin(v26);
  uint64_t v66 = (char *)&v59 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = sub_100046B9C(&qword_100160CC8);
  __chkstk_darwin(v71);
  uint64_t v69 = (char *)&v59 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = a1;
  char v84 = a2 & 1;
  sub_100046B9C(&qword_100160CD0);
  sub_10004D2D4(&qword_100160CD8, &qword_100160CD0);
  long long v61 = v23;
  List<>.init(content:)();
  static ListSectionSpacing.compact.getter();
  uint64_t v29 = *(int *)(v13 + 44);
  uint64_t v30 = v15;
  uint64_t v60 = v15;
  char v31 = &v15[v29];
  uint64_t v62 = v17;
  uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v17 + 16);
  v32(&v15[v29], v19, v16);
  long long v33 = *(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56);
  v33(v31, 0, 1, v16);
  (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v30, v23, v81);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v35 = (uint64_t)v67;
  v32(v67, v19, v16);
  v33((char *)v35, 0, 1, v16);
  uint64_t v36 = v64;
  uint64_t v37 = (uint64_t)v63;
  uint64_t v38 = (uint64_t *)&v63[*(int *)(v64 + 36)];
  uint64_t v39 = sub_100046B9C(&qword_100160CE0);
  sub_10003F75C(v35, (uint64_t)v38 + *(int *)(v39 + 28), &qword_100160C98);
  *uint64_t v38 = KeyPath;
  uint64_t v40 = (uint64_t)v60;
  sub_10003F75C((uint64_t)v60, v37, &qword_100160CA0);
  sub_10003F5D0(v35, &qword_100160C98);
  sub_10003F5D0(v40, &qword_100160CA0);
  (*(void (**)(char *, uint64_t))(v62 + 8))(v19, v16);
  (*(void (**)(char *, uint64_t))(v82 + 8))(v61, v81);
  uint64_t v41 = v74;
  PlainListStyle.init()();
  unint64_t v42 = sub_10008B7CC();
  uint64_t v43 = v65;
  uint64_t v44 = v75;
  View.listStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v76 + 8))(v41, v44);
  sub_10003F5D0(v37, &qword_100160CB0);
  uint64_t v45 = v77;
  static ScrollDismissesKeyboardMode.interactively.getter();
  uint64_t v85 = v36;
  uint64_t v86 = v44;
  unint64_t v87 = v42;
  os_log_type_t v88 = &protocol witness table for PlainListStyle;
  swift_getOpaqueTypeConformance2();
  uint64_t v46 = v66;
  uint64_t v47 = v68;
  View.scrollDismissesKeyboard(_:)();
  (*(void (**)(char *, uint64_t))(v78 + 8))(v45, v79);
  (*(void (**)(char *, uint64_t))(v70 + 8))(v43, v47);
  uint64_t v48 = static Alignment.center.getter();
  uint64_t v50 = v49;
  id v51 = [self systemGroupedBackgroundColor];
  uint64_t v52 = Color.init(uiColor:)();
  uint64_t v53 = static SafeAreaRegions.all.getter();
  LOBYTE(v41) = static Edge.Set.all.getter();
  uint64_t v55 = v72;
  uint64_t v54 = v73;
  uint64_t v56 = (uint64_t)v69;
  (*(void (**)(char *, char *, uint64_t))(v72 + 16))(v69, v46, v73);
  uint64_t v57 = v56 + *(int *)(v71 + 36);
  *(void *)uint64_t v57 = v52;
  *(void *)(v57 + 8) = v53;
  *(unsigned char *)(v57 + 16) = (_BYTE)v41;
  *(void *)(v57 + 24) = v48;
  *(void *)(v57 + 32) = v50;
  (*(void (**)(char *, uint64_t))(v55 + 8))(v46, v54);
  sub_10008B930();
  View.accessibilityIdentifier(_:)();
  return sub_10003F5D0(v56, &qword_100160CC8);
}

uint64_t sub_100089878@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v97 = a1;
  LODWORD(v92) = a2 & 1;
  uint64_t v4 = sub_100046B9C(&qword_100160D30);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)v80 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)v80 - v8;
  uint64_t v86 = sub_100046B9C(&qword_100160D38);
  uint64_t v85 = *(void *)(v86 - 8);
  __chkstk_darwin(v86);
  char v84 = (char *)v80 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100046B9C(&qword_100160D40);
  uint64_t v87 = *(void *)(v11 - 8);
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v96 = (char *)v80 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v95 = (char *)v80 - v14;
  uint64_t v15 = sub_100046B9C(&qword_100160D48);
  uint64_t v83 = *(void **)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)v80 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = sub_100046B9C(&qword_100160D50);
  __chkstk_darwin(v82);
  uint64_t v19 = (char *)v80 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_100046B9C(&qword_100160D58);
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v81 = (char *)v80 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_100046B9C(&qword_100160D60);
  uint64_t v24 = __chkstk_darwin(v23 - 8);
  uint64_t v94 = (uint64_t)v80 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)v80 - v26;
  uint64_t v28 = sub_1000C1488();
  uint64_t v90 = a3;
  uint64_t v91 = v7;
  uint64_t v89 = v9;
  uint64_t v88 = v11;
  uint64_t v93 = v27;
  if (v28)
  {
    v80[1] = v80;
    __chkstk_darwin(v28);
    sub_100046B9C(&qword_100160E00);
    uint64_t v29 = sub_10004D318(&qword_100160E08);
    uint64_t v30 = sub_10004D2D4(&qword_100160E10, &qword_100160E08);
    uint64_t v98 = v29;
    uint64_t v99 = &type metadata for Color;
    uint64_t v100 = v30;
    uint64_t v101 = &protocol witness table for Color;
    swift_getOpaqueTypeConformance2();
    Section<>.init(content:)();
    id v31 = [self systemGroupedBackgroundColor];
    uint64_t v98 = Color.init(uiColor:)();
    swift_retain();
    uint64_t v32 = AnyView.init<A>(_:)();
    long long v33 = v83;
    ((void (*)(char *, char *, uint64_t))v83[2])(v19, v17, v15);
    swift_release();
    *(void *)&v19[*(int *)(v82 + 36)] = v32;
    ((void (*)(char *, uint64_t))v33[1])(v17, v15);
    static VerticalEdge.Set.all.getter();
    sub_10008BE50();
    char v34 = v81;
    View.listSectionSeparator(_:edges:)();
    sub_10003F5D0((uint64_t)v19, &qword_100160D50);
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v27, v34, v20);
    uint64_t v35 = (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v27, 0, 1, v20);
  }
  else
  {
    uint64_t v35 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v27, 1, 1, v20);
  }
  char v36 = (char)v92;
  uint64_t v92 = v80;
  __chkstk_darwin(v35);
  uint64_t v83 = &v80[-4];
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v37 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v39 = v38;
  char v41 = v40 & 1;
  static Font.footnote.getter();
  static Font.Weight.semibold.getter();
  Font.weight(_:)();
  swift_release();
  uint64_t v42 = Text.font(_:)();
  uint64_t v44 = v43;
  char v46 = v45;
  swift_release();
  char v47 = v46 & 1;
  sub_100037590(v37, v39, v41);
  swift_bridgeObjectRelease();
  id v48 = [self secondaryLabelColor];
  uint64_t v98 = Color.init(uiColor:)();
  uint64_t v49 = Text.foregroundStyle<A>(_:)();
  id v51 = v50;
  char v53 = v52;
  uint64_t v55 = v54;
  uint64_t v56 = v44;
  LOBYTE(v44) = v36;
  sub_100037590(v42, v56, v47);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v98 = v49;
  uint64_t v99 = v51;
  LOBYTE(v100) = v53 & 1;
  uint64_t v101 = v55;
  sub_100046B9C(&qword_100160D68);
  sub_10008BA64();
  uint64_t v57 = v84;
  Section<>.init(header:content:)();
  static VerticalEdge.Set.bottom.getter();
  sub_10008BBF8();
  uint64_t v58 = v96;
  uint64_t v59 = v86;
  View.listSectionSeparator(_:edges:)();
  (*(void (**)(char *, uint64_t))(v85 + 8))(v57, v59);
  uint64_t v60 = v87;
  uint64_t v61 = v88;
  (*(void (**)(char *, char *, uint64_t))(v87 + 32))(v95, v58, v88);
  uint64_t v62 = swift_retain();
  sub_1000EFAB4(v62, v44);
  swift_release();
  uint64_t v63 = SettingsZeroKeywordNavigationItemsProvider.recents.getter();
  swift_release();
  uint64_t v64 = *(void *)(v63 + 16);
  uint64_t v65 = swift_bridgeObjectRelease();
  if (v64)
  {
    __chkstk_darwin(v65);
    sub_10008B41C((uint64_t)&v98);
    sub_100046B9C(&qword_100160DB8);
    sub_100046B9C(&qword_100160DC0);
    sub_10008BC8C();
    sub_10008BD00();
    uint64_t v66 = (uint64_t)v89;
    Section<>.init(header:content:)();
    uint64_t v67 = sub_100046B9C(&qword_100160DF0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v67 - 8) + 56))(v66, 0, 1, v67);
  }
  else
  {
    uint64_t v68 = sub_100046B9C(&qword_100160DF0);
    uint64_t v66 = (uint64_t)v89;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v68 - 8) + 56))(v89, 1, 1, v68);
  }
  uint64_t v69 = v94;
  sub_10003F75C((uint64_t)v93, v94, &qword_100160D60);
  uint64_t v70 = *(void (**)(char *, char *, uint64_t))(v60 + 16);
  uint64_t v72 = v95;
  uint64_t v71 = v96;
  v70(v96, v95, v61);
  uint64_t v73 = (uint64_t)v91;
  sub_10003F75C(v66, (uint64_t)v91, &qword_100160D30);
  uint64_t v74 = v69;
  uint64_t v75 = v61;
  uint64_t v76 = v90;
  sub_10003F75C(v74, v90, &qword_100160D60);
  uint64_t v77 = sub_100046B9C(&qword_100160DF8);
  v70((char *)(v76 + *(int *)(v77 + 48)), v71, v75);
  sub_10003F75C(v73, v76 + *(int *)(v77 + 64), &qword_100160D30);
  sub_10003F5D0(v66, &qword_100160D30);
  uint64_t v78 = *(void (**)(char *, uint64_t))(v60 + 8);
  v78(v72, v75);
  sub_10003F5D0((uint64_t)v93, &qword_100160D60);
  sub_10003F5D0(v73, &qword_100160D30);
  v78(v71, v75);
  return sub_10003F5D0(v94, &qword_100160D60);
}

uint64_t sub_10008A384()
{
  uint64_t v0 = sub_100046B9C(&qword_100160E08);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  unsigned int v3 = (char *)v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10008BFE4();
  TipView.init(_:arrowEdge:action:)();
  id v4 = [self tertiarySystemFillColor];
  v6[1] = Color.init(uiColor:)();
  sub_10004D2D4(&qword_100160E10, &qword_100160E08);
  View.tipBackground<A>(_:)();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

double sub_10008A508@<D0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  id v4 = sub_10008A58C(a1, a2 & 1);
  id v5 = [self systemGroupedBackgroundColor];
  Color.init(uiColor:)();
  uint64_t v6 = AnyView.init<A>(_:)();
  *(void *)a3 = v4;
  *(void *)(a3 + 8) = v6;
  double result = 0.0;
  *(_OWORD *)(a3 + 16) = 0u;
  *(_OWORD *)(a3 + 32) = 0u;
  *(unsigned char *)(a3 + 48) = 0;
  return result;
}

id sub_10008A58C(uint64_t a1, char a2)
{
  int v3 = a2 & 1;
  uint64_t v4 = sub_100046B9C((uint64_t *)&unk_100163C10);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v72 = (char *)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v75 = (char *)&v65 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v77 = (char *)&v65 - v10;
  __chkstk_darwin(v9);
  uint64_t v83 = (char *)&v65 - v11;
  uint64_t v88 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v85 = *(void *)(v88 - 8);
  __chkstk_darwin(v88);
  uint64_t v79 = (char *)&v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Locale();
  __chkstk_darwin(v13 - 8);
  char v84 = (char *)&v65 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v15 - 8);
  uint64_t v16 = type metadata accessor for LocalizedStringResource();
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  uint64_t v71 = (char *)&v65 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v73 = (char *)&v65 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v76 = (char *)&v65 - v22;
  __chkstk_darwin(v21);
  uint64_t v78 = (char *)&v65 - v23;
  uint64_t v24 = type metadata accessor for SettingsEventImage();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v74 = (char *)&v65 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v30 = (char *)&v65 - v29;
  uint64_t v31 = __chkstk_darwin(v28);
  long long v33 = (uint64_t *)((char *)&v65 - v32);
  __chkstk_darwin(v31);
  uint64_t v35 = (uint64_t *)((char *)&v65 - v34);
  uint64_t v36 = swift_retain();
  sub_1000EFAB4(v36, v3);
  swift_release();
  uint64_t v37 = SettingsZeroKeywordNavigationItemsProvider.suggestions.getter();
  swift_release();
  uint64_t v38 = *(void *)(v37 + 16);
  swift_bridgeObjectRelease();
  if (v38 == 4)
  {
    uint64_t v39 = swift_retain();
    sub_1000EFAB4(v39, v3);
    swift_release();
    uint64_t v40 = SettingsZeroKeywordNavigationItemsProvider.suggestions.getter();
    swift_release();
    return (id)v40;
  }
  uint64_t v68 = v30;
  uint64_t v65 = a1;
  int v66 = v3;
  sub_100046B9C(&qword_100161680);
  uint64_t v42 = *(void *)(type metadata accessor for SettingsNavigationEventRecord() - 8);
  unint64_t v80 = (*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
  int64_t v70 = swift_allocObject();
  *(_OWORD *)(v70 + 16) = xmmword_10011C390;
  void *v35 = 0xD00000000000001CLL;
  v35[1] = 0x80000001001235C0;
  uint64_t v44 = *(void (**)(void))(v25 + 104);
  uint64_t v43 = v25 + 104;
  unsigned int v86 = enum case for SettingsEventImage.graphicIcon(_:);
  uint64_t v87 = (void (*)(void *, void, uint64_t))v44;
  v44(v35);
  id result = (id)MobileGestalt_get_current_device();
  uint64_t v69 = v24;
  if (!result)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  char v45 = result;
  MobileGestalt_get_deviceSupportsClosedLoopHaptics();

  char v46 = (char **)(v85 + 104);
  char v47 = v79;
  uint64_t v67 = v43;
  uint64_t v81 = v85 + 104;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  id v48 = *v46;
  LODWORD(v85) = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v49 = v48;
  ((void (*)(char *))v48)(v47);
  uint64_t v50 = v83;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  URL.init(string:)();
  uint64_t v51 = type metadata accessor for URL();
  uint64_t v52 = *(void *)(v51 - 8);
  uint64_t v83 = *(char **)(v52 + 48);
  char v84 = (char *)v51;
  uint64_t v82 = v52 + 48;
  id result = (id)((uint64_t (*)(char *, uint64_t))v83)(v50, 1);
  if (result == 1)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v80 += v70;
  SettingsNavigationEventRecord.init(icon:title:navigationPathComponents:navigationLink:associatedApplicationBundleIdentifier:)();
  void *v33 = 0xD000000000000024;
  v33[1] = 0x80000001001235E0;
  uint64_t v53 = v69;
  v87(v33, v86, v69);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  ((void (*)(char *, void, uint64_t))v49)(v47, v85, v88);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  uint64_t v54 = v77;
  URL.init(string:)();
  id result = (id)((uint64_t (*)(char *, uint64_t, char *))v83)(v54, 1, v84);
  if (result == 1)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  SettingsNavigationEventRecord.init(icon:title:navigationPathComponents:navigationLink:associatedApplicationBundleIdentifier:)();
  uint64_t v55 = v68;
  *uint64_t v68 = 0xD00000000000001CLL;
  v55[1] = 0x80000001001235A0;
  v87(v55, v86, v53);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  ((void (*)(char *, void, uint64_t))v49)(v47, v85, v88);
  uint64_t v78 = v49;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  uint64_t v56 = v75;
  URL.init(string:)();
  id result = (id)((uint64_t (*)(char *, uint64_t, char *))v83)(v56, 1, v84);
  uint64_t v57 = v74;
  if (result == 1)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  SettingsNavigationEventRecord.init(icon:title:navigationPathComponents:navigationLink:associatedApplicationBundleIdentifier:)();
  *uint64_t v57 = 0xD000000000000022;
  v57[1] = 0x8000000100123570;
  v87(v57, v86, v53);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  ((void (*)(char *, void, uint64_t))v78)(v47, v85, v88);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  uint64_t v58 = v72;
  URL.init(string:)();
  id result = (id)((uint64_t (*)(char *, uint64_t, char *))v83)(v58, 1, v84);
  char v59 = v66;
  if (result != 1)
  {
    uint64_t v60 = v80;
    SettingsNavigationEventRecord.init(icon:title:navigationPathComponents:navigationLink:associatedApplicationBundleIdentifier:)();
    uint64_t v61 = swift_retain();
    sub_1000EFAB4(v61, v59);
    swift_release();
    uint64_t v62 = SettingsZeroKeywordNavigationItemsProvider.suggestions.getter();
    id result = (id)swift_release();
    uint64_t v89 = v62;
    unint64_t v63 = *(void *)(v62 + 16);
    if (v63 > 4)
    {
      __break(1u);
    }
    else
    {
      int64_t v64 = 4 - v63;
      id result = (id)v70;
      if (*(void *)(v70 + 16) >= v64)
      {
        sub_1000D6E44(v70, v60, 0, (2 * v64) | 1);
        return (id)v89;
      }
    }
    __break(1u);
    goto LABEL_13;
  }
LABEL_17:
  __break(1u);
  return result;
}

uint64_t sub_10008B024(uint64_t a1, char a2)
{
  char v2 = a2 & 1;
  uint64_t v3 = swift_retain();
  sub_1000EFAB4(v3, v2);
  swift_release();
  SettingsZeroKeywordNavigationItemsProvider.recents.getter();
  swift_release();
  sub_100046B9C(&qword_100160E30);
  type metadata accessor for URL();
  sub_100046B9C(&qword_100160DE0);
  sub_10004D2D4(&qword_100160E38, &qword_100160E30);
  sub_10008BD74();
  sub_10008C2D4(&qword_100160E40, (void (*)(uint64_t))&type metadata accessor for SettingsNavigationEventRecord);
  return ForEach<>.init(_:content:)();
}

uint64_t sub_10008B164@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for SettingsNavigationEventRecord();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for SettingsSearchZeroKeywordListRecentItem();
  uint64_t v9 = (int *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  type metadata accessor for SettingsAppModel();
  sub_10008C2D4(&qword_10015F590, (void (*)(uint64_t))type metadata accessor for SettingsAppModel);
  *(void *)uint64_t v11 = Environment.init<A>(_:)();
  v11[8] = v12 & 1;
  uint64_t v13 = (uint64_t *)&v11[v9[7]];
  *uint64_t v13 = swift_getKeyPath();
  sub_100046B9C(&qword_100160E48);
  swift_storeEnumTagMultiPayload();
  uint64_t v14 = (uint64_t *)&v11[v9[8]];
  *uint64_t v14 = swift_getKeyPath();
  sub_100046B9C(&qword_100160E50);
  swift_storeEnumTagMultiPayload();
  uint64_t v15 = (uint64_t *)&v11[v9[9]];
  *uint64_t v15 = swift_getKeyPath();
  sub_100046B9C(&qword_100160E58);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v11[v9[10]], v7, v4);
  id v16 = [self systemGroupedBackgroundColor];
  v19[1] = Color.init(uiColor:)();
  swift_retain();
  uint64_t v17 = AnyView.init<A>(_:)();
  sub_10008C164((uint64_t)v11, a2);
  swift_release();
  *(void *)(a2 + *(int *)(sub_100046B9C(&qword_100160DE0) + 36)) = v17;
  return sub_10008C1C8((uint64_t)v11);
}

uint64_t sub_10008B41C@<X0>(uint64_t a1@<X8>)
{
  LocalizedStringKey.init(stringLiteral:)();
  LOWORD(v27) = 2;
  uint64_t v2 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v4 = v3;
  char v6 = v5 & 1;
  static Font.footnote.getter();
  static Font.Weight.semibold.getter();
  Font.weight(_:)();
  swift_release();
  uint64_t v7 = Text.font(_:)();
  uint64_t v9 = v8;
  char v11 = v10;
  swift_release();
  char v12 = v11 & 1;
  sub_100037590(v2, v4, v6);
  swift_bridgeObjectRelease();
  id v13 = [self secondaryLabelColor:24 v27];
  Color.init(uiColor:)();
  uint64_t v14 = Text.foregroundStyle<A>(_:)();
  uint64_t v16 = v15;
  char v18 = v17;
  uint64_t v20 = v19;
  sub_100037590(v7, v9, v12);
  swift_release();
  swift_bridgeObjectRelease();
  char v21 = static Edge.Set.top.getter();
  uint64_t result = EdgeInsets.init(_all:)();
  *(void *)a1 = v14;
  *(void *)(a1 + 8) = v16;
  *(unsigned char *)(a1 + 16) = v18 & 1;
  *(void *)(a1 + 24) = v20;
  *(unsigned char *)(a1 + 32) = v21;
  *(void *)(a1 + 40) = v23;
  *(void *)(a1 + 48) = v24;
  *(void *)(a1 + 56) = v25;
  *(void *)(a1 + 64) = v26;
  *(unsigned char *)(a1 + 72) = 0;
  return result;
}

uint64_t sub_10008B5D8@<X0>(uint64_t a1@<X8>)
{
  return sub_100089000(*(void *)v1, *(unsigned char *)(v1 + 8), a1);
}

uint64_t sub_10008B5E4@<X0>(uint64_t a1@<X8>)
{
  return sub_100089878(*(void *)(v1 + 16), *(unsigned char *)(v1 + 24), a1);
}

uint64_t sub_10008B5F0()
{
  return EnvironmentValues._openSensitiveURL.getter();
}

uint64_t sub_10008B614(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10008B640(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for OpenURLAction, (uint64_t (*)(char *))&EnvironmentValues._openSensitiveURL.setter);
}

uint64_t sub_10008B640(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t (*a6)(char *))
{
  a5(0);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v12 - v8;
  (*(void (**)(char *, uint64_t))(v10 + 16))((char *)&v12 - v8, a1);
  return a6(v9);
}

uint64_t sub_10008B710()
{
  return EnvironmentValues.listSectionSpacing.getter();
}

uint64_t sub_10008B734(uint64_t a1)
{
  uint64_t v2 = sub_100046B9C(&qword_100160C98);
  __chkstk_darwin(v2 - 8);
  sub_10003F75C(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_100160C98);
  return EnvironmentValues.listSectionSpacing.setter();
}

unint64_t sub_10008B7CC()
{
  unint64_t result = qword_100160CE8;
  if (!qword_100160CE8)
  {
    sub_10004D318(&qword_100160CB0);
    sub_10008B86C();
    sub_10004D2D4(&qword_100160D10, &qword_100160CE0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160CE8);
  }
  return result;
}

unint64_t sub_10008B86C()
{
  unint64_t result = qword_100160CF0;
  if (!qword_100160CF0)
  {
    sub_10004D318(&qword_100160CA0);
    sub_10004D2D4(&qword_100160CF8, &qword_100160CA8);
    sub_10004D2D4(&qword_100160D00, &qword_100160D08);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160CF0);
  }
  return result;
}

unint64_t sub_10008B930()
{
  unint64_t result = qword_100160D18;
  if (!qword_100160D18)
  {
    sub_10004D318(&qword_100160CC8);
    sub_10004D318(&qword_100160CB8);
    sub_10004D318(&qword_100160CB0);
    type metadata accessor for PlainListStyle();
    sub_10008B7CC();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_10004D2D4(&qword_100160D20, &qword_100160D28);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160D18);
  }
  return result;
}

double sub_10008BA58@<D0>(uint64_t a1@<X8>)
{
  return sub_10008A508(*(void *)(v1 + 16), *(unsigned char *)(v1 + 24), a1);
}

unint64_t sub_10008BA64()
{
  unint64_t result = qword_100160D70;
  if (!qword_100160D70)
  {
    sub_10004D318(&qword_100160D68);
    sub_10008BB04();
    sub_10004D2D4(&qword_100160DA0, &qword_100160DA8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160D70);
  }
  return result;
}

unint64_t sub_10008BB04()
{
  unint64_t result = qword_100160D78;
  if (!qword_100160D78)
  {
    sub_10004D318(&qword_100160D80);
    sub_10008BBA4();
    sub_10004D2D4(&qword_100160D90, &qword_100160D98);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160D78);
  }
  return result;
}

unint64_t sub_10008BBA4()
{
  unint64_t result = qword_100160D88;
  if (!qword_100160D88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160D88);
  }
  return result;
}

unint64_t sub_10008BBF8()
{
  unint64_t result = qword_100160DB0;
  if (!qword_100160DB0)
  {
    sub_10004D318(&qword_100160D38);
    sub_10008BA64();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160DB0);
  }
  return result;
}

uint64_t sub_10008BC80()
{
  return sub_10008B024(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

unint64_t sub_10008BC8C()
{
  unint64_t result = qword_100160DC8;
  if (!qword_100160DC8)
  {
    sub_10004D318(&qword_100160DB8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160DC8);
  }
  return result;
}

unint64_t sub_10008BD00()
{
  unint64_t result = qword_100160DD0;
  if (!qword_100160DD0)
  {
    sub_10004D318(&qword_100160DC0);
    sub_10008BD74();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160DD0);
  }
  return result;
}

unint64_t sub_10008BD74()
{
  unint64_t result = qword_100160DD8;
  if (!qword_100160DD8)
  {
    sub_10004D318(&qword_100160DE0);
    sub_10008C2D4(&qword_100160DE8, (void (*)(uint64_t))type metadata accessor for SettingsSearchZeroKeywordListRecentItem);
    sub_10004D2D4(&qword_100160D90, &qword_100160D98);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160DD8);
  }
  return result;
}

uint64_t sub_10008BE44()
{
  return sub_10008A384();
}

unint64_t sub_10008BE50()
{
  unint64_t result = qword_100160E18;
  if (!qword_100160E18)
  {
    sub_10004D318(&qword_100160D50);
    sub_10008BEF0();
    sub_10004D2D4(&qword_100160D90, &qword_100160D98);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160E18);
  }
  return result;
}

unint64_t sub_10008BEF0()
{
  unint64_t result = qword_100160E20;
  if (!qword_100160E20)
  {
    sub_10004D318(&qword_100160D48);
    sub_10004D318(&qword_100160E08);
    sub_10004D2D4(&qword_100160E10, &qword_100160E08);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160E20);
  }
  return result;
}

unint64_t sub_10008BFE4()
{
  unint64_t result = qword_100160E28;
  if (!qword_100160E28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160E28);
  }
  return result;
}

uint64_t sub_10008C038()
{
  return EnvironmentValues._openSensitiveURL.getter();
}

uint64_t sub_10008C05C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10008B640(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for OpenURLAction, (uint64_t (*)(char *))&EnvironmentValues._openSensitiveURL.setter);
}

uint64_t sub_10008C09C()
{
  return EnvironmentValues.layoutDirection.getter();
}

uint64_t sub_10008C0C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10008B640(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for LayoutDirection, (uint64_t (*)(char *))&EnvironmentValues.layoutDirection.setter);
}

uint64_t sub_10008C100()
{
  return EnvironmentValues.locale.getter();
}

uint64_t sub_10008C124(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10008B640(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for Locale, (uint64_t (*)(char *))&EnvironmentValues.locale.setter);
}

uint64_t sub_10008C164(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SettingsSearchZeroKeywordListRecentItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10008C1C8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SettingsSearchZeroKeywordListRecentItem();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_10008C228()
{
  unint64_t result = qword_100160E60;
  if (!qword_100160E60)
  {
    sub_10004D318(&qword_100160E68);
    sub_10008B930();
    sub_10008C2D4(&qword_1001601A0, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160E60);
  }
  return result;
}

uint64_t sub_10008C2D4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_10008C320(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    char v7 = *((unsigned char *)a2 + 8);
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (void *)(a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    swift_retain();
    sub_100046B9C(&qword_100160E48);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = type metadata accessor for OpenURLAction();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    }
    else
    {
      *uint64_t v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v13 = a3[6];
    uint64_t v14 = (void *)((char *)v4 + v13);
    uint64_t v15 = (uint64_t *)((char *)a2 + v13);
    sub_100046B9C(&qword_100160E50);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v16 = type metadata accessor for LayoutDirection();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    }
    else
    {
      *uint64_t v14 = *v15;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v17 = a3[7];
    char v18 = (void *)((char *)v4 + v17);
    uint64_t v19 = (uint64_t *)((char *)a2 + v17);
    sub_100046B9C(&qword_100160E58);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v20 = type metadata accessor for Locale();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
    }
    else
    {
      *char v18 = *v19;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v21 = a3[8];
    uint64_t v22 = (char *)v4 + v21;
    uint64_t v23 = (uint64_t)a2 + v21;
    uint64_t v24 = type metadata accessor for SettingsNavigationEventRecord();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
  }
  return v4;
}

uint64_t sub_10008C5B8(uint64_t a1, int *a2)
{
  swift_release();
  uint64_t v4 = a1 + a2[5];
  sub_100046B9C(&qword_100160E48);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for OpenURLAction();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = a1 + a2[6];
  sub_100046B9C(&qword_100160E50);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for LayoutDirection();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  uint64_t v8 = a1 + a2[7];
  sub_100046B9C(&qword_100160E58);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = type metadata accessor for Locale();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  else
  {
    swift_release();
  }
  uint64_t v10 = a1 + a2[8];
  uint64_t v11 = type metadata accessor for SettingsNavigationEventRecord();
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8);

  return v12(v10, v11);
}

uint64_t sub_10008C77C(uint64_t a1, uint64_t a2, int *a3)
{
  char v6 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  swift_retain();
  sub_100046B9C(&qword_100160E48);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for OpenURLAction();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    void *v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  sub_100046B9C(&qword_100160E50);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v14 = type metadata accessor for LayoutDirection();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  }
  else
  {
    *uint64_t v12 = *v13;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v15 = a3[7];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  sub_100046B9C(&qword_100160E58);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v18 = type metadata accessor for Locale();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  }
  else
  {
    *uint64_t v16 = *v17;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = type metadata accessor for SettingsNavigationEventRecord();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  return a1;
}

uint64_t sub_10008C9C4(uint64_t a1, uint64_t a2, int *a3)
{
  char v6 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v6;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v7 = a3[5];
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (void *)(a2 + v7);
    sub_10003F5D0(a1 + v7, &qword_100160E48);
    sub_100046B9C(&qword_100160E48);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = type metadata accessor for OpenURLAction();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      void *v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v11 = a3[6];
    uint64_t v12 = (void *)(a1 + v11);
    uint64_t v13 = (void *)(a2 + v11);
    sub_10003F5D0(a1 + v11, &qword_100160E50);
    sub_100046B9C(&qword_100160E50);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v14 = type metadata accessor for LayoutDirection();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    }
    else
    {
      *uint64_t v12 = *v13;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v15 = a3[7];
    uint64_t v16 = (void *)(a1 + v15);
    uint64_t v17 = (void *)(a2 + v15);
    sub_10003F5D0(a1 + v15, &qword_100160E58);
    sub_100046B9C(&qword_100160E58);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v18 = type metadata accessor for Locale();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
    }
    else
    {
      *uint64_t v16 = *v17;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = type metadata accessor for SettingsNavigationEventRecord();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  return a1;
}

uint64_t sub_10008CC50(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = a3[5];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_100046B9C(&qword_100160E48);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for OpenURLAction();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (const void *)(a2 + v11);
  uint64_t v14 = sub_100046B9C(&qword_100160E50);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = type metadata accessor for LayoutDirection();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v15 - 8) + 32))(v12, v13, v15);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
  }
  uint64_t v16 = a3[7];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (const void *)(a2 + v16);
  uint64_t v19 = sub_100046B9C(&qword_100160E58);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v20 = type metadata accessor for Locale();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v20 - 8) + 32))(v17, v18, v20);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  uint64_t v21 = a3[8];
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  uint64_t v24 = type metadata accessor for SettingsNavigationEventRecord();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
  return a1;
}

uint64_t sub_10008CEC4(uint64_t a1, uint64_t a2, int *a3)
{
  char v6 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v6;
  swift_release();
  if (a1 != a2)
  {
    uint64_t v7 = a3[5];
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (const void *)(a2 + v7);
    sub_10003F5D0(a1 + v7, &qword_100160E48);
    uint64_t v10 = sub_100046B9C(&qword_100160E48);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = type metadata accessor for OpenURLAction();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
    }
    uint64_t v12 = a3[6];
    uint64_t v13 = (void *)(a1 + v12);
    uint64_t v14 = (const void *)(a2 + v12);
    sub_10003F5D0(a1 + v12, &qword_100160E50);
    uint64_t v15 = sub_100046B9C(&qword_100160E50);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v16 = type metadata accessor for LayoutDirection();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v16 - 8) + 32))(v13, v14, v16);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
    }
    uint64_t v17 = a3[7];
    uint64_t v18 = (void *)(a1 + v17);
    uint64_t v19 = (const void *)(a2 + v17);
    sub_10003F5D0(a1 + v17, &qword_100160E58);
    uint64_t v20 = sub_100046B9C(&qword_100160E58);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v21 = type metadata accessor for Locale();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v21 - 8) + 32))(v18, v19, v21);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
    }
  }
  uint64_t v22 = a3[8];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  uint64_t v25 = type metadata accessor for SettingsNavigationEventRecord();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 40))(v23, v24, v25);
  return a1;
}

uint64_t sub_10008D178(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10008D18C);
}

uint64_t sub_10008D18C(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 8);
    if (v4 > 1) {
      return (v4 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
  uint64_t v8 = sub_100046B9C(&qword_100160E70);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[5];
LABEL_11:
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    return v14(a1 + v11, a2, v9);
  }
  uint64_t v12 = sub_100046B9C(&qword_100160E78);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[6];
    goto LABEL_11;
  }
  uint64_t v13 = sub_100046B9C(&qword_100160E80);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a2)
  {
    uint64_t v9 = v13;
    uint64_t v10 = *(void *)(v13 - 8);
    uint64_t v11 = a3[7];
    goto LABEL_11;
  }
  uint64_t v15 = type metadata accessor for SettingsNavigationEventRecord();
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
  uint64_t v17 = v15;
  uint64_t v18 = a1 + a3[8];

  return v16(v18, a2, v17);
}

uint64_t sub_10008D354(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10008D368);
}

uint64_t sub_10008D368(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 254)
  {
    *(unsigned char *)(result + 8) = -(char)a2;
    return result;
  }
  uint64_t v8 = sub_100046B9C(&qword_100160E70);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[5];
LABEL_9:
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v14(v5 + v11, a2, a2, v9);
  }
  uint64_t v12 = sub_100046B9C(&qword_100160E78);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[6];
    goto LABEL_9;
  }
  uint64_t v13 = sub_100046B9C(&qword_100160E80);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v9 = v13;
    uint64_t v10 = *(void *)(v13 - 8);
    uint64_t v11 = a4[7];
    goto LABEL_9;
  }
  uint64_t v15 = type metadata accessor for SettingsNavigationEventRecord();
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  uint64_t v17 = v15;
  uint64_t v18 = v5 + a4[8];

  return v16(v18, a2, a2, v17);
}

uint64_t type metadata accessor for SettingsSearchZeroKeywordListRecentItem()
{
  uint64_t result = qword_100160EE0;
  if (!qword_100160EE0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10008D580()
{
  sub_10008D720(319, (unint64_t *)&qword_100160EF0, (void (*)(uint64_t))&type metadata accessor for OpenURLAction);
  if (v0 <= 0x3F)
  {
    sub_10008D720(319, &qword_100160EF8, (void (*)(uint64_t))&type metadata accessor for LayoutDirection);
    if (v1 <= 0x3F)
    {
      sub_10008D720(319, (unint64_t *)&unk_100160F00, (void (*)(uint64_t))&type metadata accessor for Locale);
      if (v2 <= 0x3F)
      {
        type metadata accessor for SettingsNavigationEventRecord();
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_10008D720(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Environment.Content();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_10008D774()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10008D790@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for SettingsSearchZeroKeywordListRecentItem();
  uint64_t v48 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v49 = v4;
  uint64_t v50 = (uint64_t)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for LayoutDirection();
  uint64_t v45 = *(void *)(v5 - 8);
  uint64_t v46 = v5;
  __chkstk_darwin(v5);
  uint64_t v44 = (uint64_t)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Locale();
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = type metadata accessor for LocalizedStringResource();
  uint64_t v10 = *(void *)(v43 - 8);
  uint64_t v11 = __chkstk_darwin(v43);
  uint64_t v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v40 - v14;
  uint64_t v16 = type metadata accessor for SettingsEventImage();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (uint64_t *)((char *)&v40 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v47 = v3;
  uint64_t v51 = v1;
  SettingsNavigationEventRecord.icon.getter();
  int v20 = (*(uint64_t (**)(uint64_t *, uint64_t))(v17 + 88))(v19, v16);
  if (v20 == enum case for SettingsEventImage.graphicIcon(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v17 + 96))(v19, v16);
    uint64_t v21 = *v19;
    uint64_t v41 = v19[1];
    uint64_t v42 = v21;
    char v22 = 2;
  }
  else if (v20 == enum case for SettingsEventImage.applicationIcon(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v17 + 96))(v19, v16);
    uint64_t v23 = *v19;
    uint64_t v41 = v19[1];
    uint64_t v42 = v23;
    char v22 = 1;
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t))(v17 + 8))(v19, v16);
    uint64_t v41 = 0;
    uint64_t v42 = 0;
    char v22 = 3;
  }
  SettingsNavigationEventRecord.title.getter();
  uint64_t v24 = v51;
  sub_1000EFAD0((uint64_t)v9);
  LocalizedStringResource.locale.setter();
  uint64_t v25 = v43;
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v43);
  uint64_t v26 = String.init(localized:)();
  uint64_t v28 = v27;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v25);
  uint64_t v29 = v44;
  sub_1000EFB00(v44);
  uint64_t v30 = SettingsNavigationEventRecord.resolveLocalizedPathComponents(layoutDirection:)();
  unint64_t v32 = v31;
  (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v29, v46);
  uint64_t v33 = HIBYTE(v32) & 0xF;
  if ((v32 & 0x2000000000000000) == 0) {
    uint64_t v33 = v30 & 0xFFFFFFFFFFFFLL;
  }
  if (!v33)
  {
    swift_bridgeObjectRelease();
    uint64_t v30 = 0;
    unint64_t v32 = 0;
  }
  uint64_t v34 = v24;
  uint64_t v35 = v50;
  sub_10008C164(v34, v50);
  unint64_t v36 = (*(unsigned __int8 *)(v48 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80);
  uint64_t v37 = swift_allocObject();
  uint64_t result = sub_10008DFA8(v35, v37 + v36);
  uint64_t v39 = v41;
  *(void *)a1 = v42;
  *(void *)(a1 + 8) = v39;
  *(unsigned char *)(a1 + 16) = v22;
  *(void *)(a1 + 24) = v26;
  *(void *)(a1 + 32) = v28;
  *(void *)(a1 + 40) = v30;
  *(void *)(a1 + 48) = v32;
  *(void *)(a1 + 56) = sub_10008E00C;
  *(void *)(a1 + 64) = v37;
  return result;
}

uint64_t sub_10008DC4C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v6 = *(unsigned char *)(a1 + 8);
  uint64_t v7 = swift_retain();
  sub_100037090(v7, v6);
  swift_release();
  type metadata accessor for SettingsSearchZeroKeywordListRecentItem();
  SettingsNavigationEventRecord.navigationLink.getter();
  sub_10006C16C((uint64_t)v5);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_10008DD64()
{
  uint64_t v1 = (int *)type metadata accessor for SettingsSearchZeroKeywordListRecentItem();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v5 = v0 + v3;
  swift_release();
  uint64_t v6 = v0 + v3 + v1[5];
  sub_100046B9C(&qword_100160E48);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for OpenURLAction();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  uint64_t v8 = v5 + v1[6];
  sub_100046B9C(&qword_100160E50);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = type metadata accessor for LayoutDirection();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  else
  {
    swift_release();
  }
  uint64_t v10 = v5 + v1[7];
  sub_100046B9C(&qword_100160E58);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = type metadata accessor for Locale();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  }
  else
  {
    swift_release();
  }
  uint64_t v12 = v5 + v1[8];
  uint64_t v13 = type metadata accessor for SettingsNavigationEventRecord();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_10008DFA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SettingsSearchZeroKeywordListRecentItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10008E00C()
{
  uint64_t v1 = *(void *)(type metadata accessor for SettingsSearchZeroKeywordListRecentItem() - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_10008DC4C(v2);
}

unint64_t sub_10008E070()
{
  unint64_t result = qword_100160F40;
  if (!qword_100160F40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160F40);
  }
  return result;
}

uint64_t *sub_10008E0C4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_100046B9C(&qword_100160E48);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for OpenURLAction();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = type metadata accessor for SettingsNavigationEventRecord();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
  }
  return a1;
}

uint64_t sub_10008E21C(uint64_t a1, uint64_t a2)
{
  sub_100046B9C(&qword_100160E48);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for OpenURLAction();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = type metadata accessor for SettingsNavigationEventRecord();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

void *sub_10008E2F0(void *a1, void *a2, uint64_t a3)
{
  sub_100046B9C(&qword_100160E48);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for OpenURLAction();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for SettingsNavigationEventRecord();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

void *sub_10008E3F8(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10003F5D0((uint64_t)a1, &qword_100160E48);
    sub_100046B9C(&qword_100160E48);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for OpenURLAction();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for SettingsNavigationEventRecord();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

char *sub_10008E518(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_100046B9C(&qword_100160E48);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for OpenURLAction();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = type metadata accessor for SettingsNavigationEventRecord();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  return a1;
}

char *sub_10008E628(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10003F5D0((uint64_t)a1, &qword_100160E48);
    uint64_t v6 = sub_100046B9C(&qword_100160E48);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for OpenURLAction();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = type metadata accessor for SettingsNavigationEventRecord();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t sub_10008E750(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10008E764);
}

uint64_t sub_10008E764(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100046B9C(&qword_100160E70);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = type metadata accessor for SettingsNavigationEventRecord();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_10008E860(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10008E874);
}

uint64_t sub_10008E874(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_100046B9C(&qword_100160E70);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = type metadata accessor for SettingsNavigationEventRecord();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t type metadata accessor for SettingsSearchZeroKeywordListSuggestionsItem()
{
  uint64_t result = qword_100160FA0;
  if (!qword_100160FA0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10008E9C8()
{
  sub_10008EA90();
  if (v0 <= 0x3F)
  {
    type metadata accessor for SettingsNavigationEventRecord();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_10008EA90()
{
  if (!qword_100160EF0)
  {
    type metadata accessor for OpenURLAction();
    unint64_t v0 = type metadata accessor for Environment.Content();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100160EF0);
    }
  }
}

uint64_t sub_10008EAE8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10008EB04@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v18 = a1;
  uint64_t v3 = type metadata accessor for SettingsSearchZeroKeywordListSuggestionsItem();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v3 - 8);
  uint64_t v6 = sub_100046B9C(&qword_100160FD8);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100046B9C(&qword_100160FE0);
  uint64_t v10 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10008FCF4(v2, (uint64_t)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v13 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v14 = swift_allocObject();
  sub_10008FEAC((uint64_t)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v14 + v13);
  uint64_t v19 = v2;
  sub_100046B9C(&qword_100160FE8);
  sub_10004D2D4(&qword_100160FF0, &qword_100160FE8);
  Button.init(action:label:)();
  sub_10004D2D4(&qword_100160FF8, &qword_100160FD8);
  sub_10008FF78();
  View.buttonStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  static Alignment.center.getter();
  __n128 v15 = sub_10008F578(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v18, 0.0, 1, 0.0, 1);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v10 + 8))(v12, v17, v15);
}

uint64_t sub_10008EE3C()
{
  uint64_t v0 = type metadata accessor for URL();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for OpenURLAction();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000EFB40((uint64_t)v7);
  type metadata accessor for SettingsSearchZeroKeywordListSuggestionsItem();
  SettingsNavigationEventRecord.navigationLink.getter();
  OpenURLAction.callAsFunction(_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_10008EFC4@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = static HorizontalAlignment.center.getter();
  *(void *)(a1 + 8) = 0x4024000000000000;
  *(unsigned char *)(a1 + 16) = 0;
  uint64_t v2 = sub_100046B9C(&qword_100161010);
  return sub_10008F014((char *)(a1 + *(int *)(v2 + 44)));
}

uint64_t sub_10008F014@<X0>(char *a1@<X8>)
{
  unint64_t v32 = a1;
  uint64_t v1 = sub_100046B9C(&qword_100161018);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100046B9C(&qword_100161020);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v23 - v9;
  sub_10008F764((uint64_t)v3);
  sub_10008FFCC();
  View.iconSize(_:)();
  sub_10003F5D0((uint64_t)v3, &qword_100161018);
  uint64_t v29 = v5;
  uint64_t v30 = v4;
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
  unint64_t v31 = v10;
  v11(v10, v8, v4);
  sub_10008F2E4((uint64_t)v33);
  uint64_t v12 = v33[0];
  uint64_t v13 = v33[1];
  char v14 = v34;
  uint64_t v24 = v36;
  uint64_t v25 = v35;
  uint64_t v28 = v37;
  uint64_t v15 = v39;
  int v26 = v40;
  int v27 = v38;
  uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v16(v8, v10, v4);
  uint64_t v17 = v32;
  v16(v32, v8, v4);
  uint64_t v18 = &v17[*(int *)(sub_100046B9C(&qword_100161040) + 48)];
  *(void *)uint64_t v18 = v12;
  *((void *)v18 + 1) = v13;
  unsigned char v18[16] = v14;
  uint64_t v19 = v24;
  *((void *)v18 + 3) = v25;
  *((void *)v18 + 4) = v19;
  *((void *)v18 + 5) = v28;
  v18[48] = v27;
  *((void *)v18 + 7) = v15;
  v18[64] = v26;
  sub_10006591C(v12, v13, v14);
  int v20 = *(void (**)(char *, uint64_t))(v29 + 8);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  uint64_t v21 = v30;
  v20(v31, v30);
  sub_100037590(v12, v13, v14);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(char *, uint64_t))v20)(v8, v21);
}

uint64_t sub_10008F2E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for Font.Leading();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for LocalizedStringResource();
  __chkstk_darwin(v6 - 8);
  type metadata accessor for SettingsSearchZeroKeywordListSuggestionsItem();
  SettingsNavigationEventRecord.title.getter();
  uint64_t v7 = Text.init(_:)();
  uint64_t v9 = v8;
  char v11 = v10 & 1;
  static Font.footnote.getter();
  static Font.Weight.semibold.getter();
  Font.weight(_:)();
  swift_release();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for Font.Leading.tight(_:), v2);
  Font.leading(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v12 = Text.font(_:)();
  uint64_t v14 = v13;
  char v16 = v15;
  swift_release();
  sub_100037590(v7, v9, v11);
  swift_bridgeObjectRelease();
  v25[1] = static HierarchicalShapeStyle.secondary.getter();
  uint64_t v17 = Text.foregroundStyle<A>(_:)();
  uint64_t v19 = v18;
  LOBYTE(v9) = v20;
  uint64_t v22 = v21;
  sub_100037590(v12, v14, v16 & 1);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t result = swift_getKeyPath();
  *(void *)a1 = v17;
  *(void *)(a1 + 8) = v19;
  *(unsigned char *)(a1 + 16) = v9 & 1;
  *(void *)(a1 + 24) = v22;
  *(void *)(a1 + 32) = KeyPath;
  *(void *)(a1 + 40) = 2;
  *(unsigned char *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = result;
  *(unsigned char *)(a1 + 64) = 1;
  return result;
}

__n128 sub_10008F578@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    uint64_t v23 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  uint64_t v24 = sub_100046B9C(&qword_100160FE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(a9, v13, v24);
  uint64_t v25 = (_OWORD *)(a9 + *(int *)(sub_100046B9C(&qword_100161008) + 36));
  _DWORD v25[4] = v31;
  v25[5] = v32;
  v25[6] = v33;
  *uint64_t v25 = v27;
  v25[1] = v28;
  __n128 result = v30;
  void v25[2] = v29;
  v25[3] = v30;
  return result;
}

uint64_t sub_10008F764@<X0>(uint64_t a1@<X8>)
{
  uint64_t v28 = a1;
  uint64_t v26 = sub_100046B9C(&qword_100161048);
  __chkstk_darwin(v26);
  uint64_t v2 = (char *)&v23 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_100046B9C(&qword_1001608E0);
  __chkstk_darwin(v25);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_100046B9C(&qword_1001608E8);
  __chkstk_darwin(v27);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100046B9C(&qword_1001608F0);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  char v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for SettingsEventImage();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SettingsSearchZeroKeywordListSuggestionsItem();
  SettingsNavigationEventRecord.icon.getter();
  int v15 = (*(uint64_t (**)(char *, uint64_t))(v12 + 88))(v14, v11);
  if (v15 == enum case for SettingsEventImage.graphicIcon(_:))
  {
    (*(void (**)(char *, uint64_t))(v12 + 96))(v14, v11);
    id v16 = objc_allocWithZone((Class)ISIcon);
    NSString v17 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v16 initWithType:v17];

    AsyncIconImage.init<>(icon:descriptor:)();
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v4, v10, v7);
    swift_storeEnumTagMultiPayload();
    sub_10004D2D4(&qword_100160908, &qword_1001608F0);
    _ConditionalContent<>.init(storage:)();
    sub_10003A600((uint64_t)v6, (uint64_t)v2);
    swift_storeEnumTagMultiPayload();
    sub_10003A668();
    _ConditionalContent<>.init(storage:)();
    sub_10003F5D0((uint64_t)v6, &qword_1001608E8);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  else
  {
    uint64_t v24 = v6;
    if (v15 == enum case for SettingsEventImage.applicationIcon(_:))
    {
      (*(void (**)(char *, uint64_t))(v12 + 96))(v14, v11);
      id v19 = objc_allocWithZone((Class)ISIcon);
      NSString v20 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v19 initWithBundleIdentifier:v20];

      AsyncIconImage.init<>(icon:descriptor:)();
      uint64_t v21 = v8;
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v4, v10, v7);
      swift_storeEnumTagMultiPayload();
      sub_10004D2D4(&qword_100160908, &qword_1001608F0);
      uint64_t v22 = (uint64_t)v24;
      _ConditionalContent<>.init(storage:)();
      sub_10003A600(v22, (uint64_t)v2);
      swift_storeEnumTagMultiPayload();
      sub_10003A668();
      _ConditionalContent<>.init(storage:)();
      sub_10003F5D0(v22, &qword_1001608E8);
      return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v10, v7);
    }
    else
    {
      swift_storeEnumTagMultiPayload();
      sub_10003A668();
      _ConditionalContent<>.init(storage:)();
      return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    }
  }
}

uint64_t sub_10008FCF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SettingsSearchZeroKeywordListSuggestionsItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10008FD58()
{
  uint64_t v1 = type metadata accessor for SettingsSearchZeroKeywordListSuggestionsItem();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  sub_100046B9C(&qword_100160E48);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for OpenURLAction();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v0 + v3, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = v0 + v3 + *(int *)(v1 + 20);
  uint64_t v7 = type metadata accessor for SettingsNavigationEventRecord();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_10008FEAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SettingsSearchZeroKeywordListSuggestionsItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10008FF10()
{
  type metadata accessor for SettingsSearchZeroKeywordListSuggestionsItem();

  return sub_10008EE3C();
}

uint64_t sub_10008FF70@<X0>(uint64_t a1@<X8>)
{
  return sub_10008EFC4(a1);
}

unint64_t sub_10008FF78()
{
  unint64_t result = qword_100161000;
  if (!qword_100161000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100161000);
  }
  return result;
}

unint64_t sub_10008FFCC()
{
  unint64_t result = qword_100161028;
  if (!qword_100161028)
  {
    sub_10004D318(&qword_100161018);
    sub_100090040();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100161028);
  }
  return result;
}

unint64_t sub_100090040()
{
  unint64_t result = qword_100161030;
  if (!qword_100161030)
  {
    sub_10004D318(&qword_100161038);
    sub_10003A668();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100161030);
  }
  return result;
}

uint64_t sub_1000900BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = EnvironmentValues.lineLimit.getter();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_1000900F0()
{
  return EnvironmentValues.lineLimit.setter();
}

uint64_t sub_100090120@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = EnvironmentValues.multilineTextAlignment.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10009014C()
{
  return EnvironmentValues.multilineTextAlignment.setter();
}

unint64_t sub_100090178()
{
  unint64_t result = qword_100161050;
  if (!qword_100161050)
  {
    sub_10004D318(&qword_100161008);
    sub_10004D318(&qword_100160FD8);
    sub_10004D2D4(&qword_100160FF8, &qword_100160FD8);
    sub_10008FF78();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100161050);
  }
  return result;
}

ValueMetadata *type metadata accessor for SettingsSearchZeroKeywordListSuggestionsRow()
{
  return &type metadata for SettingsSearchZeroKeywordListSuggestionsRow;
}

uint64_t sub_100090278()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100090294@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for SettingsNavigationEventRecord();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  *a2 = swift_getKeyPath();
  sub_100046B9C(&qword_100160E48);
  swift_storeEnumTagMultiPayload();
  uint64_t v8 = type metadata accessor for SettingsSearchZeroKeywordListSuggestionsItem();
  return (*(uint64_t (**)(char *, char *, uint64_t))(v5 + 32))((char *)a2 + *(int *)(v8 + 20), v7, v4);
}

uint64_t sub_1000903B8()
{
  return ForEach<>.init(_:content:)();
}

uint64_t sub_1000904F8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10009054C()
{
  unint64_t result = qword_100161060;
  if (!qword_100161060)
  {
    sub_10004D318(&qword_100161068);
    sub_10004D2D4(&qword_100161070, &qword_100161078);
    sub_1000905EC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100161060);
  }
  return result;
}

unint64_t sub_1000905EC()
{
  unint64_t result = qword_100161080;
  if (!qword_100161080)
  {
    sub_10004D318(&qword_100161088);
    sub_1000904F8(&qword_100161058, (void (*)(uint64_t))type metadata accessor for SettingsSearchZeroKeywordListSuggestionsItem);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100161080);
  }
  return result;
}

ValueMetadata *type metadata accessor for SettingsSearchZeroKeywordListSuggestionsStack()
{
  return &type metadata for SettingsSearchZeroKeywordListSuggestionsStack;
}

unint64_t sub_1000906A4()
{
  unint64_t result = qword_100161090;
  if (!qword_100161090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100161090);
  }
  return result;
}

double sub_100090708(uint64_t a1, char a2)
{
  return sub_1000908EC(a1, a2 & 1);
}

uint64_t sub_100090718(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_10009099C(a9, a1, a2, a3, a4);
}

uint64_t sub_100090724(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_100090794(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t (*)(uint64_t))&Layout.explicitAlignment(of:in:proposal:subviews:cache:));
}

uint64_t sub_10009075C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_100090794(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t (*)(uint64_t))&Layout.explicitAlignment(of:in:proposal:subviews:cache:));
}

uint64_t sub_100090794(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t))
{
  return a10(a1);
}

void (*sub_1000907D8(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = Animatable<>.animatableData.modify();
  return sub_100090848;
}

void sub_100090848(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

unint64_t sub_100090898()
{
  unint64_t result = qword_100161098;
  if (!qword_100161098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100161098);
  }
  return result;
}

double sub_1000908EC(uint64_t a1, char a2)
{
  type metadata accessor for LayoutSubviews();
  sub_100090EA8();
  dispatch thunk of Collection.startIndex.getter();
  dispatch thunk of Collection.endIndex.getter();
  uint64_t v4 = dispatch thunk of Collection.distance(from:to:)();
  double result = *(double *)&a1;
  if (a2) {
    double result = 10.0;
  }
  if (v4 != 4) {
    return 0.0;
  }
  return result;
}

uint64_t sub_10009099C(uint64_t a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  uint64_t v10 = type metadata accessor for LayoutSubview();
  unint64_t v41 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for LayoutSubviews();
  uint64_t v46 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  int v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100046B9C(&qword_1001610A0);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100046B9C(&qword_1001610A8);
  uint64_t v20 = __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v40 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v24 = (char *)&v40 - v23;
  sub_100090EA8();
  dispatch thunk of Collection.startIndex.getter();
  dispatch thunk of Collection.endIndex.getter();
  uint64_t result = dispatch thunk of Collection.distance(from:to:)();
  if (result == 4)
  {
    uint64_t v50 = v15;
    v54.origin.x = a2;
    v54.origin.y = a3;
    v54.size.width = a4;
    v54.size.height = a5;
    double Width = CGRectGetWidth(v54);
    uint64_t v48 = *(void (**)(char *, uint64_t, uint64_t))(v46 + 16);
    uint64_t v49 = v46 + 16;
    v48(v22, a1, v13);
    dispatch thunk of Collection.startIndex.getter();
    *(void *)&v22[*(int *)(v19 + 36)] = v52[0];
    sub_100090F00((uint64_t)v22, (uint64_t)v24);
    uint64_t v27 = &v24[*(int *)(v19 + 36)];
    uint64_t v28 = *(void *)v27;
    uint64_t v51 = v24;
    dispatch thunk of Collection.endIndex.getter();
    if (v28 == v52[0])
    {
      uint64_t v29 = (uint64_t)v51;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v41 + 56))(v18, 1, 1, v10);
    }
    else
    {
      v46 += 8;
      uint64_t v47 = (void (**)(char *))(v41 + 16);
      __n128 v30 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v41 + 56);
      uint64_t v44 = (void (**)(char *, char *, uint64_t))(v41 + 32);
      uint64_t v45 = (unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48);
      double v31 = (Width + -38.0 + -24.0) * 0.25 + 8.0;
      double v43 = (Width + -38.0 + -24.0) * 0.25;
      long long v32 = (void (**)(char *, uint64_t))(v41 + 8);
      double v33 = 19.0;
      unint64_t v41 = (v41 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
      uint64_t v42 = v32;
      uint64_t v29 = (uint64_t)v51;
      while (1)
      {
        char v34 = (void (*)(uint64_t *, void))dispatch thunk of Collection.subscript.read();
        (*v47)(v18);
        v34(v52, 0);
        uint64_t v35 = v50;
        v48(v50, v29, v13);
        dispatch thunk of Collection.formIndex(after:)();
        (*(void (**)(char *, uint64_t))v46)(v35, v13);
        uint64_t v36 = *v30;
        (*v30)(v18, 0, 1, v10);
        if ((*v45)(v18, 1, v10) == 1) {
          break;
        }
        (*v44)(v12, v18, v10);
        static UnitPoint.topLeading.getter();
        LOBYTE(v52[0]) = 0;
        char v53 = 0;
        LayoutSubview.place(at:anchor:proposal:)();
        (*v42)(v12, v10);
        double v33 = v31 + v33;
        uint64_t v37 = v12;
        uint64_t v38 = *(void *)v27;
        dispatch thunk of Collection.endIndex.getter();
        BOOL v39 = v38 == v52[0];
        uint64_t v12 = v37;
        uint64_t v29 = (uint64_t)v51;
        if (v39)
        {
          v36(v18, 1, 1, v10);
          return sub_100090F68(v29);
        }
      }
    }
    return sub_100090F68(v29);
  }
  return result;
}

unint64_t sub_100090EA8()
{
  unint64_t result = qword_1001610B0;
  if (!qword_1001610B0)
  {
    type metadata accessor for LayoutSubviews();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001610B0);
  }
  return result;
}

uint64_t sub_100090F00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100046B9C(&qword_1001610A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100090F68(uint64_t a1)
{
  uint64_t v2 = sub_100046B9C(&qword_1001610A8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for SettingsSearchImageButtonStyle()
{
  return &type metadata for SettingsSearchImageButtonStyle;
}

uint64_t sub_100090FD8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100090FF4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v32 = a1;
  uint64_t v1 = sub_100046B9C(&qword_1001610B8);
  __chkstk_darwin(v1 - 8);
  char v3 = (char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100046B9C(&qword_1001610C0);
  __chkstk_darwin(v4);
  uint64_t v6 = (uint64_t *)((char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = type metadata accessor for ButtonStyleConfiguration.Label();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v27 - v12;
  uint64_t v29 = sub_100046B9C(&qword_1001610C8);
  __chkstk_darwin(v29);
  __n128 v30 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v31 = v13;
  ButtonStyleConfiguration.label.getter();
  if (ButtonStyleConfiguration.isPressed.getter()) {
    uint64_t v15 = static Color.black.getter();
  }
  else {
    uint64_t v15 = static Color.clear.getter();
  }
  uint64_t v16 = v15;
  uint64_t KeyPath = swift_getKeyPath();
  ButtonStyleConfiguration.label.getter();
  uint64_t v28 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  v28(v3, v11, v7);
  sub_10003F75C((uint64_t)v3, (uint64_t)v6 + *(int *)(v4 + 36), &qword_1001610B8);
  uint64_t *v6 = KeyPath;
  v6[1] = v16;
  void v6[2] = 0x3FD0000000000000;
  swift_retain();
  swift_retain();
  sub_10003F5D0((uint64_t)v3, &qword_1001610B8);
  uint64_t v18 = *(void (**)(char *, uint64_t))(v8 + 8);
  v18(v11, v7);
  swift_release();
  swift_release();
  uint64_t v19 = static Alignment.center.getter();
  uint64_t v21 = v20;
  uint64_t v22 = (uint64_t)v30;
  uint64_t v23 = (uint64_t)&v30[*(int *)(v29 + 36)];
  sub_10003F75C((uint64_t)v6, v23, &qword_1001610C0);
  uint64_t v24 = (uint64_t *)(v23 + *(int *)(sub_100046B9C(&qword_1001610D0) + 36));
  *uint64_t v24 = v19;
  v24[1] = v21;
  uint64_t v25 = v31;
  v28((char *)v22, v31, v7);
  sub_10003F5D0((uint64_t)v6, &qword_1001610C0);
  v18(v25, v7);
  return sub_10009137C(v22, v32);
}

uint64_t sub_100091324@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.foregroundColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100091350()
{
  return EnvironmentValues.foregroundColor.setter();
}

uint64_t sub_10009137C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100046B9C(&qword_1001610C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1000913E8()
{
  unint64_t result = qword_1001610D8;
  if (!qword_1001610D8)
  {
    sub_10004D318(&qword_1001610C8);
    sub_100091464();
    sub_1000914BC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001610D8);
  }
  return result;
}

unint64_t sub_100091464()
{
  unint64_t result = qword_1001610E0;
  if (!qword_1001610E0)
  {
    type metadata accessor for ButtonStyleConfiguration.Label();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001610E0);
  }
  return result;
}

unint64_t sub_1000914BC()
{
  unint64_t result = qword_1001610E8;
  if (!qword_1001610E8)
  {
    sub_10004D318(&qword_1001610D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001610E8);
  }
  return result;
}

uint64_t destroy for SettingsSearchListItem(uint64_t a1)
{
  sub_100046F04(*(void **)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t initializeWithCopy for SettingsSearchListItem(uint64_t a1, uint64_t a2)
{
  id v4 = *(id *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  char v6 = *(unsigned char *)(a2 + 16);
  sub_100047728(*(id *)a2, v5, v6);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v8 = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for SettingsSearchListItem(uint64_t a1, uint64_t a2)
{
  id v4 = *(id *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  char v6 = *(unsigned char *)(a2 + 16);
  sub_100047728(*(id *)a2, v5, v6);
  uint64_t v7 = *(void **)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  char v9 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v6;
  sub_100046F04(v7, v8, v9);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v10;
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for SettingsSearchListItem(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for SettingsSearchListItem(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void **)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v7 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v4;
  sub_100046F04(v5, v6, v7);
  uint64_t v8 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v8;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = v9;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for SettingsSearchListItem(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SettingsSearchListItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SettingsSearchListItem()
{
  return &type metadata for SettingsSearchListItem;
}

uint64_t sub_100091810()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10009182C@<X0>(uint64_t a1@<X8>)
{
  v25[1] = a1;
  uint64_t v2 = sub_100046B9C(&qword_1001610F0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100046B9C(&qword_1001610F8);
  uint64_t v7 = v6 - 8;
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100046B9C(&qword_100161100);
  uint64_t v11 = v10 - 8;
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25[0] = sub_100046B9C(&qword_100161108);
  __chkstk_darwin(v25[0]);
  uint64_t v15 = (char *)v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = swift_allocObject();
  long long v17 = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(v16 + 48) = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(v16 + 64) = v17;
  *(void *)(v16 + 80) = *(void *)(v1 + 64);
  long long v18 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v16 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v16 + 32) = v18;
  uint64_t v26 = v1;
  sub_100092190(v1);
  sub_100046B9C(&qword_100161110);
  sub_1000921F0();
  Button.init(action:label:)();
  id v19 = [self systemGroupedBackgroundColor];
  uint64_t v27 = Color.init(uiColor:)();
  swift_retain();
  uint64_t v20 = AnyView.init<A>(_:)();
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v9, v5, v2);
  swift_release();
  *(void *)&v9[*(int *)(v7 + 44)] = v20;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_10003F75C((uint64_t)v9, (uint64_t)v13, &qword_1001610F8);
  uint64_t v21 = &v13[*(int *)(v11 + 44)];
  unsigned char v21[32] = 0;
  *(_OWORD *)uint64_t v21 = 0u;
  *((_OWORD *)v21 + 1) = 0u;
  sub_10003F5D0((uint64_t)v9, &qword_1001610F8);
  uint64_t KeyPath = swift_getKeyPath();
  sub_10003F75C((uint64_t)v13, (uint64_t)v15, &qword_100161100);
  uint64_t v23 = &v15[*(int *)(v25[0] + 36)];
  *(void *)uint64_t v23 = KeyPath;
  *((void *)v23 + 1) = 0;
  v23[16] = 0;
  sub_10003F5D0((uint64_t)v13, &qword_100161100);
  sub_100092318();
  sub_10009251C();
  View.buttonStyle<A>(_:)();
  return sub_10003F5D0((uint64_t)v15, &qword_100161108);
}

uint64_t sub_100091BB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100046B9C(&qword_100161128);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v6 = static VerticalAlignment.center.getter();
  *((void *)v6 + 1) = 0;
  v6[16] = 0;
  uint64_t v7 = sub_100046B9C(&qword_100161178);
  sub_100091C8C(a1, (uint64_t)&v6[*(int *)(v7 + 44)]);
  sub_10003F75C((uint64_t)v6, a2, &qword_100161128);
  *(unsigned char *)(a2 + *(int *)(sub_100046B9C(&qword_100161110) + 36)) = 0;
  return sub_10003F5D0((uint64_t)v6, &qword_100161128);
}

void sub_100091C8C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100046B9C(&qword_100161180);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  uint64_t v9 = &v21[-v8];
  uint64_t v10 = *(void **)a1;
  uint64_t v11 = *(void *)(a1 + 8);
  char v12 = *(unsigned char *)(a1 + 16);
  uint64_t KeyPath = swift_getKeyPath();
  sub_100047728(v10, v11, v12);
  int v22 = static Edge.Set.all.getter();
  *(void *)uint64_t v9 = static HorizontalAlignment.leading.getter();
  *((void *)v9 + 1) = 0;
  v9[16] = 0;
  sub_100046B9C(&qword_100161188);
  uint64_t v23 = a1;
  sub_100046B9C(&qword_100161190);
  sub_10004D2D4(&qword_100161198, &qword_100161190);
  LabelGroup.init(content:)();
  sub_10003F75C((uint64_t)v9, (uint64_t)v7, &qword_100161180);
  *(void *)a2 = KeyPath;
  *(unsigned char *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = v10;
  *(void *)(a2 + 24) = v11;
  *(unsigned char *)(a2 + 32) = v12;
  *(unsigned char *)(a2 + 40) = v22;
  __asm { FMOV            V0.2D, #16.0 }
  *(_OWORD *)(a2 + 48) = _Q0;
  *(_OWORD *)(a2 + 64) = xmmword_10011EBD0;
  *(unsigned char *)(a2 + 80) = 0;
  uint64_t v19 = sub_100046B9C(&qword_1001611A0);
  sub_10003F75C((uint64_t)v7, a2 + *(int *)(v19 + 48), &qword_100161180);
  uint64_t v20 = a2 + *(int *)(v19 + 64);
  *(void *)uint64_t v20 = 0;
  *(unsigned char *)(v20 + 8) = 1;
  *(void *)(v20 + 16) = 0xBFF0000000000000;
  sub_10003A440(KeyPath, 0);
  sub_100047728(v10, v11, v12);
  sub_10003F5D0((uint64_t)v9, &qword_100161180);
  sub_10003F5D0((uint64_t)v7, &qword_100161180);
  sub_10003A520(KeyPath, 0);
  sub_100046F04(v10, v11, v12);
}

uint64_t sub_100091EC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_100030C58();
  swift_bridgeObjectRetain();
  uint64_t v4 = Text.init<A>(_:)();
  uint64_t v6 = v5;
  char v8 = v7 & 1;
  static Font.body.getter();
  uint64_t v9 = Text.font(_:)();
  uint64_t v11 = v10;
  char v30 = v12;
  uint64_t v31 = v13;
  swift_release();
  sub_100037590(v4, v6, v8);
  swift_bridgeObjectRelease();
  unint64_t v14 = *(void *)(a1 + 48);
  if (!v14) {
    goto LABEL_6;
  }
  uint64_t v15 = HIBYTE(v14) & 0xF;
  if ((v14 & 0x2000000000000000) == 0) {
    uint64_t v15 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFLL;
  }
  if (v15)
  {
    swift_bridgeObjectRetain();
    uint64_t v29 = Text.init<A>(_:)();
    uint64_t v17 = v16;
    char v19 = v18 & 1;
    static Font.footnote.getter();
    uint64_t v20 = Text.font(_:)();
    uint64_t v22 = v21;
    char v24 = v23;
    uint64_t v26 = v25;
    swift_release();
    uint64_t v27 = v24 & 1;
    sub_100037590(v29, v17, v19);
    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_6:
    uint64_t v20 = 0;
    uint64_t v22 = 0;
    uint64_t v27 = 0;
    uint64_t v26 = 0;
  }
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = v11;
  *(unsigned char *)(a2 + 16) = v30 & 1;
  *(void *)(a2 + 24) = v31;
  *(void *)(a2 + 32) = v20;
  *(void *)(a2 + 40) = v22;
  *(void *)(a2 + 48) = v27;
  *(void *)(a2 + 56) = v26;
  sub_10006591C(v9, v11, v30 & 1);
  swift_bridgeObjectRetain();
  sub_100092580(v20, v22, v27, v26);
  sub_1000925C4(v20, v22, v27, v26);
  sub_100037590(v9, v11, v30 & 1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000920C8@<X0>(uint64_t a1@<X8>)
{
  return sub_10009182C(a1);
}

uint64_t sub_10009210C()
{
  sub_100046F04(*(void **)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 88, 7);
}

uint64_t sub_100092160()
{
  return (*(uint64_t (**)(void))(v0 + 72))();
}

uint64_t sub_100092188@<X0>(uint64_t a1@<X8>)
{
  return sub_100091BB8(*(void *)(v1 + 16), a1);
}

uint64_t sub_100092190(uint64_t a1)
{
  return a1;
}

unint64_t sub_1000921F0()
{
  unint64_t result = qword_100161118;
  if (!qword_100161118)
  {
    sub_10004D318(&qword_100161110);
    sub_10004D2D4(&qword_100161120, &qword_100161128);
    sub_10004D2D4(&qword_100161130, &qword_100161138);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100161118);
  }
  return result;
}

uint64_t sub_1000922B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = EnvironmentValues.listRowSpacing.getter();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_1000922E8()
{
  return EnvironmentValues.listRowSpacing.setter();
}

unint64_t sub_100092318()
{
  unint64_t result = qword_100161140;
  if (!qword_100161140)
  {
    sub_10004D318(&qword_100161108);
    sub_1000923B8();
    sub_10004D2D4(&qword_100161160, &qword_100161168);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100161140);
  }
  return result;
}

unint64_t sub_1000923B8()
{
  unint64_t result = qword_100161148;
  if (!qword_100161148)
  {
    sub_10004D318(&qword_100161100);
    sub_100092458();
    sub_10004D2D4(&qword_100160DA0, &qword_100160DA8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100161148);
  }
  return result;
}

unint64_t sub_100092458()
{
  unint64_t result = qword_100161150;
  if (!qword_100161150)
  {
    sub_10004D318(&qword_1001610F8);
    sub_10004D2D4(&qword_100161158, &qword_1001610F0);
    sub_10004D2D4(&qword_100160D90, &qword_100160D98);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100161150);
  }
  return result;
}

unint64_t sub_10009251C()
{
  unint64_t result = qword_100161170;
  if (!qword_100161170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100161170);
  }
  return result;
}

uint64_t sub_100092578@<X0>(uint64_t a1@<X8>)
{
  return sub_100091EC8(*(void *)(v1 + 16), a1);
}

uint64_t sub_100092580(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_10006591C(result, a2, a3 & 1);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1000925C4(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_100037590(result, a2, a3 & 1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100092608()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for SettingsSearchListItemButtonStyle()
{
  return &type metadata for SettingsSearchListItemButtonStyle;
}

uint64_t sub_100092688()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000926A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for ButtonStyleConfiguration.Label();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100046B9C(&qword_1001611A8);
  __chkstk_darwin(v6);
  char v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  ButtonStyleConfiguration.label.getter();
  uint64_t v9 = 0;
  if (ButtonStyleConfiguration.isPressed.getter())
  {
    id v10 = [self tableCellDefaultSelectionTintColor];
    uint64_t v9 = Color.init(uiColor:)();
  }
  uint64_t v11 = static Alignment.center.getter();
  uint64_t v13 = v12;
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v8, v5, v2);
  unint64_t v14 = (uint64_t *)&v8[*(int *)(v6 + 36)];
  *unint64_t v14 = v9;
  v14[1] = v11;
  v14[2] = v13;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return sub_100092854((uint64_t)v8, a1);
}

uint64_t sub_100092854(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100046B9C(&qword_1001611A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1000928C0()
{
  unint64_t result = qword_1001611B0;
  if (!qword_1001611B0)
  {
    sub_10004D318(&qword_1001611A8);
    sub_100091464();
    sub_10009293C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001611B0);
  }
  return result;
}

unint64_t sub_10009293C()
{
  unint64_t result = qword_1001611B8;
  if (!qword_1001611B8)
  {
    sub_10004D318(&qword_1001611C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001611B8);
  }
  return result;
}

uint64_t sub_100092998()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000929B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v78 = a1;
  uint64_t v84 = a4;
  char v5 = a3 & 1;
  uint64_t v81 = type metadata accessor for ScrollViewProxy();
  uint64_t v79 = *(void *)(v81 - 8);
  __chkstk_darwin(v81);
  uint64_t v76 = v6;
  uint64_t v77 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for PPTTestCase.Name();
  uint64_t v82 = *(void *)(v7 - 8);
  uint64_t v83 = v7;
  __chkstk_darwin(v7);
  unint64_t v80 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = type metadata accessor for PlainListStyle();
  uint64_t v75 = *(void *)(v74 - 8);
  __chkstk_darwin(v74);
  uint64_t v73 = (char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = type metadata accessor for ScrollDismissesKeyboardMode();
  uint64_t v69 = *(void *)(v70 - 8);
  __chkstk_darwin(v70);
  uint64_t v68 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100046B9C(&qword_1001611C8);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  unint64_t v14 = (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = sub_100046B9C(&qword_1001611D0);
  uint64_t v62 = *(void *)(v63 - 8);
  __chkstk_darwin(v63);
  uint64_t v16 = (char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_100046B9C(&qword_1001611D8);
  __chkstk_darwin(v61);
  char v18 = (char *)&v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = sub_100046B9C(&qword_1001611E0);
  uint64_t v66 = *(void *)(v67 - 8);
  __chkstk_darwin(v67);
  uint64_t v60 = (char *)&v59 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_100046B9C(&qword_1001611E8);
  __chkstk_darwin(v65);
  uint64_t v21 = (char *)&v59 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = sub_100046B9C(&qword_1001611F0);
  __chkstk_darwin(v85);
  int64_t v64 = (char *)&v59 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = sub_100046B9C(&qword_1001611F8);
  uint64_t v71 = *(void *)(v72 - 8);
  __chkstk_darwin(v72);
  unsigned int v86 = (char *)&v59 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = a2;
  char v88 = v5;
  sub_100046B9C(&qword_100161200);
  sub_100094198(&qword_100161208, &qword_100161200, (void (*)(void))sub_1000940F4);
  List<>.init(content:)();
  sub_10004D2D4(&qword_100161230, &qword_1001611C8);
  sub_10009251C();
  View.buttonStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  uint64_t v24 = static Animation.default.getter();
  uint64_t v25 = swift_retain();
  uint64_t v26 = sub_1000375A0(v25, v5);
  swift_release();
  swift_getKeyPath();
  uint64_t v89 = v26;
  sub_1000278DC(&qword_10015F570, (void (*)(uint64_t))type metadata accessor for SettingsAppSearchViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v27 = *(void *)(v26 + OBJC_IVAR____TtC11SettingsApp26SettingsAppSearchViewModel__searchResults);
  swift_bridgeObjectRetain();
  swift_release();
  uint64_t v28 = v62;
  uint64_t v29 = v63;
  (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v18, v16, v63);
  char v30 = (uint64_t *)&v18[*(int *)(v61 + 36)];
  *char v30 = v24;
  v30[1] = v27;
  (*(void (**)(char *, uint64_t))(v28 + 8))(v16, v29);
  uint64_t v31 = v68;
  static ScrollDismissesKeyboardMode.immediately.getter();
  sub_100094218();
  uint64_t v32 = v60;
  View.scrollDismissesKeyboard(_:)();
  (*(void (**)(char *, uint64_t))(v69 + 8))(v31, v70);
  sub_10003F5D0((uint64_t)v18, &qword_1001611D8);
  uint64_t v33 = static Alignment.center.getter();
  uint64_t v35 = v34;
  id v36 = [self systemGroupedBackgroundColor];
  uint64_t v37 = Color.init(uiColor:)();
  uint64_t v38 = static SafeAreaRegions.all.getter();
  char v39 = static Edge.Set.all.getter();
  uint64_t v40 = v66;
  uint64_t v41 = v67;
  (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v21, v32, v67);
  uint64_t v42 = &v21[*(int *)(v65 + 36)];
  *(void *)uint64_t v42 = v37;
  *((void *)v42 + 1) = v38;
  v42[16] = v39;
  *((void *)v42 + 3) = v33;
  *((void *)v42 + 4) = v35;
  (*(void (**)(char *, uint64_t))(v40 + 8))(v32, v41);
  sub_10009432C();
  uint64_t v43 = (uint64_t)v64;
  View.accessibilityIdentifier(_:)();
  sub_10003F5D0((uint64_t)v21, &qword_1001611E8);
  uint64_t v44 = v73;
  PlainListStyle.init()();
  unint64_t v45 = sub_100094400();
  uint64_t v46 = v74;
  View.listStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v75 + 8))(v44, v46);
  sub_10003F5D0(v43, &qword_1001611F0);
  if (qword_10015F1B8 != -1) {
    swift_once();
  }
  uint64_t v47 = v83;
  uint64_t v48 = sub_1000477B0(v83, (uint64_t)qword_10016B118);
  uint64_t v49 = v82;
  uint64_t v50 = v80;
  (*(void (**)(char *, uint64_t, uint64_t))(v82 + 16))(v80, v48, v47);
  uint64_t v51 = v79;
  uint64_t v52 = v77;
  uint64_t v53 = v81;
  (*(void (**)(char *, uint64_t, uint64_t))(v79 + 16))(v77, v78, v81);
  unint64_t v54 = (*(unsigned __int8 *)(v51 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
  uint64_t v55 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v51 + 32))(v55 + v54, v52, v53);
  uint64_t v89 = v85;
  uint64_t v90 = v46;
  unint64_t v91 = v45;
  uint64_t v92 = &protocol witness table for PlainListStyle;
  swift_getOpaqueTypeConformance2();
  uint64_t v56 = v72;
  uint64_t v57 = v86;
  View.onTest(_:handler:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v50, v47);
  return (*(uint64_t (**)(char *, uint64_t))(v71 + 8))(v57, v56);
}

uint64_t sub_100093444(uint64_t a1, char a2)
{
  char v3 = a2 & 1;
  uint64_t v4 = swift_retain();
  sub_1000375A0(v4, v3);
  swift_release();
  swift_getKeyPath();
  sub_1000278DC(&qword_10015F570, (void (*)(uint64_t))type metadata accessor for SettingsAppSearchViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_bridgeObjectRetain();
  swift_release();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a1;
  *(unsigned char *)(v5 + 24) = v3;
  swift_retain();
  sub_100046B9C(&qword_100161260);
  type metadata accessor for SearchResultSection();
  sub_100046B9C(&qword_100161218);
  sub_10004D2D4(&qword_100161268, &qword_100161260);
  sub_1000940F4();
  sub_1000278DC(&qword_100161270, (void (*)(uint64_t))type metadata accessor for SearchResultSection);
  return ForEach<>.init(_:content:)();
}

uint64_t sub_100093628()
{
  return Section<>.init(content:)();
}

uint64_t sub_1000936C4(uint64_t a1, uint64_t a2, char a3)
{
  type metadata accessor for SearchResultSection();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a2;
  *(unsigned char *)(v5 + 24) = a3 & 1;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_100046B9C(&qword_100161278);
  type metadata accessor for URL();
  sub_10004D2D4(&qword_100161280, &qword_100161278);
  sub_10008E070();
  sub_1000278DC(&qword_100161288, (void (*)(uint64_t))type metadata accessor for SearchResult);
  return ForEach<>.init(_:content:)();
}

uint64_t sub_100093814@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  int v26 = a3;
  uint64_t v25 = a2;
  uint64_t v6 = type metadata accessor for SearchResult();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = (int *)__chkstk_darwin(v6 - 8);
  uint64_t v10 = a1 + v9[11];
  uint64_t v11 = *(void **)v10;
  uint64_t v12 = *(void *)(v10 + 8);
  uint64_t v13 = (uint64_t *)(a1 + v9[8]);
  uint64_t v14 = *v13;
  uint64_t v15 = v13[1];
  uint64_t v16 = (uint64_t *)(a1 + v9[9]);
  uint64_t v17 = *v16;
  uint64_t v18 = v16[1];
  uint64_t v23 = v14;
  uint64_t v24 = v17;
  char v19 = *(unsigned char *)(v10 + 16);
  sub_1000947E4(a1, (uint64_t)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v20 = (*(unsigned __int8 *)(v7 + 80) + 25) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = v25;
  *(unsigned char *)(v21 + 24) = v26 & 1;
  sub_100094A64((uint64_t)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v21 + v20);
  *(void *)a4 = v11;
  *(void *)(a4 + 8) = v12;
  *(unsigned char *)(a4 + 16) = v19;
  *(void *)(a4 + 24) = v23;
  *(void *)(a4 + 32) = v15;
  *(void *)(a4 + 40) = v24;
  *(void *)(a4 + 48) = v18;
  *(void *)(a4 + 56) = sub_100094AC8;
  *(void *)(a4 + 64) = v21;
  sub_100047728(v11, v12, v19);
  swift_retain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1000939A4(uint64_t a1, char a2, uint64_t a3)
{
  char v4 = a2 & 1;
  uint64_t v5 = swift_retain();
  sub_1000375A0(v5, v4);
  swift_release();
  sub_100094F00(a3);

  return swift_release();
}

uint64_t sub_100093A0C(uint64_t a1, uint64_t a2)
{
  uint64_t v35 = a1;
  uint64_t v36 = a2;
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v42 = *(void *)(v2 - 8);
  uint64_t v43 = v2;
  __chkstk_darwin(v2);
  uint64_t v40 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = type metadata accessor for DispatchQoS();
  uint64_t v39 = *(void *)(v41 - 8);
  __chkstk_darwin(v41);
  uint64_t v38 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = type metadata accessor for ScrollViewProxy();
  uint64_t v5 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  uint64_t v34 = v6;
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for PPTTestCase();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8);
  uint64_t v45 = type metadata accessor for DispatchTime();
  uint64_t v37 = *(void *)(v45 - 8);
  uint64_t v11 = __chkstk_darwin(v45);
  uint64_t v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v44 = (char *)&v31 - v14;
  if (qword_10015F178 != -1) {
    swift_once();
  }
  uint64_t v15 = type metadata accessor for Logger();
  sub_1000477B0(v15, (uint64_t)qword_10016B058);
  uint64_t v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v18 = 0;
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "Running search scroll test", v18, 2u);
    swift_slowDealloc();
  }

  sub_100055498();
  uint64_t v32 = static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  + infix(_:_:)();
  uint64_t v37 = *(void *)(v37 + 8);
  ((void (*)(char *, uint64_t))v37)(v13, v45);
  char v19 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v19, v35, v8);
  uint64_t v20 = v33;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v36, v33);
  unint64_t v21 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v22 = (v10 + *(unsigned __int8 *)(v5 + 80) + v21) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v23 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v23 + v21, v19, v8);
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v23 + v22, v7, v20);
  aBlock[4] = sub_1000946FC;
  aBlock[5] = v23;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002CC68;
  aBlock[3] = &unk_100153068;
  uint64_t v24 = _Block_copy(aBlock);
  swift_release();
  uint64_t v25 = v38;
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_1000278DC((unint64_t *)&qword_1001614F0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100046B9C((uint64_t *)&unk_1001609C0);
  sub_10004D2D4((unint64_t *)&qword_100161500, (uint64_t *)&unk_1001609C0);
  int v26 = v40;
  uint64_t v27 = v43;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v28 = v44;
  uint64_t v29 = (void *)v32;
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v24);

  (*(void (**)(char *, uint64_t))(v42 + 8))(v26, v27);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v25, v41);
  return ((uint64_t (*)(char *, uint64_t))v37)(v28, v45);
}

uint64_t sub_100094030@<X0>(uint64_t (**a1)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)@<X8>)
{
  uint64_t v3 = *v1;
  char v4 = *((unsigned char *)v1 + 8);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v3;
  *(unsigned char *)(v5 + 24) = v4;
  *a1 = sub_1000940DC;
  a1[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v5;

  return swift_retain();
}

uint64_t sub_1000940A4()
{
  swift_release();

  return _swift_deallocObject(v0, 25, 7);
}

uint64_t sub_1000940DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000929B4(a1, *(void *)(v2 + 16), *(unsigned char *)(v2 + 24), a2);
}

uint64_t sub_1000940E8()
{
  return sub_100093444(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

unint64_t sub_1000940F4()
{
  unint64_t result = qword_100161210;
  if (!qword_100161210)
  {
    sub_10004D318(&qword_100161218);
    sub_100094198(&qword_100161220, &qword_100161228, (void (*)(void))sub_10008E070);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100161210);
  }
  return result;
}

uint64_t sub_100094198(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10004D318(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100094218()
{
  unint64_t result = qword_100161238;
  if (!qword_100161238)
  {
    sub_10004D318(&qword_1001611D8);
    sub_10004D318(&qword_1001611C8);
    sub_10004D2D4(&qword_100161230, &qword_1001611C8);
    sub_10009251C();
    swift_getOpaqueTypeConformance2();
    sub_10004D2D4(&qword_100161240, &qword_100161248);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100161238);
  }
  return result;
}

unint64_t sub_10009432C()
{
  unint64_t result = qword_100161250;
  if (!qword_100161250)
  {
    sub_10004D318(&qword_1001611E8);
    sub_10004D318(&qword_1001611D8);
    sub_100094218();
    swift_getOpaqueTypeConformance2();
    sub_10004D2D4(&qword_100160D20, &qword_100160D28);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100161250);
  }
  return result;
}

unint64_t sub_100094400()
{
  unint64_t result = qword_100161258;
  if (!qword_100161258)
  {
    sub_10004D318(&qword_1001611F0);
    sub_10009432C();
    sub_1000278DC(&qword_1001601A0, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100161258);
  }
  return result;
}

uint64_t sub_1000944AC()
{
  uint64_t v1 = type metadata accessor for ScrollViewProxy();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10009453C(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for ScrollViewProxy() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_100093A0C(a1, v4);
}

uint64_t sub_1000945AC()
{
  uint64_t v1 = type metadata accessor for PPTTestCase();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = type metadata accessor for ScrollViewProxy();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v4 + v5 + v8) & ~v8;
  uint64_t v10 = v9 + *(void *)(v7 + 64);
  uint64_t v11 = v3 | v8 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);

  return _swift_deallocObject(v0, v10, v11);
}

uint64_t sub_1000946FC()
{
  return PPTTestCase.performScrollTest(_:)();
}

uint64_t sub_1000947C0()
{
  return sub_100093628();
}

uint64_t sub_1000947CC()
{
  return sub_1000936C4(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32));
}

uint64_t sub_1000947D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100093814(a1, *(void *)(v2 + 16), *(unsigned __int8 *)(v2 + 24), a2);
}

uint64_t sub_1000947E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SearchResult();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100094848()
{
  uint64_t v1 = type metadata accessor for SearchResult();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 25) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  swift_release();
  uint64_t v5 = v0 + v3;
  type metadata accessor for PrimarySettingsListItemIdentifier();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
      uint64_t v6 = type metadata accessor for FLFollowUpInformation();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
      break;
    case 2u:
      uint64_t v7 = type metadata accessor for FLFollowUpInformation();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v0 + v3, v7);
      sub_100046B9C(&qword_10015F7F8);
      goto LABEL_4;
    case 3u:
    case 4u:
    case 5u:
LABEL_4:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }
  uint64_t v8 = v3 + v4;
  uint64_t v9 = v5 + *(int *)(v1 + 20);
  uint64_t v10 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100046F04(*(void **)(v5 + *(int *)(v1 + 36)), *(void *)(v5 + *(int *)(v1 + 36) + 8), *(unsigned char *)(v5 + *(int *)(v1 + 36) + 16));

  return _swift_deallocObject(v0, v8, v2 | 7);
}

uint64_t sub_100094A64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SearchResult();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100094AC8()
{
  uint64_t v1 = *(void *)(type metadata accessor for SearchResult() - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  char v3 = *(unsigned char *)(v0 + 24);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 25) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_1000939A4(v2, v3, v4);
}

uint64_t sub_100094B30()
{
  return sub_10004D2D4(&qword_100161290, &qword_100161298);
}

uint64_t sub_100094B74(void *a1, uint64_t a2)
{
  if ((a2 & 0xC000000000000001) == 0)
  {
    if (*(void *)(a2 + 16))
    {
      unint64_t v6 = sub_10009F254((uint64_t)a1);
      if (v7)
      {
        uint64_t v5 = *(void *)(*(void *)(a2 + 56) + 8 * v6);
        swift_retain();
        return v5;
      }
    }
    return 0;
  }
  id v3 = a1;
  uint64_t v4 = __CocoaDictionary.lookup(_:)();

  if (!v4) {
    return 0;
  }
  type metadata accessor for OSSignpostIntervalState();
  swift_unknownObjectRetain();
  swift_dynamicCast();
  uint64_t v5 = v9;
  swift_unknownObjectRelease();
  return v5;
}

uint64_t sub_100094C40(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a2 + 16)
    && (sub_100027924(&qword_100161540, (void (*)(uint64_t))&type metadata accessor for URL),
        uint64_t v7 = dispatch thunk of Hashable._rawHashValue(seed:)(),
        uint64_t v8 = -1 << *(unsigned char *)(a2 + 32),
        unint64_t v9 = v7 & ~v8,
        uint64_t v10 = a2 + 56,
        ((*(void *)(a2 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0))
  {
    uint64_t v17 = ~v8;
    uint64_t v18 = a2;
    uint64_t v11 = v4 + 16;
    uint64_t v12 = *(void (**)(char *, unint64_t, uint64_t))(v4 + 16);
    uint64_t v13 = *(void *)(v11 + 56);
    uint64_t v14 = (void (**)(char *, uint64_t))(v11 - 8);
    do
    {
      v12(v6, *(void *)(v18 + 48) + v13 * v9, v3);
      sub_100027924(&qword_100161548, (void (*)(uint64_t))&type metadata accessor for URL);
      char v15 = dispatch thunk of static Equatable.== infix(_:_:)();
      (*v14)(v6, v3);
      if (v15) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v17;
    }
    while (((*(void *)(v10 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  else
  {
    char v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_100094E54()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_100094F00(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (int *)type metadata accessor for SearchResult();
  uint64_t v130 = *((void *)v4 - 1);
  __chkstk_darwin(v4);
  uint64_t v119 = v5;
  unint64_t v6 = (char *)&v110 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100046B9C(&qword_100164100);
  __chkstk_darwin(v7 - 8);
  uint64_t v120 = (char *)&v110 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for PrimarySettingsListItemIdentifier();
  __chkstk_darwin(v9 - 8);
  uint64_t v113 = (uint64_t)&v110 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  uint64_t v11 = v1 + OBJC_IVAR____TtC11SettingsApp26SettingsAppSearchViewModel___observationRegistrar;
  aBlock[0] = v2;
  uint64_t v115 = sub_100027924(&qword_10015F570, (void (*)(uint64_t))type metadata accessor for SettingsAppSearchViewModel);
  uint64_t v116 = v11;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v122 = v2;
  uint64_t v12 = *(void *)(v2 + OBJC_IVAR____TtC11SettingsApp26SettingsAppSearchViewModel__searchResults);
  Swift::Bool v133 = *(char **)(v12 + 16);
  if (!v133) {
    goto LABEL_85;
  }
  uint64_t v112 = OBJC_IVAR____TtC11SettingsApp26SettingsAppSearchViewModel__searchResults;
  uint64_t v117 = v6;
  uint64_t v134 = type metadata accessor for SearchResultSection();
  uint64_t v13 = *(void *)(v134 - 8);
  unint64_t v111 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v131 = v12 + v111;
  uint64_t v132 = *(void *)(v13 + 72);
  uint64_t v114 = v12;
  swift_bridgeObjectRetain();
  unint64_t v14 = 0;
  while (1)
  {
    uint64_t v15 = *(void *)(v131 + v132 * v14 + *(int *)(v134 + 20));
    uint64_t v16 = *(void *)(v15 + 16);
    if (v16) {
      break;
    }
LABEL_4:
    if ((char *)++v14 == v133)
    {
LABEL_83:
      swift_bridgeObjectRelease();
      goto LABEL_84;
    }
  }
  uint64_t v129 = v132 * v14;
  unint64_t v135 = v14;
  uint64_t v17 = v130;
  unint64_t v18 = (*(unsigned __int8 *)(v130 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v130 + 80);
  swift_bridgeObjectRetain_n();
  uint64_t v19 = *(void *)(v17 + 72);
  uint64_t v128 = v18;
  while (1)
  {
    if ((sub_1000460F4(v15 + v18, a1) & 1) == 0 || (static URL.== infix(_:_:)() & 1) == 0) {
      goto LABEL_8;
    }
    uint64_t v20 = v4[6];
    uint64_t v21 = v15 + v18;
    unint64_t v22 = (void *)(v15 + v18 + v20);
    uint64_t v23 = (void *)(a1 + v20);
    BOOL v24 = *v22 == *(void *)(a1 + v20) && v22[1] == *(void *)(a1 + v20 + 8);
    if (!v24 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
      goto LABEL_8;
    }
    uint64_t v25 = v4[7];
    int v26 = (void *)(v21 + v25);
    uint64_t v27 = *(void *)(v21 + v25 + 8);
    uint64_t v28 = (void *)(a1 + v25);
    uint64_t v29 = *(void *)(a1 + v25 + 8);
    if (v27) {
      break;
    }
    if (!v29) {
      goto LABEL_23;
    }
LABEL_8:
    v18 += v19;
    if (!--v16)
    {
      swift_bridgeObjectRelease_n();
      unint64_t v14 = v135;
      goto LABEL_4;
    }
  }
  if (!v29) {
    goto LABEL_8;
  }
  BOOL v30 = *v26 == *v28 && v27 == v29;
  if (!v30 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
    goto LABEL_8;
  }
LABEL_23:
  uint64_t v31 = v4[8];
  if (*(void *)(v15 + v31 + v18) != *(void *)(a1 + v31)) {
    goto LABEL_8;
  }
  uint64_t v32 = v4[9];
  uint64_t v33 = v15 + v18 + v32;
  uint64_t v34 = *(void **)v33;
  uint64_t v35 = *(void **)(v33 + 8);
  uint64_t v36 = *(unsigned __int8 *)(v33 + 16);
  uint64_t v37 = a1 + v32;
  unint64_t v38 = *(void *)(a1 + v32);
  unint64_t v39 = *(void *)(a1 + v32 + 8);
  int v40 = *(unsigned __int8 *)(a1 + v32 + 16);
  switch(v36)
  {
    case 1:
      if (v40 == 1) {
        goto LABEL_31;
      }
      goto LABEL_8;
    case 2:
      if (v40 != 2) {
        goto LABEL_8;
      }
LABEL_31:
      if (v34 != (void *)v38 || v35 != (void *)v39)
      {
        uint64_t v127 = v4[8];
        uint64_t v43 = v37;
        char v44 = _stringCompareWithSmolCheck(_:_:expecting:)();
        uint64_t v37 = v43;
        uint64_t v31 = v127;
        if ((v44 & 1) == 0) {
          goto LABEL_8;
        }
      }
LABEL_39:
      uint64_t v121 = v37;
      uint64_t v127 = v31;
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      swift_getKeyPath();
      uint64_t v45 = v122;
      aBlock[0] = v122;
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      uint64_t v46 = *(void *)(v45 + v112);
      if (v135 >= *(void *)(v46 + 16))
      {
        __break(1u);
LABEL_91:
        __break(1u);
LABEL_92:
        __break(1u);
LABEL_93:
        __break(1u);
LABEL_94:
        __break(1u);
        goto LABEL_95;
      }
      uint64_t v47 = *(void *)(v46 + v111 + v129 + *(int *)(v134 + 20));
      unint64_t v6 = v117;
      uint64_t v48 = v128;
      Swift::Bool v133 = *(char **)(v47 + 16);
      if (!v133) {
        goto LABEL_85;
      }
      swift_bridgeObjectRetain();
      uint64_t v49 = 0;
      break;
    case 3:
      if (v40 == 3 && !(v39 | v38)) {
        goto LABEL_39;
      }
      goto LABEL_8;
    default:
      if (!v40)
      {
        uint64_t v41 = v34;
        uint64_t v126 = v35;
        uint64_t v123 = (void *)v38;
        uint64_t v127 = v31;
        uint64_t v121 = v37;
        uint64_t v125 = (void *)v39;
        uint64_t v118 = sub_10002E1D8(0, (unint64_t *)&qword_10015F760);
        uint64_t v124 = v41;
        sub_100047728(v41, (uint64_t)v126, 0);
        sub_100047728(v123, (uint64_t)v125, 0);
        LOBYTE(v41) = static NSObject.== infix(_:_:)();
        sub_100046F04(v123, (uint64_t)v125, 0);
        sub_100046F04(v124, (uint64_t)v126, 0);
        uint64_t v37 = v121;
        uint64_t v31 = v127;
        if (v41) {
          goto LABEL_39;
        }
      }
      goto LABEL_8;
  }
  while (2)
  {
    uint64_t v50 = v48;
    if ((sub_1000460F4(v47 + v48, a1) & 1) == 0 || (static URL.== infix(_:_:)() & 1) == 0) {
      goto LABEL_44;
    }
    uint64_t v51 = (void *)(v47 + v48 + v4[6]);
    BOOL v52 = *v51 == *v23 && v51[1] == v23[1];
    if (!v52 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
      goto LABEL_44;
    }
    uint64_t v53 = (void *)(v47 + v48 + v4[7]);
    uint64_t v54 = v53[1];
    uint64_t v55 = v28[1];
    if (!v54)
    {
      if (!v55) {
        goto LABEL_59;
      }
LABEL_44:
      ++v49;
      uint64_t v48 = v50 + v19;
      if (v133 == v49) {
        goto LABEL_83;
      }
      continue;
    }
    break;
  }
  if (!v55) {
    goto LABEL_44;
  }
  BOOL v56 = *v53 == *v28 && v54 == v55;
  if (!v56 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
    goto LABEL_44;
  }
LABEL_59:
  if (*(void *)(v47 + v4[8] + v48) != *(void *)(a1 + v127)) {
    goto LABEL_44;
  }
  uint64_t v57 = v47 + v48 + v4[9];
  uint64_t v58 = *(void **)v57;
  uint64_t v59 = *(void *)(v57 + 8);
  uint64_t v60 = *(unsigned __int8 *)(v57 + 16);
  unint64_t v61 = *(void *)v121;
  uint64_t v62 = *(void *)(v121 + 8);
  int v63 = *(unsigned __int8 *)(v121 + 16);
  switch(v60)
  {
    case 1:
      if (v63 == 1) {
        goto LABEL_67;
      }
      goto LABEL_44;
    case 2:
      if (v63 != 2) {
        goto LABEL_44;
      }
LABEL_67:
      BOOL v65 = v58 == (void *)v61 && v59 == v62;
      if (!v65 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
        goto LABEL_44;
      }
LABEL_75:
      swift_bridgeObjectRelease();
      swift_getKeyPath();
      uint64_t v66 = v122;
      aBlock[0] = v122;
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      uint64_t v131 = *(void *)(*(void *)(v66 + v112) + 16);
      if (v131)
      {
        unint64_t v67 = 0;
        uint64_t v68 = 0;
        Swift::Bool v133 = 0;
        unint64_t v69 = v111;
        while (1)
        {
          uint64_t v70 = v68;
          swift_getKeyPath();
          uint64_t v71 = v122;
          aBlock[0] = v122;
          ObservationRegistrar.access<A, B>(_:keyPath:)();
          swift_release();
          uint64_t v72 = *(void *)(v71 + v112);
          if (v67 >= *(void *)(v72 + 16)) {
            goto LABEL_91;
          }
          uint64_t v73 = *(void *)(*(void *)(v72 + *(int *)(v134 + 20) + v69) + 16);
          if (v67 < v135)
          {
            BOOL v74 = __OFADD__(v133, v73);
            v133 += v73;
            if (v74) {
              goto LABEL_93;
            }
          }
          uint64_t v68 = v70 + v73;
          if (__OFADD__(v70, v73)) {
            goto LABEL_92;
          }
          ++v67;
          v69 += v132;
          if (v131 == v67) {
            goto LABEL_87;
          }
        }
      }
      uint64_t v68 = 0;
      Swift::Bool v133 = 0;
LABEL_87:
      uint64_t v82 = &v49[(void)v133];
      if (__OFADD__(v133, v49)) {
        goto LABEL_94;
      }
      URL.absoluteString.getter();
      id v83 = objc_allocWithZone((Class)NSNumber);
      swift_bridgeObjectRetain();
      id v84 = [v83 initWithInteger:v82];
      uint64_t v134 = (uint64_t)v82;
      uint64_t v85 = v84;
      id v86 = objc_allocWithZone((Class)BMSystemSettingsSearchTermsSearchResultClickedOn);
      NSString v87 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      NSString v88 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v89 = [v86 initWithBundleIDwithAnchor:v87 searchResultTitle:v88 index:v85];

      swift_getKeyPath();
      swift_getKeyPath();
      uint64_t v90 = v122;
      static Published.subscript.getter();
      swift_release();
      swift_release();
      sub_100046B9C(&qword_100160738);
      uint64_t v91 = swift_allocObject();
      *(_OWORD *)(v91 + 16) = xmmword_10011EDB0;
      *(void *)(v91 + 32) = v89;
      aBlock[0] = v91;
      specialized Array._endMutation()();
      id v92 = objc_allocWithZone((Class)BMSystemSettingsSearchTerms);
      Swift::Bool v133 = (char *)v89;
      NSString v93 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      sub_10002E1D8(0, &qword_1001616A0);
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v95 = [v92 initWithSearchTerm:v93 searchResultsClickedOn:isa];

      id v96 = [(id)BiomeLibrary() SystemSettings];
      swift_unknownObjectRelease();
      id v97 = [v96 SearchTerms];
      swift_unknownObjectRelease();
      id v98 = [v97 source];

      [v98 sendEvent:v95];
      sub_100046B9C(&qword_1001616A8);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10011EDC0;
      *(void *)(inited + 32) = 0x757365725F78616DLL;
      *(void *)(inited + 40) = 0xEB0000000073746CLL;
      *(void *)(inited + 48) = [objc_allocWithZone((Class)NSNumber) initWithInteger:v68];
      *(void *)(inited + 56) = 0x6F69736963657270;
      *(void *)(inited + 64) = 0xEF30315F74615F6ELL;
      uint64_t v100 = v134;
      *(void *)(inited + 72) = [objc_allocWithZone((Class)NSNumber) initWithBool:v134 < 10];
      *(void *)(inited + 80) = 0x676E696B6E6172;
      *(void *)(inited + 88) = 0xE700000000000000;
      *(void *)(inited + 96) = [objc_allocWithZone((Class)NSNumber) initWithInteger:v100];
      *(void *)(inited + 104) = 0x636E6176656C6572;
      *(void *)(inited + 112) = 0xE900000000000065;
      sub_10002E1D8(0, &qword_1001616B0);
      *(NSNumber *)(inited + 120) = NSNumber.init(floatLiteral:)(0.0);
      strcpy((char *)(inited + 128), "setting_page");
      *(unsigned char *)(inited + 141) = 0;
      *(_WORD *)(inited + 142) = -5120;
      swift_getKeyPath();
      aBlock[0] = v90;
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      uint64_t v101 = *(void *)(v90 + v112);
      if (v135 >= *(void *)(v101 + 16))
      {
LABEL_95:
        __break(1u);
        JUMPOUT(0x100096028);
      }
      uint64_t v102 = v113;
      sub_1000A4650(v101 + v111 + v129, v113, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
      sub_10004D594();
      sub_1000A38D0(v102, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
      id v103 = objc_allocWithZone((Class)NSString);
      NSString v104 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v105 = [v103 initWithString:v104];

      *(void *)(inited + 144) = v105;
      unint64_t v106 = sub_10006FA90(inited);
      NSString v107 = String._bridgeToObjectiveC()();
      uint64_t v108 = swift_allocObject();
      *(void *)(v108 + 16) = v106;
      aBlock[4] = sub_1000A49D8;
      aBlock[5] = v108;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10009ABA4;
      aBlock[3] = &unk_1001534B0;
      uint64_t v109 = _Block_copy(aBlock);
      swift_release();
      AnalyticsSendEventLazy();
      _Block_release(v109);

      break;
    case 3:
      if (v63 == 3 && !(v62 | v61)) {
        goto LABEL_75;
      }
      goto LABEL_44;
    default:
      if (!*(unsigned char *)(v121 + 16))
      {
        int64_t v64 = v58;
        uint64_t v131 = v59;
        uint64_t v125 = (void *)v61;
        uint64_t v128 = v62;
        uint64_t v124 = (void *)sub_10002E1D8(0, (unint64_t *)&qword_10015F760);
        uint64_t v126 = v64;
        sub_100047728(v64, v131, 0);
        sub_100047728(v125, v128, 0);
        LOBYTE(v64) = static NSObject.== infix(_:_:)();
        sub_100046F04(v125, v128, 0);
        sub_100046F04(v126, v131, 0);
        if (v64) {
          goto LABEL_75;
        }
      }
      goto LABEL_44;
  }
LABEL_84:
  unint64_t v6 = v117;
LABEL_85:
  uint64_t v75 = type metadata accessor for TaskPriority();
  uint64_t v76 = (uint64_t)v120;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v75 - 8) + 56))(v120, 1, 1, v75);
  uint64_t v77 = swift_allocObject();
  swift_weakInit();
  sub_1000A4650(a1, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for SearchResult);
  type metadata accessor for MainActor();
  swift_retain();
  uint64_t v78 = static MainActor.shared.getter();
  unint64_t v79 = (*(unsigned __int8 *)(v130 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v130 + 80);
  unint64_t v80 = (void *)swift_allocObject();
  void v80[2] = v78;
  v80[3] = &protocol witness table for MainActor;
  v80[4] = v77;
  sub_1000A398C((uint64_t)v6, (uint64_t)v80 + v79, (uint64_t (*)(void))type metadata accessor for SearchResult);
  swift_release();
  sub_1000C9558(v76, (uint64_t)&unk_100161690, (uint64_t)v80);
  return swift_release();
}

BOOL sub_100096048(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_10009605C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_100096100@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_100027924(&qword_10015F570, (void (*)(uint64_t))type metadata accessor for SettingsAppSearchViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  *a2 = *(void *)(v3 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1000961AC()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_10009628C()
{
  uint64_t v0 = type metadata accessor for URL();
  sub_10001C174(v0, qword_1001612A0);
  sub_1000477B0(v0, (uint64_t)qword_1001612A0);
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = (id)SFRuntimeAbsoluteFilePathForPath();

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  URL.init(fileURLWithPath:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100096348()
{
  sub_100046B9C((uint64_t *)&unk_100161610);
  type metadata accessor for URL();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_10011EDD0;
  URL.init(fileURLWithPath:)();
  URL.init(fileURLWithPath:)();
  URL.init(fileURLWithPath:)();
  URL.init(fileURLWithPath:)();
  URL.init(fileURLWithPath:)();
  URL.init(fileURLWithPath:)();
  URL.init(fileURLWithPath:)();
  URL.init(fileURLWithPath:)();
  URL.init(fileURLWithPath:)();
  URL.init(fileURLWithPath:)();
  URL.init(fileURLWithPath:)();
  URL.init(fileURLWithPath:)();
  NSString v1 = sub_100100DE8(v0);
  swift_setDeallocating();
  swift_arrayDestroy();
  uint64_t result = swift_deallocClassInstance();
  qword_1001612B8 = (uint64_t)v1;
  return result;
}

uint64_t sub_1000965EC()
{
  sub_100046B9C((uint64_t *)&unk_100161610);
  type metadata accessor for URL();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_10011EDE0;
  URL.init(fileURLWithPath:)();
  URL.init(fileURLWithPath:)();
  URL.init(fileURLWithPath:)();
  URL.init(fileURLWithPath:)();
  URL.init(fileURLWithPath:)();
  URL.init(fileURLWithPath:)();
  URL.init(fileURLWithPath:)();
  URL.init(fileURLWithPath:)();
  URL.init(fileURLWithPath:)();
  URL.init(fileURLWithPath:)();
  URL.init(fileURLWithPath:)();
  URL.init(fileURLWithPath:)();
  URL.init(fileURLWithPath:)();
  URL.init(fileURLWithPath:)();
  URL.init(fileURLWithPath:)();
  URL.init(fileURLWithPath:)();
  URL.init(fileURLWithPath:)();
  URL.init(fileURLWithPath:)();
  URL.init(fileURLWithPath:)();
  URL.init(fileURLWithPath:)();
  URL.init(fileURLWithPath:)();
  URL.init(fileURLWithPath:)();
  URL.init(fileURLWithPath:)();
  URL.init(fileURLWithPath:)();
  URL.init(fileURLWithPath:)();
  URL.init(fileURLWithPath:)();
  URL.init(fileURLWithPath:)();
  URL.init(fileURLWithPath:)();
  URL.init(fileURLWithPath:)();
  URL.init(fileURLWithPath:)();
  URL.init(fileURLWithPath:)();
  URL.init(fileURLWithPath:)();
  URL.init(fileURLWithPath:)();
  URL.init(fileURLWithPath:)();
  URL.init(fileURLWithPath:)();
  URL.init(fileURLWithPath:)();
  URL.init(fileURLWithPath:)();
  NSString v1 = sub_100100DE8(v0);
  swift_setDeallocating();
  swift_arrayDestroy();
  uint64_t result = swift_deallocClassInstance();
  qword_1001612C0 = (uint64_t)v1;
  return result;
}

uint64_t sub_100096BDC()
{
  swift_getKeyPath();
  sub_100027924(&qword_10015F570, (void (*)(uint64_t))type metadata accessor for SettingsAppSearchViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(unsigned __int8 *)(v0 + 80);
}

uint64_t sub_100096C7C@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_100027924(&qword_10015F570, (void (*)(uint64_t))type metadata accessor for SettingsAppSearchViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + 80);
  return result;
}

uint64_t sub_100096D24()
{
  return swift_release();
}

uint64_t sub_100096DF4(char a1)
{
  uint64_t v2 = v1;
  if ((a1 & 1) == 0)
  {
    swift_getKeyPath();
    sub_100027924(&qword_10015F570, (void (*)(uint64_t))type metadata accessor for SettingsAppSearchViewModel);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    swift_getKeyPath();
    ObservationRegistrar.willSet<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v4 = OBJC_IVAR____TtC11SettingsApp26SettingsAppSearchViewModel__searchResults;
    swift_getKeyPath();
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    char v5 = *(unsigned char *)(v1 + 81);
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    sub_100097170(v5, v2, v9, (uint64_t)_swiftEmptyArrayStorage);
    swift_bridgeObjectRelease();
    *(void *)(v2 + v4) = _swiftEmptyArrayStorage;
    swift_bridgeObjectRelease();
    swift_getKeyPath();
    ObservationRegistrar.didSet<A, B>(_:keyPath:)();
    swift_release();
    swift_getKeyPath();
    swift_getKeyPath();
    uint64_t v8 = 0;
    uint64_t v9 = 0xE000000000000000;
    swift_retain();
    static Published.subscript.setter();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_getKeyPath();
  sub_100027924(&qword_10015F570, (void (*)(uint64_t))type metadata accessor for SettingsAppSearchViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v6 = *(void *)(v2 + OBJC_IVAR____TtC11SettingsApp26SettingsAppSearchViewModel__searchResults);
  swift_bridgeObjectRetain();
  sub_100097170(a1 & 1, v8, v9, v6);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000970FC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_100097170(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!*(void *)(a4 + 16))
  {
    if ((a1 & 1) == 0) {
      goto LABEL_7;
    }
LABEL_6:
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  uint64_t v6 = type metadata accessor for SearchResultSection();
  if ((a1 & 1) != 0
    && !*(void *)(*(void *)(a4
                              + ((*(unsigned __int8 *)(*(void *)(v6 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v6 - 8) + 80))
                              + *(int *)(v6 + 20))
                  + 16))
  {
    goto LABEL_6;
  }
LABEL_7:
  uint64_t KeyPath = swift_getKeyPath();
  __chkstk_darwin(KeyPath);
  sub_100027924(&qword_10015F570, (void (*)(uint64_t))type metadata accessor for SettingsAppSearchViewModel);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  return swift_release();
}

uint64_t sub_100097380()
{
  swift_getKeyPath();
  sub_100027924(&qword_10015F570, (void (*)(uint64_t))type metadata accessor for SettingsAppSearchViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(unsigned __int8 *)(v0 + 81);
}

uint64_t sub_100097420()
{
  return swift_release();
}

uint64_t sub_1000974F0(uint64_t a1, char a2)
{
  uint64_t result = sub_100096DF4(a2);
  *(unsigned char *)(a1 + 81) = a2;
  return result;
}

uint64_t sub_100097530()
{
  return static Published.subscript.setter();
}

uint64_t sub_1000975B4@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_100027924(&qword_10015F570, (void (*)(uint64_t))type metadata accessor for SettingsAppSearchViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  *a2 = *(void *)(v3 + OBJC_IVAR____TtC11SettingsApp26SettingsAppSearchViewModel__searchResults);
  return swift_bridgeObjectRetain();
}

uint64_t sub_100097668()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_100097748(uint64_t a1, uint64_t a2)
{
  swift_getKeyPath();
  sub_100027924(&qword_10015F570, (void (*)(uint64_t))type metadata accessor for SettingsAppSearchViewModel);
  swift_bridgeObjectRetain();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  char v4 = *(unsigned char *)(a1 + 81);
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  sub_100097170(v4, a1, v6, a2);
  swift_bridgeObjectRelease();
  *(void *)(a1 + OBJC_IVAR____TtC11SettingsApp26SettingsAppSearchViewModel__searchResults) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t sub_100097880()
{
  uint64_t v1 = sub_100046B9C(&qword_100164100);
  uint64_t result = __chkstk_darwin(v1 - 8);
  char v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = OBJC_IVAR____TtC11SettingsApp26SettingsAppSearchViewModel____lazy_storage___oneTimeConfiguration;
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC11SettingsApp26SettingsAppSearchViewModel____lazy_storage___oneTimeConfiguration) == 1)
  {
    uint64_t v6 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v4, 1, 1, v6);
    uint64_t v7 = swift_allocObject();
    swift_weakInit();
    uint64_t v8 = (void *)swift_allocObject();
    _OWORD v8[2] = 0;
    v8[3] = 0;
    _OWORD v8[4] = v7;
    sub_10000D9E4((uint64_t)v4, (uint64_t)&unk_1001615E8, (uint64_t)v8);
    swift_release();
    uint64_t result = sub_10003F5D0((uint64_t)v4, &qword_100164100);
    *(unsigned char *)(v0 + v5) = 0;
  }
  return result;
}

uint64_t sub_1000979BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 64) = a4;
  return _swift_task_switch(sub_1000979DC, 0, 0);
}

uint64_t sub_1000979DC()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  v0[9] = Strong;
  if (Strong)
  {
    uint64_t v2 = (void *)swift_task_alloc();
    v0[10] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_100097B14;
    return sub_100097CD0();
  }
  else
  {
    swift_beginAccess();
    uint64_t v4 = swift_weakLoadStrong();
    if (v4)
    {
      uint64_t v5 = *(id *)(v4 + 104);
      swift_release();
      dispatch_resume(v5);
    }
    uint64_t v6 = (uint64_t (*)(void))v0[1];
    return v6();
  }
}

uint64_t sub_100097B14()
{
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_100097C2C, 0, 0);
}

uint64_t sub_100097C2C()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = *(id *)(Strong + 104);
    swift_release();
    dispatch_resume(v2);
  }
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_100097CD0()
{
  v1[42] = v0;
  sub_100046B9C(&qword_100164100);
  v1[43] = swift_task_alloc();
  uint64_t v2 = type metadata accessor for URL();
  v1[44] = v2;
  v1[45] = *(void *)(v2 - 8);
  v1[46] = swift_task_alloc();
  return _swift_task_switch(sub_100097DC0, 0, 0);
}

uint64_t sub_100097DC0()
{
  uint64_t v1 = self;
  v0[47] = v1;
  id v2 = [v1 sharedInstance];
  v0[48] = v2;
  if (v2)
  {
    uint64_t v3 = v2;
    v0[10] = v0;
    v0[15] = v0 + 56;
    v0[11] = sub_100097EEC;
    uint64_t v4 = swift_continuation_init();
    v0[26] = _NSConcreteStackBlock;
    v0[27] = 0x40000000;
    v0[28] = sub_10009ADAC;
    v0[29] = &unk_100153300;
    v0[30] = v4;
    [v3 hasfirstPartyIndexItems:v0 + 26];
    id v2 = v0 + 10;
  }
  else
  {
    __break(1u);
  }
  return _swift_continuation_await(v2);
}

uint64_t sub_100097EEC()
{
  return _swift_task_switch(sub_100097FCC, 0, 0);
}

uint64_t sub_100097FCC()
{
  uint64_t v1 = *(void **)(v0 + 376);
  int v52 = *(unsigned __int8 *)(v0 + 448);

  id v2 = [v1 sharedInstance];
  if (!v2)
  {
    __break(1u);
    goto LABEL_39;
  }
  uint64_t v3 = v2;
  uint64_t v4 = v0 + 448;
  unsigned int v5 = [v2 needsIndex];

  type metadata accessor for LinkMetadataIndexer();
  static LinkMetadataIndexer.shared.getter();
  int v6 = dispatch thunk of LinkMetadataIndexer.needsIndexing.getter();
  swift_release();
  id v7 = sub_1000A39F4();
  if (!v7) {
    goto LABEL_21;
  }
  uint64_t v9 = v7;
  uint64_t v10 = v8;
  int v50 = v6;
  unsigned int v51 = v5;
  uint64_t v11 = self;
  id v12 = [v11 standardUserDefaults];
  NSString v13 = String._bridgeToObjectiveC()();
  id v14 = [v12 stringForKey:v13];

  if (v14)
  {
    uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v17 = v16;
  }
  else
  {
    uint64_t v15 = 0;
    uint64_t v17 = 0;
  }
  id v18 = [v9 UUIDString];
  uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v21 = v20;

  if (!v17)
  {
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  if (v15 == v19 && v17 == v21)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  char v22 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v22 & 1) == 0)
  {
LABEL_20:

    uint64_t v4 = v0 + 448;
    int v6 = v50;
    unsigned int v5 = v51;
    goto LABEL_21;
  }
LABEL_12:
  id v23 = [v11 standardUserDefaults];
  NSString v24 = String._bridgeToObjectiveC()();
  id v25 = [v23 integerForKey:v24];

  id v26 = v10;
  id v27 = [v26 integerValue];

  BOOL v28 = v25 == v27;
  uint64_t v4 = v0 + 448;
  int v6 = v50;
  unsigned int v5 = v51;
  if (v28)
  {
    if (qword_10015F150 != -1) {
      swift_once();
    }
    uint64_t v29 = type metadata accessor for Logger();
    sub_1000477B0(v29, (uint64_t)qword_10016AFE0);
    BOOL v30 = Logger.logObject.getter();
    os_log_type_t v31 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v32 = 0;
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "LS seed did not change.", v32, 2u);
      swift_slowDealloc();
    }

    int v33 = 0;
    int v34 = 0;
    int v35 = v52 ^ 1;
    if ((v51 | v52 ^ 1)) {
      goto LABEL_26;
    }
    goto LABEL_28;
  }
LABEL_21:
  if (qword_10015F150 != -1) {
    swift_once();
  }
  uint64_t v36 = type metadata accessor for Logger();
  sub_1000477B0(v36, (uint64_t)qword_10016AFE0);
  uint64_t v37 = Logger.logObject.getter();
  os_log_type_t v38 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v37, v38))
  {
    unint64_t v39 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v39 = 0;
    _os_log_impl((void *)&_mh_execute_header, v37, v38, "LS seed did change.", v39, 2u);
    swift_slowDealloc();
  }

  int v35 = v52 ^ 1;
  int v33 = 1;
  if ((v5 | v52 ^ 1) == 1)
  {
LABEL_26:
    static LinkMetadataIndexer.shared.getter();
    dispatch thunk of LinkMetadataIndexer.needsIndexing.setter();
    swift_release();
    int v34 = v35;
    goto LABEL_28;
  }
  int v34 = 0;
LABEL_28:
  id v40 = [self standardUserDefaults];
  NSString v41 = String._bridgeToObjectiveC()();
  *(unsigned char *)(v4 + 1) = [v40 BOOLForKey:v41];

  if ((v34 | v6 | v5))
  {
    id v2 = [*(id *)(v0 + 376) sharedInstance];
    *(void *)(v0 + 392) = v2;
    if (v2)
    {
      uint64_t v42 = v2;
      *(void *)(v0 + 144) = v0;
      *(void *)(v0 + 152) = sub_100098688;
      uint64_t v43 = swift_continuation_init();
      *(void *)(v0 + 288) = _NSConcreteStackBlock;
      *(void *)(v0 + 296) = 0x40000000;
      *(void *)(v0 + 304) = sub_10009ADD0;
      *(void *)(v0 + 312) = &unk_100153318;
      *(void *)(v0 + 320) = v43;
      [v42 deleteIndexWithCompletionBlock:v0 + 288];
      id v2 = (id)(v0 + 144);
      return _swift_continuation_await(v2);
    }
LABEL_39:
    __break(1u);
    return _swift_continuation_await(v2);
  }
  if (v33)
  {
    uint64_t v44 = *(void *)(v0 + 336);
    uint64_t v45 = *(void *)(v0 + 344);
    static TaskPriority.background.getter();
    uint64_t v46 = type metadata accessor for TaskPriority();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v45, 0, 1, v46);
    uint64_t v47 = (void *)swift_allocObject();
    v47[2] = 0;
    uint64_t v47[3] = 0;
    v47[4] = v44;
    swift_retain();
    sub_10009AA1C(v45, (uint64_t)&unk_100161608, (uint64_t)v47);
    swift_release();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v48 = *(uint64_t (**)(void))(v0 + 8);
  return v48();
}

uint64_t sub_100098688()
{
  return _swift_task_switch(sub_100098768, 0, 0);
}

uint64_t sub_100098768()
{
  char v1 = *(unsigned char *)(v0 + 449);
  uint64_t v2 = *(void *)(v0 + 336);

  swift_getKeyPath();
  *(void *)(v0 + 328) = v2;
  sub_100027924(&qword_10015F570, (void (*)(uint64_t))type metadata accessor for SettingsAppSearchViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  unint64_t v3 = *(void *)(v2 + 16);
  if (v1)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v4 = qword_10015F060;
    swift_bridgeObjectRetain();
    if (v4 != -1) {
      swift_once();
    }
    uint64_t v6 = *(void *)(v0 + 360);
    uint64_t v5 = *(void *)(v0 + 368);
    uint64_t v7 = *(void *)(v0 + 352);
    uint64_t v8 = sub_1000477B0(v7, (uint64_t)qword_1001612A0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v5, v8, v7);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v3 = sub_10005997C(0, *(void *)(v3 + 16) + 1, 1, v3, (uint64_t *)&unk_100161610, (uint64_t (*)(void))&type metadata accessor for URL, (uint64_t (*)(void))&type metadata accessor for URL);
    }
    unint64_t v10 = *(void *)(v3 + 16);
    unint64_t v9 = *(void *)(v3 + 24);
    if (v10 >= v9 >> 1) {
      unint64_t v3 = sub_10005997C(v9 > 1, v10 + 1, 1, v3, (uint64_t *)&unk_100161610, (uint64_t (*)(void))&type metadata accessor for URL, (uint64_t (*)(void))&type metadata accessor for URL);
    }
    uint64_t v12 = *(void *)(v0 + 360);
    uint64_t v11 = *(void *)(v0 + 368);
    uint64_t v13 = *(void *)(v0 + 352);
    *(void *)(v3 + 16) = v10 + 1;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v12 + 32))(v3+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(void *)(v12 + 72) * v10, v11, v13);
  }
  *(void *)(v0 + 400) = v3;
  id v14 = [*(id *)(v0 + 376) sharedInstance];
  *(void *)(v0 + 408) = v14;
  if (v14)
  {
    uint64_t v15 = v14;
    swift_bridgeObjectRetain();
    v16.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
    *(NSArray *)(v0 + 416) = v16;
    swift_bridgeObjectRelease();
    if (qword_10015F068 != -1) {
      swift_once();
    }
    sub_100027924(&qword_100161540, (void (*)(uint64_t))&type metadata accessor for URL);
    v17.super.Class isa = Set._bridgeToObjectiveC()().super.isa;
    *(NSSet *)(v0 + 424) = v17;
    if (qword_10015F070 != -1) {
      swift_once();
    }
    Class isa = Set._bridgeToObjectiveC()().super.isa;
    *(void *)(v0 + 432) = isa;
    *(void *)(v0 + 16) = v0;
    *(void *)(v0 + 24) = sub_100098B84;
    uint64_t v19 = swift_continuation_init();
    *(void *)(v0 + 248) = _NSConcreteStackBlock;
    *(void *)(v0 + 256) = 0x40000000;
    *(void *)(v0 + 264) = sub_10009ADD0;
    *(void *)(v0 + 272) = &unk_100153330;
    *(void *)(v0 + 280) = v19;
    [v15 indexManifestBundlesAtURLs:v16.super.isa skippingBundles:v17.super.isa skippingManifests:isa withCompletion:v0 + 248];
    id v14 = (id)(v0 + 16);
  }
  else
  {
    __break(1u);
  }
  return _swift_continuation_await(v14);
}

uint64_t sub_100098B84()
{
  return _swift_task_switch(sub_100098C64, 0, 0);
}

uint64_t sub_100098C64()
{
  uint64_t v2 = *(void **)(v0 + 424);
  uint64_t v1 = *(void **)(v0 + 432);
  unint64_t v3 = *(void **)(v0 + 416);
  uint64_t v4 = *(void **)(v0 + 376);

  uint64_t v5 = (uint64_t (*)())[v4 sharedInstance];
  if (v5)
  {
    uint64_t v8 = v5;
    swift_bridgeObjectRelease();
    [v8 setHasIndexed];

    unint64_t v9 = (void *)swift_task_alloc();
    *(void *)(v0 + 440) = v9;
    *unint64_t v9 = v0;
    v9[1] = sub_100098D6C;
    uint64_t v5 = sub_1000A3CF8;
    uint64_t v6 = 0;
    uint64_t v7 = 0;
  }
  else
  {
    __break(1u);
  }
  return _swift_task_switch(v5, v6, v7);
}

uint64_t sub_100098D6C()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_100098E68, 0, 0);
}

uint64_t sub_100098E68()
{
  sub_1000A3E2C();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100098ED8()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  sub_100099098(v4, v5);
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  sub_100027924(&qword_10015F570, (void (*)(uint64_t))type metadata accessor for SettingsAppSearchViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  char v1 = *(unsigned char *)(v0 + 81);
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_getKeyPath();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC11SettingsApp26SettingsAppSearchViewModel__searchResults);
  swift_bridgeObjectRetain();
  sub_100097170(v1, v0, v5, v2);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_100099098(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for OSSignpostError();
  uint64_t v75 = *(const char **)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = &v70[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = type metadata accessor for OSSignpostID();
  uint64_t v76 = *(void *)(v9 - 8);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = &v70[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  id v14 = &v70[-v13];
  id v83 = &type metadata for DeviceOSExpertFeatureFlags;
  unint64_t v15 = sub_1000676C8();
  unint64_t v84 = v15;
  LOBYTE(aBlock) = 1;
  char v16 = isFeatureEnabled(_:)();
  sub_100042A1C((uint64_t)&aBlock);
  if (v16) {
    NSSet v17 = "SettingsAppSearchViewModel.SemanticSearch";
  }
  else {
    NSSet v17 = "SettingsAppSearchViewModel.TopHitSearch";
  }
  uint64_t v18 = 39;
  if (v16) {
    uint64_t v18 = 41;
  }
  uint64_t v78 = v18;
  unint64_t v79 = v17;
  uint64_t v19 = v3[14];
  if (v19)
  {
    uint64_t v77 = a1;
    id v20 = v19;
    if (([v20 isCancelled] & 1) != 0
      || (swift_beginAccess(), uint64_t v21 = sub_10009F6B4((unint64_t)v20), swift_endAccess(), !v21))
    {
    }
    else
    {
      unint64_t v72 = v15;
      uint64_t v73 = v9;
      uint64_t v74 = v21;
      if (qword_10015F180 != -1) {
        swift_once();
      }
      uint64_t v22 = type metadata accessor for OSSignposter();
      sub_1000477B0(v22, (uint64_t)qword_10016B070);
      id v23 = OSSignposter.logHandle.getter();
      OSSignpostIntervalState.signpostID.getter();
      int v71 = static os_signpost_type_t.end.getter();
      if (OS_os_log.signpostsEnabled.getter())
      {
        swift_retain();
        checkForErrorAndConsumeState(state:)();
        swift_release();
        NSString v24 = v75;
        if ((*((unsigned int (**)(unsigned char *, uint64_t))v75 + 11))(v8, v6) == enum case for OSSignpostError.doubleEnd(_:))
        {
          id v25 = "[Error] Interval already ended";
        }
        else
        {
          (*((void (**)(unsigned char *, uint64_t))v24 + 1))(v8, v6);
          id v25 = "Settings search cancelled";
        }
        uint64_t v75 = v25;
        uint64_t v65 = v73;
        uint64_t v66 = v76;
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v76 + 16))(v12, v14, v73);
        unint64_t v67 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v67 = 0;
        os_signpost_id_t v68 = OSSignpostID.rawValue.getter();
        _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v23, (os_signpost_type_t)v71, v68, v79, v75, v67, 2u);
        swift_slowDealloc();

        unint64_t v69 = *(void (**)(unsigned char *, uint64_t))(v66 + 8);
        v69(v14, v65);
        swift_release();
        v69(v12, v65);
        unint64_t v15 = v72;
      }
      else
      {

        (*(void (**)(unsigned char *, uint64_t))(v76 + 8))(v14, v73);
        swift_release();
        unint64_t v15 = v72;
      }
    }
    id v26 = v3[14];
    a1 = v77;
    if (v26) {
      [v26 cancel];
    }
  }
  uint64_t v27 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v27 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v27)
  {
    id v83 = &type metadata for DeviceOSExpertFeatureFlags;
    unint64_t v84 = v15;
    LOBYTE(aBlock) = 1;
    char v28 = isFeatureEnabled(_:)();
    sub_100042A1C((uint64_t)&aBlock);
    if (v28)
    {
      id v29 = (id)dispatch thunk of LinkMetadataIndexer.searchQueryFor(_:)();
    }
    else
    {
      id v32 = objc_allocWithZone((Class)CSTopHitSearchQuery);
      swift_bridgeObjectRetain();
      NSString v33 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      NSString v34 = String._bridgeToObjectiveC()();
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      id v36 = [v32 initWithSearchString:v33 keyboardLanguage:v34 attributes:isa hitCount:500];

      id v37 = v36;
      Class v38 = Array._bridgeToObjectiveC()().super.isa;
      [v37 setBundleIDs:v38];

      sub_100046B9C(&qword_1001614D8);
      uint64_t v39 = swift_allocObject();
      *(_OWORD *)(v39 + 16) = xmmword_10011C370;
      *(void *)(v39 + 32) = NSFileProtectionComplete;
      *(void *)(v39 + 40) = NSFileProtectionCompleteUntilFirstUserAuthentication;
      type metadata accessor for FileProtectionType(0);
      id v40 = v37;
      NSString v41 = NSFileProtectionComplete;
      uint64_t v42 = NSFileProtectionCompleteUntilFirstUserAuthentication;
      Class v43 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v40 setProtectionClasses:v43];

      uint64_t v44 = qword_10015F150;
      id v29 = v40;
      if (v44 != -1) {
        swift_once();
      }
      uint64_t v45 = type metadata accessor for Logger();
      sub_1000477B0(v45, (uint64_t)qword_10016AFE0);
      uint64_t v46 = Logger.logObject.getter();
      os_log_type_t v47 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v46, v47))
      {
        uint64_t v48 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v48 = 0;
        _os_log_impl((void *)&_mh_execute_header, v46, v47, "SettingsAppSearchViewModel: New query", v48, 2u);
        swift_slowDealloc();
      }
      else
      {
      }
    }
    uint64_t v49 = v3[14];
    v3[14] = v29;
    id v50 = v29;

    uint64_t v51 = swift_allocObject();
    *(void *)(v51 + 16) = _swiftEmptyArrayStorage;
    unint64_t v84 = (unint64_t)sub_10009EDA0;
    uint64_t v85 = v51;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v81 = 1107296256;
    uint64_t v82 = sub_10009B4EC;
    id v83 = (ValueMetadata *)&unk_1001531C0;
    int v52 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    [v50 setFoundItemsHandler:v52];
    _Block_release(v52);
    sub_1000403E0(v3 + 5, (uint64_t)v3[8]);
    uint64_t v53 = sub_1000370AC();
    uint64_t v55 = v54;
    uint64_t v57 = v56;
    uint64_t v58 = swift_allocObject();
    *(void *)(v58 + 16) = &_swiftEmptySetSingleton;
    uint64_t v59 = swift_allocObject();
    swift_weakInit();
    uint64_t v60 = swift_allocObject();
    *(void *)(v60 + 16) = v59;
    *(void *)(v60 + 24) = v50;
    uint64_t v62 = v78;
    unint64_t v61 = v79;
    *(void *)(v60 + 32) = v79;
    *(void *)(v60 + 40) = v62;
    *(unsigned char *)(v60 + 48) = 2;
    *(void *)(v60 + 56) = v51;
    *(void *)(v60 + 64) = v53;
    *(void *)(v60 + 72) = v55;
    *(void *)(v60 + 80) = v57;
    *(void *)(v60 + 88) = v58;
    unint64_t v84 = (unint64_t)sub_10009EE48;
    uint64_t v85 = v60;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v81 = 1107296256;
    uint64_t v82 = sub_1000077F4;
    id v83 = (ValueMetadata *)&unk_100153260;
    int v63 = _Block_copy(&aBlock);
    id v64 = v50;
    swift_retain();
    swift_retain();
    swift_release();
    [v64 setCompletionHandler:v63];
    _Block_release(v63);
    swift_release();
    swift_release();
    sub_10009ADD8(v61, v62, 2, (uint64_t)v3, v64);
  }
  else
  {
    swift_getKeyPath();
    long long aBlock = v3;
    sub_100027924(&qword_10015F570, (void (*)(uint64_t))type metadata accessor for SettingsAppSearchViewModel);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v30 = OBJC_IVAR____TtC11SettingsApp26SettingsAppSearchViewModel__searchResults;
    if ((*(void **)((char *)v3 + OBJC_IVAR____TtC11SettingsApp26SettingsAppSearchViewModel__searchResults))[2])
    {
      swift_getKeyPath();
      long long aBlock = v3;
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      long long aBlock = v3;
      swift_getKeyPath();
      ObservationRegistrar.willSet<A, B>(_:keyPath:)();
      swift_release();
      swift_getKeyPath();
      long long aBlock = v3;
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      char v31 = *((unsigned char *)v3 + 81);
      swift_getKeyPath();
      swift_getKeyPath();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      sub_100097170(v31, (uint64_t)aBlock, v81, (uint64_t)_swiftEmptyArrayStorage);
      swift_bridgeObjectRelease();
      *(void **)((char *)v3 + v30) = _swiftEmptyArrayStorage;
      swift_bridgeObjectRelease();
      long long aBlock = v3;
      swift_getKeyPath();
      ObservationRegistrar.didSet<A, B>(_:keyPath:)();
      swift_release();
    }
  }
}

uint64_t sub_100099B30(uint64_t a1)
{
  uint64_t v2 = sub_100046B9C(&qword_100164100);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10015F150 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  sub_1000477B0(v5, (uint64_t)qword_10016AFE0);
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "LSObserverDelegate callback", v8, 2u);
    swift_slowDealloc();
  }

  static TaskPriority.background.getter();
  uint64_t v9 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v4, 0, 1, v9);
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = 0;
  v10[3] = 0;
  v10[4] = a1;
  swift_retain();
  sub_1000C9558((uint64_t)v4, (uint64_t)&unk_100161628, (uint64_t)v10);
  return swift_release();
}

uint64_t sub_100099CF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  sub_100046B9C(&qword_100164100);
  *(void *)(v4 + 24) = swift_task_alloc();
  return _swift_task_switch(sub_100099D88, 0, 0);
}

uint64_t sub_100099D88()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[3];
  static TaskPriority.background.getter();
  uint64_t v3 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 0, 1, v3);
  uint64_t v4 = (void *)swift_allocObject();
  v4[2] = 0;
  v4[3] = 0;
  void v4[4] = v1;
  swift_retain();
  sub_10009AA1C(v2, (uint64_t)&unk_100161630, (uint64_t)v4);
  swift_release();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_100099E88()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_100097880();
    return swift_release();
  }
  return result;
}

uint64_t sub_100099EE0()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_100098ED8();
    return swift_release();
  }
  return result;
}

uint64_t sub_100099F38()
{
  [v0[16] stopObserving];
  uint64_t v1 = (id *)((char *)v0 + OBJC_IVAR____TtC11SettingsApp26SettingsAppSearchViewModel_cancellables);
  swift_beginAccess();
  uint64_t v2 = *v1;
  id v23 = v1;
  NSString v24 = v0;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for AnyCancellable();
    sub_100027924((unint64_t *)&qword_100161650, (void (*)(uint64_t))&type metadata accessor for AnyCancellable);
    uint64_t result = Set.Iterator.init(_cocoa:)();
    uint64_t v2 = v26;
    uint64_t v4 = v27;
    uint64_t v5 = v28;
    uint64_t v6 = v29;
    unint64_t v7 = v30;
  }
  else
  {
    uint64_t v8 = -1 << *(unsigned char *)(v2 + 32);
    uint64_t v4 = v2 + 56;
    uint64_t v5 = ~v8;
    uint64_t v9 = -v8;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v7 = v10 & *(void *)(v2 + 56);
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v6 = 0;
  }
  int64_t v11 = (unint64_t)(v5 + 64) >> 6;
  if (v2 < 0) {
    goto LABEL_10;
  }
  while (1)
  {
    if (v7)
    {
      uint64_t v12 = (v7 - 1) & v7;
      unint64_t v13 = __clz(__rbit64(v7)) | (v6 << 6);
      uint64_t v14 = v6;
      goto LABEL_27;
    }
    int64_t v15 = v6 + 1;
    if (__OFADD__(v6, 1)) {
      break;
    }
    if (v15 >= v11) {
      goto LABEL_30;
    }
    unint64_t v16 = *(void *)(v4 + 8 * v15);
    uint64_t v14 = v6 + 1;
    if (!v16)
    {
      uint64_t v14 = v6 + 2;
      if (v6 + 2 >= v11) {
        goto LABEL_30;
      }
      unint64_t v16 = *(void *)(v4 + 8 * v14);
      if (!v16)
      {
        uint64_t v14 = v6 + 3;
        if (v6 + 3 >= v11) {
          goto LABEL_30;
        }
        unint64_t v16 = *(void *)(v4 + 8 * v14);
        if (!v16)
        {
          uint64_t v14 = v6 + 4;
          if (v6 + 4 >= v11) {
            goto LABEL_30;
          }
          unint64_t v16 = *(void *)(v4 + 8 * v14);
          if (!v16)
          {
            uint64_t v17 = v6 + 5;
            while (v11 != v17)
            {
              unint64_t v16 = *(void *)(v4 + 8 * v17++);
              if (v16)
              {
                uint64_t v14 = v17 - 1;
                goto LABEL_26;
              }
            }
LABEL_30:
            sub_1000653C0();
            void *v23 = &_swiftEmptySetSingleton;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_release();
            sub_100042A1C((uint64_t)(v24 + 5));
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease();
            uint64_t v19 = (char *)v24 + OBJC_IVAR____TtC11SettingsApp26SettingsAppSearchViewModel__searchQuery;
            uint64_t v20 = sub_100046B9C(&qword_10015F4E8);
            (*(void (**)(char *, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v21 = (char *)v24 + OBJC_IVAR____TtC11SettingsApp26SettingsAppSearchViewModel___observationRegistrar;
            uint64_t v22 = type metadata accessor for ObservationRegistrar();
            (*(void (**)(char *, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
            return (uint64_t)v24;
          }
        }
      }
    }
LABEL_26:
    uint64_t v12 = (v16 - 1) & v16;
    unint64_t v13 = __clz(__rbit64(v16)) + (v14 << 6);
LABEL_27:
    uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v13);
    swift_retain();
    if (!v18) {
      goto LABEL_30;
    }
    while (1)
    {
      AnyCancellable.cancel()();
      uint64_t result = swift_release();
      uint64_t v6 = v14;
      unint64_t v7 = v12;
      if ((v2 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_10:
      if (__CocoaSet.Iterator.next()())
      {
        type metadata accessor for AnyCancellable();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        swift_unknownObjectRelease();
        uint64_t v14 = v6;
        uint64_t v12 = v7;
        if (v25) {
          continue;
        }
      }
      goto LABEL_30;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_10009A308()
{
  sub_100099F38();

  return swift_deallocClassInstance();
}

uint64_t sub_10009A360()
{
  return type metadata accessor for SettingsAppSearchViewModel();
}

void sub_10009A368()
{
  if (!qword_100161330)
  {
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100161330);
    }
  }
}

uint64_t sub_10009A3C0()
{
  return _swift_task_switch(sub_10009A3DC, 0, 0);
}

uint64_t sub_10009A3DC()
{
  if (qword_10015F150 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  v0[2] = sub_1000477B0(v1, (uint64_t)qword_10016AFE0);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "reindexInstalledApps (OpenInstalledAppsSettingsDeepLinks).", v4, 2u);
    swift_slowDealloc();
  }

  v0[3] = type metadata accessor for LinkMetadataIndexer();
  v0[4] = static LinkMetadataIndexer.shared.getter();
  unint64_t v7 = (uint64_t (*)(_UNKNOWN **))((char *)&async function pointer to dispatch thunk of LinkMetadataIndexer.deleteDeeplinks(withDomainIdentifiers:)
                                           + async function pointer to dispatch thunk of LinkMetadataIndexer.deleteDeeplinks(withDomainIdentifiers:));
  uint64_t v5 = (void *)swift_task_alloc();
  v0[5] = v5;
  void *v5 = v0;
  v5[1] = sub_10009A564;
  return v7(&off_100151320);
}

uint64_t sub_10009A564()
{
  *(void *)(*(void *)v1 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_10009A954;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_10009A680;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10009A680()
{
  *(void *)(v0 + 56) = static LinkMetadataIndexer.shared.getter();
  os_log_type_t v3 = (uint64_t (*)(unint64_t, unint64_t))((char *)&async function pointer to dispatch thunk of LinkMetadataIndexer.donateDeeplinks(filteredToAppIntent:)
                                                                  + async function pointer to dispatch thunk of LinkMetadataIndexer.donateDeeplinks(filteredToAppIntent:));
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10009A748;
  return v3(0xD000000000000022, 0x8000000100125660);
}

uint64_t sub_10009A748()
{
  *(void *)(*(void *)v1 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_10009A9B8;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v2 = sub_10009A87C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10009A87C()
{
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v1, v2))
  {
    os_log_type_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "reindexInstalledApps reindexing done.", v3, 2u);
    swift_slowDealloc();
  }

  sub_1000A3E2C();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_10009A954()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10009A9B8()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10009AA1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for TaskPriority();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(void *)(a3 + 16)) {
      return swift_task_create();
    }
    goto LABEL_3;
  }
  sub_10003F5D0(a1, &qword_100164100);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

Class sub_10009ABA4(uint64_t a1)
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  uint64_t v3 = v1(v2);
  swift_release();
  if (v3)
  {
    sub_10002E1D8(0, (unint64_t *)&qword_10015F760);
    v4.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v4.super.Class isa = 0;
  }

  return v4.super.isa;
}

uint64_t sub_10009AC40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[5] = a4;
  v5[6] = a5;
  type metadata accessor for MainActor();
  v5[7] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10009ACD8, v7, v6);
}

uint64_t sub_10009ACD8()
{
  swift_release();
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = *(void *)(v0 + 48);
    uint64_t v3 = *(void (**)(uint64_t))(Strong + 24);
    uint64_t v4 = v2 + *(int *)(type metadata accessor for SearchResult() + 20);
    swift_retain();
    v3(v4);
    swift_release();
    swift_release();
  }
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_10009ADAC(uint64_t a1, char a2)
{
  **(unsigned char **)(*(void *)(*(void *)(a1 + 32) + 64) + 40) = a2;
  return _swift_continuation_resume();
}

uint64_t sub_10009ADD0(uint64_t a1)
{
  return _swift_continuation_resume(*(void *)(a1 + 32));
}

uint64_t sub_10009ADD8(const char *a1, uint64_t a2, char a3, uint64_t a4, void *a5)
{
  uint64_t v26 = (char *)a1;
  uint64_t v8 = type metadata accessor for OSSignpostID();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)v24 - v13;
  if (qword_10015F180 != -1) {
    swift_once();
  }
  uint64_t v15 = type metadata accessor for OSSignposter();
  sub_1000477B0(v15, (uint64_t)qword_10016B070);
  OSSignposter.logHandle.getter();
  OSSignpostID.init(log:)();
  unint64_t v16 = OSSignposter.logHandle.getter();
  os_signpost_type_t v17 = static os_signpost_type_t.begin.getter();
  uint64_t result = OS_os_log.signpostsEnabled.getter();
  v24[1] = a4;
  id v25 = a5;
  if ((result & 1) == 0) {
    goto LABEL_7;
  }
  if ((a3 & 1) == 0)
  {
    if (!v26)
    {
      __break(1u);
LABEL_7:

      (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, v8);
LABEL_13:
      type metadata accessor for OSSignpostIntervalState();
      swift_allocObject();
      OSSignpostIntervalState.init(id:isOpen:)();
      swift_beginAccess();
      id v22 = v25;
      uint64_t v23 = swift_retain();
      sub_10009F804(v23, v22);
      swift_endAccess();

      [v22 start];
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v14, v8);
    }
LABEL_12:
    uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
    v19(v12, v14, v8);
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v20 = 0;
    os_signpost_id_t v21 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v16, v17, v21, v26, "Settings search begin", v20, 2u);
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    v19(v12, v14, v8);
    goto LABEL_13;
  }
  if ((unint64_t)v26 >> 32)
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v26 >> 11 != 27)
  {
    if (v26 >> 16 <= 0x10)
    {
      uint64_t v26 = &v27;
      goto LABEL_12;
    }
    goto LABEL_15;
  }
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_10009B0E0(unint64_t a1, uint64_t a2)
{
  uint64_t v25 = a2;
  uint64_t v3 = type metadata accessor for OSSignpostID();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v25 - v8;
  if (qword_10015F150 != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for Logger();
  sub_1000477B0(v10, (uint64_t)qword_10016AFE0);
  swift_bridgeObjectRetain_n();
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.default.getter();
  unint64_t v13 = a1 >> 62;
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 134349056;
    if (v13)
    {
      swift_bridgeObjectRetain();
      uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v15 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    uint64_t v26 = v15;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "SettingsAppSearchViewModel: foundItemsHandler: %{public}ld", v14, 0xCu);
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  if (qword_10015F180 != -1) {
    swift_once();
  }
  uint64_t v16 = type metadata accessor for OSSignposter();
  sub_1000477B0(v16, (uint64_t)qword_10016B070);
  swift_bridgeObjectRetain_n();
  static OSSignpostID.exclusive.getter();
  os_signpost_type_t v17 = OSSignposter.logHandle.getter();
  os_signpost_type_t v18 = static os_signpost_type_t.event.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v9, v3);
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v19 = 134217984;
    if (v13)
    {
      swift_bridgeObjectRetain();
      uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v20 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    uint64_t v26 = v20;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    os_signpost_id_t v21 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v17, v18, v21, "SettingsAppSearchViewModel.SearchFoundItems", "Settings search found %ld", v19, 0xCu);
    swift_slowDealloc();

    id v22 = *(void (**)(char *, uint64_t))(v4 + 8);
    v22(v9, v3);
    v22(v7, v3);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  }
  swift_beginAccess();
  unint64_t v23 = swift_bridgeObjectRetain();
  sub_1000D74B4(v23);
  return swift_endAccess();
}

uint64_t sub_10009B4EC(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  sub_10002E1D8(0, (unint64_t *)&unk_1001615D0);
  uint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  swift_retain();
  v1(v2);
  swift_release();

  return swift_bridgeObjectRelease();
}

void sub_10009B570(uint64_t a1, uint64_t a2, void *a3, const char *a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v71 = a8;
  uint64_t v69 = a7;
  unint64_t v84 = (char *)a4;
  uint64_t v81 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v80 = *(void *)(v81 - 8);
  __chkstk_darwin(v81);
  uint64_t v78 = &v64[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v79 = type metadata accessor for DispatchQoS();
  uint64_t v77 = *(void *)(v79 - 8);
  __chkstk_darwin(v79);
  uint64_t v76 = &v64[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v70 = type metadata accessor for SearchResultSection();
  uint64_t v72 = *(void *)(v70 - 8);
  uint64_t v16 = __chkstk_darwin(v70);
  uint64_t v74 = &v64[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v73 = v17;
  __chkstk_darwin(v16);
  uint64_t v75 = &v64[-v18];
  uint64_t v19 = type metadata accessor for OSSignpostError();
  os_signpost_id_t v68 = *(const char **)(v19 - 8);
  __chkstk_darwin(v19);
  os_signpost_id_t v21 = &v64[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v83 = type metadata accessor for OSSignpostID();
  uint64_t v82 = *(void *)(v83 - 8);
  uint64_t v22 = __chkstk_darwin(v83);
  unint64_t v67 = &v64[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v22);
  uint64_t v25 = &v64[-v24];
  if (qword_10015F150 != -1) {
    swift_once();
  }
  uint64_t v26 = type metadata accessor for Logger();
  uint64_t v85 = sub_1000477B0(v26, (uint64_t)qword_10016AFE0);
  char v27 = Logger.logObject.getter();
  os_log_type_t v28 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v27, v28))
  {
    uint64_t v29 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v29 = 0;
    _os_log_impl((void *)&_mh_execute_header, v27, v28, "SettingsAppSearchViewModel: completionHandler", v29, 2u);
    swift_slowDealloc();
  }

  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    goto LABEL_25;
  }
  uint64_t v31 = Strong;
  swift_beginAccess();
  uint64_t v32 = *(void *)(v31 + 120);
  id v33 = a3;
  uint64_t v34 = sub_100094B74(v33, v32);
  swift_endAccess();
  swift_release();

  if (!v34) {
    goto LABEL_25;
  }
  if (qword_10015F180 != -1) {
    swift_once();
  }
  uint64_t v35 = type metadata accessor for OSSignposter();
  sub_1000477B0(v35, (uint64_t)qword_10016B070);
  id v36 = OSSignposter.logHandle.getter();
  OSSignpostIntervalState.signpostID.getter();
  int v65 = static os_signpost_type_t.end.getter();
  char v37 = OS_os_log.signpostsEnabled.getter();
  unint64_t v66 = (unint64_t)v33;
  if ((v37 & 1) == 0)
  {

    (*(void (**)(unsigned char *, uint64_t))(v82 + 8))(v25, v83);
    goto LABEL_22;
  }
  if (a6)
  {
    if (!((unint64_t)v84 >> 32))
    {
      Class v38 = v68;
      if (v84 >> 11 == 27)
      {
LABEL_33:
        __break(1u);
        return;
      }
      if (v84 >> 16 <= 0x10)
      {
        unint64_t v84 = &v88;
        goto LABEL_18;
      }
LABEL_32:
      __break(1u);
      goto LABEL_33;
    }
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  if (!v84)
  {
    __break(1u);
    goto LABEL_31;
  }
  Class v38 = v68;
LABEL_18:
  swift_retain();
  checkForErrorAndConsumeState(state:)();
  swift_release();
  if ((*((unsigned int (**)(unsigned char *, uint64_t))v38 + 11))(v21, v19) == enum case for OSSignpostError.doubleEnd(_:))
  {
    uint64_t v39 = "[Error] Interval already ended";
  }
  else
  {
    (*((void (**)(unsigned char *, uint64_t))v38 + 1))(v21, v19);
    uint64_t v39 = "Settings search completion";
  }
  os_signpost_id_t v68 = v39;
  uint64_t v40 = v82;
  NSString v41 = v67;
  uint64_t v42 = v83;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v82 + 16))(v67, v25, v83);
  Class v43 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)Class v43 = 0;
  os_signpost_id_t v44 = OSSignpostID.rawValue.getter();
  _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v36, (os_signpost_type_t)v65, v44, v84, v68, v43, 2u);
  swift_slowDealloc();

  uint64_t v45 = *(void (**)(unsigned char *, uint64_t))(v40 + 8);
  v45(v25, v42);
  v45(v41, v42);
LABEL_22:
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    swift_beginAccess();
    sub_10009F6B4(v66);
    swift_endAccess();
    swift_release();
    swift_release();
  }
  swift_release();
LABEL_25:
  if (a1)
  {
    swift_errorRetain();
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v46 = Logger.logObject.getter();
    os_log_type_t v47 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v46, v47))
    {
      uint64_t v48 = (uint8_t *)swift_slowAlloc();
      aBlock[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v48 = 136446210;
      swift_getErrorValue();
      uint64_t v49 = Error.localizedDescription.getter();
      aBlock[10] = sub_100042948(v49, v50, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v46, v47, "Encountered error while performing search: %{public}s", v48, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
  }
  else
  {
    swift_beginAccess();
    uint64_t v51 = v71;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v52 = swift_bridgeObjectRetain();
    uint64_t v53 = sub_1000A3308(v52, v51, a9, a10, (uint64_t *)(a11 + 16));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    type metadata accessor for PrimarySettingsListItemIdentifier();
    uint64_t v54 = (uint64_t)v75;
    swift_storeEnumTagMultiPayload();
    *(void *)(v54 + *(int *)(v70 + 20)) = v53;
    sub_10002E1D8(0, (unint64_t *)&qword_1001609D0);
    uint64_t v55 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v56 = swift_allocObject();
    swift_beginAccess();
    swift_weakLoadStrong();
    swift_weakInit();
    swift_release();
    uint64_t v57 = v74;
    sub_1000A4650(v54, (uint64_t)v74, (uint64_t (*)(void))type metadata accessor for SearchResultSection);
    unint64_t v58 = (*(unsigned __int8 *)(v72 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v72 + 80);
    uint64_t v59 = swift_allocObject();
    *(void *)(v59 + 16) = v56;
    sub_1000A398C((uint64_t)v57, v59 + v58, (uint64_t (*)(void))type metadata accessor for SearchResultSection);
    aBlock[4] = (uint64_t)sub_1000A386C;
    aBlock[5] = v59;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_10002CC68;
    aBlock[3] = (uint64_t)&unk_1001532B0;
    uint64_t v60 = _Block_copy(aBlock);
    swift_retain();
    unint64_t v61 = v76;
    static DispatchQoS.unspecified.getter();
    id v86 = _swiftEmptyArrayStorage;
    sub_100027924((unint64_t *)&qword_1001614F0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100046B9C((uint64_t *)&unk_1001609C0);
    sub_10002F644();
    uint64_t v62 = v78;
    uint64_t v63 = v81;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v60);

    (*(void (**)(unsigned char *, uint64_t))(v80 + 8))(v62, v63);
    (*(void (**)(unsigned char *, uint64_t))(v77 + 8))(v61, v79);
    sub_1000A38D0(v54, (uint64_t (*)(void))type metadata accessor for SearchResultSection);
    swift_release();
    swift_release();
  }
}

uint64_t sub_10009C188@<X0>(id *a1@<X0>, uint64_t a2@<X3>, uint64_t *a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v203 = a3;
  uint64_t v212 = a2;
  uint64_t v220 = a4;
  uint64_t v219 = type metadata accessor for SearchResult();
  uint64_t v221 = *(void *)(v219 - 8);
  __chkstk_darwin(v219);
  uint64_t v200 = (uint64_t)&v193 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100046B9C((uint64_t *)&unk_100163AD0);
  __chkstk_darwin(v6 - 8);
  uint64_t v205 = (uint64_t)&v193 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100046B9C((uint64_t *)&unk_100161530);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v218 = (void (*)(char *, uint64_t))((char *)&v193 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v9);
  uint64_t v207 = (uint64_t)&v193 - v11;
  uint64_t v209 = type metadata accessor for PrimarySettingsListItemIdentifier();
  uint64_t v208 = *(void **)(v209 - 8);
  uint64_t v12 = __chkstk_darwin(v209);
  uint64_t v14 = (char *)&v193 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v17 = (char *)&v193 - v16;
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v193 - v18;
  uint64_t v20 = sub_100046B9C((uint64_t *)&unk_100163C10);
  uint64_t v21 = __chkstk_darwin(v20 - 8);
  uint64_t v216 = (uint64_t)&v193 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v217 = (char *)&v193 - v23;
  uint64_t v24 = type metadata accessor for URL();
  uint64_t v25 = *(void **)(v24 - 8);
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v206 = (char *)&v193 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v202 = (char *)&v193 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v199 = (char *)&v193 - v31;
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v204 = (char *)&v193 - v33;
  uint64_t v34 = __chkstk_darwin(v32);
  uint64_t v211 = (char *)&v193 - v35;
  uint64_t v36 = __chkstk_darwin(v34);
  BOOL v198 = (char *)&v193 - v37;
  uint64_t v38 = __chkstk_darwin(v36);
  uint64_t v213 = (char *)&v193 - v39;
  __chkstk_darwin(v38);
  uint64_t v225 = (uint8_t *)&v193 - v40;
  id v41 = *a1;
  id v42 = [*a1 attributeSet];
  id v43 = [v42 title];

  if (!v43)
  {
    id v44 = [v41 attributeSet];
    id v43 = [v44 subject];

    if (!v43) {
      goto LABEL_10;
    }
  }
  uint64_t v201 = v14;
  uint64_t v197 = v17;
  uint64_t v210 = v19;
  uint64_t v196 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v214 = v45;

  id v215 = v41;
  id v46 = [v41 attributeSet];
  id v47 = [v46 URL];

  uint64_t v222 = v24;
  if (v47)
  {
    uint64_t v48 = (uint64_t)v213;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v49 = (void (*)(uint64_t, uint64_t, uint64_t))v25[4];
    uint64_t v50 = v216;
    v49(v216, v48, v24);
    uint64_t v51 = (void (*)(uint64_t, void, uint64_t, uint64_t))v25[7];
    v51(v50, 0, 1, v24);
    unint64_t v52 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v25[6];
    if (v52(v50, 1, v24) != 1)
    {
      uint64_t v53 = v50;
      uint64_t v54 = v217;
      uint64_t v55 = v222;
      v49((uint64_t)v217, v53, v222);
      uint64_t v56 = (uint64_t)v54;
      v51((uint64_t)v54, 0, 1, v55);
      uint64_t v57 = v25;
      id v41 = v215;
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v50 = v216;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v25[7])(v216, 1, 1, v24);
  }
  id v41 = v215;
  id v58 = [v215 uniqueIdentifier];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v56 = (uint64_t)v217;
  URL.init(string:)();
  swift_bridgeObjectRelease();
  sub_10003F5D0(v50, (uint64_t *)&unk_100163C10);
  unint64_t v52 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v25[6];
  uint64_t v57 = v25;
LABEL_8:
  uint64_t v59 = v222;
  unsigned int v60 = v52(v56, 1, v222);
  uint64_t v61 = (uint64_t)v218;
  if (v60 == 1)
  {
    swift_bridgeObjectRelease();
    sub_10003F5D0(v56, (uint64_t *)&unk_100163C10);
LABEL_10:
    if (qword_10015F150 != -1) {
      swift_once();
    }
    uint64_t v62 = type metadata accessor for Logger();
    sub_1000477B0(v62, (uint64_t)qword_10016AFE0);
    id v63 = v41;
    id v64 = Logger.logObject.getter();
    os_log_type_t v65 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v64, v65))
    {
      unint64_t v66 = (uint8_t *)swift_slowAlloc();
      uint64_t v224 = swift_slowAlloc();
      *(_DWORD *)unint64_t v66 = 136380675;
      uint64_t v225 = v66 + 4;
      id v67 = [v63 attributeSet];
      id v68 = [v67 description];

      uint64_t v69 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v71 = v70;

      uint64_t v223 = sub_100042948(v69, v71, &v224);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v64, v65, "Search result has malformed attributeSet (missing title or URL): '%{private}s'.", v66, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v72 = 1;
LABEL_43:
      uint64_t v157 = v220;
      uint64_t v158 = (int *)v219;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v221 + 56))(v157, v72, 1, v158);
    }

    goto LABEL_42;
  }
  ((void (*)(uint8_t *, uint64_t, uint64_t))v57[4])(v225, v56, v59);
  id v73 = [v41 attributeSet];
  id v74 = [v73 rankingHint];

  if (v74)
  {
    id v194 = [v74 integerValue];
  }
  else
  {
    id v194 = 0;
  }
  uint64_t v75 = v211;
  id v76 = [v41 attributeSet];
  id v77 = [v76 thumbnailContentType];

  if (v77)
  {
    uint64_t v211 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v79 = v78;

    uint64_t v216 = v79;
    swift_bridgeObjectRetain();
    int v80 = 2;
LABEL_22:
    LODWORD(v198) = v80;
    goto LABEL_23;
  }
  id v81 = [v41 attributeSet];
  id v82 = [v81 thumbnailBundleID];

  if (v82)
  {
    uint64_t v211 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v84 = v83;

    uint64_t v216 = v84;
    swift_bridgeObjectRetain();
    int v80 = 1;
    goto LABEL_22;
  }
  uint64_t v147 = (void (*)(char *, uint8_t *, uint64_t))v57[2];
  uint64_t v148 = (uint64_t)v213;
  v147(v213, v225, v59);
  uint64_t v149 = (char *)sub_100115858(v148);
  if ((_BYTE)v151 == 0xFF)
  {
    swift_bridgeObjectRelease();
    if (qword_10015F150 != -1) {
      swift_once();
    }
    uint64_t v171 = type metadata accessor for Logger();
    sub_1000477B0(v171, (uint64_t)qword_10016AFE0);
    unint64_t v172 = v198;
    v147(v198, v225, v59);
    unint64_t v173 = Logger.logObject.getter();
    os_log_type_t v174 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v173, v174))
    {
      uint64_t v175 = swift_slowAlloc();
      uint64_t v224 = swift_slowAlloc();
      *(_DWORD *)uint64_t v175 = 141558275;
      uint64_t v223 = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v175 + 12) = 2081;
      uint64_t v176 = URL.absoluteString.getter();
      uint64_t v223 = sub_100042948(v176, v177, &v224);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v178 = (void (*)(char *, uint64_t))v57[1];
      uint64_t v179 = v172;
      uint64_t v180 = v222;
      v178(v179, v222);
      _os_log_impl((void *)&_mh_execute_header, v173, v174, "Could not determine icon type for '%{private,mask.hash}s'.", (uint8_t *)v175, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v178((char *)v225, v180);
      uint64_t v72 = 1;
      goto LABEL_43;
    }

    uint64_t v192 = (void (*)(char *, uint64_t))v57[1];
    v192(v172, v59);
    v192((char *)v225, v59);
    goto LABEL_42;
  }
  uint64_t v211 = v149;
  uint64_t v216 = v150;
  LODWORD(v198) = v151;
  sub_100047728(v149, v150, v151);
LABEL_23:
  uint64_t v85 = (uint64_t)v225;
  sub_1000FE270(v61);
  uint64_t v217 = (char *)v57[2];
  ((void (*)(char *, uint64_t, uint64_t))v217)(v75, v85, v59);
  id v86 = v208;
  NSString v87 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v208[6];
  uint64_t v88 = v209;
  int v89 = v87(v61, 1, v209);
  uint64_t v195 = v57;
  if (v89 == 1)
  {
    uint64_t v90 = v75;
    uint64_t v91 = v61;
    uint64_t v92 = v207;
    sub_1000FEDC4(v207);
    NSString v93 = v57 + 1;
    uint64_t v94 = (void (*)(char *, uint64_t))v57[1];
    uint64_t v208 = v93;
    v94(v90, v59);
    sub_10003F5D0(v91, (uint64_t *)&unk_100161530);
    if (v87(v92, 1, v88) == 1)
    {
      uint64_t v218 = v94;
      swift_bridgeObjectRelease();
      sub_10003F5D0(v92, (uint64_t *)&unk_100161530);
      if (qword_10015F150 != -1) {
        swift_once();
      }
      uint64_t v95 = type metadata accessor for Logger();
      sub_1000477B0(v95, (uint64_t)qword_10016AFE0);
      id v96 = v204;
      ((void (*)(char *, uint8_t *, uint64_t))v217)(v204, v225, v59);
      id v97 = Logger.logObject.getter();
      os_log_type_t v98 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v97, v98))
      {
        uint64_t v99 = swift_slowAlloc();
        uint64_t v224 = swift_slowAlloc();
        *(_DWORD *)uint64_t v99 = 141558275;
        uint64_t v223 = 1752392040;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v99 + 12) = 2081;
        uint64_t v100 = URL.absoluteString.getter();
        uint64_t v223 = sub_100042948(v100, v101, &v224);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        uint64_t v102 = v96;
        uint64_t v103 = v59;
        uint64_t v104 = v59;
        id v105 = (void (*)(uint8_t *, uint64_t))v218;
        v218(v102, v103);
        _os_log_impl((void *)&_mh_execute_header, v97, v98, "Could not resolve primarySettingsListItemIdentifier for '%{private,mask.hash}s'.", (uint8_t *)v99, 0x16u);
        uint64_t v72 = 1;
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        unint64_t v106 = v211;
        uint64_t v107 = v216;
        char v108 = (char)v198;
        sub_100046F04(v211, v216, (char)v198);
        sub_10006EB80(v106, v107, v108);
        v105(v225, v104);
        goto LABEL_43;
      }

      uint64_t v152 = v211;
      uint64_t v153 = v216;
      char v154 = (char)v198;
      sub_100046F04(v211, v216, (char)v198);
      long long v155 = v96;
      uint64_t v156 = (void (*)(uint8_t *, uint64_t))v218;
      v218(v155, v59);
      sub_10006EB80(v152, v153, v154);
      v156(v225, v59);
LABEL_42:
      uint64_t v72 = 1;
      goto LABEL_43;
    }
  }
  else
  {
    uint64_t v94 = (void (*)(char *, uint64_t))v57[1];
    v94(v75, v59);
    uint64_t v109 = v61;
    uint64_t v92 = v207;
    sub_1000A398C(v109, v207, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v86[7])(v92, 0, 1, v88);
  }
  uint64_t v110 = (uint64_t)v210;
  sub_1000A398C(v92, (uint64_t)v210, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
  unint64_t v111 = v206;
  if (!*(void *)(v212 + 16) || (unint64_t v112 = sub_10003DD34(v110), (v113 & 1) == 0))
  {
    uint64_t v218 = v94;
    uint64_t v125 = type metadata accessor for PrimarySettingsListItemModel();
    uint64_t v126 = v205;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v125 - 8) + 56))(v205, 1, 1, v125);
    swift_bridgeObjectRelease();
    sub_10003F5D0(v126, (uint64_t *)&unk_100163AD0);
    if (qword_10015F150 != -1) {
      swift_once();
    }
    uint64_t v127 = type metadata accessor for Logger();
    sub_1000477B0(v127, (uint64_t)qword_10016AFE0);
    uint64_t v128 = (uint64_t)v201;
    sub_1000A4650(v110, (uint64_t)v201, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
    ((void (*)(char *, uint8_t *, uint64_t))v217)(v111, v225, v59);
    uint64_t v129 = Logger.logObject.getter();
    os_log_type_t v130 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v129, v130))
    {
      uint64_t v131 = swift_slowAlloc();
      uint64_t v224 = swift_slowAlloc();
      *(_DWORD *)uint64_t v131 = 136315651;
      uint64_t v132 = sub_100048BDC();
      uint64_t v223 = sub_100042948(v132, v133, &v224);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1000A38D0(v128, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
      *(_WORD *)(v131 + 12) = 2160;
      uint64_t v223 = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v131 + 22) = 2081;
      uint64_t v134 = URL.absoluteString.getter();
      uint64_t v223 = sub_100042948(v134, v135, &v224);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v136 = v111;
      uint64_t v137 = v222;
      uint64_t v138 = (void (*)(uint8_t *, uint64_t))v218;
      v218(v136, v222);
      _os_log_impl((void *)&_mh_execute_header, v129, v130, "PrimarySettingsListItemIdentifier '%s' for search result with url '%{private,mask.hash}s' not found in currentDataModel, hiding result.", (uint8_t *)v131, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v139 = v211;
      uint64_t v140 = v216;
      char v141 = (char)v198;
      sub_100046F04(v211, v216, (char)v198);
      sub_10006EB80(v139, v140, v141);
      sub_1000A38D0((uint64_t)v210, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
      v138(v225, v137);
    }
    else
    {

      uint64_t v142 = v211;
      uint64_t v143 = v216;
      char v144 = (char)v198;
      sub_100046F04(v211, v216, (char)v198);
      uint64_t v145 = v111;
      uint64_t v146 = (void (*)(uint8_t *, uint64_t))v218;
      v218(v145, v59);
      sub_1000A38D0(v128, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
      sub_10006EB80(v142, v143, v144);
      sub_1000A38D0(v110, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
      v146(v225, v59);
    }
    goto LABEL_42;
  }
  unint64_t v114 = v112;
  uint64_t v115 = *(void *)(v212 + 56);
  uint64_t v116 = type metadata accessor for PrimarySettingsListItemModel();
  uint64_t v117 = *(void *)(v116 - 8);
  uint64_t v118 = v115 + *(void *)(v117 + 72) * v114;
  uint64_t v119 = v205;
  sub_1000A4650(v118, v205, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v117 + 56))(v119, 0, 1, v116);
  sub_10003F5D0(v119, (uint64_t *)&unk_100163AD0);
  uint64_t v120 = v203;
  swift_beginAccess();
  uint64_t v121 = *v120;
  swift_bridgeObjectRetain();
  LOBYTE(v116) = sub_100094C40((uint64_t)v225, v121);
  swift_bridgeObjectRelease();
  if (v116)
  {
    swift_bridgeObjectRelease();
    uint64_t v122 = v211;
    uint64_t v123 = v216;
    char v124 = (char)v198;
    sub_100046F04(v211, v216, (char)v198);
    sub_10006EB80(v122, v123, v124);
    sub_1000A38D0((uint64_t)v210, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
    v94((char *)v225, v59);
    goto LABEL_42;
  }
  uint64_t v160 = v199;
  uint64_t v161 = (uint64_t)v225;
  uint64_t v162 = (void (*)(char *, uint64_t, uint64_t))v217;
  ((void (*)(char *, uint8_t *, uint64_t))v217)(v199, v225, v59);
  swift_beginAccess();
  uint64_t v163 = (uint64_t)v213;
  sub_1000A198C((uint64_t)v213, v160);
  swift_endAccess();
  uint64_t v164 = v59;
  uint64_t v218 = v94;
  uint64_t v213 = (char *)(v195 + 1);
  v94((char *)v163, v59);
  uint64_t v165 = (uint64_t)v197;
  sub_1000A4650((uint64_t)v210, (uint64_t)v197, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
  uint64_t v166 = v164;
  v162(v202, v161, v164);
  id v167 = [v215 attributeSet];
  id v168 = [v167 contentDescription];

  if (v168)
  {
    id v215 = (id)static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v170 = v169;
  }
  else
  {
    id v215 = 0;
    uint64_t v170 = 0;
  }
  uint64_t v157 = v220;
  uint64_t v158 = (int *)v219;
  uint64_t v181 = v196;
  uint64_t v182 = v165;
  uint64_t v183 = v200;
  sub_1000A4650(v182, v200, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
  uint64_t v184 = v202;
  ((void (*)(uint64_t, char *, uint64_t))v217)(v183 + v158[5], v202, v166);
  uint64_t v185 = (uint64_t *)(v183 + v158[6]);
  uint64_t v186 = v214;
  *uint64_t v185 = v181;
  v185[1] = v186;
  uint64_t v187 = (void *)(v183 + v158[7]);
  uint64_t v188 = v216;
  *uint64_t v187 = v215;
  v187[1] = v170;
  *(void *)(v183 + v158[8]) = v194;
  unint64_t v189 = v211;
  char v190 = (char)v198;
  sub_100047728(v211, v188, (char)v198);
  v218(v184, v166);
  sub_1000A38D0((uint64_t)v197, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
  uint64_t v191 = v183 + v158[9];
  *(void *)uint64_t v191 = v189;
  *(void *)(v191 + 8) = v188;
  *(unsigned char *)(v191 + 16) = v190;
  sub_1000A398C(v183, v157, (uint64_t (*)(void))type metadata accessor for SearchResult);
  sub_100046F04(v189, v188, v190);
  sub_10006EB80(v189, v188, v190);
  sub_1000A38D0((uint64_t)v210, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
  v218((char *)v225, v222);
  uint64_t v72 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v221 + 56))(v157, v72, 1, v158);
}

uint64_t sub_10009D96C(uint64_t a1, uint64_t a2)
{
  if (qword_10015F150 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  sub_1000477B0(v3, (uint64_t)qword_10016AFE0);
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "SettingsAppSearchViewModel: updating searchResults", v6, 2u);
    swift_slowDealloc();
  }

  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_100046B9C(&qword_100161510);
    uint64_t v8 = *(void *)(type metadata accessor for SearchResultSection() - 8);
    unint64_t v9 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_10011C360;
    sub_1000A4650(a2, v10 + v9, (uint64_t (*)(void))type metadata accessor for SearchResultSection);
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    sub_100027924(&qword_10015F570, (void (*)(uint64_t))type metadata accessor for SettingsAppSearchViewModel);
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_10009DBF4(void **a1)
{
  uint64_t v45 = type metadata accessor for PPTTestCase();
  uint64_t v43 = *(void *)(v45 - 8);
  __chkstk_darwin(v45);
  id v44 = (char *)&v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = (uint8_t *)type metadata accessor for DispatchWorkItemFlags();
  id v41 = (uint8_t *)*((void *)v3 - 1);
  id v42 = v3;
  __chkstk_darwin(v3);
  os_log_type_t v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v39 = *(void *)(v6 - 8);
  uint64_t v40 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for PPTTestCase.Name();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v37 - v14;
  id v46 = a1;
  PPTTestCase.name.getter();
  if (qword_10015F1B8 != -1) {
    swift_once();
  }
  sub_1000477B0(v9, (uint64_t)qword_10016B118);
  sub_100027924(&qword_100161668, (void (*)(uint64_t))&type metadata accessor for PPTTestCase.Name);
  dispatch thunk of RawRepresentable.rawValue.getter();
  dispatch thunk of RawRepresentable.rawValue.getter();
  if (aBlock == v53 && v48 == v54) {
    char v16 = 1;
  }
  else {
    char v16 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v17 = *(void (**)(char *, uint64_t))(v10 + 8);
  v17(v15, v9);
  if (v16)
  {
    PPTTestCase.name.getter();
    uint64_t v18 = PPTTestCase.Name.rawValue.getter();
    uint64_t v20 = v19;
    v17(v13, v9);
    uint64_t v21 = v38;
    uint64_t v22 = *(void **)(v38 + 104);
    uint64_t v23 = (void *)swift_allocObject();
    v23[2] = v21;
    void v23[3] = v18;
    v23[4] = v20;
    uint64_t v51 = sub_1000A44E8;
    unint64_t v52 = v23;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v48 = 1107296256;
    uint64_t v49 = sub_10002CC68;
    uint64_t v50 = &unk_1001533E8;
    uint64_t v24 = _Block_copy(&aBlock);
    id v25 = v22;
    swift_retain();
    static DispatchQoS.unspecified.getter();
    uint64_t v53 = (void **)_swiftEmptyArrayStorage;
    sub_100027924((unint64_t *)&qword_1001614F0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100046B9C((uint64_t *)&unk_1001609C0);
    sub_10002F644();
    uint64_t v26 = v42;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v24);

    (*((void (**)(char *, uint8_t *))v41 + 1))(v5, v26);
    (*(void (**)(char *, uint64_t))(v39 + 8))(v8, v40);
    swift_release();
  }
  else
  {
    if (qword_10015F178 != -1) {
      swift_once();
    }
    uint64_t v27 = type metadata accessor for Logger();
    sub_1000477B0(v27, (uint64_t)qword_10016B058);
    uint64_t v28 = v43;
    uint64_t v29 = v44;
    uint64_t v30 = v45;
    (*(void (**)(char *, void **, uint64_t))(v43 + 16))(v44, v46, v45);
    uint64_t v31 = Logger.logObject.getter();
    os_log_type_t v32 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = (uint8_t *)swift_slowAlloc();
      id v46 = (void **)swift_slowAlloc();
      long long aBlock = v46;
      *(_DWORD *)uint64_t v33 = 136446210;
      id v41 = v33 + 4;
      id v42 = v33;
      PPTTestCase.name.getter();
      uint64_t v34 = PPTTestCase.Name.rawValue.getter();
      unint64_t v36 = v35;
      v17(v13, v9);
      uint64_t v53 = (void **)sub_100042948(v34, v36, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v28 + 8))(v44, v45);
      _os_log_impl((void *)&_mh_execute_header, v31, v32, "Unknown test: %{public}s", v42, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v28 + 8))(v29, v30);
    }
  }
}

uint64_t sub_10009E2C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_100046B9C(&qword_100164100);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  uint64_t v9 = swift_allocObject();
  swift_weakInit();
  type metadata accessor for MainActor();
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v10 = static MainActor.shared.getter();
  uint64_t v11 = (void *)swift_allocObject();
  void v11[2] = v10;
  void v11[3] = &protocol witness table for MainActor;
  v11[4] = v9;
  void v11[5] = a2;
  void v11[6] = a3;
  swift_release();
  sub_1000C9558((uint64_t)v7, (uint64_t)&unk_100161678, (uint64_t)v11);
  return swift_release();
}

uint64_t sub_10009E428(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[17] = a5;
  v6[18] = a6;
  v6[16] = a4;
  uint64_t v7 = type metadata accessor for DispatchWorkItemFlags();
  v6[19] = v7;
  v6[20] = *(void *)(v7 - 8);
  v6[21] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for DispatchQoS();
  v6[22] = v8;
  v6[23] = *(void *)(v8 - 8);
  v6[24] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for DispatchTimeInterval();
  v6[25] = v9;
  v6[26] = *(void *)(v9 - 8);
  v6[27] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for DispatchTime();
  v6[28] = v10;
  v6[29] = *(void *)(v10 - 8);
  v6[30] = swift_task_alloc();
  v6[31] = swift_task_alloc();
  type metadata accessor for MainActor();
  v6[32] = static MainActor.shared.getter();
  uint64_t v12 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10009E644, v12, v11);
}

uint64_t sub_10009E644()
{
  swift_release();
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = Strong;
    swift_getKeyPath();
    uint64_t v3 = swift_task_alloc();
    *(void *)(v3 + 16) = v2;
    *(unsigned char *)(v3 + 24) = 1;
    v0[14] = v2;
    sub_100027924(&qword_10015F570, (void (*)(uint64_t))type metadata accessor for SettingsAppSearchViewModel);
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    swift_release();
    swift_task_dealloc();
  }
  swift_beginAccess();
  uint64_t v4 = swift_weakLoadStrong();
  if (v4)
  {
    uint64_t v5 = v0[18];
    *(void *)(v4 + 88) = v0[17];
    *(void *)(v4 + 96) = v5;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    swift_release();
  }
  uint64_t v6 = v0[30];
  uint64_t v7 = v0[28];
  uint64_t v17 = v0[29];
  uint64_t v8 = v0[26];
  uint64_t v9 = (void *)v0[27];
  uint64_t v10 = v0[25];
  uint64_t v15 = v0[31];
  uint64_t v16 = v0[24];
  uint64_t v23 = v0[23];
  uint64_t v24 = v0[22];
  uint64_t v20 = v0[21];
  uint64_t v22 = v0[20];
  uint64_t v21 = v0[19];
  uint64_t v11 = v0[16];
  sub_10002E1D8(0, (unint64_t *)&qword_1001609D0);
  uint64_t v19 = (void *)static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  *uint64_t v9 = 1;
  (*(void (**)(void *, void, uint64_t))(v8 + 104))(v9, enum case for DispatchTimeInterval.seconds(_:), v10);
  + infix(_:_:)();
  (*(void (**)(void *, uint64_t))(v8 + 8))(v9, v10);
  uint64_t v18 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
  v18(v6, v7);
  v0[6] = sub_1000A4648;
  v0[7] = v11;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = 1107296256;
  v0[4] = sub_10002CC68;
  v0[5] = &unk_100153438;
  uint64_t v12 = _Block_copy(v0 + 2);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  v0[15] = _swiftEmptyArrayStorage;
  sub_100027924((unint64_t *)&qword_1001614F0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100046B9C((uint64_t *)&unk_1001609C0);
  sub_10002F644();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v12);

  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v20, v21);
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v16, v24);
  v18(v15, v7);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t sub_10009EA8C()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    return static Published.subscript.setter();
  }
  return result;
}

id sub_10009EC18()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SettingsAppLSObserver();
  [super dealloc];
}

uint64_t type metadata accessor for SettingsAppLSObserver()
{
  return self;
}

unint64_t sub_10009ECB0()
{
  unint64_t result = qword_1001614C0;
  if (!qword_1001614C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001614C0);
  }
  return result;
}

void sub_10009ED24()
{
  *(unsigned char *)(*(void *)(v0 + 16) + 80) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_10009ED34()
{
  return sub_100097748(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_10009ED50()
{
  return sub_1000A4604();
}

uint64_t sub_10009ED68()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10009EDA0(unint64_t a1)
{
  return sub_10009B0E0(a1, v1);
}

uint64_t sub_10009EDA8()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10009EDE0()
{
  swift_release();

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 96, 7);
}

void sub_10009EE48(uint64_t a1)
{
  sub_10009B570(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(const char **)(v1 + 32), *(void *)(v1 + 40), *(unsigned char *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 72), *(void *)(v1 + 80), *(void *)(v1 + 88));
}

uint64_t sub_10009EE88(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10005997C(a1, a2, a3, a4, &qword_100161580, (uint64_t (*)(void))&type metadata accessor for URLQueryItem, (uint64_t (*)(void))&type metadata accessor for URLQueryItem);
}

uint64_t sub_10009EEBC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10005997C(a1, a2, a3, a4, &qword_100161680, (uint64_t (*)(void))&type metadata accessor for SettingsNavigationEventRecord, (uint64_t (*)(void))&type metadata accessor for SettingsNavigationEventRecord);
}

char *sub_10009EEF0(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100046B9C(&qword_1001615B8);
      uint64_t v10 = (char *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 72);
      uint64_t v12 = v10 + 32;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[72 * v8 + 32]) {
          memmove(v12, a4 + 32, 72 * v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
      uint64_t v12 = (char *)&_swiftEmptyArrayStorage + 32;
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1000A3FC0(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_10009F018(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_100046B9C(&qword_100161508);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

unint64_t sub_10009F168(uint64_t a1)
{
  sub_100046B9C(&qword_100161568);
  uint64_t v2 = dispatch thunk of Hashable._rawHashValue(seed:)();
  return sub_10009F348(a1, v2);
}

unint64_t sub_10009F1DC(uint64_t a1, uint64_t a2)
{
  Hasher.init(_seed:)();
  String.hash(into:)();
  Swift::Int v4 = Hasher._finalize()();

  return sub_10009F418(a1, a2, v4);
}

unint64_t sub_10009F254(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = NSObject._rawHashValue(seed:)(*(void *)(v2 + 40));

  return sub_10009F4FC(a1, v4);
}

unint64_t sub_10009F298(Swift::UInt a1)
{
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a1);
  Swift::Int v2 = Hasher._finalize()();

  return sub_10009F618(a1, v2);
}

unint64_t sub_10009F348(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    sub_100046B9C(&qword_100161568);
    do
    {
      if (dispatch thunk of static Equatable.== infix(_:_:)()) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v5;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_10009F418(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_10009F4FC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t i = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    sub_10002E1D8(0, &qword_1001614E8);
    id v6 = *(id *)(*(void *)(v2 + 48) + 8 * i);
    char v7 = static NSObject.== infix(_:_:)();

    if ((v7 & 1) == 0)
    {
      uint64_t v8 = ~v4;
      for (unint64_t i = (i + 1) & v8; ((*(void *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v8)
      {
        id v9 = *(id *)(*(void *)(v2 + 48) + 8 * i);
        char v10 = static NSObject.== infix(_:_:)();

        if (v10) {
          break;
        }
      }
    }
  }
  return i;
}

unint64_t sub_10009F618(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

uint64_t sub_10009F6B4(unint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (uint64_t)*v1;
  if ((v4 & 0xC000000000000001) == 0)
  {
LABEL_8:
    swift_bridgeObjectRetain();
    a1 = sub_10009F254(a1);
    char v13 = v12;
    swift_bridgeObjectRelease();
    if (v13)
    {
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      id v9 = *v2;
      uint64_t v17 = *v2;
      *uint64_t v2 = (void *)0x8000000000000000;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_1000A142C();
        id v9 = v17;
      }
      goto LABEL_11;
    }
    return 0;
  }
  if (v4 < 0) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = v4 & 0xFFFFFFFFFFFFFF8;
  }
  swift_bridgeObjectRetain();
  id v6 = (id)a1;
  uint64_t v7 = __CocoaDictionary.lookup(_:)();

  if (!v7)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_unknownObjectRelease();
  uint64_t v8 = __CocoaDictionary.count.getter();
  id v9 = sub_10009F8B8(v5, v8);
  swift_retain();
  a1 = sub_10009F254((uint64_t)v6);
  char v11 = v10;
  swift_release();
  if ((v11 & 1) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
LABEL_11:

  uint64_t v15 = *(void *)(v9[7] + 8 * a1);
  sub_1000A0444(a1, (uint64_t)v9);
  *uint64_t v2 = v9;
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_10009F804(uint64_t a1, void *a2)
{
  uint64_t v3 = (void **)v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    uint64_t result = __CocoaDictionary.count.getter();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    *uint64_t v3 = sub_10009F8B8(v7, result + 1);
  }
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  char v10 = *v3;
  *uint64_t v3 = (void *)0x8000000000000000;
  sub_1000A09B4(a1, a2, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v10;

  return swift_bridgeObjectRelease();
}

void *sub_10009F8B8(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_100046B9C(&qword_1001614E0);
    uint64_t v2 = static _DictionaryStorage.convert(_:capacity:)();
    uint64_t v19 = v2;
    __CocoaDictionary.makeIterator()();
    uint64_t v3 = __CocoaDictionary.Iterator.next()();
    if (v3)
    {
      uint64_t v4 = v3;
      sub_10002E1D8(0, &qword_1001614E8);
      do
      {
        swift_dynamicCast();
        type metadata accessor for OSSignpostIntervalState();
        swift_dynamicCast();
        uint64_t v2 = v19;
        unint64_t v12 = *(void *)(v19 + 16);
        if (*(void *)(v19 + 24) <= v12)
        {
          sub_10009FB38(v12 + 1, 1);
          uint64_t v2 = v19;
        }
        Swift::Int v5 = NSObject._rawHashValue(seed:)(*(void *)(v2 + 40));
        uint64_t v6 = v2 + 64;
        uint64_t v7 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v8 = v5 & ~v7;
        unint64_t v9 = v8 >> 6;
        if (((-1 << v8) & ~*(void *)(v2 + 64 + 8 * (v8 >> 6))) != 0)
        {
          unint64_t v10 = __clz(__rbit64((-1 << v8) & ~*(void *)(v2 + 64 + 8 * (v8 >> 6)))) | v8 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v13 = 0;
          unint64_t v14 = (unint64_t)(63 - v7) >> 6;
          do
          {
            if (++v9 == v14 && (v13 & 1) != 0)
            {
              __break(1u);
              JUMPOUT(0x10009FAF4);
            }
            BOOL v15 = v9 == v14;
            if (v9 == v14) {
              unint64_t v9 = 0;
            }
            v13 |= v15;
            uint64_t v16 = *(void *)(v6 + 8 * v9);
          }
          while (v16 == -1);
          unint64_t v10 = __clz(__rbit64(~v16)) + (v9 << 6);
        }
        *(void *)(v6 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
        uint64_t v11 = 8 * v10;
        *(void *)(*(void *)(v2 + 48) + v11) = v18;
        *(void *)(*(void *)(v2 + 56) + v11) = v4;
        ++*(void *)(v2 + 16);
        uint64_t v4 = __CocoaDictionary.Iterator.next()();
      }
      while (v4);
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return &_swiftEmptyDictionarySingleton;
  }
  return (void *)v2;
}

uint64_t sub_10009FB38(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100046B9C(&qword_1001614E0);
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  unint64_t v35 = v2;
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11) {
      break;
    }
    uint64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v36 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v35;
          if ((a2 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v36 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = 8 * v21;
    uint64_t v31 = *(void **)(*(void *)(v5 + 48) + v30);
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + v30);
    if ((a2 & 1) == 0)
    {
      id v33 = v31;
      swift_retain();
    }
    uint64_t result = NSObject._rawHashValue(seed:)(*(void *)(v7 + 40));
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = 8 * v18;
    *(void *)(*(void *)(v7 + 48) + v19) = v31;
    *(void *)(*(void *)(v7 + 56) + v19) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v35;
  uint64_t v23 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v23 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_10009FE10(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100046B9C(&qword_100162520);
  char v35 = a2;
  uint64_t result = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v34 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v19 = v18 | (v8 << 6);
      }
      else
      {
        int64_t v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v20 >= v33) {
          goto LABEL_33;
        }
        unint64_t v21 = v34[v20];
        ++v8;
        if (!v21)
        {
          int64_t v8 = v20 + 1;
          if (v20 + 1 >= v33) {
            goto LABEL_33;
          }
          unint64_t v21 = v34[v8];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v33)
            {
LABEL_33:
              if ((v35 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_40;
              }
              uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
              if (v32 >= 64) {
                bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v34 = -1 << v32;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v21 = v34[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v8 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v33) {
                  goto LABEL_33;
                }
                unint64_t v21 = v34[v8];
                ++v22;
                if (v21) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v22;
          }
        }
LABEL_30:
        unint64_t v11 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      Swift::UInt v27 = *(void *)(*(void *)(v5 + 48) + 8 * v19);
      uint64_t v28 = *(void *)(v5 + 56) + 24 * v19;
      char v29 = *(unsigned char *)v28;
      uint64_t v30 = *(void *)(v28 + 8);
      uint64_t v31 = *(void *)(v28 + 16);
      if ((v35 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      Hasher.init(_seed:)();
      Hasher._combine(_:)(v27);
      uint64_t result = Hasher._finalize()();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v25 = v15 == v24;
          if (v15 == v24) {
            unint64_t v15 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        unint64_t v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(void *)(*(void *)(v7 + 48) + 8 * v16) = v27;
      uint64_t v17 = *(void *)(v7 + 56) + 24 * v16;
      *(unsigned char *)uint64_t v17 = v29;
      *(void *)(v17 + 8) = v30;
      *(void *)(v17 + 16) = v31;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1000A010C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100046B9C(&qword_100161570);
  char v42 = a2;
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v41 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v39 = v2;
  int64_t v40 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_22;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v40) {
      break;
    }
    int64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v41 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v40) {
        goto LABEL_34;
      }
      unint64_t v23 = *(void *)(v41 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v40)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v39;
          if ((v42 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v23 = *(void *)(v41 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_43;
            }
            if (v13 >= v40) {
              goto LABEL_34;
            }
            unint64_t v23 = *(void *)(v41 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_21;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_21:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_22:
    BOOL v25 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v27 = *v25;
    uint64_t v26 = v25[1];
    uint64_t v28 = *(void *)(v5 + 56) + 40 * v20;
    if (v42)
    {
      long long v29 = *(_OWORD *)v28;
      long long v30 = *(_OWORD *)(v28 + 16);
      uint64_t v45 = *(void *)(v28 + 32);
      long long v43 = v29;
      long long v44 = v30;
    }
    else
    {
      sub_100061B40(v28, (uint64_t)&v43);
      swift_bridgeObjectRetain();
    }
    Hasher.init(_seed:)();
    String.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v31 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v11 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v32) & ~*(void *)(v11 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v11 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v14 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    unint64_t v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
    *unint64_t v15 = v27;
    v15[1] = v26;
    uint64_t v16 = *(void *)(v7 + 56) + 40 * v14;
    long long v17 = v43;
    long long v18 = v44;
    *(void *)(v16 + 32) = v45;
    *(_OWORD *)uint64_t v16 = v17;
    *(_OWORD *)(v16 + 16) = v18;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  int64_t v22 = (void *)(v5 + 64);
  if ((v42 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v5 + 32);
  if (v38 >= 64) {
    bzero(v22, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v22 = -1 << v38;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

void sub_1000A0444(unint64_t a1, uint64_t a2)
{
  int64_t v3 = a1;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t v8 = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        Swift::Int v10 = *(void *)(a2 + 40);
        id v11 = *(id *)(*(void *)(a2 + 48) + 8 * v6);
        Swift::Int v12 = NSObject._rawHashValue(seed:)(v10);

        Swift::Int v13 = v12 & v7;
        if (v3 >= (uint64_t)v9)
        {
          if (v13 >= v9 && v3 >= v13)
          {
LABEL_16:
            uint64_t v16 = *(void *)(a2 + 48);
            long long v17 = (void *)(v16 + 8 * v3);
            long long v18 = (void *)(v16 + 8 * v6);
            if (v3 != v6 || v17 >= v18 + 1) {
              *long long v17 = *v18;
            }
            uint64_t v19 = *(void *)(a2 + 56);
            unint64_t v20 = (void *)(v19 + 8 * v3);
            int64_t v21 = (void *)(v19 + 8 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v20 >= v21 + 1))
            {
              *unint64_t v20 = *v21;
              int64_t v3 = v6;
            }
          }
        }
        else if (v13 >= v9 || v3 >= v13)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    int64_t v22 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v23 = *v22;
    uint64_t v24 = (-1 << v3) - 1;
  }
  else
  {
    int64_t v22 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    uint64_t v24 = *v22;
    uint64_t v23 = (-1 << a1) - 1;
  }
  *int64_t v22 = v24 & v23;
  uint64_t v25 = *(void *)(a2 + 16);
  BOOL v26 = __OFSUB__(v25, 1);
  uint64_t v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_1000A05F8(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        Swift::UInt v10 = *(void *)(*(void *)(a2 + 48) + 8 * v6);
        Hasher.init(_seed:)();
        Hasher._combine(_:)(v10);
        uint64_t result = Hasher._finalize()();
        unint64_t v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(a2 + 48);
          Swift::Int v13 = (void *)(v12 + 8 * v3);
          unint64_t v14 = (void *)(v12 + 8 * v6);
          if (v3 != v6 || v13 >= v14 + 1) {
            *Swift::Int v13 = *v14;
          }
          uint64_t v15 = *(void *)(a2 + 56);
          unint64_t v16 = v15 + 24 * v3;
          long long v17 = (long long *)(v15 + 24 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v16 >= (unint64_t)v17 + 24))
          {
            long long v9 = *v17;
            *(void *)(v16 + 16) = *((void *)v17 + 2);
            *(_OWORD *)unint64_t v16 = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    long long v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    long long v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  *long long v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1000A07C8(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        Hasher.init(_seed:)();
        swift_bridgeObjectRetain();
        String.hash(into:)();
        Swift::Int v11 = Hasher._finalize()();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v12 = v11 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v12 < v8) {
            goto LABEL_5;
          }
        }
        else if (v12 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v12)
        {
LABEL_11:
          uint64_t v13 = *(void *)(a2 + 48);
          unint64_t v14 = (_OWORD *)(v13 + 16 * v3);
          uint64_t v15 = (_OWORD *)(v13 + 16 * v6);
          if (v3 != v6 || v14 >= v15 + 1) {
            *unint64_t v14 = *v15;
          }
          uint64_t v16 = *(void *)(a2 + 56);
          unint64_t v17 = v16 + 40 * v3;
          long long v18 = (long long *)(v16 + 40 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v17 >= (unint64_t)v18 + 40))
          {
            long long v9 = *v18;
            long long v10 = v18[1];
            *(void *)(v17 + 32) = *((void *)v18 + 4);
            *(_OWORD *)unint64_t v17 = v9;
            *(_OWORD *)(v17 + 16) = v10;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v20 = *v19;
    uint64_t v21 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v21 = *v19;
    uint64_t v20 = (-1 << result) - 1;
  }
  uint64_t *v19 = v21 & v20;
  uint64_t v22 = *(void *)(a2 + 16);
  BOOL v23 = __OFSUB__(v22, 1);
  uint64_t v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

id sub_1000A09B4(uint64_t a1, void *a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = *v3;
  unint64_t v9 = sub_10009F254((uint64_t)a2);
  uint64_t v10 = *(void *)(v7 + 16);
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v13 = v8;
  uint64_t v14 = *(void *)(v7 + 24);
  if (v14 >= v12 && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v14 >= v12 && (a3 & 1) == 0)
  {
    sub_1000A142C();
LABEL_7:
    uint64_t v15 = (void *)*v4;
    if (v13)
    {
LABEL_8:
      uint64_t v16 = v15[7];
      id result = (id)swift_release();
      *(void *)(v16 + 8 * v9) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_10009FB38(v12, a3 & 1);
  unint64_t v18 = sub_10009F254((uint64_t)a2);
  if ((v13 & 1) != (v19 & 1))
  {
LABEL_17:
    sub_10002E1D8(0, &qword_1001614E8);
    id result = (id)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v9 = v18;
  uint64_t v15 = (void *)*v4;
  if (v13) {
    goto LABEL_8;
  }
LABEL_11:
  v15[(v9 >> 6) + 8] |= 1 << v9;
  uint64_t v20 = 8 * v9;
  *(void *)(v15[6] + v20) = a2;
  *(void *)(v15[7] + v20) = a1;
  uint64_t v21 = v15[2];
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (v22)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v15[2] = v23;

  return a2;
}

unint64_t sub_1000A0B28(char a1, uint64_t a2, uint64_t a3, Swift::UInt a4, char a5)
{
  unint64_t v6 = (void **)v5;
  uint64_t v12 = (void *)*v5;
  unint64_t v14 = sub_10009F298(a4);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a5 & 1) != 0)
  {
LABEL_7:
    uint64_t v20 = *v6;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7] + 24 * v14;
      unint64_t result = swift_bridgeObjectRelease();
      *(unsigned char *)uint64_t v21 = a1 & 1;
      *(void *)(v21 + 8) = a2;
      *(void *)(v21 + 16) = a3;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_1000A15D8();
    goto LABEL_7;
  }
  sub_10009FE10(v17, a5 & 1);
  unint64_t v23 = sub_10009F298(a4);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_15:
    type metadata accessor for CTSubscriptionSlot(0);
    unint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v14 = v23;
  uint64_t v20 = *v6;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:

  return sub_1000A0E08(v14, a4, a1 & 1, a2, a3, v20);
}

uint64_t sub_1000A0C78(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_10009F1DC(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_18;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1000A1794();
LABEL_7:
    char v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7] + 40 * v12;
      return sub_1000A3930(a1, v19);
    }
    goto LABEL_13;
  }
  sub_1000A010C(v15, a4 & 1);
  unint64_t v21 = sub_10009F1DC(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_19:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  char v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_13:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  unint64_t v23 = (uint64_t *)(v18[6] + 16 * v12);
  uint64_t *v23 = a2;
  v23[1] = a3;
  uint64_t v24 = v18[7] + 40 * v12;
  long long v25 = *(_OWORD *)a1;
  long long v26 = *(_OWORD *)(a1 + 16);
  *(void *)(v24 + 32) = *(void *)(a1 + 32);
  *(_OWORD *)uint64_t v24 = v25;
  *(_OWORD *)(v24 + 16) = v26;
  uint64_t v27 = v18[2];
  BOOL v28 = __OFADD__(v27, 1);
  uint64_t v29 = v27 + 1;
  if (v28)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v18[2] = v29;

  return swift_bridgeObjectRetain();
}

unint64_t sub_1000A0E08(unint64_t result, uint64_t a2, char a3, uint64_t a4, uint64_t a5, void *a6)
{
  a6[(result >> 6) + 8] |= 1 << result;
  *(void *)(a6[6] + 8 * result) = a2;
  uint64_t v6 = a6[7] + 24 * result;
  *(unsigned char *)uint64_t v6 = a3;
  *(void *)(v6 + 8) = a4;
  *(void *)(v6 + 16) = a5;
  uint64_t v7 = a6[2];
  BOOL v8 = __OFADD__(v7, 1);
  uint64_t v9 = v7 + 1;
  if (v8) {
    __break(1u);
  }
  else {
    a6[2] = v9;
  }
  return result;
}

void *sub_1000A0E58()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for PrimarySettingsListItemModel();
  uint64_t v29 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for PrimarySettingsListItemIdentifier();
  uint64_t v28 = *(void *)(v5 - 8);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100046B9C(&qword_100161598);
  uint64_t v8 = *v0;
  uint64_t v9 = static _DictionaryStorage.copy(original:)();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_25:
    *uint64_t v1 = v10;
    return result;
  }
  uint64_t v27 = v1;
  uint64_t result = (void *)(v9 + 64);
  uint64_t v12 = v8 + 64;
  unint64_t v13 = (unint64_t)((1 << *(unsigned char *)(v10 + 32)) + 63) >> 6;
  if (v10 != v8 || (unint64_t)result >= v12 + 8 * v13) {
    uint64_t result = memmove(result, (const void *)(v8 + 64), 8 * v13);
  }
  int64_t v14 = 0;
  *(void *)(v10 + 16) = *(void *)(v8 + 16);
  uint64_t v15 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & *(void *)(v8 + 64);
  int64_t v18 = (unint64_t)(v15 + 63) >> 6;
  while (1)
  {
    if (v17)
    {
      unint64_t v19 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v20 = v19 | (v14 << 6);
      goto LABEL_9;
    }
    int64_t v23 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v23 >= v18) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v12 + 8 * v23);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v23 + 1;
      if (v23 + 1 >= v18) {
        goto LABEL_23;
      }
      unint64_t v24 = *(void *)(v12 + 8 * v14);
      if (!v24) {
        break;
      }
    }
LABEL_22:
    unint64_t v17 = (v24 - 1) & v24;
    unint64_t v20 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_9:
    unint64_t v21 = *(void *)(v28 + 72) * v20;
    sub_1000A4650(*(void *)(v8 + 48) + v21, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
    unint64_t v22 = *(void *)(v29 + 72) * v20;
    sub_1000A4650(*(void *)(v8 + 56) + v22, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
    sub_1000A398C((uint64_t)v7, *(void *)(v10 + 48) + v21, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
    uint64_t result = (void *)sub_1000A398C((uint64_t)v4, *(void *)(v10 + 56) + v22, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v18)
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v27;
    goto LABEL_25;
  }
  unint64_t v24 = *(void *)(v12 + 8 * v25);
  if (v24)
  {
    int64_t v14 = v25;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v14 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v14 >= v18) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v12 + 8 * v14);
    ++v25;
    if (v24) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_1000A1188()
{
  uint64_t v1 = type metadata accessor for PrimarySettingsListSectionModel();
  uint64_t v28 = *(void *)(v1 - 8);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100046B9C(&qword_100161590);
  int64_t v25 = v0;
  uint64_t v4 = *v0;
  uint64_t v5 = static _DictionaryStorage.copy(original:)();
  uint64_t v6 = v5;
  if (!*(void *)(v4 + 16))
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    *int64_t v25 = v6;
    return result;
  }
  uint64_t result = (void *)(v5 + 64);
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v6 + 32)) + 63) >> 6;
  if (v6 != v4 || (unint64_t)result >= v4 + 64 + 8 * v8) {
    uint64_t result = memmove(result, (const void *)(v4 + 64), 8 * v8);
  }
  uint64_t v26 = v4 + 64;
  int64_t v9 = 0;
  *(void *)(v6 + 16) = *(void *)(v4 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v4 + 64);
  int64_t v27 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v13 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v14 = v13 | (v9 << 6);
      goto LABEL_9;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v22 >= v27) {
      goto LABEL_23;
    }
    unint64_t v23 = *(void *)(v26 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v27) {
        goto LABEL_23;
      }
      unint64_t v23 = *(void *)(v26 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_22:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v14 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_9:
    uint64_t v15 = 24 * v14;
    uint64_t v16 = *(void *)(v4 + 48) + 24 * v14;
    uint64_t v17 = *(void *)v16;
    uint64_t v18 = *(void *)(v16 + 8);
    unint64_t v19 = *(void *)(v28 + 72) * v14;
    unsigned __int8 v20 = *(unsigned char *)(v16 + 16);
    sub_1000A4650(*(void *)(v4 + 56) + v19, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListSectionModel);
    uint64_t v21 = *(void *)(v6 + 48) + v15;
    *(void *)uint64_t v21 = v17;
    *(void *)(v21 + 8) = v18;
    *(unsigned char *)(v21 + 16) = v20;
    sub_1000A398C((uint64_t)v3, *(void *)(v6 + 56) + v19, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListSectionModel);
    uint64_t result = (void *)sub_10003DA14(v17, v18, v20);
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v27) {
    goto LABEL_23;
  }
  unint64_t v23 = *(void *)(v26 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v27) {
      goto LABEL_23;
    }
    unint64_t v23 = *(void *)(v26 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_1000A142C()
{
  uint64_t v1 = v0;
  sub_100046B9C(&qword_1001614E0);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(void *)(*(void *)(v4 + 56) + v16) = v18;
    id v19 = v17;
    uint64_t result = (void *)swift_retain();
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1000A15D8()
{
  uint64_t v1 = v0;
  sub_100046B9C(&qword_100162520);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v13) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      int64_t v9 = v24 + 1;
      if (v24 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v25 = *(void *)(v6 + 8 * v9);
      if (!v25) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v25 - 1) & v25;
    unint64_t v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 24 * v15;
    uint64_t v19 = *(void *)(v2 + 56) + v18;
    char v20 = *(unsigned char *)v19;
    uint64_t v22 = *(void *)(v19 + 8);
    uint64_t v21 = *(void *)(v19 + 16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    uint64_t v23 = *(void *)(v4 + 56) + v18;
    *(unsigned char *)uint64_t v23 = v20;
    *(void *)(v23 + 8) = v22;
    *(void *)(v23 + 16) = v21;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v13) {
    goto LABEL_26;
  }
  unint64_t v25 = *(void *)(v6 + 8 * v26);
  if (v25)
  {
    int64_t v9 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v9);
    ++v26;
    if (v25) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1000A1794()
{
  uint64_t v1 = v0;
  sub_100046B9C(&qword_100161570);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_28:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v28 = v1;
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v25 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      int64_t v9 = v25 + 1;
      if (v25 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v6 + 8 * v9);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v26 - 1) & v26;
    unint64_t v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 40 * v15;
    sub_100061B40(*(void *)(v2 + 56) + 40 * v15, (uint64_t)v29);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    void *v21 = v19;
    v21[1] = v18;
    uint64_t v22 = *(void *)(v4 + 56) + v20;
    uint64_t v23 = v30;
    long long v24 = v29[1];
    *(_OWORD *)uint64_t v22 = v29[0];
    *(_OWORD *)(v22 + 16) = v24;
    *(void *)(v22 + 32) = v23;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v13)
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v28;
    goto LABEL_28;
  }
  unint64_t v26 = *(void *)(v6 + 8 * v27);
  if (v26)
  {
    int64_t v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v9);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1000A198C(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  int64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_100027924(&qword_100161540, (void (*)(uint64_t))&type metadata accessor for URL);
  swift_bridgeObjectRetain();
  unint64_t v33 = a2;
  uint64_t v11 = dispatch thunk of Hashable._rawHashValue(seed:)();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    uint64_t v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    unint64_t v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    uint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      uint64_t v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_100027924(&qword_100161548, (void (*)(uint64_t))&type metadata accessor for URL);
      char v21 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      unint64_t v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    long long v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1000A238C((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_1000A1CB0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100046B9C(&qword_100161660);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      unint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      Hasher.init(_seed:)();
      String.hash(into:)();
      uint64_t result = Hasher._finalize()();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      unint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *unint64_t v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1000A1F90()
{
  uint64_t v1 = v0;
  uint64_t v42 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  sub_100046B9C(&qword_100161550);
  uint64_t v5 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    uint64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    unint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    unint64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      unint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_100027924(&qword_100161540, (void (*)(uint64_t))&type metadata accessor for URL);
      uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v6;
  return result;
}

uint64_t sub_1000A238C(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  unint64_t v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_1000A1F90();
  }
  else
  {
    if (v11 > v10)
    {
      sub_1000A27E0();
      goto LABEL_12;
    }
    sub_1000A2D34();
  }
  uint64_t v12 = *v3;
  sub_100027924(&qword_100161540, (void (*)(uint64_t))&type metadata accessor for URL);
  uint64_t v13 = dispatch thunk of Hashable._rawHashValue(seed:)();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    int64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    unint64_t v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_100027924(&qword_100161548, (void (*)(uint64_t))&type metadata accessor for URL);
      char v21 = dispatch thunk of static Equatable.== infix(_:_:)();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

void *sub_1000A262C()
{
  uint64_t v1 = v0;
  sub_100046B9C(&qword_100161660);
  uint64_t v2 = *v0;
  uint64_t v3 = static _SetStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    int64_t v19 = (void *)(*(void *)(v4 + 48) + v16);
    void *v19 = *v17;
    v19[1] = v18;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1000A27E0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100046B9C(&qword_100161550);
  uint64_t v6 = *v0;
  uint64_t v7 = static _SetStorage.copy(original:)();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_27:
    *uint64_t v1 = v8;
    return result;
  }
  int64_t v22 = v1;
  uint64_t result = (void *)(v7 + 56);
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v10) {
    uint64_t result = memmove(result, (const void *)(v6 + 56), 8 * v10);
  }
  uint64_t v23 = v6 + 56;
  int64_t v11 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v6 + 56);
  int64_t v24 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      unint64_t v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v16 = v15 | (v11 << 6);
      goto LABEL_9;
    }
    int64_t v18 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v18 >= v24) {
      goto LABEL_25;
    }
    unint64_t v19 = *(void *)(v23 + 8 * v18);
    ++v11;
    if (!v19)
    {
      int64_t v11 = v18 + 1;
      if (v18 + 1 >= v24) {
        goto LABEL_25;
      }
      unint64_t v19 = *(void *)(v23 + 8 * v11);
      if (!v19)
      {
        int64_t v11 = v18 + 2;
        if (v18 + 2 >= v24) {
          goto LABEL_25;
        }
        unint64_t v19 = *(void *)(v23 + 8 * v11);
        if (!v19) {
          break;
        }
      }
    }
LABEL_24:
    unint64_t v14 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v11 << 6);
LABEL_9:
    unint64_t v17 = *(void *)(v3 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(void *)(v6 + 48) + v17, v2);
    uint64_t result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(void *)(v8 + 48) + v17, v5, v2);
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v24)
  {
LABEL_25:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v22;
    goto LABEL_27;
  }
  unint64_t v19 = *(void *)(v23 + 8 * v20);
  if (v19)
  {
    int64_t v11 = v20;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v11 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v11 >= v24) {
      goto LABEL_25;
    }
    unint64_t v19 = *(void *)(v23 + 8 * v11);
    ++v20;
    if (v19) {
      goto LABEL_24;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1000A2A84()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100046B9C(&qword_100161660);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    unint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    Hasher.init(_seed:)();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    uint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    *uint64_t v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1000A2D34()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_100046B9C(&qword_100161550);
  uint64_t v7 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  unint64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_100027924(&qword_100161540, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t (*sub_1000A30E4(void (**a1)(id *), unint64_t a2, uint64_t a3))()
{
  uint64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1000A3200(v6, a2, a3);
  return sub_1000A314C;
}

uint64_t (*sub_1000A3150(void (**a1)(id *a1), unint64_t a2, uint64_t a3))()
{
  uint64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1000A3280(v6, a2, a3);
  return sub_1000A314C;
}

void sub_1000A31B8(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

void (*sub_1000A3200(void (*result)(id *), unint64_t a2, uint64_t a3))(id *)
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return sub_1000A4A40;
  }
  __break(1u);
  return result;
}

void (*sub_1000A3280(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return sub_1000A3300;
  }
  __break(1u);
  return result;
}

void sub_1000A3300(id *a1)
{
}

void *sub_1000A3308(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v32 = a4;
  uint64_t v33 = a5;
  uint64_t v30 = a2;
  uint64_t v31 = a3;
  uint64_t v7 = sub_100046B9C(&qword_100161518);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = type metadata accessor for SearchResult();
  uint64_t v25 = *(void *)(v29 - 8);
  uint64_t v10 = __chkstk_darwin(v29);
  uint64_t v28 = (uint64_t)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v24 = (uint64_t)&v24 - v12;
  if (a1 >> 62) {
    goto LABEL_20;
  }
  uint64_t v13 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v13; uint64_t v13 = _CocoaArrayWrapper.endIndex.getter())
  {
    unint64_t v27 = a1 & 0xC000000000000001;
    unint64_t v14 = _swiftEmptyArrayStorage;
    unint64_t v15 = (unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
    uint64_t v16 = 4;
    unint64_t v26 = a1;
    while (1)
    {
      id v18 = v27 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(a1 + 8 * v16);
      unint64_t v19 = v18;
      a1 = v16 - 3;
      if (__OFADD__(v16 - 4, 1)) {
        break;
      }
      id v34 = v18;
      sub_10009C188(&v34, v32, v33, (uint64_t)v9);
      if (v5)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        return v14;
      }

      if ((*v15)(v9, 1, v29) == 1)
      {
        sub_10003F5D0((uint64_t)v9, &qword_100161518);
      }
      else
      {
        uint64_t v20 = v24;
        sub_1000A398C((uint64_t)v9, v24, (uint64_t (*)(void))type metadata accessor for SearchResult);
        sub_1000A398C(v20, v28, (uint64_t (*)(void))type metadata accessor for SearchResult);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v14 = (void *)sub_10005997C(0, v14[2] + 1, 1, (unint64_t)v14, (uint64_t *)&unk_100161520, (uint64_t (*)(void))type metadata accessor for SearchResult, (uint64_t (*)(void))type metadata accessor for SearchResult);
        }
        unint64_t v22 = v14[2];
        unint64_t v21 = v14[3];
        if (v22 >= v21 >> 1) {
          unint64_t v14 = (void *)sub_10005997C(v21 > 1, v22 + 1, 1, (unint64_t)v14, (uint64_t *)&unk_100161520, (uint64_t (*)(void))type metadata accessor for SearchResult, (uint64_t (*)(void))type metadata accessor for SearchResult);
        }
        v14[2] = v22 + 1;
        sub_1000A398C(v28, (uint64_t)v14+ ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80))+ *(void *)(v25 + 72) * v22, (uint64_t (*)(void))type metadata accessor for SearchResult);
      }
      ++v16;
      BOOL v17 = a1 == v13;
      a1 = v26;
      if (v17)
      {
        swift_bridgeObjectRelease();
        return v14;
      }
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

uint64_t sub_1000A36B8()
{
  uint64_t v1 = *(void *)(type metadata accessor for SearchResultSection() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  swift_release();
  type metadata accessor for PrimarySettingsListItemIdentifier();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
      uint64_t v5 = type metadata accessor for FLFollowUpInformation();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v0 + v3, v5);
      break;
    case 2u:
      uint64_t v6 = type metadata accessor for FLFollowUpInformation();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
      sub_100046B9C(&qword_10015F7F8);
      goto LABEL_4;
    case 3u:
    case 4u:
    case 5u:
LABEL_4:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_1000A386C()
{
  uint64_t v1 = *(void *)(type metadata accessor for SearchResultSection() - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_10009D96C(v2, v3);
}

uint64_t sub_1000A38D0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1000A3930(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1000A398C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

id sub_1000A39F4()
{
  id v0 = [self defaultWorkspace];
  if (!v0) {
    __break(1u);
  }
  uint64_t v1 = v0;
  v18[0] = 0;
  v17[0] = 0;
  [v0 getKnowledgeUUID:v18 andSequenceNumber:v17];

  id v2 = v18[0];
  id v19 = v17[0];
  id v20 = v18[0];
  uint64_t v3 = qword_10015F150;
  id v4 = v17[0];
  id v5 = v2;
  if (v3 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_1000477B0(v6, (uint64_t)qword_10016AFE0);
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 138412546;
    swift_beginAccess();
    id v11 = v20;
    if (v20)
    {
      v18[0] = v20;
      id v12 = v20;
    }
    else
    {
      v18[0] = 0;
    }
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v10 = v11;
    *(_WORD *)(v9 + 12) = 2112;
    swift_beginAccess();
    id v13 = v19;
    if (v19)
    {
      v18[0] = v19;
      id v14 = v19;
    }
    else
    {
      v18[0] = 0;
    }
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v10[1] = v13;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "LS knowledgeUUID: %@ sequenceNumber: %@", (uint8_t *)v9, 0x16u);
    sub_100046B9C((uint64_t *)&unk_100163570);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  swift_beginAccess();
  id v15 = v20;
  if (!v20)
  {
    id v15 = v19;
LABEL_16:

    return 0;
  }
  swift_beginAccess();
  if (!v19) {
    goto LABEL_16;
  }
  return v15;
}

uint64_t sub_1000A3CDC()
{
  return _swift_task_switch(sub_1000A3CF8, 0, 0);
}

uint64_t sub_1000A3CF8()
{
  if (qword_10015F150 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_1000477B0(v1, (uint64_t)qword_10016AFE0);
  id v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v2, v3))
  {
    id v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "indexLinkMetadata", v4, 2u);
    swift_slowDealloc();
  }

  type metadata accessor for LinkMetadataIndexer();
  static LinkMetadataIndexer.shared.getter();
  dispatch thunk of LinkMetadataIndexer.donateToSpotlight()();
  swift_release();
  id v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

void sub_1000A3E2C()
{
  id v0 = sub_1000A39F4();
  if (v0)
  {
    id v2 = v0;
    os_log_type_t v3 = v1;
    id v4 = self;
    id v5 = [v4 standardUserDefaults];
    NSString v6 = [v2 UUIDString];
    if (!v6)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v6 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    NSString v7 = String._bridgeToObjectiveC()();
    [v5 setObject:v6 forKey:v7];

    id v8 = [v4 standardUserDefaults];
    id v9 = v3;
    NSString v10 = String._bridgeToObjectiveC()();
    [v8 setObject:v9 forKey:v10];
  }
}

uint64_t sub_1000A3FC0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 72 * a1 + 32;
    unint64_t v6 = a3 + 72 * v4;
    if (v5 >= v6 || v5 + 72 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000A40B8()
{
  return sub_1000A4490((void (*)(void))&_swift_unknownObjectRelease, (void (*)(void))&_swift_release);
}

uint64_t sub_1000A40E4()
{
  uint64_t v2 = *(void *)(v0 + 32);
  os_log_type_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *os_log_type_t v3 = v1;
  v3[1] = sub_10000ADF0;
  v3[8] = v2;
  return _swift_task_switch(sub_1000979DC, 0, 0);
}

uint64_t sub_1000A4198()
{
  return sub_1000A4490((void (*)(void))&_swift_unknownObjectRelease, (void (*)(void))&_swift_release);
}

uint64_t sub_1000A41C4()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10000ADF0;
  return _swift_task_switch(sub_10009A3DC, 0, 0);
}

uint64_t sub_1000A4268()
{
  *(void *)(*(void *)(v0 + 16) + 16) = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000A42A4()
{
  return sub_1000A4490((void (*)(void))&_swift_unknownObjectRelease, (void (*)(void))&_swift_release);
}

uint64_t sub_1000A42D0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  NSString v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  void *v7 = v2;
  v7[1] = sub_10007B630;
  return sub_100099CF4(a1, v4, v5, v6);
}

uint64_t sub_1000A4384()
{
  return sub_1000A4490((void (*)(void))&_swift_unknownObjectRelease, (void (*)(void))&_swift_release);
}

uint64_t sub_1000A43B0()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10007B630;
  return _swift_task_switch(sub_10009A3DC, 0, 0);
}

uint64_t sub_1000A4454(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_1000A4464()
{
  return sub_1000A4490((void (*)(void))&_swift_release, (void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_1000A4490(void (*a1)(void), void (*a2)(void))
{
  a1(*(void *)(v2 + 16));
  a2(*(void *)(v2 + 32));

  return _swift_deallocObject(v2, 40, 7);
}

uint64_t sub_1000A44E8()
{
  return sub_10009E2C4(v0[2], v0[3], v0[4]);
}

uint64_t sub_1000A44F4()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1000A453C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_10000ADF0;
  return sub_10009E428(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1000A4604()
{
  uint64_t v1 = *(void *)(v0 + 16);
  char v2 = *(unsigned char *)(v0 + 24);
  uint64_t result = sub_100096DF4(v2);
  *(unsigned char *)(v1 + 81) = v2;
  return result;
}

uint64_t sub_1000A4648()
{
  return sub_10009EA8C();
}

uint64_t sub_1000A4650(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000A46B8()
{
  uint64_t v1 = type metadata accessor for SearchResult();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v5 = v0 + v3;
  type metadata accessor for PrimarySettingsListItemIdentifier();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
      uint64_t v6 = type metadata accessor for FLFollowUpInformation();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
      break;
    case 2u:
      uint64_t v7 = type metadata accessor for FLFollowUpInformation();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v0 + v3, v7);
      sub_100046B9C(&qword_10015F7F8);
      goto LABEL_4;
    case 3u:
    case 4u:
    case 5u:
LABEL_4:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }
  uint64_t v8 = v3 + v4;
  uint64_t v9 = v5 + *(int *)(v1 + 20);
  uint64_t v10 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100046F04(*(void **)(v5 + *(int *)(v1 + 36)), *(void *)(v5 + *(int *)(v1 + 36) + 8), *(unsigned char *)(v5 + *(int *)(v1 + 36) + 16));

  return _swift_deallocObject(v0, v8, v2 | 7);
}

uint64_t sub_1000A48DC(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for SearchResult() - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_10000ADF0;
  return sub_10009AC40(a1, v5, v6, v7, v8);
}

uint64_t sub_1000A49D8()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1000A4A10()
{
  return sub_10009ED34();
}

void sub_1000A4A28()
{
}

uint64_t sub_1000A4A44()
{
  uint64_t v1 = (void *)(v0 + OBJC_IVAR____TtC11SettingsApp24ClassKitListItemProvider_cancellables);
  swift_beginAccess();
  uint64_t v2 = *v1;
  id v19 = v1;
  uint64_t v20 = v0;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for AnyCancellable();
    sub_1000553C0((unint64_t *)&qword_100161650, (void (*)(uint64_t))&type metadata accessor for AnyCancellable);
    uint64_t result = Set.Iterator.init(_cocoa:)();
    uint64_t v2 = v22;
    uint64_t v4 = v23;
    uint64_t v5 = v24;
    uint64_t v6 = v25;
    unint64_t v7 = v26;
  }
  else
  {
    uint64_t v8 = -1 << *(unsigned char *)(v2 + 32);
    uint64_t v4 = v2 + 56;
    uint64_t v5 = ~v8;
    uint64_t v9 = -v8;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v7 = v10 & *(void *)(v2 + 56);
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v6 = 0;
  }
  int64_t v11 = (unint64_t)(v5 + 64) >> 6;
  if (v2 < 0) {
    goto LABEL_10;
  }
  while (1)
  {
    if (v7)
    {
      uint64_t v12 = (v7 - 1) & v7;
      unint64_t v13 = __clz(__rbit64(v7)) | (v6 << 6);
      uint64_t v14 = v6;
      goto LABEL_27;
    }
    int64_t v15 = v6 + 1;
    if (__OFADD__(v6, 1)) {
      break;
    }
    if (v15 >= v11) {
      goto LABEL_30;
    }
    unint64_t v16 = *(void *)(v4 + 8 * v15);
    uint64_t v14 = v6 + 1;
    if (!v16)
    {
      uint64_t v14 = v6 + 2;
      if (v6 + 2 >= v11) {
        goto LABEL_30;
      }
      unint64_t v16 = *(void *)(v4 + 8 * v14);
      if (!v16)
      {
        uint64_t v14 = v6 + 3;
        if (v6 + 3 >= v11) {
          goto LABEL_30;
        }
        unint64_t v16 = *(void *)(v4 + 8 * v14);
        if (!v16)
        {
          uint64_t v14 = v6 + 4;
          if (v6 + 4 >= v11) {
            goto LABEL_30;
          }
          unint64_t v16 = *(void *)(v4 + 8 * v14);
          if (!v16)
          {
            uint64_t v17 = v6 + 5;
            while (v11 != v17)
            {
              unint64_t v16 = *(void *)(v4 + 8 * v17++);
              if (v16)
              {
                uint64_t v14 = v17 - 1;
                goto LABEL_26;
              }
            }
LABEL_30:
            sub_1000653C0();
            void *v19 = &_swiftEmptySetSingleton;
            swift_bridgeObjectRelease();
            sub_100045F84(v20 + OBJC_IVAR____TtC11SettingsApp24ClassKitListItemProvider_id);
            swift_bridgeObjectRelease();
            sub_100042A1C(v20 + OBJC_IVAR____TtC11SettingsApp24ClassKitListItemProvider_invalidator);
            return v20;
          }
        }
      }
    }
LABEL_26:
    uint64_t v12 = (v16 - 1) & v16;
    unint64_t v13 = __clz(__rbit64(v16)) + (v14 << 6);
LABEL_27:
    uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v13);
    swift_retain();
    if (!v18) {
      goto LABEL_30;
    }
    while (1)
    {
      AnyCancellable.cancel()();
      uint64_t result = swift_release();
      uint64_t v6 = v14;
      unint64_t v7 = v12;
      if ((v2 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_10:
      if (__CocoaSet.Iterator.next()())
      {
        type metadata accessor for AnyCancellable();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        swift_unknownObjectRelease();
        uint64_t v14 = v6;
        uint64_t v12 = v7;
        if (v21) {
          continue;
        }
      }
      goto LABEL_30;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1000A4D30()
{
  sub_1000A4A44();

  return swift_deallocClassInstance();
}

uint64_t sub_1000A4D88()
{
  return type metadata accessor for ClassKitListItemProvider();
}

uint64_t sub_1000A4D90@<X0>(uint64_t a1@<X8>)
{
  return sub_100046BE0(*v1 + OBJC_IVAR____TtC11SettingsApp24ClassKitListItemProvider_id, a1);
}

uint64_t sub_1000A4DA8()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000A4DE0()
{
  swift_release();

  return _swift_deallocObject(v0, 25, 7);
}

uint64_t sub_1000A4E18()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v18 = v0;
  if ((v1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for AnyCancellable();
    sub_100055408((unint64_t *)&qword_100161650, (void (*)(uint64_t))&type metadata accessor for AnyCancellable);
    uint64_t result = Set.Iterator.init(_cocoa:)();
    uint64_t v1 = v20;
    uint64_t v3 = v21;
    uint64_t v4 = v22;
    uint64_t v5 = v23;
    unint64_t v6 = v24;
  }
  else
  {
    uint64_t v7 = -1 << *(unsigned char *)(v1 + 32);
    uint64_t v3 = v1 + 56;
    uint64_t v4 = ~v7;
    uint64_t v8 = -v7;
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v6 = v9 & *(void *)(v1 + 56);
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v5 = 0;
  }
  int64_t v10 = (unint64_t)(v4 + 64) >> 6;
  if (v1 < 0) {
    goto LABEL_10;
  }
  while (1)
  {
    if (v6)
    {
      uint64_t v11 = (v6 - 1) & v6;
      unint64_t v12 = __clz(__rbit64(v6)) | (v5 << 6);
      uint64_t v13 = v5;
      goto LABEL_27;
    }
    int64_t v14 = v5 + 1;
    if (__OFADD__(v5, 1)) {
      break;
    }
    if (v14 >= v10) {
      goto LABEL_30;
    }
    unint64_t v15 = *(void *)(v3 + 8 * v14);
    uint64_t v13 = v5 + 1;
    if (!v15)
    {
      uint64_t v13 = v5 + 2;
      if (v5 + 2 >= v10) {
        goto LABEL_30;
      }
      unint64_t v15 = *(void *)(v3 + 8 * v13);
      if (!v15)
      {
        uint64_t v13 = v5 + 3;
        if (v5 + 3 >= v10) {
          goto LABEL_30;
        }
        unint64_t v15 = *(void *)(v3 + 8 * v13);
        if (!v15)
        {
          uint64_t v13 = v5 + 4;
          if (v5 + 4 >= v10) {
            goto LABEL_30;
          }
          unint64_t v15 = *(void *)(v3 + 8 * v13);
          if (!v15)
          {
            uint64_t v16 = v5 + 5;
            while (v10 != v16)
            {
              unint64_t v15 = *(void *)(v3 + 8 * v16++);
              if (v15)
              {
                uint64_t v13 = v16 - 1;
                goto LABEL_26;
              }
            }
LABEL_30:
            sub_1000653C0();
            *(void *)(v18 + 16) = &_swiftEmptySetSingleton;
            swift_bridgeObjectRelease();
            sub_100045F84(v18 + OBJC_IVAR____TtC11SettingsApp38PaymentsAndContactlessListItemProvider_id);
            sub_100042A1C(v18 + OBJC_IVAR____TtC11SettingsApp38PaymentsAndContactlessListItemProvider_invalidator);
            objc_release(*(id *)(v18
                               + OBJC_IVAR____TtC11SettingsApp38PaymentsAndContactlessListItemProvider_appSettingsContext));
            return v18;
          }
        }
      }
    }
LABEL_26:
    uint64_t v11 = (v15 - 1) & v15;
    unint64_t v12 = __clz(__rbit64(v15)) + (v13 << 6);
LABEL_27:
    uint64_t v17 = *(void *)(*(void *)(v1 + 48) + 8 * v12);
    swift_retain();
    if (!v17) {
      goto LABEL_30;
    }
    while (1)
    {
      AnyCancellable.cancel()();
      uint64_t result = swift_release();
      uint64_t v5 = v13;
      unint64_t v6 = v11;
      if ((v1 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_10:
      if (__CocoaSet.Iterator.next()())
      {
        type metadata accessor for AnyCancellable();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        swift_unknownObjectRelease();
        uint64_t v13 = v5;
        uint64_t v11 = v6;
        if (v19) {
          continue;
        }
      }
      goto LABEL_30;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1000A50FC()
{
  sub_1000A4E18();

  return swift_deallocClassInstance();
}

uint64_t sub_1000A5154()
{
  return type metadata accessor for PaymentsAndContactlessListItemProvider();
}

uint64_t type metadata accessor for PaymentsAndContactlessListItemProvider()
{
  uint64_t result = qword_1001617E0;
  if (!qword_1001617E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000A51A8()
{
  uint64_t result = type metadata accessor for PrimarySettingsListItemIdentifier();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void sub_1000A525C(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for PrimarySettingsListItemIdentifier();
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = [self sharedInstance];
  unsigned int v10 = [v9 launchHasCompleted];

  uint64_t v11 = OBJC_IVAR____TtC11SettingsApp38PaymentsAndContactlessListItemProvider_appSettingsContext;
  if (v10
    && !*(void *)(v3 + OBJC_IVAR____TtC11SettingsApp38PaymentsAndContactlessListItemProvider_appSettingsContext))
  {
    uint64_t v17 = swift_allocObject();
    swift_weakInit();
    aBlock[4] = sub_1000A6038;
    aBlock[5] = v17;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10002CC68;
    aBlock[3] = &unk_100153600;
    uint64_t v18 = _Block_copy(aBlock);
    uint64_t v19 = self;
    swift_retain();
    id v20 = [v19 contextWithBundleId:0 onChange:v18];
    _Block_release(v18);
    swift_release();
    swift_release();
    uint64_t v21 = *(void **)(v3 + v11);
    *(void *)(v3 + v11) = v20;

    uint64_t v11 = OBJC_IVAR____TtC11SettingsApp38PaymentsAndContactlessListItemProvider_appSettingsContext;
    unint64_t v12 = *(void **)(v3 + OBJC_IVAR____TtC11SettingsApp38PaymentsAndContactlessListItemProvider_appSettingsContext);
    if (!v12)
    {
LABEL_4:
      if (qword_10015F168 != -1) {
        swift_once();
      }
      uint64_t v13 = type metadata accessor for Logger();
      sub_1000477B0(v13, (uint64_t)qword_10016B028);
      int64_t v14 = Logger.logObject.getter();
      os_log_type_t v15 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v14, v15))
      {
        uint64_t v16 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v16 = 0;
        _os_log_impl((void *)&_mh_execute_header, v14, v15, "Payments & Contactless: appSettingsContext == nil", v16, 2u);
        swift_slowDealloc();
      }

      unint64_t v12 = *(void **)(v3 + v11);
      if (!v12) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    unint64_t v12 = *(void **)(v3 + OBJC_IVAR____TtC11SettingsApp38PaymentsAndContactlessListItemProvider_appSettingsContext);
    if (!v12) {
      goto LABEL_4;
    }
  }
  id v22 = v12;
  if ([v22 topLevelSettingsEntryType] == (id)1)
  {
    sub_100046BE0(v3 + OBJC_IVAR____TtC11SettingsApp38PaymentsAndContactlessListItemProvider_id, (uint64_t)v8);
    type metadata accessor for StaticPrimarySettingsListItemProvider();
    uint64_t v23 = swift_allocObject();
    sub_10004984C((uint64_t)v8, v23 + OBJC_IVAR____TtC11SettingsApp37StaticPrimarySettingsListItemProvider_id);
    sub_10003FF84(a1, a2);
    swift_setDeallocating();
    sub_100045F84(v23 + OBJC_IVAR____TtC11SettingsApp37StaticPrimarySettingsListItemProvider_id);
    swift_deallocClassInstance();

    goto LABEL_19;
  }

LABEL_14:
  if (qword_10015F168 != -1) {
    swift_once();
  }
  uint64_t v24 = type metadata accessor for Logger();
  sub_1000477B0(v24, (uint64_t)qword_10016B028);
  uint64_t v25 = Logger.logObject.getter();
  os_log_type_t v26 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v25, v26))
  {
    unint64_t v27 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v27 = 0;
    _os_log_impl((void *)&_mh_execute_header, v25, v26, "Payments & Contactless: appSettingsContext != .sesnfcAppTopLevelSettingsEntryTypePaymentContactless", v27, 2u);
    swift_slowDealloc();
  }

  uint64_t v28 = type metadata accessor for PrimarySettingsListItemModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(a2, 1, 1, v28);
LABEL_19:
  sub_1000A56B8(v3);
}

void sub_1000A56B8(uint64_t a1)
{
  uint64_t v2 = sub_100046B9C((uint64_t *)&unk_100163BC0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for NSNotificationCenter.Publisher();
  uint64_t v25 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100046B9C(&qword_100161798);
  uint64_t v24 = *(void **)(v8 - 8);
  __chkstk_darwin(v8);
  unsigned int v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = [self sharedInstance];
  unsigned int v12 = [v11 launchHasCompleted];

  if (v12)
  {
    swift_beginAccess();
    uint64_t v13 = *(void *)(a1 + 16);
    if ((v13 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      uint64_t v14 = __CocoaSet.count.getter();
      swift_bridgeObjectRelease();
      if (v14) {
        return;
      }
      goto LABEL_4;
    }
    if (!*(void *)(v13 + 16))
    {
LABEL_4:
      id v23 = self;
      id v15 = [v23 defaultCenter];
      NSNotificationCenter.publisher(for:object:)();

      void v19[2] = sub_100055498();
      id v26 = (id)static OS_dispatch_queue.main.getter();
      uint64_t v21 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
      uint64_t v16 = *(void *)(v21 - 8);
      id v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
      uint64_t v22 = v16 + 56;
      v20(v4, 1, 1, v21);
      void v19[5] = sub_100055408(&qword_100163CE0, (void (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Publisher);
      unsigned char v19[4] = sub_100055408((unint64_t *)&qword_100163C00, (void (*)(uint64_t))sub_100055498);
      Publisher.receive<A>(on:options:)();
      sub_10005FB20((uint64_t)v4);

      v19[1] = a1 + 16;
      uint64_t v25 = *(void *)(v25 + 8);
      ((void (*)(char *, uint64_t))v25)(v7, v5);
      swift_allocObject();
      uint64_t v17 = v24;
      swift_weakInit();
      v19[3] = sub_100066854();
      Publisher<>.sink(receiveValue:)();
      swift_release();
      uint64_t v24 = (void *)v17[1];
      ((void (*)(char *, uint64_t))v24)(v10, v8);
      swift_beginAccess();
      AnyCancellable.store(in:)();
      swift_endAccess();
      swift_release();
      id v18 = [v23 defaultCenter];
      NSNotificationCenter.publisher(for:object:)();

      id v26 = (id)static OS_dispatch_queue.main.getter();
      v20(v4, 1, 1, v21);
      Publisher.receive<A>(on:options:)();
      sub_10005FB20((uint64_t)v4);

      ((void (*)(char *, uint64_t))v25)(v7, v5);
      swift_allocObject();
      swift_weakInit();
      Publisher<>.sink(receiveValue:)();
      swift_release();
      ((void (*)(char *, uint64_t))v24)(v10, v8);
      swift_beginAccess();
      AnyCancellable.store(in:)();
      swift_endAccess();
      swift_release();
    }
  }
}

uint64_t sub_1000A5C44(uint64_t a1)
{
  uint64_t v2 = sub_100046B9C(&qword_100164100);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  type metadata accessor for MainActor();
  swift_retain();
  uint64_t v6 = static MainActor.shared.getter();
  uint64_t v7 = (void *)swift_allocObject();
  _OWORD v7[2] = v6;
  _OWORD v7[3] = &protocol witness table for MainActor;
  _OWORD v7[4] = a1;
  sub_10000BA74((uint64_t)v4, (uint64_t)&unk_100161888, (uint64_t)v7);
  return swift_release();
}

uint64_t sub_1000A5D5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[10] = a1;
  v4[11] = a4;
  type metadata accessor for MainActor();
  v4[12] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1000A5DF4, v6, v5);
}

uint64_t sub_1000A5DF4()
{
  swift_release();
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  uint64_t v2 = Strong;
  if (Strong)
  {
    sub_1000620F8(Strong + OBJC_IVAR____TtC11SettingsApp38PaymentsAndContactlessListItemProvider_invalidator, v0 + 16);
    swift_release();
    sub_1000403E0((void *)(v0 + 16), *(void *)(v0 + 40));
    type metadata accessor for PrimarySettingsListModel();
    sub_100068CA8();
    sub_100042A1C(v0 + 16);
  }
  **(unsigned char **)(v0 + 80) = v2 == 0;
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_1000A5F14@<X0>(uint64_t a1@<X8>)
{
  return sub_100046BE0(*v1 + OBJC_IVAR____TtC11SettingsApp38PaymentsAndContactlessListItemProvider_id, a1);
}

uint64_t sub_1000A5F2C()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1000620F8(result + OBJC_IVAR____TtC11SettingsApp38PaymentsAndContactlessListItemProvider_invalidator, (uint64_t)v1);
    swift_release();
    sub_1000403E0(v1, v1[3]);
    type metadata accessor for PrimarySettingsListModel();
    sub_100068CA8();
    return sub_100042A1C((uint64_t)v1);
  }
  return result;
}

uint64_t sub_1000A6000()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000A6038()
{
  return sub_1000A5C44(v0);
}

uint64_t sub_1000A6040()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1000A6080(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  void *v7 = v2;
  v7[1] = sub_10007B630;
  return sub_1000A5D5C(a1, v4, v5, v6);
}

uint64_t sub_1000A6134()
{
  return sub_1000A5F2C();
}

uint64_t sub_1000A615C()
{
  return sub_1000A5F2C();
}

uint64_t sub_1000A6184()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v18 = v0;
  if ((v1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for AnyCancellable();
    sub_10006572C((unint64_t *)&qword_100161650, (void (*)(uint64_t))&type metadata accessor for AnyCancellable);
    uint64_t result = Set.Iterator.init(_cocoa:)();
    uint64_t v1 = v20;
    uint64_t v3 = v21;
    uint64_t v4 = v22;
    uint64_t v5 = v23;
    unint64_t v6 = v24;
  }
  else
  {
    uint64_t v7 = -1 << *(unsigned char *)(v1 + 32);
    uint64_t v3 = v1 + 56;
    uint64_t v4 = ~v7;
    uint64_t v8 = -v7;
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v6 = v9 & *(void *)(v1 + 56);
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v5 = 0;
  }
  int64_t v10 = (unint64_t)(v4 + 64) >> 6;
  if (v1 < 0) {
    goto LABEL_10;
  }
  while (1)
  {
    if (v6)
    {
      uint64_t v11 = (v6 - 1) & v6;
      unint64_t v12 = __clz(__rbit64(v6)) | (v5 << 6);
      uint64_t v13 = v5;
      goto LABEL_27;
    }
    int64_t v14 = v5 + 1;
    if (__OFADD__(v5, 1)) {
      break;
    }
    if (v14 >= v10) {
      goto LABEL_30;
    }
    unint64_t v15 = *(void *)(v3 + 8 * v14);
    uint64_t v13 = v5 + 1;
    if (!v15)
    {
      uint64_t v13 = v5 + 2;
      if (v5 + 2 >= v10) {
        goto LABEL_30;
      }
      unint64_t v15 = *(void *)(v3 + 8 * v13);
      if (!v15)
      {
        uint64_t v13 = v5 + 3;
        if (v5 + 3 >= v10) {
          goto LABEL_30;
        }
        unint64_t v15 = *(void *)(v3 + 8 * v13);
        if (!v15)
        {
          uint64_t v13 = v5 + 4;
          if (v5 + 4 >= v10) {
            goto LABEL_30;
          }
          unint64_t v15 = *(void *)(v3 + 8 * v13);
          if (!v15)
          {
            uint64_t v16 = v5 + 5;
            while (v10 != v16)
            {
              unint64_t v15 = *(void *)(v3 + 8 * v16++);
              if (v15)
              {
                uint64_t v13 = v16 - 1;
                goto LABEL_26;
              }
            }
LABEL_30:
            sub_1000653C0();
            *(void *)(v18 + 24) = &_swiftEmptySetSingleton;
            swift_bridgeObjectRelease();
            sub_10003DB4C(v18 + OBJC_IVAR____TtC11SettingsApp33WalletAndApplePayListItemProvider_id, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
            objc_release(*(id *)(v18
                               + OBJC_IVAR____TtC11SettingsApp33WalletAndApplePayListItemProvider_appSettingsContext));
            sub_100042A1C(v18 + OBJC_IVAR____TtC11SettingsApp33WalletAndApplePayListItemProvider_invalidator);
            return v18;
          }
        }
      }
    }
LABEL_26:
    uint64_t v11 = (v15 - 1) & v15;
    unint64_t v12 = __clz(__rbit64(v15)) + (v13 << 6);
LABEL_27:
    uint64_t v17 = *(void *)(*(void *)(v1 + 48) + 8 * v12);
    swift_retain();
    if (!v17) {
      goto LABEL_30;
    }
    while (1)
    {
      AnyCancellable.cancel()();
      uint64_t result = swift_release();
      uint64_t v5 = v13;
      unint64_t v6 = v11;
      if ((v1 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_10:
      if (__CocoaSet.Iterator.next()())
      {
        type metadata accessor for AnyCancellable();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        swift_unknownObjectRelease();
        uint64_t v13 = v5;
        uint64_t v11 = v6;
        if (v19) {
          continue;
        }
      }
      goto LABEL_30;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1000A647C()
{
  sub_1000A6184();

  return swift_deallocClassInstance();
}

uint64_t sub_1000A64D4()
{
  return type metadata accessor for WalletAndApplePayListItemProvider();
}

uint64_t getEnumTagSinglePayload for WalletAndApplePayListItemProvider.VisibilityStyle(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for WalletAndApplePayListItemProvider.VisibilityStyle(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000A6638);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WalletAndApplePayListItemProvider.VisibilityStyle()
{
  return &type metadata for WalletAndApplePayListItemProvider.VisibilityStyle;
}

unint64_t sub_1000A6674()
{
  unint64_t result = qword_100161970;
  if (!qword_100161970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_100161970);
  }
  return result;
}

uint64_t sub_1000A66C8(uint64_t a1)
{
  uint64_t v2 = sub_100046B9C(&qword_100164100);
  __chkstk_darwin(v2 - 8);
  unsigned int v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  type metadata accessor for MainActor();
  swift_retain();
  uint64_t v6 = static MainActor.shared.getter();
  BOOL v7 = (void *)swift_allocObject();
  _OWORD v7[2] = v6;
  _OWORD v7[3] = &protocol witness table for MainActor;
  _OWORD v7[4] = a1;
  sub_10000BA74((uint64_t)v4, (uint64_t)&unk_100161980, (uint64_t)v7);
  return swift_release();
}

uint64_t sub_1000A67E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a1;
  v4[6] = a4;
  type metadata accessor for MainActor();
  v4[7] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1000A6878, v6, v5);
}

uint64_t sub_1000A6878()
{
  swift_release();
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    sub_10001584C();
    swift_release();
  }
  **(unsigned char **)(v0 + 40) = Strong == 0;
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1000A6920@<X0>(uint64_t a1@<X8>)
{
  return sub_100057808(*v1 + OBJC_IVAR____TtC11SettingsApp33WalletAndApplePayListItemProvider_id, a1, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
}

uint64_t sub_1000A6960()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000A6998()
{
  return sub_1000A66C8(v0);
}

uint64_t sub_1000A69A0()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1000A69E0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  BOOL v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  void *v7 = v2;
  v7[1] = sub_10007B630;
  return sub_1000A67E0(a1, v4, v5, v6);
}

uint64_t sub_1000A6A94()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_10001584C();
    return swift_release();
  }
  return result;
}

uint64_t sub_1000A6AEC()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000A6B24()
{
  return sub_1000A6A94();
}

uint64_t destroy for ConnectedHeadphoneItem(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(a1 + 72))
  {
    return sub_100042A1C(a1 + 48);
  }
  return result;
}

uint64_t initializeWithCopy for ConnectedHeadphoneItem(uint64_t a1, void *a2)
{
  uint64_t v3 = a2[1];
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = a2[3];
  *(void *)(a1 + 16) = a2[2];
  *(void *)(a1 + 24) = v4;
  uint64_t v6 = (void *)a2[4];
  uint64_t v5 = a2[5];
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v5;
  BOOL v7 = a2 + 6;
  uint64_t v8 = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v9 = v6;
  swift_bridgeObjectRetain();
  if (v8)
  {
    *(void *)(a1 + 72) = v8;
    (**(void (***)(uint64_t, _OWORD *, uint64_t))(v8 - 8))(a1 + 48, v7, v8);
  }
  else
  {
    long long v10 = v7[1];
    *(_OWORD *)(a1 + 48) = *v7;
    *(_OWORD *)(a1 + 64) = v10;
  }
  return a1;
}

uint64_t assignWithCopy for ConnectedHeadphoneItem(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a2 + 32);
  uint64_t v5 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = v4;
  id v6 = v4;

  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 72);
  if (!*(void *)(a1 + 72))
  {
    if (v7)
    {
      *(void *)(a1 + 72) = v7;
      (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 48, a2 + 48);
      return a1;
    }
LABEL_7:
    long long v8 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v8;
    return a1;
  }
  if (!v7)
  {
    sub_100042A1C(a1 + 48);
    goto LABEL_7;
  }
  sub_1000A6D88((uint64_t *)(a1 + 48), (uint64_t *)(a2 + 48));
  return a1;
}

uint64_t *sub_1000A6D88(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        uint64_t result = (uint64_t *)swift_release();
        *uint64_t v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

__n128 initializeWithTake for ConnectedHeadphoneItem(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t assignWithTake for ConnectedHeadphoneItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);

  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 72)) {
    sub_100042A1C(a1 + 48);
  }
  long long v7 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v7;
  return a1;
}

uint64_t getEnumTagSinglePayload for ConnectedHeadphoneItem(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 80)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ConnectedHeadphoneItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ConnectedHeadphoneItem()
{
  return &type metadata for ConnectedHeadphoneItem;
}

unint64_t sub_1000A7108()
{
  unint64_t result = qword_100161990;
  if (!qword_100161990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100161990);
  }
  return result;
}

uint64_t sub_1000A715C@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

Swift::Int sub_1000A716C()
{
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  id v1 = *(id *)(v0 + 32);
  NSObject.hash(into:)();

  return Hasher._finalize()();
}

void sub_1000A720C()
{
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  id v1 = *(id *)(v0 + 32);
  NSObject.hash(into:)();
}

Swift::Int sub_1000A72B4()
{
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  id v1 = *(id *)(v0 + 32);
  NSObject.hash(into:)();

  return Hasher._finalize()();
}

BOOL sub_1000A7350()
{
  return StringProtocol.localizedCaseInsensitiveCompare<A>(_:)() == -1;
}

BOOL sub_1000A73B0()
{
  return StringProtocol.localizedCaseInsensitiveCompare<A>(_:)() != -1;
}

BOOL sub_1000A7410()
{
  return StringProtocol.localizedCaseInsensitiveCompare<A>(_:)() != -1;
}

BOOL sub_1000A7470()
{
  return StringProtocol.localizedCaseInsensitiveCompare<A>(_:)() == -1;
}

uint64_t sub_1000A74D0(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
  {
    sub_1000A763C(a1, (uint64_t)v14);
    sub_1000A763C(a2, (uint64_t)v11);
    goto LABEL_8;
  }
  char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
  sub_1000A763C(a1, (uint64_t)v14);
  sub_1000A763C(a2, (uint64_t)v11);
  if (v5)
  {
LABEL_8:
    if (v15 == v12 && v16 == v13)
    {
      sub_1000A7674((uint64_t)v14);
      sub_1000A7674((uint64_t)v11);
      sub_1000A763C(a1, (uint64_t)v10);
      sub_1000A763C(a2, (uint64_t)v9);
    }
    else
    {
      char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
      sub_1000A7674((uint64_t)v14);
      sub_1000A7674((uint64_t)v11);
      sub_1000A763C(a1, (uint64_t)v10);
      sub_1000A763C(a2, (uint64_t)v9);
      char v6 = 0;
      if ((v7 & 1) == 0) {
        goto LABEL_13;
      }
    }
    sub_10006E244();
    char v6 = static NSObject.== infix(_:_:)();
    goto LABEL_13;
  }
  sub_1000A7674((uint64_t)v14);
  sub_1000A7674((uint64_t)v11);
  sub_1000A763C(a1, (uint64_t)v10);
  sub_1000A763C(a2, (uint64_t)v9);
  char v6 = 0;
LABEL_13:
  sub_1000A7674((uint64_t)v10);
  sub_1000A7674((uint64_t)v9);
  return v6 & 1;
}

uint64_t sub_1000A763C(void *a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1000A7674(uint64_t a1)
{
  return a1;
}

void sub_1000A76A4(void *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v6 = *(void *)(v3 + 80);
  uint64_t v7 = *(void *)(v6 + 16);
  if (v7)
  {
    int v9 = (void *)(v6 + 32);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1000A763C(v9, (uint64_t)v22);
      BOOL v10 = *(void *)&v22[0] == a2 && *((void *)&v22[0] + 1) == a3;
      if (v10 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
        break;
      }
      sub_1000A7674((uint64_t)v22);
      v9 += 10;
      if (!--v7) {
        goto LABEL_14;
      }
    }
    long long v25 = v22[2];
    long long v26 = v22[3];
    long long v27 = v22[4];
    long long v23 = v22[0];
    long long v24 = v22[1];
    swift_bridgeObjectRelease();
    if (*((void *)&v23 + 1))
    {
      _OWORD v28[2] = v25;
      v29[0] = v26;
      v29[1] = v27;
      v28[0] = v23;
      v28[1] = v24;
      if (*((void *)&v25 + 1))
      {
        swift_bridgeObjectRetain();
        v11.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
      }
      else
      {
        v11.super.Class isa = 0;
      }
      [a1 setProperties:v11.super.isa];

      sub_1000A7B38((uint64_t)v29, (uint64_t)&v23);
      uint64_t v16 = *((void *)&v24 + 1);
      if (*((void *)&v24 + 1))
      {
        uint64_t v17 = sub_1000403E0(&v23, *((uint64_t *)&v24 + 1));
        uint64_t v18 = *(void *)(v16 - 8);
        __chkstk_darwin(v17);
        uint64_t v20 = (char *)v22 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v18 + 16))(v20);
        uint64_t v21 = _bridgeAnythingToObjectiveC<A>(_:)();
        (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v16);
        sub_100042A1C((uint64_t)&v23);
      }
      else
      {
        uint64_t v21 = 0;
      }
      [a1 setUserInfo:v21];
      swift_unknownObjectRelease();
      sub_1000A7674((uint64_t)v28);
      return;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_14:
    long long v26 = 0u;
    long long v27 = 0u;
    long long v24 = 0u;
    long long v25 = 0u;
    long long v23 = 0u;
    swift_bridgeObjectRelease();
  }
  sub_10003F5D0((uint64_t)&v23, &qword_100161A98);
  if (qword_10015F168 != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Logger();
  sub_1000477B0(v12, (uint64_t)qword_10016B028);
  swift_bridgeObjectRetain_n();
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    *(void *)&v28[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 141558275;
    *(void *)&long long v23 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 12) = 2081;
    swift_bridgeObjectRetain();
    *(void *)&long long v23 = sub_100042948(a2, a3, (uint64_t *)v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Could not find connected headphone item for identifier: %{private,mask.hash}s", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_1000A7AE4()
{
  sub_10003E2B4(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32));
  sub_100042A1C(v0 + 40);
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1000A7B38(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100046B9C(&qword_1001609A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000A7BA0()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000A7BD8()
{
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

char *sub_1000A7C18(char a1)
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = *(void **)(Strong + OBJC_IVAR____TtC11SettingsApp28AirplaneModeListItemProvider_airplaneModeController);
    id v4 = v3;
    unint64_t result = (char *)swift_release();
    if (!v3)
    {
      __break(1u);
      goto LABEL_11;
    }
    [v4 setAirplaneModeWithoutMirroring:a1 & 1];
  }
  swift_beginAccess();
  unint64_t result = (char *)swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  uint64_t v6 = result;
  unint64_t result = *(char **)&result[OBJC_IVAR____TtC11SettingsApp28AirplaneModeListItemProvider_airplaneModeController];
  if (!result)
  {
LABEL_11:
    __break(1u);
    return result;
  }
  unsigned int v7 = [result airplaneMode];
  char v8 = v7;
  uint64_t v9 = OBJC_IVAR____TtC11SettingsApp28AirplaneModeListItemProvider_airplaneMode;
  if (v7 != v6[OBJC_IVAR____TtC11SettingsApp28AirplaneModeListItemProvider_airplaneMode])
  {
    sub_1000403E0(&v6[OBJC_IVAR____TtC11SettingsApp28AirplaneModeListItemProvider_invalidator], *(void *)&v6[OBJC_IVAR____TtC11SettingsApp28AirplaneModeListItemProvider_invalidator + 24]);
    PassthroughSubject.send(_:)();
  }
  v6[v9] = v8;
  return (char *)swift_release();
}

id sub_1000A7D5C()
{
  id result = *(id *)(v0 + OBJC_IVAR____TtC11SettingsApp28AirplaneModeListItemProvider_airplaneModeController);
  if (result)
  {
    id result = [result airplaneMode];
    char v2 = (char)result;
    uint64_t v3 = OBJC_IVAR____TtC11SettingsApp28AirplaneModeListItemProvider_airplaneMode;
    if (result != *(unsigned __int8 *)(v0
                                              + OBJC_IVAR____TtC11SettingsApp28AirplaneModeListItemProvider_airplaneMode))
    {
      sub_1000403E0((void *)(v0 + OBJC_IVAR____TtC11SettingsApp28AirplaneModeListItemProvider_invalidator), *(void *)(v0 + OBJC_IVAR____TtC11SettingsApp28AirplaneModeListItemProvider_invalidator + 24));
      id result = (id)PassthroughSubject.send(_:)();
    }
    *(unsigned char *)(v0 + v3) = v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1000A7E0C()
{
  sub_100045F84(v0 + OBJC_IVAR____TtC11SettingsApp28AirplaneModeListItemProvider_id);
  sub_100042A1C(v0 + OBJC_IVAR____TtC11SettingsApp28AirplaneModeListItemProvider_invalidator);

  return swift_deallocClassInstance();
}

uint64_t sub_1000A7E90()
{
  return type metadata accessor for AirplaneModeListItemProvider();
}

uint64_t sub_1000A7E98@<X0>(uint64_t a1@<X8>)
{
  return sub_100046BE0(*v1 + OBJC_IVAR____TtC11SettingsApp28AirplaneModeListItemProvider_id, a1);
}

uint64_t sub_1000A7EEC()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

char *sub_1000A7F24(char a1)
{
  return sub_1000A7C18(a1);
}

uint64_t sub_1000A7F2C()
{
  uint64_t v1 = OBJC_IVAR____TtC11SettingsApp25BluetoothListItemProvider_bluetoothController;
  char v2 = *(void **)(v0 + OBJC_IVAR____TtC11SettingsApp25BluetoothListItemProvider_bluetoothController);
  if (v2)
  {
    [v2 invalidate];
    uint64_t v3 = *(void **)(v0 + v1);
  }
  else
  {
    uint64_t v3 = 0;
  }
  *(void *)(v0 + v1) = 0;

  swift_beginAccess();
  if (*(void *)(v0 + 40))
  {
    sub_1000620F8(v0 + 16, (uint64_t)&v5);
    sub_1000403E0(&v5, *((uint64_t *)&v6 + 1));
    dispatch thunk of Cancellable.cancel()();
    sub_100042A1C((uint64_t)&v5);
  }
  uint64_t v7 = 0;
  long long v5 = 0u;
  long long v6 = 0u;
  swift_beginAccess();
  sub_100008AE0((uint64_t)&v5, v0 + 16);
  swift_endAccess();
  sub_10003F5D0(v0 + 16, &qword_100161CD0);
  sub_10003DBAC(v0 + OBJC_IVAR____TtC11SettingsApp25BluetoothListItemProvider_id, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);

  sub_100042A1C(v0 + OBJC_IVAR____TtC11SettingsApp25BluetoothListItemProvider_invalidator);
  return v0;
}

uint64_t sub_1000A806C()
{
  sub_1000A7F2C();

  return swift_deallocClassInstance();
}

uint64_t sub_1000A80C4()
{
  return type metadata accessor for BluetoothListItemProvider();
}

unsigned char *storeEnumTagSinglePayload for BluetoothListItemProvider.State(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *id result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000A8198);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *id result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BluetoothListItemProvider.State()
{
  return &type metadata for BluetoothListItemProvider.State;
}

unint64_t sub_1000A81D4()
{
  unint64_t result = qword_100161CC8;
  if (!qword_100161CC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100161CC8);
  }
  return result;
}

uint64_t sub_1000A823C@<X0>(uint64_t a1@<X8>)
{
  return sub_100057870(*v1 + OBJC_IVAR____TtC11SettingsApp25BluetoothListItemProvider_id, a1, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
}

void sub_1000A827C(int a1, uint64_t a2)
{
  if (qword_10015F188 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_1000477B0(v4, (uint64_t)qword_10016B088);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Preferences is notified of a bluetooth state change", v7, 2u);
    swift_slowDealloc();
  }

  uint64_t state64 = 0;
  if (notify_get_state(a1, &state64))
  {
    char v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v8, v9))
    {
      BOOL v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)BOOL v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "CBNotificationState status error", v10, 2u);
      swift_slowDealloc();
    }

    return;
  }
  uint64_t v11 = state64;
  if ((state64 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_20;
  }
  if (qword_10015F080 != -1) {
LABEL_20:
  }
    swift_once();
  unint64_t v12 = (0x30200010000uLL >> (8 * v11)) & 3;
  if (v11 > 5) {
    LODWORD(v12) = 0;
  }
  if (qword_10016AE50 == v11) {
    int v13 = 4;
  }
  else {
    int v13 = v12;
  }
  uint64_t v14 = OBJC_IVAR____TtC11SettingsApp25BluetoothListItemProvider_bluetoothState;
  if (v13 != *(unsigned __int8 *)(a2 + OBJC_IVAR____TtC11SettingsApp25BluetoothListItemProvider_bluetoothState))
  {
    sub_1000403E0((void *)(a2 + OBJC_IVAR____TtC11SettingsApp25BluetoothListItemProvider_invalidator), *(void *)(a2 + OBJC_IVAR____TtC11SettingsApp25BluetoothListItemProvider_invalidator + 24));
    PassthroughSubject.send(_:)();
  }
  *(unsigned char *)(a2 + v14) = v13;
}

void sub_1000A84E4(int a1)
{
  sub_1000A827C(a1, v1);
}

uint64_t sub_1000A84EC(uint64_t a1, uint64_t a2)
{
  int v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);

  return swift_release();
}

uint64_t sub_1000A8540()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000A8578()
{
  swift_release();

  return _swift_deallocObject(v0, 25, 7);
}

uint64_t sub_1000A85B0()
{
  return swift_deallocClassInstance();
}

id sub_1000A85C0()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = (uint64_t)v0 + OBJC_IVAR____TtC11SettingsApp28CellularDataListItemProvider_cancellable;
  swift_beginAccess();
  if (*(void *)(v2 + 24))
  {
    sub_1000620F8(v2, (uint64_t)&v5);
    sub_1000403E0(&v5, *((uint64_t *)&v6 + 1));
    dispatch thunk of Cancellable.cancel()();
    sub_100042A1C((uint64_t)&v5);
  }
  uint64_t v7 = 0;
  long long v5 = 0u;
  long long v6 = 0u;
  swift_beginAccess();
  sub_100008AE0((uint64_t)&v5, v2);
  swift_endAccess();
  v4.receiver = v0;
  v4.super_class = ObjectType;
  return [super dealloc];
}

uint64_t sub_1000A875C()
{
  return type metadata accessor for CellularDataListItemProvider();
}

uint64_t sub_1000A8794@<X0>(uint64_t a1@<X8>)
{
  return sub_100057870(*v1 + OBJC_IVAR____TtC11SettingsApp28CellularDataListItemProvider_id, a1, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
}

uint64_t sub_1000A87D4()
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v1 = (void *)result;
    sub_1000620F8(result + OBJC_IVAR____TtC11SettingsApp28CellularDataListItemProvider_invalidator, (uint64_t)v2);

    sub_1000403E0(v2, v2[3]);
    type metadata accessor for PrimarySettingsListModel();
    sub_100068CA8();
    return sub_100042A1C((uint64_t)v2);
  }
  return result;
}

uint64_t sub_1000A8894()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000A88CC()
{
  return sub_1000A87D4();
}

uint64_t sub_1000A88D4()
{
  swift_unownedRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1000A8914()
{
  swift_unownedRelease();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1000A8954()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    *(unsigned char *)(Strong + 16) = 0;
    swift_release();
  }
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1000531F0();
    return swift_release();
  }
  return result;
}

void sub_1000A89D4(uint64_t a1, void *a2)
{
  int v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

id sub_1000A8A40()
{
  uint64_t v1 = v0;
  if (PSIsInEDUMode()) {
    goto LABEL_34;
  }
  id result = (id)MobileGestalt_get_current_device();
  if (!result) {
    goto LABEL_36;
  }
  int v3 = result;
  int cellularDataCapability = MobileGestalt_get_cellularDataCapability();

  if (!cellularDataCapability)
  {
LABEL_34:
    sub_100042A1C(v1 + 40);
    swift_bridgeObjectRelease();
    return (id)v1;
  }
  swift_beginAccess();
  uint64_t v5 = *(void *)(v1 + 80);
  if ((v5 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for AnyCancellable();
    sub_100055408((unint64_t *)&qword_100161650, (void (*)(uint64_t))&type metadata accessor for AnyCancellable);
    id result = (id)Set.Iterator.init(_cocoa:)();
    uint64_t v5 = v22;
    uint64_t v20 = v23;
    uint64_t v6 = v24;
    uint64_t v7 = v25;
    unint64_t v8 = v26;
  }
  else
  {
    uint64_t v9 = -1 << *(unsigned char *)(v5 + 32);
    uint64_t v20 = v5 + 56;
    uint64_t v6 = ~v9;
    uint64_t v10 = -v9;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v8 = v11 & *(void *)(v5 + 56);
    id result = (id)swift_bridgeObjectRetain();
    uint64_t v7 = 0;
  }
  int64_t v12 = (unint64_t)(v6 + 64) >> 6;
  if (v5 < 0) {
    goto LABEL_13;
  }
  while (1)
  {
    if (v8)
    {
      uint64_t v13 = (v8 - 1) & v8;
      unint64_t v14 = __clz(__rbit64(v8)) | (v7 << 6);
      uint64_t v15 = v7;
      goto LABEL_30;
    }
    int64_t v16 = v7 + 1;
    if (__OFADD__(v7, 1)) {
      break;
    }
    if (v16 >= v12) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v20 + 8 * v16);
    uint64_t v15 = v7 + 1;
    if (!v17)
    {
      uint64_t v15 = v7 + 2;
      if (v7 + 2 >= v12) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v20 + 8 * v15);
      if (!v17)
      {
        uint64_t v15 = v7 + 3;
        if (v7 + 3 >= v12) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v20 + 8 * v15);
        if (!v17)
        {
          uint64_t v15 = v7 + 4;
          if (v7 + 4 >= v12) {
            goto LABEL_33;
          }
          unint64_t v17 = *(void *)(v20 + 8 * v15);
          if (!v17)
          {
            uint64_t v18 = v7 + 5;
            while (v12 != v18)
            {
              unint64_t v17 = *(void *)(v20 + 8 * v18++);
              if (v17)
              {
                uint64_t v15 = v18 - 1;
                goto LABEL_29;
              }
            }
LABEL_33:
            sub_1000653C0();
            *(void *)(v1 + 80) = &_swiftEmptySetSingleton;
            swift_bridgeObjectRelease();
            sub_10006768C();
            _CTServerConnectionUnregisterForNotification();
            *(void *)(v1 + 24) = 0;
            *(unsigned char *)(v1 + 32) = 0;
            goto LABEL_34;
          }
        }
      }
    }
LABEL_29:
    uint64_t v13 = (v17 - 1) & v17;
    unint64_t v14 = __clz(__rbit64(v17)) + (v15 << 6);
LABEL_30:
    uint64_t v19 = *(void *)(*(void *)(v5 + 48) + 8 * v14);
    swift_retain();
    if (!v19) {
      goto LABEL_33;
    }
    while (1)
    {
      AnyCancellable.cancel()();
      id result = (id)swift_release();
      uint64_t v7 = v15;
      unint64_t v8 = v13;
      if ((v5 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_13:
      if (__CocoaSet.Iterator.next()())
      {
        type metadata accessor for AnyCancellable();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        swift_unknownObjectRelease();
        uint64_t v15 = v7;
        uint64_t v13 = v8;
        if (v21) {
          continue;
        }
      }
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1000A8D68()
{
  sub_1000A8A40();

  return swift_deallocClassInstance();
}

uint64_t sub_1000A8D9C()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000A8DD4()
{
  return sub_1000A8954();
}

id sub_1000A8DDC()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return [super dealloc];
}

id sub_1000A8FF4()
{
  uint64_t v1 = OBJC_IVAR____TtC11SettingsApp25ClassroomListItemProvider____lazy_storage___classroomVisibilityArbitrator;
  objc_super v2 = *(void **)(v0
                + OBJC_IVAR____TtC11SettingsApp25ClassroomListItemProvider____lazy_storage___classroomVisibilityArbitrator);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC11SettingsApp25ClassroomListItemProvider____lazy_storage___classroomVisibilityArbitrator);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)CRKDefaultSettingsUIVisibilityProvider) init];
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    objc_super v2 = 0;
  }
  id v6 = v2;
  return v3;
}

uint64_t sub_1000A9068()
{
  uint64_t v1 = (void *)(v0 + OBJC_IVAR____TtC11SettingsApp25ClassroomListItemProvider_cancellables);
  swift_beginAccess();
  uint64_t v2 = *v1;
  uint64_t v19 = v1;
  uint64_t v20 = v0;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for AnyCancellable();
    sub_100026F0C((unint64_t *)&qword_100161650, (void (*)(uint64_t))&type metadata accessor for AnyCancellable);
    uint64_t result = Set.Iterator.init(_cocoa:)();
    uint64_t v2 = v22;
    uint64_t v4 = v23;
    uint64_t v5 = v24;
    uint64_t v6 = v25;
    unint64_t v7 = v26;
  }
  else
  {
    uint64_t v8 = -1 << *(unsigned char *)(v2 + 32);
    uint64_t v4 = v2 + 56;
    uint64_t v5 = ~v8;
    uint64_t v9 = -v8;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v7 = v10 & *(void *)(v2 + 56);
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v6 = 0;
  }
  int64_t v11 = (unint64_t)(v5 + 64) >> 6;
  if (v2 < 0) {
    goto LABEL_10;
  }
  while (1)
  {
    if (v7)
    {
      uint64_t v12 = (v7 - 1) & v7;
      unint64_t v13 = __clz(__rbit64(v7)) | (v6 << 6);
      uint64_t v14 = v6;
      goto LABEL_27;
    }
    int64_t v15 = v6 + 1;
    if (__OFADD__(v6, 1)) {
      break;
    }
    if (v15 >= v11) {
      goto LABEL_30;
    }
    unint64_t v16 = *(void *)(v4 + 8 * v15);
    uint64_t v14 = v6 + 1;
    if (!v16)
    {
      uint64_t v14 = v6 + 2;
      if (v6 + 2 >= v11) {
        goto LABEL_30;
      }
      unint64_t v16 = *(void *)(v4 + 8 * v14);
      if (!v16)
      {
        uint64_t v14 = v6 + 3;
        if (v6 + 3 >= v11) {
          goto LABEL_30;
        }
        unint64_t v16 = *(void *)(v4 + 8 * v14);
        if (!v16)
        {
          uint64_t v14 = v6 + 4;
          if (v6 + 4 >= v11) {
            goto LABEL_30;
          }
          unint64_t v16 = *(void *)(v4 + 8 * v14);
          if (!v16)
          {
            uint64_t v17 = v6 + 5;
            while (v11 != v17)
            {
              unint64_t v16 = *(void *)(v4 + 8 * v17++);
              if (v16)
              {
                uint64_t v14 = v17 - 1;
                goto LABEL_26;
              }
            }
LABEL_30:
            sub_1000653C0();
            void *v19 = &_swiftEmptySetSingleton;
            swift_bridgeObjectRelease();
            sub_10003DBAC(v20 + OBJC_IVAR____TtC11SettingsApp25ClassroomListItemProvider_id, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
            sub_100042A1C(v20 + OBJC_IVAR____TtC11SettingsApp25ClassroomListItemProvider_invalidator);
            swift_bridgeObjectRelease();
            objc_release(*(id *)(v20
                               + OBJC_IVAR____TtC11SettingsApp25ClassroomListItemProvider____lazy_storage___classroomVisibilityArbitrator));
            swift_bridgeObjectRelease();
            return v20;
          }
        }
      }
    }
LABEL_26:
    uint64_t v12 = (v16 - 1) & v16;
    unint64_t v13 = __clz(__rbit64(v16)) + (v14 << 6);
LABEL_27:
    uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v13);
    swift_retain();
    if (!v18) {
      goto LABEL_30;
    }
    while (1)
    {
      AnyCancellable.cancel()();
      uint64_t result = swift_release();
      uint64_t v6 = v14;
      unint64_t v7 = v12;
      if ((v2 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_10:
      if (__CocoaSet.Iterator.next()())
      {
        type metadata accessor for AnyCancellable();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        swift_unknownObjectRelease();
        uint64_t v14 = v6;
        uint64_t v12 = v7;
        if (v21) {
          continue;
        }
      }
      goto LABEL_30;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1000A938C()
{
  sub_1000A9068();

  return swift_deallocClassInstance();
}

uint64_t sub_1000A93E4()
{
  return type metadata accessor for ClassroomListItemProvider();
}

uint64_t type metadata accessor for ClassroomListItemProvider()
{
  uint64_t result = qword_100162020;
  if (!qword_100162020) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000A9438()
{
  uint64_t result = type metadata accessor for PrimarySettingsListItemIdentifier();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void sub_1000A94FC(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v35 = a1;
  uint64_t v4 = type metadata accessor for PrimarySettingsListItemViewType();
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for PrimarySettingsListItemIdentifier();
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100046B9C((uint64_t *)&unk_100163AD0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for PrimarySettingsListItemModel();
  uint64_t v36 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  int64_t v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v16 = [self sharedInstance];
  unsigned __int8 v17 = [v16 launchHasCompleted];

  if (v17)
  {
    uint64_t v34 = a2;
    if (*((unsigned char *)v2 + OBJC_IVAR____TtC11SettingsApp25ClassroomListItemProvider_classroomVisible) == 1)
    {
      uint64_t v33 = (char *)v2 + OBJC_IVAR____TtC11SettingsApp25ClassroomListItemProvider_id;
      sub_100057870((uint64_t)v2 + OBJC_IVAR____TtC11SettingsApp25ClassroomListItemProvider_id, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
      type metadata accessor for StaticPrimarySettingsListItemProvider();
      uint64_t v18 = v2;
      uint64_t v19 = swift_allocObject();
      sub_100058594((uint64_t)v9, v19 + OBJC_IVAR____TtC11SettingsApp37StaticPrimarySettingsListItemProvider_id, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
      sub_10003FF84(v35, (uint64_t)v12);
      swift_setDeallocating();
      sub_10003DBAC(v19 + OBJC_IVAR____TtC11SettingsApp37StaticPrimarySettingsListItemProvider_id, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
      swift_deallocClassInstance();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v12, 1, v13) == 1)
      {
        sub_10003F5D0((uint64_t)v12, (uint64_t *)&unk_100163AD0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 56))(v34, 1, 1, v13);
        uint64_t v20 = v18;
      }
      else
      {
        sub_100058594((uint64_t)v12, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
        uint64_t v22 = sub_100040424();
        uint64_t v24 = v23;
        char v26 = v25;
        id v27 = sub_1000477E8();
        uint64_t v35 = v18;
        uint64_t v29 = v34;
        if (*(void *)((char *)v18 + OBJC_IVAR____TtC11SettingsApp25ClassroomListItemProvider_classroomStatus + 8))
        {
          uint64_t v30 = *(void *)((char *)v18 + OBJC_IVAR____TtC11SettingsApp25ClassroomListItemProvider_classroomStatus);
          unint64_t v31 = *(void *)((char *)v18 + OBJC_IVAR____TtC11SettingsApp25ClassroomListItemProvider_classroomStatus + 8);
        }
        else
        {
          uint64_t v30 = 0;
          unint64_t v31 = 0xE000000000000000;
        }
        *(void *)uint64_t v6 = v22;
        *((void *)v6 + 1) = v24;
        v6[16] = v26;
        *((void *)v6 + 3) = v27;
        *((void *)v6 + 4) = v28;
        *((void *)v6 + 5) = v30;
        *((void *)v6 + 6) = v31;
        *((_WORD *)v6 + 28) = 512;
        swift_storeEnumTagMultiPayload();
        uint64_t v32 = (uint64_t)&v15[*(int *)(v13 + 20)];
        swift_bridgeObjectRetain();
        sub_100052744((uint64_t)v6, v32);
        sub_100057870((uint64_t)v15, v29, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v36 + 56))(v29, 0, 1, v13);
        sub_10003DBAC((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemModel);
        uint64_t v20 = v35;
      }
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 56))(v34, 1, 1, v13);
      uint64_t v20 = v2;
    }
    sub_1000A99C0((uint64_t)v20);
  }
  else
  {
    uint64_t v21 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 56);
    v21(a2, 1, 1, v13);
  }
}

void sub_1000A99C0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NSNotificationCenter.Publisher();
  uint64_t v53 = *(void *)(v2 - 8);
  uint64_t v54 = v2;
  __chkstk_darwin(v2);
  unint64_t v52 = (char *)v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = sub_100046B9C(&qword_100161798);
  uint64_t v4 = *(void *)(v56 - 8);
  __chkstk_darwin(v56);
  uint64_t v55 = (char *)v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100046B9C(&qword_1001620D0);
  uint64_t v47 = *(void *)(v6 - 8);
  uint64_t v48 = v6;
  __chkstk_darwin(v6);
  id v46 = (char *)v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100046B9C(&qword_1001620D8);
  uint64_t v50 = *(void *)(v8 - 8);
  uint64_t v51 = v8;
  __chkstk_darwin(v8);
  uint64_t v49 = (char *)v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100046B9C((uint64_t *)&unk_100163BC0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100046B9C(&qword_1001620E0);
  uint64_t v44 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  int64_t v15 = (char *)v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100046B9C(&qword_1001620E8);
  uint64_t v45 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v19 = [self sharedInstance];
  unsigned int v20 = [v19 launchHasCompleted];

  if (v20)
  {
    uint64_t v21 = a1 + OBJC_IVAR____TtC11SettingsApp25ClassroomListItemProvider_cancellables;
    swift_beginAccess();
    if ((*(void *)v21 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      uint64_t v22 = __CocoaSet.count.getter();
      swift_bridgeObjectRelease();
      if (v22) {
        return;
      }
      goto LABEL_4;
    }
    if (!*(void *)(*(void *)v21 + 16))
    {
LABEL_4:
      id v23 = sub_1000A8FF4();
      [v23 connectToDaemon];

      id v24 = sub_1000A8FF4();
      swift_getKeyPath();
      _KeyValueCodingAndObservingPublishing<>.publisher<A>(for:options:)();

      swift_release();
      unint64_t v25 = sub_100055498();
      id v57 = (id)static OS_dispatch_queue.main.getter();
      uint64_t v39 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
      uint64_t v26 = *(void *)(v39 - 8);
      uint64_t v42 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v26 + 56);
      uint64_t v41 = v4;
      uint64_t v40 = v26 + 56;
      v42(v12, 1, 1, v39);
      v38[2] = &protocol conformance descriptor for NSObject.KeyValueObservingPublisher<A, B>;
      sub_10004D2D4(&qword_1001620F0, &qword_1001620E0);
      uint64_t v43 = sub_100026F0C((unint64_t *)&qword_100163C00, (void (*)(uint64_t))sub_100055498);
      Publisher.receive<A>(on:options:)();
      sub_10003F5D0((uint64_t)v12, (uint64_t *)&unk_100163BC0);

      (*(void (**)(char *, uint64_t))(v44 + 8))(v15, v13);
      swift_allocObject();
      swift_weakInit();
      sub_10004D2D4(&qword_1001620F8, &qword_1001620E8);
      Publisher<>.sink(receiveValue:)();
      swift_release();
      (*(void (**)(char *, uint64_t))(v45 + 8))(v18, v16);
      swift_beginAccess();
      AnyCancellable.store(in:)();
      swift_endAccess();
      swift_release();
      id v27 = sub_1000A8FF4();
      swift_getKeyPath();
      uint64_t v28 = v46;
      _KeyValueCodingAndObservingPublishing<>.publisher<A>(for:options:)();

      swift_release();
      v38[1] = v25;
      id v57 = (id)static OS_dispatch_queue.main.getter();
      uint64_t v29 = v39;
      v42(v12, 1, 1, v39);
      sub_10004D2D4(&qword_100162100, &qword_1001620D0);
      uint64_t v30 = v48;
      unint64_t v31 = v49;
      Publisher.receive<A>(on:options:)();
      sub_10003F5D0((uint64_t)v12, (uint64_t *)&unk_100163BC0);

      (*(void (**)(char *, uint64_t))(v47 + 8))(v28, v30);
      swift_allocObject();
      swift_weakInit();
      sub_10004D2D4(&qword_100162108, &qword_1001620D8);
      uint64_t v32 = v51;
      Publisher<>.sink(receiveValue:)();
      swift_release();
      (*(void (**)(char *, uint64_t))(v50 + 8))(v31, v32);
      swift_beginAccess();
      AnyCancellable.store(in:)();
      swift_endAccess();
      swift_release();
      id v33 = [self defaultCenter];
      uint64_t v34 = v52;
      NSNotificationCenter.publisher(for:object:)();

      id v57 = (id)static OS_dispatch_queue.main.getter();
      v42(v12, 1, 1, v29);
      sub_100026F0C(&qword_100163CE0, (void (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Publisher);
      uint64_t v35 = v54;
      uint64_t v36 = v55;
      Publisher.receive<A>(on:options:)();
      sub_10003F5D0((uint64_t)v12, (uint64_t *)&unk_100163BC0);

      (*(void (**)(char *, uint64_t))(v53 + 8))(v34, v35);
      swift_allocObject();
      swift_weakInit();
      sub_10004D2D4((unint64_t *)&qword_1001617A0, &qword_100161798);
      uint64_t v37 = v56;
      Publisher<>.sink(receiveValue:)();
      swift_release();
      (*(void (**)(char *, uint64_t))(v41 + 8))(v36, v37);
      swift_beginAccess();
      AnyCancellable.store(in:)();
      swift_endAccess();
      swift_release();
    }
  }
}

uint64_t sub_1000AA3A8()
{
  uint64_t v0 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v27 = *(void *)(v0 - 8);
  uint64_t v28 = v0;
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)&v24 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for DispatchQoS();
  uint64_t v25 = *(void *)(v3 - 8);
  uint64_t v26 = v3;
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for OSSignpostID();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v24 - v11;
  if (qword_10015F180 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for OSSignposter();
  sub_1000477B0(v13, (uint64_t)qword_10016B070);
  static OSSignpostID.exclusive.getter();
  uint64_t v14 = OSSignposter.logHandle.getter();
  os_signpost_type_t v15 = static os_signpost_type_t.event.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, v6);
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    id v24 = v5;
    uint64_t v17 = v16;
    *(_WORD *)uint64_t v16 = 0;
    os_signpost_id_t v18 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v14, v15, v18, "ClassroomListItemProvider.updateUpdateClassroom began", "", v17, 2u);
    uint64_t v5 = v24;
    swift_slowDealloc();

    id v19 = *(void (**)(char *, uint64_t))(v7 + 8);
    v19(v12, v6);
    v19(v10, v6);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  }
  if (qword_10015F128 != -1) {
    swift_once();
  }
  uint64_t v20 = swift_allocObject();
  swift_weakInit();
  aBlock[4] = sub_1000AB178;
  aBlock[5] = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002CC68;
  aBlock[3] = &unk_100153DA8;
  uint64_t v21 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  uint64_t v29 = _swiftEmptyArrayStorage;
  sub_100026F0C((unint64_t *)&qword_1001614F0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100046B9C((uint64_t *)&unk_1001609C0);
  sub_10004D2D4((unint64_t *)&qword_100161500, (uint64_t *)&unk_1001609C0);
  uint64_t v22 = v28;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v21);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v2, v22);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v5, v26);
  swift_release();
  return swift_release();
}

uint64_t sub_1000AA898(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  uint64_t v22 = v6;
  uint64_t v23 = v3;
  if (Strong
    && (id v11 = sub_1000A8FF4(),
        swift_release(),
        id v12 = [v11 paneStatus],
        v11,
        v12))
  {
    uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v15 = v14;
  }
  else
  {
    uint64_t v13 = 0;
    uint64_t v15 = 0;
  }
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    id v16 = sub_1000A8FF4();
    swift_release();
    unsigned __int8 v17 = [v16 settingsUIVisible];
  }
  else
  {
    unsigned __int8 v17 = 2;
  }
  sub_100055498();
  os_signpost_id_t v18 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v19 = swift_allocObject();
  *(unsigned char *)(v19 + 16) = v17;
  *(void *)(v19 + 24) = a1;
  *(void *)(v19 + 32) = v13;
  *(void *)(v19 + 40) = v15;
  aBlock[4] = sub_1000AB1C0;
  aBlock[5] = v19;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10002CC68;
  aBlock[3] = &unk_100153DF8;
  uint64_t v20 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100026F0C((unint64_t *)&qword_1001614F0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100046B9C((uint64_t *)&unk_1001609C0);
  sub_10004D2D4((unint64_t *)&qword_100161500, (uint64_t *)&unk_1001609C0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v20);

  (*(void (**)(char *, uint64_t))(v23 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v22);
}

uint64_t sub_1000AAC4C(unsigned __int8 a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v6 = a1;
  uint64_t v7 = type metadata accessor for OSSignpostID();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  id v11 = (char *)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)v30 - v12;
  if (v6 != 2)
  {
    swift_beginAccess();
    uint64_t Strong = swift_weakLoadStrong();
    if (Strong)
    {
      uint64_t v15 = Strong;
      v30[0] = a3;
      int v16 = v6 & 1;
      uint64_t v17 = OBJC_IVAR____TtC11SettingsApp25ClassroomListItemProvider_classroomVisible;
      if ((v16 != 0) != *(unsigned char *)(Strong + OBJC_IVAR____TtC11SettingsApp25ClassroomListItemProvider_classroomVisible))
      {
        sub_1000403E0((void *)(Strong + OBJC_IVAR____TtC11SettingsApp25ClassroomListItemProvider_invalidator), *(void *)(Strong + OBJC_IVAR____TtC11SettingsApp25ClassroomListItemProvider_invalidator + 24));
        uint64_t v32 = "Classroom Visibility";
        uint64_t v33 = 20;
        char v34 = 2;
        PassthroughSubject.send(_:)();
      }
      *(unsigned char *)(v15 + v17) = v16;
      swift_release();
      a3 = v30[0];
    }
  }
  swift_beginAccess();
  uint64_t v18 = swift_weakLoadStrong();
  if (v18)
  {
    uint64_t v19 = v18;
    uint64_t v20 = (void *)(v18 + OBJC_IVAR____TtC11SettingsApp25ClassroomListItemProvider_classroomStatus);
    uint64_t v21 = *(void *)(v18 + OBJC_IVAR____TtC11SettingsApp25ClassroomListItemProvider_classroomStatus + 8);
    if (a4)
    {
      if (v21)
      {
        BOOL v22 = *v20 == a3 && v21 == a4;
        if (v22 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          swift_bridgeObjectRetain();
LABEL_17:
          *uint64_t v20 = a3;
          v20[1] = a4;
          swift_release();
          swift_bridgeObjectRelease();
          goto LABEL_18;
        }
      }
    }
    else if (!v21)
    {
      goto LABEL_17;
    }
    sub_1000403E0((void *)(v19 + OBJC_IVAR____TtC11SettingsApp25ClassroomListItemProvider_invalidator), *(void *)(v19 + OBJC_IVAR____TtC11SettingsApp25ClassroomListItemProvider_invalidator + 24));
    v30[4] = "Classroom Status";
    v30[5] = 16;
    char v31 = 2;
    swift_bridgeObjectRetain();
    PassthroughSubject.send(_:)();
    goto LABEL_17;
  }
LABEL_18:
  if (qword_10015F180 != -1) {
    swift_once();
  }
  uint64_t v23 = type metadata accessor for OSSignposter();
  sub_1000477B0(v23, (uint64_t)qword_10016B070);
  static OSSignpostID.exclusive.getter();
  id v24 = OSSignposter.logHandle.getter();
  os_signpost_type_t v25 = static os_signpost_type_t.event.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, v7);
    uint64_t v26 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v26 = 0;
    os_signpost_id_t v27 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v24, v25, v27, "ClassroomListItemProvider.updateUpdateClassroom completed", "", v26, 2u);
    swift_slowDealloc();

    uint64_t v28 = *(void (**)(char *, uint64_t))(v8 + 8);
    v28(v13, v7);
    return ((uint64_t (*)(char *, uint64_t))v28)(v11, v7);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  }
}

uint64_t sub_1000AAFE8@<X0>(uint64_t a1@<X8>)
{
  return sub_100057870(*v1 + OBJC_IVAR____TtC11SettingsApp25ClassroomListItemProvider_id, a1, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
}

const char *sub_1000AB028()
{
  return "settingsUIVisible";
}

id sub_1000AB034@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = [*a1 settingsUIVisible];
  *a2 = (_BYTE)result;
  return result;
}

uint64_t sub_1000AB068()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1000AA3A8();
    return swift_release();
  }
  return result;
}

void sub_1000AB0C0(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = [*a1 paneStatus];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  *a2 = v5;
  a2[1] = v7;
}

uint64_t sub_1000AB128()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000AB160()
{
  return sub_1000AB068();
}

const char *sub_1000AB168()
{
  return "paneStatus";
}

uint64_t sub_1000AB178()
{
  return sub_1000AA898(v0);
}

uint64_t sub_1000AB180()
{
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1000AB1C0()
{
  return sub_1000AAC4C(*(unsigned char *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_1000AB1D0()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC11SettingsApp24EthernetListItemProvider_cancellable;
  swift_beginAccess();
  if (*(void *)(v1 + 24))
  {
    sub_1000620F8(v1, (uint64_t)&v3);
    sub_1000403E0(&v3, *((uint64_t *)&v4 + 1));
    dispatch thunk of Cancellable.cancel()();
    sub_100042A1C((uint64_t)&v3);
  }
  uint64_t v5 = 0;
  long long v3 = 0u;
  long long v4 = 0u;
  swift_beginAccess();
  sub_100008AE0((uint64_t)&v3, v1);
  swift_endAccess();
  sub_100045F84(v0 + OBJC_IVAR____TtC11SettingsApp24EthernetListItemProvider_id);
  sub_100042A1C(v0 + OBJC_IVAR____TtC11SettingsApp24EthernetListItemProvider_invalidator);
  sub_10003F5D0(v1, &qword_100161CD0);
  return swift_deallocClassInstance();
}

uint64_t sub_1000AB2FC()
{
  return type metadata accessor for EthernetListItemProvider();
}

uint64_t sub_1000AB304@<X0>(uint64_t a1@<X8>)
{
  return sub_100046BE0(*v1 + OBJC_IVAR____TtC11SettingsApp24EthernetListItemProvider_id, a1);
}

uint64_t sub_1000AB31C()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000AB354()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_100016B98();
    return swift_release();
  }
  return result;
}

uint64_t sub_1000AB3AC()
{
  return sub_1000AB354();
}

uint64_t sub_1000AB3B4()
{
  swift_release();

  return _swift_deallocObject(v0, 25, 7);
}

uint64_t sub_1000AB3EC(uint64_t a1)
{
  if (a1 == 3)
  {
    id v1 = [self mainBundle];
    uint64_t v3 = 0x1000000000000014;
    unint64_t v8 = 0x8000000100124340;
    unint64_t v2 = 0x8000000100127BA0;
  }
  else if (a1 == 1)
  {
    id v1 = [self mainBundle];
    unint64_t v8 = 0x8000000100124340;
    unint64_t v2 = 0x8000000100127BC0;
    uint64_t v3 = 0x1000000000000011;
  }
  else
  {
    id v1 = [self mainBundle];
    unint64_t v8 = 0x8000000100124340;
    uint64_t v3 = 5132374;
    unint64_t v2 = 0xE300000000000000;
  }
  v4._uint64_t countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  unint64_t v5 = 0xD000000000000014;
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v3, (Swift::String_optional)0, (NSBundle)v1, v4, *(Swift::String *)(&v8 - 1))._countAndFlagsBits;

  return countAndFlagsBits;
}

uint64_t sub_1000AB544(uint64_t a1)
{
  switch(a1)
  {
    case 0:
      id v1 = [self mainBundle];
      unint64_t v8 = 0x8000000100124770;
      uint64_t v2 = 0x6E6E6F4320746F4ELL;
      unint64_t v3 = 0xED00006465746365;
      goto LABEL_9;
    case 1:
      id v1 = [self mainBundle];
      unint64_t v8 = 0x8000000100124770;
      uint64_t v2 = 0x697463656E6E6F43;
      unint64_t v3 = 0xAD0000A680E2676ELL;
      goto LABEL_9;
    case 2:
      id v1 = [self mainBundle];
      unint64_t v8 = 0x8000000100124770;
      uint64_t v2 = 0x657463656E6E6F43;
      unint64_t v3 = 0xE900000000000064;
      goto LABEL_9;
    case 3:
      id v1 = [self mainBundle];
      unint64_t v8 = 0x8000000100124770;
      unint64_t v3 = 0x8000000100127BE0;
      uint64_t v2 = 0x1000000000000010;
      goto LABEL_9;
    case 4:
      id v1 = [self mainBundle];
      unint64_t v8 = 0x8000000100124770;
      uint64_t v2 = 0x6576697463616E49;
      unint64_t v3 = 0xE800000000000000;
      goto LABEL_9;
    case 5:
      id v1 = [self mainBundle];
      unint64_t v8 = 0x8000000100124770;
      uint64_t v2 = 28239;
      unint64_t v3 = 0xE200000000000000;
LABEL_9:
      v5._uint64_t countAndFlagsBits = 0;
      v5._object = (void *)0xE000000000000000;
      unint64_t v6 = 0xD000000000000010;
      uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v2, (Swift::String_optional)0, (NSBundle)v1, v5, *(Swift::String *)(&v8 - 1))._countAndFlagsBits;

      break;
    default:
      uint64_t countAndFlagsBits = 0;
      break;
  }
  return countAndFlagsBits;
}

uint64_t sub_1000AB7E4()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC11SettingsApp31PersonalHotspotListItemProvider_cancellable;
  swift_beginAccess();
  if (*(void *)(v1 + 24))
  {
    sub_1000620F8(v1, (uint64_t)&v3);
    sub_1000403E0(&v3, *((uint64_t *)&v4 + 1));
    dispatch thunk of Cancellable.cancel()();
    sub_100042A1C((uint64_t)&v3);
  }
  uint64_t v5 = 0;
  long long v3 = 0u;
  long long v4 = 0u;
  swift_beginAccess();
  sub_100008AE0((uint64_t)&v3, v1);
  swift_endAccess();
  sub_10003DBAC(v0 + OBJC_IVAR____TtC11SettingsApp31PersonalHotspotListItemProvider_id, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
  sub_100042A1C(v0 + OBJC_IVAR____TtC11SettingsApp31PersonalHotspotListItemProvider_invalidator);
  swift_release();
  swift_release();
  sub_10003F5D0(v1, &qword_100161CD0);
  return v0;
}

uint64_t sub_1000AB914()
{
  sub_1000AB7E4();

  return swift_deallocClassInstance();
}

uint64_t sub_1000AB96C()
{
  return type metadata accessor for PersonalHotspotListItemProvider();
}

uint64_t sub_1000AB974@<X0>(uint64_t a1@<X8>)
{
  return sub_100057870(*v1 + OBJC_IVAR____TtC11SettingsApp31PersonalHotspotListItemProvider_id, a1, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
}

uint64_t sub_1000AB9B4()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000AB9EC()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_100015D3C();
    return swift_release();
  }
  return result;
}

uint64_t sub_1000ABA44()
{
  return sub_1000AB9EC();
}

uint64_t sub_1000ABA4C()
{
  swift_release();

  return _swift_deallocObject(v0, 27, 7);
}

void *sub_1000ABA84(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_18;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; uint64_t v2 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v3 = 4;
    while (1)
    {
      id v4 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(a1 + 8 * v3);
      uint64_t v5 = v4;
      uint64_t v6 = v3 - 3;
      if (__OFADD__(v3 - 4, 1)) {
        break;
      }
      id v7 = [v4 context];
      if (v7 && (unint64_t v8 = v7, v9 = [v7 slotID], v8, v9))
      {
        id v10 = [v5 context];

        if (v10)
        {
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
        }
      }
      else
      {
      }
      ++v3;
      if (v6 == v2) {
        goto LABEL_19;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
  }
LABEL_19:
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

uint64_t sub_1000ABC40(uint64_t *a1, uint64_t *a2)
{
  return sub_1000AE0E0(*a1, a1[1], *a2, a2[1]);
}

id sub_1000ABC54()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC11SettingsApp25SatelliteListItemProvider_stewieStateMonitor];
  *(void *)&v0[OBJC_IVAR____TtC11SettingsApp25SatelliteListItemProvider_stewieStateMonitor] = 0;

  uint64_t v3 = *(void **)&v0[OBJC_IVAR____TtC11SettingsApp25SatelliteListItemProvider_idsOffGridStateManager];
  *(void *)&v0[OBJC_IVAR____TtC11SettingsApp25SatelliteListItemProvider_idsOffGridStateManager] = 0;

  v5.receiver = v0;
  v5.super_class = ObjectType;
  return [super dealloc];
}

uint64_t sub_1000ABE00()
{
  return type metadata accessor for SatelliteListItemProvider();
}

uint64_t sub_1000ABE48@<X0>(uint64_t a1@<X8>)
{
  return sub_100057870(*v1 + OBJC_IVAR____TtC11SettingsApp25SatelliteListItemProvider_id, a1, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
}

uint64_t sub_1000ABE88(void *a1)
{
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  objc_super v5 = (void *)((char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_10015F128 != -1) {
    swift_once();
  }
  uint64_t v6 = qword_10016AF88;
  void *v5 = qword_10016AF88;
  (*(void (**)(void *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  id v7 = (id)v6;
  LOBYTE(v6) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v3 + 8))(v5, v2);
  if (v6)
  {
    if (qword_10015F168 == -1) {
      goto LABEL_5;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_5:
  uint64_t v8 = type metadata accessor for Logger();
  sub_1000477B0(v8, (uint64_t)qword_10016B028);
  id v9 = a1;
  id v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 138543362;
    v16[1] = v9;
    uint64_t v14 = v9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v13 = v9;

    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Satellite state changed to %{public}@", v12, 0xCu);
    sub_100046B9C((uint64_t *)&unk_100163570);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    id v10 = v9;
  }

  return sub_1000194FC();
}

uint64_t sub_1000AC224(Swift::UInt a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for DispatchPredicate();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (Swift::UInt *)((char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_10015F128 != -1) {
    swift_once();
  }
  unint64_t v10 = qword_10016AF88;
  *id v9 = qword_10016AF88;
  (*(void (**)(void *, void, uint64_t))(v7 + 104))(v9, enum case for DispatchPredicate.onQueue(_:), v6);
  id v11 = (id)v10;
  uint64_t v12 = _dispatchPreconditionTest(_:)();
  uint64_t v14 = *(uint64_t (**)(void *, uint64_t))(v7 + 8);
  Swift::UInt v13 = v7 + 8;
  uint64_t result = v14(v9, v6);
  if ((v12 & 1) == 0)
  {
    __break(1u);
LABEL_24:
    swift_once();
    goto LABEL_11;
  }
  if (!a1) {
    return result;
  }
  LODWORD(v10) = sub_1000AE3AC(a2);
  uint64_t v12 = v3 + OBJC_IVAR____TtC11SettingsApp25SatelliteListItemProvider_slotInfos;
  swift_beginAccess();
  uint64_t v16 = *(void *)v12;
  if (*(void *)(*(void *)v12 + 16) && (unint64_t v17 = sub_10009F298(a1), (v18 & 1) != 0))
  {
    uint64_t v19 = (unsigned __int8 *)(*(void *)(v16 + 56) + 24 * v17);
    uint64_t v20 = *v19;
    uint64_t v21 = *((void *)v19 + 1);
    uint64_t v22 = *((void *)v19 + 2);
    swift_endAccess();
    swift_bridgeObjectRetain();
    uint64_t result = sub_1000AE59C(v20, v21, v22);
    if ((v10 & 1) == v20) {
      return result;
    }
  }
  else
  {
    swift_endAccess();
  }
  Swift::UInt v13 = a1;
  if (qword_10015F168 != -1) {
    goto LABEL_24;
  }
LABEL_11:
  uint64_t v23 = type metadata accessor for Logger();
  sub_1000477B0(v23, (uint64_t)qword_10016B028);
  id v24 = a2;
  os_signpost_type_t v25 = Logger.logObject.getter();
  os_log_type_t v26 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = swift_slowAlloc();
    uint64_t v46 = swift_slowAlloc();
    uint64_t v49 = v13;
    v50[0] = v46;
    *(_DWORD *)uint64_t v27 = 136315394;
    Swift::UInt v45 = v13;
    type metadata accessor for CTSubscriptionSlot(0);
    int v47 = v10;
    uint64_t v28 = String.init<A>(describing:)();
    uint64_t v30 = sub_100042948(v28, v29, v50);
    uint64_t v48 = v3;
    uint64_t v49 = v30;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v27 + 12) = 2082;
    id v31 = v24;
    id v32 = [v31 description];
    uint64_t v33 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v10 = v34;

    uint64_t v49 = sub_100042948(v33, v10, v50);
    Swift::UInt v13 = v45;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    LOBYTE(v10) = v47;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v25, v26, "isActiveCellSatSystem changed for %s: %{public}s", (uint8_t *)v27, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v49 = *(void *)v12;
  uint64_t v36 = v49;
  *(void *)uint64_t v12 = 0x8000000000000000;
  unint64_t v38 = sub_10009F298(v13);
  uint64_t v39 = *(void *)(v36 + 16);
  BOOL v40 = (v37 & 1) == 0;
  uint64_t v41 = v39 + v40;
  if (__OFADD__(v39, v40))
  {
    __break(1u);
LABEL_26:
    sub_1000A15D8();
    uint64_t v36 = v49;
    goto LABEL_19;
  }
  os_log_type_t v26 = v37;
  if (*(void *)(v36 + 24) < v41)
  {
    sub_10009FE10(v41, isUniquelyReferenced_nonNull_native);
    uint64_t v36 = v49;
    unint64_t v42 = sub_10009F298(v13);
    if ((v26 & 1) != (v43 & 1))
    {
      type metadata accessor for CTSubscriptionSlot(0);
      uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
      return result;
    }
    unint64_t v38 = v42;
    goto LABEL_19;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    goto LABEL_26;
  }
LABEL_19:
  *(void *)uint64_t v12 = v36;
  swift_bridgeObjectRelease();
  uint64_t v44 = *(void **)v12;
  swift_bridgeObjectRetain();
  if ((v26 & 1) == 0) {
    sub_1000A0E08(v38, v13, 0, 0, 0, v44);
  }
  *(unsigned char *)(v44[7] + 24 * v38) = v10 & 1;
  swift_endAccess();
  swift_bridgeObjectRelease();
  return sub_1000194FC();
}

void sub_1000AC724(id a1, id a2)
{
  uint64_t v4 = type metadata accessor for DispatchPredicate();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (void *)((char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_10015F128 != -1) {
    swift_once();
  }
  uint64_t v8 = qword_10016AF88;
  void *v7 = qword_10016AF88;
  (*(void (**)(void *, void, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  id v9 = (id)v8;
  LOBYTE(v8) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) == 0)
  {
    __break(1u);
LABEL_13:
    swift_once();
    goto LABEL_7;
  }
  if (!a2 || !a1) {
    return;
  }
  uint64_t v10 = qword_10015F168;
  a2 = a2;
  a1 = a1;
  if (v10 != -1) {
    goto LABEL_13;
  }
LABEL_7:
  uint64_t v11 = type metadata accessor for Logger();
  sub_1000477B0(v11, (uint64_t)qword_10016B028);
  id v12 = a2;
  id v13 = a1;
  id v14 = v12;
  id v15 = v13;
  uint64_t v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.default.getter();
  int v18 = v17;
  uint64_t v19 = &selRef_application_configurationForConnectingSceneSession_options_;
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v20 = swift_slowAlloc();
    int v30 = v18;
    uint64_t v21 = v20;
    uint64_t v31 = swift_slowAlloc();
    uint64_t v33 = v31;
    *(_DWORD *)uint64_t v21 = 136315394;
    id v32 = [v15 slotID];
    type metadata accessor for CTSubscriptionSlot(0);
    uint64_t v22 = String.init<A>(describing:)();
    id v32 = (id)sub_100042948(v22, v23, &v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 12) = 2082;
    v29[1] = v21 + 14;
    id v24 = v14;
    id v25 = [v24 description];
    uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v28 = v27;

    uint64_t v19 = &selRef_application_configurationForConnectingSceneSession_options_;
    id v32 = (id)sub_100042948(v26, v28, &v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v16, (os_log_type_t)v30, "displayStatusChanged for %s: %{public}s", (uint8_t *)v21, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  sub_1000AC224((Swift::UInt)[v15 v19[172]], v14);
}

uint64_t sub_1000ACB6C(Swift::UInt a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DispatchPredicate();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10015F128 != -1) {
    swift_once();
  }
  uint64_t v10 = qword_10016AF88;
  *(void *)id v9 = qword_10016AF88;
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for DispatchPredicate.onQueue(_:), v6);
  id v11 = (id)v10;
  LOBYTE(v10) = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if ((v10 & 1) == 0)
  {
    __break(1u);
LABEL_39:
    swift_once();
LABEL_18:
    uint64_t v22 = type metadata accessor for Logger();
    sub_1000477B0(v22, (uint64_t)qword_10016B028);
    swift_bridgeObjectRetain_n();
    unint64_t v23 = Logger.logObject.getter();
    os_log_type_t v24 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = swift_slowAlloc();
      uint64_t v45 = swift_slowAlloc();
      uint64_t v46 = a1;
      *(_DWORD *)uint64_t v25 = 136315394;
      type metadata accessor for CTSubscriptionSlot(0);
      uint64_t v26 = String.init<A>(describing:)();
      uint64_t v46 = sub_100042948(v26, v27, &v45);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v25 + 12) = 2082;
      uint64_t v46 = a2;
      uint64_t v47 = a3;
      swift_bridgeObjectRetain();
      sub_100046B9C(&qword_100163BB0);
      uint64_t v28 = String.init<A>(describing:)();
      uint64_t v46 = sub_100042948(v28, v29, &v45);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "Carrier name changed for %s: %{public}s", (uint8_t *)v25, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    swift_beginAccess();
    if (!*(void *)(*(void *)v9 + 16) || (sub_10009F298(a1), (v30 & 1) == 0))
    {
      swift_endAccess();
      swift_beginAccess();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v45 = *(void *)v9;
      *(void *)id v9 = 0x8000000000000000;
      sub_1000A0B28(0, 0, 0, a1, isUniquelyReferenced_nonNull_native);
      *(void *)id v9 = v45;
      swift_bridgeObjectRelease();
    }
    swift_endAccess();
    swift_beginAccess();
    char v32 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v45 = *(void *)v9;
    uint64_t v33 = v45;
    *(void *)id v9 = 0x8000000000000000;
    unint64_t v35 = sub_10009F298(a1);
    uint64_t v36 = *(void *)(v33 + 16);
    BOOL v37 = (v34 & 1) == 0;
    uint64_t v38 = v36 + v37;
    if (__OFADD__(v36, v37))
    {
      __break(1u);
    }
    else
    {
      os_log_type_t v24 = v34;
      if (*(void *)(v33 + 24) < v38)
      {
        sub_10009FE10(v38, v32);
        unint64_t v39 = sub_10009F298(a1);
        if ((v24 & 1) != (v40 & 1))
        {
LABEL_43:
          type metadata accessor for CTSubscriptionSlot(0);
          uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
          __break(1u);
          return result;
        }
        unint64_t v35 = v39;
        if ((v24 & 1) == 0)
        {
LABEL_42:
          __break(1u);
          goto LABEL_43;
        }
LABEL_31:
        uint64_t v41 = v45;
        char v42 = *(unsigned char *)(*(void *)(v45 + 56) + 24 * v35);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        if (a3 == 1)
        {
          sub_1000A05F8(v35, v41);
        }
        else
        {
          uint64_t v43 = *(void *)(v41 + 56) + 24 * v35;
          *(unsigned char *)uint64_t v43 = v42;
          *(void *)(v43 + 8) = a2;
          *(void *)(v43 + 16) = a3;
        }
        *(void *)id v9 = v41;
        swift_endAccess();
        return sub_1000194FC();
      }
      if (v32)
      {
        if ((v34 & 1) == 0) {
          goto LABEL_42;
        }
        goto LABEL_31;
      }
    }
    sub_1000A15D8();
    if ((v24 & 1) == 0) {
      goto LABEL_42;
    }
    goto LABEL_31;
  }
  if (!a1) {
    return result;
  }
  id v9 = (char *)(v44[1] + OBJC_IVAR____TtC11SettingsApp25SatelliteListItemProvider_slotInfos);
  swift_beginAccess();
  uint64_t v13 = *(void *)v9;
  if (!*(void *)(*(void *)v9 + 16) || (unint64_t v14 = sub_10009F298(a1), (v15 & 1) == 0))
  {
    swift_endAccess();
LABEL_16:
    uint64_t result = swift_bridgeObjectRelease();
    if (!a3) {
      return result;
    }
    goto LABEL_17;
  }
  uint64_t v16 = (unsigned __int8 *)(*(void *)(v13 + 56) + 24 * v14);
  uint64_t v17 = *v16;
  uint64_t v19 = *((void *)v16 + 1);
  uint64_t v18 = *((void *)v16 + 2);
  swift_endAccess();
  swift_bridgeObjectRetain_n();
  sub_1000AE59C(v17, v19, v18);
  if (!v18) {
    goto LABEL_16;
  }
  if (!a3)
  {
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  if (v19 == a2 && v18 == a3) {
    return swift_bridgeObjectRelease();
  }
  char v21 = _stringCompareWithSmolCheck(_:_:expecting:)();
  uint64_t result = swift_bridgeObjectRelease();
  if ((v21 & 1) == 0)
  {
LABEL_17:
    if (qword_10015F168 == -1) {
      goto LABEL_18;
    }
    goto LABEL_39;
  }
  return result;
}

uint64_t sub_1000AD138(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v8 = (void *)result;
    if (a2)
    {
      if (qword_10015F168 != -1) {
        swift_once();
      }
      uint64_t v9 = type metadata accessor for Logger();
      sub_1000477B0(v9, (uint64_t)qword_10016B028);
      swift_errorRetain();
      swift_errorRetain();
      uint64_t v10 = Logger.logObject.getter();
      os_log_type_t v11 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v10, v11))
      {
        id v12 = (uint8_t *)swift_slowAlloc();
        v16[0] = swift_slowAlloc();
        *(_DWORD *)id v12 = 136446210;
        swift_errorRetain();
        sub_100046B9C(&qword_100162508);
        uint64_t v13 = String.init<A>(describing:)();
        uint64_t v15 = sub_100042948(v13, v14, v16);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v10, v11, "copyCarrierBundleValue for CarrierName failed: %{public}s", v12, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_errorRelease();
        swift_errorRelease();
      }

      goto LABEL_12;
    }
    if (a1)
    {
      self;
      if (!swift_dynamicCastObjCClass())
      {
LABEL_12:
        a1 = 0;
        goto LABEL_13;
      }
      v16[0] = 0;
      v16[1] = 0;
      static String._conditionallyBridgeFromObjectiveC(_:result:)();
      a1 = 0;
    }
LABEL_13:
    sub_1000ACB6C((Swift::UInt)[a4 slotID:v15 v16[0]], a1, 0);

    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1000AD3AC(void *a1, void *a2, void *a3)
{
  if (a2 || !a1)
  {
    if (qword_10015F168 != -1) {
      swift_once();
    }
    uint64_t v23 = type metadata accessor for Logger();
    sub_1000477B0(v23, (uint64_t)qword_10016B028);
    id v24 = a1;
    swift_errorRetain();
    id v36 = v24;
    swift_errorRetain();
    uint64_t v25 = Logger.logObject.getter();
    os_log_type_t v26 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = swift_slowAlloc();
      v37[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v27 = 136446466;
      id v38 = a2;
      swift_errorRetain();
      sub_100046B9C(&qword_100162508);
      uint64_t v28 = String.init<A>(describing:)();
      id v38 = (id)sub_100042948(v28, v29, v37);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      *(_WORD *)(v27 + 12) = 2082;
      id v38 = a1;
      id v30 = v36;
      sub_100046B9C((uint64_t *)&unk_100162510);
      uint64_t v31 = String.init<A>(describing:)();
      id v38 = (id)sub_100042948(v31, v32, v37);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "copyRegistrationDisplayStatus failed: %{public}s, status: %{public}s", (uint8_t *)v27, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }
  }
  else
  {
    uint64_t v6 = qword_10015F168;
    id v7 = a1;
    if (v6 != -1) {
      swift_once();
    }
    uint64_t v8 = type metadata accessor for Logger();
    sub_1000477B0(v8, (uint64_t)qword_10016B028);
    id v9 = v7;
    id v10 = a3;
    id v11 = v9;
    id v12 = v10;
    uint64_t v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v13, v14))
    {
      os_log_type_t type = v14;
      uint64_t v15 = swift_slowAlloc();
      v37[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 136315394;
      id v38 = [v12 slotID];
      type metadata accessor for CTSubscriptionSlot(0);
      uint64_t v16 = String.init<A>(describing:)();
      id v38 = (id)sub_100042948(v16, v17, v37);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v15 + 12) = 2082;
      id v18 = v11;
      id v19 = [v18 description];
      uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v22 = v21;

      id v38 = (id)sub_100042948(v20, v22, v37);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v13, type, "displayStatus fetched for %s: %{public}s", (uint8_t *)v15, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      os_log_type_t v34 = (void *)Strong;
      sub_1000AC224((Swift::UInt)[v12 slotID], v11);
    }
  }
}

BOOL sub_1000AD8B0(id a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  if (a5 >> 62) {
    goto LABEL_12;
  }
  uint64_t v7 = *(void *)((a5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v7; uint64_t v7 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v8 = 4;
    while (1)
    {
      id v9 = (a5 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(a5 + 8 * v8);
      id v10 = v9;
      uint64_t v11 = v8 - 3;
      if (__OFADD__(v8 - 4, 1)) {
        break;
      }
      id v12 = [v9 slotID];
      BOOL v13 = v12 == a1;
      if (v12 == a1) {
        goto LABEL_15;
      }

      ++v8;
      if (v11 == v7) {
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_12:
    swift_bridgeObjectRetain();
  }
  BOOL v13 = 0;
LABEL_14:
  id v10 = 0;
LABEL_15:
  swift_bridgeObjectRelease();

  return v13;
}

void sub_1000AD9B4()
{
  uint64_t v0 = type metadata accessor for DispatchPredicate();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (uint64_t *)((char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_10015F128 != -1) {
    swift_once();
  }
  uint64_t v4 = qword_10016AF88;
  *uint64_t v3 = qword_10016AF88;
  (*(void (**)(void *, void, uint64_t))(v1 + 104))(v3, enum case for DispatchPredicate.onQueue(_:), v0);
  id v5 = (id)v4;
  LOBYTE(v4) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v1 + 8))(v3, v0);
  if (v4)
  {
    if (qword_10015F168 == -1) {
      goto LABEL_5;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_5:
  uint64_t v6 = type metadata accessor for Logger();
  sub_1000477B0(v6, (uint64_t)qword_10016B028);
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    id v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "activeSubscriptionsDidChange", v9, 2u);
    swift_slowDealloc();
  }

  sub_10000EB80();
}

uint64_t destroy for SatelliteListItemProvider.SlotInfo()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s11SettingsApp25SatelliteListItemProviderC8SlotInfoVwCP_0(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SatelliteListItemProvider.SlotInfo(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SatelliteListItemProvider.SlotInfo(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SatelliteListItemProvider.SlotInfo(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SatelliteListItemProvider.SlotInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SatelliteListItemProvider.SlotInfo()
{
  return &type metadata for SatelliteListItemProvider.SlotInfo;
}

unint64_t destroy for SatelliteListItemProvider.SatelliteState(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  int v2 = -1;
  if (result < 0xFFFFFFFF) {
    int v2 = result;
  }
  if (v2 - 1 < 0) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *_s11SettingsApp25SatelliteListItemProviderC14SatelliteStateOwCP_0(void *a1, void *a2)
{
  unint64_t v3 = a2[1];
  LODWORD(v4) = -1;
  if (v3 < 0xFFFFFFFF) {
    uint64_t v4 = a2[1];
  }
  if ((int)v4 - 1 < 0)
  {
    *a1 = *a2;
    a1[1] = v3;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  return a1;
}

void *assignWithCopy for SatelliteListItemProvider.SatelliteState(void *a1, void *a2)
{
  LODWORD(v4) = -1;
  if (a1[1] >= 0xFFFFFFFFuLL) {
    LODWORD(v5) = -1;
  }
  else {
    uint64_t v5 = a1[1];
  }
  int v6 = v5 - 1;
  if (a2[1] < 0xFFFFFFFFuLL) {
    uint64_t v4 = a2[1];
  }
  int v7 = v4 - 1;
  if (v6 < 0)
  {
    if (v7 < 0)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  if ((v7 & 0x80000000) == 0)
  {
LABEL_11:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  return a1;
}

__n128 initializeWithTake for PasscodeCredentialWrapper(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

void *assignWithTake for SatelliteListItemProvider.SatelliteState(void *a1, void *a2)
{
  unint64_t v4 = a1[1];
  int v5 = -1;
  if (v4 < 0xFFFFFFFF) {
    int v5 = v4;
  }
  if (v5 - 1 < 0)
  {
    unint64_t v6 = a2[1];
    LODWORD(v7) = -1;
    if (v6 < 0xFFFFFFFF) {
      uint64_t v7 = a2[1];
    }
    if ((int)v7 - 1 < 0)
    {
      *a1 = *a2;
      a1[1] = v6;
      swift_bridgeObjectRelease();
      return a1;
    }
    swift_bridgeObjectRelease();
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  return a1;
}

uint64_t getEnumTagSinglePayload for SatelliteListItemProvider.SatelliteState(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFC && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483644);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  unsigned int v5 = v4 + 1;
  unsigned int v6 = v4 - 2;
  if (v5 >= 4) {
    return v6;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for SatelliteListItemProvider.SatelliteState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFB)
  {
    *(void *)__n128 result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)__n128 result = a2 - 2147483644;
    if (a3 >= 0x7FFFFFFC) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFC) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 3;
    }
  }
  return result;
}

uint64_t sub_1000ADFE0(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  int v2 = v1 - 1;
  if (v2 < 0) {
    int v2 = -1;
  }
  return (v2 + 1);
}

void *sub_1000AE004(void *result, unsigned int a2)
{
  if (a2 > 0x7FFFFFFE)
  {
    *__n128 result = a2 - 0x7FFFFFFF;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for SatelliteListItemProvider.SatelliteState()
{
  return &type metadata for SatelliteListItemProvider.SatelliteState;
}

uint64_t sub_1000AE040(uint64_t a1)
{
  uint64_t v2 = sub_100046B9C((uint64_t *)&unk_100163AD0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000AE0A0()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

BOOL sub_1000AE0D8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000AD8B0(a1, a2, a3, a4, *(void *)(v4 + 16));
}

uint64_t sub_1000AE0E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2 == 3) {
    return a4 == 3;
  }
  if (a2 == 2) {
    return a4 == 2;
  }
  if (a2 != 1)
  {
    if ((unint64_t)(a4 - 1) < 3) {
      return 0;
    }
    if (a2) {
      return a4 && (a1 == a3 && a2 == a4 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0);
    }
    if (a4)
    {
      sub_1000196E4(a1, 0);
      return 0;
    }
    return 1;
  }
  return a4 == 1;
}

uint64_t sub_1000AE180(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  unsigned int v5 = (void *)((char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_10015F128 != -1) {
    swift_once();
  }
  uint64_t v6 = qword_10016AF88;
  void *v5 = qword_10016AF88;
  (*(void (**)(void *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  id v7 = (id)v6;
  LOBYTE(v6) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v3 + 8))(v5, v2);
  if (v6)
  {
    if (qword_10015F168 == -1) {
      goto LABEL_5;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_5:
  uint64_t v8 = type metadata accessor for Logger();
  sub_1000477B0(v8, (uint64_t)qword_10016B028);
  id v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 134217984;
    v13[1] = a1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Off grid mode changed to %ld", v11, 0xCu);
    swift_slowDealloc();
  }

  return sub_1000194FC();
}

uint64_t sub_1000AE3AC(void *a1)
{
  if (![a1 isSatelliteSystem])
  {
    char v7 = 0;
    return v7 & 1;
  }
  id v2 = [a1 registrationDisplayStatus];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v6 = v5;
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v6 = 0;
  }
  if (kCTRegistrationStatusRegisteredHome)
  {
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    if (v6)
    {
      if (v4 == v8 && v6 == v9) {
        goto LABEL_22;
      }
      char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v11)
      {
        char v7 = 1;
        return v7 & 1;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    id v12 = [a1 registrationDisplayStatus];
    if (v12)
    {
      BOOL v13 = v12;
      uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v16 = v15;
    }
    else
    {
      uint64_t v14 = 0;
      uint64_t v16 = 0;
    }
    if (kCTRegistrationStatusRegisteredRoaming)
    {
      uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      if (!v16)
      {
        char v7 = 0;
LABEL_26:
        swift_bridgeObjectRelease();
        return v7 & 1;
      }
      if (v14 != v17 || v16 != v18)
      {
        char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
        goto LABEL_25;
      }
LABEL_22:
      char v7 = 1;
LABEL_25:
      swift_bridgeObjectRelease();
      goto LABEL_26;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    __break(1u);
  }
  uint64_t result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_1000AE554()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_1000AE594(void *a1, void *a2)
{
  sub_1000AD3AC(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_1000AE59C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3 != 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1000AE5B0()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000AE5F0(uint64_t a1, uint64_t a2)
{
  return sub_1000AD138(a1, a2, *(void *)(v2 + 16), *(void **)(v2 + 24));
}

unint64_t sub_1000AE5F8()
{
  unint64_t result = qword_100162530;
  if (!qword_100162530)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100162530);
  }
  return result;
}

void *sub_1000AE644()
{
  uint64_t v1 = OBJC_IVAR____TtC11SettingsApp19VPNListItemProvider_vpnConnectivityManager;
  unint64_t result = *(void **)(v0 + OBJC_IVAR____TtC11SettingsApp19VPNListItemProvider_vpnConnectivityManager);
  if (result)
  {
    [result setDelegate:0];
    uint64_t v3 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = 0;

    sub_10003DBAC(v0 + OBJC_IVAR____TtC11SettingsApp19VPNListItemProvider_id, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
    sub_100042A1C(v0 + OBJC_IVAR____TtC11SettingsApp19VPNListItemProvider_invalidator);

    return (void *)swift_deallocClassInstance();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1000AE70C()
{
  return type metadata accessor for VPNListItemProvider();
}

void sub_1000AE714(char a1)
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = *(void **)(Strong + OBJC_IVAR____TtC11SettingsApp19VPNListItemProvider_vpnConnectivityManager);
    if (v3)
    {
      id v4 = v3;
      swift_release();
      id v5 = [v4 toggleVPNConnectivity:a1 & 1];
    }
    else
    {
      swift_release();
    }
  }
}

uint64_t sub_1000AE7C0@<X0>(uint64_t a1@<X8>)
{
  return sub_100057870(*v1 + OBJC_IVAR____TtC11SettingsApp19VPNListItemProvider_id, a1, (uint64_t (*)(void))type metadata accessor for PrimarySettingsListItemIdentifier);
}

uint64_t sub_1000AE800()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1000AE838(char a1)
{
}

uint64_t sub_1000AE840()
{
  swift_release();

  return _swift_deallocObject(v0, 57, 7);
}

Swift::Int sub_1000AE878()
{
  uint64_t v1 = *(void *)(v0 + 8);
  Hasher.init(_seed:)();
  switch(v1)
  {
    case 0:
      Swift::UInt v2 = 0;
      goto LABEL_7;
    case 1:
      Swift::UInt v2 = 1;
      goto LABEL_7;
    case 2:
      Swift::UInt v2 = 2;
      goto LABEL_7;
    case 3:
      Swift::UInt v2 = 3;
LABEL_7:
      Hasher._combine(_:)(v2);
      break;
    default:
      Hasher._combine(_:)(4uLL);
      String.hash(into:)();
      break;
  }
  return Hasher._finalize()();
}

void sub_1000AE948()
{
  switch(*(void *)(v0 + 8))
  {
    case 0:
      Swift::UInt v1 = 0;
      goto LABEL_9;
    case 1:
      Swift::UInt v1 = 1;
      goto LABEL_9;
    case 2:
      Swift::UInt v1 = 2;
      goto LABEL_9;
    case 3:
      Swift::UInt v1 = 3;
LABEL_9:
      Hasher._combine(_:)(v1);
      break;
    default:
      Hasher._combine(_:)(4uLL);
      String.hash(into:)();
      break;
  }
}

Swift::Int sub_1000AEA10()
{
  uint64_t v1 = *(void *)(v0 + 8);
  Hasher.init(_seed:)();
  switch(v1)
  {
    case 0:
      Swift::UInt v2 = 0;
      goto LABEL_7;
    case 1:
      Swift::UInt v2 = 1;
      goto LABEL_7;
    case 2:
      Swift::UInt v2 = 2;
      goto LABEL_7;
    case 3:
      Swift::UInt v2 = 3;
LABEL_7:
      Hasher._combine(_:)(v2);
      break;
    default:
      Hasher._combine(_:)(4uLL);
      String.hash(into:)();
      break;
  }
  return Hasher._finalize()();
}

uint64_t sub_1000AEADC(uint64_t *a1, uint64_t a2)
{
  return sub_1000AEF1C(*a1, a1[1], *(void *)a2, *(void *)(a2 + 8));
}

uint64_t sub_1000AEAF0()
{
  uint64_t v1 = OBJC_IVAR____TtC11SettingsApp20WiFiListItemProvider_wifiMonitor;
  Swift::UInt v2 = *(void **)(v0 + OBJC_IVAR____TtC11SettingsApp20WiFiListItemProvider_wifiMonitor);
  if (v2 && ([v2 setHandler:0], (uint64_t v3 = *(void **)(v0 + v1)) != 0))
  {
    [v3 stopMonitoring];
    id v4 = *(void **)(v0 + v1);
  }
  else
  {
    id v4 = 0;
  }
  *(void *)(v0 + v1) = 0;

  sub_10002F040(*(void *)(v0 + 16), *(void *)(v0 + 24));
  sub_100045F84(v0 + OBJC_IVAR____TtC11SettingsApp20WiFiListItemProvider_id);

  sub_100042A1C(v0 + OBJC_IVAR____TtC11SettingsApp20WiFiListItemProvider_invalidator);
  return v0;
}