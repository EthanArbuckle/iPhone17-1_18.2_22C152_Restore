uint64_t sub_1000047C0(uint64_t a1)
{
  uint64_t result;

  result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

uint64_t sub_1000048E4(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

uint64_t sub_100004A04(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_100004A78()
{
  v1 = v0;
  type metadata accessor for UIHostingControllerSizingOptions();
  __chkstk_darwin();
  v2 = *(void **)&v0[OBJC_IVAR____TtC21WritingToolsUIService24SuggestionViewController_suggestionView + 16];
  v3 = *(void **)&v0[OBJC_IVAR____TtC21WritingToolsUIService24SuggestionViewController_suggestionView + 24];
  uint64_t v44 = *(void *)&v0[OBJC_IVAR____TtC21WritingToolsUIService24SuggestionViewController_suggestionView];
  uint64_t v45 = *(void *)&v0[OBJC_IVAR____TtC21WritingToolsUIService24SuggestionViewController_suggestionView + 8];
  objc_allocWithZone((Class)sub_1000063C0(&qword_1001FAFC8));
  swift_retain();
  swift_retain();
  id v4 = v2;
  id v5 = v3;
  v6 = (void *)UIHostingController.init(rootView:)();
  static UIHostingControllerSizingOptions.preferredContentSize.getter();
  dispatch thunk of UIHostingController.sizingOptions.setter();
  id v7 = [v0 view:v44, v45, v2, v3];
  if (!v7)
  {
    __break(1u);
    goto LABEL_14;
  }
  v8 = v7;
  id v9 = [v6 view];
  if (!v9)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v10 = v9;
  [v8 addSubview:v9];

  id v11 = [v6 view];
  if (!v11)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v12 = v11;
  [v11 setTranslatesAutoresizingMaskIntoConstraints:0];

  [v1 addChildViewController:v6];
  sub_1000063C0(&qword_1001FAFD0);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_100189610;
  id v14 = [v6 view];
  if (!v14)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v15 = v14;
  id v16 = [v14 leadingAnchor];

  id v17 = [v1 view];
  if (!v17)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v18 = v17;
  id v19 = [v17 leadingAnchor];

  id v20 = [v16 constraintEqualToAnchor:v19];
  *(void *)(v13 + 32) = v20;
  id v21 = [v6 view];
  if (!v21)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v22 = v21;
  id v23 = [v21 trailingAnchor];

  id v24 = [v1 view];
  if (!v24)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v25 = v24;
  id v26 = [v24 trailingAnchor];

  id v27 = [v23 constraintEqualToAnchor:v26];
  *(void *)(v13 + 40) = v27;
  id v28 = [v6 view];
  if (!v28)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v29 = v28;
  id v30 = [v28 topAnchor];

  id v31 = [v1 view];
  if (!v31)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v32 = v31;
  id v33 = [v31 topAnchor];

  id v34 = [v30 constraintEqualToAnchor:v33];
  *(void *)(v13 + 48) = v34;
  id v35 = [v6 view];
  if (!v35)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v36 = v35;
  id v37 = [v35 bottomAnchor];

  id v38 = [v1 view];
  if (v38)
  {
    v39 = v38;
    v40 = self;
    id v41 = [v39 bottomAnchor];

    id v42 = [v37 constraintEqualToAnchor:v41];
    *(void *)(v13 + 56) = v42;
    specialized Array._endMutation()();
    sub_1000085FC(0, (unint64_t *)&qword_1001FAFD8);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v40 activateConstraints:isa v13];

    return;
  }
LABEL_23:
  __break(1u);
}

id sub_100005028()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SuggestionViewController();
  return [super dealloc];
}

unint64_t sub_1000050D0(uint64_t a1)
{
  return sub_100005530(a1, &qword_1001FAF68, &qword_1001FAF70);
}

unint64_t sub_1000050E4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    objc_super v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000063C0(&qword_1001FAF78);
  objc_super v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  id v4 = (void **)(a1 + 40);
  while (1)
  {
    id v5 = *v4;
    id v6 = *(v4 - 1);
    id v7 = v5;
    unint64_t result = sub_100007CD0((uint64_t)v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = 8 * result;
    *(void *)(v2[6] + v10) = v6;
    *(void *)(v2[7] + v10) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1000051F0(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000063C0(&qword_1001FAF18);
  uint64_t v2 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_100008DD4(v6, (uint64_t)&v15, &qword_1001FAF20);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_100007C48(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_100007CC0(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100005328(uint64_t a1)
{
  uint64_t v2 = sub_1000063C0(&qword_1001FB010);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000063C0(&qword_1001FB018);
  uint64_t v6 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_100008DD4(v12, (uint64_t)v5, &qword_1001FB010);
    unint64_t result = sub_100007B70((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = type metadata accessor for UUID();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v5, v18);
    *(unsigned char *)(v7[7] + v16) = v5[v9];
    uint64_t v19 = v7[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20) {
      goto LABEL_11;
    }
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10000551C(uint64_t a1)
{
  return sub_100005530(a1, &qword_1001FB000, &qword_1001FB008);
}

unint64_t sub_100005530(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v6 = sub_1000063C0(a2);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    unint64_t v11 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000063C0(a3);
  uint64_t v10 = static _DictionaryStorage.allocate(capacity:)();
  unint64_t v11 = (void *)v10;
  uint64_t v12 = *(void *)(a1 + 16);
  if (!v12)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v11;
  }
  uint64_t v13 = *(int *)(v6 + 48);
  uint64_t v14 = v10 + 64;
  unint64_t v15 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v26[1] = a1;
  uint64_t v16 = a1 + v15;
  uint64_t v17 = *(void *)(v7 + 72);
  swift_retain();
  while (1)
  {
    sub_100008DD4(v16, (uint64_t)v9, a2);
    unint64_t result = sub_100007B70((uint64_t)v9);
    if (v19) {
      break;
    }
    unint64_t v20 = result;
    *(void *)(v14 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v21 = v11[6];
    uint64_t v22 = type metadata accessor for UUID();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v21 + *(void *)(*(void *)(v22 - 8) + 72) * v20, v9, v22);
    *(void *)(v11[7] + 8 * v20) = *(void *)&v9[v13];
    uint64_t v23 = v11[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24) {
      goto LABEL_11;
    }
    v11[2] = v25;
    v16 += v17;
    if (!--v12)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10000571C(uint64_t a1)
{
  return sub_100005530(a1, &qword_1001FAF88, &qword_1001FAF90);
}

unint64_t sub_100005730(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000063C0(&qword_1001FAFB8);
  uint64_t v2 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_100008DD4(v6, (uint64_t)&v15, &qword_1001FAFC0);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_100007C48(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    unint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *unint64_t v11 = v7;
    v11[1] = v8;
    unint64_t result = sub_1000085E4(&v17, v3[7] + 40 * result);
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 56;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100005874(uint64_t a1)
{
  return sub_100005530(a1, &qword_1001FAFA8, &qword_1001FAFB0);
}

unint64_t sub_100005888(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000063C0(&qword_1001FAF80);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_100007C48(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    unint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    *unint64_t v11 = v5;
    v11[1] = v6;
    uint64_t v12 = (void *)(v2[7] + 16 * result);
    void *v12 = v8;
    v12[1] = v7;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1000059AC(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000063C0(&qword_1001FAF48);
  uint64_t v2 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_100008DD4(v6, (uint64_t)&v13, &qword_1001FAF50);
    uint64_t v7 = v13;
    unint64_t result = sub_100007CD0(v13);
    if (v9) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v3[6] + 8 * result) = v7;
    unint64_t result = (unint64_t)sub_100007CC0(&v14, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100005ADC(uint64_t a1)
{
  uint64_t v2 = sub_1000063C0(&qword_1001FB1B0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (void *)((char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000063C0(&qword_1001FB1B8);
  uint64_t v6 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  char v9 = (char *)v5 + *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v25[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_100008DD4(v12, (uint64_t)v5, &qword_1001FB1B0);
    uint64_t v14 = *v5;
    uint64_t v15 = v5[1];
    unint64_t result = sub_100007D60();
    if (v17) {
      break;
    }
    unint64_t v18 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    char v19 = (void *)(v7[6] + 16 * result);
    *char v19 = v14;
    v19[1] = v15;
    uint64_t v20 = v7[7];
    uint64_t v21 = type metadata accessor for LayoutSubview();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v20 + *(void *)(*(void *)(v21 - 8) + 72) * v18, v9, v21);
    uint64_t v22 = v7[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23) {
      goto LABEL_11;
    }
    v7[2] = v24;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100005CE8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000063C0(&qword_1001FB1A8);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    unint64_t result = sub_100007D60();
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (void *)(v2[6] + 16 * result);
    void *v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100005DF4(uint64_t a1)
{
  return sub_100005530(a1, &qword_1001FAFF0, &qword_1001FAFF8);
}

unint64_t sub_100005E08(uint64_t a1)
{
  uint64_t v2 = sub_1000063C0(&qword_1001FAFE0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000063C0(&qword_1001FAFE8);
  uint64_t v6 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_100008DD4(v12, (uint64_t)v5, &qword_1001FAFE0);
    unint64_t result = sub_100007B70((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = type metadata accessor for UUID();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v5, v18);
    *(void *)(v7[7] + 8 * v16) = *(void *)&v5[v9];
    uint64_t v19 = v7[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20) {
      goto LABEL_11;
    }
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100005FFC(uint64_t a1)
{
  return sub_100005530(a1, &qword_1001FAF98, &qword_1001FAFA0);
}

unint64_t sub_100006010(uint64_t a1)
{
  uint64_t v2 = sub_1000063C0(&qword_1001FAF28);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000063C0(&qword_1001FAF30);
  uint64_t v6 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_100008DD4(v12, (uint64_t)v5, &qword_1001FAF28);
    unint64_t result = sub_100007DD4((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = type metadata accessor for FBKSForm.Question();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v5, v18);
    *(void *)(v7[7] + 8 * v16) = *(void *)&v5[v9];
    uint64_t v19 = v7[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20) {
      goto LABEL_11;
    }
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t variable initialization expression of WritingToolsView._presentationModel()
{
  return Environment.init<A>(_:)();
}

uint64_t sub_100006278(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t variable initialization expression of WritingToolsView._dynamicTypeSize@<X0>(uint64_t *a1@<X8>)
{
  return sub_1000068D0((uint64_t *)&unk_1001FAE30, a1);
}

uint64_t sub_1000062D4()
{
  return EnvironmentValues.dynamicTypeSize.getter();
}

uint64_t sub_1000062F8(uint64_t a1)
{
  type metadata accessor for DynamicTypeSize();
  __chkstk_darwin();
  (*(void (**)(char *, uint64_t))(v3 + 16))((char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return EnvironmentValues.dynamicTypeSize.setter();
}

uint64_t sub_1000063C0(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t variable initialization expression of ToolModel._contexts()
{
  return 0;
}

uint64_t variable initialization expression of ProofreadingModel.inputStringForFeedback()
{
  return 0;
}

uint64_t variable initialization expression of ToolModel.inputWarningDismissed()
{
  return 0;
}

uint64_t variable initialization expression of PresentationModel._sourceResponderHorizontalSizeClass()
{
  return 0;
}

uint64_t variable initialization expression of WritingToolsView._horizontalSizeClass@<X0>(uint64_t *a1@<X8>)
{
  return sub_1000068D0(&qword_1001FB420, a1);
}

uint64_t sub_100006444()
{
  return EnvironmentValues.horizontalSizeClass.getter();
}

uint64_t sub_100006468(uint64_t a1)
{
  sub_1000063C0(&qword_1001FB020);
  __chkstk_darwin();
  sub_100008DD4(a1, (uint64_t)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1001FB020);
  return EnvironmentValues.horizontalSizeClass.setter();
}

uint64_t variable initialization expression of ToolModel._bundleID()
{
  return 0;
}

uint64_t variable initialization expression of ToolModel._mode()
{
  return 0;
}

uint64_t variable initialization expression of WritingToolsModel.proofreadingModel()
{
  return sub_1000065E0((void (*)(void))type metadata accessor for ProofreadingModel, sub_10016B810);
}

uint64_t variable initialization expression of WritingToolsModel.compositionModel()
{
  return sub_1000065E0((void (*)(void))type metadata accessor for CompositionModel, sub_100082058);
}

uint64_t variable initialization expression of WritingToolsModel._gmsAvailability@<X0>(uint64_t a1@<X8>)
{
  return sub_100006B44((uint64_t (*)(void))&type metadata accessor for GenerativeModelsAvailability.Availability, a1);
}

uint64_t variable initialization expression of WritingToolsModel._auditedHostPID()
{
  return 0x100000000;
}

uint64_t variable initialization expression of WritingToolsModel.networkMonitor()
{
  return sub_1000065E0((void (*)(void))&type metadata accessor for NWPathMonitor, (uint64_t (*)(void))&NWPathMonitor.init());
}

uint64_t sub_1000065E0(void (*a1)(void), uint64_t (*a2)(void))
{
  return a2();
}

uint64_t variable initialization expression of WritingToolsModel.networkQueue()
{
  uint64_t v0 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin();
  uint64_t v3 = (char *)v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin();
  type metadata accessor for DispatchQoS();
  __chkstk_darwin();
  sub_1000085FC(0, (unint64_t *)&qword_1001FF440);
  static DispatchQoS.unspecified.getter();
  v5[1] = &_swiftEmptyArrayStorage;
  sub_100006278((unint64_t *)&unk_1001FAE50, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_1000063C0((uint64_t *)&unk_1001FF450);
  sub_100006BB8();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v0);
  return OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
}

uint64_t variable initialization expression of FormSheetPhotoPickerView._isPresented()
{
  return 1;
}

uint64_t variable initialization expression of RewritingModel._includeListMarkersInInlineResults()
{
  return 2;
}

uint64_t variable initialization expression of RewritingModel._resultAttributedStringRange()
{
  return 0;
}

unint64_t variable initialization expression of RewritingModel.sentFinishedResultToClientForContextUUID()
{
  return sub_100005328((uint64_t)&_swiftEmptyArrayStorage);
}

unint64_t variable initialization expression of RewritingModel.finishedResultForContextUUID()
{
  return sub_100005530((uint64_t)&_swiftEmptyArrayStorage, &qword_1001FB000, &qword_1001FB008);
}

uint64_t variable initialization expression of ModelResponseView._dismiss@<X0>(uint64_t *a1@<X8>)
{
  return sub_1000068D0(&qword_1001FAE68, a1);
}

uint64_t sub_1000068D0@<X0>(uint64_t *a1@<X1>, uint64_t *a2@<X8>)
{
  *a2 = swift_getKeyPath();
  sub_1000063C0(a1);

  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_100006920()
{
  return EnvironmentValues.dismiss.getter();
}

uint64_t _s21WritingToolsUIService17ModelResponseViewV16_commonUIManager33_6284D53BE05683D90FFE8C0F35353675LL7SwiftUI11EnvironmentVyAA06CommonH0CGvpfi_0()
{
  return Environment.init<A>(_:)();
}

uint64_t _s21WritingToolsUIService17ModelResponseViewV19_feedbackController33_6284D53BE05683D90FFE8C0F35353675LL7SwiftUI5StateVy8Feedback013FBKEvaluationH0CGvpfi_0()
{
  sub_1000063C0((uint64_t *)&unk_1001FAE40);
  __chkstk_darwin();
  uint64_t v1 = (char *)&v5 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = type metadata accessor for FBKSEvaluation.Subject();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  id v3 = objc_allocWithZone((Class)type metadata accessor for FBKEvaluationController());
  return FBKEvaluationController.init(subject:)();
}

uint64_t variable initialization expression of FormSheetPhotoPickerView._compositionModel()
{
  return Environment.init<A>(_:)();
}

void *variable initialization expression of FormSheetPhotoPickerView._selectedImages()
{
  return &_swiftEmptyArrayStorage;
}

unint64_t variable initialization expression of ProofreadingModel.suggestionContextMapping()
{
  return sub_100005530((uint64_t)&_swiftEmptyArrayStorage, &qword_1001FAFF0, &qword_1001FAFF8);
}

unint64_t variable initialization expression of ProofreadingModel.suggestionStates()
{
  return sub_100005E08((uint64_t)&_swiftEmptyArrayStorage);
}

uint64_t variable initialization expression of ProofreadingModel._mostRecentlyReviewedSuggestionUUID@<X0>(uint64_t a1@<X8>)
{
  return sub_100006B44((uint64_t (*)(void))&type metadata accessor for UUID, a1);
}

uint64_t sub_100006B44@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1(0);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56);

  return v4(a2, 1, 1, v3);
}

unint64_t sub_100006BB8()
{
  unint64_t result = qword_1001FAE60;
  if (!qword_1001FAE60)
  {
    sub_100006C14((uint64_t *)&unk_1001FF450);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FAE60);
  }
  return result;
}

uint64_t sub_100006C14(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_100006C5C(uint64_t a1, uint64_t a2)
{
  return sub_1000079D8(a1, a2, (uint64_t (*)(uint64_t))&String._bridgeToObjectiveC());
}

uint64_t sub_100006C80(uint64_t a1, uint64_t a2)
{
  return sub_1000079D8(a1, a2, (uint64_t (*)(uint64_t))&String.hashValue.getter);
}

void *sub_100006CA0@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

void sub_100006CB0(void *a1@<X8>)
{
  *a1 = 0;
}

uint64_t type metadata accessor for SuggestionViewController()
{
  return self;
}

void type metadata accessor for WTTextSuggestionState(uint64_t a1)
{
}

void type metadata accessor for UIUserInterfaceSizeClass(uint64_t a1)
{
}

void type metadata accessor for UIModalPresentationStyle(uint64_t a1)
{
}

uint64_t initializeBufferWithCopyOfBuffer for Mode(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 initializeWithTake for ProofreadingSuggestionView(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t sub_100006D5C(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_100006D7C(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

void type metadata accessor for UIEdgeInsets(uint64_t a1)
{
}

__n128 initializeWithTake for AttachmentType(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

void type metadata accessor for _NSRange(uint64_t a1)
{
}

void type metadata accessor for CGRect(uint64_t a1)
{
}

uint64_t sub_100006DF0(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_100006E10(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
}

void type metadata accessor for UIUserInterfaceIdiom(uint64_t a1)
{
}

void type metadata accessor for UIWritingToolsResultOptions(uint64_t a1)
{
}

void *sub_100006E74@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

void *sub_100006E88@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

void *sub_100006E9C@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_100006EB0(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

void *sub_100006EE0@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *v2 & *result;
  if (v3) {
    *v2 &= ~*result;
  }
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_100006F0C@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *result;
  uint64_t v4 = *v2;
  *v2 |= *result;
  uint64_t v5 = v4 & v3;
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = v5 == 0;
  return result;
}

void *sub_100006F30(void *result)
{
  *v1 |= *result;
  return result;
}

void *sub_100006F44(void *result)
{
  *v1 &= *result;
  return result;
}

void *sub_100006F58(void *result)
{
  *v1 ^= *result;
  return result;
}

void *sub_100006F6C@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_100006F80(void *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_100006F94(void *a1)
{
  return (*v1 & *a1) == 0;
}

BOOL sub_100006FA8(void *a1)
{
  return (*a1 & ~*v1) == 0;
}

BOOL sub_100006FBC()
{
  return *v0 == 0;
}

uint64_t sub_100006FCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return SetAlgebra.init<A>(_:)(a1, a4, a2, a5, a3);
}

void *sub_100006FE4(void *result)
{
  *v1 &= ~*result;
  return result;
}

void *sub_100006FF8@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

BOOL sub_100007004(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t sub_100007018(uint64_t a1, id *a2)
{
  uint64_t result = static String._forceBridgeFromObjectiveC(_:result:)();
  *a2 = 0;
  return result;
}

uint64_t sub_100007090(uint64_t a1, id *a2)
{
  char v3 = static String._conditionallyBridgeFromObjectiveC(_:result:)();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_100007110@<X0>(void *a1@<X8>)
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v2 = String._bridgeToObjectiveC()();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

void sub_100007154(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_100007160()
{
  swift_getWitnessTable();

  return static _CFObject.== infix(_:_:)();
}

uint64_t sub_1000071CC()
{
  return _CFObject.hashValue.getter();
}

uint64_t sub_100007218()
{
  return _CFObject.hash(into:)();
}

Swift::Int sub_100007270()
{
  return Hasher._finalize()();
}

uint64_t sub_1000072DC(uint64_t a1)
{
  uint64_t v2 = sub_100006278(&qword_1001FB138, type metadata accessor for IAPayloadValue);
  uint64_t v3 = sub_100006278((unint64_t *)&unk_1001FB140, type metadata accessor for IAPayloadValue);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_10000739C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = sub_1000085AC(a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

uint64_t sub_1000073DC()
{
  return sub_100006278(&qword_1001FAEF8, type metadata accessor for UIWritingToolsResultOptions);
}

uint64_t sub_100007424()
{
  return sub_100006278(&qword_1001FAF00, type metadata accessor for UIWritingToolsResultOptions);
}

uint64_t sub_10000746C()
{
  return sub_100006278(&qword_1001FAF08, type metadata accessor for UIWritingToolsResultOptions);
}

uint64_t sub_1000074B4()
{
  return sub_100006278(&qword_1001FAF10, type metadata accessor for UIWritingToolsResultOptions);
}

uint64_t sub_1000074FC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_100007528(uint64_t a1)
{
  uint64_t v2 = sub_100006278((unint64_t *)&qword_1001FB168, type metadata accessor for IAPayloadKey);
  uint64_t v3 = sub_100006278(&qword_1001FB170, type metadata accessor for IAPayloadKey);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_1000075E4(uint64_t a1)
{
  uint64_t v2 = sub_100006278(&qword_1001FB158, type metadata accessor for MarkerFormat);
  uint64_t v3 = sub_100006278(&qword_1001FB160, type metadata accessor for MarkerFormat);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_1000076A0(uint64_t a1)
{
  uint64_t v2 = sub_100006278(&qword_1001FD2D0, type metadata accessor for Key);
  uint64_t v3 = sub_100006278(&qword_1001FB150, type metadata accessor for Key);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_10000775C(uint64_t a1)
{
  uint64_t v2 = sub_100006278(&qword_1001FB188, type metadata accessor for OptionKey);
  uint64_t v3 = sub_100006278(&qword_1001FB190, type metadata accessor for OptionKey);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_100007818(uint64_t a1)
{
  uint64_t v2 = sub_100006278(&qword_1001FB178, type metadata accessor for ActivityType);
  uint64_t v3 = sub_100006278(&qword_1001FB180, type metadata accessor for ActivityType);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_1000078D4@<X0>(void *a1@<X8>)
{
  NSString v2 = String._bridgeToObjectiveC()();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_10000791C(uint64_t a1)
{
  uint64_t v2 = sub_100006278(&qword_1001FB198, type metadata accessor for URLResourceKey);
  uint64_t v3 = sub_100006278(&qword_1001FB1A0, type metadata accessor for URLResourceKey);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_1000079D8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_100007A1C()
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100007A70()
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  Hasher.init(_seed:)();
  String.hash(into:)();
  Swift::Int v0 = Hasher._finalize()();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_100007AE4()
{
  uint64_t v0 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v2 = v1;
  if (v0 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

unint64_t sub_100007B70(uint64_t a1)
{
  type metadata accessor for UUID();
  sub_100006278(&qword_1001FAF58, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v2 = dispatch thunk of Hashable._rawHashValue(seed:)();
  return sub_1000081EC(a1, v2, (uint64_t (*)(void))&type metadata accessor for UUID, &qword_1001FAF60, (void (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
}

unint64_t sub_100007C48(uint64_t a1, uint64_t a2)
{
  Hasher.init(_seed:)();
  String.hash(into:)();
  Swift::Int v4 = Hasher._finalize()();

  return sub_100007EA8(a1, a2, v4);
}

_OWORD *sub_100007CC0(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

unint64_t sub_100007CD0(uint64_t a1)
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  Hasher.init(_seed:)();
  String.hash(into:)();
  Swift::Int v2 = Hasher._finalize()();
  swift_bridgeObjectRelease();
  return sub_100007F8C(a1, v2);
}

unint64_t sub_100007D60()
{
  Hasher.init(_seed:)();
  UnitPoint.hash(into:)();
  Swift::Int v0 = Hasher._finalize()();

  return sub_100008104(v0);
}

unint64_t sub_100007DD4(uint64_t a1)
{
  type metadata accessor for FBKSForm.Question();
  sub_100006278(&qword_1001FAF38, (void (*)(uint64_t))&type metadata accessor for FBKSForm.Question);
  uint64_t v2 = dispatch thunk of Hashable._rawHashValue(seed:)();
  return sub_1000081EC(a1, v2, (uint64_t (*)(void))&type metadata accessor for FBKSForm.Question, &qword_1001FAF40, (void (*)(uint64_t))&type metadata accessor for FBKSForm.Question, (uint64_t)&protocol conformance descriptor for FBKSForm.Question);
}

unint64_t sub_100007EA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_100007F8C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v8 = v7;
    if (v6 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = ~v4;
      unint64_t v5 = (v5 + 1) & v12;
      if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
      {
        while (1)
        {
          uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v15 = v14;
          if (v13 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v15 == v16) {
            break;
          }
          char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v12;
            if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
              continue;
            }
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_100008104(uint64_t a1)
{
  uint64_t v2 = v1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(v1 + 32);
  unint64_t i = a1 & ~v3;
  if (((*(void *)(v1 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0
    && (static UnitPoint.== infix(_:_:)() & 1) == 0)
  {
    uint64_t v5 = ~v3;
    for (unint64_t i = (i + 1) & v5; ((*(void *)(v2 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v5)
    {
      if (static UnitPoint.== infix(_:_:)()) {
        break;
      }
    }
  }
  return i;
}

unint64_t sub_1000081EC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), unint64_t *a4, void (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v24 = a5;
  uint64_t v25 = a6;
  BOOL v23 = a4;
  v21[1] = a1;
  uint64_t v8 = a3(0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin();
  char v11 = (char *)v21 - v10;
  uint64_t v22 = v6;
  uint64_t v12 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v13 = a2 & ~v12;
  v21[0] = v6 + 64;
  if ((*(void *)(v6 + 64 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v14 = ~v12;
    uint64_t v17 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
    uint64_t v16 = v9 + 16;
    uint64_t v15 = v17;
    uint64_t v18 = *(void *)(v16 + 56);
    do
    {
      v15(v11, *(void *)(v22 + 48) + v18 * v13, v8);
      sub_100006278(v23, v24);
      char v19 = dispatch thunk of static Equatable.== infix(_:_:)();
      (*(void (**)(char *, uint64_t))(v16 - 8))(v11, v8);
      if (v19) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v14;
    }
    while (((*(void *)(v21[0] + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) != 0);
  }
  return v13;
}

id sub_10000838C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v33 = a6;
  id v34 = a4;
  uint64_t v35 = a3;
  uint64_t v36 = a5;
  uint64_t v10 = type metadata accessor for UUID();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v17 = (char *)&v33 - v16;
  __chkstk_darwin(v15);
  char v19 = (char *)&v33 - v18;
  BOOL v20 = &v6[OBJC_IVAR____TtC21WritingToolsUIService24SuggestionViewController_preferredContentSizeHandler];
  *(void *)BOOL v20 = a1;
  *((void *)v20 + 1) = a2;
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v21((char *)&v33 - v18, a3, v10);
  v21(v17, v36, v10);
  uint64_t v22 = v33;
  v21(v14, v33, v10);
  BOOL v23 = v6;
  swift_retain();
  uint64_t v24 = sub_100135B44((uint64_t)v19, v34, v17, v14);
  uint64_t v25 = (uint64_t *)&v23[OBJC_IVAR____TtC21WritingToolsUIService24SuggestionViewController_suggestionView];
  uint64_t *v25 = v24;
  v25[1] = v26;
  void v25[2] = v27;
  v25[3] = v28;

  v29 = (objc_class *)type metadata accessor for SuggestionViewController();
  v37.receiver = v23;
  v37.super_class = v29;
  [super initWithNibName:0 bundle:0];
  id v31 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
  v31(v22, v10);
  v31(v36, v10);
  v31(v35, v10);
  return v30;
}

uint64_t sub_1000085AC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  uint64_t result = 0;
  uint64_t v4 = (uint64_t *)(a1 + 32);
  do
  {
    uint64_t v6 = *v4++;
    uint64_t v5 = v6;
    if ((v6 & ~result) == 0) {
      uint64_t v5 = 0;
    }
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

uint64_t sub_1000085E4(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_1000085FC(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

void type metadata accessor for IAPayloadValue(uint64_t a1)
{
}

void type metadata accessor for Key(uint64_t a1)
{
}

void type metadata accessor for MarkerFormat(uint64_t a1)
{
}

void type metadata accessor for InlinePresentationIntent(uint64_t a1)
{
}

void type metadata accessor for WTFormSheetUIType(uint64_t a1)
{
}

void type metadata accessor for IAPayloadKey(uint64_t a1)
{
}

void type metadata accessor for ActivityType(uint64_t a1)
{
}

void type metadata accessor for OptionKey(uint64_t a1)
{
}

void type metadata accessor for URLResourceKey(uint64_t a1)
{
}

void type metadata accessor for CGPoint(uint64_t a1)
{
}

void type metadata accessor for CGImage(uint64_t a1)
{
}

void sub_100008714(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t sub_10000875C()
{
  return sub_100006278(&qword_1001FB080, type metadata accessor for CGImage);
}

uint64_t sub_1000087A4()
{
  return sub_100006278(&qword_1001FB088, type metadata accessor for URLResourceKey);
}

uint64_t sub_1000087EC()
{
  return sub_100006278(&qword_1001FB090, type metadata accessor for URLResourceKey);
}

uint64_t sub_100008834()
{
  return sub_100006278(&qword_1001FB098, type metadata accessor for URLResourceKey);
}

uint64_t sub_10000887C()
{
  return sub_100006278(&qword_1001FB0A0, type metadata accessor for OptionKey);
}

uint64_t sub_1000088C4()
{
  return sub_100006278(&qword_1001FB0A8, type metadata accessor for OptionKey);
}

uint64_t sub_10000890C()
{
  return sub_100006278(&qword_1001FB0B0, type metadata accessor for ActivityType);
}

uint64_t sub_100008954()
{
  return sub_100006278(&qword_1001FB0B8, type metadata accessor for ActivityType);
}

uint64_t sub_10000899C()
{
  return sub_100006278(&qword_1001FB0C0, type metadata accessor for ActivityType);
}

uint64_t sub_1000089E4()
{
  return sub_100006278(&qword_1001FB0C8, type metadata accessor for IAPayloadKey);
}

uint64_t sub_100008A2C()
{
  return sub_100006278(&qword_1001FB0D0, type metadata accessor for IAPayloadKey);
}

uint64_t sub_100008A74()
{
  return sub_100006278(&qword_1001FB0D8, type metadata accessor for MarkerFormat);
}

uint64_t sub_100008ABC()
{
  return sub_100006278(&qword_1001FB0E0, type metadata accessor for MarkerFormat);
}

uint64_t sub_100008B04()
{
  return sub_100006278(&qword_1001FB0E8, type metadata accessor for MarkerFormat);
}

uint64_t sub_100008B4C()
{
  return sub_100006278(&qword_1001FB0F0, type metadata accessor for Key);
}

uint64_t sub_100008B94()
{
  return sub_100006278(&qword_1001FB0F8, type metadata accessor for Key);
}

uint64_t sub_100008BDC()
{
  return sub_100006278(&qword_1001FB100, type metadata accessor for IAPayloadValue);
}

uint64_t sub_100008C24()
{
  return sub_100006278(&qword_1001FB108, type metadata accessor for IAPayloadValue);
}

uint64_t sub_100008C6C()
{
  return sub_100006278(&qword_1001FB110, type metadata accessor for IAPayloadValue);
}

uint64_t sub_100008CB4()
{
  return sub_100006278(&qword_1001FB118, type metadata accessor for Key);
}

uint64_t sub_100008CFC()
{
  return sub_100006278(&qword_1001FB120, type metadata accessor for IAPayloadKey);
}

uint64_t sub_100008D44()
{
  return sub_100006278(&qword_1001FB128, type metadata accessor for OptionKey);
}

uint64_t sub_100008D8C()
{
  return sub_100006278(&qword_1001FB130, type metadata accessor for CGImage);
}

uint64_t sub_100008DD4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_1000063C0(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

NSString sub_100008E6C()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_1002125A0 = (uint64_t)result;
  return result;
}

NSString sub_100008EA4()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_1002125A8 = (uint64_t)result;
  return result;
}

NSString sub_100008EDC()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_1002125B0 = (uint64_t)result;
  return result;
}

NSString sub_100008F14()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_1002125B8 = (uint64_t)result;
  return result;
}

NSString sub_100008F54()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_1002125C0 = (uint64_t)result;
  return result;
}

NSString sub_100008F8C()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_1002125C8 = (uint64_t)result;
  return result;
}

NSString sub_100008FC8()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_1002125D0 = (uint64_t)result;
  return result;
}

NSString sub_100008FFC()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_1002125D8 = (uint64_t)result;
  return result;
}

NSString sub_100009034()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_1002125E0 = (uint64_t)result;
  return result;
}

NSString sub_100009074()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_1002125E8 = (uint64_t)result;
  return result;
}

NSString sub_1000090A4()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_1002125F0 = (uint64_t)result;
  return result;
}

NSString sub_1000090E0()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_1002125F8 = (uint64_t)result;
  return result;
}

NSString sub_10000911C()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_100212600 = (uint64_t)result;
  return result;
}

NSString sub_100009154()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_100212608 = (uint64_t)result;
  return result;
}

NSString sub_10000918C()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_100212610 = (uint64_t)result;
  return result;
}

NSString sub_1000091C4()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_100212618 = (uint64_t)result;
  return result;
}

NSString sub_100009204()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_100212620 = (uint64_t)result;
  return result;
}

NSString sub_100009234()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_100212628 = (uint64_t)result;
  return result;
}

NSString sub_100009268()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_100212630 = (uint64_t)result;
  return result;
}

NSString sub_1000092A4()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_100212638 = (uint64_t)result;
  return result;
}

NSString sub_1000092DC()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_100212640 = (uint64_t)result;
  return result;
}

NSString sub_100009308()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_100212648 = (uint64_t)result;
  return result;
}

NSString sub_10000933C()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_100212650 = (uint64_t)result;
  return result;
}

NSString sub_100009370()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_100212658 = (uint64_t)result;
  return result;
}

NSString sub_1000093A8()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_100212660 = (uint64_t)result;
  return result;
}

NSString sub_1000093E0()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_100212668 = (uint64_t)result;
  return result;
}

NSString sub_100009418()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_100212670 = (uint64_t)result;
  return result;
}

NSString sub_100009448()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_100212678 = (uint64_t)result;
  return result;
}

NSString sub_100009480()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_100212680 = (uint64_t)result;
  return result;
}

NSString sub_1000094B4()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_100212688 = (uint64_t)result;
  return result;
}

NSString sub_1000094E8()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_100212690 = (uint64_t)result;
  return result;
}

NSString sub_100009524()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_100212698 = (uint64_t)result;
  return result;
}

NSString sub_100009560()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_1002126A0 = (uint64_t)result;
  return result;
}

NSString sub_100009598()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_1002126A8 = (uint64_t)result;
  return result;
}

NSString sub_1000095D8()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_1002126B0 = (uint64_t)result;
  return result;
}

NSString sub_100009618()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_1002126B8 = (uint64_t)result;
  return result;
}

NSString sub_100009654()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_1002126C0 = (uint64_t)result;
  return result;
}

NSString sub_100009688()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_1002126C8 = (uint64_t)result;
  return result;
}

NSString sub_1000096C0()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_1002126D0 = (uint64_t)result;
  return result;
}

NSString sub_1000096F8()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_1002126D8 = (uint64_t)result;
  return result;
}

NSString sub_100009730()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_1002126E0 = (uint64_t)result;
  return result;
}

NSString sub_100009768()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_1002126E8 = (uint64_t)result;
  return result;
}

NSString sub_1000097A0()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_1002126F0 = (uint64_t)result;
  return result;
}

NSString sub_1000097D8()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_1002126F8 = (uint64_t)result;
  return result;
}

NSString sub_100009810()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_100212700 = (uint64_t)result;
  return result;
}

NSString sub_100009848()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_100212708 = (uint64_t)result;
  return result;
}

NSString sub_100009880()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_100212710 = (uint64_t)result;
  return result;
}

NSString sub_1000098B8()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_100212718 = (uint64_t)result;
  return result;
}

NSString sub_1000098F0()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_100212720 = (uint64_t)result;
  return result;
}

NSString sub_100009928()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_100212728 = (uint64_t)result;
  return result;
}

NSString sub_100009960()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_100212730 = (uint64_t)result;
  return result;
}

NSString sub_100009998()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_100212738 = (uint64_t)result;
  return result;
}

NSString sub_1000099D0()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_100212740 = (uint64_t)result;
  return result;
}

NSString sub_100009A0C()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_100212748 = (uint64_t)result;
  return result;
}

NSString sub_100009A40()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_100212750 = (uint64_t)result;
  return result;
}

NSString sub_100009A78()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_100212758 = (uint64_t)result;
  return result;
}

NSString sub_100009AAC()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_100212760 = (uint64_t)result;
  return result;
}

void sub_100009ADC(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1000063C0((uint64_t *)&unk_1001FB400);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1001FAC48 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  sub_10000EBE8(v7, (uint64_t)qword_1002127D0);
  id v8 = a1;
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136380675;
    uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v25 = sub_100021444(v12, v13, &v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "reportButtonTapped: interactionType: %{private}s", v11, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v14 = IASignalWritingToolsButtonTapped;
  uint64_t v15 = IAChannelWritingTools;
  sub_10000EC20(v2 + OBJC_IVAR____TtC21WritingToolsUIService21WritingToolsAnalytics_analyticsUUID, (uint64_t)v6);
  uint64_t v16 = type metadata accessor for UUID();
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v6, 1, v16) == 1)
  {
    sub_10000EC88((uint64_t)v6);
    NSString v18 = 0;
  }
  else
  {
    UUID.uuidString.getter();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v6, v16);
    NSString v18 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  char v19 = self;
  sub_1000063C0(&qword_1001FB3D0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10018A720;
  uint64_t v21 = (void *)IAPayloadKeyWritingToolsInteractionType;
  *(void *)(inited + 32) = IAPayloadKeyWritingToolsInteractionType;
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v22 = v21;
  NSString v23 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  *(void *)(inited + 40) = v23;
  sub_1000050E4(inited);
  type metadata accessor for IAPayloadKey(0);
  sub_1000085FC(0, &qword_1001FB3D8);
  sub_10000ECE8();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v19 sendSignal:v14 toChannel:v15 withNullableUniqueStringID:v18 withPayload:isa];
}

void sub_100009EA0(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1000063C0((uint64_t *)&unk_1001FB400);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1001FAC48 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  sub_10000EBE8(v7, (uint64_t)qword_1002127D0);
  id v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v8, v9))
  {
    os_log_type_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)os_log_type_t v10 = 136380675;
    uint64_t v29 = v11;
    if (a1) {
      uint64_t v12 = 0x64657463656C6553;
    }
    else {
      uint64_t v12 = 0x74786554206C6C41;
    }
    if (a1) {
      unint64_t v13 = 0xED00007478655420;
    }
    else {
      unint64_t v13 = 0xE800000000000000;
    }
    uint64_t v28 = sub_100021444(v12, v13, &v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "reportInclusionPolicyChanged: inclusionPolicy: %{private}s", v10, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  if (a1)
  {
    if (qword_1001FAC00 != -1) {
      swift_once();
    }
    uint64_t v14 = &qword_100212740;
  }
  else
  {
    if (qword_1001FAC08 != -1) {
      swift_once();
    }
    uint64_t v14 = &qword_100212748;
  }
  uint64_t v15 = qword_1001FAA60;
  id v16 = (id)*v14;
  if (v15 != -1) {
    swift_once();
  }
  uint64_t v17 = qword_1002125A0;
  uint64_t v18 = IAChannelWritingTools;
  sub_10000EC20(v2 + OBJC_IVAR____TtC21WritingToolsUIService21WritingToolsAnalytics_analyticsUUID, (uint64_t)v6);
  uint64_t v19 = type metadata accessor for UUID();
  uint64_t v20 = *(void *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v6, 1, v19) == 1)
  {
    sub_10000EC88((uint64_t)v6);
    NSString v21 = 0;
  }
  else
  {
    UUID.uuidString.getter();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v6, v19);
    NSString v21 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  id v22 = self;
  sub_1000063C0(&qword_1001FB3D0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10018A720;
  if (qword_1001FAAA0 != -1) {
    swift_once();
  }
  uint64_t v24 = (void *)qword_1002125E0;
  *(void *)(inited + 32) = qword_1002125E0;
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v25 = v24;
  NSString v26 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  *(void *)(inited + 40) = v26;
  sub_1000050E4(inited);
  type metadata accessor for IAPayloadKey(0);
  sub_1000085FC(0, &qword_1001FB3D8);
  sub_10000ECE8();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v22 sendSignal:v17 toChannel:v18 withNullableUniqueStringID:v21 withPayload:isa];
}

void sub_10000A358(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_1000063C0((uint64_t *)&unk_1001FB400);
  __chkstk_darwin(v8 - 8);
  os_log_type_t v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1001FAC48 != -1) {
    swift_once();
  }
  uint64_t v11 = type metadata accessor for Logger();
  sub_10000EBE8(v11, (uint64_t)qword_1002127D0);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.info.getter();
  int v14 = v13;
  if (os_log_type_enabled(v12, v13))
  {
    int v36 = v14;
    uint64_t v15 = swift_slowAlloc();
    uint64_t v35 = swift_slowAlloc();
    unint64_t v40 = v35;
    *(_DWORD *)uint64_t v15 = 136643075;
    if (a2) {
      uint64_t v16 = a1;
    }
    else {
      uint64_t v16 = 7104878;
    }
    uint64_t v37 = a1;
    uint64_t v38 = v4;
    if (a2) {
      unint64_t v17 = a2;
    }
    else {
      unint64_t v17 = 0xE300000000000000;
    }
    swift_bridgeObjectRetain();
    uint64_t v39 = sub_100021444(v16, v17, (uint64_t *)&v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 2085;
    swift_bridgeObjectRetain();
    uint64_t v18 = Array.description.getter();
    unint64_t v20 = v19;
    swift_bridgeObjectRelease();
    uint64_t v39 = sub_100021444(v18, v20, (uint64_t *)&v40);
    uint64_t v4 = v38;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v12, (os_log_type_t)v36, "reportSuggestionChosen: suggestionPrompt: %{sensitive}s suggestions: %{sensitive}s", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  unint64_t v21 = sub_1000050E4((uint64_t)_swiftEmptyArrayStorage);
  if (a2)
  {
    if (qword_1001FAAA8 != -1) {
      swift_once();
    }
    id v22 = (id)qword_1002125E8;
    NSString v23 = String._bridgeToObjectiveC()();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v40 = v21;
    sub_10016EF14((uint64_t)v23, v22, isUniquelyReferenced_nonNull_native);
    unint64_t v21 = v40;

    swift_bridgeObjectRelease();
  }
  if (a3)
  {
    if (qword_1001FAAB8 != -1) {
      swift_once();
    }
    id v25 = (id)qword_1002125F8;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    char v27 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v40 = v21;
    sub_10016EF14((uint64_t)isa, v25, v27);

    swift_bridgeObjectRelease();
  }
  if (qword_1001FAA70 != -1) {
    swift_once();
  }
  uint64_t v28 = qword_1002125B0;
  uint64_t v29 = IAChannelWritingTools;
  sub_10000EC20(v4 + OBJC_IVAR____TtC21WritingToolsUIService21WritingToolsAnalytics_analyticsUUID, (uint64_t)v10);
  uint64_t v30 = type metadata accessor for UUID();
  uint64_t v31 = *(void *)(v30 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v10, 1, v30) == 1)
  {
    sub_10000EC88((uint64_t)v10);
    NSString v32 = 0;
  }
  else
  {
    UUID.uuidString.getter();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v10, v30);
    NSString v32 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  uint64_t v33 = self;
  type metadata accessor for IAPayloadKey(0);
  sub_1000085FC(0, &qword_1001FB3D8);
  sub_10000ECE8();
  Class v34 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v33 sendSignal:v28 toChannel:v29 withNullableUniqueStringID:v32 withPayload:v34];
}

void sub_10000A8C8(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, int a6, uint64_t a7, int a8, uint64_t a9, unint64_t a10)
{
  uint64_t v65 = a3;
  int v67 = a6;
  uint64_t v66 = a5;
  uint64_t v15 = sub_1000063C0((uint64_t *)&unk_1001FB400);
  __chkstk_darwin(v15 - 8);
  unint64_t v17 = (char *)&v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1001FAC48 != -1) {
    swift_once();
  }
  uint64_t v18 = type metadata accessor for Logger();
  sub_10000EBE8(v18, (uint64_t)qword_1002127D0);
  swift_bridgeObjectRetain_n();
  unint64_t v19 = Logger.logObject.getter();
  os_log_type_t v20 = static os_log_type_t.info.getter();
  int v21 = v20;
  BOOL v22 = os_log_type_enabled(v19, v20);
  uint64_t v63 = a1;
  if (v22)
  {
    uint64_t v23 = swift_slowAlloc();
    HIDWORD(v58) = v21;
    uint64_t v24 = v23;
    uint64_t v25 = swift_slowAlloc();
    uint64_t v59 = v25;
    *(_DWORD *)uint64_t v24 = 134284547;
    if (a2) {
      uint64_t v26 = 0;
    }
    else {
      uint64_t v26 = a1;
    }
    uint64_t v68 = v26;
    unint64_t v69 = v25;
    v62 = v17;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v24 + 12) = 2049;
    uint64_t v27 = v65;
    if (a4) {
      uint64_t v27 = 0;
    }
    uint64_t v68 = v27;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v24 + 22) = 2049;
    uint64_t v28 = v66;
    if (v67) {
      uint64_t v28 = 0;
    }
    uint64_t v68 = v28;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v24 + 32) = 2049;
    uint64_t v60 = a7;
    if (a8) {
      uint64_t v29 = 0;
    }
    else {
      uint64_t v29 = a7;
    }
    uint64_t v68 = v29;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v24 + 42) = 2085;
    char v30 = a2;
    if (a10) {
      uint64_t v31 = a9;
    }
    else {
      uint64_t v31 = 7104878;
    }
    int v61 = a8;
    if (a10) {
      unint64_t v32 = a10;
    }
    else {
      unint64_t v32 = 0xE300000000000000;
    }
    swift_bridgeObjectRetain();
    uint64_t v33 = v31;
    a2 = v30;
    uint64_t v68 = sub_100021444(v33, v32, (uint64_t *)&v69);
    unint64_t v17 = v62;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    LOBYTE(a8) = v61;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v19, BYTE4(v58), "reportAttachmentsModified: numSelectedPhotos: %{private}ld numSelectedFiles: %{private}ld numRemovedPhotos: %{private}ld numRemovedFiles: %{private}ld slotID: %{sensitive}s", (uint8_t *)v24, 0x34u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  unint64_t v34 = sub_1000050E4((uint64_t)&_swiftEmptyArrayStorage);
  if (a2)
  {
    if (a4) {
      goto LABEL_24;
    }
  }
  else
  {
    char v35 = a4;
    if (qword_1001FAAC0 != -1) {
      swift_once();
    }
    id v36 = (id)qword_100212600;
    Class isa = Int._bridgeToObjectiveC()().super.super.isa;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v69 = v34;
    sub_10016EF14((uint64_t)isa, v36, isUniquelyReferenced_nonNull_native);
    unint64_t v34 = v69;

    swift_bridgeObjectRelease();
    if (v35)
    {
LABEL_24:
      if (v67) {
        goto LABEL_25;
      }
      goto LABEL_34;
    }
  }
  if (qword_1001FAAC8 != -1) {
    swift_once();
  }
  id v39 = (id)qword_100212608;
  Class v40 = Int._bridgeToObjectiveC()().super.super.isa;
  char v41 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v69 = v34;
  sub_10016EF14((uint64_t)v40, v39, v41);
  unint64_t v34 = v69;

  swift_bridgeObjectRelease();
  if (v67)
  {
LABEL_25:
    if (a8) {
      goto LABEL_26;
    }
    goto LABEL_37;
  }
LABEL_34:
  if (qword_1001FAAD0 != -1) {
    swift_once();
  }
  id v42 = (id)qword_100212610;
  Class v43 = Int._bridgeToObjectiveC()().super.super.isa;
  char v44 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v69 = v34;
  sub_10016EF14((uint64_t)v43, v42, v44);
  unint64_t v34 = v69;

  swift_bridgeObjectRelease();
  if (a8)
  {
LABEL_26:
    if (!a10) {
      goto LABEL_43;
    }
    goto LABEL_40;
  }
LABEL_37:
  if (qword_1001FAAD8 != -1) {
    swift_once();
  }
  id v45 = (id)qword_100212618;
  Class v46 = Int._bridgeToObjectiveC()().super.super.isa;
  char v47 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v69 = v34;
  sub_10016EF14((uint64_t)v46, v45, v47);
  unint64_t v34 = v69;

  swift_bridgeObjectRelease();
  if (a10)
  {
LABEL_40:
    if (qword_1001FAAE0 != -1) {
      swift_once();
    }
    id v48 = (id)qword_100212620;
    NSString v49 = String._bridgeToObjectiveC()();
    char v50 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v69 = v34;
    sub_10016EF14((uint64_t)v49, v48, v50);

    swift_bridgeObjectRelease();
  }
LABEL_43:
  if (qword_1001FAA68 != -1) {
    swift_once();
  }
  uint64_t v51 = qword_1002125A8;
  uint64_t v52 = IAChannelWritingTools;
  sub_10000EC20(v64 + OBJC_IVAR____TtC21WritingToolsUIService21WritingToolsAnalytics_analyticsUUID, (uint64_t)v17);
  uint64_t v53 = type metadata accessor for UUID();
  uint64_t v54 = *(void *)(v53 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v17, 1, v53) == 1)
  {
    sub_10000EC88((uint64_t)v17);
    NSString v55 = 0;
  }
  else
  {
    UUID.uuidString.getter();
    (*(void (**)(char *, uint64_t))(v54 + 8))(v17, v53);
    NSString v55 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  v56 = self;
  type metadata accessor for IAPayloadKey(0);
  sub_1000085FC(0, &qword_1001FB3D8);
  sub_10000ECE8();
  Class v57 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v56 sendSignal:v51 toChannel:v52 withNullableUniqueStringID:v55 withPayload:v57];
}

void sub_10000B018(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1000063C0((uint64_t *)&unk_1001FB400);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1001FAC48 != -1) {
    swift_once();
  }
  char v47 = v6;
  uint64_t v7 = type metadata accessor for Logger();
  uint64_t v52 = sub_10000EBE8(v7, (uint64_t)qword_1002127D0);
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v8, v9))
  {
    os_log_type_t v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "reportSlotFormShown", v10, 2u);
    swift_slowDealloc();
  }

  uint64_t v11 = *(void *)(a1 + 16);
  if (v11)
  {
    uint64_t v46 = v1;
    swift_bridgeObjectRetain();
    uint64_t v12 = _swiftEmptyArrayStorage;
    uint64_t v45 = a1;
    os_log_type_t v13 = (uint64_t *)(a1 + 48);
    *(void *)&long long v14 = 136643331;
    long long v49 = v14;
    id v48 = (char *)&type metadata for Any + 8;
    long long v51 = xmmword_10018A720;
    do
    {
      uint64_t v15 = *(v13 - 2);
      unint64_t v16 = *(v13 - 1);
      unint64_t v17 = v13[1];
      uint64_t v18 = v13[3];
      unint64_t v19 = v13[4];
      uint64_t v53 = *v13;
      uint64_t v54 = v18;
      uint64_t v20 = v13[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v55 = v20;
      swift_bridgeObjectRetain();
      int v21 = Logger.logObject.getter();
      os_log_type_t v22 = static os_log_type_t.info.getter();
      BOOL v23 = os_log_type_enabled(v21, v22);
      uint64_t v56 = v15;
      if (v23)
      {
        uint64_t v24 = v15;
        uint64_t v25 = swift_slowAlloc();
        uint64_t v26 = swift_slowAlloc();
        char v50 = v12;
        uint64_t v57 = v26;
        *(_DWORD *)uint64_t v25 = v49;
        swift_bridgeObjectRetain();
        *(void *)(v25 + 4) = sub_100021444(v24, v16, &v57);
        swift_bridgeObjectRelease();
        *(_WORD *)(v25 + 12) = 2085;
        swift_bridgeObjectRetain();
        *(void *)(v25 + 14) = sub_100021444(v53, v17, &v57);
        swift_bridgeObjectRelease();
        *(_WORD *)(v25 + 22) = 2085;
        swift_bridgeObjectRetain();
        *(void *)(v25 + 24) = sub_100021444(v54, v19, &v57);
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v21, v22, "reportSlotFormShown: slot: %{sensitive}s query: %{sensitive}s response: %{sensitive}s", (uint8_t *)v25, 0x20u);
        swift_arrayDestroy();
        uint64_t v12 = v50;
        swift_slowDealloc();
        swift_slowDealloc();
      }

      sub_1000063C0(&qword_1001FB3D0);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = v51;
      if (qword_1001FAB00 != -1) {
        swift_once();
      }
      uint64_t v28 = (void *)qword_100212640;
      *(void *)(inited + 32) = qword_100212640;
      id v29 = v28;
      *(void *)(inited + 40) = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v30 = sub_1000050E4(inited);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v12 = sub_1001431C8(0, v12[2] + 1, 1, v12);
      }
      unint64_t v32 = v12[2];
      unint64_t v31 = v12[3];
      if (v32 >= v31 >> 1) {
        uint64_t v12 = sub_1001431C8((void *)(v31 > 1), v32 + 1, 1, v12);
      }
      v13 += 9;
      v12[2] = v32 + 1;
      v12[v32 + 4] = v30;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease();
    uint64_t v2 = v46;
  }
  uint64_t v33 = (uint64_t)v47;
  if (qword_1001FAA78 != -1) {
    swift_once();
  }
  uint64_t v34 = qword_1002125B8;
  uint64_t v35 = IAChannelWritingTools;
  sub_10000EC20(v2 + OBJC_IVAR____TtC21WritingToolsUIService21WritingToolsAnalytics_analyticsUUID, v33);
  uint64_t v36 = type metadata accessor for UUID();
  uint64_t v37 = *(void *)(v36 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48))(v33, 1, v36) == 1)
  {
    sub_10000EC88(v33);
    NSString v38 = 0;
  }
  else
  {
    UUID.uuidString.getter();
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v33, v36);
    NSString v38 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  id v39 = self;
  sub_1000063C0(&qword_1001FB3D0);
  uint64_t v40 = swift_initStackObject();
  *(_OWORD *)(v40 + 16) = xmmword_10018A720;
  if (qword_1001FAAE8 != -1) {
    swift_once();
  }
  char v41 = (void *)qword_100212628;
  *(void *)(v40 + 32) = qword_100212628;
  id v42 = v41;
  sub_1000063C0(&qword_1001FB3E8);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  *(void *)(v40 + 40) = isa;
  sub_1000050E4(v40);
  type metadata accessor for IAPayloadKey(0);
  sub_1000085FC(0, &qword_1001FB3D8);
  sub_10000ECE8();
  Class v44 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v39 sendSignal:v34 toChannel:v35 withNullableUniqueStringID:v38 withPayload:v44];
}

void sub_10000B6A0(int a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1000063C0((uint64_t *)&unk_1001FB400);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1001FAC48 != -1) {
    swift_once();
  }
  uint64_t v9 = type metadata accessor for Logger();
  uint64_t v66 = sub_10000EBE8(v9, (uint64_t)qword_1002127D0);
  os_log_type_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 67174657;
    LODWORD(v73) = a1 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "reportSlotFormCompleted: slotsUpdated: %{BOOL,private}d", v12, 8u);
    swift_slowDealloc();
  }

  uint64_t v13 = *(void *)(a2 + 16);
  if (v13)
  {
    uint64_t v59 = v2;
    uint64_t v60 = v8;
    int v61 = a1;
    swift_bridgeObjectRetain();
    long long v14 = _swiftEmptyArrayStorage;
    v58[1] = a2;
    uint64_t v15 = a2 + 48;
    *(void *)&long long v16 = 136643331;
    long long v63 = v16;
    v62 = (char *)&type metadata for Any + 8;
    long long v65 = xmmword_10018A730;
    while (1)
    {
      uint64_t v69 = v13;
      v72 = v14;
      uint64_t v17 = *(void *)(v15 - 16);
      unint64_t v18 = *(void *)(v15 - 8);
      unint64_t v19 = *(void *)(v15 + 8);
      uint64_t v67 = *(void *)v15;
      int v20 = *(unsigned __int8 *)(v15 + 16);
      uint64_t v22 = *(void *)(v15 + 24);
      unint64_t v21 = *(void *)(v15 + 32);
      uint64_t v23 = *(void *)(v15 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v70 = v23;
      swift_bridgeObjectRetain();
      uint64_t v24 = Logger.logObject.getter();
      os_log_type_t v25 = static os_log_type_t.info.getter();
      BOOL v26 = os_log_type_enabled(v24, v25);
      unint64_t v71 = v19;
      if (v26)
      {
        uint64_t v27 = swift_slowAlloc();
        uint64_t v68 = v17;
        uint64_t v28 = v27;
        uint64_t v73 = swift_slowAlloc();
        *(_DWORD *)uint64_t v28 = v63;
        swift_bridgeObjectRetain();
        *(void *)(v28 + 4) = sub_100021444(v68, v18, &v73);
        swift_bridgeObjectRelease();
        int v64 = v20;
        *(_WORD *)(v28 + 12) = 2085;
        swift_bridgeObjectRetain();
        *(void *)(v28 + 14) = sub_100021444(v67, v19, &v73);
        swift_bridgeObjectRelease();
        *(_WORD *)(v28 + 22) = 2085;
        swift_bridgeObjectRetain();
        *(void *)(v28 + 24) = sub_100021444(v22, v21, &v73);
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v24, v25, "reportSlotFormCompleted: slot: %{sensitive}s query: %{sensitive}s response: %{sensitive}s", (uint8_t *)v28, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        int v20 = v64;
        if (!v64) {
          goto LABEL_13;
        }
      }
      else
      {

        if (!v20)
        {
LABEL_13:
          id v29 = &qword_100212750;
          if (qword_1001FAC10 != -1)
          {
            swift_once();
            id v29 = &qword_100212750;
          }
          goto LABEL_17;
        }
      }
      if (v20 == 1)
      {
        id v29 = &qword_100212758;
        if (qword_1001FAC18 != -1)
        {
          swift_once();
          id v29 = &qword_100212758;
        }
      }
      else
      {
        id v29 = &qword_100212760;
        if (qword_1001FAC20 != -1)
        {
          swift_once();
          id v29 = &qword_100212760;
        }
      }
LABEL_17:
      unint64_t v30 = (void *)*v29;
      sub_1000063C0(&qword_1001FB3D0);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = v65;
      uint64_t v32 = qword_1001FAB00;
      id v33 = v30;
      if (v32 != -1) {
        swift_once();
      }
      uint64_t v34 = (void *)qword_100212640;
      *(void *)(inited + 32) = qword_100212640;
      id v35 = v34;
      *(void *)(inited + 40) = String._bridgeToObjectiveC()();
      if (qword_1001FAB10 != -1) {
        swift_once();
      }
      uint64_t v36 = (void *)qword_100212650;
      *(void *)(inited + 48) = qword_100212650;
      id v37 = v36;
      *(void *)(inited + 56) = String._bridgeToObjectiveC()();
      if (qword_1001FAB08 != -1) {
        swift_once();
      }
      NSString v38 = (void *)qword_100212648;
      *(void *)(inited + 64) = qword_100212648;
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      id v39 = v38;
      NSString v40 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      *(void *)(inited + 72) = v40;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v41 = sub_1000050E4(inited);
      long long v14 = v72;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        long long v14 = sub_1001431C8(0, v14[2] + 1, 1, v14);
      }
      uint64_t v42 = v69;
      unint64_t v44 = v14[2];
      unint64_t v43 = v14[3];
      if (v44 >= v43 >> 1) {
        long long v14 = sub_1001431C8((void *)(v43 > 1), v44 + 1, 1, v14);
      }
      v15 += 72;
      v14[2] = v44 + 1;
      v14[v44 + 4] = v41;

      uint64_t v13 = v42 - 1;
      if (!v13)
      {
        swift_bridgeObjectRelease();
        uint64_t v8 = v60;
        uint64_t v3 = v59;
        break;
      }
    }
  }
  if (qword_1001FAA80 != -1) {
    swift_once();
  }
  uint64_t v45 = qword_1002125C0;
  sub_10000EC20(v3 + OBJC_IVAR____TtC21WritingToolsUIService21WritingToolsAnalytics_analyticsUUID, (uint64_t)v8);
  uint64_t v46 = type metadata accessor for UUID();
  uint64_t v47 = *(void *)(v46 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v8, 1, v46) == 1)
  {
    sub_10000EC88((uint64_t)v8);
    NSString v48 = 0;
  }
  else
  {
    UUID.uuidString.getter();
    (*(void (**)(char *, uint64_t))(v47 + 8))(v8, v46);
    NSString v48 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  uint64_t v49 = IAChannelWritingTools;
  char v50 = self;
  sub_1000063C0(&qword_1001FB3D0);
  uint64_t v51 = swift_initStackObject();
  *(_OWORD *)(v51 + 16) = xmmword_10018A740;
  if (qword_1001FAAF0 != -1) {
    swift_once();
  }
  uint64_t v52 = (void *)qword_100212630;
  *(void *)(v51 + 32) = qword_100212630;
  id v53 = v52;
  *(NSNumber *)(v51 + 40) = Bool._bridgeToObjectiveC()();
  if (qword_1001FAAF8 != -1) {
    swift_once();
  }
  uint64_t v54 = (void *)qword_100212638;
  *(void *)(v51 + 48) = qword_100212638;
  id v55 = v54;
  sub_1000063C0(&qword_1001FB3E8);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  *(void *)(v51 + 56) = isa;
  sub_1000050E4(v51);
  type metadata accessor for IAPayloadKey(0);
  sub_1000085FC(0, &qword_1001FB3D8);
  sub_10000ECE8();
  Class v57 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v50 sendSignal:v45 toChannel:v49 withNullableUniqueStringID:v48 withPayload:v57];
}

void sub_10000BFB0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  uint64_t v10 = v9;
  uint64_t v63 = a7;
  uint64_t v64 = a6;
  uint64_t v62 = a5;
  uint64_t v16 = sub_1000063C0((uint64_t *)&unk_1001FB400);
  __chkstk_darwin(v16 - 8);
  long long v65 = (char *)v57 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1001FAC48 != -1) {
    swift_once();
  }
  uint64_t v18 = type metadata accessor for Logger();
  sub_10000EBE8(v18, (uint64_t)qword_1002127D0);
  sub_10000ED40(a1, a2, a3, a4);
  sub_10000ED40(a1, a2, a3, a4);
  unint64_t v19 = Logger.logObject.getter();
  os_log_type_t v20 = static os_log_type_t.info.getter();
  int v21 = v20;
  if (os_log_type_enabled(v19, v20))
  {
    int v60 = v21;
    uint64_t v22 = (uint8_t *)swift_slowAlloc();
    uint64_t v59 = swift_slowAlloc();
    unint64_t v67 = v59;
    uint64_t v61 = a8;
    *(_DWORD *)uint64_t v22 = 136380675;
    v57[1] = v22 + 4;
    uint64_t v58 = v22;
    sub_1000D5160();
    NSString v23 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v24 = [v23 key];

    uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v26 = v10;
    unint64_t v28 = v27;

    uint64_t v66 = sub_100021444(v25, v28, (uint64_t *)&v67);
    a8 = v61;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v10 = v26;
    swift_bridgeObjectRelease();
    sub_10000ED74(a1, a2, a3, a4);
    sub_10000ED74(a1, a2, a3, a4);
    _os_log_impl((void *)&_mh_execute_header, v19, (os_log_type_t)v60, "reportResultsRequested: mode: %{private}s", v58, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_10000ED74(a1, a2, a3, a4);
    sub_10000ED74(a1, a2, a3, a4);
  }

  sub_1000063C0(&qword_1001FB3D0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10018A720;
  unint64_t v30 = (void *)IAPayloadKeyWritingToolsFeatureDetails;
  *(void *)(inited + 32) = IAPayloadKeyWritingToolsFeatureDetails;
  id v31 = v30;
  uint64_t v32 = (void *)sub_10000EDA8(a1, a2, a3, a4);
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v33 = v32;
  NSString v34 = String._bridgeToObjectiveC()();

  swift_bridgeObjectRelease();
  *(void *)(inited + 40) = v34;
  unint64_t v35 = sub_1000050E4(inited);
  uint64_t v36 = (uint64_t)v65;
  if (v64)
  {
    if (qword_1001FAAA8 != -1) {
      swift_once();
    }
    id v37 = (id)qword_1002125E8;
    NSString v38 = String._bridgeToObjectiveC()();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v67 = v35;
    sub_10016EF14((uint64_t)v38, v37, isUniquelyReferenced_nonNull_native);
    unint64_t v35 = v67;

    swift_bridgeObjectRelease();
  }
  if (a8)
  {
    if (qword_1001FAAB0 != -1) {
      swift_once();
    }
    id v40 = (id)qword_1002125F0;
    NSString v41 = String._bridgeToObjectiveC()();
    char v42 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v67 = v35;
    sub_10016EF14((uint64_t)v41, v40, v42);
    unint64_t v35 = v67;

    swift_bridgeObjectRelease();
  }
  if (a9 != 2)
  {
    if (a9)
    {
      if (qword_1001FAC00 != -1) {
        swift_once();
      }
      unint64_t v43 = &qword_100212740;
    }
    else
    {
      if (qword_1001FAC08 != -1) {
        swift_once();
      }
      unint64_t v43 = &qword_100212748;
    }
    uint64_t v44 = qword_1001FAAA0;
    id v45 = (id)*v43;
    if (v44 != -1) {
      swift_once();
    }
    uint64_t v46 = (void *)qword_1002125E0;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v47 = v46;
    NSString v48 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    char v49 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v67 = v35;
    sub_10016EF14((uint64_t)v48, v47, v49);

    swift_bridgeObjectRelease();
  }
  uint64_t v50 = IASignalWritingToolsResultsRequested;
  uint64_t v51 = IAChannelWritingTools;
  sub_10000EC20(v10 + OBJC_IVAR____TtC21WritingToolsUIService21WritingToolsAnalytics_analyticsUUID, v36);
  uint64_t v52 = type metadata accessor for UUID();
  uint64_t v53 = *(void *)(v52 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v53 + 48))(v36, 1, v52) == 1)
  {
    sub_10000EC88(v36);
    NSString v54 = 0;
  }
  else
  {
    UUID.uuidString.getter();
    (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v36, v52);
    NSString v54 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  id v55 = self;
  type metadata accessor for IAPayloadKey(0);
  sub_1000085FC(0, &qword_1001FB3D8);
  sub_10000ECE8();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v55 sendSignal:v50 toChannel:v51 withNullableUniqueStringID:v54 withPayload:isa];
}

void sub_10000C6B8(uint64_t a1, uint64_t a2, uint64_t a3, int a4, unint64_t a5, int a6)
{
  LODWORD(p_weak_ivar_lyt) = a6;
  unint64_t v86 = a5;
  LODWORD(v7) = a4;
  uint64_t v11 = sub_1000063C0((uint64_t *)&unk_1001FB400);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)v71 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1001FAC48 != -1) {
    goto LABEL_30;
  }
  while (1)
  {
    uint64_t v14 = type metadata accessor for Logger();
    uint64_t v15 = sub_10000EBE8(v14, (uint64_t)qword_1002127D0);
    sub_10000ED40(a1, a2, a3, (char)v7);
    sub_10000ED40(a1, a2, a3, (char)v7);
    uint64_t v82 = v15;
    uint64_t v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.info.getter();
    BOOL v18 = os_log_type_enabled(v16, v17);
    int v75 = (int)p_weak_ivar_lyt;
    int v74 = (int)v7;
    uint64_t v73 = a2;
    uint64_t v72 = a1;
    v76 = v13;
    if (v18)
    {
      unint64_t v19 = (uint8_t *)swift_slowAlloc();
      uint64_t v20 = a3;
      id v88 = (id)swift_slowAlloc();
      id v91 = v88;
      v87 = v19;
      *(_DWORD *)unint64_t v19 = 136380675;
      uint64_t v85 = (uint64_t)(v19 + 4);
      sub_1000D5160();
      NSString v21 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v22 = [v21 key];

      uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v25 = v24;

      uint64_t v89 = sub_100021444(v23, v25, (uint64_t *)&v91);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10000ED74(a1, a2, v20, (char)v7);
      sub_10000ED74(a1, a2, v20, (char)v7);
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "reportActionSelected: mode: %{private}s", v87, 0xCu);
      swift_arrayDestroy();
      a3 = v20;
      uint64_t v13 = v76;
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_10000ED74(a1, a2, a3, (char)v7);
      sub_10000ED74(a1, a2, a3, (char)v7);
    }

    if (!v86) {
      break;
    }
    if (v86 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v85 = _CocoaArrayWrapper.endIndex.getter();
    }
    else
    {
      uint64_t v85 = *(void *)((v86 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
    }
    v71[0] = a3;
    if (!v85)
    {
LABEL_22:
      swift_bridgeObjectRelease();
      a3 = v71[0];
      uint64_t v13 = v76;
      break;
    }
    a3 = 0;
    unint64_t v84 = v86 & 0xC000000000000001;
    v78 = &v92;
    uint64_t v13 = (char *)0xE000000000000000;
    a1 = 4;
    p_weak_ivar_lyt = &SlotAttachmentView.weak_ivar_lyt;
    unint64_t v27 = (void **)(&SlotAttachmentView + 56);
    *(void *)&long long v26 = 134218496;
    long long v77 = v26;
    while (1)
    {
      id v34 = v84 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v86 + 8 * a1);
      unint64_t v35 = v34;
      if (__OFADD__(a1 - 4, 1)) {
        break;
      }
      v87 = (uint8_t *)a1;
      id v88 = (id)(a1 - 3);
      [v34 range];
      id v36 = [v35 p_weak_ivar_lyt[346]];
      id v37 = [v36 (SEL)v27[347]];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      Range<>.init(_:in:)();
      LOBYTE(v36) = v38;
      swift_bridgeObjectRelease();
      if (v36)
      {
        v83 = v13;
        id v39 = [v35 p_weak_ivar_lyt[346]];
        id v40 = [v39 (SEL)v27[347]];

        id v30 = (id)static String._unconditionallyBridgeFromObjectiveC(_:)();
        a2 = v41;

        id v42 = v35;
        unint64_t v43 = Logger.logObject.getter();
        os_log_type_t v44 = static os_log_type_t.error.getter();
        int v45 = v44;
        if (os_log_type_enabled(v43, v44))
        {
          uint64_t v46 = (_DWORD *)swift_slowAlloc();
          v80 = v35;
          id v47 = v46;
          *uint64_t v46 = v77;
          uint64_t v81 = a3;
          int v79 = v45;
          id v91 = [v42 range];
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *((_WORD *)v47 + 6) = 2048;
          [v42 range];
          id v91 = v48;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *((_WORD *)v47 + 11) = 2048;
          id v49 = [v42 attributedText];
          id v50 = [v49 (SEL)v27[347]];

          static String._unconditionallyBridgeFromObjectiveC(_:)();
          id v51 = (id)String.count.getter();

          swift_bridgeObjectRelease();
          id v91 = v51;
          a3 = v81;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          _os_log_impl((void *)&_mh_execute_header, v43, (os_log_type_t)v79, "context.range (%ld, %ld out of bounds (%ld!", (uint8_t *)v47, 0x20u);
          unint64_t v35 = v80;
          p_weak_ivar_lyt = (void **)(&SlotAttachmentView + 56);
          swift_slowDealloc();
        }
        else
        {
        }
        uint64_t v13 = v83;
      }
      else
      {
        id v28 = [v35 p_weak_ivar_lyt[346]];
        id v29 = [v28 (SEL)v27[347]];

        static String._unconditionallyBridgeFromObjectiveC(_:)();
        String.subscript.getter();
        swift_bridgeObjectRelease();
        id v30 = (id)static String._fromSubstring(_:)();
        a2 = v31;
        swift_bridgeObjectRelease();
      }
      uint64_t v32 = v87;
      id v91 = v30;
      uint64_t v92 = a2;
      uint64_t v89 = a3;
      v90 = v13;
      swift_bridgeObjectRetain();
      uint64_t v7 = &protocol witness table for String;
      uint64_t v89 = String.init<A>(_:)();
      v90 = v33;
      String.append<A>(contentsOf:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      a3 = v89;
      uint64_t v13 = v90;
      a1 = (uint64_t)(v32 + 1);
      unint64_t v27 = &SlotAttachmentView.weak_ivar_lyt;
      if (v88 == (id)v85) {
        goto LABEL_22;
      }
    }
    __break(1u);
LABEL_30:
    swift_once();
  }
  uint64_t v52 = IASignalWritingToolsActionSelected;
  uint64_t v53 = (void *)IAChannelWritingTools;
  sub_10000EC20(v71[1] + OBJC_IVAR____TtC21WritingToolsUIService21WritingToolsAnalytics_analyticsUUID, (uint64_t)v13);
  uint64_t v54 = type metadata accessor for UUID();
  uint64_t v55 = *(void *)(v54 - 8);
  int v56 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v55 + 48))(v13, 1, v54);
  id v88 = v53;
  if (v56 == 1)
  {
    sub_10000EC88((uint64_t)v13);
    NSString v57 = 0;
  }
  else
  {
    UUID.uuidString.getter();
    (*(void (**)(char *, uint64_t))(v55 + 8))(v13, v54);
    NSString v57 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  uint64_t v58 = self;
  sub_1000063C0(&qword_1001FB3D0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10018A730;
  int v60 = (void *)IAPayloadKeyWritingToolsFeatureDetails;
  *(void *)(inited + 32) = IAPayloadKeyWritingToolsFeatureDetails;
  id v61 = v60;
  uint64_t v62 = (void *)sub_10000EDA8(v72, v73, a3, v74);
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v63 = v62;
  NSString v64 = String._bridgeToObjectiveC()();

  swift_bridgeObjectRelease();
  long long v65 = (void *)IAPayloadKeyWritingToolsInputText;
  *(void *)(inited + 40) = v64;
  *(void *)(inited + 48) = v65;
  id v66 = v65;
  NSString v67 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  *(void *)(inited + 56) = v67;
  if (qword_1001FAA98 != -1) {
    swift_once();
  }
  uint64_t v68 = (void *)qword_1002125D8;
  *(void *)(inited + 64) = qword_1002125D8;
  id v69 = v68;
  *(NSNumber *)(inited + 72) = Bool._bridgeToObjectiveC()();
  sub_1000050E4(inited);
  type metadata accessor for IAPayloadKey(0);
  sub_1000085FC(0, &qword_1001FB3D8);
  sub_10000ECE8();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v58 sendSignal:v52 toChannel:v88 withNullableUniqueStringID:v57 withPayload:isa];
}

uint64_t sub_10000D10C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, void *a6)
{
  if (qword_1001FAC48 != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Logger();
  sub_10000EBE8(v12, (uint64_t)qword_1002127D0);
  swift_bridgeObjectRetain();
  sub_10000ED40(a2, a3, a4, a5);
  swift_bridgeObjectRetain();
  sub_10000ED40(a2, a3, a4, a5);
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v13, v14))
  {
    id v28 = a6;
    uint64_t v15 = swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136643075;
    log = v13;
    uint64_t v16 = Dictionary.description.getter();
    sub_100021444(v16, v17, &v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 2081;
    sub_1000D5160();
    NSString v18 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v19 = [v18 key];

    uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    os_log_type_t type = v14;
    unint64_t v22 = v21;

    sub_100021444(v20, v22, &v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10000ED74(a2, a3, a4, a5);
    sub_10000ED74(a2, a3, a4, a5);
    uint64_t v13 = log;
    _os_log_impl((void *)&_mh_execute_header, log, type, "reportResultsGenerated: resultOptions: %{sensitive}s mode: %{private}s", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    a6 = v28;
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    sub_10000ED74(a2, a3, a4, a5);
    sub_10000ED74(a2, a3, a4, a5);
  }

  uint64_t v23 = sub_10008B8BC(a1);
  sub_10000D44C(v23, v24, a2, a3, a4, a5, a6, 0, 0);
  return swift_bridgeObjectRelease();
}

void sub_10000D44C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, id a7, uint64_t a8, uint64_t a9)
{
  uint64_t v70 = a8;
  uint64_t v16 = sub_1000063C0((uint64_t *)&unk_1001FB400);
  __chkstk_darwin(v16 - 8);
  uint64_t v73 = (uint64_t)v66 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1001FAC48 != -1) {
    swift_once();
  }
  uint64_t v18 = type metadata accessor for Logger();
  sub_10000EBE8(v18, (uint64_t)qword_1002127D0);
  swift_bridgeObjectRetain();
  sub_10000ED40(a3, a4, a5, a6);
  swift_bridgeObjectRetain();
  sub_10000ED40(a3, a4, a5, a6);
  id v19 = Logger.logObject.getter();
  os_log_type_t v20 = static os_log_type_t.info.getter();
  int v21 = v20;
  BOOL v22 = os_log_type_enabled(v19, v20);
  uint64_t v71 = a1;
  if (v22)
  {
    uint64_t v23 = swift_slowAlloc();
    id v69 = a7;
    uint64_t v24 = v23;
    uint64_t v68 = swift_slowAlloc();
    unint64_t v75 = v68;
    *(_DWORD *)uint64_t v24 = 136643075;
    swift_bridgeObjectRetain();
    uint64_t v74 = sub_100021444(a1, a2, (uint64_t *)&v75);
    v66[1] = &v75;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v24 + 12) = 2081;
    v66[0] = v24 + 14;
    sub_1000D5160();
    NSString v25 = String._bridgeToObjectiveC()();
    int v67 = v21;
    long long v26 = v25;
    swift_bridgeObjectRelease();
    a7 = [v26 key];

    uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v28 = a3;
    uint64_t v29 = a4;
    uint64_t v30 = a5;
    char v31 = a6;
    unint64_t v33 = v32;

    uint64_t v74 = sub_100021444(v27, v33, (uint64_t *)&v75);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    a6 = v31;
    a5 = v30;
    a4 = v29;
    a3 = v28;
    swift_bridgeObjectRelease();
    sub_10000ED74(v28, a4, a5, a6);
    sub_10000ED74(v28, a4, a5, a6);
    _os_log_impl((void *)&_mh_execute_header, v19, (os_log_type_t)v67, "reportResultsGenerated: modelInfo: %{sensitive}s mode: %{private}s", (uint8_t *)v24, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    LOBYTE(a7) = (_BYTE)v69;
    swift_slowDealloc();

    if (a7) {
      goto LABEL_5;
    }
LABEL_12:
    unint64_t v35 = _swiftEmptyArrayStorage;
    if ((a7 & 2) == 0) {
      goto LABEL_20;
    }
    goto LABEL_13;
  }
  swift_bridgeObjectRelease_n();
  sub_10000ED74(a3, a4, a5, a6);
  sub_10000ED74(a3, a4, a5, a6);

  if ((a7 & 1) == 0) {
    goto LABEL_12;
  }
LABEL_5:
  if (qword_1001FAB20 != -1) {
    swift_once();
  }
  id v34 = (id)qword_100212660;
  unint64_t v35 = sub_1001432D8(0, 1, 1, _swiftEmptyArrayStorage);
  unint64_t v37 = v35[2];
  unint64_t v36 = v35[3];
  if (v37 >= v36 >> 1) {
    unint64_t v35 = sub_1001432D8((void *)(v36 > 1), v37 + 1, 1, v35);
  }
  v35[2] = v37 + 1;
  v35[v37 + 4] = v34;
  if ((a7 & 2) != 0)
  {
LABEL_13:
    if (qword_1001FAB28 != -1) {
      swift_once();
    }
    id v38 = (id)qword_100212668;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v35 = sub_1001432D8(0, v35[2] + 1, 1, v35);
    }
    unint64_t v40 = v35[2];
    unint64_t v39 = v35[3];
    if (v40 >= v39 >> 1) {
      unint64_t v35 = sub_1001432D8((void *)(v39 > 1), v40 + 1, 1, v35);
    }
    v35[2] = v40 + 1;
    v35[v40 + 4] = v38;
  }
LABEL_20:
  sub_1000063C0(&qword_1001FB3D0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10018A730;
  if (qword_1001FAA88 != -1) {
    swift_once();
  }
  id v42 = (void *)qword_1002125C8;
  *(void *)(inited + 32) = qword_1002125C8;
  id v43 = v42;
  NSString v44 = String._bridgeToObjectiveC()();
  int v45 = (void *)IAPayloadKeyWritingToolsFeatureDetails;
  *(void *)(inited + 40) = v44;
  *(void *)(inited + 48) = v45;
  id v46 = v45;
  id v47 = (void *)sub_10000EDA8(a3, a4, a5, a6);
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v48 = v47;
  NSString v49 = String._bridgeToObjectiveC()();

  swift_bridgeObjectRelease();
  *(void *)(inited + 56) = v49;
  if (qword_1001FAA90 != -1) {
    swift_once();
  }
  id v50 = (void *)qword_1002125D0;
  *(void *)(inited + 64) = qword_1002125D0;
  type metadata accessor for IAPayloadValue(0);
  id v51 = v50;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  *(void *)(inited + 72) = isa;
  unint64_t v53 = sub_1000050E4(inited);
  if (a9)
  {
    id v54 = IAPayloadKeyWritingToolsResultText;
    NSString v55 = String._bridgeToObjectiveC()();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v75 = v53;
    sub_10016EF14((uint64_t)v55, v54, isUniquelyReferenced_nonNull_native);

    swift_bridgeObjectRelease();
  }
  uint64_t v57 = IASignalWritingToolsResultsGenerated;
  uint64_t v58 = IAChannelWritingTools;
  uint64_t v59 = v73;
  sub_10000EC20(v72 + OBJC_IVAR____TtC21WritingToolsUIService21WritingToolsAnalytics_analyticsUUID, v73);
  uint64_t v60 = type metadata accessor for UUID();
  uint64_t v61 = *(void *)(v60 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v61 + 48))(v59, 1, v60) == 1)
  {
    sub_10000EC88(v73);
    NSString v62 = 0;
  }
  else
  {
    uint64_t v63 = v73;
    UUID.uuidString.getter();
    (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v63, v60);
    NSString v62 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  NSString v64 = self;
  type metadata accessor for IAPayloadKey(0);
  sub_1000085FC(0, &qword_1001FB3D8);
  sub_10000ECE8();
  Class v65 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v64 sendSignal:v57 toChannel:v58 withNullableUniqueStringID:v62 withPayload:v65];
}

void sub_10000DC14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v6 = v5;
  uint64_t v12 = sub_1000063C0((uint64_t *)&unk_1001FB400);
  __chkstk_darwin(v12 - 8);
  os_log_type_t v14 = (char *)v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1001FAC48 != -1) {
    swift_once();
  }
  uint64_t v15 = type metadata accessor for Logger();
  sub_10000EBE8(v15, (uint64_t)qword_1002127D0);
  swift_errorRetain();
  sub_10000ED40(a2, a3, a4, a5);
  swift_errorRetain();
  sub_10000ED40(a2, a3, a4, a5);
  uint64_t v16 = Logger.logObject.getter();
  int v17 = static os_log_type_t.info.getter();
  BOOL v18 = os_log_type_enabled(v16, (os_log_type_t)v17);
  uint64_t v50 = a1;
  if (v18)
  {
    uint64_t v19 = swift_slowAlloc();
    uint64_t v46 = swift_slowAlloc();
    uint64_t v52 = v46;
    *(_DWORD *)uint64_t v19 = 136643075;
    uint64_t v48 = v6;
    os_log_t v49 = v16;
    int v47 = v17;
    if (a1)
    {
      swift_getErrorValue();
      uint64_t v20 = Error.localizedDescription.getter();
      unint64_t v22 = v21;
    }
    else
    {
      unint64_t v22 = 0xE400000000000000;
      uint64_t v20 = 1701736270;
    }
    uint64_t v51 = sub_100021444(v20, v22, &v52);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    *(_WORD *)(v19 + 12) = 2081;
    v45[1] = v19 + 14;
    sub_1000D5160();
    NSString v23 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v24 = [v23 key];

    uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v27 = v26;

    uint64_t v51 = sub_100021444(v25, v27, &v52);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10000ED74(a2, a3, a4, a5);
    sub_10000ED74(a2, a3, a4, a5);
    os_log_t v28 = v49;
    _os_log_impl((void *)&_mh_execute_header, v49, (os_log_type_t)v47, "reportResultsFailed: resultOptions: %{sensitive}s mode: %{private}s", (uint8_t *)v19, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v6 = v48;
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    sub_10000ED74(a2, a3, a4, a5);
    sub_10000ED74(a2, a3, a4, a5);
  }
  uint64_t v29 = IASignalWritingToolsResultsFailed;
  os_log_t v49 = (os_log_t)IAChannelWritingTools;
  sub_10000EC20(v6 + OBJC_IVAR____TtC21WritingToolsUIService21WritingToolsAnalytics_analyticsUUID, (uint64_t)v14);
  uint64_t v30 = type metadata accessor for UUID();
  uint64_t v31 = *(void *)(v30 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v14, 1, v30) == 1)
  {
    sub_10000EC88((uint64_t)v14);
    NSString v32 = 0;
  }
  else
  {
    UUID.uuidString.getter();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v14, v30);
    NSString v32 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  unint64_t v33 = self;
  sub_1000063C0(&qword_1001FB3D0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10018A740;
  unint64_t v35 = (void *)IAPayloadKeyWritingToolsFeatureDetails;
  *(void *)(inited + 32) = IAPayloadKeyWritingToolsFeatureDetails;
  id v36 = v35;
  unint64_t v37 = (void *)sub_10000EDA8(a2, a3, a4, a5);
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v38 = v37;
  NSString v39 = String._bridgeToObjectiveC()();

  swift_bridgeObjectRelease();
  unint64_t v40 = (void *)IAPayloadKeyWritingToolsFailureReason;
  *(void *)(inited + 40) = v39;
  *(void *)(inited + 48) = v40;
  id v41 = v40;
  id v42 = sub_10000EF88(v50);
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v43 = String._bridgeToObjectiveC()();

  swift_bridgeObjectRelease();
  *(void *)(inited + 56) = v43;
  sub_1000050E4(inited);
  type metadata accessor for IAPayloadKey(0);
  sub_1000085FC(0, &qword_1001FB3D8);
  sub_10000ECE8();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v33 sendSignal:v29 toChannel:v49 withNullableUniqueStringID:v32 withPayload:isa];
}

void sub_10000E1DC(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1000063C0((uint64_t *)&unk_1001FB400);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1001FAC48 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  sub_10000EBE8(v7, (uint64_t)qword_1002127D0);
  id v8 = a1;
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v9, v10))
  {
    v25[0] = v2;
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 138477827;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v13 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v25[1] = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v12 = v13;
    uint64_t v2 = v25[0];

    _os_log_impl((void *)&_mh_execute_header, v9, v10, "reportResultsAccepted: interactionType: %{private}@", v11, 0xCu);
    sub_1000063C0(&qword_1001FED90);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v14 = IASignalWritingToolsResultsAccepted;
  uint64_t v15 = IAChannelWritingTools;
  sub_10000EC20(v2 + OBJC_IVAR____TtC21WritingToolsUIService21WritingToolsAnalytics_analyticsUUID, (uint64_t)v6);
  uint64_t v16 = type metadata accessor for UUID();
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v6, 1, v16) == 1)
  {
    sub_10000EC88((uint64_t)v6);
    NSString v18 = 0;
  }
  else
  {
    UUID.uuidString.getter();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v6, v16);
    NSString v18 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  uint64_t v19 = self;
  sub_1000063C0(&qword_1001FB3D0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10018A720;
  unint64_t v21 = (void *)IAPayloadKeyWritingToolsInteractionType;
  *(void *)(inited + 32) = IAPayloadKeyWritingToolsInteractionType;
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v22 = v21;
  NSString v23 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  *(void *)(inited + 40) = v23;
  sub_1000050E4(inited);
  type metadata accessor for IAPayloadKey(0);
  sub_1000085FC(0, &qword_1001FB3D8);
  sub_10000ECE8();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v19 sendSignal:v14 toChannel:v15 withNullableUniqueStringID:v18 withPayload:isa];
}

void sub_10000E5AC(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1000063C0((uint64_t *)&unk_1001FB400);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1001FAC48 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  sub_10000EBE8(v7, (uint64_t)qword_1002127D0);
  id v8 = a1;
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v9, v10))
  {
    v28[0] = v2;
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 138477827;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v13 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v28[1] = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v12 = v13;
    uint64_t v2 = v28[0];

    _os_log_impl((void *)&_mh_execute_header, v9, v10, "reportPanelAppeared: interactionType: %{private}@", v11, 0xCu);
    sub_1000063C0(&qword_1001FED90);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v14 = IASignalWritingToolsPanelAppeared;
  uint64_t v15 = IAChannelWritingTools;
  sub_10000EC20(v2 + OBJC_IVAR____TtC21WritingToolsUIService21WritingToolsAnalytics_analyticsUUID, (uint64_t)v6);
  uint64_t v16 = type metadata accessor for UUID();
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v6, 1, v16) == 1)
  {
    sub_10000EC88((uint64_t)v6);
    NSString v18 = 0;
  }
  else
  {
    UUID.uuidString.getter();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v6, v16);
    NSString v18 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  uint64_t v19 = self;
  sub_1000063C0(&qword_1001FB3D0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10018A740;
  unint64_t v21 = (void *)IAPayloadKeyWritingToolsFeatureDetails;
  *(void *)(inited + 32) = IAPayloadKeyWritingToolsFeatureDetails;
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v22 = v21;
  NSString v23 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v24 = (void *)IAPayloadKeyWritingToolsUI;
  *(void *)(inited + 40) = v23;
  *(void *)(inited + 48) = v24;
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v25 = v24;
  NSString v26 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  *(void *)(inited + 56) = v26;
  sub_1000050E4(inited);
  type metadata accessor for IAPayloadKey(0);
  sub_1000085FC(0, &qword_1001FB3D8);
  sub_10000ECE8();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v19 sendSignal:v14 toChannel:v15 withNullableUniqueStringID:v18 withPayload:isa];
}

uint64_t sub_10000E9C0()
{
  sub_10000EC88(v0 + OBJC_IVAR____TtC21WritingToolsUIService21WritingToolsAnalytics_analyticsUUID);
  uint64_t v1 = v0 + OBJC_IVAR____TtC21WritingToolsUIService21WritingToolsAnalytics___observationRegistrar;
  uint64_t v2 = type metadata accessor for ObservationRegistrar();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_10000EA70()
{
  return type metadata accessor for WritingToolsAnalytics();
}

uint64_t type metadata accessor for WritingToolsAnalytics()
{
  uint64_t result = qword_1001FB2B0;
  if (!qword_1001FB2B0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10000EAC4()
{
  sub_10000EB90();
  if (v0 <= 0x3F)
  {
    type metadata accessor for ObservationRegistrar();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_10000EB90()
{
  if (!qword_1001FB2C0)
  {
    type metadata accessor for UUID();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1001FB2C0);
    }
  }
}

uint64_t sub_10000EBE8(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t sub_10000EC20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000063C0((uint64_t *)&unk_1001FB400);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10000EC88(uint64_t a1)
{
  uint64_t v2 = sub_1000063C0((uint64_t *)&unk_1001FB400);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_10000ECE8()
{
  unint64_t result = qword_1001FB168;
  if (!qword_1001FB168)
  {
    type metadata accessor for IAPayloadKey(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FB168);
  }
  return result;
}

uint64_t sub_10000ED40(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  if (a4 == 1) {
    return sub_10000ED60(result, a2);
  }
  if (!a4) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_10000ED60(uint64_t a1, uint64_t a2)
{
  if (a2 != 1) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_10000ED74(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  if (a4 == 1) {
    return sub_10000ED94(result, a2);
  }
  if (!a4) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10000ED94(uint64_t a1, uint64_t a2)
{
  if (a2 != 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10000EDA8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4)
  {
    if (a4 == 1)
    {
      if (qword_1001FAB40 != -1) {
        swift_once();
      }
      uint64_t v4 = &qword_100212680;
    }
    else if (a3 | a2 | a1)
    {
      if (a1 != 1 || a3 | a2)
      {
        if (qword_1001FAB38 != -1) {
          swift_once();
        }
        uint64_t v4 = &qword_100212678;
      }
      else
      {
LABEL_11:
        uint64_t v4 = (uint64_t *)&IAPayloadValueWritingToolsFeatureDetailsProofreadingReview;
      }
    }
    else
    {
      if (qword_1001FAB30 != -1) {
        swift_once();
      }
      uint64_t v4 = &qword_100212670;
    }
  }
  else
  {
    uint64_t v4 = (uint64_t *)&IAPayloadValueWritingToolsFeatureDetailsMagicRewrite;
    switch((char)a1)
    {
      case 1:
        goto LABEL_11;
      case 2:
        uint64_t v4 = (uint64_t *)&IAPayloadValueWritingToolsFeatureDetailsConciseTone;
        break;
      case 3:
        uint64_t v4 = (uint64_t *)&IAPayloadValueWritingToolsFeatureDetailsFriendlyTone;
        break;
      case 4:
        uint64_t v4 = (uint64_t *)&IAPayloadValueWritingToolsFeatureDetailsProfessionalTone;
        break;
      case 5:
        uint64_t v4 = (uint64_t *)&IAPayloadValueWritingToolsFeatureDetailsOpenEndedTone;
        break;
      case 6:
        if (qword_1001FAB18 != -1) {
          swift_once();
        }
        uint64_t v4 = &qword_100212658;
        break;
      case 7:
        uint64_t v4 = (uint64_t *)&IAPayloadValueWritingToolsFeatureDetailsTakeawaysTransform;
        break;
      case 8:
        uint64_t v4 = (uint64_t *)&IAPayloadValueWritingToolsFeatureDetailsBulletsTransform;
        break;
      case 9:
        uint64_t v4 = (uint64_t *)&IAPayloadValueWritingToolsFeatureDetailsTablesTransform;
        break;
      default:
        return *v4;
    }
  }
  return *v4;
}

id sub_10000EF88(uint64_t a1)
{
  if (a1)
  {
    swift_errorRetain();
    sub_1000063C0(&qword_1001FEE40);
    sub_1000085FC(0, &qword_1001FB3E0);
    if (swift_dynamicCast())
    {
      id v1 = [v12 domain];
      uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v4 = v3;

      if (static String._unconditionallyBridgeFromObjectiveC(_:)() == v2 && v5 == v4)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v7 & 1) == 0)
        {
          if (qword_1001FAB78 != -1) {
            swift_once();
          }
          id v8 = (void *)qword_1002126B8;
LABEL_11:
          id v9 = v8;

          return v9;
        }
      }
      switch((unint64_t)[v12 code])
      {
        case 1uLL:
          if (qword_1001FAB88 != -1) {
            swift_once();
          }
          id v8 = (void *)qword_1002126C8;
          break;
        case 2uLL:
          if (qword_1001FAB90 != -1) {
            swift_once();
          }
          id v8 = (void *)qword_1002126D0;
          break;
        case 3uLL:
          if (qword_1001FAB98 != -1) {
            swift_once();
          }
          id v8 = (void *)qword_1002126D8;
          break;
        case 4uLL:
          if (qword_1001FABA0 != -1) {
            swift_once();
          }
          id v8 = (void *)qword_1002126E0;
          break;
        case 5uLL:
          if (qword_1001FABA8 != -1) {
            swift_once();
          }
          id v8 = (void *)qword_1002126E8;
          break;
        case 6uLL:
          if (qword_1001FABB0 != -1) {
            swift_once();
          }
          id v8 = (void *)qword_1002126F0;
          break;
        case 7uLL:
          if (qword_1001FABB8 != -1) {
            swift_once();
          }
          id v8 = (void *)qword_1002126F8;
          break;
        case 8uLL:
          if (qword_1001FABC0 != -1) {
            swift_once();
          }
          id v8 = (void *)qword_100212700;
          break;
        case 9uLL:
          if (qword_1001FABC8 != -1) {
            swift_once();
          }
          id v8 = (void *)qword_100212708;
          break;
        case 0xAuLL:
          if (qword_1001FABD0 != -1) {
            swift_once();
          }
          id v8 = (void *)qword_100212710;
          break;
        case 0xBuLL:
          if (qword_1001FABD8 != -1) {
            swift_once();
          }
          id v8 = (void *)qword_100212718;
          break;
        case 0xCuLL:
          if (qword_1001FABE0 != -1) {
            swift_once();
          }
          id v8 = (void *)qword_100212720;
          break;
        case 0xDuLL:
          if (qword_1001FABE8 != -1) {
            swift_once();
          }
          id v8 = (void *)qword_100212728;
          break;
        case 0xEuLL:
          if (qword_1001FABF0 != -1) {
            swift_once();
          }
          id v8 = (void *)qword_100212730;
          break;
        case 0xFuLL:
          if (qword_1001FABF8 != -1) {
            swift_once();
          }
          id v8 = (void *)qword_100212738;
          break;
        default:
          if (qword_1001FAB80 != -1) {
            swift_once();
          }
          id v8 = (void *)qword_1002126C0;
          break;
      }
      goto LABEL_11;
    }
  }
  if (qword_1001FAB78 != -1) {
    swift_once();
  }
  uint64_t v11 = (void *)qword_1002126B8;

  return v11;
}

uint64_t property wrapper backing initializer of WritingToolsView.navigationPath(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NavigationPath();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v6 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  State.init(wrappedValue:)();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

uint64_t property wrapper backing initializer of WritingToolsView.openEndedInstructions()
{
  State.init(wrappedValue:)();
  return v1;
}

uint64_t property wrapper backing initializer of WritingToolsView.analyticsInstance(uint64_t a1)
{
  return sub_10000F758(a1, (void (*)(void))type metadata accessor for WritingToolsAnalytics);
}

uint64_t property wrapper backing initializer of WritingToolsView.writingToolsModel()
{
  type metadata accessor for WritingToolsModel();
  sub_100027D14((unint64_t *)&unk_1001FB3F0, (void (*)(uint64_t))type metadata accessor for WritingToolsModel);

  return Bindable<A>.init(wrappedValue:)();
}

uint64_t property wrapper backing initializer of WritingToolsView.proofreadingModel(uint64_t a1)
{
  return sub_10000F758(a1, (void (*)(void))type metadata accessor for ProofreadingModel);
}

uint64_t sub_10000F758(uint64_t a1, void (*a2)(void))
{
  a2(0);
  State.init(wrappedValue:)();
  return v3;
}

uint64_t property wrapper backing initializer of WritingToolsView.unifiedIconWidth()
{
  sub_1000063C0(&qword_1001FDC70);
  State.init(wrappedValue:)();
  return v1;
}

uint64_t property wrapper backing initializer of FormSheetPhotoPickerView.isPresented()
{
  State.init(wrappedValue:)();
  return v1;
}

uint64_t WritingToolsView.init(writingToolsDelegate:writingToolsModel:requestedMode:hostAppAuditToken:prompt:smartReplyConfiguration:isForEditableContent:wantsInlineEditing:allowedResultOptions:rewritingModel:proofreadingModel:analyticsUUID:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, void *a7@<X6>, void *a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, unsigned __int8 a12, unsigned __int8 a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  id v99 = a8;
  id v100 = a7;
  int v98 = a6;
  uint64_t v96 = a4;
  uint64_t v97 = a5;
  v95 = a3;
  uint64_t v105 = a2;
  uint64_t v106 = a17;
  uint64_t v19 = sub_1000063C0((uint64_t *)&unk_1001FB400);
  __chkstk_darwin(v19 - 8);
  unint64_t v21 = (char *)&v88 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for NavigationPath();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = __chkstk_darwin(v22);
  NSString v26 = (char *)&v88 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  os_log_t v28 = (char *)&v88 - v27;
  type metadata accessor for CommonUIManager();
  sub_100027D14((unint64_t *)&qword_1001FAE20, (void (*)(uint64_t))type metadata accessor for CommonUIManager);
  *(void *)a9 = Environment.init<A>(_:)();
  *(unsigned char *)(a9 + 8) = v29 & 1;
  type metadata accessor for PresentationModel();
  sub_100027D14((unint64_t *)&qword_1001FB410, (void (*)(uint64_t))type metadata accessor for PresentationModel);
  *(void *)(a9 + 16) = Environment.init<A>(_:)();
  *(unsigned char *)(a9 + 24) = v30 & 1;
  uint64_t v31 = (int *)type metadata accessor for WritingToolsView();
  NSString v32 = (uint64_t *)(a9 + v31[6]);
  uint64_t *v32 = swift_getKeyPath();
  sub_1000063C0((uint64_t *)&unk_1001FAE30);
  swift_storeEnumTagMultiPayload();
  uint64_t v101 = a9 + v31[7];
  swift_unknownObjectWeakInit();
  NavigationPath.init()();
  (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v26, v28, v22);
  State.init(wrappedValue:)();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v28, v22);
  uint64_t v33 = a9 + v31[16];
  uint64_t v107 = 0;
  unint64_t v108 = 0xE000000000000000;
  State.init(wrappedValue:)();
  uint64_t v34 = v110;
  *(_OWORD *)uint64_t v33 = v109;
  *(void *)(v33 + 16) = v34;
  uint64_t v35 = a9 + v31[17];
  LOBYTE(v107) = 0;
  State.init(wrappedValue:)();
  uint64_t v36 = *((void *)&v109 + 1);
  *(unsigned char *)uint64_t v35 = v109;
  *(void *)(v35 + 8) = v36;
  uint64_t v37 = a9 + v31[21];
  uint64_t v107 = 0;
  LOBYTE(v108) = 1;
  sub_1000063C0(&qword_1001FDC70);
  State.init(wrappedValue:)();
  char v38 = BYTE8(v109);
  uint64_t v39 = v110;
  *(void *)uint64_t v37 = v109;
  *(unsigned char *)(v37 + 8) = v38;
  *(void *)(v37 + 16) = v39;
  uint64_t v40 = a9 + v31[22];
  LOBYTE(v107) = 0;
  State.init(wrappedValue:)();
  uint64_t v41 = *((void *)&v109 + 1);
  *(unsigned char *)uint64_t v40 = v109;
  *(void *)(v40 + 8) = v41;
  id v42 = (uint64_t *)(a9 + v31[23]);
  *id v42 = swift_getKeyPath();
  sub_1000063C0(&qword_1001FB420);
  swift_storeEnumTagMultiPayload();
  uint64_t v43 = a9 + v31[24];
  *(unsigned char *)uint64_t v43 = FocusState.init<>()() & 1;
  *(void *)(v43 + 8) = v44;
  *(unsigned char *)(v43 + 16) = v45 & 1;
  uint64_t v104 = a1;
  if (a1) {
    uint64_t v46 = 7562617;
  }
  else {
    uint64_t v46 = 28526;
  }
  if (a1) {
    unint64_t v47 = 0xE300000000000000;
  }
  else {
    unint64_t v47 = 0xE200000000000000;
  }
  if (qword_1001FAC38 != -1) {
    swift_once();
  }
  uint64_t v102 = a14;
  uint64_t v103 = a16;
  unsigned __int8 v48 = a13;
  int v92 = a12;
  uint64_t v93 = a11;
  uint64_t v91 = a10;
  uint64_t v49 = type metadata accessor for Logger();
  sub_10000EBE8(v49, (uint64_t)qword_1002127A0);
  os_log_type_t v50 = static os_log_type_t.debug.getter();
  swift_bridgeObjectRetain();
  uint64_t v51 = Logger.logObject.getter();
  if (os_log_type_enabled(v51, v50))
  {
    int v90 = a13;
    uint64_t v52 = swift_slowAlloc();
    uint64_t v89 = v46;
    unint64_t v53 = (uint8_t *)v52;
    uint64_t v54 = swift_slowAlloc();
    uint64_t v94 = v49;
    *(void *)&long long v109 = v54;
    *(_DWORD *)unint64_t v53 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v107 = sub_100021444(v89, v47, (uint64_t *)&v109);
    unsigned __int8 v48 = v90;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v51, v50, "Initializing WritingToolsView initializing QuestionnaireView with delegate: %s", v53, 0xCu);
    swift_arrayDestroy();
    uint64_t v49 = v94;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  swift_unknownObjectWeakAssign();
  uint64_t v55 = a9 + v31[19];
  type metadata accessor for WritingToolsModel();
  uint64_t v56 = sub_100027D14((unint64_t *)&unk_1001FB3F0, (void (*)(uint64_t))type metadata accessor for WritingToolsModel);
  swift_retain();
  uint64_t v101 = v55;
  uint64_t v94 = v56;
  Bindable<A>.init(wrappedValue:)();
  uint64_t v57 = a9 + v31[8];
  uint64_t v58 = v96;
  *(void *)uint64_t v57 = v95;
  *(void *)(v57 + 8) = v58;
  *(void *)(v57 + 16) = v97;
  *(unsigned char *)(v57 + 24) = v98;
  id v59 = v99;
  id v60 = v100;
  *(void *)(a9 + v31[9]) = v100;
  uint64_t v61 = (void *)(a9 + v31[10]);
  uint64_t v62 = v91;
  *uint64_t v61 = v59;
  v61[1] = v62;
  uint64_t v63 = (void *)v93;
  *(void *)(a9 + v31[11]) = v93;
  uint64_t v64 = v31[12];
  int v98 = v92 & 1;
  *(unsigned char *)(a9 + v64) = v92 & 1;
  uint64_t v65 = v103;
  *(void *)(a9 + v31[14]) = v102;
  uint64_t v66 = v31[13];
  LODWORD(v97) = v48 & 1;
  *(unsigned char *)(a9 + v66) = v48 & 1;
  int v67 = (void *)(a9 + v31[20]);
  uint64_t v107 = v65;
  type metadata accessor for ProofreadingModel();
  id v100 = v60;
  id v99 = v63;
  swift_retain();
  State.init(wrappedValue:)();
  uint64_t v68 = *((void *)&v109 + 1);
  *int v67 = v109;
  v67[1] = v68;
  sub_100008DD4(v106, (uint64_t)v21, (uint64_t *)&unk_1001FB400);
  type metadata accessor for WritingToolsAnalytics();
  uint64_t v69 = swift_allocObject();
  ObservationRegistrar.init()();
  sub_100008DD4((uint64_t)v21, v69 + OBJC_IVAR____TtC21WritingToolsUIService21WritingToolsAnalytics_analyticsUUID, (uint64_t *)&unk_1001FB400);
  if (qword_1001FAC48 != -1) {
    swift_once();
  }
  sub_10000EBE8(v49, (uint64_t)qword_1002127D0);
  uint64_t v70 = Logger.logObject.getter();
  os_log_type_t v71 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v70, v71))
  {
    uint64_t v72 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v72 = 0;
    _os_log_impl((void *)&_mh_execute_header, v70, v71, "WritingToolsAnalytics init", v72, 2u);
    swift_slowDealloc();
  }

  sub_10002784C((uint64_t)v21, (uint64_t *)&unk_1001FB400);
  uint64_t v73 = (void *)(a9 + v31[18]);
  uint64_t v107 = v69;
  State.init(wrappedValue:)();
  uint64_t v74 = *((void *)&v109 + 1);
  *uint64_t v73 = v109;
  v73[1] = v74;
  uint64_t v93 = sub_1000063C0((uint64_t *)&unk_1001FB428);
  Bindable.wrappedValue.getter();
  uint64_t v75 = v109;
  uint64_t KeyPath = swift_getKeyPath();
  __chkstk_darwin(KeyPath);
  *(&v88 - 2) = v75;
  *(&v88 - 1) = a15;
  *(void *)&long long v109 = v75;
  swift_retain();
  v95 = (char *)&type metadata for () + 8;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  swift_release();
  swift_release();
  Bindable.wrappedValue.getter();
  uint64_t v77 = v109;
  swift_getKeyPath();
  *(void *)&long long v109 = v77;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v78 = *(void *)(v77 + 32);
  swift_retain();
  swift_release();
  uint64_t v79 = swift_getKeyPath();
  uint64_t v96 = a15;
  __chkstk_darwin(v79);
  uint64_t v80 = v102;
  *(&v88 - 2) = v78;
  *(&v88 - 1) = v80;
  *(void *)&long long v109 = v78;
  uint64_t v102 = sub_100027D14((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  swift_release();
  Bindable.wrappedValue.getter();
  uint64_t v81 = v109;
  swift_getKeyPath();
  *(void *)&long long v109 = v81;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v82 = *(void *)(v81 + 32);
  swift_retain();
  swift_release();
  uint64_t v83 = swift_getKeyPath();
  __chkstk_darwin(v83);
  *(&v88 - 2) = v82;
  *((unsigned char *)&v88 - 8) = v97;
  *(void *)&long long v109 = v82;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  swift_release();
  Bindable.wrappedValue.getter();
  uint64_t v84 = v109;
  swift_getKeyPath();
  *(void *)&long long v109 = v84;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v85 = *(void *)(v84 + 32);
  swift_retain();
  swift_release();
  uint64_t v86 = swift_getKeyPath();
  __chkstk_darwin(v86);
  *(&v88 - 2) = v85;
  *((unsigned char *)&v88 - 8) = v98;
  *(void *)&long long v109 = v85;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_unknownObjectRelease();
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return sub_10002784C(v106, (uint64_t *)&unk_1001FB400);
}

uint64_t type metadata accessor for WritingToolsView()
{
  uint64_t result = qword_1001FB670;
  if (!qword_1001FB670) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t WritingToolsView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v103 = a1;
  uint64_t v102 = type metadata accessor for NavigationPath();
  uint64_t v117 = *(void *)(v102 - 8);
  __chkstk_darwin(v102);
  id v100 = (char *)&v85 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for WritingToolsView();
  uint64_t v112 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v114 = v5;
  uint64_t v118 = (uint64_t)&v85 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000063C0(&qword_1001FB438);
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_1000063C0(&qword_1001FB440);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  os_log_type_t v10 = (char *)&v85 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000063C0(&qword_1001FB448);
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v85 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1000063C0(&qword_1001FB450);
  __chkstk_darwin(v15 - 8);
  uint64_t v104 = (uint64_t)&v85 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = sub_1000063C0(&qword_1001FB458);
  __chkstk_darwin(v88);
  NSString v18 = (char *)&v85 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = sub_1000063C0(&qword_1001FB460);
  __chkstk_darwin(v107);
  uint64_t v87 = (uint64_t)&v85 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v108 = sub_1000063C0(&qword_1001FB468);
  __chkstk_darwin(v108);
  uint64_t v89 = (uint64_t)&v85 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = sub_1000063C0(&qword_1001FB470);
  uint64_t v90 = *(void *)(v91 - 8);
  __chkstk_darwin(v91);
  long long v109 = (char *)&v85 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = sub_1000063C0(&qword_1001FB478);
  uint64_t v92 = *(void *)(v97 - 8);
  __chkstk_darwin(v97);
  uint64_t v110 = (char *)&v85 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = sub_1000063C0(&qword_1001FB480);
  uint64_t v98 = *(void *)(v99 - 8);
  __chkstk_darwin(v99);
  uint64_t v96 = (char *)&v85 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = sub_1000063C0(&qword_1001FB488);
  uint64_t v94 = *(void *)(v95 - 8);
  __chkstk_darwin(v95);
  uint64_t v93 = (char *)&v85 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = (void *)(v1 + *(int *)(v4 + 60));
  uint64_t v115 = sub_1000063C0(&qword_1001FB490);
  v116 = v25;
  State.projectedValue.getter();
  uint64_t v119 = v2;
  sub_1000063C0(&qword_1001FB498);
  sub_100021AA4();
  NavigationStack.init<>(path:root:)();
  uint64_t v101 = v4;
  uint64_t v26 = v2 + *(int *)(v4 + 88);
  char v27 = *(unsigned char *)v26;
  uint64_t v28 = *(void *)(v26 + 8);
  LOBYTE(v120) = v27;
  uint64_t v121 = v28;
  sub_1000063C0(&qword_1001FB5A8);
  State.wrappedValue.getter();
  LOBYTE(v4) = v124;
  uint64_t v29 = static Alignment.center.getter();
  uint64_t v31 = v30;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v14, v10, v7);
  NSString v32 = &v14[*(int *)(v12 + 44)];
  char *v32 = 0;
  v32[1] = v4;
  *((void *)v32 + 1) = v29;
  *((void *)v32 + 2) = v31;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  uint64_t v33 = *(void *)(v2 + 16);
  LOBYTE(v10) = *(unsigned char *)(v2 + 24);
  j__swift_retain();
  uint64_t v34 = sub_1000207F8(v33, (char)v10);
  j__swift_release();
  if (v34)
  {
    swift_getKeyPath();
    uint64_t v120 = v34;
    sub_100027D14((unint64_t *)&qword_1001FB410, (void (*)(uint64_t))type metadata accessor for PresentationModel);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v35 = *(void *)(v34 + 32);
    char v36 = *(unsigned char *)(v34 + 40);
    swift_release();
    if (v36 & 1 | (v35 != 1)) {
      double v37 = 600.0;
    }
    else {
      double v37 = 700.0;
    }
  }
  else
  {
    double v37 = 0.0;
  }
  uint64_t v38 = static Alignment.center.getter();
  uint64_t v39 = v104;
  sub_100019918(0.0, 1, 0.0, 1, v37, v34 == 0, 0.0, 1, v104, 0.0, 1, 0.0, 1, v38, v40, (uint64_t)&qword_1001FB448, (void (*)(uint64_t, uint64_t, uint64_t))sub_100008DD4, &qword_1001FB450);
  sub_10002784C((uint64_t)v14, &qword_1001FB448);
  uint64_t KeyPath = swift_getKeyPath();
  v113 = type metadata accessor for WritingToolsView;
  uint64_t v41 = v118;
  sub_100026EB0(v2, v118, (uint64_t (*)(void))type metadata accessor for WritingToolsView);
  uint64_t v42 = *(unsigned __int8 *)(v112 + 80);
  uint64_t v43 = (v42 + 16) & ~v42;
  uint64_t v112 = v43 + v114;
  uint64_t v114 = v42 | 7;
  uint64_t v44 = swift_allocObject();
  uint64_t v45 = v2;
  uint64_t v111 = v2;
  uint64_t v46 = v44;
  uint64_t v47 = v43;
  sub_100027CAC(v41, v44 + v43, (uint64_t (*)(void))type metadata accessor for WritingToolsView);
  sub_100008DD4(v39, (uint64_t)v18, &qword_1001FB450);
  unsigned __int8 v48 = (uint64_t *)&v18[*(int *)(v88 + 36)];
  *unsigned __int8 v48 = KeyPath;
  v48[1] = (uint64_t)sub_1000223CC;
  v48[2] = v46;
  sub_10002784C(v39, &qword_1001FB450);
  uint64_t v49 = v113;
  sub_100026EB0(v45, v41, (uint64_t (*)(void))v113);
  uint64_t v50 = swift_allocObject();
  uint64_t v105 = v47;
  uint64_t v106 = type metadata accessor for WritingToolsView;
  sub_100027CAC(v41, v50 + v47, (uint64_t (*)(void))type metadata accessor for WritingToolsView);
  uint64_t v51 = v87;
  sub_100008DD4((uint64_t)v18, v87, &qword_1001FB458);
  uint64_t v52 = (void *)(v51 + *(int *)(v107 + 36));
  *uint64_t v52 = 0;
  v52[1] = 0;
  v52[2] = sub_100022450;
  v52[3] = v50;
  sub_10002784C((uint64_t)v18, &qword_1001FB458);
  uint64_t v53 = v89;
  sub_100008DD4(v51, v89, &qword_1001FB460);
  uint64_t v54 = (uint64_t (**)())(v53 + *(int *)(v108 + 36));
  *uint64_t v54 = sub_10001CCF4;
  v54[1] = 0;
  v54[2] = 0;
  v54[3] = 0;
  sub_10002784C(v51, &qword_1001FB460);
  uint64_t v55 = v100;
  State.wrappedValue.getter();
  uint64_t v56 = v111;
  sub_100026EB0(v111, v41, (uint64_t (*)(void))v49);
  uint64_t v57 = swift_allocObject();
  sub_100027CAC(v41, v57 + v47, (uint64_t (*)(void))type metadata accessor for WritingToolsView);
  uint64_t v88 = sub_1000224B4(&qword_1001FB5B0, &qword_1001FB468, (void (*)(void))sub_100022484);
  uint64_t v104 = sub_100027D14(&qword_1001FB600, (void (*)(uint64_t))&type metadata accessor for NavigationPath);
  uint64_t v58 = v108;
  uint64_t v59 = v102;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  id v60 = *(void (**)(char *, uint64_t))(v117 + 8);
  v117 += 8;
  uint64_t v107 = (uint64_t)v60;
  v60(v55, v59);
  sub_10002784C(v53, &qword_1001FB468);
  State.wrappedValue.getter();
  sub_100026EB0(v56, v41, (uint64_t (*)(void))v49);
  uint64_t v61 = swift_allocObject();
  uint64_t v62 = v105;
  uint64_t v63 = v106;
  sub_100027CAC(v41, v61 + v105, (uint64_t (*)(void))v106);
  uint64_t v120 = v58;
  uint64_t v121 = v59;
  uint64_t v122 = v88;
  uint64_t v123 = v104;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v65 = v91;
  uint64_t v66 = v109;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  ((void (*)(char *, uint64_t))v107)(v55, v59);
  (*(void (**)(char *, uint64_t))(v90 + 8))(v66, v65);
  State.wrappedValue.getter();
  uint64_t v67 = v118;
  sub_100026EB0(v111, v118, (uint64_t (*)(void))v113);
  uint64_t v68 = swift_allocObject();
  sub_100027CAC(v67, v68 + v62, (uint64_t (*)(void))v63);
  uint64_t v120 = v65;
  uint64_t v121 = v59;
  uint64_t v69 = v104;
  uint64_t v122 = OpaqueTypeConformance2;
  uint64_t v123 = v104;
  v116 = &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>;
  uint64_t v70 = swift_getOpaqueTypeConformance2();
  os_log_type_t v71 = v96;
  uint64_t v72 = v97;
  uint64_t v73 = v69;
  uint64_t v74 = v110;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  ((void (*)(char *, uint64_t))v107)(v55, v59);
  (*(void (**)(char *, uint64_t))(v92 + 8))(v74, v72);
  uint64_t v75 = v111;
  v76 = (char *)(v111 + *(int *)(v101 + 96));
  char v77 = *v76;
  uint64_t v78 = *((void *)v76 + 1);
  LOBYTE(v76) = v76[16];
  LOBYTE(v120) = v77;
  uint64_t v121 = v78;
  LOBYTE(v122) = (_BYTE)v76;
  sub_1000063C0(&qword_1001FB608);
  FocusState.wrappedValue.getter();
  uint64_t v79 = v75;
  uint64_t v80 = v118;
  sub_100026EB0(v79, v118, (uint64_t (*)(void))v113);
  uint64_t v81 = swift_allocObject();
  sub_100027CAC(v80, v81 + v105, (uint64_t (*)(void))v106);
  uint64_t v120 = v72;
  uint64_t v121 = v59;
  uint64_t v122 = v70;
  uint64_t v123 = v73;
  swift_getOpaqueTypeConformance2();
  uint64_t v82 = v93;
  uint64_t v83 = v99;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v98 + 8))(v71, v83);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v94 + 32))(v103, v82, v95);
}

uint64_t sub_1000113EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v239 = a2;
  v230 = (char *)type metadata accessor for CompositionView(0);
  __chkstk_darwin(v230);
  uint64_t v4 = (char *)&v189 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v216 = sub_1000063C0(&qword_1001FB588);
  uint64_t v208 = *(void *)(v216 - 8);
  __chkstk_darwin(v216);
  v206 = (char *)&v189 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v218 = sub_1000063C0(&qword_1001FB7F8);
  uint64_t v211 = *(void *)(v218 - 8);
  uint64_t v6 = __chkstk_darwin(v218);
  v205 = (char *)&v189 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v229 = (uint64_t)&v189 - v8;
  uint64_t v213 = sub_1000063C0(&qword_1001FB800);
  __chkstk_darwin(v213);
  uint64_t v215 = (uint64_t)&v189 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v235 = sub_1000063C0(&qword_1001FB568);
  __chkstk_darwin(v235);
  uint64_t v217 = (uint64_t)&v189 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for QuestionnaireView(0);
  __chkstk_darwin(v11 - 8);
  v196 = (uint64_t *)((char *)&v189 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v214 = sub_1000063C0(&qword_1001FB578);
  uint64_t v13 = __chkstk_darwin(v214);
  uint64_t v195 = (uint64_t)&v189 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v197 = (uint64_t)&v189 - v15;
  uint64_t v16 = type metadata accessor for ModelResponseView(0);
  __chkstk_darwin(v16 - 8);
  v204 = (uint64_t *)((char *)&v189 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v200 = sub_1000063C0(&qword_1001FB550);
  __chkstk_darwin(v200);
  v202 = (char *)&v189 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v210 = sub_1000063C0(&qword_1001FB540);
  uint64_t v19 = __chkstk_darwin(v210);
  uint64_t v201 = (uint64_t)&v189 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v203 = (uint64_t)&v189 - v21;
  uint64_t v209 = sub_1000063C0(&qword_1001FB808);
  __chkstk_darwin(v209);
  uint64_t v212 = (uint64_t)&v189 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for RewritingView();
  __chkstk_darwin(v23 - 8);
  uint64_t v193 = (uint64_t)&v189 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v190 = sub_1000063C0(&qword_1001FB528);
  __chkstk_darwin(v190);
  v192 = (char *)&v189 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v207 = sub_1000063C0(&qword_1001FB518);
  uint64_t v26 = __chkstk_darwin(v207);
  uint64_t v191 = (uint64_t)&v189 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  uint64_t v194 = (uint64_t)&v189 - v28;
  uint64_t v225 = sub_1000063C0(&qword_1001FB508);
  __chkstk_darwin(v225);
  uint64_t v30 = (char *)&v189 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v236 = sub_1000063C0(&qword_1001FB810);
  __chkstk_darwin(v236);
  NSString v32 = (uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t@<X8>))((char *)&v189 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v231 = sub_1000063C0(&qword_1001FB818);
  __chkstk_darwin(v231);
  uint64_t v233 = (uint64_t)&v189 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v222 = sub_1000063C0((uint64_t *)&unk_1001FB820);
  __chkstk_darwin(v222);
  uint64_t v223 = (uint64_t)&v189 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v232 = sub_1000063C0(&qword_1001FB4C0);
  __chkstk_darwin(v232);
  v224 = (char *)&v189 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v237 = sub_1000063C0(&qword_1001FB4B0);
  __chkstk_darwin(v237);
  v234 = (char *)&v189 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v221 = type metadata accessor for TaskPriority();
  uint64_t v220 = *(void *)(v221 - 8);
  __chkstk_darwin(v221);
  v219 = (char *)&v189 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = (int *)type metadata accessor for WritingToolsView();
  uint64_t v226 = *((void *)v38 - 1);
  uint64_t v39 = *(void *)(v226 + 64);
  uint64_t v40 = __chkstk_darwin(v38);
  __chkstk_darwin(v40);
  uint64_t v227 = (uint64_t)&v189 - v41;
  uint64_t v42 = sub_1000063C0((uint64_t *)&unk_1001FAE40);
  __chkstk_darwin(v42 - 8);
  uint64_t v44 = (char *)&v189 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_1000063C0(&qword_1001FB438);
  __chkstk_darwin(v45 - 8);
  uint64_t v228 = (uint64_t)&v189 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = type metadata accessor for ProofreadingView();
  __chkstk_darwin(v47);
  uint64_t v49 = (char *)&v189 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v198 = sub_1000063C0(&qword_1001FB4E0);
  __chkstk_darwin(v198);
  v199 = (char *)&v189 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000063C0(&qword_1001FB4D0);
  uint64_t v51 = __chkstk_darwin(a1);
  uint64_t v52 = __chkstk_darwin(v51);
  uint64_t v56 = a1 + v38[8];
  uint64_t v57 = *(void *)v56;
  int v58 = *(unsigned __int8 *)(v56 + 24);
  v238 = v32;
  if (v58)
  {
    uint64_t v59 = *(void *)(v56 + 8);
    uint64_t v60 = *(void *)(v56 + 16);
    if (v58 == 1)
    {
      uint64_t v61 = v52;
      sub_10000ED60(v57, v59);
      sub_1000063C0(&qword_1001FB490);
      State.projectedValue.getter();
      uint64_t v62 = v61 + v38[22];
      char v63 = *(unsigned char *)v62;
      uint64_t v64 = *(void *)(v62 + 8);
      LOBYTE(v244) = v63;
      uint64_t v245 = v64;
      sub_1000063C0(&qword_1001FB5A8);
      State.projectedValue.getter();
      uint64_t v65 = v241;
      uint64_t v226 = v240;
      char v66 = v242;
      uint64_t v67 = type metadata accessor for CompositionModel(0);
      uint64_t v68 = sub_100027D14((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
      uint64_t v227 = v67;
      uint64_t v228 = v68;
      *((void *)v4 + 3) = Environment.init<A>(_:)();
      v4[32] = v69 & 1;
      type metadata accessor for CommonUIManager();
      sub_100027D14((unint64_t *)&qword_1001FAE20, (void (*)(uint64_t))type metadata accessor for CommonUIManager);
      *((void *)v4 + 5) = Environment.init<A>(_:)();
      v4[48] = v70 & 1;
      uint64_t v71 = (uint64_t)v230;
      uint64_t v72 = &v4[*((int *)v230 + 9)];
      char *v72 = FocusState.init<>()() & 1;
      *((void *)v72 + 1) = v73;
      v72[16] = v74 & 1;
      *(void *)uint64_t v4 = v57;
      *((void *)v4 + 1) = v59;
      v4[16] = v60;
      uint64_t v75 = &v4[*(int *)(v71 + 32)];
      *(void *)uint64_t v75 = v226;
      *((void *)v75 + 1) = v65;
      v75[16] = v66;
      sub_1000063C0((uint64_t *)&unk_1001FB428);
      Bindable.wrappedValue.getter();
      uint64_t v76 = type metadata accessor for WritingToolsModel();
      uint64_t v77 = sub_100027D14(&qword_1001FB590, (void (*)(uint64_t))type metadata accessor for CompositionView);
      uint64_t v78 = sub_100027D14((unint64_t *)&unk_1001FB3F0, (void (*)(uint64_t))type metadata accessor for WritingToolsModel);
      uint64_t v79 = v206;
      View.environment<A>(_:)();
      swift_release();
      sub_100027D5C((uint64_t)v4, type metadata accessor for CompositionView);
      Bindable.wrappedValue.getter();
      uint64_t v80 = v240;
      swift_getKeyPath();
      uint64_t v240 = v80;
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      swift_retain();
      swift_release();
      uint64_t v240 = v71;
      uint64_t v241 = v76;
      uint64_t v242 = v77;
      uint64_t v243 = v78;
      uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
      uint64_t v82 = v205;
      uint64_t v83 = v216;
      uint64_t v84 = v227;
      uint64_t v85 = v228;
      View.environment<A>(_:)();
      swift_release();
      (*(void (**)(char *, uint64_t))(v208 + 8))(v79, v83);
      uint64_t v86 = v211;
      uint64_t v87 = v229;
      uint64_t v88 = v218;
      (*(void (**)(uint64_t, char *, uint64_t))(v211 + 32))(v229, v82, v218);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v86 + 16))(v215, v87, v88);
      swift_storeEnumTagMultiPayload();
      sub_1000222C0();
      uint64_t v240 = v83;
      uint64_t v241 = v84;
      uint64_t v242 = OpaqueTypeConformance2;
      uint64_t v243 = v85;
      swift_getOpaqueTypeConformance2();
      uint64_t v89 = v217;
      _ConditionalContent<>.init(storage:)();
      sub_100008DD4(v89, v233, &qword_1001FB568);
      swift_storeEnumTagMultiPayload();
      sub_100021BC0();
      sub_100022114();
      uint64_t v90 = (uint64_t)v234;
      _ConditionalContent<>.init(storage:)();
      sub_10002784C(v89, &qword_1001FB568);
      sub_100008DD4(v90, (uint64_t)v238, &qword_1001FB4B0);
      swift_storeEnumTagMultiPayload();
      sub_1000063C0(&qword_1001FB5A0);
      sub_100021B44();
      sub_100027F2C(&qword_1001FB598, &qword_1001FB5A0);
      _ConditionalContent<>.init(storage:)();
      sub_10002784C(v90, &qword_1001FB4B0);
      return (*(uint64_t (**)(uint64_t, uint64_t))(v86 + 8))(v229, v88);
    }
    if (!(v60 | v59 | v57))
    {
      uint64_t v147 = v227;
      sub_100026EB0(v52, v227, (uint64_t (*)(void))type metadata accessor for WritingToolsView);
      unint64_t v148 = (*(unsigned __int8 *)(v226 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v226 + 80);
      uint64_t v149 = swift_allocObject();
      sub_100027CAC(v147, v149 + v148, (uint64_t (*)(void))type metadata accessor for WritingToolsView);
      v150 = v238;
      *v238 = sub_1000252F0;
      v150[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v149;
      swift_storeEnumTagMultiPayload();
      sub_1000063C0(&qword_1001FB5A0);
      sub_100021B44();
      sub_100027F2C(&qword_1001FB598, &qword_1001FB5A0);
      return _ConditionalContent<>.init(storage:)();
    }
    BOOL v120 = v57 == 1;
    uint64_t v121 = v238;
    if (!v120 || v60 | v59)
    {
      uint64_t v151 = v52;
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      v153 = *(void **)(v151 + v38[11]);
      if (!v153)
      {
        __break(1u);
        JUMPOUT(0x100013530);
      }
      uint64_t v154 = Strong;
      v155 = *(void **)(v151 + v38[9]);
      id v156 = v153;
      id v157 = v155;
      sub_1000063C0(&qword_1001FB490);
      uint64_t v158 = v228;
      State.projectedValue.getter();
      v159 = v196;
      sub_10012254C(v154, v156, v157, v158, v196);
      uint64_t v160 = v195;
      sub_100026EB0((uint64_t)v159, v195, type metadata accessor for QuestionnaireView);
      sub_100027D5C((uint64_t)v159, type metadata accessor for QuestionnaireView);
      v144 = &qword_1001FB578;
      uint64_t v161 = v197;
      sub_100026FD0(v160, v197, &qword_1001FB578);
      sub_100008DD4(v161, v215, &qword_1001FB578);
      swift_storeEnumTagMultiPayload();
      sub_1000222C0();
      uint64_t v162 = type metadata accessor for CompositionModel(255);
      uint64_t v163 = type metadata accessor for WritingToolsModel();
      uint64_t v164 = sub_100027D14(&qword_1001FB590, (void (*)(uint64_t))type metadata accessor for CompositionView);
      uint64_t v165 = sub_100027D14((unint64_t *)&unk_1001FB3F0, (void (*)(uint64_t))type metadata accessor for WritingToolsModel);
      uint64_t v240 = (uint64_t)v230;
      uint64_t v241 = v163;
      uint64_t v242 = v164;
      uint64_t v243 = v165;
      uint64_t v166 = swift_getOpaqueTypeConformance2();
      uint64_t v167 = sub_100027D14((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
      uint64_t v240 = v216;
      uint64_t v241 = v162;
      uint64_t v242 = v166;
      uint64_t v243 = v167;
      swift_getOpaqueTypeConformance2();
      uint64_t v168 = v217;
      _ConditionalContent<>.init(storage:)();
      sub_100008DD4(v168, v233, &qword_1001FB568);
      swift_storeEnumTagMultiPayload();
      sub_100021BC0();
      sub_100022114();
      uint64_t v169 = (uint64_t)v234;
      _ConditionalContent<>.init(storage:)();
      sub_10002784C(v168, &qword_1001FB568);
      sub_100008DD4(v169, (uint64_t)v121, &qword_1001FB4B0);
      swift_storeEnumTagMultiPayload();
      sub_1000063C0(&qword_1001FB5A0);
      sub_100021B44();
      sub_100027F2C(&qword_1001FB598, &qword_1001FB5A0);
      _ConditionalContent<>.init(storage:)();
      sub_10002784C(v169, &qword_1001FB4B0);
      uint64_t v170 = v161;
      return sub_10002784C(v170, v144);
    }
    uint64_t v122 = (uint64_t *)(v52 + v38[20]);
    uint64_t v124 = *v122;
    uint64_t v123 = v122[1];
    uint64_t v240 = v124;
    uint64_t v241 = v123;
    uint64_t v125 = v52;
    uint64_t v189 = v54;
    uint64_t v229 = v55;
    v230 = (char *)&v189 - v53;
    sub_1000063C0(&qword_1001FB850);
    State.wrappedValue.getter();
    uint64_t v126 = v244;
    sub_1000063C0(&qword_1001FB490);
    uint64_t v127 = v228;
    State.projectedValue.getter();
    type metadata accessor for CommonUIManager();
    sub_100027D14((unint64_t *)&qword_1001FAE20, (void (*)(uint64_t))type metadata accessor for CommonUIManager);
    *(void *)uint64_t v49 = Environment.init<A>(_:)();
    v49[8] = v128 & 1;
    uint64_t v129 = type metadata accessor for FBKSEvaluation.Subject();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v129 - 8) + 56))(v44, 1, 1, v129);
    id v130 = objc_allocWithZone((Class)type metadata accessor for FBKEvaluationController());
    uint64_t v244 = FBKEvaluationController.init(subject:)();
    State.init(wrappedValue:)();
    uint64_t v131 = v241;
    *((void *)v49 + 4) = v240;
    *((void *)v49 + 5) = v131;
    sub_100008DD4(v127, (uint64_t)&v49[*(int *)(v47 + 28)], &qword_1001FB438);
    uint64_t v244 = v126;
    type metadata accessor for ProofreadingModel();
    State.init(wrappedValue:)();
    uint64_t v132 = v240;
    uint64_t v133 = v241;
    sub_10002784C(v127, &qword_1001FB438);
    *((void *)v49 + 2) = v132;
    *((void *)v49 + 3) = v133;
    uint64_t v134 = v227;
    sub_100026EB0(v125, v227, (uint64_t (*)(void))type metadata accessor for WritingToolsView);
    unint64_t v135 = (*(unsigned __int8 *)(v226 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v226 + 80);
    uint64_t v136 = swift_allocObject();
    sub_100027CAC(v134, v136 + v135, (uint64_t (*)(void))type metadata accessor for WritingToolsView);
    v137 = v219;
    static TaskPriority.userInitiated.getter();
    uint64_t v138 = (uint64_t)v199;
    v139 = &v199[*(int *)(v198 + 36)];
    uint64_t v140 = type metadata accessor for _TaskModifier();
    uint64_t v141 = v220;
    uint64_t v142 = v221;
    (*(void (**)(char *, char *, uint64_t))(v220 + 16))(&v139[*(int *)(v140 + 20)], v137, v221);
    *(void *)v139 = &unk_1001FB860;
    *((void *)v139 + 1) = v136;
    sub_100026EB0((uint64_t)v49, v138, (uint64_t (*)(void))type metadata accessor for ProofreadingView);
    (*(void (**)(char *, uint64_t))(v141 + 8))(v137, v142);
    sub_100027D5C((uint64_t)v49, (uint64_t (*)(void))type metadata accessor for ProofreadingView);
    uint64_t v143 = v229;
    sub_100008DD4(v138, v229, &qword_1001FB4E0);
    sub_10002784C(v138, &qword_1001FB4E0);
    v144 = &qword_1001FB4D0;
    uint64_t v119 = (uint64_t)v230;
    sub_100026FD0(v143, (uint64_t)v230, &qword_1001FB4D0);
    sub_100008DD4(v119, v223, &qword_1001FB4D0);
    swift_storeEnumTagMultiPayload();
    sub_100021C3C();
    sub_100021DE8();
    uint64_t v145 = (uint64_t)v224;
    _ConditionalContent<>.init(storage:)();
    sub_100008DD4(v145, v233, &qword_1001FB4C0);
    swift_storeEnumTagMultiPayload();
    sub_100021BC0();
    sub_100022114();
    uint64_t v146 = (uint64_t)v234;
    _ConditionalContent<>.init(storage:)();
    sub_10002784C(v145, &qword_1001FB4C0);
    sub_100008DD4(v146, (uint64_t)v121, &qword_1001FB4B0);
    swift_storeEnumTagMultiPayload();
    sub_1000063C0(&qword_1001FB5A0);
    sub_100021B44();
    sub_100027F2C(&qword_1001FB598, &qword_1001FB5A0);
  }
  else
  {
    uint64_t v229 = (uint64_t)&v189 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v92 = v204;
    v230 = v30;
    char v93 = *(unsigned char *)(v52 + v38[13]);
    uint64_t v94 = v212;
    uint64_t v189 = v54;
    if (v93)
    {
      unint64_t v95 = *(void *)(v52 + v38[14]);
      switch((char)v57)
      {
        case 1:
        case 6:
        case 7:
          goto LABEL_19;
        case 8:
          uint64_t v171 = (v95 >> 2) & 1;
          goto LABEL_18;
        case 9:
          uint64_t v171 = (v95 >> 3) & 1;
LABEL_18:
          if ((*(unsigned char *)(v52 + v38[12]) & v171 & 1) == 0) {
            goto LABEL_19;
          }
          goto LABEL_7;
        default:
          if (!*(unsigned char *)(v52 + v38[12])) {
            goto LABEL_19;
          }
LABEL_7:
          uint64_t v96 = v52;
          sub_1000063C0((uint64_t *)&unk_1001FB428);
          Bindable.wrappedValue.getter();
          uint64_t v97 = v240;
          swift_getKeyPath();
          uint64_t v240 = v97;
          sub_100027D14((unint64_t *)&unk_1001FB3F0, (void (*)(uint64_t))type metadata accessor for WritingToolsModel);
          ObservationRegistrar.access<A, B>(_:keyPath:)();
          swift_release();
          uint64_t v218 = *(void *)(v97 + 24);
          swift_retain();
          swift_release();
          uint64_t v98 = v96;
          sub_1000063C0(&qword_1001FB490);
          State.projectedValue.getter();
          uint64_t v99 = v96 + v38[22];
          char v100 = *(unsigned char *)v99;
          uint64_t v101 = *(void *)(v99 + 8);
          LOBYTE(v244) = v100;
          uint64_t v245 = v101;
          sub_1000063C0(&qword_1001FB5A8);
          State.projectedValue.getter();
          uint64_t v217 = v240;
          uint64_t v216 = v241;
          LODWORD(v215) = v242;
          uint64_t v102 = v96;
          uint64_t v103 = v227;
          sub_100026EB0(v102, v227, (uint64_t (*)(void))type metadata accessor for WritingToolsView);
          unint64_t v104 = (*(unsigned __int8 *)(v226 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v226 + 80);
          uint64_t v105 = swift_allocObject();
          sub_100027CAC(v103, v105 + v104, (uint64_t (*)(void))type metadata accessor for WritingToolsView);
          uint64_t v106 = v229;
          sub_100026EB0(v98, v229, (uint64_t (*)(void))type metadata accessor for WritingToolsView);
          uint64_t v107 = swift_allocObject();
          sub_100027CAC(v106, v107 + v104, (uint64_t (*)(void))type metadata accessor for WritingToolsView);
          uint64_t v188 = v107;
          uint64_t v108 = v238;
          uint64_t v109 = v193;
          sub_1001080E0(v218, v228, v217, v216, v215, (uint64_t)sub_100025444, v105, (uint64_t)sub_100027F84, v193, v188);
          sub_100026EB0(v98, v103, (uint64_t (*)(void))type metadata accessor for WritingToolsView);
          uint64_t v110 = swift_allocObject();
          sub_100027CAC(v103, v110 + v104, (uint64_t (*)(void))type metadata accessor for WritingToolsView);
          uint64_t v111 = v219;
          static TaskPriority.userInitiated.getter();
          uint64_t v112 = (uint64_t)v192;
          v113 = &v192[*(int *)(v190 + 36)];
          uint64_t v114 = type metadata accessor for _TaskModifier();
          uint64_t v115 = v220;
          uint64_t v116 = v221;
          (*(void (**)(char *, char *, uint64_t))(v220 + 16))(&v113[*(int *)(v114 + 20)], v111, v221);
          *(void *)v113 = &unk_1001FB848;
          *((void *)v113 + 1) = v110;
          sub_100026EB0(v109, v112, (uint64_t (*)(void))type metadata accessor for RewritingView);
          (*(void (**)(char *, uint64_t))(v115 + 8))(v111, v116);
          sub_100027D5C(v109, (uint64_t (*)(void))type metadata accessor for RewritingView);
          uint64_t v117 = v191;
          sub_100008DD4(v112, v191, &qword_1001FB528);
          sub_10002784C(v112, &qword_1001FB528);
          uint64_t v118 = v194;
          sub_100026FD0(v117, v194, &qword_1001FB518);
          sub_100008DD4(v118, v212, &qword_1001FB518);
          swift_storeEnumTagMultiPayload();
          sub_100021E64();
          sub_100021FBC();
          uint64_t v119 = (uint64_t)v230;
          _ConditionalContent<>.init(storage:)();
          sub_10002784C(v118, &qword_1001FB518);
          break;
      }
    }
    else
    {
LABEL_19:
      uint64_t v172 = v52;
      sub_1000063C0((uint64_t *)&unk_1001FB428);
      Bindable.wrappedValue.getter();
      uint64_t v173 = v240;
      swift_getKeyPath();
      uint64_t v240 = v173;
      sub_100027D14((unint64_t *)&unk_1001FB3F0, (void (*)(uint64_t))type metadata accessor for WritingToolsModel);
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      uint64_t v174 = *(void *)(v173 + 24);
      swift_retain();
      swift_release();
      sub_1000063C0(&qword_1001FB490);
      uint64_t v175 = v228;
      State.projectedValue.getter();
      sub_1000B06E8(v174, v175, v92);
      uint64_t v176 = v227;
      sub_100026EB0(v172, v227, (uint64_t (*)(void))type metadata accessor for WritingToolsView);
      unint64_t v177 = (*(unsigned __int8 *)(v226 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v226 + 80);
      uint64_t v178 = swift_allocObject();
      sub_100027CAC(v176, v178 + v177, (uint64_t (*)(void))type metadata accessor for WritingToolsView);
      v179 = v219;
      static TaskPriority.userInitiated.getter();
      uint64_t v180 = (uint64_t)v202;
      v181 = &v202[*(int *)(v200 + 36)];
      uint64_t v182 = type metadata accessor for _TaskModifier();
      uint64_t v183 = v220;
      uint64_t v184 = v221;
      (*(void (**)(char *, char *, uint64_t))(v220 + 16))(&v181[*(int *)(v182 + 20)], v179, v221);
      *(void *)v181 = &unk_1001FB838;
      *((void *)v181 + 1) = v178;
      sub_100026EB0((uint64_t)v92, v180, type metadata accessor for ModelResponseView);
      (*(void (**)(char *, uint64_t))(v183 + 8))(v179, v184);
      sub_100027D5C((uint64_t)v92, type metadata accessor for ModelResponseView);
      uint64_t v185 = v201;
      sub_100008DD4(v180, v201, &qword_1001FB550);
      sub_10002784C(v180, &qword_1001FB550);
      uint64_t v186 = v203;
      sub_100026FD0(v185, v203, &qword_1001FB540);
      sub_100008DD4(v186, v94, &qword_1001FB540);
      swift_storeEnumTagMultiPayload();
      sub_100021E64();
      sub_100021FBC();
      uint64_t v119 = (uint64_t)v230;
      _ConditionalContent<>.init(storage:)();
      sub_10002784C(v186, &qword_1001FB540);
      uint64_t v108 = v238;
    }
    v144 = &qword_1001FB508;
    sub_100008DD4(v119, v223, &qword_1001FB508);
    swift_storeEnumTagMultiPayload();
    sub_100021C3C();
    sub_100021DE8();
    uint64_t v187 = (uint64_t)v224;
    _ConditionalContent<>.init(storage:)();
    sub_100008DD4(v187, v233, &qword_1001FB4C0);
    swift_storeEnumTagMultiPayload();
    sub_100021BC0();
    sub_100022114();
    uint64_t v146 = (uint64_t)v234;
    _ConditionalContent<>.init(storage:)();
    sub_10002784C(v187, &qword_1001FB4C0);
    sub_100008DD4(v146, (uint64_t)v108, &qword_1001FB4B0);
    swift_storeEnumTagMultiPayload();
    sub_1000063C0(&qword_1001FB5A0);
    sub_100021B44();
    sub_100027F2C(&qword_1001FB598, &qword_1001FB5A0);
  }
  _ConditionalContent<>.init(storage:)();
  sub_10002784C(v146, &qword_1001FB4B0);
  uint64_t v170 = v119;
  return sub_10002784C(v170, v144);
}

uint64_t sub_100013558(uint64_t a1)
{
  v1[5] = a1;
  type metadata accessor for MainActor();
  v1[6] = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[7] = v3;
  v1[8] = v2;
  return _swift_task_switch(sub_1000135F0, v3, v2);
}

uint64_t sub_1000135F0()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = (uint64_t *)(v1 + *(int *)(type metadata accessor for WritingToolsView() + 80));
  uint64_t v4 = *v2;
  uint64_t v3 = v2[1];
  v0[2] = v4;
  v0[3] = v3;
  sub_1000063C0(&qword_1001FB850);
  State.wrappedValue.getter();
  v0[9] = v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  v0[10] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_1000136C0;
  return sub_100165C94();
}

uint64_t sub_1000136C0()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 64);
  uint64_t v3 = *(void *)(v1 + 56);
  return _swift_task_switch(sub_100027FF4, v3, v2);
}

uint64_t sub_100013804(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for WritingToolsView();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v5);
  uint64_t v8 = sub_1000063C0(&qword_1001FF820);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = &v18[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1000063C0((uint64_t *)&unk_1001FB428);
  Bindable.wrappedValue.getter();
  uint64_t v11 = v24;
  swift_getKeyPath();
  uint64_t v24 = v11;
  sub_100027D14((unint64_t *)&unk_1001FB3F0, (void (*)(uint64_t))type metadata accessor for WritingToolsModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v12 = *(void *)(v11 + 24);
  swift_retain();
  swift_release();
  swift_getKeyPath();
  uint64_t v19 = v12;
  uint64_t v20 = 5;
  uint64_t v21 = a1;
  uint64_t v22 = a2;
  char v23 = 0;
  uint64_t v24 = v12;
  sub_100027D14((unint64_t *)&qword_1001FD2A0, (void (*)(uint64_t))type metadata accessor for ToolModel);
  swift_bridgeObjectRetain();
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v13 = type metadata accessor for TaskPriority();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v10, 1, 1, v13);
  sub_100026EB0(v2, (uint64_t)&v18[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)], (uint64_t (*)(void))type metadata accessor for WritingToolsView);
  type metadata accessor for MainActor();
  uint64_t v14 = static MainActor.shared.getter();
  unint64_t v15 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v14;
  *(void *)(v16 + 24) = &protocol witness table for MainActor;
  sub_100027CAC((uint64_t)&v18[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)], v16 + v15, (uint64_t (*)(void))type metadata accessor for WritingToolsView);
  sub_1001228D0((uint64_t)v10, (uint64_t)&unk_1001FB888, v16);
  return swift_release();
}

void *sub_100013B58(uint64_t a1, uint64_t a2)
{
  uint64_t v31 = a1;
  uint64_t v32 = a2;
  uint64_t v3 = type metadata accessor for WritingToolsView();
  uint64_t v27 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v28 = v4;
  uint64_t v30 = (uint64_t)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000063C0(&qword_1001FF820);
  __chkstk_darwin(v5 - 8);
  uint64_t v29 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for NavigationPath();
  __chkstk_darwin(v7 - 8);
  uint64_t v33 = v2;
  sub_1000063C0((uint64_t *)&unk_1001FB428);
  Bindable.wrappedValue.getter();
  uint64_t v8 = v34;
  swift_getKeyPath();
  uint64_t v34 = v8;
  sub_100027D14((unint64_t *)&unk_1001FB3F0, (void (*)(uint64_t))type metadata accessor for WritingToolsModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v9 = *(void *)(v8 + 32);
  swift_retain();
  swift_release();
  swift_getKeyPath();
  uint64_t v34 = v9;
  sub_100027D14((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  int v10 = *(unsigned __int8 *)(v9 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__isFeatureEnabled);
  swift_release();
  if (v10 == 1)
  {
    Bindable.wrappedValue.getter();
    uint64_t v11 = v34;
    swift_getKeyPath();
    uint64_t v34 = v11;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v12 = *(void *)(v11 + 32);
    swift_retain();
    swift_release();
    swift_getKeyPath();
    uint64_t v34 = v12;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    swift_retain();
    swift_release();
    sub_100136EC8();
    swift_release();
    uint64_t v14 = v31;
    uint64_t v13 = v32;
    uint64_t v34 = v31;
    uint64_t v35 = v32;
    uint64_t v36 = 0;
    char v37 = 1;
    uint64_t v15 = v33;
    swift_bridgeObjectRetain();
    sub_1000063C0(&qword_1001FB490);
    State.wrappedValue.getter();
    sub_100025244();
    NavigationPath.append<A>(_:)();
    swift_bridgeObjectRelease();
    State.wrappedValue.setter();
    uint64_t v16 = type metadata accessor for TaskPriority();
    uint64_t v17 = (uint64_t)v29;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v29, 1, 1, v16);
    uint64_t v18 = v30;
    sub_100026EB0(v15, v30, (uint64_t (*)(void))type metadata accessor for WritingToolsView);
    type metadata accessor for MainActor();
    swift_bridgeObjectRetain();
    uint64_t v19 = static MainActor.shared.getter();
    unint64_t v20 = (*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
    unint64_t v21 = (v28 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v22 = swift_allocObject();
    *(void *)(v22 + 16) = v19;
    *(void *)(v22 + 24) = &protocol witness table for MainActor;
    sub_100027CAC(v18, v22 + v20, (uint64_t (*)(void))type metadata accessor for WritingToolsView);
    char v23 = (void *)(v22 + v21);
    *char v23 = v14;
    v23[1] = v13;
    sub_1001228D0(v17, (uint64_t)&unk_1001FB870, v22);
    return (void *)swift_release();
  }
  else
  {
    uint64_t result = (void *)swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      uint64_t v25 = result;
      if ([result respondsToSelector:"enrollmentBegan"]) {
        [v25 enrollmentBegan];
      }
      return (void *)swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_10001407C(uint64_t a1)
{
  v1[4] = a1;
  type metadata accessor for MainActor();
  v1[5] = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[6] = v3;
  v1[7] = v2;
  return _swift_task_switch(sub_100014114, v3, v2);
}

uint64_t sub_100014114()
{
  type metadata accessor for WritingToolsView();
  sub_1000063C0((uint64_t *)&unk_1001FB428);
  Bindable.wrappedValue.getter();
  uint64_t v1 = v0[2];
  swift_getKeyPath();
  v0[3] = v1;
  sub_100027D14((unint64_t *)&unk_1001FB3F0, (void (*)(uint64_t))type metadata accessor for WritingToolsModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  v0[8] = *(void *)(v1 + 24);
  swift_retain();
  swift_release();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[9] = v2;
  void *v2 = v0;
  v2[1] = sub_100014268;
  return sub_10009E5D4(1, 0);
}

uint64_t sub_100014268()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 56);
  uint64_t v3 = *(void *)(v1 + 48);
  return _swift_task_switch(sub_100027FF0, v3, v2);
}

uint64_t sub_1000143AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v62 = a3;
  uint64_t v5 = type metadata accessor for WritingToolsView();
  uint64_t v58 = *(void *)(v5 - 8);
  __chkstk_darwin(v5 - 8);
  uint64_t v59 = v6;
  uint64_t v61 = (uint64_t)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ContainerBackgroundPlacement();
  uint64_t v56 = *(void *)(v7 - 8);
  uint64_t v57 = v7;
  __chkstk_darwin(v7);
  uint64_t v55 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = type metadata accessor for ScrollBounceBehavior();
  uint64_t v9 = *(void *)(v46 - 8);
  __chkstk_darwin(v46);
  uint64_t v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000063C0(&qword_1001FB890);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_1000063C0(&qword_1001FB898);
  uint64_t v47 = *(void *)(v48 - 8);
  __chkstk_darwin(v48);
  uint64_t v17 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = sub_1000063C0(&qword_1001FB8A0);
  __chkstk_darwin(v50);
  uint64_t v19 = (char *)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_1000063C0(&qword_1001FB8A8);
  uint64_t v53 = *(void *)(v54 - 8);
  __chkstk_darwin(v54);
  unint64_t v21 = (char *)&v45 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_1000063C0(&qword_1001FB8B0);
  uint64_t v51 = *(void *)(v52 - 8);
  __chkstk_darwin(v52);
  uint64_t v49 = (char *)&v45 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = a2;
  uint64_t v63 = a2;
  uint64_t v64 = a1;
  static Axis.Set.vertical.getter();
  sub_1000063C0(&qword_1001FB8B8);
  sub_100025BDC();
  ScrollView.init(_:showsIndicators:content:)();
  static ScrollBounceBehavior.basedOnSize.getter();
  LOBYTE(a2) = static Axis.Set.vertical.getter();
  Axis.Set.init(rawValue:)();
  Axis.Set.init(rawValue:)();
  if (Axis.Set.init(rawValue:)() != a2) {
    Axis.Set.init(rawValue:)();
  }
  sub_100027F2C(&qword_1001FB920, &qword_1001FB890);
  View.scrollBounceBehavior(_:axes:)();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v46);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  id v23 = [self mainScreen];
  [v23 bounds];
  CGFloat v25 = v24;
  CGFloat v27 = v26;
  CGFloat v29 = v28;
  CGFloat v31 = v30;

  v69.origin.x = v25;
  v69.origin.y = v27;
  v69.size.width = v29;
  v69.size.height = v31;
  double v32 = CGRectGetHeight(v69) + -20.0;
  uint64_t v33 = static Alignment.center.getter();
  __n128 v35 = sub_10001A280(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, (uint64_t)v19, 0.0, 1, v32, 0, v33, v34, &qword_1001FB898, &qword_1001FB8A0);
  (*(void (**)(char *, uint64_t, __n128))(v47 + 8))(v17, v48, v35);
  uint64_t v65 = static Color.clear.getter();
  uint64_t v36 = v55;
  static ContainerBackgroundPlacement.navigation.getter();
  unint64_t v37 = sub_100025F08();
  uint64_t v38 = v50;
  View.containerBackground<A>(_:for:)();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v36, v57);
  swift_release();
  sub_10002784C((uint64_t)v19, &qword_1001FB8A0);
  uint64_t v39 = v61;
  sub_100026EB0(v60, v61, (uint64_t (*)(void))type metadata accessor for WritingToolsView);
  unint64_t v40 = (*(unsigned __int8 *)(v58 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
  uint64_t v41 = swift_allocObject();
  sub_100027CAC(v39, v41 + v40, (uint64_t (*)(void))type metadata accessor for WritingToolsView);
  sub_1000063C0(&qword_1001FB930);
  uint64_t v65 = v38;
  char v66 = &type metadata for Color;
  unint64_t v67 = v37;
  uint64_t v68 = &protocol witness table for Color;
  swift_getOpaqueTypeConformance2();
  sub_100025244();
  sub_100026068();
  uint64_t v42 = v49;
  uint64_t v43 = v54;
  View.navigationDestination<A, B>(for:destination:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v53 + 8))(v21, v43);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v51 + 32))(v62, v42, v52);
}

uint64_t sub_100014BAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v75 = a3;
  uint64_t v5 = sub_1000063C0(&qword_1001FB438);
  __chkstk_darwin(v5 - 8);
  *(void *)&long long v74 = (char *)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = type metadata accessor for ScrollDismissesKeyboardMode();
  uint64_t v62 = *(void *)(v63 - 8);
  __chkstk_darwin(v63);
  uint64_t v8 = (char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000063C0(&qword_1001FB900);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000063C0(&qword_1001FB8F8);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_1000063C0(&qword_1001FBA38);
  uint64_t v65 = *(void *)(v68 - 8);
  __chkstk_darwin(v68);
  uint64_t v17 = (char *)&v62 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_1000063C0(&qword_1001FB8F0);
  __chkstk_darwin(v64);
  CGRect v69 = (char *)&v62 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_1000063C0(&qword_1001FB8E0);
  __chkstk_darwin(v66);
  unint64_t v67 = (char *)&v62 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = sub_1000063C0(&qword_1001FB8D0);
  __chkstk_darwin(v70);
  uint64_t v73 = (uint64_t)&v62 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = sub_1000063C0(&qword_1001FB8B8);
  __chkstk_darwin(v71);
  uint64_t v72 = (uint64_t)&v62 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1001FAD20 != -1) {
    swift_once();
  }
  uint64_t v22 = *((void *)&xmmword_1002129C0 + 1);
  *(void *)uint64_t v11 = static HorizontalAlignment.center.getter();
  *((void *)v11 + 1) = v22;
  v11[16] = 0;
  uint64_t v23 = sub_1000063C0((uint64_t *)&unk_1001FBA40);
  sub_100015394(a1, a2, (uint64_t)&v11[*(int *)(v23 + 44)]);
  uint64_t v24 = a1;
  uint64_t v25 = sub_100027F2C(&qword_1001FB908, &qword_1001FB900);
  View.scrollContentBackground(_:)();
  sub_10002784C((uint64_t)v11, &qword_1001FB900);
  static ScrollDismissesKeyboardMode.interactively.getter();
  *(void *)&long long v79 = v9;
  *((void *)&v79 + 1) = v25;
  swift_getOpaqueTypeConformance2();
  View.scrollDismissesKeyboard(_:)();
  (*(void (**)(char *, uint64_t))(v62 + 8))(v8, v63);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  double v26 = (int *)type metadata accessor for WritingToolsView();
  uint64_t v27 = v26[24];
  uint64_t v63 = v24;
  double v28 = (char *)(v24 + v27);
  char v29 = *v28;
  uint64_t v30 = *((void *)v28 + 1);
  LOBYTE(v28) = v28[16];
  LOBYTE(v79) = v29;
  *((void *)&v79 + 1) = v30;
  LOBYTE(v80) = (_BYTE)v28;
  sub_1000063C0(&qword_1001FB608);
  FocusState.wrappedValue.getter();
  CGFloat v31 = v17;
  if (v76 == 1
    && (id v32 = [self currentTraitCollection],
        id v33 = [v32 userInterfaceIdiom],
        v32,
        !v33))
  {
    uint64_t v34 = 0;
    uint64_t v35 = 0;
    uint64_t v36 = 0;
  }
  else
  {
    if (qword_1001FAD18 != -1) {
      swift_once();
    }
    uint64_t v34 = *((void *)&xmmword_1002129A0 + 1);
    id v33 = (id)xmmword_1002129A0;
    uint64_t v35 = qword_1002129B0;
    uint64_t v36 = unk_1002129B8;
  }
  char v37 = static Edge.Set.all.getter();
  uint64_t v38 = v65;
  uint64_t v40 = v68;
  uint64_t v39 = (uint64_t)v69;
  (*(void (**)(char *, char *, uint64_t))(v65 + 16))(v69, v31, v68);
  uint64_t v41 = v39 + *(int *)(v64 + 36);
  *(unsigned char *)uint64_t v41 = v37;
  *(void *)(v41 + 8) = v33;
  *(void *)(v41 + 16) = v34;
  *(void *)(v41 + 24) = v35;
  *(void *)(v41 + 32) = v36;
  *(unsigned char *)(v41 + 40) = 0;
  (*(void (**)(char *, uint64_t))(v38 + 8))(v31, v40);
  uint64_t v42 = v63;
  swift_unknownObjectWeakLoadStrong();
  sub_1000063C0(&qword_1001FB490);
  uint64_t v43 = v74;
  State.projectedValue.getter();
  LOBYTE(v76) = 0;
  static Binding.constant(_:)();
  uint64_t v44 = (uint64_t)v67;
  sub_1000EF1D8(0, 1, v43, v79, *((uint64_t *)&v79 + 1), v80, (uint64_t)&v67[*(int *)(v66 + 36)]);
  sub_100026FD0(v39, v44, &qword_1001FB8F0);
  uint64_t v45 = v42 + v26[21];
  uint64_t v46 = *(void *)v45;
  char v47 = *(unsigned char *)(v45 + 8);
  uint64_t v48 = *(void *)(v45 + 16);
  uint64_t v76 = v46;
  char v77 = v47;
  uint64_t v78 = v48;
  sub_1000063C0(&qword_1001FDE70);
  State.projectedValue.getter();
  long long v74 = v79;
  uint64_t v49 = v80;
  LOBYTE(v43) = v81;
  uint64_t v50 = v73;
  sub_100008DD4(v44, v73, &qword_1001FB8E0);
  uint64_t v51 = v50 + *(int *)(v70 + 36);
  *(_OWORD *)uint64_t v51 = v74;
  *(void *)(v51 + 16) = v49;
  *(unsigned char *)(v51 + 24) = v43;
  sub_10002784C(v44, &qword_1001FB8E0);
  uint64_t v52 = v42 + v26[22];
  char v53 = *(unsigned char *)v52;
  uint64_t v54 = *(void *)(v52 + 8);
  LOBYTE(v79) = v53;
  *((void *)&v79 + 1) = v54;
  sub_1000063C0(&qword_1001FB5A8);
  State.wrappedValue.getter();
  char v55 = v76;
  uint64_t v56 = static Alignment.center.getter();
  uint64_t v58 = v57;
  uint64_t v59 = v72;
  sub_100008DD4(v50, v72, &qword_1001FB8D0);
  uint64_t v60 = v59 + *(int *)(v71 + 36);
  *(unsigned char *)uint64_t v60 = 1;
  *(unsigned char *)(v60 + 1) = v55;
  *(void *)(v60 + 8) = v56;
  *(void *)(v60 + 16) = v58;
  sub_10002784C(v50, &qword_1001FB8D0);
  return sub_100026FD0(v59, v75, &qword_1001FB8B8);
}

id sub_100015394@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v300 = a2;
  uint64_t v301 = a3;
  uint64_t v267 = sub_1000063C0(&qword_1001FBA50);
  uint64_t v265 = *(void *)(v267 - 8);
  __chkstk_darwin(v267);
  v264 = (char *)&v263 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v263 = sub_1000063C0(&qword_1001FBA58);
  uint64_t v5 = __chkstk_darwin(v263);
  v269 = (char *)&v263 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v268 = (uint64_t)&v263 - v7;
  uint64_t v8 = type metadata accessor for Divider();
  uint64_t v310 = *(void *)(v8 - 8);
  uint64_t v311 = v8;
  uint64_t v9 = __chkstk_darwin(v8);
  v266 = (char *)&v263 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v270 = (char *)&v263 - v11;
  uint64_t v12 = sub_1000063C0(&qword_1001FBA60);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  v307 = (char *)&v263 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v312 = (uint64_t)&v263 - v15;
  uint64_t v298 = type metadata accessor for TransformSection(0);
  __chkstk_darwin(v298);
  v299 = (uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&v263
                                                                     - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = sub_1000063C0(&qword_1001FBA68);
  uint64_t v302 = *(void *)(v17 - 8);
  uint64_t v303 = v17;
  uint64_t v18 = __chkstk_darwin(v17);
  v313 = (char *)&v263 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v325 = (char *)&v263 - v20;
  uint64_t v21 = type metadata accessor for DynamicTypeSize();
  uint64_t v296 = *(void *)(v21 - 8);
  *(void *)&long long v297 = v21;
  __chkstk_darwin(v21);
  uint64_t v295 = (uint64_t)&v263 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_1000063C0(&qword_1001FBA70);
  uint64_t v24 = __chkstk_darwin(v23 - 8);
  double v26 = (char *)&v263 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  double v28 = (char *)&v263 - v27;
  uint64_t v29 = sub_1000063C0(&qword_1001FBA78);
  uint64_t v30 = __chkstk_darwin(v29 - 8);
  uint64_t v324 = (uint64_t)&v263 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v322 = (uint64_t)&v263 - v33;
  __chkstk_darwin(v32);
  v288 = (char *)&v263 - v34;
  uint64_t v280 = type metadata accessor for _TaskModifier();
  __chkstk_darwin(v280);
  v284 = (char *)&v263 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v285 = type metadata accessor for TaskPriority();
  uint64_t v283 = *(void *)(v285 - 8);
  __chkstk_darwin(v285);
  v282 = (char *)&v263 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = type metadata accessor for WritingToolsView();
  uint64_t v306 = *(void *)(v37 - 8);
  uint64_t v38 = *(void *)(v306 + 64);
  __chkstk_darwin(v37);
  uint64_t v323 = (uint64_t)&v263 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v279 = sub_1000063C0(&qword_1001FBA80);
  uint64_t v39 = __chkstk_darwin(v279);
  v287 = (char *)&v263 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = __chkstk_darwin(v39);
  v281 = (char *)&v263 - v42;
  __chkstk_darwin(v41);
  uint64_t v286 = (uint64_t)&v263 - v43;
  uint64_t v44 = sub_1000063C0(&qword_1001FBA88);
  uint64_t v45 = __chkstk_darwin(v44 - 8);
  uint64_t v308 = (uint64_t)&v263 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v45);
  uint64_t v319 = (uint64_t)&v263 - v47;
  uint64_t v48 = type metadata accessor for ParagraphTypesetting();
  uint64_t v272 = *(void *)(v48 - 8);
  uint64_t v273 = v48;
  __chkstk_darwin(v48);
  v271 = (char *)&v263 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = sub_1000063C0(&qword_1001FBA90);
  __chkstk_darwin(v50 - 8);
  uint64_t v52 = (char *)&v263 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_1000063C0(&qword_1001FBA98);
  uint64_t v277 = *(void *)(v53 - 8);
  uint64_t v278 = v53;
  __chkstk_darwin(v53);
  v276 = (char *)&v263 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_1000063C0((uint64_t *)&unk_1001FBAA0);
  uint64_t v289 = *(void *)(v55 - 8);
  uint64_t v290 = v55;
  uint64_t v56 = __chkstk_darwin(v55);
  v275 = (char *)&v263 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v56);
  uint64_t v274 = (uint64_t)&v263 - v58;
  uint64_t v59 = sub_1000063C0(&qword_1001FF810);
  __chkstk_darwin(v59 - 8);
  uint64_t v61 = (char *)&v263 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = (uint64_t (*)(void))type metadata accessor for LocalizedStringResource();
  v304 = (uint64_t (*)())*((void *)v62 - 1);
  v305 = (uint64_t (*)())v62;
  uint64_t v63 = __chkstk_darwin(v62);
  uint64_t v65 = (char *)&v263 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v63);
  v291 = (char *)&v263 - v66;
  uint64_t v67 = sub_1000063C0(&qword_1001FBAB0);
  uint64_t v68 = __chkstk_darwin(v67 - 8);
  uint64_t Strong = (uint64_t)&v263 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v68);
  *(void *)&long long v293 = (char *)&v263 - v70;
  uint64_t v71 = sub_1000063C0(&qword_1001FBAB8);
  uint64_t v72 = __chkstk_darwin(v71 - 8);
  uint64_t v292 = (uint64_t)&v263 - ((v73 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = __chkstk_darwin(v72);
  uint64_t v76 = (char *)&v263 - v75;
  __chkstk_darwin(v74);
  uint64_t v314 = (uint64_t)&v263 - v77;
  uint64_t v78 = sub_1000063C0(&qword_1001FBAC0);
  uint64_t v79 = __chkstk_darwin(v78 - 8);
  uint64_t v317 = (uint64_t)&v263 - ((v80 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v79);
  uint64_t v318 = (uint64_t)&v263 - v81;
  v326 = (int *)v37;
  uint64_t v82 = *(int *)(v37 + 96);
  uint64_t v327 = a1;
  uint64_t v83 = a1 + v82;
  LOBYTE(v82) = *(unsigned char *)(a1 + v82);
  uint64_t v84 = *(void *)(v83 + 8);
  uint64_t v321 = v83;
  LOBYTE(v83) = *(unsigned char *)(v83 + 16);
  LOBYTE(v339) = v82;
  *((void *)&v339 + 1) = v84;
  LOBYTE(v340) = v83;
  uint64_t v320 = sub_1000063C0(&qword_1001FB608);
  FocusState.wrappedValue.getter();
  v315 = v28;
  v316 = v26;
  uint64_t v309 = v38;
  if (v332 == 1
    && (id v85 = [self currentTraitCollection],
        id v86 = [v85 userInterfaceIdiom],
        v85,
        !v86))
  {
    uint64_t v261 = sub_1000063C0(&qword_1001FBAD8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v261 - 8) + 56))(v318, 1, 1, v261);
  }
  else
  {
    *(void *)uint64_t v76 = static VerticalAlignment.center.getter();
    *((void *)v76 + 1) = 0;
    v76[16] = 1;
    uint64_t v87 = sub_1000063C0(&qword_1001FBAC8);
    sub_10001778C(v327, (uint64_t)&v76[*(int *)(v87 + 44)]);
    sub_100026FD0((uint64_t)v76, v314, &qword_1001FBAB8);
    sub_1000063C0((uint64_t *)&unk_1001FB428);
    Bindable.wrappedValue.getter();
    sub_100095FC0((uint64_t)v61);
    swift_release();
    uint64_t v89 = v304;
    uint64_t v88 = v305;
    if ((*((unsigned int (**)(char *, uint64_t, uint64_t (*)()))v304 + 6))(v61, 1, v305) == 1)
    {
      sub_10002784C((uint64_t)v61, &qword_1001FF810);
      uint64_t v90 = 1;
      uint64_t v92 = v289;
      uint64_t v91 = v290;
      uint64_t v93 = v293;
    }
    else
    {
      uint64_t v94 = v291;
      (*((void (**)(char *, char *, uint64_t (*)()))v89 + 4))(v291, v61, v88);
      (*((void (**)(char *, char *, uint64_t (*)()))v89 + 2))(v65, v94, v88);
      uint64_t v95 = Text.init(_:)();
      uint64_t v97 = v96;
      char v99 = v98 & 1;
      uint64_t v100 = type metadata accessor for Font.Design();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v100 - 8) + 56))(v52, 1, 1, v100);
      static Font.system(size:weight:design:)();
      sub_10002784C((uint64_t)v52, &qword_1001FBA90);
      uint64_t v101 = Text.font(_:)();
      uint64_t v103 = v102;
      char v105 = v104;
      swift_release();
      sub_100026F18(v95, v97, v99);
      swift_bridgeObjectRelease();
      if (qword_1001FAD40 != -1) {
        swift_once();
      }
      char v106 = v105 & 1;
      uint64_t v107 = Text.foregroundColor(_:)();
      uint64_t v109 = v108;
      char v111 = v110;
      v113 = v112;
      sub_100026F18(v101, v103, v106);
      swift_bridgeObjectRelease();
      uint64_t KeyPath = swift_getKeyPath();
      *(void *)&long long v339 = v107;
      *((void *)&v339 + 1) = v109;
      LOBYTE(v340) = v111 & 1;
      v341 = v113;
      unint64_t v342 = KeyPath;
      char v343 = 1;
      uint64_t v115 = v271;
      static ParagraphTypesetting.balanced.getter();
      sub_1000063C0((uint64_t *)&unk_100201E50);
      sub_100026F30();
      uint64_t v116 = v276;
      View.paragraphTypesetting(_:isEnabled:)();
      (*(void (**)(char *, uint64_t))(v272 + 8))(v115, v273);
      sub_100026F18(v339, *((uint64_t *)&v339 + 1), v340);
      swift_bridgeObjectRelease();
      swift_release();
      LOBYTE(v107) = static Edge.Set.top.getter();
      char v117 = static Edge.Set.bottom.getter();
      char v118 = Edge.Set.init(rawValue:)();
      Edge.Set.init(rawValue:)();
      if (Edge.Set.init(rawValue:)() != v107) {
        char v118 = Edge.Set.init(rawValue:)();
      }
      Edge.Set.init(rawValue:)();
      char v119 = Edge.Set.init(rawValue:)();
      double v26 = v316;
      if (v119 != v117) {
        char v118 = Edge.Set.init(rawValue:)();
      }
      uint64_t v92 = v289;
      uint64_t v91 = v290;
      EdgeInsets.init(_all:)();
      uint64_t v121 = v120;
      uint64_t v123 = v122;
      uint64_t v125 = v124;
      uint64_t v127 = v126;
      uint64_t v129 = v277;
      uint64_t v128 = v278;
      uint64_t v130 = (uint64_t)v275;
      (*(void (**)(char *, char *, uint64_t))(v277 + 16))(v275, v116, v278);
      uint64_t v131 = v130 + *(int *)(v91 + 36);
      *(unsigned char *)uint64_t v131 = v118;
      *(void *)(v131 + 8) = v121;
      *(void *)(v131 + 16) = v123;
      *(void *)(v131 + 24) = v125;
      *(void *)(v131 + 32) = v127;
      *(unsigned char *)(v131 + 40) = 0;
      (*(void (**)(char *, uint64_t))(v129 + 8))(v116, v128);
      (*((void (**)(char *, uint64_t (*)()))v304 + 1))(v291, v305);
      uint64_t v132 = v274;
      sub_100026FD0(v130, v274, (uint64_t *)&unk_1001FBAA0);
      uint64_t v93 = v293;
      sub_100026FD0(v132, v293, (uint64_t *)&unk_1001FBAA0);
      uint64_t v90 = 0;
      double v28 = v315;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v92 + 56))(v93, v90, 1, v91);
    uint64_t v133 = v314;
    uint64_t v134 = v292;
    sub_100008DD4(v314, v292, &qword_1001FBAB8);
    uint64_t v135 = Strong;
    sub_100008DD4(v93, Strong, &qword_1001FBAB0);
    uint64_t v136 = v317;
    sub_100008DD4(v134, v317, &qword_1001FBAB8);
    uint64_t v137 = sub_1000063C0(&qword_1001FBAD0);
    sub_100008DD4(v135, v136 + *(int *)(v137 + 48), &qword_1001FBAB0);
    sub_10002784C(v93, &qword_1001FBAB0);
    sub_10002784C(v133, &qword_1001FBAB8);
    sub_10002784C(v135, &qword_1001FBAB0);
    sub_10002784C(v134, &qword_1001FBAB8);
    uint64_t v138 = sub_1000063C0(&qword_1001FBAD8);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v138 - 8) + 56))(v136, 0, 1, v138);
    sub_100026FD0(v136, v318, &qword_1001FBAC0);
  }
  v341 = &type metadata for WritingTools;
  unint64_t v342 = sub_1000268F4();
  LOBYTE(v339) = 3;
  char v139 = isFeatureEnabled(_:)();
  sub_100027DBC((uint64_t)&v339);
  if (v139)
  {
    uint64_t v141 = *(void *)(v321 + 8);
    char v142 = *(unsigned char *)(v321 + 16);
    LOBYTE(v332) = *(unsigned char *)v321;
    char v140 = v332;
    *((void *)&v332 + 1) = v141;
    LOBYTE(v333) = v142;
    FocusState.projectedValue.getter();
    v305 = (uint64_t (*)())*((void *)&v339 + 1);
    uint64_t v314 = v339;
    LODWORD(v304) = v340;
    LOBYTE(v339) = v140;
    *((void *)&v339 + 1) = v141;
    LOBYTE(v340) = v142;
    FocusState.wrappedValue.getter();
    uint64_t v143 = v309;
    if (v332 == 1)
    {
      id v144 = [self currentTraitCollection];
      id v145 = [v144 userInterfaceIdiom];

      LODWORD(Strong) = v145 == 0;
    }
    else
    {
      LODWORD(Strong) = 0;
    }
    *(void *)&long long v293 = type metadata accessor for WritingToolsView;
    uint64_t v148 = v327;
    uint64_t v149 = v323;
    sub_100026EB0(v327, v323, (uint64_t (*)(void))type metadata accessor for WritingToolsView);
    unint64_t v150 = (*(unsigned __int8 *)(v306 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v306 + 80);
    uint64_t v292 = v150 + v143;
    uint64_t v151 = swift_allocObject();
    sub_100027CAC(v149, v151 + v150, (uint64_t (*)(void))type metadata accessor for WritingToolsView);
    sub_1000063C0((uint64_t *)&unk_1001FB428);
    Bindable.wrappedValue.getter();
    uint64_t v152 = v339;
    swift_getKeyPath();
    *(void *)&long long v339 = v152;
    sub_100027D14((unint64_t *)&unk_1001FB3F0, (void (*)(uint64_t))type metadata accessor for WritingToolsModel);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v153 = *(void *)(v152 + 24);
    swift_retain();
    swift_release();
    swift_getKeyPath();
    *(void *)&long long v339 = v153;
    sub_100027D14((unint64_t *)&unk_100201540, (void (*)(uint64_t))type metadata accessor for RewritingModel);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v154 = *(void *)(v153 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__analyticsInstance);
    swift_retain();
    swift_release();
    sub_100026EB0(v148, v149, (uint64_t (*)(void))v293);
    uint64_t v155 = swift_allocObject();
    sub_100027CAC(v149, v155 + v150, (uint64_t (*)(void))type metadata accessor for WritingToolsView);
    id v156 = v282;
    static TaskPriority.userInitiated.getter();
    uint64_t v158 = v283;
    id v157 = v284;
    uint64_t v159 = v285;
    (*(void (**)(char *, char *, uint64_t))(v283 + 16))(&v284[*(int *)(v280 + 20)], v156, v285);
    *id v157 = &unk_1001FBB58;
    v157[1] = v155;
    uint64_t v160 = (uint64_t)v281;
    sub_100026EB0((uint64_t)v157, (uint64_t)&v281[*(int *)(v279 + 36)], (uint64_t (*)(void))&type metadata accessor for _TaskModifier);
    uint64_t v161 = v305;
    *(void *)uint64_t v160 = v314;
    *(void *)(v160 + 8) = v161;
    *(unsigned char *)(v160 + 16) = (_BYTE)v304;
    *(unsigned char *)(v160 + 17) = Strong;
    *(void *)(v160 + 24) = sub_100026D5C;
    *(void *)(v160 + 32) = v151;
    *(void *)(v160 + 40) = v154;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_100027D5C((uint64_t)v157, (uint64_t (*)(void))&type metadata accessor for _TaskModifier);
    (*(void (**)(char *, uint64_t))(v158 + 8))(v156, v159);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v162 = v286;
    sub_100026FD0(v160, v286, &qword_1001FBA80);
    uint64_t v163 = *(void *)(v321 + 8);
    char v164 = *(unsigned char *)(v321 + 16);
    LOBYTE(v339) = *(unsigned char *)v321;
    *((void *)&v339 + 1) = v163;
    LOBYTE(v340) = v164;
    FocusState.wrappedValue.getter();
    if (v332 == 1
      && (id v165 = [self currentTraitCollection],
          id v166 = [v165 userInterfaceIdiom],
          v165,
          !v166))
    {
      uint64_t v168 = 1;
      double v28 = v315;
      uint64_t v169 = (uint64_t)v316;
      uint64_t v167 = (uint64_t)v288;
    }
    else
    {
      uint64_t v167 = (uint64_t)v288;
      Divider.init()();
      uint64_t v168 = 0;
      double v28 = v315;
      uint64_t v169 = (uint64_t)v316;
    }
    uint64_t v170 = (uint64_t)v287;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v310 + 56))(v167, v168, 1, v311);
    sub_100008DD4(v162, v170, &qword_1001FBA80);
    uint64_t v171 = v322;
    sub_100008DD4(v167, v322, &qword_1001FBA78);
    uint64_t v172 = v308;
    sub_100008DD4(v170, v308, &qword_1001FBA80);
    uint64_t v173 = sub_1000063C0((uint64_t *)&unk_1001FBB60);
    sub_100008DD4(v171, v172 + *(int *)(v173 + 48), &qword_1001FBA78);
    sub_10002784C(v167, &qword_1001FBA78);
    sub_10002784C(v162, &qword_1001FBA80);
    sub_10002784C(v171, &qword_1001FBA78);
    sub_10002784C(v170, &qword_1001FBA80);
    uint64_t v174 = sub_1000063C0(&qword_1001FBAE8);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v174 - 8) + 56))(v172, 0, 1, v174);
    sub_100026FD0(v172, v319, &qword_1001FBA88);
    uint64_t v147 = v309;
    double v26 = (char *)v169;
  }
  else
  {
    uint64_t v146 = sub_1000063C0(&qword_1001FBAE8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v146 - 8) + 56))(v319, 1, 1, v146);
    uint64_t v147 = v309;
  }
  uint64_t v175 = *(void *)(v321 + 8);
  char v176 = *(unsigned char *)(v321 + 16);
  LOBYTE(v339) = *(unsigned char *)v321;
  *((void *)&v339 + 1) = v175;
  LOBYTE(v340) = v176;
  FocusState.wrappedValue.getter();
  if (v332 == 1)
  {
    id v177 = [self currentTraitCollection];
    id v178 = [v177 userInterfaceIdiom];

    if (!v178)
    {
      uint64_t v262 = sub_1000063C0(&qword_1001FBB08);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v262 - 8) + 56))(v28, 1, 1, v262);
LABEL_33:
      uint64_t v254 = v317;
      uint64_t v253 = v318;
      sub_100008DD4(v318, v317, &qword_1001FBAC0);
      uint64_t v255 = v319;
      uint64_t v256 = v308;
      sub_100008DD4(v319, v308, &qword_1001FBA88);
      sub_100008DD4((uint64_t)v28, (uint64_t)v26, &qword_1001FBA70);
      uint64_t v257 = (uint64_t)v26;
      uint64_t v258 = v301;
      sub_100008DD4(v254, v301, &qword_1001FBAC0);
      uint64_t v259 = (uint64_t)v28;
      uint64_t v260 = sub_1000063C0(&qword_1001FBB10);
      sub_100008DD4(v256, v258 + *(int *)(v260 + 48), &qword_1001FBA88);
      sub_100008DD4(v257, v258 + *(int *)(v260 + 64), &qword_1001FBA70);
      sub_10002784C(v259, &qword_1001FBA70);
      sub_10002784C(v255, &qword_1001FBA88);
      sub_10002784C(v253, &qword_1001FBAC0);
      sub_10002784C(v257, &qword_1001FBA70);
      sub_10002784C(v256, &qword_1001FBA88);
      return (id)sub_10002784C(v254, &qword_1001FBAC0);
    }
  }
  v179 = v326;
  uint64_t v180 = v326[13];
  uint64_t v181 = v327;
  uint64_t v321 = v326[12];
  LODWORD(v304) = *(unsigned __int8 *)(v327 + v321);
  LODWORD(v305) = *(unsigned __int8 *)(v327 + v180);
  uint64_t v320 = v327 + v326[7];
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  uint64_t v182 = v323;
  sub_100026EB0(v181, v323, (uint64_t (*)(void))type metadata accessor for WritingToolsView);
  uint64_t v183 = *(unsigned __int8 *)(v306 + 80);
  uint64_t v184 = (v183 + 16) & ~v183;
  uint64_t v185 = v184 + v147;
  uint64_t v186 = v183 | 7;
  uint64_t v187 = swift_allocObject();
  sub_100027CAC(v182, v187 + v184, (uint64_t (*)(void))type metadata accessor for WritingToolsView);
  sub_100026EB0(v181, v182, (uint64_t (*)(void))type metadata accessor for WritingToolsView);
  uint64_t v309 = v185;
  uint64_t v306 = v186;
  uint64_t v188 = swift_allocObject();
  uint64_t v314 = v184;
  sub_100027CAC(v182, v188 + v184, (uint64_t (*)(void))type metadata accessor for WritingToolsView);
  uint64_t v189 = v181 + v179[21];
  char v190 = *(unsigned char *)(v189 + 8);
  uint64_t v191 = *(void *)(v189 + 16);
  *(void *)&long long v332 = *(void *)v189;
  BYTE8(v332) = v190;
  *(void *)&long long v333 = v191;
  sub_1000063C0(&qword_1001FDE70);
  State.projectedValue.getter();
  long long v293 = v339;
  uint64_t v192 = v340;
  LOBYTE(v184) = (_BYTE)v341;
  LOBYTE(v332) = (_BYTE)v304;
  BYTE1(v332) = (_BYTE)v305;
  swift_unknownObjectWeakInit();
  swift_unknownObjectRelease();
  *(void *)&long long v333 = sub_10002694C;
  *((void *)&v333 + 1) = v187;
  v334 = sub_100026968;
  uint64_t v335 = v188;
  long long v336 = v293;
  uint64_t v337 = v192;
  char v338 = v184;
  sub_100026980((uint64_t)&v332, (uint64_t)&v339);
  uint64_t v193 = v295;
  sub_100020AC0((uint64_t *)&unk_1001FAE30, (uint64_t (*)(void))&type metadata accessor for DynamicTypeSize, 0x5463696D616E7944, 0xEF657A6953657079, v295);
  LOBYTE(v192) = DynamicTypeSize.isAccessibilitySize.getter();
  (*(void (**)(uint64_t, void))(v296 + 8))(v193, v297);
  if (v192)
  {
    uint64_t v194 = v324;
    Divider.init()();
    uint64_t v195 = 0;
  }
  else
  {
    uint64_t v195 = 1;
    uint64_t v194 = v324;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v310 + 56))(v194, v195, 1, v311);
  v305 = type metadata accessor for WritingToolsView;
  uint64_t v196 = v323;
  sub_100026EB0(v327, v323, (uint64_t (*)(void))type metadata accessor for WritingToolsView);
  uint64_t v197 = swift_allocObject();
  uint64_t v198 = v314;
  v304 = type metadata accessor for WritingToolsView;
  sub_100027CAC(v196, v197 + v314, (uint64_t (*)(void))type metadata accessor for WritingToolsView);
  char v199 = *(unsigned char *)(v189 + 8);
  uint64_t v200 = *(void *)(v189 + 16);
  uint64_t v329 = *(void *)v189;
  char v330 = v199;
  uint64_t v331 = v200;
  State.projectedValue.getter();
  long long v297 = v332;
  uint64_t v201 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v333;
  char v202 = BYTE8(v333);
  swift_unknownObjectWeakLoadStrong();
  *(void *)&long long v332 = sub_10002694C;
  *((void *)&v332 + 1) = v197;
  long long v333 = v297;
  v334 = v201;
  LOBYTE(v335) = v202;
  swift_unknownObjectWeakInit();
  swift_unknownObjectRelease();
  sub_1000269E0((uint64_t)&v332, (uint64_t)&v329);
  uint64_t v203 = v327;
  sub_100026EB0(v327, v196, (uint64_t (*)(void))v305);
  uint64_t v204 = swift_allocObject();
  sub_100027CAC(v196, v204 + v198, (uint64_t (*)(void))v304);
  char v205 = *(unsigned char *)(v203 + v321);
  swift_unknownObjectWeakLoadStrong();
  type metadata accessor for WritingToolsModel();
  sub_100027D14((unint64_t *)&unk_1001FB3F0, (void (*)(uint64_t))type metadata accessor for WritingToolsModel);
  uint64_t v206 = Environment.init<A>(_:)();
  char v208 = v207;
  uint64_t v209 = (int *)v298;
  uint64_t v210 = (uint64_t)v299;
  *v299 = sub_10002694C;
  *(void *)(v210 + 8) = v204;
  uint64_t v211 = v210 + v209[5];
  uint64_t v212 = type metadata accessor for GeometryProxy();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v212 - 8) + 16))(v211, v300, v212);
  *(unsigned char *)(v210 + v209[6]) = v205;
  swift_unknownObjectWeakInit();
  swift_unknownObjectRelease();
  uint64_t v213 = v210 + v209[8];
  *(void *)uint64_t v213 = v206;
  *(unsigned char *)(v213 + 8) = v208 & 1;
  uint64_t v214 = (uint64_t *)(v210 + v209[9]);
  *uint64_t v214 = swift_getKeyPath();
  sub_1000063C0((uint64_t *)&unk_1001FAE30);
  swift_storeEnumTagMultiPayload();
  sub_1000063C0((uint64_t *)&unk_1001FB428);
  Bindable.wrappedValue.getter();
  sub_100027D14(&qword_1001FBAF0, (void (*)(uint64_t))type metadata accessor for TransformSection);
  uint64_t v215 = v313;
  View.environment<A>(_:)();
  swift_release();
  sub_100027D5C(v210, type metadata accessor for TransformSection);
  uint64_t v216 = v302;
  uint64_t v217 = v303;
  (*(void (**)(char *, char *, uint64_t))(v302 + 32))(v325, v215, v303);
  id result = [self sharedConnection];
  if (result)
  {
    v219 = result;
    unsigned int v220 = [result isExternalIntelligenceAllowed];

    uint64_t v221 = (uint64_t)v307;
    if (v220 && (sub_100113FD8() & 1) != 0)
    {
      uint64_t v222 = Divider.init()();
      __chkstk_darwin(v222);
      *(&v263 - 2) = v327;
      sub_1000063C0(&qword_1001FBB18);
      sub_100026C3C();
      uint64_t v223 = v264;
      Section<>.init(content:)();
      Bindable.wrappedValue.getter();
      uint64_t v224 = v332;
      swift_getKeyPath();
      *(void *)&long long v332 = v224;
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      char v225 = *(unsigned char *)(v224 + OBJC_IVAR____TtC21WritingToolsUIService17WritingToolsModel__networkAvailable);
      swift_release();
      uint64_t v226 = swift_getKeyPath();
      uint64_t v227 = swift_allocObject();
      *(unsigned char *)(v227 + 16) = (v225 & 1) == 0;
      uint64_t v228 = v265;
      uint64_t v229 = (uint64_t)v269;
      uint64_t v230 = v267;
      (*(void (**)(char *, char *, uint64_t))(v265 + 16))(v269, v223, v267);
      uint64_t v231 = (uint64_t *)(v229 + *(int *)(v263 + 36));
      *uint64_t v231 = v226;
      v231[1] = (uint64_t)sub_100026D50;
      v231[2] = v227;
      (*(void (**)(char *, uint64_t))(v228 + 8))(v223, v230);
      uint64_t v232 = v268;
      sub_100026FD0(v229, v268, &qword_1001FBA58);
      uint64_t v234 = v310;
      uint64_t v233 = v311;
      uint64_t v235 = *(void (**)(char *, char *, uint64_t))(v310 + 16);
      uint64_t v236 = v266;
      uint64_t v237 = v270;
      v235(v266, v270, v311);
      sub_100008DD4(v232, v229, &qword_1001FBA58);
      v235(v307, v236, v233);
      uint64_t v238 = sub_1000063C0((uint64_t *)&unk_1001FBB40);
      sub_100008DD4(v229, (uint64_t)&v307[*(int *)(v238 + 48)], &qword_1001FBA58);
      uint64_t v239 = v232;
      uint64_t v221 = (uint64_t)v307;
      sub_10002784C(v239, &qword_1001FBA58);
      uint64_t v240 = *(void (**)(char *, uint64_t))(v234 + 8);
      v240(v237, v233);
      sub_10002784C(v229, &qword_1001FBA58);
      uint64_t v241 = v236;
      uint64_t v217 = v303;
      v240(v241, v233);
      uint64_t v216 = v302;
      uint64_t v242 = sub_1000063C0(&qword_1001FBAF8);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v242 - 8) + 56))(v221, 0, 1, v242);
      uint64_t v243 = v312;
      sub_100026FD0(v221, v312, &qword_1001FBA60);
    }
    else
    {
      uint64_t v244 = sub_1000063C0(&qword_1001FBAF8);
      uint64_t v243 = v312;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v244 - 8) + 56))(v312, 1, 1, v244);
    }
    sub_100026AD4((uint64_t)&v339, (uint64_t)&v332);
    uint64_t v245 = v322;
    sub_100008DD4(v324, v322, &qword_1001FBA78);
    sub_100026B30((uint64_t)&v329, (uint64_t)v328);
    uint64_t v246 = v216;
    v247 = *(void (**)(char *, char *, uint64_t))(v216 + 16);
    v248 = v313;
    v247(v313, v325, v217);
    sub_100008DD4(v243, v221, &qword_1001FBA60);
    double v26 = v316;
    sub_100026AD4((uint64_t)&v332, (uint64_t)v316);
    v249 = (int *)sub_1000063C0(&qword_1001FBB00);
    sub_100008DD4(v245, (uint64_t)&v26[v249[12]], &qword_1001FBA78);
    sub_100026B30((uint64_t)v328, (uint64_t)&v26[v249[16]]);
    v247(&v26[v249[20]], v248, v217);
    sub_100008DD4(v221, (uint64_t)&v26[v249[24]], &qword_1001FBA60);
    v250 = &v26[v249[28]];
    *(void *)v250 = 0;
    v250[8] = 1;
    sub_10002784C(v312, &qword_1001FBA60);
    v251 = *(void (**)(char *, uint64_t))(v246 + 8);
    v251(v325, v217);
    sub_100026B8C((uint64_t)&v329);
    sub_10002784C(v324, &qword_1001FBA78);
    sub_100026BE0((uint64_t)&v339);
    sub_10002784C(v221, &qword_1001FBA60);
    v251(v248, v217);
    sub_100026B8C((uint64_t)v328);
    sub_10002784C(v322, &qword_1001FBA78);
    sub_100026BE0((uint64_t)&v332);
    uint64_t v252 = sub_1000063C0(&qword_1001FBB08);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v252 - 8) + 56))(v26, 0, 1, v252);
    double v28 = v315;
    sub_100026FD0((uint64_t)v26, (uint64_t)v315, &qword_1001FBA70);
    goto LABEL_33;
  }
  __break(1u);
  return result;
}

uint64_t sub_10001778C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v50 = type metadata accessor for HeaderButtonWithIconStyle(0);
  uint64_t v4 = ((uint64_t (*)(void))__chkstk_darwin)();
  uint64_t v45 = (uint64_t *)((char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v4);
  uint64_t v49 = (uint64_t)&v42 - v6;
  uint64_t v7 = type metadata accessor for WritingToolsView();
  uint64_t v43 = *(void *)(v7 - 8);
  uint64_t v8 = *(void *)(v43 + 64);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = sub_1000063C0(&qword_1001FBBD8);
  uint64_t v47 = *(void *)(v9 - 8);
  uint64_t v48 = v9;
  __chkstk_darwin(v9);
  uint64_t v46 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_1000063C0(&qword_1001FBBE0);
  uint64_t v11 = *(void *)(v55 - 8);
  __chkstk_darwin(v55);
  uint64_t v44 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000063C0(&qword_1001FBBE8);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v16 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v42 - v17;
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v52 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v53 = v19;
  int v51 = v20;
  uint64_t v54 = v21;
  uint64_t v22 = *(void *)(a1 + 16);
  char v23 = *(unsigned char *)(a1 + 24);
  j__swift_retain();
  uint64_t v24 = sub_1000207F8(v22, v23);
  j__swift_release();
  if (v24)
  {
    id v25 = [self currentDevice];
    id v26 = [v25 userInterfaceIdiom];

    if (v26 == (id)6
      || (swift_getKeyPath(),
          uint64_t v56 = v24,
          sub_100027D14((unint64_t *)&qword_1001FB410, (void (*)(uint64_t))type metadata accessor for PresentationModel), ObservationRegistrar.access<A, B>(_:keyPath:)(), swift_release(), (*(unsigned char *)(v24 + 24) & 1) == 0)&& *(void *)(v24 + 16) == 1)
    {
      sub_100026EB0(a1, (uint64_t)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for WritingToolsView);
      unint64_t v27 = (*(unsigned __int8 *)(v43 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
      uint64_t v28 = swift_allocObject();
      sub_100027CAC((uint64_t)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v28 + v27, (uint64_t (*)(void))type metadata accessor for WritingToolsView);
      uint64_t v29 = v46;
      Button.init(action:label:)();
      uint64_t KeyPath = swift_getKeyPath();
      uint64_t v31 = (uint64_t)v45;
      *uint64_t v45 = KeyPath;
      sub_1000063C0((uint64_t *)&unk_1001FB730);
      swift_storeEnumTagMultiPayload();
      uint64_t v32 = v49;
      sub_100027CAC(v31, v49, type metadata accessor for HeaderButtonWithIconStyle);
      sub_100027F2C(&qword_1001FBBF8, &qword_1001FBBD8);
      sub_100027D14(&qword_1001FBC00, (void (*)(uint64_t))type metadata accessor for HeaderButtonWithIconStyle);
      uint64_t v33 = v44;
      uint64_t v34 = v48;
      View.buttonStyle<A>(_:)();
      swift_release();
      sub_100027D5C(v32, type metadata accessor for HeaderButtonWithIconStyle);
      (*(void (**)(char *, uint64_t))(v47 + 8))(v29, v34);
      uint64_t v35 = v55;
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v18, v33, v55);
      uint64_t v36 = 0;
    }
    else
    {
      swift_release();
      uint64_t v36 = 1;
      uint64_t v35 = v55;
    }
  }
  else
  {
    uint64_t v36 = 1;
    uint64_t v35 = v55;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v18, v36, 1, v35);
  char v37 = v51 & 1;
  sub_100008DD4((uint64_t)v18, (uint64_t)v16, &qword_1001FBBE8);
  uint64_t v39 = v52;
  uint64_t v38 = v53;
  *(void *)a2 = v52;
  *(void *)(a2 + 8) = v38;
  *(unsigned char *)(a2 + 16) = v37;
  *(void *)(a2 + 24) = v54;
  *(void *)(a2 + 32) = 0;
  *(unsigned char *)(a2 + 40) = 1;
  uint64_t v40 = sub_1000063C0(&qword_1001FBBF0);
  sub_100008DD4((uint64_t)v16, a2 + *(int *)(v40 + 64), &qword_1001FBBE8);
  sub_10002783C(v39, v38, v37);
  swift_bridgeObjectRetain();
  sub_10002784C((uint64_t)v18, &qword_1001FBBE8);
  sub_10002784C((uint64_t)v16, &qword_1001FBBE8);
  sub_100026F18(v39, v38, v37);
  return swift_bridgeObjectRelease();
}

void *sub_100017E50()
{
  type metadata accessor for WritingToolsView();
  id result = (void *)swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    [result endWritingTools];
    return (void *)swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_100017EB8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = Image.init(systemName:)();
  *a1 = result;
  return result;
}

const char *sub_100017EF0(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v75 = a4;
  uint64_t v73 = a2;
  uint64_t v74 = a3;
  uint64_t v72 = (const char *)a1;
  uint64_t v5 = type metadata accessor for NavigationPath();
  __chkstk_darwin(v5 - 8);
  uint64_t v66 = (char *)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for WritingToolsView();
  uint64_t v82 = v7;
  uint64_t v71 = *(void *)(v7 - 8);
  uint64_t v70 = *(void *)(v71 + 64);
  __chkstk_darwin(v7);
  uint64_t v69 = (uint64_t)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000063C0(&qword_1001FF820);
  __chkstk_darwin(v9 - 8);
  uint64_t v68 = (char *)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = v4 + *(int *)(v7 + 76);
  uint64_t v83 = sub_1000063C0((uint64_t *)&unk_1001FB428);
  uint64_t v77 = v11;
  Bindable.wrappedValue.getter();
  uint64_t v12 = v101;
  type metadata accessor for RewritingModel();
  swift_allocObject();
  uint64_t v13 = sub_1000A91CC();
  swift_getKeyPath();
  char v99 = v12;
  uint64_t v100 = v13;
  uint64_t v101 = v12;
  uint64_t v79 = sub_100027D14((unint64_t *)&unk_1001FB3F0, (void (*)(uint64_t))type metadata accessor for WritingToolsModel);
  uint64_t v80 = (char *)&type metadata for () + 8;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  swift_release();
  swift_release();
  Bindable.wrappedValue.getter();
  uint64_t v14 = v101;
  swift_getKeyPath();
  uint64_t v101 = v14;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v15 = (const char *)*((void *)v14 + 3);
  swift_retain();
  swift_release();
  swift_getKeyPath();
  uint64_t v94 = v15;
  uint64_t v95 = (uint64_t)v72;
  uint64_t v96 = v73;
  uint64_t v97 = v74;
  char v98 = v75;
  uint64_t v101 = v15;
  uint64_t v16 = (uint64_t)v72;
  uint64_t v17 = v73;
  uint64_t v18 = v74;
  char v19 = v75;
  sub_10000ED40((uint64_t)v72, v73, v74, v75);
  uint64_t v76 = &protocol conformance descriptor for ToolModel;
  uint64_t v78 = sub_100027D14((unint64_t *)&qword_1001FD2A0, (void (*)(uint64_t))type metadata accessor for ToolModel);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  uint64_t v67 = 0;
  sub_10000ED74(v16, v17, v18, v19);
  swift_release();
  swift_release();
  Bindable.wrappedValue.getter();
  int v20 = v101;
  swift_getKeyPath();
  uint64_t v101 = v20;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_retain();
  swift_release();
  uint64_t v21 = v81;
  uint64_t v22 = v82;
  swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectWeakAssign();
  swift_release();
  swift_unknownObjectRelease();
  Bindable.wrappedValue.getter();
  char v23 = v101;
  swift_getKeyPath();
  uint64_t v101 = v23;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v24 = (const char *)*((void *)v23 + 3);
  swift_retain();
  swift_release();
  id v25 = *(void **)(v21 + *(int *)(v22 + 36));
  swift_getKeyPath();
  uint64_t v92 = v24;
  uint64_t v93 = v25;
  uint64_t v101 = v24;
  id v26 = v25;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  swift_release();

  Bindable.wrappedValue.getter();
  unint64_t v27 = v101;
  swift_getKeyPath();
  uint64_t v101 = v27;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v28 = (const char *)*((void *)v27 + 3);
  swift_retain();
  swift_release();
  uint64_t v65 = *(int *)(v82 + 48);
  char v29 = *(unsigned char *)(v21 + v65);
  swift_getKeyPath();
  uint64_t v90 = v28;
  char v91 = v29;
  uint64_t v101 = v28;
  uint64_t v76 = (void *)sub_100027D14((unint64_t *)&unk_100201540, (void (*)(uint64_t))type metadata accessor for RewritingModel);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  swift_release();
  Bindable.wrappedValue.getter();
  uint64_t v30 = v101;
  swift_getKeyPath();
  uint64_t v101 = v30;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v31 = (const char *)*((void *)v30 + 3);
  swift_retain();
  swift_release();
  uint64_t v32 = v82;
  uint64_t v64 = *(int *)(v82 + 56);
  uint64_t v33 = *(void *)(v81 + v64);
  swift_getKeyPath();
  uint64_t v88 = v31;
  uint64_t v89 = v33;
  uint64_t v101 = v31;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  swift_release();
  Bindable.wrappedValue.getter();
  uint64_t v34 = v101;
  swift_getKeyPath();
  uint64_t v101 = v34;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v35 = (const char *)*((void *)v34 + 3);
  swift_retain();
  swift_release();
  uint64_t v67 = *(int *)(v32 + 52);
  uint64_t v36 = v81;
  LOBYTE(v33) = *(unsigned char *)(v81 + v67);
  swift_getKeyPath();
  id v86 = v35;
  char v87 = v33;
  uint64_t v101 = v35;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  swift_release();
  Bindable.wrappedValue.getter();
  char v37 = v101;
  swift_getKeyPath();
  uint64_t v101 = v37;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v38 = (const char *)*((void *)v37 + 3);
  swift_retain();
  swift_release();
  uint64_t v39 = (const char **)(v36 + *(int *)(v32 + 72));
  uint64_t v41 = *v39;
  unint64_t v40 = (unint64_t)v39[1];
  uint64_t v101 = v41;
  unint64_t v102 = v40;
  sub_1000063C0((uint64_t *)&unk_1001FB780);
  State.wrappedValue.getter();
  uint64_t v42 = v105;
  swift_getKeyPath();
  uint64_t v84 = v38;
  uint64_t v85 = v42;
  uint64_t v101 = v38;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  uint64_t v43 = v36;
  swift_release();
  swift_release();
  swift_release();
  uint64_t v44 = type metadata accessor for TaskPriority();
  uint64_t v45 = (uint64_t)v68;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v68, 1, 1, v44);
  uint64_t v46 = v69;
  sub_100026EB0(v36, v69, (uint64_t (*)(void))type metadata accessor for WritingToolsView);
  type metadata accessor for MainActor();
  uint64_t v47 = static MainActor.shared.getter();
  unint64_t v48 = (*(unsigned __int8 *)(v71 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80);
  uint64_t v49 = swift_allocObject();
  *(void *)(v49 + 16) = v47;
  *(void *)(v49 + 24) = &protocol witness table for MainActor;
  sub_100027CAC(v46, v49 + v48, (uint64_t (*)(void))type metadata accessor for WritingToolsView);
  sub_1001228D0(v45, (uint64_t)&unk_1001FBB90, v49);
  swift_release();
  Bindable.wrappedValue.getter();
  uint64_t v50 = v101;
  swift_getKeyPath();
  uint64_t v101 = v50;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v51 = *((void *)v50 + 3);
  swift_retain();
  swift_release();
  swift_getKeyPath();
  uint64_t v101 = (const char *)v51;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v52 = *(void *)(v51 + 48);
  uint64_t v53 = *(void *)(v51 + 56);
  uint64_t v54 = *(void *)(v51 + 64);
  int v55 = *(unsigned __int8 *)(v51 + 72);
  sub_1000272F8(v52, v53, v54, *(unsigned char *)(v51 + 72));
  swift_release();
  if (v55 == 255)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (*(unsigned char *)(v43 + v67) != 1)
  {
    sub_100024DB4(v52, v53, v54, v55);
    uint64_t v57 = v73;
    uint64_t v56 = v74;
    uint64_t v58 = v72;
LABEL_9:
    sub_10001ECC0();
    char v62 = v75;
LABEL_10:
    uint64_t v101 = v58;
    unint64_t v102 = v57;
    uint64_t v103 = v56;
    char v104 = v62;
    sub_1000063C0(&qword_1001FB490);
    State.wrappedValue.getter();
    sub_100025244();
    NavigationPath.append<A>(_:)();
    State.wrappedValue.setter();
    return sub_100065B24(v58, v57, v56, v62);
  }
  uint64_t v57 = v73;
  uint64_t v56 = v74;
  uint64_t v58 = v72;
  if (v55)
  {
LABEL_17:
    uint64_t v101 = 0;
    unint64_t v102 = 0xE000000000000000;
    _StringGuts.grow(_:)(22);
    swift_bridgeObjectRelease();
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    JUMPOUT(0x100018B34);
  }
  LODWORD(v59) = *(unsigned __int8 *)(v43 + v65);
  unint64_t v60 = *(void *)(v43 + v64);
  sub_100024DB4(v52, v53, v54, 0);
  switch((char)v52)
  {
    case 1:
    case 6:
    case 7:
      goto LABEL_9;
    case 8:
      if ((v59 & 1) == 0) {
        goto LABEL_9;
      }
      uint64_t v59 = (v60 >> 2) & 1;
      break;
    case 9:
      if ((v59 & 1) == 0) {
        goto LABEL_9;
      }
      uint64_t v59 = (v60 >> 3) & 1;
      break;
    default:
      break;
  }
  BOOL v61 = sub_10001ECC0();
  char v62 = v75;
  if (v61 || !v59) {
    goto LABEL_10;
  }
  return sub_100065B24(v58, v57, v56, v62);
}

uint64_t sub_100018B5C(uint64_t a1)
{
  *(void *)(v1 + 24) = a1;
  type metadata accessor for MainActor();
  *(void *)(v1 + 32) = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100018BF4, v3, v2);
}

uint64_t sub_100018BF4()
{
  swift_release();
  type metadata accessor for WritingToolsView();
  sub_1000063C0((uint64_t *)&unk_1001FB428);
  Bindable.wrappedValue.getter();
  uint64_t v1 = *(void *)(v0 + 16);
  swift_getKeyPath();
  *(void *)(v0 + 16) = v1;
  sub_100027D14((unint64_t *)&unk_1001FB3F0, (void (*)(uint64_t))type metadata accessor for WritingToolsModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 32);
  swift_retain();
  swift_release();
  swift_getKeyPath();
  *(void *)(v0 + 16) = v2;
  sub_100027D14((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (swift_unknownObjectWeakLoadStrong())
  {
    type metadata accessor for SceneDelegate();
    if (swift_dynamicCastClass())
    {
      id v3 = [self activeKeyboardSceneDelegate];
      if ([v3 respondsToSelector:"setHideSystemInputAssistantViewForWritingTools:"]) {
        [v3 setHideSystemInputAssistantViewForWritingTools:1];
      }
    }
    swift_unknownObjectRelease();
  }
  swift_release();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_100018E04(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v21 = a4;
  uint64_t v19 = a2;
  uint64_t v20 = a3;
  uint64_t v6 = type metadata accessor for NavigationPath();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = type metadata accessor for WritingToolsView();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7);
  uint64_t v10 = sub_1000063C0(&qword_1001FF820);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  sub_100026EB0(v4, (uint64_t)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for WritingToolsView);
  type metadata accessor for MainActor();
  uint64_t v14 = static MainActor.shared.getter();
  unint64_t v15 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v14;
  *(void *)(v16 + 24) = &protocol witness table for MainActor;
  sub_100027CAC((uint64_t)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v16 + v15, (uint64_t (*)(void))type metadata accessor for WritingToolsView);
  sub_1001228D0((uint64_t)v12, (uint64_t)&unk_1001FBBD0, v16);
  swift_release();
  if (sub_10001ECC0())
  {
    uint64_t v22 = a1;
    uint64_t v23 = v19;
    uint64_t v24 = v20;
    char v25 = v21;
    sub_1000063C0(&qword_1001FB490);
    State.wrappedValue.getter();
    sub_100025244();
    NavigationPath.append<A>(_:)();
    State.wrappedValue.setter();
  }
  return sub_100065880((uint64_t)"ProofreadGeneration", 19);
}

uint64_t sub_1000190CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for WritingToolsView();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4 - 8);
  uint64_t v7 = sub_1000063C0((uint64_t *)&unk_1001FBB30);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100026EB0(a1, (uint64_t)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for WritingToolsView);
  unint64_t v11 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v12 = swift_allocObject();
  sub_100027CAC((uint64_t)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v12 + v11, (uint64_t (*)(void))type metadata accessor for WritingToolsView);
  sub_1000063C0(&qword_1001FBB98);
  sub_1000224B4(&qword_1001FBBA0, &qword_1001FBB98, (void (*)(void))sub_100027338);
  Button.init(action:label:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 16))(a2, v10, v7);
  uint64_t v13 = a2 + *(int *)(sub_1000063C0(&qword_1001FBB18) + 36);
  *(_WORD *)uint64_t v13 = 0;
  *(unsigned char *)(v13 + 2) = 1;
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

void *sub_100019334(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NavigationPath();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = type metadata accessor for WritingToolsView();
  sub_1000063C0((uint64_t *)&unk_1001FB428);
  Bindable.wrappedValue.getter();
  swift_getKeyPath();
  sub_100027D14((unint64_t *)&unk_1001FB3F0, (void (*)(uint64_t))type metadata accessor for WritingToolsModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v4 = *(void *)(v11 + 32);
  swift_retain();
  swift_release();
  swift_getKeyPath();
  uint64_t v11 = v4;
  sub_100027D14((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_retain();
  swift_release();
  sub_100136EC8();
  swift_release();
  uint64_t v5 = (uint64_t *)(a1 + *(int *)(v3 + 72));
  uint64_t v7 = *v5;
  uint64_t v6 = v5[1];
  uint64_t v11 = v7;
  uint64_t v12 = v6;
  sub_1000063C0((uint64_t *)&unk_1001FB780);
  State.wrappedValue.getter();
  if (qword_1001FAB50 != -1) {
    swift_once();
  }
  sub_100009ADC((void *)qword_100212690);
  swift_release();
  uint64_t v14 = &type metadata for WritingTools;
  unint64_t v15 = sub_1000268F4();
  LOBYTE(v11) = 8;
  char v8 = isFeatureEnabled(_:)();
  sub_100027DBC((uint64_t)&v11);
  if (v8)
  {
    uint64_t result = (void *)swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      uint64_t v10 = result;
      if ([result respondsToSelector:"updatePromptEntryState:"]) {
        [v10 updatePromptEntryState:1];
      }
      return (void *)swift_unknownObjectRelease();
    }
  }
  else
  {
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    uint64_t v13 = 0;
    LOBYTE(v14) = 1;
    sub_1000063C0(&qword_1001FB490);
    State.wrappedValue.getter();
    sub_100025244();
    NavigationPath.append<A>(_:)();
    return (void *)State.wrappedValue.setter();
  }
  return result;
}

uint64_t sub_10001963C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1000063C0((uint64_t *)&unk_1001FBBB0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000063C0(&qword_1001FBBC0);
  sub_100027F2C((unint64_t *)&unk_1001FD5A0, &qword_1001FBBC0);
  LabeledContent<>.init(content:label:)();
  char v6 = static Edge.Set.all.getter();
  EdgeInsets.init(_all:)();
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 16))(a1, v5, v2);
  uint64_t v15 = a1 + *(int *)(sub_1000063C0(&qword_1001FBB98) + 36);
  *(unsigned char *)uint64_t v15 = v6;
  *(void *)(v15 + 8) = v8;
  *(void *)(v15 + 16) = v10;
  *(void *)(v15 + 24) = v12;
  *(void *)(v15 + 32) = v14;
  *(unsigned char *)(v15 + 40) = 0;
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_100019800@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = Image.init(systemName:)();
  *a1 = result;
  return result;
}

uint64_t sub_100019848()
{
  LocalizedStringKey.init(stringLiteral:)();

  return Label<>.init(_:systemImage:)();
}

double sub_1000198A8@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100019918(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_1001FBC58, (void (*)(uint64_t, uint64_t, uint64_t))sub_100008DD4, (uint64_t *)&unk_1001FBC60).n128_u64[0];
  return result;
}

__n128 sub_100019918@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, void (*a17)(uint64_t, uint64_t, uint64_t), uint64_t *a18)
{
  uint64_t v20 = a17;
  int v21 = a18;
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  int v24 = a8 & 1;
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (v24) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    uint64_t v31 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();

    int v21 = a18;
    uint64_t v20 = a17;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  v20(v18, a9, a16);
  uint64_t v32 = (_OWORD *)(a9 + *(int *)(sub_1000063C0(v21) + 36));
  v32[4] = v38;
  v32[5] = v39;
  v32[6] = v40;
  _OWORD *v32 = v34;
  v32[1] = v35;
  __n128 result = v37;
  v32[2] = v36;
  v32[3] = v37;
  return result;
}

double sub_100019AFC@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_10001A280(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t *)&unk_1001FD8C0, &qword_1001FBC70).n128_u64[0];
  return result;
}

double sub_100019B58@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100019918(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_1001FBC78, (void (*)(uint64_t, uint64_t, uint64_t))sub_100008DD4, (uint64_t *)&unk_1001FBC80).n128_u64[0];
  return result;
}

double sub_100019BC8@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100019918(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_1001FB760, (void (*)(uint64_t, uint64_t, uint64_t))sub_100008DD4, &qword_1001FB768).n128_u64[0];
  return result;
}

double sub_100019C38@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_10001A280(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_1001FB770, &qword_1001FB778).n128_u64[0];
  return result;
}

double sub_100019C94@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_10001A280(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_1001FB740, &qword_1001FB748).n128_u64[0];
  return result;
}

double sub_100019CF0@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100019918(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_100202C10, (void (*)(uint64_t, uint64_t, uint64_t))sub_100008DD4, &qword_1001FBCA0).n128_u64[0];
  return result;
}

double sub_100019D60@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100019918(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_100202BF0, (void (*)(uint64_t, uint64_t, uint64_t))sub_100008DD4, (uint64_t *)&unk_1001FBC90).n128_u64[0];
  return result;
}

__n128 sub_100019DD0@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    uint64_t v23 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  uint64_t v24 = type metadata accessor for ButtonStyleConfiguration.Label();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(a9, v13, v24);
  char v25 = (_OWORD *)(a9 + *(int *)(sub_1000063C0((uint64_t *)&unk_1002024D0) + 36));
  v25[4] = v31;
  v25[5] = v32;
  v25[6] = v33;
  _OWORD *v25 = v27;
  v25[1] = v28;
  __n128 result = v30;
  void v25[2] = v29;
  v25[3] = v30;
  return result;
}

double sub_100019FB8@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_10001A280(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_100202960, &qword_1001FBC40).n128_u64[0];
  return result;
}

double sub_10001A014@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_10001A280(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_1001FB750, &qword_1001FB758).n128_u64[0];
  return result;
}

double sub_10001A070@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100019918(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)type metadata accessor for QuestionnaireSafetyUI, (void (*)(uint64_t, uint64_t, uint64_t))sub_100026EB0, &qword_1001FB718).n128_u64[0];
  return result;
}

double sub_10001A0E8@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_10001A280(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_1001FB720, &qword_1001FB728).n128_u64[0];
  return result;
}

double sub_10001A144@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100019918(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_1001FBC48, (void (*)(uint64_t, uint64_t, uint64_t))sub_100008DD4, &qword_1001FBC50).n128_u64[0];
  return result;
}

double sub_10001A1B4@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100019918(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_1001FBCB8, (void (*)(uint64_t, uint64_t, uint64_t))sub_100008DD4, (uint64_t *)&unk_1001FBCC0).n128_u64[0];
  return result;
}

double sub_10001A224@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_10001A280(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_1001FBCA8, &qword_1001FBCB0).n128_u64[0];
  return result;
}

__n128 sub_10001A280@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t *a16, uint64_t *a17)
{
  uint64_t v19 = a16;
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    long long v28 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();

    uint64_t v19 = a16;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  uint64_t v29 = sub_1000063C0(v19);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 16))(a9, v17, v29);
  __n128 v30 = (_OWORD *)(a9 + *(int *)(sub_1000063C0(a17) + 36));
  v30[4] = v36;
  v30[5] = v37;
  v30[6] = v38;
  *__n128 v30 = v32;
  v30[1] = v33;
  __n128 result = v35;
  v30[2] = v34;
  v30[3] = v35;
  return result;
}

uint64_t sub_10001A47C@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    uint64_t v23 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  long long v24 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)a9 = *(_OWORD *)v13;
  *(_OWORD *)(a9 + 16) = v24;
  *(_OWORD *)(a9 + 32) = *(_OWORD *)(v13 + 32);
  *(_OWORD *)(a9 + 104) = v29;
  *(_OWORD *)(a9 + 120) = v30;
  *(_OWORD *)(a9 + 136) = v31;
  *(_OWORD *)(a9 + 152) = v32;
  *(_OWORD *)(a9 + 56) = v26;
  *(_OWORD *)(a9 + 72) = v27;
  *(unsigned char *)(a9 + 48) = *(unsigned char *)(v13 + 48);
  *(_OWORD *)(a9 + 88) = v28;

  return swift_bridgeObjectRetain();
}

uint64_t sub_10001A648@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1000063C0(&qword_1001FB948);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = &v18[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10001A770(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned __int8 *)(a1 + 24), a2, (uint64_t)v8);
  uint64_t v9 = a2 + *(int *)(type metadata accessor for WritingToolsView() + 88);
  char v10 = *(unsigned char *)v9;
  uint64_t v11 = *(void *)(v9 + 8);
  v18[8] = v10;
  uint64_t v19 = v11;
  sub_1000063C0(&qword_1001FB5A8);
  State.wrappedValue.getter();
  char v12 = v20;
  uint64_t v13 = static Alignment.center.getter();
  uint64_t v15 = v14;
  sub_100008DD4((uint64_t)v8, a3, &qword_1001FB948);
  uint64_t v16 = a3 + *(int *)(sub_1000063C0(&qword_1001FB930) + 36);
  *(unsigned char *)uint64_t v16 = 0;
  *(unsigned char *)(v16 + 1) = v12;
  *(void *)(v16 + 8) = v13;
  *(void *)(v16 + 16) = v15;
  return sub_10002784C((uint64_t)v8, &qword_1001FB948);
}

uint64_t sub_10001A770@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v243 = a5;
  LODWORD(v242) = a4;
  *((void *)&v229 + 1) = a3;
  *(void *)&long long v229 = a2;
  uint64_t v232 = a1;
  uint64_t v241 = a6;
  uint64_t v6 = type metadata accessor for QuestionnaireView(0);
  __chkstk_darwin(v6 - 8);
  uint64_t v195 = (uint64_t *)((char *)&v190 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_1000063C0(&qword_1001FB578);
  __chkstk_darwin(v8 - 8);
  uint64_t v197 = (uint64_t)&v190 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v220 = sub_1000063C0(&qword_1001FB9F8);
  uint64_t v10 = __chkstk_darwin(v220);
  uint64_t v196 = (uint64_t)&v190 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v198 = (uint64_t)&v190 - v12;
  uint64_t v216 = sub_1000063C0(&qword_1001FBA00);
  __chkstk_darwin(v216);
  uint64_t v218 = (uint64_t)&v190 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v240 = sub_1000063C0(&qword_1001FB9E8);
  __chkstk_darwin(v240);
  uint64_t v221 = (uint64_t)&v190 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v215 = type metadata accessor for CompositionView(0);
  __chkstk_darwin(v215);
  uint64_t v16 = (char *)&v190 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v217 = sub_1000063C0(&qword_1001FB588);
  uint64_t v212 = *(void *)(v217 - 8);
  __chkstk_darwin(v217);
  uint64_t v211 = (char *)&v190 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v219 = sub_1000063C0(&qword_1001FB7F8);
  uint64_t v213 = *(void *)(v219 - 8);
  uint64_t v18 = __chkstk_darwin(v219);
  uint64_t v210 = (char *)&v190 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v230 = (char *)&v190 - v20;
  uint64_t v21 = type metadata accessor for ModelResponseView(0);
  __chkstk_darwin(v21 - 8);
  uint64_t v209 = (uint64_t *)((char *)&v190 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v23 = sub_1000063C0(&qword_1001FB9D8);
  __chkstk_darwin(v23 - 8);
  char v208 = (char *)&v190 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v205 = sub_1000063C0(&qword_1001FB9C8);
  uint64_t v25 = __chkstk_darwin(v205);
  char v207 = (char *)&v190 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  uint64_t v206 = (char *)&v190 - v27;
  uint64_t v204 = sub_1000063C0(&qword_1001FBA08);
  __chkstk_darwin(v204);
  uint64_t v214 = (uint64_t)&v190 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = type metadata accessor for RewritingView();
  __chkstk_darwin(v29 - 8);
  uint64_t v192 = (uint64_t)&v190 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_1000063C0(&qword_1001FB9B8);
  __chkstk_darwin(v31 - 8);
  uint64_t v194 = (uint64_t)&v190 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v203 = sub_1000063C0(&qword_1001FB9A8);
  uint64_t v33 = __chkstk_darwin(v203);
  uint64_t v193 = (uint64_t)&v190 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  long long v36 = (char *)&v190 - v35;
  uint64_t v225 = sub_1000063C0(&qword_1001FB998);
  __chkstk_darwin(v225);
  long long v38 = (char *)&v190 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v238 = sub_1000063C0(&qword_1001FBA10);
  __chkstk_darwin(v238);
  uint64_t v239 = (uint64_t)&v190 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v233 = sub_1000063C0(&qword_1001FBA18);
  __chkstk_darwin(v233);
  uint64_t v235 = (uint64_t)&v190 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v222 = sub_1000063C0(&qword_1001FBA20);
  __chkstk_darwin(v222);
  uint64_t v223 = (uint64_t)&v190 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v234 = sub_1000063C0(&qword_1001FB978);
  __chkstk_darwin(v234);
  uint64_t v224 = (char *)&v190 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v236 = sub_1000063C0(&qword_1001FB968);
  __chkstk_darwin(v236);
  uint64_t v237 = (char *)&v190 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v202 = type metadata accessor for TaskPriority();
  uint64_t v201 = *(void *)(v202 - 8);
  __chkstk_darwin(v202);
  uint64_t v200 = (char *)&v190 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = (int *)type metadata accessor for WritingToolsView();
  uint64_t v226 = *((void *)v45 - 1);
  uint64_t v46 = __chkstk_darwin(v45);
  unint64_t v48 = (char *)&v190 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v227 = v47;
  __chkstk_darwin(v46);
  uint64_t v228 = (uint64_t)&v190 - v49;
  uint64_t v50 = sub_1000063C0((uint64_t *)&unk_1001FAE40);
  __chkstk_darwin(v50 - 8);
  uint64_t v52 = (char *)&v190 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_1000063C0(&qword_1001FB438);
  __chkstk_darwin(v53 - 8);
  uint64_t v231 = (uint64_t (*)())((char *)&v190 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v55 = type metadata accessor for ProofreadingView();
  __chkstk_darwin(v55);
  uint64_t v57 = (char *)&v190 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = sub_1000063C0(&qword_1001FB4E0);
  __chkstk_darwin(v58);
  unint64_t v60 = (char *)&v190 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_1000063C0(&qword_1001FB4D0);
  __chkstk_darwin(v61 - 8);
  uint64_t v199 = (uint64_t)&v190 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = sub_1000063C0(&qword_1001FB988);
  uint64_t v64 = __chkstk_darwin(v63);
  uint64_t v65 = __chkstk_darwin(v64);
  if (!(_BYTE)v242)
  {
    *((void *)&v229 + 1) = v48;
    unint64_t v102 = v209;
    uint64_t v103 = (uint64_t)v207;
    uint64_t v104 = (uint64_t)v208;
    uint64_t v230 = v36;
    uint64_t v105 = (uint64_t)v206;
    uint64_t v106 = v243;
    char v107 = *(unsigned char *)(v243 + v45[13]);
    uint64_t v242 = v38;
    uint64_t v108 = v214;
    uint64_t v191 = v65;
    if (v107)
    {
      unint64_t v109 = *(void *)(v243 + v45[14]);
      switch((char)v232)
      {
        case 1:
        case 6:
        case 7:
          goto LABEL_17;
        case 8:
          uint64_t v180 = (v109 >> 2) & 1;
          goto LABEL_16;
        case 9:
          uint64_t v180 = (v109 >> 3) & 1;
LABEL_16:
          if ((*(unsigned char *)(v243 + v45[12]) & v180 & 1) == 0) {
            goto LABEL_17;
          }
          goto LABEL_7;
        default:
          if (!*(unsigned char *)(v243 + v45[12])) {
            goto LABEL_17;
          }
LABEL_7:
          sub_1000063C0((uint64_t *)&unk_1001FB428);
          Bindable.wrappedValue.getter();
          uint64_t v110 = v246;
          swift_getKeyPath();
          uint64_t v246 = v110;
          sub_100027D14((unint64_t *)&unk_1001FB3F0, (void (*)(uint64_t))type metadata accessor for WritingToolsModel);
          ObservationRegistrar.access<A, B>(_:keyPath:)();
          swift_release();
          uint64_t v232 = *(void *)(v110 + 24);
          swift_retain();
          swift_release();
          sub_1000063C0(&qword_1001FB490);
          State.projectedValue.getter();
          uint64_t v111 = v106 + v45[22];
          char v112 = *(unsigned char *)v111;
          uint64_t v113 = *(void *)(v111 + 8);
          LOBYTE(v244) = v112;
          uint64_t v245 = v113;
          sub_1000063C0(&qword_1001FB5A8);
          State.projectedValue.getter();
          *(void *)&long long v229 = v246;
          uint64_t v221 = v247;
          LODWORD(v220) = v248;
          uint64_t v114 = v228;
          sub_100026EB0(v106, v228, (uint64_t (*)(void))type metadata accessor for WritingToolsView);
          unint64_t v115 = (*(unsigned __int8 *)(v226 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v226 + 80);
          uint64_t v116 = swift_allocObject();
          sub_100027CAC(v114, v116 + v115, (uint64_t (*)(void))type metadata accessor for WritingToolsView);
          uint64_t v117 = *((void *)&v229 + 1);
          sub_100026EB0(v106, *((uint64_t *)&v229 + 1), (uint64_t (*)(void))type metadata accessor for WritingToolsView);
          uint64_t v118 = swift_allocObject();
          sub_100027CAC(v117, v118 + v115, (uint64_t (*)(void))type metadata accessor for WritingToolsView);
          uint64_t v189 = v118;
          uint64_t v119 = v192;
          sub_1001080E0(v232, (uint64_t)v231, v229, v221, v220, (uint64_t)sub_100025444, v116, (uint64_t)sub_100026734, v192, v189);
          uint64_t v120 = v194;
          sub_100026EB0(v119, v194, (uint64_t (*)(void))type metadata accessor for RewritingView);
          sub_100027D5C(v119, (uint64_t (*)(void))type metadata accessor for RewritingView);
          uint64_t v121 = (uint64_t)v242;
          sub_100026EB0(v106, v114, (uint64_t (*)(void))type metadata accessor for WritingToolsView);
          uint64_t v122 = swift_allocObject();
          sub_100027CAC(v114, v122 + v115, (uint64_t (*)(void))type metadata accessor for WritingToolsView);
          uint64_t v123 = v193;
          sub_100008DD4(v120, v193, &qword_1001FB9B8);
          uint64_t v124 = (void *)(v123 + *(int *)(v203 + 36));
          *uint64_t v124 = 0;
          v124[1] = 0;
          v124[2] = sub_100026724;
          v124[3] = v122;
          sub_10002784C(v120, &qword_1001FB9B8);
          uint64_t v125 = &qword_1001FB9A8;
          uint64_t v126 = (uint64_t)v230;
          sub_100026FD0(v123, (uint64_t)v230, &qword_1001FB9A8);
          sub_100008DD4(v126, v214, &qword_1001FB9A8);
          swift_storeEnumTagMultiPayload();
          sub_1000224B4(&qword_1001FB9A0, &qword_1001FB9A8, (void (*)(void))sub_1000263F8);
          sub_1000224B4(&qword_1001FB9C0, &qword_1001FB9C8, (void (*)(void))sub_1000264A4);
          _ConditionalContent<>.init(storage:)();
          uint64_t v127 = v126;
          break;
      }
    }
    else
    {
LABEL_17:
      sub_1000063C0((uint64_t *)&unk_1001FB428);
      Bindable.wrappedValue.getter();
      uint64_t v181 = v246;
      swift_getKeyPath();
      uint64_t v246 = v181;
      sub_100027D14((unint64_t *)&unk_1001FB3F0, (void (*)(uint64_t))type metadata accessor for WritingToolsModel);
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      uint64_t v182 = *(void *)(v181 + 24);
      swift_retain();
      swift_release();
      sub_1000063C0(&qword_1001FB490);
      uint64_t v183 = v231;
      State.projectedValue.getter();
      sub_1000B06E8(v182, (uint64_t)v183, v102);
      sub_100026EB0((uint64_t)v102, v104, type metadata accessor for ModelResponseView);
      sub_100027D5C((uint64_t)v102, type metadata accessor for ModelResponseView);
      uint64_t v184 = v228;
      sub_100026EB0(v106, v228, (uint64_t (*)(void))type metadata accessor for WritingToolsView);
      unint64_t v185 = (*(unsigned __int8 *)(v226 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v226 + 80);
      uint64_t v186 = swift_allocObject();
      sub_100027CAC(v184, v186 + v185, (uint64_t (*)(void))type metadata accessor for WritingToolsView);
      sub_100008DD4(v104, v103, &qword_1001FB9D8);
      uint64_t v187 = (void *)(v103 + *(int *)(v205 + 36));
      *uint64_t v187 = 0;
      v187[1] = 0;
      v187[2] = sub_100026724;
      v187[3] = v186;
      sub_10002784C(v104, &qword_1001FB9D8);
      uint64_t v125 = &qword_1001FB9C8;
      sub_100026FD0(v103, v105, &qword_1001FB9C8);
      sub_100008DD4(v105, v108, &qword_1001FB9C8);
      swift_storeEnumTagMultiPayload();
      sub_1000224B4(&qword_1001FB9A0, &qword_1001FB9A8, (void (*)(void))sub_1000263F8);
      sub_1000224B4(&qword_1001FB9C0, &qword_1001FB9C8, (void (*)(void))sub_1000264A4);
      uint64_t v121 = (uint64_t)v242;
      _ConditionalContent<>.init(storage:)();
      uint64_t v127 = v105;
    }
    sub_10002784C(v127, v125);
    uint64_t v153 = &qword_1001FB998;
    sub_100008DD4(v121, v223, &qword_1001FB998);
    swift_storeEnumTagMultiPayload();
    sub_1000224B4(&qword_1001FB980, &qword_1001FB988, (void (*)(void))sub_100021C3C);
    sub_10002631C();
    uint64_t v154 = (uint64_t)v224;
    goto LABEL_19;
  }
  if (v242 == 1)
  {
    uint64_t v68 = v243;
    uint64_t v69 = v215;
    uint64_t v70 = v232;
    uint64_t v71 = v229;
    char v72 = BYTE8(v229);
    sub_10000ED60(v232, v229);
    sub_1000063C0(&qword_1001FB490);
    State.projectedValue.getter();
    uint64_t v73 = v68 + v45[22];
    char v74 = *(unsigned char *)v73;
    uint64_t v75 = *(void *)(v73 + 8);
    LOBYTE(v244) = v74;
    uint64_t v245 = v75;
    sub_1000063C0(&qword_1001FB5A8);
    State.projectedValue.getter();
    uint64_t v76 = v246;
    uint64_t v228 = v247;
    char v77 = v248;
    uint64_t v78 = (uint64_t (*)())type metadata accessor for CompositionModel(0);
    uint64_t v242 = (char *)sub_100027D14((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
    uint64_t v231 = v78;
    *((void *)v16 + 3) = Environment.init<A>(_:)();
    v16[32] = v79 & 1;
    type metadata accessor for CommonUIManager();
    sub_100027D14((unint64_t *)&qword_1001FAE20, (void (*)(uint64_t))type metadata accessor for CommonUIManager);
    *((void *)v16 + 5) = Environment.init<A>(_:)();
    v16[48] = v80 & 1;
    uint64_t v81 = &v16[*(int *)(v69 + 36)];
    *uint64_t v81 = FocusState.init<>()() & 1;
    *((void *)v81 + 1) = v82;
    v81[16] = v83 & 1;
    *(void *)uint64_t v16 = v70;
    *((void *)v16 + 1) = v71;
    v16[16] = v72;
    uint64_t v84 = &v16[*(int *)(v69 + 32)];
    uint64_t v85 = v228;
    *(void *)uint64_t v84 = v76;
    *((void *)v84 + 1) = v85;
    v84[16] = v77;
    sub_1000063C0((uint64_t *)&unk_1001FB428);
    Bindable.wrappedValue.getter();
    uint64_t v86 = type metadata accessor for WritingToolsModel();
    uint64_t v87 = sub_100027D14(&qword_1001FB590, (void (*)(uint64_t))type metadata accessor for CompositionView);
    uint64_t v88 = sub_100027D14((unint64_t *)&unk_1001FB3F0, (void (*)(uint64_t))type metadata accessor for WritingToolsModel);
    uint64_t v89 = v211;
    View.environment<A>(_:)();
    swift_release();
    sub_100027D5C((uint64_t)v16, type metadata accessor for CompositionView);
    Bindable.wrappedValue.getter();
    uint64_t v90 = v246;
    swift_getKeyPath();
    uint64_t v246 = v90;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    swift_retain();
    swift_release();
    uint64_t v246 = v69;
    uint64_t v247 = v86;
    uint64_t v248 = v87;
    uint64_t v249 = v88;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    uint64_t v92 = v210;
    uint64_t v93 = v217;
    uint64_t v94 = v231;
    uint64_t v95 = (uint64_t)v242;
    View.environment<A>(_:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v212 + 8))(v89, v93);
    uint64_t v96 = v213;
    uint64_t v97 = (uint64_t)v230;
    uint64_t v98 = v219;
    (*(void (**)(char *, char *, uint64_t))(v213 + 32))(v230, v92, v219);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v96 + 16))(v218, v97, v98);
    swift_storeEnumTagMultiPayload();
    uint64_t v246 = v93;
    uint64_t v247 = (uint64_t)v94;
    uint64_t v248 = OpaqueTypeConformance2;
    uint64_t v249 = v95;
    swift_getOpaqueTypeConformance2();
    sub_1000224B4(&qword_1001FB9F0, &qword_1001FB9F8, (void (*)(void))sub_1000222C0);
    uint64_t v99 = v221;
    _ConditionalContent<>.init(storage:)();
    sub_100008DD4(v99, v235, &qword_1001FB9E8);
    swift_storeEnumTagMultiPayload();
    sub_100026274();
    sub_100026550();
    uint64_t v100 = (uint64_t)v237;
    _ConditionalContent<>.init(storage:)();
    sub_10002784C(v99, &qword_1001FB9E8);
    sub_100008DD4(v100, v239, &qword_1001FB968);
    swift_storeEnumTagMultiPayload();
    sub_1000261F8();
    _ConditionalContent<>.init(storage:)();
    sub_10002784C(v100, &qword_1001FB968);
    return (*(uint64_t (**)(char *, uint64_t))(v96 + 8))(v230, v98);
  }
  if (!(*((void *)&v229 + 1) | (unint64_t)v229 | v232))
  {
LABEL_23:
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    JUMPOUT(0x10001C950);
  }
  if (v232 == 1 && v229 == 0)
  {
    uint64_t v128 = v243;
    uint64_t v129 = (uint64_t *)(v243 + v45[20]);
    uint64_t v131 = *v129;
    uint64_t v130 = v129[1];
    uint64_t v246 = v131;
    uint64_t v247 = v130;
    uint64_t v191 = v65;
    uint64_t v242 = (char *)&v190 - v66;
    uint64_t v232 = v67;
    sub_1000063C0(&qword_1001FB850);
    State.wrappedValue.getter();
    uint64_t v132 = v244;
    sub_1000063C0(&qword_1001FB490);
    uint64_t v133 = v231;
    State.projectedValue.getter();
    type metadata accessor for CommonUIManager();
    sub_100027D14((unint64_t *)&qword_1001FAE20, (void (*)(uint64_t))type metadata accessor for CommonUIManager);
    *(void *)uint64_t v57 = Environment.init<A>(_:)();
    v57[8] = v134 & 1;
    uint64_t v135 = type metadata accessor for FBKSEvaluation.Subject();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v135 - 8) + 56))(v52, 1, 1, v135);
    id v136 = objc_allocWithZone((Class)type metadata accessor for FBKEvaluationController());
    uint64_t v244 = FBKEvaluationController.init(subject:)();
    State.init(wrappedValue:)();
    uint64_t v137 = v247;
    *((void *)v57 + 4) = v246;
    *((void *)v57 + 5) = v137;
    sub_100008DD4((uint64_t)v133, (uint64_t)&v57[*(int *)(v55 + 28)], &qword_1001FB438);
    uint64_t v244 = v132;
    type metadata accessor for ProofreadingModel();
    State.init(wrappedValue:)();
    uint64_t v138 = v246;
    uint64_t v139 = v247;
    sub_10002784C((uint64_t)v133, &qword_1001FB438);
    *((void *)v57 + 2) = v138;
    *((void *)v57 + 3) = v139;
    uint64_t v231 = type metadata accessor for WritingToolsView;
    uint64_t v140 = v228;
    sub_100026EB0(v128, v228, (uint64_t (*)(void))type metadata accessor for WritingToolsView);
    uint64_t v141 = *(unsigned __int8 *)(v226 + 80);
    uint64_t v142 = (v141 + 16) & ~v141;
    *((void *)&v229 + 1) = v141 | 7;
    uint64_t v230 = (char *)(v142 + v227);
    uint64_t v143 = swift_allocObject();
    sub_100027CAC(v140, v143 + v142, (uint64_t (*)(void))type metadata accessor for WritingToolsView);
    id v144 = v200;
    static TaskPriority.userInitiated.getter();
    id v145 = &v60[*(int *)(v58 + 36)];
    uint64_t v146 = type metadata accessor for _TaskModifier();
    uint64_t v147 = v201;
    uint64_t v148 = v202;
    (*(void (**)(char *, char *, uint64_t))(v201 + 16))(&v145[*(int *)(v146 + 20)], v144, v202);
    *(void *)id v145 = &unk_1001FBA30;
    *((void *)v145 + 1) = v143;
    sub_100026EB0((uint64_t)v57, (uint64_t)v60, (uint64_t (*)(void))type metadata accessor for ProofreadingView);
    (*(void (**)(char *, uint64_t))(v147 + 8))(v144, v148);
    sub_100027D5C((uint64_t)v57, (uint64_t (*)(void))type metadata accessor for ProofreadingView);
    uint64_t v149 = v199;
    sub_100008DD4((uint64_t)v60, v199, &qword_1001FB4E0);
    sub_10002784C((uint64_t)v60, &qword_1001FB4E0);
    sub_100026EB0(v243, v140, (uint64_t (*)(void))v231);
    uint64_t v150 = swift_allocObject();
    sub_100027CAC(v140, v150 + v142, (uint64_t (*)(void))type metadata accessor for WritingToolsView);
    uint64_t v151 = v232;
    sub_100008DD4(v149, v232, &qword_1001FB4D0);
    uint64_t v152 = (void *)(v151 + *(int *)(v191 + 36));
    *uint64_t v152 = 0;
    v152[1] = 0;
    v152[2] = sub_100026724;
    v152[3] = v150;
    sub_10002784C(v149, &qword_1001FB4D0);
    uint64_t v153 = &qword_1001FB988;
    uint64_t v121 = (uint64_t)v242;
    sub_100026FD0(v151, (uint64_t)v242, &qword_1001FB988);
    sub_100008DD4(v121, v223, &qword_1001FB988);
    swift_storeEnumTagMultiPayload();
    sub_1000224B4(&qword_1001FB980, &qword_1001FB988, (void (*)(void))sub_100021C3C);
    sub_10002631C();
    uint64_t v154 = (uint64_t)v224;
LABEL_19:
    _ConditionalContent<>.init(storage:)();
    sub_100008DD4(v154, v235, &qword_1001FB978);
    swift_storeEnumTagMultiPayload();
    sub_100026274();
    sub_100026550();
    uint64_t v188 = (uint64_t)v237;
    _ConditionalContent<>.init(storage:)();
    sub_10002784C(v154, &qword_1001FB978);
    sub_100008DD4(v188, v239, &qword_1001FB968);
    swift_storeEnumTagMultiPayload();
    sub_1000261F8();
    _ConditionalContent<>.init(storage:)();
    sub_10002784C(v188, &qword_1001FB968);
    uint64_t v179 = v121;
    return sub_10002784C(v179, v153);
  }
  uint64_t v155 = v243;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  id v157 = *(void **)(v155 + v45[11]);
  if (!v157)
  {
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v158 = Strong;
  uint64_t v159 = *(void **)(v155 + v45[9]);
  id v160 = v157;
  id v161 = v159;
  sub_1000063C0(&qword_1001FB490);
  uint64_t v162 = v231;
  State.projectedValue.getter();
  uint64_t v163 = v195;
  sub_10012254C(v158, v160, v161, (uint64_t)v162, v195);
  uint64_t v164 = v197;
  sub_100026EB0((uint64_t)v163, v197, type metadata accessor for QuestionnaireView);
  sub_100027D5C((uint64_t)v163, type metadata accessor for QuestionnaireView);
  uint64_t v165 = v228;
  sub_100026EB0(v155, v228, (uint64_t (*)(void))type metadata accessor for WritingToolsView);
  unint64_t v166 = (*(unsigned __int8 *)(v226 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v226 + 80);
  uint64_t v167 = swift_allocObject();
  sub_100027CAC(v165, v167 + v166, (uint64_t (*)(void))type metadata accessor for WritingToolsView);
  uint64_t v168 = v196;
  sub_100008DD4(v164, v196, &qword_1001FB578);
  uint64_t v169 = (void *)(v168 + *(int *)(v220 + 36));
  *uint64_t v169 = 0;
  v169[1] = 0;
  v169[2] = sub_100026724;
  v169[3] = v167;
  sub_10002784C(v164, &qword_1001FB578);
  uint64_t v153 = &qword_1001FB9F8;
  uint64_t v170 = v198;
  sub_100026FD0(v168, v198, &qword_1001FB9F8);
  sub_100008DD4(v170, v218, &qword_1001FB9F8);
  swift_storeEnumTagMultiPayload();
  uint64_t v171 = type metadata accessor for CompositionModel(255);
  uint64_t v172 = type metadata accessor for WritingToolsModel();
  uint64_t v173 = sub_100027D14(&qword_1001FB590, (void (*)(uint64_t))type metadata accessor for CompositionView);
  uint64_t v174 = sub_100027D14((unint64_t *)&unk_1001FB3F0, (void (*)(uint64_t))type metadata accessor for WritingToolsModel);
  uint64_t v246 = v215;
  uint64_t v247 = v172;
  uint64_t v248 = v173;
  uint64_t v249 = v174;
  uint64_t v175 = swift_getOpaqueTypeConformance2();
  uint64_t v176 = sub_100027D14((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  uint64_t v246 = v217;
  uint64_t v247 = v171;
  uint64_t v248 = v175;
  uint64_t v249 = v176;
  swift_getOpaqueTypeConformance2();
  sub_1000224B4(&qword_1001FB9F0, &qword_1001FB9F8, (void (*)(void))sub_1000222C0);
  uint64_t v177 = v221;
  _ConditionalContent<>.init(storage:)();
  sub_100008DD4(v177, v235, &qword_1001FB9E8);
  swift_storeEnumTagMultiPayload();
  sub_100026274();
  sub_100026550();
  uint64_t v178 = (uint64_t)v237;
  _ConditionalContent<>.init(storage:)();
  sub_10002784C(v177, &qword_1001FB9E8);
  sub_100008DD4(v178, v239, &qword_1001FB968);
  swift_storeEnumTagMultiPayload();
  sub_1000261F8();
  _ConditionalContent<>.init(storage:)();
  sub_10002784C(v178, &qword_1001FB968);
  uint64_t v179 = v170;
  return sub_10002784C(v179, v153);
}

uint64_t sub_10001C978(uint64_t a1)
{
  char v1 = *(unsigned char *)(a1 + 8);
  uint64_t v2 = swift_retain();
  sub_100020FD8(v2, v1, 0x49556E6F6D6D6F43, 0xEF726567616E614DLL);
  swift_release();
  sub_10011E5C0();

  return swift_release();
}

double sub_10001C9F0@<D0>(_OWORD *a1@<X8>)
{
  sub_100025298();
  EnvironmentValues.subscript.getter();
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_10001CA40()
{
  return EnvironmentValues.subscript.setter();
}

uint64_t sub_10001CAA0()
{
  uint64_t v0 = type metadata accessor for NavigationPath();
  __chkstk_darwin(v0 - 8);
  type metadata accessor for WritingToolsView();
  sub_1000063C0(&qword_1001FB490);
  State.wrappedValue.getter();
  sub_100025244();
  NavigationPath.append<A>(_:)();
  return State.wrappedValue.setter();
}

uint64_t sub_10001CB88()
{
  return swift_release();
}

uint64_t sub_10001CCF4()
{
  return sub_100065C00((uint64_t)"WTPanelBringup", 14, 2, 0x726165707041, 0xE600000000000000);
}

uint64_t sub_10001CD18(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NavigationPath();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for WritingToolsView();
  sub_1000063C0(&qword_1001FB490);
  State.wrappedValue.getter();
  char v7 = NavigationPath.isEmpty.getter();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (v7)
  {
    uint64_t v9 = (uint64_t *)(a1 + *(int *)(v6 + 72));
    uint64_t v11 = *v9;
    uint64_t v10 = v9[1];
    v12[1] = v11;
    v12[2] = v10;
    sub_1000063C0((uint64_t *)&unk_1001FB780);
    State.wrappedValue.getter();
    if (qword_1001FAB30 != -1) {
      swift_once();
    }
    sub_10000E5AC((void *)qword_100212670);
    return swift_release();
  }
  return result;
}

void sub_10001CE88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  NavigationPath.withCollectionProxy(_:)();
  uint64_t v4 = _swiftEmptyArrayStorage[2];
  if (v4)
  {
    uint64_t v5 = (char *)&_swiftEmptyArrayStorage[4 * v4];
    uint64_t v6 = *(void *)v5;
    uint64_t v7 = *((void *)v5 + 1);
    uint64_t v8 = *((void *)v5 + 2);
    int v9 = v5[24];
    sub_10000ED40(*(void *)v5, v7, v8, v5[24]);
    swift_bridgeObjectRelease();
    char v10 = *(unsigned char *)(a3 + 8);
    uint64_t v11 = swift_retain();
    sub_100020FD8(v11, v10, 0x49556E6F6D6D6F43, 0xEF726567616E614DLL);
    swift_release();
    swift_getKeyPath();
    sub_100027D14((unint64_t *)&qword_1001FAE20, (void (*)(uint64_t))type metadata accessor for CommonUIManager);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    swift_release();
    if (Strong)
    {
      if (v9)
      {
        if (v9 == 1)
        {
          [Strong setModalInPresentation:1];
          sub_10000ED74(v6, v7, v8, 1);
        }
        else if (v8 | v7 | v6)
        {
          [Strong setModalInPresentation:1];
        }
        else
        {
          [Strong setModalInPresentation:0];
        }
      }
      else
      {
        [Strong setModalInPresentation:1];
        sub_10000ED74(v6, v7, v8, 0);
      }
    }
    else
    {
      sub_10000ED74(v6, v7, v8, v9);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    char v13 = *(unsigned char *)(a3 + 8);
    uint64_t v14 = swift_retain();
    sub_100020FD8(v14, v13, 0x49556E6F6D6D6F43, 0xEF726567616E614DLL);
    swift_release();
    swift_getKeyPath();
    sub_100027D14((unint64_t *)&qword_1001FAE20, (void (*)(uint64_t))type metadata accessor for CommonUIManager);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v15 = (void *)swift_unknownObjectWeakLoadStrong();
    swift_release();
    if (v15)
    {
      [v15 setModalInPresentation:0];
    }
  }
}

uint64_t sub_10001D1A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v82 = a3;
  uint64_t v3 = type metadata accessor for WritingToolsView();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v77 = v3;
  uint64_t v78 = v4;
  __chkstk_darwin(v3);
  uint64_t v79 = v5;
  uint64_t v80 = (uint64_t)&v75 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000063C0(&qword_1001FF820);
  __chkstk_darwin(v6 - 8);
  uint64_t v81 = (char *)&v75 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = _swiftEmptyArrayStorage;
  uint64_t v84 = &v86;
  NavigationPath.withCollectionProxy(_:)();
  uint64_t v8 = v86;
  uint64_t v86 = _swiftEmptyArrayStorage;
  char v83 = &v86;
  NavigationPath.withCollectionProxy(_:)();
  int v9 = v86;
  if (qword_1001FAC30 != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for Logger();
  sub_10000EBE8(v10, (uint64_t)qword_100212788);
  swift_bridgeObjectRetain_n();
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v76 = v9;
    char v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v86 = (void *)swift_slowAlloc();
    *(_DWORD *)char v13 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v14 = Array.description.getter();
    unint64_t v16 = v15;
    swift_bridgeObjectRelease();
    uint64_t v17 = v14;
    int v9 = v76;
    uint64_t v85 = sub_100021444(v17, v16, (uint64_t *)&v86);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "old navigation path: %s", v13, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain_n();
  uint64_t v18 = Logger.logObject.getter();
  os_log_type_t v19 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    uint64_t v86 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v20 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v21 = Array.description.getter();
    unint64_t v23 = v22;
    swift_bridgeObjectRelease();
    uint64_t v85 = sub_100021444(v21, v23, (uint64_t *)&v86);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "new navigation path: %s", v20, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v24 = v8[2];
    if (v24)
    {
LABEL_8:
      uint64_t v25 = &v8[4 * v24];
      uint64_t v27 = *v25;
      uint64_t v26 = v25[1];
      uint64_t v28 = v25[2];
      int v29 = *((unsigned __int8 *)v25 + 24);
      sub_10000ED40(*v25, v26, v28, *((unsigned char *)v25 + 24));
      goto LABEL_11;
    }
  }
  else
  {

    swift_bridgeObjectRelease_n();
    uint64_t v24 = v8[2];
    if (v24) {
      goto LABEL_8;
    }
  }
  uint64_t v27 = 0;
  uint64_t v26 = 0;
  uint64_t v28 = 0;
  int v29 = 255;
LABEL_11:
  swift_bridgeObjectRelease();
  uint64_t v30 = v9[2];
  if (v30)
  {
    uint64_t v31 = &v9[4 * v30];
    uint64_t v33 = *v31;
    uint64_t v32 = v31[1];
    uint64_t v34 = v31[2];
    int v35 = *((unsigned __int8 *)v31 + 24);
    sub_10000ED40(*v31, v32, v34, *((unsigned char *)v31 + 24));
  }
  else
  {
    uint64_t v33 = 0;
    uint64_t v32 = 0;
    uint64_t v34 = 0;
    int v35 = 255;
  }
  uint64_t result = swift_bridgeObjectRelease();
  if (v29 == 1)
  {
    if (v35 == 255)
    {
      uint64_t v45 = type metadata accessor for TaskPriority();
      uint64_t v46 = (uint64_t)v81;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v81, 1, 1, v45);
      uint64_t v47 = v80;
      sub_100026EB0(v82, v80, (uint64_t (*)(void))type metadata accessor for WritingToolsView);
      type metadata accessor for MainActor();
      uint64_t v48 = static MainActor.shared.getter();
      unint64_t v49 = (*(unsigned __int8 *)(v78 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v78 + 80);
      uint64_t v50 = swift_allocObject();
      *(void *)(v50 + 16) = v48;
      *(void *)(v50 + 24) = &protocol witness table for MainActor;
      sub_100027CAC(v47, v50 + v49, (uint64_t (*)(void))type metadata accessor for WritingToolsView);
      sub_1001228D0(v46, (uint64_t)&unk_1001FB7A8, v50);
      swift_release();
      uint64_t v51 = v27;
      uint64_t v52 = v26;
      uint64_t v53 = v28;
LABEL_40:
      char v60 = 1;
      return sub_100024DB4(v51, v52, v53, v60);
    }
    if (v26 == 1)
    {
      if (v35 == 1)
      {
        if (v32 == 1)
        {
          sub_100024DB4(v27, 1, v28, 1);
LABEL_29:
          uint64_t v51 = v33;
          uint64_t v52 = 1;
LABEL_39:
          uint64_t v53 = v34;
          goto LABEL_40;
        }
        uint64_t v69 = type metadata accessor for TaskPriority();
        uint64_t v70 = (uint64_t)v81;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v69 - 8) + 56))(v81, 1, 1, v69);
        uint64_t v71 = v80;
        sub_100026EB0(v82, v80, (uint64_t (*)(void))type metadata accessor for WritingToolsView);
        type metadata accessor for MainActor();
        uint64_t v72 = static MainActor.shared.getter();
        unint64_t v73 = (*(unsigned __int8 *)(v78 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v78 + 80);
        uint64_t v74 = swift_allocObject();
        *(void *)(v74 + 16) = v72;
        *(void *)(v74 + 24) = &protocol witness table for MainActor;
        sub_100027CAC(v71, v74 + v73, (uint64_t (*)(void))type metadata accessor for WritingToolsView);
        sub_1001228D0(v70, (uint64_t)&unk_1001FB798, v74);
        swift_release();
        sub_100024DB4(v27, 1, v28, 1);
LABEL_38:
        uint64_t v51 = v33;
        uint64_t v52 = v32;
        goto LABEL_39;
      }
      uint64_t v41 = v27;
      uint64_t v42 = 1;
    }
    else
    {
      uint64_t v41 = v27;
      uint64_t v42 = v26;
    }
    uint64_t v43 = v28;
    char v44 = 1;
LABEL_34:
    sub_100024DB4(v41, v42, v43, v44);
    goto LABEL_35;
  }
  if (v29 != 255)
  {
    uint64_t v41 = v27;
    uint64_t v42 = v26;
    uint64_t v43 = v28;
    char v44 = v29;
    goto LABEL_34;
  }
  if (v35 == 1)
  {
    if (v32 == 1) {
      goto LABEL_29;
    }
    uint64_t v54 = type metadata accessor for TaskPriority();
    uint64_t v55 = (uint64_t)v81;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 56))(v81, 1, 1, v54);
    uint64_t v56 = v80;
    sub_100026EB0(v82, v80, (uint64_t (*)(void))type metadata accessor for WritingToolsView);
    type metadata accessor for MainActor();
    uint64_t v57 = static MainActor.shared.getter();
    unint64_t v58 = (*(unsigned __int8 *)(v78 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v78 + 80);
    uint64_t v59 = swift_allocObject();
    *(void *)(v59 + 16) = v57;
    *(void *)(v59 + 24) = &protocol witness table for MainActor;
    sub_100027CAC(v56, v59 + v58, (uint64_t (*)(void))type metadata accessor for WritingToolsView);
    sub_1001228D0(v55, (uint64_t)&unk_1001FB7B8, v59);
    swift_release();
    goto LABEL_38;
  }
  if (v35 != 255)
  {
LABEL_35:
    uint64_t v51 = v33;
    uint64_t v52 = v32;
    uint64_t v53 = v34;
    char v60 = v35;
    return sub_100024DB4(v51, v52, v53, v60);
  }
  uint64_t v37 = v82;
  uint64_t v38 = v82 + *(int *)(v77 + 32);
  if (*(unsigned char *)(v38 + 24) == 1)
  {
    uint64_t v39 = *(void *)v38;
    uint64_t v40 = *(void *)(v38 + 8);
    if (v40 == 1)
    {
      return sub_10000ED60(*(void *)v38, 1);
    }
    else
    {
      uint64_t v61 = type metadata accessor for TaskPriority();
      uint64_t v62 = (uint64_t)v81;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 56))(v81, 1, 1, v61);
      uint64_t v63 = v80;
      sub_100026EB0(v37, v80, (uint64_t (*)(void))type metadata accessor for WritingToolsView);
      type metadata accessor for MainActor();
      sub_10000ED60(v39, v40);
      uint64_t v64 = static MainActor.shared.getter();
      unint64_t v65 = (*(unsigned __int8 *)(v78 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v78 + 80);
      unint64_t v66 = (v79 + v65 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v67 = swift_allocObject();
      *(void *)(v67 + 16) = v64;
      *(void *)(v67 + 24) = &protocol witness table for MainActor;
      sub_100027CAC(v63, v67 + v65, (uint64_t (*)(void))type metadata accessor for WritingToolsView);
      uint64_t v68 = (uint64_t *)(v67 + v66);
      *uint64_t v68 = v39;
      v68[1] = v40;
      sub_1001228D0(v62, (uint64_t)&unk_1001FB7C8, v67);
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_10001DBBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[7] = a5;
  v6[8] = a6;
  v6[6] = a4;
  v6[9] = type metadata accessor for MainActor();
  v6[10] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v6[11] = v8;
  v6[12] = v7;
  return _swift_task_switch(sub_10001DC5C, v8, v7);
}

uint64_t sub_10001DC5C()
{
  *(_DWORD *)(v0 + 160) = *(_DWORD *)(type metadata accessor for WritingToolsView() + 76);
  *(void *)(v0 + 104) = sub_1000063C0((uint64_t *)&unk_1001FB428);
  Bindable.wrappedValue.getter();
  uint64_t v1 = *(void *)(v0 + 16);
  swift_getKeyPath();
  *(void *)(v0 + 24) = v1;
  *(void *)(v0 + 112) = sub_100027D14((unint64_t *)&unk_1001FB3F0, (void (*)(uint64_t))type metadata accessor for WritingToolsModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  *(void *)(v0 + 120) = *(void *)(v1 + 32);
  swift_retain();
  swift_release();
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 128) = v2;
  void *v2 = v0;
  v2[1] = sub_10001DDB4;
  return sub_10006DCA8();
}

uint64_t sub_10001DDB4()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 96);
  uint64_t v3 = *(void *)(v1 + 88);
  return _swift_task_switch(sub_10001DEF8, v3, v2);
}

uint64_t sub_10001DEF8()
{
  unint64_t v1 = v0[8];
  if (!v1) {
    goto LABEL_8;
  }
  uint64_t v2 = v0[7] & 0xFFFFFFFFFFFFLL;
  if ((v1 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(v1) & 0xF;
  }
  if (v2)
  {
    Bindable.wrappedValue.getter();
    uint64_t v3 = v0[4];
    swift_getKeyPath();
    v0[5] = v3;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    v0[17] = *(void *)(v3 + 32);
    swift_retain();
    swift_release();
    v0[18] = static MainActor.shared.getter();
    uint64_t v4 = (void *)swift_task_alloc();
    v0[19] = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_10001E080;
    uint64_t v5 = v0[7];
    return sub_100070E18(v5, v1);
  }
  else
  {
LABEL_8:
    swift_release();
    uint64_t v7 = (uint64_t (*)(void))v0[1];
    return v7();
  }
}

uint64_t sub_10001E080()
{
  swift_task_dealloc();
  uint64_t v1 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10001E1BC, v1, v0);
}

uint64_t sub_10001E1BC()
{
  swift_release();
  swift_release();
  uint64_t v1 = *(void *)(v0 + 88);
  uint64_t v2 = *(void *)(v0 + 96);
  return _swift_task_switch(sub_100027F7C, v1, v2);
}

uint64_t sub_10001E228(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a4;
  type metadata accessor for MainActor();
  v4[5] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[6] = v6;
  v4[7] = v5;
  return _swift_task_switch(sub_10001E2C0, v6, v5);
}

uint64_t sub_10001E2C0()
{
  type metadata accessor for WritingToolsView();
  sub_1000063C0((uint64_t *)&unk_1001FB428);
  Bindable.wrappedValue.getter();
  uint64_t v1 = v0[2];
  swift_getKeyPath();
  v0[3] = v1;
  sub_100027D14((unint64_t *)&unk_1001FB3F0, (void (*)(uint64_t))type metadata accessor for WritingToolsModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  v0[8] = *(void *)(v1 + 32);
  swift_retain();
  swift_release();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[9] = v2;
  void *v2 = v0;
  v2[1] = sub_100014268;
  return sub_10006DCA8();
}

uint64_t sub_10001E40C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[10] = a4;
  sub_1000063C0(&qword_1001FB7D0);
  v4[11] = swift_task_alloc();
  type metadata accessor for MainActor();
  v4[12] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10001E4D4, v6, v5);
}

uint64_t sub_10001E4D4()
{
  uint64_t v1 = v0[11];
  swift_release();
  type metadata accessor for WritingToolsView();
  sub_1000063C0((uint64_t *)&unk_1001FB428);
  Bindable.wrappedValue.getter();
  uint64_t v2 = v0[5];
  swift_getKeyPath();
  v0[6] = v2;
  sub_100027D14((unint64_t *)&unk_1001FB3F0, (void (*)(uint64_t))type metadata accessor for WritingToolsModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v3 = *(void *)(v2 + 32);
  swift_retain();
  swift_release();
  swift_getKeyPath();
  v0[7] = v3;
  sub_100027D14((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v4 = v3 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__session;
  swift_beginAccess();
  sub_100008DD4(v4, v1, &qword_1001FB7D0);
  swift_release();
  uint64_t v5 = type metadata accessor for CompositionModel.Session(0);
  LODWORD(v4) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v1, 1, v5);
  sub_10002784C(v1, &qword_1001FB7D0);
  if (v4 != 1)
  {
    Bindable.wrappedValue.getter();
    uint64_t v6 = v0[8];
    swift_getKeyPath();
    v0[9] = v6;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    swift_retain();
    swift_release();
    sub_10006FD80(0, 0, 0, 0);
    swift_release();
  }
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_10001E7A0()
{
  type metadata accessor for WritingToolsView();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_1000063C0(&qword_1001FB608);
    FocusState.wrappedValue.getter();
    [v1 enableIntelligentEntryFieldView:v6];
    swift_unknownObjectRelease();
  }
  sub_1000063C0(&qword_1001FB608);
  FocusState.wrappedValue.getter();
  if (v6 == 1)
  {
    id v2 = [self currentTraitCollection];
    id v3 = [v2 userInterfaceIdiom];

    BOOL v4 = v3 == 0;
  }
  else
  {
    BOOL v4 = 0;
  }
  BOOL v7 = v4;
  sub_1000063C0(&qword_1001FB5A8);
  State.wrappedValue.setter();
  uint64_t result = FocusState.wrappedValue.getter();
  if (v7)
  {
    sub_1000063C0((uint64_t *)&unk_1001FB780);
    State.wrappedValue.getter();
    if (qword_1001FAB68 != -1) {
      swift_once();
    }
    sub_100009ADC((void *)qword_1002126A8);
    return swift_release();
  }
  return result;
}

uint64_t sub_10001E9B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a4;
  type metadata accessor for MainActor();
  v4[6] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[7] = v6;
  v4[8] = v5;
  return _swift_task_switch(sub_10001EA4C, v6, v5);
}

uint64_t sub_10001EA4C()
{
  uint64_t v1 = v0[5];
  id v2 = (uint64_t *)(v1 + *(int *)(type metadata accessor for WritingToolsView() + 80));
  uint64_t v4 = *v2;
  uint64_t v3 = v2[1];
  v0[2] = v4;
  v0[3] = v3;
  sub_1000063C0(&qword_1001FB850);
  State.wrappedValue.getter();
  v0[9] = v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  v0[10] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_10001EB1C;
  return sub_100165C94();
}

uint64_t sub_10001EB1C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 64);
  uint64_t v3 = *(void *)(v1 + 56);
  return _swift_task_switch(sub_10001EC60, v3, v2);
}

uint64_t sub_10001EC60()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

BOOL sub_10001ECC0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  char v2 = *(unsigned char *)(v0 + 24);
  j__swift_retain();
  uint64_t v3 = sub_1000207F8(v1, v2);
  j__swift_release();
  if (v3)
  {
    swift_getKeyPath();
    sub_100027D14((unint64_t *)&qword_1001FB410, (void (*)(uint64_t))type metadata accessor for PresentationModel);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    if (*(unsigned char *)(v3 + 41) == 1)
    {
      swift_getKeyPath();
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      uint64_t v4 = *(void *)(v3 + 16);
      char v5 = *(unsigned char *)(v3 + 24);
      swift_release();
      if ((v5 & 1) == 0 && v4 == 1) {
        return 1;
      }
    }
    else
    {
      swift_release();
    }
  }
  id v7 = [self currentTraitCollection];
  id v8 = [v7 userInterfaceIdiom];

  return v8 == 0;
}

uint64_t sub_10001EE34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a4;
  type metadata accessor for MainActor();
  v4[5] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[6] = v6;
  v4[7] = v5;
  return _swift_task_switch(sub_10001EECC, v6, v5);
}

uint64_t sub_10001EECC()
{
  type metadata accessor for WritingToolsView();
  sub_1000063C0((uint64_t *)&unk_1001FB428);
  Bindable.wrappedValue.getter();
  uint64_t v1 = v0[2];
  swift_getKeyPath();
  v0[3] = v1;
  sub_100027D14((unint64_t *)&unk_1001FB3F0, (void (*)(uint64_t))type metadata accessor for WritingToolsModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  v0[8] = *(void *)(v1 + 24);
  swift_retain();
  swift_release();
  char v2 = (void *)swift_task_alloc();
  v0[9] = v2;
  void *v2 = v0;
  v2[1] = sub_10001F020;
  return sub_10009E5D4(1, 0);
}

uint64_t sub_10001F020()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 56);
  uint64_t v3 = *(void *)(v1 + 48);
  return _swift_task_switch(sub_10001F164, v3, v2);
}

uint64_t sub_10001F164()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10001F1C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a4;
  type metadata accessor for MainActor();
  v4[5] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[6] = v6;
  v4[7] = v5;
  return _swift_task_switch(sub_10001F25C, v6, v5);
}

uint64_t sub_10001F25C()
{
  type metadata accessor for WritingToolsView();
  sub_1000063C0((uint64_t *)&unk_1001FB428);
  Bindable.wrappedValue.getter();
  uint64_t v1 = v0[2];
  swift_getKeyPath();
  v0[3] = v1;
  sub_100027D14((unint64_t *)&unk_1001FB3F0, (void (*)(uint64_t))type metadata accessor for WritingToolsModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  v0[8] = *(void *)(v1 + 24);
  swift_retain();
  swift_release();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[9] = v2;
  void *v2 = v0;
  v2[1] = sub_100014268;
  return sub_10009E5D4(0, 1);
}

uint64_t sub_10001F3B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[7] = a5;
  v6[8] = a6;
  v6[6] = a4;
  v6[9] = type metadata accessor for MainActor();
  v6[10] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v6[11] = v8;
  v6[12] = v7;
  return _swift_task_switch(sub_10001F450, v8, v7);
}

uint64_t sub_10001F450()
{
  *(_DWORD *)(v0 + 160) = *(_DWORD *)(type metadata accessor for WritingToolsView() + 76);
  *(void *)(v0 + 104) = sub_1000063C0((uint64_t *)&unk_1001FB428);
  Bindable.wrappedValue.getter();
  uint64_t v1 = *(void *)(v0 + 16);
  swift_getKeyPath();
  *(void *)(v0 + 24) = v1;
  *(void *)(v0 + 112) = sub_100027D14((unint64_t *)&unk_1001FB3F0, (void (*)(uint64_t))type metadata accessor for WritingToolsModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  *(void *)(v0 + 120) = *(void *)(v1 + 32);
  swift_retain();
  swift_release();
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 128) = v2;
  void *v2 = v0;
  v2[1] = sub_10001F5A8;
  return sub_10006DCA8();
}

uint64_t sub_10001F5A8()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 96);
  uint64_t v3 = *(void *)(v1 + 88);
  return _swift_task_switch(sub_10001F6EC, v3, v2);
}

uint64_t sub_10001F6EC()
{
  unint64_t v1 = v0[8];
  if (!v1) {
    goto LABEL_8;
  }
  uint64_t v2 = v0[7] & 0xFFFFFFFFFFFFLL;
  if ((v1 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(v1) & 0xF;
  }
  if (v2)
  {
    Bindable.wrappedValue.getter();
    uint64_t v3 = v0[4];
    swift_getKeyPath();
    v0[5] = v3;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    v0[17] = *(void *)(v3 + 32);
    swift_retain();
    swift_release();
    v0[18] = static MainActor.shared.getter();
    uint64_t v4 = (void *)swift_task_alloc();
    v0[19] = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_10001F874;
    uint64_t v5 = v0[7];
    return sub_100070E18(v5, v1);
  }
  else
  {
LABEL_8:
    swift_release();
    uint64_t v7 = (uint64_t (*)(void))v0[1];
    return v7();
  }
}

uint64_t sub_10001F874()
{
  swift_task_dealloc();
  uint64_t v1 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10001F9B0, v1, v0);
}

uint64_t sub_10001F9B0()
{
  swift_release();
  swift_release();
  uint64_t v1 = *(void *)(v0 + 88);
  uint64_t v2 = *(void *)(v0 + 96);
  return _swift_task_switch(sub_10001FA1C, v1, v2);
}

uint64_t sub_10001FA1C()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10001FA84()
{
  return static View._viewListCount(inputs:)();
}

uint64_t sub_10001FAA4@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  if ((result & 0x100) != 0)
  {
    uint64_t v4 = 0;
    uint64_t v5 = 0;
    char v6 = 0;
  }
  else
  {
    char v3 = result;
    if (qword_1001FAD28 != -1) {
      swift_once();
    }
    uint64_t v4 = qword_1002129D0;
    if (v3)
    {
      type metadata accessor for CommonUIManager();
      sub_100027D14((unint64_t *)&qword_1001FAE20, (void (*)(uint64_t))type metadata accessor for CommonUIManager);
      swift_retain();
      uint64_t v5 = Environment.init<A>(_:)();
      char v6 = v7 & 1;
    }
    else
    {
      swift_retain();
      uint64_t v5 = 0;
      char v6 = -1;
    }
    swift_retain();
    sub_100024D64(v5, v6);
    sub_100024D78(v5, v6);
    uint64_t result = swift_release();
  }
  *(void *)a2 = v4;
  *(void *)(a2 + 8) = v5;
  *(unsigned char *)(a2 + 16) = v6;
  return result;
}

uint64_t sub_10001FBC8@<X0>(uint64_t a1@<X8>)
{
  unsigned int v3 = *v1;
  int v4 = v1[1];
  uint64_t v5 = static Alignment.center.getter();
  uint64_t v7 = v6;
  if (v4) {
    int v8 = 256;
  }
  else {
    int v8 = 0;
  }
  sub_10001FAA4(v8 | v3, (uint64_t)v14);
  uint64_t v9 = v14[0];
  uint64_t v10 = v14[1];
  char v11 = v15;
  char v12 = static Edge.Set.vertical.getter();
  uint64_t result = static SafeAreaRegions.all.getter();
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v7;
  *(void *)(a1 + 16) = v9;
  *(void *)(a1 + 24) = v10;
  *(unsigned char *)(a1 + 32) = v11;
  *(void *)(a1 + 40) = result;
  *(unsigned char *)(a1 + 48) = v12;
  return result;
}

uint64_t sub_10001FC5C(uint64_t a1, void *a2)
{
  type metadata accessor for NavigationPath.CollectionProxy();
  sub_100027D14(&qword_1001FB7D8, (void (*)(uint64_t))&type metadata accessor for NavigationPath.CollectionProxy);
  uint64_t v4 = dispatch thunk of Collection.count.getter();
  uint64_t v5 = _swiftEmptyArrayStorage;
  if (!v4)
  {
LABEL_10:
    *a2 = v5;
    return swift_bridgeObjectRelease();
  }
  uint64_t v6 = v4;
  uint64_t v25 = _swiftEmptyArrayStorage;
  sub_1001291E8(0, v4 & ~(v4 >> 63), 0);
  uint64_t result = dispatch thunk of Collection.startIndex.getter();
  if ((v6 & 0x8000000000000000) == 0)
  {
    uint64_t v18 = a2;
    do
    {
      uint64_t v8 = a1;
      uint64_t v9 = (void (*)(unsigned char *, void))dispatch thunk of Collection.subscript.read();
      sub_1000251D0(v10, (uint64_t)v20);
      v9(v19, 0);
      sub_1000251D0((uint64_t)v20, (uint64_t)v19);
      sub_1000063C0(&qword_1001FB7E0);
      swift_dynamicCast();
      sub_100027DBC((uint64_t)v20);
      uint64_t v11 = v21;
      uint64_t v12 = v22;
      uint64_t v13 = v23;
      char v14 = v24;
      uint64_t v5 = v25;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1001291E8(0, v5[2] + 1, 1);
        uint64_t v5 = v25;
      }
      unint64_t v16 = v5[2];
      unint64_t v15 = v5[3];
      if (v16 >= v15 >> 1)
      {
        sub_1001291E8(v15 > 1, v16 + 1, 1);
        uint64_t v5 = v25;
      }
      void v5[2] = v16 + 1;
      uint64_t v17 = &v5[4 * v16];
      v17[4] = v11;
      v17[5] = v12;
      v17[6] = v13;
      *((unsigned char *)v17 + 56) = v14;
      a1 = v8;
      dispatch thunk of Collection.formIndex(after:)();
      --v6;
    }
    while (v6);
    a2 = v18;
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

uint64_t sub_10001FE7C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_100027D14((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  *a2 = *(void *)(v3 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__allowedResultOptions);
  return result;
}

uint64_t sub_10001FF2C()
{
  return swift_release();
}

uint64_t sub_10001FFF8@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1000200F0(a1, &OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__wantsInlineEditing, a2);
}

uint64_t sub_10002000C()
{
  return swift_release();
}

uint64_t sub_1000200DC@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1000200F0(a1, &OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__isForEditableContent, a2);
}

uint64_t sub_1000200F0@<X0>(uint64_t *a1@<X0>, void *a2@<X4>, unsigned char *a3@<X8>)
{
  uint64_t v5 = *a1;
  swift_getKeyPath();
  sub_100027D14((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  *a3 = *(unsigned char *)(v5 + *a2);
  return result;
}

uint64_t sub_1000201A4()
{
  return swift_release();
}

uint64_t sub_100020274@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_100027D14((unint64_t *)&unk_1001FB3F0, (void (*)(uint64_t))type metadata accessor for WritingToolsModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  *a2 = *(void *)(v3 + 24);
  return swift_retain();
}

uint64_t sub_100020324()
{
  return swift_release();
}

uint64_t sub_100020408()
{
  return sub_100094DAC(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_100020424@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_100027D14((unint64_t *)&unk_1001FB3F0, (void (*)(uint64_t))type metadata accessor for WritingToolsModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  *a2 = *(void *)(v3 + 32);
  return swift_retain();
}

uint64_t sub_1000204D4()
{
  return swift_release();
}

uint64_t sub_1000205C0()
{
  return sub_100068FE0(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1000205DC@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1000200F0(a1, &OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__wantsInlineEditing, a2);
}

uint64_t sub_100020608()
{
  return sub_100069DB0(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_100020628@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1000200F0(a1, &OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__isForEditableContent, a2);
}

uint64_t sub_100020654()
{
  return sub_100069DD4(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_100020674@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_100027D14((unint64_t *)&qword_1001FB410, (void (*)(uint64_t))type metadata accessor for PresentationModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  char v5 = *(unsigned char *)(v3 + 40);
  *(void *)a2 = *(void *)(v3 + 32);
  *(unsigned char *)(a2 + 8) = v5;
  return result;
}

uint64_t sub_100020724()
{
  return swift_release();
}

uint64_t sub_1000207F8(uint64_t a1, char a2)
{
  uint64_t v4 = type metadata accessor for EnvironmentValues();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  if ((a2 & 1) == 0)
  {
    os_log_type_t v8 = static os_log_type_t.fault.getter();
    uint64_t v9 = static Log.runtimeIssuesLog.getter();
    os_log_type_t v10 = v8;
    if (os_log_type_enabled(v9, v8))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      *(_DWORD *)uint64_t v11 = 136315138;
      uint64_t v13 = sub_100021444(0xD00000000000001BLL, 0x800000010019C750, &v14);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath();
    j__swift_release();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v14;
  }
  return a1;
}

uint64_t sub_100020A04@<X0>(uint64_t a1@<X8>)
{
  return sub_100020AC0((uint64_t *)&unk_1001FAE30, (uint64_t (*)(void))&type metadata accessor for DynamicTypeSize, 0x5463696D616E7944, 0xEF657A6953657079, a1);
}

uint64_t sub_100020A44(uint64_t a1, char a2)
{
  return sub_100020FD8(a1, a2, 0x49556E6F6D6D6F43, 0xEF726567616E614DLL);
}

uint64_t sub_100020A68(uint64_t a1, char a2)
{
  return sub_100020FD8(a1, a2, 0xD000000000000011, 0x800000010019C720);
}

uint64_t sub_100020A84@<X0>(uint64_t a1@<X8>)
{
  return sub_100020AC0((uint64_t *)&unk_1001FB730, (uint64_t (*)(void))&type metadata accessor for ColorScheme, 0x686353726F6C6F43, 0xEB00000000656D65, a1);
}

uint64_t sub_100020AC0@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v27 = a3;
  uint64_t v9 = v5;
  uint64_t v11 = type metadata accessor for EnvironmentValues();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1000063C0(a1);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100008DD4(v9, (uint64_t)v17, a1);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v18 = a2(0);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(a5, v17, v18);
  }
  else
  {
    os_log_type_t v20 = static os_log_type_t.fault.getter();
    uint64_t v21 = static Log.runtimeIssuesLog.getter();
    if (os_log_type_enabled(v21, v20))
    {
      unint64_t v25 = a4;
      uint64_t v22 = swift_slowAlloc();
      uint64_t v26 = a5;
      uint64_t v23 = (uint8_t *)v22;
      uint64_t v29 = swift_slowAlloc();
      *(_DWORD *)uint64_t v23 = 136315138;
      uint64_t v28 = sub_100021444(v27, v25, &v29);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v21, v20, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v23, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
}

uint64_t sub_100020D78(uint64_t a1, char a2)
{
  uint64_t v4 = type metadata accessor for EnvironmentValues();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2) {
    return a1 & 1;
  }
  swift_retain();
  os_log_type_t v8 = static os_log_type_t.fault.getter();
  uint64_t v9 = static Log.runtimeIssuesLog.getter();
  os_log_type_t v10 = v8;
  if (os_log_type_enabled(v9, v8))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315138;
    uint64_t v13 = sub_100021444(1819242306, 0xE400000000000000, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  EnvironmentValues.init()();
  swift_getAtKeyPath();
  sub_100024D58(a1, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v14;
}

uint64_t sub_100020F7C(uint64_t a1, char a2)
{
  return sub_100020FD8(a1, a2, 0xD000000000000010, 0x800000010019C700);
}

uint64_t sub_100020F98(uint64_t a1, char a2)
{
  return sub_100020FD8(a1, a2, 0x6E69746972776552, 0xEE006C65646F4D67);
}

uint64_t sub_100020FBC(uint64_t a1, char a2)
{
  return sub_100020FD8(a1, a2, 0xD000000000000011, 0x800000010019CAD0);
}

uint64_t sub_100020FD8(uint64_t a1, char a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = type metadata accessor for EnvironmentValues();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  if ((a2 & 1) == 0)
  {
    os_log_type_t v12 = static os_log_type_t.fault.getter();
    uint64_t v13 = static Log.runtimeIssuesLog.getter();
    os_log_type_t v14 = v12;
    if (os_log_type_enabled(v13, v12))
    {
      unint64_t v18 = a4;
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v20 = swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 136315138;
      uint64_t v19 = sub_100021444(a3, v18, &v20);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v15, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath();
    swift_release();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    return v20;
  }
  return a1;
}

uint64_t sub_1000211E0(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v5 = type metadata accessor for EnvironmentValues();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    swift_retain();
  }
  else
  {
    swift_retain();
    os_log_type_t v9 = static os_log_type_t.fault.getter();
    uint64_t v10 = static Log.runtimeIssuesLog.getter();
    os_log_type_t v11 = v9;
    if (os_log_type_enabled(v10, v9))
    {
      os_log_type_t v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      *(_DWORD *)os_log_type_t v12 = 136315138;
      v14[0] = v12 + 4;
      v14[1] = sub_100021444(0x2D202965646F4D28, 0xEC0000002928203ELL, &v15);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v12, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath();
    sub_100027F70();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return v15;
  }
  return a1;
}

uint64_t sub_10002140C@<X0>(uint64_t a1@<X8>)
{
  return sub_100020AC0((uint64_t *)&unk_1001FBC30, (uint64_t (*)(void))&type metadata accessor for ScenePhase, 0x616850656E656353, 0xEA00000000006573, a1);
}

uint64_t sub_100021444(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_100021518(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    ObjectType = (void *)swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_100027E0C((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_100027E0C((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  sub_100027DBC((uint64_t)v12);
  return v7;
}

uint64_t sub_100021518(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            UnsafeMutableRawBufferPointer.subscript.setter();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_1000216D4(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = _StringObject.sharedUTF8.getter();
  if (!v8)
  {
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
LABEL_17:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_1000216D4(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = (uint64_t)sub_10002176C(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_10002194C(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_10002194C(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

void *sub_10002176C(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_1000218E4(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = _StringGuts.copyUTF8(into:)();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return v4;
      }
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
LABEL_10:
      uint64_t v2 = String.UTF8View._foreignCount()();
      if (!v2) {
        return &_swiftEmptyArrayStorage;
      }
    }
    _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
LABEL_14:
    uint64_t result = (void *)_assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    return &_swiftEmptyArrayStorage;
  }
  return result;
}

void *sub_1000218E4(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return &_swiftEmptyArrayStorage;
  }
  sub_1000063C0(&qword_1001FBC08);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_10002194C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_1000063C0(&qword_1001FBC08);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100021A9C@<X0>(uint64_t a1@<X8>)
{
  return sub_1000113EC(*(void *)(v1 + 16), a1);
}

unint64_t sub_100021AA4()
{
  unint64_t result = qword_1001FB4A0;
  if (!qword_1001FB4A0)
  {
    sub_100006C14(&qword_1001FB498);
    sub_100021B44();
    sub_100027F2C(&qword_1001FB598, &qword_1001FB5A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FB4A0);
  }
  return result;
}

unint64_t sub_100021B44()
{
  unint64_t result = qword_1001FB4A8;
  if (!qword_1001FB4A8)
  {
    sub_100006C14(&qword_1001FB4B0);
    sub_100021BC0();
    sub_100022114();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FB4A8);
  }
  return result;
}

unint64_t sub_100021BC0()
{
  unint64_t result = qword_1001FB4B8;
  if (!qword_1001FB4B8)
  {
    sub_100006C14(&qword_1001FB4C0);
    sub_100021C3C();
    sub_100021DE8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FB4B8);
  }
  return result;
}

unint64_t sub_100021C3C()
{
  unint64_t result = qword_1001FB4C8;
  if (!qword_1001FB4C8)
  {
    sub_100006C14(&qword_1001FB4D0);
    sub_100021CB8();
    sub_100021D94();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FB4C8);
  }
  return result;
}

unint64_t sub_100021CB8()
{
  unint64_t result = qword_1001FB4D8;
  if (!qword_1001FB4D8)
  {
    sub_100006C14(&qword_1001FB4E0);
    sub_100027D14(&qword_1001FB4E8, (void (*)(uint64_t))type metadata accessor for ProofreadingView);
    sub_100027D14(&qword_1001FB4F0, (void (*)(uint64_t))&type metadata accessor for _TaskModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FB4D8);
  }
  return result;
}

unint64_t sub_100021D94()
{
  unint64_t result = qword_1001FB4F8;
  if (!qword_1001FB4F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FB4F8);
  }
  return result;
}

unint64_t sub_100021DE8()
{
  unint64_t result = qword_1001FB500;
  if (!qword_1001FB500)
  {
    sub_100006C14(&qword_1001FB508);
    sub_100021E64();
    sub_100021FBC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FB500);
  }
  return result;
}

unint64_t sub_100021E64()
{
  unint64_t result = qword_1001FB510;
  if (!qword_1001FB510)
  {
    sub_100006C14(&qword_1001FB518);
    sub_100021EE0();
    sub_100021D94();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FB510);
  }
  return result;
}

unint64_t sub_100021EE0()
{
  unint64_t result = qword_1001FB520;
  if (!qword_1001FB520)
  {
    sub_100006C14(&qword_1001FB528);
    sub_100027D14(&qword_1001FB530, (void (*)(uint64_t))type metadata accessor for RewritingView);
    sub_100027D14(&qword_1001FB4F0, (void (*)(uint64_t))&type metadata accessor for _TaskModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FB520);
  }
  return result;
}

unint64_t sub_100021FBC()
{
  unint64_t result = qword_1001FB538;
  if (!qword_1001FB538)
  {
    sub_100006C14(&qword_1001FB540);
    sub_100022038();
    sub_100021D94();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FB538);
  }
  return result;
}

unint64_t sub_100022038()
{
  unint64_t result = qword_1001FB548;
  if (!qword_1001FB548)
  {
    sub_100006C14(&qword_1001FB550);
    sub_100027D14(&qword_1001FB558, (void (*)(uint64_t))type metadata accessor for ModelResponseView);
    sub_100027D14(&qword_1001FB4F0, (void (*)(uint64_t))&type metadata accessor for _TaskModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FB548);
  }
  return result;
}

unint64_t sub_100022114()
{
  unint64_t result = qword_1001FB560;
  if (!qword_1001FB560)
  {
    sub_100006C14(&qword_1001FB568);
    sub_1000222C0();
    sub_100006C14(&qword_1001FB588);
    type metadata accessor for CompositionModel(255);
    type metadata accessor for CompositionView(255);
    type metadata accessor for WritingToolsModel();
    sub_100027D14(&qword_1001FB590, (void (*)(uint64_t))type metadata accessor for CompositionView);
    sub_100027D14((unint64_t *)&unk_1001FB3F0, (void (*)(uint64_t))type metadata accessor for WritingToolsModel);
    swift_getOpaqueTypeConformance2();
    sub_100027D14((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FB560);
  }
  return result;
}

unint64_t sub_1000222C0()
{
  unint64_t result = qword_1001FB570;
  if (!qword_1001FB570)
  {
    sub_100006C14(&qword_1001FB578);
    sub_100027D14(&qword_1001FB580, (void (*)(uint64_t))type metadata accessor for QuestionnaireView);
    sub_100021D94();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FB570);
  }
  return result;
}

double sub_100022374@<D0>(_OWORD *a1@<X8>)
{
  sub_100025298();
  EnvironmentValues.subscript.getter();
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_1000223CC()
{
  type metadata accessor for WritingToolsView();

  return sub_10001CAA0();
}

uint64_t sub_100022450()
{
  return sub_100027C30((uint64_t (*)(uint64_t))sub_10001CB88);
}

uint64_t sub_10002246C()
{
  return sub_100027C30(sub_10001CD18);
}

uint64_t sub_100022484()
{
  return sub_1000224B4(&qword_1001FB5B8, &qword_1001FB460, (void (*)(void))sub_100022530);
}

uint64_t sub_1000224B4(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100006C14(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100022530()
{
  unint64_t result = qword_1001FB5C0;
  if (!qword_1001FB5C0)
  {
    sub_100006C14(&qword_1001FB458);
    sub_1000225D0();
    sub_100027F2C(&qword_1001FB5F0, &qword_1001FB5F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FB5C0);
  }
  return result;
}

unint64_t sub_1000225D0()
{
  unint64_t result = qword_1001FB5C8;
  if (!qword_1001FB5C8)
  {
    sub_100006C14(&qword_1001FB450);
    sub_10002264C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FB5C8);
  }
  return result;
}

unint64_t sub_10002264C()
{
  unint64_t result = qword_1001FB5D0;
  if (!qword_1001FB5D0)
  {
    sub_100006C14(&qword_1001FB448);
    sub_100027F2C(&qword_1001FB5D8, &qword_1001FB440);
    sub_100027F2C(&qword_1001FB5E0, &qword_1001FB5E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FB5D0);
  }
  return result;
}

uint64_t sub_100022714(uint64_t a1, uint64_t a2)
{
  return sub_100022748(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10001CE88);
}

uint64_t sub_100022730(uint64_t a1, uint64_t a2)
{
  return sub_100022748(a1, a2, sub_10001D1A0);
}

uint64_t sub_100022748(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6 = *(void *)(type metadata accessor for WritingToolsView() - 8);
  uint64_t v7 = v3 + ((*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));

  return a3(a1, a2, v7);
}

uint64_t sub_1000227E0()
{
  return sub_100027C30((uint64_t (*)(uint64_t))sub_10001E7A0);
}

uint64_t sub_100022800()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t initializeBufferWithCopyOfBuffer for WritingToolsView(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = v14 + ((v5 + 16) & ~(unint64_t)v5);
  }
  else
  {
    char v7 = *((unsigned char *)a2 + 8);
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = v7;
    uint64_t v8 = a2[2];
    char v9 = *((unsigned char *)a2 + 24);
    swift_retain();
    j__swift_retain();
    *(void *)(v4 + 16) = v8;
    *(unsigned char *)(v4 + 24) = v9;
    uint64_t v10 = a3[6];
    size_t v11 = (void *)(v4 + v10);
    uint64_t v12 = (uint64_t *)((char *)a2 + v10);
    sub_1000063C0((uint64_t *)&unk_1001FAE30);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    }
    else
    {
      *size_t v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    swift_unknownObjectWeakCopyInit();
    uint64_t v15 = a3[8];
    uint64_t v16 = v4 + v15;
    uint64_t v17 = (uint64_t)a2 + v15;
    uint64_t v18 = *(void *)v17;
    uint64_t v19 = *(void *)(v17 + 8);
    uint64_t v20 = *(void *)(v17 + 16);
    char v21 = *(unsigned char *)(v17 + 24);
    sub_10000ED40(*(void *)v17, v19, v20, v21);
    *(void *)uint64_t v16 = v18;
    *(void *)(v16 + 8) = v19;
    *(void *)(v16 + 16) = v20;
    *(unsigned char *)(v16 + 24) = v21;
    uint64_t v22 = a3[9];
    uint64_t v23 = a3[10];
    uint64_t v24 = *(void **)((char *)a2 + v22);
    *(void *)(v4 + v22) = v24;
    unint64_t v25 = (void *)(v4 + v23);
    uint64_t v26 = (uint64_t *)((char *)a2 + v23);
    uint64_t v27 = v26[1];
    void *v25 = *v26;
    v25[1] = v27;
    uint64_t v28 = a3[11];
    uint64_t v29 = a3[12];
    uint64_t v30 = *(void **)((char *)a2 + v28);
    *(void *)(v4 + v28) = v30;
    *(unsigned char *)(v4 + v29) = *((unsigned char *)a2 + v29);
    uint64_t v31 = a3[14];
    *(unsigned char *)(v4 + a3[13]) = *((unsigned char *)a2 + a3[13]);
    *(void *)(v4 + v31) = *(uint64_t *)((char *)a2 + v31);
    uint64_t v32 = a3[15];
    uint64_t v33 = v4 + v32;
    uint64_t v34 = (uint64_t)a2 + v32;
    uint64_t v35 = type metadata accessor for NavigationPath();
    uint64_t v74 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 16);
    id v36 = v24;
    swift_bridgeObjectRetain();
    id v37 = v30;
    v74(v33, v34, v35);
    uint64_t v38 = sub_1000063C0(&qword_1001FB490);
    *(void *)(v33 + *(int *)(v38 + 28)) = *(void *)(v34 + *(int *)(v38 + 28));
    uint64_t v39 = a3[16];
    uint64_t v40 = a3[17];
    uint64_t v41 = (void *)(v4 + v39);
    uint64_t v42 = (uint64_t *)((char *)a2 + v39);
    uint64_t v43 = v42[1];
    *uint64_t v41 = *v42;
    v41[1] = v43;
    v41[2] = v42[2];
    uint64_t v44 = v4 + v40;
    uint64_t v45 = (uint64_t)a2 + v40;
    *(unsigned char *)uint64_t v44 = *(unsigned char *)v45;
    *(void *)(v44 + 8) = *(void *)(v45 + 8);
    uint64_t v46 = a3[18];
    uint64_t v47 = a3[19];
    uint64_t v48 = (void *)(v4 + v46);
    unint64_t v49 = (uint64_t *)((char *)a2 + v46);
    uint64_t v50 = v49[1];
    *uint64_t v48 = *v49;
    v48[1] = v50;
    uint64_t v51 = v4 + v47;
    uint64_t v52 = (uint64_t)a2 + v47;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v53 = sub_1000063C0((uint64_t *)&unk_1001FB428);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 16))(v51, v52, v53);
    uint64_t v54 = a3[20];
    uint64_t v55 = a3[21];
    uint64_t v56 = (void *)(v4 + v54);
    uint64_t v57 = (uint64_t *)((char *)a2 + v54);
    uint64_t v58 = v57[1];
    void *v56 = *v57;
    v56[1] = v58;
    uint64_t v59 = v4 + v55;
    uint64_t v60 = (uint64_t)a2 + v55;
    *(unsigned char *)(v59 + 8) = *(unsigned char *)(v60 + 8);
    *(void *)uint64_t v59 = *(void *)v60;
    *(void *)(v59 + 16) = *(void *)(v60 + 16);
    uint64_t v61 = a3[22];
    uint64_t v62 = a3[23];
    uint64_t v63 = v4 + v61;
    uint64_t v64 = (uint64_t)a2 + v61;
    *(unsigned char *)uint64_t v63 = *(unsigned char *)v64;
    *(void *)(v63 + 8) = *(void *)(v64 + 8);
    unint64_t v65 = (void *)(v4 + v62);
    unint64_t v66 = (uint64_t *)((char *)a2 + v62);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1000063C0(&qword_1001FB420);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v67 = type metadata accessor for UserInterfaceSizeClass();
      uint64_t v68 = *(void *)(v67 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v68 + 48))(v66, 1, v67))
      {
        uint64_t v69 = sub_1000063C0(&qword_1001FB020);
        memcpy(v65, v66, *(void *)(*(void *)(v69 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v68 + 16))(v65, v66, v67);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v68 + 56))(v65, 0, 1, v67);
      }
    }
    else
    {
      *unint64_t v65 = *v66;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v70 = a3[24];
    uint64_t v71 = v4 + v70;
    uint64_t v72 = (uint64_t)a2 + v70;
    *(unsigned char *)uint64_t v71 = *(unsigned char *)v72;
    *(void *)(v71 + 8) = *(void *)(v72 + 8);
    *(unsigned char *)(v71 + 16) = *(unsigned char *)(v72 + 16);
  }
  swift_retain();
  return v4;
}

uint64_t destroy for WritingToolsView(uint64_t a1, int *a2)
{
  swift_release();
  j__swift_release();
  uint64_t v4 = a1 + a2[6];
  sub_1000063C0((uint64_t *)&unk_1001FAE30);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  swift_unknownObjectWeakDestroy();
  sub_10000ED74(*(void *)(a1 + a2[8]), *(void *)(a1 + a2[8] + 8), *(void *)(a1 + a2[8] + 16), *(unsigned char *)(a1 + a2[8] + 24));

  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + a2[15];
  uint64_t v7 = type metadata accessor for NavigationPath();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  sub_1000063C0(&qword_1001FB490);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v8 = a1 + a2[19];
  uint64_t v9 = sub_1000063C0((uint64_t *)&unk_1001FB428);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v10 = a1 + a2[23];
  sub_1000063C0(&qword_1001FB420);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = type metadata accessor for UserInterfaceSizeClass();
    uint64_t v12 = *(void *)(v11 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11)) {
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
    }
  }
  else
  {
    swift_release();
  }

  return swift_release();
}

uint64_t initializeWithCopy for WritingToolsView(uint64_t a1, uint64_t a2, int *a3)
{
  char v6 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v6;
  uint64_t v7 = *(void *)(a2 + 16);
  char v8 = *(unsigned char *)(a2 + 24);
  swift_retain();
  j__swift_retain();
  *(void *)(a1 + 16) = v7;
  *(unsigned char *)(a1 + 24) = v8;
  uint64_t v9 = a3[6];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (void *)(a2 + v9);
  sub_1000063C0((uint64_t *)&unk_1001FAE30);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
  }
  else
  {
    void *v10 = *v11;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  swift_unknownObjectWeakCopyInit();
  uint64_t v13 = a3[8];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = *(void *)v15;
  uint64_t v17 = *(void *)(v15 + 8);
  uint64_t v18 = *(void *)(v15 + 16);
  char v19 = *(unsigned char *)(v15 + 24);
  sub_10000ED40(*(void *)v15, v17, v18, v19);
  *(void *)uint64_t v14 = v16;
  *(void *)(v14 + 8) = v17;
  *(void *)(v14 + 16) = v18;
  *(unsigned char *)(v14 + 24) = v19;
  uint64_t v20 = a3[9];
  uint64_t v21 = a3[10];
  uint64_t v22 = *(void **)(a2 + v20);
  *(void *)(a1 + v20) = v22;
  uint64_t v23 = (void *)(a1 + v21);
  uint64_t v24 = (void *)(a2 + v21);
  uint64_t v25 = v24[1];
  *uint64_t v23 = *v24;
  v23[1] = v25;
  uint64_t v26 = a3[11];
  uint64_t v27 = a3[12];
  uint64_t v28 = *(void **)(a2 + v26);
  *(void *)(a1 + v26) = v28;
  *(unsigned char *)(a1 + v27) = *(unsigned char *)(a2 + v27);
  uint64_t v29 = a3[14];
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  *(void *)(a1 + v29) = *(void *)(a2 + v29);
  uint64_t v30 = a3[15];
  uint64_t v31 = a1 + v30;
  uint64_t v32 = a2 + v30;
  uint64_t v33 = type metadata accessor for NavigationPath();
  uint64_t v72 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 16);
  id v34 = v22;
  swift_bridgeObjectRetain();
  id v35 = v28;
  v72(v31, v32, v33);
  uint64_t v36 = sub_1000063C0(&qword_1001FB490);
  *(void *)(v31 + *(int *)(v36 + 28)) = *(void *)(v32 + *(int *)(v36 + 28));
  uint64_t v37 = a3[16];
  uint64_t v38 = a3[17];
  uint64_t v39 = (void *)(a1 + v37);
  uint64_t v40 = (void *)(a2 + v37);
  uint64_t v41 = v40[1];
  void *v39 = *v40;
  v39[1] = v41;
  v39[2] = v40[2];
  uint64_t v42 = a1 + v38;
  uint64_t v43 = a2 + v38;
  *(unsigned char *)uint64_t v42 = *(unsigned char *)v43;
  *(void *)(v42 + 8) = *(void *)(v43 + 8);
  uint64_t v44 = a3[18];
  uint64_t v45 = a3[19];
  uint64_t v46 = (void *)(a1 + v44);
  uint64_t v47 = (void *)(a2 + v44);
  uint64_t v48 = v47[1];
  *uint64_t v46 = *v47;
  v46[1] = v48;
  uint64_t v49 = a1 + v45;
  uint64_t v50 = a2 + v45;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v51 = sub_1000063C0((uint64_t *)&unk_1001FB428);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 16))(v49, v50, v51);
  uint64_t v52 = a3[20];
  uint64_t v53 = a3[21];
  uint64_t v54 = (void *)(a1 + v52);
  uint64_t v55 = (void *)(a2 + v52);
  uint64_t v56 = v55[1];
  *uint64_t v54 = *v55;
  v54[1] = v56;
  uint64_t v57 = a1 + v53;
  uint64_t v58 = a2 + v53;
  *(unsigned char *)(v57 + 8) = *(unsigned char *)(v58 + 8);
  *(void *)uint64_t v57 = *(void *)v58;
  *(void *)(v57 + 16) = *(void *)(v58 + 16);
  uint64_t v59 = a3[22];
  uint64_t v60 = a3[23];
  uint64_t v61 = a1 + v59;
  uint64_t v62 = a2 + v59;
  *(unsigned char *)uint64_t v61 = *(unsigned char *)v62;
  *(void *)(v61 + 8) = *(void *)(v62 + 8);
  uint64_t v63 = (void *)(a1 + v60);
  uint64_t v64 = (void *)(a2 + v60);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1000063C0(&qword_1001FB420);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v65 = type metadata accessor for UserInterfaceSizeClass();
    uint64_t v66 = *(void *)(v65 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v66 + 48))(v64, 1, v65))
    {
      uint64_t v67 = sub_1000063C0(&qword_1001FB020);
      memcpy(v63, v64, *(void *)(*(void *)(v67 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v66 + 16))(v63, v64, v65);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v66 + 56))(v63, 0, 1, v65);
    }
  }
  else
  {
    *uint64_t v63 = *v64;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v68 = a3[24];
  uint64_t v69 = a1 + v68;
  uint64_t v70 = a2 + v68;
  *(unsigned char *)uint64_t v69 = *(unsigned char *)v70;
  *(void *)(v69 + 8) = *(void *)(v70 + 8);
  *(unsigned char *)(v69 + 16) = *(unsigned char *)(v70 + 16);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for WritingToolsView(uint64_t a1, uint64_t a2, int *a3)
{
  char v6 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v6;
  swift_retain();
  swift_release();
  uint64_t v7 = *(void *)(a2 + 16);
  char v8 = *(unsigned char *)(a2 + 24);
  j__swift_retain();
  *(void *)(a1 + 16) = v7;
  *(unsigned char *)(a1 + 24) = v8;
  j__swift_release();
  if (a1 != a2)
  {
    uint64_t v9 = a3[6];
    uint64_t v10 = (void *)(a1 + v9);
    uint64_t v11 = (void *)(a2 + v9);
    sub_10002784C(a1 + v9, (uint64_t *)&unk_1001FAE30);
    sub_1000063C0((uint64_t *)&unk_1001FAE30);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      void *v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  swift_unknownObjectWeakCopyAssign();
  uint64_t v13 = a3[8];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = *(void *)v15;
  uint64_t v17 = *(void *)(v15 + 8);
  uint64_t v18 = *(void *)(v15 + 16);
  char v19 = *(unsigned char *)(v15 + 24);
  sub_10000ED40(*(void *)v15, v17, v18, v19);
  uint64_t v20 = *(void *)v14;
  uint64_t v21 = *(void *)(v14 + 8);
  uint64_t v22 = *(void *)(v14 + 16);
  *(void *)uint64_t v14 = v16;
  *(void *)(v14 + 8) = v17;
  *(void *)(v14 + 16) = v18;
  char v23 = *(unsigned char *)(v14 + 24);
  *(unsigned char *)(v14 + 24) = v19;
  sub_10000ED74(v20, v21, v22, v23);
  uint64_t v24 = a3[9];
  uint64_t v25 = *(void **)(a2 + v24);
  uint64_t v26 = *(void **)(a1 + v24);
  *(void *)(a1 + v24) = v25;
  id v27 = v25;

  uint64_t v28 = a3[10];
  uint64_t v29 = (void *)(a1 + v28);
  uint64_t v30 = (void *)(a2 + v28);
  void *v29 = *v30;
  v29[1] = v30[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v31 = a3[11];
  uint64_t v32 = *(void **)(a1 + v31);
  uint64_t v33 = *(void **)(a2 + v31);
  *(void *)(a1 + v31) = v33;
  id v34 = v33;

  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  uint64_t v35 = a3[15];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  uint64_t v38 = type metadata accessor for NavigationPath();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 24))(v36, v37, v38);
  uint64_t v39 = sub_1000063C0(&qword_1001FB490);
  *(void *)(v36 + *(int *)(v39 + 28)) = *(void *)(v37 + *(int *)(v39 + 28));
  swift_retain();
  swift_release();
  uint64_t v40 = a3[16];
  uint64_t v41 = (void *)(a1 + v40);
  uint64_t v42 = a2 + v40;
  *uint64_t v41 = *(void *)(a2 + v40);
  v41[1] = *(void *)(a2 + v40 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v41[2] = *(void *)(v42 + 16);
  swift_retain();
  swift_release();
  uint64_t v43 = a3[17];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  *(unsigned char *)uint64_t v44 = *(unsigned char *)v45;
  *(void *)(v44 + 8) = *(void *)(v45 + 8);
  swift_retain();
  swift_release();
  uint64_t v46 = a3[18];
  uint64_t v47 = a1 + v46;
  uint64_t v48 = a2 + v46;
  *(void *)(a1 + v46) = *(void *)(a2 + v46);
  swift_retain();
  swift_release();
  *(void *)(v47 + 8) = *(void *)(v48 + 8);
  swift_retain();
  swift_release();
  uint64_t v49 = a3[19];
  uint64_t v50 = a1 + v49;
  uint64_t v51 = a2 + v49;
  uint64_t v52 = sub_1000063C0((uint64_t *)&unk_1001FB428);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 24))(v50, v51, v52);
  uint64_t v53 = a3[20];
  uint64_t v54 = a1 + v53;
  uint64_t v55 = a2 + v53;
  *(void *)(a1 + v53) = *(void *)(a2 + v53);
  swift_retain();
  swift_release();
  *(void *)(v54 + 8) = *(void *)(v55 + 8);
  swift_retain();
  swift_release();
  uint64_t v56 = a3[21];
  uint64_t v57 = a1 + v56;
  uint64_t v58 = (uint64_t *)(a2 + v56);
  uint64_t v59 = *v58;
  *(unsigned char *)(v57 + 8) = *((unsigned char *)v58 + 8);
  *(void *)uint64_t v57 = v59;
  *(void *)(v57 + 16) = v58[2];
  swift_retain();
  swift_release();
  uint64_t v60 = a3[22];
  uint64_t v61 = a1 + v60;
  uint64_t v62 = a2 + v60;
  *(unsigned char *)uint64_t v61 = *(unsigned char *)v62;
  *(void *)(v61 + 8) = *(void *)(v62 + 8);
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v63 = a3[23];
    uint64_t v64 = (void *)(a1 + v63);
    uint64_t v65 = (void *)(a2 + v63);
    sub_10002784C(a1 + v63, &qword_1001FB420);
    sub_1000063C0(&qword_1001FB420);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v66 = type metadata accessor for UserInterfaceSizeClass();
      uint64_t v67 = *(void *)(v66 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v67 + 48))(v65, 1, v66))
      {
        uint64_t v68 = sub_1000063C0(&qword_1001FB020);
        memcpy(v64, v65, *(void *)(*(void *)(v68 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v67 + 16))(v64, v65, v66);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v67 + 56))(v64, 0, 1, v66);
      }
    }
    else
    {
      *uint64_t v64 = *v65;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v69 = a3[24];
  uint64_t v70 = a1 + v69;
  uint64_t v71 = a2 + v69;
  *(unsigned char *)uint64_t v70 = *(unsigned char *)(a2 + v69);
  *(void *)(v70 + 8) = *(void *)(a2 + v69 + 8);
  swift_retain();
  swift_release();
  *(unsigned char *)(v70 + 16) = *(unsigned char *)(v71 + 16);
  return a1;
}

uint64_t initializeWithTake for WritingToolsView(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v6 = a3[6];
  uint64_t v7 = (void *)(a1 + v6);
  char v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_1000063C0((uint64_t *)&unk_1001FAE30);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  swift_unknownObjectWeakTakeInit();
  uint64_t v11 = a3[8];
  uint64_t v12 = a3[9];
  uint64_t v13 = (_OWORD *)(a1 + v11);
  uint64_t v14 = (_OWORD *)(a2 + v11);
  *(_OWORD *)((char *)v13 + 9) = *(_OWORD *)((char *)v14 + 9);
  *uint64_t v13 = *v14;
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  uint64_t v15 = a3[11];
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
  *(void *)(a1 + v15) = *(void *)(a2 + v15);
  uint64_t v16 = a3[13];
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  *(unsigned char *)(a1 + v16) = *(unsigned char *)(a2 + v16);
  uint64_t v17 = a3[15];
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = type metadata accessor for NavigationPath();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
  uint64_t v21 = sub_1000063C0(&qword_1001FB490);
  *(void *)(v18 + *(int *)(v21 + 28)) = *(void *)(v19 + *(int *)(v21 + 28));
  uint64_t v22 = a3[16];
  uint64_t v23 = a3[17];
  uint64_t v24 = a1 + v22;
  uint64_t v25 = a2 + v22;
  *(void *)(v24 + 16) = *(void *)(v25 + 16);
  *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
  *(_OWORD *)(a1 + v23) = *(_OWORD *)(a2 + v23);
  uint64_t v26 = a3[19];
  *(_OWORD *)(a1 + a3[18]) = *(_OWORD *)(a2 + a3[18]);
  uint64_t v27 = a1 + v26;
  uint64_t v28 = a2 + v26;
  uint64_t v29 = sub_1000063C0((uint64_t *)&unk_1001FB428);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 32))(v27, v28, v29);
  uint64_t v30 = a3[21];
  *(_OWORD *)(a1 + a3[20]) = *(_OWORD *)(a2 + a3[20]);
  uint64_t v31 = a1 + v30;
  uint64_t v32 = a2 + v30;
  *(void *)(v31 + 16) = *(void *)(v32 + 16);
  *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
  uint64_t v33 = a3[23];
  *(_OWORD *)(a1 + a3[22]) = *(_OWORD *)(a2 + a3[22]);
  id v34 = (void *)(a1 + v33);
  uint64_t v35 = (const void *)(a2 + v33);
  uint64_t v36 = sub_1000063C0(&qword_1001FB420);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v37 = type metadata accessor for UserInterfaceSizeClass();
    uint64_t v38 = *(void *)(v37 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v38 + 48))(v35, 1, v37))
    {
      uint64_t v39 = sub_1000063C0(&qword_1001FB020);
      memcpy(v34, v35, *(void *)(*(void *)(v39 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v38 + 32))(v34, v35, v37);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v38 + 56))(v34, 0, 1, v37);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
  }
  uint64_t v40 = a3[24];
  uint64_t v41 = a1 + v40;
  uint64_t v42 = a2 + v40;
  *(_OWORD *)uint64_t v41 = *(_OWORD *)v42;
  *(unsigned char *)(v41 + 16) = *(unsigned char *)(v42 + 16);
  return a1;
}

uint64_t assignWithTake for WritingToolsView(uint64_t a1, uint64_t a2, int *a3)
{
  char v6 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v6;
  swift_release();
  char v7 = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = v7;
  j__swift_release();
  if (a1 != a2)
  {
    uint64_t v8 = a3[6];
    uint64_t v9 = (void *)(a1 + v8);
    uint64_t v10 = (const void *)(a2 + v8);
    sub_10002784C(a1 + v8, (uint64_t *)&unk_1001FAE30);
    uint64_t v11 = sub_1000063C0((uint64_t *)&unk_1001FAE30);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
  }
  swift_unknownObjectWeakTakeAssign();
  uint64_t v13 = a3[8];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = *(void *)(v15 + 16);
  char v17 = *(unsigned char *)(v15 + 24);
  uint64_t v18 = *(void *)v14;
  uint64_t v19 = *(void *)(v14 + 8);
  uint64_t v20 = *(void *)(v14 + 16);
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  *(void *)(v14 + 16) = v16;
  char v21 = *(unsigned char *)(v14 + 24);
  *(unsigned char *)(v14 + 24) = v17;
  sub_10000ED74(v18, v19, v20, v21);
  uint64_t v22 = a3[9];
  uint64_t v23 = *(void **)(a1 + v22);
  *(void *)(a1 + v22) = *(void *)(a2 + v22);

  uint64_t v24 = a3[10];
  uint64_t v25 = (void *)(a1 + v24);
  uint64_t v26 = (uint64_t *)(a2 + v24);
  uint64_t v28 = *v26;
  uint64_t v27 = v26[1];
  void *v25 = v28;
  v25[1] = v27;
  swift_bridgeObjectRelease();
  uint64_t v29 = a3[11];
  uint64_t v30 = *(void **)(a1 + v29);
  *(void *)(a1 + v29) = *(void *)(a2 + v29);

  uint64_t v31 = a3[13];
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  *(unsigned char *)(a1 + v31) = *(unsigned char *)(a2 + v31);
  uint64_t v32 = a3[15];
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  uint64_t v33 = a1 + v32;
  uint64_t v34 = a2 + v32;
  uint64_t v35 = type metadata accessor for NavigationPath();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 40))(v33, v34, v35);
  uint64_t v36 = sub_1000063C0(&qword_1001FB490);
  *(void *)(v33 + *(int *)(v36 + 28)) = *(void *)(v34 + *(int *)(v36 + 28));
  swift_release();
  uint64_t v37 = a3[16];
  uint64_t v38 = (void *)(a1 + v37);
  uint64_t v39 = a2 + v37;
  uint64_t v40 = *(void *)(a2 + v37 + 8);
  *uint64_t v38 = *(void *)(a2 + v37);
  v38[1] = v40;
  swift_bridgeObjectRelease();
  v38[2] = *(void *)(v39 + 16);
  swift_release();
  uint64_t v41 = a3[17];
  uint64_t v42 = a1 + v41;
  uint64_t v43 = a2 + v41;
  *(unsigned char *)uint64_t v42 = *(unsigned char *)v43;
  *(void *)(v42 + 8) = *(void *)(v43 + 8);
  swift_release();
  uint64_t v44 = a3[18];
  uint64_t v45 = a1 + v44;
  uint64_t v46 = a2 + v44;
  *(void *)(a1 + v44) = *(void *)(a2 + v44);
  swift_release();
  *(void *)(v45 + 8) = *(void *)(v46 + 8);
  swift_release();
  uint64_t v47 = a3[19];
  uint64_t v48 = a1 + v47;
  uint64_t v49 = a2 + v47;
  uint64_t v50 = sub_1000063C0((uint64_t *)&unk_1001FB428);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 40))(v48, v49, v50);
  uint64_t v51 = a3[20];
  uint64_t v52 = a1 + v51;
  uint64_t v53 = a2 + v51;
  *(void *)(a1 + v51) = *(void *)(a2 + v51);
  swift_release();
  *(void *)(v52 + 8) = *(void *)(v53 + 8);
  swift_release();
  uint64_t v54 = a3[21];
  uint64_t v55 = a1 + v54;
  uint64_t v56 = a2 + v54;
  *(void *)uint64_t v55 = *(void *)v56;
  *(unsigned char *)(v55 + 8) = *(unsigned char *)(v56 + 8);
  *(void *)(v55 + 16) = *(void *)(v56 + 16);
  swift_release();
  uint64_t v57 = a3[22];
  uint64_t v58 = a1 + v57;
  uint64_t v59 = a2 + v57;
  *(unsigned char *)uint64_t v58 = *(unsigned char *)v59;
  *(void *)(v58 + 8) = *(void *)(v59 + 8);
  swift_release();
  if (a1 != a2)
  {
    uint64_t v60 = a3[23];
    uint64_t v61 = (void *)(a1 + v60);
    uint64_t v62 = (const void *)(a2 + v60);
    sub_10002784C(a1 + v60, &qword_1001FB420);
    uint64_t v63 = sub_1000063C0(&qword_1001FB420);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v64 = type metadata accessor for UserInterfaceSizeClass();
      uint64_t v65 = *(void *)(v64 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v65 + 48))(v62, 1, v64))
      {
        uint64_t v66 = sub_1000063C0(&qword_1001FB020);
        memcpy(v61, v62, *(void *)(*(void *)(v66 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v65 + 32))(v61, v62, v64);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v65 + 56))(v61, 0, 1, v64);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v61, v62, *(void *)(*(void *)(v63 - 8) + 64));
    }
  }
  uint64_t v67 = a3[24];
  uint64_t v68 = a1 + v67;
  uint64_t v69 = a2 + v67;
  *(unsigned char *)uint64_t v68 = *(unsigned char *)v69;
  *(void *)(v68 + 8) = *(void *)(v69 + 8);
  swift_release();
  *(unsigned char *)(v68 + 16) = *(unsigned char *)(v69 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for WritingToolsView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10002431C);
}

uint64_t sub_10002431C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000063C0(&qword_1001FD3A0);
  if (*(_DWORD *)(*(void *)(v6 - 8) + 84) == a2)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)(v6 - 8);
    uint64_t v9 = a3[6];
LABEL_11:
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    return v14(a1 + v9, a2, v7);
  }
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + a3[9]);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v12 = sub_1000063C0(&qword_1001FB490);
    if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
    {
      uint64_t v7 = v12;
      uint64_t v8 = *(void *)(v12 - 8);
      uint64_t v9 = a3[15];
      goto LABEL_11;
    }
    uint64_t v13 = sub_1000063C0((uint64_t *)&unk_1001FB428);
    if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a2)
    {
      uint64_t v7 = v13;
      uint64_t v8 = *(void *)(v13 - 8);
      uint64_t v9 = a3[19];
      goto LABEL_11;
    }
    uint64_t v15 = sub_1000063C0(&qword_1001FB610);
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
    uint64_t v17 = v15;
    uint64_t v18 = a1 + a3[23];
    return v16(v18, a2, v17);
  }
}

uint64_t storeEnumTagSinglePayload for WritingToolsView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100024508);
}

uint64_t sub_100024508(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result = sub_1000063C0(&qword_1001FD3A0);
  if (*(_DWORD *)(*(void *)(result - 8) + 84) == a3)
  {
    uint64_t v9 = result;
    uint64_t v10 = *(void *)(result - 8);
    uint64_t v11 = a4[6];
LABEL_9:
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v14(a1 + v11, a2, a2, v9);
  }
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[9]) = (a2 - 1);
    return result;
  }
  uint64_t v12 = sub_1000063C0(&qword_1001FB490);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[15];
    goto LABEL_9;
  }
  uint64_t v13 = sub_1000063C0((uint64_t *)&unk_1001FB428);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v9 = v13;
    uint64_t v10 = *(void *)(v13 - 8);
    uint64_t v11 = a4[19];
    goto LABEL_9;
  }
  uint64_t v15 = sub_1000063C0(&qword_1001FB610);
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  uint64_t v17 = v15;
  uint64_t v18 = a1 + a4[23];

  return v16(v18, a2, a2, v17);
}

void sub_1000246E0()
{
  sub_10002493C(319, (unint64_t *)&qword_1001FB680, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v0 <= 0x3F)
  {
    sub_10002493C(319, &qword_1001FB688, (uint64_t (*)(uint64_t))&type metadata accessor for NavigationPath, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for State);
    if (v1 <= 0x3F)
    {
      sub_10002493C(319, &qword_1001FB690, (uint64_t (*)(uint64_t))type metadata accessor for WritingToolsModel, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Bindable);
      if (v2 <= 0x3F)
      {
        sub_1000249A0();
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_10002493C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1000249A0()
{
  if (!qword_1001FB698)
  {
    sub_100006C14(&qword_1001FB020);
    unint64_t v0 = type metadata accessor for Environment.Content();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1001FB698);
    }
  }
}

uint64_t sub_1000249FC()
{
  return swift_getOpaqueTypeConformance2();
}

_WORD *initializeBufferWithCopyOfBuffer for PanelBackground(_WORD *result, _WORD *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for PanelBackground(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 65281 <= 0xFFFEFFFF) {
    int v2 = 2;
  }
  else {
    int v2 = 4;
  }
  if (a2 + 65281 < 0xFF0000) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 16)) - 65281;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 16)) - 65281;
    }
    int v4 = *((unsigned __int8 *)a1 + 2);
    if (*((unsigned char *)a1 + 2)) {
      return (*a1 | (v4 << 16)) - 65281;
    }
  }
LABEL_17:
  unsigned int v6 = *(unsigned __int8 *)a1;
  BOOL v7 = v6 >= 2;
  int v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for PanelBackground(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65281 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65281 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 16) + 1;
    *(_WORD *)uint64_t result = a2 - 255;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100024D04);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PanelBackground()
{
  return &type metadata for PanelBackground;
}

uint64_t sub_100024D3C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100024D58(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_release();
  }
  return result;
}

uint64_t sub_100024D64(uint64_t a1, char a2)
{
  if (a2 != -1) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_100024D78(uint64_t a1, char a2)
{
  if (a2 != -1) {
    return swift_release();
  }
  return result;
}

uint64_t sub_100024D8C()
{
  return sub_1001369D8(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32));
}

uint64_t sub_100024DAC(uint64_t a1)
{
  return sub_10001FC5C(a1, *(void **)(v1 + 16));
}

uint64_t sub_100024DB4(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  if (a4 != -1) {
    return sub_10000ED74(result, a2, a3, a4);
  }
  return result;
}

uint64_t sub_100024DCC(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for WritingToolsView() - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  int v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_100027FEC;
  return sub_10001E228(a1, v5, v6, v7);
}

uint64_t sub_100024EBC(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for WritingToolsView() - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  int v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_100027FEC;
  return sub_10001E40C(a1, v5, v6, v7);
}

uint64_t sub_100024FAC(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for WritingToolsView() - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  int v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_100027FEC;
  return sub_10001E228(a1, v5, v6, v7);
}

uint64_t sub_10002509C(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for WritingToolsView() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = v1 + v5;
  uint64_t v9 = (uint64_t *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = *v9;
  uint64_t v11 = v9[1];
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v12;
  void *v12 = v2;
  v12[1] = sub_100027FEC;
  return sub_10001DBBC(a1, v6, v7, v8, v10, v11);
}

uint64_t sub_1000251D0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

unint64_t sub_100025244()
{
  unint64_t result = qword_1001FB7E8;
  if (!qword_1001FB7E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FB7E8);
  }
  return result;
}

unint64_t sub_100025298()
{
  unint64_t result = qword_1001FB7F0;
  if (!qword_1001FB7F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FB7F0);
  }
  return result;
}

uint64_t sub_1000252F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for WritingToolsView() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_1000143AC(a1, v6, a2);
}

uint64_t sub_100025374()
{
  uint64_t v2 = *(void *)(type metadata accessor for WritingToolsView() - 8);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_100027FEC;
  return sub_10001407C(v3);
}

uint64_t sub_100025444(uint64_t a1, uint64_t a2)
{
  return sub_10002674C(a1, a2, sub_100013804);
}

uint64_t sub_100025464()
{
  uint64_t v2 = *(void *)(type metadata accessor for WritingToolsView() - 8);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_100027FEC;
  return sub_10001407C(v3);
}

uint64_t sub_100025534()
{
  uint64_t v2 = *(void *)(type metadata accessor for WritingToolsView() - 8);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_100027FEC;
  return sub_100013558(v3);
}

uint64_t sub_10002560C()
{
  uint64_t v1 = (int *)type metadata accessor for WritingToolsView();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  swift_unknownObjectRelease();
  uint64_t v5 = v0 + v3;
  swift_release();
  j__swift_release();
  uint64_t v6 = v0 + v3 + v1[6];
  sub_1000063C0((uint64_t *)&unk_1001FAE30);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  swift_unknownObjectWeakDestroy();
  sub_10000ED74(*(void *)(v5 + v1[8]), *(void *)(v5 + v1[8] + 8), *(void *)(v5 + v1[8] + 16), *(unsigned char *)(v5 + v1[8] + 24));

  swift_bridgeObjectRelease();
  uint64_t v8 = v5 + v1[15];
  uint64_t v9 = type metadata accessor for NavigationPath();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  sub_1000063C0(&qword_1001FB490);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v10 = v5 + v1[19];
  uint64_t v11 = sub_1000063C0((uint64_t *)&unk_1001FB428);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v12 = v5 + v1[23];
  sub_1000063C0(&qword_1001FB420);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v13 = type metadata accessor for UserInterfaceSizeClass();
    uint64_t v14 = *(void *)(v13 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13)) {
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
    }
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16, v2 | 7);
}

uint64_t sub_100025998(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for WritingToolsView() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = v1 + v5;
  uint64_t v9 = (uint64_t *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = *v9;
  uint64_t v11 = v9[1];
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v12;
  void *v12 = v2;
  v12[1] = sub_100027FEC;
  return sub_10001F3B0(a1, v6, v7, v8, v10, v11);
}

uint64_t sub_100025ACC()
{
  return sub_10002703C();
}

uint64_t sub_100025AE8(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for WritingToolsView() - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_100027FEC;
  return sub_10001F1C4(a1, v5, v6, v7);
}

uint64_t sub_100025BD4@<X0>(uint64_t a1@<X8>)
{
  return sub_100014BAC(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

unint64_t sub_100025BDC()
{
  unint64_t result = qword_1001FB8C0;
  if (!qword_1001FB8C0)
  {
    sub_100006C14(&qword_1001FB8B8);
    sub_100025C7C();
    sub_100027F2C(&qword_1001FB5E0, &qword_1001FB5E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FB8C0);
  }
  return result;
}

unint64_t sub_100025C7C()
{
  unint64_t result = qword_1001FB8C8;
  if (!qword_1001FB8C8)
  {
    sub_100006C14(&qword_1001FB8D0);
    sub_100025CF8();
    sub_100025EB4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FB8C8);
  }
  return result;
}

unint64_t sub_100025CF8()
{
  unint64_t result = qword_1001FB8D8;
  if (!qword_1001FB8D8)
  {
    sub_100006C14(&qword_1001FB8E0);
    sub_100025DA4();
    sub_100027D14(&qword_1001FB910, (void (*)(uint64_t))type metadata accessor for PreferredContentSizeModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FB8D8);
  }
  return result;
}

unint64_t sub_100025DA4()
{
  unint64_t result = qword_1001FB8E8;
  if (!qword_1001FB8E8)
  {
    sub_100006C14(&qword_1001FB8F0);
    sub_100006C14(&qword_1001FB8F8);
    sub_100006C14(&qword_1001FB900);
    sub_100027F2C(&qword_1001FB908, &qword_1001FB900);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FB8E8);
  }
  return result;
}

unint64_t sub_100025EB4()
{
  unint64_t result = qword_1001FB918;
  if (!qword_1001FB918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FB918);
  }
  return result;
}

unint64_t sub_100025F08()
{
  unint64_t result = qword_1001FB928;
  if (!qword_1001FB928)
  {
    sub_100006C14(&qword_1001FB8A0);
    sub_100006C14(&qword_1001FB890);
    sub_100027F2C(&qword_1001FB920, &qword_1001FB890);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FB928);
  }
  return result;
}

uint64_t sub_100025FE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for WritingToolsView() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_10001A648(a1, v6, a2);
}

unint64_t sub_100026068()
{
  unint64_t result = qword_1001FB938;
  if (!qword_1001FB938)
  {
    sub_100006C14(&qword_1001FB930);
    sub_100026108();
    sub_100027F2C(&qword_1001FB5E0, &qword_1001FB5E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FB938);
  }
  return result;
}

unint64_t sub_100026108()
{
  unint64_t result = qword_1001FB940;
  if (!qword_1001FB940)
  {
    sub_100006C14(&qword_1001FB948);
    sub_10002617C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FB940);
  }
  return result;
}

unint64_t sub_10002617C()
{
  unint64_t result = qword_1001FB950;
  if (!qword_1001FB950)
  {
    sub_100006C14(&qword_1001FB958);
    sub_1000261F8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FB950);
  }
  return result;
}

unint64_t sub_1000261F8()
{
  unint64_t result = qword_1001FB960;
  if (!qword_1001FB960)
  {
    sub_100006C14(&qword_1001FB968);
    sub_100026274();
    sub_100026550();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FB960);
  }
  return result;
}

unint64_t sub_100026274()
{
  unint64_t result = qword_1001FB970;
  if (!qword_1001FB970)
  {
    sub_100006C14(&qword_1001FB978);
    sub_1000224B4(&qword_1001FB980, &qword_1001FB988, (void (*)(void))sub_100021C3C);
    sub_10002631C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FB970);
  }
  return result;
}

unint64_t sub_10002631C()
{
  unint64_t result = qword_1001FB990;
  if (!qword_1001FB990)
  {
    sub_100006C14(&qword_1001FB998);
    sub_1000224B4(&qword_1001FB9A0, &qword_1001FB9A8, (void (*)(void))sub_1000263F8);
    sub_1000224B4(&qword_1001FB9C0, &qword_1001FB9C8, (void (*)(void))sub_1000264A4);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FB990);
  }
  return result;
}

unint64_t sub_1000263F8()
{
  unint64_t result = qword_1001FB9B0;
  if (!qword_1001FB9B0)
  {
    sub_100006C14(&qword_1001FB9B8);
    sub_100027D14(&qword_1001FB530, (void (*)(uint64_t))type metadata accessor for RewritingView);
    sub_100021D94();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FB9B0);
  }
  return result;
}

unint64_t sub_1000264A4()
{
  unint64_t result = qword_1001FB9D0;
  if (!qword_1001FB9D0)
  {
    sub_100006C14(&qword_1001FB9D8);
    sub_100027D14(&qword_1001FB558, (void (*)(uint64_t))type metadata accessor for ModelResponseView);
    sub_100021D94();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FB9D0);
  }
  return result;
}

unint64_t sub_100026550()
{
  unint64_t result = qword_1001FB9E0;
  if (!qword_1001FB9E0)
  {
    sub_100006C14(&qword_1001FB9E8);
    sub_100006C14(&qword_1001FB588);
    type metadata accessor for CompositionModel(255);
    type metadata accessor for CompositionView(255);
    type metadata accessor for WritingToolsModel();
    sub_100027D14(&qword_1001FB590, (void (*)(uint64_t))type metadata accessor for CompositionView);
    sub_100027D14((unint64_t *)&unk_1001FB3F0, (void (*)(uint64_t))type metadata accessor for WritingToolsModel);
    swift_getOpaqueTypeConformance2();
    sub_100027D14((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
    swift_getOpaqueTypeConformance2();
    sub_1000224B4(&qword_1001FB9F0, &qword_1001FB9F8, (void (*)(void))sub_1000222C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FB9E0);
  }
  return result;
}

uint64_t sub_100026734(uint64_t a1, uint64_t a2)
{
  return sub_10002674C(a1, a2, (uint64_t (*)(uint64_t, uint64_t))sub_100013B58);
}

uint64_t sub_10002674C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  return a3(a1, a2);
}

uint64_t sub_1000267D0()
{
  uint64_t v2 = *(void *)(type metadata accessor for WritingToolsView() - 8);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_100027FEC;
  return sub_100013558(v3);
}

uint64_t sub_1000268A0()
{
  uint64_t v1 = *(void *)(type metadata accessor for WritingToolsView() - 8);
  return sub_10001C978(v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)));
}

unint64_t sub_1000268F4()
{
  unint64_t result = qword_1001FBAE0;
  if (!qword_1001FBAE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FBAE0);
  }
  return result;
}

uint64_t sub_10002694C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100026A40(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_100017EF0);
}

uint64_t sub_100026968(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100026A40(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_100018E04);
}

uint64_t sub_100026980(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1000269E0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100026A40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  return a5(a1, a2, a3, a4);
}

uint64_t sub_100026AD4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100026B30(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100026B8C(uint64_t a1)
{
  return a1;
}

uint64_t sub_100026BE0(uint64_t a1)
{
  return a1;
}

uint64_t sub_100026C34@<X0>(uint64_t a1@<X8>)
{
  return sub_1000190CC(*(void *)(v1 + 16), a1);
}

unint64_t sub_100026C3C()
{
  unint64_t result = qword_1001FBB20;
  if (!qword_1001FBB20)
  {
    sub_100006C14(&qword_1001FBB18);
    sub_100027F2C(&qword_1001FBB28, (uint64_t *)&unk_1001FBB30);
    sub_100026CDC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FBB20);
  }
  return result;
}

unint64_t sub_100026CDC()
{
  unint64_t result = qword_1001FDEB0;
  if (!qword_1001FDEB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FDEB0);
  }
  return result;
}

uint64_t sub_100026D40()
{
  return _swift_deallocObject(v0, 17, 7);
}

unsigned char *sub_100026D50(unsigned char *a1)
{
  return sub_1001290BC(a1, *(unsigned char *)(v1 + 16));
}

const char *sub_100026D5C(uint64_t a1, uint64_t a2)
{
  return sub_100017EF0(5, a1, a2, 0);
}

uint64_t sub_100026DE4()
{
  uint64_t v2 = *(void *)(type metadata accessor for WritingToolsView() - 8);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_100027FEC;
  return sub_100018B5C(v3);
}

uint64_t sub_100026EB0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100026F18(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_release();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

unint64_t sub_100026F30()
{
  unint64_t result = qword_1001FBB70;
  if (!qword_1001FBB70)
  {
    sub_100006C14((uint64_t *)&unk_100201E50);
    sub_100027F2C(&qword_1001FBB78, &qword_1001FBB80);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FBB70);
  }
  return result;
}

uint64_t sub_100026FD0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_1000063C0(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10002703C()
{
  return sub_10002E744(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(unsigned char *)(v0 + 48));
}

void sub_100027068()
{
  sub_10002E5B8(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_10002708C()
{
  return sub_10009B164(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_1000270B4()
{
  return sub_10009B6D4(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1000270D8()
{
  return sub_10009B214(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_1000270F8()
{
  return sub_10009CA24(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_100027118(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for WritingToolsView() - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_100027204;
  return sub_10001EE34(a1, v5, v6, v7);
}

uint64_t sub_100027204()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1000272F8(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  if (a4 != -1) {
    return sub_10000ED40(result, a2, a3, a4);
  }
  return result;
}

uint64_t sub_100027320()
{
  return sub_100027C30((uint64_t (*)(uint64_t))sub_100019334);
}

unint64_t sub_100027338()
{
  unint64_t result = qword_1001FBBA8;
  if (!qword_1001FBBA8)
  {
    sub_100006C14((uint64_t *)&unk_1001FBBB0);
    sub_100027F2C((unint64_t *)&unk_1001FD5A0, &qword_1001FBBC0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FBBA8);
  }
  return result;
}

uint64_t sub_1000273DC()
{
  uint64_t v1 = (int *)type metadata accessor for WritingToolsView();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  swift_unknownObjectRelease();
  uint64_t v5 = v0 + v3;
  swift_release();
  j__swift_release();
  uint64_t v6 = v0 + v3 + v1[6];
  sub_1000063C0((uint64_t *)&unk_1001FAE30);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  swift_unknownObjectWeakDestroy();
  sub_10000ED74(*(void *)(v5 + v1[8]), *(void *)(v5 + v1[8] + 8), *(void *)(v5 + v1[8] + 16), *(unsigned char *)(v5 + v1[8] + 24));

  swift_bridgeObjectRelease();
  uint64_t v8 = v5 + v1[15];
  uint64_t v9 = type metadata accessor for NavigationPath();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  sub_1000063C0(&qword_1001FB490);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v10 = v5 + v1[19];
  uint64_t v11 = sub_1000063C0((uint64_t *)&unk_1001FB428);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v12 = v5 + v1[23];
  sub_1000063C0(&qword_1001FB420);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v13 = type metadata accessor for UserInterfaceSizeClass();
    uint64_t v14 = *(void *)(v13 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13)) {
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
    }
  }
  else
  {
    swift_release();
  }
  swift_release();

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_100027750(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for WritingToolsView() - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_100027FEC;
  return sub_10001E9B4(a1, v5, v6, v7);
}

uint64_t sub_10002783C(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_retain();
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_10002784C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_1000063C0(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1000278AC()
{
  uint64_t v1 = (int *)type metadata accessor for WritingToolsView();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v5 = v0 + v3;
  swift_release();
  j__swift_release();
  uint64_t v6 = v0 + v3 + v1[6];
  sub_1000063C0((uint64_t *)&unk_1001FAE30);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  swift_unknownObjectWeakDestroy();
  sub_10000ED74(*(void *)(v5 + v1[8]), *(void *)(v5 + v1[8] + 8), *(void *)(v5 + v1[8] + 16), *(unsigned char *)(v5 + v1[8] + 24));

  swift_bridgeObjectRelease();
  uint64_t v8 = v5 + v1[15];
  uint64_t v9 = type metadata accessor for NavigationPath();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  sub_1000063C0(&qword_1001FB490);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v10 = v5 + v1[19];
  uint64_t v11 = sub_1000063C0((uint64_t *)&unk_1001FB428);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v12 = v5 + v1[23];
  sub_1000063C0(&qword_1001FB420);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v13 = type metadata accessor for UserInterfaceSizeClass();
    uint64_t v14 = *(void *)(v13 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13)) {
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
    }
  }
  else
  {
    swift_release();
  }
  swift_release();

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_100027C18()
{
  return sub_100027C30((uint64_t (*)(uint64_t))sub_100017E50);
}

uint64_t sub_100027C30(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for WritingToolsView() - 8);
  uint64_t v3 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return a1(v3);
}

uint64_t sub_100027CAC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100027D14(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100027D5C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100027DBC(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_100027E0C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_100027E6C()
{
  return sub_100094E8C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

unint64_t sub_100027E8C()
{
  unint64_t result = qword_1001FBC10;
  if (!qword_1001FBC10)
  {
    sub_100006C14(&qword_1001FBC18);
    sub_100027F2C(&qword_1001FBC20, &qword_1001FBC28);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FBC10);
  }
  return result;
}

uint64_t sub_100027F2C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100006C14(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100027F70()
{
  return swift_release();
}

uint64_t sub_100027F8C()
{
  return sub_100020408();
}

uint64_t sub_100027FA4()
{
  return sub_100020654();
}

uint64_t sub_100027FBC()
{
  return sub_100020608();
}

uint64_t sub_100027FD4()
{
  return sub_1000205C0();
}

uint64_t sub_100027FF8()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_1000281F0(v0, qword_100212770);
  sub_10000EBE8(v0, (uint64_t)qword_100212770);
  return Logger.init(subsystem:category:)();
}

uint64_t sub_100028070()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_1000281F0(v0, qword_100212788);
  sub_10000EBE8(v0, (uint64_t)qword_100212788);
  return Logger.init(subsystem:category:)();
}

uint64_t sub_1000280F0()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_1000281F0(v0, qword_1002127A0);
  sub_10000EBE8(v0, (uint64_t)qword_1002127A0);
  return Logger.init(subsystem:category:)();
}

uint64_t sub_10002816C()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_1000281F0(v0, qword_1002127B8);
  sub_10000EBE8(v0, (uint64_t)qword_1002127B8);
  return Logger.init(subsystem:category:)();
}

uint64_t *sub_1000281F0(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_100028254()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_1000281F0(v0, qword_1002127D0);
  sub_10000EBE8(v0, (uint64_t)qword_1002127D0);
  return Logger.init(subsystem:category:)();
}

uint64_t sub_1000282D8()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_1000281F0(v0, qword_1002127E8);
  sub_10000EBE8(v0, (uint64_t)qword_1002127E8);
  return Logger.init(subsystem:category:)();
}

uint64_t sub_10002835C()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_1000281F0(v0, qword_100212800);
  sub_10000EBE8(v0, (uint64_t)qword_100212800);
  return Logger.init(subsystem:category:)();
}

uint64_t sub_1000283D4()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_1000281F0(v0, qword_100212818);
  sub_10000EBE8(v0, (uint64_t)qword_100212818);
  return Logger.init(subsystem:category:)();
}

uint64_t sub_100028458(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v24 = a1;
  uint64_t v25 = a2;
  uint64_t v4 = sub_1000063C0(&qword_1001FBCD0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  uint64_t v23 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000063C0(&qword_1001FBCD8);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000063C0(&qword_1001FF820);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a3, v7);
  uint64_t v15 = v4;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v24, v4);
  unint64_t v16 = (*(unsigned __int8 *)(v8 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v17 = (v9 + *(unsigned __int8 *)(v5 + 80) + v16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v18 = (char *)swift_allocObject();
  *((void *)v18 + 2) = 0;
  *((void *)v18 + 3) = 0;
  uint64_t v19 = v25;
  *((void *)v18 + 4) = v25;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v18[v16], v10, v7);
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v18[v17], v23, v15);
  id v20 = v19;
  sub_1001228D0((uint64_t)v13, (uint64_t)&unk_1001FBCE8, (uint64_t)v18);
  return swift_release();
}

uint64_t sub_100028710(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[35] = a5;
  v6[36] = a6;
  v6[34] = a4;
  uint64_t v7 = sub_1000063C0(&qword_1001FBCF0);
  v6[37] = v7;
  v6[38] = *(void *)(v7 - 8);
  v6[39] = swift_task_alloc();
  uint64_t v8 = sub_1000063C0(&qword_1001FBCF8);
  v6[40] = v8;
  v6[41] = *(void *)(v8 - 8);
  v6[42] = swift_task_alloc();
  return _swift_task_switch(sub_100028838, 0, 0);
}

uint64_t sub_100028838()
{
  uint64_t v1 = (void *)v0[34];
  v0[43] = [objc_allocWithZone((Class)NSMutableAttributedString) init];
  id v2 = [v1 range];
  v0[28] = v2;
  v0[29] = v3;
  v0[44] = v2;
  unint64_t v4 = sub_1000051F0((uint64_t)_swiftEmptyArrayStorage);
  sub_1000063C0(&qword_1001FBCD8);
  AsyncThrowingStream.makeAsyncIterator()();
  uint64_t v5 = TCTextCompositionAssistantOptionKeyContentWarning;
  v0[50] = 0xE000000000000000;
  v0[51] = 0;
  v0[48] = 0xE000000000000000;
  v0[49] = 0;
  v0[46] = v4;
  v0[47] = 0;
  v0[45] = v5;
  uint64_t v6 = (void *)swift_task_alloc();
  v0[52] = v6;
  void *v6 = v0;
  v6[1] = sub_100028980;
  uint64_t v7 = v0[40];
  return __sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v0 + 20, 0, 0, v7, v0 + 32);
}

uint64_t sub_100028980()
{
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v1 = sub_100029170;
  }
  else
  {
    uint64_t v1 = sub_100028AB8;
  }
  return _swift_task_switch(v1, 0, 0);
}

uint64_t sub_100028AB8()
{
  uint64_t v1 = *(void **)(v0 + 160);
  if (v1)
  {
    id v2 = (_OWORD *)(v0 + 192);
    NSUInteger v3 = *(void *)(v0 + 176);
    int64_t range = *(void *)(v0 + 168);
    uint64_t v4 = *(void *)(v0 + 184);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v7 = v6;
    if (*(void *)(v4 + 16))
    {
      uint64_t v8 = v5;
      id v9 = v1;
      swift_bridgeObjectRetain();
      unint64_t v10 = sub_100007C48(v8, v7);
      if (v11)
      {
        sub_100027E0C(*(void *)(v4 + 56) + 32 * v10, v0 + 192);
      }
      else
      {
        _OWORD *v2 = 0u;
        *(_OWORD *)(v0 + 208) = 0u;
      }
    }
    else
    {
      _OWORD *v2 = 0u;
      *(_OWORD *)(v0 + 208) = 0u;
      id v37 = v1;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    char v83 = v1;
    if (*(void *)(v0 + 216))
    {
      uint64_t v38 = (void *)(v0 + 264);
      if (swift_dynamicCast())
      {
        if (*v38 == 1) {
          uint64_t v39 = 1;
        }
        else {
          uint64_t v39 = 2 * (*v38 == 2);
        }
        uint64_t v84 = v39;
LABEL_19:
        NSUInteger v86 = *(void *)(v0 + 408);
        uint64_t v88 = *(void *)(v0 + 352);
        NSUInteger v40 = *(void *)(v0 + 224);
        uint64_t v41 = *(void **)(v0 + 272);
        uint64_t v42 = sub_10008B8BC(v4);
        uint64_t v80 = v43;
        uint64_t v81 = v42;
        uint64_t range_8 = sub_10008BC70(v4);
        uint64_t v78 = v44;
        sub_1000063C0(&qword_1001FBD00);
        uint64_t v45 = swift_allocObject();
        *(_OWORD *)(v45 + 16) = xmmword_10018ADB0;
        v92.location = range;
        NSUInteger v82 = v3;
        v92.length = v3;
        uint64_t v46 = NSStringFromRange(v92);
        uint64_t v47 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v49 = v48;

        *(void *)(v45 + 56) = &type metadata for String;
        unint64_t v50 = sub_100029560();
        *(void *)(v45 + 64) = v50;
        *(void *)(v45 + 32) = v47;
        *(void *)(v45 + 40) = v49;
        v93.location = (NSUInteger)[v41 range];
        uint64_t v51 = NSStringFromRange(v93);
        uint64_t v52 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v54 = v53;

        *(void *)(v45 + 96) = &type metadata for String;
        *(void *)(v45 + 104) = v50;
        *(void *)(v45 + 72) = v52;
        *(void *)(v45 + 80) = v54;
        v94.location = v40;
        v94.length = v86;
        uint64_t v55 = NSStringFromRange(v94);
        uint64_t v56 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v58 = v57;

        *(void *)(v45 + 136) = &type metadata for String;
        *(void *)(v45 + 144) = v50;
        *(void *)(v45 + 112) = v56;
        *(void *)(v45 + 120) = v58;
        *(void *)(v45 + 176) = &type metadata for Int;
        *(void *)(v45 + 184) = &protocol witness table for Int;
        uint64_t v59 = v84;
        *(void *)(v45 + 152) = v84;
        sub_1000295B4();
        uint64_t v60 = (void *)static OS_os_log.default.getter();
        static os_log_type_t.default.getter();
        os_log(_:dso:log:type:_:)();

        id v16 = (id)swift_bridgeObjectRelease();
        NSUInteger v61 = v88 + v86;
        if ((uint64_t)(v88 + v86) >= range)
        {
          uint64_t v67 = *(void *)(v0 + 408);
        }
        else
        {
          NSUInteger v62 = range - v61;
          if (__OFSUB__(range, v61))
          {
LABEL_33:
            __break(1u);
            goto LABEL_34;
          }
          uint64_t v63 = *(void *)(v0 + 408);
          uint64_t v64 = *(void **)(v0 + 344);
          id v65 = [*(id *)(v0 + 272) attributedText];
          id v66 = [v65 attributedSubstringFromRange:v61, v62];

          [v64 appendAttributedString:v66];
          BOOL v21 = __OFADD__(v63, v62);
          uint64_t v67 = v63 + v62;
          if (v21)
          {
LABEL_34:
            __break(1u);
            goto LABEL_35;
          }
          uint64_t v59 = v84;
        }
        id v16 = [*(id *)(v0 + 344) appendAttributedString:v83];
        uint64_t v68 = v67 + v82;
        if (!__OFADD__(v67, v82))
        {
          uint64_t v70 = *(void **)(v0 + 344);
          uint64_t v69 = *(void *)(v0 + 352);
          uint64_t v72 = *(void *)(v0 + 304);
          uint64_t v71 = *(void *)(v0 + 312);
          uint64_t v85 = v68;
          uint64_t v87 = *(void *)(v0 + 296);
          *(void *)(v0 + 88) = v70;
          *(void *)(v0 + 96) = v69;
          *(void *)(v0 + 104) = v68;
          *(void *)(v0 + 112) = v59;
          *(void *)(v0 + 120) = v81;
          *(void *)(v0 + 128) = v80;
          *(void *)(v0 + 136) = range_8;
          *(void *)(v0 + 144) = v79;
          *(void *)(v0 + 152) = v4;
          swift_bridgeObjectRetain();
          id v73 = v70;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1000063C0(&qword_1001FBCD0);
          AsyncThrowingStream.Continuation.yield(_:)();

          swift_bridgeObjectRelease();
          (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v71, v87);
          *(void *)(v0 + 400) = v80;
          *(void *)(v0 + 408) = v85;
          *(void *)(v0 + 384) = v79;
          *(void *)(v0 + 392) = v81;
          *(void *)(v0 + 368) = v4;
          *(void *)(v0 + 376) = range_8;
          uint64_t v74 = (void *)swift_task_alloc();
          *(void *)(v0 + 416) = v74;
          *uint64_t v74 = v0;
          v74[1] = sub_100028980;
          uint64_t v19 = *(void *)(v0 + 320);
          id v16 = (id)(v0 + 160);
          uint64_t v20 = v0 + 256;
          uint64_t v17 = 0;
          uint64_t v18 = 0;
          return __sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v16, v17, v18, v19, v20);
        }
        __break(1u);
        goto LABEL_33;
      }
    }
    else
    {
      sub_100029500(v0 + 192);
    }
    uint64_t v84 = 0;
    goto LABEL_19;
  }
  uint64_t v12 = *(void *)(v0 + 408);
  uint64_t v13 = *(void **)(v0 + 272);
  (*(void (**)(void, void))(*(void *)(v0 + 328) + 8))(*(void *)(v0 + 336), *(void *)(v0 + 320));
  [v13 range];
  if (v12 >= v14)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v15 = *(void *)(v0 + 408);
    id v16 = [*(id *)(v0 + 272) range];
    BOOL v21 = __OFSUB__(v17, v15);
    uint64_t v22 = v17 - v15;
    if (v21)
    {
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
    uint64_t v23 = *(void *)(v0 + 408);
    uint64_t v24 = *(void **)(v0 + 344);
    uint64_t v25 = *(void *)(v0 + 352) + v23;
    id v26 = [*(id *)(v0 + 272) attributedText];
    id v27 = [v26 attributedSubstringFromRange:v25, v22];

    [v24 appendAttributedString:v27];
    if (__OFADD__(v23, v22))
    {
LABEL_36:
      __break(1u);
      return __sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v16, v17, v18, v19, v20);
    }
    long long v28 = *(_OWORD *)(v0 + 392);
    long long v29 = *(_OWORD *)(v0 + 376);
    uint64_t v30 = *(void *)(v0 + 368);
    uint64_t v32 = *(void **)(v0 + 344);
    uint64_t v31 = *(void *)(v0 + 352);
    uint64_t v34 = *(void *)(v0 + 304);
    uint64_t v33 = *(void *)(v0 + 312);
    uint64_t v35 = *(void *)(v0 + 296);
    *(void *)(v0 + 16) = v32;
    *(void *)(v0 + 24) = v31;
    *(void *)(v0 + 32) = v23 + v22;
    *(void *)(v0 + 40) = 0;
    *(_OWORD *)(v0 + 48) = v28;
    *(_OWORD *)(v0 + 64) = v29;
    *(void *)(v0 + 80) = v30;
    id v36 = v32;
    sub_1000063C0(&qword_1001FBCD0);
    AsyncThrowingStream.Continuation.yield(_:)();
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v33, v35);
  }
  uint64_t v75 = *(void **)(v0 + 344);
  *(void *)(v0 + 240) = 0;
  sub_1000063C0(&qword_1001FBCD0);
  AsyncThrowingStream.Continuation.finish(throwing:)();

  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v76 = *(uint64_t (**)(void))(v0 + 8);
  return v76();
}

uint64_t sub_100029170()
{
  uint64_t v1 = *(void *)(v0 + 336);
  uint64_t v2 = *(void *)(v0 + 320);
  uint64_t v3 = *(void *)(v0 + 328);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  *(void *)(v0 + 248) = *(void *)(v0 + 256);
  sub_1000063C0(&qword_1001FBCD0);
  AsyncThrowingStream.Continuation.finish(throwing:)();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_100029230()
{
  uint64_t v1 = sub_1000063C0(&qword_1001FBCD8);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = sub_1000063C0(&qword_1001FBCD0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v4 + v5 + v8) & ~v8;
  uint64_t v10 = v9 + *(void *)(v7 + 64);
  uint64_t v11 = v3 | v8 | 7;
  swift_unknownObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);

  return _swift_deallocObject(v0, v10, v11);
}

uint64_t sub_100029398(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(sub_1000063C0(&qword_1001FBCD8) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(unsigned __int8 *)(*(void *)(sub_1000063C0(&qword_1001FBCD0) - 8) + 80);
  unint64_t v9 = v6 + v7 + v8;
  uint64_t v10 = v1[2];
  uint64_t v11 = v1[3];
  uint64_t v12 = v1[4];
  uint64_t v13 = (uint64_t)v1 + v6;
  uint64_t v14 = (uint64_t)v1 + (v9 & ~v8);
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v15;
  void *v15 = v3;
  v15[1] = sub_100027204;
  return sub_100028710(a1, v10, v11, v12, v13, v14);
}

uint64_t sub_100029500(uint64_t a1)
{
  uint64_t v2 = sub_1000063C0(&qword_1001FD2E0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_100029560()
{
  unint64_t result = qword_1001FBD08;
  if (!qword_1001FBD08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FBD08);
  }
  return result;
}

unint64_t sub_1000295B4()
{
  unint64_t result = qword_1001FBD10;
  if (!qword_1001FBD10)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1001FBD10);
  }
  return result;
}

uint64_t destroy for ProofreadingInputDashboardView()
{
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for ProofreadingInputDashboardView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ProofreadingInputDashboardView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for ProofreadingInputDashboardView(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ProofreadingSuggestionView(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ProofreadingSuggestionView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ProofreadingInputDashboardView()
{
  return &type metadata for ProofreadingInputDashboardView;
}

uint64_t sub_100029800()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10002981C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v27 = a5;
  uint64_t v26 = type metadata accessor for TaskPriority();
  uint64_t v9 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000063C0(&qword_1001FBD18);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1000063C0(&qword_1001FBC58);
  uint64_t v16 = v15 - 8;
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100029AC8(a1, a2, a3, a4, (uint64_t)v14);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = a1;
  *(void *)(v19 + 24) = a2;
  *(unsigned char *)(v19 + 32) = a3;
  *(void *)(v19 + 40) = a4;
  swift_retain();
  swift_retain();
  swift_retain();
  static TaskPriority.userInitiated.getter();
  uint64_t v20 = &v18[*(int *)(v16 + 44)];
  uint64_t v21 = type metadata accessor for _TaskModifier();
  uint64_t v22 = v26;
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(&v20[*(int *)(v21 + 20)], v11, v26);
  *(void *)uint64_t v20 = &unk_1001FBD28;
  *((void *)v20 + 1) = v19;
  sub_100008DD4((uint64_t)v14, (uint64_t)v18, &qword_1001FBD18);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v22);
  sub_10002784C((uint64_t)v14, &qword_1001FBD18);
  uint64_t v23 = static Alignment.center.getter();
  sub_1000198A8(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, v27, 0.0, 1, INFINITY, 0, v23, v24);
  return sub_10002784C((uint64_t)v18, &qword_1001FBC58);
}

uint64_t sub_100029AC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v79 = a4;
  char v6 = a3;
  int v78 = a3;
  uint64_t v76 = a1;
  uint64_t v77 = a2;
  uint64_t v88 = a5;
  uint64_t v9 = sub_1000063C0(&qword_1001FBD38);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v76 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = sub_1000063C0(&qword_1001FBD40) - 8;
  uint64_t v12 = __chkstk_darwin(v87);
  uint64_t v86 = (uint64_t)&v76 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v99 = (uint64_t)&v76 - v14;
  uint64_t v15 = sub_1000063C0(&qword_1001FBD48);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v76 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1000063C0(&qword_1001FBD50);
  uint64_t v19 = v18 - 8;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v76 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v89 = (uint64_t)&v76 - v23;
  *(void *)uint64_t v17 = static VerticalAlignment.center.getter();
  *((void *)v17 + 1) = 0;
  v17[16] = 1;
  uint64_t v24 = sub_1000063C0(&qword_1001FBD58);
  sub_10002A1D8(a1, a2, v6, a4, (uint64_t)&v17[*(int *)(v24 + 44)]);
  uint64_t v25 = static Color.blue.getter();
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
  double v26 = v100;
  uint64_t v27 = v102;
  uint64_t v28 = v103;
  uint64_t v29 = v104;
  swift_retain();
  uint64_t v30 = static Alignment.center.getter();
  uint64_t v32 = v31;
  sub_100008DD4((uint64_t)v17, (uint64_t)v22, &qword_1001FBD48);
  swift_release();
  uint64_t v33 = &v22[*(int *)(v19 + 44)];
  uint64_t v90 = v22;
  *(double *)uint64_t v33 = v26 * 0.5;
  *((double *)v33 + 1) = v26;
  *((void *)v33 + 2) = v101;
  *((void *)v33 + 3) = v27;
  *((void *)v33 + 4) = v28;
  *((void *)v33 + 5) = v29;
  *((void *)v33 + 6) = v25;
  *((_WORD *)v33 + 28) = 256;
  *((void *)v33 + 8) = v30;
  *((void *)v33 + 9) = v32;
  sub_10002784C((uint64_t)v17, &qword_1001FBD48);
  uint64_t v34 = v89;
  sub_100026FD0((uint64_t)v22, v89, &qword_1001FBD50);
  uint64_t v85 = static HorizontalAlignment.center.getter();
  uint64_t v35 = v76;
  uint64_t v36 = v77;
  LOBYTE(v25) = v78;
  uint64_t v37 = v79;
  sub_10002BB40(v76, v77, (uint64_t)&v130);
  LOBYTE(v17) = v132;
  uint64_t v82 = v133;
  uint64_t v83 = v131;
  uint64_t v91 = v135;
  uint64_t v92 = v130;
  uint64_t v80 = v136;
  uint64_t v81 = v134;
  uint64_t v98 = v137;
  LOBYTE(v30) = v138;
  uint64_t v84 = static Color.blue.getter();
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
  double v38 = v105;
  unsigned int v96 = v107;
  unsigned int v97 = v106;
  uint64_t v39 = v108;
  uint64_t v95 = v109;
  uint64_t v40 = v110;
  uint64_t v41 = static Alignment.center.getter();
  uint64_t v93 = v42;
  uint64_t v94 = v41;
  unsigned __int8 v118 = 1;
  unsigned __int8 v117 = v17;
  unsigned __int8 v116 = v30;
  *(void *)uint64_t v11 = static VerticalAlignment.center.getter();
  *((void *)v11 + 1) = 0;
  v11[16] = 1;
  uint64_t v43 = sub_1000063C0(&qword_1001FBD60);
  sub_10002C860(v35, v36, v25, v37, &v11[*(int *)(v43 + 44)]);
  uint64_t v44 = static Color.blue.getter();
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
  double v45 = v111;
  uint64_t v46 = v113;
  uint64_t v47 = v114;
  uint64_t v48 = v115;
  swift_retain();
  uint64_t v49 = static Alignment.center.getter();
  uint64_t v51 = v50;
  uint64_t v52 = v86;
  sub_100008DD4((uint64_t)v11, v86, &qword_1001FBD38);
  swift_release();
  uint64_t v53 = v52 + *(int *)(v87 + 44);
  *(double *)uint64_t v53 = v45 * 0.5;
  *(double *)(v53 + 8) = v45;
  *(void *)(v53 + 16) = v112;
  *(void *)(v53 + 24) = v46;
  *(void *)(v53 + 32) = v47;
  *(void *)(v53 + 40) = v48;
  *(void *)(v53 + 48) = v44;
  *(_WORD *)(v53 + 56) = 256;
  *(void *)(v53 + 64) = v49;
  *(void *)(v53 + 72) = v51;
  sub_10002784C((uint64_t)v11, &qword_1001FBD38);
  uint64_t v54 = v99;
  sub_100026FD0(v52, v99, &qword_1001FBD40);
  uint64_t v55 = (uint64_t)v90;
  sub_100008DD4(v34, (uint64_t)v90, &qword_1001FBD50);
  LOBYTE(v34) = v118;
  unsigned __int8 v56 = v117;
  LODWORD(v87) = v117;
  LOBYTE(v51) = v116;
  int v78 = v118;
  LODWORD(v79) = v116;
  sub_100008DD4(v54, v52, &qword_1001FBD40);
  uint64_t v57 = v88;
  sub_100008DD4(v55, v88, &qword_1001FBD50);
  uint64_t v58 = sub_1000063C0(&qword_1001FBD68);
  uint64_t v59 = (_OWORD *)(v57 + *(int *)(v58 + 48));
  uint64_t v60 = v57;
  uint64_t v61 = v85;
  long long v119 = (unint64_t)v85;
  LOBYTE(v120) = v34;
  uint64_t v62 = v83;
  *((void *)&v120 + 1) = v92;
  *(void *)&long long v121 = v83;
  BYTE8(v121) = v56;
  uint64_t v63 = v81;
  uint64_t v64 = v82;
  *(void *)&long long v122 = v82;
  *((void *)&v122 + 1) = v81;
  uint64_t v65 = v80;
  *(void *)&long long v123 = v91;
  *((void *)&v123 + 1) = v80;
  *(void *)&long long v124 = v98;
  BYTE8(v124) = v51;
  *(double *)&long long v125 = v38 * 0.5;
  *((double *)&v125 + 1) = v38;
  *(void *)&long long v126 = __PAIR64__(v96, v97);
  *((void *)&v126 + 1) = v39;
  *(void *)&long long v127 = v95;
  *((void *)&v127 + 1) = v40;
  uint64_t v66 = v84;
  *(void *)&long long v128 = v84;
  WORD4(v128) = 256;
  *(void *)&long long v129 = v94;
  *((void *)&v129 + 1) = v93;
  long long v67 = v124;
  v59[4] = v123;
  v59[5] = v67;
  long long v68 = v119;
  long long v69 = v120;
  long long v70 = v122;
  v59[2] = v121;
  v59[3] = v70;
  *uint64_t v59 = v68;
  v59[1] = v69;
  long long v71 = v125;
  long long v72 = v126;
  long long v73 = v129;
  long long v74 = v127;
  v59[9] = v128;
  v59[10] = v73;
  v59[7] = v72;
  v59[8] = v74;
  v59[6] = v71;
  sub_100008DD4(v52, v60 + *(int *)(v58 + 64), &qword_1001FBD40);
  sub_10002DC40((uint64_t)&v119);
  sub_10002784C(v99, &qword_1001FBD40);
  sub_10002784C(v89, &qword_1001FBD50);
  sub_10002784C(v52, &qword_1001FBD40);
  uint64_t v130 = v61;
  uint64_t v131 = 0;
  char v132 = v78;
  uint64_t v133 = v92;
  uint64_t v134 = v62;
  LOBYTE(v135) = v87;
  uint64_t v136 = v64;
  uint64_t v137 = v63;
  uint64_t v138 = v91;
  uint64_t v139 = v65;
  uint64_t v140 = v98;
  char v141 = v79;
  double v142 = v38 * 0.5;
  double v143 = v38;
  unsigned int v144 = v97;
  unsigned int v145 = v96;
  uint64_t v146 = v39;
  uint64_t v147 = v95;
  uint64_t v148 = v40;
  uint64_t v149 = v66;
  __int16 v150 = 256;
  uint64_t v151 = v94;
  uint64_t v152 = v93;
  sub_10002DD18((uint64_t)&v130);
  return sub_10002784C((uint64_t)v90, &qword_1001FBD50);
}

uint64_t sub_10002A1D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v71 = a2;
  uint64_t v69 = a1;
  uint64_t v63 = a5;
  uint64_t v7 = sub_1000063C0(&qword_1001FBDC0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_1000063C0(&qword_1001FBDC8);
  uint64_t v10 = __chkstk_darwin(v66);
  uint64_t v68 = (uint64_t)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v67 = (uint64_t)&v57 - v12;
  uint64_t v13 = type metadata accessor for Divider();
  uint64_t v61 = *(void *)(v13 - 8);
  uint64_t v62 = v13;
  __chkstk_darwin(v13);
  uint64_t v60 = (char *)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = sub_1000063C0(&qword_1001FBD88);
  uint64_t v15 = __chkstk_darwin(v59);
  uint64_t v17 = (char *)&v57 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v65 = (uint64_t)&v57 - v18;
  uint64_t v19 = sub_1000063C0(&qword_1001FBD70);
  uint64_t v58 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v57 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1000063C0(&qword_1001FBD78);
  uint64_t v23 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v25 = (char *)&v57 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_1000063C0(&qword_1001FBD80);
  uint64_t v27 = __chkstk_darwin(v26 - 8);
  uint64_t v64 = (uint64_t)&v57 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  uint64_t v30 = (char *)&v57 - v29;
  int v70 = a3 & 1;
  LOBYTE(v76) = a3;
  uint64_t v72 = a4;
  *((void *)&v76 + 1) = a4;
  sub_1000063C0(&qword_1001FB5A8);
  State.wrappedValue.getter();
  uint64_t v31 = 1;
  if ((v73 & 1) == 0)
  {
    uint64_t v32 = swift_allocObject();
    uint64_t v57 = v22;
    uint64_t v33 = v71;
    *(void *)(v32 + 16) = v69;
    *(void *)(v32 + 24) = v33;
    *(unsigned char *)(v32 + 32) = v70;
    *(void *)(v32 + 40) = v72;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1000063C0(&qword_1001FBDA0);
    sub_10002DED0();
    Button.init(action:label:)();
    LOWORD(v76) = 0;
    sub_100027F2C(&qword_1001FBDB0, &qword_1001FBD70);
    sub_10002DE2C();
    View.buttonStyle<A>(_:)();
    uint64_t v22 = v57;
    (*(void (**)(char *, uint64_t))(v58 + 8))(v21, v19);
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v30, v25, v22);
    uint64_t v31 = 0;
  }
  uint64_t v34 = v30;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v30, v31, 1, v22);
  uint64_t v35 = v60;
  Divider.init()();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v37 = v61;
  uint64_t v36 = v62;
  uint64_t v38 = (uint64_t)v17;
  (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v17, v35, v62);
  uint64_t v39 = &v17[*(int *)(v59 + 36)];
  long long v40 = v77;
  *(_OWORD *)uint64_t v39 = v76;
  *((_OWORD *)v39 + 1) = v40;
  *((_OWORD *)v39 + 2) = v78;
  (*(void (**)(char *, uint64_t))(v37 + 8))(v35, v36);
  uint64_t v41 = v65;
  sub_100026FD0((uint64_t)v17, v65, &qword_1001FBD88);
  *(void *)uint64_t v9 = static VerticalAlignment.center.getter();
  *((void *)v9 + 1) = 0;
  v9[16] = 1;
  uint64_t v42 = sub_1000063C0(&qword_1001FBDD0);
  uint64_t v43 = v69;
  uint64_t v44 = v71;
  sub_10002AB70(v69, v71, (void (**)(char *, char *))&v9[*(int *)(v42 + 44)]);
  uint64_t v73 = v43;
  uint64_t v74 = v44;
  sub_1000063C0(&qword_1001FB850);
  State.wrappedValue.getter();
  uint64_t v45 = v75;
  swift_getKeyPath();
  uint64_t v73 = v45;
  sub_10002E4F8((unint64_t *)&qword_1001FD2A0, (void (*)(uint64_t))type metadata accessor for ToolModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  LOBYTE(v35) = *(unsigned char *)(v45 + 88);
  swift_release();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v47 = swift_allocObject();
  *(unsigned char *)(v47 + 16) = (_BYTE)v35;
  uint64_t v48 = v68;
  sub_100008DD4((uint64_t)v9, v68, &qword_1001FBDC0);
  uint64_t v49 = (uint64_t *)(v48 + *(int *)(v66 + 36));
  *uint64_t v49 = KeyPath;
  v49[1] = (uint64_t)sub_100026D50;
  v49[2] = v47;
  sub_10002784C((uint64_t)v9, &qword_1001FBDC0);
  uint64_t v50 = v67;
  sub_100026FD0(v48, v67, &qword_1001FBDC8);
  uint64_t v51 = (uint64_t)v34;
  uint64_t v52 = (uint64_t)v34;
  uint64_t v53 = v64;
  sub_100008DD4(v52, v64, &qword_1001FBD80);
  sub_100008DD4(v41, v38, &qword_1001FBD88);
  sub_100008DD4(v50, v48, &qword_1001FBDC8);
  uint64_t v54 = v63;
  sub_100008DD4(v53, v63, &qword_1001FBD80);
  uint64_t v55 = sub_1000063C0(&qword_1001FBDD8);
  sub_100008DD4(v38, v54 + *(int *)(v55 + 48), &qword_1001FBD88);
  sub_100008DD4(v48, v54 + *(int *)(v55 + 64), &qword_1001FBDC8);
  sub_10002784C(v50, &qword_1001FBDC8);
  sub_10002784C(v41, &qword_1001FBD88);
  sub_10002784C(v51, &qword_1001FBD80);
  sub_10002784C(v48, &qword_1001FBDC8);
  sub_10002784C(v38, &qword_1001FBD88);
  return sub_10002784C(v53, &qword_1001FBD80);
}

uint64_t sub_10002AA04()
{
  sub_1000063C0(&qword_1001FB850);
  State.wrappedValue.getter();
  sub_10016A09C(0, 0, 0);
  swift_release();
  State.wrappedValue.getter();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  uint64_t result = swift_release();
  if (Strong)
  {
    [Strong endWritingTools];
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_10002AAC0@<X0>(uint64_t a1@<X8>)
{
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v2 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v4 = v3;
  char v6 = v5;
  uint64_t v8 = v7;
  char v9 = static Edge.Set.leading.getter();
  uint64_t result = EdgeInsets.init(_all:)();
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v6 & 1;
  *(void *)(a1 + 24) = v8;
  *(unsigned char *)(a1 + 32) = v9;
  *(void *)(a1 + 40) = v11;
  *(void *)(a1 + 48) = v12;
  *(void *)(a1 + 56) = v13;
  *(void *)(a1 + 64) = v14;
  *(unsigned char *)(a1 + 72) = 0;
  return result;
}

uint64_t sub_10002AB70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (**a3)(char *, char *)@<X8>)
{
  unsigned int v96 = a3;
  uint64_t v5 = sub_1000063C0(&qword_1001FBDE0);
  uint64_t v93 = *(void *)(v5 - 8);
  uint64_t v94 = v5;
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v86 = (char *)&v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v85 = (char *)&v74 - v8;
  uint64_t v9 = sub_1000063C0(&qword_1001FBDE8);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v95 = (uint64_t)&v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v92 = (char *)&v74 - v12;
  uint64_t v13 = type metadata accessor for ButtonToggleStyle();
  uint64_t v14 = *(char **)(v13 - 8);
  uint64_t v90 = (char *)v13;
  uint64_t v91 = (void (**)(char *, char *))v14;
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v74 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1000063C0(&qword_1001FBDF0);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v88 = v17;
  uint64_t v89 = v18;
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v74 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1000063C0(&qword_1001FBDF8);
  uint64_t v98 = *(void *)(v21 - 8);
  uint64_t v99 = v21;
  uint64_t v22 = __chkstk_darwin(v21);
  uint64_t v24 = (void (**)(char *, char *))((char *)&v74 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v22);
  uint64_t v26 = (char *)&v74 - v25;
  *(void *)&long long v97 = a1;
  *((void *)&v97 + 1) = a2;
  *(void *)&long long v101 = a1;
  *((void *)&v101 + 1) = a2;
  uint64_t v87 = sub_1000063C0(&qword_1001FB850);
  State.projectedValue.getter();
  long long v27 = v112;
  uint64_t v28 = v113;
  swift_getKeyPath();
  long long v112 = v27;
  *(void *)&long long v113 = v28;
  sub_1000063C0(&qword_1001FBE00);
  Binding.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1000063C0(&qword_1001FBE08);
  sub_10002E024();
  Toggle.init(isOn:label:)();
  ButtonToggleStyle.init()();
  sub_100027F2C(&qword_1001FBE18, &qword_1001FBDF0);
  sub_10002E4F8(&qword_1001FBE20, (void (*)(uint64_t))&type metadata accessor for ButtonToggleStyle);
  uint64_t v29 = v88;
  uint64_t v30 = v90;
  View.toggleStyle<A>(_:)();
  v91[1](v16, v30);
  (*(void (**)(char *, uint64_t))(v89 + 8))(v20, v29);
  uint64_t v31 = *(void (**)(char *, void (**)(char *, char *), uint64_t))(v98 + 32);
  uint64_t v90 = v26;
  uint64_t v91 = v24;
  v31(v26, v24, v99);
  uint64_t v32 = type metadata accessor for FeedbackFeatureFlags();
  *((void *)&v113 + 1) = v32;
  uint64_t v114 = sub_10002E4F8((unint64_t *)&unk_1001FDED0, (void (*)(uint64_t))&type metadata accessor for FeedbackFeatureFlags);
  uint64_t v33 = sub_10002E148((uint64_t *)&v112);
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v32 - 8) + 104))(v33, enum case for FeedbackFeatureFlags.CentralizedFeedback(_:), v32);
  LOBYTE(v32) = isFeatureEnabled(_:)();
  sub_100027DBC((uint64_t)&v112);
  if (v32)
  {
    long long v34 = v97;
    long long v112 = v97;
    State.wrappedValue.getter();
    uint64_t v35 = v101;
    swift_getKeyPath();
    *(void *)&long long v112 = v35;
    uint64_t v80 = &protocol conformance descriptor for ToolModel;
    uint64_t v36 = sub_10002E4F8((unint64_t *)&qword_1001FD2A0, (void (*)(uint64_t))type metadata accessor for ToolModel);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v37 = *(void *)(v35 + 48);
    uint64_t v38 = *(void *)(v35 + 64);
    int v39 = *(unsigned __int8 *)(v35 + 72);
    uint64_t v88 = *(void *)(v35 + 56);
    uint64_t v89 = v37;
    uint64_t v84 = v38;
    int v83 = v39;
    sub_1000272F8(v37, v88, v38, v39);
    swift_release();
    long long v112 = v34;
    State.wrappedValue.getter();
    uint64_t v40 = v101;
    swift_getKeyPath();
    *(void *)&long long v112 = v40;
    uint64_t v74 = v36;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v41 = *(void *)(v40 + 40);
    uint64_t v81 = *(void *)(v40 + 32);
    uint64_t v82 = v41;
    swift_bridgeObjectRetain();
    swift_release();
    long long v112 = v34;
    State.wrappedValue.getter();
    uint64_t v42 = v101;
    swift_getKeyPath();
    *(void *)&long long v112 = v42;
    sub_10002E4F8((unint64_t *)&qword_1001FBD30, (void (*)(uint64_t))type metadata accessor for ProofreadingModel);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v43 = *(void **)(v42 + OBJC_IVAR____TtC21WritingToolsUIService17ProofreadingModel__inputStringForFeedback + 8);
    uint64_t v79 = *(void *)(v42 + OBJC_IVAR____TtC21WritingToolsUIService17ProofreadingModel__inputStringForFeedback);
    uint64_t v80 = v43;
    swift_bridgeObjectRetain();
    swift_release();
    long long v112 = v34;
    State.wrappedValue.getter();
    uint64_t v44 = v101;
    swift_getKeyPath();
    *(void *)&long long v112 = v44;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    swift_beginAccess();
    unint64_t v45 = swift_bridgeObjectRetain();
    uint64_t v46 = sub_10003EA2C(v45);
    swift_bridgeObjectRelease();
    uint64_t v47 = sub_10003EBC4((uint64_t)v46);
    swift_bridgeObjectRelease();
    *(void *)&long long v112 = v47;
    sub_1000063C0(&qword_1001FBE30);
    sub_100027F2C(&qword_1001FEDF0, &qword_1001FBE30);
    uint64_t v48 = BidirectionalCollection<>.joined(separator:)();
    uint64_t v77 = v49;
    uint64_t v78 = v48;
    swift_release();
    swift_bridgeObjectRelease();
    long long v50 = v97;
    long long v112 = v97;
    State.wrappedValue.getter();
    uint64_t v51 = v101;
    swift_getKeyPath();
    *(void *)&long long v112 = v51;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v52 = *(void *)(v51 + OBJC_IVAR____TtC21WritingToolsUIService17ProofreadingModel__modelInfoString + 8);
    uint64_t v75 = *(void *)(v51 + OBJC_IVAR____TtC21WritingToolsUIService17ProofreadingModel__modelInfoString);
    uint64_t v76 = v52;
    swift_bridgeObjectRetain();
    swift_release();
    long long v112 = v50;
    State.wrappedValue.getter();
    uint64_t v53 = v101;
    swift_getKeyPath();
    *(void *)&long long v112 = v53;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v54 = *(void *)(v53 + OBJC_IVAR____TtC21WritingToolsUIService17ProofreadingModel__session);
    swift_release();
    if (v54)
    {
      long long v112 = v97;
      State.wrappedValue.getter();
      uint64_t v55 = v101;
      swift_getKeyPath();
      *(void *)&long long v112 = v55;
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      char v56 = *(unsigned char *)(v55 + 88);
      swift_release();
    }
    else
    {
      char v56 = 1;
    }
    uint64_t v59 = v93;
    uint64_t v58 = v94;
    *(void *)&long long v101 = 0x3FF0000000000000;
    State.init(wrappedValue:)();
    long long v60 = v112;
    *(void *)&long long v112 = 0;
    *((void *)&v112 + 1) = v81;
    *(void *)&long long v113 = v82;
    *((void *)&v113 + 1) = v79;
    uint64_t v114 = (uint64_t)v80;
    uint64_t v115 = 0;
    *(void *)&long long v116 = 0;
    *((void *)&v116 + 1) = v78;
    *(void *)&long long v117 = v77;
    *((void *)&v117 + 1) = v75;
    *(void *)&long long v118 = v76;
    *((void *)&v118 + 1) = _swiftEmptyArrayStorage;
    *(void *)&long long v119 = _swiftEmptyArrayStorage;
    *((void *)&v119 + 1) = _swiftEmptyArrayStorage;
    *(void *)&long long v120 = v89;
    *((void *)&v120 + 1) = v88;
    *(void *)&long long v121 = v84;
    BYTE8(v121) = v83;
    BYTE9(v121) = v56;
    WORD5(v121) = 0;
    BYTE12(v121) = 0;
    uint64_t v122 = 0;
    uint64_t v123 = 0;
    long long v124 = v60;
    long long v109 = v121;
    long long v110 = 0u;
    long long v111 = v60;
    long long v105 = v117;
    long long v106 = v118;
    long long v107 = v119;
    long long v108 = v120;
    long long v101 = v112;
    long long v102 = v113;
    long long v103 = (unint64_t)v80;
    long long v104 = v116;
    __int16 v100 = 0;
    sub_10002E1CC();
    sub_10002DE2C();
    uint64_t v61 = v86;
    View.buttonStyle<A>(_:)();
    sub_10002E220((uint64_t)&v112);
    uint64_t v62 = *(void (**)(char *, char *, uint64_t))(v59 + 32);
    uint64_t v63 = v85;
    v62(v85, v61, v58);
    uint64_t v57 = (uint64_t)v92;
    v62(v92, v63, v58);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v59 + 56))(v57, 0, 1, v58);
  }
  else
  {
    uint64_t v57 = (uint64_t)v92;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v93 + 56))(v92, 1, 1, v94);
  }
  uint64_t v65 = v98;
  uint64_t v64 = v99;
  uint64_t v66 = *(void (**)(void (**)(char *, char *), char *, uint64_t))(v98 + 16);
  uint64_t v67 = v90;
  uint64_t v68 = v91;
  v66(v91, v90, v99);
  uint64_t v69 = v95;
  sub_100008DD4(v57, v95, &qword_1001FBDE8);
  int v70 = v96;
  v66(v96, (char *)v68, v64);
  uint64_t v71 = sub_1000063C0(&qword_1001FBE28);
  sub_100008DD4(v69, (uint64_t)v70 + *(int *)(v71 + 48), &qword_1001FBDE8);
  sub_10002784C(v57, &qword_1001FBDE8);
  uint64_t v72 = *(void (**)(char *, uint64_t))(v65 + 8);
  v72(v67, v64);
  sub_10002784C(v69, &qword_1001FBDE8);
  return ((uint64_t (*)(void, uint64_t))v72)(v68, v64);
}

uint64_t sub_10002B72C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v25 = a1;
  uint64_t v1 = type metadata accessor for IconOnlyLabelStyle();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000063C0(&qword_1001FBBC0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000063C0(&qword_1001FBE40);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  Label.init(title:icon:)();
  IconOnlyLabelStyle.init()();
  sub_100027F2C((unint64_t *)&unk_1001FD5A0, &qword_1001FBBC0);
  sub_10002E4F8(&qword_1001FDA20, (void (*)(uint64_t))&type metadata accessor for IconOnlyLabelStyle);
  View.labelStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  LOBYTE(v8) = static Edge.Set.horizontal.getter();
  EdgeInsets.init(_all:)();
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  uint64_t v20 = v19;
  uint64_t v21 = v25;
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 16))(v25, v12, v9);
  uint64_t v22 = v21 + *(int *)(sub_1000063C0(&qword_1001FBE08) + 36);
  *(unsigned char *)uint64_t v22 = (_BYTE)v8;
  *(void *)(v22 + 8) = v14;
  *(void *)(v22 + 16) = v16;
  *(void *)(v22 + 24) = v18;
  *(void *)(v22 + 32) = v20;
  *(unsigned char *)(v22 + 40) = 0;
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_10002BA80@<X0>(uint64_t a1@<X8>)
{
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t result = Text.init(_:tableName:bundle:comment:)();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_10002BB00@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = Image.init(_internalSystemName:)();
  *a1 = result;
  return result;
}

void sub_10002BB40(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v106 = a2;
  uint64_t v99 = a3;
  uint64_t v104 = 0;
  uint64_t v4 = type metadata accessor for LocalizedStringKey.StringInterpolation();
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  v95[1] = (char *)v95 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v95[2] = (char *)v95 - v7;
  uint64_t v8 = sub_1000063C0(&qword_1001FBA90);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v95 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Locale();
  __chkstk_darwin(v11 - 8);
  uint64_t v12 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v12 - 8);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v112 = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v113 = v13;
  sub_10002DF54();
  uint64_t v14 = Text.init<A>(_:)();
  uint64_t v16 = v15;
  char v18 = v17 & 1;
  uint64_t v19 = Text.bold()();
  uint64_t v21 = v20;
  char v23 = v22 & 1;
  sub_100026F18(v14, v16, v18);
  swift_bridgeObjectRelease();
  uint64_t v24 = type metadata accessor for Font.Design();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 56);
  uint64_t v97 = v24;
  unsigned int v96 = v26;
  v95[3] = v25 + 56;
  ((void (*)(char *, uint64_t, uint64_t))v26)(v10, 1, 1);
  static Font.system(size:weight:design:)();
  uint64_t v98 = v10;
  sub_10002784C((uint64_t)v10, &qword_1001FBA90);
  uint64_t v102 = Text.font(_:)();
  uint64_t v101 = v27;
  int v100 = v28;
  uint64_t v30 = v29;
  swift_release();
  sub_100026F18(v19, v21, v23);
  swift_bridgeObjectRelease();
  uint64_t v105 = a1;
  uint64_t v112 = a1;
  uint64_t v113 = v106;
  sub_1000063C0(&qword_1001FB850);
  State.wrappedValue.getter();
  uint64_t v31 = v107;
  swift_getKeyPath();
  uint64_t v112 = v31;
  sub_10002E4F8((unint64_t *)&qword_1001FD2A0, (void (*)(uint64_t))type metadata accessor for ToolModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  BOOL v32 = *(unsigned char *)(v31 + 88) == 1;
  uint64_t v103 = v30;
  if (v32)
  {
    swift_release();
    goto LABEL_14;
  }
  swift_getKeyPath();
  uint64_t v112 = v31;
  v95[0] = sub_10002E4F8((unint64_t *)&qword_1001FBD30, (void (*)(uint64_t))type metadata accessor for ProofreadingModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  swift_retain();
  unint64_t v33 = swift_bridgeObjectRetain();
  long long v34 = sub_1001737E4(v33, v31);
  swift_bridgeObjectRelease();
  swift_release_n();
  if (!v34)
  {
LABEL_14:
    LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v73._countAndFlagsBits = 23390;
    v73._object = (void *)0xE200000000000000;
    LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v73);
    uint64_t v112 = v105;
    uint64_t v113 = v106;
    State.wrappedValue.getter();
    uint64_t v74 = v107;
    swift_getKeyPath();
    uint64_t v112 = v74;
    sub_10002E4F8((unint64_t *)&qword_1001FBD30, (void (*)(uint64_t))type metadata accessor for ProofreadingModel);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    swift_beginAccess();
    unint64_t v75 = swift_bridgeObjectRetain();
    unint64_t v76 = (unint64_t)sub_100173A9C(v75, v74);
    swift_bridgeObjectRelease();
    swift_release();
    if (v76 >> 62) {
      uint64_t v77 = _CocoaArrayWrapper.endIndex.getter();
    }
    else {
      uint64_t v77 = *(void *)((v76 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    uint64_t v112 = v77;
    LocalizedStringKey.StringInterpolation.appendInterpolation<A>(_:specifier:)();
    v78._object = (void *)0x800000010019CBE0;
    v78._countAndFlagsBits = 0xD000000000000017;
    LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v78);
    LocalizedStringKey.init(stringInterpolation:)();
    uint64_t v79 = Text.init(_:tableName:bundle:comment:)();
    uint64_t v81 = v80;
    char v83 = v82 & 1;
    uint64_t v84 = (uint64_t)v98;
    v96(v98, 1, 1, v97);
    static Font.system(size:weight:design:)();
    sub_10002784C(v84, &qword_1001FBA90);
    uint64_t v85 = Text.font(_:)();
    uint64_t v87 = v86;
    char v89 = v88;
    uint64_t v91 = v90;
    swift_release();
    sub_100026F18(v79, v81, v83);
    swift_bridgeObjectRelease();
    uint64_t v107 = v85;
    uint64_t v108 = v87;
    uint64_t v109 = v89 & 1;
    uint64_t v110 = v91;
    char v111 = 1;
    _ConditionalContent<>.init(storage:)();
    uint64_t v68 = v112;
    uint64_t v69 = v113;
    uint64_t v70 = v114;
    uint64_t v71 = v115;
    char v72 = v116;
    uint64_t v53 = v99;
    goto LABEL_17;
  }

  LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v35._countAndFlagsBits = 0;
  v35._object = (void *)0xE000000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v35);
  uint64_t v112 = v105;
  uint64_t v113 = v106;
  State.wrappedValue.getter();
  uint64_t v36 = v107;
  swift_getKeyPath();
  uint64_t v37 = v36 + OBJC_IVAR____TtC21WritingToolsUIService9ToolModel___observationRegistrar;
  uint64_t v112 = v36;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (*(unsigned char *)(v36 + 88))
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v104 = v37;
  swift_getKeyPath();
  uint64_t v112 = v36;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  swift_retain();
  unint64_t v38 = swift_bridgeObjectRetain();
  int v39 = sub_1001737E4(v38, v36);
  swift_bridgeObjectRelease();
  swift_release();

  if (!v39)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  swift_getKeyPath();
  uint64_t v112 = v36;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_retain();
  unint64_t v40 = swift_bridgeObjectRetain();
  uint64_t v41 = sub_100173A9C(v40, v36);
  swift_bridgeObjectRelease();
  swift_release();
  swift_getKeyPath();
  uint64_t v112 = v36;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (*(unsigned char *)(v36 + 88))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  swift_getKeyPath();
  uint64_t v112 = v36;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_retain();
  unint64_t v42 = swift_bridgeObjectRetain();
  uint64_t v43 = sub_1001737E4(v42, v36);
  swift_bridgeObjectRelease();
  swift_release();
  if (v43)
  {
    sub_10003ED1C((uint64_t)v43, (unint64_t)v41);
    uint64_t v45 = v44;
    char v47 = v46;
    swift_bridgeObjectRelease();

    if ((v47 & 1) == 0)
    {
      swift_release();
      if (!__OFADD__(v45, 1))
      {
        uint64_t v112 = v45 + 1;
        LocalizedStringKey.StringInterpolation.appendInterpolation<A>(_:specifier:)();
        v48._countAndFlagsBits = 543584032;
        v48._object = (void *)0xE400000000000000;
        LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v48);
        uint64_t v112 = v105;
        uint64_t v113 = v106;
        State.wrappedValue.getter();
        uint64_t v49 = v107;
        swift_getKeyPath();
        uint64_t v112 = v49;
        ObservationRegistrar.access<A, B>(_:keyPath:)();
        swift_release();
        swift_beginAccess();
        unint64_t v50 = swift_bridgeObjectRetain();
        unint64_t v51 = (unint64_t)sub_100173A9C(v50, v49);
        swift_bridgeObjectRelease();
        swift_release();
        if (!(v51 >> 62))
        {
          uint64_t v52 = *(void *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_13:
          uint64_t v53 = v99;
          swift_bridgeObjectRelease();
          uint64_t v112 = v52;
          LocalizedStringKey.StringInterpolation.appendInterpolation<A>(_:specifier:)();
          v54._countAndFlagsBits = 0;
          v54._object = (void *)0xE000000000000000;
          LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v54);
          LocalizedStringKey.init(stringInterpolation:)();
          uint64_t v55 = Text.init(_:tableName:bundle:comment:)();
          uint64_t v57 = v56;
          char v59 = v58 & 1;
          uint64_t v60 = (uint64_t)v98;
          v96(v98, 1, 1, v97);
          static Font.system(size:weight:design:)();
          sub_10002784C(v60, &qword_1001FBA90);
          uint64_t v61 = Text.font(_:)();
          uint64_t v63 = v62;
          char v65 = v64;
          uint64_t v67 = v66;
          swift_release();
          sub_100026F18(v55, v57, v59);
          swift_bridgeObjectRelease();
          uint64_t v107 = v61;
          uint64_t v108 = v63;
          uint64_t v109 = v65 & 1;
          uint64_t v110 = v67;
          char v111 = 0;
          _ConditionalContent<>.init(storage:)();
          uint64_t v68 = v112;
          uint64_t v69 = v113;
          uint64_t v70 = v114;
          uint64_t v71 = v115;
          char v72 = v116;
LABEL_17:
          char v92 = v100 & 1;
          uint64_t v93 = v102;
          uint64_t v94 = v101;
          *(void *)uint64_t v53 = v102;
          *(void *)(v53 + 8) = v94;
          *(unsigned char *)(v53 + 16) = v92;
          *(void *)(v53 + 24) = v103;
          *(void *)(v53 + 32) = v68;
          *(void *)(v53 + 40) = v69;
          *(void *)(v53 + 48) = v70;
          *(void *)(v53 + 56) = v71;
          *(unsigned char *)(v53 + 64) = v72;
          sub_10002783C(v93, v94, v92);
          swift_bridgeObjectRetain();
          sub_10002DCDC(v68, v69, v70);
          sub_10002DDB4(v68, v69, v70);
          sub_100026F18(v93, v94, v92);
          swift_bridgeObjectRelease();
          return;
        }
LABEL_22:
        uint64_t v52 = _CocoaArrayWrapper.endIndex.getter();
        goto LABEL_13;
      }
LABEL_21:
      __break(1u);
      goto LABEL_22;
    }
    goto LABEL_23;
  }
LABEL_24:
  __break(1u);
}

uint64_t sub_10002C860@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  uint64_t v93 = a5;
  uint64_t v78 = sub_1000063C0(&qword_1001FBD70);
  uint64_t v77 = *(void *)(v78 - 8);
  __chkstk_darwin(v78);
  unint64_t v76 = (char *)v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = sub_1000063C0(&qword_1001FBD78);
  uint64_t v88 = *(void *)(v89 - 8);
  __chkstk_darwin(v89);
  unint64_t v75 = (char *)v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000063C0(&qword_1001FBD80);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v92 = (uint64_t)v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v94 = (char *)v74 - v14;
  uint64_t v87 = type metadata accessor for Divider();
  uint64_t v86 = *(void *)(v87 - 8);
  __chkstk_darwin(v87);
  uint64_t v84 = (char *)v74 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = sub_1000063C0(&qword_1001FBD88) - 8;
  uint64_t v16 = __chkstk_darwin(v85);
  uint64_t v98 = (uint64_t)v74 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v102 = (uint64_t)v74 - v18;
  uint64_t v97 = sub_1000063C0(&qword_1001FBBD8);
  uint64_t v101 = *(void *)(v97 - 8);
  __chkstk_darwin(v97);
  uint64_t v20 = (char *)v74 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = sub_1000063C0(&qword_1001FBD90);
  uint64_t v21 = *(void *)(v104 - 8);
  uint64_t v22 = __chkstk_darwin(v104);
  uint64_t v90 = (char *)v74 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v103 = (char *)v74 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  int v28 = (char *)v74 - v27;
  __chkstk_darwin(v26);
  uint64_t v30 = (char *)v74 - v29;
  uint64_t v31 = swift_allocObject();
  *(void *)(v31 + 16) = a1;
  *(void *)(v31 + 24) = a2;
  *(unsigned char *)(v31 + 32) = a3;
  *(void *)(v31 + 40) = a4;
  uint64_t v79 = a4;
  swift_retain();
  uint64_t v95 = a1;
  swift_retain();
  uint64_t v96 = a2;
  swift_retain();
  Button.init(action:label:)();
  *(void *)&long long v108 = a1;
  *((void *)&v108 + 1) = a2;
  uint64_t v32 = sub_1000063C0(&qword_1001FB850);
  State.wrappedValue.getter();
  LOBYTE(a2) = sub_10016521C();
  swift_release();
  LOBYTE(v108) = a3;
  *((void *)&v108 + 1) = a4;
  uint64_t v83 = sub_1000063C0(&qword_1001FB5A8);
  State.wrappedValue.getter();
  LOBYTE(v108) = a2 & 1;
  BYTE1(v108) = v106;
  uint64_t v82 = sub_100027F2C(&qword_1001FBBF8, &qword_1001FBBD8);
  unint64_t v33 = sub_10002DE2C();
  uint64_t v34 = v97;
  View.buttonStyle<A>(_:)();
  Swift::String v35 = *(void (**)(char *, uint64_t))(v101 + 8);
  v101 += 8;
  uint64_t v81 = v35;
  v35(v20, v34);
  uint64_t v91 = v21;
  uint64_t v80 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
  uint64_t v99 = v30;
  v80(v30, v28, v104);
  uint64_t v36 = swift_allocObject();
  uint64_t v37 = v95;
  uint64_t v38 = v96;
  *(void *)(v36 + 16) = v95;
  *(void *)(v36 + 24) = v38;
  *(unsigned char *)(v36 + 32) = a3;
  uint64_t v39 = v79;
  *(void *)(v36 + 40) = v79;
  uint64_t v40 = v37;
  swift_retain();
  swift_retain();
  swift_retain();
  Button.init(action:label:)();
  *(void *)&long long v108 = v40;
  *((void *)&v108 + 1) = v38;
  v74[1] = v32;
  State.wrappedValue.getter();
  LOBYTE(v40) = sub_10016521C();
  swift_release();
  LOBYTE(v108) = a3;
  *((void *)&v108 + 1) = v39;
  uint64_t v41 = v39;
  State.wrappedValue.getter();
  char v42 = v40 & 1;
  char v43 = a3;
  LOBYTE(v108) = v42;
  BYTE1(v108) = v106;
  uint64_t v44 = v97;
  uint64_t v82 = v33;
  View.buttonStyle<A>(_:)();
  v81(v20, v44);
  uint64_t v45 = v88;
  int v100 = v28;
  v80(v103, v28, v104);
  uint64_t v46 = v89;
  char v47 = v84;
  Divider.init()();
  static Alignment.center.getter();
  uint64_t v48 = 1;
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v49 = v86;
  uint64_t v50 = v98;
  uint64_t v51 = v87;
  (*(void (**)(uint64_t, char *, uint64_t))(v86 + 16))(v98, v47, v87);
  uint64_t v52 = (_OWORD *)(v50 + *(int *)(v85 + 44));
  long long v53 = v109;
  *uint64_t v52 = v108;
  v52[1] = v53;
  v52[2] = v110;
  (*(void (**)(char *, uint64_t))(v49 + 8))(v47, v51);
  sub_100026FD0(v50, v102, &qword_1001FBD88);
  LOBYTE(v106) = v43;
  uint64_t v107 = v39;
  State.wrappedValue.getter();
  if ((v105 & 1) == 0)
  {
    uint64_t v54 = swift_allocObject();
    uint64_t v56 = v95;
    uint64_t v55 = v96;
    *(void *)(v54 + 16) = v95;
    *(void *)(v54 + 24) = v55;
    *(unsigned char *)(v54 + 32) = v43 & 1;
    *(void *)(v54 + 40) = v41;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1000063C0(&qword_1001FBDA0);
    sub_10002DED0();
    uint64_t v57 = v76;
    Button.init(action:label:)();
    uint64_t v106 = v56;
    uint64_t v107 = v55;
    State.wrappedValue.getter();
    uint64_t v58 = v105;
    swift_getKeyPath();
    uint64_t v106 = v58;
    sub_10002E4F8((unint64_t *)&qword_1001FD2A0, (void (*)(uint64_t))type metadata accessor for ToolModel);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    unsigned __int8 v59 = *(unsigned char *)(v58 + 88);
    swift_release();
    LOWORD(v106) = v59;
    sub_100027F2C(&qword_1001FBDB0, &qword_1001FBD70);
    uint64_t v60 = v75;
    uint64_t v61 = v78;
    View.buttonStyle<A>(_:)();
    (*(void (**)(char *, uint64_t))(v77 + 8))(v57, v61);
    (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v94, v60, v46);
    uint64_t v48 = 0;
  }
  uint64_t v62 = (uint64_t)v94;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v45 + 56))(v94, v48, 1, v46);
  uint64_t v63 = v91;
  char v64 = *(void (**)(char *, char *, uint64_t))(v91 + 16);
  char v65 = v100;
  uint64_t v66 = v104;
  v64(v100, v99, v104);
  uint64_t v67 = v90;
  v64(v90, v103, v66);
  uint64_t v68 = v98;
  sub_100008DD4(v102, v98, &qword_1001FBD88);
  uint64_t v69 = v92;
  sub_100008DD4(v62, v92, &qword_1001FBD80);
  uint64_t v70 = v93;
  v64(v93, v65, v66);
  uint64_t v71 = (int *)sub_1000063C0(&qword_1001FBDB8);
  v64(&v70[v71[12]], v67, v66);
  sub_100008DD4(v68, (uint64_t)&v70[v71[16]], &qword_1001FBD88);
  sub_100008DD4(v69, (uint64_t)&v70[v71[20]], &qword_1001FBD80);
  sub_10002784C(v62, &qword_1001FBD80);
  sub_10002784C(v102, &qword_1001FBD88);
  char v72 = *(void (**)(char *, uint64_t))(v63 + 8);
  v72(v103, v66);
  v72(v99, v66);
  sub_10002784C(v69, &qword_1001FBD80);
  sub_10002784C(v68, &qword_1001FBD88);
  v72(v67, v66);
  return ((uint64_t (*)(char *, uint64_t))v72)(v100, v66);
}

uint64_t sub_10002D448@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = Image.init(systemName:)();
  *a1 = result;
  return result;
}

uint64_t sub_10002D488(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t))
{
  sub_1000063C0(&qword_1001FB850);
  uint64_t v6 = State.wrappedValue.getter();
  a5(v6);
  return swift_release();
}

uint64_t sub_10002D4E0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = Image.init(systemName:)();
  *a1 = result;
  return result;
}

uint64_t sub_10002D524()
{
  sub_1000063C0(&qword_1001FB850);
  State.wrappedValue.getter();
  State.wrappedValue.getter();
  swift_getKeyPath();
  sub_10002E4F8((unint64_t *)&qword_1001FBD30, (void (*)(uint64_t))type metadata accessor for ProofreadingModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  char v0 = *(unsigned char *)(v3 + OBJC_IVAR____TtC21WritingToolsUIService17ProofreadingModel__showingOriginal);
  swift_release();
  sub_10016A09C((v0 & 1) == 0, 0, 0);
  swift_release();
  State.wrappedValue.getter();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  uint64_t result = swift_release();
  if (Strong)
  {
    [Strong endWritingTools];
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_10002D694@<X0>(uint64_t a1@<X8>)
{
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v2 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v4 = v3;
  char v6 = v5 & 1;
  uint64_t v7 = Text.bold()();
  uint64_t v9 = v8;
  char v11 = v10;
  uint64_t v13 = v12;
  sub_100026F18(v2, v4, v6);
  swift_bridgeObjectRelease();
  LOBYTE(v2) = static Edge.Set.trailing.getter();
  uint64_t result = EdgeInsets.init(_all:)();
  *(void *)a1 = v7;
  *(void *)(a1 + 8) = v9;
  *(unsigned char *)(a1 + 16) = v11 & 1;
  *(void *)(a1 + 24) = v13;
  *(unsigned char *)(a1 + 32) = v2;
  *(void *)(a1 + 40) = v15;
  *(void *)(a1 + 48) = v16;
  *(void *)(a1 + 56) = v17;
  *(void *)(a1 + 64) = v18;
  *(unsigned char *)(a1 + 72) = 0;
  return result;
}

uint64_t sub_10002D780(uint64_t a1, uint64_t a2)
{
  v2[9] = a1;
  v2[10] = a2;
  type metadata accessor for MainActor();
  v2[11] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[12] = v4;
  v2[13] = v3;
  return _swift_task_switch(sub_10002D818, v4, v3);
}

uint64_t sub_10002D818()
{
  uint64_t v1 = v0[10];
  v0[2] = v0[9];
  v0[3] = v1;
  sub_1000063C0(&qword_1001FB850);
  State.wrappedValue.getter();
  uint64_t v2 = v0[6];
  swift_getKeyPath();
  v0[7] = v2;
  sub_10002E4F8((unint64_t *)&qword_1001FBD30, (void (*)(uint64_t))type metadata accessor for ProofreadingModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v3 = *(void *)(v2 + OBJC_IVAR____TtC21WritingToolsUIService17ProofreadingModel__session);
  swift_release();
  if (v3)
  {
    swift_release();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
  else
  {
    uint64_t v6 = v0[10];
    v0[4] = v0[9];
    v0[5] = v6;
    State.wrappedValue.getter();
    v0[14] = v0[8];
    uint64_t v7 = (void *)swift_task_alloc();
    v0[15] = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_10002D9D0;
    return sub_100165C94();
  }
}

uint64_t sub_10002D9D0()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 104);
  uint64_t v3 = *(void *)(v1 + 96);
  return _swift_task_switch(sub_10002DB14, v3, v2);
}

uint64_t sub_10002DB14()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10002DB74@<X0>(uint64_t a1@<X8>)
{
  return sub_10002981C(*(void *)v1, *(void *)(v1 + 8), *(unsigned __int8 *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_10002DB88()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_100027204;
  return sub_10002D780(v2, v3);
}

uint64_t sub_10002DC40(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 56);
  uint64_t v3 = *(void *)(a1 + 64);
  uint64_t v4 = *(void *)(a1 + 72);
  sub_10002783C(*(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  swift_bridgeObjectRetain();
  sub_10002DCDC(v2, v3, v4);
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_10002DCDC(uint64_t a1, uint64_t a2, char a3)
{
  sub_10002783C(a1, a2, a3 & 1);

  return swift_bridgeObjectRetain();
}

uint64_t sub_10002DD18(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 56);
  uint64_t v3 = *(void *)(a1 + 64);
  uint64_t v4 = *(void *)(a1 + 72);
  sub_100026F18(*(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  swift_bridgeObjectRelease();
  sub_10002DDB4(v2, v3, v4);
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10002DDB4(uint64_t a1, uint64_t a2, char a3)
{
  sub_100026F18(a1, a2, a3 & 1);

  return swift_bridgeObjectRelease();
}

uint64_t sub_10002DDF4()
{
  return sub_10002D488(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned __int8 *)(v0 + 32), *(void *)(v0 + 40), (void (*)(uint64_t))sub_10016A334);
}

unint64_t sub_10002DE2C()
{
  unint64_t result = qword_1001FBD98;
  if (!qword_1001FBD98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FBD98);
  }
  return result;
}

uint64_t sub_10002DE84()
{
  return sub_10002D488(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned __int8 *)(v0 + 32), *(void *)(v0 + 40), (void (*)(uint64_t))sub_10016AE2C);
}

uint64_t sub_10002DEC0()
{
  return sub_10002D524();
}

unint64_t sub_10002DED0()
{
  unint64_t result = qword_1001FBDA8;
  if (!qword_1001FBDA8)
  {
    sub_100006C14(&qword_1001FBDA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FBDA8);
  }
  return result;
}

unint64_t sub_10002DF54()
{
  unint64_t result = qword_1001FD8B0;
  if (!qword_1001FD8B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FD8B0);
  }
  return result;
}

uint64_t sub_10002DFB4()
{
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10002DFFC()
{
  return sub_10002AA04();
}

uint64_t sub_10002E014()
{
  return _swift_deallocObject(v0, 17, 7);
}

unint64_t sub_10002E024()
{
  unint64_t result = qword_1001FBE10;
  if (!qword_1001FBE10)
  {
    sub_100006C14(&qword_1001FBE08);
    sub_100006C14(&qword_1001FBBC0);
    type metadata accessor for IconOnlyLabelStyle();
    sub_100027F2C((unint64_t *)&unk_1001FD5A0, &qword_1001FBBC0);
    sub_10002E4F8(&qword_1001FDA20, (void (*)(uint64_t))&type metadata accessor for IconOnlyLabelStyle);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FBE10);
  }
  return result;
}

uint64_t *sub_10002E148(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

unint64_t sub_10002E1CC()
{
  unint64_t result = qword_1001FBE38;
  if (!qword_1001FBE38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FBE38);
  }
  return result;
}

uint64_t sub_10002E220(uint64_t a1)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)(a1 + 120);
  uint64_t v7 = *(void *)(a1 + 112);
  uint64_t v6 = *(void *)(a1 + 128);
  char v4 = *(unsigned char *)(a1 + 136);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100024DB4(v7, v3, v6, v4);
  swift_release();
  swift_release();
  return a1;
}

unint64_t sub_10002E30C()
{
  unint64_t result = qword_1001FBE48;
  if (!qword_1001FBE48)
  {
    sub_100006C14((uint64_t *)&unk_1001FBC60);
    sub_10002E388();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FBE48);
  }
  return result;
}

unint64_t sub_10002E388()
{
  unint64_t result = qword_1001FBE50;
  if (!qword_1001FBE50)
  {
    sub_100006C14(&qword_1001FBC58);
    sub_10002E434();
    sub_10002E4F8(&qword_1001FB4F0, (void (*)(uint64_t))&type metadata accessor for _TaskModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FBE50);
  }
  return result;
}

unint64_t sub_10002E434()
{
  unint64_t result = qword_1001FBE58;
  if (!qword_1001FBE58)
  {
    sub_100006C14(&qword_1001FBD18);
    sub_100027F2C(&qword_1001FBE60, &qword_1001FBE68);
    sub_100027F2C(&qword_1001FBE70, &qword_1001FBE78);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FBE58);
  }
  return result;
}

uint64_t sub_10002E4F8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_10002E540()
{
  swift_getKeyPath();
  sub_10002FA18();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v1 = *(void **)(v0 + 24);
  id v2 = v1;
  return v1;
}

void sub_10002E5B8(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = a2;
  id v3 = a2;
}

uint64_t sub_10002E5EC()
{
  swift_getKeyPath();
  sub_10002FA18();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_10002E66C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(a1 + 32) = a2;
  *(void *)(a1 + 40) = a3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10002E6A8()
{
  swift_getKeyPath();
  uint64_t v3 = v0;
  sub_10002FA18();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v1 = *(void *)(v0 + 48);
  sub_1000272F8(v1, *(void *)(v3 + 56), *(void *)(v3 + 64), *(unsigned char *)(v3 + 72));
  return v1;
}

uint64_t sub_10002E744(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 56);
  uint64_t v7 = *(void *)(a1 + 64);
  *(void *)(a1 + 48) = a2;
  *(void *)(a1 + 56) = a3;
  *(void *)(a1 + 64) = a4;
  char v8 = *(unsigned char *)(a1 + 72);
  *(unsigned char *)(a1 + 72) = a5;
  sub_1000272F8(a2, a3, a4, a5);
  return sub_100024DB4(v5, v6, v7, v8);
}

uint64_t sub_10002E7B8()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_10002E82C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 80) = a2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10002E868(unsigned __int8 a1)
{
  uint64_t v2 = v1[88];
  v1[88] = a1;
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    char v4 = Strong;
    if ([Strong respondsToSelector:"setIsProcessing:"])
    {
      swift_getKeyPath();
      sub_10002FA18();
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      [v4 setIsProcessing:v1[88]];
    }
    swift_unknownObjectRelease();
  }
  return (*(uint64_t (**)(uint64_t))(*(void *)v1 + 704))(v2);
}

uint64_t sub_10002E958()
{
  swift_getKeyPath();
  sub_10002FA18();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(unsigned __int8 *)(v0 + 88);
}

uint64_t sub_10002E9C8(uint64_t a1, unsigned __int8 a2)
{
  return sub_10002E868(a2);
}

uint64_t sub_10002E9F8()
{
  swift_getKeyPath();
  sub_10002FA18();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v1 = *(void *)(v0 + 96);
  swift_errorRetain();
  return v1;
}

uint64_t sub_10002EA74@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_10002FA18();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  *a2 = *(void *)(v3 + 96);
  return swift_errorRetain();
}

uint64_t sub_10002EAF0()
{
  return swift_release();
}

uint64_t sub_10002EB9C()
{
  swift_getKeyPath();
  sub_10002FA18();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(unsigned __int8 *)(v0 + 104);
}

uint64_t sub_10002EC0C@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_10002FA18();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + 104);
  return result;
}

uint64_t sub_10002EC84()
{
  return swift_release();
}

void sub_10002ED24(char a1)
{
  uint64_t v3 = type metadata accessor for LocalizedStringResource();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (((*(uint64_t (**)(uint64_t))(*(void *)v1 + 560))(v5) & 1) != 0
    && (sub_10002F3E0() & 1) == 0
    && (a1 & 1) != 0)
  {
    swift_getKeyPath();
    v12[1] = v1;
    sub_10002FA18();
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    if ((v1[120] & 1) == 0)
    {
      uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        uint64_t v9 = Strong;
        if ([Strong respondsToSelector:"showContentWarningWithTitle:message:"])
        {
          if (qword_1001FAD68 != -1) {
            swift_once();
          }
          uint64_t v10 = sub_10000EBE8(v3, (uint64_t)qword_100212A10);
          (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v10, v3);
          String.init(localized:)();
          NSString v11 = String._bridgeToObjectiveC()();
          [v9 showContentWarningWithTitle:0 message:v11];
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
        }
        else
        {
          swift_unknownObjectRelease();
        }
      }
    }
  }
}

uint64_t sub_10002EF34()
{
  swift_getKeyPath();
  sub_10002FA18();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(void *)(v0 + 112);
}

void sub_10002EFA4(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 112) = a2;
}

uint64_t sub_10002EFE4(uint64_t result)
{
  if ((result & 1) == 0)
  {
    swift_getKeyPath();
    sub_10002FA18();
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    uint64_t result = swift_release();
    if (*(unsigned char *)(v1 + 120) == 1)
    {
      (*(void (**)(uint64_t))(*(void *)v1 + 712))(result);
      swift_getKeyPath();
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      uint64_t result = swift_release();
      if (*(void *)(v1 + 96))
      {
        swift_getKeyPath();
        ObservationRegistrar.access<A, B>(_:keyPath:)();
        uint64_t result = swift_release();
        if ((*(unsigned char *)(v1 + 104) & 1) == 0)
        {
          uint64_t Strong = swift_unknownObjectWeakLoadStrong();
          if (Strong)
          {
            uint64_t v3 = (void *)Strong;
            swift_getKeyPath();
            ObservationRegistrar.access<A, B>(_:keyPath:)();
            swift_release();
            if (*(void *)(v1 + 96))
            {
              swift_errorRetain();
              uint64_t v4 = (void *)_convertErrorToNSError(_:)();
              swift_errorRelease();
            }
            else
            {
              uint64_t v4 = 0;
            }
            [v3 endWritingToolsWithError:v4];

            swift_unknownObjectRelease();
          }
          uint64_t KeyPath = swift_getKeyPath();
          __chkstk_darwin(KeyPath);
          ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
          return swift_release();
        }
      }
    }
  }
  return result;
}

uint64_t sub_10002F224()
{
  swift_getKeyPath();
  sub_10002FA18();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(unsigned __int8 *)(v0 + 120);
}

uint64_t sub_10002F294@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_10002FA18();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + 120);
  return result;
}

uint64_t sub_10002F30C()
{
  return swift_release();
}

uint64_t sub_10002F3AC(uint64_t a1, char a2)
{
  uint64_t v3 = *(unsigned __int8 *)(a1 + 120);
  *(unsigned char *)(a1 + 120) = a2;
  return sub_10002EFE4(v3);
}

uint64_t sub_10002F3E0()
{
  swift_getKeyPath();
  sub_10002FA18();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if ((v0[104] & 1) == 0
    && (swift_getKeyPath(), ObservationRegistrar.access<A, B>(_:keyPath:)(), swift_release(), (v0[112] & 1) != 0))
  {
    swift_getKeyPath();
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    char v1 = v0[120] ^ 1;
  }
  else
  {
    char v1 = 0;
  }
  return v1 & 1;
}

uint64_t sub_10002F4CC(char a1)
{
  uint64_t v2 = v1;
  swift_getKeyPath();
  sub_10002FA18();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_getKeyPath();
  ObservationRegistrar.willSet<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v4 = *(void *)(v2 + 112);
  if (a1)
  {
    uint64_t v5 = v4 | 1;
    sub_10002ED24(v4 | 1);
    *(void *)(v2 + 112) = v5;
    swift_getKeyPath();
    ObservationRegistrar.didSet<A, B>(_:keyPath:)();
  }
  else
  {
    unint64_t v7 = v4 & 0xFFFFFFFFFFFFFFFELL;
    sub_10002ED24(v4 & 0xFE);
    *(void *)(v2 + 112) = v7;
    swift_getKeyPath();
    ObservationRegistrar.didSet<A, B>(_:keyPath:)();
    swift_release();
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  }
  return swift_release();
}

void sub_10002F6EC()
{
}

uint64_t ToolModel.deinit()
{
  sub_10002F7E4(v0 + 16);

  swift_bridgeObjectRelease();
  sub_100024DB4(*(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(unsigned char *)(v0 + 72));
  swift_bridgeObjectRelease();
  swift_errorRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC21WritingToolsUIService9ToolModel___observationRegistrar;
  uint64_t v2 = type metadata accessor for ObservationRegistrar();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t sub_10002F7E4(uint64_t a1)
{
  return a1;
}

uint64_t ToolModel.__deallocating_deinit()
{
  sub_10002F7E4(v0 + 16);

  swift_bridgeObjectRelease();
  sub_100024DB4(*(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(unsigned char *)(v0 + 72));
  swift_bridgeObjectRelease();
  swift_errorRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC21WritingToolsUIService9ToolModel___observationRegistrar;
  uint64_t v2 = type metadata accessor for ObservationRegistrar();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_10002F8E4()
{
  return type metadata accessor for ToolModel();
}

uint64_t type metadata accessor for ToolModel()
{
  uint64_t result = qword_1001FBEB0;
  if (!qword_1001FBEB0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10002F938()
{
  uint64_t result = type metadata accessor for ObservationRegistrar();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

unint64_t sub_10002FA18()
{
  unint64_t result = qword_1001FD2A0;
  if (!qword_1001FD2A0)
  {
    type metadata accessor for ToolModel();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FD2A0);
  }
  return result;
}

uint64_t sub_10002FA70()
{
  return sub_10002FE40();
}

void sub_10002FA98()
{
  *(unsigned char *)(*(void *)(v0 + 16) + 104) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_10002FAA8()
{
  return sub_10002FDFC();
}

uint64_t sub_10002FAC0(uint64_t a1)
{
  if (a1)
  {
    swift_getErrorValue();
    swift_errorRetain();
    id v2 = sub_100115388(v9, v10);
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    sub_10002FA18();
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();

    swift_errorRelease();
  }
  else
  {
    uint64_t v4 = swift_getKeyPath();
    __chkstk_darwin(v4);
    sub_10002FA18();
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
  }
  swift_getKeyPath();
  sub_10002FA18();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  if (*(void *)(v1 + 96))
  {
    swift_getKeyPath();
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    uint64_t result = swift_release();
    if ((*(unsigned char *)(v1 + 104) & 1) == 0)
    {
      uint64_t result = sub_10002F3E0();
      if ((result & 1) == 0)
      {
        swift_getKeyPath();
        ObservationRegistrar.access<A, B>(_:keyPath:)();
        swift_release();
        uint64_t v6 = *(void *)(v1 + 96);
        unint64_t v7 = *(void (**)(void, uint64_t, void, void))(*(void *)v1 + 720);
        swift_errorRetain();
        v7(0, v6, 0, 0);
        swift_errorRelease();
        uint64_t v8 = swift_getKeyPath();
        __chkstk_darwin(v8);
        ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
        return swift_release();
      }
    }
  }
  return result;
}

uint64_t sub_10002FDFC()
{
  *(void *)(*(void *)(v0 + 16) + 96) = *(void *)(v0 + 24);
  swift_errorRetain();
  return swift_errorRelease();
}

uint64_t sub_10002FE40()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 120);
  *(unsigned char *)(v1 + 120) = *(unsigned char *)(v0 + 24);
  return sub_10002EFE4(v2);
}

void sub_10002FEA4()
{
}

void sub_10002FEBC(unint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (uint64_t *)(v1 + 16);
  uint64_t v5 = (uint64_t *)(v1 + 24);
  swift_beginAccess();
  for (unint64_t i = *(void **)(v2 + 16); ; unint64_t i = (void *)*v4)
  {
    unint64_t v8 = i[2];
    if ((uint64_t)v8 <= (uint64_t)a1) {
      break;
    }
    swift_beginAccess();
    uint64_t v9 = (void *)*v4;
    if (*(void *)(*v4 + 16))
    {
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *uint64_t v4 = (uint64_t)v9;
      if (isUniquelyReferenced_nonNull_native)
      {
        unint64_t v8 = v9[2];
        if (!v8) {
          goto LABEL_20;
        }
      }
      else
      {
        uint64_t v9 = sub_100144114(v9);
        *uint64_t v4 = (uint64_t)v9;
        unint64_t v8 = v9[2];
        if (!v8)
        {
LABEL_20:
          __break(1u);
          break;
        }
      }
      v9[2] = v8 - 1;
      *uint64_t v4 = (uint64_t)v9;
    }
    swift_endAccess();
    swift_beginAccess();
    if ((unint64_t)*v5 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v16)
      {
LABEL_2:
        unint64_t v7 = 0;
        goto LABEL_3;
      }
    }
    else if (!*(void *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_2;
    }
    uint64_t v11 = *v5;
    int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
    *uint64_t v5 = v11;
    if (!isUniquelyReferenced_nonNull_bridgeObject || v11 < 0 || (v11 & 0x4000000000000000) != 0)
    {
      uint64_t v11 = sub_100144110(v11);
      *uint64_t v5 = v11;
    }
    uint64_t v13 = v11 & 0xFFFFFFFFFFFFFF8;
    uint64_t v14 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v14)
    {
      __break(1u);
      return;
    }
    uint64_t v15 = v14 - 1;
    unint64_t v7 = *(void **)((v11 & 0xFFFFFFFFFFFFFF8) + 8 * v15 + 0x20);
    *(void *)(v13 + 16) = v15;
    specialized Array._endMutation()();
LABEL_3:
    swift_endAccess();
  }
  if (v8 < a1)
  {
    do
    {
      [objc_allocWithZone((Class)NSTextList) initWithMarkerFormat:NSTextListMarkerCircle options:0];
      swift_beginAccess();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      swift_endAccess();
      swift_beginAccess();
      uint64_t v17 = (void *)*v4;
      char v18 = swift_isUniquelyReferenced_nonNull_native();
      *uint64_t v4 = (uint64_t)v17;
      if ((v18 & 1) == 0)
      {
        uint64_t v17 = sub_1001436DC(0, v17[2] + 1, 1, v17);
        *uint64_t v4 = (uint64_t)v17;
      }
      unint64_t v20 = v17[2];
      unint64_t v19 = v17[3];
      if (v20 >= v19 >> 1)
      {
        uint64_t v17 = sub_1001436DC((void *)(v19 > 1), v20 + 1, 1, v17);
        *uint64_t v4 = (uint64_t)v17;
      }
      v17[2] = v20 + 1;
      v17[v20 + 4] = 0;
      uint64_t v21 = *v4;
      swift_endAccess();
    }
    while (*(void *)(v21 + 16) < a1);
  }
}

uint64_t sub_1000301A0(uint64_t a1, void *a2)
{
  uint64_t v5 = (uint64_t *)(v2 + 24);
  uint64_t result = swift_beginAccess();
  unint64_t v7 = *(void *)(v2 + 24);
  if (!(v7 >> 62))
  {
    if (!*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      return result;
    }
LABEL_3:
    unint64_t v8 = (unint64_t *)(v2 + 16);
    uint64_t result = swift_beginAccess();
    if (!*(void *)(*(void *)(v2 + 16) + 16)) {
      return result;
    }
    unint64_t v9 = *v5;
    if ((unint64_t)*v5 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      unint64_t v11 = v16 - 1;
      if (!__OFSUB__(v16, 1)) {
        goto LABEL_6;
      }
    }
    else
    {
      uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
      unint64_t v11 = v10 - 1;
      if (!__OFSUB__(v10, 1))
      {
LABEL_6:
        swift_beginAccess();
        uint64_t v12 = *v5;
        unint64_t v9 = a2;
        int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
        *uint64_t v5 = v12;
        if (!isUniquelyReferenced_nonNull_bridgeObject || v12 < 0 || (v12 & 0x4000000000000000) != 0)
        {
          uint64_t v12 = sub_100144110(v12);
          *uint64_t v5 = v12;
        }
        if ((v11 & 0x8000000000000000) == 0)
        {
          if (v11 < *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            uint64_t v14 = *(void **)((v12 & 0xFFFFFFFFFFFFFF8) + 8 * v11 + 0x20);
            *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 8 * v11 + 0x20) = v9;

            specialized Array._endMutation()();
            swift_endAccess();
            a2 = *(void **)(*v8 + 16);
            swift_beginAccess();
            unint64_t v9 = *v8;
            uint64_t result = swift_isUniquelyReferenced_nonNull_native();
            unint64_t *v8 = v9;
            if (result)
            {
              if (a2) {
                goto LABEL_14;
              }
              goto LABEL_25;
            }
LABEL_24:
            uint64_t result = (uint64_t)sub_100144114((void *)v9);
            unint64_t v9 = result;
            unint64_t *v8 = result;
            if (a2)
            {
LABEL_14:
              if ((unint64_t)a2 <= *(void *)(v9 + 16))
              {
                *(void *)(v9 + 8 * ((uint64_t)a2 - 1) + 32) = a1;
                return swift_endAccess();
              }
LABEL_26:
              __break(1u);
              return result;
            }
LABEL_25:
            __break(1u);
            goto LABEL_26;
          }
LABEL_23:
          __break(1u);
          goto LABEL_24;
        }
LABEL_22:
        __break(1u);
        goto LABEL_23;
      }
    }
    __break(1u);
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = swift_bridgeObjectRelease();
  if (v15) {
    goto LABEL_3;
  }
  return result;
}

uint64_t sub_1000303AC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ListTracker()
{
  return self;
}

NSTextListMarkerFormat sub_100030410()
{
  sub_1000063C0(&qword_1001FC3A0);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_10018A730;
  *(void *)(v0 + 32) = NSTextListMarkerDecimal;
  *(void *)(v0 + 40) = NSTextListMarkerLowercaseAlpha;
  *(void *)(v0 + 48) = NSTextListMarkerLowercaseRoman;
  off_1001FC1C8 = (_UNKNOWN *)v0;
  uint64_t v1 = NSTextListMarkerDecimal;
  uint64_t v2 = NSTextListMarkerLowercaseAlpha;

  return NSTextListMarkerLowercaseRoman;
}

unint64_t sub_1000304AC@<X0>(unint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  id v359 = a2;
  unint64_t v352 = a1;
  uint64_t v348 = a3;
  uint64_t v300 = type metadata accessor for AttributedSubstring();
  uint64_t v285 = *(void *)(v300 - 8);
  __chkstk_darwin(v300);
  v304 = (char *)&v268 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v334 = sub_1000063C0(&qword_1001FC2B8);
  uint64_t v4 = __chkstk_darwin(v334);
  long long v333 = (char *)&v268 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  long long v332 = (void (**)(char *, uint64_t))((char *)&v268 - v6);
  uint64_t v336 = type metadata accessor for RestoreWhiteSpaceLocation();
  uint64_t v335 = *(char **)(v336 - 8);
  uint64_t v7 = __chkstk_darwin(v336);
  v350 = (void (**)(char *, uint64_t))((char *)&v268 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v7);
  uint64_t v294 = (uint64_t)&v268 - v9;
  uint64_t v323 = type metadata accessor for PresentationIntent.Kind();
  uint64_t v288 = *(void *)(v323 - 8);
  uint64_t v10 = __chkstk_darwin(v323);
  uint64_t v317 = (char *)&v268 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v313 = (char *)&v268 - v12;
  uint64_t v324 = type metadata accessor for PresentationIntent.IntentType();
  uint64_t v305 = *(void *)(v324 - 8);
  uint64_t v13 = __chkstk_darwin(v324);
  uint64_t v318 = (char *)&v268 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v319 = (char *)&v268 - v15;
  uint64_t v16 = sub_1000063C0(&qword_1001FC2C0);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  uint64_t v301 = (char *)&v268 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v307 = (uint64_t)&v268 - v20;
  __chkstk_darwin(v19);
  uint64_t v320 = (int *)((char *)&v268 - v21);
  uint64_t v325 = type metadata accessor for PresentationIntent();
  uint64_t v287 = *(void *)(v325 - 8);
  uint64_t v22 = __chkstk_darwin(v325);
  uint64_t v306 = (char *)&v268 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  long long v293 = (char *)&v268 - v24;
  uint64_t v25 = sub_1000063C0(&qword_1001FC2C8);
  __chkstk_darwin(v25 - 8);
  uint64_t v321 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))((char *)&v268 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v27 = sub_1000063C0(&qword_1001FC2D0);
  uint64_t v28 = __chkstk_darwin(v27 - 8);
  uint64_t v308 = (char *)&v268 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  uint64_t v292 = (char *)&v268 - v30;
  uint64_t v290 = sub_1000063C0(&qword_1001FC2D8);
  uint64_t v298 = *(void *)(v290 - 8);
  __chkstk_darwin(v290);
  uint64_t v289 = (char *)&v268 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v322 = sub_1000063C0(&qword_1001FC2E0);
  uint64_t v297 = *(void *)(v322 - 8);
  uint64_t v32 = __chkstk_darwin(v322);
  uint64_t v309 = (char *)&v268 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  uint64_t v340 = (char *)&v268 - v34;
  uint64_t v328 = type metadata accessor for AttributeContainer();
  uint64_t v312 = *(void (***)(char *, uint64_t))(v328 - 8);
  uint64_t v35 = __chkstk_darwin(v328);
  uint64_t v327 = (uint64_t (**)(char *, uint64_t))((char *)&v268 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v35);
  v341 = (char *)&v268 - v37;
  uint64_t v338 = sub_1000063C0(&qword_1001FC2E8);
  uint64_t v38 = __chkstk_darwin(v338);
  uint64_t v316 = (uint64_t)&v268 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = __chkstk_darwin(v38);
  uint64_t v314 = (uint64_t)&v268 - v41;
  uint64_t v42 = __chkstk_darwin(v40);
  uint64_t v331 = (char *)&v268 - v43;
  uint64_t v44 = __chkstk_darwin(v42);
  uint64_t v337 = (uint64_t)&v268 - v45;
  uint64_t v46 = __chkstk_darwin(v44);
  long long v339 = (char *)&v268 - v47;
  __chkstk_darwin(v46);
  v355 = (uint64_t *)((char *)&v268 - v48);
  uint64_t v354 = sub_1000063C0(&qword_1001FC2F0);
  __chkstk_darwin(v354);
  uint64_t v353 = (uint64_t)&v268 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v361 = type metadata accessor for AttributedString.Index();
  uint64_t v360 = *(void *)(v361 - 8);
  uint64_t v50 = __chkstk_darwin(v361);
  v357 = (char *)&v268 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v50);
  v358 = (char *)&v268 - v52;
  uint64_t v295 = (void (**)(void, void))sub_1000063C0(&qword_1001FC2F8);
  uint64_t v330 = (uint64_t)*(v295 - 1);
  __chkstk_darwin(v295);
  uint64_t v329 = (char *)&v268 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v299 = type metadata accessor for AttributedString.Runs();
  uint64_t v345 = *(void *)(v299 - 8);
  __chkstk_darwin(v299);
  v344 = (char *)&v268 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_1000063C0(&qword_1001FC300);
  __chkstk_darwin(v55 - 8);
  uint64_t v302 = (char *)&v268 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v303 = sub_1000063C0(&qword_1001FC308);
  uint64_t v57 = __chkstk_darwin(v303);
  uint64_t v296 = (void (**)(char *, uint64_t, uint64_t))((char *)&v268 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v57);
  v356 = (void (*)(char *, uint64_t))((char *)&v268 - v59);
  uint64_t v60 = sub_1000063C0((uint64_t *)&unk_100201520);
  __chkstk_darwin(v60 - 8);
  uint64_t v62 = (char *)&v268 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v349 = type metadata accessor for AttributedString.MarkdownParsingOptions.FailurePolicy();
  uint64_t v63 = *(void *)(v349 - 8);
  __chkstk_darwin(v349);
  char v65 = (char *)&v268 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = type metadata accessor for AttributedString.MarkdownParsingOptions.InterpretedSyntax();
  uint64_t v67 = *(void *)(v66 - 8);
  __chkstk_darwin(v66);
  uint64_t v69 = (char *)&v268 - ((v68 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = type metadata accessor for AttributedString.MarkdownParsingOptions();
  __chkstk_darwin(v70 - 8);
  uint64_t v347 = type metadata accessor for AttributedString();
  uint64_t v351 = *(void *)(v347 - 8);
  uint64_t v71 = __chkstk_darwin(v347);
  Swift::String v73 = (char *)&v268 - ((v72 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v71);
  unint64_t v75 = (char *)&v268 - v74;
  (*(void (**)(char *, void, uint64_t))(v67 + 104))(v69, enum case for AttributedString.MarkdownParsingOptions.InterpretedSyntax.full(_:), v66);
  (*(void (**)(char *, void, uint64_t))(v63 + 104))(v65, enum case for AttributedString.MarkdownParsingOptions.FailurePolicy.returnPartiallyParsedIfPossible(_:), v349);
  AttributedString.MarkdownParsingOptions.init(allowsExtendedAttributes:interpretedSyntax:failurePolicy:languageCode:)();
  uint64_t v76 = type metadata accessor for URL();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v76 - 8) + 56))(v62, 1, 1, v76);
  uint64_t v77 = v362;
  unint64_t result = AttributedString.init(markdown:options:baseURL:)();
  if (v77) {
    return result;
  }
  uint64_t v79 = v295;
  uint64_t v349 = (uint64_t)v73;
  uint64_t v277 = 0;
  (*(void (**)(uint64_t, char *, uint64_t))(v351 + 32))(v348, v75, v347);
  uint64_t v80 = self;
  id v81 = [v80 preferredFontDescriptorWithTextStyle:UIFontTextStyleBody];
  id v82 = [v81 fontDescriptorWithSymbolicTraits:2];
  if (!v82) {
    id v82 = v81;
  }
  id v283 = v82;
  id v83 = [v81 fontDescriptorWithSymbolicTraits:1];
  uint64_t v84 = (uint64_t)v356;
  if (!v83) {
    id v83 = v81;
  }
  uint64_t v85 = v83;
  id v282 = [v80 preferredFontDescriptorWithTextStyle:UIFontTextStyleLargeTitle];
  id v281 = [v80 preferredFontDescriptorWithTextStyle:UIFontTextStyleTitle1];
  id v280 = [v80 preferredFontDescriptorWithTextStyle:UIFontTextStyleTitle2];
  id v86 = [v80 preferredFontDescriptorWithTextStyle:UIFontTextStyleTitle3];
  uint64_t v87 = self;
  id v276 = v81;
  v362 = [v87 fontWithDescriptor:v81 size:0.0];
  id v88 = [v87 fontWithDescriptor:v283 size:0.0];
  id v275 = v85;
  id v311 = [v87 fontWithDescriptor:v85 size:0.0];
  id v89 = [v87 fontWithDescriptor:v282 size:0.0];
  id v90 = [v87 fontWithDescriptor:v281 size:0.0];
  id v359 = v90;
  id v91 = [v87 fontWithDescriptor:v280 size:0.0];
  id v274 = v86;
  id v92 = [v87 fontWithDescriptor:v86 size:0.0];
  sub_1000063C0(&qword_1001FAFD0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10018B230;
  *(void *)(inited + 32) = v89;
  *(void *)(inited + 40) = v90;
  *(void *)(inited + 48) = v91;
  *(void *)(inited + 56) = v92;
  *(void *)(inited + 64) = v88;
  *(void *)(inited + 72) = v88;
  uint64_t v365 = inited;
  specialized Array._endMutation()();
  uint64_t v279 = v365;
  uint64_t KeyPath = swift_getKeyPath();
  *(&v268 - 2) = __chkstk_darwin(KeyPath);
  swift_getKeyPath();
  uint64_t v95 = v362;
  uint64_t v365 = (uint64_t)v362;
  unint64_t v96 = sub_1000339C8();
  id v310 = v88;
  id v273 = v89;
  id v272 = v359;
  id v271 = v91;
  id v270 = v92;
  id v269 = v95;
  unint64_t v315 = v96;
  uint64_t v97 = v348;
  AttributedString.subscript.setter();
  uint64_t v98 = v351;
  uint64_t v99 = *(void (**)(uint64_t, uint64_t, uint64_t))(v351 + 16);
  uint64_t v100 = v349;
  uint64_t v101 = v347;
  uint64_t v343 = v351 + 16;
  unint64_t v342 = v99;
  v99(v349, v97, v347);
  uint64_t v102 = v344;
  AttributedString.runs.getter();
  uint64_t v103 = *(NSString **)(v98 + 8);
  uint64_t v351 = v98 + 8;
  NSTextListMarkerFormat v346 = v103;
  ((void (*)(uint64_t, uint64_t))v103)(v100, v101);
  unint64_t v104 = sub_100033AA0();
  uint64_t v105 = v329;
  v326 = (void (**)(char *, uint64_t))v104;
  AttributedString.Runs.subscript.getter();
  v284 = *(void (**)(char *, uint64_t))(v345 + 8);
  v345 += 8;
  v284(v102, v299);
  uint64_t v106 = v330;
  uint64_t v107 = v302;
  (*(void (**)(char *, char *, void (**)(void, void)))(v330 + 32))(v302, v105, v79);
  uint64_t v108 = (uint64_t)v296;
  (*(void (**)(char *, char *, void (**)(void, void)))(v106 + 16))((char *)v296, v107, v79);
  uint64_t v109 = sub_100027F2C(&qword_1001FC320, &qword_1001FC2F8);
  long long v110 = v358;
  dispatch thunk of Collection.endIndex.getter();
  (*(void (**)(char *, void))(v106 + 8))(v107, v79);
  uint64_t v111 = v303;
  uint64_t v112 = v108 + *(int *)(v303 + 36);
  uint64_t v113 = v360;
  uint64_t v114 = *(char **)(v360 + 32);
  uint64_t v330 = v360 + 32;
  uint64_t v329 = v114;
  ((void (*)(uint64_t, char *, uint64_t))v114)(v112, v110, v361);
  sub_100026FD0(v108, v84, &qword_1001FC308);
  uint64_t v115 = v84 + *(int *)(v111 + 36);
  char v116 = *(void **)(v113 + 16);
  v113 += 16;
  id v359 = v116;
  v362 = (void *)(v113 - 8);
  uint64_t v360 = v113;
  unint64_t v352 = v109;
  uint64_t v117 = v361;
  while (1)
  {
    long long v119 = v358;
    ((void (*)(char *, uint64_t, uint64_t))v359)(v358, v115, v117);
    long long v120 = v357;
    dispatch thunk of Collection.startIndex.getter();
    uint64_t v121 = v84;
    uint64_t v122 = sub_100033F80(&qword_1001FC328, (void (*)(uint64_t))&type metadata accessor for AttributedString.Index);
    char v123 = dispatch thunk of static Equatable.== infix(_:_:)();
    long long v124 = v120;
    long long v125 = (void (*)(char *, uint64_t))*v362;
    ((void (*)(char *, uint64_t))*v362)(v124, v117);
    v125(v119, v117);
    if (v123) {
      break;
    }
    sub_100027F2C(&qword_1001FC330, &qword_1001FC2F8);
    dispatch thunk of BidirectionalCollection.formIndex(before:)();
    long long v126 = (void (*)(uint64_t *, void))dispatch thunk of Collection.subscript.read();
    uint64_t v127 = v353;
    sub_100008DD4(v128, v353, &qword_1001FC2F0);
    v126(&v365, 0);
    uint64_t v129 = *(void *)v127;
    char v130 = *(unsigned char *)(v127 + 8);
    uint64_t v131 = v127 + *(int *)(v354 + 48);
    char v132 = v355;
    sub_100026FD0(v131, (uint64_t)v355, &qword_1001FC2E8);
    if ((v130 & 1) == 0 && (v129 == 128 || v129 == 64))
    {
      uint64_t v363 = 10;
      unint64_t v364 = 0xE100000000000000;
      long long v118 = (void (*)(uint64_t *, void))AttributedString.characters.modify();
      sub_100033AF4();
      AttributedString.CharacterView.replaceSubrange<A>(_:with:)();
      v118(&v365, 0);
    }
    sub_10002784C((uint64_t)v132, &qword_1001FC2E8);
    uint64_t v84 = (uint64_t)v356;
  }
  uint64_t v354 = v122;
  sub_10002784C(v121, &qword_1001FC308);
  v356 = v125;
  uint64_t v133 = 0;
  uint64_t v134 = v312 + 1;
  do
  {
    unsigned int v144 = *(_UNKNOWN **)((char *)&off_1001EA300 + v133 + 32);
    AttributeContainer.init()();
    if (v144 == (void *)1)
    {
      uint64_t v135 = swift_getKeyPath();
      *(&v268 - 2) = __chkstk_darwin(v135);
      swift_getKeyPath();
      uint64_t v365 = 1;
      char v366 = 0;
      AttributeContainer.subscript.setter();
      uint64_t v136 = swift_getKeyPath();
      *(&v268 - 2) = __chkstk_darwin(v136);
      swift_getKeyPath();
      uint64_t v137 = &v343;
LABEL_16:
      uint64_t v365 = *(v137 - 32);
      id v138 = (id)v365;
LABEL_17:
      AttributeContainer.subscript.setter();
      goto LABEL_18;
    }
    if (v144 == (void *)2)
    {
      uint64_t v149 = swift_getKeyPath();
      *(&v268 - 2) = __chkstk_darwin(v149);
      swift_getKeyPath();
      uint64_t v365 = 2;
      char v366 = 0;
      AttributeContainer.subscript.setter();
      uint64_t v150 = swift_getKeyPath();
      *(&v268 - 2) = __chkstk_darwin(v150);
      swift_getKeyPath();
      uint64_t v137 = (uint64_t *)&v342;
      goto LABEL_16;
    }
    if (v144 == (void *)32)
    {
      uint64_t v145 = swift_getKeyPath();
      *(&v268 - 2) = __chkstk_darwin(v145);
      swift_getKeyPath();
      uint64_t v365 = 32;
      char v366 = 0;
      AttributeContainer.subscript.setter();
      uint64_t v146 = swift_getKeyPath();
      *(&v268 - 2) = __chkstk_darwin(v146);
      swift_getKeyPath();
      uint64_t v147 = v321;
      static Text.LineStyle.single.getter();
      uint64_t v148 = type metadata accessor for Text.LineStyle();
      (*(void (**)(unsigned int (**)(uint64_t, uint64_t, uint64_t), void, uint64_t, uint64_t))(*(void *)(v148 - 8) + 56))(v147, 0, 1, v148);
      sub_10003404C();
      goto LABEL_17;
    }
LABEL_18:
    uint64_t v139 = (char *)v327;
    AttributeContainer.init()();
    uint64_t v140 = swift_getKeyPath();
    *(&v268 - 2) = __chkstk_darwin(v140);
    swift_getKeyPath();
    uint64_t v365 = (uint64_t)v144;
    char v366 = 0;
    AttributeContainer.subscript.setter();
    AttributedString.replaceAttributes(_:with:)();
    char v141 = *v134;
    double v142 = v341;
    uint64_t v143 = v328;
    (*v134)(v139, v328);
    v141(v142, v143);
    v133 += 8;
  }
  while (v133 != 64);
  uint64_t v151 = v349;
  uint64_t v152 = v347;
  v342(v349, v348, v347);
  uint64_t v153 = v344;
  AttributedString.runs.getter();
  ((void (*)(uint64_t, uint64_t))v346)(v151, v152);
  unint64_t v154 = sub_100033BCC();
  uint64_t v155 = v289;
  unint64_t v291 = v154;
  AttributedString.Runs.subscript.getter();
  v284(v153, v299);
  uint64_t v156 = v290;
  AttributedString.Runs.AttributesSlice1.makeIterator()();
  uint64_t v278 = *(void (**)(char *, uint64_t))(v298 + 8);
  v298 += 8;
  v278(v155, v156);
  int v286 = 0;
  unint64_t v352 = 0;
  uint64_t v321 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v287 + 48);
  uint64_t v296 = (void (**)(char *, uint64_t, uint64_t))(v287 + 32);
  uint64_t v328 = v305 + 16;
  uint64_t v327 = (uint64_t (**)(char *, uint64_t))(v288 + 88);
  LODWORD(v353) = enum case for PresentationIntent.Kind.listItem(_:);
  LODWORD(v341) = enum case for PresentationIntent.Kind.paragraph(_:);
  v326 = (void (**)(char *, uint64_t))(v305 + 8);
  uint64_t v312 = (void (**)(char *, uint64_t))(v288 + 8);
  uint64_t v295 = (void (**)(void, void))(v287 + 8);
  v355 = _swiftEmptyArrayStorage;
  id v157 = v335;
  uint64_t v158 = (uint64_t)v292;
  while (1)
  {
    AttributedString.Runs.AttributesSlice1.Iterator.next()();
    uint64_t v159 = sub_1000063C0(&qword_1001FC348);
    uint64_t v160 = *(void *)(v159 - 8);
    id v161 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v160 + 48);
    uint64_t v162 = (char *)(v160 + 48);
    if (v161(v158, 1, v159) == 1) {
      break;
    }
    uint64_t v163 = (uint64_t)v339;
    sub_100026FD0(v158 + *(int *)(v159 + 48), (uint64_t)v339, &qword_1001FC2E8);
    uint64_t v164 = (uint64_t)v320;
    sub_100026FD0(v158, (uint64_t)v320, &qword_1001FC2C0);
    if ((*v321)(v164, 1, v325) == 1)
    {
      sub_10002784C(v163, &qword_1001FC2E8);
      sub_10002784C(v164, &qword_1001FC2C0);
    }
    else
    {
      (*v296)(v293, v164, v325);
      uint64_t v165 = PresentationIntent.components.getter();
      uint64_t v166 = *(void *)(v165 + 16);
      if (!v166)
      {
        swift_bridgeObjectRelease();
        char v167 = 0;
        LODWORD(v303) = 0;
        uint64_t v178 = v294;
        uint64_t v179 = (uint64_t)v339;
        uint64_t v180 = v361;
        if ((v286 & 1) == 0) {
          goto LABEL_42;
        }
        goto LABEL_40;
      }
      char v167 = 0;
      LODWORD(v303) = 0;
      unint64_t v168 = (*(unsigned __int8 *)(v305 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v305 + 80);
      uint64_t v268 = v165;
      unint64_t v169 = v165 + v168;
      uint64_t v170 = *(void *)(v305 + 72);
      uint64_t v171 = *(void (**)(char *, unint64_t, uint64_t))(v305 + 16);
      LODWORD(v302) = 1;
      uint64_t v172 = v324;
      uint64_t v173 = v319;
      v171(v319, v165 + v168, v324);
      while (1)
      {
        uint64_t v174 = v313;
        PresentationIntent.IntentType.kind.getter();
        int v175 = (*v327)(v174, v323);
        if (v175 == v353)
        {
          (*v326)(v173, v172);
          char v167 = 1;
        }
        else if (v175 == v341)
        {
          uint64_t v176 = v319;
          LODWORD(v302) = v352 != PresentationIntent.IntentType.identity.getter();
          unint64_t v352 = PresentationIntent.IntentType.identity.getter();
          uint64_t v172 = v324;
          (*v326)(v176, v324);
          LODWORD(v303) = 1;
        }
        else
        {
          uint64_t v172 = v324;
          (*v326)(v319, v324);
          (*v312)(v313, v323);
        }
        v169 += v170;
        --v166;
        uint64_t v173 = v319;
        if (!v166) {
          break;
        }
        v171(v319, v169, v172);
      }
      uint64_t v177 = v361;
      swift_bridgeObjectRelease();
      uint64_t v178 = v294;
      if (v286 & v302)
      {
        uint64_t v153 = v344;
        uint64_t v158 = (uint64_t)v292;
        uint64_t v179 = (uint64_t)v339;
        uint64_t v180 = v177;
LABEL_40:
        LOBYTE(v166) = v167 ^ 1;
        goto LABEL_42;
      }
      LOBYTE(v166) = 0;
      uint64_t v153 = v344;
      uint64_t v158 = (uint64_t)v292;
      uint64_t v179 = (uint64_t)v339;
      uint64_t v180 = v177;
LABEL_42:
      ((void (*)(uint64_t, uint64_t, uint64_t))v359)(v178, v179, v180);
      *(unsigned char *)(v178 + *(int *)(v336 + 20)) = v166 & 1;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        v355 = (void *)sub_100143818(0, v355[2] + 1, 1, (unint64_t)v355);
      }
      uint64_t v181 = v293;
      int v182 = v303;
      unint64_t v184 = v355[2];
      unint64_t v183 = v355[3];
      if (v184 >= v183 >> 1) {
        v355 = (void *)sub_100143818(v183 > 1, v184 + 1, 1, (unint64_t)v355);
      }
      unint64_t v185 = v355;
      v355[2] = v184 + 1;
      sub_100033FC8(v294, (uint64_t)v185+ ((v157[80] + 32) & ~(unint64_t)v157[80])+ *((void *)v157 + 9) * v184);
      (*v295)(v181, v325);
      sub_10002784C((uint64_t)v339, &qword_1001FC2E8);
      int v286 = v182;
    }
  }
  v313 = v162;
  uint64_t v319 = (char *)v161;
  uint64_t v320 = (int *)v159;
  uint64_t v186 = *(void (**)(char *, uint64_t))(v297 + 8);
  v297 += 8;
  uint64_t v303 = (uint64_t)v186;
  v186(v340, v322);
  int64_t v187 = v355[2];
  uint64_t v188 = v350;
  uint64_t v189 = v358;
  uint64_t v190 = v348;
  if (v187)
  {
    uint64_t v353 = (uint64_t)v355 + ((v157[80] + 32) & ~(unint64_t)v157[80]);
    while (v187 <= v355[2])
    {
      --v187;
      sub_100033C20(v353 + *((void *)v157 + 9) * v187, (uint64_t)v188);
      uint64_t v191 = v361;
      ((void (*)(char *, void (**)(char *, uint64_t), uint64_t))v359)(v189, v188, v361);
      uint64_t v192 = v349;
      uint64_t v193 = v347;
      v342(v349, v190, v347);
      uint64_t v194 = v357;
      AttributedString.startIndex.getter();
      ((void (*)(uint64_t, uint64_t))v346)(v192, v193);
      uint64_t v159 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v195 = v356;
      v356(v194, v191);
      v195(v189, v191);
      if ((v159 & 1) == 0)
      {
        unint64_t v352 = v187;
        uint64_t v196 = v350;
        uint64_t v197 = v349;
        if (*((unsigned char *)v350 + *(int *)(v336 + 20)) == 1)
        {
          AttributedString.init(stringLiteral:)();
          sub_100033F80(&qword_1001FC370, (void (*)(uint64_t))&type metadata accessor for AttributedString);
          uint64_t v198 = v347;
          AttributedString.insert<A>(_:at:)();
          ((void (*)(uint64_t, uint64_t))v346)(v197, v198);
        }
        uint64_t v199 = AttributedString.characters.modify();
        uint64_t v201 = v200;
        uint64_t v363 = 10;
        unint64_t v364 = 0xE100000000000000;
        sub_100033F80(&qword_1001FC350, (void (*)(uint64_t))&type metadata accessor for AttributedString.Index);
        uint64_t v202 = v361;
        unint64_t result = dispatch thunk of static Comparable.<= infix(_:_:)();
        uint64_t v203 = v334;
        uint64_t v204 = v333;
        if ((result & 1) == 0)
        {
          __break(1u);
LABEL_96:
          __break(1u);
LABEL_97:
          __break(1u);
LABEL_98:
          __break(1u);
          __break(1u);
LABEL_99:
          __break(1u);
LABEL_100:
          __break(1u);
          goto LABEL_101;
        }
        uint64_t v205 = v202;
        uint64_t v206 = v332;
        uint64_t v207 = (uint64_t)v332 + *(int *)(v334 + 48);
        uint64_t v340 = v201;
        v341 = (char *)v199;
        char v208 = (void (*)(uint64_t, void (**)(char *, uint64_t), uint64_t))v359;
        ((void (*)(void (**)(char *, uint64_t), void (**)(char *, uint64_t), uint64_t))v359)(v332, v196, v205);
        long long v339 = (char *)v207;
        v208(v207, v196, v205);
        uint64_t v209 = &v204[*(int *)(v203 + 48)];
        v208((uint64_t)v204, v206, v205);
        v208((uint64_t)v209, (void (**)(char *, uint64_t))v207, v205);
        uint64_t v210 = (uint64_t)v331;
        uint64_t v211 = (void (*)(char *, char *, uint64_t))v329;
        ((void (*)(char *, char *, uint64_t))v329)(v331, v204, v205);
        uint64_t v212 = v356;
        v356(v209, v205);
        uint64_t v213 = &v204[*(int *)(v203 + 48)];
        v211(v204, (char *)v206, v205);
        v211(v213, v339, v205);
        v211((char *)(v210 + *(int *)(v338 + 36)), v213, v205);
        v212(v204, v205);
        uint64_t v214 = v337;
        sub_100026FD0(v210, v337, &qword_1001FC2E8);
        type metadata accessor for AttributedString.CharacterView();
        sub_100033F80(&qword_1001FC358, (void (*)(uint64_t))&type metadata accessor for AttributedString.CharacterView);
        sub_100033AF4();
        uint64_t v159 = (uint64_t)v340;
        uint64_t v190 = v348;
        dispatch thunk of RangeReplaceableCollection.replaceSubrange<A>(_:with:)();
        sub_10002784C(v214, &qword_1001FC2E8);
        ((void (*)(uint64_t *, void))v341)(&v365, 0);
        id v157 = v335;
        int64_t v187 = v352;
      }
      uint64_t v188 = v350;
      sub_100033C84((uint64_t)v350);
      uint64_t v153 = v344;
      uint64_t v189 = v358;
      if (!v187) {
        goto LABEL_56;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_56:
    swift_bridgeObjectRelease();
    type metadata accessor for ListTracker();
    uint64_t v215 = swift_initStackObject();
    *(void *)(v215 + 16) = _swiftEmptyArrayStorage;
    uint64_t v216 = v215 + 16;
    uint64_t v354 = v215;
    *(void *)(v215 + 24) = _swiftEmptyArrayStorage;
    uint64_t v217 = v215 + 24;
    uint64_t v218 = v349;
    uint64_t v219 = v190;
    uint64_t v220 = v347;
    v342(v349, v219, v347);
    AttributedString.runs.getter();
    ((void (*)(uint64_t, uint64_t))v346)(v218, v220);
    uint64_t v221 = v289;
    AttributedString.Runs.subscript.getter();
    v284(v153, v299);
    uint64_t v222 = v290;
    AttributedString.Runs.AttributesSlice1.makeIterator()();
    v278(v221, v222);
    uint64_t v349 = v216;
    swift_beginAccess();
    uint64_t v347 = v217;
    swift_beginAccess();
    uint64_t v223 = v308;
    uint64_t v189 = (char *)v322;
    AttributedString.Runs.AttributesSlice1.Iterator.next()();
    uint64_t v159 = (uint64_t)v223;
    uint64_t v188 = (void (**)(char *, uint64_t))v320;
    int v224 = ((uint64_t (*)(char *, uint64_t, int *))v319)(v223, 1, v320);
    int64_t v187 = v323;
    uint64_t v190 = v305;
    id v157 = v318;
    if (v224 == 1)
    {
LABEL_57:
      ((void (*)(char *, char *))v303)(v309, v189);
      swift_bridgeObjectRelease();

      swift_setDeallocating();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  uint64_t v360 = v288 + 96;
  v358 = (char *)(v279 & 0xC000000000000001);
  v357 = (char *)(v279 & 0xFFFFFFFFFFFFFF8);
  v356 = (void (*)(char *, uint64_t))(v279 + 32);
  uint64_t v351 = v287 + 56;
  v350 = (void (**)(char *, uint64_t))(v285 + 8);
  LODWORD(v362) = enum case for PresentationIntent.Kind.header(_:);
  LODWORD(v359) = enum case for PresentationIntent.Kind.orderedList(_:);
  LODWORD(v355) = enum case for PresentationIntent.Kind.unorderedList(_:);
  NSTextListMarkerFormat v346 = NSTextListMarkerCircle;
  while (2)
  {
    uint64_t v227 = v314;
    sub_100026FD0(v159 + *((int *)v188 + 12), v314, &qword_1001FC2E8);
    uint64_t v228 = v159;
    uint64_t v229 = v307;
    sub_100026FD0(v228, v307, &qword_1001FC2C0);
    uint64_t v230 = v325;
    if ((*v321)(v229, 1, v325) == 1)
    {
      sub_10002784C(v227, &qword_1001FC2E8);
      sub_10002784C(v229, &qword_1001FC2C0);
      goto LABEL_61;
    }
    (*v296)(v306, v229, v230);
    uint64_t v231 = sub_100027F2C(&qword_1001FC360, &qword_1001FC2E8);
    uint64_t v232 = v304;
    uint64_t v361 = v231;
    AttributedString.subscript.getter();
    unint64_t v352 = PresentationIntent.indentationLevel.getter();
    sub_10002FEBC(v352);
    uint64_t v233 = PresentationIntent.components.getter();
    uint64_t v234 = *(void *)(v233 + 16);
    if (!v234)
    {
      uint64_t v239 = v227;
      swift_bridgeObjectRelease();
      uint64_t v240 = v301;
LABEL_80:
      uint64_t v251 = v337;
LABEL_81:
      sub_100008DD4(v239, v251, &qword_1001FC2E8);
      uint64_t v252 = swift_getKeyPath();
      *(&v268 - 2) = __chkstk_darwin(v252);
      swift_getKeyPath();
      uint64_t v253 = v325;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))v351)(v240, 1, 1, v325);
      uint64_t v254 = (void (*)(uint64_t *, void))AttributedString.subscript.modify();
      AttributedSubstring.subscript.setter();
      v254(&v365, 0);
      sub_10002784C(v251, &qword_1001FC2E8);
      (*v350)(v232, v300);
      (*v295)(v306, v253);
      sub_10002784C(v314, &qword_1001FC2E8);
      uint64_t v190 = v305;
      uint64_t v189 = (char *)v322;
LABEL_61:
      uint64_t v225 = v308;
      AttributedString.Runs.AttributesSlice1.Iterator.next()();
      uint64_t v159 = (uint64_t)v225;
      uint64_t v226 = v225;
      uint64_t v188 = (void (**)(char *, uint64_t))v320;
      if (((unsigned int (*)(char *, uint64_t, int *))v319)(v226, 1, v320) == 1) {
        goto LABEL_57;
      }
      continue;
    }
    break;
  }
  unint64_t v235 = (*(unsigned __int8 *)(v190 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v190 + 80);
  uint64_t v353 = v233;
  unint64_t v236 = v233 + v235;
  uint64_t v237 = *(void *)(v190 + 72);
  uint64_t v238 = *(void (**)(char *, unint64_t, uint64_t))(v190 + 16);
  v238(v157, v233 + v235, v324);
  while (1)
  {
    uint64_t v245 = PresentationIntent.IntentType.identity.getter();
    uint64_t v246 = v317;
    PresentationIntent.IntentType.kind.getter();
    uint64_t v247 = v246;
    int v248 = (*v327)(v246, v187);
    if (v248 == v362)
    {
      (*(void (**)(char *, int64_t))v360)(v246, v187);
      uint64_t v249 = *(void *)v246;
      sub_100008DD4(v314, v316, &qword_1001FC2E8);
      uint64_t v250 = swift_getKeyPath();
      *(&v268 - 2) = __chkstk_darwin(v250);
      swift_getKeyPath();
      unint64_t result = v249 - 1;
      if (__OFSUB__(v249, 1)) {
        goto LABEL_96;
      }
      if (v358)
      {
        id v241 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        id v157 = v318;
      }
      else
      {
        id v157 = v318;
        if ((result & 0x8000000000000000) != 0) {
          goto LABEL_97;
        }
        if (result >= *((void *)v357 + 2)) {
          goto LABEL_98;
        }
        id v241 = *((id *)v356 + result);
      }
      id v367 = v241;
      uint64_t v242 = v316;
      uint64_t v243 = (void (*)(uint64_t *, void))AttributedString.subscript.modify();
      AttributedSubstring.subscript.setter();
      v243(&v365, 0);
      sub_10002784C(v242, &qword_1001FC2E8);
      uint64_t v244 = v324;
      (*v326)(v157, v324);
      int64_t v187 = v323;
      goto LABEL_68;
    }
    if (v248 == v359) {
      break;
    }
    id v157 = v318;
    if (v248 == v355)
    {
      swift_bridgeObjectRelease();
      uint64_t v262 = *(void *)(*(void *)v349 + 16);
      if (!v262 || v245 != *(void *)(*(void *)v349 + 8 * v262 + 24))
      {
        id v263 = objc_allocWithZone((Class)NSTextList);
        id v264 = [v263 initWithMarkerFormat:v346 options:0];
        sub_1000301A0(v245, v264);
      }
      uint64_t v239 = v314;
      uint64_t v251 = v337;
      sub_100008DD4(v314, v337, &qword_1001FC2E8);
      uint64_t v265 = swift_getKeyPath();
      *(&v268 - 2) = __chkstk_darwin(v265);
      swift_getKeyPath();
      swift_bridgeObjectRetain();
      id v266 = sub_100033E3C();
      swift_bridgeObjectRelease();
      id v367 = v266;
      uint64_t v267 = (void (*)(uint64_t *, void))AttributedString.subscript.modify();
      sub_100033D84();
      AttributedSubstring.subscript.setter();
      v267(&v365, 0);
      sub_10002784C(v251, &qword_1001FC2E8);
      (*v326)(v157, v324);
      uint64_t v232 = v304;
      uint64_t v240 = v301;
      goto LABEL_81;
    }
    uint64_t v244 = v324;
    (*v326)(v318, v324);
    (*v312)(v247, v187);
LABEL_68:
    v236 += v237;
    if (!--v234)
    {
      swift_bridgeObjectRelease();
      uint64_t v232 = v304;
      uint64_t v240 = v301;
      uint64_t v239 = v314;
      goto LABEL_80;
    }
    v238(v157, v236, v244);
  }
  unint64_t result = swift_bridgeObjectRelease();
  uint64_t v255 = *(void *)(*(void *)v349 + 16);
  id v157 = v318;
  uint64_t v256 = v301;
  uint64_t v239 = v314;
  uint64_t v251 = v337;
  if (v255 && v245 == *(void *)(*(void *)v349 + 8 * v255 + 24)) {
    goto LABEL_90;
  }
  if (qword_1001FAC68 != -1) {
    unint64_t result = swift_once();
  }
  if (__OFSUB__(v352, 1)) {
    goto LABEL_99;
  }
  uint64_t v257 = (uint64_t)(v352 - 1) % 3;
  if (v257 < 0) {
    goto LABEL_100;
  }
  if ((unint64_t)v257 < *((void *)off_1001FC1C8 + 2))
  {
    id v258 = [objc_allocWithZone((Class)NSTextList) initWithMarkerFormat:*((void *)off_1001FC1C8 + v257 + 4) options:0];
    sub_1000301A0(v245, v258);

LABEL_90:
    sub_100008DD4(v239, v251, &qword_1001FC2E8);
    uint64_t v259 = swift_getKeyPath();
    *(&v268 - 2) = __chkstk_darwin(v259);
    swift_getKeyPath();
    swift_bridgeObjectRetain();
    id v260 = sub_100033E3C();
    swift_bridgeObjectRelease();
    id v367 = v260;
    uint64_t v261 = (void (*)(uint64_t *, void))AttributedString.subscript.modify();
    sub_100033D84();
    AttributedSubstring.subscript.setter();
    v261(&v365, 0);
    uint64_t v240 = v256;
    sub_10002784C(v251, &qword_1001FC2E8);
    (*v326)(v157, v324);
    uint64_t v232 = v304;
    goto LABEL_81;
  }
LABEL_101:
  __break(1u);
  return result;
}

uint64_t sub_100033904(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  return dispatch thunk of static Equatable.== infix(_:_:)() & 1;
}

uint64_t type metadata accessor for RestoreWhiteSpaceLocation()
{
  uint64_t result = qword_1001FC418;
  if (!qword_1001FC418) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1000339A8()
{
}

unint64_t sub_1000339C8()
{
  unint64_t result = qword_1001FC310;
  if (!qword_1001FC310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FC310);
  }
  return result;
}

void sub_100033A1C()
{
}

uint64_t sub_100033A44()
{
  return 8;
}

uint64_t sub_100033A50()
{
  return swift_release();
}

uint64_t sub_100033A58(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t sub_100033A64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100033904(a1, a2, a3, &qword_1001FC3B8) & 1;
}

uint64_t sub_100033A88(uint64_t a1, uint64_t a2)
{
  return sub_100034104(a1, a2, &qword_1001FC3B8);
}

void *sub_100033A94(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

unint64_t sub_100033AA0()
{
  unint64_t result = qword_1001FC318;
  if (!qword_1001FC318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FC318);
  }
  return result;
}

unint64_t sub_100033AF4()
{
  unint64_t result = qword_1001FC338;
  if (!qword_1001FC338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FC338);
  }
  return result;
}

void sub_100033B48()
{
}

void sub_100033B68()
{
}

uint64_t sub_100033B90()
{
  return 8;
}

uint64_t sub_100033B9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100033904(a1, a2, a3, &qword_1001FC3B0) & 1;
}

uint64_t sub_100033BC0(uint64_t a1, uint64_t a2)
{
  return sub_100034104(a1, a2, &qword_1001FC3B0);
}

unint64_t sub_100033BCC()
{
  unint64_t result = qword_1001FC340;
  if (!qword_1001FC340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FC340);
  }
  return result;
}

uint64_t sub_100033C20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RestoreWhiteSpaceLocation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100033C84(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for RestoreWhiteSpaceLocation();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_100033CE0()
{
}

void sub_100033D00()
{
}

uint64_t sub_100033D28()
{
  return 8;
}

uint64_t sub_100033D34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100033904(a1, a2, a3, &qword_1001FC3A8) & 1;
}

uint64_t sub_100033D58(uint64_t a1, uint64_t a2)
{
  return sub_100034104(a1, a2, &qword_1001FC3A8);
}

void sub_100033D64()
{
}

unint64_t sub_100033D84()
{
  unint64_t result = qword_1001FC368;
  if (!qword_1001FC368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FC368);
  }
  return result;
}

void sub_100033DD8()
{
}

uint64_t sub_100033E00()
{
  return 8;
}

uint64_t sub_100033E0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100033904(a1, a2, a3, &qword_1001FC398) & 1;
}

uint64_t sub_100033E30(uint64_t a1, uint64_t a2)
{
  return sub_100034104(a1, a2, &qword_1001FC398);
}

id sub_100033E3C()
{
  uint64_t v0 = self;
  id v1 = [v0 defaultParagraphStyle];
  [v1 mutableCopy];

  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  sub_1000085FC(0, &qword_1001FC388);
  if (swift_dynamicCast())
  {
    sub_1000085FC(0, &qword_1001FC390);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    [v5 setTextLists:isa];

    return v5;
  }
  else
  {
    id v4 = [v0 defaultParagraphStyle];
    return v4;
  }
}

uint64_t sub_100033F80(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100033FC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RestoreWhiteSpaceLocation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_10003402C()
{
}

unint64_t sub_10003404C()
{
  unint64_t result = qword_1001FC378;
  if (!qword_1001FC378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FC378);
  }
  return result;
}

void sub_1000340A0()
{
}

uint64_t sub_1000340C8()
{
  return 8;
}

uint64_t sub_1000340D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100033904(a1, a2, a3, &qword_1001FC380) & 1;
}

uint64_t sub_1000340F8(uint64_t a1, uint64_t a2)
{
  return sub_100034104(a1, a2, &qword_1001FC380);
}

uint64_t sub_100034104(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return dispatch thunk of Hashable.hashValue.getter();
}

void *sub_100034148(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for AttributedString.Index();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t sub_100034214(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AttributedString.Index();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_100034278(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for AttributedString.Index();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1000342F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for AttributedString.Index();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_100034370(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for AttributedString.Index();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1000343EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for AttributedString.Index();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_100034468(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10003447C);
}

uint64_t sub_10003447C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for AttributedString.Index();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 2) {
      return ((v10 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_10003454C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100034560);
}

uint64_t sub_100034560(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for AttributedString.Index();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  }
  return result;
}

uint64_t sub_10003461C()
{
  uint64_t result = type metadata accessor for AttributedString.Index();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_1000346E0()
{
  qword_1001FC450 = 0x4020000000000000;
}

void sub_1000346F0()
{
  qword_1001FC458 = 0x4073200000000000;
}

id sub_100034704()
{
  unint64_t v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v1[OBJC_IVAR____TtC21WritingToolsUIService24AttachmentCollectionView_attachmentCollectionViewDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v3 = qword_1001FAC78;
  uint64_t v4 = v1;
  if (v3 != -1) {
    swift_once();
  }
  double v5 = *(double *)&qword_1001FC458;
  *(void *)&v4[OBJC_IVAR____TtC21WritingToolsUIService24AttachmentCollectionView_currentCellWidth] = qword_1001FC458;
  id v6 = sub_100035BF4(v5);

  v18.receiver = v4;
  v18.super_class = ObjectType;
  id v7 = [super initWithFrame:v6 collectionViewLayout:0.0, 0.0, 0.0, 0.0];
  uint64_t v8 = self;
  id v9 = v7;
  id v10 = [v8 clearColor];
  [v9 setBackgroundColor:v10];

  uint64_t v11 = qword_1001FAC70;
  id v12 = v9;
  if (v11 != -1) {
    swift_once();
  }
  [v12 contentInset];
  [v12 setContentInset:];

  id v13 = v12;
  [v13 contentInset];
  [v13 setContentInset:];

  type metadata accessor for AttachmentCollectionViewCell();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v15 = v13;
  NSString v16 = String._bridgeToObjectiveC()();
  [v15 registerClass:ObjCClassFromMetadata forCellWithReuseIdentifier:v16];

  return v15;
}

id sub_1000349E0()
{
  ObjectType = (objc_class *)swift_getObjectType();
  [v0 bounds];
  double v3 = v2;
  if (qword_1001FAC70 != -1) {
    swift_once();
  }
  double v4 = v3 - (*(double *)&qword_1001FC450 + *(double *)&qword_1001FC450 + 13.0);
  if (v4 != *(double *)&v0[OBJC_IVAR____TtC21WritingToolsUIService24AttachmentCollectionView_currentCellWidth])
  {
    *(double *)&v0[OBJC_IVAR____TtC21WritingToolsUIService24AttachmentCollectionView_currentCellWidth] = v4;
    id v5 = sub_100035BF4(v4);
    [v0 setCollectionViewLayout:v5];

    id v6 = [v0 collectionViewLayout];
    [v6 invalidateLayout];
  }
  v8.receiver = v0;
  v8.super_class = ObjectType;
  return [super layoutSubviews];
}

uint64_t type metadata accessor for AttachmentCollectionView()
{
  return self;
}

char *sub_100034BA8(double a1, double a2, double a3, double a4)
{
  ObjectType = (objc_class *)swift_getObjectType();
  swift_unknownObjectWeakInit();
  *(void *)&v4[OBJC_IVAR____TtC21WritingToolsUIService28AttachmentCollectionViewCell_linkView] = 0;
  id v10 = self;
  uint64_t v11 = v4;
  uint64_t result = (char *)[v10 roundButtonWithStyle:0];
  if (result)
  {
    *(void *)&v11[OBJC_IVAR____TtC21WritingToolsUIService28AttachmentCollectionViewCell_closeButton] = result;
    id v13 = &v11[OBJC_IVAR____TtC21WritingToolsUIService28AttachmentCollectionViewCell_attachment];
    uint64_t v14 = type metadata accessor for Attachment(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);

    v16.receiver = v11;
    v16.super_class = ObjectType;
    id v15 = [super initWithFrame:a1, a2, a3, a4];
    [*(id *)&v15[OBJC_IVAR____TtC21WritingToolsUIService28AttachmentCollectionViewCell_closeButton] addTarget:v15 action:"didTapCloseButton" forControlEvents:64];
    return v15;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100034D54(void *a1)
{
  id v88 = a1;
  uint64_t v2 = sub_1000063C0(&qword_1001FC4F0);
  __chkstk_darwin(v2 - 8);
  id v86 = (char *)&v86 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Attachment(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v87 = (uint64_t)&v86 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v9 = (char *)&v86 - v8;
  uint64_t v10 = sub_1000063C0(&qword_1002049C0);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  id v13 = (char *)&v86 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  id v15 = (char *)&v86 - v14;
  uint64_t v16 = sub_1000063C0(&qword_1001FC4F8);
  uint64_t v17 = v16 - 8;
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v86 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v89 = v1;
  uint64_t v20 = (uint64_t)&v1[OBJC_IVAR____TtC21WritingToolsUIService28AttachmentCollectionViewCell_attachment];
  swift_beginAccess();
  uint64_t v21 = *(int *)(v17 + 56);
  uint64_t v22 = (int *)v4;
  uint64_t v23 = (uint64_t)&v19[v21];
  sub_100008DD4(v20, (uint64_t)v19, &qword_1002049C0);
  sub_100008DD4((uint64_t)v88, v23, &qword_1002049C0);
  uint64_t v24 = *(unsigned int (**)(uint64_t, uint64_t, int *))(v5 + 48);
  if (v24((uint64_t)v19, 1, v22) == 1)
  {
    if (v24(v23, 1, v22) == 1)
    {
      uint64_t v25 = (uint64_t)v19;
      return sub_10002784C(v25, &qword_1002049C0);
    }
    goto LABEL_6;
  }
  sub_100008DD4((uint64_t)v19, (uint64_t)v15, &qword_1002049C0);
  if (v24(v23, 1, v22) == 1)
  {
    sub_100035B98((uint64_t)v15);
LABEL_6:
    sub_10002784C((uint64_t)v19, &qword_1001FC4F8);
    goto LABEL_7;
  }
  sub_100035B34(v23, (uint64_t)v9);
  char v30 = sub_1001446E0((uint64_t)v15, (uint64_t)v9);
  sub_100035B98((uint64_t)v9);
  sub_100035B98((uint64_t)v15);
  uint64_t result = sub_10002784C((uint64_t)v19, &qword_1002049C0);
  if (v30) {
    return result;
  }
LABEL_7:
  uint64_t v26 = OBJC_IVAR____TtC21WritingToolsUIService28AttachmentCollectionViewCell_linkView;
  uint64_t v27 = v89;
  uint64_t v28 = *(void **)&v89[OBJC_IVAR____TtC21WritingToolsUIService28AttachmentCollectionViewCell_linkView];
  if (v28)
  {
    [v28 removeFromSuperview];
    uint64_t v29 = *(void **)&v27[v26];
  }
  else
  {
    uint64_t v29 = 0;
  }
  *(void *)&v27[v26] = 0;

  sub_100008DD4(v20, (uint64_t)v13, &qword_1002049C0);
  if (v24((uint64_t)v13, 1, v22) == 1)
  {
    uint64_t v25 = (uint64_t)v13;
    return sub_10002784C(v25, &qword_1002049C0);
  }
  uint64_t v32 = (uint64_t)v13;
  uint64_t v33 = v87;
  sub_100035B34(v32, v87);
  id v34 = [objc_allocWithZone((Class)LPLinkMetadata) init];
  id v35 = [objc_allocWithZone((Class)LPFileMetadata) init];
  swift_bridgeObjectRetain();
  NSString v36 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v35 setName:v36];

  id v37 = v86;
  sub_100008DD4(v33 + v22[6], (uint64_t)v86, &qword_1001FC4F0);
  uint64_t v38 = type metadata accessor for UTType();
  uint64_t v39 = *(void *)(v38 - 8);
  if ((*(unsigned int (**)(id, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38) == 1)
  {
    sub_10002784C((uint64_t)v37, &qword_1001FC4F0);
    NSString v40 = 0;
  }
  else
  {
    UTType.identifier.getter();
    (*(void (**)(id, uint64_t))(v39 + 8))(v37, v38);
    NSString v40 = String._bridgeToObjectiveC()();
    uint64_t v27 = v89;
    swift_bridgeObjectRelease();
  }
  [v35 setType:v40];

  uint64_t v41 = v33 + v22[7];
  if ((*(unsigned char *)(v41 + 8) & 1) == 0)
  {
    if ((*(void *)v41 & 0x8000000000000000) != 0)
    {
LABEL_45:
      uint64_t result = _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
      return result;
    }
    [v35 setSize:];
  }
  uint64_t v42 = *(void **)(v33 + v22[9]);
  if (v42)
  {
    id v43 = objc_allocWithZone((Class)UIImage);
    id v44 = v42;
    id v45 = [v43 initWithCGImage:v44];
    id v46 = [objc_allocWithZone((Class)LPImage) initWithPlatformImage:v45];

    [v35 setThumbnail:v46];
  }
  uint64_t v47 = (char *)[objc_allocWithZone((Class)LPSharedObjectMetadata) init];
  [v47 setSpecialization:v35];
  [v34 setSpecialization:v47];
  id v48 = [objc_allocWithZone((Class)LPLinkView) initWithMetadata:v34];
  uint64_t v49 = *(void **)&v27[v26];
  *(void *)&v27[v26] = v48;

  uint64_t v50 = *(void **)&v27[v26];
  if (!v50)
  {
    __break(1u);
    goto LABEL_36;
  }
  id v51 = v50;
  [v51 _setBytesLoaded:[v35 size]];

  uint64_t v52 = *(void **)&v27[v26];
  if (!v52)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  [v52 _setDisableTapGesture:1];
  uint64_t v53 = *(void **)&v27[v26];
  if (!v53)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  [v53 _setDisableHighlightGesture:1];
  uint64_t v54 = *(void **)&v27[v26];
  if (!v54)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  id v88 = v34;
  uint64_t v55 = self;
  id v56 = v54;
  id v57 = [v55 tertiarySystemFillColor];
  [v56 _setOverrideBackgroundColor:v57];

  uint64_t v58 = *(void **)&v27[v26];
  if (!v58)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  [v58 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v59 = [v27 contentView];
  if (!*(void *)&v27[v26])
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v60 = v59;
  id v86 = v47;
  [v59 addSubview:];

  [v27 addSubview:*(void *)&v27[OBJC_IVAR____TtC21WritingToolsUIService28AttachmentCollectionViewCell_closeButton]];
  sub_1000063C0(&qword_1001FAFD0);
  uint64_t v61 = swift_allocObject();
  *(_OWORD *)(v61 + 16) = xmmword_100189610;
  uint64_t v62 = *(void **)&v27[v26];
  if (!v62)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  id v63 = [v62 leadingAnchor];
  id v64 = [v27 contentView];
  id v65 = [v64 leadingAnchor];

  id v66 = [v63 constraintEqualToAnchor:v65];
  *(void *)(v61 + 32) = v66;
  uint64_t v67 = v89;
  uint64_t v68 = *(void **)&v89[v26];
  if (!v68)
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  id v69 = [v68 trailingAnchor];
  id v70 = [v67 contentView];
  id v71 = [v70 trailingAnchor];

  id v72 = [v69 constraintEqualToAnchor:v71];
  *(void *)(v61 + 40) = v72;
  Swift::String v73 = v89;
  uint64_t v74 = *(void **)&v89[v26];
  if (!v74)
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  id v75 = [v74 topAnchor];
  id v76 = [v73 contentView];
  id v77 = [v76 topAnchor];

  id v78 = [v75 constraintEqualToAnchor:v77];
  *(void *)(v61 + 48) = v78;
  uint64_t v79 = *(void **)&v73[v26];
  if (!v79)
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  uint64_t v80 = self;
  id v81 = [v79 bottomAnchor];
  id v82 = [v73 contentView];
  id v83 = [v82 bottomAnchor];

  id v84 = [v81 constraintEqualToAnchor:v83];
  *(void *)(v61 + 56) = v84;
  uint64_t v90 = v61;
  specialized Array._endMutation()();
  sub_1000085FC(0, (unint64_t *)&qword_1001FAFD8);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v80 activateConstraints:isa];

  return sub_100035B98(v87);
}

void sub_1000357A8()
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = (void *)Strong;
    uint64_t v3 = swift_unknownObjectWeakLoadStrong();

    if (v3)
    {
      sub_100093858(v0);
      swift_unknownObjectRelease();
    }
  }
}

id sub_100035934()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  [super dealloc];
}

uint64_t sub_1000359D4()
{
  return type metadata accessor for AttachmentCollectionViewCell();
}

uint64_t type metadata accessor for AttachmentCollectionViewCell()
{
  uint64_t result = qword_1001FC4D8;
  if (!qword_1001FC4D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100035A28()
{
  sub_100035ADC();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_100035ADC()
{
  if (!qword_1001FC4E8)
  {
    type metadata accessor for Attachment(255);
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1001FC4E8);
    }
  }
}

uint64_t sub_100035B34(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Attachment(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100035B98(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Attachment(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_100035BF4(double a1)
{
  uint64_t v2 = self;
  id v3 = [v2 fractionalWidthDimension:1.0];
  id v4 = [v2 fractionalHeightDimension:1.0];
  uint64_t v5 = self;
  id v6 = [v5 sizeWithWidthDimension:v3 heightDimension:v4];

  id v7 = [self itemWithLayoutSize:v6];
  id v8 = [v2 absoluteDimension:a1];
  id v9 = [v2 fractionalHeightDimension:1.0];
  id v10 = [v5 sizeWithWidthDimension:v8 heightDimension:v9];

  uint64_t v11 = self;
  sub_1000063C0(&qword_1001FAFD0);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_10018B4E0;
  *(void *)(v12 + 32) = v7;
  specialized Array._endMutation()();
  sub_1000085FC(0, &qword_1001FC500);
  id v13 = v7;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v15 = [v11 verticalGroupWithLayoutSize:v10 subitems:isa];

  id v16 = [self sectionWithGroup:v15];
  [v16 setInterGroupSpacing:8.0];
  id v17 = [objc_allocWithZone((Class)UICollectionViewCompositionalLayoutConfiguration) init];
  [v17 setScrollDirection:1];
  id v18 = [objc_allocWithZone((Class)UICollectionViewCompositionalLayout) initWithSection:v16 configuration:v17];

  return v18;
}

void sub_100035E9C()
{
  swift_unknownObjectWeakInit();
  *(void *)&v0[OBJC_IVAR____TtC21WritingToolsUIService28AttachmentCollectionViewCell_linkView] = 0;
  id v1 = [self roundButtonWithStyle:0];
  if (!v1) {
    __break(1u);
  }
  *(void *)&v0[OBJC_IVAR____TtC21WritingToolsUIService28AttachmentCollectionViewCell_closeButton] = v1;
  uint64_t v2 = &v0[OBJC_IVAR____TtC21WritingToolsUIService28AttachmentCollectionViewCell_attachment];
  uint64_t v3 = type metadata accessor for Attachment(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t property wrapper backing initializer of ProofreadingView.proofreadingModel(uint64_t a1)
{
  return sub_100035FD4(a1, (void (*)(void))type metadata accessor for ProofreadingModel);
}

uint64_t property wrapper backing initializer of ProofreadingView.feedbackController(uint64_t a1)
{
  return sub_100035FD4(a1, (void (*)(void))&type metadata accessor for FBKEvaluationController);
}

uint64_t sub_100035FD4(uint64_t a1, void (*a2)(void))
{
  a2(0);
  State.init(wrappedValue:)();
  return v3;
}

uint64_t ProofreadingView.body.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ProofreadingView();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v3 - 8);
  sub_10003FBF0(v1, (uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for ProofreadingView);
  unint64_t v6 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = swift_allocObject();
  uint64_t result = sub_1000366B4((uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v7 + v6);
  *a1 = sub_100036718;
  a1[1] = v7;
  return result;
}

uint64_t type metadata accessor for ProofreadingView()
{
  uint64_t result = qword_1001FC560;
  if (!qword_1001FC560) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100036168@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v42 = a3;
  uint64_t v5 = type metadata accessor for ProofreadingView();
  uint64_t v41 = *(void *)(v5 - 8);
  uint64_t v40 = *(void *)(v41 + 64);
  __chkstk_darwin(v5);
  uint64_t v39 = (uint64_t)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_1000063C0(&qword_1001FB438);
  __chkstk_darwin(v38);
  NSString v36 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000063C0(&qword_1001FC5F0);
  __chkstk_darwin(v8);
  id v10 = (uint64_t *)((char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v37 = sub_1000063C0(&qword_1001FC5F8);
  uint64_t v11 = *(void *)(v37 - 8);
  __chkstk_darwin(v37);
  id v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000063C0(&qword_1001FC600);
  uint64_t v15 = v14 - 8;
  __chkstk_darwin(v14);
  id v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_1000063C0(&qword_1001FC608);
  __chkstk_darwin(v35);
  uint64_t v19 = (char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t *v10 = static Alignment.center.getter();
  v10[1] = v20;
  uint64_t v21 = sub_1000063C0(&qword_1001FC610);
  sub_100036738(a2, a1, (uint64_t *)((char *)v10 + *(int *)(v21 + 44)));
  sub_100027F2C(&qword_1001FC618, &qword_1001FC5F0);
  View.navigationBarBackButtonHidden(_:)();
  sub_10002784C((uint64_t)v10, &qword_1001FC5F0);
  uint64_t v22 = *(void *)(a2 + 24);
  uint64_t v43 = *(void *)(a2 + 16);
  uint64_t v44 = v22;
  sub_1000063C0(&qword_1001FB850);
  State.wrappedValue.getter();
  swift_unknownObjectWeakLoadStrong();
  swift_release();
  uint64_t v23 = (uint64_t)v36;
  Binding.projectedValue.getter();
  LOBYTE(v46) = 1;
  static Binding.constant(_:)();
  sub_1000EF1D8(1, 0, v23, v43, v44, v45, (uint64_t)&v17[*(int *)(v15 + 44)]);
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v17, v13, v37);
  uint64_t v24 = static Alignment.center.getter();
  uint64_t v26 = v25;
  sub_100008DD4((uint64_t)v17, (uint64_t)v19, &qword_1001FC600);
  uint64_t v27 = &v19[*(int *)(v35 + 36)];
  *(_WORD *)uint64_t v27 = 1;
  *((void *)v27 + 1) = v24;
  *((void *)v27 + 2) = v26;
  sub_10002784C((uint64_t)v17, &qword_1001FC600);
  uint64_t v28 = *(void *)(a2 + 24);
  uint64_t v43 = *(void *)(a2 + 16);
  uint64_t v44 = v28;
  State.wrappedValue.getter();
  uint64_t v29 = v46;
  swift_getKeyPath();
  uint64_t v43 = v29;
  sub_100040000((unint64_t *)&qword_1001FD2A0, (void (*)(uint64_t))type metadata accessor for ToolModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  LOBYTE(v26) = *(unsigned char *)(v29 + 88);
  swift_release();
  LOBYTE(v43) = v26;
  uint64_t v30 = a2;
  uint64_t v31 = v39;
  sub_10003FBF0(v30, v39, (uint64_t (*)(void))type metadata accessor for ProofreadingView);
  unint64_t v32 = (*(unsigned __int8 *)(v41 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
  uint64_t v33 = swift_allocObject();
  sub_1000366B4(v31, v33 + v32);
  sub_10003F148();
  View.onChange<A>(of:initial:_:)();
  swift_release();
  return sub_10002784C((uint64_t)v19, &qword_1001FC608);
}

uint64_t sub_1000366B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ProofreadingView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10003671C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100036738@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v55 = a1;
  id v77 = a3;
  uint64_t v65 = type metadata accessor for NavigationBarItem.TitleDisplayMode();
  uint64_t v64 = *(void *)(v65 - 8);
  __chkstk_darwin(v65);
  uint64_t v62 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_1000063C0(&qword_1001FC630);
  __chkstk_darwin(v57);
  uint64_t v7 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_1000063C0(&qword_1001FC638);
  uint64_t v63 = *(void *)(v60 - 8);
  __chkstk_darwin(v60);
  uint64_t v9 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_1000063C0(&qword_1001FC640);
  uint64_t v59 = *(void *)(v61 - 8);
  __chkstk_darwin(v61);
  uint64_t v11 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_1000063C0(&qword_1001FC648);
  __chkstk_darwin(v66);
  id v56 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = sub_1000063C0(&qword_1001FC650);
  uint64_t v75 = *(void *)(v73 - 8);
  __chkstk_darwin(v73);
  uint64_t v58 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = sub_1000063C0(&qword_1001FC658);
  uint64_t v74 = *(void *)(v76 - 8);
  __chkstk_darwin(v76);
  uint64_t v67 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_1000063C0(&qword_1001FC660) - 8;
  uint64_t v15 = __chkstk_darwin(v68);
  id v17 = (char *)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v70 = (uint64_t)&v54 - v18;
  uint64_t v72 = static Color.clear.getter();
  int v71 = static Edge.Set.vertical.getter();
  uint64_t v69 = static SafeAreaRegions.all.getter();
  *(void *)uint64_t v7 = static HorizontalAlignment.center.getter();
  *((void *)v7 + 1) = 0x4024000000000000;
  v7[16] = 0;
  uint64_t v19 = sub_1000063C0(&qword_1001FC668);
  sub_100036FCC(a1, a2, (uint64_t)&v7[*(int *)(v19 + 44)]);
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v20 = sub_100027F2C(&qword_1001FC670, &qword_1001FC630);
  uint64_t v21 = v57;
  View.navigationTitle(_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10002784C((uint64_t)v7, &qword_1001FC630);
  uint64_t v22 = v64;
  uint64_t v23 = v62;
  uint64_t v24 = v65;
  (*(void (**)(char *, void, uint64_t))(v64 + 104))(v62, enum case for NavigationBarItem.TitleDisplayMode.inline(_:), v65);
  uint64_t v81 = v21;
  unint64_t v82 = v20;
  swift_getOpaqueTypeConformance2();
  uint64_t v25 = v60;
  View.navigationBarTitleDisplayMode(_:)();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v23, v24);
  (*(void (**)(char *, uint64_t))(v63 + 8))(v9, v25);
  uint64_t v26 = v59;
  uint64_t v27 = (uint64_t)v56;
  uint64_t v28 = v61;
  (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v56, v11, v61);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v28);
  uint64_t v29 = *(void *)(v55 + 40);
  uint64_t v30 = v55;
  uint64_t v79 = *(void *)(v55 + 32);
  uint64_t v80 = v29;
  sub_1000063C0(&qword_1001FC678);
  State.projectedValue.getter();
  uint64_t v31 = v83;
  unint64_t v32 = sub_10003F31C();
  uint64_t v33 = v58;
  uint64_t v34 = v66;
  View.inlineFeedback(controller:completion:)();

  swift_release();
  swift_release();
  sub_10002784C(v27, &qword_1001FC648);
  uint64_t v78 = v30;
  sub_1000063C0(&qword_1001FC690);
  uint64_t v81 = v34;
  unint64_t v82 = v32;
  swift_getOpaqueTypeConformance2();
  sub_100027F2C(&qword_1001FC698, &qword_1001FC690);
  uint64_t v35 = v67;
  uint64_t v36 = v73;
  View.toolbar<A>(content:)();
  (*(void (**)(char *, uint64_t))(v75 + 8))(v33, v36);
  LOBYTE(v36) = static Edge.Set.horizontal.getter();
  EdgeInsets.init(_all:)();
  uint64_t v38 = v37;
  uint64_t v40 = v39;
  uint64_t v42 = v41;
  uint64_t v44 = v43;
  uint64_t v45 = v74;
  uint64_t v46 = v76;
  (*(void (**)(char *, char *, uint64_t))(v74 + 16))(v17, v35, v76);
  uint64_t v47 = &v17[*(int *)(v68 + 44)];
  *uint64_t v47 = v36;
  *((void *)v47 + 1) = v38;
  *((void *)v47 + 2) = v40;
  *((void *)v47 + 3) = v42;
  *((void *)v47 + 4) = v44;
  v47[40] = 0;
  (*(void (**)(char *, uint64_t))(v45 + 8))(v35, v46);
  uint64_t v48 = v70;
  sub_100026FD0((uint64_t)v17, v70, &qword_1001FC660);
  sub_100008DD4(v48, (uint64_t)v17, &qword_1001FC660);
  uint64_t v49 = v77;
  uint64_t v50 = v69;
  *id v77 = v72;
  v49[1] = v50;
  *((unsigned char *)v49 + 16) = v71;
  id v51 = v49;
  uint64_t v52 = sub_1000063C0(&qword_1001FC6A0);
  sub_100008DD4((uint64_t)v17, (uint64_t)v51 + *(int *)(v52 + 48), &qword_1001FC660);
  swift_retain();
  sub_10002784C(v48, &qword_1001FC660);
  sub_10002784C((uint64_t)v17, &qword_1001FC660);
  return swift_release();
}

void sub_100036FCC(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  id v251 = a2;
  uint64_t v261 = a3;
  id v263 = 0;
  uint64_t v259 = sub_1000063C0(&qword_1001FC6E0);
  __chkstk_darwin(v259);
  uint64_t v255 = (uint64_t)&v227 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000063C0(&qword_1001FC6E8);
  __chkstk_darwin(v5 - 8);
  uint64_t v250 = (uint64_t *)((char *)&v227 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v249 = sub_1000063C0(&qword_1001FC6F0);
  __chkstk_darwin(v249);
  uint64_t v253 = (uint64_t)&v227 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v252 = sub_1000063C0(&qword_1001FC6F8);
  uint64_t v8 = __chkstk_darwin(v252);
  uint64_t v246 = (char *)&v227 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v254 = (uint64_t)&v227 - v10;
  uint64_t v242 = sub_1000063C0(&qword_1001FC700);
  __chkstk_darwin(v242);
  uint64_t v244 = (char **)((char *)&v227 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v243 = sub_1000063C0(&qword_1001FC708);
  __chkstk_darwin(v243);
  uint64_t v13 = (char *)&v227 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v233 = type metadata accessor for RoundedRectangle();
  __chkstk_darwin(v233);
  unint64_t v236 = (char *)&v227 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v234 = sub_1000063C0(&qword_100202510);
  __chkstk_darwin(v234);
  uint64_t v237 = (uint64_t)&v227 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1000063C0(&qword_1001FC710);
  __chkstk_darwin(v16 - 8);
  uint64_t v231 = (uint64_t *)((char *)&v227 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v230 = sub_1000063C0(&qword_1001FC718);
  __chkstk_darwin(v230);
  uint64_t v235 = (uint64_t)&v227 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v232 = sub_1000063C0(&qword_1001FC720);
  uint64_t v19 = __chkstk_darwin(v232);
  uint64_t v238 = (char *)&v227 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v240 = (uint64_t)&v227 - v21;
  uint64_t v22 = sub_1000063C0(&qword_1001FBA90);
  __chkstk_darwin(v22 - 8);
  uint64_t v247 = (char *)&v227 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for LocalizedStringKey.StringInterpolation();
  uint64_t v25 = __chkstk_darwin(v24 - 8);
  __chkstk_darwin(v25);
  id v241 = (char *)&v227 - v26;
  uint64_t v27 = sub_1000063C0(&qword_1001FC728);
  uint64_t v28 = __chkstk_darwin(v27 - 8);
  uint64_t v248 = (uint64_t)&v227 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  uint64_t v245 = (char *)&v227 - v30;
  uint64_t v257 = sub_1000063C0(&qword_1001FC730);
  __chkstk_darwin(v257);
  id v258 = (uint64_t *)((char *)&v227 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v32 = type metadata accessor for ProofreadingView();
  uint64_t v33 = __chkstk_darwin(v32 - 8);
  uint64_t v256 = (uint64_t)&v227 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  uint64_t v36 = (char *)&v227 - v35;
  uint64_t v37 = sub_1000063C0(&qword_1001FC738);
  uint64_t v38 = __chkstk_darwin(v37 - 8);
  id v260 = (char *)&v227 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v38);
  uint64_t v262 = (char *)&v227 - v40;
  uint64_t v41 = *(void *)(a1 + 24);
  uint64_t v305 = *(void **)(a1 + 16);
  uint64_t v306 = v41;
  uint64_t v42 = sub_1000063C0(&qword_1001FB850);
  State.wrappedValue.getter();
  uint64_t v43 = v292;
  swift_getKeyPath();
  uint64_t v305 = (void *)v43;
  uint64_t v265 = sub_100040000((unint64_t *)&qword_1001FD2A0, (void (*)(uint64_t))type metadata accessor for ToolModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  char v44 = *(unsigned char *)(v43 + 88);
  swift_release();
  id v264 = (void *)a1;
  sub_10003FBF0(a1, (uint64_t)v36, (uint64_t (*)(void))type metadata accessor for ProofreadingView);
  uint64_t v266 = v42;
  uint64_t v239 = v13;
  if (v44)
  {
    sub_100040048((uint64_t)v36, (uint64_t (*)(void))type metadata accessor for ProofreadingView);
    goto LABEL_6;
  }
  uint64_t v45 = *((void *)v36 + 3);
  uint64_t v305 = (void *)*((void *)v36 + 2);
  uint64_t v306 = v45;
  State.wrappedValue.getter();
  uint64_t v46 = v292;
  swift_getKeyPath();
  uint64_t v305 = (void *)v46;
  sub_100040000((unint64_t *)&qword_1001FBD30, (void (*)(uint64_t))type metadata accessor for ProofreadingModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v47 = (unint64_t *)(v46 + OBJC_IVAR____TtC21WritingToolsUIService17ProofreadingModel__suggestions);
  swift_beginAccess();
  unint64_t v48 = *v47;
  swift_bridgeObjectRetain();
  swift_release();
  if (v48 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v49 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v49 = *(void *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  sub_100040048((uint64_t)v36, (uint64_t (*)(void))type metadata accessor for ProofreadingView);
  if (v49)
  {
LABEL_6:
    uint64_t v50 = v264[2];
    uint64_t v51 = v264[3];
    uint64_t v305 = (void *)v50;
    uint64_t v306 = v51;
    State.wrappedValue.getter();
    uint64_t v52 = v292;
    swift_getKeyPath();
    uint64_t v305 = (void *)v52;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    if (*(unsigned char *)(v52 + 88) == 1)
    {
      swift_release();
      goto LABEL_22;
    }
    swift_getKeyPath();
    uint64_t v305 = (void *)v52;
    uint64_t v53 = sub_100040000((unint64_t *)&qword_1001FBD30, (void (*)(uint64_t))type metadata accessor for ProofreadingModel);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    swift_beginAccess();
    swift_retain();
    unint64_t v54 = swift_bridgeObjectRetain();
    unint64_t v55 = (unint64_t)v263;
    id v56 = sub_1001737E4(v54, v52);
    id v263 = (uint64_t *)v55;
    swift_bridgeObjectRelease();
    swift_release_n();
    if (!v56
      || (v56,
          id v57 = [self currentDevice],
          id v58 = [v57 userInterfaceIdiom],
          v57,
          v58 == (id)6))
    {
LABEL_22:
      LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v143._countAndFlagsBits = 23390;
      v143._object = (void *)0xE200000000000000;
      LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v143);
      uint64_t v305 = (void *)v50;
      uint64_t v306 = v51;
      State.wrappedValue.getter();
      uint64_t v144 = v292;
      swift_getKeyPath();
      uint64_t v305 = (void *)v144;
      sub_100040000((unint64_t *)&qword_1001FBD30, (void (*)(uint64_t))type metadata accessor for ProofreadingModel);
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      swift_beginAccess();
      unint64_t v145 = swift_bridgeObjectRetain();
      unint64_t v146 = (unint64_t)v263;
      unint64_t v147 = (unint64_t)sub_100173A9C(v145, v144);
      swift_bridgeObjectRelease();
      swift_release();
      id v263 = (uint64_t *)v146;
      if (v147 >> 62) {
        uint64_t v148 = _CocoaArrayWrapper.endIndex.getter();
      }
      else {
        uint64_t v148 = *(void *)((v147 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      uint64_t v149 = (uint64_t)v247;
      swift_bridgeObjectRelease();
      uint64_t v305 = (void *)v148;
      LocalizedStringKey.StringInterpolation.appendInterpolation<A>(_:specifier:)();
      v150._object = (void *)0x800000010019CBE0;
      v150._countAndFlagsBits = 0xD000000000000017;
      LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v150);
      LocalizedStringKey.init(stringInterpolation:)();
      uint64_t v151 = Text.init(_:tableName:bundle:comment:)();
      uint64_t v153 = v152;
      char v155 = v154 & 1;
      uint64_t v156 = type metadata accessor for Font.Design();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v156 - 8) + 56))(v149, 1, 1, v156);
      static Font.system(size:weight:design:)();
      sub_10002784C(v149, &qword_1001FBA90);
      uint64_t v247 = (char *)Text.font(_:)();
      uint64_t v158 = v157;
      char v160 = v159;
      uint64_t v162 = v161;
      swift_release();
      sub_100026F18(v151, v153, v155);
      swift_bridgeObjectRelease();
      char v163 = static Edge.Set.top.getter();
      EdgeInsets.init(_all:)();
      uint64_t v165 = v164;
      char v167 = v166;
      unint64_t v169 = v168;
      uint64_t v171 = v170;
      char v172 = static Edge.Set.bottom.getter();
      uint64_t v173 = v264[3];
      uint64_t v305 = (void *)v264[2];
      uint64_t v306 = v173;
      State.wrappedValue.getter();
      uint64_t v174 = v292;
      swift_getKeyPath();
      uint64_t v305 = (void *)v174;
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      int v175 = *(unsigned __int8 *)(v174 + 88);
      swift_release();
      if (v175 == 1) {
        int v176 = static HierarchicalShapeStyle.secondary.getter();
      }
      else {
        int v176 = static HierarchicalShapeStyle.primary.getter();
      }
      uint64_t v78 = (uint64_t)v246;
      LOBYTE(v305) = v160 & 1;
      LOBYTE(v292) = 0;
      v291[0] = 1;
      uint64_t v177 = v244;
      *uint64_t v244 = v247;
      v177[1] = v158;
      *((unsigned char *)v177 + 16) = v160 & 1;
      v177[3] = v162;
      *((unsigned char *)v177 + 32) = v163;
      v177[5] = v165;
      v177[6] = v167;
      v177[7] = v169;
      v177[8] = v171;
      *((unsigned char *)v177 + 72) = 0;
      *((unsigned char *)v177 + 80) = v172;
      *(_OWORD *)(v177 + 11) = 0u;
      *(_OWORD *)(v177 + 13) = 0u;
      *((unsigned char *)v177 + 120) = 1;
      *((_DWORD *)v177 + 31) = v176;
      swift_storeEnumTagMultiPayload();
      sub_1000063C0(&qword_1001FC740);
      sub_100027F2C(&qword_1001FC748, &qword_1001FC708);
      sub_10003F600();
      uint64_t v136 = (uint64_t)v245;
      _ConditionalContent<>.init(storage:)();
LABEL_28:
      uint64_t v178 = static VerticalAlignment.center.getter();
      uint64_t v179 = (uint64_t)v250;
      void *v250 = v178;
      *(void *)(v179 + 8) = 0;
      *(unsigned char *)(v179 + 16) = 0;
      uint64_t v180 = sub_1000063C0(&qword_1001FC778);
      uint64_t v181 = (uint64_t)v264;
      sub_10003B594((uint64_t)v264, (uint64_t)v251, v179 + *(int *)(v180 + 44));
      static Alignment.center.getter();
      _FrameLayout.init(width:height:alignment:)();
      uint64_t v182 = v253;
      sub_100008DD4(v179, v253, &qword_1001FC6E8);
      unint64_t v183 = (_OWORD *)(v182 + *(int *)(v249 + 36));
      long long v184 = v310;
      *unint64_t v183 = v309;
      v183[1] = v184;
      v183[2] = v311;
      sub_10002784C(v179, &qword_1001FC6E8);
      uint64_t v185 = *(void *)(v181 + 24);
      uint64_t v305 = *(void **)(v181 + 16);
      uint64_t v306 = v185;
      State.wrappedValue.getter();
      uint64_t v186 = v292;
      swift_getKeyPath();
      uint64_t v305 = (void *)v186;
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      LOBYTE(v181) = *(unsigned char *)(v186 + 88);
      swift_release();
      uint64_t KeyPath = swift_getKeyPath();
      uint64_t v188 = swift_allocObject();
      *(unsigned char *)(v188 + 16) = v181;
      sub_100008DD4(v182, v78, &qword_1001FC6F0);
      uint64_t v189 = (uint64_t *)(v78 + *(int *)(v252 + 36));
      *uint64_t v189 = KeyPath;
      v189[1] = (uint64_t)sub_100040414;
      v189[2] = v188;
      sub_10002784C(v182, &qword_1001FC6F0);
      uint64_t v190 = v254;
      sub_100026FD0(v78, v254, &qword_1001FC6F8);
      uint64_t v191 = v248;
      sub_100008DD4(v136, v248, &qword_1001FC728);
      sub_100008DD4(v190, v78, &qword_1001FC6F8);
      uint64_t v192 = v255;
      sub_100008DD4(v191, v255, &qword_1001FC728);
      uint64_t v193 = sub_1000063C0(&qword_1001FC780);
      sub_100008DD4(v78, v192 + *(int *)(v193 + 48), &qword_1001FC6F8);
      sub_10002784C(v78, &qword_1001FC6F8);
      sub_10002784C(v191, &qword_1001FC728);
      sub_100008DD4(v192, (uint64_t)v258, &qword_1001FC6E0);
      swift_storeEnumTagMultiPayload();
      sub_1000063C0(&qword_1001FC788);
      sub_10003F754();
      sub_100027F2C(&qword_1001FC7A0, &qword_1001FC6E0);
      uint64_t v142 = (uint64_t)v262;
      _ConditionalContent<>.init(storage:)();
      sub_10002784C(v192, &qword_1001FC6E0);
      sub_10002784C(v190, &qword_1001FC6F8);
      sub_10002784C(v136, &qword_1001FC728);
      goto LABEL_29;
    }
    uint64_t v229 = v53;
    LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v59._countAndFlagsBits = 0;
    v59._object = (void *)0xE000000000000000;
    LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v59);
    uint64_t v305 = (void *)v50;
    uint64_t v306 = v51;
    State.wrappedValue.getter();
    uint64_t v60 = v292;
    swift_getKeyPath();
    uint64_t v61 = (uint64_t *)(v60 + OBJC_IVAR____TtC21WritingToolsUIService9ToolModel___observationRegistrar);
    uint64_t v305 = (void *)v60;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    if (*(unsigned char *)(v60 + 88))
    {
      __break(1u);
    }
    else
    {
      uint64_t v228 = v61;
      swift_getKeyPath();
      uint64_t v305 = (void *)v60;
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      swift_beginAccess();
      swift_retain();
      unint64_t v62 = swift_bridgeObjectRetain();
      unint64_t v63 = (unint64_t)v263;
      uint64_t v64 = sub_1001737E4(v62, v60);
      swift_bridgeObjectRelease();
      swift_release();

      if (!v64) {
        goto LABEL_42;
      }
      swift_getKeyPath();
      uint64_t v61 = &v292;
      uint64_t v305 = (void *)v60;
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      swift_retain();
      unint64_t v65 = swift_bridgeObjectRetain();
      id v263 = sub_100173A9C(v65, v60);
      swift_bridgeObjectRelease();
      swift_release();
      swift_getKeyPath();
      uint64_t v305 = (void *)v60;
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      if ((*(unsigned char *)(v60 + 88) & 1) == 0)
      {
        swift_getKeyPath();
        uint64_t v305 = (void *)v60;
        ObservationRegistrar.access<A, B>(_:keyPath:)();
        swift_release();
        swift_retain();
        unint64_t v66 = swift_bridgeObjectRetain();
        uint64_t v67 = sub_1001737E4(v66, v60);
        swift_bridgeObjectRelease();
        swift_release();
        if (!v67)
        {
LABEL_43:
          __break(1u);
          return;
        }
        uint64_t v61 = v263;
        sub_10003ED1C((uint64_t)v67, (unint64_t)v263);
        uint64_t v69 = v68;
        char v71 = v70;
        swift_bridgeObjectRelease();

        if ((v71 & 1) == 0)
        {
          swift_release();
          if (!__OFADD__(v69, 1))
          {
            uint64_t v305 = (void *)(v69 + 1);
            LocalizedStringKey.StringInterpolation.appendInterpolation<A>(_:specifier:)();
            v72._countAndFlagsBits = 543584032;
            v72._object = (void *)0xE400000000000000;
            LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v72);
            uint64_t v73 = v264[3];
            uint64_t v305 = (void *)v264[2];
            uint64_t v306 = v73;
            State.wrappedValue.getter();
            uint64_t v74 = v292;
            uint64_t v61 = &v292;
            swift_getKeyPath();
            uint64_t v305 = (void *)v74;
            ObservationRegistrar.access<A, B>(_:keyPath:)();
            swift_release();
            swift_beginAccess();
            unint64_t v75 = swift_bridgeObjectRetain();
            unint64_t v76 = (unint64_t)sub_100173A9C(v75, v74);
            swift_bridgeObjectRelease();
            swift_release();
            id v263 = (uint64_t *)v63;
            if (!(v76 >> 62))
            {
              uint64_t v77 = *(void *)((v76 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_18:
              uint64_t v78 = (uint64_t)v246;
              swift_bridgeObjectRelease();
              v61[24] = v77;
              LocalizedStringKey.StringInterpolation.appendInterpolation<A>(_:specifier:)();
              v79._countAndFlagsBits = 0;
              v79._object = (void *)0xE000000000000000;
              LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v79);
              LocalizedStringKey.init(stringInterpolation:)();
              uint64_t v80 = Text.init(_:tableName:bundle:comment:)();
              uint64_t v82 = v81;
              char v84 = v83 & 1;
              uint64_t v85 = type metadata accessor for Font.Design();
              uint64_t v86 = (uint64_t)v247;
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v85 - 8) + 56))(v247, 1, 1, v85);
              static Font.system(size:weight:design:)();
              sub_10002784C(v86, &qword_1001FBA90);
              uint64_t v246 = (char *)Text.font(_:)();
              uint64_t v247 = v87;
              id v241 = v88;
              LODWORD(v229) = v89;
              swift_release();
              sub_100026F18(v80, v82, v84);
              swift_bridgeObjectRelease();
              LODWORD(v228) = static Edge.Set.top.getter();
              EdgeInsets.init(_all:)();
              uint64_t v91 = v90;
              uint64_t v93 = v92;
              uint64_t v95 = v94;
              uint64_t v97 = v96;
              uint64_t v98 = static HorizontalAlignment.leading.getter();
              uint64_t v99 = (uint64_t)v231;
              *uint64_t v231 = v98;
              *(void *)(v99 + 8) = 0x4020000000000000;
              *(unsigned char *)(v99 + 16) = 0;
              uint64_t v100 = sub_1000063C0(&qword_1001FC7B8);
              sub_10003919C((uint64_t)v264, v99 + *(int *)(v100 + 44));
              char v101 = static Edge.Set.bottom.getter();
              EdgeInsets.init(_all:)();
              uint64_t v103 = v102;
              uint64_t v105 = v104;
              uint64_t v107 = v106;
              uint64_t v109 = v108;
              uint64_t v110 = v235;
              sub_100008DD4(v99, v235, &qword_1001FC710);
              uint64_t v111 = v110 + *(int *)(v230 + 36);
              *(unsigned char *)uint64_t v111 = v101;
              *(void *)(v111 + 8) = v103;
              *(void *)(v111 + 16) = v105;
              *(void *)(v111 + 24) = v107;
              *(void *)(v111 + 32) = v109;
              *(unsigned char *)(v111 + 40) = 0;
              sub_10002784C(v99, &qword_1001FC710);
              uint64_t v112 = v236;
              uint64_t v113 = &v236[*(int *)(v233 + 20)];
              uint64_t v114 = enum case for RoundedCornerStyle.continuous(_:);
              uint64_t v115 = type metadata accessor for RoundedCornerStyle();
              (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v115 - 8) + 104))(v113, v114, v115);
              __asm { FMOV            V0.2D, #12.0 }
              *uint64_t v112 = _Q0;
              if (qword_1001FAD48 != -1) {
                swift_once();
              }
              uint64_t v121 = qword_1002129F0;
              uint64_t v122 = v237;
              sub_10003FBF0((uint64_t)v112, v237, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
              uint64_t v123 = v234;
              *(void *)(v122 + *(int *)(v234 + 52)) = v121;
              *(_WORD *)(v122 + *(int *)(v123 + 56)) = 256;
              swift_retain();
              sub_100040048((uint64_t)v112, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
              uint64_t v124 = static Alignment.center.getter();
              uint64_t v126 = v125;
              uint64_t v127 = (uint64_t)v238;
              uint64_t v128 = (uint64_t)&v238[*(int *)(v232 + 36)];
              sub_100008DD4(v122, v128, &qword_100202510);
              uint64_t v129 = (uint64_t *)(v128 + *(int *)(sub_1000063C0(&qword_1001FC7C0) + 36));
              *uint64_t v129 = v124;
              v129[1] = v126;
              sub_100008DD4(v110, v127, &qword_1001FC718);
              sub_10002784C(v122, &qword_100202510);
              sub_10002784C(v110, &qword_1001FC718);
              uint64_t v130 = v240;
              sub_100026FD0(v127, v240, &qword_1001FC720);
              sub_100008DD4(v130, v127, &qword_1001FC720);
              uint64_t v131 = (uint64_t)v239;
              uint64_t v133 = (uint64_t)v246;
              char v132 = v247;
              uint64_t v134 = (uint64_t)v241;
              *uint64_t v239 = v246;
              *(void *)(v131 + 8) = v134;
              LOBYTE(v124) = v229 & 1;
              *(unsigned char *)(v131 + 16) = v229 & 1;
              *(void *)(v131 + 24) = v132;
              *(unsigned char *)(v131 + 32) = (_BYTE)v228;
              *(void *)(v131 + 40) = v91;
              *(void *)(v131 + 48) = v93;
              *(void *)(v131 + 56) = v95;
              *(void *)(v131 + 64) = v97;
              *(unsigned char *)(v131 + 72) = 0;
              uint64_t v135 = sub_1000063C0(&qword_1001FC7C8);
              sub_100008DD4(v127, v131 + *(int *)(v135 + 48), &qword_1001FC720);
              sub_10002783C(v133, v134, v124);
              swift_bridgeObjectRetain();
              sub_10002783C(v133, v134, v124);
              swift_bridgeObjectRetain();
              sub_10002784C(v127, &qword_1001FC720);
              sub_100026F18(v133, v134, v124);
              swift_bridgeObjectRelease();
              sub_100008DD4(v131, (uint64_t)v244, &qword_1001FC708);
              swift_storeEnumTagMultiPayload();
              sub_1000063C0(&qword_1001FC740);
              sub_100027F2C(&qword_1001FC748, &qword_1001FC708);
              sub_10003F600();
              uint64_t v136 = (uint64_t)v245;
              _ConditionalContent<>.init(storage:)();
              sub_10002784C(v131, &qword_1001FC708);
              sub_10002784C(v240, &qword_1001FC720);
              sub_100026F18(v133, v134, v124);
              swift_bridgeObjectRelease();
              goto LABEL_28;
            }
LABEL_41:
            uint64_t v77 = _CocoaArrayWrapper.endIndex.getter();
            goto LABEL_18;
          }
LABEL_40:
          __break(1u);
          goto LABEL_41;
        }
LABEL_42:
        __break(1u);
        goto LABEL_43;
      }
    }
    __break(1u);
    goto LABEL_40;
  }
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v137 = Text.init(_:tableName:bundle:comment:)();
  id v138 = v258;
  *id v258 = v137;
  v138[1] = v139;
  *((unsigned char *)v138 + 16) = v140 & 1;
  v138[3] = v141;
  swift_storeEnumTagMultiPayload();
  sub_1000063C0(&qword_1001FC788);
  sub_10003F754();
  sub_100027F2C(&qword_1001FC7A0, &qword_1001FC6E0);
  uint64_t v142 = (uint64_t)v262;
  _ConditionalContent<>.init(storage:)();
LABEL_29:
  uint64_t v194 = type metadata accessor for FeedbackFeatureFlags();
  uint64_t v307 = v194;
  uint64_t v308 = sub_100040000((unint64_t *)&unk_1001FDED0, (void (*)(uint64_t))&type metadata accessor for FeedbackFeatureFlags);
  uint64_t v195 = sub_10002E148((uint64_t *)&v305);
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v194 - 8) + 104))(v195, enum case for FeedbackFeatureFlags.CentralizedFeedback(_:), v194);
  LOBYTE(v194) = isFeatureEnabled(_:)();
  sub_100027DBC((uint64_t)&v305);
  if (v194)
  {
    uint64_t v196 = v264;
    uint64_t v197 = v264[3];
    uint64_t v305 = (void *)v264[2];
    uint64_t v306 = v197;
    State.wrappedValue.getter();
    uint64_t v198 = v292;
    swift_getKeyPath();
    uint64_t v305 = (void *)v198;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v199 = *(void *)(v198 + 40);
    id v258 = *(uint64_t **)(v198 + 32);
    uint64_t v259 = v199;
    swift_bridgeObjectRetain();
    swift_release();
    uint64_t v200 = v196[3];
    uint64_t v305 = (void *)v196[2];
    uint64_t v306 = v200;
    State.wrappedValue.getter();
    uint64_t v201 = v292;
    swift_getKeyPath();
    uint64_t v305 = (void *)v201;
    uint64_t v250 = (void *)sub_100040000((unint64_t *)&qword_1001FBD30, (void (*)(uint64_t))type metadata accessor for ProofreadingModel);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v202 = *(void *)(v201 + OBJC_IVAR____TtC21WritingToolsUIService17ProofreadingModel__inputStringForFeedback + 8);
    uint64_t v255 = *(void *)(v201 + OBJC_IVAR____TtC21WritingToolsUIService17ProofreadingModel__inputStringForFeedback);
    uint64_t v257 = v202;
    swift_bridgeObjectRetain();
    swift_release();
    uint64_t v203 = v196[3];
    uint64_t v305 = (void *)v196[2];
    uint64_t v306 = v203;
    State.wrappedValue.getter();
    uint64_t v204 = v292;
    swift_getKeyPath();
    uint64_t v305 = (void *)v204;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    swift_beginAccess();
    unint64_t v205 = swift_bridgeObjectRetain();
    uint64_t v206 = sub_10003EA2C(v205);
    swift_bridgeObjectRelease();
    uint64_t v207 = sub_10003EBC4((uint64_t)v206);
    swift_bridgeObjectRelease();
    uint64_t v305 = v207;
    sub_1000063C0(&qword_1001FBE30);
    sub_100027F2C(&qword_1001FEDF0, &qword_1001FBE30);
    id v263 = (uint64_t *)BidirectionalCollection<>.joined(separator:)();
    uint64_t v254 = v208;
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v209 = v196[3];
    uint64_t v305 = (void *)v196[2];
    uint64_t v306 = v209;
    State.wrappedValue.getter();
    uint64_t v210 = v292;
    swift_getKeyPath();
    uint64_t v305 = (void *)v210;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v211 = *(void *)(v210 + OBJC_IVAR____TtC21WritingToolsUIService17ProofreadingModel__modelInfoString + 8);
    uint64_t v252 = *(void *)(v210 + OBJC_IVAR____TtC21WritingToolsUIService17ProofreadingModel__modelInfoString);
    uint64_t v253 = v211;
    swift_bridgeObjectRetain();
    swift_release();
    uint64_t v212 = v196[5];
    uint64_t v305 = (void *)v196[4];
    uint64_t v306 = v212;
    sub_1000063C0(&qword_1001FC678);
    State.wrappedValue.getter();
    id v251 = (id)v292;
    uint64_t v213 = v196[3];
    uint64_t v305 = (void *)v196[2];
    uint64_t v306 = v213;
    State.wrappedValue.getter();
    uint64_t v214 = v292;
    swift_getKeyPath();
    uint64_t v305 = (void *)v214;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v215 = *(void *)(v214 + OBJC_IVAR____TtC21WritingToolsUIService17ProofreadingModel__session);
    swift_release();
    uint64_t v216 = v256;
    sub_10003FBF0((uint64_t)v196, v256, (uint64_t (*)(void))type metadata accessor for ProofreadingView);
    if (v215)
    {
      uint64_t v217 = *(void *)(v216 + 24);
      uint64_t v305 = *(void **)(v216 + 16);
      uint64_t v306 = v217;
      State.wrappedValue.getter();
      uint64_t v218 = v292;
      swift_getKeyPath();
      uint64_t v305 = (void *)v218;
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      char v219 = *(unsigned char *)(v218 + 88);
      uint64_t v216 = v256;
      swift_release();
    }
    else
    {
      char v219 = 1;
    }
    sub_100040048(v216, (uint64_t (*)(void))type metadata accessor for ProofreadingView);
    uint64_t v292 = 0x3FF0000000000000;
    id v222 = v251;
    id v223 = v251;
    State.init(wrappedValue:)();
    uint64_t v224 = (uint64_t)v305;
    uint64_t v225 = v306;

    *(void *)&long long v267 = v222;
    *((void *)&v267 + 1) = v258;
    *(void *)&long long v268 = v259;
    *((void *)&v268 + 1) = v255;
    uint64_t v269 = v257;
    uint64_t v270 = 0;
    *(void *)&long long v271 = 0;
    *((void *)&v271 + 1) = v263;
    *(void *)&long long v272 = v254;
    *((void *)&v272 + 1) = v252;
    *(void *)&long long v273 = v253;
    *((void *)&v273 + 1) = _swiftEmptyArrayStorage;
    *(void *)&long long v274 = _swiftEmptyArrayStorage;
    *((void *)&v274 + 1) = _swiftEmptyArrayStorage;
    uint64_t v276 = 0;
    *(void *)&long long v277 = 0;
    uint64_t v275 = 1;
    BYTE8(v277) = 2;
    BYTE9(v277) = v219;
    WORD5(v277) = 1;
    BYTE12(v277) = 0;
    uint64_t v278 = 0;
    uint64_t v279 = 0;
    *(void *)&long long v280 = v224;
    *((void *)&v280 + 1) = v225;
    char v281 = 1;
    *(_OWORD *)&v291[7] = v267;
    *(_OWORD *)&v291[23] = v268;
    *(_OWORD *)&v291[39] = (unint64_t)v257;
    *(_OWORD *)&v291[103] = v274;
    *(_OWORD *)&v291[87] = v273;
    *(_OWORD *)&v291[71] = v272;
    *(_OWORD *)&v291[55] = v271;
    *(_OWORD *)&v291[167] = v280;
    *(_OWORD *)&v291[151] = 0u;
    *(_OWORD *)&v291[135] = v277;
    *(_OWORD *)&v291[119] = 1uLL;
    v282[0] = v222;
    v282[1] = v258;
    v282[2] = v259;
    v282[3] = v255;
    v282[4] = v257;
    v282[5] = 0;
    v282[6] = 0;
    v282[7] = v263;
    v282[8] = v254;
    v282[9] = v252;
    v282[10] = v253;
    v282[11] = _swiftEmptyArrayStorage;
    v282[12] = _swiftEmptyArrayStorage;
    v282[13] = _swiftEmptyArrayStorage;
    v282[15] = 0;
    v282[16] = 0;
    v282[14] = 1;
    char v283 = 2;
    char v284 = v219;
    __int16 v285 = 1;
    char v286 = 0;
    uint64_t v287 = 0;
    uint64_t v288 = 0;
    uint64_t v289 = v224;
    uint64_t v290 = v225;
    sub_10003FB08((uint64_t)&v267);
    sub_10002E220((uint64_t)v282);
    long long v302 = *(_OWORD *)&v291[128];
    long long v303 = *(_OWORD *)&v291[144];
    *(_OWORD *)v304 = *(_OWORD *)&v291[160];
    long long v298 = *(_OWORD *)&v291[64];
    long long v299 = *(_OWORD *)&v291[80];
    long long v300 = *(_OWORD *)&v291[96];
    long long v301 = *(_OWORD *)&v291[112];
    long long v294 = *(_OWORD *)v291;
    long long v295 = *(_OWORD *)&v291[16];
    long long v296 = *(_OWORD *)&v291[32];
    uint64_t v292 = 0;
    char v293 = 1;
    *(void *)&v304[15] = *(void *)&v291[175];
    long long v297 = *(_OWORD *)&v291[48];
    nullsub_1(&v292);
    sub_100026FD0((uint64_t)&v292, (uint64_t)&v305, &qword_1001FC7A8);
    uint64_t v221 = (uint64_t)v260;
    uint64_t v220 = v261;
    uint64_t v142 = (uint64_t)v262;
  }
  else
  {
    sub_10003F824(&v292);
    sub_100026FD0((uint64_t)&v292, (uint64_t)&v305, &qword_1001FC7A8);
    uint64_t v221 = (uint64_t)v260;
    uint64_t v220 = v261;
  }
  sub_100008DD4(v142, v221, &qword_1001FC738);
  sub_100026FD0((uint64_t)&v305, (uint64_t)v282, &qword_1001FC7A8);
  sub_100008DD4(v221, v220, &qword_1001FC738);
  uint64_t v226 = v220 + *(int *)(sub_1000063C0(&qword_1001FC7B0) + 48);
  sub_100026FD0((uint64_t)v282, (uint64_t)v291, &qword_1001FC7A8);
  sub_100026FD0((uint64_t)v291, v226, &qword_1001FC7A8);
  sub_10003F95C(v291, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10003F844);
  sub_10002784C(v142, &qword_1001FC738);
  sub_100026FD0((uint64_t)v282, (uint64_t)&v292, &qword_1001FC7A8);
  sub_10003F95C(&v292, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10003F9D0);
  sub_10002784C(v221, &qword_1001FC738);
}

uint64_t sub_10003919C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v55 = a2;
  uint64_t v54 = type metadata accessor for Divider();
  uint64_t v57 = *(void *)(v54 - 8);
  uint64_t v3 = __chkstk_darwin(v54);
  id v58 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  id v56 = (char *)&v51 - v5;
  uint64_t v6 = sub_1000063C0(&qword_1001FC7D0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000063C0(&qword_1001FC7D8);
  uint64_t v10 = v9 - 8;
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v51 - v14;
  *(void *)uint64_t v8 = static VerticalAlignment.center.getter();
  *((void *)v8 + 1) = 0;
  v8[16] = 1;
  uint64_t v16 = sub_1000063C0(&qword_1001FC7E0);
  sub_1000396A8(a1, (uint64_t *)&v8[*(int *)(v16 + 44)]);
  char v17 = static Edge.Set.horizontal.getter();
  EdgeInsets.init(_all:)();
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  sub_100008DD4((uint64_t)v8, (uint64_t)v13, &qword_1001FC7D0);
  uint64_t v26 = &v13[*(int *)(v10 + 44)];
  *uint64_t v26 = v17;
  *((void *)v26 + 1) = v19;
  *((void *)v26 + 2) = v21;
  *((void *)v26 + 3) = v23;
  *((void *)v26 + 4) = v25;
  v26[40] = 0;
  sub_10002784C((uint64_t)v8, &qword_1001FC7D0);
  uint64_t v53 = v15;
  sub_100026FD0((uint64_t)v13, (uint64_t)v15, &qword_1001FC7D8);
  uint64_t v27 = v56;
  Divider.init()();
  sub_10003ABF0(a1, (uint64_t)v74);
  int v52 = static Edge.Set.horizontal.getter();
  EdgeInsets.init(_all:)();
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  unsigned __int8 v72 = 0;
  sub_100008DD4((uint64_t)v15, (uint64_t)v13, &qword_1001FC7D8);
  uint64_t v36 = v58;
  uint64_t v37 = *(void (**)(char *, char *, uint64_t))(v57 + 16);
  uint64_t v38 = v54;
  v37(v58, v27, v54);
  long long v68 = v74[8];
  long long v69 = v74[9];
  long long v70 = v74[10];
  uint64_t v71 = v75;
  long long v64 = v74[4];
  long long v65 = v74[5];
  long long v66 = v74[6];
  long long v67 = v74[7];
  long long v60 = v74[0];
  long long v61 = v74[1];
  long long v62 = v74[2];
  long long v63 = v74[3];
  v59[0] = *(_DWORD *)v73;
  *(_DWORD *)((char *)v59 + 3) = *(_DWORD *)&v73[3];
  int v51 = v72;
  uint64_t v39 = v55;
  sub_100008DD4((uint64_t)v13, v55, &qword_1001FC7D8);
  uint64_t v40 = sub_1000063C0(&qword_1001FC7E8);
  v37((char *)(v39 + *(int *)(v40 + 48)), v36, v38);
  uint64_t v41 = v39 + *(int *)(v40 + 64);
  long long v84 = v68;
  long long v85 = v69;
  long long v86 = v70;
  *(void *)&long long v87 = v71;
  long long v80 = v64;
  long long v81 = v65;
  long long v82 = v66;
  long long v83 = v67;
  long long v76 = v60;
  long long v77 = v61;
  long long v78 = v62;
  long long v79 = v63;
  LOBYTE(v37) = v51;
  LOBYTE(v36) = v52;
  BYTE8(v87) = v52;
  *(_DWORD *)((char *)&v87 + 9) = v59[0];
  HIDWORD(v87) = *(_DWORD *)((char *)v59 + 3);
  *(void *)&long long v88 = v29;
  *((void *)&v88 + 1) = v31;
  *(void *)&long long v89 = v33;
  *((void *)&v89 + 1) = v35;
  char v90 = v51;
  *(unsigned char *)(v41 + 224) = v51;
  long long v42 = v85;
  *(_OWORD *)(v41 + 128) = v84;
  *(_OWORD *)(v41 + 144) = v42;
  long long v43 = v81;
  *(_OWORD *)(v41 + 64) = v80;
  *(_OWORD *)(v41 + 80) = v43;
  long long v44 = v83;
  *(_OWORD *)(v41 + 96) = v82;
  *(_OWORD *)(v41 + 112) = v44;
  long long v45 = v77;
  *(_OWORD *)uint64_t v41 = v76;
  *(_OWORD *)(v41 + 16) = v45;
  long long v46 = v79;
  *(_OWORD *)(v41 + 32) = v78;
  *(_OWORD *)(v41 + 48) = v46;
  long long v47 = v89;
  *(_OWORD *)(v41 + 192) = v88;
  *(_OWORD *)(v41 + 208) = v47;
  long long v48 = v87;
  *(_OWORD *)(v41 + 160) = v86;
  *(_OWORD *)(v41 + 176) = v48;
  sub_10003FC58((uint64_t)&v76);
  uint64_t v49 = *(void (**)(char *, uint64_t))(v57 + 8);
  v49(v56, v38);
  sub_10002784C((uint64_t)v53, &qword_1001FC7D8);
  v91[8] = v68;
  v91[9] = v69;
  v91[10] = v70;
  uint64_t v92 = v71;
  v91[4] = v64;
  v91[5] = v65;
  v91[6] = v66;
  v91[7] = v67;
  v91[0] = v60;
  v91[1] = v61;
  v91[2] = v62;
  v91[3] = v63;
  char v93 = (char)v36;
  *(_DWORD *)uint64_t v94 = v59[0];
  *(_DWORD *)&v94[3] = *(_DWORD *)((char *)v59 + 3);
  uint64_t v95 = v29;
  uint64_t v96 = v31;
  uint64_t v97 = v33;
  uint64_t v98 = v35;
  char v99 = (char)v37;
  sub_10003FCE8((uint64_t)v91);
  v49(v58, v38);
  return sub_10002784C((uint64_t)v13, &qword_1001FC7D8);
}

uint64_t sub_1000396A8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  char v172 = a2;
  uint64_t v163 = type metadata accessor for RoundedRectangle();
  __chkstk_darwin(v163);
  unint64_t v168 = (char *)&v144 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v167 = sub_1000063C0(&qword_100202510);
  __chkstk_darwin(v167);
  uint64_t v170 = (uint64_t)&v144 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ProofreadingView();
  uint64_t v148 = *(void *)(v5 - 8);
  __chkstk_darwin(v5 - 8);
  uint64_t v149 = v6;
  uint64_t v150 = (uint64_t)&v144 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v157 = sub_1000063C0(&qword_1001FC7F0);
  uint64_t v155 = *(void *)(v157 - 8);
  __chkstk_darwin(v157);
  char v154 = (char *)&v144 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v151 = sub_1000063C0(&qword_1001FC7F8);
  __chkstk_darwin(v151);
  uint64_t v156 = (char *)&v144 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v153 = sub_1000063C0(&qword_1001FC800);
  __chkstk_darwin(v153);
  uint64_t v160 = (uint64_t)&v144 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v158 = sub_1000063C0(&qword_1001FC808);
  __chkstk_darwin(v158);
  uint64_t v162 = (char *)&v144 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v159 = sub_1000063C0(&qword_1001FC810);
  __chkstk_darwin(v159);
  uint64_t v165 = (uint64_t)&v144 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v161 = sub_1000063C0(&qword_1001FC818);
  __chkstk_darwin(v161);
  uint64_t v166 = (uint64_t)&v144 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v164 = sub_1000063C0(&qword_1001FC820);
  uint64_t v13 = __chkstk_darwin(v164);
  uint64_t v171 = (uint64_t)&v144 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v169 = (uint64_t)&v144 - v15;
  uint64_t v16 = sub_1000063C0(&qword_1001FBA90);
  __chkstk_darwin(v16 - 8);
  unint64_t v147 = (char *)&v144 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v146 = type metadata accessor for UUID();
  uint64_t v145 = *(void *)(v146 - 8);
  __chkstk_darwin(v146);
  uint64_t v174 = (char *)&v144 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v152 = a1;
  uint64_t v20 = *(void *)(a1 + 16);
  uint64_t v19 = *(void *)(a1 + 24);
  uint64_t v180 = v20;
  uint64_t v181 = v19;
  sub_1000063C0(&qword_1001FB850);
  State.wrappedValue.getter();
  uint64_t v21 = v179;
  uint64_t v180 = v20;
  uint64_t v181 = v19;
  State.wrappedValue.getter();
  uint64_t v22 = v179;
  swift_getKeyPath();
  uint64_t v180 = v22;
  uint64_t v173 = sub_100040000((unint64_t *)&qword_1001FD2A0, (void (*)(uint64_t))type metadata accessor for ToolModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (*(unsigned char *)(v22 + 88) == 1) {
    goto LABEL_11;
  }
  swift_getKeyPath();
  uint64_t v180 = v22;
  sub_100040000((unint64_t *)&qword_1001FBD30, (void (*)(uint64_t))type metadata accessor for ProofreadingModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  swift_retain();
  unint64_t v23 = swift_bridgeObjectRetain();
  uint64_t v24 = sub_1001737E4(v23, v22);
  swift_bridgeObjectRelease();
  swift_release_n();
  if (!v24)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  id v25 = [v24 uuid];

  uint64_t v26 = (uint64_t)v174;
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  swift_getKeyPath();
  uint64_t v179 = v21;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v27 = (uint64_t *)(v21 + OBJC_IVAR____TtC21WritingToolsUIService17ProofreadingModel__suggestionContextMapping);
  swift_beginAccess();
  uint64_t v28 = *v27;
  swift_bridgeObjectRetain();
  swift_release();
  if (!*(void *)(v28 + 16) || (unint64_t v29 = sub_100007B70(v26), (v30 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    __break(1u);
LABEL_11:
    swift_release();
    goto LABEL_12;
  }
  id v31 = *(id *)(*(void *)(v28 + 56) + 8 * v29);
  swift_bridgeObjectRelease();
  id v32 = [v31 attributedText];

  uint64_t v177 = v20;
  uint64_t v178 = v19;
  State.wrappedValue.getter();
  uint64_t v33 = v175;
  swift_getKeyPath();
  uint64_t v177 = v33;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (*(unsigned char *)(v33 + 88) == 1)
  {
LABEL_13:
    uint64_t result = swift_release();
    goto LABEL_14;
  }
  swift_getKeyPath();
  uint64_t v177 = v33;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  swift_retain();
  unint64_t v34 = swift_bridgeObjectRetain();
  uint64_t v35 = sub_1001737E4(v34, v33);
  swift_bridgeObjectRelease();
  uint64_t result = swift_release_n();
  if (!v35)
  {
LABEL_14:
    __break(1u);
    return result;
  }
  (*(void (**)(uint64_t, uint64_t))(v145 + 8))(v26, v146);
  id v37 = [v35 originalRange];
  uint64_t v39 = v38;

  id v40 = [v32 attributedSubstringFromRange:v37, v39];
  id v41 = [v40 string];

  uint64_t v42 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v44 = v43;

  uint64_t v175 = v42;
  uint64_t v176 = v44;
  sub_10002DF54();
  uint64_t v45 = Text.init<A>(_:)();
  uint64_t v47 = v46;
  char v49 = v48 & 1;
  uint64_t v50 = type metadata accessor for Font.Design();
  uint64_t v51 = (uint64_t)v147;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v147, 1, 1, v50);
  static Font.system(size:weight:design:)();
  sub_10002784C(v51, &qword_1001FBA90);
  uint64_t v52 = Text.font(_:)();
  uint64_t v54 = v53;
  char v56 = v55;
  swift_release();
  char v57 = v56 & 1;
  sub_100026F18(v45, v47, v49);
  swift_bridgeObjectRelease();
  LODWORD(v175) = static HierarchicalShapeStyle.secondary.getter();
  uint64_t v58 = Text.foregroundStyle<A>(_:)();
  uint64_t v60 = v59;
  char v62 = v61;
  uint64_t v174 = v63;
  sub_100026F18(v52, v54, v57);
  swift_bridgeObjectRelease();
  LODWORD(v173) = static Edge.Set.top.getter();
  EdgeInsets.init(_all:)();
  uint64_t v65 = v64;
  uint64_t v67 = v66;
  uint64_t v69 = v68;
  uint64_t v71 = v70;
  uint64_t v72 = v150;
  sub_10003FBF0(v152, v150, (uint64_t (*)(void))type metadata accessor for ProofreadingView);
  unint64_t v73 = (*(unsigned __int8 *)(v148 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v148 + 80);
  uint64_t v74 = swift_allocObject();
  sub_1000366B4(v72, v74 + v73);
  sub_1000063C0(&qword_1001FC828);
  sub_100027F2C(&qword_1001FC830, &qword_1001FC828);
  uint64_t v75 = v154;
  Button.init(action:label:)();
  LOBYTE(v47) = static Edge.Set.horizontal.getter();
  EdgeInsets.init(_all:)();
  uint64_t v77 = v76;
  uint64_t v79 = v78;
  uint64_t v81 = v80;
  uint64_t v83 = v82;
  uint64_t v84 = v155;
  uint64_t v85 = (uint64_t)v156;
  uint64_t v86 = v157;
  (*(void (**)(char *, char *, uint64_t))(v155 + 16))(v156, v75, v157);
  uint64_t v87 = v85 + *(int *)(v151 + 36);
  *(unsigned char *)uint64_t v87 = v47;
  *(void *)(v87 + 8) = v77;
  *(void *)(v87 + 16) = v79;
  *(void *)(v87 + 24) = v81;
  *(void *)(v87 + 32) = v83;
  *(unsigned char *)(v87 + 40) = 0;
  (*(void (**)(char *, uint64_t))(v84 + 8))(v75, v86);
  LOBYTE(v47) = static Edge.Set.vertical.getter();
  EdgeInsets.init(_all:)();
  uint64_t v89 = v88;
  uint64_t v91 = v90;
  uint64_t v93 = v92;
  uint64_t v95 = v94;
  uint64_t v96 = v160;
  sub_100008DD4(v85, v160, &qword_1001FC7F8);
  uint64_t v97 = v96 + *(int *)(v153 + 36);
  *(unsigned char *)uint64_t v97 = v47;
  *(void *)(v97 + 8) = v89;
  *(void *)(v97 + 16) = v91;
  *(void *)(v97 + 24) = v93;
  *(void *)(v97 + 32) = v95;
  *(unsigned char *)(v97 + 40) = 0;
  sub_10002784C(v85, &qword_1001FC7F8);
  uint64_t v98 = v168;
  char v99 = &v168[*(int *)(v163 + 20)];
  uint64_t v100 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v101 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v101 - 8) + 104))(v99, v100, v101);
  __asm { FMOV            V0.2D, #14.0 }
  *uint64_t v98 = _Q0;
  if (qword_1001FAD60 != -1) {
    swift_once();
  }
  char v107 = v62 & 1;
  uint64_t v108 = qword_100212A08;
  uint64_t v109 = v170;
  sub_10003FBF0((uint64_t)v98, v170, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  uint64_t v110 = v167;
  *(void *)(v109 + *(int *)(v167 + 52)) = v108;
  *(_WORD *)(v109 + *(int *)(v110 + 56)) = 256;
  swift_retain();
  sub_100040048((uint64_t)v98, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  uint64_t v111 = static Alignment.center.getter();
  uint64_t v113 = v112;
  uint64_t v114 = (uint64_t)v162;
  uint64_t v115 = (uint64_t)&v162[*(int *)(v158 + 36)];
  sub_100008DD4(v109, v115, &qword_100202510);
  char v116 = (uint64_t *)(v115 + *(int *)(sub_1000063C0(&qword_1001FC7C0) + 36));
  uint64_t *v116 = v111;
  v116[1] = v113;
  sub_100008DD4(v96, v114, &qword_1001FC800);
  sub_10002784C(v109, &qword_100202510);
  sub_10002784C(v96, &qword_1001FC800);
  uint64_t v117 = static Color.accentColor.getter();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v119 = v165;
  sub_100008DD4(v114, v165, &qword_1001FC808);
  long long v120 = (uint64_t *)(v119 + *(int *)(v159 + 36));
  *long long v120 = KeyPath;
  v120[1] = v117;
  sub_10002784C(v114, &qword_1001FC808);
  LOBYTE(v117) = static Edge.Set.bottom.getter();
  EdgeInsets.init(_all:)();
  uint64_t v122 = v121;
  uint64_t v124 = v123;
  uint64_t v126 = v125;
  uint64_t v128 = v127;
  uint64_t v129 = v166;
  sub_100008DD4(v119, v166, &qword_1001FC810);
  uint64_t v130 = v129 + *(int *)(v161 + 36);
  *(unsigned char *)uint64_t v130 = v117;
  *(void *)(v130 + 8) = v122;
  *(void *)(v130 + 16) = v124;
  *(void *)(v130 + 24) = v126;
  *(void *)(v130 + 32) = v128;
  *(unsigned char *)(v130 + 40) = 0;
  sub_10002784C(v119, &qword_1001FC810);
  LOBYTE(v117) = static Edge.Set.top.getter();
  EdgeInsets.init(_all:)();
  uint64_t v132 = v131;
  uint64_t v134 = v133;
  uint64_t v136 = v135;
  uint64_t v138 = v137;
  uint64_t v139 = v171;
  sub_100008DD4(v129, v171, &qword_1001FC818);
  uint64_t v140 = v139 + *(int *)(v164 + 36);
  *(unsigned char *)uint64_t v140 = v117;
  *(void *)(v140 + 8) = v132;
  *(void *)(v140 + 16) = v134;
  *(void *)(v140 + 24) = v136;
  *(void *)(v140 + 32) = v138;
  *(unsigned char *)(v140 + 40) = 0;
  sub_10002784C(v129, &qword_1001FC818);
  uint64_t v141 = v169;
  sub_100026FD0(v139, v169, &qword_1001FC820);
  sub_100008DD4(v141, v139, &qword_1001FC820);
  uint64_t v142 = v172;
  *char v172 = v58;
  v142[1] = v60;
  *((unsigned char *)v142 + 16) = v107;
  v142[3] = (uint64_t)v174;
  *((unsigned char *)v142 + 32) = v173;
  v142[5] = v65;
  v142[6] = v67;
  v142[7] = v69;
  v142[8] = v71;
  *((unsigned char *)v142 + 72) = 0;
  v142[10] = 0;
  *((unsigned char *)v142 + 88) = 1;
  uint64_t v143 = sub_1000063C0(&qword_1001FC838);
  sub_100008DD4(v139, (uint64_t)v142 + *(int *)(v143 + 64), &qword_1001FC820);
  sub_10002783C(v58, v60, v107);
  swift_bridgeObjectRetain();
  sub_10002784C(v141, &qword_1001FC820);
  sub_10002784C(v139, &qword_1001FC820);
  sub_100026F18(v58, v60, v107);
  return swift_bridgeObjectRelease();
}

uint64_t sub_10003A714(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v16 = v6;
  uint64_t v17 = v7;
  sub_1000063C0(&qword_1001FB850);
  State.wrappedValue.getter();
  uint64_t v8 = v14;
  swift_getKeyPath();
  uint64_t v16 = v8;
  sub_100040000((unint64_t *)&qword_1001FD2A0, (void (*)(uint64_t))type metadata accessor for ToolModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (*(unsigned char *)(v8 + 88) == 1)
  {
    uint64_t result = swift_release();
  }
  else
  {
    swift_getKeyPath();
    uint64_t v16 = v8;
    sub_100040000((unint64_t *)&qword_1001FBD30, (void (*)(uint64_t))type metadata accessor for ProofreadingModel);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    swift_beginAccess();
    swift_retain();
    unint64_t v9 = swift_bridgeObjectRetain();
    uint64_t v10 = sub_1001737E4(v9, v8);
    swift_bridgeObjectRelease();
    uint64_t result = swift_release_n();
    if (v10)
    {
      uint64_t v14 = v6;
      uint64_t v15 = v7;
      State.wrappedValue.getter();
      sub_10016AE2C();
      swift_release();
      uint64_t v14 = v6;
      uint64_t v15 = v7;
      State.wrappedValue.getter();
      id v12 = [v10 uuid];
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      sub_1001696B4(3, (uint64_t)v5);
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_10003A9DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1000063C0(&qword_1001FBA90);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = Image.init(systemName:)();
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v5 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v7 = v6;
  char v9 = v8 & 1;
  uint64_t v10 = type metadata accessor for Font.Design();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v4, 1, 1, v10);
  static Font.system(size:weight:design:)();
  sub_10002784C((uint64_t)v4, &qword_1001FBA90);
  uint64_t v11 = Text.font(_:)();
  uint64_t v13 = v12;
  char v15 = v14;
  uint64_t v17 = v16;
  swift_release();
  sub_100026F18(v5, v7, v9);
  swift_bridgeObjectRelease();
  *(void *)a1 = v19;
  *(void *)(a1 + 8) = v11;
  *(void *)(a1 + 16) = v13;
  *(unsigned char *)(a1 + 24) = v15 & 1;
  *(void *)(a1 + 32) = v17;
  swift_retain();
  sub_10002783C(v11, v13, v15 & 1);
  swift_bridgeObjectRetain();
  sub_100026F18(v11, v13, v15 & 1);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10003ABF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for ProofreadingView();
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = &v82[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_1000063C0(&qword_1001FBA90);
  __chkstk_darwin(v7 - 8);
  uint64_t v95 = &v82[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v96 = a1;
  uint64_t v9 = *(void *)(a1 + 24);
  uint64_t v113 = *(void *)(a1 + 16);
  uint64_t v114 = v9;
  uint64_t v94 = sub_1000063C0(&qword_1001FB850);
  State.wrappedValue.getter();
  uint64_t v10 = v111;
  swift_getKeyPath();
  uint64_t v113 = v10;
  uint64_t v93 = sub_100040000((unint64_t *)&qword_1001FD2A0, (void (*)(uint64_t))type metadata accessor for ToolModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (*(unsigned char *)(v10 + 88) == 1)
  {
    swift_release();
    goto LABEL_19;
  }
  swift_getKeyPath();
  uint64_t v113 = v10;
  uint64_t v92 = sub_100040000((unint64_t *)&qword_1001FBD30, (void (*)(uint64_t))type metadata accessor for ProofreadingModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  swift_retain();
  unint64_t v11 = swift_bridgeObjectRetain();
  uint64_t v12 = sub_1001737E4(v11, v10);
  swift_bridgeObjectRelease();
  swift_release_n();
  if (!v12)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    swift_release();
    goto LABEL_21;
  }
  id v13 = [v12 suggestionCategory];

  uint64_t v91 = v6;
  if (v13)
  {
    uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v16 = v15;
  }
  else
  {
    uint64_t v14 = 0;
    unint64_t v16 = 0xE000000000000000;
  }
  uint64_t v111 = v14;
  unint64_t v112 = v16;
  unint64_t v89 = sub_10002DF54();
  uint64_t v17 = Text.init<A>(_:)();
  uint64_t v19 = v18;
  char v21 = v20 & 1;
  uint64_t v22 = Text.bold()();
  uint64_t v24 = v23;
  char v26 = v25 & 1;
  sub_100026F18(v17, v19, v21);
  swift_bridgeObjectRelease();
  uint64_t v27 = type metadata accessor for Font.Design();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = (uint64_t)v95;
  uint64_t v88 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v28 + 56);
  uint64_t v87 = v28 + 56;
  v88(v95, 1, 1, v27);
  static Font.system(size:weight:design:)();
  sub_10002784C(v29, &qword_1001FBA90);
  uint64_t v30 = Text.font(_:)();
  uint64_t v90 = v31;
  int v86 = v32;
  uint64_t v34 = v33;
  swift_release();
  sub_100026F18(v22, v24, v26);
  swift_bridgeObjectRelease();
  int v35 = static Edge.Set.top.getter();
  EdgeInsets.init(_all:)();
  uint64_t v37 = v36;
  uint64_t v39 = v38;
  uint64_t v41 = v40;
  uint64_t v43 = v42;
  unint64_t v44 = *(void *)(v96 + 24);
  uint64_t v111 = *(void *)(v96 + 16);
  unint64_t v112 = v44;
  State.wrappedValue.getter();
  uint64_t v45 = v109;
  swift_getKeyPath();
  uint64_t v111 = v45;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (*(unsigned char *)(v45 + 88) == 1) {
    goto LABEL_20;
  }
  swift_getKeyPath();
  uint64_t v111 = v45;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  swift_retain();
  unint64_t v46 = swift_bridgeObjectRetain();
  uint64_t v47 = sub_1001737E4(v46, v45);
  swift_bridgeObjectRelease();
  swift_release_n();
  if (!v47)
  {
LABEL_21:
    __break(1u);
LABEL_22:
    uint64_t result = swift_release();
    goto LABEL_23;
  }
  int v83 = v35;
  id v48 = [v47 suggestionDescription];

  uint64_t v49 = (uint64_t)v91;
  uint64_t v85 = v34;
  uint64_t v84 = v30;
  if (v48)
  {
    uint64_t v50 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v52 = v51;

    sub_10003FBF0(v96, v49, (uint64_t (*)(void))type metadata accessor for ProofreadingView);
    if (v52)
    {
LABEL_17:
      char v60 = v86 & 1;
      sub_100040048(v49, (uint64_t (*)(void))type metadata accessor for ProofreadingView);
      uint64_t v98 = v50;
      unint64_t v99 = v52;
      uint64_t v61 = Text.init<A>(_:)();
      uint64_t v63 = v62;
      uint64_t v65 = v64;
      char v67 = v66 & 1;
      LODWORD(v96) = v66 & 1;
      uint64_t v68 = (uint64_t)v95;
      v88(v95, 1, 1, v27);
      uint64_t v69 = static Font.system(size:weight:design:)();
      sub_10002784C(v68, &qword_1001FBA90);
      uint64_t KeyPath = swift_getKeyPath();
      LODWORD(v95) = static Edge.Set.top.getter();
      EdgeInsets.init(_all:)();
      char v97 = v60;
      char v108 = v60;
      char v106 = 0;
      char v104 = v67;
      char v100 = 0;
      *(_DWORD *)(a2 + 17) = v98;
      *(_DWORD *)(a2 + 20) = *(_DWORD *)((char *)&v98 + 3);
      *(_DWORD *)(a2 + 33) = *(_DWORD *)v107;
      *(_DWORD *)(a2 + 36) = *(_DWORD *)&v107[3];
      *(_DWORD *)(a2 + 73) = *(_DWORD *)v105;
      *(_DWORD *)(a2 + 76) = *(_DWORD *)&v105[3];
      char v71 = v67;
      int v72 = *(_DWORD *)v103;
      *(_DWORD *)(a2 + 100) = *(_DWORD *)&v103[3];
      *(_DWORD *)(a2 + 97) = v72;
      int v73 = *(_DWORD *)&v101[7];
      *(_WORD *)(a2 + 118) = v102;
      *(_DWORD *)(a2 + 114) = v73;
      int v74 = *(_DWORD *)v101;
      *(_DWORD *)(a2 + 140) = *(_DWORD *)&v101[3];
      *(_DWORD *)(a2 + 137) = v74;
      LOBYTE(v74) = v100;
      uint64_t v75 = v84;
      uint64_t v76 = v90;
      *(void *)a2 = v84;
      *(void *)(a2 + 8) = v76;
      *(unsigned char *)(a2 + 16) = v60;
      *(void *)(a2 + 24) = v85;
      *(unsigned char *)(a2 + 32) = v83;
      *(void *)(a2 + 40) = v37;
      *(void *)(a2 + 48) = v39;
      *(void *)(a2 + 56) = v41;
      *(void *)(a2 + 64) = v43;
      *(unsigned char *)(a2 + 72) = 0;
      *(void *)(a2 + 80) = v61;
      *(void *)(a2 + 88) = v63;
      *(unsigned char *)(a2 + 96) = v71;
      *(void *)(a2 + 104) = v65;
      *(_WORD *)(a2 + 112) = 256;
      *(void *)(a2 + 120) = KeyPath;
      *(void *)(a2 + 128) = v69;
      *(unsigned char *)(a2 + 136) = (_BYTE)v95;
      *(void *)(a2 + 144) = v77;
      *(void *)(a2 + 152) = v78;
      *(void *)(a2 + 160) = v79;
      *(void *)(a2 + 168) = v80;
      *(unsigned char *)(a2 + 176) = v74;
      sub_10002783C(v75, v76, v60);
      swift_bridgeObjectRetain();
      char v81 = v96;
      sub_10002783C(v61, v63, v96);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      sub_100026F18(v61, v63, v81);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      sub_100026F18(v75, v76, v97);
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_10003FBF0(v96, (uint64_t)v91, (uint64_t (*)(void))type metadata accessor for ProofreadingView);
  }
  uint64_t v53 = *(void *)(v49 + 24);
  uint64_t v109 = *(void *)(v49 + 16);
  uint64_t v110 = v53;
  State.wrappedValue.getter();
  uint64_t v54 = v98;
  swift_getKeyPath();
  uint64_t v109 = v54;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (*(unsigned char *)(v54 + 88) == 1) {
    goto LABEL_22;
  }
  swift_getKeyPath();
  uint64_t v109 = v54;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  swift_retain();
  unint64_t v55 = swift_bridgeObjectRetain();
  char v56 = sub_1001737E4(v55, v54);
  swift_bridgeObjectRelease();
  uint64_t result = swift_release_n();
  if (v56)
  {
    id v58 = [v56 suggestionShortDescription];

    if (v58)
    {
      uint64_t v50 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v52 = v59;
    }
    else
    {
      uint64_t v50 = 0;
      unint64_t v52 = 0xE000000000000000;
    }
    goto LABEL_17;
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_10003B594@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v78 = a2;
  uint64_t v96 = a3;
  uint64_t v92 = type metadata accessor for IconOnlyLabelStyle();
  uint64_t v90 = *(void *)(v92 - 8);
  __chkstk_darwin(v92);
  unint64_t v89 = (char *)&v75 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = sub_1000063C0(&qword_1001FC840);
  __chkstk_darwin(v87);
  uint64_t v88 = (uint64_t)&v75 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000063C0(&qword_1001FC848);
  uint64_t v94 = *(void *)(v6 - 8);
  uint64_t v95 = v6;
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v93 = (char *)&v75 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v91 = (char *)&v75 - v9;
  uint64_t v77 = type metadata accessor for PrimaryButtonStyle(0);
  __chkstk_darwin(v77);
  unint64_t v11 = (char *)&v75 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ProofreadingView();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  __chkstk_darwin(v12 - 8);
  uint64_t v15 = sub_1000063C0(&qword_1001FC850);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v75 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1000063C0(&qword_1001FC858);
  __chkstk_darwin(v19);
  char v21 = (char *)&v75 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = sub_1000063C0(&qword_1001FC860);
  uint64_t v79 = *(void *)(v81 - 8);
  __chkstk_darwin(v81);
  uint64_t v75 = (char *)&v75 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = sub_1000063C0(&qword_1001FC868);
  uint64_t v83 = *(void *)(v84 - 8);
  __chkstk_darwin(v84);
  uint64_t v80 = (char *)&v75 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_1000063C0(&qword_1001FC870);
  uint64_t v25 = __chkstk_darwin(v24 - 8);
  uint64_t v86 = (uint64_t)&v75 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v82 = (char *)&v75 - v28;
  __chkstk_darwin(v27);
  uint64_t v85 = (uint64_t)&v75 - v29;
  sub_10003FBF0(a1, (uint64_t)&v75 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for ProofreadingView);
  unint64_t v30 = (*(unsigned __int8 *)(v13 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v31 = swift_allocObject();
  sub_1000366B4((uint64_t)&v75 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v31 + v30);
  sub_1000063C0(&qword_1001FBBC0);
  sub_100027F2C((unint64_t *)&unk_1001FD5A0, &qword_1001FBBC0);
  Button.init(action:label:)();
  GeometryProxy.size.getter();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v21, v18, v15);
  uint64_t v78 = v19;
  int v32 = &v21[*(int *)(v19 + 36)];
  long long v33 = v103;
  *(_OWORD *)int v32 = v102;
  *((_OWORD *)v32 + 1) = v33;
  *((_OWORD *)v32 + 2) = v104;
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  uint64_t v76 = a1;
  uint64_t v34 = *(ValueMetadata **)(a1 + 24);
  uint64_t v97 = *(void *)(a1 + 16);
  uint64_t v98 = v34;
  sub_1000063C0(&qword_1001FB850);
  State.wrappedValue.getter();
  uint64_t v35 = v101;
  swift_getKeyPath();
  uint64_t v97 = v35;
  sub_100040000((unint64_t *)&qword_1001FBD30, (void (*)(uint64_t))type metadata accessor for ProofreadingModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  char v36 = *(unsigned char *)(v35 + OBJC_IVAR____TtC21WritingToolsUIService17ProofreadingModel__showingOriginal);
  swift_release();
  if (qword_1001FAD08 != -1) {
    swift_once();
  }
  uint64_t v37 = qword_100212970;
  uint64_t KeyPath = swift_getKeyPath();
  *unint64_t v11 = 0;
  v11[1] = v36;
  *((void *)v11 + 1) = v37;
  uint64_t v39 = v77;
  uint64_t v40 = (uint64_t *)&v11[*(int *)(v77 + 28)];
  uint64_t *v40 = swift_getKeyPath();
  sub_1000063C0((uint64_t *)&unk_1001FB730);
  swift_storeEnumTagMultiPayload();
  uint64_t v41 = &v11[*(int *)(v39 + 32)];
  *(void *)uint64_t v41 = KeyPath;
  v41[8] = 0;
  unint64_t v42 = sub_10003FE58();
  uint64_t v43 = sub_100040000(&qword_1001FC888, (void (*)(uint64_t))type metadata accessor for PrimaryButtonStyle);
  unint64_t v44 = v75;
  uint64_t v45 = v78;
  View.buttonStyle<A>(_:)();
  sub_100040048((uint64_t)v11, type metadata accessor for PrimaryButtonStyle);
  sub_10002784C((uint64_t)v21, &qword_1001FC858);
  uint64_t v97 = v45;
  uint64_t v98 = (ValueMetadata *)v39;
  unint64_t v99 = v42;
  unint64_t v100 = v43;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  unint64_t v47 = sub_10003FEF8();
  id v48 = v80;
  uint64_t v49 = v81;
  View.labelStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v79 + 8))(v44, v49);
  uint64_t v50 = v76;
  unint64_t v51 = *(ValueMetadata **)(v76 + 24);
  uint64_t v97 = *(void *)(v76 + 16);
  uint64_t v98 = v51;
  State.wrappedValue.getter();
  uint64_t v52 = v101;
  swift_getKeyPath();
  uint64_t v97 = v52;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_release();
  uint64_t v53 = v49;
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v54 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v56 = v55;
  LOBYTE(v49) = v57 & 1;
  uint64_t v97 = v53;
  uint64_t v98 = &type metadata for HorizontalIconTitleLabelStyle;
  unint64_t v99 = OpaqueTypeConformance2;
  unint64_t v100 = v47;
  swift_getOpaqueTypeConformance2();
  uint64_t v58 = (uint64_t)v82;
  uint64_t v59 = v84;
  View.accessibilityLabel(_:)();
  sub_100026F18(v54, v56, v49);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v83 + 8))(v48, v59);
  uint64_t v60 = v85;
  sub_100026FD0(v58, v85, &qword_1001FC870);
  uint64_t v61 = v88;
  sub_10003C3E0(v50, v88);
  uint64_t v62 = v89;
  IconOnlyLabelStyle.init()();
  sub_10003FF4C();
  sub_100040000(&qword_1001FDA20, (void (*)(uint64_t))&type metadata accessor for IconOnlyLabelStyle);
  uint64_t v63 = v92;
  uint64_t v64 = v93;
  View.labelStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v90 + 8))(v62, v63);
  sub_10002784C(v61, &qword_1001FC840);
  uint64_t v66 = v94;
  uint64_t v65 = v95;
  char v67 = v91;
  (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v91, v64, v95);
  uint64_t v68 = v86;
  sub_100008DD4(v60, v86, &qword_1001FC870);
  uint64_t v69 = *(void (**)(char *, char *, uint64_t))(v66 + 16);
  v69(v64, v67, v65);
  uint64_t v70 = v96;
  sub_100008DD4(v68, v96, &qword_1001FC870);
  uint64_t v71 = sub_1000063C0(&qword_1001FC8A8);
  uint64_t v72 = v70 + *(int *)(v71 + 48);
  *(void *)uint64_t v72 = 0x4024000000000000;
  *(unsigned char *)(v72 + 8) = 0;
  v69((char *)(v70 + *(int *)(v71 + 64)), v64, v65);
  int v73 = *(void (**)(char *, uint64_t))(v66 + 8);
  v73(v67, v65);
  sub_10002784C(v60, &qword_1001FC870);
  v73(v64, v65);
  return sub_10002784C(v68, &qword_1001FC870);
}

uint64_t sub_10003C1F0()
{
  return swift_release();
}

uint64_t sub_10003C374()
{
  return Label.init(title:icon:)();
}

uint64_t sub_10003C3C8@<X0>(uint64_t a1@<X8>)
{
  return sub_10003DAF8(a1);
}

uint64_t sub_10003C3E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v83 = a1;
  uint64_t v86 = a2;
  uint64_t v3 = type metadata accessor for UnevenCornerPrimaryButtonStyle(0);
  __chkstk_darwin(v3);
  uint64_t v5 = (_WORD *)((char *)&v64 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = type metadata accessor for ProofreadingView();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6 - 8);
  uint64_t v9 = sub_1000063C0(&qword_1001FC850);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = sub_1000063C0(&qword_1001FC8B0);
  uint64_t v89 = *(void *)(v87 - 8);
  __chkstk_darwin(v87);
  uint64_t v64 = (char *)&v64 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000063C0(&qword_1001FC8B8);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  uint64_t v85 = (uint64_t)&v64 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v84 = (char *)&v64 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v75 = (char *)&v64 - v20;
  __chkstk_darwin(v19);
  uint64_t v88 = (uint64_t)&v64 - v21;
  uint64_t v82 = type metadata accessor for ProofreadingView;
  uint64_t v78 = (uint64_t)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003FBF0(a1, v78, (uint64_t (*)(void))type metadata accessor for ProofreadingView);
  uint64_t v22 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v80 = ((v22 + 16) & ~v22) + v8;
  uint64_t v81 = (v22 + 16) & ~v22;
  uint64_t v23 = v81;
  uint64_t v79 = v22 | 7;
  uint64_t v24 = swift_allocObject();
  sub_1000366B4((uint64_t)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v24 + v23);
  uint64_t v77 = sub_1000063C0(&qword_1001FBBC0);
  uint64_t v76 = sub_100027F2C((unint64_t *)&unk_1001FD5A0, &qword_1001FBBC0);
  Button.init(action:label:)();
  uint64_t KeyPath = swift_getKeyPath();
  *uint64_t v5 = 1;
  uint64_t v26 = (uint64_t *)((char *)v5 + *(int *)(v3 + 24));
  *uint64_t v26 = swift_getKeyPath();
  uint64_t v74 = sub_1000063C0((uint64_t *)&unk_1001FB730);
  swift_storeEnumTagMultiPayload();
  uint64_t v27 = v3;
  uint64_t v28 = (char *)v5 + *(int *)(v3 + 28);
  *(void *)uint64_t v28 = KeyPath;
  v28[8] = 0;
  uint64_t v29 = sub_100027F2C(&qword_1001FC880, &qword_1001FC850);
  uint64_t v30 = sub_100040000(&qword_1001FC8C0, (void (*)(uint64_t))type metadata accessor for UnevenCornerPrimaryButtonStyle);
  uint64_t v65 = v3;
  uint64_t v31 = v29;
  uint64_t v66 = v29;
  uint64_t v32 = v30;
  uint64_t v67 = v30;
  uint64_t v68 = v12;
  View.buttonStyle<A>(_:)();
  int v73 = type metadata accessor for UnevenCornerPrimaryButtonStyle;
  sub_100040048((uint64_t)v5, type metadata accessor for UnevenCornerPrimaryButtonStyle);
  long long v33 = *(void (**)(char *, uint64_t))(v10 + 8);
  uint64_t v71 = v10 + 8;
  uint64_t v72 = v33;
  uint64_t v34 = v9;
  v33(v12, v9);
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v35 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v37 = v36;
  uint64_t v90 = v9;
  uint64_t v91 = v27;
  LOBYTE(v9) = v38 & 1;
  uint64_t v92 = v31;
  uint64_t v93 = v32;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v39 = (uint64_t)v75;
  uint64_t v40 = v87;
  uint64_t v41 = v64;
  View.accessibilityLabel(_:)();
  sub_100026F18(v35, v37, v9);
  swift_bridgeObjectRelease();
  unint64_t v42 = *(void (**)(char *, uint64_t))(v89 + 8);
  v89 += 8;
  uint64_t v69 = v42;
  uint64_t v43 = v41;
  v42(v41, v40);
  uint64_t v44 = v39;
  sub_100026FD0(v39, v88, &qword_1001FC8B8);
  uint64_t v45 = v78;
  sub_10003FBF0(v83, v78, (uint64_t (*)(void))v82);
  uint64_t v46 = swift_allocObject();
  sub_1000366B4(v45, v46 + v81);
  unint64_t v47 = v68;
  Button.init(action:label:)();
  uint64_t v48 = swift_getKeyPath();
  *uint64_t v5 = 256;
  uint64_t v49 = v65;
  uint64_t v50 = (uint64_t *)((char *)v5 + *(int *)(v65 + 24));
  *uint64_t v50 = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  unint64_t v51 = (char *)v5 + *(int *)(v49 + 28);
  *(void *)unint64_t v51 = v48;
  v51[8] = 0;
  View.buttonStyle<A>(_:)();
  sub_100040048((uint64_t)v5, v73);
  v72(v47, v34);
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v52 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v54 = v53;
  LOBYTE(v34) = v55 & 1;
  uint64_t v56 = (uint64_t)v84;
  uint64_t v57 = v87;
  View.accessibilityLabel(_:)();
  sub_100026F18(v52, v54, v34);
  swift_bridgeObjectRelease();
  v69(v43, v57);
  sub_100026FD0(v56, v44, &qword_1001FC8B8);
  uint64_t v58 = v88;
  sub_100008DD4(v88, v56, &qword_1001FC8B8);
  uint64_t v59 = v85;
  sub_100008DD4(v44, v85, &qword_1001FC8B8);
  uint64_t v60 = v86;
  sub_100008DD4(v56, v86, &qword_1001FC8B8);
  uint64_t v61 = sub_1000063C0(&qword_1001FC8C8);
  uint64_t v62 = v60 + *(int *)(v61 + 48);
  *(void *)uint64_t v62 = 0x3FF0000000000000;
  *(unsigned char *)(v62 + 8) = 0;
  sub_100008DD4(v59, v60 + *(int *)(v61 + 64), &qword_1001FC8B8);
  sub_10002784C(v44, &qword_1001FC8B8);
  sub_10002784C(v58, &qword_1001FC8B8);
  sub_10002784C(v59, &qword_1001FC8B8);
  return sub_10002784C(v56, &qword_1001FC8B8);
}

uint64_t sub_10003CCA4()
{
  return sub_10003CD4C();
}

uint64_t sub_10003CCC4(uint64_t a1, void (*a2)(uint64_t))
{
  sub_1000063C0(&qword_1001FB850);
  uint64_t v3 = State.wrappedValue.getter();
  a2(v3);
  return swift_release();
}

uint64_t sub_10003CD30()
{
  return sub_10003CD4C();
}

uint64_t sub_10003CD4C()
{
  LocalizedStringKey.init(stringLiteral:)();

  return Label<>.init(_:systemImage:)();
}

uint64_t sub_10003CDA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v20 = a2;
  uint64_t v19 = sub_1000063C0(&qword_1001FC6A8);
  __chkstk_darwin(v19);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1000063C0(&qword_1001FC6B0);
  uint64_t v5 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ToolbarItemPlacement();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1000063C0((uint64_t *)&unk_1001FDDE0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  static ToolbarItemPlacement.cancellationAction.getter();
  uint64_t v22 = a1;
  sub_1000063C0(&qword_1001FC6B8);
  sub_100027F2C((unint64_t *)&unk_1001FDDF0, &qword_1001FC6B8);
  ToolbarItem<>.init(placement:content:)();
  static ToolbarItemPlacement.confirmationAction.getter();
  uint64_t v21 = a1;
  sub_1000063C0(&qword_1001FC6C0);
  sub_100040364(&qword_1001FC6C8, &qword_1001FC6C0, (void (*)(void))sub_10003F498);
  ToolbarItem<>.init(placement:content:)();
  uint64_t v13 = &v4[*(int *)(v19 + 48)];
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v4, v12, v9);
  uint64_t v14 = v13;
  uint64_t v15 = v18;
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v14, v7, v18);
  TupleToolbarContent.init(_:)();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v15);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_10003D0E8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ProofreadingView();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2 - 8);
  sub_10003FBF0(a1, (uint64_t)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for ProofreadingView);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = swift_allocObject();
  sub_1000366B4((uint64_t)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v6 + v5);
  return Button.init(action:label:)();
}

uint64_t sub_10003D228(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for NavigationPath();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ProofreadingView();
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(v1 + 24);
  uint64_t v20 = *(void *)(v1 + 16);
  uint64_t v21 = v11;
  sub_1000063C0(&qword_1001FB850);
  State.wrappedValue.getter();
  sub_10003FBF0(v1, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ProofreadingView);
  if (a1)
  {
    uint64_t v12 = *((void *)v10 + 3);
    uint64_t v20 = *((void *)v10 + 2);
    uint64_t v21 = v12;
    State.wrappedValue.getter();
    uint64_t v13 = v22;
    swift_getKeyPath();
    uint64_t v20 = v13;
    sub_100040000((unint64_t *)&qword_1001FBD30, (void (*)(uint64_t))type metadata accessor for ProofreadingModel);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    char v14 = *(unsigned char *)(v13 + OBJC_IVAR____TtC21WritingToolsUIService17ProofreadingModel__showingOriginal);
    swift_release();
    sub_100040048((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ProofreadingView);
    sub_10016A09C((v14 & 1) == 0, 0, 0);
    swift_release();
  }
  else
  {
    sub_100040048((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ProofreadingView);
    sub_10016A09C(0, 0, 0);
    swift_release();
    sub_1000063C0(&qword_1001FB438);
    Binding.wrappedValue.getter();
    uint64_t v15 = NavigationPath.count.getter();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    if (v15 >= 1)
    {
      Binding.wrappedValue.getter();
      NavigationPath.removeLast(_:)(1);
      return Binding.wrappedValue.setter();
    }
  }
  uint64_t v17 = *(void *)(v2 + 24);
  uint64_t v20 = *(void *)(v2 + 16);
  uint64_t v21 = v17;
  State.wrappedValue.getter();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  uint64_t result = swift_release();
  if (Strong)
  {
    [Strong endWritingTools];
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_10003D56C@<X0>(uint64_t a1@<X8>)
{
  return sub_10003DAF8(a1);
}

uint64_t sub_10003D580@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v42 = a2;
  uint64_t v3 = type metadata accessor for AccessibilityTraits();
  uint64_t v40 = *(void *)(v3 - 8);
  uint64_t v41 = v3;
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ProofreadingView();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6 - 8);
  uint64_t v37 = sub_1000063C0(&qword_1001FC6B8);
  uint64_t v9 = *(void *)(v37 - 8);
  __chkstk_darwin(v37);
  uint64_t v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_1000063C0(&qword_1001FC6D0);
  __chkstk_darwin(v36);
  uint64_t v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_1000063C0(&qword_1001FC6C0);
  uint64_t v14 = __chkstk_darwin(v39);
  uint64_t v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  char v38 = (char *)&v35 - v17;
  sub_10003FBF0(a1, (uint64_t)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for ProofreadingView);
  unint64_t v18 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v19 = swift_allocObject();
  sub_1000366B4((uint64_t)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v19 + v18);
  Button.init(action:label:)();
  uint64_t v20 = *(void *)(a1 + 24);
  uint64_t v43 = *(void *)(a1 + 16);
  uint64_t v44 = v20;
  sub_1000063C0(&qword_1001FB850);
  State.wrappedValue.getter();
  uint64_t v21 = v45;
  swift_getKeyPath();
  uint64_t v43 = v21;
  sub_100040000((unint64_t *)&qword_1001FD2A0, (void (*)(uint64_t))type metadata accessor for ToolModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  char v22 = *(unsigned char *)(v21 + 88);
  swift_release();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v24 = swift_allocObject();
  *(unsigned char *)(v24 + 16) = v22;
  uint64_t v25 = v37;
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v13, v11, v37);
  uint64_t v26 = (uint64_t *)&v13[*(int *)(v36 + 36)];
  *uint64_t v26 = KeyPath;
  v26[1] = (uint64_t)sub_100026D50;
  void v26[2] = v24;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v25);
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v27 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v29 = v28;
  LOBYTE(v8) = v30 & 1;
  sub_10003F498();
  View.accessibilityLabel(_:)();
  sub_100026F18(v27, v29, v8);
  swift_bridgeObjectRelease();
  sub_10002784C((uint64_t)v13, &qword_1001FC6D0);
  static AccessibilityTraits.isSelected.getter();
  uint64_t v31 = (uint64_t)v38;
  ModifiedContent<>.accessibilityRemoveTraits(_:)();
  uint64_t v32 = v41;
  long long v33 = *(void (**)(char *, uint64_t))(v40 + 8);
  v33(v5, v41);
  sub_10002784C((uint64_t)v16, &qword_1001FC6C0);
  static AccessibilityTraits.isButton.getter();
  ModifiedContent<>.accessibilityAddTraits(_:)();
  v33(v5, v32);
  return sub_10002784C(v31, &qword_1001FC6C0);
}

uint64_t sub_10003DAE8@<X0>(uint64_t a1@<X8>)
{
  return sub_10003DAF8(a1);
}

uint64_t sub_10003DAF8@<X0>(uint64_t a1@<X8>)
{
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t result = Text.init(_:tableName:bundle:comment:)();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_10003DB58(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  int v3 = *a2;
  char v4 = *(unsigned char *)(a3 + 8);
  uint64_t v5 = swift_retain();
  uint64_t v6 = sub_100020A44(v5, v4);
  swift_release();
  swift_getKeyPath();
  sub_100040000((unint64_t *)&qword_1001FAE20, (void (*)(uint64_t))type metadata accessor for CommonUIManager);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  int v7 = *(unsigned __int8 *)(v6 + 81);
  uint64_t result = swift_release();
  if (v3 != v7)
  {
    uint64_t v9 = swift_retain();
    sub_100020A44(v9, v4);
    swift_release();
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_10003DCEC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(a1 - 8);
  sub_10003FBF0(v2, (uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for ProofreadingView);
  unint64_t v6 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = swift_allocObject();
  uint64_t result = sub_1000366B4((uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v7 + v6);
  *a2 = sub_100036718;
  a2[1] = v7;
  return result;
}

void *initializeBufferWithCopyOfBuffer for ProofreadingView(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    void *v3 = *a2;
    int v3 = (void *)(v18 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    char v5 = *((unsigned char *)a2 + 8);
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = v5;
    uint64_t v6 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v6;
    uint64_t v8 = (void *)a2[4];
    uint64_t v7 = a2[5];
    *(void *)(a1 + 32) = v8;
    *(void *)(a1 + 40) = v7;
    uint64_t v9 = *(int *)(a3 + 28);
    uint64_t v10 = (void *)(a1 + v9);
    uint64_t v11 = (uint64_t)a2 + v9;
    uint64_t v12 = *(uint64_t *)((char *)a2 + v9 + 8);
    void *v10 = *(uint64_t *)((char *)a2 + v9);
    v10[1] = v12;
    swift_retain();
    swift_retain();
    swift_retain();
    id v13 = v8;
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v14 = *(int *)(sub_1000063C0(&qword_1001FB438) + 32);
    uint64_t v15 = (char *)v10 + v14;
    uint64_t v16 = v11 + v14;
    uint64_t v17 = type metadata accessor for NavigationPath();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
  }
  return v3;
}

uint64_t destroy for ProofreadingView(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  swift_release();
  swift_release();
  uint64_t v5 = v4 + *(int *)(sub_1000063C0(&qword_1001FB438) + 32);
  uint64_t v6 = type metadata accessor for NavigationPath();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t initializeWithCopy for ProofreadingView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v4 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v7 = *(void **)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v6;
  uint64_t v8 = *(int *)(a3 + 28);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = a2 + v8;
  uint64_t v11 = *(void *)(a2 + v8 + 8);
  *uint64_t v9 = *(void *)(a2 + v8);
  v9[1] = v11;
  swift_retain();
  swift_retain();
  swift_retain();
  id v12 = v7;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v13 = *(int *)(sub_1000063C0(&qword_1001FB438) + 32);
  uint64_t v14 = (char *)v9 + v13;
  uint64_t v15 = v10 + v13;
  uint64_t v16 = type metadata accessor for NavigationPath();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  return a1;
}

uint64_t assignWithCopy for ProofreadingView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v6;
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  uint64_t v7 = *(void **)(a2 + 32);
  uint64_t v8 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = v7;
  id v9 = v7;

  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  uint64_t v10 = *(int *)(a3 + 28);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  *(void *)(a1 + v10) = *(void *)(a2 + v10);
  swift_retain();
  swift_release();
  *(void *)(v11 + 8) = *(void *)(v12 + 8);
  swift_retain();
  swift_release();
  uint64_t v13 = *(int *)(sub_1000063C0(&qword_1001FB438) + 32);
  uint64_t v14 = v11 + v13;
  uint64_t v15 = v12 + v13;
  uint64_t v16 = type metadata accessor for NavigationPath();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 24))(v14, v15, v16);
  return a1;
}

uint64_t initializeWithTake for ProofreadingView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  uint64_t v5 = *(int *)(a3 + 28);
  char v6 = (void *)(a1 + v5);
  uint64_t v7 = a2 + v5;
  uint64_t v8 = *(void *)(a2 + v5 + 8);
  void *v6 = *(void *)(a2 + v5);
  v6[1] = v8;
  uint64_t v9 = *(int *)(sub_1000063C0(&qword_1001FB438) + 32);
  uint64_t v10 = (char *)v6 + v9;
  uint64_t v11 = v7 + v9;
  uint64_t v12 = type metadata accessor for NavigationPath();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for ProofreadingView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v6;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  uint64_t v7 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);

  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_release();
  uint64_t v8 = *(int *)(a3 + 28);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = (void *)(a2 + v8);
  *(void *)(a1 + v8) = *v10;
  swift_release();
  *(void *)(v9 + 8) = v10[1];
  swift_release();
  uint64_t v11 = *(int *)(sub_1000063C0(&qword_1001FB438) + 32);
  uint64_t v12 = v9 + v11;
  uint64_t v13 = (char *)v10 + v11;
  uint64_t v14 = type metadata accessor for NavigationPath();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for ProofreadingView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10003E3FC);
}

uint64_t sub_10003E3FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1000063C0(&qword_1001FB438);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for ProofreadingView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10003E4C4);
}

uint64_t sub_10003E4C4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 16) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1000063C0(&qword_1001FB438);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_10003E570()
{
  sub_10003E614();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_10003E614()
{
  if (!qword_100201800)
  {
    type metadata accessor for NavigationPath();
    unint64_t v0 = type metadata accessor for Binding();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100201800);
    }
  }
}

uint64_t sub_10003E66C()
{
  return sub_100027F2C(&qword_1001FC5A0, &qword_1001FC5A8);
}

ValueMetadata *type metadata accessor for RecommendedChangesViewModifier()
{
  return &type metadata for RecommendedChangesViewModifier;
}

uint64_t sub_10003E6B8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10003E6D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v34 = type metadata accessor for AccessibilityTraits();
  uint64_t v2 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  unint64_t v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000063C0(&qword_1001FC5B0);
  uint64_t v6 = v5 - 8;
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000063C0(&qword_1001FC5B8);
  uint64_t v10 = v9 - 8;
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000063C0(&qword_1001FC5C0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = static Font.subheadline.getter();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v18 = sub_1000063C0(&qword_1001FC5C8);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v8, v32, v18);
  uint64_t v19 = (uint64_t *)&v8[*(int *)(v6 + 44)];
  *uint64_t v19 = KeyPath;
  v19[1] = v16;
  LOBYTE(v16) = static Edge.Set.leading.getter();
  EdgeInsets.init(_all:)();
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  sub_100008DD4((uint64_t)v8, (uint64_t)v12, &qword_1001FC5B0);
  uint64_t v28 = &v12[*(int *)(v10 + 44)];
  *uint64_t v28 = v16;
  *((void *)v28 + 1) = v21;
  *((void *)v28 + 2) = v23;
  *((void *)v28 + 3) = v25;
  *((void *)v28 + 4) = v27;
  v28[40] = 0;
  sub_10002784C((uint64_t)v8, &qword_1001FC5B0);
  if (qword_1001FAD38 != -1) {
    swift_once();
  }
  uint64_t v29 = qword_1002129E0;
  sub_100008DD4((uint64_t)v12, (uint64_t)v15, &qword_1001FC5B8);
  *(void *)&v15[*(int *)(v13 + 36)] = v29;
  swift_retain();
  sub_10002784C((uint64_t)v12, &qword_1001FC5B8);
  static AccessibilityTraits.isHeader.getter();
  sub_10003EEB0();
  View.accessibility(addTraits:)();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v34);
  return sub_10002784C((uint64_t)v15, &qword_1001FC5C0);
}

uint64_t sub_10003EA0C()
{
  return static ViewModifier._viewListCount(inputs:body:)();
}

void *sub_10003EA2C(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_17;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; uint64_t v2 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v3 = _swiftEmptyArrayStorage;
    uint64_t v4 = 4;
    while (1)
    {
      id v5 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(a1 + 8 * v4);
      uint64_t v6 = v5;
      uint64_t v7 = v4 - 3;
      if (__OFADD__(v4 - 4, 1)) {
        break;
      }
      id v8 = [v5 suggestionDescription];
      if (v8)
      {
        uint64_t v9 = v8;
        uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v12 = v11;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v3 = sub_1001435CC(0, v3[2] + 1, 1, v3);
        }
        unint64_t v14 = v3[2];
        unint64_t v13 = v3[3];
        if (v14 >= v13 >> 1) {
          uint64_t v3 = sub_1001435CC((void *)(v13 > 1), v14 + 1, 1, v3);
        }
        v3[2] = v14 + 1;
        uint64_t v15 = &v3[2 * v14];
        v15[4] = v10;
        v15[5] = v12;
      }
      else
      {
      }
      ++v4;
      if (v7 == v2) {
        goto LABEL_19;
      }
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
  }
  uint64_t v3 = _swiftEmptyArrayStorage;
LABEL_19:
  swift_bridgeObjectRelease();
  return v3;
}

void *sub_10003EBC4(uint64_t a1)
{
  sub_100129188(0, 0, 0);
  uint64_t v2 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v2)
  {
    uint64_t v3 = 0;
    uint64_t v4 = (void **)(a1 + 40);
    do
    {
      ++v3;
      uint64_t v6 = (uint64_t)*(v4 - 1);
      id v5 = *v4;
      swift_bridgeObjectRetain();
      uint64_t v15 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v16 = v7;
      v8._countAndFlagsBits = 8250;
      v8._object = (void *)0xE200000000000000;
      String.append(_:)(v8);
      v9._countAndFlagsBits = v6;
      v9._object = v5;
      String.append(_:)(v9);
      v10._countAndFlagsBits = 10;
      v10._object = (void *)0xE100000000000000;
      String.append(_:)(v10);
      swift_bridgeObjectRelease();
      unint64_t v12 = _swiftEmptyArrayStorage[2];
      unint64_t v11 = _swiftEmptyArrayStorage[3];
      if (v12 >= v11 >> 1) {
        sub_100129188(v11 > 1, v12 + 1, 1);
      }
      v4 += 2;
      _swiftEmptyArrayStorage[2] = v12 + 1;
      unint64_t v13 = &_swiftEmptyArrayStorage[2 * v12];
      v13[4] = v15;
      v13[5] = v16;
    }
    while (v2 != v3);
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

void sub_10003ED1C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62) {
    goto LABEL_20;
  }
  uint64_t v3 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v3)
  {
    while (1)
    {
      if ((a2 & 0xC000000000000001) != 0)
      {
        id v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (!*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return;
        }
        id v4 = *(id *)(a2 + 32);
      }
      id v5 = v4;
      sub_10003FDEC();
      char v6 = static NSObject.== infix(_:_:)();

      if ((v6 & 1) == 0)
      {
        for (uint64_t i = 0; ; ++i)
        {
          unint64_t v11 = i + 1;
          if (__OFADD__(i, 1)) {
            break;
          }
          if (v11 == v3) {
            return;
          }
          if ((a2 & 0xC000000000000001) != 0)
          {
            id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            if ((v11 & 0x8000000000000000) != 0) {
              goto LABEL_18;
            }
            if (v11 >= *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_19;
            }
            id v8 = *(id *)(a2 + 32 + 8 * v11);
          }
          Swift::String v9 = v8;
          char v10 = static NSObject.== infix(_:_:)();

          if (v10) {
            return;
          }
        }
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        swift_bridgeObjectRetain();
        uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v3) {
          continue;
        }
      }
      return;
    }
  }
}

unint64_t sub_10003EEB0()
{
  unint64_t result = qword_1001FC5D0;
  if (!qword_1001FC5D0)
  {
    sub_100006C14(&qword_1001FC5C0);
    sub_10003F6C4(&qword_1001FC5D8, &qword_1001FC5B8, (void (*)(void))sub_10003EF74);
    sub_100027F2C((unint64_t *)&unk_1001FD920, &qword_100201E60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FC5D0);
  }
  return result;
}

unint64_t sub_10003EF74()
{
  unint64_t result = qword_1001FC5E0;
  if (!qword_1001FC5E0)
  {
    sub_100006C14(&qword_1001FC5B0);
    sub_100027F2C(&qword_1001FC5E8, &qword_1001FC5C8);
    sub_100027F2C((unint64_t *)&unk_1002025D0, &qword_1001FDAC0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FC5E0);
  }
  return result;
}

uint64_t sub_10003F03C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for ProofreadingView() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_100036168(a1, v6, a2);
}

uint64_t sub_10003F0C8(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for ProofreadingView() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_10003DB58(a1, a2, v6);
}

unint64_t sub_10003F148()
{
  unint64_t result = qword_1001FC620;
  if (!qword_1001FC620)
  {
    sub_100006C14(&qword_1001FC608);
    sub_10003F1E8();
    sub_100027F2C(&qword_1001FB5E0, &qword_1001FB5E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FC620);
  }
  return result;
}

unint64_t sub_10003F1E8()
{
  unint64_t result = qword_1001FC628;
  if (!qword_1001FC628)
  {
    sub_100006C14(&qword_1001FC600);
    sub_100006C14(&qword_1001FC5F0);
    sub_100027F2C(&qword_1001FC618, &qword_1001FC5F0);
    swift_getOpaqueTypeConformance2();
    sub_100040000(&qword_1001FB910, (void (*)(uint64_t))type metadata accessor for PreferredContentSizeModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FC628);
  }
  return result;
}

uint64_t sub_10003F2FC()
{
  return sub_10011E540(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

unint64_t sub_10003F31C()
{
  unint64_t result = qword_1001FC680;
  if (!qword_1001FC680)
  {
    sub_100006C14(&qword_1001FC648);
    sub_100006C14(&qword_1001FC638);
    sub_100006C14(&qword_1001FC630);
    sub_100027F2C(&qword_1001FC670, &qword_1001FC630);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_10003F42C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FC680);
  }
  return result;
}

unint64_t sub_10003F42C()
{
  unint64_t result = qword_1001FC688;
  if (!qword_1001FC688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FC688);
  }
  return result;
}

uint64_t sub_10003F480@<X0>(uint64_t a1@<X8>)
{
  return sub_10003CDA0(*(void *)(v1 + 16), a1);
}

uint64_t sub_10003F488()
{
  return sub_10003D0E8(*(void *)(v0 + 16));
}

uint64_t sub_10003F490@<X0>(uint64_t a1@<X8>)
{
  return sub_10003D580(*(void *)(v1 + 16), a1);
}

unint64_t sub_10003F498()
{
  unint64_t result = qword_1001FDE00;
  if (!qword_1001FDE00)
  {
    sub_100006C14(&qword_1001FC6D0);
    sub_100027F2C((unint64_t *)&unk_1001FDDF0, &qword_1001FC6B8);
    sub_100027F2C(&qword_1001FC6D8, &qword_1001FD760);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FDE00);
  }
  return result;
}

uint64_t sub_10003F560()
{
  return sub_10003F594(1);
}

uint64_t sub_10003F570()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_10003F58C()
{
  return sub_10003F594(0);
}

uint64_t sub_10003F594(char a1)
{
  return sub_10003D228(a1);
}

unint64_t sub_10003F600()
{
  unint64_t result = qword_1001FC750;
  if (!qword_1001FC750)
  {
    sub_100006C14(&qword_1001FC740);
    sub_10003F6C4(&qword_1001FC758, &qword_1001FC760, (void (*)(void))sub_10002DED0);
    sub_100027F2C(&qword_1001FC768, &qword_1001FC770);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FC750);
  }
  return result;
}

uint64_t sub_10003F6C4(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100006C14(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10003F744()
{
  return _swift_deallocObject(v0, 17, 7);
}

unint64_t sub_10003F754()
{
  unint64_t result = qword_1001FC790;
  if (!qword_1001FC790)
  {
    sub_100006C14(&qword_1001FC788);
    sub_10003F7D0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FC790);
  }
  return result;
}

unint64_t sub_10003F7D0()
{
  unint64_t result = qword_1001FC798;
  if (!qword_1001FC798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FC798);
  }
  return result;
}

double sub_10003F824(_OWORD *a1)
{
  double result = 0.0;
  a1[10] = 0u;
  a1[11] = 0u;
  a1[8] = 0u;
  a1[9] = 0u;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

uint64_t sub_10003F844(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20)
{
  if (a14)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v21 = a3;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1000272F8(a17, a18, a19, a20);
    swift_retain();
    return swift_retain();
  }
  return result;
}

void *sub_10003F95C(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20],
    a1[21],
    a1[22],
    a1[23]);
  return a1;
}

uint64_t sub_10003F9D0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20)
{
  uint64_t result = a14;
  if (a14)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100024DB4(a17, a18, a19, a20);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_10003FB08(uint64_t a1)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v8 = *(void *)(a1 + 112);
  uint64_t v3 = *(void *)(a1 + 120);
  uint64_t v7 = *(void *)(a1 + 128);
  char v4 = *(unsigned char *)(a1 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v5 = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000272F8(v8, v3, v7, v4);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_10003FBF0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10003FC58(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 80);
  uint64_t v3 = *(void *)(a1 + 88);
  char v4 = *(unsigned char *)(a1 + 96);
  sub_10002783C(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
  swift_bridgeObjectRetain();
  sub_10002783C(v2, v3, v4);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_10003FCE8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 80);
  uint64_t v3 = *(void *)(a1 + 88);
  char v4 = *(unsigned char *)(a1 + 96);
  sub_100026F18(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
  swift_bridgeObjectRelease();
  sub_100026F18(v2, v3, v4);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return a1;
}

uint64_t sub_10003FD84()
{
  uint64_t v1 = *(void *)(type metadata accessor for ProofreadingView() - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_10003A714(v2);
}

unint64_t sub_10003FDEC()
{
  unint64_t result = qword_100201570;
  if (!qword_100201570)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100201570);
  }
  return result;
}

uint64_t sub_10003FE30()
{
  return sub_1000401FC();
}

unint64_t sub_10003FE58()
{
  unint64_t result = qword_1001FC878;
  if (!qword_1001FC878)
  {
    sub_100006C14(&qword_1001FC858);
    sub_100027F2C(&qword_1001FC880, &qword_1001FC850);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FC878);
  }
  return result;
}

unint64_t sub_10003FEF8()
{
  unint64_t result = qword_100202590;
  if (!qword_100202590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100202590);
  }
  return result;
}

unint64_t sub_10003FF4C()
{
  unint64_t result = qword_1001FC890;
  if (!qword_1001FC890)
  {
    sub_100006C14(&qword_1001FC840);
    sub_100027F2C(&qword_1001FC898, &qword_1001FC8A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FC890);
  }
  return result;
}

uint64_t sub_10003FFE8()
{
  return sub_1000401FC();
}

uint64_t sub_100040000(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100040048(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1000400AC()
{
  uint64_t v1 = (int *)(type metadata accessor for ProofreadingView() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  uint64_t v7 = v6 + v1[9];
  swift_release();
  swift_release();
  uint64_t v8 = v7 + *(int *)(sub_1000063C0(&qword_1001FB438) + 32);
  uint64_t v9 = type metadata accessor for NavigationPath();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);

  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_1000401E4()
{
  return sub_1000401FC();
}

uint64_t sub_1000401FC()
{
  return withAnimation<A>(_:_:)();
}

uint64_t sub_10004028C()
{
  return sub_10003CCC4(*(void *)(v0 + 16), (void (*)(uint64_t))sub_10016AE2C);
}

uint64_t sub_1000402BC()
{
  return sub_10003CCC4(*(void *)(v0 + 16), (void (*)(uint64_t))sub_10016A334);
}

uint64_t sub_1000402EC()
{
  return sub_10003C1F0();
}

void sub_100040308()
{
  sub_1001650D0(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_100040328()
{
  return sub_100040364(&qword_1001FC8D0, &qword_1001FC8D8, (void (*)(void))sub_10003EEB0);
}

uint64_t sub_100040364(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100006C14(a2);
    a3();
    sub_100040000(&qword_1001FD8A0, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for OpenEndedAdjustmentViewCoordinator()
{
  return self;
}

void sub_1000404BC()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0
                                               + OBJC_IVAR____TtC21WritingToolsUIService34OpenEndedAdjustmentViewCoordinator_owner
                                               + 24);
  uint64_t v2 = (void *)IntelligenceUI.PromptEntryView.textView.getter();
  id v3 = [v2 text];

  if (v3)
  {
    uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v6 = v5;

    v1(v4, v6);
    swift_bridgeObjectRelease();
    swift_retain();
    swift_retain();
    sub_1000063C0(&qword_1001FC910);
    FocusState.Binding.wrappedValue.getter();
    FocusState.Binding.wrappedValue.setter();
    swift_release();
    swift_release();
    uint64_t v7 = (void *)IntelligenceUI.PromptEntryView.textView.getter();
    NSString v8 = String._bridgeToObjectiveC()();
    [v7 setText:v8];
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100040618(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType = swift_getObjectType();

  return IntelligenceUI.PromptEntryView.Delegate.promptEntryViewTextDidChange(_:)(a1, ObjectType, a3);
}

uint64_t sub_100040668(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType = swift_getObjectType();

  return IntelligenceUI.PromptEntryView.Delegate.promptEntryViewSelectionDidChange(_:)(a1, ObjectType, a3);
}

uint64_t sub_1000406B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType = swift_getObjectType();

  return IntelligenceUI.PromptEntryView.Delegate.promptEntryViewShouldBeginEditing(_:)(a1, ObjectType, a3);
}

uint64_t sub_100040708(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType = swift_getObjectType();

  return IntelligenceUI.PromptEntryView.Delegate.promptEntryViewDidBeginEditing(_:)(a1, ObjectType, a3);
}

uint64_t sub_100040758(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType = swift_getObjectType();

  return IntelligenceUI.PromptEntryView.Delegate.promptEntryViewDidEndEditing(_:)(a1, ObjectType, a3);
}

UIMenu sub_1000407A8()
{
  sub_100040984();
  v0._countAndFlagsBits = 0;
  v0._object = (void *)0xE000000000000000;
  v3.value.super.Class isa = 0;
  v3.is_nil = 0;
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v0, (Swift::String_optional)0, v3, 0, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)_swiftEmptyArrayStorage, v2);
}

uint64_t sub_100040808(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t ObjectType = swift_getObjectType();

  return IntelligenceUI.PromptEntryView.Delegate.promptEntryView(_:customAppearanceFor:resolved:)(a1, a2, a3, ObjectType, a5);
}

uint64_t sub_100040878(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t ObjectType = swift_getObjectType();

  return IntelligenceUI.PromptEntryView.Delegate.promptEntryView(_:didToggleLeadingButtonState:)(a1, a2, ObjectType, a4);
}

uint64_t sub_1000408D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t ObjectType = swift_getObjectType();

  return IntelligenceUI.PromptEntryView.Delegate.promptEntryView(_:insert:)(a1, a2, ObjectType, a4);
}

uint64_t sub_10004092C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t ObjectType = swift_getObjectType();

  return IntelligenceUI.PromptEntryView.Delegate.promptEntryView(_:didTransitionToPonderingState:)(a1, a2, ObjectType, a4);
}

unint64_t sub_100040984()
{
  unint64_t result = qword_100201960;
  if (!qword_100201960)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100201960);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for CommonUIBackgroundPlaceholderView(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  swift_retain();
  return a1;
}

uint64_t destroy for CommonUIBackgroundPlaceholderView()
{
  return swift_release();
}

uint64_t assignWithCopy for CommonUIBackgroundPlaceholderView(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for CommonUIBackgroundPlaceholderView(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)unint64_t result = v2;
  return result;
}

uint64_t assignWithTake for CommonUIBackgroundPlaceholderView(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for CommonUIBackgroundPlaceholderView(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CommonUIBackgroundPlaceholderView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CommonUIBackgroundPlaceholderView()
{
  return &type metadata for CommonUIBackgroundPlaceholderView;
}

void *sub_100040B34()
{
  return &protocol witness table for Never;
}

id sub_100040B40(uint64_t a1, uint64_t a2, char a3)
{
  char v3 = a3 & 1;
  id v4 = [objc_allocWithZone((Class)UIView) init];
  uint64_t v5 = swift_retain();
  sub_100020A44(v5, v3);
  swift_release();
  swift_getKeyPath();
  sub_100040E04();
  id v6 = v4;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  swift_release();

  return v6;
}

id sub_100040C38(uint64_t a1)
{
  return sub_100040B40(a1, *(void *)v1, *(unsigned char *)(v1 + 8));
}

uint64_t sub_100040C54()
{
  return UIViewRepresentable.sizeThatFits(_:uiView:context:)();
}

uint64_t sub_100040C98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_100040E5C();

  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_100040CFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_100040E5C();

  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_100040D60()
{
}

unint64_t sub_100040D8C()
{
  unint64_t result = qword_1001FC918;
  if (!qword_1001FC918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FC918);
  }
  return result;
}

uint64_t sub_100040DE8()
{
  return sub_10011DF14();
}

unint64_t sub_100040E04()
{
  unint64_t result = qword_1001FAE20;
  if (!qword_1001FAE20)
  {
    type metadata accessor for CommonUIManager();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FAE20);
  }
  return result;
}

unint64_t sub_100040E5C()
{
  unint64_t result = qword_1001FC920;
  if (!qword_1001FC920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FC920);
  }
  return result;
}

uint64_t destroy for SynthesizedAnswerView()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SynthesizedAnswerView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SynthesizedAnswerView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  return a1;
}

__n128 initializeWithTake for SynthesizedAnswerView(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for SynthesizedAnswerView(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  return a1;
}

uint64_t getEnumTagSinglePayload for SynthesizedAnswerView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 81)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SynthesizedAnswerView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 80) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 81) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 81) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SynthesizedAnswerView()
{
  return &type metadata for SynthesizedAnswerView;
}

uint64_t sub_1000411F4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100041210@<X0>(long long *a1@<X0>, char *a2@<X8>)
{
  uint64_t v86 = a2;
  uint64_t v3 = type metadata accessor for CircularProgressViewStyle();
  uint64_t v70 = *(void *)(v3 - 8);
  uint64_t v71 = v3;
  __chkstk_darwin(v3);
  uint64_t v69 = (char *)&v64 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000063C0(&qword_1001FC930);
  uint64_t v67 = *(void *)(v5 - 8);
  uint64_t v68 = v5;
  __chkstk_darwin(v5);
  uint64_t v66 = (char *)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000063C0(&qword_1001FC938);
  uint64_t v73 = *(void *)(v7 - 8);
  uint64_t v74 = v7;
  __chkstk_darwin(v7);
  uint64_t v65 = (char *)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000063C0(&qword_1001FC940);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v85 = (uint64_t)&v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v83 = (char *)&v64 - v12;
  uint64_t v13 = sub_1000063C0(&qword_1001FC948);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v84 = (uint64_t)&v64 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v88 = (uint64_t)&v64 - v16;
  uint64_t v17 = sub_1000063C0(&qword_1001FC950);
  uint64_t v81 = *(void *)(v17 - 8);
  uint64_t v82 = v17;
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v80 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v87 = (char *)&v64 - v20;
  long long v21 = a1[3];
  long long v22 = a1[1];
  long long v103 = a1[2];
  long long v104 = v21;
  long long v23 = a1[3];
  long long v105 = a1[4];
  long long v24 = a1[1];
  long long v101 = *a1;
  long long v102 = v24;
  long long v97 = v103;
  long long v98 = v23;
  long long v99 = a1[4];
  char v106 = *((unsigned char *)a1 + 80);
  uint64_t v72 = a1;
  char v100 = *((unsigned char *)a1 + 80);
  long long v95 = v101;
  long long v96 = v22;
  uint64_t v77 = sub_1000063C0(&qword_1001FC958);
  Binding.wrappedValue.getter();
  long long v79 = v89;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v91 = v103;
  long long v92 = v104;
  long long v93 = v105;
  char v94 = v106;
  long long v89 = v101;
  long long v90 = v102;
  Binding.projectedValue.getter();
  long long v25 = v95;
  uint64_t v78 = v95;
  uint64_t v26 = *((void *)&v96 + 1);
  uint64_t v27 = *((void *)&v97 + 1);
  uint64_t v75 = v97;
  uint64_t v76 = v96;
  char v28 = v98;
  uint64_t v29 = *((void *)&v98 + 1);
  long long v30 = v99;
  char v31 = v100;
  swift_getKeyPath();
  long long v95 = v25;
  *(void *)&long long v96 = v76;
  *((void *)&v96 + 1) = v26;
  *(void *)&long long v97 = v75;
  *((void *)&v97 + 1) = v27;
  LOBYTE(v98) = v28;
  *((void *)&v98 + 1) = v29;
  long long v99 = v30;
  char v100 = v31;
  Binding.subscript.getter();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  long long v95 = v79;
  sub_10002DF54();
  uint64_t v32 = v87;
  TextField<>.init<A>(_:text:onEditingChanged:onCommit:)();
  long long v97 = v103;
  long long v98 = v104;
  long long v99 = v105;
  char v100 = v106;
  long long v95 = v101;
  long long v96 = v102;
  Binding.wrappedValue.getter();
  uint64_t v33 = *((void *)&v92 + 1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v34 = *(void *)(v33 + 16);
  uint64_t v35 = swift_bridgeObjectRelease();
  if (v34)
  {
    __chkstk_darwin(v35);
    sub_1000063C0(&qword_1001FC960);
    sub_1000063C0(&qword_1001FC968);
    uint64_t v36 = sub_100006C14(&qword_1001FC970);
    uint64_t v37 = type metadata accessor for IconOnlyLabelStyle();
    uint64_t v38 = sub_100027F2C(&qword_1001FC978, &qword_1001FC970);
    uint64_t v39 = sub_100042B3C(&qword_1001FDA20, (void (*)(uint64_t))&type metadata accessor for IconOnlyLabelStyle);
    *(void *)&long long v95 = v36;
    *((void *)&v95 + 1) = v37;
    *(void *)&long long v96 = v38;
    *((void *)&v96 + 1) = v39;
    swift_getOpaqueTypeConformance2();
    sub_100042AA4();
    uint64_t v40 = v88;
    Menu.init(content:label:)();
    uint64_t v41 = sub_1000063C0(&qword_1001FC998);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v40, 0, 1, v41);
  }
  else
  {
    uint64_t v42 = sub_1000063C0(&qword_1001FC998);
    uint64_t v40 = v88;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v88, 1, 1, v42);
  }
  long long v97 = v103;
  long long v98 = v104;
  long long v99 = v105;
  char v100 = v106;
  long long v95 = v101;
  long long v96 = v102;
  Binding.wrappedValue.getter();
  int v43 = v93;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v44 = v83;
  if (v43 == 1)
  {
    uint64_t v45 = v66;
    ProgressView<>.init<>()();
    uint64_t v46 = v69;
    CircularProgressViewStyle.init()();
    sub_100027F2C(&qword_1001FC9A8, &qword_1001FC930);
    sub_100042B3C(&qword_1001FC9B0, (void (*)(uint64_t))&type metadata accessor for CircularProgressViewStyle);
    unint64_t v47 = v65;
    uint64_t v48 = v68;
    uint64_t v49 = v71;
    View.progressViewStyle<A>(_:)();
    (*(void (**)(char *, uint64_t))(v70 + 8))(v46, v49);
    (*(void (**)(char *, uint64_t))(v67 + 8))(v45, v48);
    uint64_t v51 = v73;
    uint64_t v50 = v74;
    (*(void (**)(char *, char *, uint64_t))(v73 + 32))(v44, v47, v74);
    uint64_t v52 = 0;
  }
  else
  {
    uint64_t v52 = 1;
    uint64_t v51 = v73;
    uint64_t v50 = v74;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v51 + 56))(v44, v52, 1, v50);
  uint64_t v53 = v80;
  uint64_t v54 = v81;
  char v55 = *(void (**)(char *, char *, uint64_t))(v81 + 16);
  uint64_t v56 = (uint64_t)v44;
  uint64_t v57 = v82;
  v55(v80, v32, v82);
  uint64_t v58 = v84;
  sub_100008DD4(v40, v84, &qword_1001FC948);
  uint64_t v59 = v85;
  sub_100008DD4(v56, v85, &qword_1001FC940);
  uint64_t v60 = v86;
  v55(v86, v53, v57);
  uint64_t v61 = sub_1000063C0(&qword_1001FC9A0);
  sub_100008DD4(v58, (uint64_t)&v60[*(int *)(v61 + 48)], &qword_1001FC948);
  sub_100008DD4(v59, (uint64_t)&v60[*(int *)(v61 + 64)], &qword_1001FC940);
  sub_10002784C(v56, &qword_1001FC940);
  sub_10002784C(v88, &qword_1001FC948);
  uint64_t v62 = *(void (**)(char *, uint64_t))(v54 + 8);
  v62(v87, v57);
  sub_10002784C(v59, &qword_1001FC940);
  sub_10002784C(v58, &qword_1001FC948);
  return ((uint64_t (*)(char *, uint64_t))v62)(v53, v57);
}

uint64_t sub_100041C0C(uint64_t a1)
{
  sub_1000063C0(&qword_1001FC958);
  Binding.wrappedValue.getter();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  uint64_t v2 = swift_allocObject();
  long long v3 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v2 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v2 + 64) = v3;
  *(_OWORD *)(v2 + 80) = *(_OWORD *)(a1 + 64);
  *(unsigned char *)(v2 + 96) = *(unsigned char *)(a1 + 80);
  long long v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v2 + 32) = v4;
  sub_100042CC0(a1);
  sub_1000063C0(&qword_1001FC9F8);
  sub_1000063C0(&qword_1001FC990);
  sub_100027F2C(&qword_1001FCA00, &qword_1001FC9F8);
  sub_100042D34();
  sub_100027F2C(&qword_1001FC988, &qword_1001FC990);
  return ForEach<>.init(_:id:content:)();
}

uint64_t sub_100041DBC(_OWORD *a1, uint64_t a2)
{
  long long v4 = a1[1];
  v12[0] = *a1;
  v12[1] = v4;
  long long v5 = a1[3];
  void v12[2] = a1[2];
  uint64_t v12[3] = v5;
  uint64_t v6 = swift_allocObject();
  long long v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v6 + 48) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v6 + 64) = v7;
  *(_OWORD *)(v6 + 80) = *(_OWORD *)(a2 + 64);
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v6 + 16) = *(_OWORD *)a2;
  *(_OWORD *)(v6 + 32) = v8;
  long long v9 = a1[2];
  *(_OWORD *)(v6 + 152) = a1[3];
  *(_OWORD *)(v6 + 136) = v9;
  long long v10 = *a1;
  *(_OWORD *)(v6 + 120) = a1[1];
  *(unsigned char *)(v6 + 96) = *(unsigned char *)(a2 + 80);
  *(_OWORD *)(v6 + 104) = v10;
  sub_100042CC0(a2);
  sub_100042E1C((uint64_t)v12);
  sub_1000063C0(&qword_1001FCA10);
  sub_100027F2C(&qword_1001FCA18, &qword_1001FCA10);
  return Button.init(action:label:)();
}

uint64_t sub_100041EE4(uint64_t a1)
{
  return sub_100042E74(a1);
}

uint64_t sub_100042004@<X0>(Swift::String *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for LocalizedStringKey.StringInterpolation();
  __chkstk_darwin(v4 - 8);
  uint64_t countAndFlagsBits = a1->_countAndFlagsBits;
  uint64_t object = (uint64_t)a1->_object;
  sub_10002DF54();
  swift_bridgeObjectRetain();
  uint64_t v5 = Text.init<A>(_:)();
  uint64_t v27 = v6;
  uint64_t v28 = v5;
  char v26 = v7;
  uint64_t v29 = v8;
  sub_100026FD0((uint64_t)&a1[2], (uint64_t)v35, &qword_1001FCA20);
  sub_100026FD0((uint64_t)v35, (uint64_t)&v36, &qword_1001FCA20);
  long long v9 = v37;
  if (v37)
  {
    uint64_t v10 = v36;
    LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v11._uint64_t countAndFlagsBits = 0;
    v11._uint64_t object = (void *)0xE000000000000000;
    LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v11);
    LocalizedStringKey.StringInterpolation.appendInterpolation(_:)(a1[1]);
    v12._uint64_t countAndFlagsBits = 2108704;
    v12._uint64_t object = (void *)0xE300000000000000;
    LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v12);
    v13._uint64_t countAndFlagsBits = v10;
    v13._uint64_t object = v9;
    LocalizedStringKey.StringInterpolation.appendInterpolation(_:)(v13);
    v14._uint64_t countAndFlagsBits = 0;
    v14._uint64_t object = (void *)0xE000000000000000;
    LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v14);
    LocalizedStringKey.init(stringInterpolation:)();
    uint64_t v15 = Text.init(_:tableName:bundle:comment:)();
    uint64_t v17 = v16;
    char v19 = v18 & 1;
    static Font.subheadline.getter();
    Text.font(_:)();
    swift_release();
    sub_100026F18(v15, v17, v19);
  }
  else
  {
    uint64_t countAndFlagsBits = a1[1]._countAndFlagsBits;
    uint64_t object = (uint64_t)a1[1]._object;
    swift_bridgeObjectRetain();
    uint64_t v20 = Text.init<A>(_:)();
    uint64_t v22 = v21;
    uint64_t v24 = v23 & 1;
    static Font.subheadline.getter();
    Text.font(_:)();
    swift_release();
    sub_100026F18(v20, v22, v24);
  }
  swift_bridgeObjectRelease();
  _ConditionalContent<>.init(storage:)();
  *(void *)a2 = v28;
  *(void *)(a2 + 8) = v27;
  *(unsigned char *)(a2 + 16) = v26 & 1;
  *(void *)(a2 + 24) = v29;
  *(void *)(a2 + 32) = countAndFlagsBits;
  *(void *)(a2 + 40) = object;
  *(void *)(a2 + 48) = v32;
  *(void *)(a2 + 56) = v33;
  *(unsigned char *)(a2 + 64) = v34;
  sub_10002783C(v28, v27, v26 & 1);
  swift_bridgeObjectRetain();
  sub_10002DCDC(countAndFlagsBits, object, v32);
  sub_10002DDB4(countAndFlagsBits, object, v32);
  sub_100026F18(v28, v27, v26 & 1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100042338()
{
  uint64_t v0 = type metadata accessor for IconOnlyLabelStyle();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  long long v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000063C0(&qword_1001FC970);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  char v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000063C0(&qword_1001FC9B8);
  sub_100042B84();
  Label.init(title:icon:)();
  IconOnlyLabelStyle.init()();
  sub_100027F2C(&qword_1001FC978, &qword_1001FC970);
  sub_100042B3C(&qword_1001FDA20, (void (*)(uint64_t))&type metadata accessor for IconOnlyLabelStyle);
  View.labelStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_10004258C@<X0>(uint64_t a1@<X8>)
{
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t result = Text.init(_:tableName:bundle:comment:)();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_10004260C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1000063C0(&qword_1001FC9D0);
  __chkstk_darwin(v2 - 8);
  char v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)char v4 = static VerticalAlignment.center.getter();
  *((void *)v4 + 1) = 0;
  v4[16] = 0;
  uint64_t v5 = sub_1000063C0(&qword_1001FC9E0);
  sub_100042738((uint64_t *)&v4[*(int *)(v5 + 44)]);
  if (qword_1001FAD38 != -1) {
    swift_once();
  }
  uint64_t v6 = qword_1002129E0;
  uint64_t KeyPath = swift_getKeyPath();
  sub_100008DD4((uint64_t)v4, a1, &qword_1001FC9D0);
  uint64_t v8 = (uint64_t *)(a1 + *(int *)(sub_1000063C0(&qword_1001FC9B8) + 36));
  uint64_t *v8 = KeyPath;
  v8[1] = v6;
  swift_retain();
  return sub_10002784C((uint64_t)v4, &qword_1001FC9D0);
}

uint64_t sub_100042738@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v22 = a1;
  uint64_t v1 = sub_1000063C0(&qword_100202460);
  uint64_t v2 = v1 - 8;
  __chkstk_darwin(v1);
  char v4 = (uint64_t *)((char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = type metadata accessor for Image.Scale();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000063C0(&qword_1001FC9E8);
  uint64_t v10 = v9 - 8;
  uint64_t v11 = __chkstk_darwin(v9);
  Swift::String v13 = (uint64_t *)((char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v21 - v14;
  uint64_t v21 = Image.init(systemName:)();
  uint64_t v16 = Image.init(systemName:)();
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, enum case for Image.Scale.small(_:), v5);
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))((char *)v4 + *(int *)(v2 + 36), v8, v5);
  *char v4 = KeyPath;
  sub_100008DD4((uint64_t)v4, (uint64_t)v13 + *(int *)(v10 + 44), &qword_100202460);
  *Swift::String v13 = v16;
  swift_retain();
  sub_10002784C((uint64_t)v4, &qword_100202460);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_release();
  sub_100026FD0((uint64_t)v13, (uint64_t)v15, &qword_1001FC9E8);
  sub_100008DD4((uint64_t)v15, (uint64_t)v13, &qword_1001FC9E8);
  char v18 = v22;
  uint64_t *v22 = v21;
  uint64_t v19 = sub_1000063C0(&qword_1001FC9F0);
  sub_100008DD4((uint64_t)v13, (uint64_t)v18 + *(int *)(v19 + 48), &qword_1001FC9E8);
  swift_retain();
  sub_10002784C((uint64_t)v15, &qword_1001FC9E8);
  sub_10002784C((uint64_t)v13, &qword_1001FC9E8);
  return swift_release();
}

uint64_t sub_100042A28@<X0>(uint64_t a1@<X8>)
{
  long long v3 = *(_OWORD *)(v1 + 48);
  v7[2] = *(_OWORD *)(v1 + 32);
  v7[3] = v3;
  v7[4] = *(_OWORD *)(v1 + 64);
  char v8 = *(unsigned char *)(v1 + 80);
  long long v4 = *(_OWORD *)(v1 + 16);
  v7[0] = *(_OWORD *)v1;
  v7[1] = v4;
  *(void *)a1 = static VerticalAlignment.center.getter();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  uint64_t v5 = sub_1000063C0(&qword_1001FC928);
  return sub_100041210(v7, (char *)(a1 + *(int *)(v5 + 44)));
}

uint64_t sub_100042A9C()
{
  return sub_100041C0C(*(void *)(v0 + 16));
}

unint64_t sub_100042AA4()
{
  unint64_t result = qword_1001FC980;
  if (!qword_1001FC980)
  {
    sub_100006C14(&qword_1001FC968);
    sub_100027F2C(&qword_1001FC988, &qword_1001FC990);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FC980);
  }
  return result;
}

uint64_t sub_100042B3C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100042B84()
{
  unint64_t result = qword_1001FC9C0;
  if (!qword_1001FC9C0)
  {
    sub_100006C14(&qword_1001FC9B8);
    sub_100027F2C(&qword_1001FC9C8, &qword_1001FC9D0);
    sub_100027F2C((unint64_t *)&unk_1002024E0, &qword_1001FC9D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FC9C0);
  }
  return result;
}

uint64_t sub_100042C58()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 97, 7);
}

uint64_t sub_100042CB8(_OWORD *a1)
{
  return sub_100041DBC(a1, v1 + 16);
}

uint64_t sub_100042CC0(uint64_t a1)
{
  return a1;
}

unint64_t sub_100042D34()
{
  unint64_t result = qword_1001FCA08;
  if (!qword_1001FCA08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FCA08);
  }
  return result;
}

uint64_t sub_100042D88()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 168, 7);
}

uint64_t sub_100042E08()
{
  return sub_100041EE4(v0 + 16);
}

uint64_t sub_100042E14@<X0>(uint64_t a1@<X8>)
{
  return sub_100042004(*(Swift::String **)(v1 + 16), a1);
}

uint64_t sub_100042E1C(uint64_t a1)
{
  return a1;
}

uint64_t sub_100042E74(uint64_t a1)
{
  return a1;
}

uint64_t sub_100042EE4()
{
  return sub_100027F2C(&qword_1001FCA28, &qword_1001FCA30);
}

uint64_t sub_100042F20()
{
  uint64_t v2 = *(void *)v0;
  unint64_t v1 = *(void *)(v0 + 8);
  if (*(unsigned char *)(v0 + 48))
  {
    uint64_t v4 = *(void *)(v0 + 16);
    uint64_t v3 = *(void *)(v0 + 24);
    uint64_t v6 = *(void *)(v0 + 32);
    uint64_t v5 = *(void *)(v0 + 40);
    if (*(unsigned char *)(v0 + 48) == 1)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v2 = sub_10015D8A8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100044354(*(void *)v0, *(void *)(v0 + 8), *(void *)(v0 + 16), *(void *)(v0 + 24));
      uint64_t v7 = sub_1000431E4(v2, v1, v4, v3);
      sub_1000443A8(v2, v1, v4, v3, v6, v5, 2);
      return v7;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  return v2;
}

uint64_t sub_100043038()
{
  type metadata accessor for ChatMessageRole();
  _print_unlocked<A, B>(_:_:)();
  v1._uint64_t countAndFlagsBits = 8250;
  v1._uint64_t object = (void *)0xE200000000000000;
  String.append(_:)(v1);
  uint64_t v2 = v0 + *(int *)(type metadata accessor for PromptExampleBuilder.ExampleMessage() + 20);
  uint64_t v4 = *(void *)v2;
  unint64_t v3 = *(void *)(v2 + 8);
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v7 = *(void *)(v2 + 32);
  uint64_t v8 = *(void *)(v2 + 40);
  int v9 = *(unsigned __int8 *)(v2 + 48);
  if (*(unsigned char *)(v2 + 48))
  {
    if (v9 == 1)
    {
      sub_1000444EC(v4, v3, v5, v6, v7, v8, 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v10 = sub_10015D8A8();
      uint64_t v12 = v11;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100044354(*(void *)v2, *(void *)(v2 + 8), *(void *)(v2 + 16), *(void *)(v2 + 24));
      uint64_t v10 = sub_1000431E4(v4, v3, v5, v6);
      uint64_t v12 = v13;
    }
  }
  else
  {
    swift_bridgeObjectRetain_n();
    uint64_t v10 = v4;
    uint64_t v12 = (void *)v3;
  }
  v14._uint64_t countAndFlagsBits = v10;
  v14._uint64_t object = v12;
  String.append(_:)(v14);
  swift_bridgeObjectRelease();
  sub_1000443A8(v4, v3, v5, v6, v7, v8, v9);
  return 0;
}

uint64_t sub_1000431E4(uint64_t a1, unint64_t a2, uint64_t a3, int a4)
{
  int v45 = a4;
  unint64_t v43 = a2;
  uint64_t v44 = a3;
  uint64_t v46 = a1;
  uint64_t v4 = type metadata accessor for JSONEncoder.DateEncodingStrategy();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for JSONEncoder.OutputFormatting();
  __chkstk_darwin(v8);
  type metadata accessor for JSONEncoder();
  swift_allocObject();
  JSONEncoder.init()();
  sub_1000063C0(&qword_1001FCA38);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_10018A740;
  static JSONEncoder.OutputFormatting.prettyPrinted.getter();
  static JSONEncoder.OutputFormatting.sortedKeys.getter();
  uint64_t v52 = v9;
  sub_100044584();
  sub_1000063C0(&qword_1001FCA48);
  sub_100027F2C(&qword_1001FCA50, &qword_1001FCA48);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  dispatch thunk of JSONEncoder.outputFormatting.setter();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for JSONEncoder.DateEncodingStrategy.iso8601(_:), v4);
  dispatch thunk of JSONEncoder.dateEncodingStrategy.setter();
  if (!(_BYTE)v45) {
    goto LABEL_6;
  }
  if (v45 == 1)
  {
    uint64_t v52 = v46;
    sub_100044784();
    uint64_t v10 = dispatch thunk of JSONEncoder.encode<A>(_:)();
    unint64_t v12 = v11;
    uint64_t v13 = v10;
    switch(v11 >> 62)
    {
      case 1uLL:
        uint64_t v14 = (int)v10;
        uint64_t v15 = v10 >> 32;
        if (v10 >> 32 >= (int)v10) {
          goto LABEL_22;
        }
        __break(1u);
        break;
      case 2uLL:
        goto LABEL_10;
      case 3uLL:
        goto LABEL_12;
      default:
        goto LABEL_9;
    }
LABEL_6:
    uint64_t v52 = v46;
    unint64_t v53 = v43;
    uint64_t v54 = v44;
    sub_1000447D8();
    uint64_t v16 = dispatch thunk of JSONEncoder.encode<A>(_:)();
    unint64_t v18 = v17;
    uint64_t v19 = v16;
    switch(v17 >> 62)
    {
      case 1uLL:
        if (v16 >> 32 < (int)v16)
        {
          __break(1u);
LABEL_41:
          __break(1u);
        }
        sub_100044630(v16, v17);
        swift_retain();
        uint64_t v32 = sub_100084E0C((int)v19, v19 >> 32, v18 & 0x3FFFFFFFFFFFFFFFLL, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_100085078);
        uint64_t v38 = v37;
        sub_1000446E8(v19, v18);
        if (v38) {
          goto LABEL_37;
        }
LABEL_18:
        uint64_t v50 = v19;
        unint64_t v51 = v18;
        sub_100044630(v19, v18);
        sub_1000063C0(&qword_1001FCA58);
        if (swift_dynamicCast())
        {
          sub_1000085E4(&v47, (uint64_t)&v52);
          sub_100044740(&v52, v55);
          if (dispatch thunk of _HasContiguousBytes._providesContiguousBytesNoCopy.getter())
          {
            sub_100044740(&v52, v55);
            dispatch thunk of _HasContiguousBytes.withUnsafeBytes<A>(_:)();
            sub_1000446E8(v19, v18);
            uint64_t v32 = v47;
            sub_100027DBC((uint64_t)&v52);
            goto LABEL_38;
          }
          sub_100027DBC((uint64_t)&v52);
        }
        else
        {
          uint64_t v49 = 0;
          long long v47 = 0u;
          long long v48 = 0u;
          sub_100044688((uint64_t)&v47);
        }
        uint64_t v20 = sub_10008432C(v19, v18);
LABEL_36:
        uint64_t v32 = v20;
LABEL_37:
        sub_1000446E8(v19, v18);
LABEL_38:
        sub_1000446E8(v19, v18);
        swift_release();
        break;
      case 2uLL:
        uint64_t v30 = *(void *)(v16 + 16);
        uint64_t v31 = *(void *)(v16 + 24);
        sub_100044630(v16, v17);
        swift_retain();
        swift_retain();
        uint64_t v32 = sub_100084E0C(v30, v31, v18 & 0x3FFFFFFFFFFFFFFFLL, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_100085078);
        uint64_t v34 = v33;
        swift_release();
        swift_release();
        if (!v34) {
          goto LABEL_18;
        }
        goto LABEL_37;
      case 3uLL:
        *(void *)((char *)&v47 + 6) = 0;
        *(void *)&long long v47 = 0;
        sub_100085078(&v52);
        sub_1000446E8(v19, v18);
        uint64_t v35 = v19;
        unint64_t v36 = v18;
        goto LABEL_33;
      default:
        uint64_t v52 = v16;
        LOWORD(v53) = v17;
        BYTE2(v53) = BYTE2(v17);
        BYTE3(v53) = BYTE3(v17);
        BYTE4(v53) = BYTE4(v17);
        BYTE5(v53) = BYTE5(v17);
        uint64_t v20 = static String._fromUTF8Repairing(_:)();
        goto LABEL_36;
    }
    return v32;
  }
  uint64_t v52 = v46;
  sub_1000445DC();
  uint64_t v21 = dispatch thunk of JSONEncoder.encode<A>(_:)();
  unint64_t v12 = v22;
  uint64_t v13 = v21;
  switch(v22 >> 62)
  {
    case 1uLL:
      uint64_t v14 = (int)v21;
      uint64_t v15 = v21 >> 32;
      if (v21 >> 32 < (int)v21) {
        goto LABEL_41;
      }
LABEL_22:
      sub_100044630(v13, v12);
      swift_retain();
      uint64_t v27 = sub_100084E0C(v14, v15, v12 & 0x3FFFFFFFFFFFFFFFLL, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_100085078);
      uint64_t v29 = v39;
      sub_1000446E8(v13, v12);
      if (v29) {
        goto LABEL_31;
      }
LABEL_23:
      uint64_t v50 = v13;
      unint64_t v51 = v12;
      sub_100044630(v13, v12);
      sub_1000063C0(&qword_1001FCA58);
      if (swift_dynamicCast())
      {
        sub_1000085E4(&v47, (uint64_t)&v52);
        sub_100044740(&v52, v55);
        if (dispatch thunk of _HasContiguousBytes._providesContiguousBytesNoCopy.getter())
        {
          sub_100044740(&v52, v55);
          dispatch thunk of _HasContiguousBytes.withUnsafeBytes<A>(_:)();
          sub_1000446E8(v13, v12);
          uint64_t v29 = (void *)*((void *)&v47 + 1);
          uint64_t v27 = v47;
          sub_100027DBC((uint64_t)&v52);
          goto LABEL_32;
        }
        sub_100027DBC((uint64_t)&v52);
      }
      else
      {
        uint64_t v49 = 0;
        long long v47 = 0u;
        long long v48 = 0u;
        sub_100044688((uint64_t)&v47);
      }
      uint64_t v23 = sub_10008432C(v13, v12);
LABEL_30:
      uint64_t v27 = v23;
      uint64_t v29 = v24;
LABEL_31:
      sub_1000446E8(v13, v12);
LABEL_32:
      uint64_t v52 = 0xD000000000000016;
      unint64_t v53 = 0x800000010019D1A0;
      v40._uint64_t countAndFlagsBits = v27;
      v40._uint64_t object = v29;
      String.append(_:)(v40);
      swift_bridgeObjectRelease();
      uint64_t v35 = v13;
      unint64_t v36 = v12;
LABEL_33:
      sub_1000446E8(v35, v36);
      swift_release();
      uint64_t v32 = v52;
      break;
    case 2uLL:
LABEL_10:
      uint64_t v25 = *(void *)(v13 + 16);
      uint64_t v26 = *(void *)(v13 + 24);
      sub_100044630(v13, v12);
      swift_retain();
      swift_retain();
      uint64_t v27 = sub_100084E0C(v25, v26, v12 & 0x3FFFFFFFFFFFFFFFLL, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_100085078);
      uint64_t v29 = v28;
      swift_release();
      swift_release();
      if (!v29) {
        goto LABEL_23;
      }
      goto LABEL_31;
    case 3uLL:
LABEL_12:
      *(void *)((char *)&v47 + 6) = 0;
      *(void *)&long long v47 = 0;
      sub_100085078(&v52);
      sub_1000446E8(v13, v12);
      uint64_t v27 = v52;
      uint64_t v29 = (void *)v53;
      goto LABEL_32;
    default:
LABEL_9:
      uint64_t v52 = v13;
      LOWORD(v53) = v12;
      BYTE2(v53) = BYTE2(v12);
      BYTE3(v53) = BYTE3(v12);
      BYTE4(v53) = BYTE4(v12);
      BYTE5(v53) = BYTE5(v12);
      uint64_t v23 = static String._fromUTF8Repairing(_:)();
      goto LABEL_30;
  }
  return v32;
}

uint64_t sub_100043BC4()
{
  return sub_1000431E4(*(void *)v0, *(void *)(v0 + 8), *(void *)(v0 + 16), *(unsigned __int8 *)(v0 + 24));
}

unint64_t sub_100043BD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7)
{
  uint64_t v29 = a3;
  uint64_t v30 = a5;
  uint64_t v12 = type metadata accessor for PromptExampleBuilder.ExampleMessage();
  uint64_t v31 = *(void *)(v12 - 8);
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  unint64_t v17 = (char *)&v28 - v16;
  uint64_t v18 = enum case for ChatMessageRole.user(_:);
  uint64_t v19 = type metadata accessor for ChatMessageRole();
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104);
  if (a4 | a6)
  {
    v20(v15, v18, v19);
    uint64_t v25 = &v15[*(int *)(v12 + 20)];
    *(void *)uint64_t v25 = a1;
    *((void *)v25 + 1) = a2;
    *((void *)v25 + 2) = v29;
    *((void *)v25 + 3) = a4;
    *((void *)v25 + 4) = v30;
    *((void *)v25 + 5) = a6;
    v25[48] = 1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      a7 = sub_100143454(0, *(void *)(a7 + 16) + 1, 1, a7);
    }
    unint64_t v23 = *(void *)(a7 + 16);
    unint64_t v26 = *(void *)(a7 + 24);
    unint64_t v24 = v23 + 1;
    if (v23 >= v26 >> 1) {
      a7 = sub_100143454(v26 > 1, v23 + 1, 1, a7);
    }
    unint64_t v17 = v15;
  }
  else
  {
    v20(v17, v18, v19);
    uint64_t v21 = &v17[*(int *)(v12 + 20)];
    *(void *)uint64_t v21 = a1;
    *((void *)v21 + 1) = a2;
    *((_OWORD *)v21 + 1) = 0u;
    *((_OWORD *)v21 + 2) = 0u;
    v21[48] = 0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      a7 = sub_100143454(0, *(void *)(a7 + 16) + 1, 1, a7);
    }
    unint64_t v23 = *(void *)(a7 + 16);
    unint64_t v22 = *(void *)(a7 + 24);
    unint64_t v24 = v23 + 1;
    if (v23 >= v22 >> 1) {
      a7 = sub_100143454(v22 > 1, v23 + 1, 1, a7);
    }
  }
  *(void *)(a7 + 16) = v24;
  sub_10004482C((uint64_t)v17, a7+ ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80))+ *(void *)(v31 + 72) * v23);
  return a7;
}

uint64_t sub_100043E80(void *a1, uint64_t a2)
{
  uint64_t v45 = type metadata accessor for PromptExampleBuilder.ExampleMessage();
  uint64_t v4 = *(void *)(v45 - 8);
  uint64_t v5 = __chkstk_darwin(v45);
  uint64_t v7 = (char *)v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)v40 - v8;
  int64_t v10 = *(void *)(a2 + 16);
  unint64_t v11 = _swiftEmptyArrayStorage;
  if (v10)
  {
    uint64_t v41 = a1;
    uint64_t v50 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    sub_100129188(0, v10, 0);
    uint64_t v12 = *(unsigned __int8 *)(v4 + 80);
    v40[1] = a2;
    uint64_t v13 = a2 + ((v12 + 32) & ~v12);
    uint64_t v42 = *(void *)(v4 + 72);
    unint64_t v43 = v9;
    uint64_t v44 = v7;
    do
    {
      int64_t v47 = v10;
      sub_1000442F0(v13, (uint64_t)v9);
      sub_1000442F0((uint64_t)v9, (uint64_t)v7);
      uint64_t v48 = 0;
      unint64_t v49 = 0xE000000000000000;
      type metadata accessor for ChatMessageRole();
      _print_unlocked<A, B>(_:_:)();
      v14._uint64_t countAndFlagsBits = 8250;
      v14._uint64_t object = (void *)0xE200000000000000;
      String.append(_:)(v14);
      uint64_t v15 = &v7[*(int *)(v45 + 20)];
      uint64_t v17 = *(void *)v15;
      unint64_t v16 = *((void *)v15 + 1);
      uint64_t v19 = *((void *)v15 + 2);
      uint64_t v18 = *((void *)v15 + 3);
      uint64_t v20 = *((void *)v15 + 4);
      uint64_t v21 = *((void *)v15 + 5);
      int v22 = v15[48];
      uint64_t v46 = v20;
      if (v22)
      {
        if (v22 == 1)
        {
          uint64_t v51 = v17;
          unint64_t v52 = v16;
          uint64_t v53 = v19;
          uint64_t v54 = v18;
          uint64_t v55 = v20;
          uint64_t v56 = v21;
          sub_1000444EC(v17, v16, v19, v18, v20, v21, 1);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v23 = sub_10015D8A8();
          uint64_t v25 = v24;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_100044354(v17, v16, v19, v18);
          uint64_t v23 = sub_1000431E4(v17, v16, v19, v18);
          uint64_t v25 = v26;
        }
      }
      else
      {
        swift_bridgeObjectRetain_n();
        uint64_t v23 = v17;
        uint64_t v25 = (void *)v16;
      }
      v27._uint64_t countAndFlagsBits = v23;
      v27._uint64_t object = v25;
      String.append(_:)(v27);
      swift_bridgeObjectRelease();
      sub_1000443A8(v17, v16, v19, v18, v46, v21, v22);
      uint64_t v28 = v48;
      unint64_t v29 = v49;
      uint64_t v7 = v44;
      sub_100044490((uint64_t)v44);
      uint64_t v9 = v43;
      sub_100044490((uint64_t)v43);
      unint64_t v11 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100129188(0, v11[2] + 1, 1);
        unint64_t v11 = v50;
      }
      unint64_t v31 = v11[2];
      unint64_t v30 = v11[3];
      if (v31 >= v30 >> 1)
      {
        sub_100129188(v30 > 1, v31 + 1, 1);
        unint64_t v11 = v50;
      }
      v11[2] = v31 + 1;
      uint64_t v32 = &v11[2 * v31];
      v32[4] = v28;
      v32[5] = v29;
      v13 += v42;
      int64_t v10 = v47 - 1;
    }
    while (v47 != 1);
    swift_bridgeObjectRelease();
    a1 = v41;
  }
  uint64_t v48 = (uint64_t)v11;
  sub_1000063C0(&qword_1001FBE30);
  sub_100027F2C(&qword_1001FEDF0, &qword_1001FBE30);
  uint64_t v33 = BidirectionalCollection<>.joined(separator:)();
  uint64_t v35 = v34;
  swift_bridgeObjectRelease();
  uint64_t v48 = 0x20656C706D617845;
  unint64_t v49 = 0xE800000000000000;
  uint64_t v50 = a1;
  v36._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v36);
  swift_bridgeObjectRelease();
  v37._uint64_t countAndFlagsBits = 2618;
  v37._uint64_t object = (void *)0xE200000000000000;
  String.append(_:)(v37);
  v38._uint64_t countAndFlagsBits = v33;
  v38._uint64_t object = v35;
  String.append(_:)(v38);
  swift_bridgeObjectRelease();
  return v48;
}

uint64_t type metadata accessor for PromptExampleBuilder.ExampleMessage()
{
  uint64_t result = qword_1001FCAC8;
  if (!qword_1001FCAC8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000442F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PromptExampleBuilder.ExampleMessage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100044354(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 - 1 >= 2)
  {
    if (a4) {
      return result;
    }
    swift_bridgeObjectRetain();
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_1000443A8(uint64_t result, uint64_t a2, uint64_t a3, unsigned __int8 a4, uint64_t a5, uint64_t a6, char a7)
{
  if (a7 == 2)
  {
    return sub_10004443C(result, a2, a3, a4);
  }
  else
  {
    if (a7 == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else if (a7)
    {
      return result;
    }
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_10004443C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 - 1 >= 2)
  {
    if (a4) {
      return result;
    }
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_100044490(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PromptExampleBuilder.ExampleMessage();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000444EC(uint64_t result, uint64_t a2, uint64_t a3, unsigned __int8 a4, uint64_t a5, uint64_t a6, char a7)
{
  if (a7 == 2)
  {
    return sub_100044354(result, a2, a3, a4);
  }
  else
  {
    if (a7 == 1)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else if (a7)
    {
      return result;
    }
    return swift_bridgeObjectRetain();
  }
}

unint64_t sub_100044584()
{
  unint64_t result = qword_1001FCA40;
  if (!qword_1001FCA40)
  {
    type metadata accessor for JSONEncoder.OutputFormatting();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FCA40);
  }
  return result;
}

unint64_t sub_1000445DC()
{
  unint64_t result = qword_1001FEDA0;
  if (!qword_1001FEDA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FEDA0);
  }
  return result;
}

uint64_t sub_100044630(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }

  return swift_retain();
}

uint64_t sub_100044688(uint64_t a1)
{
  uint64_t v2 = sub_1000063C0(&qword_1001FEDB0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000446E8(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

void *sub_100044740(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_100044784()
{
  unint64_t result = qword_1001FCA60;
  if (!qword_1001FCA60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FCA60);
  }
  return result;
}

unint64_t sub_1000447D8()
{
  unint64_t result = qword_1001FCA68;
  if (!qword_1001FCA68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FCA68);
  }
  return result;
}

uint64_t sub_10004482C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PromptExampleBuilder.ExampleMessage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for PromptExampleBuilder()
{
  return &type metadata for PromptExampleBuilder;
}

uint64_t *sub_1000448A0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for ChatMessageRole();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    int64_t v10 = (char *)a2 + v8;
    uint64_t v11 = *(void *)v10;
    uint64_t v12 = *((void *)v10 + 1);
    uint64_t v13 = *((void *)v10 + 2);
    uint64_t v14 = *((void *)v10 + 3);
    uint64_t v15 = *((void *)v10 + 4);
    uint64_t v16 = *((void *)v10 + 5);
    char v17 = v10[48];
    sub_1000444EC(*(void *)v10, v12, v13, v14, v15, v16, v17);
    *(void *)uint64_t v9 = v11;
    *((void *)v9 + 1) = v12;
    *((void *)v9 + 2) = v13;
    *((void *)v9 + 3) = v14;
    *((void *)v9 + 4) = v15;
    *((void *)v9 + 5) = v16;
    v9[48] = v17;
  }
  return a1;
}

uint64_t sub_1000449C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ChatMessageRole();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = *(void *)v5;
  uint64_t v7 = *(void *)(v5 + 8);
  uint64_t v8 = *(void *)(v5 + 16);
  uint64_t v9 = *(void *)(v5 + 24);
  uint64_t v10 = *(void *)(v5 + 32);
  uint64_t v11 = *(void *)(v5 + 40);
  char v12 = *(unsigned char *)(v5 + 48);

  return sub_1000443A8(v6, v7, v8, v9, v10, v11, v12);
}

uint64_t sub_100044A48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ChatMessageRole();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)v9;
  uint64_t v11 = *(void *)(v9 + 8);
  uint64_t v12 = *(void *)(v9 + 16);
  uint64_t v13 = *(void *)(v9 + 24);
  uint64_t v14 = *(void *)(v9 + 32);
  uint64_t v15 = *(void *)(v9 + 40);
  char v16 = *(unsigned char *)(v9 + 48);
  sub_1000444EC(*(void *)v9, v11, v12, v13, v14, v15, v16);
  *(void *)uint64_t v8 = v10;
  *(void *)(v8 + 8) = v11;
  *(void *)(v8 + 16) = v12;
  *(void *)(v8 + 24) = v13;
  *(void *)(v8 + 32) = v14;
  *(void *)(v8 + 40) = v15;
  *(unsigned char *)(v8 + 48) = v16;
  return a1;
}

uint64_t sub_100044B1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ChatMessageRole();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)v9;
  uint64_t v11 = *(void *)(v9 + 8);
  uint64_t v12 = *(void *)(v9 + 16);
  uint64_t v13 = *(void *)(v9 + 24);
  uint64_t v14 = *(void *)(v9 + 32);
  uint64_t v15 = *(void *)(v9 + 40);
  char v16 = *(unsigned char *)(v9 + 48);
  sub_1000444EC(*(void *)v9, v11, v12, v13, v14, v15, v16);
  uint64_t v17 = *(void *)v8;
  uint64_t v18 = *(void *)(v8 + 8);
  uint64_t v19 = *(void *)(v8 + 16);
  uint64_t v20 = *(void *)(v8 + 24);
  uint64_t v21 = *(void *)(v8 + 32);
  uint64_t v22 = *(void *)(v8 + 40);
  *(void *)uint64_t v8 = v10;
  *(void *)(v8 + 8) = v11;
  *(void *)(v8 + 16) = v12;
  *(void *)(v8 + 24) = v13;
  *(void *)(v8 + 32) = v14;
  *(void *)(v8 + 40) = v15;
  char v23 = *(unsigned char *)(v8 + 48);
  *(unsigned char *)(v8 + 48) = v16;
  sub_1000443A8(v17, v18, v19, v20, v21, v22, v23);
  return a1;
}

uint64_t sub_100044C04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ChatMessageRole();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  long long v10 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v10;
  *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
  *(unsigned char *)(v8 + 48) = *(unsigned char *)(v9 + 48);
  return a1;
}

uint64_t sub_100044C98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ChatMessageRole();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  char v10 = *(unsigned char *)(v9 + 48);
  uint64_t v11 = *(void *)v8;
  uint64_t v12 = *(void *)(v8 + 8);
  uint64_t v13 = *(void *)(v8 + 16);
  uint64_t v14 = *(void *)(v8 + 24);
  uint64_t v15 = *(void *)(v8 + 32);
  uint64_t v16 = *(void *)(v8 + 40);
  long long v17 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v17;
  *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
  char v18 = *(unsigned char *)(v8 + 48);
  *(unsigned char *)(v8 + 48) = v10;
  sub_1000443A8(v11, v12, v13, v14, v15, v16, v18);
  return a1;
}

uint64_t sub_100044D40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100044D54);
}

uint64_t sub_100044D54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ChatMessageRole();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20) + 48);
    if (v10 > 2) {
      return (v10 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_100044E14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100044E28);
}

uint64_t sub_100044E28(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for ChatMessageRole();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20) + 48) = -(char)a2;
  }
  return result;
}

uint64_t sub_100044EE8()
{
  uint64_t result = type metadata accessor for ChatMessageRole();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for PromptExampleBuilder.ExampleMessage.MessageType(uint64_t a1)
{
  return sub_1000443A8(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(unsigned char *)(a1 + 48));
}

uint64_t initializeWithCopy for PromptExampleBuilder.ExampleMessage.MessageType(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  char v9 = *(unsigned char *)(a2 + 48);
  sub_1000444EC(*(void *)a2, v4, v5, v6, v7, v8, v9);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(unsigned char *)(a1 + 48) = v9;
  return a1;
}

uint64_t assignWithCopy for PromptExampleBuilder.ExampleMessage.MessageType(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  char v9 = *(unsigned char *)(a2 + 48);
  sub_1000444EC(*(void *)a2, v4, v5, v6, v7, v8, v9);
  uint64_t v10 = *(void *)a1;
  uint64_t v11 = *(void *)(a1 + 8);
  uint64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = *(void *)(a1 + 24);
  uint64_t v14 = *(void *)(a1 + 32);
  uint64_t v15 = *(void *)(a1 + 40);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  char v16 = *(unsigned char *)(a1 + 48);
  *(unsigned char *)(a1 + 48) = v9;
  sub_1000443A8(v10, v11, v12, v13, v14, v15, v16);
  return a1;
}

__n128 initializeWithTake for PromptExampleBuilder.ExampleMessage.MessageType(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for PromptExampleBuilder.ExampleMessage.MessageType(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 48);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  long long v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  char v11 = *(unsigned char *)(a1 + 48);
  *(unsigned char *)(a1 + 48) = v3;
  sub_1000443A8(v4, v6, v5, v7, v8, v9, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for PromptExampleBuilder.ExampleMessage.MessageType(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 49)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 48);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PromptExampleBuilder.ExampleMessage.MessageType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)__n128 result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 49) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 48) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1000451B0(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 48);
}

uint64_t sub_1000451B8(uint64_t result, char a2)
{
  *(unsigned char *)(result + 48) = a2;
  return result;
}

ValueMetadata *type metadata accessor for PromptExampleBuilder.ExampleMessage.MessageType()
{
  return &type metadata for PromptExampleBuilder.ExampleMessage.MessageType;
}

uint64_t destroy for PromptExampleBuilder.ExampleToolCall(uint64_t a1)
{
  return sub_10004443C(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
}

uint64_t initializeWithCopy for PromptExampleBuilder.ExampleToolCall(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  unsigned __int8 v6 = *(unsigned char *)(a2 + 24);
  sub_100044354(*(void *)a2, v4, v5, v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for PromptExampleBuilder.ExampleToolCall(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  unsigned __int8 v6 = *(unsigned char *)(a2 + 24);
  sub_100044354(*(void *)a2, v4, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  unsigned __int8 v10 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v6;
  sub_10004443C(v7, v8, v9, v10);
  return a1;
}

__n128 initializeWithTake for Mode(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for PromptExampleBuilder.ExampleToolCall(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v4;
  sub_10004443C(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for Mode(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for Mode(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 24) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1000453A8(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 24);
}

uint64_t sub_1000453B0(uint64_t result, char a2)
{
  *(unsigned char *)(result + 24) = a2;
  return result;
}

ValueMetadata *type metadata accessor for PromptExampleBuilder.ExampleToolCall()
{
  return &type metadata for PromptExampleBuilder.ExampleToolCall;
}

unint64_t sub_1000453C8()
{
  unint64_t result = sub_100005874((uint64_t)_swiftEmptyArrayStorage);
  qword_100212838 = result;
  return result;
}

uint64_t sub_1000453F0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_10004549C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel__entries) = a2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000454E0()
{
  return sub_100045C3C((uint64_t)&unk_10018C030, &OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel__hasEntries);
}

uint64_t sub_1000454F4(uint64_t result, char a2)
{
  *(unsigned char *)(result + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel__hasEntries) = a2;
  return result;
}

id sub_100045504()
{
  return sub_100045568((uint64_t)&unk_10018BF90, &OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel__inputContextHistory);
}

void sub_100045518(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(a1 + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel__inputContextHistory);
  *(void *)(a1 + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel__inputContextHistory) = a2;
  id v3 = a2;
}

id sub_100045554()
{
  return sub_100045568((uint64_t)&unk_10018BEF0, &OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel__smartReplyConfiguration);
}

id sub_100045568(uint64_t a1, void *a2)
{
  swift_getKeyPath();
  sub_10004FAA4((unint64_t *)&unk_1001FD2C0, (void (*)(uint64_t))type metadata accessor for QuestionnaireModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  int v4 = *(void **)(v2 + *a2);

  return v4;
}

void sub_100045618(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(a1 + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel__smartReplyConfiguration);
  *(void *)(a1 + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel__smartReplyConfiguration) = a2;
  id v3 = a2;
}

uint64_t sub_100045654()
{
  return swift_retain();
}

uint64_t sub_100045700(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel__generationPendingContentWarning) = a2;
  swift_retain();
  return swift_release();
}

void *sub_100045744()
{
  swift_getKeyPath();
  sub_10004FAA4((unint64_t *)&unk_1001FD2C0, (void (*)(uint64_t))type metadata accessor for QuestionnaireModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  unint64_t result = (void *)swift_release();
  uint64_t v2 = (double *)(v0
                + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel__questionnaireRectRelativeToInputDashboard);
  if ((*(unsigned char *)(v0
                 + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel__questionnaireRectRelativeToInputDashboard
                 + 32) & 1) == 0)
  {
    double v4 = v2[2];
    double v3 = v2[3];
    double v6 = *v2;
    double v5 = v2[1];
    if (qword_1001FAC38 != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for Logger();
    sub_10000EBE8(v7, (uint64_t)qword_1002127A0);
    os_log_type_t v8 = static os_log_type_t.debug.getter();
    uint64_t v9 = Logger.logObject.getter();
    if (os_log_type_enabled(v9, v8))
    {
      uint64_t v10 = swift_slowAlloc();
      *(_DWORD *)uint64_t v10 = 134218752;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v10 + 12) = 2048;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v10 + 22) = 2048;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v10 + 32) = 2048;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v9, v8, "QuestionnaireModel: didSet questionnaireRectRelativeToInputDashboard (rect: %f, %f; %f, %f)",
        (uint8_t *)v10,
        0x2Au);
      swift_slowDealloc();
    }

    unint64_t result = (void *)swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      char v11 = result;
      if ([result respondsToSelector:"showSmartReplyQuestionnaireWithRect:"]) {
        [v11 showSmartReplyQuestionnaireWithRect:v6, v5, v4, v3];
      }
      return (void *)swift_unknownObjectRelease();
    }
  }
  return result;
}

__n128 sub_100045994@<Q0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  sub_10004FAA4((unint64_t *)&unk_1001FD2C0, (void (*)(uint64_t))type metadata accessor for QuestionnaireModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  char v3 = *(unsigned char *)(v1
                + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel__questionnaireRectRelativeToInputDashboard
                + 32);
  __n128 result = *(__n128 *)(v1
                     + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel__questionnaireRectRelativeToInputDashboard);
  long long v5 = *(_OWORD *)(v1
                 + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel__questionnaireRectRelativeToInputDashboard
                 + 16);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 32) = v3;
  return result;
}

__n128 sub_100045A50@<Q0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_10004FAA4((unint64_t *)&unk_1001FD2C0, (void (*)(uint64_t))type metadata accessor for QuestionnaireModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  char v4 = *(unsigned char *)(v3
                + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel__questionnaireRectRelativeToInputDashboard
                + 32);
  __n128 result = *(__n128 *)(v3
                     + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel__questionnaireRectRelativeToInputDashboard);
  long long v6 = *(_OWORD *)(v3
                 + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel__questionnaireRectRelativeToInputDashboard
                 + 16);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v6;
  *(unsigned char *)(a2 + 32) = v4;
  return result;
}

uint64_t sub_100045B0C(uint64_t a1)
{
  sub_10004FE20(a1, (uint64_t)v2);
  swift_getKeyPath();
  sub_10004FAA4((unint64_t *)&unk_1001FD2C0, (void (*)(uint64_t))type metadata accessor for QuestionnaireModel);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  return swift_release();
}

void *sub_100045BE4(uint64_t a1, uint64_t a2)
{
  return sub_100045744();
}

uint64_t sub_100045C28()
{
  return sub_100045C3C((uint64_t)&unk_10018BE48, &OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel__longFormUpdateInProgress);
}

uint64_t sub_100045C3C(uint64_t a1, void *a2)
{
  swift_getKeyPath();
  sub_10004FAA4((unint64_t *)&unk_1001FD2C0, (void (*)(uint64_t))type metadata accessor for QuestionnaireModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(unsigned __int8 *)(v2 + *a2);
}

uint64_t sub_100045CDC()
{
  return swift_release();
}

uint64_t sub_100045DAC()
{
  return sub_100045C3C((uint64_t)&unk_10018BEA0, &OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel__sessionEndRequested);
}

uint64_t sub_100045DC0@<X0>(uint64_t *a1@<X0>, void *a2@<X4>, unsigned char *a3@<X8>)
{
  uint64_t v5 = *a1;
  swift_getKeyPath();
  sub_10004FAA4((unint64_t *)&unk_1001FD2C0, (void (*)(uint64_t))type metadata accessor for QuestionnaireModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  *a3 = *(unsigned char *)(v5 + *a2);
  return result;
}

uint64_t sub_100045E74()
{
  return swift_release();
}

void *sub_100045F44(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  uint64_t v14 = v1;
  sub_10004FAA4((unint64_t *)&unk_1001FD2C0, (void (*)(uint64_t))type metadata accessor for QuestionnaireModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = (void *)swift_release();
  uint64_t v9 = OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel__session;
  if (*(void *)(v1 + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel__session))
  {
    sub_10002FAC0(0);
    if (qword_1001FAC80 != -1) {
      swift_once();
    }
    swift_getKeyPath();
    uint64_t v14 = v1;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t result = *(void **)(v1 + v9);
    if (result)
    {
      id v10 = [result uuid];
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      swift_beginAccess();
      swift_retain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v13 = qword_100212838;
      qword_100212838 = 0x8000000000000000;
      sub_10016F4CC(v2, (uint64_t)v7, isUniquelyReferenced_nonNull_native);
      qword_100212838 = v13;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      return (void *)swift_endAccess();
    }
    else
    {
      __break(1u);
    }
  }
  else if (a1)
  {
    if (qword_1001FAC80 != -1) {
      swift_once();
    }
    id v12 = [a1 uuid];
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    swift_beginAccess();
    sub_10016C3A0((uint64_t)v7);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    swift_endAccess();
    return (void *)swift_release();
  }
  return result;
}

void *sub_100046258()
{
  swift_getKeyPath();
  sub_10004FAA4((unint64_t *)&unk_1001FD2C0, (void (*)(uint64_t))type metadata accessor for QuestionnaireModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel__session);
  id v2 = v1;
  return v1;
}

id sub_100046308@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_10004FAA4((unint64_t *)&unk_1001FD2C0, (void (*)(uint64_t))type metadata accessor for QuestionnaireModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v4 = *(void **)(v3 + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel__session);
  *a2 = v4;

  return v4;
}

uint64_t sub_1000463C8(void **a1)
{
  uint64_t v1 = *a1;
  swift_getKeyPath();
  sub_10004FAA4((unint64_t *)&unk_1001FD2C0, (void (*)(uint64_t))type metadata accessor for QuestionnaireModel);
  id v2 = v1;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();

  return swift_release();
}

void sub_1000464A4(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel__session);
  *(void *)(a1 + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel__session) = a2;
  id v3 = a2;
  sub_100045F44(v2);
}

void sub_100046500(void *a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  *(void *)(v4 + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel__entries) = 0;
  *(unsigned char *)(v4 + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel__hasEntries) = 0;
  *(void *)(v4 + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel__generationPendingContentWarning) = 0;
  uint64_t v7 = v4 + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel__questionnaireRectRelativeToInputDashboard;
  *(_OWORD *)uint64_t v7 = 0u;
  *(_OWORD *)(v7 + 16) = 0u;
  *(unsigned char *)(v7 + 32) = 1;
  *(unsigned char *)(v4 + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel__longFormUpdateInProgress) = 0;
  *(unsigned char *)(v4 + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel__sessionEndRequested) = 0;
  *(void *)(v4 + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel__session) = 0;
  swift_retain();
  ObservationRegistrar.init()();
  *(void *)(v4 + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel__smartReplyConfiguration) = a1;
  id v8 = a1;
  id v9 = [v8 inputContextHistory];
  id v10 = [objc_allocWithZone((Class)TCInputContextHistory) initWithTIInputContextHistory:v9];

  if (v10)
  {
    *(void *)(v4 + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel__inputContextHistory) = v10;
    id v11 = [v8 inputContextHistory];
    id v12 = [v11 threadIdentifier];

    if (v12)
    {
      uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v15 = v14;
    }
    else
    {
      uint64_t v13 = 0;
      uint64_t v15 = 0;
    }
    type metadata accessor for SmartReplyAnalytics();
    swift_allocObject();
    *(void *)(v4 + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel__analyticsInstance) = sub_10011A73C(v13, v15);
    swift_release();
    swift_unknownObjectWeakInit();
    *(_OWORD *)(v4 + 56) = 0u;
    *(_OWORD *)(v4 + 40) = 0u;
    *(_OWORD *)(v4 + 24) = 0u;
    *(unsigned char *)(v4 + 72) = -1;
    *(void *)(v4 + 80) = 0;
    *(unsigned char *)(v4 + 88) = 0;
    *(void *)(v4 + 96) = 0;
    *(unsigned char *)(v4 + 104) = 0;
    *(void *)(v4 + 112) = 0;
    *(unsigned char *)(v4 + 120) = 0;
    swift_unknownObjectRetain();
    ObservationRegistrar.init()();
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    sub_10004FAA4((unint64_t *)&qword_1001FD2A0, (void (*)(uint64_t))type metadata accessor for ToolModel);
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    swift_unknownObjectWeakAssign();
    swift_unknownObjectRelease();
    uint64_t v17 = swift_getKeyPath();
    __chkstk_darwin(v17);
    swift_retain_n();
    id v18 = a3;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    swift_release();

    sub_10004DEBC();
    swift_release();

    swift_unknownObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1000468C8(uint64_t a1)
{
  swift_getKeyPath();
  sub_10004FAA4((unint64_t *)&unk_1001FD2C0, (void (*)(uint64_t))type metadata accessor for QuestionnaireModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  unint64_t v3 = *(void *)(a1 + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel__entries);
  if (v3)
  {
    if (v3 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
      if (v4) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v4)
      {
LABEL_4:
        uint64_t result = sub_100129208(0, v4 & ~(v4 >> 63), 0);
        if (v4 < 0)
        {
          __break(1u);
          return result;
        }
        if ((v3 & 0xC000000000000001) != 0)
        {
          uint64_t v5 = 0;
          do
          {
            uint64_t v6 = specialized _ArrayBuffer._getElementSlowPath(_:)();
            swift_getKeyPath();
            sub_10004FAA4(&qword_1001FD2E8, (void (*)(uint64_t))type metadata accessor for QuestionnaireEntry);
            ObservationRegistrar.access<A, B>(_:keyPath:)();
            swift_release();
            uint64_t v7 = *(void *)(v6 + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireEntry__selectedAnswer);
            uint64_t v8 = *(void *)(v6 + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireEntry__selectedAnswer + 8);
            swift_bridgeObjectRetain();
            swift_unknownObjectRelease();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              sub_100129208(0, _swiftEmptyArrayStorage[2] + 1, 1);
            }
            unint64_t v10 = _swiftEmptyArrayStorage[2];
            unint64_t v9 = _swiftEmptyArrayStorage[3];
            if (v10 >= v9 >> 1) {
              sub_100129208(v9 > 1, v10 + 1, 1);
            }
            ++v5;
            _swiftEmptyArrayStorage[2] = v10 + 1;
            id v11 = &_swiftEmptyArrayStorage[2 * v10];
            v11[4] = v7;
            v11[5] = v8;
          }
          while (v4 != v5);
        }
        else
        {
          id v12 = (uint64_t *)(v3 + 32);
          do
          {
            uint64_t v13 = *v12;
            swift_getKeyPath();
            sub_10004FAA4(&qword_1001FD2E8, (void (*)(uint64_t))type metadata accessor for QuestionnaireEntry);
            swift_retain();
            ObservationRegistrar.access<A, B>(_:keyPath:)();
            swift_release();
            uint64_t v15 = *(void *)(v13 + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireEntry__selectedAnswer);
            uint64_t v14 = *(void *)(v13 + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireEntry__selectedAnswer + 8);
            swift_bridgeObjectRetain();
            swift_release();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              sub_100129208(0, _swiftEmptyArrayStorage[2] + 1, 1);
            }
            unint64_t v17 = _swiftEmptyArrayStorage[2];
            unint64_t v16 = _swiftEmptyArrayStorage[3];
            if (v17 >= v16 >> 1) {
              sub_100129208(v16 > 1, v17 + 1, 1);
            }
            _swiftEmptyArrayStorage[2] = v17 + 1;
            id v18 = &_swiftEmptyArrayStorage[2 * v17];
            v18[4] = v15;
            v18[5] = v14;
            ++v12;
            --v4;
          }
          while (v4);
        }
        swift_release();
      }
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100046C44(uint64_t a1)
{
  uint64_t v2 = sub_1000063C0(&qword_1001FF820);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TaskPriority();
  uint64_t v6 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
  v6(v4, 1, 1, v5);
  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = 0;
  v7[3] = 0;
  v7[4] = a1;
  swift_retain();
  sub_1001228D0((uint64_t)v4, (uint64_t)&unk_1001FD350, (uint64_t)v7);
  swift_release();
  v6(v4, 1, 1, v5);
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = 0;
  v8[3] = 0;
  v8[4] = a1;
  swift_retain();
  sub_1001228D0((uint64_t)v4, (uint64_t)&unk_1001FD360, (uint64_t)v8);
  return swift_release();
}

uint64_t sub_100046DB8()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_100027FEC;
  return sub_10004BCC0();
}

uint64_t sub_100046E48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  return _swift_task_switch(sub_100046E68, 0, 0);
}

uint64_t sub_100046E68()
{
  type metadata accessor for MainActor();
  *(void *)(v0 + 24) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100046EFC, v2, v1);
}

uint64_t sub_100046EFC()
{
  swift_release();
  withObservationTracking<A>(_:onChange:)();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100046F9C()
{
  v1[20] = v0;
  sub_1000063C0(&qword_1001FF820);
  v1[21] = swift_task_alloc();
  v1[22] = type metadata accessor for MainActor();
  v1[23] = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[24] = v3;
  v1[25] = v2;
  return _swift_task_switch(sub_100047068, v3, v2);
}

uint64_t sub_100047068()
{
  if (qword_1001FAC38 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000EBE8(v1, (uint64_t)qword_1002127A0);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Requested session start...", v4, 2u);
    swift_slowDealloc();
  }

  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  v0[26] = Strong;
  if (Strong)
  {
    uint64_t v6 = (void *)Strong;
    uint64_t v7 = v0[20];
    id v8 = [objc_allocWithZone((Class)WTSession) initWithType:2 textViewDelegate:0];
    v0[27] = v8;
    swift_getKeyPath();
    uint64_t v9 = swift_task_alloc();
    *(void *)(v9 + 16) = v7;
    *(void *)(v9 + 24) = v8;
    v0[28] = OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel___observationRegistrar;
    v0[16] = v7;
    v0[29] = sub_10004FAA4((unint64_t *)&unk_1001FD2C0, (void (*)(uint64_t))type metadata accessor for QuestionnaireModel);
    id v10 = v8;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    v0[30] = 0;
    swift_release();

    swift_task_dealloc();
    [v10 setCompositionSessionType:11];
    v0[2] = v0;
    v0[7] = v0 + 15;
    v0[3] = sub_100047420;
    uint64_t v11 = swift_continuation_init();
    v0[10] = _NSConcreteStackBlock;
    v0[11] = 0x40000000;
    v0[12] = sub_10016353C;
    v0[13] = &unk_1001EB9A0;
    v0[14] = v11;
    [v6 willBeginWritingToolsSession:v10 requestContexts:v0 + 10];
    return _swift_continuation_await(v0 + 2);
  }
  else
  {
    swift_release();
    id v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v14 = 0;
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "Unexpected nil delegate when starting session", v14, 2u);
      swift_slowDealloc();
    }

    swift_task_dealloc();
    uint64_t v15 = (uint64_t (*)(void))v0[1];
    return v15();
  }
}

uint64_t sub_100047420()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 200);
  uint64_t v2 = *(void *)(*(void *)v0 + 192);
  return _swift_task_switch(sub_100047528, v2, v1);
}

uint64_t sub_100047528()
{
  uint64_t v1 = *(void **)(v0 + 216);
  uint64_t v2 = *(void *)(v0 + 160);
  swift_release();
  uint64_t v3 = *(void *)(v0 + 120);
  swift_getKeyPath();
  uint64_t v4 = swift_task_alloc();
  *(void *)(v4 + 16) = v2;
  *(void *)(v4 + 24) = v3;
  *(void *)(v0 + 136) = v2;
  sub_10004FAA4((unint64_t *)&qword_1001FD2A0, (void (*)(uint64_t))type metadata accessor for ToolModel);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();

  swift_getKeyPath();
  *(void *)(v0 + 144) = v2;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  if (*(void *)(v2 + 80))
  {
    uint64_t v7 = *(void **)(v0 + 208);
    uint64_t v6 = *(void *)(v0 + 216);
    uint64_t v8 = *(void *)(v0 + 160);
    sub_1000085FC(0, &qword_1001FD300);
    swift_bridgeObjectRetain();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v7 didBeginWritingToolsSession:v6 contexts:isa];

    [v7 writingToolsSession:v6 didReceiveAction:3];
    swift_getKeyPath();
    *(void *)(v0 + 152) = v8;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    id v10 = [*(id *)(v8 + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel__smartReplyConfiguration) baseResponse];
    if (v10)
    {
    }
    else
    {
      if ([*(id *)(v0 + 208) respondsToSelector:"beginTextPlaceholder"]) {
        [*(id *)(v0 + 208) beginTextPlaceholder];
      }
      uint64_t v11 = *(void *)(v0 + 208);
      uint64_t v12 = *(void *)(v0 + 168);
      uint64_t v13 = *(void *)(v0 + 160);
      uint64_t v14 = type metadata accessor for TaskPriority();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v12, 1, 1, v14);
      swift_retain();
      swift_unknownObjectRetain();
      uint64_t v15 = static MainActor.shared.getter();
      unint64_t v16 = (void *)swift_allocObject();
      v16[2] = v15;
      v16[3] = &protocol witness table for MainActor;
      v16[4] = v13;
      v16[5] = v11;
      sub_1001228D0(v12, (uint64_t)&unk_1001FD310, (uint64_t)v16);
      swift_release();
    }
    uint64_t v17 = *(void **)(v0 + 216);
    uint64_t v18 = *(void *)(v0 + 168);
    uint64_t v19 = *(void *)(v0 + 160);
    uint64_t v20 = type metadata accessor for TaskPriority();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v18, 1, 1, v20);
    swift_retain();
    uint64_t v21 = static MainActor.shared.getter();
    uint64_t v22 = (void *)swift_allocObject();
    void v22[2] = v21;
    v22[3] = &protocol witness table for MainActor;
    v22[4] = v19;
    sub_1001228D0(v18, (uint64_t)&unk_1001FD320, (uint64_t)v22);
    swift_unknownObjectRelease();
    swift_release();

    swift_task_dealloc();
    char v23 = *(uint64_t (**)(void))(v0 + 8);
    return v23();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10004790C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[14] = a4;
  v5[15] = a5;
  v5[16] = type metadata accessor for MainActor();
  v5[17] = static MainActor.shared.getter();
  uint64_t v6 = (void *)swift_task_alloc();
  v5[18] = v6;
  void *v6 = v5;
  v6[1] = sub_1000479BC;
  return sub_10004AA4C();
}

uint64_t sub_1000479BC(uint64_t a1)
{
  *(void *)(*(void *)v1 + 152) = a1;
  swift_task_dealloc();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100047B00, v3, v2);
}

uint64_t sub_100047B00()
{
  uint64_t v1 = v0[19];
  swift_release();
  uint64_t v2 = *(void *)(v1 + 24);
  if (v2)
  {
    uint64_t v3 = v0[19];
    if ((*(unsigned char *)(v3 + 40) & 1) == 0)
    {
      uint64_t v10 = *(void *)(v1 + 16);
      uint64_t v11 = *(void *)(v3 + 32);
      unsigned __int8 v12 = [(id)v0[15] respondsToSelector:"endTextPlaceholderAndWillInsertText:completion:"];
      uint64_t v13 = v0[19];
      if ((v12 & 1) == 0) {
        goto LABEL_12;
      }
      uint64_t v15 = v0[14];
      uint64_t v14 = (void *)v0[15];
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      String.text.getter();
      uint64_t v16 = String.count.getter();
      swift_bridgeObjectRelease();
      uint64_t v17 = (void *)swift_allocObject();
      v17[2] = v15;
      v17[3] = v10;
      v17[4] = v2;
      v17[5] = v11;
      v17[6] = v13;
      v0[12] = sub_10004FE08;
      v0[13] = v17;
      v0[8] = _NSConcreteStackBlock;
      v0[9] = 1107296256;
      v0[10] = sub_100048B2C;
      v0[11] = &unk_1001EBAF8;
      uint64_t v18 = _Block_copy(v0 + 8);
      swift_retain();
      swift_retain();
      swift_retain();
      [v14 endTextPlaceholderAndWillInsertText:v16 > 0 completion:v18];
      _Block_release(v18);
      swift_release();
      goto LABEL_11;
    }
  }
  if (qword_1001FAC38 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_10000EBE8(v4, (uint64_t)qword_1002127A0);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Unexpected base generation with unset text or warnings", v7, 2u);
    swift_slowDealloc();
  }
  uint64_t v8 = (void *)v0[15];

  if ([v8 respondsToSelector:"endTextPlaceholderAndWillInsertText:completion:"])
  {
    v0[6] = nullsub_1;
    v0[7] = 0;
    v0[2] = _NSConcreteStackBlock;
    v0[3] = 1107296256;
    v0[4] = sub_100048B2C;
    v0[5] = &unk_1001EBAA8;
    uint64_t v9 = _Block_copy(v0 + 2);
    [(id)swift_unknownObjectRetain() endTextPlaceholderAndWillInsertText:0 completion:v9];
    _Block_release(v9);
LABEL_11:
    swift_release();
    swift_unknownObjectRelease();
  }
LABEL_12:
  swift_release();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
  return v19();
}

void sub_100047E4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_getKeyPath();
  sub_10004FAA4((unint64_t *)&unk_1001FD2C0, (void (*)(uint64_t))type metadata accessor for QuestionnaireModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  id v8 = *(id *)(a1 + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel__smartReplyConfiguration);
  String.text.getter();
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v8 setBaseResponse:v9];

  if (a4 == 2)
  {
    if (qword_1001FAC38 != -1) {
      swift_once();
    }
    uint64_t v17 = type metadata accessor for Logger();
    sub_10000EBE8(v17, (uint64_t)qword_1002127A0);
    uint64_t v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v20 = 0;
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "Ending smart replies due to flagged input", v20, 2u);
      swift_slowDealloc();
    }

    id v21 = objc_allocWithZone((Class)NSError);
    NSString v15 = String._bridgeToObjectiveC()();
    id v16 = [v21 initWithDomain:v15 code:4 userInfo:0];
    goto LABEL_13;
  }
  if (a4 == 1)
  {
    if (qword_1001FAC38 != -1) {
      swift_once();
    }
    uint64_t v10 = type metadata accessor for Logger();
    sub_10000EBE8(v10, (uint64_t)qword_1002127A0);
    uint64_t v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "Ending smart replies due to flagged output", v13, 2u);
      swift_slowDealloc();
    }

    id v14 = objc_allocWithZone((Class)NSError);
    NSString v15 = String._bridgeToObjectiveC()();
    id v16 = [v14 initWithDomain:v15 code:2 userInfo:0];
LABEL_13:
    uint64_t v22 = v16;

    sub_10002FAC0((uint64_t)v22);
    goto LABEL_15;
  }
  sub_10004DA04(a5);
LABEL_15:
  swift_getKeyPath();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  unint64_t v23 = *(void *)(a1 + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel__entries);
  if (!v23) {
    return;
  }
  if (v23 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v28 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v28) {
      return;
    }
  }
  else if (*(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    return;
  }
  if (qword_1001FAC38 != -1) {
    swift_once();
  }
  uint64_t v24 = type metadata accessor for Logger();
  sub_10000EBE8(v24, (uint64_t)qword_1002127A0);
  uint64_t v25 = Logger.logObject.getter();
  os_log_type_t v26 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v25, v26))
  {
    Swift::String v27 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)Swift::String v27 = 0;
    _os_log_impl((void *)&_mh_execute_header, v25, v26, "Ending questionnaire after longform base reply due to no questions", v27, 2u);
    swift_slowDealloc();
  }

  sub_100048D04(1, 0, 0, 0);
}

uint64_t sub_1000482EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[9] = a4;
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  v4[10] = v5;
  v4[11] = *(void *)(v5 - 8);
  v4[12] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for DispatchQoS();
  v4[13] = v6;
  v4[14] = *(void *)(v6 - 8);
  v4[15] = swift_task_alloc();
  v4[16] = type metadata accessor for MainActor();
  v4[17] = static MainActor.shared.getter();
  uint64_t v7 = (void *)swift_task_alloc();
  v4[18] = v7;
  *uint64_t v7 = v4;
  v7[1] = sub_100048454;
  return sub_10004973C();
}

uint64_t sub_100048454(uint64_t a1)
{
  *(void *)(*(void *)v1 + 152) = a1;
  swift_task_dealloc();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100048598, v3, v2);
}

uint64_t sub_100048598()
{
  uint64_t v1 = v0[19];
  uint64_t v2 = v0[15];
  uint64_t v3 = v0[12];
  uint64_t v12 = v0[14];
  uint64_t v13 = v0[13];
  uint64_t v5 = v0[10];
  uint64_t v4 = v0[11];
  uint64_t v6 = v0[9];
  swift_release();
  sub_1000085FC(0, (unint64_t *)&qword_1001FF440);
  uint64_t v7 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v6;
  *(void *)(v8 + 24) = v1;
  v0[6] = sub_10004FA9C;
  v0[7] = v8;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = 1107296256;
  v0[4] = sub_100048B2C;
  v0[5] = &unk_1001EBA30;
  uint64_t v9 = _Block_copy(v0 + 2);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  v0[8] = _swiftEmptyArrayStorage;
  sub_10004FAA4((unint64_t *)&unk_1001FD330, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000063C0((uint64_t *)&unk_100201550);
  sub_10004FAEC();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v9);

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v2, v13);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

void sub_1000487C8(uint64_t a1, unint64_t a2)
{
  swift_getKeyPath();
  sub_10004FAA4((unint64_t *)&unk_1001FD2C0, (void (*)(uint64_t))type metadata accessor for QuestionnaireModel);
  swift_bridgeObjectRetain();
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_bridgeObjectRelease();
  swift_release();
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t KeyPath = swift_getKeyPath();
  __chkstk_darwin(KeyPath);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  if (v4 >= 1)
  {
    sub_10004DEBC();
    withObservationTracking<A>(_:onChange:)();
  }
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v6) {
      return;
    }
  }
  else if (*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    return;
  }
  swift_getKeyPath();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  id v7 = [*(id *)(a1 + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel__smartReplyConfiguration) baseResponse];
  if (v7)
  {

    if (qword_1001FAC38 != -1) {
      swift_once();
    }
    uint64_t v8 = type metadata accessor for Logger();
    sub_10000EBE8(v8, (uint64_t)qword_1002127A0);
    uint64_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Ending questionnaire due to no questions", v11, 2u);
      swift_slowDealloc();
    }

    sub_100048D04(1, 0, 0, 0);
  }
}

uint64_t sub_100048B2C(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

void sub_100048B70()
{
  if (qword_1001FAC38 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_10000EBE8(v0, (uint64_t)qword_1002127A0);
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Requested session revert...", v3, 2u);
    swift_slowDealloc();
  }

  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectRelease();
  if (!Strong)
  {
    oslog = Logger.logObject.getter();
    uint64_t v5 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, (os_log_type_t)v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, (os_log_type_t)v5, "Unexpected nil delegate when reverting", v6, 2u);
      swift_slowDealloc();
    }
  }
}

void sub_100048D04(char a1, uint64_t a2, void (*a3)(void), uint64_t a4)
{
  uint64_t v5 = v4;
  if (qword_1001FAC38 != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for Logger();
  sub_10000EBE8(v10, (uint64_t)qword_1002127A0);
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "Requested session end...", v13, 2u);
    swift_slowDealloc();
  }

  swift_getKeyPath();
  aBlock[0] = v5;
  sub_10004FAA4((unint64_t *)&unk_1001FD2C0, (void (*)(uint64_t))type metadata accessor for QuestionnaireModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v14 = *(void **)(v5 + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel__session);
  if (v14)
  {
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      id v16 = (void *)Strong;
      swift_getKeyPath();
      aBlock[0] = v5;
      id v35 = v14;
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      if (*(unsigned char *)(v5 + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel__longFormUpdateInProgress) == 1
        && (swift_getKeyPath(),
            aBlock[0] = v5,
            ObservationRegistrar.access<A, B>(_:keyPath:)(),
            swift_release(),
            !*(void *)(v5
                       + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel__generationPendingContentWarning)))
      {
        unint64_t v30 = Logger.logObject.getter();
        os_log_type_t v31 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v30, v31))
        {
          uint64_t v32 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v32 = 0;
          _os_log_impl((void *)&_mh_execute_header, v30, v31, "Requested session end when update in progress, setting flag", v32, 2u);
          swift_slowDealloc();
        }

        uint64_t KeyPath = swift_getKeyPath();
        __chkstk_darwin(KeyPath);
        aBlock[0] = v5;
        ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
        uint64_t v34 = swift_release();
        if (a3) {
          ((void (*)(uint64_t))a3)(v34);
        }

        swift_unknownObjectRelease();
      }
      else
      {
        uint64_t v17 = Logger.logObject.getter();
        os_log_type_t v18 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v17, v18))
        {
          os_log_type_t v19 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)os_log_type_t v19 = 0;
          _os_log_impl((void *)&_mh_execute_header, v17, v18, "Requested session end with pending content", v19, 2u);
          swift_slowDealloc();
        }

        if ([v16 respondsToSelector:"endTextPlaceholderAndWillInsertText:completion:"])
        {
          uint64_t v20 = swift_allocObject();
          *(void *)(v20 + 16) = a2;
          *(void *)(v20 + 24) = v5;
          *(unsigned char *)(v20 + 32) = a1;
          *(void *)(v20 + 40) = v16;
          *(void *)(v20 + 48) = v35;
          *(void *)(v20 + 56) = a3;
          *(void *)(v20 + 64) = a4;
          aBlock[4] = sub_10004EEEC;
          aBlock[5] = v20;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          aBlock[2] = sub_100048B2C;
          aBlock[3] = &unk_1001EB978;
          id v21 = _Block_copy(aBlock);
          swift_unknownObjectRetain_n();
          id v22 = v35;
          swift_errorRetain();
          swift_retain();
          sub_10004EF18((uint64_t)a3);
          swift_retain();
          [v16 endTextPlaceholderAndWillInsertText:0 completion:v21];
          _Block_release(v21);
          swift_release();
          swift_unknownObjectRelease_n();

          swift_release();
        }
        else
        {
          swift_unknownObjectRelease();
        }
      }
    }
    else
    {
      id v26 = v14;
      Swift::String v27 = Logger.logObject.getter();
      os_log_type_t v28 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v27, v28))
      {
        unint64_t v29 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v29 = 0;
        _os_log_impl((void *)&_mh_execute_header, v27, v28, "Unexpected nil delegate when ending session", v29, 2u);
        swift_slowDealloc();
      }

      if (a3) {
        a3();
      }
    }
  }
  else
  {
    unint64_t v23 = Logger.logObject.getter();
    os_log_type_t v24 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v25 = 0;
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "Unexpected nil session when ending session", v25, 2u);
      swift_slowDealloc();
    }

    if (a3) {
      a3();
    }
  }
}

uint64_t sub_10004930C(uint64_t a1, uint64_t a2, char a3, void *a4, uint64_t a5, uint64_t (*a6)(uint64_t))
{
  if (a1)
  {
    swift_errorRetain();
    if (qword_1001FAC38 != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for Logger();
    sub_10000EBE8(v7, (uint64_t)qword_1002127A0);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      uint64_t v25 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v10 = 138412290;
      swift_errorRetain();
      uint64_t v26 = _swift_stdlib_bridgeErrorToNSError();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v25 = v26;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Ending writing tools with error: %@", v10, 0xCu);
      sub_1000063C0(&qword_1001FED90);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      id v21 = (void *)Strong;
      id v22 = (void *)_convertErrorToNSError(_:)();
      [v21 endWritingToolsWithError:v22];
      swift_errorRelease();
      swift_unknownObjectRelease();
    }
    else
    {
      swift_errorRelease();
    }
  }
  else
  {
    BOOL v14 = a3 == 2;
    if (qword_1001FAC38 != -1) {
      swift_once();
    }
    char v15 = v14 | a3;
    uint64_t v16 = type metadata accessor for Logger();
    sub_10000EBE8(v16, (uint64_t)qword_1002127A0);
    uint64_t v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v17, v18))
    {
      os_log_type_t v19 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)os_log_type_t v19 = 67109120;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Ending session accepted: %{BOOL}d", v19, 8u);
      swift_slowDealloc();
    }

    [a4 didEndWritingToolsSession:a5 accepted:v15 & 1];
    [a4 endWritingTools];
  }
  uint64_t KeyPath = swift_getKeyPath();
  __chkstk_darwin(KeyPath);
  sub_10004FAA4((unint64_t *)&unk_1001FD2C0, (void (*)(uint64_t))type metadata accessor for QuestionnaireModel);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  uint64_t result = swift_release();
  if (a6) {
    return a6(result);
  }
  return result;
}

uint64_t sub_10004973C()
{
  v1[2] = v0;
  type metadata accessor for MainActor();
  v1[3] = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[4] = v3;
  v1[5] = v2;
  return _swift_task_switch(sub_1000497D4, v3, v2);
}

uint64_t sub_1000497D4()
{
  if (qword_1001FAC38 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000EBE8(v1, (uint64_t)qword_1002127A0);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Requested questionnaire generation...", v4, 2u);
    swift_slowDealloc();
  }

  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_100049920;
  return sub_100049AAC();
}

uint64_t sub_100049920(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 56) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 40);
  uint64_t v4 = *(void *)(v2 + 32);
  return _swift_task_switch(sub_100049A48, v4, v3);
}

uint64_t sub_100049A48()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 56);
  return v1(v2);
}

uint64_t sub_100049AAC()
{
  v1[21] = v0;
  uint64_t v2 = type metadata accessor for Logger();
  v1[22] = v2;
  v1[23] = *(void *)(v2 - 8);
  v1[24] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for TextCompositionClient.TCDocumentType();
  v1[25] = v3;
  v1[26] = *(void *)(v3 - 8);
  v1[27] = swift_task_alloc();
  type metadata accessor for MainActor();
  v1[28] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[29] = v5;
  v1[30] = v4;
  return _swift_task_switch(sub_100049BFC, v5, v4);
}

void *sub_100049BFC()
{
  uint64_t v1 = v0[21];
  swift_getKeyPath();
  v0[14] = v1;
  v0[31] = OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel___observationRegistrar;
  v0[32] = sub_10004FAA4((unint64_t *)&unk_1001FD2C0, (void (*)(uint64_t))type metadata accessor for QuestionnaireModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  id v2 = [*(id *)(v1 + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel__smartReplyConfiguration) entryPoint];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v5 = v4;
  }
  else
  {
    uint64_t v20 = 0;
    unint64_t v5 = 0xE000000000000000;
  }
  unint64_t v21 = v5;
  v0[33] = v5;
  uint64_t v7 = v0[26];
  uint64_t v6 = v0[27];
  uint64_t v8 = v0[25];
  uint64_t v9 = v0[21];
  swift_getKeyPath();
  v0[12] = v9;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  v0[34] = OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel__analyticsInstance;
  uint64_t v10 = (void *)IASignalSmartRepliesQuestionnaireRequested;
  swift_retain();
  sub_10011A874(v10);
  swift_release();
  v0[35] = [objc_allocWithZone((Class)type metadata accessor for TextCompositionClient()) init];
  swift_getKeyPath();
  v0[13] = v9;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v11 = *(void **)(v9 + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel__inputContextHistory);
  v0[36] = v11;
  (*(void (**)(uint64_t, void, uint64_t))(v7 + 104))(v6, enum case for TextCompositionClient.TCDocumentType.mail(_:), v8);
  sub_1000063C0(&qword_1001FD2D8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10018A720;
  *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 40) = v13;
  swift_getKeyPath();
  v0[15] = v9;
  sub_10004FAA4((unint64_t *)&qword_1001FD2A0, (void (*)(uint64_t))type metadata accessor for ToolModel);
  id v14 = v11;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t result = *(void **)(v9 + 24);
  if (result)
  {
    unsigned int v16 = [result pid];
    *(void *)(inited + 72) = &type metadata for Int32;
    *(_DWORD *)(inited + 48) = v16;
    unint64_t v17 = sub_1000051F0(inited);
    v0[37] = v17;
    id v22 = (uint64_t (*)(id, uint64_t, uint64_t, unint64_t, unint64_t))((char *)&async function pointer to dispatch thunk of TextCompositionClient.requestUserQuestionnaire(with:documentType:replyType:options:)
                                                                                           + async function pointer to dispatch thunk of TextCompositionClient.requestUserQuestionnaire(with:documentType:replyType:options:));
    os_log_type_t v18 = (void *)swift_task_alloc();
    v0[38] = v18;
    void *v18 = v0;
    v18[1] = sub_100049F94;
    uint64_t v19 = v0[27];
    return (void *)v22(v14, v19, v20, v21, v17);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100049F94(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = (void *)*v3;
  unint64_t v5 = (void *)*v3;
  v5[39] = a1;
  v5[40] = a2;
  v5[41] = v2;
  swift_task_dealloc();
  uint64_t v6 = (void *)v4[36];
  uint64_t v7 = (void *)v4[35];
  (*(void (**)(void, void))(v4[26] + 8))(v4[27], v4[25]);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t v8 = v4[30];
  uint64_t v9 = v4[29];
  if (v2) {
    uint64_t v10 = sub_10004A788;
  }
  else {
    uint64_t v10 = sub_10004A1A0;
  }
  return _swift_task_switch(v10, v9, v8);
}

void sub_10004A1A0()
{
  uint64_t v42 = v0;
  swift_release();
  if (qword_1001FAC38 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void **)(v0 + 312);
  uint64_t v3 = *(void *)(v0 + 184);
  uint64_t v2 = *(void *)(v0 + 192);
  uint64_t v4 = *(void *)(v0 + 176);
  uint64_t v5 = sub_10000EBE8(v4, (uint64_t)qword_1002127A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v5, v4);
  id v6 = v1;
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  BOOL v9 = os_log_type_enabled(v7, v8);
  uint64_t v10 = *(void **)(v0 + 312);
  if (!v9)
  {

    uint64_t v7 = *(NSObject **)(v0 + 312);
    Swift::String v38 = v7;
    goto LABEL_9;
  }
  uint64_t v11 = (uint8_t *)swift_slowAlloc();
  *(_DWORD *)uint64_t v11 = 134217984;
  id v12 = [v10 entries];
  if (v12)
  {
    uint64_t v13 = v12;
    sub_1000085FC(0, (unint64_t *)&unk_1001FD2F0);
    unint64_t v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    char v15 = *(void **)(v0 + 312);
    if (v14 >> 62) {
      goto LABEL_25;
    }
    uint64_t v16 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
    while (1)
    {

      unint64_t v17 = *(void **)(v0 + 312);
      swift_bridgeObjectRelease();
      *(void *)(v0 + 160) = v16;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Received %ld questions", v11, 0xCu);
      swift_slowDealloc();
      Swift::String v38 = *(NSObject **)(v0 + 312);
LABEL_9:
      uint64_t v11 = *(uint8_t **)(v0 + 320);
      uint64_t v18 = *(void *)(v0 + 192);
      uint64_t v19 = *(void *)(v0 + 184);
      char v15 = *(void **)(v0 + 176);
      uint64_t v20 = *(void *)(v0 + 168);

      (*(void (**)(uint64_t, void *))(v19 + 8))(v18, v15);
      swift_getKeyPath();
      *(void *)(v0 + 144) = v20;
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      swift_retain();
      os_log_type_t v8 = v38;
      sub_10011C630((unint64_t *)v11, v38);
      swift_release();
      swift_bridgeObjectRelease();
      id v21 = [v38 entries];
      if (!v21)
      {
        __break(1u);
        goto LABEL_27;
      }
      id v22 = v21;
      sub_1000085FC(0, (unint64_t *)&unk_1001FD2F0);
      unint64_t v23 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (v23 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v24 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v24)
        {
LABEL_20:
          Swift::String v36 = *(void **)(v0 + 312);
          swift_bridgeObjectRelease();

          id v35 = _swiftEmptyArrayStorage;
          goto LABEL_21;
        }
      }
      else
      {
        uint64_t v24 = *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (!v24) {
          goto LABEL_20;
        }
      }
      uint64_t v41 = _swiftEmptyArrayStorage;
      uint64_t v7 = &v41;
      specialized ContiguousArray.reserveCapacity(_:)();
      if ((v24 & 0x8000000000000000) == 0) {
        break;
      }
      __break(1u);
LABEL_25:
      swift_bridgeObjectRetain();
      uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    uint64_t v25 = 0;
    unint64_t v39 = v23 & 0xC000000000000001;
    unint64_t v40 = v23;
    do
    {
      if (v39) {
        id v26 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v26 = *(id *)(v23 + 8 * v25 + 32);
      }
      Swift::String v27 = v26;
      ++v25;
      type metadata accessor for QuestionnaireEntry();
      uint64_t v28 = swift_allocObject();
      UUID.init()();
      unint64_t v29 = (void *)(v28 + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireEntry__selectedAnswer);
      void *v29 = 0;
      v29[1] = 0;
      unint64_t v30 = (void *)(v28 + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireEntry__userCreatedAnswer);
      *unint64_t v30 = 0;
      v30[1] = 0;
      uint64_t v31 = v28 + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireEntry__selectedIndex;
      *(void *)uint64_t v31 = 0;
      *(unsigned char *)(v31 + 8) = 1;
      *(void *)(v28 + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireEntry_maxStringLength) = 10;
      ObservationRegistrar.init()();
      *(void *)(v28 + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireEntry_entry) = v27;
      swift_getKeyPath();
      uint64_t v32 = (void *)swift_task_alloc();
      v32[3] = 0;
      v32[4] = 0;
      v32[2] = v28;
      *(void *)(v0 + 152) = v28;
      sub_10004FAA4(&qword_1001FD2E8, (void (*)(uint64_t))type metadata accessor for QuestionnaireEntry);
      id v33 = v27;
      ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();

      swift_release();
      swift_task_dealloc();
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      unint64_t v23 = v40;
    }
    while (v24 != v25);
    uint64_t v34 = *(void **)(v0 + 312);
    id v35 = v41;
    swift_bridgeObjectRelease();

LABEL_21:
    swift_task_dealloc();
    swift_task_dealloc();
    Swift::String v37 = *(void (**)(void *))(v0 + 8);
    v37(v35);
  }
  else
  {
LABEL_27:

    __break(1u);
  }
}

uint64_t sub_10004A788()
{
  uint64_t v1 = v0[41];
  swift_release();
  swift_errorRetain();
  sub_10002FAC0(v1);
  swift_errorRelease();
  if (qword_1001FAC38 != -1) {
    swift_once();
  }
  sub_10000EBE8(v0[22], (uint64_t)qword_1002127A0);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138412290;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    v0[17] = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v5 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Error generating questionnaire: %@", v4, 0xCu);
    sub_1000063C0(&qword_1001FED90);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v7 = v0[21];

  swift_getKeyPath();
  v0[16] = v7;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  os_log_type_t v8 = (void *)IASignalSmartRepliesQuestionnaireNotShown;
  swift_retain();
  unint64_t v9 = sub_1000051F0((uint64_t)_swiftEmptyArrayStorage);
  sub_10011B080(v8, v9);
  swift_errorRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void *))v0[1];
  return v10(_swiftEmptyArrayStorage);
}

uint64_t sub_10004AA4C()
{
  v1[36] = v0;
  uint64_t v2 = type metadata accessor for Logger();
  v1[37] = v2;
  v1[38] = *(void *)(v2 - 8);
  v1[39] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for TextCompositionClient.TCDocumentType();
  v1[40] = v3;
  v1[41] = *(void *)(v3 - 8);
  v1[42] = swift_task_alloc();
  type metadata accessor for MainActor();
  v1[43] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[44] = v5;
  v1[45] = v4;
  return _swift_task_switch(sub_10004AB9C, v5, v4);
}

void *sub_10004AB9C()
{
  uint64_t v41 = v0;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectRelease();
  if (Strong)
  {
    uint64_t v2 = v0[36];
    swift_getKeyPath();
    uint64_t v3 = OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel___observationRegistrar;
    v0[27] = v2;
    v0[46] = v3;
    v0[47] = sub_10004FAA4((unint64_t *)&unk_1001FD2C0, (void (*)(uint64_t))type metadata accessor for QuestionnaireModel);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    id v4 = [*(id *)(v2 + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel__smartReplyConfiguration) entryPoint];
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v8 = v7;
    }
    else
    {
      uint64_t v6 = 0;
      unint64_t v8 = 0xE000000000000000;
    }
    v0[48] = v8;
    if (qword_1001FAC38 != -1) {
      swift_once();
    }
    char v15 = v0 + 33;
    v0[49] = sub_10000EBE8(v0[37], (uint64_t)qword_1002127A0);
    swift_bridgeObjectRetain_n();
    uint64_t v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.default.getter();
    unint64_t v39 = v8;
    uint64_t v36 = v6;
    if (os_log_type_enabled(v16, v17))
    {
      unint64_t v18 = 0xEC000000676E6972;
      uint64_t v19 = 0x74535F7974706D45;
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      uint64_t v40 = swift_slowAlloc();
      *(_DWORD *)uint64_t v20 = 136380675;
      if (v6 || v39 != 0xE000000000000000)
      {
        if ((_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
        {
          v0[19] = v6;
          v0[20] = v39;
          sub_10002DF54();
          v0[34] = StringProtocol.hash.getter();
          uint64_t v19 = dispatch thunk of CustomStringConvertible.description.getter();
          unint64_t v18 = v21;
        }
        char v15 = v0 + 33;
      }
      v0[35] = sub_100021444(v19, v18, &v40);
      id v22 = v0 + 36;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "Requested long form base generation for entry point hash: %{private}s", v20, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
      id v22 = v0 + 36;
    }
    uint64_t v23 = *v22;
    sub_1000063C0(&qword_1001FD2D8);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10018A720;
    *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(inited + 40) = v25;
    swift_getKeyPath();
    void *v15 = v23;
    sub_10004FAA4((unint64_t *)&qword_1001FD2A0, (void (*)(uint64_t))type metadata accessor for ToolModel);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t result = *(void **)(v23 + 24);
    if (result)
    {
      uint64_t v26 = v0[41];
      uint64_t v37 = v0[42];
      uint64_t v27 = v0[40];
      uint64_t v28 = v0[36];
      unsigned int v29 = [result pid];
      *(void *)(inited + 72) = &type metadata for Int32;
      *(_DWORD *)(inited + 48) = v29;
      unint64_t v30 = sub_1000051F0(inited);
      v0[50] = v30;
      swift_getKeyPath();
      v0[29] = v28;
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      v0[51] = OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel__analyticsInstance;
      uint64_t v31 = (void *)IASignalSmartRepliesInitialResponseRequested;
      swift_retain();
      sub_10011A874(v31);
      swift_release();
      v0[52] = [objc_allocWithZone((Class)type metadata accessor for TextCompositionClient()) init];
      swift_getKeyPath();
      v0[25] = v28;
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      uint64_t v32 = *(void **)(v28 + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel__inputContextHistory);
      v0[53] = v32;
      (*(void (**)(uint64_t, void, uint64_t))(v26 + 104))(v37, enum case for TextCompositionClient.TCDocumentType.mail(_:), v27);
      Swift::String v38 = (uint64_t (*)(id, uint64_t, uint64_t, unint64_t, unint64_t))((char *)&async function pointer to dispatch thunk of TextCompositionClient.requestLongFormSmartReplies(with:documentType:replyType:options:)
                                                                                             + async function pointer to dispatch thunk of TextCompositionClient.requestLongFormSmartReplies(with:documentType:replyType:options:));
      id v33 = v32;
      uint64_t v34 = (void *)swift_task_alloc();
      v0[54] = v34;
      *uint64_t v34 = v0;
      v34[1] = sub_10004B2A8;
      uint64_t v35 = v0[42];
      return (void *)v38(v33, v35, v36, v39, v30);
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    swift_release();
    if (qword_1001FAC38 != -1) {
      swift_once();
    }
    sub_10000EBE8(v0[37], (uint64_t)qword_1002127A0);
    unint64_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Unexpected nil writingToolsDelegate for long form base generation with entries", v11, 2u);
      swift_slowDealloc();
    }

    type metadata accessor for ContentGeneration();
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = 0;
    *(void *)(v12 + 24) = 0;
    swift_bridgeObjectRelease();
    *(void *)(v12 + 32) = 0;
    *(unsigned char *)(v12 + 40) = 1;
    *(void *)(v12 + 48) = 0;
    swift_errorRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v13 = (uint64_t (*)(uint64_t))v0[1];
    return (void *)v13(v12);
  }
  return result;
}

uint64_t sub_10004B2A8(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)v3;
  uint64_t v5 = *(void **)v3;
  unint64_t v14 = *(void **)(*(void *)v3 + 424);
  uint64_t v6 = *(void **)(*(void *)v3 + 416);
  uint64_t v7 = *(void *)(*(void *)v3 + 336);
  uint64_t v8 = *(void *)(*(void *)v3 + 328);
  uint64_t v9 = *(void *)(*(void *)v3 + 320);
  v5[55] = a1;
  v5[56] = a2;
  v5[57] = v2;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t v10 = v4[45];
  uint64_t v11 = v4[44];
  if (v2) {
    uint64_t v12 = sub_10004B99C;
  }
  else {
    uint64_t v12 = sub_10004B4CC;
  }
  return _swift_task_switch(v12, v11, v10);
}

id sub_10004B4CC()
{
  uint64_t v1 = (_OWORD *)(v0 + 96);
  uint64_t v2 = *(void *)(v0 + 448);
  swift_release();
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v5 = v4;
  if (*(void *)(v2 + 16))
  {
    uint64_t v6 = v3;
    swift_bridgeObjectRetain();
    unint64_t v7 = sub_100007C48(v6, v5);
    if (v8)
    {
      sub_100027E0C(*(void *)(*(void *)(v0 + 448) + 56) + 32 * v7, v0 + 96);
    }
    else
    {
      _OWORD *v1 = 0u;
      *(_OWORD *)(v0 + 112) = 0u;
    }
  }
  else
  {
    _OWORD *v1 = 0u;
    *(_OWORD *)(v0 + 112) = 0u;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  if (!*(void *)(v0 + 120))
  {
    sub_100029500(v0 + 96);
    goto LABEL_18;
  }
  if (!swift_dynamicCast())
  {
LABEL_18:
    swift_bridgeObjectRelease();
    uint64_t v12 = 0;
    BOOL v13 = 0;
    goto LABEL_19;
  }
  uint64_t v9 = *(void *)(v0 + 256);
  swift_bridgeObjectRelease();
  uint64_t v10 = 1;
  BOOL v11 = v9 != 2;
  if (v9 == 1) {
    BOOL v11 = 0;
  }
  else {
    uint64_t v10 = 2 * (v9 == 2);
  }
  if (v9) {
    uint64_t v12 = v10;
  }
  else {
    uint64_t v12 = 0;
  }
  if (v9) {
    BOOL v13 = v11;
  }
  else {
    BOOL v13 = 0;
  }
LABEL_19:
  id result = [*(id *)(v0 + 440) responseTexts];
  if (result)
  {
    uint64_t v15 = result;
    uint64_t v16 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v16[2])
    {
      char v35 = v13;
      uint64_t v36 = v12;
      uint64_t v18 = v16[4];
      uint64_t v17 = v16[5];
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      uint64_t v19 = Logger.logObject.getter();
      os_log_type_t v20 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v19, v20))
      {
        unint64_t v21 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)unint64_t v21 = 134283521;
        *(void *)(v0 + 168) = v18;
        *(void *)(v0 + 176) = v17;
        sub_10002DF54();
        *(void *)(v0 + 240) = StringProtocol.hash.getter();
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v19, v20, "Long form base generation with hashed response: %{private}ld", v21, 0xCu);
        swift_slowDealloc();
      }
      else
      {
        swift_bridgeObjectRelease();
      }

      uint64_t v26 = *(void **)(v0 + 440);
      uint64_t v31 = *(void *)(v0 + 448);
      uint64_t v32 = *(void *)(v0 + 288);
      swift_getKeyPath();
      *(void *)(v0 + 224) = v32;
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      id v33 = (void *)IASignalSmartRepliesInitialResponseCompleted;
      swift_bridgeObjectRetain();
      swift_retain();
      sub_10011A888(v33, v31);
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      type metadata accessor for ContentGeneration();
      uint64_t v29 = swift_allocObject();
      *(void *)(v29 + 16) = v18;
      *(void *)(v29 + 24) = v17;
      swift_bridgeObjectRelease();
      *(void *)(v29 + 32) = v36;
      char v30 = v35;
    }
    else
    {
      swift_bridgeObjectRelease();
      id v22 = Logger.logObject.getter();
      os_log_type_t v23 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v22, v23))
      {
        uint64_t v24 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v24 = 0;
        _os_log_impl((void *)&_mh_execute_header, v22, v23, "Unexpected nil response for long form base generation", v24, 2u);
        swift_slowDealloc();
      }
      uint64_t v26 = *(void **)(v0 + 440);
      uint64_t v25 = *(void *)(v0 + 448);
      uint64_t v27 = *(void *)(v0 + 288);

      swift_getKeyPath();
      *(void *)(v0 + 248) = v27;
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      uint64_t v28 = (void *)IASignalSmartRepliesInitialResponseFailed;
      swift_retain();
      sub_10011B080(v28, v25);
      swift_release();
      swift_bridgeObjectRelease();
      type metadata accessor for ContentGeneration();
      uint64_t v29 = swift_allocObject();
      *(void *)(v29 + 16) = 0;
      *(void *)(v29 + 24) = 0;
      swift_bridgeObjectRelease();
      *(void *)(v29 + 32) = 0;
      char v30 = 1;
    }
    *(unsigned char *)(v29 + 40) = v30;
    *(void *)(v29 + 48) = 0;
    swift_errorRelease();

    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v34 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return (id)v34(v29);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10004B99C()
{
  uint64_t v1 = v0[57];
  swift_release();
  swift_errorRetain();
  sub_10002FAC0(v1);
  swift_errorRelease();
  Logger.init()();
  swift_errorRetain();
  uint64_t v16 = v1;
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138412290;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    v0[26] = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v5 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Error occurred in long form reply base generation: %@", v4, 0xCu);
    sub_1000063C0(&qword_1001FED90);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v7 = v0[38];
  uint64_t v8 = v0[39];
  uint64_t v9 = v0[36];
  uint64_t v10 = v0[37];

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v10);
  swift_getKeyPath();
  v0[23] = v9;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  BOOL v11 = (void *)IASignalSmartRepliesInitialResponseFailed;
  swift_retain();
  unint64_t v12 = sub_1000051F0((uint64_t)_swiftEmptyArrayStorage);
  swift_getErrorValue();
  Error.localizedDescription.getter();
  sub_10011B080(v11, v12);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for ContentGeneration();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = 0;
  *(void *)(v13 + 24) = 0;
  swift_errorRetain();
  swift_bridgeObjectRelease();
  *(void *)(v13 + 32) = 0;
  *(unsigned char *)(v13 + 40) = 1;
  *(void *)(v13 + 48) = v16;
  swift_errorRelease();
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v14 = (uint64_t (*)(uint64_t))v0[1];
  return v14(v13);
}

uint64_t sub_10004BCC0()
{
  v1[24] = v0;
  type metadata accessor for MainActor();
  v1[25] = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[26] = v3;
  v1[27] = v2;
  return _swift_task_switch(sub_10004BD58, v3, v2);
}

uint64_t sub_10004BD58()
{
  if (qword_1001FAC38 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  v0[28] = sub_10000EBE8(v1, (uint64_t)qword_1002127A0);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Requested (re)generation of long form reply with entries", v4, 2u);
    swift_slowDealloc();
  }

  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  v0[29] = Strong;
  if (!Strong)
  {
    swift_release();
    char v30 = Logger.logObject.getter();
    os_log_type_t v31 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v32 = 0;
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "Unexpected nil writingToolsDelegate for long form generation with entries", v32, 2u);
      swift_slowDealloc();
    }
    goto LABEL_25;
  }
  uint64_t v6 = (void *)Strong;
  uint64_t v7 = v0[24];
  swift_getKeyPath();
  v0[30] = OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel___observationRegistrar;
  v0[21] = v7;
  v0[31] = sub_10004FAA4((unint64_t *)&unk_1001FD2C0, (void (*)(uint64_t))type metadata accessor for QuestionnaireModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  unint64_t v8 = *(void *)(v7 + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel__entries);
  if (!v8)
  {
    swift_release();
    char v30 = Logger.logObject.getter();
    os_log_type_t v33 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v30, v33)) {
      goto LABEL_19;
    }
    uint64_t v34 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v34 = 0;
    char v35 = "Unexpected missing entries for long form generation with entries";
LABEL_24:
    _os_log_impl((void *)&_mh_execute_header, v30, v33, v35, v34, 2u);
    swift_slowDealloc();
    swift_unknownObjectRelease();
LABEL_25:

    goto LABEL_26;
  }
  uint64_t v9 = v0[24];
  swift_getKeyPath();
  v0[5] = v9;
  swift_bridgeObjectRetain();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v10 = OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel__smartReplyConfiguration;
  id v11 = [*(id *)(v9 + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel__smartReplyConfiguration) entryPoint];
  if (!v11)
  {
    swift_bridgeObjectRelease();
    swift_release();
    char v30 = Logger.logObject.getter();
    os_log_type_t v33 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v30, v33)) {
      goto LABEL_19;
    }
    uint64_t v34 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v34 = 0;
    char v35 = "Unexpected missing entryPoint for long form generation with entries";
    goto LABEL_24;
  }
  unint64_t v12 = v11;
  id v39 = v6;
  unint64_t v40 = v8;
  uint64_t v13 = v0[24];
  uint64_t v38 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v15 = v14;

  v0[32] = v15;
  swift_getKeyPath();
  v0[6] = v13;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  id v16 = [*(id *)(v9 + v10) baseResponse];
  if (!v16)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    char v30 = Logger.logObject.getter();
    os_log_type_t v33 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v30, v33)) {
      goto LABEL_19;
    }
    uint64_t v34 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v34 = 0;
    char v35 = "Unexpected missing baseResponse for long form generation with entries";
    goto LABEL_24;
  }
  uint64_t v17 = v16;
  uint64_t v18 = v15;
  uint64_t v19 = v0[24];
  uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v22 = v21;

  v0[33] = v22;
  swift_getKeyPath();
  v0[7] = v19;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  os_log_type_t v23 = *(void **)(v19 + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel__session);
  v0[34] = v23;
  if (v23)
  {
    uint64_t v24 = v0[24];
    [v39 writingToolsSession:v23 didReceiveAction:3];
    sub_10004F49C(v40);
    uint64_t v37 = v25;
    v0[35] = v25;
    swift_getKeyPath();
    uint64_t v26 = swift_task_alloc();
    *(void *)(v26 + 16) = v24;
    *(unsigned char *)(v26 + 24) = 1;
    v0[8] = v24;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    v0[36] = 0;
    swift_release();
    swift_task_dealloc();
    sub_10004DEBC();
    swift_getKeyPath();
    v0[9] = v24;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    v0[37] = OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel__analyticsInstance;
    swift_retain();
    sub_10011B5CC(v40);
    swift_release();
    swift_bridgeObjectRelease();
    swift_getKeyPath();
    v0[10] = v24;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v27 = (void *)IASignalSmartRepliesRewriteRequested;
    swift_retain();
    sub_10011A874(v27);
    swift_release();
    uint64_t v28 = (void *)swift_task_alloc();
    v0[38] = v28;
    *uint64_t v28 = v0;
    v28[1] = sub_10004C4E4;
    return sub_10004CF00(v38, v18, v20, v22, v37);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  char v30 = Logger.logObject.getter();
  os_log_type_t v33 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v30, v33))
  {
    uint64_t v34 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v34 = 0;
    char v35 = "Unexpected missing session for long form generation with entries";
    goto LABEL_24;
  }
LABEL_19:

  swift_unknownObjectRelease();
LABEL_26:
  uint64_t v36 = (uint64_t (*)(void))v0[1];
  return v36();
}

uint64_t sub_10004C4E4(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 312) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v3 = *(void *)(v2 + 216);
  uint64_t v4 = *(void *)(v2 + 208);
  return _swift_task_switch(sub_10004C64C, v4, v3);
}

uint64_t sub_10004C64C()
{
  uint64_t v1 = v0[39];
  swift_release();
  if (!*(void *)(v1 + 24))
  {
    uint64_t v2 = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, v3, "Unexpected nil response for long form generation with entries", v4, 2u);
      swift_slowDealloc();
    }
    uint64_t v5 = v0[24];

    swift_getKeyPath();
    v0[23] = v5;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v6 = (void *)IASignalSmartRepliesRewriteFailed;
    swift_retain();
    unint64_t v7 = sub_1000051F0((uint64_t)_swiftEmptyArrayStorage);
    sub_10011B080(v6, v7);
    swift_release();
    swift_bridgeObjectRelease();
  }
  uint64_t v8 = *(void *)(v0[39] + 48);
  if (v8)
  {
    swift_errorRetain();
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v9, v10))
    {
      id v11 = (uint8_t *)swift_slowAlloc();
      unint64_t v12 = (void *)swift_slowAlloc();
      *(_DWORD *)id v11 = 138412290;
      swift_errorRetain();
      uint64_t v13 = _swift_stdlib_bridgeErrorToNSError();
      v0[22] = v13;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v12 = v13;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Unexpected error during long form generation with entries %@", v11, 0xCu);
      sub_1000063C0(&qword_1001FED90);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }
    uint64_t v14 = v0[24];

    swift_getKeyPath();
    v0[19] = v14;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v15 = (void *)IASignalSmartRepliesRewriteFailed;
    swift_retain();
    unint64_t v16 = sub_1000051F0((uint64_t)_swiftEmptyArrayStorage);
    swift_getErrorValue();
    Error.localizedDescription.getter();
    sub_10011B080(v15, v16);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_errorRetain();
    sub_10002FAC0(v8);
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v17 = v0[24];
  swift_getKeyPath();
  v0[11] = v17;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (*(unsigned char *)(v17 + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel__sessionEndRequested))
  {
    uint64_t v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v20 = 0;
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "Ending session mid-regeneration due to session end request", v20, 2u);
      swift_slowDealloc();
    }
    uint64_t v21 = v0[24];

    swift_getKeyPath();
    uint64_t v22 = swift_task_alloc();
    *(void *)(v22 + 16) = v21;
    *(unsigned char *)(v22 + 24) = 0;
    v0[18] = v21;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    swift_task_dealloc();
    sub_100048D04(1, 0, 0, 0);
  }
  uint64_t v23 = v0[39];
  if ((*(unsigned char *)(v23 + 40) & 1) == 0 && !*(void *)(v23 + 32)) {
    goto LABEL_23;
  }
  uint64_t v24 = v0[24];
  swift_getKeyPath();
  v0[12] = v24;
  sub_10004FAA4((unint64_t *)&qword_1001FD2A0, (void (*)(uint64_t))type metadata accessor for ToolModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (*(unsigned char *)(v24 + 120) == 1)
  {
    uint64_t v23 = v0[39];
LABEL_23:
    uint64_t v42 = (void *)v0[35];
    uint64_t v43 = (void *)v0[34];
    uint64_t v35 = v0[24];
    sub_10004DA04(v23);
    swift_getKeyPath();
    uint64_t v36 = swift_task_alloc();
    *(void *)(v36 + 16) = v35;
    *(unsigned char *)(v36 + 24) = 0;
    v0[17] = v35;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    swift_task_dealloc();
    sub_10004DEBC();
    swift_unknownObjectRelease();

    swift_release();
    goto LABEL_24;
  }
  if (*(unsigned char *)(v23 + 40) == 1)
  {
    uint64_t v26 = (void *)v0[34];
    uint64_t v25 = (void *)v0[35];
    swift_unknownObjectRelease();

    swift_release();
  }
  else
  {
    uint64_t v39 = *(void *)(v23 + 32);
    uint64_t v27 = Logger.logObject.getter();
    os_log_type_t v28 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v29 = 0;
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "Long form regeneration has warnings, holding until allowed...", v29, 2u);
      swift_slowDealloc();
    }
    uint64_t v30 = v0[39];
    unint64_t v40 = (void *)v0[35];
    uint64_t v41 = (void *)v0[34];
    uint64_t v31 = v0[24];

    swift_getKeyPath();
    v0[13] = v31;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    v0[14] = v31;
    swift_getKeyPath();
    ObservationRegistrar.willSet<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v32 = *(void *)(v31 + 112);
    uint64_t v33 = v32 | v39;
    sub_10002ED24(v32 | v39);
    *(void *)(v31 + 112) = v33;
    v0[15] = v31;
    swift_getKeyPath();
    ObservationRegistrar.didSet<A, B>(_:keyPath:)();
    swift_release();
    swift_getKeyPath();
    uint64_t v34 = swift_task_alloc();
    *(void *)(v34 + 16) = v31;
    *(void *)(v34 + 24) = v30;
    v0[16] = v31;
    swift_retain();
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_unknownObjectRelease();

    swift_release();
    swift_release_n();
    swift_task_dealloc();
  }
LABEL_24:
  uint64_t v37 = (uint64_t (*)(void))v0[1];
  return v37();
}

uint64_t sub_10004CF00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[25] = a5;
  v6[26] = v5;
  v6[23] = a3;
  v6[24] = a4;
  v6[21] = a1;
  v6[22] = a2;
  uint64_t v7 = type metadata accessor for Logger();
  v6[27] = v7;
  v6[28] = *(void *)(v7 - 8);
  v6[29] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for TextCompositionClient.TCDocumentType();
  v6[30] = v8;
  v6[31] = *(void *)(v8 - 8);
  v6[32] = swift_task_alloc();
  type metadata accessor for MainActor();
  v6[33] = static MainActor.shared.getter();
  uint64_t v10 = dispatch thunk of Actor.unownedExecutor.getter();
  v6[34] = v10;
  v6[35] = v9;
  return _swift_task_switch(sub_10004D058, v10, v9);
}

void *sub_10004D058()
{
  uint64_t v1 = v0[26];
  sub_1000063C0(&qword_1001FD2D8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10018A720;
  *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 40) = v3;
  swift_getKeyPath();
  v0[18] = v1;
  sub_10004FAA4((unint64_t *)&qword_1001FD2A0, (void (*)(uint64_t))type metadata accessor for ToolModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  id result = *(void **)(v1 + 24);
  if (result)
  {
    uint64_t v6 = v0[31];
    uint64_t v5 = v0[32];
    uint64_t v7 = v0[30];
    uint64_t v8 = v0[26];
    unsigned int v9 = [result pid];
    *(void *)(inited + 72) = &type metadata for Int32;
    *(_DWORD *)(inited + 48) = v9;
    unint64_t v10 = sub_1000051F0(inited);
    v0[36] = v10;
    v0[37] = [objc_allocWithZone((Class)type metadata accessor for TextCompositionClient()) init];
    swift_getKeyPath();
    v0[38] = OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel___observationRegistrar;
    v0[16] = v8;
    v0[39] = sub_10004FAA4((unint64_t *)&unk_1001FD2C0, (void (*)(uint64_t))type metadata accessor for QuestionnaireModel);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    id v11 = *(void **)(v8 + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel__inputContextHistory);
    v0[40] = v11;
    (*(void (**)(uint64_t, void, uint64_t))(v6 + 104))(v5, enum case for TextCompositionClient.TCDocumentType.mail(_:), v7);
    uint64_t v20 = (uint64_t (*)(id, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))((char *)&async function pointer to dispatch thunk of TextCompositionClient.requestLongFormSmartReplies(with:documentType:replyType:baseResponse:userFilledQuestionnaire:options:) + async function pointer to dispatch thunk of TextCompositionClient.requestLongFormSmartReplies(with:documentType:replyType:baseResponse:userFilledQuestionnaire:options:));
    id v12 = v11;
    uint64_t v13 = (void *)swift_task_alloc();
    v0[41] = v13;
    *uint64_t v13 = v0;
    v13[1] = sub_10004D300;
    uint64_t v14 = v0[32];
    uint64_t v15 = v0[24];
    uint64_t v16 = v0[25];
    uint64_t v17 = v0[22];
    uint64_t v18 = v0[23];
    uint64_t v19 = v0[21];
    return (void *)v20(v12, v14, v19, v17, v18, v15, v16, v10);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10004D300(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)v3;
  uint64_t v5 = *(void **)v3;
  uint64_t v6 = *(void **)(*(void *)v3 + 320);
  uint64_t v7 = *(void **)(*(void *)v3 + 296);
  uint64_t v8 = *(void *)(*(void *)v3 + 256);
  uint64_t v9 = *(void *)(*(void *)v3 + 248);
  uint64_t v10 = *(void *)(*(void *)v3 + 240);
  v5[42] = a1;
  v5[43] = a2;
  v5[44] = v2;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);

  swift_bridgeObjectRelease();
  uint64_t v11 = v4[35];
  uint64_t v12 = v4[34];
  if (v2) {
    uint64_t v13 = sub_10004D7CC;
  }
  else {
    uint64_t v13 = sub_10004D500;
  }
  return _swift_task_switch(v13, v12, v11);
}

id sub_10004D500()
{
  uint64_t v1 = *(void **)(v0 + 336);
  swift_release();
  id result = [v1 responseTexts];
  if (!result)
  {
    __break(1u);
    return result;
  }
  uint64_t v3 = result;
  uint64_t v4 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v4[2])
  {
    uint64_t v5 = v4[4];
    uint64_t v6 = v4[5];
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v6 = 0;
  }
  uint64_t v7 = (_OWORD *)(v0 + 96);
  uint64_t v8 = *(void *)(v0 + 344);
  swift_bridgeObjectRelease();
  uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v11 = v10;
  if (*(void *)(v8 + 16))
  {
    uint64_t v12 = v9;
    swift_bridgeObjectRetain();
    unint64_t v13 = sub_100007C48(v12, v11);
    if (v14)
    {
      sub_100027E0C(*(void *)(*(void *)(v0 + 344) + 56) + 32 * v13, v0 + 96);
    }
    else
    {
      *uint64_t v7 = 0u;
      *(_OWORD *)(v0 + 112) = 0u;
    }
  }
  else
  {
    *uint64_t v7 = 0u;
    *(_OWORD *)(v0 + 112) = 0u;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  if (!*(void *)(v0 + 120))
  {
    uint64_t v16 = v5;
    sub_100029500(v0 + 96);
LABEL_16:
    swift_bridgeObjectRelease();
    unint64_t v15 = 0;
    goto LABEL_17;
  }
  if (!swift_dynamicCast())
  {
    uint64_t v16 = v5;
    goto LABEL_16;
  }
  unint64_t v15 = *(void *)(v0 + 160);
  swift_bridgeObjectRelease();
  uint64_t v16 = v5;
  if (v15 < 2)
  {
LABEL_17:
    BOOL v23 = 0;
    goto LABEL_18;
  }
  BOOL v23 = v15 != 2;
  unint64_t v15 = 2 * (v15 == 2);
LABEL_18:
  uint64_t v18 = *(void **)(v0 + 336);
  uint64_t v17 = *(void *)(v0 + 344);
  uint64_t v19 = *(void *)(v0 + 208);
  swift_getKeyPath();
  *(void *)(v0 + 152) = v19;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v20 = (void *)IASignalSmartRepliesRewriteCompleted;
  swift_retain();
  sub_10011A888(v20, v17);
  swift_release();
  swift_bridgeObjectRelease();
  type metadata accessor for ContentGeneration();
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = v16;
  *(void *)(v21 + 24) = v6;
  swift_bridgeObjectRelease();
  *(void *)(v21 + 32) = v15;
  *(unsigned char *)(v21 + 40) = v23;
  *(void *)(v21 + 48) = 0;
  swift_errorRelease();

  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v22 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return (id)v22(v21);
}

uint64_t sub_10004D7CC()
{
  swift_release();
  Logger.init()();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 138412290;
    swift_errorRetain();
    uint64_t v5 = _swift_stdlib_bridgeErrorToNSError();
    v0[17] = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v4 = v5;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Error occurred in long form reply with entries generation: %@", v3, 0xCu);
    sub_1000063C0(&qword_1001FED90);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v6 = v0[44];
  uint64_t v8 = v0[28];
  uint64_t v7 = v0[29];
  uint64_t v9 = v0[27];

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  type metadata accessor for ContentGeneration();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = 0;
  *(void *)(v10 + 24) = 0;
  swift_errorRetain();
  swift_bridgeObjectRelease();
  *(void *)(v10 + 32) = 0;
  *(unsigned char *)(v10 + 40) = 1;
  *(void *)(v10 + 48) = v6;
  swift_errorRelease();
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(uint64_t))v0[1];
  return v11(v10);
}

void sub_10004DA04(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 24);
  if (!v2)
  {
    if (qword_1001FAC38 != -1) {
      swift_once();
    }
    uint64_t v12 = type metadata accessor for Logger();
    sub_10000EBE8(v12, (uint64_t)qword_1002127A0);
    uint64_t v21 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v21, v13)) {
      goto LABEL_18;
    }
    char v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)char v14 = 0;
    unint64_t v15 = "Unexpected nil text for performDidReceive";
    goto LABEL_17;
  }
  uint64_t v3 = v1;
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    if (qword_1001FAC38 == -1)
    {
LABEL_15:
      uint64_t v16 = type metadata accessor for Logger();
      sub_10000EBE8(v16, (uint64_t)qword_1002127A0);
      uint64_t v21 = Logger.logObject.getter();
      os_log_type_t v13 = static os_log_type_t.error.getter();
      if (!os_log_type_enabled(v21, v13))
      {
LABEL_18:

        return;
      }
      char v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v14 = 0;
      unint64_t v15 = "Unexpected nil writingToolsDelegate for performDidReceive";
LABEL_17:
      _os_log_impl((void *)&_mh_execute_header, v21, v13, v15, v14, 2u);
      swift_slowDealloc();
      goto LABEL_18;
    }
LABEL_30:
    swift_once();
    goto LABEL_15;
  }
  uint64_t v6 = (void *)Strong;
  swift_getKeyPath();
  sub_10004FAA4((unint64_t *)&qword_1001FD2A0, (void (*)(uint64_t))type metadata accessor for ToolModel);
  swift_bridgeObjectRetain();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  unint64_t v7 = *(void *)(v1 + 80);
  if (!v7)
  {
    __break(1u);
    return;
  }
  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    if (_CocoaArrayWrapper.endIndex.getter()) {
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v8)
    {
LABEL_6:
      if ((v7 & 0xC000000000000001) != 0)
      {
        id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        goto LABEL_9;
      }
      if (*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        id v9 = *(id *)(v7 + 32);
LABEL_9:
        uint64_t v10 = v9;
        swift_bridgeObjectRelease();
        swift_getObjectType();
        swift_unknownObjectRetain();
        sub_10004EF90(v4, v2, v6, v10, 1, v3);
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        uint64_t KeyPath = swift_getKeyPath();
        __chkstk_darwin(KeyPath);
        sub_10004FAA4((unint64_t *)&unk_1001FD2C0, (void (*)(uint64_t))type metadata accessor for QuestionnaireModel);
        ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
        swift_release();
        sub_10004DEBC();

LABEL_26:
        swift_unknownObjectRelease();
        return;
      }
      __break(1u);
      goto LABEL_30;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (qword_1001FAC38 != -1) {
    swift_once();
  }
  uint64_t v17 = type metadata accessor for Logger();
  sub_10000EBE8(v17, (uint64_t)qword_1002127A0);
  uint64_t v18 = Logger.logObject.getter();
  os_log_type_t v19 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v20 = 0;
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "Unexpected missing context for performDidReceive", v20, 2u);
    swift_slowDealloc();

    goto LABEL_26;
  }
  swift_unknownObjectRelease();
}

uint64_t sub_10004DEBC()
{
  swift_getKeyPath();
  sub_10004FAA4((unint64_t *)&unk_1001FD2C0, (void (*)(uint64_t))type metadata accessor for QuestionnaireModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  id v1 = [*(id *)(v0 + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel__smartReplyConfiguration) baseResponse];
  id v2 = v1;
  if (v1) {

  }
  swift_getKeyPath();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (v2) {
    BOOL v3 = *(void *)(v0 + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel__entries) == 0;
  }
  else {
    BOOL v3 = 1;
  }
  if (!v3)
  {
    swift_getKeyPath();
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
  }
  uint64_t KeyPath = swift_getKeyPath();
  __chkstk_darwin(KeyPath);
  sub_10004FAA4((unint64_t *)&qword_1001FD2A0, (void (*)(uint64_t))type metadata accessor for ToolModel);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  return swift_release();
}

uint64_t sub_10004E0D0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000063C0(&qword_1001FF820);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1001FAC38 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  sub_10000EBE8(v5, (uint64_t)qword_1002127A0);
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Input warning was dismissed", v8, 2u);
    swift_slowDealloc();
  }

  uint64_t v9 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v4, 1, 1, v9);
  type metadata accessor for MainActor();
  swift_retain();
  uint64_t v10 = static MainActor.shared.getter();
  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = v10;
  v11[3] = &protocol witness table for MainActor;
  v11[4] = v1;
  sub_1001228D0((uint64_t)v4, (uint64_t)&unk_1001FD2B8, (uint64_t)v11);
  return swift_release();
}

uint64_t sub_10004E2A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  type metadata accessor for MainActor();
  *(void *)(v4 + 24) = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10004E33C, v6, v5);
}

uint64_t sub_10004E33C()
{
  swift_release();
  if (qword_1001FAC38 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000EBE8(v1, (uint64_t)qword_1002127A0);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Input warning was dismissed, procceeding", v4, 2u);
    swift_slowDealloc();
  }

  sub_10004E460();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

void sub_10004E460()
{
  swift_getKeyPath();
  sub_10004FAA4((unint64_t *)&unk_1001FD2C0, (void (*)(uint64_t))type metadata accessor for QuestionnaireModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel__generationPendingContentWarning);
  if (v1)
  {
    uint64_t v2 = qword_1001FAC38;
    swift_retain();
    if (v2 != -1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for Logger();
    sub_10000EBE8(v3, (uint64_t)qword_1002127A0);
    uint64_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "Proceeding after input content warning", v6, 2u);
      swift_slowDealloc();
    }

    sub_10004DA04(v1);
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    swift_release();
  }
  else
  {
    if (qword_1001FAC38 != -1) {
      swift_once();
    }
    uint64_t v8 = type metadata accessor for Logger();
    sub_10000EBE8(v8, (uint64_t)qword_1002127A0);
    uint64_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Unexpected missing content generation for proceed", v11, 2u);
      swift_slowDealloc();
    }
  }
}

uint64_t sub_10004E72C()
{
  return swift_retain();
}

uint64_t sub_10004E7D8@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_10004FAA4((unint64_t *)&unk_1001FD2C0, (void (*)(uint64_t))type metadata accessor for QuestionnaireModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  *a2 = *(void *)(v3 + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel__analyticsInstance);
  return swift_retain();
}

uint64_t sub_10004E88C()
{
  return swift_release();
}

uint64_t sub_10004E96C()
{
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel___observationRegistrar;
  uint64_t v2 = type metadata accessor for ObservationRegistrar();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(v1, v2);
}

uint64_t sub_10004EA38()
{
  sub_10002F7E4(v0 + 16);

  swift_bridgeObjectRelease();
  sub_100024DB4(*(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(unsigned char *)(v0 + 72));
  swift_bridgeObjectRelease();
  swift_errorRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC21WritingToolsUIService9ToolModel___observationRegistrar;
  uint64_t v2 = type metadata accessor for ObservationRegistrar();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  v3(v0 + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel___observationRegistrar, v2);
  return v0;
}

uint64_t sub_10004EB64()
{
  sub_10004EA38();

  return swift_deallocClassInstance();
}

uint64_t sub_10004EBBC()
{
  return type metadata accessor for QuestionnaireModel();
}

uint64_t type metadata accessor for QuestionnaireModel()
{
  uint64_t result = qword_1001FCB80;
  if (!qword_1001FCB80) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10004EC10()
{
  uint64_t result = type metadata accessor for ObservationRegistrar();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_10004ECE4()
{
  swift_bridgeObjectRelease();
  swift_errorRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ContentGeneration()
{
  return self;
}

void *sub_10004ED48()
{
  return &protocol witness table for ObservableObjectPublisher;
}

uint64_t sub_10004ED54@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ContentGeneration();
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10004EDA4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100027FEC;
  return sub_10004E2A4(a1, v4, v5, v6);
}

uint64_t sub_10004EE60@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_100045DC0(a1, &OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel__longFormUpdateInProgress, a2);
}

uint64_t sub_10004EE8C()
{
  swift_errorRelease();
  swift_release();
  swift_unknownObjectRelease();

  if (*(void *)(v0 + 56)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_10004EEEC()
{
  return sub_10004930C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32), *(void **)(v0 + 40), *(void *)(v0 + 48), *(uint64_t (**)(uint64_t))(v0 + 56));
}

uint64_t sub_10004EF00(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10004EF10()
{
  return swift_release();
}

uint64_t sub_10004EF18(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_10004EF30@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_100045DC0(a1, &OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel__sessionEndRequested, a2);
}

void sub_10004EF5C()
{
  *(unsigned char *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel__sessionEndRequested) = *(unsigned char *)(v0 + 24);
}

void sub_10004EF74()
{
  sub_1000464A4(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

void sub_10004EF90(uint64_t a1, uint64_t a2, void *a3, void *a4, char a5, uint64_t a6)
{
  swift_getKeyPath();
  sub_10004FAA4((unint64_t *)&unk_1001FD2C0, (void (*)(uint64_t))type metadata accessor for QuestionnaireModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  os_log_type_t v10 = *(void **)(a6 + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel__session);
  if (v10)
  {
    uint64_t v33 = a3;
    id v11 = objc_allocWithZone((Class)NSMutableAttributedString);
    id v32 = v10;
    swift_bridgeObjectRetain();
    NSString v12 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    uint64_t v13 = [v11 initWithString:v12];

    id v14 = [a4 attributedText];
    id v15 = [v14 string];

    uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v18 = v17;

    swift_bridgeObjectRelease();
    uint64_t v19 = HIBYTE(v18) & 0xF;
    if ((v18 & 0x2000000000000000) == 0) {
      uint64_t v19 = v16 & 0xFFFFFFFFFFFFLL;
    }
    if (v19)
    {
      id v20 = [a4 attributedText];
      id v21 = [v20 attributesAtIndex:0 effectiveRange:0];

      type metadata accessor for Key(0);
      sub_10004FAA4(&qword_1001FD2D0, type metadata accessor for Key);
      static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      v22.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      -[NSObject setAttributes:range:](v13, "setAttributes:range:", v22.super.isa, 0, String.count.getter());
      BOOL v23 = v33;
    }
    else
    {
      if (qword_1001FAC38 != -1) {
        swift_once();
      }
      uint64_t v27 = type metadata accessor for Logger();
      sub_10000EBE8(v27, (uint64_t)qword_1002127A0);
      v22.super.Class isa = (Class)Logger.logObject.getter();
      os_log_type_t v28 = static os_log_type_t.error.getter();
      BOOL v23 = v33;
      if (os_log_type_enabled((os_log_t)v22.super.isa, v28))
      {
        uint64_t v29 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v29 = 0;
        _os_log_impl((void *)&_mh_execute_header, (os_log_t)v22.super.isa, v28, "Unexpected empty string in writing tools context", v29, 2u);
        swift_slowDealloc();
      }
    }

    id v30 = [a4 range];
    [v23 compositionSession:v32 didReceiveText:v13 replacementRange:v30 inContext:v31 finished:a4 & 1];
  }
  else
  {
    if (qword_1001FAC38 != -1) {
      swift_once();
    }
    uint64_t v24 = type metadata accessor for Logger();
    sub_10000EBE8(v24, (uint64_t)qword_1002127A0);
    uint64_t v13 = Logger.logObject.getter();
    os_log_type_t v25 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v13, v25))
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v26 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, v25, "Unexpected missing session for didReceiveText", v26, 2u);
      swift_slowDealloc();
    }
  }
}

void sub_10004F3D8()
{
  *(unsigned char *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel__longFormUpdateInProgress) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_10004F3F8()
{
  *(void *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel__analyticsInstance) = *(void *)(v0 + 24);
  swift_retain();
  return swift_release();
}

uint64_t sub_10004F43C()
{
  return sub_10004F814();
}

uint64_t sub_10004F46C()
{
  return sub_10002E9C8(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

void sub_10004F49C(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1 >> 62)
  {
LABEL_20:
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    if (v2)
    {
LABEL_3:
      unint64_t v18 = v1;
      unint64_t v19 = v1 & 0xC000000000000001;
      uint64_t v3 = 4;
      while (1)
      {
        uint64_t v4 = v3 - 4;
        if (v19)
        {
          uint64_t v5 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          uint64_t v6 = v3 - 3;
          if (__OFADD__(v4, 1)) {
            goto LABEL_19;
          }
        }
        else
        {
          uint64_t v5 = *(void *)(v1 + 8 * v3);
          swift_retain();
          uint64_t v6 = v3 - 3;
          if (__OFADD__(v4, 1))
          {
LABEL_19:
            __break(1u);
            goto LABEL_20;
          }
        }
        uint64_t v20 = v6;
        uint64_t v7 = *(void **)(v5 + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireEntry_entry);
        swift_getKeyPath();
        sub_10004FAA4(&qword_1001FD2E8, (void (*)(uint64_t))type metadata accessor for QuestionnaireEntry);
        id v8 = v7;
        ObservationRegistrar.access<A, B>(_:keyPath:)();
        swift_release();
        uint64_t v9 = *(void *)(v5 + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireEntry__selectedAnswer + 8);
        swift_bridgeObjectRetain();
        id v10 = [v8 answerOptions];
        NSString v11 = [v8 question];
        if (v11)
        {
          static String._unconditionallyBridgeFromObjectiveC(_:)();

          NSString v11 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
        }
        if (v9)
        {
          NSString v12 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
        }
        else
        {
          NSString v12 = 0;
        }
        id v13 = [objc_allocWithZone((Class)TCSmartReplyUserQuestionnaireEntry) initWithAnswerOptions:v10 question:v11 selectedOption:v12 defaultOption:0];

        if (!v13) {
          break;
        }
        id v14 = v13;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        swift_release();

        ++v3;
        unint64_t v1 = v18;
        if (v20 == v2) {
          goto LABEL_21;
        }
      }
      __break(1u);
      goto LABEL_24;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2) {
      goto LABEL_3;
    }
  }
LABEL_21:
  swift_bridgeObjectRelease();
  id v15 = objc_allocWithZone((Class)TCSmartReplyUserQuestionnaire);
  sub_1000085FC(0, (unint64_t *)&unk_1001FD2F0);
  swift_bridgeObjectRetain();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v17 = [v15 initWithEntries:isa];

  if (v17)
  {
    swift_bridgeObjectRelease();
    return;
  }
LABEL_24:
  __break(1u);
}

uint64_t sub_10004F814()
{
  *(void *)(*(void *)(v0 + 16)
            + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel__generationPendingContentWarning) = *(void *)(v0 + 24);
  swift_retain();
  return swift_release();
}

uint64_t sub_10004F860()
{
  return sub_100162188(v0[2], v0[3], v0[4]);
}

uint64_t sub_10004F880()
{
  return sub_10002E82C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_10004F89C()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10004F8E4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  id v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_100027FEC;
  return sub_10004790C(a1, v4, v5, v7, v6);
}

uint64_t sub_10004F9A8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100027204;
  return sub_1000482EC(a1, v4, v5, v6);
}

uint64_t sub_10004FA5C()
{
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_10004FA9C()
{
  sub_1000487C8(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_10004FAA4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10004FAEC()
{
  unint64_t result = qword_1001FD340;
  if (!qword_1001FD340)
  {
    sub_100006C14((uint64_t *)&unk_100201550);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1001FD340);
  }
  return result;
}

uint64_t sub_10004FB48()
{
  *(void *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel__entries) = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

void sub_10004FB94()
{
  *(unsigned char *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel__hasEntries) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_10004FBAC()
{
  return sub_1000468C8(v0);
}

uint64_t (*sub_10004FBB4())()
{
  return sub_10004FBF4;
}

uint64_t sub_10004FBF4()
{
  return sub_100046C44(v0);
}

uint64_t sub_10004FC00()
{
  unint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_100027FEC;
  uint64_t v2 = (void *)swift_task_alloc();
  v1[2] = v2;
  void *v2 = v1;
  v2[1] = sub_100027FEC;
  return sub_10004BCC0();
}

uint64_t sub_10004FCD8()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10004FD18()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_100027FEC;
  v3[2] = v2;
  return _swift_task_switch(sub_100046E68, 0, 0);
}

uint64_t sub_10004FDC0()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

void sub_10004FE08()
{
  sub_100047E4C(v0[2], v0[3], v0[4], v0[5], v0[6]);
}

uint64_t sub_10004FE20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000063C0(&qword_1001FD368);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void *sub_10004FE88()
{
  sub_10004FE20(*(void *)(v0 + 24), *(void *)(v0 + 16)+ OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel__questionnaireRectRelativeToInputDashboard);
  return sub_100045744();
}

void sub_10004FEEC()
{
}

void sub_10004FF04()
{
}

void sub_10004FF1C()
{
}

void *sub_10004FF34(void *a1, void *a2, int *a3)
{
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v5 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    *a1 = v5;
    a1 = (void *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v8 = a2[1];
    *a1 = v5;
    a1[1] = v8;
    uint64_t v9 = a3[5];
    uint64_t v10 = (char *)a1 + v9;
    NSString v11 = (char *)a2 + v9;
    uint64_t v12 = type metadata accessor for GeometryProxy();
    id v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_retain();
    v13(v10, v11, v12);
    *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
    swift_unknownObjectWeakCopyInit();
    uint64_t v14 = a3[8];
    uint64_t v15 = a3[9];
    uint64_t v16 = (char *)a1 + v14;
    id v17 = (char *)a2 + v14;
    uint64_t v18 = *(void *)v17;
    LOBYTE(v17) = v17[8];
    *(void *)uint64_t v16 = v18;
    v16[8] = (char)v17;
    unint64_t v19 = (void *)((char *)a1 + v15);
    uint64_t v20 = (void *)((char *)a2 + v15);
    swift_retain();
    sub_1000063C0((uint64_t *)&unk_1001FAE30);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v21 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
    }
    else
    {
      *unint64_t v19 = *v20;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1000500F8(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for GeometryProxy();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_unknownObjectWeakDestroy();
  swift_release();
  uint64_t v6 = a1 + *(int *)(a2 + 36);
  sub_1000063C0((uint64_t *)&unk_1001FAE30);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for DynamicTypeSize();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
    return v8(v6, v7);
  }
  else
  {
    return swift_release();
  }
}

void *sub_100050214(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for GeometryProxy();
  NSString v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_retain();
  v11(v8, v9, v10);
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  swift_unknownObjectWeakCopyInit();
  uint64_t v12 = a3[8];
  uint64_t v13 = a3[9];
  uint64_t v14 = (char *)a1 + v12;
  uint64_t v15 = (char *)a2 + v12;
  uint64_t v16 = *(void *)v15;
  LOBYTE(v15) = v15[8];
  *(void *)uint64_t v14 = v16;
  v14[8] = (char)v15;
  id v17 = (void *)((char *)a1 + v13);
  uint64_t v18 = (void *)((char *)a2 + v13);
  swift_retain();
  sub_1000063C0((uint64_t *)&unk_1001FAE30);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v19 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  }
  else
  {
    *id v17 = *v18;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_100050380(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain();
  swift_release();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for GeometryProxy();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  swift_unknownObjectWeakCopyAssign();
  uint64_t v11 = a3[8];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = *(void *)v13;
  LOBYTE(v13) = v13[8];
  *(void *)uint64_t v12 = v14;
  v12[8] = (char)v13;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v15 = a3[9];
    uint64_t v16 = (void *)((char *)a1 + v15);
    id v17 = (void *)((char *)a2 + v15);
    sub_10002784C((uint64_t)a1 + v15, (uint64_t *)&unk_1001FAE30);
    sub_1000063C0((uint64_t *)&unk_1001FAE30);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v18 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
    }
    else
    {
      *uint64_t v16 = *v17;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_10005050C(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for GeometryProxy();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  swift_unknownObjectWeakTakeInit();
  uint64_t v10 = a3[8];
  uint64_t v11 = a3[9];
  uint64_t v12 = (char *)a1 + v10;
  uint64_t v13 = (char *)a2 + v10;
  *(void *)uint64_t v12 = *(void *)v13;
  v12[8] = v13[8];
  uint64_t v14 = (char *)a1 + v11;
  uint64_t v15 = (char *)a2 + v11;
  uint64_t v16 = sub_1000063C0((uint64_t *)&unk_1001FAE30);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v17 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v14, v15, v17);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  return a1;
}

_OWORD *sub_100050668(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  swift_release();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for GeometryProxy();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  swift_unknownObjectWeakTakeAssign();
  uint64_t v10 = a3[8];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = *(void *)v12;
  LOBYTE(v12) = v12[8];
  *(void *)uint64_t v11 = v13;
  v11[8] = (char)v12;
  swift_release();
  if (a1 != a2)
  {
    uint64_t v14 = a3[9];
    uint64_t v15 = (char *)a1 + v14;
    uint64_t v16 = (char *)a2 + v14;
    sub_10002784C((uint64_t)a1 + v14, (uint64_t *)&unk_1001FAE30);
    uint64_t v17 = sub_1000063C0((uint64_t *)&unk_1001FAE30);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v18 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v15, v16, v18);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1000507F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100050804);
}

uint64_t sub_100050804(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for GeometryProxy();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_1000063C0(&qword_1001FD3A0);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)a1 + *(int *)(a3 + 36);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_100050934(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100050948);
}

void *sub_100050948(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for GeometryProxy();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_1000063C0(&qword_1001FD3A0);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)v5 + *(int *)(a4 + 36);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t type metadata accessor for TransformSection(uint64_t a1)
{
  return sub_10005AFA8(a1, qword_1001FD400);
}

void sub_100050A98()
{
  type metadata accessor for GeometryProxy();
  if (v0 <= 0x3F)
  {
    sub_100059418(319, (unint64_t *)&qword_1001FB680, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t destroy for ToneAdjustSection()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_unknownObjectWeakDestroy();
}

uint64_t initializeWithCopy for ToneAdjustSection(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_unknownObjectWeakCopyInit();
  return a1;
}

uint64_t assignWithCopy for ToneAdjustSection(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  uint64_t v5 = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = v5;
  swift_unknownObjectWeakCopyAssign();
  return a1;
}

_OWORD *initializeWithTake for ToneAdjustSection(_OWORD *a1, _OWORD *a2)
{
  long long v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  *(_OWORD *)((char *)a1 + 25) = *(_OWORD *)((char *)a2 + 25);
  swift_unknownObjectWeakTakeInit();
  return a1;
}

uint64_t assignWithTake for ToneAdjustSection(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  swift_unknownObjectWeakTakeAssign();
  return a1;
}

uint64_t getEnumTagSinglePayload for ToneAdjustSection(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ToneAdjustSection(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ToneAdjustSection()
{
  return &type metadata for ToneAdjustSection;
}

uint64_t destroy for ProofreadAndRewriteSection()
{
  swift_unknownObjectWeakDestroy();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for ProofreadAndRewriteSection(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  swift_unknownObjectWeakCopyInit();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v4;
  uint64_t v5 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v5;
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ProofreadAndRewriteSection(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  swift_unknownObjectWeakCopyAssign();
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_retain();
  swift_release();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_release();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_retain();
  swift_release();
  uint64_t v6 = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 64) = v6;
  return a1;
}

uint64_t initializeWithTake for ProofreadAndRewriteSection(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  swift_unknownObjectWeakTakeInit();
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
  return a1;
}

uint64_t assignWithTake for ProofreadAndRewriteSection(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  swift_unknownObjectWeakTakeAssign();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_release();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_release();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for ProofreadAndRewriteSection(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 73)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ProofreadAndRewriteSection(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 72) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 73) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 73) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ProofreadAndRewriteSection()
{
  return &type metadata for ProofreadAndRewriteSection;
}

uint64_t sub_100051184()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000511A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v38 = a2;
  uint64_t v37 = type metadata accessor for IconTitleLabelStyle(0);
  __chkstk_darwin(v37);
  long long v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000063C0(&qword_1001FD5E0);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v34 = (uint64_t)&v31 - v9;
  uint64_t v10 = sub_1000063C0(&qword_1001FD5F8);
  uint64_t v35 = *(void *)(v10 - 8);
  uint64_t v36 = v10;
  __chkstk_darwin(v10);
  uint64_t v33 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_1000063C0(&qword_1001FD5D8);
  __chkstk_darwin(v32);
  uint64_t v31 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1001FAD20 != -1) {
    swift_once();
  }
  long long v13 = xmmword_1002129C0;
  uint64_t v14 = static Alignment.center.getter();
  uint64_t v16 = v15;
  *((void *)v8 + 3) = 0;
  *((void *)v8 + 4) = 0;
  v8[40] = 1;
  uint64_t v17 = (uint64_t *)&v8[*(int *)(v5 + 48)];
  *uint64_t v17 = swift_getKeyPath();
  sub_1000063C0((uint64_t *)&unk_1001FAE30);
  swift_storeEnumTagMultiPayload();
  char *v8 = 0;
  *((void *)v8 + 1) = v14;
  *((void *)v8 + 2) = v16;
  *(_OWORD *)(v8 + 24) = v13;
  v8[40] = 0;
  sub_1000515FC(a1, (uint64_t)&v8[*(int *)(v5 + 44)]);
  uint64_t v18 = v34;
  sub_100026FD0((uint64_t)v8, v34, &qword_1001FD5E0);
  uint64_t v19 = *(void *)(a1 + 64);
  char v20 = *(unsigned char *)(a1 + 72);
  long long v39 = *(_OWORD *)(a1 + 48);
  uint64_t v40 = v19;
  char v41 = v20;
  sub_1000063C0(&qword_100202930);
  Binding.projectedValue.getter();
  uint64_t v21 = v43;
  char v22 = v44;
  *(_OWORD *)long long v4 = v42;
  *((void *)v4 + 2) = v21;
  v4[24] = v22;
  BOOL v23 = (uint64_t *)&v4[*(int *)(v37 + 20)];
  *BOOL v23 = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  sub_100027F2C(&qword_1001FD5E8, &qword_1001FD5E0);
  sub_100058088(&qword_1001FD5F0, (void (*)(uint64_t))type metadata accessor for IconTitleLabelStyle);
  uint64_t v24 = v33;
  View.labelStyle<A>(_:)();
  sub_100057C58((uint64_t)v4, type metadata accessor for IconTitleLabelStyle);
  sub_10002784C(v18, &qword_1001FD5E0);
  uint64_t v26 = v35;
  uint64_t v25 = v36;
  uint64_t v27 = (uint64_t)v31;
  (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v31, v24, v36);
  uint64_t v28 = v27 + *(int *)(v32 + 36);
  *(_WORD *)uint64_t v28 = 0;
  *(unsigned char *)(v28 + 2) = 1;
  (*(void (**)(char *, uint64_t))(v26 + 8))(v24, v25);
  uint64_t v29 = v38;
  sub_100008DD4(v27, v38, &qword_1001FD5D8);
  *(_WORD *)(v29 + *(int *)(sub_1000063C0(&qword_1001FD5C0) + 36)) = 256;
  return sub_10002784C(v27, &qword_1001FD5D8);
}

uint64_t sub_1000515FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v29 = a1;
  uint64_t v31 = a2;
  uint64_t v3 = sub_1000063C0(&qword_1001FD580);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000063C0(&qword_1001FD588);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v30 = (uint64_t)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)v27 - v11;
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v15 = (char *)v27 - v14;
  __chkstk_darwin(v13);
  uint64_t v28 = (uint64_t)v27 - v16;
  sub_100026AD4(a1, (uint64_t)v32);
  uint64_t v17 = swift_allocObject();
  sub_100026980((uint64_t)v32, v17 + 16);
  v27[1] = sub_1000063C0(&qword_1001FD590);
  sub_100057CF4();
  Button.init(action:label:)();
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
  v18(v15, v6, v3);
  uint64_t v19 = *(void (**)(char *, uint64_t))(v4 + 8);
  v27[0] = v4 + 8;
  v19(v6, v3);
  uint64_t v20 = v28;
  sub_100026FD0((uint64_t)v15, v28, &qword_1001FD588);
  sub_100026AD4(v29, (uint64_t)v32);
  uint64_t v21 = swift_allocObject();
  sub_100026980((uint64_t)v32, v21 + 16);
  Button.init(action:label:)();
  v18(v12, v6, v3);
  v19(v6, v3);
  sub_100026FD0((uint64_t)v12, (uint64_t)v15, &qword_1001FD588);
  uint64_t v22 = v20;
  sub_100008DD4(v20, (uint64_t)v12, &qword_1001FD588);
  uint64_t v23 = v30;
  sub_100008DD4((uint64_t)v15, v30, &qword_1001FD588);
  uint64_t v24 = v31;
  sub_100008DD4((uint64_t)v12, v31, &qword_1001FD588);
  uint64_t v25 = sub_1000063C0(&qword_1001FD600);
  sub_100008DD4(v23, v24 + *(int *)(v25 + 48), &qword_1001FD588);
  sub_10002784C((uint64_t)v15, &qword_1001FD588);
  sub_10002784C(v22, &qword_1001FD588);
  sub_10002784C(v23, &qword_1001FD588);
  return sub_10002784C((uint64_t)v12, &qword_1001FD588);
}

uint64_t sub_10005199C(unsigned __int8 *a1)
{
  int v2 = *a1;
  sub_100026AD4((uint64_t)a1, (uint64_t)v5);
  if (v2 == 1)
  {
    char v3 = v5[1];
    sub_100026BE0((uint64_t)v5);
    if (v3) {
      return (*((uint64_t (**)(uint64_t, void, void, uint64_t))a1 + 4))(1, 0, 0, 2);
    }
  }
  else
  {
    sub_100026BE0((uint64_t)v5);
  }
  return (*((uint64_t (**)(uint64_t, void, void, void))a1 + 2))(1, 0, 0, 0);
}

uint64_t sub_100051A24@<X0>(uint64_t a1@<X8>)
{
  return sub_10005251C(a1);
}

uint64_t sub_100051A58@<X0>(uint64_t a1@<X8>)
{
  return sub_100052668(a1);
}

uint64_t sub_100051A84@<X0>(uint64_t a1@<X8>)
{
  return sub_1000527A4(a1);
}

uint64_t sub_100051A98@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = Image.init(_internalSystemName:)();
  *a1 = result;
  return result;
}

uint64_t sub_100051AD8()
{
  return Section<>.init(content:)();
}

uint64_t sub_100051B40()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100051B5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v38 = a2;
  uint64_t v37 = type metadata accessor for SmallIconTitleLabelStyle(0);
  __chkstk_darwin(v37);
  uint64_t v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000063C0(&qword_1001FD550);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v34 = (uint64_t)&v31 - v9;
  uint64_t v10 = sub_1000063C0((uint64_t *)&unk_1001FD570);
  uint64_t v35 = *(void *)(v10 - 8);
  uint64_t v36 = v10;
  __chkstk_darwin(v10);
  uint64_t v33 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_1000063C0(&qword_1001FD548);
  __chkstk_darwin(v32);
  uint64_t v31 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1001FAD20 != -1) {
    swift_once();
  }
  long long v13 = xmmword_1002129C0;
  uint64_t v14 = static Alignment.center.getter();
  uint64_t v16 = v15;
  *((void *)v8 + 3) = 0;
  *((void *)v8 + 4) = 0;
  v8[40] = 1;
  uint64_t v17 = (uint64_t *)&v8[*(int *)(v5 + 48)];
  *uint64_t v17 = swift_getKeyPath();
  sub_1000063C0((uint64_t *)&unk_1001FAE30);
  swift_storeEnumTagMultiPayload();
  char *v8 = 0;
  *((void *)v8 + 1) = v14;
  *((void *)v8 + 2) = v16;
  *(_OWORD *)(v8 + 24) = v13;
  v8[40] = 0;
  sub_100051FB8(a1, (uint64_t)&v8[*(int *)(v5 + 44)]);
  uint64_t v18 = v34;
  sub_100026FD0((uint64_t)v8, v34, &qword_1001FD550);
  uint64_t v19 = *(void *)(a1 + 32);
  char v20 = *(unsigned char *)(a1 + 40);
  long long v39 = *(_OWORD *)(a1 + 16);
  uint64_t v40 = v19;
  char v41 = v20;
  sub_1000063C0(&qword_100202930);
  Binding.projectedValue.getter();
  uint64_t v21 = v43;
  char v22 = v44;
  *(_OWORD *)uint64_t v4 = v42;
  *((void *)v4 + 2) = v21;
  v4[24] = v22;
  uint64_t v23 = (uint64_t *)&v4[*(int *)(v37 + 20)];
  *uint64_t v23 = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  sub_100027F2C(&qword_1001FD558, &qword_1001FD550);
  sub_100058088((unint64_t *)&unk_1001FD560, (void (*)(uint64_t))type metadata accessor for SmallIconTitleLabelStyle);
  uint64_t v24 = v33;
  View.labelStyle<A>(_:)();
  sub_100057C58((uint64_t)v4, type metadata accessor for SmallIconTitleLabelStyle);
  sub_10002784C(v18, &qword_1001FD550);
  uint64_t v26 = v35;
  uint64_t v25 = v36;
  uint64_t v27 = (uint64_t)v31;
  (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v31, v24, v36);
  uint64_t v28 = v27 + *(int *)(v32 + 36);
  *(_WORD *)uint64_t v28 = 0;
  *(unsigned char *)(v28 + 2) = 1;
  (*(void (**)(char *, uint64_t))(v26 + 8))(v24, v25);
  uint64_t v29 = v38;
  sub_100008DD4(v27, v38, &qword_1001FD548);
  *(_WORD *)(v29 + *(int *)(sub_1000063C0(&qword_1001FD530) + 36)) = 256;
  return sub_10002784C(v27, &qword_1001FD548);
}

uint64_t sub_100051FB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v40 = a1;
  uint64_t v46 = a2;
  uint64_t v3 = sub_1000063C0(&qword_1001FD580);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000063C0(&qword_1001FD588);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v45 = (uint64_t)v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v44 = (uint64_t)v38 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v43 = (char *)v38 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  long long v42 = (char *)v38 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)v38 - v17;
  __chkstk_darwin(v16);
  char v20 = (char *)v38 - v19;
  uint64_t v41 = (uint64_t)v38 - v19;
  sub_100026B30(a1, (uint64_t)v48);
  uint64_t v21 = swift_allocObject();
  sub_1000269E0((uint64_t)v48, v21 + 16);
  uint64_t v22 = sub_1000063C0(&qword_1001FD590);
  unint64_t v23 = sub_100057CF4();
  v38[0] = v22;
  v38[1] = v23;
  Button.init(action:label:)();
  int64_t v47 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
  v47(v18, v6, v3);
  uint64_t v24 = *(void (**)(char *, uint64_t))(v4 + 8);
  v24(v6, v3);
  long long v39 = v18;
  sub_100026FD0((uint64_t)v18, (uint64_t)v20, &qword_1001FD588);
  uint64_t v25 = v40;
  sub_100026B30(v40, (uint64_t)v48);
  uint64_t v26 = swift_allocObject();
  sub_1000269E0((uint64_t)v48, v26 + 16);
  Button.init(action:label:)();
  uint64_t v27 = (uint64_t)v42;
  v47(v42, v6, v3);
  v24(v6, v3);
  sub_100026FD0(v27, (uint64_t)v18, &qword_1001FD588);
  sub_100026B30(v25, (uint64_t)v48);
  uint64_t v28 = swift_allocObject();
  sub_1000269E0((uint64_t)v48, v28 + 16);
  Button.init(action:label:)();
  uint64_t v29 = (uint64_t)v43;
  v47(v43, v6, v3);
  v24(v6, v3);
  sub_100026FD0(v29, v27, &qword_1001FD588);
  uint64_t v30 = v41;
  uint64_t v31 = v29;
  sub_100008DD4(v41, v29, &qword_1001FD588);
  uint64_t v32 = (uint64_t)v39;
  uint64_t v33 = v44;
  sub_100008DD4((uint64_t)v39, v44, &qword_1001FD588);
  uint64_t v34 = v45;
  sub_100008DD4(v27, v45, &qword_1001FD588);
  uint64_t v35 = v46;
  sub_100008DD4(v29, v46, &qword_1001FD588);
  uint64_t v36 = sub_1000063C0(&qword_1001FD5B8);
  sub_100008DD4(v33, v35 + *(int *)(v36 + 48), &qword_1001FD588);
  sub_100008DD4(v34, v35 + *(int *)(v36 + 64), &qword_1001FD588);
  sub_10002784C(v27, &qword_1001FD588);
  sub_10002784C(v32, &qword_1001FD588);
  sub_10002784C(v30, &qword_1001FD588);
  sub_10002784C(v34, &qword_1001FD588);
  sub_10002784C(v33, &qword_1001FD588);
  return sub_10002784C(v31, &qword_1001FD588);
}

uint64_t sub_1000524B0@<X0>(uint64_t a1@<X8>)
{
  return sub_10005251C(a1);
}

uint64_t sub_1000524E4@<X0>(uint64_t a1@<X8>)
{
  return sub_10005251C(a1);
}

uint64_t sub_10005251C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1000063C0(&qword_1001FBBC0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  LocalizedStringKey.init(stringLiteral:)();
  Label<>.init(_:systemImage:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 16))(a1, v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_10005263C@<X0>(uint64_t a1@<X8>)
{
  return sub_100052668(a1);
}

uint64_t sub_100052668@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1000063C0(&qword_1001FBBC0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  Label.init(title:icon:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 16))(a1, v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_100052790@<X0>(uint64_t a1@<X8>)
{
  return sub_1000527A4(a1);
}

uint64_t sub_1000527A4@<X0>(uint64_t a1@<X8>)
{
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t result = Text.init(_:tableName:bundle:comment:)();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_100052808@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = Image.init(_internalSystemName:)();
  *a1 = result;
  return result;
}

uint64_t sub_100052848()
{
  return Section<>.init(content:)();
}

uint64_t sub_1000528B0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000528CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1000063C0(&qword_1001FD4B0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v15[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = v1;
  sub_1000063C0(&qword_1001FD4B8);
  sub_100027F2C(&qword_1001FD4C0, &qword_1001FD4B8);
  Section<>.init(content:)();
  char v7 = *(unsigned char *)(v1 + *(int *)(type metadata accessor for TransformSection(0) + 32) + 8);
  uint64_t v8 = swift_retain();
  sub_100020A68(v8, v7);
  swift_release();
  char v9 = sub_100094EC8();
  swift_release();
  BOOL v10 = (v9 & 2) == 0;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = v10;
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v4 + 16))(a1, v6, v3);
  uint64_t v13 = (uint64_t *)(a1 + *(int *)(sub_1000063C0(&qword_1001FD4C8) + 36));
  *uint64_t v13 = KeyPath;
  v13[1] = (uint64_t)sub_100026D50;
  v13[2] = v12;
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_100052ACC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = static Alignment.top.getter();
  uint64_t v6 = v5;
  if (qword_1001FAC88 != -1) {
    swift_once();
  }
  uint64_t v7 = qword_1001FD370;
  uint64_t v8 = *(void *)algn_1001FD378;
  char v9 = byte_1001FD380;
  *(void *)(a2 + 24) = 0;
  *(void *)(a2 + 32) = 0;
  *(unsigned char *)(a2 + 40) = 1;
  uint64_t v10 = sub_1000063C0(&qword_1001FD4B8);
  uint64_t v11 = (uint64_t *)(a2 + *(int *)(v10 + 48));
  *uint64_t v11 = swift_getKeyPath();
  sub_1000063C0((uint64_t *)&unk_1001FAE30);
  swift_storeEnumTagMultiPayload();
  *(unsigned char *)a2 = 0;
  *(void *)(a2 + 8) = v4;
  *(void *)(a2 + 16) = v6;
  *(void *)(a2 + 24) = v7;
  *(void *)(a2 + 32) = v8;
  *(unsigned char *)(a2 + 40) = v9;
  return sub_100052BCC(a1, a2 + *(int *)(v10 + 44));
}

uint64_t sub_100052BCC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v76 = a2;
  uint64_t v3 = sub_1000063C0((uint64_t *)&unk_1001FD4D0);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v77 = (uint64_t)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v75 = (uint64_t *)((char *)&v64 - v6);
  uint64_t v78 = type metadata accessor for DynamicTypeSize();
  uint64_t v7 = *(void *)(v78 - 8);
  __chkstk_darwin(v78);
  char v9 = (char *)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = type metadata accessor for Divider();
  uint64_t v66 = *(void *)(v67 - 8);
  __chkstk_darwin(v67);
  uint64_t v11 = (char *)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_1000063C0(&qword_1001FBD88);
  __chkstk_darwin(v65);
  uint64_t v13 = (char *)&v64 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = sub_1000063C0(&qword_1001FD4E0);
  uint64_t v14 = __chkstk_darwin(v69);
  uint64_t v74 = (uint64_t)&v64 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v68 = (uint64_t)&v64 - v17;
  __chkstk_darwin(v16);
  uint64_t v72 = (uint64_t)&v64 - v18;
  uint64_t v19 = sub_1000063C0(&qword_1001FD4E8);
  uint64_t v20 = __chkstk_darwin(v19 - 8);
  uint64_t v73 = (uint64_t)&v64 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v24 = (char *)&v64 - v23;
  __chkstk_darwin(v22);
  uint64_t v26 = (char *)&v64 - v25;
  uint64_t v27 = static VerticalAlignment.top.getter();
  if (qword_1001FAC90 != -1) {
    swift_once();
  }
  uint64_t v28 = qword_1001FD388;
  char v29 = byte_1001FD390;
  *(void *)uint64_t v24 = v27;
  *((void *)v24 + 1) = v28;
  v24[16] = v29;
  uint64_t v30 = sub_1000063C0(&qword_1001FD4F0);
  sub_1000532A4(a1, (uint64_t)&v24[*(int *)(v30 + 44)]);
  uint64_t v71 = v26;
  sub_100026FD0((uint64_t)v24, (uint64_t)v26, &qword_1001FD4E8);
  Divider.init()();
  uint64_t v31 = a1;
  type metadata accessor for TransformSection(0);
  sub_100020A04((uint64_t)v9);
  char v32 = DynamicTypeSize.isAccessibilitySize.getter();
  uint64_t v33 = *(void (**)(char *, uint64_t))(v7 + 8);
  uint64_t v70 = v7 + 8;
  v33(v9, v78);
  if ((v32 & 1) == 0) {
    GeometryProxy.size.getter();
  }
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v34 = v66;
  uint64_t v35 = v67;
  (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v13, v11, v67);
  uint64_t v36 = &v13[*(int *)(v65 + 36)];
  long long v37 = v80;
  *(_OWORD *)uint64_t v36 = v79;
  *((_OWORD *)v36 + 1) = v37;
  *((_OWORD *)v36 + 2) = v81;
  (*(void (**)(char *, uint64_t))(v34 + 8))(v11, v35);
  char v38 = static Edge.Set.top.getter();
  sub_100020A04((uint64_t)v9);
  char v39 = DynamicTypeSize.isAccessibilitySize.getter();
  v33(v9, v78);
  uint64_t v40 = 0;
  uint64_t v41 = 0;
  uint64_t v42 = 0;
  uint64_t v43 = 0;
  uint64_t v44 = v31;
  if ((v39 & 1) == 0)
  {
    GeometryProxy.size.getter();
    EdgeInsets.init(_all:)();
    uint64_t v40 = v45;
    uint64_t v41 = v46;
    uint64_t v42 = v47;
    uint64_t v43 = v48;
  }
  uint64_t v49 = v68;
  sub_100008DD4((uint64_t)v13, v68, &qword_1001FBD88);
  uint64_t v50 = v49 + *(int *)(v69 + 36);
  *(unsigned char *)uint64_t v50 = v38;
  *(void *)(v50 + 8) = v40;
  *(void *)(v50 + 16) = v41;
  *(void *)(v50 + 24) = v42;
  *(void *)(v50 + 32) = v43;
  *(unsigned char *)(v50 + 40) = v39 & 1;
  sub_10002784C((uint64_t)v13, &qword_1001FBD88);
  uint64_t v51 = v72;
  sub_100026FD0(v49, v72, &qword_1001FD4E0);
  uint64_t v52 = static VerticalAlignment.top.getter();
  uint64_t v53 = qword_1001FD388;
  char v54 = byte_1001FD390;
  uint64_t v55 = (uint64_t)v75;
  *uint64_t v75 = v52;
  *(void *)(v55 + 8) = v53;
  *(unsigned char *)(v55 + 16) = v54;
  uint64_t v56 = sub_1000063C0(&qword_1001FD4F8);
  sub_1000538D8(v44, (void *)(v55 + *(int *)(v56 + 44)));
  uint64_t v57 = (uint64_t)v71;
  uint64_t v58 = v73;
  sub_100008DD4((uint64_t)v71, v73, &qword_1001FD4E8);
  uint64_t v59 = v74;
  sub_100008DD4(v51, v74, &qword_1001FD4E0);
  uint64_t v60 = v77;
  sub_100008DD4(v55, v77, (uint64_t *)&unk_1001FD4D0);
  uint64_t v61 = v76;
  sub_100008DD4(v58, v76, &qword_1001FD4E8);
  uint64_t v62 = sub_1000063C0(&qword_1001FD500);
  sub_100008DD4(v59, v61 + *(int *)(v62 + 48), &qword_1001FD4E0);
  sub_100008DD4(v60, v61 + *(int *)(v62 + 64), (uint64_t *)&unk_1001FD4D0);
  sub_10002784C(v55, (uint64_t *)&unk_1001FD4D0);
  sub_10002784C(v51, &qword_1001FD4E0);
  sub_10002784C(v57, &qword_1001FD4E8);
  sub_10002784C(v60, (uint64_t *)&unk_1001FD4D0);
  sub_10002784C(v59, &qword_1001FD4E0);
  return sub_10002784C(v58, &qword_1001FD4E8);
}

uint64_t sub_1000532A4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v63 = a2;
  uint64_t v64 = type metadata accessor for DynamicTypeSize();
  uint64_t v67 = *(void *)(v64 - 8);
  __chkstk_darwin(v64);
  uint64_t v56 = (uint64_t)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for TransformItemView(0);
  uint64_t v5 = (int *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000063C0(&qword_1001FD508) - 8;
  uint64_t v55 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_1000063C0((uint64_t *)&unk_1001FD510) - 8;
  uint64_t v11 = __chkstk_darwin(v65);
  uint64_t v62 = (uint64_t)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v61 = (uint64_t)&v46 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v46 - v16;
  __chkstk_darwin(v15);
  uint64_t v66 = (uint64_t)&v46 - v18;
  uint64_t v19 = *a1;
  uint64_t v20 = a1[1];
  uint64_t v47 = a1;
  v7[24] = 0;
  *((void *)v7 + 1) = 0;
  *((void *)v7 + 2) = 0;
  *(void *)uint64_t v7 = 6;
  *((void *)v7 + 4) = v19;
  *((void *)v7 + 5) = v20;
  uint64_t v21 = (uint64_t *)&v7[v5[8]];
  *uint64_t v21 = swift_getKeyPath();
  uint64_t v60 = sub_1000063C0((uint64_t *)&unk_1001FB730);
  swift_storeEnumTagMultiPayload();
  uint64_t v22 = (uint64_t *)&v7[v5[9]];
  uint64_t *v22 = swift_getKeyPath();
  uint64_t v57 = sub_1000063C0((uint64_t *)&unk_1001FAE30);
  swift_storeEnumTagMultiPayload();
  uint64_t v23 = &v7[v5[10]];
  *(void *)uint64_t v23 = swift_getKeyPath();
  v23[8] = 0;
  uint64_t v24 = type metadata accessor for TransformSection(0);
  uint64_t v53 = (char *)a1 + *(int *)(v24 + 20);
  uint64_t v25 = v53;
  uint64_t v26 = &v10[*(int *)(v8 + 44)];
  uint64_t v27 = type metadata accessor for GeometryProxy();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v52 = *(void (**)(char *, char *, uint64_t))(v28 + 16);
  uint64_t v54 = v28 + 16;
  v52(v26, v25, v27);
  uint64_t v51 = type metadata accessor for TransformItemView;
  sub_10005AFE0((uint64_t)v7, (uint64_t)v10, type metadata accessor for TransformItemView);
  swift_retain();
  uint64_t v50 = type metadata accessor for TransformItemView;
  sub_100057C58((uint64_t)v7, type metadata accessor for TransformItemView);
  sub_100008DD4((uint64_t)v10, (uint64_t)v17, &qword_1001FD508);
  *(_WORD *)&v17[*(int *)(v65 + 44)] = 257;
  sub_10002784C((uint64_t)v10, &qword_1001FD508);
  sub_100026FD0((uint64_t)v17, v66, (uint64_t *)&unk_1001FD510);
  char v29 = v47;
  uint64_t v49 = (char *)v47 + *(int *)(v24 + 36);
  uint64_t v30 = v56;
  sub_100020A04(v56);
  int v31 = DynamicTypeSize.isAccessibilitySize.getter();
  LOBYTE(v24) = v31;
  int v59 = v31;
  char v32 = *(void (**)(uint64_t, uint64_t))(v67 + 8);
  v67 += 8;
  uint64_t v48 = v32;
  v32(v30, v64);
  BOOL v58 = (v24 & 1) == 0;
  uint64_t v33 = *v29;
  uint64_t v34 = v29[1];
  v7[24] = 0;
  *((void *)v7 + 1) = 0;
  *((void *)v7 + 2) = 0;
  *(void *)uint64_t v7 = 7;
  *((void *)v7 + 4) = v33;
  *((void *)v7 + 5) = v34;
  uint64_t v35 = (uint64_t *)&v7[v5[8]];
  *uint64_t v35 = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  uint64_t v36 = (uint64_t *)&v7[v5[9]];
  uint64_t *v36 = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  long long v37 = &v7[v5[10]];
  *(void *)long long v37 = swift_getKeyPath();
  v37[8] = 0;
  v52(&v10[*(int *)(v55 + 44)], v53, v27);
  sub_10005AFE0((uint64_t)v7, (uint64_t)v10, v51);
  swift_retain();
  sub_100057C58((uint64_t)v7, v50);
  sub_100008DD4((uint64_t)v10, (uint64_t)v17, &qword_1001FD508);
  *(_WORD *)&v17[*(int *)(v65 + 44)] = 257;
  sub_10002784C((uint64_t)v10, &qword_1001FD508);
  uint64_t v38 = v61;
  sub_100026FD0((uint64_t)v17, v61, (uint64_t *)&unk_1001FD510);
  sub_100020A04(v30);
  LOBYTE(v37) = DynamicTypeSize.isAccessibilitySize.getter();
  v48(v30, v64);
  uint64_t v39 = v66;
  sub_100008DD4(v66, (uint64_t)v17, (uint64_t *)&unk_1001FD510);
  uint64_t v40 = v62;
  sub_100008DD4(v38, v62, (uint64_t *)&unk_1001FD510);
  uint64_t v41 = v63;
  sub_100008DD4((uint64_t)v17, v63, (uint64_t *)&unk_1001FD510);
  uint64_t v42 = (int *)sub_1000063C0(&qword_1001FD528);
  uint64_t v43 = v41 + v42[12];
  *(void *)uint64_t v43 = 0;
  *(unsigned char *)(v43 + 8) = v58;
  *(unsigned char *)(v43 + 9) = v59 & 1;
  sub_100008DD4(v40, v41 + v42[16], (uint64_t *)&unk_1001FD510);
  uint64_t v44 = v41 + v42[20];
  *(void *)uint64_t v44 = 0;
  *(unsigned char *)(v44 + 8) = (v37 & 1) == 0;
  *(unsigned char *)(v44 + 9) = v37 & 1;
  sub_10002784C(v38, (uint64_t *)&unk_1001FD510);
  sub_10002784C(v39, (uint64_t *)&unk_1001FD510);
  sub_10002784C(v40, (uint64_t *)&unk_1001FD510);
  return sub_10002784C((uint64_t)v17, (uint64_t *)&unk_1001FD510);
}

uint64_t sub_1000538D8@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v62 = a2;
  uint64_t v3 = type metadata accessor for TransformItemView(0);
  uint64_t v4 = (int *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = sub_1000063C0(&qword_1001FD508) - 8;
  __chkstk_darwin(v63);
  uint64_t v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_1000063C0((uint64_t *)&unk_1001FD510) - 8;
  uint64_t v9 = __chkstk_darwin(v66);
  uint64_t v61 = (uint64_t)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v60 = (uint64_t)&v48 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v64 = (uint64_t)&v48 - v14;
  __chkstk_darwin(v13);
  uint64_t v65 = (uint64_t)&v48 - v15;
  uint64_t v16 = type metadata accessor for DynamicTypeSize();
  uint64_t v56 = v16;
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for TransformSection(0);
  uint64_t v57 = (char *)a1 + *(int *)(v20 + 36);
  sub_100020A04((uint64_t)v19);
  int v21 = DynamicTypeSize.isAccessibilitySize.getter();
  char v22 = v21;
  int v59 = v21;
  uint64_t v23 = *(void (**)(char *, uint64_t))(v17 + 8);
  uint64_t v52 = v17 + 8;
  uint64_t v55 = v23;
  v23(v19, v16);
  BOOL v58 = (v22 & 1) == 0;
  uint64_t v24 = *a1;
  uint64_t v25 = a1[1];
  v6[24] = 0;
  *((void *)v6 + 1) = 0;
  *((void *)v6 + 2) = 0;
  *(void *)uint64_t v6 = 8;
  *((void *)v6 + 4) = v24;
  *((void *)v6 + 5) = v25;
  uint64_t v26 = (uint64_t *)&v6[v4[8]];
  *uint64_t v26 = swift_getKeyPath();
  uint64_t v54 = sub_1000063C0((uint64_t *)&unk_1001FB730);
  swift_storeEnumTagMultiPayload();
  uint64_t v27 = (uint64_t *)&v6[v4[9]];
  *uint64_t v27 = swift_getKeyPath();
  uint64_t v53 = sub_1000063C0((uint64_t *)&unk_1001FAE30);
  swift_storeEnumTagMultiPayload();
  uint64_t v28 = &v6[v4[10]];
  *(void *)uint64_t v28 = swift_getKeyPath();
  v28[8] = 0;
  uint64_t v50 = (char *)a1 + *(int *)(v20 + 20);
  char v29 = v50;
  uint64_t v30 = &v8[*(int *)(v63 + 44)];
  uint64_t v31 = type metadata accessor for GeometryProxy();
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v49 = *(void (**)(char *, char *, uint64_t))(v32 + 16);
  uint64_t v51 = v32 + 16;
  v49(v30, v29, v31);
  sub_10005AFE0((uint64_t)v6, (uint64_t)v8, type metadata accessor for TransformItemView);
  swift_retain();
  sub_100057C58((uint64_t)v6, type metadata accessor for TransformItemView);
  uint64_t v33 = v64;
  sub_100008DD4((uint64_t)v8, v64, &qword_1001FD508);
  *(_WORD *)(v33 + *(int *)(v66 + 44)) = 257;
  sub_10002784C((uint64_t)v8, &qword_1001FD508);
  sub_100026FD0(v33, v65, (uint64_t *)&unk_1001FD510);
  sub_100020A04((uint64_t)v19);
  LOBYTE(v33) = DynamicTypeSize.isAccessibilitySize.getter();
  v55(v19, v56);
  LODWORD(v57) = (v33 & 1) == 0;
  uint64_t v34 = *a1;
  uint64_t v35 = a1[1];
  v6[24] = 0;
  *((void *)v6 + 1) = 0;
  *((void *)v6 + 2) = 0;
  *(void *)uint64_t v6 = 9;
  *((void *)v6 + 4) = v34;
  *((void *)v6 + 5) = v35;
  uint64_t v36 = (uint64_t *)&v6[v4[8]];
  uint64_t *v36 = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  long long v37 = (uint64_t *)&v6[v4[9]];
  *long long v37 = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  uint64_t v38 = &v6[v4[10]];
  *(void *)uint64_t v38 = swift_getKeyPath();
  v38[8] = 0;
  v49(&v8[*(int *)(v63 + 44)], v50, v31);
  sub_10005AFE0((uint64_t)v6, (uint64_t)v8, type metadata accessor for TransformItemView);
  swift_retain();
  sub_100057C58((uint64_t)v6, type metadata accessor for TransformItemView);
  uint64_t v39 = v60;
  sub_100008DD4((uint64_t)v8, v60, &qword_1001FD508);
  *(_WORD *)(v39 + *(int *)(v66 + 44)) = 257;
  sub_10002784C((uint64_t)v8, &qword_1001FD508);
  uint64_t v40 = v64;
  sub_100026FD0(v39, v64, (uint64_t *)&unk_1001FD510);
  uint64_t v41 = v65;
  sub_100008DD4(v65, v39, (uint64_t *)&unk_1001FD510);
  uint64_t v42 = v61;
  sub_100008DD4(v40, v61, (uint64_t *)&unk_1001FD510);
  uint64_t v43 = v62;
  void *v62 = 0;
  *((unsigned char *)v43 + 8) = v58;
  *((unsigned char *)v43 + 9) = v59 & 1;
  uint64_t v44 = v43;
  uint64_t v45 = (int *)sub_1000063C0(&qword_1001FD520);
  sub_100008DD4(v39, (uint64_t)v44 + v45[12], (uint64_t *)&unk_1001FD510);
  uint64_t v46 = (uint64_t)v44 + v45[16];
  *(void *)uint64_t v46 = 0;
  *(unsigned char *)(v46 + 8) = (_BYTE)v57;
  *(unsigned char *)(v46 + 9) = v33 & 1;
  sub_100008DD4(v42, (uint64_t)v44 + v45[20], (uint64_t *)&unk_1001FD510);
  sub_10002784C(v40, (uint64_t *)&unk_1001FD510);
  sub_10002784C(v41, (uint64_t *)&unk_1001FD510);
  sub_10002784C(v42, (uint64_t *)&unk_1001FD510);
  return sub_10002784C(v39, (uint64_t *)&unk_1001FD510);
}

uint64_t sub_100053F10@<X0>(uint64_t a1@<X8>)
{
  return sub_100052ACC(*(uint64_t **)(v1 + 16), a1);
}

uint64_t sub_100053F18@<X0>(uint64_t a1@<X8>)
{
  uint64_t v48 = a1;
  uint64_t v46 = sub_1000063C0(&qword_1001FD7B0);
  __chkstk_darwin(v46);
  uint64_t v2 = (char *)&v37 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_1000063C0(&qword_1001FD7B8);
  uint64_t v39 = *(void *)(v47 - 8);
  uint64_t v3 = __chkstk_darwin(v47);
  long long v37 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v38 = (char *)&v37 - v5;
  uint64_t v43 = sub_1000063C0(&qword_1001FD7C0);
  __chkstk_darwin(v43);
  uint64_t v45 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = type metadata accessor for AccessibilityChildBehavior();
  uint64_t v7 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  uint64_t v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_1000063C0(&qword_1001FD7C8);
  __chkstk_darwin(v42);
  uint64_t v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_1000063C0(&qword_1001FD7D0);
  uint64_t v12 = *(void *)(v44 - 8);
  uint64_t v13 = __chkstk_darwin(v44);
  uint64_t v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v37 - v16;
  id v18 = [self currentDevice];
  id v19 = [v18 userInterfaceIdiom];

  uint64_t v20 = static HorizontalAlignment.center.getter();
  int v21 = (void (**)(char *, uint64_t))(v7 + 8);
  if (v19 == (id)6)
  {
    *(void *)uint64_t v11 = v20;
    *((void *)v11 + 1) = 0;
    v11[16] = 1;
    uint64_t v22 = sub_1000063C0(&qword_1001FD7F0);
    sub_100055238(v41, (uint64_t)&v11[*(int *)(v22 + 44)]);
    static AccessibilityChildBehavior.combine.getter();
    uint64_t v23 = sub_100027F2C(&qword_1001FD7E8, &qword_1001FD7C8);
    uint64_t v24 = v42;
    View.accessibilityElement(children:)();
    (*v21)(v9, v40);
    sub_10002784C((uint64_t)v11, &qword_1001FD7C8);
    uint64_t v25 = v44;
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v17, v15, v44);
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v45, v17, v25);
    swift_storeEnumTagMultiPayload();
    uint64_t v49 = v24;
    uint64_t v50 = v23;
    swift_getOpaqueTypeConformance2();
    uint64_t v26 = sub_100027F2C(&qword_1001FD7E0, &qword_1001FD7B0);
    uint64_t v49 = v46;
    uint64_t v50 = v26;
    swift_getOpaqueTypeConformance2();
    _ConditionalContent<>.init(storage:)();
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v17, v25);
  }
  else
  {
    *(void *)uint64_t v2 = v20;
    *((void *)v2 + 1) = 0;
    v2[16] = 1;
    uint64_t v28 = sub_1000063C0(&qword_1001FD7D8);
    sub_100054574(v41, (uint64_t)&v2[*(int *)(v28 + 44)]);
    static AccessibilityChildBehavior.combine.getter();
    uint64_t v29 = sub_100027F2C(&qword_1001FD7E0, &qword_1001FD7B0);
    uint64_t v30 = v37;
    uint64_t v31 = v46;
    View.accessibilityElement(children:)();
    (*v21)(v9, v40);
    sub_10002784C((uint64_t)v2, &qword_1001FD7B0);
    uint64_t v33 = v38;
    uint64_t v32 = v39;
    uint64_t v34 = v30;
    uint64_t v35 = v47;
    (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v38, v34, v47);
    (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v45, v33, v35);
    swift_storeEnumTagMultiPayload();
    uint64_t v36 = sub_100027F2C(&qword_1001FD7E8, &qword_1001FD7C8);
    uint64_t v49 = v42;
    uint64_t v50 = v36;
    swift_getOpaqueTypeConformance2();
    uint64_t v49 = v31;
    uint64_t v50 = v29;
    swift_getOpaqueTypeConformance2();
    _ConditionalContent<>.init(storage:)();
    return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v33, v35);
  }
}

uint64_t sub_100054574@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v53 = a2;
  uint64_t v48 = type metadata accessor for TransformItemButton(0);
  uint64_t v3 = __chkstk_darwin(v48);
  uint64_t v5 = (uint64_t *)((char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v46 - v6;
  uint64_t v8 = type metadata accessor for TransformItemView(0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8 - 8);
  uint64_t v50 = sub_1000063C0(&qword_1001FD8B8);
  uint64_t v11 = *(void *)(v50 - 8);
  __chkstk_darwin(v50);
  uint64_t v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000063C0((uint64_t *)&unk_1001FD8C0);
  uint64_t v51 = *(void *)(v14 - 8);
  uint64_t v52 = v14;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1000063C0(&qword_1001FBC70);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  uint64_t v47 = (uint64_t)&v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v49 = (uint64_t)&v46 - v20;
  sub_10005AFE0(a1, (uint64_t)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for TransformItemView);
  unint64_t v21 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v22 = swift_allocObject();
  sub_1000597B8((uint64_t)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v22 + v21, type metadata accessor for TransformItemView);
  uint64_t v54 = a1;
  sub_1000063C0(&qword_1001FD8D0);
  sub_100027F2C(&qword_1001FD8D8, &qword_1001FD8D0);
  Button.init(action:label:)();
  *uint64_t v5 = swift_getKeyPath();
  sub_1000063C0((uint64_t *)&unk_1001FB730);
  swift_storeEnumTagMultiPayload();
  uint64_t v23 = (uint64_t *)((char *)v5 + *(int *)(v48 + 20));
  *uint64_t v23 = swift_getKeyPath();
  sub_1000063C0((uint64_t *)&unk_1001FAE30);
  swift_storeEnumTagMultiPayload();
  sub_1000597B8((uint64_t)v5, (uint64_t)v7, type metadata accessor for TransformItemButton);
  sub_100027F2C(&qword_1001FD8E0, &qword_1001FD8B8);
  sub_100058088(&qword_1001FD818, (void (*)(uint64_t))type metadata accessor for TransformItemButton);
  uint64_t v24 = v50;
  View.buttonStyle<A>(_:)();
  sub_100057C58((uint64_t)v7, type metadata accessor for TransformItemButton);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v24);
  uint64_t v25 = static Alignment.center.getter();
  uint64_t v26 = v47;
  double v28 = sub_100019AFC(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, v47, 0.0, 1, 95.0, 0, v25, v27);
  (*(void (**)(char *, uint64_t, double))(v51 + 8))(v16, v52, v28);
  uint64_t v29 = v49;
  sub_100026FD0(v26, v49, &qword_1001FBC70);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v52 = v57;
  LODWORD(v51) = v58;
  uint64_t v30 = v59;
  LODWORD(v50) = v60;
  uint64_t v48 = v61;
  uint64_t v46 = v62;
  uint64_t v55 = sub_1000D5160();
  uint64_t v56 = v31;
  sub_10002DF54();
  uint64_t v32 = Text.init<A>(_:)();
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  char v38 = v37 & 1;
  uint64_t KeyPath = swift_getKeyPath();
  sub_100008DD4(v29, v26, &qword_1001FBC70);
  uint64_t v40 = v53;
  sub_100008DD4(v26, v53, &qword_1001FBC70);
  uint64_t v41 = sub_1000063C0(&qword_1001FD8E8);
  uint64_t v42 = v40 + *(int *)(v41 + 48);
  *(void *)uint64_t v42 = 0;
  *(unsigned char *)(v42 + 8) = 1;
  *(void *)(v42 + 16) = v52;
  *(unsigned char *)(v42 + 24) = v51;
  *(void *)(v42 + 32) = v30;
  *(unsigned char *)(v42 + 40) = v50;
  uint64_t v43 = v46;
  *(void *)(v42 + 48) = v48;
  *(void *)(v42 + 56) = v43;
  uint64_t v44 = v40 + *(int *)(v41 + 64);
  *(void *)uint64_t v44 = v32;
  *(void *)(v44 + 8) = v34;
  *(unsigned char *)(v44 + 16) = v38;
  *(void *)(v44 + 24) = v36;
  *(void *)(v44 + 32) = KeyPath;
  *(unsigned char *)(v44 + 40) = 0;
  sub_10002783C(v32, v34, v38);
  swift_bridgeObjectRetain();
  sub_100058794(KeyPath, 0);
  sub_10002784C(v29, &qword_1001FBC70);
  sub_100026F18(v32, v34, v38);
  swift_bridgeObjectRelease();
  sub_100024D58(KeyPath, 0);
  return sub_10002784C(v26, &qword_1001FBC70);
}

uint64_t sub_100054C28()
{
  return Label.init(title:icon:)();
}

uint64_t sub_100054CB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = a1;
  uint64_t v46 = a1;
  uint64_t v55 = a2;
  uint64_t v3 = type metadata accessor for ColorScheme();
  uint64_t v52 = *(void *)(v3 - 8);
  uint64_t v53 = v3;
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v51 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v50 = (uint64_t)&v45 - v6;
  uint64_t v7 = sub_1000063C0(&qword_1001FD8A8);
  __chkstk_darwin(v7 - 8);
  uint64_t v49 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Image.ResizingMode();
  uint64_t v47 = *(void *)(v9 - 8);
  uint64_t v48 = v9;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DynamicTypeSize();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1000063C0(&qword_1001FD8F0);
  __chkstk_darwin(v16 - 8);
  uint64_t v54 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *(void *)v2;
  uint64_t v19 = *(void *)(v2 + 8);
  uint64_t v20 = *(void *)(v2 + 16);
  char v21 = *(unsigned char *)(v2 + 24);
  uint64_t v22 = type metadata accessor for TransformItemView(0);
  sub_100020A04((uint64_t)v15);
  LOBYTE(v2) = DynamicTypeSize.isAccessibilitySize.getter();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  sub_1000A9D54(v18, v19, v20, v21, v2 & 1);
  Image.init(_:bundle:)();
  uint64_t v24 = v47;
  uint64_t v23 = v48;
  (*(void (**)(char *, void, uint64_t))(v47 + 104))(v11, enum case for Image.ResizingMode.stretch(_:), v48);
  Image.resizable(capInsets:resizingMode:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v11, v23);
  uint64_t v25 = enum case for Image.TemplateRenderingMode.template(_:);
  uint64_t v26 = type metadata accessor for Image.TemplateRenderingMode();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = (uint64_t)v49;
  (*(void (**)(char *, uint64_t, uint64_t))(v27 + 104))(v49, v25, v26);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v27 + 56))(v28, 0, 1, v26);
  uint64_t v29 = Image.renderingMode(_:)();
  swift_release();
  sub_10002784C(v28, &qword_1001FD8A8);
  uint64_t v30 = v46;
  uint64_t v31 = v50;
  sub_100020A84(v50);
  uint64_t v33 = v51;
  uint64_t v32 = v52;
  uint64_t v34 = v53;
  (*(void (**)(char *, void, uint64_t))(v52 + 104))(v51, enum case for ColorScheme.dark(_:), v53);
  LOBYTE(v2) = static ColorScheme.== infix(_:_:)();
  uint64_t v35 = *(void (**)(char *, uint64_t))(v32 + 8);
  v35(v33, v34);
  v35((char *)v31, v34);
  if (v2) {
    uint64_t v36 = static Color.white.getter();
  }
  else {
    uint64_t v36 = static Color.black.getter();
  }
  uint64_t v37 = v36;
  uint64_t v38 = v30 + *(int *)(v22 + 32);
  uint64_t v39 = *(void *)v38;
  char v40 = *(unsigned char *)(v38 + 8);
  sub_100058794(*(void *)v38, v40);
  char v41 = sub_100020D78(v39, v40);
  sub_100024D58(v39, v40);
  double v42 = 0.6;
  uint64_t v56 = v29;
  uint64_t v57 = 0;
  __int16 v58 = 1;
  if (v41) {
    double v42 = 1.0;
  }
  uint64_t v59 = v37;
  double v60 = v42;
  sub_1000063C0(&qword_1001FD908);
  sub_100057EE8(&qword_1001FD900, &qword_1001FD908, (void (*)(void))sub_100059E30);
  uint64_t v43 = (uint64_t)v54;
  View.accessibilityHidden(_:)();
  swift_release();
  swift_release();
  return sub_100026FD0(v43, v55, &qword_1001FD8F0);
}

uint64_t sub_100055238@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v19[1] = a2;
  v19[0] = type metadata accessor for TransformItemButton(0);
  uint64_t v3 = __chkstk_darwin(v19[0]);
  uint64_t v5 = (void *)((char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)v19 - v6;
  uint64_t v8 = type metadata accessor for TransformItemView(0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8 - 8);
  uint64_t v11 = sub_1000063C0(&qword_1001FD7F8);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005AFE0(a1, (uint64_t)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for TransformItemView);
  unint64_t v15 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v16 = swift_allocObject();
  sub_1000597B8((uint64_t)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v16 + v15, type metadata accessor for TransformItemView);
  v19[4] = a1;
  sub_1000063C0(&qword_1001FD800);
  sub_100027F2C(&qword_1001FD808, &qword_1001FD800);
  Button.init(action:label:)();
  *uint64_t v5 = swift_getKeyPath();
  sub_1000063C0((uint64_t *)&unk_1001FB730);
  swift_storeEnumTagMultiPayload();
  uint64_t v17 = (uint64_t *)((char *)v5 + *(int *)(v19[0] + 20));
  *uint64_t v17 = swift_getKeyPath();
  sub_1000063C0((uint64_t *)&unk_1001FAE30);
  swift_storeEnumTagMultiPayload();
  sub_1000597B8((uint64_t)v5, (uint64_t)v7, type metadata accessor for TransformItemButton);
  sub_100027F2C(&qword_1001FD810, &qword_1001FD7F8);
  sub_100058088(&qword_1001FD818, (void (*)(uint64_t))type metadata accessor for TransformItemButton);
  View.buttonStyle<A>(_:)();
  sub_100057C58((uint64_t)v7, type metadata accessor for TransformItemButton);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t sub_1000555F4()
{
  return Label.init(title:icon:)();
}

uint64_t sub_1000556D4@<X0>(uint64_t a1@<X8>)
{
  sub_1000D5160();
  sub_10002DF54();
  uint64_t v2 = Text.init<A>(_:)();
  uint64_t v4 = v3;
  char v6 = v5;
  uint64_t v8 = v7;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t result = swift_getKeyPath();
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v6 & 1;
  *(void *)(a1 + 24) = v8;
  *(void *)(a1 + 32) = KeyPath;
  *(void *)(a1 + 40) = 1;
  *(unsigned char *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = result;
  *(void *)(a1 + 64) = 0x3FD3333333333333;
  return result;
}

uint64_t sub_100055790@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v40 = a2;
  uint64_t v3 = sub_1000063C0(&qword_1001FD8A8);
  __chkstk_darwin(v3 - 8);
  uint64_t v36 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = type metadata accessor for Image.ResizingMode();
  uint64_t v5 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  uint64_t v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DynamicTypeSize();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000063C0(&qword_1001FD878);
  __chkstk_darwin(v12 - 8);
  uint64_t v37 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_1000063C0(&qword_1001FD828) - 8;
  __chkstk_darwin(v39);
  uint64_t v38 = (uint64_t)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void *)a1;
  uint64_t v16 = *(void *)(a1 + 8);
  uint64_t v17 = *(void *)(a1 + 16);
  char v18 = *(unsigned char *)(a1 + 24);
  uint64_t v34 = a1;
  uint64_t v33 = type metadata accessor for TransformItemView(0);
  sub_100020A04((uint64_t)v11);
  LOBYTE(a1) = DynamicTypeSize.isAccessibilitySize.getter();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  sub_1000A9D54(v15, v16, v17, v18, a1 & 1);
  Image.init(_:bundle:)();
  uint64_t v19 = v35;
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for Image.ResizingMode.stretch(_:), v35);
  Image.resizable(capInsets:resizingMode:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v19);
  uint64_t v20 = enum case for Image.TemplateRenderingMode.template(_:);
  uint64_t v21 = type metadata accessor for Image.TemplateRenderingMode();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = (uint64_t)v36;
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 104))(v36, v20, v21);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v22 + 56))(v23, 0, 1, v21);
  uint64_t v24 = Image.renderingMode(_:)();
  swift_release();
  sub_10002784C(v23, &qword_1001FD8A8);
  uint64_t v25 = v34 + *(int *)(v33 + 32);
  uint64_t v26 = *(void *)v25;
  LOBYTE(v8) = *(unsigned char *)(v25 + 8);
  sub_100058794(*(void *)v25, v8);
  LOBYTE(v22) = sub_100020D78(v26, v8);
  sub_100024D58(v26, v8);
  double v27 = 0.6;
  long long v41 = (unint64_t)v24;
  if (v22) {
    double v27 = 1.0;
  }
  LOWORD(v42) = 1;
  *((double *)&v42 + 1) = v27;
  sub_1000063C0(&qword_1001FD888);
  sub_100057EE8(&qword_1001FD880, &qword_1001FD888, (void (*)(void))sub_100059A48);
  uint64_t v28 = (uint64_t)v37;
  View.accessibilityHidden(_:)();
  swift_release();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v29 = v38;
  sub_100008DD4(v28, v38, &qword_1001FD878);
  uint64_t v30 = (_OWORD *)(v29 + *(int *)(v39 + 44));
  long long v31 = v42;
  *uint64_t v30 = v41;
  v30[1] = v31;
  v30[2] = v43;
  sub_10002784C(v28, &qword_1001FD878);
  return sub_100026FD0(v29, v40, &qword_1001FD828);
}

uint64_t sub_100055C8C()
{
  uint64_t v0 = sub_1000063C0(&qword_1001FD9E0);
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)&v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1000063C0(&qword_1001FD9E8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = [self currentDevice];
  [v6 userInterfaceIdiom];

  sub_100055E1C((uint64_t)v5);
  sub_100008DD4((uint64_t)v5, (uint64_t)v2, &qword_1001FD9E8);
  swift_storeEnumTagMultiPayload();
  sub_10005AD90();
  _ConditionalContent<>.init(storage:)();
  return sub_10002784C((uint64_t)v5, &qword_1001FD9E8);
}

uint64_t sub_100055E1C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v99 = a1;
  uint64_t v1 = type metadata accessor for TransformBlendModifier(0);
  __chkstk_darwin(v1 - 8);
  long long v98 = (uint64_t *)((char *)&v74 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v93 = type metadata accessor for ColorScheme();
  uint64_t v91 = *(void *)(v93 - 8);
  uint64_t v3 = __chkstk_darwin(v93);
  long long v96 = (char *)&v74 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v88 = (uint64_t)&v74 - v5;
  uint64_t v6 = type metadata accessor for DynamicTypeSize();
  uint64_t v84 = *(void *)(v6 - 8);
  uint64_t v85 = v6;
  __chkstk_darwin(v6);
  uint64_t v82 = (uint64_t)&v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = type metadata accessor for RoundedRectangle() - 8;
  __chkstk_darwin(v83);
  long long v81 = (double *)((char *)&v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v86 = sub_1000063C0(&qword_100202510);
  __chkstk_darwin(v86);
  uint64_t v90 = (uint64_t)&v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = sub_1000063C0(&qword_1001FDA40);
  __chkstk_darwin(v87);
  uint64_t v94 = (uint64_t)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = sub_1000063C0(&qword_1001FDA48);
  __chkstk_darwin(v89);
  uint64_t v95 = (uint64_t)&v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = sub_1000063C0(&qword_1001FDA50);
  __chkstk_darwin(v92);
  long long v97 = (char *)&v74 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = type metadata accessor for IconOnlyLabelStyle();
  uint64_t v80 = *(void *)(v79 - 8);
  __chkstk_darwin(v79);
  uint64_t v14 = (char *)&v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for ButtonStyleConfiguration.Label();
  uint64_t v77 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v74 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = sub_1000063C0(&qword_1001FDA58);
  uint64_t v76 = *(void *)(v78 - 8);
  __chkstk_darwin(v78);
  uint64_t v19 = (char *)&v74 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1000063C0((uint64_t *)&unk_1001FDA10);
  uint64_t v21 = v20 - 8;
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v74 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_1000063C0(&qword_1001FDA00);
  uint64_t v25 = v24 - 8;
  __chkstk_darwin(v24);
  uint64_t v75 = (char *)&v74 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  ButtonStyleConfiguration.label.getter();
  IconOnlyLabelStyle.init()();
  sub_100058088(&qword_100202100, (void (*)(uint64_t))&type metadata accessor for ButtonStyleConfiguration.Label);
  sub_100058088(&qword_1001FDA20, (void (*)(uint64_t))&type metadata accessor for IconOnlyLabelStyle);
  uint64_t v27 = v79;
  View.labelStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v80 + 8))(v14, v27);
  uint64_t v28 = v81;
  (*(void (**)(char *, uint64_t))(v77 + 8))(v17, v15);
  if (ButtonStyleConfiguration.isPressed.getter()) {
    double v29 = 0.75;
  }
  else {
    double v29 = 1.0;
  }
  uint64_t v30 = v76;
  uint64_t v31 = v78;
  (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v23, v19, v78);
  *(double *)&v23[*(int *)(v21 + 44)] = v29;
  uint64_t v32 = v19;
  uint64_t v33 = (uint64_t)v75;
  (*(void (**)(char *, uint64_t))(v30 + 8))(v32, v31);
  LOBYTE(v31) = static Edge.Set.all.getter();
  EdgeInsets.init(_all:)();
  uint64_t v35 = v34;
  uint64_t v37 = v36;
  uint64_t v39 = v38;
  uint64_t v41 = v40;
  sub_100008DD4((uint64_t)v23, v33, (uint64_t *)&unk_1001FDA10);
  uint64_t v42 = v33 + *(int *)(v25 + 44);
  *(unsigned char *)uint64_t v42 = v31;
  *(void *)(v42 + 8) = v35;
  *(void *)(v42 + 16) = v37;
  *(void *)(v42 + 24) = v39;
  *(void *)(v42 + 32) = v41;
  *(unsigned char *)(v42 + 40) = 0;
  sub_10002784C((uint64_t)v23, (uint64_t *)&unk_1001FDA10);
  type metadata accessor for TransformItemButton(0);
  uint64_t v43 = v82;
  sub_100020A04(v82);
  LOBYTE(v31) = DynamicTypeSize.isAccessibilitySize.getter();
  (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v43, v85);
  if (v31) {
    double v44 = 9.0;
  }
  else {
    double v44 = 6.0;
  }
  uint64_t v45 = (char *)v28 + *(int *)(v83 + 28);
  uint64_t v46 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v47 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v47 - 8) + 104))(v45, v46, v47);
  *uint64_t v28 = v44;
  v28[1] = v44;
  LOBYTE(v46) = ButtonStyleConfiguration.isPressed.getter();
  uint64_t v48 = static Color.white.getter();
  if (v46)
  {
    uint64_t v49 = v88;
    sub_100020A84(v88);
    uint64_t v50 = sub_1000EF408();
    swift_release();
    uint64_t v51 = v91;
    uint64_t v52 = v93;
    (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v49, v93);
    uint64_t v48 = v50;
  }
  else
  {
    uint64_t v52 = v93;
    uint64_t v51 = v91;
    uint64_t v49 = v88;
  }
  uint64_t v53 = v90;
  sub_10005AFE0((uint64_t)v28, v90, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  uint64_t v54 = v86;
  *(void *)(v53 + *(int *)(v86 + 52)) = v48;
  *(_WORD *)(v53 + *(int *)(v54 + 56)) = 256;
  sub_100057C58((uint64_t)v28, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  sub_100020A84(v49);
  uint64_t v55 = v96;
  (*(void (**)(char *, void, uint64_t))(v51 + 104))(v96, enum case for ColorScheme.light(_:), v52);
  char v56 = static ColorScheme.== infix(_:_:)();
  uint64_t v57 = *(void (**)(char *, uint64_t))(v51 + 8);
  v57(v55, v52);
  v57((char *)v49, v52);
  if (v56) {
    double v58 = 0.5;
  }
  else {
    double v58 = 0.07;
  }
  uint64_t v59 = v94;
  sub_100008DD4(v53, v94, &qword_100202510);
  *(double *)(v59 + *(int *)(v87 + 36)) = v58;
  sub_10002784C(v53, &qword_100202510);
  static Color.black.getter();
  uint64_t v60 = Color.opacity(_:)();
  swift_release();
  uint64_t v61 = v95;
  sub_100008DD4(v59, v95, &qword_1001FDA40);
  uint64_t v62 = v61 + *(int *)(v89 + 36);
  *(void *)uint64_t v62 = v60;
  *(_OWORD *)(v62 + 8) = xmmword_10018C0B0;
  *(void *)(v62 + 24) = 0x4000000000000000;
  sub_10002784C(v59, &qword_1001FDA40);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v64 = (uint64_t)v98;
  *long long v98 = KeyPath;
  sub_1000063C0((uint64_t *)&unk_1001FB730);
  swift_storeEnumTagMultiPayload();
  uint64_t v65 = (uint64_t)v97;
  sub_1000597B8(v64, (uint64_t)&v97[*(int *)(v92 + 36)], type metadata accessor for TransformBlendModifier);
  sub_100026FD0(v61, v65, &qword_1001FDA48);
  uint64_t v66 = static Alignment.center.getter();
  uint64_t v68 = v67;
  uint64_t v69 = sub_1000063C0(&qword_1001FD9E8);
  uint64_t v70 = v99;
  uint64_t v71 = v99 + *(int *)(v69 + 36);
  sub_100008DD4(v65, v71, &qword_1001FDA50);
  uint64_t v72 = (uint64_t *)(v71 + *(int *)(sub_1000063C0((uint64_t *)&unk_1001FDA30) + 36));
  uint64_t *v72 = v66;
  v72[1] = v68;
  sub_100008DD4(v33, v70, &qword_1001FDA00);
  sub_10002784C(v65, &qword_1001FDA50);
  return sub_10002784C(v33, &qword_1001FDA00);
}

uint64_t sub_100056904@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v30 = a1;
  uint64_t v35 = a2;
  uint64_t v36 = sub_1000063C0(&qword_1001FDBA0);
  uint64_t v33 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  double v29 = (char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_1000063C0(&qword_1001FDBA8);
  __chkstk_darwin(v31);
  uint64_t v34 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for BlendMode();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_1000063C0(&qword_1001FDBB0);
  uint64_t v8 = __chkstk_darwin(v32);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v28 = (uint64_t)&v27 - v11;
  uint64_t v12 = type metadata accessor for ColorScheme();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v27 - v17;
  sub_100020A84((uint64_t)&v27 - v17);
  (*(void (**)(char *, void, uint64_t))(v13 + 104))(v16, enum case for ColorScheme.dark(_:), v12);
  char v19 = static ColorScheme.== infix(_:_:)();
  uint64_t v20 = *(void (**)(char *, uint64_t))(v13 + 8);
  v20(v16, v12);
  v20(v18, v12);
  if (v19)
  {
    (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for BlendMode.plusLighter(_:), v4);
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(&v10[*(int *)(v32 + 36)], v7, v4);
    (*(void (**)(char *, uint64_t, uint64_t))(v33 + 16))(v10, v30, v36);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v21 = v28;
    sub_100026FD0((uint64_t)v10, v28, &qword_1001FDBB0);
    sub_100008DD4(v21, (uint64_t)v34, &qword_1001FDBB0);
    swift_storeEnumTagMultiPayload();
    sub_10005BB60();
    sub_100027F2C(&qword_1001FDBC0, &qword_1001FDBA0);
    _ConditionalContent<>.init(storage:)();
    return sub_10002784C(v21, &qword_1001FDBB0);
  }
  else
  {
    uint64_t v23 = v33;
    uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t))(v33 + 16);
    uint64_t v25 = v29;
    uint64_t v26 = v36;
    v24(v29, v30, v36);
    v24(v34, (uint64_t)v25, v26);
    swift_storeEnumTagMultiPayload();
    sub_10005BB60();
    sub_100027F2C(&qword_1001FDBC0, &qword_1001FDBA0);
    _ConditionalContent<>.init(storage:)();
    return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v25, v26);
  }
}

uint64_t sub_100056DFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v63 = a2;
  uint64_t v60 = a1;
  uint64_t v67 = a4;
  int v62 = a3 & 1;
  uint64_t v4 = sub_1000063C0(&qword_1001FDA60);
  uint64_t v56 = *(void *)(v4 - 8);
  uint64_t v57 = v4;
  __chkstk_darwin(v4);
  uint64_t v54 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_1000063C0(&qword_1001FDA68);
  __chkstk_darwin(v55);
  double v58 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_1000063C0(&qword_1001FDA70);
  __chkstk_darwin(v66);
  uint64_t v59 = (uint64_t)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_1000063C0(&qword_1001FDA78);
  __chkstk_darwin(v64);
  uint64_t v65 = (uint64_t)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000063C0(&qword_1001FDA80);
  uint64_t v10 = v9 - 8;
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000063C0(&qword_1001FDA88);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1000063C0(&qword_1001FDA90);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_1000063C0(&qword_1001FBC78);
  __chkstk_darwin(v53);
  uint64_t v20 = (char *)&v52 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_1000063C0((uint64_t *)&unk_1001FBC80);
  __chkstk_darwin(v61);
  uint64_t v22 = (char *)&v52 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v23 = [self currentDevice];
  id v24 = [v23 userInterfaceIdiom];

  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v26 = sub_1000063C0(&qword_1001FDA98);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v12, v60, v26);
  uint64_t v27 = &v12[*(int *)(v10 + 44)];
  *(void *)uint64_t v27 = KeyPath;
  v27[8] = 1;
  if (v24 == (id)6)
  {
    uint64_t v28 = static Font.callout.getter();
    uint64_t v29 = swift_getKeyPath();
    sub_100008DD4((uint64_t)v12, (uint64_t)v15, &qword_1001FDA80);
    uint64_t v30 = (uint64_t *)&v15[*(int *)(v13 + 36)];
    *uint64_t v30 = v29;
    v30[1] = v28;
    sub_10002784C((uint64_t)v12, &qword_1001FDA80);
    if (qword_1001FAD30 != -1) {
      swift_once();
    }
    uint64_t v31 = qword_1002129D8;
    sub_100008DD4((uint64_t)v15, (uint64_t)v18, &qword_1001FDA88);
    *(void *)&v18[*(int *)(v16 + 36)] = v31;
    swift_retain();
    sub_10002784C((uint64_t)v15, &qword_1001FDA88);
    uint64_t v32 = v63;
    char v33 = v62;
    sub_100058794(v63, v62);
    LOBYTE(v31) = sub_100020D78(v32, v33);
    sub_100024D58(v32, v33);
    if (v31) {
      double v34 = 1.0;
    }
    else {
      double v34 = 0.3;
    }
    sub_100008DD4((uint64_t)v18, (uint64_t)v20, &qword_1001FDA90);
    *(double *)&v20[*(int *)(v53 + 36)] = v34;
    sub_10002784C((uint64_t)v18, &qword_1001FDA90);
    uint64_t v35 = static Alignment.center.getter();
    sub_100019B58(0.0, 1, 0.0, 1, 74.0, 0, 0.0, 1, (uint64_t)v22, 0.0, 1, 0.0, 1, v35, v36);
    sub_10002784C((uint64_t)v20, &qword_1001FBC78);
    uint64_t v37 = (uint64_t *)&unk_1001FBC80;
    sub_100008DD4((uint64_t)v22, v65, (uint64_t *)&unk_1001FBC80);
    swift_storeEnumTagMultiPayload();
    sub_100057EE8(&qword_1001FDAC8, (uint64_t *)&unk_1001FBC80, (void (*)(void))sub_10005B1BC);
    sub_100057EE8(&qword_1001FDAE0, &qword_1001FDA70, (void (*)(void))sub_10005B28C);
    _ConditionalContent<>.init(storage:)();
    uint64_t v38 = (uint64_t)v22;
  }
  else
  {
    uint64_t v39 = static Font.caption.getter();
    uint64_t v40 = swift_getKeyPath();
    sub_100008DD4((uint64_t)v12, (uint64_t)v15, &qword_1001FDA80);
    uint64_t v41 = (uint64_t *)&v15[*(int *)(v13 + 36)];
    *uint64_t v41 = v40;
    v41[1] = v39;
    sub_10002784C((uint64_t)v12, &qword_1001FDA80);
    static Font.Weight.medium.getter();
    sub_10005B058();
    uint64_t v42 = v54;
    View.fontWeight(_:)();
    sub_10002784C((uint64_t)v15, &qword_1001FDA88);
    if (qword_1001FAD30 != -1) {
      swift_once();
    }
    uint64_t v43 = qword_1002129D8;
    uint64_t v45 = v56;
    uint64_t v44 = v57;
    uint64_t v46 = (uint64_t)v58;
    (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v58, v42, v57);
    *(void *)(v46 + *(int *)(v55 + 36)) = v43;
    uint64_t v47 = *(void (**)(char *, uint64_t))(v45 + 8);
    swift_retain();
    v47(v42, v44);
    uint64_t v48 = v63;
    LOBYTE(v44) = v62;
    sub_100058794(v63, v62);
    LOBYTE(v43) = sub_100020D78(v48, v44);
    sub_100024D58(v48, v44);
    if (v43) {
      double v49 = 1.0;
    }
    else {
      double v49 = 0.3;
    }
    uint64_t v50 = v59;
    sub_100008DD4(v46, v59, &qword_1001FDA68);
    *(double *)(v50 + *(int *)(v66 + 36)) = v49;
    sub_10002784C(v46, &qword_1001FDA68);
    uint64_t v37 = &qword_1001FDA70;
    sub_100008DD4(v50, v65, &qword_1001FDA70);
    swift_storeEnumTagMultiPayload();
    sub_100057EE8(&qword_1001FDAC8, (uint64_t *)&unk_1001FBC80, (void (*)(void))sub_10005B1BC);
    sub_100057EE8(&qword_1001FDAE0, &qword_1001FDA70, (void (*)(void))sub_10005B28C);
    _ConditionalContent<>.init(storage:)();
    uint64_t v38 = v50;
  }
  return sub_10002784C(v38, v37);
}

uint64_t sub_10005767C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100056DFC(a1, *(void *)v2, *(unsigned char *)(v2 + 8), a2);
}

uint64_t sub_100057688@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v18[0] = a1;
  v18[1] = a2;
  uint64_t v2 = sub_1000063C0(&qword_1001FD788);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000063C0(&qword_1001FD790);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000063C0(&qword_1001FD798);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = [self currentDevice];
  id v13 = [v12 userInterfaceIdiom];

  if (v13 == (id)6)
  {
    uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
    v14(v11, (char *)v18[0], v8);
    v14(v7, v11, v8);
    swift_storeEnumTagMultiPayload();
    sub_100027F2C(&qword_1001FD7A0, &qword_1001FD798);
    sub_1000596E8();
    _ConditionalContent<>.init(storage:)();
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  else
  {
    GeometryProxy.size.getter();
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    (*(void (**)(char *, void, uint64_t))(v9 + 16))(v4, v18[0], v8);
    uint64_t v16 = &v4[*(int *)(v2 + 36)];
    long long v17 = v20;
    *(_OWORD *)uint64_t v16 = v19;
    *((_OWORD *)v16 + 1) = v17;
    *((_OWORD *)v16 + 2) = v21;
    sub_100008DD4((uint64_t)v4, (uint64_t)v7, &qword_1001FD788);
    swift_storeEnumTagMultiPayload();
    sub_100027F2C(&qword_1001FD7A0, &qword_1001FD798);
    sub_1000596E8();
    _ConditionalContent<>.init(storage:)();
    return sub_10002784C((uint64_t)v4, &qword_1001FD788);
  }
}

void sub_1000579CC()
{
  id v0 = [self currentDevice];
  id v1 = [v0 userInterfaceIdiom];

  qword_1001FD370 = 0;
  *(void *)algn_1001FD378 = 0;
  byte_1001FD380 = v1 != (id)6;
}

void sub_100057A38()
{
  id v0 = [self currentDevice];
  id v1 = [v0 userInterfaceIdiom];

  uint64_t v2 = 0x4030000000000000;
  if (v1 != (id)6) {
    uint64_t v2 = 0;
  }
  qword_1001FD388 = v2;
  byte_1001FD390 = v1 != (id)6;
}

uint64_t sub_100057AB4()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t type metadata accessor for TransformItemView(uint64_t a1)
{
  return sub_10005AFA8(a1, qword_1001FD6F8);
}

uint64_t sub_100057AFC@<X0>(uint64_t a1@<X8>)
{
  return sub_100051B5C(*(void *)(v1 + 16), a1);
}

uint64_t sub_100057B04()
{
  return sub_100057EE8(&qword_1001FD538, &qword_1001FD530, (void (*)(void))sub_100057B34);
}

unint64_t sub_100057B34()
{
  unint64_t result = qword_1001FD540;
  if (!qword_1001FD540)
  {
    sub_100006C14(&qword_1001FD548);
    sub_100006C14(&qword_1001FD550);
    type metadata accessor for SmallIconTitleLabelStyle(255);
    sub_100027F2C(&qword_1001FD558, &qword_1001FD550);
    sub_100058088((unint64_t *)&unk_1001FD560, (void (*)(uint64_t))type metadata accessor for SmallIconTitleLabelStyle);
    swift_getOpaqueTypeConformance2();
    sub_100026CDC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FD540);
  }
  return result;
}

uint64_t sub_100057C58(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100057CBC()
{
  return (*(uint64_t (**)(uint64_t, void, void, void))(v0 + 16))(3, 0, 0, 0);
}

unint64_t sub_100057CF4()
{
  unint64_t result = qword_1001FD598;
  if (!qword_1001FD598)
  {
    sub_100006C14(&qword_1001FD590);
    sub_100027F2C((unint64_t *)&unk_1001FD5A0, &qword_1001FBBC0);
    sub_100057D94();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FD598);
  }
  return result;
}

unint64_t sub_100057D94()
{
  unint64_t result = qword_1001FD5B0;
  if (!qword_1001FD5B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FD5B0);
  }
  return result;
}

uint64_t sub_100057DEC()
{
  return (*(uint64_t (**)(uint64_t, void, void, void))(v0 + 16))(4, 0, 0, 0);
}

uint64_t sub_100057E28()
{
  swift_release();
  swift_release();
  swift_release();
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_100057E78()
{
  return (*(uint64_t (**)(uint64_t, void, void, void))(v0 + 16))(2, 0, 0, 0);
}

uint64_t sub_100057EB0@<X0>(uint64_t a1@<X8>)
{
  return sub_1000511A0(*(void *)(v1 + 16), a1);
}

uint64_t sub_100057EB8()
{
  return sub_100057EE8(&qword_1001FD5C8, &qword_1001FD5C0, (void (*)(void))sub_100057F64);
}

uint64_t sub_100057EE8(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100006C14(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100057F64()
{
  unint64_t result = qword_1001FD5D0;
  if (!qword_1001FD5D0)
  {
    sub_100006C14(&qword_1001FD5D8);
    sub_100006C14(&qword_1001FD5E0);
    type metadata accessor for IconTitleLabelStyle(255);
    sub_100027F2C(&qword_1001FD5E8, &qword_1001FD5E0);
    sub_100058088(&qword_1001FD5F0, (void (*)(uint64_t))type metadata accessor for IconTitleLabelStyle);
    swift_getOpaqueTypeConformance2();
    sub_100026CDC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FD5D0);
  }
  return result;
}

uint64_t sub_100058088(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000580D4()
{
  return sub_10005199C((unsigned __int8 *)(v0 + 16));
}

uint64_t sub_1000580E0()
{
  swift_unknownObjectWeakDestroy();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 89, 7);
}

uint64_t sub_100058138()
{
  return (*(uint64_t (**)(void, void, void, void))(v0 + 32))(0, 0, 0, 0);
}

uint64_t sub_100058170(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for GeometryProxy();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t sub_1000581DC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for GeometryProxy();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_100058240(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for GeometryProxy();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_1000582A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for GeometryProxy();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_100058308(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for GeometryProxy();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_10005836C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for GeometryProxy();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_1000583D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000583E4);
}

uint64_t sub_1000583E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for GeometryProxy();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_100058450(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100058464);
}

uint64_t sub_100058464(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for GeometryProxy();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for TransformItemViewWidthModifier(uint64_t a1)
{
  return sub_10005AFA8(a1, qword_1001FD660);
}

uint64_t sub_1000584F4()
{
  uint64_t result = type metadata accessor for GeometryProxy();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_100058580(unint64_t a1, uint64_t a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v16 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = *(void *)a2;
    uint64_t v8 = *(void *)(a2 + 8);
    uint64_t v9 = *(void *)(a2 + 16);
    char v10 = *(unsigned char *)(a2 + 24);
    sub_10000ED40(*(void *)a2, v8, v9, v10);
    *(void *)a1 = v7;
    *(void *)(a1 + 8) = v8;
    *(void *)(a1 + 16) = v9;
    *(unsigned char *)(a1 + 24) = v10;
    uint64_t v11 = *(void *)(a2 + 40);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = v11;
    uint64_t v12 = a3[6];
    id v13 = (void *)(a1 + v12);
    uint64_t v14 = (void *)(a2 + v12);
    swift_retain();
    sub_1000063C0((uint64_t *)&unk_1001FB730);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v15 = type metadata accessor for ColorScheme();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    }
    else
    {
      *id v13 = *v14;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v17 = a3[7];
    uint64_t v18 = (void *)(a1 + v17);
    long long v19 = (void *)(a2 + v17);
    sub_1000063C0((uint64_t *)&unk_1001FAE30);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v20 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
    }
    else
    {
      void *v18 = *v19;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v21 = a3[8];
    uint64_t v22 = a1 + v21;
    uint64_t v23 = a2 + v21;
    uint64_t v24 = *(void *)v23;
    char v25 = *(unsigned char *)(v23 + 8);
    sub_100058794(*(void *)v23, v25);
    *(void *)uint64_t v22 = v24;
    *(unsigned char *)(v22 + 8) = v25;
  }
  return a1;
}

uint64_t sub_100058794(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_1000587A0(uint64_t a1, int *a2)
{
  sub_10000ED74(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
  swift_release();
  uint64_t v4 = a1 + a2[6];
  sub_1000063C0((uint64_t *)&unk_1001FB730);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for ColorScheme();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = a1 + a2[7];
  sub_1000063C0((uint64_t *)&unk_1001FAE30);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  uint64_t v8 = a1 + a2[8];
  uint64_t v9 = *(void *)v8;
  char v10 = *(unsigned char *)(v8 + 8);

  return sub_100024D58(v9, v10);
}

uint64_t sub_1000588DC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  uint64_t v8 = *(void *)(a2 + 16);
  char v9 = *(unsigned char *)(a2 + 24);
  sub_10000ED40(*(void *)a2, v7, v8, v9);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(void *)(a1 + 16) = v8;
  *(unsigned char *)(a1 + 24) = v9;
  uint64_t v10 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v10;
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)(a1 + v11);
  id v13 = (void *)(a2 + v11);
  swift_retain();
  sub_1000063C0((uint64_t *)&unk_1001FB730);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v14 = type metadata accessor for ColorScheme();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  }
  else
  {
    void *v12 = *v13;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v15 = a3[7];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  sub_1000063C0((uint64_t *)&unk_1001FAE30);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v18 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  }
  else
  {
    *uint64_t v16 = *v17;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = *(void *)v21;
  char v23 = *(unsigned char *)(v21 + 8);
  sub_100058794(*(void *)v21, v23);
  *(void *)uint64_t v20 = v22;
  *(unsigned char *)(v20 + 8) = v23;
  return a1;
}

uint64_t sub_100058AA0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  uint64_t v8 = *(void *)(a2 + 16);
  char v9 = *(unsigned char *)(a2 + 24);
  sub_10000ED40(*(void *)a2, v7, v8, v9);
  uint64_t v10 = *(void *)a1;
  uint64_t v11 = *(void *)(a1 + 8);
  uint64_t v12 = *(void *)(a1 + 16);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(void *)(a1 + 16) = v8;
  char v13 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v9;
  sub_10000ED74(v10, v11, v12, v13);
  uint64_t v14 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v14;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v15 = a3[6];
    uint64_t v16 = (void *)(a1 + v15);
    uint64_t v17 = (void *)(a2 + v15);
    sub_10002784C(a1 + v15, (uint64_t *)&unk_1001FB730);
    sub_1000063C0((uint64_t *)&unk_1001FB730);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v18 = type metadata accessor for ColorScheme();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
    }
    else
    {
      *uint64_t v16 = *v17;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v19 = a3[7];
    uint64_t v20 = (void *)(a1 + v19);
    uint64_t v21 = (void *)(a2 + v19);
    sub_10002784C(a1 + v19, (uint64_t *)&unk_1001FAE30);
    sub_1000063C0((uint64_t *)&unk_1001FAE30);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v22 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
    }
    else
    {
      *uint64_t v20 = *v21;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v23 = a3[8];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = *(void *)v25;
  char v27 = *(unsigned char *)(v25 + 8);
  sub_100058794(*(void *)v25, v27);
  uint64_t v28 = *(void *)v24;
  char v29 = *(unsigned char *)(v24 + 8);
  *(void *)uint64_t v24 = v26;
  *(unsigned char *)(v24 + 8) = v27;
  sub_100024D58(v28, v29);
  return a1;
}

_OWORD *sub_100058CB4(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  *(_OWORD *)((char *)a1 + 9) = *(_OWORD *)((char *)a2 + 9);
  a1[2] = a2[2];
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1000063C0((uint64_t *)&unk_1001FB730);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for ColorScheme();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  uint64_t v11 = a3[7];
  uint64_t v12 = (char *)a1 + v11;
  char v13 = (char *)a2 + v11;
  uint64_t v14 = sub_1000063C0((uint64_t *)&unk_1001FAE30);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v12, v13, v15);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
  }
  uint64_t v16 = a3[8];
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  *(void *)uint64_t v17 = *(void *)v18;
  v17[8] = v18[8];
  return a1;
}

uint64_t sub_100058E64(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 16);
  char v7 = *(unsigned char *)(a2 + 24);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v6;
  char v11 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v7;
  sub_10000ED74(v8, v9, v10, v11);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  if (a1 != a2)
  {
    uint64_t v12 = a3[6];
    char v13 = (void *)(a1 + v12);
    uint64_t v14 = (const void *)(a2 + v12);
    sub_10002784C(a1 + v12, (uint64_t *)&unk_1001FB730);
    uint64_t v15 = sub_1000063C0((uint64_t *)&unk_1001FB730);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v16 = type metadata accessor for ColorScheme();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v16 - 8) + 32))(v13, v14, v16);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
    }
    uint64_t v17 = a3[7];
    uint64_t v18 = (void *)(a1 + v17);
    uint64_t v19 = (const void *)(a2 + v17);
    sub_10002784C(a1 + v17, (uint64_t *)&unk_1001FAE30);
    uint64_t v20 = sub_1000063C0((uint64_t *)&unk_1001FAE30);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v21 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v21 - 8) + 32))(v18, v19, v21);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
    }
  }
  uint64_t v22 = a3[8];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = (uint64_t *)(a2 + v22);
  uint64_t v25 = *v24;
  LOBYTE(v24) = *((unsigned char *)v24 + 8);
  uint64_t v26 = *(void *)v23;
  char v27 = *(unsigned char *)(v23 + 8);
  *(void *)uint64_t v23 = v25;
  *(unsigned char *)(v23 + 8) = (_BYTE)v24;
  sub_100024D58(v26, v27);
  return a1;
}

uint64_t sub_100059068(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10005907C);
}

uint64_t sub_10005907C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 32);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1000063C0(&qword_100202120);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 24);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_1000063C0(&qword_1001FD3A0);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 28);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_1000591B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000591C4);
}

uint64_t sub_1000591C4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 32) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_1000063C0(&qword_100202120);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 24);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_1000063C0(&qword_1001FD3A0);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 28);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_1000592F8()
{
  sub_100059418(319, (unint64_t *)&unk_100202190, (void (*)(uint64_t))&type metadata accessor for ColorScheme);
  if (v0 <= 0x3F)
  {
    sub_100059418(319, (unint64_t *)&qword_1001FB680, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_100059418(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Environment.Content();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_100059470()
{
  unint64_t result = qword_1001FD748;
  if (!qword_1001FD748)
  {
    sub_100006C14(&qword_1001FD4C8);
    sub_100059510();
    sub_100027F2C(&qword_1001FC6D8, &qword_1001FD760);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FD748);
  }
  return result;
}

unint64_t sub_100059510()
{
  unint64_t result = qword_1001FD750;
  if (!qword_1001FD750)
  {
    sub_100006C14(&qword_1001FD4B0);
    sub_100027F2C(&qword_1001FD4C0, &qword_1001FD4B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FD750);
  }
  return result;
}

uint64_t sub_1000595B4()
{
  return sub_1000595F0(&qword_1001FD768, &qword_1001FD770, (void (*)(void))sub_100057B04);
}

uint64_t sub_1000595F0(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100006C14(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100059674()
{
  return sub_1000595F0(&qword_1001FD778, &qword_1001FD780, (void (*)(void))sub_100057EB8);
}

uint64_t sub_1000596B0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000596CC()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1000596E8()
{
  unint64_t result = qword_1001FD7A8;
  if (!qword_1001FD7A8)
  {
    sub_100006C14(&qword_1001FD788);
    sub_100027F2C(&qword_1001FD7A0, &qword_1001FD798);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FD7A8);
  }
  return result;
}

uint64_t type metadata accessor for TransformItemButton(uint64_t a1)
{
  return sub_10005AFA8(a1, qword_1001FD988);
}

uint64_t sub_1000597B0()
{
  return sub_1000555F4();
}

uint64_t sub_1000597B8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100059820@<X0>(uint64_t a1@<X8>)
{
  return sub_1000556D4(a1);
}

uint64_t sub_100059828@<X0>(uint64_t a1@<X8>)
{
  return sub_100055790(*(void *)(v1 + 16), a1);
}

unint64_t sub_100059830()
{
  unint64_t result = qword_1001FD830;
  if (!qword_1001FD830)
  {
    sub_100006C14(&qword_1001FD820);
    sub_1000598D0();
    sub_100027F2C(&qword_1001FD858, &qword_1001FD860);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FD830);
  }
  return result;
}

unint64_t sub_1000598D0()
{
  unint64_t result = qword_1001FD838;
  if (!qword_1001FD838)
  {
    sub_100006C14(&qword_1001FD840);
    sub_100027F2C(&qword_1001FD848, &qword_1001FD850);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FD838);
  }
  return result;
}

unint64_t sub_100059970()
{
  unint64_t result = qword_1001FD870;
  if (!qword_1001FD870)
  {
    sub_100006C14(&qword_1001FD878);
    sub_100057EE8(&qword_1001FD880, &qword_1001FD888, (void (*)(void))sub_100059A48);
    sub_100058088(&qword_1001FD8A0, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FD870);
  }
  return result;
}

unint64_t sub_100059A48()
{
  unint64_t result = qword_1001FD890;
  if (!qword_1001FD890)
  {
    sub_100006C14(&qword_1001FDF50);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FD890);
  }
  return result;
}

uint64_t sub_100059AC4@<X0>(void *a1@<X8>)
{
  uint64_t result = EnvironmentValues.minimumScaleFactor.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_100059AF0()
{
  return EnvironmentValues.minimumScaleFactor.setter();
}

uint64_t sub_100059B1C()
{
  uint64_t v1 = (int *)type metadata accessor for TransformItemView(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v5 = v0 + v3;
  sub_10000ED74(*(void *)(v0 + v3), *(void *)(v0 + v3 + 8), *(void *)(v0 + v3 + 16), *(unsigned char *)(v0 + v3 + 24));
  swift_release();
  uint64_t v6 = v0 + v3 + v1[6];
  sub_1000063C0((uint64_t *)&unk_1001FB730);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for ColorScheme();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  uint64_t v8 = v5 + v1[7];
  sub_1000063C0((uint64_t *)&unk_1001FAE30);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  else
  {
    swift_release();
  }
  sub_100024D58(*(void *)(v5 + v1[8]), *(unsigned char *)(v5 + v1[8] + 8));

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_100059CD8()
{
  uint64_t v1 = *(void *)(type metadata accessor for TransformItemView(0) - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  return (*(uint64_t (**)(void, void, void, void))(v2 + 32))(*(void *)v2, *(void *)(v2 + 8), *(void *)(v2 + 16), *(unsigned __int8 *)(v2 + 24));
}

uint64_t sub_100059D48()
{
  return sub_100054C28();
}

uint64_t sub_100059D50@<X0>(uint64_t a1@<X8>)
{
  return sub_100054CB8(*(void *)(v1 + 16), a1);
}

unint64_t sub_100059D58()
{
  unint64_t result = qword_1001FD8F8;
  if (!qword_1001FD8F8)
  {
    sub_100006C14(&qword_1001FD8F0);
    sub_100057EE8(&qword_1001FD900, &qword_1001FD908, (void (*)(void))sub_100059E30);
    sub_100058088(&qword_1001FD8A0, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FD8F8);
  }
  return result;
}

unint64_t sub_100059E30()
{
  unint64_t result = qword_1001FD910;
  if (!qword_1001FD910)
  {
    sub_100006C14(&qword_1001FD918);
    sub_100059A48();
    sub_100027F2C((unint64_t *)&unk_1001FD920, &qword_100201E60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FD910);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for TransformItemFooter(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_100058794(*(void *)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

uint64_t destroy for TransformItemFooter(uint64_t a1)
{
  return sub_100024D58(*(void *)a1, *(unsigned char *)(a1 + 8));
}

uint64_t assignWithCopy for TransformItemFooter(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_100058794(*(void *)a2, v4);
  uint64_t v5 = *(void *)a1;
  char v6 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  sub_100024D58(v5, v6);
  return a1;
}

uint64_t assignWithTake for TransformItemFooter(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  char v4 = *((unsigned char *)a2 + 8);
  uint64_t v5 = *(void *)a1;
  char v6 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  sub_100024D58(v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for TransformItemFooter()
{
  return &type metadata for TransformItemFooter;
}

uint64_t *sub_100059FCC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1000063C0((uint64_t *)&unk_1001FB730);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for ColorScheme();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = (uint64_t *)((char *)a1 + v9);
    uint64_t v11 = (uint64_t *)((char *)a2 + v9);
    sub_1000063C0((uint64_t *)&unk_1001FAE30);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      void *v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_10005A174(uint64_t a1, uint64_t a2)
{
  sub_1000063C0((uint64_t *)&unk_1001FB730);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for ColorScheme();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  sub_1000063C0((uint64_t *)&unk_1001FAE30);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for DynamicTypeSize();
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
    return v7(v5, v6);
  }
  else
  {
    return swift_release();
  }
}

void *sub_10005A288(void *a1, void *a2, uint64_t a3)
{
  sub_1000063C0((uint64_t *)&unk_1001FB730);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for ColorScheme();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  sub_1000063C0((uint64_t *)&unk_1001FAE30);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    void *v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_10005A3E0(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10002784C((uint64_t)a1, (uint64_t *)&unk_1001FB730);
    sub_1000063C0((uint64_t *)&unk_1001FB730);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for ColorScheme();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (void *)((char *)a1 + v7);
    uint64_t v9 = (void *)((char *)a2 + v7);
    sub_10002784C((uint64_t)a1 + v7, (uint64_t *)&unk_1001FAE30);
    sub_1000063C0((uint64_t *)&unk_1001FAE30);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      void *v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_10005A560(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1000063C0((uint64_t *)&unk_1001FB730);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for ColorScheme();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_1000063C0((uint64_t *)&unk_1001FAE30);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  return a1;
}

char *sub_10005A6C8(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10002784C((uint64_t)a1, (uint64_t *)&unk_1001FB730);
    uint64_t v6 = sub_1000063C0((uint64_t *)&unk_1001FB730);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for ColorScheme();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    sub_10002784C((uint64_t)&a1[v8], (uint64_t *)&unk_1001FAE30);
    uint64_t v11 = sub_1000063C0((uint64_t *)&unk_1001FAE30);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_10005A858(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10005A86C);
}

uint64_t sub_10005A86C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000063C0(&qword_100202120);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_1000063C0(&qword_1001FD3A0);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_10005A96C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10005A980);
}

uint64_t sub_10005A980(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_1000063C0(&qword_100202120);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_1000063C0(&qword_1001FD3A0);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

void sub_10005AA8C()
{
  sub_100059418(319, (unint64_t *)&unk_100202190, (void (*)(uint64_t))&type metadata accessor for ColorScheme);
  if (v0 <= 0x3F)
  {
    sub_100059418(319, (unint64_t *)&qword_1001FB680, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

unint64_t sub_10005AB90()
{
  unint64_t result = qword_1001FD9C0;
  if (!qword_1001FD9C0)
  {
    sub_100006C14(&qword_1001FD9C8);
    sub_100027F2C(&qword_1001FD7A0, &qword_1001FD798);
    sub_1000596E8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FD9C0);
  }
  return result;
}

unint64_t sub_10005AC34()
{
  unint64_t result = qword_1001FD9D0;
  if (!qword_1001FD9D0)
  {
    sub_100006C14(&qword_1001FD9D8);
    sub_100006C14(&qword_1001FD7C8);
    sub_100027F2C(&qword_1001FD7E8, &qword_1001FD7C8);
    swift_getOpaqueTypeConformance2();
    sub_100006C14(&qword_1001FD7B0);
    sub_100027F2C(&qword_1001FD7E0, &qword_1001FD7B0);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FD9D0);
  }
  return result;
}

uint64_t sub_10005AD58()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10005AD74()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_10005AD90()
{
  unint64_t result = qword_1001FD9F0;
  if (!qword_1001FD9F0)
  {
    sub_100006C14(&qword_1001FD9E8);
    sub_100057EE8(&qword_1001FD9F8, &qword_1001FDA00, (void (*)(void))sub_10005AE5C);
    sub_100027F2C(&qword_1001FDA28, (uint64_t *)&unk_1001FDA30);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FD9F0);
  }
  return result;
}

unint64_t sub_10005AE5C()
{
  unint64_t result = qword_1001FDA08;
  if (!qword_1001FDA08)
  {
    sub_100006C14((uint64_t *)&unk_1001FDA10);
    type metadata accessor for ButtonStyleConfiguration.Label();
    type metadata accessor for IconOnlyLabelStyle();
    sub_100058088(&qword_100202100, (void (*)(uint64_t))&type metadata accessor for ButtonStyleConfiguration.Label);
    sub_100058088(&qword_1001FDA20, (void (*)(uint64_t))&type metadata accessor for IconOnlyLabelStyle);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FDA08);
  }
  return result;
}

uint64_t type metadata accessor for TransformBlendModifier(uint64_t a1)
{
  return sub_10005AFA8(a1, qword_1001FDB48);
}

uint64_t sub_10005AFA8(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10005AFE0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_10005B058()
{
  unint64_t result = qword_1001FDAA0;
  if (!qword_1001FDAA0)
  {
    sub_100006C14(&qword_1001FDA88);
    sub_10005B0F8();
    sub_100027F2C((unint64_t *)&unk_1002025D0, &qword_1001FDAC0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FDAA0);
  }
  return result;
}

unint64_t sub_10005B0F8()
{
  unint64_t result = qword_1001FDAA8;
  if (!qword_1001FDAA8)
  {
    sub_100006C14(&qword_1001FDA80);
    sub_100027F2C((unint64_t *)&unk_1001FDAB0, &qword_1001FDA98);
    sub_100027F2C(&qword_1001FBB78, &qword_1001FBB80);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FDAA8);
  }
  return result;
}

uint64_t sub_10005B1BC()
{
  return sub_100057EE8(&qword_1001FDAD0, &qword_1001FBC78, (void (*)(void))sub_10005B1EC);
}

unint64_t sub_10005B1EC()
{
  unint64_t result = qword_1001FDAD8;
  if (!qword_1001FDAD8)
  {
    sub_100006C14(&qword_1001FDA90);
    sub_10005B058();
    sub_100027F2C((unint64_t *)&unk_1001FD920, &qword_100201E60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FDAD8);
  }
  return result;
}

unint64_t sub_10005B28C()
{
  unint64_t result = qword_1001FDAE8;
  if (!qword_1001FDAE8)
  {
    sub_100006C14(&qword_1001FDA68);
    sub_100006C14(&qword_1001FDA88);
    sub_10005B058();
    swift_getOpaqueTypeConformance2();
    sub_100027F2C((unint64_t *)&unk_1001FD920, &qword_100201E60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FDAE8);
  }
  return result;
}

uint64_t *sub_10005B360(uint64_t *a1, uint64_t *a2)
{
  int v4 = *(_DWORD *)(*(void *)(sub_1000063C0((uint64_t *)&unk_1001FB730) - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v6 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v6 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v5 = type metadata accessor for ColorScheme();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_10005B46C(uint64_t a1)
{
  sub_1000063C0((uint64_t *)&unk_1001FB730);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = type metadata accessor for ColorScheme();
    uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
    return v3(a1, v2);
  }
  else
  {
    return swift_release();
  }
}

void *sub_10005B510(void *a1, void *a2)
{
  sub_1000063C0((uint64_t *)&unk_1001FB730);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for ColorScheme();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_10005B5CC(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_10002784C((uint64_t)a1, (uint64_t *)&unk_1001FB730);
    sub_1000063C0((uint64_t *)&unk_1001FB730);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = type metadata accessor for ColorScheme();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_10005B6A0(void *a1, const void *a2)
{
  uint64_t v4 = sub_1000063C0((uint64_t *)&unk_1001FB730);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for ColorScheme();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
  }
  return a1;
}

void *sub_10005B764(void *a1, const void *a2)
{
  if (a1 != a2)
  {
    sub_10002784C((uint64_t)a1, (uint64_t *)&unk_1001FB730);
    uint64_t v4 = sub_1000063C0((uint64_t *)&unk_1001FB730);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v5 = type metadata accessor for ColorScheme();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_10005B840(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10005B854);
}

uint64_t sub_10005B854(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000063C0(&qword_100202120);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_10005B8C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10005B8D8);
}

uint64_t sub_10005B8D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000063C0(&qword_100202120);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

void sub_10005B94C()
{
  sub_100059418(319, (unint64_t *)&unk_100202190, (void (*)(uint64_t))&type metadata accessor for ColorScheme);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unint64_t sub_10005B9F8()
{
  unint64_t result = qword_1001FDB80;
  if (!qword_1001FDB80)
  {
    sub_100006C14(&qword_1001FDB88);
    sub_10005AD90();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FDB80);
  }
  return result;
}

unint64_t sub_10005BA70()
{
  unint64_t result = qword_1001FDB90;
  if (!qword_1001FDB90)
  {
    sub_100006C14(&qword_1001FDB98);
    sub_100057EE8(&qword_1001FDAC8, (uint64_t *)&unk_1001FBC80, (void (*)(void))sub_10005B1BC);
    sub_100057EE8(&qword_1001FDAE0, &qword_1001FDA70, (void (*)(void))sub_10005B28C);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FDB90);
  }
  return result;
}

uint64_t sub_10005BB44()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_10005BB60()
{
  unint64_t result = qword_1001FDBB8;
  if (!qword_1001FDBB8)
  {
    sub_100006C14(&qword_1001FDBB0);
    sub_100027F2C(&qword_1001FDBC0, &qword_1001FDBA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FDBB8);
  }
  return result;
}

unint64_t sub_10005BC04()
{
  unint64_t result = qword_1001FDBC8;
  if (!qword_1001FDBC8)
  {
    sub_100006C14((uint64_t *)&unk_1001FDBD0);
    sub_10005BB60();
    sub_100027F2C(&qword_1001FDBC0, &qword_1001FDBA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FDBC8);
  }
  return result;
}

uint64_t destroy for CompositionModelSuggestionsView()
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for CompositionModelSuggestionsView(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for CompositionModelSuggestionsView(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_release();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  return a1;
}

__n128 _s4SlotVwtk(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for CompositionModelSuggestionsView(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_release();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for CompositionModelSuggestionsView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 65)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CompositionModelSuggestionsView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 64) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 65) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 65) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CompositionModelSuggestionsView()
{
  return &type metadata for CompositionModelSuggestionsView;
}

uint64_t sub_10005BFD0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10005BFEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = static HorizontalAlignment.leading.getter();
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 1;
  sub_1000063C0(&qword_1001FDC08);
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t v5 = swift_retain();
  sub_100020F7C(v5, v4);
  swift_release();
  swift_getKeyPath();
  sub_10005CDC4((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_bridgeObjectRetain();
  swift_release();
  swift_getKeyPath();
  uint64_t v6 = swift_allocObject();
  long long v7 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v6 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v6 + 64) = v7;
  *(unsigned char *)(v6 + 80) = *(unsigned char *)(a1 + 64);
  long long v8 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v6 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v6 + 32) = v8;
  sub_10005CD54(a1);
  sub_1000063C0(&qword_1001FBE30);
  sub_1000063C0(&qword_1001FDC10);
  sub_100027F2C(&qword_1001FDC18, &qword_1001FBE30);
  sub_100006C14(&qword_1001FDC20);
  sub_100006C14(&qword_1001FDC28);
  type metadata accessor for PrimaryButtonStyle(255);
  sub_100027F2C(&qword_1001FDC30, &qword_1001FDC28);
  sub_10005CDC4(&qword_1001FC888, (void (*)(uint64_t))type metadata accessor for PrimaryButtonStyle);
  swift_getOpaqueTypeConformance2();
  sub_10005CE0C();
  swift_getOpaqueTypeConformance2();
  return ForEach<>.init(_:id:content:)();
}

uint64_t sub_10005C2CC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v31 = a3;
  uint64_t v5 = type metadata accessor for PrimaryButtonStyle(0);
  __chkstk_darwin(v5);
  long long v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000063C0(&qword_1001FDC28);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000063C0(&qword_1001FDC20);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v29 = v12;
  uint64_t v30 = v13;
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *a1;
  uint64_t v17 = a1[1];
  uint64_t v18 = swift_allocObject();
  long long v19 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v18 + 48) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v18 + 64) = v19;
  *(unsigned char *)(v18 + 80) = *(unsigned char *)(a2 + 64);
  long long v20 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v18 + 16) = *(_OWORD *)a2;
  *(_OWORD *)(v18 + 32) = v20;
  *(void *)(v18 + 88) = v16;
  *(void *)(v18 + 96) = v17;
  uint64_t v32 = v16;
  uint64_t v33 = v17;
  sub_10005CD54(a2);
  swift_bridgeObjectRetain();
  sub_1000063C0(&qword_1001FDC40);
  sub_100027F2C(&qword_1001FDC48, &qword_1001FDC40);
  Button.init(action:label:)();
  uint64_t KeyPath = swift_getKeyPath();
  *(_WORD *)long long v7 = 0;
  *((void *)v7 + 1) = 0;
  uint64_t v22 = (uint64_t *)&v7[*(int *)(v5 + 28)];
  uint64_t *v22 = swift_getKeyPath();
  sub_1000063C0((uint64_t *)&unk_1001FB730);
  swift_storeEnumTagMultiPayload();
  uint64_t v23 = &v7[*(int *)(v5 + 32)];
  *(void *)uint64_t v23 = KeyPath;
  v23[8] = 0;
  uint64_t v24 = sub_100027F2C(&qword_1001FDC30, &qword_1001FDC28);
  uint64_t v25 = sub_10005CDC4(&qword_1001FC888, (void (*)(uint64_t))type metadata accessor for PrimaryButtonStyle);
  View.buttonStyle<A>(_:)();
  sub_10005CEEC((uint64_t)v7);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t v34 = v8;
  uint64_t v35 = v5;
  uint64_t v36 = v24;
  uint64_t v37 = v25;
  swift_getOpaqueTypeConformance2();
  sub_10005CE0C();
  uint64_t v26 = v29;
  View.labelStyle<A>(_:)();
  return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v15, v26);
}

uint64_t sub_10005C68C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  char v6 = *(unsigned char *)(a1 + 8);
  uint64_t v7 = swift_retain();
  uint64_t v8 = sub_100020F7C(v7, v6);
  swift_release();
  swift_getKeyPath();
  *(void *)&long long v19 = v8;
  sub_10005CDC4((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v9 = *(void *)(v8 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__analyticsInstance);
  swift_retain();
  swift_release();
  if (v9)
  {
    uint64_t v10 = swift_retain();
    uint64_t v11 = sub_100020F7C(v10, v6);
    swift_release();
    swift_getKeyPath();
    *(void *)&long long v19 = v11;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v12 = *(void *)(v11 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__refinements);
    swift_bridgeObjectRetain();
    swift_release();
    sub_10000A358(a2, a3, v12);
    swift_release();
    swift_bridgeObjectRelease();
  }
  long long v13 = *(_OWORD *)(a1 + 32);
  long long v19 = *(_OWORD *)(a1 + 16);
  long long v20 = v13;
  v18[0] = a2;
  v18[1] = a3;
  swift_bridgeObjectRetain();
  sub_1000063C0((uint64_t *)&unk_1001FF220);
  Binding.wrappedValue.setter();
  uint64_t v15 = *(void *)(a1 + 48);
  uint64_t v14 = *(void *)(a1 + 56);
  char v16 = *(unsigned char *)(a1 + 64);
  *(void *)&long long v19 = v15;
  *((void *)&v19 + 1) = v14;
  LOBYTE(v20) = v16;
  sub_1000063C0(&qword_1001FC910);
  uint64_t result = FocusState.Binding.wrappedValue.getter();
  if ((v18[0] & 1) == 0)
  {
    v18[0] = v15;
    *(void *)&long long v19 = v15;
    *((void *)&v19 + 1) = v14;
    LOBYTE(v20) = v16;
    sub_10005CF60((uint64_t)v18);
    swift_retain();
    FocusState.Binding.wrappedValue.getter();
    *(void *)&long long v19 = v15;
    *((void *)&v19 + 1) = v14;
    LOBYTE(v20) = v16;
    FocusState.Binding.wrappedValue.setter();
    sub_10005CF8C((uint64_t)v18);
    return swift_release();
  }
  return result;
}

uint64_t sub_10005C8E8()
{
  return Label.init(title:icon:)();
}

uint64_t sub_10005C978@<X0>(uint64_t a1@<X8>)
{
  sub_10002DF54();
  swift_bridgeObjectRetain();
  uint64_t v2 = Text.init<A>(_:)();
  uint64_t v4 = v3;
  char v6 = v5;
  uint64_t v8 = v7;
  uint64_t result = swift_getKeyPath();
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v6 & 1;
  *(void *)(a1 + 24) = v8;
  *(void *)(a1 + 32) = result;
  *(unsigned char *)(a1 + 40) = 0;
  return result;
}

uint64_t sub_10005CA0C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = Image.init(systemName:)();
  *a1 = result;
  return result;
}

uint64_t sub_10005CA4C()
{
  uint64_t v0 = type metadata accessor for LocalizedStringKey.StringInterpolation();
  __chkstk_darwin(v0 - 8);
  LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v1._uint64_t countAndFlagsBits = 0x6574736567677553;
  v1._uint64_t object = (void *)0xED00002079622064;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v1);
  v2._uint64_t countAndFlagsBits = 0x54504774616843;
  v2._uint64_t object = (void *)0xE700000000000000;
  LocalizedStringKey.StringInterpolation.appendInterpolation(_:)(v2);
  v3._uint64_t countAndFlagsBits = 0;
  v3._uint64_t object = (void *)0xE000000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v3);
  LocalizedStringKey.init(stringInterpolation:)();
  Text.init(_:tableName:bundle:comment:)();
  sub_1000063C0(&qword_1001FDBE0);
  sub_1000063C0(&qword_1001FDBE8);
  sub_10005CC14();
  sub_100027F2C(&qword_1001FDC00, &qword_1001FDBE8);
  return Section<>.init(header:content:)();
}

uint64_t sub_10005CC0C@<X0>(uint64_t a1@<X8>)
{
  return sub_10005BFEC(*(void *)(v1 + 16), a1);
}

unint64_t sub_10005CC14()
{
  unint64_t result = qword_1001FDBF0;
  if (!qword_1001FDBF0)
  {
    sub_100006C14(&qword_1001FDBE0);
    sub_10005CC90();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FDBF0);
  }
  return result;
}

unint64_t sub_10005CC90()
{
  unint64_t result = qword_1001FDBF8;
  if (!qword_1001FDBF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FDBF8);
  }
  return result;
}

uint64_t sub_10005CCEC()
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 81, 7);
}

uint64_t sub_10005CD4C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10005C2CC(a1, v2 + 16, a2);
}

uint64_t sub_10005CD54(uint64_t a1)
{
  return a1;
}

uint64_t sub_10005CDC4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10005CE0C()
{
  unint64_t result = qword_1001FDC38;
  if (!qword_1001FDC38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FDC38);
  }
  return result;
}

uint64_t sub_10005CE60()
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 104, 7);
}

uint64_t sub_10005CEC8()
{
  return sub_10005C68C(v0 + 16, *(void *)(v0 + 88), *(void *)(v0 + 96));
}

uint64_t sub_10005CED4()
{
  return sub_10005C8E8();
}

uint64_t sub_10005CEEC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PrimaryButtonStyle(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10005CF48@<X0>(uint64_t a1@<X8>)
{
  return sub_10005C978(a1);
}

uint64_t sub_10005CF60(uint64_t a1)
{
  return a1;
}

uint64_t sub_10005CF8C(uint64_t a1)
{
  return a1;
}

unint64_t sub_10005CFBC()
{
  unint64_t result = qword_1001FDC50;
  if (!qword_1001FDC50)
  {
    sub_100006C14(&qword_1001FDC58);
    sub_10005CC14();
    sub_100027F2C(&qword_1001FDC00, &qword_1001FDBE8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FDC50);
  }
  return result;
}

void *sub_10005D068()
{
  uint64_t v1 = *(void *)(v0 + 32);
  char v2 = *(unsigned char *)(v0 + 40);
  j__swift_retain();
  uint64_t v3 = sub_1000207F8(v1, v2);
  j__swift_release();
  if (v3)
  {
    swift_getKeyPath();
    sub_100064D0C((unint64_t *)&qword_1001FB410, (void (*)(uint64_t))type metadata accessor for PresentationModel);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    if ((*(unsigned char *)(v3 + 24) & 1) != 0 || *(void *)(v3 + 16) != 1)
    {
      swift_release();
      return &_swiftEmptySetSingleton;
    }
    swift_release();
  }
  sub_1000063C0(&qword_1001FDF00);
  type metadata accessor for PresentationDetent();
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_10018A740;
  static PresentationDetent.medium.getter();
  static PresentationDetent.large.getter();
  char v5 = sub_100145F08(v4);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  return v5;
}

uint64_t sub_10005D244@<X0>(uint64_t a1@<X8>)
{
  uint64_t v109 = a1;
  uint64_t v2 = type metadata accessor for NavigationBarItem.TitleDisplayMode();
  uint64_t v107 = *(void *)(v2 - 8);
  uint64_t v108 = v2;
  __chkstk_darwin(v2);
  char v106 = (char *)&v68 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = sub_1000063C0(&qword_1001FB438);
  __chkstk_darwin(v105);
  long long v104 = (char *)&v68 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for CompositionResponseView();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v103 = v5 - 8;
  uint64_t v80 = v6;
  uint64_t v79 = *(void *)(v6 + 64);
  __chkstk_darwin(v5 - 8);
  uint64_t v77 = (uint64_t)&v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000063C0(&qword_100201B10);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v111 = (char *)&v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = sub_1000063C0(&qword_1001FDD40);
  __chkstk_darwin(v81);
  uint64_t v12 = (char *)&v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = sub_1000063C0(&qword_1001FDD48);
  uint64_t v85 = *(void *)(v84 - 8);
  __chkstk_darwin(v84);
  uint64_t v76 = (char *)&v68 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = sub_1000063C0(&qword_1001FDD50);
  uint64_t v91 = *(void *)(v89 - 8);
  __chkstk_darwin(v89);
  uint64_t v82 = (char *)&v68 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = sub_1000063C0(&qword_1001FDD58);
  uint64_t v88 = *(void *)(v90 - 8);
  __chkstk_darwin(v90);
  uint64_t v83 = (char *)&v68 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = sub_1000063C0(&qword_1001FDD60) - 8;
  __chkstk_darwin(v87);
  uint64_t v86 = (char *)&v68 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = sub_1000063C0(&qword_1001FDD68);
  __chkstk_darwin(v93);
  uint64_t v92 = (char *)&v68 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = sub_1000063C0(&qword_1001FDD70);
  uint64_t v100 = *(void *)(v97 - 8);
  __chkstk_darwin(v97);
  uint64_t v94 = (char *)&v68 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = sub_1000063C0(&qword_1001FDD78);
  uint64_t v102 = *(void *)(v101 - 8);
  __chkstk_darwin(v101);
  uint64_t v95 = (char *)&v68 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = sub_1000063C0(&qword_1001FDD80);
  uint64_t v98 = *(void *)(v99 - 8);
  __chkstk_darwin(v99);
  long long v96 = (char *)&v68 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = swift_allocBox();
  uint64_t v23 = v22;
  uint64_t v24 = v1;
  char v25 = *(unsigned char *)(v1 + 8);
  uint64_t v26 = swift_retain();
  sub_100020F7C(v26, v25);
  swift_release();
  type metadata accessor for CompositionModel(0);
  uint64_t v27 = sub_100064D0C((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  uint64_t v75 = v23;
  uint64_t v70 = v27;
  Bindable<A>.init(wrappedValue:)();
  *(void *)uint64_t v12 = static HorizontalAlignment.center.getter();
  *((void *)v12 + 1) = 0;
  v12[16] = 1;
  sub_1000063C0(&qword_1001FDD88);
  uint64_t v110 = v1;
  sub_10005E060(v21, v1);
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  uint64_t v73 = v9 + 16;
  uint64_t v74 = v28;
  uint64_t v29 = v111;
  uint64_t v69 = v8;
  v28(v111, v23, v8);
  Bindable.wrappedValue.getter();
  uint64_t v30 = *(void (**)(char *, uint64_t))(v9 + 8);
  uint64_t v71 = v9 + 8;
  uint64_t v72 = v30;
  v30(v29, v8);
  uint64_t v31 = v116;
  swift_getKeyPath();
  uint64_t v116 = v31;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  LODWORD(v29) = *(unsigned __int8 *)(v31 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__state);
  swift_release();
  LOBYTE(v116) = v29 == 1;
  uint64_t v32 = v77;
  sub_100063EB8(v24, v77);
  unint64_t v33 = (*(unsigned __int8 *)(v80 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v80 + 80);
  uint64_t v34 = swift_allocObject();
  *(void *)(v34 + 16) = v21;
  sub_1000640D8(v32, v34 + v33);
  uint64_t v35 = sub_100027F2C((unint64_t *)&unk_1001FDD90, &qword_1001FDD40);
  uint64_t v78 = v21;
  swift_retain();
  uint64_t v36 = v76;
  uint64_t v37 = v81;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  sub_10002784C((uint64_t)v12, &qword_1001FDD40);
  uint64_t v38 = v110;
  uint64_t v112 = v110;
  uint64_t v113 = v21;
  uint64_t v39 = (void *)sub_1000063C0((uint64_t *)&unk_100201BA0);
  uint64_t v116 = v37;
  uint64_t v117 = &type metadata for Bool;
  long long v118 = (void *)v35;
  uint64_t v119 = &protocol witness table for Bool;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v41 = sub_100027F2C((unint64_t *)&unk_1001FDDA0, (uint64_t *)&unk_100201BA0);
  uint64_t v42 = v82;
  uint64_t v43 = v84;
  View.toolbar<A>(content:)();
  (*(void (**)(char *, uint64_t))(v85 + 8))(v36, v43);
  uint64_t v44 = *(void *)(v38 + 56);
  uint64_t v114 = *(void *)(v38 + 48);
  uint64_t v115 = v44;
  sub_1000063C0(&qword_1001FC678);
  State.projectedValue.getter();
  uint64_t v45 = v118;
  uint64_t v116 = v43;
  uint64_t v117 = v39;
  long long v118 = (void *)OpaqueTypeConformance2;
  uint64_t v119 = (void *)v41;
  swift_getOpaqueTypeConformance2();
  uint64_t v46 = v83;
  uint64_t v47 = v89;
  View.inlineFeedback(controller:completion:)();

  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v91 + 8))(v42, v47);
  uint64_t v48 = v88;
  uint64_t v49 = (uint64_t)v86;
  uint64_t v50 = v90;
  (*(void (**)(char *, char *, uint64_t))(v88 + 16))(v86, v46, v90);
  *(unsigned char *)(v49 + *(int *)(v87 + 44)) = 0;
  (*(void (**)(char *, uint64_t))(v48 + 8))(v46, v50);
  uint64_t v51 = v111;
  uint64_t v52 = v69;
  v74(v111, v75, v69);
  Bindable.wrappedValue.getter();
  v72(v51, v52);
  uint64_t v53 = v116;
  swift_getKeyPath();
  uint64_t v116 = v53;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_unknownObjectWeakLoadStrong();
  swift_release();
  uint64_t v54 = (uint64_t)v104;
  Binding.projectedValue.getter();
  LOBYTE(v114) = 1;
  static Binding.constant(_:)();
  uint64_t v55 = v93;
  uint64_t v56 = (uint64_t)v92;
  sub_1000EF1D8(1, 1, v54, v116, (uint64_t)v117, (char)v118, (uint64_t)&v92[*(int *)(v93 + 36)]);
  sub_100026FD0(v49, v56, &qword_1001FDD60);
  double v58 = v106;
  uint64_t v57 = v107;
  uint64_t v59 = v108;
  (*(void (**)(char *, void, uint64_t))(v107 + 104))(v106, enum case for NavigationBarItem.TitleDisplayMode.inline(_:), v108);
  uint64_t v60 = (void *)sub_1000641D0();
  uint64_t v61 = v94;
  View.navigationBarTitleDisplayMode(_:)();
  (*(void (**)(char *, uint64_t))(v57 + 8))(v58, v59);
  sub_10002784C(v56, &qword_1001FDD68);
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v116 = v55;
  uint64_t v117 = v60;
  int v62 = (void *)swift_getOpaqueTypeConformance2();
  uint64_t v63 = v95;
  uint64_t v64 = v97;
  View.navigationTitle(_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v100 + 8))(v61, v64);
  uint64_t v116 = v64;
  uint64_t v117 = v62;
  swift_getOpaqueTypeConformance2();
  uint64_t v65 = v96;
  uint64_t v66 = v101;
  View.navigationBarBackButtonHidden(_:)();
  (*(void (**)(char *, uint64_t))(v102 + 8))(v63, v66);
  (*(void (**)(uint64_t, char *, uint64_t))(v98 + 32))(v109, v65, v99);
  return swift_release();
}

uint64_t sub_10005E060(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000063C0(&qword_100201B10);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v11[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = swift_projectBox();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  Bindable.wrappedValue.getter();
  (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v9 = v14;
  swift_getKeyPath();
  uint64_t v14 = v9;
  sub_100064D0C((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_release();
  uint64_t v12 = a1;
  uint64_t v13 = a2;
  static Axis.Set.vertical.getter();
  sub_1000063C0(&qword_1001FDE10);
  sub_100027F2C(&qword_1001FDE18, &qword_1001FDE10);
  return ScrollView.init(_:showsIndicators:content:)();
}

uint64_t sub_10005E254@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (qword_1001FAD20 != -1) {
    swift_once();
  }
  uint64_t v6 = *((void *)&xmmword_1002129C0 + 1);
  *(void *)a3 = static HorizontalAlignment.center.getter();
  *(void *)(a3 + 8) = v6;
  *(unsigned char *)(a3 + 16) = 0;
  uint64_t v7 = sub_1000063C0(&qword_1001FDE20);
  return sub_10005E2E8(a1, a2, a3 + *(int *)(v7 + 44));
}

uint64_t sub_10005E2E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v233 = a2;
  uint64_t v227 = a3;
  uint64_t v239 = type metadata accessor for Divider();
  uint64_t v242 = *(void *)(v239 - 8);
  uint64_t v4 = __chkstk_darwin(v239);
  uint64_t v232 = (char *)&v200 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v238 = (char *)&v200 - v6;
  uint64_t v229 = type metadata accessor for CompositionResponseView();
  uint64_t v224 = *(unsigned __int8 **)(v229 - 8);
  __chkstk_darwin(v229);
  uint64_t v225 = v7;
  uint64_t v226 = (char *)&v200 - ((unint64_t)(v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v216 = type metadata accessor for SmallIconTitleLabelStyle(0);
  __chkstk_darwin(v216);
  uint64_t v215 = (_OWORD *)((char *)&v200 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = sub_1000063C0(&qword_1001FDE28);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v200 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v211 = (uint64_t)&v200 - v13;
  uint64_t v14 = sub_1000063C0(&qword_1001FDE30);
  uint64_t v213 = *(void *)(v14 - 8);
  uint64_t v214 = v14;
  __chkstk_darwin(v14);
  uint64_t v210 = (char *)&v200 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v208 = sub_1000063C0(&qword_1001FDE38);
  __chkstk_darwin(v208);
  uint64_t v209 = (char *)&v200 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v207 = sub_1000063C0(&qword_1001FDE40);
  __chkstk_darwin(v207);
  *(void *)&long long v228 = (char *)&v200 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v217 = sub_1000063C0(&qword_1001FDE48);
  __chkstk_darwin(v217);
  uint64_t v219 = (uint64_t)&v200 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v218 = sub_1000063C0(&qword_1001FDE50);
  __chkstk_darwin(v218);
  uint64_t v220 = (uint64_t)&v200 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v222 = sub_1000063C0(&qword_1001FDE58);
  __chkstk_darwin(v222);
  uint64_t v223 = (uint64_t)&v200 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1000063C0(&qword_1001FDE60);
  uint64_t v236 = *(void *)(v21 - 8);
  uint64_t v237 = v21;
  uint64_t v22 = __chkstk_darwin(v21);
  uint64_t v231 = (char *)&v200 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v221 = (char *)&v200 - v25;
  __chkstk_darwin(v24);
  uint64_t v235 = (char *)&v200 - v26;
  uint64_t v27 = sub_1000063C0(&qword_100201B10);
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v206 = (char *)&v200 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  uint64_t v32 = (char *)&v200 - v31;
  uint64_t v33 = sub_1000063C0(&qword_1001FDE68);
  uint64_t v34 = __chkstk_darwin(v33 - 8);
  uint64_t v230 = (uint64_t)&v200 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  uint64_t v234 = (uint64_t)&v200 - v36;
  uint64_t v212 = a1;
  uint64_t v37 = swift_projectBox();
  uint64_t v38 = *(void (**)(char *, uint64_t, uint64_t))(v28 + 16);
  uint64_t v241 = v28 + 16;
  uint64_t v246 = v38;
  v38(v32, v37, v27);
  Bindable.wrappedValue.getter();
  uint64_t v40 = *(void (**)(char *, uint64_t))(v28 + 8);
  uint64_t v39 = (unsigned __int8 *)(v28 + 8);
  uint64_t v243 = v32;
  uint64_t v245 = v40;
  v40(v32, v27);
  uint64_t v41 = v278;
  swift_getKeyPath();
  *(void *)&long long v278 = v41;
  id v247 = (id)sub_100064D0C((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v43 = *(void *)(v41 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__notice);
  unint64_t v42 = *(void *)(v41 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__notice + 8);
  swift_bridgeObjectRetain();
  swift_release();
  if (v42)
  {
    uint64_t v44 = HIBYTE(v42) & 0xF;
    if ((v42 & 0x2000000000000000) == 0) {
      uint64_t v44 = v43 & 0xFFFFFFFFFFFFLL;
    }
    if (v44)
    {
      *(void *)&long long v278 = v43;
      *((void *)&v278 + 1) = v42;
      sub_10002DF54();
      uint64_t v45 = v234;
      Label<>.init<A>(_:systemImage:)();
      uint64_t v46 = sub_1000063C0(&qword_1001FBBC0);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v45, 0, 1, v46);
      goto LABEL_8;
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v47 = sub_1000063C0(&qword_1001FBBC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v234, 1, 1, v47);
LABEL_8:
  uint64_t v244 = v37;
  uint64_t v248 = v39;
  if (qword_1001FAD20 != -1) {
    swift_once();
  }
  long long v48 = xmmword_1002129C0;
  uint64_t v49 = static Alignment.center.getter();
  uint64_t v51 = v50;
  *((void *)v12 + 3) = 0;
  *((void *)v12 + 4) = 0;
  v12[40] = 1;
  uint64_t v52 = (uint64_t *)&v12[*(int *)(v9 + 48)];
  *uint64_t v52 = swift_getKeyPath();
  sub_1000063C0((uint64_t *)&unk_1001FAE30);
  swift_storeEnumTagMultiPayload();
  char *v12 = 0;
  *((void *)v12 + 1) = v49;
  *((void *)v12 + 2) = v51;
  *(_OWORD *)(v12 + 24) = v48;
  v12[40] = 0;
  uint64_t v53 = v233;
  sub_10005FFF0(v233, v212, (uint64_t)&v12[*(int *)(v9 + 44)]);
  uint64_t v54 = (uint64_t)v12;
  uint64_t v55 = v211;
  sub_100026FD0(v54, v211, &qword_1001FDE28);
  uint64_t v56 = v53 + *(int *)(v229 + 36);
  char v57 = *(unsigned char *)(v56 + 8);
  uint64_t v58 = *(void *)(v56 + 16);
  *(void *)&long long v256 = *(void *)v56;
  BYTE8(v256) = v57;
  uint64_t v257 = v58;
  uint64_t v212 = sub_1000063C0(&qword_1001FDE70);
  State.projectedValue.getter();
  uint64_t v59 = v279;
  char v60 = v280;
  uint64_t v62 = (uint64_t)v215;
  uint64_t v61 = v216;
  *uint64_t v215 = v278;
  *(void *)(v62 + 16) = v59;
  *(unsigned char *)(v62 + 24) = v60;
  uint64_t v63 = (uint64_t *)(v62 + *(int *)(v61 + 20));
  *uint64_t v63 = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  sub_100027F2C(&qword_1001FDE78, &qword_1001FDE28);
  sub_100064D0C((unint64_t *)&unk_1001FD560, (void (*)(uint64_t))type metadata accessor for SmallIconTitleLabelStyle);
  uint64_t v64 = v210;
  View.labelStyle<A>(_:)();
  sub_100064500(v62);
  sub_10002784C(v55, &qword_1001FDE28);
  uint64_t v66 = v213;
  uint64_t v65 = v214;
  uint64_t v67 = (uint64_t)v209;
  (*(void (**)(char *, char *, uint64_t))(v213 + 16))(v209, v64, v214);
  uint64_t v68 = v67 + *(int *)(v208 + 36);
  *(_WORD *)uint64_t v68 = 0;
  *(unsigned char *)(v68 + 2) = 1;
  (*(void (**)(char *, uint64_t))(v66 + 8))(v64, v65);
  uint64_t v69 = v228;
  sub_100008DD4(v67, v228, &qword_1001FDE38);
  *(_WORD *)(v69 + *(int *)(v207 + 36)) = 256;
  sub_10002784C(v67, &qword_1001FDE38);
  char v70 = static Edge.Set.bottom.getter();
  if (qword_1001FAC98 != -1) {
    swift_once();
  }
  char v71 = byte_1001FDC68;
  uint64_t v72 = 0;
  uint64_t v73 = 0;
  uint64_t v74 = 0;
  uint64_t v75 = 0;
  if ((byte_1001FDC68 & 1) == 0)
  {
    EdgeInsets.init(_all:)();
    uint64_t v72 = v76;
    uint64_t v73 = v77;
    uint64_t v74 = v78;
    uint64_t v75 = v79;
  }
  uint64_t v80 = v228;
  uint64_t v81 = v219;
  sub_100008DD4(v228, v219, &qword_1001FDE40);
  uint64_t v82 = v81 + *(int *)(v217 + 36);
  *(unsigned char *)uint64_t v82 = v70;
  *(void *)(v82 + 8) = v72;
  *(void *)(v82 + 16) = v73;
  *(void *)(v82 + 24) = v74;
  *(void *)(v82 + 32) = v75;
  *(unsigned char *)(v82 + 40) = v71;
  sub_10002784C(v80, &qword_1001FDE40);
  char v83 = *(unsigned char *)(v56 + 8);
  uint64_t v84 = *(void *)(v56 + 16);
  *(void *)&long long v256 = *(void *)v56;
  BYTE8(v256) = v83;
  uint64_t v257 = v84;
  State.projectedValue.getter();
  long long v228 = v278;
  uint64_t v85 = v279;
  char v86 = v280;
  uint64_t v87 = v220;
  sub_100008DD4(v81, v220, &qword_1001FDE48);
  uint64_t v88 = v87 + *(int *)(v218 + 36);
  *(_OWORD *)uint64_t v88 = v228;
  *(void *)(v88 + 16) = v85;
  *(unsigned char *)(v88 + 24) = v86;
  sub_10002784C(v81, &qword_1001FDE48);
  uint64_t v89 = v243;
  v246(v243, v244, v27);
  Bindable.wrappedValue.getter();
  v245(v89, v27);
  uint64_t v90 = v278;
  swift_getKeyPath();
  *(void *)&long long v278 = v90;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  LODWORD(v89) = *(unsigned __int8 *)(v90 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__state);
  swift_release();
  BOOL v91 = v89 == 1;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v93 = swift_allocObject();
  *(unsigned char *)(v93 + 16) = v91;
  uint64_t v94 = v223;
  sub_100008DD4(v87, v223, &qword_1001FDE50);
  uint64_t v240 = v27;
  uint64_t v95 = (uint64_t *)(v94 + *(int *)(v222 + 36));
  uint64_t *v95 = KeyPath;
  v95[1] = (uint64_t)sub_100040414;
  v95[2] = v93;
  sub_10002784C(v87, &qword_1001FDE50);
  uint64_t v96 = v233;
  uint64_t v97 = (char *)(v233 + *(int *)(v229 + 40));
  char v98 = *v97;
  uint64_t v99 = *((void *)v97 + 1);
  LOBYTE(v256) = v98;
  *((void *)&v256 + 1) = v99;
  sub_1000063C0(&qword_1001FB5A8);
  State.projectedValue.getter();
  uint64_t v100 = (uint64_t)v226;
  sub_100063EB8(v96, (uint64_t)v226);
  unint64_t v101 = (v224[80] + 16) & ~(unint64_t)v224[80];
  uint64_t v102 = swift_allocObject();
  sub_1000640D8(v100, v102 + v101);
  sub_1000063C0(&qword_1001FDE80);
  sub_1000645E0();
  sub_10006487C();
  uint64_t v103 = v221;
  uint64_t v104 = v240;
  View.sheet<A>(isPresented:onDismiss:content:)();
  swift_release();
  swift_release();
  swift_release();
  sub_10002784C(v94, &qword_1001FDE58);
  uint64_t v105 = v243;
  (*(void (**)(char *, char *, uint64_t))(v236 + 32))(v235, v103, v237);
  Divider.init()();
  uint64_t v106 = v244;
  uint64_t v107 = v246;
  v246(v105, v244, v104);
  Bindable.wrappedValue.getter();
  v245(v105, v104);
  uint64_t v108 = v278;
  swift_getKeyPath();
  *(void *)&long long v278 = v108;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v226 = *(char **)(v108 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__nonInlineSupportResponse);
  *(void *)&long long v228 = v226;
  swift_release();
  type metadata accessor for CommonUIManager();
  sub_100064D0C((unint64_t *)&qword_1001FAE20, (void (*)(uint64_t))type metadata accessor for CommonUIManager);
  uint64_t v229 = Environment.init<A>(_:)();
  LODWORD(v223) = v109;
  v107(v105, v106, v104);
  Bindable.wrappedValue.getter();
  uint64_t v110 = v245;
  v245(v105, v104);
  uint64_t v111 = v278;
  swift_getKeyPath();
  *(void *)&long long v278 = v111;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v112 = v244;
  uint64_t v224 = *(unsigned __int8 **)(v111 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__nonInlineSupportResponse);
  uint64_t v225 = v224;
  swift_release();
  v246(v105, v112, v104);
  Bindable.wrappedValue.getter();
  v110(v105, v104);
  uint64_t v113 = v110;
  uint64_t v114 = v278;
  swift_getKeyPath();
  *(void *)&long long v278 = v114;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v115 = (uint64_t *)(v114 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__slots);
  swift_beginAccess();
  uint64_t v116 = *v115;
  swift_bridgeObjectRetain();
  swift_release();
  uint64_t v117 = *(void *)(v116 + 16);
  swift_bridgeObjectRelease();
  if (v117)
  {
    long long v118 = v206;
    uint64_t v119 = v112;
    uint64_t v120 = v240;
    v246(v206, v112, v240);
    uint64_t v121 = v243;
    Bindable.projectedValue.getter();
    v110(v118, v120);
    swift_getKeyPath();
    Bindable<A>.subscript.getter();
    swift_release();
    v110(v121, v120);
    uint64_t v221 = (char *)*((void *)&v278 + 1);
    uint64_t v222 = v278;
    uint64_t v220 = v279;
    type metadata accessor for CompositionModel(0);
    uint64_t v122 = Environment.init<A>(_:)();
    uint64_t v218 = v123 & 1;
    uint64_t v219 = v122;
  }
  else
  {
    uint64_t v119 = v112;
    uint64_t v218 = 0;
    uint64_t v219 = 0;
    uint64_t v221 = 0;
    uint64_t v222 = 0;
    uint64_t v220 = 0;
  }
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  int v124 = v283;
  uint64_t v216 = v284;
  uint64_t v217 = v282;
  int v125 = v285;
  uint64_t v214 = v287;
  uint64_t v215 = v286;
  uint64_t v126 = type metadata accessor for FeedbackFeatureFlags();
  uint64_t v280 = v126;
  uint64_t v281 = sub_100064D0C((unint64_t *)&unk_1001FDED0, (void (*)(uint64_t))&type metadata accessor for FeedbackFeatureFlags);
  uint64_t v127 = sub_10002E148((uint64_t *)&v278);
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v126 - 8) + 104))(v127, enum case for FeedbackFeatureFlags.CentralizedFeedback(_:), v126);
  LOBYTE(v126) = isFeatureEnabled(_:)();
  sub_100027DBC((uint64_t)&v278);
  LODWORD(v213) = v125;
  if (v126)
  {
    LODWORD(v212) = v124;
    uint64_t v128 = v243;
    uint64_t v129 = v240;
    uint64_t v130 = v246;
    v246(v243, v119, v240);
    Bindable.wrappedValue.getter();
    v113(v128, v129);
    uint64_t v131 = v278;
    swift_getKeyPath();
    *(void *)&long long v278 = v131;
    sub_100064D0C((unint64_t *)&qword_1001FD2A0, (void (*)(uint64_t))type metadata accessor for ToolModel);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v132 = *(void *)(v131 + 40);
    uint64_t v210 = *(char **)(v131 + 32);
    uint64_t v211 = v132;
    swift_bridgeObjectRetain();
    swift_release();
    v130(v128, v119, v129);
    Bindable.wrappedValue.getter();
    v113(v128, v129);
    uint64_t v133 = sub_100068CD8();
    uint64_t v208 = v134;
    uint64_t v209 = (char *)v133;
    swift_release();
    v130(v128, v119, v129);
    Bindable.wrappedValue.getter();
    v113(v128, v129);
    uint64_t v135 = sub_100068D30();
    uint64_t v206 = v136;
    uint64_t v207 = v135;
    swift_release();
    v130(v128, v119, v129);
    Bindable.wrappedValue.getter();
    v113(v128, v129);
    uint64_t v137 = v278;
    swift_getKeyPath();
    *(void *)&long long v278 = v137;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v138 = *(void **)(v137 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__resultAttributedString);
    if (v138)
    {
      id v139 = v138;
      id v140 = [v139 string];
      uint64_t v141 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v200 = v142;
      uint64_t v201 = v141;
      swift_release();
    }
    else
    {
      swift_release();
      unint64_t v200 = 0xE000000000000000;
      uint64_t v201 = 0;
    }
    uint64_t v144 = v243;
    uint64_t v145 = v240;
    v246(v243, v244, v240);
    Bindable.wrappedValue.getter();
    uint64_t v146 = v245;
    v245(v144, v145);
    uint64_t v147 = v278;
    swift_getKeyPath();
    *(void *)&long long v278 = v147;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v148 = *(void *)(v147 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__modelInfoString + 8);
    uint64_t v204 = *(void *)(v147 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__modelInfoString);
    uint64_t v205 = v148;
    swift_bridgeObjectRetain();
    swift_release();
    uint64_t v149 = *(void *)(v233 + 56);
    *(void *)&long long v278 = *(void *)(v233 + 48);
    *((void *)&v278 + 1) = v149;
    sub_1000063C0(&qword_1001FC678);
    State.wrappedValue.getter();
    uint64_t v233 = v256;
    uint64_t v150 = v244;
    uint64_t v151 = v246;
    v246(v144, v244, v145);
    Bindable.wrappedValue.getter();
    v146(v144, v145);
    uint64_t v152 = v278;
    swift_getKeyPath();
    *(void *)&long long v278 = v152;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    int v153 = *(unsigned __int8 *)(v152 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__state);
    swift_release();
    BOOL v154 = 1;
    if (v153 != 1)
    {
      uint64_t v155 = v243;
      uint64_t v156 = v240;
      v151(v243, v150, v240);
      Bindable.wrappedValue.getter();
      v245(v155, v156);
      uint64_t v157 = v278;
      swift_getKeyPath();
      *(void *)&long long v278 = v157;
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      LODWORD(v155) = *(unsigned __int8 *)(v157 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__state);
      swift_release();
      BOOL v154 = v155 == 2;
    }
    BOOL v203 = v154;
    uint64_t v158 = v151;
    uint64_t v159 = v243;
    uint64_t v160 = v240;
    v158(v243, v150, v240);
    uint64_t v161 = v158;
    Bindable.wrappedValue.getter();
    uint64_t v162 = v245;
    v245(v159, v160);
    uint64_t v163 = v278;
    swift_getKeyPath();
    *(void *)&long long v278 = v163;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v164 = (uint64_t *)(v163 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__attachments);
    swift_beginAccess();
    uint64_t v202 = *v164;
    swift_bridgeObjectRetain();
    swift_release();
    uint64_t v165 = v244;
    v161(v159, v244, v160);
    Bindable.wrappedValue.getter();
    v162(v159, v160);
    uint64_t v166 = v278;
    swift_getKeyPath();
    *(void *)&long long v278 = v166;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v167 = *(void *)(v166 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__refinements);
    swift_bridgeObjectRetain();
    swift_release();
    v246(v159, v165, v160);
    Bindable.wrappedValue.getter();
    v245(v159, v160);
    uint64_t v168 = v278;
    swift_getKeyPath();
    *(void *)&long long v278 = v168;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v169 = (uint64_t *)(v168 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__generatedImages);
    swift_beginAccess();
    uint64_t v170 = *v169;
    swift_bridgeObjectRetain();
    swift_release();
    *(void *)&long long v256 = 0x3FF0000000000000;
    State.init(wrappedValue:)();
    *(void *)&long long v256 = v233;
    *((void *)&v256 + 1) = v210;
    uint64_t v257 = v211;
    id v258 = v209;
    uint64_t v259 = v208;
    uint64_t v260 = v207;
    uint64_t v261 = v206;
    uint64_t v262 = v201;
    unint64_t v263 = v200;
    uint64_t v264 = v204;
    uint64_t v265 = v205;
    uint64_t v266 = v202;
    uint64_t v267 = v167;
    uint64_t v268 = v170;
    long long v269 = xmmword_10018C770;
    uint64_t v270 = 0;
    char v271 = 1;
    BOOL v272 = v203;
    __int16 v273 = 2;
    char v274 = 0;
    uint64_t v276 = 0;
    uint64_t v275 = 0;
    long long v277 = v278;
    nullsub_1(&v256);
    sub_100026FD0((uint64_t)&v256, (uint64_t)&v278, &qword_100201C50);
    char v143 = v212;
  }
  else
  {
    sub_100064980(&v256);
    sub_100026FD0((uint64_t)&v256, (uint64_t)&v278, &qword_100201C50);
    char v143 = v124;
  }
  uint64_t v171 = v230;
  sub_100008DD4(v234, v230, &qword_1001FDE68);
  char v172 = *(void (**)(char *, char *, uint64_t))(v236 + 16);
  uint64_t v173 = v231;
  uint64_t v174 = v237;
  v172(v231, v235, v237);
  uint64_t v175 = *(void (**)(char *, char *, uint64_t))(v242 + 16);
  uint64_t v176 = v232;
  v175(v232, v238, v239);
  char v254 = v223 & 1;
  char v253 = 0;
  char v252 = 1;
  char v251 = v143;
  char v250 = v213;
  sub_100026FD0((uint64_t)&v278, (uint64_t)v249, &qword_100201C50);
  uint64_t v177 = v171;
  uint64_t v178 = v227;
  sub_100008DD4(v177, v227, &qword_1001FDE68);
  uint64_t v179 = (int *)sub_1000063C0(&qword_1001FDEE0);
  v172((char *)(v178 + v179[12]), v173, v174);
  uint64_t v180 = v176;
  uint64_t v181 = v239;
  v175((char *)(v178 + v179[16]), v180, v239);
  uint64_t v182 = v178 + v179[20];
  char v183 = v254;
  char v184 = v253;
  *(void *)uint64_t v182 = v229;
  *(unsigned char *)(v182 + 8) = v183;
  *(void *)(v182 + 16) = v226;
  *(unsigned char *)(v182 + 24) = v184;
  *(void *)(v178 + v179[24]) = v224;
  uint64_t v185 = (void *)(v178 + v179[28]);
  uint64_t v187 = v218;
  uint64_t v186 = v219;
  *uint64_t v185 = v219;
  v185[1] = v187;
  uint64_t v189 = (uint64_t)v221;
  uint64_t v188 = v222;
  v185[2] = v222;
  v185[3] = v189;
  v185[4] = v220;
  uint64_t v190 = v178 + v179[32];
  char v191 = v252;
  char v192 = v251;
  char v193 = v250;
  *(void *)uint64_t v190 = 0;
  *(unsigned char *)(v190 + 8) = v191;
  *(void *)(v190 + 16) = v217;
  *(unsigned char *)(v190 + 24) = v192;
  *(void *)(v190 + 32) = v216;
  *(unsigned char *)(v190 + 40) = v193;
  uint64_t v194 = v214;
  *(void *)(v190 + 48) = v215;
  *(void *)(v190 + 56) = v194;
  uint64_t v195 = v178 + v179[36];
  sub_100026FD0((uint64_t)v249, (uint64_t)v255, &qword_100201C50);
  sub_100026FD0((uint64_t)v255, v195, &qword_100201C50);
  swift_retain();
  id v247 = (id)v228;
  uint64_t v248 = v225;
  sub_1000649A0(v186, v187, v188, v189);
  sub_100064B1C(v255, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100064A04);
  uint64_t v196 = *(void (**)(char *, uint64_t))(v242 + 8);
  v242 += 8;
  v196(v238, v181);
  uint64_t v197 = *(void (**)(char *, uint64_t))(v236 + 8);
  uint64_t v198 = v237;
  v197(v235, v237);
  sub_10002784C(v234, &qword_1001FDE68);
  sub_100026FD0((uint64_t)v249, (uint64_t)&v256, &qword_100201C50);
  sub_100064B1C(&v256, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100064B88);
  sub_100064CA0(v186, v187, v188, v189);

  swift_release();
  v196(v232, v239);
  v197(v231, v198);
  return sub_10002784C(v230, &qword_1001FDE68);
}

uint64_t sub_10005FFF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v79 = a3;
  uint64_t v66 = sub_1000063C0(&qword_100201B10);
  uint64_t v65 = *(void *)(v66 - 8);
  __chkstk_darwin(v66);
  uint64_t v64 = (char *)v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000063C0(&qword_1001FDF08);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v78 = (uint64_t)v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v73 = (uint64_t)v61 - v9;
  uint64_t v10 = type metadata accessor for CompositionResponseView();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin(v10 - 8);
  uint64_t v13 = (char *)v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000063C0(&qword_1001FD580);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)v61 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1000063C0(&qword_1001FD588);
  uint64_t v68 = *(void *)(v18 - 8);
  uint64_t v69 = v18;
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v76 = (uint64_t)v61 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v77 = (char *)v61 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v25 = (char *)v61 - v24;
  __chkstk_darwin(v23);
  uint64_t v27 = (char *)v61 - v26;
  uint64_t v75 = a1;
  sub_100063EB8(a1, (uint64_t)v13);
  uint64_t v28 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v29 = (v28 + 16) & ~v28;
  uint64_t v67 = v29 + v12;
  unint64_t v30 = (v29 + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  v61[1] = v30 + 8;
  uint64_t v84 = v28 | 7;
  uint64_t v31 = swift_allocObject();
  uint64_t v85 = v29;
  uint64_t v32 = v31 + v29;
  uint64_t v33 = (uint64_t)v25;
  uint64_t v72 = v13;
  sub_1000640D8((uint64_t)v13, v32);
  unint64_t v62 = v30;
  *(void *)(v31 + v30) = a2;
  swift_retain();
  uint64_t v34 = sub_1000063C0(&qword_1001FD590);
  unint64_t v82 = sub_100057CF4();
  uint64_t v83 = v34;
  Button.init(action:label:)();
  uint64_t v81 = *(void (**)(uint64_t, char *, uint64_t))(v15 + 16);
  v81(v33, v17, v14);
  uint64_t v35 = *(void (**)(char *, uint64_t))(v15 + 8);
  uint64_t v70 = v15 + 8;
  uint64_t v71 = v14;
  uint64_t v80 = v35;
  v35(v17, v14);
  uint64_t v74 = v27;
  sub_100026FD0(v33, (uint64_t)v27, &qword_1001FD588);
  uint64_t v63 = a2;
  uint64_t v36 = swift_projectBox();
  uint64_t v37 = v65;
  uint64_t v38 = v64;
  uint64_t v39 = v66;
  (*(void (**)(char *, uint64_t, uint64_t))(v65 + 16))(v64, v36, v66);
  Bindable.wrappedValue.getter();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v38, v39);
  uint64_t v40 = v86;
  swift_getKeyPath();
  uint64_t v86 = v40;
  sub_100064D0C((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  LODWORD(v34) = *(unsigned __int8 *)(v40
                                    + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__isForEditableContent);
  swift_release();
  if (v34 == 1)
  {
    uint64_t v41 = v75;
    char v42 = *(unsigned char *)(v75 + 8);
    uint64_t v43 = swift_retain();
    uint64_t v44 = sub_100020F7C(v43, v42);
    swift_release();
    swift_getKeyPath();
    uint64_t v86 = v44;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v45 = *(void *)(v44 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__selectedWordCount);
    swift_release();
    BOOL v46 = v45 > 0;
    uint64_t v47 = (uint64_t)v72;
    sub_100063EB8(v41, (uint64_t)v72);
    uint64_t v48 = swift_allocObject();
    sub_1000640D8(v47, v48 + v85);
    uint64_t v49 = v63;
    *(void *)(v48 + v62) = v63;
    __chkstk_darwin(v49);
    LOBYTE(v61[-2]) = v46;
    swift_retain();
    Button.init(action:label:)();
    uint64_t v50 = v71;
    v81(v33, v17, v71);
    v80(v17, v50);
    uint64_t v51 = v73;
    sub_100026FD0(v33, v73, &qword_1001FD588);
    uint64_t v52 = 0;
  }
  else
  {
    uint64_t v52 = 1;
    uint64_t v47 = (uint64_t)v72;
    uint64_t v51 = v73;
    uint64_t v41 = v75;
    uint64_t v50 = v71;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v68 + 56))(v51, v52, 1, v69);
  sub_100063EB8(v41, v47);
  uint64_t v53 = swift_allocObject();
  sub_1000640D8(v47, v53 + v85);
  Button.init(action:label:)();
  uint64_t v54 = (uint64_t)v77;
  v81((uint64_t)v77, v17, v50);
  v80(v17, v50);
  sub_100026FD0(v54, v33, &qword_1001FD588);
  uint64_t v55 = (uint64_t)v74;
  sub_100008DD4((uint64_t)v74, v54, &qword_1001FD588);
  uint64_t v56 = v78;
  sub_100008DD4(v51, v78, &qword_1001FDF08);
  uint64_t v57 = v76;
  sub_100008DD4(v33, v76, &qword_1001FD588);
  uint64_t v58 = v79;
  sub_100008DD4(v54, v79, &qword_1001FD588);
  uint64_t v59 = sub_1000063C0(&qword_1001FDF10);
  sub_100008DD4(v56, v58 + *(int *)(v59 + 48), &qword_1001FDF08);
  sub_100008DD4(v57, v58 + *(int *)(v59 + 64), &qword_1001FD588);
  sub_10002784C(v33, &qword_1001FD588);
  sub_10002784C(v51, &qword_1001FDF08);
  sub_10002784C(v55, &qword_1001FD588);
  sub_10002784C(v57, &qword_1001FD588);
  sub_10002784C(v56, &qword_1001FDF08);
  return sub_10002784C(v54, &qword_1001FD588);
}

uint64_t sub_100060888(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000063C0(&qword_100201B10);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v8 = *(unsigned char *)(a1 + 24);
  uint64_t v9 = swift_retain();
  sub_100020A44(v9, v8);
  swift_release();
  sub_10011E5C0();
  swift_release();
  LOBYTE(a1) = *(unsigned char *)(a1 + 8);
  uint64_t v10 = swift_retain();
  uint64_t v11 = sub_100020F7C(v10, a1);
  swift_release();
  swift_getKeyPath();
  uint64_t v26 = v11;
  sub_100064D0C((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v12 = *(void **)(v11 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__nonInlineSupportResponse);
  id v13 = v12;
  swift_release();
  if (v12)
  {
    id v24 = v13;
    uint64_t v25 = a2;
    uint64_t v14 = swift_projectBox();
    uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v15(v7, v14, v4);
    Bindable.wrappedValue.getter();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v16 = v26;
    swift_getKeyPath();
    uint64_t v26 = v16;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    swift_release();
    if (Strong)
    {
      id v18 = v24;
      [Strong copyText:v24];

      swift_unknownObjectRelease();
    }
    else
    {
    }
  }
  else
  {
    uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  }
  uint64_t v19 = swift_projectBox();
  v15(v7, v19, v4);
  Bindable.wrappedValue.getter();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v20 = v26;
  swift_getKeyPath();
  uint64_t v26 = v20;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v21 = (void *)swift_unknownObjectWeakLoadStrong();
  uint64_t result = swift_release();
  if (v21)
  {
    [v21 endWritingTools];
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_100060BF4@<X0>(uint64_t a1@<X8>)
{
  return sub_1000611FC(a1);
}

uint64_t sub_100060C1C(uint64_t a1)
{
  uint64_t v2 = sub_1000063C0(&qword_100201B10);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(a1) = *(unsigned char *)(a1 + 24);
  uint64_t v6 = swift_retain();
  sub_100020A44(v6, a1);
  swift_release();
  sub_10011E5C0();
  swift_release();
  uint64_t v7 = swift_projectBox();
  char v8 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v8(v5, v7, v2);
  Bindable.wrappedValue.getter();
  uint64_t v9 = *(void (**)(char *, uint64_t))(v3 + 8);
  v9(v5, v2);
  uint64_t v10 = v23;
  swift_getKeyPath();
  uint64_t v23 = v10;
  uint64_t v22 = sub_100064D0C((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v11 = *(void **)(v10 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__nonInlineSupportResponse);
  id v12 = v11;
  swift_release();
  if (v11)
  {
    uint64_t v20 = v8;
    uint64_t v21 = v7;
    uint64_t v18 = v3 + 16;
    v8(v5, v7, v2);
    Bindable.wrappedValue.getter();
    uint64_t v19 = v9;
    v9(v5, v2);
    uint64_t v13 = v23;
    swift_getKeyPath();
    uint64_t v23 = v13;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    swift_release();
    if (Strong)
    {
      [Strong replaceSelectionWithText:v12];

      swift_unknownObjectRelease();
    }
    else
    {
    }
    char v8 = v20;
    uint64_t v7 = v21;
    uint64_t v9 = v19;
  }
  v8(v5, v7, v2);
  Bindable.wrappedValue.getter();
  v9(v5, v2);
  uint64_t v15 = v23;
  swift_getKeyPath();
  uint64_t v23 = v15;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v16 = (void *)swift_unknownObjectWeakLoadStrong();
  uint64_t result = swift_release();
  if (v16)
  {
    [v16 endWritingTools];
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_100060F88@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000063C0(&qword_1001FBBC0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9[48] = a1;
  v9[16] = a1;
  Label.init(title:icon:)();
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v5 + 16))(a2, v7, v4);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1000610D8@<X0>(uint64_t a1@<X8>)
{
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t result = Text.init(_:tableName:bundle:comment:)();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_100061164()
{
  return State.wrappedValue.setter();
}

uint64_t sub_1000611D0@<X0>(uint64_t a1@<X8>)
{
  return sub_1000611FC(a1);
}

uint64_t sub_1000611FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1000063C0(&qword_1001FBBC0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  LocalizedStringKey.init(stringLiteral:)();
  Label<>.init(_:systemImage:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 16))(a1, v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_10006131C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000063C0(&qword_1001FDEE8);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000063C0(&qword_1001FDEF0);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v11 = *(unsigned char *)(a1 + 8);
  uint64_t v12 = swift_retain();
  uint64_t v13 = (char *)sub_100020F7C(v12, v11);
  swift_release();
  swift_getKeyPath();
  v21[0] = v13;
  sub_100064D0C((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v14 = *(void **)&v13[OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__nonInlineSupportResponse];
  id v15 = v14;
  swift_release();
  if (v14)
  {
    sub_1000063C0(&qword_1001FDEF8);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_10018A720;
    *(void *)(v16 + 32) = UIActivityTypeCopyToPasteboard;
    v21[0] = v15;
    v21[1] = (id)v16;
    id v17 = v15;
    uint64_t v18 = UIActivityTypeCopyToPasteboard;
    sub_10005D068();
    type metadata accessor for CompositionResponseView();
    sub_1000063C0(&qword_1001FDC78);
    State.projectedValue.getter();
    sub_10006491C();
    View.presentationDetents(_:selection:)();

    swift_bridgeObjectRelease();
    sub_10002784C((uint64_t)v6, &qword_1001FDEE8);

    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(a2, v10, v7);
    uint64_t v19 = 0;
  }
  else
  {
    uint64_t v19 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(a2, v19, 1, v7);
}

uint64_t sub_1000615E8(uint64_t a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = sub_1000063C0(&qword_100201B10);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v10 = *a2;
  uint64_t v11 = swift_projectBox();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v11, v6);
  Bindable.wrappedValue.getter();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v12 = v23;
  swift_getKeyPath();
  uint64_t v23 = v12;
  sub_100064D0C((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  LOBYTE(a2) = *(unsigned char *)(v12 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__wantsInlineEditing);
  uint64_t result = swift_release();
  if ((a2 & 1) == 0)
  {
    char v14 = *(unsigned char *)(a4 + 24);
    if (v10)
    {
      uint64_t v15 = swift_retain();
      sub_100020A44(v15, v14);
      swift_release();
      sub_10011E6F4();
      swift_release();
    }
    uint64_t v16 = swift_retain();
    uint64_t v17 = sub_100020A44(v16, v14);
    swift_release();
    swift_getKeyPath();
    uint64_t v23 = v17;
    sub_100064D0C((unint64_t *)&qword_1001FAE20, (void (*)(uint64_t))type metadata accessor for CommonUIManager);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    int v18 = *(unsigned __int8 *)(v17 + 81);
    uint64_t result = swift_release();
    if (v10 != v18)
    {
      uint64_t v19 = swift_retain();
      uint64_t v20 = sub_100020A44(v19, v14);
      swift_release();
      uint64_t KeyPath = swift_getKeyPath();
      __chkstk_darwin(KeyPath);
      *(&v22 - 2) = v20;
      *((unsigned char *)&v22 - 8) = v10;
      uint64_t v23 = v20;
      ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
      swift_release();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_100061908@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v22 = a3;
  uint64_t v21 = sub_1000063C0(&qword_1001FDDD0);
  __chkstk_darwin(v21);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1000063C0(&qword_1001FDDD8);
  uint64_t v7 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ToolbarItemPlacement();
  __chkstk_darwin(v10 - 8);
  uint64_t v19 = sub_1000063C0((uint64_t *)&unk_1001FDDE0);
  uint64_t v11 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  static ToolbarItemPlacement.cancellationAction.getter();
  uint64_t v25 = a1;
  uint64_t v26 = a2;
  sub_1000063C0(&qword_1001FC6B8);
  sub_100027F2C((unint64_t *)&unk_1001FDDF0, &qword_1001FC6B8);
  ToolbarItem<>.init(placement:content:)();
  static ToolbarItemPlacement.confirmationAction.getter();
  uint64_t v23 = a1;
  uint64_t v24 = a2;
  sub_1000063C0(&qword_1001FC6D0);
  sub_10003F498();
  ToolbarItem<>.init(placement:content:)();
  char v14 = &v6[*(int *)(v21 + 48)];
  uint64_t v15 = v19;
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v6, v13, v19);
  uint64_t v16 = v14;
  uint64_t v17 = v20;
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v16, v9, v20);
  TupleToolbarContent.init(_:)();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v17);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v15);
}

uint64_t sub_100061C38(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CompositionResponseView();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4 - 8);
  LocalizedStringKey.init(stringLiteral:)();
  sub_100063EB8(a1, (uint64_t)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v7 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = swift_allocObject();
  sub_1000640D8((uint64_t)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v8 + v7);
  *(void *)(v8 + ((v6 + v7 + 7) & 0xFFFFFFFFFFFFFFF8)) = a2;
  swift_retain();
  return Button<>.init(_:action:)();
}

uint64_t sub_100061D98(uint64_t a1)
{
  uint64_t v19 = type metadata accessor for NavigationPath();
  uint64_t v2 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000063C0(&qword_100201B10);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v9 = *(unsigned char *)(a1 + 24);
  uint64_t v10 = swift_retain();
  sub_100020A44(v10, v9);
  swift_release();
  sub_10011E5C0();
  swift_release();
  uint64_t v11 = swift_projectBox();
  uint64_t v17 = *(void (**)(char *))(v6 + 16);
  uint64_t v18 = v11;
  v17(v8);
  Bindable.wrappedValue.getter();
  uint64_t v12 = *(void (**)(char *, uint64_t))(v6 + 8);
  v12(v8, v5);
  sub_10006FD80(0, 0, 0, 0);
  swift_release();
  type metadata accessor for CompositionResponseView();
  sub_1000063C0(&qword_1001FB438);
  Binding.wrappedValue.getter();
  uint64_t v13 = NavigationPath.count.getter();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v19);
  if (v13 < 1)
  {
    ((void (*)(char *, uint64_t, uint64_t))v17)(v8, v18, v5);
    Bindable.wrappedValue.getter();
    v12(v8, v5);
    uint64_t v15 = v20;
    swift_getKeyPath();
    uint64_t v20 = v15;
    sub_100064D0C((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    uint64_t result = swift_release();
    if (Strong)
    {
      [Strong endWritingTools];
      return swift_unknownObjectRelease();
    }
  }
  else
  {
    Binding.wrappedValue.getter();
    NavigationPath.removeLast(_:)(1);
    return Binding.wrappedValue.setter();
  }
  return result;
}

uint64_t sub_1000620EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v30 = a2;
  uint64_t v34 = a3;
  uint64_t v31 = sub_1000063C0(&qword_100201B10);
  uint64_t v4 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for CompositionResponseView();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7 - 8);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000063C0(&qword_1001FC6B8);
  uint64_t v32 = *(void *)(v11 - 8);
  uint64_t v33 = v11;
  __chkstk_darwin(v11);
  uint64_t v29 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  LocalizedStringKey.init(stringLiteral:)();
  sub_100063EB8(a1, (uint64_t)v10);
  unint64_t v13 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v14 = (v9 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v15 = swift_allocObject();
  sub_1000640D8((uint64_t)v10, v15 + v13);
  *(void *)(v15 + v14) = v30;
  swift_retain();
  uint64_t v16 = v29;
  Button<>.init(_:action:)();
  uint64_t v17 = swift_projectBox();
  uint64_t v18 = v31;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v17, v31);
  Bindable.wrappedValue.getter();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v18);
  uint64_t v19 = v35;
  swift_getKeyPath();
  uint64_t v35 = v19;
  sub_100064D0C((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  LODWORD(v13) = *(unsigned __int8 *)(v19 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__state);
  swift_release();
  BOOL v20 = v13 == 1;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v22 = swift_allocObject();
  *(unsigned char *)(v22 + 16) = v20;
  uint64_t v24 = v32;
  uint64_t v23 = v33;
  uint64_t v25 = v34;
  (*(void (**)(uint64_t, char *, uint64_t))(v32 + 16))(v34, v16, v33);
  uint64_t v26 = (uint64_t *)(v25 + *(int *)(sub_1000063C0(&qword_1001FC6D0) + 36));
  *uint64_t v26 = KeyPath;
  v26[1] = (uint64_t)sub_100026D50;
  void v26[2] = v22;
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v16, v23);
}

uint64_t sub_1000624CC(uint64_t a1)
{
  uint64_t v2 = sub_1000063C0(&qword_100201B10);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(a1) = *(unsigned char *)(a1 + 24);
  uint64_t v6 = swift_retain();
  sub_100020A44(v6, a1);
  swift_release();
  sub_10011E5C0();
  swift_release();
  uint64_t v7 = swift_projectBox();
  uint64_t v8 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v8(v5, v7, v2);
  Bindable.wrappedValue.getter();
  uint64_t v9 = *(void (**)(char *, uint64_t))(v3 + 8);
  v9(v5, v2);
  sub_10006FD80(0, 0, 0, 0);
  swift_release();
  v8(v5, v7, v2);
  Bindable.wrappedValue.getter();
  v9(v5, v2);
  uint64_t v10 = v14;
  swift_getKeyPath();
  uint64_t v14 = v10;
  sub_100064D0C((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  uint64_t result = swift_release();
  if (Strong)
  {
    [Strong endWritingTools];
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_100062714()
{
  id v0 = [self currentDevice];
  id v1 = [v0 userInterfaceIdiom];

  uint64_t v2 = 0x4024000000000000;
  if (v1 == (id)6) {
    uint64_t v2 = 0x401C000000000000;
  }
  qword_1001FDC60 = v2;
  byte_1001FDC68 = 0;
}

uint64_t sub_100062788@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = type metadata accessor for PresentationDetent();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v30 - v13;
  uint64_t v15 = sub_1000063C0((uint64_t *)&unk_1001FAE40);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CompositionModel(0);
  sub_100064D0C((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  *(void *)a4 = Environment.init<A>(_:)();
  *(unsigned char *)(a4 + 8) = v18 & 1;
  *(void *)(a4 + 16) = a1;
  *(unsigned char *)(a4 + 24) = a2 & 1;
  type metadata accessor for PresentationModel();
  sub_100064D0C((unint64_t *)&qword_1001FB410, (void (*)(uint64_t))type metadata accessor for PresentationModel);
  *(void *)(a4 + 32) = Environment.init<A>(_:)();
  *(unsigned char *)(a4 + 40) = v19 & 1;
  uint64_t v20 = type metadata accessor for FBKSEvaluation.Subject();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v17, 1, 1, v20);
  id v21 = objc_allocWithZone((Class)type metadata accessor for FBKEvaluationController());
  uint64_t v31 = FBKEvaluationController.init(subject:)();
  State.init(wrappedValue:)();
  uint64_t v22 = v34;
  *(void *)(a4 + 48) = v33;
  *(void *)(a4 + 56) = v22;
  uint64_t v23 = (int *)type metadata accessor for CompositionResponseView();
  sub_100026FD0(a3, a4 + v23[8], &qword_1001FB438);
  uint64_t v24 = a4 + v23[9];
  uint64_t v31 = 0;
  char v32 = 1;
  sub_1000063C0(&qword_1001FDC70);
  State.init(wrappedValue:)();
  char v25 = v34;
  uint64_t v26 = v35;
  *(void *)uint64_t v24 = v33;
  *(unsigned char *)(v24 + 8) = v25;
  *(void *)(v24 + 16) = v26;
  uint64_t v27 = a4 + v23[10];
  LOBYTE(v31) = 0;
  State.init(wrappedValue:)();
  uint64_t v28 = v34;
  *(unsigned char *)uint64_t v27 = v33;
  *(void *)(v27 + 8) = v28;
  static PresentationDetent.medium.getter();
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, v8);
  State.init(wrappedValue:)();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v14, v8);
}

uint64_t type metadata accessor for CompositionResponseView()
{
  uint64_t result = qword_1001FDCD8;
  if (!qword_1001FDCD8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100062B3C(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v34 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = v34 + ((v5 + 16) & ~(unint64_t)v5);
  }
  else
  {
    char v7 = *((unsigned char *)a2 + 8);
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = v7;
    char v8 = *((unsigned char *)a2 + 24);
    *(void *)(a1 + 16) = a2[2];
    *(unsigned char *)(a1 + 24) = v8;
    uint64_t v9 = a2[4];
    char v10 = *((unsigned char *)a2 + 40);
    swift_retain();
    swift_retain();
    j__swift_retain();
    *(void *)(v4 + 32) = v9;
    *(unsigned char *)(v4 + 40) = v10;
    uint64_t v11 = (void *)a2[6];
    uint64_t v12 = a2[7];
    *(void *)(v4 + 48) = v11;
    *(void *)(v4 + 56) = v12;
    uint64_t v13 = a3[8];
    uint64_t v14 = (void *)(v4 + v13);
    uint64_t v15 = (uint64_t)a2 + v13;
    uint64_t v16 = *(uint64_t *)((char *)a2 + v13 + 8);
    *uint64_t v14 = *(uint64_t *)((char *)a2 + v13);
    v14[1] = v16;
    id v17 = v11;
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v18 = *(int *)(sub_1000063C0(&qword_1001FB438) + 32);
    char v19 = (char *)v14 + v18;
    uint64_t v20 = v15 + v18;
    uint64_t v21 = type metadata accessor for NavigationPath();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
    uint64_t v22 = a3[9];
    uint64_t v23 = a3[10];
    uint64_t v24 = v4 + v22;
    uint64_t v25 = (uint64_t)a2 + v22;
    *(void *)uint64_t v24 = *(void *)v25;
    *(unsigned char *)(v24 + 8) = *(unsigned char *)(v25 + 8);
    *(void *)(v24 + 16) = *(void *)(v25 + 16);
    uint64_t v26 = v4 + v23;
    uint64_t v27 = (uint64_t)a2 + v23;
    *(unsigned char *)uint64_t v26 = *(unsigned char *)v27;
    *(void *)(v26 + 8) = *(void *)(v27 + 8);
    uint64_t v28 = a3[11];
    uint64_t v29 = v4 + v28;
    uint64_t v30 = (uint64_t)a2 + v28;
    uint64_t v31 = type metadata accessor for PresentationDetent();
    char v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 16);
    swift_retain();
    swift_retain();
    v32(v29, v30, v31);
    uint64_t v33 = sub_1000063C0(&qword_1001FDC78);
    *(void *)(v29 + *(int *)(v33 + 28)) = *(void *)(v30 + *(int *)(v33 + 28));
  }
  swift_retain();
  return v4;
}

uint64_t sub_100062D54(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_release();
  j__swift_release();

  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  swift_release();
  swift_release();
  uint64_t v5 = v4 + *(int *)(sub_1000063C0(&qword_1001FB438) + 32);
  uint64_t v6 = type metadata accessor for NavigationPath();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_release();
  swift_release();
  uint64_t v7 = a1 + *(int *)(a2 + 44);
  uint64_t v8 = type metadata accessor for PresentationDetent();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  sub_1000063C0(&qword_1001FDC78);

  return swift_release();
}

uint64_t sub_100062E94(uint64_t a1, uint64_t a2, int *a3)
{
  char v6 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v6;
  char v7 = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = v7;
  uint64_t v8 = *(void *)(a2 + 32);
  char v9 = *(unsigned char *)(a2 + 40);
  swift_retain();
  swift_retain();
  j__swift_retain();
  *(void *)(a1 + 32) = v8;
  *(unsigned char *)(a1 + 40) = v9;
  char v10 = *(void **)(a2 + 48);
  uint64_t v11 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  uint64_t v12 = a3[8];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = a2 + v12;
  uint64_t v15 = *(void *)(a2 + v12 + 8);
  *uint64_t v13 = *(void *)(a2 + v12);
  v13[1] = v15;
  id v16 = v10;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v17 = *(int *)(sub_1000063C0(&qword_1001FB438) + 32);
  uint64_t v18 = (char *)v13 + v17;
  uint64_t v19 = v14 + v17;
  uint64_t v20 = type metadata accessor for NavigationPath();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
  uint64_t v21 = a3[9];
  uint64_t v22 = a3[10];
  uint64_t v23 = a1 + v21;
  uint64_t v24 = a2 + v21;
  *(void *)uint64_t v23 = *(void *)v24;
  *(unsigned char *)(v23 + 8) = *(unsigned char *)(v24 + 8);
  *(void *)(v23 + 16) = *(void *)(v24 + 16);
  uint64_t v25 = a1 + v22;
  uint64_t v26 = a2 + v22;
  *(unsigned char *)uint64_t v25 = *(unsigned char *)v26;
  *(void *)(v25 + 8) = *(void *)(v26 + 8);
  uint64_t v27 = a3[11];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = type metadata accessor for PresentationDetent();
  uint64_t v31 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16);
  swift_retain();
  swift_retain();
  v31(v28, v29, v30);
  uint64_t v32 = sub_1000063C0(&qword_1001FDC78);
  *(void *)(v28 + *(int *)(v32 + 28)) = *(void *)(v29 + *(int *)(v32 + 28));
  swift_retain();
  return a1;
}

uint64_t sub_100063060(uint64_t a1, uint64_t a2, int *a3)
{
  char v6 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v6;
  swift_retain();
  swift_release();
  char v7 = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = v7;
  swift_retain();
  swift_release();
  uint64_t v8 = *(void *)(a2 + 32);
  char v9 = *(unsigned char *)(a2 + 40);
  j__swift_retain();
  *(void *)(a1 + 32) = v8;
  *(unsigned char *)(a1 + 40) = v9;
  j__swift_release();
  char v10 = *(void **)(a2 + 48);
  uint64_t v11 = *(void **)(a1 + 48);
  *(void *)(a1 + 48) = v10;
  id v12 = v10;

  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_retain();
  swift_release();
  uint64_t v13 = a3[8];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  *(void *)(a1 + v13) = *(void *)(a2 + v13);
  swift_retain();
  swift_release();
  *(void *)(v14 + 8) = *(void *)(v15 + 8);
  swift_retain();
  swift_release();
  uint64_t v16 = *(int *)(sub_1000063C0(&qword_1001FB438) + 32);
  uint64_t v17 = v14 + v16;
  uint64_t v18 = v15 + v16;
  uint64_t v19 = type metadata accessor for NavigationPath();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 24))(v17, v18, v19);
  uint64_t v20 = a3[9];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  char v23 = *(unsigned char *)(v22 + 8);
  *(void *)uint64_t v21 = *(void *)v22;
  *(unsigned char *)(v21 + 8) = v23;
  *(void *)(v21 + 16) = *(void *)(v22 + 16);
  swift_retain();
  swift_release();
  uint64_t v24 = a3[10];
  uint64_t v25 = a1 + v24;
  uint64_t v26 = a2 + v24;
  *(unsigned char *)uint64_t v25 = *(unsigned char *)v26;
  *(void *)(v25 + 8) = *(void *)(v26 + 8);
  swift_retain();
  swift_release();
  uint64_t v27 = a3[11];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = type metadata accessor for PresentationDetent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 24))(v28, v29, v30);
  uint64_t v31 = sub_1000063C0(&qword_1001FDC78);
  *(void *)(v28 + *(int *)(v31 + 28)) = *(void *)(v29 + *(int *)(v31 + 28));
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_100063290(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  uint64_t v6 = a3[8];
  char v7 = (void *)(a1 + v6);
  uint64_t v8 = a2 + v6;
  uint64_t v9 = *(void *)(a2 + v6 + 8);
  *char v7 = *(void *)(a2 + v6);
  v7[1] = v9;
  uint64_t v10 = *(int *)(sub_1000063C0(&qword_1001FB438) + 32);
  uint64_t v11 = (char *)v7 + v10;
  uint64_t v12 = v8 + v10;
  uint64_t v13 = type metadata accessor for NavigationPath();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  uint64_t v14 = a3[9];
  uint64_t v15 = a3[10];
  uint64_t v16 = a1 + v14;
  uint64_t v17 = a2 + v14;
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  long long v18 = *(_OWORD *)(a2 + v15);
  *(void *)(v16 + 16) = *(void *)(v17 + 16);
  *(_OWORD *)(a1 + v15) = v18;
  uint64_t v19 = a3[11];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = type metadata accessor for PresentationDetent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = sub_1000063C0(&qword_1001FDC78);
  *(void *)(v20 + *(int *)(v23 + 28)) = *(void *)(v21 + *(int *)(v23 + 28));
  return a1;
}

uint64_t sub_1000633F0(uint64_t a1, uint64_t a2, int *a3)
{
  char v6 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v6;
  swift_release();
  char v7 = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = v7;
  swift_release();
  char v8 = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = v8;
  j__swift_release();
  uint64_t v9 = *(void **)(a1 + 48);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);

  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_release();
  uint64_t v10 = a3[8];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  *(void *)(a1 + v10) = *(void *)(a2 + v10);
  swift_release();
  *(void *)(v11 + 8) = *(void *)(v12 + 8);
  swift_release();
  uint64_t v13 = *(int *)(sub_1000063C0(&qword_1001FB438) + 32);
  uint64_t v14 = v11 + v13;
  uint64_t v15 = v12 + v13;
  uint64_t v16 = type metadata accessor for NavigationPath();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 40))(v14, v15, v16);
  uint64_t v17 = a3[9];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  *(void *)uint64_t v18 = *(void *)v19;
  *(unsigned char *)(v18 + 8) = *(unsigned char *)(v19 + 8);
  *(void *)(v18 + 16) = *(void *)(v19 + 16);
  swift_release();
  uint64_t v20 = a3[10];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  *(unsigned char *)uint64_t v21 = *(unsigned char *)v22;
  *(void *)(v21 + 8) = *(void *)(v22 + 8);
  swift_release();
  uint64_t v23 = a3[11];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = type metadata accessor for PresentationDetent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  uint64_t v27 = sub_1000063C0(&qword_1001FDC78);
  *(void *)(v24 + *(int *)(v27 + 28)) = *(void *)(v25 + *(int *)(v27 + 28));
  swift_release();
  return a1;
}

uint64_t sub_1000635D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000635E4);
}

uint64_t sub_1000635E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 48);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1000063C0(&qword_1001FB438);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 32);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_1000063C0(&qword_1001FDC78);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 44);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_100063718(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10006372C);
}

uint64_t sub_10006372C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 48) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_1000063C0(&qword_1001FB438);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 32);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_1000063C0(&qword_1001FDC78);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 44);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_100063860()
{
  sub_1000639B4(319, (unint64_t *)&qword_100201800, (uint64_t (*)(uint64_t))&type metadata accessor for NavigationPath, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Binding);
  if (v0 <= 0x3F)
  {
    sub_1000639B4(319, (unint64_t *)&unk_1001FDCF0, (uint64_t (*)(uint64_t))&type metadata accessor for PresentationDetent, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for State);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_1000639B4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_100063A18()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100063A38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000063C0(&qword_1001FDF20);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000063C0(&qword_1001FDF28);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v11 = sub_1000898C0();
    uint64_t v12 = sub_100064D7C(v11);
    v15[0] = a2;
    uint64_t v13 = v12;
    swift_bridgeObjectRelease();
    v15[1] = v13;
    swift_getKeyPath();
    sub_1000063C0(&qword_1001FDF58);
    sub_1000063C0((uint64_t *)&unk_1001FDF40);
    sub_100027F2C(&qword_1001FDF60, &qword_1001FDF58);
    sub_100065758(&qword_1001FDF38, (uint64_t *)&unk_1001FDF40, (void (*)(void))sub_100059A48);
    ForEach<>.init(_:id:content:)();
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v10, v7, v4);
    swift_storeEnumTagMultiPayload();
    sub_1000656B8();
    _ConditionalContent<>.init(storage:)();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  else
  {
    swift_storeEnumTagMultiPayload();
    sub_1000656B8();
    return _ConditionalContent<>.init(storage:)();
  }
}

double sub_100063CF0@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for Image.ResizingMode();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for Image.ResizingMode.stretch(_:), v2);
  uint64_t v6 = Image.resizable(capInsets:resizingMode:)();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v7 = v12;
  char v8 = v13;
  uint64_t v9 = v14;
  char v10 = v15;
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = 0;
  *(_WORD *)(a1 + 16) = 1;
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(unsigned char *)(a1 + 48) = v10;
  double result = *(double *)&v16;
  *(_OWORD *)(a1 + 56) = v16;
  return result;
}

uint64_t sub_100063E60@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  *(void *)a1 = static HorizontalAlignment.center.getter();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  uint64_t v4 = sub_1000063C0(&qword_1001FDF18);
  return sub_100063A38(v3, a1 + *(int *)(v4 + 44));
}

uint64_t sub_100063EB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CompositionResponseView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100063F1C()
{
  unint64_t v1 = (int *)(type metadata accessor for CompositionResponseView() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  swift_release();
  uint64_t v6 = v0 + v3;
  swift_release();
  swift_release();
  j__swift_release();

  swift_release();
  uint64_t v7 = v0 + v3 + v1[10];
  swift_release();
  swift_release();
  uint64_t v8 = v7 + *(int *)(sub_1000063C0(&qword_1001FB438) + 32);
  uint64_t v9 = type metadata accessor for NavigationPath();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  swift_release();
  swift_release();
  uint64_t v10 = v6 + v1[13];
  uint64_t v11 = type metadata accessor for PresentationDetent();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  sub_1000063C0(&qword_1001FDC78);
  swift_release();

  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_1000640D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CompositionResponseView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10006413C(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for CompositionResponseView() - 8);
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_1000615E8(a1, a2, v6, v7);
}

uint64_t sub_1000641C0@<X0>(uint64_t a1@<X8>)
{
  return sub_100061908(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

unint64_t sub_1000641D0()
{
  unint64_t result = qword_1001FDDB0;
  if (!qword_1001FDDB0)
  {
    sub_100006C14(&qword_1001FDD68);
    sub_10006427C();
    sub_100064D0C(&qword_1001FB910, (void (*)(uint64_t))type metadata accessor for PreferredContentSizeModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FDDB0);
  }
  return result;
}

unint64_t sub_10006427C()
{
  unint64_t result = qword_1001FDDB8;
  if (!qword_1001FDDB8)
  {
    sub_100006C14(&qword_1001FDD60);
    sub_100006C14(&qword_1001FDD50);
    sub_100006C14(&qword_1001FDD48);
    sub_100006C14((uint64_t *)&unk_100201BA0);
    sub_100006C14(&qword_1001FDD40);
    sub_100027F2C((unint64_t *)&unk_1001FDD90, &qword_1001FDD40);
    swift_getOpaqueTypeConformance2();
    sub_100027F2C((unint64_t *)&unk_1001FDDA0, (uint64_t *)&unk_100201BA0);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_100064424();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FDDB8);
  }
  return result;
}

unint64_t sub_100064424()
{
  unint64_t result = qword_1001FDDC0;
  if (!qword_1001FDDC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FDDC0);
  }
  return result;
}

uint64_t sub_100064478()
{
  return sub_100061C38(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_100064480@<X0>(uint64_t a1@<X8>)
{
  return sub_1000620EC(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_10006448C()
{
  return sub_100065344((uint64_t (*)(unint64_t, uint64_t))sub_1000624CC);
}

uint64_t sub_1000644AC()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1000644C0()
{
  return sub_100065344((uint64_t (*)(unint64_t, uint64_t))sub_100061D98);
}

uint64_t sub_1000644E8@<X0>(uint64_t a1@<X8>)
{
  return sub_10005E254(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_100064500(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SmallIconTitleLabelStyle(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10006455C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100064570@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for CompositionResponseView() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_10006131C(v4, a1);
}

unint64_t sub_1000645E0()
{
  unint64_t result = qword_1001FDE88;
  if (!qword_1001FDE88)
  {
    sub_100006C14(&qword_1001FDE58);
    sub_100064680();
    sub_100027F2C(&qword_1001FC6D8, &qword_1001FD760);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FDE88);
  }
  return result;
}

unint64_t sub_100064680()
{
  unint64_t result = qword_1001FDE90;
  if (!qword_1001FDE90)
  {
    sub_100006C14(&qword_1001FDE50);
    sub_100065758(&qword_1001FDE98, &qword_1001FDE48, (void (*)(void))sub_100064728);
    sub_100025EB4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FDE90);
  }
  return result;
}

uint64_t sub_100064728()
{
  return sub_100065758(&qword_1001FDEA0, &qword_1001FDE40, (void (*)(void))sub_100064758);
}

unint64_t sub_100064758()
{
  unint64_t result = qword_1001FDEA8;
  if (!qword_1001FDEA8)
  {
    sub_100006C14(&qword_1001FDE38);
    sub_100006C14(&qword_1001FDE28);
    type metadata accessor for SmallIconTitleLabelStyle(255);
    sub_100027F2C(&qword_1001FDE78, &qword_1001FDE28);
    sub_100064D0C((unint64_t *)&unk_1001FD560, (void (*)(uint64_t))type metadata accessor for SmallIconTitleLabelStyle);
    swift_getOpaqueTypeConformance2();
    sub_100026CDC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FDEA8);
  }
  return result;
}

unint64_t sub_10006487C()
{
  unint64_t result = qword_1001FDEC0;
  if (!qword_1001FDEC0)
  {
    sub_100006C14(&qword_1001FDE80);
    sub_10006491C();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FDEC0);
  }
  return result;
}

unint64_t sub_10006491C()
{
  unint64_t result = qword_100202E00;
  if (!qword_100202E00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100202E00);
  }
  return result;
}

double sub_100064980(_OWORD *a1)
{
  double result = 0.0;
  a1[9] = 0u;
  a1[10] = 0u;
  a1[7] = 0u;
  a1[8] = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

uint64_t sub_1000649A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4)
  {
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_100064A04(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18)
{
  if (a12)
  {
    uint64_t v18 = (void *)result;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v19 = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1000272F8(a15, a16, a17, a18);
    swift_retain();
    return swift_retain();
  }
  return result;
}

void *sub_100064B1C(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20],
    a1[21]);
  return a1;
}

uint64_t sub_100064B88(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18)
{
  uint64_t result = a12;
  if (a12)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100024DB4(a15, a16, a17, a18);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_100064CA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_100064D0C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100064D7C(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  uint64_t v2 = _swiftEmptyArrayStorage;
  if (v1)
  {
    uint64_t v3 = result;
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v4 = 0;
    uint64_t v5 = 0;
    uint64_t v6 = &_swiftEmptyArrayStorage[4];
    while (1)
    {
      uint64_t v7 = *(void *)(v3 + 8 * v5 + 32);
      if (v4)
      {
        uint64_t result = swift_retain();
        BOOL v8 = __OFSUB__(v4--, 1);
        if (v8) {
          goto LABEL_30;
        }
      }
      else
      {
        unint64_t v9 = v2[3];
        if ((uint64_t)((v9 >> 1) + 0x4000000000000000) < 0) {
          goto LABEL_31;
        }
        int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
        if (v10 <= 1) {
          uint64_t v11 = 1;
        }
        else {
          uint64_t v11 = v10;
        }
        sub_1000063C0(&qword_1001FDF68);
        uint64_t v12 = (void *)swift_allocObject();
        int64_t v13 = j__malloc_size(v12);
        uint64_t v14 = v13 - 32;
        if (v13 < 32) {
          uint64_t v14 = v13 - 17;
        }
        uint64_t v15 = v14 >> 4;
        void v12[2] = v11;
        uint64_t v12[3] = 2 * (v14 >> 4);
        long long v16 = v12 + 4;
        uint64_t v17 = v2[3] >> 1;
        uint64_t v6 = &v12[2 * v17 + 4];
        uint64_t v18 = (v15 & 0x7FFFFFFFFFFFFFFFLL) - v17;
        if (v2[2])
        {
          if (v12 != v2 || v16 >= &v2[2 * v17 + 4]) {
            memmove(v16, v2 + 4, 16 * v17);
          }
          swift_retain();
          v2[2] = 0;
        }
        else
        {
          swift_retain();
        }
        uint64_t result = swift_release();
        uint64_t v2 = v12;
        BOOL v8 = __OFSUB__(v18, 1);
        uint64_t v4 = v18 - 1;
        if (v8)
        {
LABEL_30:
          __break(1u);
LABEL_31:
          __break(1u);
LABEL_32:
          __break(1u);
          return result;
        }
      }
      void *v6 = v5;
      v6[1] = v7;
      v6 += 2;
      if (v1 == ++v5)
      {
        uint64_t result = swift_bridgeObjectRelease();
        goto LABEL_26;
      }
    }
  }
  uint64_t v4 = 0;
LABEL_26:
  unint64_t v20 = v2[3];
  if (v20 >= 2)
  {
    unint64_t v21 = v20 >> 1;
    BOOL v8 = __OFSUB__(v21, v4);
    uint64_t v22 = v21 - v4;
    if (v8) {
      goto LABEL_32;
    }
    v2[2] = v22;
  }
  return (uint64_t)v2;
}

uint64_t sub_100064F18()
{
  return sub_100065344((uint64_t (*)(unint64_t, uint64_t))sub_100060888);
}

uint64_t sub_100064F3C()
{
  uint64_t v1 = (int *)(type metadata accessor for CompositionResponseView() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;
  swift_release();
  swift_release();
  j__swift_release();

  swift_release();
  uint64_t v7 = v6 + v1[10];
  swift_release();
  swift_release();
  uint64_t v8 = v7 + *(int *)(sub_1000063C0(&qword_1001FB438) + 32);
  uint64_t v9 = type metadata accessor for NavigationPath();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  swift_release();
  swift_release();
  uint64_t v10 = v6 + v1[13];
  uint64_t v11 = type metadata accessor for PresentationDetent();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  sub_1000063C0(&qword_1001FDC78);
  swift_release();

  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_1000650F0()
{
  type metadata accessor for CompositionResponseView();

  return sub_100061164();
}

uint64_t sub_10006515C()
{
  uint64_t v1 = (int *)(type metadata accessor for CompositionResponseView() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = ((*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v6 = v0 + v3;
  swift_release();
  swift_release();
  j__swift_release();

  swift_release();
  uint64_t v7 = v6 + v1[10];
  swift_release();
  swift_release();
  uint64_t v8 = v7 + *(int *)(sub_1000063C0(&qword_1001FB438) + 32);
  uint64_t v9 = type metadata accessor for NavigationPath();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  swift_release();
  swift_release();
  uint64_t v10 = v6 + v1[13];
  uint64_t v11 = type metadata accessor for PresentationDetent();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  sub_1000063C0(&qword_1001FDC78);
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, v5, v4);
}

uint64_t sub_10006532C()
{
  return sub_100065344((uint64_t (*)(unint64_t, uint64_t))sub_100060C1C);
}

uint64_t sub_100065344(uint64_t (*a1)(unint64_t, uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for CompositionResponseView() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v1 + ((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8));

  return a1(v1 + v3, v4);
}

uint64_t sub_1000653E4@<X0>(uint64_t a1@<X8>)
{
  return sub_100060F88(*(unsigned char *)(v1 + 16), a1);
}

uint64_t sub_1000653EC@<X0>(uint64_t a1@<X8>)
{
  return sub_1000610D8(a1);
}

uint64_t sub_1000653F4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = Image.init(_internalSystemName:)();
  *a1 = result;
  return result;
}

void **initializeBufferWithCopyOfBuffer for CompositionResponseImageView(void **a1, void **a2)
{
  unint64_t v3 = *a2;
  *a1 = *a2;
  id v4 = v3;
  return a1;
}

void destroy for CompositionResponseImageView(id *a1)
{
}

void **assignWithCopy for CompositionResponseImageView(void **a1, void **a2)
{
  unint64_t v3 = *a1;
  id v4 = *a2;
  *a1 = *a2;
  id v5 = v4;

  return a1;
}

void *initializeWithTake for CompositionResponseImageView(void *result, void *a2)
{
  *uint64_t result = *a2;
  return result;
}

void **assignWithTake for CompositionResponseImageView(void **a1, void **a2)
{
  unint64_t v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for CompositionResponseImageView(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CompositionResponseImageView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CompositionResponseImageView()
{
  return &type metadata for CompositionResponseImageView;
}

uint64_t sub_1000655D0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10006569C()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1000656B8()
{
  unint64_t result = qword_1001FDF30;
  if (!qword_1001FDF30)
  {
    sub_100006C14(&qword_1001FDF20);
    sub_100065758(&qword_1001FDF38, (uint64_t *)&unk_1001FDF40, (void (*)(void))sub_100059A48);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FDF30);
  }
  return result;
}

uint64_t sub_100065758(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100006C14(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000657D4()
{
  return sub_100027F2C(&qword_1001FDF70, &qword_1001FDF78);
}

uint64_t sub_100065814()
{
  sub_1000295B4();
  uint64_t result = OS_os_log.init(subsystem:category:)();
  qword_1001FDF80 = result;
  return result;
}

uint64_t sub_100065880(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = a1;
  uint64_t v3 = type metadata accessor for OSSignpostID();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1001FAC50 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  sub_10000EBE8(v7, (uint64_t)qword_1002127E8);
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.debug.getter();
  BOOL v10 = os_log_type_enabled(v8, v9);
  uint64_t v18 = a2;
  if (v10)
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v17 = v3;
    uint64_t v12 = (uint8_t *)v11;
    uint64_t v21 = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136315138;
    uint64_t v13 = StaticString.description.getter();
    uint64_t v20 = sub_100021444(v13, v14, &v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Begin signpost for %s", v12, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v3 = v17;
    swift_slowDealloc();
  }

  static os_signpost_type_t.begin.getter();
  if (qword_1001FACA0 != -1) {
    swift_once();
  }
  static OSSignpostID.exclusive.getter();
  os_signpost(_:dso:log:name:signpostID:)();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

const char *sub_100065B24(const char *result, uint64_t a2, uint64_t a3, char a4)
{
  char v4 = (char)result;
  if (!a4)
  {
    uint64_t result = "ProofreadGeneration";
    uint64_t v5 = 19;
    switch(v4)
    {
      case 1:
        return (const char *)sub_100065880((uint64_t)result, v5);
      case 2:
      case 3:
      case 4:
        uint64_t result = "ToneAdjustGeneration";
        uint64_t v5 = 20;
        return (const char *)sub_100065880((uint64_t)result, v5);
      case 5:
        return result;
      case 6:
        uint64_t result = "SummaryGeneration";
        goto LABEL_15;
      case 7:
      case 8:
      case 9:
        uint64_t result = "TransformGeneration";
        goto LABEL_12;
      default:
        uint64_t result = "RewriteGeneration";
LABEL_15:
        uint64_t v5 = 17;
        break;
    }
    return (const char *)sub_100065880((uint64_t)result, v5);
  }
  if (a4 != 1 && a3 | a2 | (unint64_t)result && result == (const char *)1 && !(a3 | a2))
  {
    uint64_t result = "ProofreadGeneration";
LABEL_12:
    uint64_t v5 = 19;
    return (const char *)sub_100065880((uint64_t)result, v5);
  }
  return result;
}

uint64_t sub_100065C00(uint64_t a1, uint64_t a2, int a3, uint64_t a4, unint64_t a5)
{
  uint64_t v25 = a4;
  uint64_t v28 = a1;
  uint64_t v8 = type metadata accessor for OSSignpostID();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin();
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1001FAC50 != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Logger();
  sub_10000EBE8(v12, (uint64_t)qword_1002127E8);
  swift_bridgeObjectRetain_n();
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.debug.getter();
  BOOL v15 = os_log_type_enabled(v13, v14);
  int v27 = a3;
  uint64_t v26 = a2;
  if (v15)
  {
    uint64_t v16 = swift_slowAlloc();
    uint64_t v24 = v11;
    uint64_t v17 = v16;
    uint64_t v30 = swift_slowAlloc();
    *(_DWORD *)uint64_t v17 = 136315394;
    uint64_t v18 = StaticString.description.getter();
    uint64_t v29 = sub_100021444(v18, v19, &v30);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v20 = v25;
    uint64_t v29 = sub_100021444(v25, a5, &v30);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "End signpost for %s, uint64_t result = %s", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v11 = v24;
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    uint64_t v20 = v25;
  }
  static os_signpost_type_t.end.getter();
  if (qword_1001FACA0 != -1) {
    swift_once();
  }
  sub_1000063C0(&qword_1001FBD00);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_10018A720;
  *(void *)(v21 + 56) = &type metadata for String;
  *(void *)(v21 + 64) = sub_100029560();
  *(void *)(v21 + 32) = v20;
  *(void *)(v21 + 40) = a5;
  swift_bridgeObjectRetain();
  static OSSignpostID.exclusive.getter();
  os_signpost(_:dso:log:name:signpostID:_:_:)();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_100065F98(uint64_t result, uint64_t a2, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  char v6 = result;
  if (a4)
  {
    if (a4 != 1 && a3 | a2 | result && result == 1 && !(a3 | a2))
    {
      uint64_t result = (uint64_t)"ProofreadGeneration";
LABEL_11:
      uint64_t v7 = 19;
      return sub_100065C00(result, v7, 2, a5, a6);
    }
  }
  else
  {
    uint64_t result = (uint64_t)"ProofreadGeneration";
    uint64_t v7 = 19;
    switch(v6)
    {
      case 1:
        return sub_100065C00(result, v7, 2, a5, a6);
      case 2:
      case 3:
      case 4:
        uint64_t result = (uint64_t)"ToneAdjustGeneration";
        uint64_t v7 = 20;
        return sub_100065C00(result, v7, 2, a5, a6);
      case 5:
        return result;
      case 6:
        uint64_t result = (uint64_t)"SummaryGeneration";
        uint64_t v7 = 17;
        return sub_100065C00(result, v7, 2, a5, a6);
      case 7:
      case 8:
      case 9:
        uint64_t result = (uint64_t)"TransformGeneration";
        goto LABEL_11;
      default:
        uint64_t result = (uint64_t)"RewriteGeneration";
        uint64_t v7 = 17;
        return sub_100065C00(result, v7, 2, a5, a6);
    }
  }
  return result;
}

UIImage *sub_100066078(uint64_t a1, char a2, uint64_t a3, char a4)
{
  swift_getObjectType();
  [v38 size];
  double v9 = v8;
  double v11 = v10;
  [v38 scale];
  uint64_t v13 = 2048;
  if ((a2 & 1) == 0) {
    uint64_t v13 = a1;
  }
  uint64_t v14 = 768;
  if ((a4 & 1) == 0) {
    uint64_t v14 = a3;
  }
  if (v11 > v9) {
    uint64_t v15 = v13;
  }
  else {
    uint64_t v15 = v14;
  }
  if (v11 > v9) {
    uint64_t v13 = v14;
  }
  double v16 = floor((double)v13 / v12);
  double v17 = floor((double)v15 / v12);
  [v38 size];
  if (v18 <= v16 && ([v38 size], v19 <= v17))
  {
    return (UIImage *)v38;
  }
  else
  {
    [v38 size];
    double v21 = v20 / v16;
    BOOL v23 = v22 / v17 < v20 / v16;
    double v24 = v20 / (v22 / v17);
    double v25 = v22 / v21;
    if (v23) {
      double v17 = v25;
    }
    if (!v23) {
      double v16 = v24;
    }
    [v38 scale];
    CGFloat v27 = v26;
    v41.width = v16;
    v41.height = v17;
    UIGraphicsBeginImageContextWithOptions(v41, 0, v27);
    [v38 drawInRect:0.0, 0.0, v16, v17];
    uint64_t v28 = UIGraphicsGetImageFromCurrentImageContext();
    if (v28)
    {
      uint64_t v29 = v28;
      UIGraphicsEndImageContext();
      return v29;
    }
    else
    {
      if (qword_1001FAC30 != -1) {
        swift_once();
      }
      uint64_t v31 = type metadata accessor for Logger();
      sub_10000EBE8(v31, (uint64_t)qword_100212788);
      uint64_t v32 = Logger.logObject.getter();
      os_log_type_t v33 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v32, v33))
      {
        uint64_t v34 = swift_slowAlloc();
        uint64_t v39 = swift_slowAlloc();
        *(_DWORD *)uint64_t v34 = 136315394;
        uint64_t v35 = _typeName(_:qualified:)();
        sub_100021444(v35, v36, &v39);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v34 + 12) = 2080;
        sub_100021444(0xD00000000000002BLL, 0x800000010019D4F0, &v39);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v32, v33, "%s.%s Image resizing failed.", (uint8_t *)v34, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }

      id v37 = v38;
      UIGraphicsEndImageContext();
      return (UIImage *)v37;
    }
  }
}

uint64_t sub_1000663BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a1 + 24))
  {
    sub_1000085E4((long long *)a1, (uint64_t)v9);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v8 = *v3;
    uint64_t *v3 = 0x8000000000000000;
    sub_10016F1D8(v9, a2, a3, isUniquelyReferenced_nonNull_native);
    uint64_t *v3 = v8;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_10002784C(a1, &qword_1001FED98);
    sub_10016C294(a2, a3, (uint64_t)v9);
    swift_bridgeObjectRelease();
    return sub_10002784C((uint64_t)v9, &qword_1001FED98);
  }
}

uint64_t sub_100066494(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x64657463656C6553;
  }
  else {
    uint64_t v3 = 0x74786554206C6C41;
  }
  if (v2) {
    unint64_t v4 = 0xE800000000000000;
  }
  else {
    unint64_t v4 = 0xED00007478655420;
  }
  if (a2) {
    uint64_t v5 = 0x64657463656C6553;
  }
  else {
    uint64_t v5 = 0x74786554206C6C41;
  }
  if (a2) {
    unint64_t v6 = 0xED00007478655420;
  }
  else {
    unint64_t v6 = 0xE800000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_100066548(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xE900000000000074;
  uint64_t v3 = 0x78655474726F6873;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v5 = 0x74786554676E6F6CLL;
    }
    else {
      uint64_t v5 = 0x6F746F6870;
    }
    if (v4 == 1) {
      unint64_t v6 = 0xE800000000000000;
    }
    else {
      unint64_t v6 = 0xE500000000000000;
    }
    int v7 = a2;
    if (!a2) {
      goto LABEL_15;
    }
    goto LABEL_9;
  }
  uint64_t v5 = 0x78655474726F6873;
  unint64_t v6 = 0xE900000000000074;
  int v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1) {
      uint64_t v3 = 0x74786554676E6F6CLL;
    }
    else {
      uint64_t v3 = 0x6F746F6870;
    }
    if (v7 == 1) {
      unint64_t v2 = 0xE800000000000000;
    }
    else {
      unint64_t v2 = 0xE500000000000000;
    }
  }
LABEL_15:
  if (v5 == v3 && v6 == v2) {
    char v8 = 1;
  }
  else {
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

void *sub_10006665C(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_100129228(0, v1, 0);
    uint64_t v3 = (unint64_t *)(a1 + 48);
    do
    {
      uint64_t v4 = *(v3 - 1);
      unint64_t v5 = *v3;
      sub_100044630(v4, *v3);
      unint64_t v7 = _swiftEmptyArrayStorage[2];
      unint64_t v6 = _swiftEmptyArrayStorage[3];
      if (v7 >= v6 >> 1) {
        sub_100129228(v6 > 1, v7 + 1, 1);
      }
      v3 += 3;
      _swiftEmptyArrayStorage[2] = v7 + 1;
      char v8 = &_swiftEmptyArrayStorage[2 * v7];
      v8[4] = v4;
      v8[5] = v5;
      --v1;
    }
    while (v1);
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_100066738@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1000688D0(a1, &OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__slots, a2);
}

uint64_t sub_10006674C()
{
  return swift_release();
}

BOOL sub_10006682C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

Swift::Int sub_100066840()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_100066888()
{
  Hasher._combine(_:)(*v0);
}

Swift::Int sub_1000668B4()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

uint64_t sub_1000668F8()
{
  swift_getKeyPath();
  sub_10008868C((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__state);
}

uint64_t sub_1000669A0(uint64_t result, char a2)
{
  *(unsigned char *)(result + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__state) = a2;
  return result;
}

uint64_t sub_1000669B0(char *a1, char *a2)
{
  return sub_100066494(*a1, *a2);
}

Swift::Int sub_1000669BC()
{
  return Hasher._finalize()();
}

uint64_t sub_100066A4C()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100066AC8()
{
  return Hasher._finalize()();
}

uint64_t sub_100066B54@<X0>(Swift::String *a1@<X0>, char *a2@<X8>)
{
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1001EA360, *a1);
  uint64_t result = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *a2 = v5;
  return result;
}

void sub_100066BB4(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x74786554206C6C41;
  if (*v1) {
    uint64_t v2 = 0x64657463656C6553;
  }
  unint64_t v3 = 0xE800000000000000;
  if (*v1) {
    unint64_t v3 = 0xED00007478655420;
  }
  *a1 = v2;
  a1[1] = v3;
}

void sub_100066C00(void *a1@<X8>)
{
  *a1 = &off_1001EA3B0;
}

void sub_100066C10(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_100066C1C()
{
  swift_getKeyPath();
  sub_10008868C((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__inclusionPolicy);
}

uint64_t sub_100066CC4@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_10006A11C(a1, &OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__inclusionPolicy, a2);
}

uint64_t sub_100066CD8()
{
  return swift_release();
}

uint64_t sub_100066DA8(uint64_t result, char a2)
{
  *(unsigned char *)(result + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__inclusionPolicy) = a2 & 1;
  return result;
}

uint64_t sub_100066DBC()
{
  return swift_unknownObjectWeakLoadStrong();
}

uint64_t sub_100066E68()
{
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_100066E8C()
{
  swift_getKeyPath();
  sub_10008868C((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__isForEditableContent) != 1) {
    return 0;
  }
  swift_getKeyPath();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__wantsInlineEditing) != 1) {
    return 0;
  }
  swift_getKeyPath();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return swift_unknownObjectWeakLoadStrong();
}

uint64_t sub_100066FC4()
{
  uint64_t v0 = type metadata accessor for UTType();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = v1;
  __chkstk_darwin(v0);
  uint64_t v3 = sub_1000063C0(&qword_1001FC4F0);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v85 = (char *)&v82 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v83 = (char *)&v82 - v7;
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v84 = (char *)&v82 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v86 = (char *)&v82 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v87 = (char *)&v82 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v88 = (char *)&v82 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v89 = (char *)&v82 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v96 = (char *)&v82 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v90 = (char *)&v82 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  BOOL v91 = (char *)&v82 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v92 = (char *)&v82 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v93 = (char *)&v82 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v95 = (char *)&v82 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v94 = (char *)&v82 - v31;
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v99 = (char *)&v82 - v33;
  uint64_t v34 = __chkstk_darwin(v32);
  uint64_t v97 = (char *)&v82 - v35;
  uint64_t v36 = __chkstk_darwin(v34);
  char v98 = (char *)&v82 - v37;
  uint64_t v38 = __chkstk_darwin(v36);
  uint64_t v100 = (char *)&v82 - v39;
  uint64_t v40 = __chkstk_darwin(v38);
  unint64_t v101 = (char *)&v82 - v41;
  uint64_t v42 = __chkstk_darwin(v40);
  uint64_t v103 = (char *)&v82 - v43;
  uint64_t v44 = __chkstk_darwin(v42);
  uint64_t v102 = (char *)&v82 - v45;
  uint64_t v46 = __chkstk_darwin(v44);
  uint64_t v48 = (char *)&v82 - v47;
  uint64_t v49 = __chkstk_darwin(v46);
  uint64_t v51 = (char *)&v82 - v50;
  __chkstk_darwin(v49);
  uint64_t v53 = (char *)&v82 - v52;
  sub_1000063C0(&qword_1001FEF20);
  uint64_t v54 = *(void *)(v1 + 72);
  unint64_t v55 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v56 = swift_allocObject();
  *(_OWORD *)(v56 + 16) = xmmword_10018CBD0;
  static UTType.data.getter();
  UTType.init(mimeType:conformingTo:)();
  uint64_t v104 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v2 + 48);
  uint64_t result = v104(v53, 1, v0);
  if (result == 1)
  {
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v82 = v56;
  unint64_t v58 = v56 + v55;
  uint64_t v59 = *(void (**)(unint64_t, char *, uint64_t))(v2 + 32);
  v59(v58, v53, v0);
  static UTType.data.getter();
  UTType.init(mimeType:conformingTo:)();
  uint64_t result = v104(v51, 1, v0);
  if (result == 1)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v59(v58 + v54, v51, v0);
  static UTType.data.getter();
  UTType.init(mimeType:conformingTo:)();
  uint64_t result = v104(v48, 1, v0);
  if (result == 1)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v59(v58 + 2 * v54, v48, v0);
  static UTType.data.getter();
  char v60 = v102;
  UTType.init(mimeType:conformingTo:)();
  uint64_t result = v104(v60, 1, v0);
  uint64_t v61 = v103;
  if (result == 1)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v59(v58 + 3 * v54, v60, v0);
  static UTType.data.getter();
  UTType.init(mimeType:conformingTo:)();
  uint64_t result = v104(v61, 1, v0);
  if (result == 1)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v59(v58 + 4 * v54, v61, v0);
  static UTType.data.getter();
  unint64_t v62 = v101;
  UTType.init(mimeType:conformingTo:)();
  uint64_t result = v104(v62, 1, v0);
  if (result == 1)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v59(v58 + 5 * v54, v62, v0);
  static UTType.data.getter();
  uint64_t v63 = v100;
  UTType.init(mimeType:conformingTo:)();
  uint64_t result = v104(v63, 1, v0);
  if (result == 1)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v59(v58 + 6 * v54, v63, v0);
  static UTType.data.getter();
  uint64_t v64 = v98;
  UTType.init(mimeType:conformingTo:)();
  uint64_t result = v104(v64, 1, v0);
  uint64_t v65 = v99;
  if (result == 1)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  v59(v58 + 7 * v54, v64, v0);
  static UTType.pdf.getter();
  static UTType.tarArchive.getter();
  static UTType.xml.getter();
  static UTType.zip.getter();
  static UTType.gif.getter();
  static UTType.jpeg.getter();
  static UTType.png.getter();
  static UTType.data.getter();
  uint64_t v66 = v97;
  UTType.init(mimeType:conformingTo:)();
  uint64_t result = v104(v66, 1, v0);
  if (result == 1)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  v59(v58 - v54 + 16 * v54, v66, v0);
  static UTType.data.getter();
  UTType.init(mimeType:conformingTo:)();
  uint64_t result = v104(v65, 1, v0);
  uint64_t v68 = v95;
  uint64_t v67 = v96;
  if (result == 1)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v59(v58 + 16 * v54, v65, v0);
  static UTType.data.getter();
  uint64_t v69 = v94;
  UTType.init(mimeType:conformingTo:)();
  uint64_t result = v104(v69, 1, v0);
  if (result == 1)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v59(v58 + 17 * v54, v69, v0);
  static UTType.data.getter();
  UTType.init(mimeType:conformingTo:)();
  uint64_t result = v104(v68, 1, v0);
  if (result == 1)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v59(v58 + 18 * v54, v68, v0);
  static UTType.data.getter();
  uint64_t v70 = v93;
  UTType.init(mimeType:conformingTo:)();
  uint64_t result = v104(v70, 1, v0);
  if (result == 1)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  v59(v58 + 19 * v54, v70, v0);
  static UTType.data.getter();
  uint64_t v71 = v92;
  UTType.init(mimeType:conformingTo:)();
  uint64_t result = v104(v71, 1, v0);
  if (result == 1)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  v59(v58 + 20 * v54, v71, v0);
  static UTType.data.getter();
  uint64_t v72 = v91;
  UTType.init(mimeType:conformingTo:)();
  uint64_t result = v104(v72, 1, v0);
  if (result == 1)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v59(v58 + 21 * v54, v72, v0);
  static UTType.data.getter();
  uint64_t v73 = v90;
  UTType.init(mimeType:conformingTo:)();
  uint64_t result = v104(v73, 1, v0);
  if (result == 1)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  v59(v58 + 22 * v54, v73, v0);
  static UTType.data.getter();
  UTType.init(mimeType:conformingTo:)();
  uint64_t result = v104(v67, 1, v0);
  if (result == 1)
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  v59(v58 + 23 * v54, v67, v0);
  static UTType.data.getter();
  uint64_t v74 = v89;
  UTType.init(mimeType:conformingTo:)();
  uint64_t result = v104(v74, 1, v0);
  if (result == 1)
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  v59(v58 + 24 * v54, v74, v0);
  static UTType.data.getter();
  uint64_t v75 = v88;
  UTType.init(mimeType:conformingTo:)();
  uint64_t result = v104(v75, 1, v0);
  if (result == 1)
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  v59(v58 + 25 * v54, v75, v0);
  static UTType.data.getter();
  uint64_t v76 = v87;
  UTType.init(mimeType:conformingTo:)();
  uint64_t result = v104(v76, 1, v0);
  if (result == 1)
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  v59(v58 + 26 * v54, v76, v0);
  static UTType.data.getter();
  uint64_t v77 = v86;
  UTType.init(mimeType:conformingTo:)();
  uint64_t result = v104(v77, 1, v0);
  if (result == 1)
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  v59(v58 + 27 * v54, v77, v0);
  static UTType.data.getter();
  uint64_t v78 = v84;
  UTType.init(mimeType:conformingTo:)();
  uint64_t result = v104(v78, 1, v0);
  uint64_t v79 = v85;
  if (result == 1)
  {
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  v59(v58 + 28 * v54, v78, v0);
  static UTType.data.getter();
  uint64_t v80 = v83;
  UTType.init(mimeType:conformingTo:)();
  uint64_t result = v104(v80, 1, v0);
  if (result == 1)
  {
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  v59(v58 + 29 * v54, v80, v0);
  static UTType.data.getter();
  UTType.init(mimeType:conformingTo:)();
  uint64_t result = v104(v79, 1, v0);
  uint64_t v81 = v82;
  if (result != 1)
  {
    v59(v58 + 30 * v54, v79, v0);
    static UTType.commaSeparatedText.getter();
    static UTType.css.getter();
    static UTType.html.getter();
    static UTType.javaScript.getter();
    uint64_t result = static UTType.plainText.getter();
    qword_100212840 = v81;
    return result;
  }
LABEL_49:
  __break(1u);
  return result;
}

uint64_t sub_100068010()
{
  swift_getKeyPath();
  sub_10008868C((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__notice);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1000680CC@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_10008868C((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v4 = *(void *)(v3 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__notice + 8);
  *a2 = *(void *)(v3 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__notice);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_100068184()
{
  return swift_release();
}

void *sub_100068268()
{
  return sub_100069DF8((uint64_t)&unk_10018D228, &OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__resultAttributedString);
}

id sub_10006827C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_100069EB4(a1, &OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__resultAttributedString, a2);
}

uint64_t sub_100068290(void **a1)
{
  uint64_t v1 = *a1;
  swift_getKeyPath();
  sub_10008868C((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  id v2 = v1;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();

  return swift_release();
}

uint64_t sub_10006836C()
{
  swift_getKeyPath();
  sub_10008868C((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(void *)(v0 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__resultAttributedStringRange);
}

__n128 sub_10006841C@<Q0>(uint64_t *a1@<X0>, __n128 *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_10008868C((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  unsigned __int8 v4 = *(unsigned char *)(v3 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__resultAttributedStringRange + 16);
  __n128 result = *(__n128 *)(v3 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__resultAttributedStringRange);
  *a2 = result;
  a2[1].n128_u8[0] = v4;
  return result;
}

uint64_t sub_1000684D8()
{
  return swift_release();
}

uint64_t sub_1000685B8()
{
  return sub_1000692B0();
}

uint64_t sub_1000685CC()
{
  return swift_release();
}

uint64_t sub_1000686AC()
{
  return sub_1000692B0();
}

uint64_t sub_1000686C0()
{
  return swift_release();
}

uint64_t sub_1000687A0()
{
  return sub_1000692B0();
}

uint64_t sub_1000687B4@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1000688D0(a1, &OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__attachments, a2);
}

uint64_t sub_1000687C8()
{
  return swift_release();
}

uint64_t sub_1000688A8()
{
  return sub_1000692B0();
}

uint64_t sub_1000688BC@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1000688D0(a1, &OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__generatedImages, a2);
}

uint64_t sub_1000688D0@<X0>(uint64_t *a1@<X0>, void *a2@<X4>, void *a3@<X8>)
{
  uint64_t v5 = *a1;
  swift_getKeyPath();
  sub_10008868C((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v6 = (void *)(v5 + *a2);
  swift_beginAccess();
  *a3 = *v6;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1000689A0()
{
  return swift_release();
}

uint64_t sub_100068A80()
{
  swift_getKeyPath();
  sub_10008868C((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__modelInfoString);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_100068B3C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_10008868C((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v4 = *(void *)(v3 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__modelInfoString + 8);
  *a2 = *(void *)(v3 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__modelInfoString);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_100068BF4()
{
  return swift_release();
}

uint64_t sub_100068CD8()
{
  return sub_100068D44((uint64_t)&unk_10018CF08, &OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__inputStringsForFeedback);
}

int64_t sub_100068CEC(int64_t result, uint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v2 = *(void *)(a2 + 16);
    if ((uint64_t)v2 >= result) {
      unint64_t v3 = result;
    }
    else {
      unint64_t v3 = *(void *)(a2 + 16);
    }
    if (!result) {
      unint64_t v3 = 0;
    }
    if (v2 >= v3) {
      return a2;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100068D30()
{
  return sub_100068D44((uint64_t)&unk_10018D2C8, &OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__promptStringsForFeedback);
}

uint64_t sub_100068D44(uint64_t a1, void *a2)
{
  swift_getKeyPath();
  sub_10008868C((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v4 = (uint64_t *)(v2 + *a2);
  swift_beginAccess();
  uint64_t v5 = *v4;
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  int64_t v6 = sub_100068CEC(*(void *)(v2 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__activeGeneratedResponseIndex), v5);
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  unint64_t v12 = v11;
  if ((v11 & 1) == 0) {
    goto LABEL_2;
  }
  type metadata accessor for __ContiguousArrayStorageBase();
  swift_unknownObjectRetain_n();
  uint64_t v13 = (void *)swift_dynamicCastClass();
  if (!v13)
  {
    swift_unknownObjectRelease();
    uint64_t v13 = _swiftEmptyArrayStorage;
  }
  uint64_t v14 = v13[2];
  swift_release();
  if (__OFSUB__(v12 >> 1, v10))
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v14 != (v12 >> 1) - v10)
  {
LABEL_11:
    swift_unknownObjectRelease();
LABEL_2:
    sub_10017139C(v6, v8, v10, v12);
    goto LABEL_9;
  }
  if (!swift_dynamicCastClass()) {
    swift_unknownObjectRelease();
  }
LABEL_9:
  swift_unknownObjectRelease();
  sub_1000063C0(&qword_1001FBE30);
  sub_100027F2C(&qword_1001FEDF0, &qword_1001FBE30);
  uint64_t v15 = BidirectionalCollection<>.joined(separator:)();
  swift_release();
  return v15;
}

uint64_t sub_100068F74()
{
  return sub_100069598();
}

uint64_t sub_100068F88(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__analyticsInstance) = a2;
  swift_retain();
  return swift_release();
}

uint64_t sub_100068FCC()
{
  return sub_10006D740((uint64_t)&unk_10018D1D8, &OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__allowedResultOptions);
}

uint64_t sub_100068FE0(uint64_t result, uint64_t a2)
{
  *(void *)(result + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__allowedResultOptions) = a2;
  return result;
}

uint64_t sub_100068FF0()
{
  return sub_100069598();
}

uint64_t sub_100069004(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__attachmentManager) = a2;
  swift_retain();
  return swift_release();
}

uint64_t sub_100069048()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1000690F4@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_10008868C((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  *a2 = *(void *)(v3 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__refinements);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1000691A8()
{
  return swift_release();
}

uint64_t sub_100069288()
{
  return sub_1000692B0();
}

uint64_t sub_10006929C()
{
  return sub_1000692B0();
}

uint64_t sub_1000692B0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_10006936C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_10008868C((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v4 = (void *)(v3 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__requestedInfoResponse);
  swift_beginAccess();
  *a2 = *v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_100069438()
{
  return swift_release();
}

uint64_t sub_100069518(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = (void *)(a1 + *a3);
  swift_beginAccess();
  *uint64_t v4 = a2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100069584()
{
  return sub_100069598();
}

uint64_t sub_100069598()
{
  return swift_retain();
}

uint64_t sub_10006963C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_10008868C((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  *a2 = *(void *)(v3 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__slotParser);
  return swift_retain();
}

uint64_t sub_1000696F0()
{
  return swift_release();
}

uint64_t sub_1000697D0@<X0>(uint64_t a1@<X8>)
{
  return sub_10006D9DC(&OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__currentSearchToolQueryID, (uint64_t *)&unk_1001FB400, a1);
}

uint64_t sub_1000697EC(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = sub_1000063C0((uint64_t *)&unk_1001FB400);
  __chkstk_darwin(v4 - 8);
  int64_t v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100008DD4(a1, (uint64_t)v6, (uint64_t *)&unk_1001FB400);
  uint64_t v7 = *a2;
  swift_getKeyPath();
  uint64_t v10 = v7;
  unint64_t v11 = v6;
  uint64_t v12 = v7;
  sub_10008868C((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  return sub_10002784C((uint64_t)v6, (uint64_t *)&unk_1001FB400);
}

uint64_t sub_10006992C@<X0>(uint64_t a1@<X8>)
{
  return sub_10006D9DC(&OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__currentSlotQueryRequestID, (uint64_t *)&unk_1001FB400, a1);
}

uint64_t sub_100069948@<X0>(uint64_t *a1@<X0>, void *a2@<X4>, uint64_t a3@<X8>)
{
  uint64_t v5 = *a1;
  swift_getKeyPath();
  sub_10008868C((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v6 = v5 + *a2;
  swift_beginAccess();
  return sub_100008DD4(v6, a3, (uint64_t *)&unk_1001FB400);
}

uint64_t sub_100069A20(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = sub_1000063C0((uint64_t *)&unk_1001FB400);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100008DD4(a1, (uint64_t)v6, (uint64_t *)&unk_1001FB400);
  uint64_t v7 = *a2;
  swift_getKeyPath();
  uint64_t v10 = v7;
  unint64_t v11 = v6;
  uint64_t v12 = v7;
  sub_10008868C((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  return sub_10002784C((uint64_t)v6, (uint64_t *)&unk_1001FB400);
}

uint64_t sub_100069B60(uint64_t a1, uint64_t a2, void *a3, uint64_t *a4)
{
  uint64_t v6 = a1 + *a3;
  swift_beginAccess();
  sub_100084060(a2, v6, a4);
  return swift_endAccess();
}

uint64_t sub_100069BD0()
{
  return sub_10006A068((uint64_t)&unk_10018D048, &OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__isFeatureEnabled);
}

uint64_t sub_100069BE4(uint64_t result, char a2)
{
  *(unsigned char *)(result + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__isFeatureEnabled) = a2;
  return result;
}

uint64_t sub_100069BF4()
{
  return sub_100069598();
}

uint64_t sub_100069C08@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_10008868C((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  *a2 = *(void *)(v3 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__rateLimitModel);
  return swift_retain();
}

uint64_t sub_100069CBC()
{
  return swift_release();
}

uint64_t sub_100069D9C()
{
  return sub_10006A068((uint64_t)&unk_10018D188, &OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__wantsInlineEditing);
}

uint64_t sub_100069DB0(uint64_t result, char a2)
{
  *(unsigned char *)(result + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__wantsInlineEditing) = a2;
  return result;
}

uint64_t sub_100069DC0()
{
  return sub_10006A068((uint64_t)&unk_10018D390, &OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__isForEditableContent);
}

uint64_t sub_100069DD4(uint64_t result, char a2)
{
  *(unsigned char *)(result + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__isForEditableContent) = a2;
  return result;
}

void *sub_100069DE4()
{
  return sub_100069DF8((uint64_t)&unk_10018CF30, &OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__nonInlineSupportResponse);
}

void *sub_100069DF8(uint64_t a1, void *a2)
{
  swift_getKeyPath();
  sub_10008868C((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v4 = *(void **)(v2 + *a2);
  id v5 = v4;
  return v4;
}

id sub_100069EA0@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_100069EB4(a1, &OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__nonInlineSupportResponse, a2);
}

id sub_100069EB4@<X0>(uint64_t *a1@<X0>, void *a2@<X4>, void *a3@<X8>)
{
  uint64_t v5 = *a1;
  swift_getKeyPath();
  sub_10008868C((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v6 = *(void **)(v5 + *a2);
  *a3 = v6;

  return v6;
}

uint64_t sub_100069F78(void **a1)
{
  uint64_t v1 = *a1;
  swift_getKeyPath();
  sub_10008868C((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  id v2 = v1;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();

  return swift_release();
}

uint64_t sub_10006A054()
{
  return sub_10006A068((uint64_t)&unk_10018D278, &OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__hasGeneratedResponseDrafts);
}

uint64_t sub_10006A068(uint64_t a1, void *a2)
{
  swift_getKeyPath();
  sub_10008868C((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(unsigned __int8 *)(v2 + *a2);
}

uint64_t sub_10006A108@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_10006A11C(a1, &OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__hasGeneratedResponseDrafts, a2);
}

uint64_t sub_10006A11C@<X0>(uint64_t *a1@<X0>, void *a2@<X4>, unsigned char *a3@<X8>)
{
  uint64_t v5 = *a1;
  swift_getKeyPath();
  sub_10008868C((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  *a3 = *(unsigned char *)(v5 + *a2);
  return result;
}

uint64_t sub_10006A1D0()
{
  return swift_release();
}

uint64_t sub_10006A2A0()
{
  return sub_10006D740((uint64_t)&unk_10018D1B0, &OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__activeGeneratedResponseIndex);
}

uint64_t sub_10006A2B4()
{
  return swift_release();
}

BOOL sub_10006A380()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000063C0(&qword_1001FB7D0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  uint64_t v11 = v0;
  sub_10008868C((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v5 = OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__state;
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__state) != 1)
  {
    swift_getKeyPath();
    uint64_t v11 = v0;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    if (*(unsigned char *)(v0 + v5) != 2)
    {
      swift_getKeyPath();
      uint64_t v11 = v0;
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      uint64_t v6 = v0 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__session;
      swift_beginAccess();
      sub_100008DD4(v6, (uint64_t)v4, &qword_1001FB7D0);
      uint64_t v7 = type metadata accessor for CompositionModel.Session(0);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v4, 1, v7)
        || !*((void *)v4 + 2))
      {
        sub_10002784C((uint64_t)v4, &qword_1001FB7D0);
      }
      else
      {
        swift_retain();
        sub_10002784C((uint64_t)v4, &qword_1001FB7D0);
        Swift::Bool v9 = GenerativeExperiencesSession.canUndo()();
        swift_release();
        if (v9)
        {
          swift_getKeyPath();
          uint64_t v10 = v1;
          ObservationRegistrar.access<A, B>(_:keyPath:)();
          swift_release();
          return *(void *)(v1 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__activeGeneratedResponseIndex) < 2;
        }
      }
    }
  }
  return 1;
}

uint64_t sub_10006A600()
{
  uint64_t v1 = sub_1000063C0(&qword_1001FB7D0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  uint64_t v11 = v0;
  sub_10008868C((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v4 = OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__state;
  int v5 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__state);
  if (v5 != 1)
  {
    swift_getKeyPath();
    uint64_t v11 = v0;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    if (*(unsigned char *)(v0 + v4) != 2)
    {
      swift_getKeyPath();
      uint64_t v11 = v0;
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      uint64_t v6 = v0 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__session;
      swift_beginAccess();
      sub_100008DD4(v6, (uint64_t)v3, &qword_1001FB7D0);
      uint64_t v7 = type metadata accessor for CompositionModel.Session(0);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v3, 1, v7)
        && *((void *)v3 + 2))
      {
        swift_retain();
        sub_10002784C((uint64_t)v3, &qword_1001FB7D0);
        Swift::Bool v9 = GenerativeExperiencesSession.canRedo()();
        swift_release();
        LOBYTE(v5) = !v9;
        return v5 & 1;
      }
      sub_10002784C((uint64_t)v3, &qword_1001FB7D0);
    }
    LOBYTE(v5) = 1;
  }
  return v5 & 1;
}

uint64_t sub_10006A82C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[19] = a4;
  sub_1000063C0(&qword_1001FEF30);
  v4[20] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for PromptCompletion();
  v4[21] = v5;
  v4[22] = *(void *)(v5 - 8);
  v4[23] = swift_task_alloc();
  sub_1000063C0(&qword_1001FB7D0);
  v4[24] = swift_task_alloc();
  v4[25] = swift_task_alloc();
  v4[26] = swift_task_alloc();
  v4[27] = swift_task_alloc();
  v4[28] = swift_task_alloc();
  type metadata accessor for MainActor();
  v4[29] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[30] = v7;
  v4[31] = v6;
  return _swift_task_switch(sub_10006A9B4, v7, v6);
}

uint64_t sub_10006A9B4()
{
  uint64_t v1 = *(void *)(v0 + 224);
  uint64_t v2 = *(void *)(v0 + 152);
  swift_getKeyPath();
  *(void *)(v0 + 112) = v2;
  *(void *)(v0 + 256) = OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel___observationRegistrar;
  *(void *)(v0 + 264) = sub_10008868C((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v3 = v2 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__session;
  swift_beginAccess();
  uint64_t v52 = v3;
  sub_100008DD4(v3, v1, &qword_1001FB7D0);
  uint64_t v4 = type metadata accessor for CompositionModel.Session(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  uint64_t v51 = v4;
  int v6 = v5(v1, 1);
  uint64_t v7 = *(void *)(v0 + 224);
  if (v6 || !*(void *)(v7 + 16))
  {
    uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v5;
    sub_10002784C(*(void *)(v0 + 224), &qword_1001FB7D0);
LABEL_3:
    swift_release();
LABEL_4:
    uint64_t v9 = *(void *)(v0 + 200);
    uint64_t v10 = *(void *)(v0 + 152);
    swift_getKeyPath();
    *(void *)(v0 + 88) = v10;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    sub_100008DD4(v52, v9, &qword_1001FB7D0);
    int v11 = v8(v9, 1, v51);
    uint64_t v12 = *(void *)(v0 + 200);
    if (v11 || !*(void *)(v12 + 16))
    {
      sub_10002784C(*(void *)(v0 + 200), &qword_1001FB7D0);
    }
    else
    {
      swift_retain();
      sub_10002784C(v12, &qword_1001FB7D0);
      Swift::Bool v29 = GenerativeExperiencesSession.canUndo()();
      swift_release();
      if (v29)
      {
LABEL_11:
        uint64_t v17 = *(void *)(v0 + 192);
        uint64_t v18 = *(void *)(v0 + 152);
        swift_getKeyPath();
        *(void *)(v0 + 96) = v18;
        ObservationRegistrar.access<A, B>(_:keyPath:)();
        swift_release();
        sub_100008DD4(v52, v17, &qword_1001FB7D0);
        int v19 = v8(v17, 1, v51);
        uint64_t v20 = *(void *)(v0 + 192);
        if (v19)
        {
          sub_10002784C(v20, &qword_1001FB7D0);
        }
        else
        {
          uint64_t v30 = *(void *)(v20 + 16);
          sub_10002784C(v20, &qword_1001FB7D0);
          if (v30) {
            goto LABEL_26;
          }
        }
        if (qword_1001FAC30 != -1) {
          swift_once();
        }
        uint64_t v21 = type metadata accessor for Logger();
        sub_10000EBE8(v21, (uint64_t)qword_100212788);
        uint64_t v22 = Logger.logObject.getter();
        os_log_type_t v23 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v22, v23))
        {
          uint64_t v24 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v24 = 0;
          _os_log_impl((void *)&_mh_execute_header, v22, v23, "GES session unexpectedly is nil.", v24, 2u);
          swift_slowDealloc();
        }
LABEL_17:

LABEL_26:
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        uint64_t v31 = *(uint64_t (**)(void))(v0 + 8);
        return v31();
      }
    }
    if (qword_1001FAC30 != -1) {
      swift_once();
    }
    uint64_t v13 = type metadata accessor for Logger();
    sub_10000EBE8(v13, (uint64_t)qword_100212788);
    uint64_t v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Undo operation invoked when canUndo is false.", v16, 2u);
      swift_slowDealloc();
    }

    goto LABEL_11;
  }
  swift_retain();
  sub_10002784C(v7, &qword_1001FB7D0);
  Swift::Bool v25 = GenerativeExperiencesSession.canUndo()();
  swift_release();
  if (!v25) {
    goto LABEL_33;
  }
  uint64_t v26 = *(void *)(v0 + 216);
  uint64_t v27 = *(void *)(v0 + 152);
  swift_getKeyPath();
  *(void *)(v0 + 104) = v27;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  sub_100008DD4(v52, v26, &qword_1001FB7D0);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v5)(v26, 1, v51))
  {
    uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v5;
    uint64_t v28 = *(void *)(v0 + 216);
    swift_release();
    sub_10002784C(v28, &qword_1001FB7D0);
    goto LABEL_4;
  }
  uint64_t v33 = *(void *)(v0 + 216);
  uint64_t v34 = *(void *)(v33 + 16);
  *(void *)(v0 + 272) = v34;
  swift_retain();
  sub_10002784C(v33, &qword_1001FB7D0);
  if (!v34)
  {
LABEL_33:
    uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v5;
    goto LABEL_3;
  }
  uint64_t v35 = *(void *)(v0 + 152);
  swift_getKeyPath();
  uint64_t v36 = swift_task_alloc();
  *(void *)(v36 + 16) = v35;
  *(unsigned char *)(v36 + 24) = 2;
  *(void *)(v0 + 136) = v35;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  *(void *)(v0 + 280) = 0;
  swift_release();
  swift_task_dealloc();
  swift_getKeyPath();
  *(void *)(v0 + 120) = v35;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  *(void *)(v0 + 288) = Strong;
  if (!Strong)
  {
    swift_release();
    goto LABEL_35;
  }
  uint64_t v38 = *(void *)(v0 + 208);
  uint64_t v39 = *(void *)(v0 + 152);
  swift_getKeyPath();
  *(void *)(v0 + 144) = v39;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  sub_100008DD4(v52, v38, &qword_1001FB7D0);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v5)(v38, 1, v51))
  {
    uint64_t v40 = *(void *)(v0 + 208);
    swift_release();
    swift_unknownObjectRelease();
    sub_10002784C(v40, &qword_1001FB7D0);
LABEL_35:
    uint64_t v41 = *(void *)(v0 + 152);
    swift_getKeyPath();
    uint64_t v42 = swift_task_alloc();
    *(void *)(v42 + 16) = v41;
    *(unsigned char *)(v42 + 24) = 0;
    *(void *)(v0 + 128) = v41;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    swift_task_dealloc();
    if (qword_1001FAC30 != -1) {
      swift_once();
    }
    uint64_t v43 = type metadata accessor for Logger();
    sub_10000EBE8(v43, (uint64_t)qword_100212788);
    uint64_t v22 = Logger.logObject.getter();
    os_log_type_t v44 = static os_log_type_t.debug.getter();
    if (!os_log_type_enabled(v22, v44))
    {

      swift_release();
      goto LABEL_26;
    }
    uint64_t v45 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v45 = 67109120;
    *(_DWORD *)(v0 + 392) = 0;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v22, v44, "Undo operation invoked, did we update response content: %{BOOL}d", v45, 8u);
    swift_slowDealloc();
    swift_release();
    goto LABEL_17;
  }
  uint64_t v46 = *(void ***)(v0 + 208);
  uint64_t v47 = *v46;
  *(void *)(v0 + 296) = *v46;
  id v48 = v47;
  sub_10002784C((uint64_t)v46, &qword_1001FB7D0);
  uint64_t v49 = (void *)swift_task_alloc();
  *(void *)(v0 + 304) = v49;
  *uint64_t v49 = v0;
  v49[1] = sub_10006B300;
  uint64_t v50 = *(void *)(v0 + 160);
  return GenerativeExperiencesSession.undo()(v50);
}

uint64_t sub_10006B300()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 248);
  uint64_t v3 = *(void *)(v1 + 240);
  return _swift_task_switch(sub_10006B420, v3, v2);
}

uint64_t sub_10006B420()
{
  uint64_t v1 = *(void *)(v0 + 168);
  uint64_t v2 = *(void *)(v0 + 176);
  uint64_t v3 = *(void *)(v0 + 160);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {

    swift_release();
    swift_unknownObjectRelease();
    sub_10002784C(v3, &qword_1001FEF30);
    uint64_t v4 = *(void *)(v0 + 152);
    swift_getKeyPath();
    uint64_t v5 = swift_task_alloc();
    *(void *)(v5 + 16) = v4;
    *(unsigned char *)(v5 + 24) = 0;
    *(void *)(v0 + 128) = v4;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    swift_task_dealloc();
    if (qword_1001FAC30 != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    sub_10000EBE8(v6, (uint64_t)qword_100212788);
    uint64_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 67109120;
      *(_DWORD *)(v0 + 392) = 0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Undo operation invoked, did we update response content: %{BOOL}d", v9, 8u);
      swift_slowDealloc();
      swift_release();
    }
    else
    {

      swift_release();
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
    return v13();
  }
  else
  {
    (*(void (**)(void, uint64_t, uint64_t))(v2 + 32))(*(void *)(v0 + 184), v3, v1);
    uint64_t v10 = (void *)swift_task_alloc();
    *(void *)(v0 + 312) = v10;
    void *v10 = v0;
    v10[1] = sub_10006B744;
    uint64_t v11 = *(void *)(v0 + 184);
    return sub_1000850D0(v0 + 16, v11);
  }
}

uint64_t sub_10006B744()
{
  uint64_t v2 = (void *)*v1;
  uint64_t v3 = (void *)*v1;
  v3[40] = v0;
  v3[41] = v2[2];
  *((_OWORD *)v3 + 21) = *(_OWORD *)(v3 + 3);
  v3[44] = v2[5];
  *(_OWORD *)(v3 + 45) = *((_OWORD *)v3 + 3);
  swift_task_dealloc();
  uint64_t v4 = v2[31];
  uint64_t v5 = v2[30];
  if (v0) {
    uint64_t v6 = sub_10008962C;
  }
  else {
    uint64_t v6 = sub_10006B8C4;
  }
  return _swift_task_switch(v6, v5, v4);
}

uint64_t sub_10006B8C4()
{
  [*(id *)(v0 + 288) writingToolsSession:*(void *)(v0 + 296) didReceiveAction:3];
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 376) = v1;
  void *v1 = v0;
  v1[1] = sub_10006B97C;
  uint64_t v2 = *(void *)(v0 + 360);
  uint64_t v3 = *(void *)(v0 + 368);
  uint64_t v4 = *(void *)(v0 + 344);
  uint64_t v5 = *(void *)(v0 + 352);
  uint64_t v7 = *(void *)(v0 + 328);
  uint64_t v6 = *(void *)(v0 + 336);
  return sub_100077084(v7, v6, v4, v5, v2, v3, 1);
}

uint64_t sub_10006B97C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 384) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v3 = *(void *)(v2 + 248);
  uint64_t v4 = *(void *)(v2 + 240);
  if (v0) {
    uint64_t v5 = sub_100089630;
  }
  else {
    uint64_t v5 = sub_10006BB2C;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_10006BB2C()
{
  uint64_t v1 = *(void **)(v0 + 296);
  uint64_t v3 = *(void *)(v0 + 176);
  uint64_t v2 = *(void *)(v0 + 184);
  uint64_t v4 = *(void *)(v0 + 168);
  swift_release();

  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  uint64_t v5 = *(void *)(v0 + 152);
  swift_getKeyPath();
  uint64_t v6 = swift_task_alloc();
  *(void *)(v6 + 16) = v5;
  *(unsigned char *)(v6 + 24) = 0;
  *(void *)(v0 + 128) = v5;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  swift_task_dealloc();
  if (qword_1001FAC30 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  sub_10000EBE8(v7, (uint64_t)qword_100212788);
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 67109120;
    *(_DWORD *)(v0 + 392) = 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Undo operation invoked, did we update response content: %{BOOL}d", v10, 8u);
    swift_slowDealloc();
    swift_release();
  }
  else
  {

    swift_release();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
  return v11();
}

uint64_t sub_10006BD98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[19] = a4;
  sub_1000063C0(&qword_1001FEF30);
  v4[20] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for PromptCompletion();
  v4[21] = v5;
  v4[22] = *(void *)(v5 - 8);
  v4[23] = swift_task_alloc();
  sub_1000063C0(&qword_1001FB7D0);
  v4[24] = swift_task_alloc();
  v4[25] = swift_task_alloc();
  v4[26] = swift_task_alloc();
  v4[27] = swift_task_alloc();
  v4[28] = swift_task_alloc();
  type metadata accessor for MainActor();
  v4[29] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[30] = v7;
  v4[31] = v6;
  return _swift_task_switch(sub_10006BF20, v7, v6);
}

uint64_t sub_10006BF20()
{
  uint64_t v1 = *(void *)(v0 + 224);
  uint64_t v2 = *(void *)(v0 + 152);
  swift_getKeyPath();
  *(void *)(v0 + 112) = v2;
  *(void *)(v0 + 256) = OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel___observationRegistrar;
  *(void *)(v0 + 264) = sub_10008868C((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v3 = v2 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__session;
  swift_beginAccess();
  uint64_t v52 = v3;
  sub_100008DD4(v3, v1, &qword_1001FB7D0);
  uint64_t v4 = type metadata accessor for CompositionModel.Session(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  uint64_t v51 = v4;
  int v6 = v5(v1, 1);
  uint64_t v7 = *(void *)(v0 + 224);
  if (v6 || !*(void *)(v7 + 16))
  {
    uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v5;
    sub_10002784C(*(void *)(v0 + 224), &qword_1001FB7D0);
LABEL_3:
    swift_release();
LABEL_4:
    uint64_t v9 = *(void *)(v0 + 200);
    uint64_t v10 = *(void *)(v0 + 152);
    swift_getKeyPath();
    *(void *)(v0 + 88) = v10;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    sub_100008DD4(v52, v9, &qword_1001FB7D0);
    int v11 = v8(v9, 1, v51);
    uint64_t v12 = *(void *)(v0 + 200);
    if (v11 || !*(void *)(v12 + 16))
    {
      sub_10002784C(*(void *)(v0 + 200), &qword_1001FB7D0);
    }
    else
    {
      swift_retain();
      sub_10002784C(v12, &qword_1001FB7D0);
      Swift::Bool v29 = GenerativeExperiencesSession.canRedo()();
      swift_release();
      if (v29)
      {
LABEL_11:
        uint64_t v17 = *(void *)(v0 + 192);
        uint64_t v18 = *(void *)(v0 + 152);
        swift_getKeyPath();
        *(void *)(v0 + 96) = v18;
        ObservationRegistrar.access<A, B>(_:keyPath:)();
        swift_release();
        sub_100008DD4(v52, v17, &qword_1001FB7D0);
        int v19 = v8(v17, 1, v51);
        uint64_t v20 = *(void *)(v0 + 192);
        if (v19)
        {
          sub_10002784C(v20, &qword_1001FB7D0);
        }
        else
        {
          uint64_t v30 = *(void *)(v20 + 16);
          sub_10002784C(v20, &qword_1001FB7D0);
          if (v30) {
            goto LABEL_26;
          }
        }
        if (qword_1001FAC30 != -1) {
          swift_once();
        }
        uint64_t v21 = type metadata accessor for Logger();
        sub_10000EBE8(v21, (uint64_t)qword_100212788);
        uint64_t v22 = Logger.logObject.getter();
        os_log_type_t v23 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v22, v23))
        {
          uint64_t v24 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v24 = 0;
          _os_log_impl((void *)&_mh_execute_header, v22, v23, "GES session unexpectedly is nil.", v24, 2u);
          swift_slowDealloc();
        }
LABEL_17:

LABEL_26:
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        uint64_t v31 = *(uint64_t (**)(void))(v0 + 8);
        return v31();
      }
    }
    if (qword_1001FAC30 != -1) {
      swift_once();
    }
    uint64_t v13 = type metadata accessor for Logger();
    sub_10000EBE8(v13, (uint64_t)qword_100212788);
    uint64_t v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Redo operation invoked when canRedo is false.", v16, 2u);
      swift_slowDealloc();
    }

    goto LABEL_11;
  }
  swift_retain();
  sub_10002784C(v7, &qword_1001FB7D0);
  Swift::Bool v25 = GenerativeExperiencesSession.canRedo()();
  swift_release();
  if (!v25) {
    goto LABEL_33;
  }
  uint64_t v26 = *(void *)(v0 + 216);
  uint64_t v27 = *(void *)(v0 + 152);
  swift_getKeyPath();
  *(void *)(v0 + 104) = v27;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  sub_100008DD4(v52, v26, &qword_1001FB7D0);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v5)(v26, 1, v51))
  {
    uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v5;
    uint64_t v28 = *(void *)(v0 + 216);
    swift_release();
    sub_10002784C(v28, &qword_1001FB7D0);
    goto LABEL_4;
  }
  uint64_t v33 = *(void *)(v0 + 216);
  uint64_t v34 = *(void *)(v33 + 16);
  *(void *)(v0 + 272) = v34;
  swift_retain();
  sub_10002784C(v33, &qword_1001FB7D0);
  if (!v34)
  {
LABEL_33:
    uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v5;
    goto LABEL_3;
  }
  uint64_t v35 = *(void *)(v0 + 152);
  swift_getKeyPath();
  uint64_t v36 = swift_task_alloc();
  *(void *)(v36 + 16) = v35;
  *(unsigned char *)(v36 + 24) = 2;
  *(void *)(v0 + 136) = v35;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  *(void *)(v0 + 280) = 0;
  swift_release();
  swift_task_dealloc();
  swift_getKeyPath();
  *(void *)(v0 + 120) = v35;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  *(void *)(v0 + 288) = Strong;
  if (!Strong)
  {
    swift_release();
    goto LABEL_35;
  }
  uint64_t v38 = *(void *)(v0 + 208);
  uint64_t v39 = *(void *)(v0 + 152);
  swift_getKeyPath();
  *(void *)(v0 + 144) = v39;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  sub_100008DD4(v52, v38, &qword_1001FB7D0);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v5)(v38, 1, v51))
  {
    uint64_t v40 = *(void *)(v0 + 208);
    swift_release();
    swift_unknownObjectRelease();
    sub_10002784C(v40, &qword_1001FB7D0);
LABEL_35:
    uint64_t v41 = *(void *)(v0 + 152);
    swift_getKeyPath();
    uint64_t v42 = swift_task_alloc();
    *(void *)(v42 + 16) = v41;
    *(unsigned char *)(v42 + 24) = 0;
    *(void *)(v0 + 128) = v41;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    swift_task_dealloc();
    if (qword_1001FAC30 != -1) {
      swift_once();
    }
    uint64_t v43 = type metadata accessor for Logger();
    sub_10000EBE8(v43, (uint64_t)qword_100212788);
    uint64_t v22 = Logger.logObject.getter();
    os_log_type_t v44 = static os_log_type_t.debug.getter();
    if (!os_log_type_enabled(v22, v44))
    {

      swift_release();
      goto LABEL_26;
    }
    uint64_t v45 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v45 = 67109120;
    *(_DWORD *)(v0 + 392) = 0;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v22, v44, "Redo operation invoked, did we update response content: %{BOOL}d", v45, 8u);
    swift_slowDealloc();
    swift_release();
    goto LABEL_17;
  }
  uint64_t v46 = *(void ***)(v0 + 208);
  uint64_t v47 = *v46;
  *(void *)(v0 + 296) = *v46;
  id v48 = v47;
  sub_10002784C((uint64_t)v46, &qword_1001FB7D0);
  uint64_t v49 = (void *)swift_task_alloc();
  *(void *)(v0 + 304) = v49;
  *uint64_t v49 = v0;
  v49[1] = sub_10006C86C;
  uint64_t v50 = *(void *)(v0 + 160);
  return GenerativeExperiencesSession.redo()(v50);
}

uint64_t sub_10006C86C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 248);
  uint64_t v3 = *(void *)(v1 + 240);
  return _swift_task_switch(sub_10006C98C, v3, v2);
}

uint64_t sub_10006C98C()
{
  uint64_t v1 = *(void *)(v0 + 168);
  uint64_t v2 = *(void *)(v0 + 176);
  uint64_t v3 = *(void *)(v0 + 160);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {

    swift_release();
    swift_unknownObjectRelease();
    sub_10002784C(v3, &qword_1001FEF30);
    uint64_t v4 = *(void *)(v0 + 152);
    swift_getKeyPath();
    uint64_t v5 = swift_task_alloc();
    *(void *)(v5 + 16) = v4;
    *(unsigned char *)(v5 + 24) = 0;
    *(void *)(v0 + 128) = v4;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    swift_task_dealloc();
    if (qword_1001FAC30 != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    sub_10000EBE8(v6, (uint64_t)qword_100212788);
    uint64_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 67109120;
      *(_DWORD *)(v0 + 392) = 0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Redo operation invoked, did we update response content: %{BOOL}d", v9, 8u);
      swift_slowDealloc();
      swift_release();
    }
    else
    {

      swift_release();
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
    return v13();
  }
  else
  {
    (*(void (**)(void, uint64_t, uint64_t))(v2 + 32))(*(void *)(v0 + 184), v3, v1);
    uint64_t v10 = (void *)swift_task_alloc();
    *(void *)(v0 + 312) = v10;
    void *v10 = v0;
    v10[1] = sub_10006CCB0;
    uint64_t v11 = *(void *)(v0 + 184);
    return sub_1000850D0(v0 + 16, v11);
  }
}

uint64_t sub_10006CCB0()
{
  uint64_t v2 = (void *)*v1;
  uint64_t v3 = (void *)*v1;
  v3[40] = v0;
  v3[41] = v2[2];
  *((_OWORD *)v3 + 21) = *(_OWORD *)(v3 + 3);
  v3[44] = v2[5];
  *(_OWORD *)(v3 + 45) = *((_OWORD *)v3 + 3);
  swift_task_dealloc();
  uint64_t v4 = v2[31];
  uint64_t v5 = v2[30];
  if (v0) {
    uint64_t v6 = sub_10006D098;
  }
  else {
    uint64_t v6 = sub_10006CE30;
  }
  return _swift_task_switch(v6, v5, v4);
}

uint64_t sub_10006CE30()
{
  [*(id *)(v0 + 288) writingToolsSession:*(void *)(v0 + 296) didReceiveAction:3];
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 376) = v1;
  void *v1 = v0;
  v1[1] = sub_10006CEE8;
  uint64_t v2 = *(void *)(v0 + 360);
  uint64_t v3 = *(void *)(v0 + 368);
  uint64_t v4 = *(void *)(v0 + 344);
  uint64_t v5 = *(void *)(v0 + 352);
  uint64_t v7 = *(void *)(v0 + 328);
  uint64_t v6 = *(void *)(v0 + 336);
  return sub_100077084(v7, v6, v4, v5, v2, v3, 0);
}

uint64_t sub_10006CEE8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 384) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v3 = *(void *)(v2 + 248);
  uint64_t v4 = *(void *)(v2 + 240);
  if (v0) {
    uint64_t v5 = sub_10006D414;
  }
  else {
    uint64_t v5 = sub_10006D1A8;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_10006D098()
{
  uint64_t v1 = (void *)v0[37];
  uint64_t v2 = v0[23];
  uint64_t v4 = v0[21];
  uint64_t v3 = v0[22];
  swift_unknownObjectRelease();
  swift_release();

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_10006D1A8()
{
  uint64_t v1 = *(void **)(v0 + 296);
  uint64_t v3 = *(void *)(v0 + 176);
  uint64_t v2 = *(void *)(v0 + 184);
  uint64_t v4 = *(void *)(v0 + 168);
  swift_release();

  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  uint64_t v5 = *(void *)(v0 + 152);
  swift_getKeyPath();
  uint64_t v6 = swift_task_alloc();
  *(void *)(v6 + 16) = v5;
  *(unsigned char *)(v6 + 24) = 0;
  *(void *)(v0 + 128) = v5;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  swift_task_dealloc();
  if (qword_1001FAC30 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  sub_10000EBE8(v7, (uint64_t)qword_100212788);
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 67109120;
    *(_DWORD *)(v0 + 392) = 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Redo operation invoked, did we update response content: %{BOOL}d", v10, 8u);
    swift_slowDealloc();
    swift_release();
  }
  else
  {

    swift_release();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
  return v11();
}

uint64_t sub_10006D414()
{
  uint64_t v1 = (void *)v0[37];
  uint64_t v2 = v0[23];
  uint64_t v4 = v0[21];
  uint64_t v3 = v0[22];
  swift_unknownObjectRelease();
  swift_release();

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_10006D544()
{
  return sub_10006D740((uint64_t)&unk_10018D0E8, &OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__allWordCount);
}

uint64_t sub_10006D558@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_10006D7E0(a1, &OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__allWordCount, a2);
}

uint64_t sub_10006D56C()
{
  return swift_release();
}

uint64_t sub_10006D638()
{
  return sub_10006D740((uint64_t)&unk_10018D0C0, &OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__selectedWordCount);
}

uint64_t sub_10006D64C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_10006D7E0(a1, &OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__selectedWordCount, a2);
}

uint64_t sub_10006D660()
{
  return swift_release();
}

uint64_t sub_10006D72C()
{
  return sub_10006D740((uint64_t)&unk_10018D098, &OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__nonSelectedWordCount);
}

uint64_t sub_10006D740(uint64_t a1, void *a2)
{
  swift_getKeyPath();
  sub_10008868C((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(void *)(v2 + *a2);
}

uint64_t sub_10006D7E0@<X0>(uint64_t *a1@<X0>, void *a2@<X4>, void *a3@<X8>)
{
  uint64_t v5 = *a1;
  swift_getKeyPath();
  sub_10008868C((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  *a3 = *(void *)(v5 + *a2);
  return result;
}

uint64_t sub_10006D894()
{
  return swift_release();
}

uint64_t (*sub_10006D960())()
{
  return j__swift_endAccess;
}

uint64_t sub_10006D9C0@<X0>(uint64_t a1@<X8>)
{
  return sub_10006D9DC(&OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__session, &qword_1001FB7D0, a1);
}

uint64_t sub_10006D9DC@<X0>(void *a1@<X1>, uint64_t *a2@<X2>, uint64_t a3@<X8>)
{
  swift_getKeyPath();
  sub_10008868C((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v7 = v3 + *a1;
  swift_beginAccess();
  return sub_100008DD4(v7, a3, a2);
}

uint64_t sub_10006DAB0(uint64_t a1, uint64_t a2)
{
  return sub_100069B60(a1, a2, &OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__session, &qword_1001FB7D0);
}

void (*sub_10006DAD8(void *a1))(void *a1)
{
  uint64_t v3 = malloc(0x40uLL);
  *a1 = v3;
  v3[4] = v1;
  swift_getKeyPath();
  v3[5] = OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel___observationRegistrar;
  void *v3 = v1;
  v3[6] = sub_10008868C((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  void *v3 = v1;
  swift_getKeyPath();
  ObservationRegistrar.willSet<A, B>(_:keyPath:)();
  swift_release();
  v3[7] = sub_10006D960();
  return sub_10006DBF4;
}

void sub_10006DBF4(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 56))(*a1, 0);
  void *v1 = v1[4];
  swift_getKeyPath();
  ObservationRegistrar.didSet<A, B>(_:keyPath:)();
  swift_release();

  free(v1);
}

unint64_t sub_10006DC80()
{
  unint64_t result = sub_10000571C((uint64_t)_swiftEmptyArrayStorage);
  qword_100212858 = result;
  return result;
}

uint64_t sub_10006DCA8()
{
  v1[52] = v0;
  uint64_t v2 = type metadata accessor for UUID();
  v1[53] = v2;
  v1[54] = *(void *)(v2 - 8);
  v1[55] = swift_task_alloc();
  sub_1000063C0(&qword_1001FB7D0);
  v1[56] = swift_task_alloc();
  type metadata accessor for MainActor();
  v1[57] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[58] = v4;
  v1[59] = v3;
  return _swift_task_switch(sub_10006DDCC, v4, v3);
}

uint64_t sub_10006DDCC()
{
  uint64_t v1 = v0[52];
  swift_getKeyPath();
  v0[60] = OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel___observationRegistrar;
  v0[45] = v1;
  v0[61] = sub_10008868C((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__isFeatureEnabled) == 1)
  {
    if (qword_1001FAC28 != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for Logger();
    v0[62] = v2;
    v0[63] = sub_10000EBE8(v2, (uint64_t)qword_100212770);
    uint64_t v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "Starting composition session.", v5, 2u);
      swift_slowDealloc();
    }
    uint64_t v6 = v0[52];

    swift_getKeyPath();
    v0[44] = v6;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    v0[64] = *(void *)(v6 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__rateLimitModel);
    swift_retain();
    uint64_t v7 = (void *)swift_task_alloc();
    v0[65] = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_10006E114;
    return sub_1000BBCB0();
  }
  else
  {
    swift_release();
    if (qword_1001FAC28 != -1) {
      swift_once();
    }
    uint64_t v9 = type metadata accessor for Logger();
    sub_10000EBE8(v9, (uint64_t)qword_100212770);
    uint64_t v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Feature not enabled, not starting composition session.", v12, 2u);
      swift_slowDealloc();
    }

    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v13 = (uint64_t (*)(void))v0[1];
    return v13();
  }
}

uint64_t sub_10006E114()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 472);
  uint64_t v3 = *(void *)(v1 + 464);
  return _swift_task_switch(sub_10006E258, v3, v2);
}

uint64_t sub_10006E258()
{
  uint64_t v1 = v0[52];
  id v2 = [objc_allocWithZone((Class)WTSession) initWithType:2 textViewDelegate:0];
  v0[66] = v2;
  [v2 setCompositionSessionType:10];
  swift_getKeyPath();
  v0[38] = v1;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  v0[67] = Strong;
  if (Strong)
  {
    os_log_type_t v4 = (void *)Strong;
    uint64_t v5 = v0[52];
    swift_getKeyPath();
    v0[35] = v5;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    if (*(unsigned char *)(v5 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__isForEditableContent) == 1
      && (uint64_t v6 = v0[52],
          swift_getKeyPath(),
          v0[51] = v6,
          ObservationRegistrar.access<A, B>(_:keyPath:)(),
          swift_release(),
          *(unsigned char *)(v6 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__wantsInlineEditing) == 1))
    {
      id v7 = v2;
    }
    else
    {
      id v7 = 0;
    }
    v0[68] = v7;
    v0[2] = v0;
    v0[7] = v0 + 36;
    v0[3] = sub_10006E584;
    uint64_t v8 = swift_continuation_init();
    v0[16] = _NSConcreteStackBlock;
    v0[17] = 0x40000000;
    v0[18] = sub_10016353C;
    v0[19] = &unk_1001EC3E0;
    v0[20] = v8;
    [v4 willBeginWritingToolsSession:v7 requestContexts:v0 + 16];
    return _swift_continuation_await(v0 + 2);
  }
  else
  {
    swift_release();
    uint64_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.error.getter();
    BOOL v11 = os_log_type_enabled(v9, v10);
    uint64_t v12 = v0[66];
    if (v11)
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Context not found for composition session", v13, 2u);
      swift_slowDealloc();
      uint64_t v14 = v9;
    }
    else
    {
      uint64_t v14 = v0[66];
      uint64_t v12 = v9;
    }

    swift_task_dealloc();
    swift_task_dealloc();
    os_log_type_t v15 = (uint64_t (*)(void))v0[1];
    return v15();
  }
}

uint64_t sub_10006E584()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 472);
  uint64_t v2 = *(void *)(*(void *)v0 + 464);
  return _swift_task_switch(sub_10006E68C, v2, v1);
}

uint64_t sub_10006E68C()
{
  uint64_t v1 = (void *)v0[68];
  swift_release();
  unint64_t v2 = v0[36];

  swift_unknownObjectRelease();
  if (!(v2 >> 62))
  {
    if (*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_3;
    }
LABEL_27:
    swift_bridgeObjectRelease();
    uint64_t v69 = Logger.logObject.getter();
    os_log_type_t v70 = static os_log_type_t.error.getter();
    BOOL v71 = os_log_type_enabled(v69, v70);
    uint64_t v72 = (void *)v0[66];
    if (v71)
    {
      uint64_t v73 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v73 = 0;
      _os_log_impl((void *)&_mh_execute_header, v69, v70, "Context not found for composition session", v73, 2u);
      swift_slowDealloc();
    }
    else
    {
    }
    goto LABEL_30;
  }
  swift_bridgeObjectRetain();
  uint64_t v68 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v68) {
    goto LABEL_27;
  }
LABEL_3:
  if ((v2 & 0xC000000000000001) != 0)
  {
    uint64_t v3 = specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_35;
    }
    uint64_t v3 = *(id *)(v2 + 32);
  }
  uint64_t v4 = v3;
  uint64_t v78 = v0 + 41;
  uint64_t v80 = v3;
  swift_bridgeObjectRelease();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = 0;
  id v6 = [v4 attributedText];
  id v7 = [v6 string];

  NSString v8 = v7;
  if (!v7)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v8 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  id v77 = v8;
  uint64_t v9 = v0[52];
  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v0[33] = v10;
  v0[34] = v11;
  uint64_t v12 = HIBYTE(v11) & 0xF;
  if ((v11 & 0x2000000000000000) == 0) {
    uint64_t v12 = v10;
  }
  uint64_t v13 = 7;
  if (((v11 >> 60) & ((v10 & 0x800000000000000) == 0)) != 0) {
    uint64_t v13 = 11;
  }
  v0[31] = 15;
  v0[32] = v13 | (v12 << 16);
  swift_retain();
  sub_1000063C0((uint64_t *)&unk_1001FEEB0);
  sub_10002DF54();
  uint64_t v14 = v5;
  sub_100027F2C((unint64_t *)&unk_1001FEEC0, (uint64_t *)&unk_1001FEEB0);
  StringProtocol.enumerateSubstrings<A>(in:options:_:)();
  swift_bridgeObjectRelease();
  swift_release();
  swift_beginAccess();
  uint64_t v15 = *(void *)(v5 + 16);
  swift_getKeyPath();
  uint64_t v16 = swift_task_alloc();
  *(void *)(v16 + 16) = v9;
  *(void *)(v16 + 24) = v15;
  v0[37] = v9;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  swift_task_dealloc();
  *(void *)(v5 + 16) = 0;
  id v17 = [v80 range];
  uint64_t v19 = v18;
  v0[14] = sub_100088998;
  v0[15] = v14;
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 1107296256;
  v0[12] = sub_10006F3B0;
  v0[13] = &unk_1001EC3F8;
  uint64_t v20 = _Block_copy(v0 + 10);
  swift_retain();
  swift_release();
  [v77 enumerateSubstringsInRange:v17 options:3 usingBlock:v20];
  _Block_release(v20);

  uint64_t v21 = *(void *)(v14 + 16);
  swift_getKeyPath();
  uint64_t v22 = swift_task_alloc();
  *(void *)(v22 + 16) = v9;
  *(void *)(v22 + 24) = v21;
  v0[39] = v9;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  swift_task_dealloc();
  swift_getKeyPath();
  v0[40] = v9;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v23 = *(void *)(v9 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__allWordCount);
  swift_getKeyPath();
  v0[41] = v9;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v24 = *(void *)(v9 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__selectedWordCount);
  uint64_t v25 = v23 - v24;
  if (!__OFSUB__(v23, v24))
  {
    uint64_t v76 = OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__selectedWordCount;
    uint64_t v26 = v0[52];
    swift_getKeyPath();
    uint64_t v27 = swift_task_alloc();
    *(void *)(v27 + 16) = v26;
    *(void *)(v27 + 24) = v25;
    v0[42] = v26;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    uint64_t v78 = 0;
    swift_release();
    swift_task_dealloc();
    sub_1000819B4();
    uint64_t v28 = v80;
    Swift::Bool v29 = Logger.logObject.getter();
    os_log_type_t v30 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = (uint8_t *)swift_slowAlloc();
      uint64_t v32 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v31 = 138412290;
      v0[50] = v28;
      uint64_t v33 = v28;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      uint64_t v34 = v28;
      void *v32 = v28;

      _os_log_impl((void *)&_mh_execute_header, v29, v30, "Context for composition %@", v31, 0xCu);
      sub_1000063C0(&qword_1001FED90);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      uint64_t v34 = v28;
      Swift::Bool v29 = v28;
    }
    uint64_t v35 = (void *)v0[66];
    uint64_t v36 = (void *)v0[56];
    uint64_t v37 = v0[52];

    uint64_t v38 = (int *)type metadata accessor for CompositionModel.Session(0);
    uint64_t v39 = (char *)v36 + v38[7];
    uint64_t v40 = sub_1000063C0(&qword_1001FEC88);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v39, 1, 1, v40);
    void *v36 = v35;
    v36[1] = v34;
    v36[2] = 0;
    *(void *)((char *)v36 + v38[8]) = 0;
    *((unsigned char *)v36 + v38[9]) = 0;
    uint64_t v41 = *((void *)v38 - 1);
    (*(void (**)(void *, void, uint64_t, int *))(v41 + 56))(v36, 0, 1, v38);
    swift_getKeyPath();
    uint64_t v42 = swift_task_alloc();
    *(void *)(v42 + 16) = v37;
    *(void *)(v42 + 24) = v36;
    v0[43] = v37;
    id v43 = v35;
    uint64_t v80 = v34;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    swift_task_dealloc();
    sub_10002784C((uint64_t)v36, &qword_1001FB7D0);
    os_log_type_t v44 = v0 + 21;
    uint64_t v45 = sub_10006DAD8(v0 + 21);
    uint64_t v47 = v46;
    if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(v41 + 48))(v46, 1, v38))
    {
      uint64_t v48 = v0[52];
      swift_getKeyPath();
      v0[49] = v48;
      os_log_type_t v44 = v0 + 21;
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      *(unsigned char *)(v47 + v38[9]) = *(void *)(v9 + v76) == 0;
    }
    ((void (*)(void *, void))v45)(v44, 0);
    if (qword_1001FACB0 == -1) {
      goto LABEL_19;
    }
    goto LABEL_36;
  }
LABEL_35:
  __break(1u);
LABEL_36:
  swift_once();
LABEL_19:
  uint64_t v49 = v0[54];
  uint64_t v50 = v0[55];
  uint64_t v52 = v0[52];
  uint64_t v51 = v0[53];
  id v53 = [(id)v0[66] uuid];
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  swift_beginAccess();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v81 = qword_100212858;
  qword_100212858 = 0x8000000000000000;
  sub_10016F1CC(v52, v50, isUniquelyReferenced_nonNull_native);
  qword_100212858 = v81;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v50, v51);
  swift_endAccess();
  swift_getKeyPath();
  uint64_t v55 = swift_task_alloc();
  *(void *)(v55 + 16) = v52;
  *(void *)(v55 + 24) = 0;
  v0[46] = v52;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  swift_task_dealloc();
  type metadata accessor for SlotParser();
  swift_allocObject();
  uint64_t v56 = sub_10008FB88();
  if (v78)
  {
    if (qword_1001FAC30 != -1) {
      swift_once();
    }
    sub_10000EBE8(v0[62], (uint64_t)qword_100212788);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v57 = Logger.logObject.getter();
    os_log_type_t v58 = static os_log_type_t.fault.getter();
    BOOL v59 = os_log_type_enabled(v57, v58);
    char v60 = (void *)v0[66];
    if (v59)
    {
      uint64_t v79 = (void *)v0[66];
      uint64_t v61 = (uint8_t *)swift_slowAlloc();
      unint64_t v62 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v61 = 138412290;
      swift_errorRetain();
      uint64_t v63 = _swift_stdlib_bridgeErrorToNSError();
      v0[47] = v63;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v62 = v63;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v57, v58, "failed to init slot parser: %@", v61, 0xCu);
      sub_1000063C0(&qword_1001FED90);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
      swift_release();
    }
    else
    {

      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
      swift_release();
    }
  }
  else
  {
    uint64_t v64 = v56;
    uint64_t v65 = (void *)v0[66];
    uint64_t v66 = v0[52];
    swift_getKeyPath();
    uint64_t v67 = swift_task_alloc();
    *(void *)(v67 + 16) = v66;
    *(void *)(v67 + 24) = v64;
    v0[48] = v66;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();

    swift_release();
    swift_release();
    swift_task_dealloc();
  }
LABEL_30:
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v74 = (uint64_t (*)(void))v0[1];
  return v74();
}

uint64_t sub_10006F3B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 32);
  if (a2)
  {
    uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v15 = v14;
  }
  else
  {
    uint64_t v13 = 0;
    uint64_t v15 = 0;
  }
  swift_retain();
  v12(v13, v15, a3, a4, a5, a6, a7);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10006F470(uint64_t a1, uint64_t a2)
{
  v3[5] = a2;
  v3[6] = v2;
  v3[4] = a1;
  type metadata accessor for MainActor();
  v3[7] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  v3[8] = v5;
  v3[9] = v4;
  return _swift_task_switch(sub_10006F50C, v5, v4);
}

uint64_t sub_10006F50C()
{
  unint64_t v1 = v0[5];
  uint64_t v2 = v0[4] & 0xFFFFFFFFFFFFLL;
  if ((v1 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(v1) & 0xF;
  }
  if (v2)
  {
    uint64_t v3 = v0[6];
    swift_getKeyPath();
    v0[2] = v3;
    sub_10008868C((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    if (*(void *)(v3 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__analyticsInstance))
    {
      uint64_t v4 = v0[6];
      uint64_t v5 = v0[4];
      swift_getKeyPath();
      v0[3] = v4;
      swift_retain();
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      sub_10000BFB0(0, 1, 0, 1, v5, v1, 0, 0, *(unsigned char *)(v4 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__inclusionPolicy));
      swift_release();
    }
    id v6 = (void *)swift_task_alloc();
    v0[11] = v6;
    void *v6 = v0;
    v6[1] = sub_10006F8DC;
    uint64_t v7 = v0[5];
    uint64_t v8 = v0[4];
    return sub_100070E18(v8, v7);
  }
  else
  {
    uint64_t v10 = (void *)swift_task_alloc();
    v0[10] = v10;
    void *v10 = v0;
    v10[1] = sub_10006F75C;
    return sub_10006F9FC();
  }
}

uint64_t sub_10006F75C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 72);
  uint64_t v3 = *(void *)(v1 + 64);
  return _swift_task_switch(sub_10006F87C, v3, v2);
}

uint64_t sub_10006F87C()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10006F8DC()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 72);
  uint64_t v3 = *(void *)(v1 + 64);
  return _swift_task_switch(sub_100089584, v3, v2);
}

uint64_t sub_10006F9FC()
{
  v1[4] = v0;
  type metadata accessor for MainActor();
  v1[5] = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[6] = v3;
  v1[7] = v2;
  return _swift_task_switch(sub_10006FA94, v3, v2);
}

uint64_t sub_10006FA94()
{
  uint64_t v1 = v0[4];
  swift_getKeyPath();
  v0[2] = v1;
  sub_10008868C((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (*(void *)(v1 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__analyticsInstance))
  {
    uint64_t v2 = v0[4];
    swift_getKeyPath();
    v0[3] = v2;
    swift_retain();
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    sub_10000BFB0(0, 1, 0, 1, 0, 0, 0xD00000000000001ALL, 0x800000010019DAD0, *(unsigned char *)(v2 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__inclusionPolicy));
    swift_release();
  }
  uint64_t v3 = (void *)swift_task_alloc();
  v0[8] = v3;
  void *v3 = v0;
  v3[1] = sub_10006FC60;
  return sub_100070E18(0xD00000000000001ALL, 0x800000010019DAD0);
}

uint64_t sub_10006FC60()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 56);
  uint64_t v3 = *(void *)(v1 + 48);
  return _swift_task_switch(sub_10001F164, v3, v2);
}

void sub_10006FD80(unsigned __int8 a1, uint64_t a2, void (*a3)(void), uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v90 = a2;
  uint64_t v91 = a4;
  uint64_t v8 = sub_1000063C0((uint64_t *)&unk_1001FB400);
  __chkstk_darwin(v8 - 8);
  uint64_t v89 = &v78[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_1000063C0(&qword_1001FEC90);
  __chkstk_darwin(v10 - 8);
  uint64_t v83 = &v78[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v86 = (char *)sub_1000063C0(&qword_1001FEC88);
  uint64_t v85 = *((void *)v86 - 1);
  __chkstk_darwin(v86);
  uint64_t v81 = &v78[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = sub_1000063C0(&qword_1001FB7D0);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v87 = &v78[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v14);
  id v17 = &v78[-v16];
  uint64_t v18 = type metadata accessor for CompositionModel.Session(0);
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = &v78[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_getKeyPath();
  uint64_t v22 = v4 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel___observationRegistrar;
  aBlock[0] = v5;
  uint64_t v88 = sub_10008868C((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  uint64_t v92 = v22;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v93 = v5;
  uint64_t v23 = v5 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__session;
  swift_beginAccess();
  sub_100008DD4(v23, (uint64_t)v17, &qword_1001FB7D0);
  uint64_t v84 = v19;
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) != 1)
  {
    sub_1000890EC((uint64_t)v17, (uint64_t)v21, type metadata accessor for CompositionModel.Session);
    if (qword_1001FAC28 != -1) {
      swift_once();
    }
    int v28 = a1;
    uint64_t v29 = type metadata accessor for Logger();
    sub_10000EBE8(v29, (uint64_t)qword_100212770);
    os_log_type_t v30 = Logger.logObject.getter();
    os_log_type_t v31 = static os_log_type_t.default.getter();
    BOOL v32 = os_log_type_enabled(v30, v31);
    uint64_t v82 = v21;
    uint64_t v33 = v93;
    if (v32)
    {
      uint64_t v34 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v34 = 67109120;
      uint64_t v21 = v82;
      int v35 = a1 & 1;
      if (a1 == 2) {
        int v35 = 1;
      }
      LODWORD(aBlock[0]) = v35;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "Ending WT session, accepted: %{BOOL}d", v34, 8u);
      swift_slowDealloc();
    }

    if (*((void *)v21 + 2))
    {
      swift_retain();
      GenerativeExperiencesSession.sessionIdentifier()();
      swift_release();
      uint64_t v36 = Logger.logObject.getter();
      os_log_type_t v37 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v36, v37))
      {
        uint64_t v38 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v38 = 0;
        _os_log_impl((void *)&_mh_execute_header, v36, v37, "Ending GES session", v38, 2u);
        uint64_t v21 = v82;
        swift_slowDealloc();
      }

      type metadata accessor for GenerativeExperiencesSession();
      char v39 = static GenerativeExperiencesSession.terminateSession(for:)();
      swift_bridgeObjectRelease();
      uint64_t v33 = v93;
      if (v39)
      {
LABEL_24:
        os_log_type_t v44 = (void *)sub_100066E8C();
        if (v44)
        {
          uint64_t v45 = v44;
          if ([v44 respondsToSelector:"endTextPlaceholderAndWillInsertText:completion:"])
          {
            aBlock[4] = (uint64_t)nullsub_1;
            aBlock[5] = 0;
            aBlock[0] = (uint64_t)_NSConcreteStackBlock;
            aBlock[1] = 1107296256;
            aBlock[2] = (uint64_t)sub_100048B2C;
            aBlock[3] = (uint64_t)&unk_1001EC1D8;
            uint64_t v46 = _Block_copy(aBlock);
            [v45 endTextPlaceholderAndWillInsertText:(v28 == 2) | (v28 & 1) completion:v46];
            _Block_release(v46);
            swift_release();
          }
          swift_unknownObjectRelease();
        }
        uint64_t v47 = v83;
        sub_100008DD4((uint64_t)&v21[*(int *)(v18 + 28)], (uint64_t)v83, &qword_1001FEC90);
        uint64_t v48 = v85;
        uint64_t v49 = v86;
        int v50 = (*(uint64_t (**)(unsigned char *, uint64_t, char *))(v85 + 48))(v47, 1, v86);
        uint64_t v80 = a3;
        int v79 = v28;
        if (v50 == 1)
        {
          sub_10002784C((uint64_t)v47, &qword_1001FEC90);
        }
        else
        {
          uint64_t v51 = v29;
          uint64_t v52 = v81;
          (*(void (**)(unsigned char *, unsigned char *, char *))(v48 + 32))(v81, v47, v49);
          if (qword_1001FAC30 != -1) {
            swift_once();
          }
          sub_10000EBE8(v51, (uint64_t)qword_100212788);
          id v53 = Logger.logObject.getter();
          os_log_type_t v54 = static os_log_type_t.debug.getter();
          if (os_log_type_enabled(v53, v54))
          {
            uint64_t v55 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v55 = 0;
            _os_log_impl((void *)&_mh_execute_header, v53, v54, "user reverted while continuation was still active", v55, 2u);
            swift_slowDealloc();
          }

          sub_100083FF4();
          uint64_t v56 = swift_allocError();
          *uint64_t v57 = 0;
          v57[1] = 0;
          aBlock[0] = v56;
          CheckedContinuation.resume(throwing:)();
          (*(void (**)(unsigned char *, char *))(v48 + 8))(v52, v49);
        }
        uint64_t v58 = (uint64_t)v87;
        (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v84 + 56))(v87, 1, 1, v18);
        uint64_t KeyPath = swift_getKeyPath();
        __chkstk_darwin(KeyPath);
        *(void *)&v78[-16] = v33;
        *(void *)&v78[-8] = v58;
        aBlock[0] = v33;
        ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
        swift_release();
        sub_10002784C(v58, &qword_1001FB7D0);
        uint64_t v60 = swift_getKeyPath();
        __chkstk_darwin(v60);
        *(void *)&v78[-24] = 0;
        *(void *)&v78[-16] = 0;
        *(void *)&v78[-32] = v33;
        aBlock[0] = v33;
        ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
        swift_release();
        uint64_t v61 = swift_getKeyPath();
        __chkstk_darwin(v61);
        *(void *)&v78[-16] = v33;
        *(void *)&v78[-8] = _swiftEmptyArrayStorage;
        aBlock[0] = v33;
        ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
        swift_release();
        uint64_t v62 = swift_getKeyPath();
        __chkstk_darwin(v62);
        *(void *)&v78[-16] = v33;
        *(void *)&v78[-8] = _swiftEmptyArrayStorage;
        aBlock[0] = v33;
        uint64_t v86 = (char *)&type metadata for () + 8;
        ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
        swift_release();
        uint64_t v63 = swift_getKeyPath();
        __chkstk_darwin(v63);
        *(void *)&v78[-16] = v33;
        *(void *)&v78[-8] = 0;
        aBlock[0] = v33;
        ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
        uint64_t v87 = 0;
        swift_release();
        swift_getKeyPath();
        aBlock[0] = v33;
        ObservationRegistrar.access<A, B>(_:keyPath:)();
        swift_release();
        aBlock[0] = v33;
        swift_getKeyPath();
        ObservationRegistrar.willSet<A, B>(_:keyPath:)();
        swift_release();
        uint64_t v64 = (void *)(v33 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__requestedInfoResponse);
        swift_beginAccess();
        *uint64_t v64 = &_swiftEmptyDictionarySingleton;
        swift_bridgeObjectRelease();
        uint64_t v96 = v33;
        swift_getKeyPath();
        ObservationRegistrar.didSet<A, B>(_:keyPath:)();
        swift_release();
        swift_getKeyPath();
        uint64_t v96 = v33;
        ObservationRegistrar.access<A, B>(_:keyPath:)();
        swift_release();
        uint64_t v96 = v33;
        swift_getKeyPath();
        ObservationRegistrar.willSet<A, B>(_:keyPath:)();
        swift_release();
        uint64_t v65 = (void *)(v33 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__slots);
        swift_beginAccess();
        *uint64_t v65 = _swiftEmptyArrayStorage;
        swift_bridgeObjectRelease();
        uint64_t v95 = v33;
        swift_getKeyPath();
        ObservationRegistrar.didSet<A, B>(_:keyPath:)();
        swift_release();
        swift_getKeyPath();
        uint64_t v95 = v33;
        ObservationRegistrar.access<A, B>(_:keyPath:)();
        swift_release();
        swift_retain();
        sub_100136EC8();
        swift_release();
        uint64_t v66 = type metadata accessor for UUID();
        uint64_t v67 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v66 - 8) + 56);
        uint64_t v68 = (uint64_t)v89;
        v67(v89, 1, 1, v66);
        uint64_t v69 = swift_getKeyPath();
        __chkstk_darwin(v69);
        *(void *)&v78[-16] = v93;
        *(void *)&v78[-8] = v68;
        uint64_t v95 = v93;
        ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
        swift_release();
        sub_10002784C(v68, (uint64_t *)&unk_1001FB400);
        v67((unsigned char *)v68, 1, 1, v66);
        uint64_t v70 = v93;
        uint64_t v71 = swift_getKeyPath();
        __chkstk_darwin(v71);
        *(void *)&v78[-16] = v70;
        *(void *)&v78[-8] = v68;
        uint64_t v95 = v70;
        ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
        swift_release();
        sub_10002784C(v68, (uint64_t *)&unk_1001FB400);
        if (v90)
        {
          swift_getKeyPath();
          uint64_t v95 = v70;
          swift_errorRetain();
          ObservationRegistrar.access<A, B>(_:keyPath:)();
          swift_release();
          uint64_t Strong = swift_unknownObjectWeakLoadStrong();
          uint64_t v73 = v80;
          uint64_t v74 = (uint64_t)v82;
          if (Strong)
          {
            uint64_t v75 = (void *)Strong;
            uint64_t v76 = (void *)_convertErrorToNSError(_:)();
            [v75 endWritingToolsWithError:v76];
            swift_errorRelease();
            swift_unknownObjectRelease();

            if (!v73) {
              goto LABEL_43;
            }
          }
          else
          {
            swift_errorRelease();
            if (!v73) {
              goto LABEL_43;
            }
          }
        }
        else
        {
          id v77 = (void *)sub_100066E8C();
          uint64_t v73 = v80;
          uint64_t v74 = (uint64_t)v82;
          if (v77)
          {
            [v77 didEndWritingToolsSession:*v82 accepted:(v79 == 2) | (v79 & 1)];
            swift_unknownObjectRelease();
          }
          if (!v73) {
            goto LABEL_43;
          }
        }
        v73();
LABEL_43:
        sub_100083F90(v74);
        return;
      }
      uint64_t v40 = Logger.logObject.getter();
      os_log_type_t v41 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v40, v41))
      {
        uint64_t v42 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v42 = 0;
        id v43 = "GES session termination returned failure";
LABEL_22:
        _os_log_impl((void *)&_mh_execute_header, v40, v41, v43, v42, 2u);
        swift_slowDealloc();
      }
    }
    else
    {
      uint64_t v40 = Logger.logObject.getter();
      os_log_type_t v41 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v40, v41))
      {
        uint64_t v42 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v42 = 0;
        id v43 = "No GES session to end";
        goto LABEL_22;
      }
    }

    goto LABEL_24;
  }
  sub_10002784C((uint64_t)v17, &qword_1001FB7D0);
  if (qword_1001FAC28 != -1) {
    swift_once();
  }
  uint64_t v24 = type metadata accessor for Logger();
  sub_10000EBE8(v24, (uint64_t)qword_100212770);
  uint64_t v25 = Logger.logObject.getter();
  os_log_type_t v26 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = (uint8_t *)swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v27 = 136315138;
    uint64_t v96 = sub_100021444(0xD00000000000001FLL, 0x800000010019D860, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v25, v26, "%s is called without session. The session may have been ended by a different view trying to start a new session", v27, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  if (a3) {
    a3();
  }
}

uint64_t sub_100070E18(uint64_t a1, uint64_t a2)
{
  v3[14] = a2;
  v3[15] = v2;
  v3[13] = a1;
  type metadata accessor for MainActor();
  v3[16] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  v3[17] = v5;
  v3[18] = v4;
  return _swift_task_switch(sub_100070EB4, v5, v4);
}

uint64_t sub_100070EB4()
{
  uint64_t v1 = v0[15];
  swift_getKeyPath();
  uint64_t v2 = swift_task_alloc();
  *(void *)(v2 + 16) = v1;
  *(unsigned char *)(v2 + 24) = 1;
  v0[19] = OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel___observationRegistrar;
  v0[5] = v1;
  v0[20] = sub_10008868C((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  swift_task_dealloc();
  uint64_t v3 = (void *)swift_task_alloc();
  v0[21] = v3;
  void *v3 = v0;
  v3[1] = sub_100071020;
  uint64_t v4 = v0[14];
  uint64_t v5 = v0[13];
  return sub_10007297C(v5, v4);
}

uint64_t sub_100071020()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 176) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 144);
  uint64_t v4 = *(void *)(v2 + 136);
  if (v0) {
    uint64_t v5 = sub_1000715D8;
  }
  else {
    uint64_t v5 = sub_10007115C;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_10007115C()
{
  uint64_t v1 = v0[15];
  swift_getKeyPath();
  uint64_t v2 = swift_task_alloc();
  *(void *)(v2 + 16) = v1;
  *(unsigned char *)(v2 + 24) = 0;
  v0[9] = v1;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  swift_task_dealloc();
  swift_getKeyPath();
  v0[10] = v1;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (*(void *)(v1 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__analyticsInstance))
  {
    uint64_t v3 = v0[15];
    swift_getKeyPath();
    v0[11] = v3;
    swift_retain();
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v5 = *(void *)(v3 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__modelInfoString);
    unint64_t v4 = *(void *)(v3 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__modelInfoString + 8);
    swift_getKeyPath();
    v0[12] = v3;
    swift_bridgeObjectRetain();
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    id v6 = *(void **)(v3 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__resultAttributedString);
    if (v6)
    {
      id v7 = v6;
      id v8 = [v7 string];
      uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v11 = v10;
    }
    else
    {
      uint64_t v9 = 0;
      uint64_t v11 = 0xE000000000000000;
    }
    sub_10000D44C(v5, v4, 0, 1, 0, 1, 0, v9, v11);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
  }
  uint64_t v12 = v0[15];
  swift_getKeyPath();
  v0[7] = v12;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  v0[23] = *(void *)(v12 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__rateLimitModel);
  swift_retain();
  uint64_t v13 = (void *)swift_task_alloc();
  v0[24] = v13;
  *uint64_t v13 = v0;
  v13[1] = sub_100071434;
  return sub_1000BBCB0();
}

uint64_t sub_100071434()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 144);
  uint64_t v3 = *(void *)(v1 + 136);
  return _swift_task_switch(sub_100071578, v3, v2);
}

uint64_t sub_100071578()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000715D8()
{
  v0[4] = v0[22];
  swift_errorRetain();
  sub_1000063C0(&qword_1001FEE40);
  if (swift_dynamicCast())
  {
    if (!v0[3])
    {
      swift_errorRelease();
      goto LABEL_12;
    }
    swift_bridgeObjectRelease();
  }
  swift_errorRelease();
  if (qword_1001FAC30 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000EBE8(v1, (uint64_t)qword_100212788);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    unint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)unint64_t v4 = 138412290;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    v0[8] = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v5 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "composition failed: %@", v4, 0xCu);
    sub_1000063C0(&qword_1001FED90);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v7 = v0[15];

  swift_getKeyPath();
  v0[6] = v7;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v8 = v0[22];
  if (*(void *)(v7 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__analyticsInstance))
  {
    swift_errorRetain();
    swift_retain();
    sub_10000DC14(v8, 0, 1, 0, 1);
    swift_errorRelease();
    swift_release();
  }
  swift_errorRetain();
  sub_10002FAC0(v8);
  swift_errorRelease();
LABEL_12:
  swift_errorRelease();
  uint64_t v9 = v0[15];
  swift_getKeyPath();
  v0[7] = v9;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  v0[23] = *(void *)(v9 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__rateLimitModel);
  swift_retain();
  uint64_t v10 = (void *)swift_task_alloc();
  v0[24] = v10;
  void *v10 = v0;
  v10[1] = sub_100071434;
  return sub_1000BBCB0();
}

uint64_t sub_100071974()
{
  uint64_t v1 = v0;
  uint64_t v92 = type metadata accessor for UUID();
  uint64_t v90 = *(void *)(v92 - 8);
  __chkstk_darwin(v92);
  uint64_t v89 = (char *)&v78 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for SessionConfiguration();
  __chkstk_darwin(v3 - 8);
  uint64_t v91 = (char *)&v78 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Prompt();
  __chkstk_darwin(v5 - 8);
  uint64_t v85 = (char *)&v78 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000063C0(&qword_1001FEF08);
  __chkstk_darwin(v7 - 8);
  uint64_t v88 = (char *)&v78 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Prompt.StringInterpolation();
  __chkstk_darwin(v9 - 8);
  uint64_t v87 = (char *)&v78 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = type metadata accessor for ChatMessageRole();
  uint64_t v83 = *(void *)(v84 - 8);
  __chkstk_darwin(v84);
  uint64_t v86 = (char *)&v78 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ChatMessagePrompt();
  uint64_t v97 = *(void *)(v12 - 8);
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v99 = (char *)&v78 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v78 - v15;
  uint64_t v17 = type metadata accessor for CachePolicy();
  __chkstk_darwin(v17 - 8);
  uint64_t v93 = type metadata accessor for SessionConfiguration();
  uint64_t v95 = *(void *)(v93 - 8);
  uint64_t v18 = __chkstk_darwin(v93);
  char v98 = (char *)&v78 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v100 = (char *)&v78 - v20;
  uint64_t v21 = sub_1000063C0(&qword_1001FB7D0);
  __chkstk_darwin(v21 - 8);
  uint64_t v23 = (char *)&v78 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1001FAC28 != -1) {
    swift_once();
  }
  uint64_t v96 = v16;
  uint64_t v24 = type metadata accessor for Logger();
  uint64_t v94 = sub_10000EBE8(v24, (uint64_t)qword_100212770);
  uint64_t v25 = Logger.logObject.getter();
  os_log_type_t v26 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v27 = 0;
    _os_log_impl((void *)&_mh_execute_header, v25, v26, "Initializing GES Session.", v27, 2u);
    swift_slowDealloc();
  }

  swift_getKeyPath();
  uint64_t v105 = v1;
  sub_10008868C((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v28 = v1 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__session;
  swift_beginAccess();
  sub_100008DD4(v28, (uint64_t)v23, &qword_1001FB7D0);
  uint64_t v29 = type metadata accessor for CompositionModel.Session(0);
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v82 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 48);
  uint64_t v81 = v30 + 48;
  int v31 = v82(v23, 1, v29);
  sub_10002784C((uint64_t)v23, &qword_1001FB7D0);
  if (v31 == 1)
  {
    BOOL v32 = Logger.logObject.getter();
    os_log_type_t v33 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v34 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v34 = 0;
      _os_log_impl((void *)&_mh_execute_header, v32, v33, "Writing Tools session was not initialized.", v34, 2u);
      swift_slowDealloc();
    }

    sub_100083FF4();
    swift_allocError();
    *int v35 = 0xD00000000000002ALL;
    v35[1] = 0x800000010019D9E0;
    return swift_willThrow();
  }
  uint64_t v79 = v29;
  uint64_t v80 = v12;
  sub_1000063C0((uint64_t *)&unk_1001FEF10);
  type metadata accessor for ModelBundle();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_10018A720;
  static Catalog.Resource.LLM.Model.ChatGPT()();
  uint64_t v38 = v107;
  uint64_t v37 = v108;
  char v39 = sub_100044740(&v105, v107);
  uint64_t v103 = v38;
  uint64_t v104 = *(void *)(v37 + 8);
  uint64_t v40 = sub_10002E148(&v101);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v38 - 8) + 16))(v40, v39, v38);
  ModelBundle.init(resource:)();
  sub_100027DBC((uint64_t)&v105);
  static CachePolicy.inMemory.getter();
  SessionConfiguration.init(identifier:useCaseID:preferredModelBundles:handlesSensitiveData:cachePolicy:onBehalfOf:parentOfOnBehalfOf:)();
  swift_getKeyPath();
  uint64_t v105 = v1;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v41 = OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__selectedWordCount;
  uint64_t v42 = *(void *)(v1 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__selectedWordCount);
  swift_getKeyPath();
  uint64_t v105 = v1;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__inclusionPolicy) & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_13:
    swift_getKeyPath();
    uint64_t v105 = v1;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v45 = OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__allWordCount;
    if (*(uint64_t *)(v1 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__allWordCount) < 1)
    {
      BOOL v44 = 0;
    }
    else
    {
      swift_getKeyPath();
      uint64_t v105 = v1;
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      uint64_t v46 = *(void *)(v1 + v41);
      swift_getKeyPath();
      uint64_t v105 = v1;
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      BOOL v44 = v46 != *(void *)(v1 + v45);
    }
    goto LABEL_16;
  }
  char v43 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  BOOL v44 = 0;
  if (v43) {
    goto LABEL_13;
  }
LABEL_16:
  unsigned __int8 v109 = 0;
  if (v42 < 1)
  {
    uint64_t v48 = v80;
    uint64_t v49 = v93;
    uint64_t v50 = v84;
    uint64_t v51 = v83;
    if (v44)
    {
      char v47 = 2;
      unsigned __int8 v109 = 2;
    }
    else
    {
      char v47 = 0;
    }
  }
  else
  {
    char v47 = 1;
    unsigned __int8 v109 = 1;
    uint64_t v48 = v80;
    uint64_t v49 = v93;
    uint64_t v50 = v84;
    uint64_t v51 = v83;
  }
  (*(void (**)(char *, void, uint64_t))(v51 + 104))(v86, enum case for ChatMessageRole.system(_:), v50);
  Prompt.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v52._uint64_t countAndFlagsBits = 0;
  v52._uint64_t object = (void *)0xE000000000000000;
  Prompt.StringInterpolation.appendLiteral(_:)(v52);
  sub_10015D734(v47);
  uint64_t v53 = type metadata accessor for Prompt.Component.Privacy();
  uint64_t v54 = (uint64_t)v88;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v88, 1, 1, v53);
  Prompt.StringInterpolation.appendInterpolation(_:priority:privacy:)();
  swift_bridgeObjectRelease();
  sub_10002784C(v54, &qword_1001FEF08);
  v55._uint64_t countAndFlagsBits = 0;
  v55._uint64_t object = (void *)0xE000000000000000;
  Prompt.StringInterpolation.appendLiteral(_:)(v55);
  Prompt.init(stringInterpolation:)();
  uint64_t v56 = v96;
  ChatMessagePrompt.init(role:prompt:)();
  (*(void (**)(char *, char *, uint64_t))(v95 + 16))(v98, v100, v49);
  (*(void (**)(char *, char *, uint64_t))(v97 + 16))(v99, v56, v48);
  uint64_t v57 = v89;
  UUID.init()();
  UUID.uuidString.getter();
  (*(void (**)(char *, uint64_t))(v90 + 8))(v57, v92);
  SessionConfiguration.init(tokenGeneratorConfig:identifier:instructions:templateID:)();
  type metadata accessor for GenerativeExperiencesSession();
  swift_allocObject();
  uint64_t v58 = GenerativeExperiencesSession.init(configuration:)();
  if (v58)
  {
    uint64_t v59 = v58;
    swift_retain();
    uint64_t v60 = sub_10006DAD8(&v105);
    uint64_t v62 = v61;
    if (!v82(v61, 1, v79))
    {
      *((void *)v62 + 2) = v59;
      swift_retain();
      swift_release();
    }
    ((void (*)(uint64_t *, void))v60)(&v105, 0);
    swift_release_n();
    (*(void (**)(char *, uint64_t))(v97 + 8))(v96, v48);
    return (*(uint64_t (**)(char *, uint64_t))(v95 + 8))(v100, v49);
  }
  else
  {
    int v63 = v109;
    uint64_t v64 = Logger.logObject.getter();
    os_log_type_t v65 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v64, v65))
    {
      uint64_t v66 = (uint8_t *)swift_slowAlloc();
      uint64_t v105 = swift_slowAlloc();
      *(_DWORD *)uint64_t v66 = 136315138;
      unint64_t v67 = 0xEC000000656E6F6ELL;
      if (v63)
      {
        if (v63 == 1)
        {
          uint64_t v68 = 0xD00000000000001ALL;
          unint64_t v69 = 0x800000010019DAB0;
        }
        else
        {
          unint64_t v69 = 0x800000010019DA60;
          uint64_t v68 = 0xD000000000000013;
        }
      }
      else
      {
        uint64_t v68 = 0x5F65736F706D6F63;
        unint64_t v69 = 0xEC000000656E6F6ELL;
      }
      uint64_t v101 = sub_100021444(v68, v69, &v105);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v64, v65, "Attempted to Create GES session with %s but failed.", v66, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v48 = v80;
    }
    else
    {

      unint64_t v67 = 0xEC000000656E6F6ELL;
    }
    uint64_t v105 = 0;
    unint64_t v106 = 0xE000000000000000;
    _StringGuts.grow(_:)(51);
    uint64_t v101 = v105;
    unint64_t v102 = v106;
    v70._uint64_t countAndFlagsBits = 0xD000000000000025;
    v70._uint64_t object = (void *)0x800000010019DA80;
    String.append(_:)(v70);
    swift_beginAccess();
    uint64_t v71 = v93;
    if (v109)
    {
      if (v109 == 1)
      {
        unint64_t v72 = 0xD00000000000001ALL;
        unint64_t v67 = 0x800000010019DAB0;
      }
      else
      {
        unint64_t v67 = 0x800000010019DA60;
        unint64_t v72 = 0xD000000000000013;
      }
    }
    else
    {
      unint64_t v72 = 0x5F65736F706D6F63;
    }
    unint64_t v73 = v67;
    String.append(_:)(*(Swift::String *)&v72);
    swift_bridgeObjectRelease();
    v74._uint64_t countAndFlagsBits = 0x6961662074756220;
    v74._uint64_t object = (void *)0xEC0000002E64656CLL;
    String.append(_:)(v74);
    uint64_t v75 = v101;
    unint64_t v76 = v102;
    sub_100083FF4();
    swift_allocError();
    *id v77 = v75;
    v77[1] = v76;
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v97 + 8))(v96, v48);
    return (*(uint64_t (**)(char *, uint64_t))(v95 + 8))(v100, v71);
  }
}

uint64_t sub_10007297C(uint64_t a1, uint64_t a2)
{
  v3[86] = v2;
  v3[85] = a2;
  v3[84] = a1;
  v3[87] = *(void *)(type metadata accessor for Attachment(0) - 8);
  v3[88] = swift_task_alloc();
  sub_1000063C0(&qword_1001FB7D0);
  v3[89] = swift_task_alloc();
  v3[90] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for CompositionModel.Session(0);
  v3[91] = v4;
  v3[92] = *(void *)(v4 - 8);
  v3[93] = swift_task_alloc();
  type metadata accessor for MainActor();
  v3[94] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  v3[95] = v5;
  v3[96] = v6;
  return _swift_task_switch(sub_100072B48, v5, v6);
}

uint64_t sub_100072B48()
{
  uint64_t v124 = v0;
  if (qword_1001FAC28 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000EBE8(v1, (uint64_t)qword_100212770);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Running Compose with GES", v4, 2u);
    swift_slowDealloc();
  }
  uint64_t v5 = *(void *)(v0 + 736);
  uint64_t v6 = *(void *)(v0 + 728);
  uint64_t v7 = *(void *)(v0 + 720);
  uint64_t v8 = *(void *)(v0 + 688);

  swift_getKeyPath();
  *(void *)(v0 + 776) = OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel___observationRegistrar;
  *(void *)(v0 + 632) = v8;
  *(void *)(v0 + 784) = sub_10008868C((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v9 = v8 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__session;
  swift_beginAccess();
  sub_100008DD4(v9, v7, &qword_1001FB7D0);
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  int v11 = v10(v7, 1, v6);
  uint64_t v12 = *(void *)(v0 + 720);
  if (v11 == 1)
  {
    swift_release();
    sub_10002784C(v12, &qword_1001FB7D0);
    uint64_t v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "Writing Tools session was not initialized.", v15, 2u);
      swift_slowDealloc();
    }

    sub_100083FF4();
    swift_allocError();
    *uint64_t v16 = 0xD00000000000002ALL;
    v16[1] = 0x800000010019D9E0;
    swift_willThrow();
LABEL_16:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v27 = *(uint64_t (**)(void))(v0 + 8);
    return v27();
  }
  uint64_t v17 = *(void *)(v0 + 744);
  sub_1000890EC(*(void *)(v0 + 720), v17, type metadata accessor for CompositionModel.Session);
  if (!*(void *)(v17 + 16)) {
    sub_100071974();
  }
  uint64_t v18 = *(void *)(v0 + 728);
  uint64_t v19 = *(void *)(v0 + 712);
  uint64_t v20 = *(void *)(v0 + 688);
  swift_getKeyPath();
  *(void *)(v0 + 624) = v20;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  sub_100008DD4(v9, v19, &qword_1001FB7D0);
  if (v10(v19, 1, v18))
  {
    uint64_t v21 = *(void *)(v0 + 712);
    swift_release();
    sub_10002784C(v21, &qword_1001FB7D0);
LABEL_13:
    uint64_t v22 = Logger.logObject.getter();
    os_log_type_t v23 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v24 = 0;
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "GES session was not initialized.", v24, 2u);
      swift_slowDealloc();
    }
    uint64_t v25 = *(void *)(v0 + 744);

    sub_100083FF4();
    swift_allocError();
    *os_log_type_t v26 = 0xD000000000000020;
    v26[1] = 0x800000010019DA10;
    swift_willThrow();
    sub_100083F90(v25);
    goto LABEL_16;
  }
  uint64_t v29 = *(void *)(v0 + 712);
  uint64_t v30 = *(void *)(v29 + 16);
  *(void *)(v0 + 792) = v30;
  swift_retain();
  sub_10002784C(v29, &qword_1001FB7D0);
  if (!v30)
  {
    swift_release();
    goto LABEL_13;
  }
  uint64_t v118 = v30;
  uint64_t v31 = *(void *)(v0 + 744);
  uint64_t v32 = *(void *)(v0 + 728);
  uint64_t v33 = *(void *)(v0 + 688);
  swift_getKeyPath();
  uint64_t v34 = swift_task_alloc();
  *(void *)(v34 + 16) = v33;
  *(void *)(v34 + 24) = 0;
  *(void *)(v0 + 616) = v33;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  swift_task_dealloc();
  uint64_t v119 = *(int *)(v32 + 32);
  if (!*(void *)(v31 + v119))
  {
    uint64_t v35 = sub_100066E8C();
    if (v35)
    {
      uint64_t v36 = (void *)v35;
      uint64_t v37 = *(void *)(v0 + 744);
      uint64_t v38 = *(void **)v37;
      sub_1000063C0(&qword_1001FAFD0);
      uint64_t v39 = swift_allocObject();
      *(_OWORD *)(v39 + 16) = xmmword_10018B4E0;
      uint64_t v40 = *(void **)(v37 + 8);
      *(void *)(v39 + 32) = v40;
      v123._uint64_t countAndFlagsBits = v39;
      specialized Array._endMutation()();
      sub_1000085FC(0, &qword_1001FD300);
      id v41 = v38;
      id v42 = v40;
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v36 didBeginWritingToolsSession:v41 contexts:isa];

      swift_unknownObjectRelease();
    }
  }
  uint64_t v44 = sub_100066E8C();
  if (v44)
  {
    uint64_t v45 = (void *)v44;
    id v46 = **(id **)(v0 + 744);
    [v45 writingToolsSession:v46 didReceiveAction:3];

    swift_unknownObjectRelease();
  }
  if (*(unsigned char *)(*(void *)(v0 + 744) + *(int *)(*(void *)(v0 + 728) + 36)) == 1)
  {
    char v47 = (void *)sub_100066E8C();
    if (v47)
    {
      uint64_t v48 = v47;
      if ([v47 respondsToSelector:"beginTextPlaceholder"]) {
        [v48 beginTextPlaceholder];
      }
      swift_unknownObjectRelease();
    }
  }
  uint64_t v49 = *(void *)(v0 + 688);
  *(void *)(v0 + 400) = 0;
  *(void *)(v0 + 408) = 0xE000000000000000;
  swift_getKeyPath();
  *(void *)(v0 + 608) = v49;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v50 = OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__selectedWordCount;
  uint64_t v121 = *(void *)(v49 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__selectedWordCount);
  swift_getKeyPath();
  *(void *)(v0 + 600) = v49;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (*(unsigned char *)(v49 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__inclusionPolicy))
  {
    char v51 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    BOOL v52 = 0;
    if ((v51 & 1) == 0) {
      goto LABEL_38;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v53 = *(void *)(v0 + 688);
  swift_getKeyPath();
  *(void *)(v0 + 648) = v53;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v54 = OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__allWordCount;
  if (*(uint64_t *)(v53 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__allWordCount) < 1)
  {
    BOOL v52 = 0;
  }
  else
  {
    uint64_t v55 = *(void *)(v0 + 688);
    swift_getKeyPath();
    *(void *)(v0 + 656) = v55;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v56 = *(void *)(v49 + v50);
    swift_getKeyPath();
    *(void *)(v0 + 664) = v55;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    BOOL v52 = v56 != *(void *)(v53 + v54);
  }
LABEL_38:
  int v57 = v121 > 0 || v52;
  if (*(void *)(v31 + v119) || !v57)
  {
    uint64_t object = *(void **)(v0 + 680);
    swift_bridgeObjectRetain();
    uint64_t countAndFlagsBits = *(void *)(v0 + 672);
  }
  else
  {
    uint64_t v58 = *(void **)(*(void *)(v0 + 744) + 8);
    [v58 range];
    id v59 = [v58 attributedText];
    id v60 = [v59 string];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    Range<>.init(_:in:)();
    LOBYTE(v59) = v61;
    swift_bridgeObjectRelease();
    if (v59)
    {
      uint64_t v120 = 0;
      unint64_t v65 = 0xE000000000000000;
    }
    else
    {
      id v62 = [v58 attributedText];
      id v63 = [v62 string];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      String.subscript.getter();
      swift_bridgeObjectRelease();
      uint64_t v120 = static String._fromSubstring(_:)();
      unint64_t v65 = v64;
      swift_bridgeObjectRelease();
    }
    id v88 = [v58 attributedText];
    id v89 = [v88 string];

    uint64_t v90 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v92 = v91;

    swift_bridgeObjectRetain_n();
    if (v121 < 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v120 = 0;
      unint64_t v65 = 0;
    }
    if (!v52)
    {
      swift_bridgeObjectRelease();
      uint64_t v90 = 0;
      uint64_t v92 = 0;
    }
    uint64_t v93 = *(void *)(v0 + 680);
    uint64_t v94 = *(void *)(v0 + 672);
    type metadata accessor for JSONEncoder();
    swift_allocObject();
    JSONEncoder.init()();
    *(void *)(v0 + 16) = v94;
    *(void *)(v0 + 24) = v93;
    *(void *)(v0 + 32) = v120;
    *(void *)(v0 + 40) = v65;
    *(void *)(v0 + 48) = v90;
    *(void *)(v0 + 56) = v92;
    sub_100089180();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v95 = dispatch thunk of JSONEncoder.encode<A>(_:)();
    uint64_t v117 = v90;
    uint64_t v114 = (void *)(v0 + 112);
    uint64_t v115 = (long long *)(v0 + 152);
    unint64_t v97 = v96;
    uint64_t v122 = v92;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v98 = v97 >> 62;
    unint64_t v99 = v97;
    uint64_t v100 = (void *)v65;
    uint64_t v101 = v95;
    switch(v98)
    {
      case 1uLL:
        if (v95 >> 32 < (int)v95) {
          __break(1u);
        }
        unint64_t v102 = v99;
        sub_100044630(v95, v99);
        swift_retain();
        uint64_t countAndFlagsBits = sub_100084E0C((int)v95, v95 >> 32, v99 & 0x3FFFFFFFFFFFFFFFLL, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_100085078);
        uint64_t object = v105;
        sub_1000446E8(v95, v102);
        goto LABEL_68;
      case 2uLL:
        unint64_t v102 = v99;
        uint64_t v106 = *(void *)(v95 + 16);
        uint64_t v107 = *(void *)(v101 + 24);
        sub_100044630(v101, v99);
        swift_retain();
        swift_retain();
        uint64_t countAndFlagsBits = sub_100084E0C(v106, v107, v99 & 0x3FFFFFFFFFFFFFFFLL, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_100085078);
        uint64_t object = v108;
        swift_release();
        swift_release();
LABEL_68:
        if (object) {
          goto LABEL_69;
        }
        *(void *)(v0 + 416) = v101;
        *(void *)(v0 + 424) = v102;
        sub_100044630(v101, v102);
        sub_1000063C0(&qword_1001FCA58);
        if (swift_dynamicCast())
        {
          sub_1000085E4(v115, (uint64_t)v114);
          sub_100044740(v114, *(void *)(v0 + 136));
          if (dispatch thunk of _HasContiguousBytes._providesContiguousBytesNoCopy.getter())
          {
            sub_100044740(v114, *(void *)(v0 + 136));
            dispatch thunk of _HasContiguousBytes.withUnsafeBytes<A>(_:)();
            sub_1000446E8(v101, v102);
            uint64_t countAndFlagsBits = *(void *)(v0 + 384);
            uint64_t object = *(void **)(v0 + 392);
            sub_100027DBC((uint64_t)v114);
            goto LABEL_70;
          }
          sub_100027DBC((uint64_t)v114);
        }
        else
        {
          *(void *)(v0 + 184) = 0;
          *uint64_t v115 = 0u;
          *(_OWORD *)(v0 + 168) = 0u;
          sub_10002784C((uint64_t)v115, &qword_1001FEDB0);
        }
        uint64_t v103 = sub_10008432C(v101, v102);
LABEL_64:
        uint64_t countAndFlagsBits = v103;
        uint64_t object = v104;
LABEL_69:
        sub_1000446E8(v101, v102);
LABEL_70:
        uint64_t v109 = v122;
        if (v122)
        {
          v123._uint64_t countAndFlagsBits = 0xD000000000000012;
          v123._uint64_t object = (void *)0x800000010019DA40;
          uint64_t v110 = v117;
          String.append(_:)(*(Swift::String *)(&v109 - 1));
          swift_bridgeObjectRetain();
          v111._uint64_t countAndFlagsBits = 10;
          v111._uint64_t object = (void *)0xE100000000000000;
          String.append(_:)(v111);
          swift_bridgeObjectRelease();
          String.append(_:)(v123);
          swift_bridgeObjectRelease();
        }
        if (v100)
        {
          v123._uint64_t countAndFlagsBits = 0x6C616E696769724FLL;
          v123._uint64_t object = (void *)0xEF203A7478655420;
          v112._uint64_t countAndFlagsBits = v120;
          v112._uint64_t object = v100;
          String.append(_:)(v112);
          swift_bridgeObjectRetain();
          v113._uint64_t countAndFlagsBits = 10;
          v113._uint64_t object = (void *)0xE100000000000000;
          String.append(_:)(v113);
          swift_bridgeObjectRelease();
          String.append(_:)(v123);
          sub_1000446E8(v101, v102);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_1000446E8(v101, v102);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        break;
      case 3uLL:
        *(void *)(v0 + 948) = 0;
        *(void *)(v0 + 942) = 0;
        sub_100085078(&v123._countAndFlagsBits);
        unint64_t v102 = v99;
        sub_1000446E8(v95, v99);
        uint64_t countAndFlagsBits = v123._countAndFlagsBits;
        uint64_t object = v123._object;
        goto LABEL_70;
      default:
        *(void *)(v0 + 928) = v95;
        unint64_t v102 = v99;
        *(_WORD *)(v0 + 936) = v99;
        *(unsigned char *)(v0 + 938) = BYTE2(v99);
        *(unsigned char *)(v0 + 939) = BYTE3(v99);
        *(unsigned char *)(v0 + 940) = BYTE4(v99);
        *(unsigned char *)(v0 + 941) = BYTE5(v99);
        uint64_t v103 = static String._fromUTF8Repairing(_:)();
        goto LABEL_64;
    }
  }
  *(void *)(v0 + 808) = object;
  *(void *)(v0 + 800) = countAndFlagsBits;
  uint64_t v68 = *(void *)(v0 + 688);
  uint64_t v69 = *(void *)(v0 + 408);
  uint64_t v116 = *(void *)(v0 + 400);
  swift_getKeyPath();
  *(void *)(v0 + 592) = v68;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  *(void *)(v0 + 584) = v68;
  swift_getKeyPath();
  ObservationRegistrar.willSet<A, B>(_:keyPath:)();
  swift_release();
  Swift::String v70 = (void **)(v68 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__inputStringsForFeedback);
  swift_beginAccess();
  uint64_t v71 = *v70;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *Swift::String v70 = v71;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v71 = sub_1001435CC(0, v71[2] + 1, 1, v71);
    *Swift::String v70 = v71;
  }
  unint64_t v74 = v71[2];
  unint64_t v73 = v71[3];
  if (v74 >= v73 >> 1)
  {
    uint64_t v71 = sub_1001435CC((void *)(v73 > 1), v74 + 1, 1, v71);
    *Swift::String v70 = v71;
  }
  uint64_t v75 = *(void *)(v0 + 688);
  void v71[2] = v74 + 1;
  unint64_t v76 = &v71[2 * v74];
  v76[4] = v116;
  v76[5] = v69;
  swift_endAccess();
  *(void *)(v0 + 568) = v75;
  swift_getKeyPath();
  ObservationRegistrar.didSet<A, B>(_:keyPath:)();
  swift_release();
  swift_getKeyPath();
  *(void *)(v0 + 536) = v75;
  swift_bridgeObjectRetain();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  *(void *)(v0 + 512) = v75;
  swift_getKeyPath();
  ObservationRegistrar.willSet<A, B>(_:keyPath:)();
  swift_release();
  id v77 = (void **)(v75 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__promptStringsForFeedback);
  swift_beginAccess();
  uint64_t v78 = *v77;
  char v79 = swift_isUniquelyReferenced_nonNull_native();
  *id v77 = v78;
  if ((v79 & 1) == 0)
  {
    uint64_t v78 = sub_1001435CC(0, v78[2] + 1, 1, v78);
    *id v77 = v78;
  }
  unint64_t v81 = v78[2];
  unint64_t v80 = v78[3];
  if (v81 >= v80 >> 1)
  {
    uint64_t v78 = sub_1001435CC((void *)(v80 > 1), v81 + 1, 1, v78);
    *id v77 = v78;
  }
  uint64_t v82 = *(void *)(v0 + 688);
  uint64_t v83 = *(void *)(v0 + 680);
  uint64_t v84 = *(void *)(v0 + 672);
  v78[2] = v81 + 1;
  uint64_t v85 = &v78[2 * v81];
  v85[4] = v84;
  v85[5] = v83;
  swift_endAccess();
  *(void *)(v0 + 496) = v82;
  swift_getKeyPath();
  ObservationRegistrar.didSet<A, B>(_:keyPath:)();
  swift_release();
  swift_getKeyPath();
  *(void *)(v0 + 472) = v82;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v86 = OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__attachmentManager;
  *(void *)(v0 + 816) = OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__attachmentManager;
  *(void *)(v0 + 824) = *(void *)(v82 + v86);
  swift_retain();
  uint64_t v87 = (void *)swift_task_alloc();
  *(void *)(v0 + 832) = v87;
  void *v87 = v0;
  v87[1] = sub_100073F88;
  return sub_100137850(v118);
}

uint64_t sub_100073F88()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 840) = v0;
  swift_task_dealloc();
  swift_release();
  if (v0)
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = *(void *)(v2 + 768);
    uint64_t v4 = *(void *)(v2 + 760);
    uint64_t v5 = sub_100074DE0;
  }
  else
  {
    uint64_t v3 = *(void *)(v2 + 768);
    uint64_t v4 = *(void *)(v2 + 760);
    uint64_t v5 = sub_100074108;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100074108()
{
  uint64_t v22 = v0[102];
  uint64_t v1 = v0[86];
  swift_getKeyPath();
  v0[55] = v1;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  v0[54] = v1;
  swift_getKeyPath();
  ObservationRegistrar.willSet<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v2 = (unint64_t *)(v1 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__attachments);
  swift_beginAccess();
  os_log_type_t v23 = v2;
  unint64_t *v2 = (unint64_t)_swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  v0[56] = v1;
  swift_getKeyPath();
  ObservationRegistrar.didSet<A, B>(_:keyPath:)();
  swift_release();
  swift_getKeyPath();
  v0[57] = v1;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v3 = *(void *)(v1 + v22);
  swift_getKeyPath();
  v0[58] = v3;
  sub_10008868C(&qword_100201970, (void (*)(uint64_t))type metadata accessor for AttachmentManager);
  swift_retain();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 16);
  swift_bridgeObjectRetain();
  swift_release();
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v6 = v0[87];
    unint64_t v21 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    uint64_t v7 = v4 + v21;
    uint64_t v8 = *(void *)(v6 + 72);
    do
    {
      uint64_t v9 = v0[86];
      sub_100089084(v7, v0[88], type metadata accessor for Attachment);
      swift_getKeyPath();
      v0[60] = v9;
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      v0[61] = v9;
      swift_getKeyPath();
      ObservationRegistrar.willSet<A, B>(_:keyPath:)();
      swift_release();
      swift_beginAccess();
      unint64_t v10 = *v23;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *os_log_type_t v23 = v10;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        unint64_t v10 = sub_1001432F8(0, *(void *)(v10 + 16) + 1, 1, v10);
        *os_log_type_t v23 = v10;
      }
      unint64_t v13 = *(void *)(v10 + 16);
      unint64_t v12 = *(void *)(v10 + 24);
      if (v13 >= v12 >> 1)
      {
        unint64_t v10 = sub_1001432F8(v12 > 1, v13 + 1, 1, v10);
        *os_log_type_t v23 = v10;
      }
      uint64_t v14 = v0[88];
      uint64_t v15 = v0[86];
      *(void *)(v10 + 16) = v13 + 1;
      sub_1000890EC(v14, v10 + v21 + v13 * v8, type metadata accessor for Attachment);
      swift_endAccess();
      v0[63] = v15;
      swift_getKeyPath();
      ObservationRegistrar.didSet<A, B>(_:keyPath:)();
      swift_release();
      v7 += v8;
      --v5;
    }
    while (v5);
  }
  swift_bridgeObjectRelease();
  uint64_t v16 = v0[99];
  uint64_t v17 = (void *)swift_task_alloc();
  v0[106] = v17;
  *uint64_t v17 = v0;
  v17[1] = sub_1000745B0;
  uint64_t v18 = v0[101];
  uint64_t v19 = v0[100];
  return sub_10007508C((uint64_t)(v0 + 8), v16, v19, v18);
}

uint64_t sub_1000745B0()
{
  uint64_t v2 = (void *)*v1;
  uint64_t v3 = (void *)*v1;
  v3[107] = v0;
  v3[108] = v2[8];
  *(_OWORD *)(v3 + 109) = *(_OWORD *)(v3 + 9);
  v3[111] = v2[11];
  *((_OWORD *)v3 + 56) = *((_OWORD *)v3 + 6);
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v4 = v2[96];
  uint64_t v5 = v2[95];
  if (v0) {
    uint64_t v6 = sub_100074EC4;
  }
  else {
    uint64_t v6 = sub_100074774;
  }
  return _swift_task_switch(v6, v5, v4);
}

uint64_t sub_100074774()
{
  uint64_t v23 = v0[111];
  uint64_t v1 = v0[86];
  swift_getKeyPath();
  v0[65] = v1;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  v0[66] = v1;
  swift_getKeyPath();
  ObservationRegistrar.willSet<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v2 = (void *)(v1 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__generatedImages);
  swift_beginAccess();
  uint64_t v22 = (void **)v2;
  void *v2 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  v0[68] = v1;
  swift_getKeyPath();
  ObservationRegistrar.didSet<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v3 = *(void *)(v23 + 16);
  if (v3)
  {
    uint64_t v4 = (unint64_t *)(swift_bridgeObjectRetain() + 40);
    do
    {
      uint64_t v24 = v3;
      uint64_t v5 = v0[86];
      uint64_t v6 = *(v4 - 1);
      unint64_t v7 = *v4;
      swift_getKeyPath();
      v0[69] = v5;
      sub_100044630(v6, v7);
      sub_100044630(v6, v7);
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      v0[70] = v5;
      swift_getKeyPath();
      ObservationRegistrar.willSet<A, B>(_:keyPath:)();
      swift_release();
      swift_beginAccess();
      uint64_t v8 = *v22;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      NSObject *v22 = v8;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t v8 = sub_10014384C(0, v8[2] + 1, 1, v8);
        NSObject *v22 = v8;
      }
      unint64_t v11 = v8[2];
      unint64_t v10 = v8[3];
      if (v11 >= v10 >> 1)
      {
        uint64_t v8 = sub_10014384C((void *)(v10 > 1), v11 + 1, 1, v8);
        NSObject *v22 = v8;
      }
      v4 += 2;
      uint64_t v12 = v0[86];
      v8[2] = v11 + 1;
      unint64_t v13 = &v8[2 * v11];
      v13[4] = v6;
      v13[5] = v7;
      swift_endAccess();
      v0[72] = v12;
      swift_getKeyPath();
      ObservationRegistrar.didSet<A, B>(_:keyPath:)();
      swift_release();
      sub_1000446E8(v6, v7);
      uint64_t v3 = v24 - 1;
    }
    while (v24 != 1);
    swift_bridgeObjectRelease();
  }
  uint64_t v14 = (void *)swift_task_alloc();
  v0[114] = v14;
  *uint64_t v14 = v0;
  v14[1] = sub_100074B18;
  uint64_t v15 = v0[113];
  uint64_t v16 = v0[112];
  uint64_t v17 = v0[111];
  uint64_t v18 = v0[110];
  uint64_t v19 = v0[109];
  uint64_t v20 = v0[108];
  return sub_100077084(v20, v19, v18, v17, v16, v15, 0);
}

uint64_t sub_100074B18()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 920) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v3 = *(void *)(v2 + 768);
  uint64_t v4 = *(void *)(v2 + 760);
  if (v0) {
    uint64_t v5 = sub_100074FA8;
  }
  else {
    uint64_t v5 = sub_100074CFC;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100074CFC()
{
  uint64_t v1 = *(void *)(v0 + 744);
  swift_release();
  swift_release();
  sub_100083F90(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100074DE0()
{
  uint64_t v1 = *(void *)(v0 + 744);
  swift_release();
  swift_release();
  sub_100083F90(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100074EC4()
{
  uint64_t v1 = *(void *)(v0 + 744);
  swift_release();
  swift_release();
  sub_100083F90(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100074FA8()
{
  uint64_t v1 = *(void *)(v0 + 744);
  swift_release();
  swift_release();
  sub_100083F90(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10007508C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[16] = a4;
  v5[17] = v4;
  v5[14] = a2;
  v5[15] = a3;
  v5[13] = a1;
  type metadata accessor for ToolChoice();
  v5[18] = swift_task_alloc();
  type metadata accessor for MainActor();
  v5[19] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[20] = v7;
  v5[21] = v6;
  return _swift_task_switch(sub_100075158, v7, v6);
}

uint64_t sub_100075158()
{
  sub_1000063C0(&qword_1001FEED8);
  type metadata accessor for ToolType();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_10018A740;
  static ToolType.imageGenerator.getter();
  uint64_t v1 = swift_allocObject();
  swift_weakInit();
  uint64_t v2 = swift_allocObject();
  swift_weakInit();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = v2;
  uint64_t v4 = sub_100150320();
  uint64_t v6 = v5;
  v0[11] = &type metadata for RequestUserInfoTool;
  v0[12] = sub_100088F20();
  uint64_t v7 = (void *)swift_allocObject();
  v0[8] = v7;
  v7[2] = 0xD000000000000013;
  v7[3] = 0x800000010019D9C0;
  v7[4] = v4;
  long long v7[5] = v6;
  v7[6] = &unk_1001FEEE8;
  v7[7] = v3;
  static ToolType.tooling(_:)();
  sub_100027DBC((uint64_t)(v0 + 8));
  static ToolChoice.automatic.getter();
  GenerativeExperiencesSession.toolChoice.setter();
  GenerativeExperiencesSession.tools.setter();
  uint64_t v8 = (void *)swift_task_alloc();
  v0[22] = v8;
  void *v8 = v0;
  v8[1] = sub_1000753B8;
  uint64_t v9 = v0[15];
  uint64_t v10 = v0[16];
  uint64_t v11 = v0[14];
  return sub_100086B08((uint64_t)(v0 + 2), v11, v9, v10);
}

uint64_t sub_1000753B8()
{
  uint64_t v2 = (void *)*v1;
  uint64_t v3 = (void *)*v1;
  v3[23] = v0;
  v3[24] = v2[2];
  *(_OWORD *)(v3 + 25) = *(_OWORD *)(v3 + 3);
  v3[27] = v2[5];
  *((_OWORD *)v3 + 14) = *((_OWORD *)v3 + 3);
  swift_task_dealloc();
  uint64_t v4 = v2[21];
  uint64_t v5 = v2[20];
  if (v0) {
    uint64_t v6 = sub_1000755E0;
  }
  else {
    uint64_t v6 = sub_100075534;
  }
  return _swift_task_switch(v6, v5, v4);
}

uint64_t sub_100075534()
{
  uint64_t v1 = *(void *)(v0 + 232);
  uint64_t v2 = *(void *)(v0 + 192);
  uint64_t v3 = *(void *)(v0 + 104);
  long long v6 = *(_OWORD *)(v0 + 200);
  long long v7 = *(_OWORD *)(v0 + 216);
  swift_release();
  swift_task_dealloc();
  *(void *)uint64_t v3 = v2;
  *(_OWORD *)(v3 + 8) = v6;
  *(_OWORD *)(v3 + 24) = v7;
  *(void *)(v3 + 40) = v1;
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_1000755E0()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10007564C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[10] = a2;
  v3[11] = a3;
  v3[9] = a1;
  type metadata accessor for ToolChoice();
  v3[12] = swift_task_alloc();
  return _swift_task_switch(sub_1000756E0, 0, 0);
}

uint64_t sub_1000756E0()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  v0[13] = Strong;
  if (Strong)
  {
    swift_beginAccess();
    uint64_t v2 = swift_weakLoadStrong();
    v0[14] = v2;
    if (v2)
    {
      uint64_t v3 = (void *)swift_task_alloc();
      v0[15] = v3;
      void *v3 = v0;
      v3[1] = sub_1000759B4;
      uint64_t v4 = v0[9];
      return sub_100078CBC(v4);
    }
    if (qword_1001FAC30 != -1) {
      swift_once();
    }
    uint64_t v11 = type metadata accessor for Logger();
    sub_10000EBE8(v11, (uint64_t)qword_100212788);
    uint64_t v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v14 = 0;
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "request user info tool was invoked, but GES session is nil", v14, 2u);
      swift_slowDealloc();
    }

    unint64_t v10 = sub_100005730((uint64_t)_swiftEmptyArrayStorage);
    swift_release();
  }
  else
  {
    if (qword_1001FAC30 != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    sub_10000EBE8(v6, (uint64_t)qword_100212788);
    long long v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "request user info tool was invoked, but composition model is nil", v9, 2u);
      swift_slowDealloc();
    }

    unint64_t v10 = sub_100005730((uint64_t)_swiftEmptyArrayStorage);
  }
  swift_task_dealloc();
  uint64_t v15 = (uint64_t (*)(unint64_t))v0[1];
  return v15(v10);
}

uint64_t sub_1000759B4(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 128) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_100075C14;
  }
  else
  {
    *(void *)(v4 + 136) = a1;
    uint64_t v5 = sub_100075ADC;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_100075ADC()
{
  sub_1000063C0(&qword_1001FEED8);
  type metadata accessor for ToolType();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_10018A720;
  static ToolType.imageGenerator.getter();
  GenerativeExperiencesSession.tools.setter();
  static ToolChoice.automatic.getter();
  GenerativeExperiencesSession.toolChoice.setter();
  swift_release();
  swift_release();
  uint64_t v1 = *(void *)(v0 + 136);
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_100075C14()
{
  if (qword_1001FAC30 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000EBE8(v1, (uint64_t)qword_100212788);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138412290;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 64) = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v5 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "error providing requested info to model: %@", v4, 0xCu);
    sub_1000063C0(&qword_1001FED90);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  swift_willThrow();
  swift_release();
  swift_release();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_100075E30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v15[0] = a2;
  v15[7] = a3;
  uint64_t v4 = type metadata accessor for User();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ChatMessagesPrompt();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[4] = a1;
  v15[5] = v15[0];
  User.init(_:)();
  static ChatMessagesPromptBuilder.buildExpression<A>(_:)();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1000063C0(&qword_1001FEE58);
  unint64_t v12 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_10018A720;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 16))(v13 + v12, v11, v8);
  static ChatMessagesPromptBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_100076064(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Prompt();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v12[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12[3] = &type metadata for String;
  _OWORD v12[4] = &protocol witness table for String;
  v12[0] = a1;
  v12[1] = a2;
  swift_bridgeObjectRetain();
  static CustomPromptBuilder.buildExpression(_:)();
  sub_100027DBC((uint64_t)v12);
  sub_1000063C0((uint64_t *)&unk_1001FEE60);
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_10018A720;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 16))(v9 + v8, v7, v4);
  static CustomPromptBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_100076214(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[15] = a2;
  v3[16] = a3;
  v3[14] = a1;
  uint64_t v4 = type metadata accessor for PromptCompletion.ImageContent();
  v3[17] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[18] = v5;
  v3[19] = *(void *)(v5 + 64);
  v3[20] = swift_task_alloc();
  sub_1000063C0(&qword_1001FF820);
  v3[21] = swift_task_alloc();
  v3[22] = swift_task_alloc();
  uint64_t v6 = sub_1000063C0(&qword_1001FEE28);
  v3[23] = v6;
  v3[24] = *(void *)(v6 - 8);
  v3[25] = swift_task_alloc();
  uint64_t v7 = sub_1000063C0(&qword_1001FEE30);
  v3[26] = v7;
  v3[27] = *(void *)(v7 - 8);
  v3[28] = swift_task_alloc();
  sub_1000063C0(&qword_1001FEE38);
  v3[29] = swift_task_alloc();
  v3[30] = swift_task_alloc();
  v3[31] = type metadata accessor for MainActor();
  v3[32] = static MainActor.shared.getter();
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
  v3[33] = v9;
  v3[34] = v8;
  return _swift_task_switch(sub_100076458, v9, v8);
}

uint64_t sub_100076458()
{
  uint64_t v1 = *(void *)(v0 + 216);
  uint64_t v43 = *(void *)(v0 + 208);
  unint64_t v2 = *(void *)(*(void *)(v0 + 128) + 16);
  uint64_t v42 = *(void *)(v0 + 144);
  id v41 = (void (**)(void, void, void, void))(v1 + 56);
  uint64_t v40 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48);
  uint64_t v3 = swift_bridgeObjectRetain();
  unint64_t v8 = 0;
  unint64_t v39 = v2;
  while (1)
  {
    if (v8 == v2)
    {
      (*v41)(*(void *)(v0 + 232), 1, 1, *(void *)(v0 + 208));
      unint64_t v10 = v2;
    }
    else
    {
      if (v8 >= v2)
      {
        __break(1u);
        return __sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v3, v4, v5, v6, v7);
      }
      uint64_t v11 = *(unint64_t **)(v0 + 232);
      uint64_t v12 = *(void *)(v0 + 208);
      uint64_t v13 = *(void *)(v0 + 136);
      unint64_t v10 = v8 + 1;
      uint64_t v14 = *(void *)(v0 + 224) + *(int *)(v43 + 48);
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v42 + 16))(v14, *(void *)(v0 + 128)+ ((*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80))+ *(void *)(v42 + 72) * v8, v13);
      uint64_t v15 = (char *)v11 + *(int *)(v43 + 48);
      *uint64_t v11 = v8;
      (*(void (**)(char *, uint64_t, uint64_t))(v42 + 32))(v15, v14, v13);
      (*v41)(v11, 0, 1, v12);
    }
    uint64_t v16 = *(void *)(v0 + 240);
    uint64_t v17 = *(void *)(v0 + 208);
    sub_100026FD0(*(void *)(v0 + 232), v16, &qword_1001FEE38);
    if ((*v40)(v16, 1, v17) == 1) {
      break;
    }
    unint64_t v47 = v10;
    uint64_t v18 = *(uint64_t **)(v0 + 240);
    uint64_t v19 = *(void *)(v0 + 176);
    uint64_t v46 = *(void *)(v0 + 168);
    uint64_t v20 = *(char **)(v0 + 160);
    uint64_t v21 = *(void *)(v0 + 136);
    uint64_t v44 = v19;
    uint64_t v45 = *v18;
    uint64_t v22 = (char *)v18 + *(int *)(v43 + 48);
    uint64_t v23 = type metadata accessor for TaskPriority();
    uint64_t v24 = *(void *)(v23 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 56))(v19, 1, 1, v23);
    uint64_t v25 = *(void (**)(uint64_t, char *, uint64_t))(v42 + 32);
    v25((uint64_t)v20, v22, v21);
    unint64_t v26 = (*(unsigned __int8 *)(v42 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
    uint64_t v27 = (void *)swift_allocObject();
    void v27[2] = 0;
    uint64_t v28 = v27 + 2;
    v27[3] = 0;
    v27[4] = v45;
    v25((uint64_t)v27 + v26, v20, v21);
    sub_100008DD4(v44, v46, &qword_1001FF820);
    int v29 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v46, 1, v23);
    uint64_t v30 = *(void *)(v0 + 168);
    if (v29 == 1)
    {
      sub_10002784C(*(void *)(v0 + 168), &qword_1001FF820);
      if (*v28) {
        goto LABEL_10;
      }
    }
    else
    {
      TaskPriority.rawValue.getter();
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v30, v23);
      if (*v28)
      {
LABEL_10:
        swift_getObjectType();
        swift_unknownObjectRetain();
        uint64_t v31 = dispatch thunk of Actor.unownedExecutor.getter();
        uint64_t v33 = v32;
        swift_unknownObjectRelease();
        goto LABEL_13;
      }
    }
    uint64_t v31 = 0;
    uint64_t v33 = 0;
LABEL_13:
    unint64_t v2 = v39;
    uint64_t v34 = **(void **)(v0 + 120);
    sub_1000063C0(&qword_1001FEDF8);
    uint64_t v35 = v33 | v31;
    if (v33 | v31)
    {
      uint64_t v35 = v0 + 16;
      *(void *)(v0 + 16) = 0;
      *(void *)(v0 + 24) = 0;
      *(void *)(v0 + 32) = v31;
      *(void *)(v0 + 40) = v33;
    }
    uint64_t v9 = *(void *)(v0 + 176);
    *(void *)(v0 + 72) = 1;
    *(void *)(v0 + 80) = v35;
    *(void *)(v0 + 88) = v34;
    swift_task_create();
    swift_release();
    uint64_t v3 = sub_10002784C(v9, &qword_1001FF820);
    unint64_t v8 = v47;
  }
  swift_bridgeObjectRelease();
  sub_1000063C0(&qword_1001FEDF8);
  sub_1000063C0(&qword_1001FEE40);
  ThrowingTaskGroup.makeAsyncIterator()();
  *(void *)(v0 + 280) = _swiftEmptyArrayStorage;
  uint64_t v36 = static MainActor.shared.getter();
  *(void *)(v0 + 288) = v36;
  uint64_t v37 = (void *)swift_task_alloc();
  *(void *)(v0 + 296) = v37;
  *uint64_t v37 = v0;
  v37[1] = sub_100076940;
  uint64_t v6 = *(void *)(v0 + 184);
  uint64_t v5 = &protocol witness table for MainActor;
  uint64_t v3 = v0 + 48;
  uint64_t v4 = v36;
  uint64_t v7 = v0 + 96;
  return __sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v3, v4, v5, v6, v7);
}

uint64_t sub_100076940()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 304) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v3 = *(void *)(v2 + 264);
    uint64_t v4 = *(void *)(v2 + 272);
    uint64_t v5 = sub_100076D58;
  }
  else
  {
    swift_release();
    uint64_t v3 = *(void *)(v2 + 264);
    uint64_t v4 = *(void *)(v2 + 272);
    uint64_t v5 = sub_100076A6C;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_100076A6C()
{
  uint64_t v19 = v0;
  uint64_t v1 = v0[6];
  unint64_t v2 = v0[8];
  if (v2 >> 60 == 15)
  {
    uint64_t v3 = v0[38];
    uint64_t v4 = (void *)v0[35];
    (*(void (**)(void, void))(v0[24] + 8))(v0[25], v0[23]);
    swift_release();
    uint64_t v18 = v4;
    swift_bridgeObjectRetain_n();
    sub_100083D28(&v18);
    if (v3)
    {
      return swift_release();
    }
    else
    {
      uint64_t v15 = (void *)v0[14];
      swift_bridgeObjectRelease();
      uint64_t v16 = sub_10006665C((uint64_t)v18);
      swift_release();
      swift_bridgeObjectRelease();
      void *v15 = v16;
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v17 = (uint64_t (*)(void))v0[1];
      return v17();
    }
  }
  else
  {
    uint64_t v6 = v0[7];
    sub_100044630(v6, v0[8]);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v8 = (void *)v0[35];
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      unint64_t v8 = sub_10014395C(0, v8[2] + 1, 1, (void *)v0[35]);
    }
    unint64_t v10 = v8[2];
    unint64_t v9 = v8[3];
    if (v10 >= v9 >> 1) {
      unint64_t v8 = sub_10014395C((void *)(v9 > 1), v10 + 1, 1, v8);
    }
    v8[2] = v10 + 1;
    uint64_t v11 = &v8[3 * v10];
    v11[4] = v1;
    v11[5] = v6;
    v11[6] = v2;
    sub_10008822C(v1, v6, v2);
    v0[35] = v8;
    uint64_t v12 = static MainActor.shared.getter();
    v0[36] = v12;
    uint64_t v13 = (void *)swift_task_alloc();
    v0[37] = v13;
    *uint64_t v13 = v0;
    v13[1] = sub_100076940;
    uint64_t v14 = v0[23];
    return __sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v0 + 6, v12, &protocol witness table for MainActor, v14, v0 + 12);
  }
}

uint64_t sub_100076D58()
{
  uint64_t v1 = v0[24];
  uint64_t v2 = v0[25];
  uint64_t v3 = v0[23];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_100076E40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[3] = a4;
  v5[4] = a5;
  void v5[2] = a1;
  return _swift_task_switch(sub_100076E64, 0, 0);
}

uint64_t sub_100076E64()
{
  **(void **)(v0 + 16) = *(void *)(v0 + 24);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v1;
  void *v1 = v0;
  v1[1] = sub_100076F00;
  return PromptCompletion.ImageContent.imageData()();
}

uint64_t sub_100076F00(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  uint64_t v7 = *v3;
  swift_task_dealloc();
  if (v2)
  {
    unint64_t v8 = *(uint64_t (**)(void))(v7 + 8);
    return v8();
  }
  else
  {
    *(void *)(v6 + 48) = a2;
    *(void *)(v6 + 56) = a1;
    return _swift_task_switch(sub_10007705C, 0, 0);
  }
}

uint64_t sub_10007705C()
{
  *(int8x16_t *)(*(void *)(v0 + 16) + 8) = vextq_s8(*(int8x16_t *)(v0 + 48), *(int8x16_t *)(v0 + 48), 8uLL);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100077084(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  *(void *)(v8 + 440) = a6;
  *(void *)(v8 + 448) = v7;
  *(unsigned char *)(v8 + 632) = a7;
  *(void *)(v8 + 424) = a4;
  *(void *)(v8 + 432) = a5;
  *(void *)(v8 + 408) = a2;
  *(void *)(v8 + 416) = a3;
  *(void *)(v8 + 400) = a1;
  type metadata accessor for AttributedString();
  *(void *)(v8 + 456) = swift_task_alloc();
  *(void *)(v8 + 464) = swift_task_alloc();
  sub_1000063C0(&qword_1001FB7D0);
  *(void *)(v8 + 472) = swift_task_alloc();
  uint64_t v9 = type metadata accessor for CompositionModel.Session(0);
  *(void *)(v8 + 480) = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  *(void *)(v8 + 488) = v10;
  *(void *)(v8 + 496) = *(void *)(v10 + 64);
  *(void *)(v8 + 504) = swift_task_alloc();
  *(void *)(v8 + 512) = swift_task_alloc();
  *(void *)(v8 + 520) = type metadata accessor for MainActor();
  *(void *)(v8 + 528) = static MainActor.shared.getter();
  uint64_t v12 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v8 + 536) = v12;
  *(void *)(v8 + 544) = v11;
  return _swift_task_switch(sub_100077214, v12, v11);
}

uint64_t sub_100077214()
{
  uint64_t v1 = v0[60];
  uint64_t v2 = v0[61];
  uint64_t v3 = v0[59];
  uint64_t v4 = v0[56];
  swift_getKeyPath();
  v0[69] = OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel___observationRegistrar;
  v0[46] = v4;
  v0[70] = sub_10008868C((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v5 = v4 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__session;
  swift_beginAccess();
  sub_100008DD4(v5, v3, &qword_1001FB7D0);
  uint64_t v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  unsigned int v7 = v6(v3, 1, v1);
  uint64_t v8 = v0[59];
  if (v7 != 1)
  {
    sub_1000890EC(v8, v0[64], type metadata accessor for CompositionModel.Session);
    if (qword_1001FAC28 != -1) {
      swift_once();
    }
    uint64_t v10 = type metadata accessor for Logger();
    v0[71] = v10;
    sub_10000EBE8(v10, (uint64_t)qword_100212770);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.default.getter();
    uint64_t v122 = v6;
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v13 = 134217984;
      v0[49] = String.count.getter();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "Query successful. Response length %ld.", v13, 0xCu);
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }

    swift_bridgeObjectRetain();
    uint64_t v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.default.getter();
    BOOL v16 = os_log_type_enabled(v14, v15);
    uint64_t v17 = v0[53];
    if (v16)
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v18 = 134217984;
      v0[48] = *(void *)(v17 + 16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Model generated %ld images.", v18, 0xCu);
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease();
    }

    uint64_t v19 = v0[58];
    uint64_t v20 = v0[55];
    uint64_t v21 = v0[56];
    uint64_t v22 = v0[54];
    unint64_t v24 = v0[50];
    uint64_t v23 = (void *)v0[51];
    swift_getKeyPath();
    uint64_t v25 = (void *)swift_task_alloc();
    void v25[2] = v21;
    v25[3] = v22;
    v25[4] = v20;
    v0[40] = v21;
    swift_bridgeObjectRetain();
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v26 = swift_allocObject();
    v0[72] = v26;
    swift_bridgeObjectRetain();
    sub_1000304AC(v24, v23, v19);
    uint64_t v120 = v0 + 23;
    uint64_t v121 = v0 + 25;
    uint64_t v29 = v0[53];
    sub_1000085FC(0, &qword_1001FEEA0);
    uint64_t v126 = v26;
    *(void *)(v26 + 16) = NSAttributedString.init(_:)();
    uint64_t v30 = v0;
    uint64_t v31 = *(void *)(v29 + 16);
    if (v31)
    {
      uint64_t v125 = v30;
      uint64_t v32 = v30[53];
      sub_1000085FC(0, (unint64_t *)&qword_1001FEEA8);
      id v123 = self;
      swift_bridgeObjectRetain();
      uint64_t v33 = (unint64_t *)(v32 + 40);
      do
      {
        uint64_t v41 = *(v33 - 1);
        unint64_t v42 = *v33;
        id v43 = objc_allocWithZone((Class)NSTextAttachment);
        sub_100044630(v41, v42);
        id v44 = [v43 init];
        id v45 = objc_allocWithZone((Class)UIImage);
        sub_100044630(v41, v42);
        Class isa = Data._bridgeToObjectiveC()().super.isa;
        id v47 = [v45 initWithData:isa];
        sub_1000446E8(v41, v42);

        [v44 setImage:v47];
        id v48 = [v44 image];
        if (v48)
        {
          uint64_t v49 = v48;
          [v48 size];
          double v51 = v50;
        }
        else
        {
          double v51 = 200.0;
        }
        id v52 = [v44 image:v120, v121];
        if (v52)
        {
          uint64_t v34 = v52;
          [v52 size];
          double v36 = v35;
        }
        else
        {
          double v36 = 200.0;
        }
        v33 += 2;
        [v44 setBounds:0.0, 0.0, v51, v36];
        id v37 = *(id *)(v126 + 16);
        AttributedString.init(stringLiteral:)();
        uint64_t v38 = NSAttributedString.init(_:)();
        [v37 appendAttributedString:v38];

        id v39 = *(id *)(v126 + 16);
        id v40 = [v123 attributedStringWithAttachment:v44];
        [v39 appendAttributedString:v40];

        sub_1000446E8(v41, v42);
        --v31;
      }
      while (v31);
      uint64_t v30 = v125;
      swift_bridgeObjectRelease();
    }
    uint64_t v124 = v30 + 13;
    uint64_t v53 = v30[56];
    uint64_t v54 = swift_allocObject();
    v30[73] = v54;
    *(void *)(v54 + 16) = 0;
    uint64_t v55 = (uint64_t *)(v54 + 16);
    id v56 = [*(id *)(v126 + 16) string];
    uint64_t v57 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v59 = v58;

    v30[74] = v57;
    v30[75] = v59;
    v30[25] = v57;
    v30[26] = v59;
    uint64_t v60 = HIBYTE(v59) & 0xF;
    if ((v59 & 0x2000000000000000) == 0) {
      uint64_t v60 = v57;
    }
    uint64_t v61 = 11;
    if (((v59 >> 60) & ((v57 & 0x800000000000000) == 0)) == 0) {
      uint64_t v61 = 7;
    }
    v30[23] = 15;
    v30[24] = v61 | (v60 << 16);
    swift_retain();
    sub_1000063C0((uint64_t *)&unk_1001FEEB0);
    sub_10002DF54();
    sub_100027F2C((unint64_t *)&unk_1001FEEC0, (uint64_t *)&unk_1001FEEB0);
    StringProtocol.enumerateSubstrings<A>(in:options:_:)();
    swift_release();
    swift_getKeyPath();
    v30[34] = v53;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    id v62 = v30;
    if (*(unsigned char *)(v53 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__wantsInlineEditing) == 1)
    {
      uint64_t v63 = v30[56];
      swift_beginAccess();
      uint64_t v64 = *v55;
      swift_getKeyPath();
      uint64_t v65 = swift_task_alloc();
      *(void *)(v65 + 16) = v63;
      *(void *)(v65 + 24) = v64;
      v30[47] = v63;
      ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
      swift_release();
      swift_task_dealloc();
      sub_1000819B4();
    }
    uint64_t v66 = v30[56];
    unint64_t v67 = *(void **)(v126 + 16);
    swift_getKeyPath();
    uint64_t v68 = swift_task_alloc();
    *(void *)(v68 + 16) = v66;
    *(void *)(v68 + 24) = v67;
    v30[27] = v66;
    id v69 = v67;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();

    swift_task_dealloc();
    Swift::String v70 = Logger.logObject.getter();
    os_log_type_t v71 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v70, v71))
    {
      unint64_t v72 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v72 = 0;
      _os_log_impl((void *)&_mh_execute_header, v70, v71, "Updating Last Response", v72, 2u);
      swift_slowDealloc();
    }
    uint64_t v73 = v30[60];

    id v74 = objc_allocWithZone((Class)NSAttributedString);
    swift_bridgeObjectRetain();
    NSString v75 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v76 = [v74 initWithString:v75];
    v30[76] = v76;

    id v77 = sub_10006DAD8(v124);
    uint64_t v79 = v78;
    if (!v122(v78, 1, v73))
    {
      uint64_t v80 = v30[60];
      id v81 = [v76 copy];
      uint64_t v82 = *(int *)(v80 + 32);
      uint64_t v83 = *(void **)(v79 + v82);
      *(void *)(v79 + v82) = v81;
    }
    ((void (*)(void *, void))v77)(v124, 0);
    int v84 = *((unsigned __int8 *)v30 + 632);
    swift_getKeyPath();
    uint64_t v85 = v30[56];
    if (v84 == 1)
    {
      v30[44] = v85;
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      uint64_t v86 = swift_release();
      uint64_t v89 = *(void *)(v85 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__activeGeneratedResponseIndex);
      BOOL v90 = __OFSUB__(v89, 1);
      uint64_t v91 = v89 - 1;
      if (!v90)
      {
        uint64_t v92 = v30[56];
        uint64_t v93 = v91 & ~(v91 >> 63);
        swift_getKeyPath();
        uint64_t v94 = swift_task_alloc();
        *(void *)(v94 + 16) = v92;
        *(void *)(v94 + 24) = v93;
        v30[45] = v92;
        goto LABEL_38;
      }
      __break(1u);
    }
    else
    {
      v30[28] = v85;
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      v30[29] = v85;
      swift_getKeyPath();
      ObservationRegistrar.willSet<A, B>(_:keyPath:)();
      uint64_t v86 = swift_release();
      uint64_t v95 = OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__activeGeneratedResponseIndex;
      uint64_t v96 = *(void *)(v85 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__activeGeneratedResponseIndex);
      BOOL v90 = __OFADD__(v96, 1);
      uint64_t v97 = v96 + 1;
      if (!v90)
      {
        uint64_t v98 = v62[56];
        *(void *)(v85 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__activeGeneratedResponseIndex) = v97;
        v62[30] = v98;
        swift_getKeyPath();
        ObservationRegistrar.didSet<A, B>(_:keyPath:)();
        swift_release();
        swift_getKeyPath();
        v62[31] = v98;
        ObservationRegistrar.access<A, B>(_:keyPath:)();
        swift_release();
        if (*(uint64_t *)(v85 + v95) < 2
          || (uint64_t v99 = v62[56],
              swift_getKeyPath(),
              v62[42] = v99,
              ObservationRegistrar.access<A, B>(_:keyPath:)(),
              swift_release(),
              (*(unsigned char *)(v99 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__hasGeneratedResponseDrafts) & 1) != 0))
        {
LABEL_42:
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v100 = Logger.logObject.getter();
          os_log_type_t v101 = static os_log_type_t.default.getter();
          BOOL v102 = os_log_type_enabled(v100, v101);
          uint64_t v103 = v62[52];
          if (v102)
          {
            uint64_t v104 = (uint8_t *)swift_slowAlloc();
            *(_DWORD *)uint64_t v104 = 134217984;
            v62[41] = *(void *)(v103 + 16);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, v100, v101, "Updating Refinement action with %ld refinement(s)", v104, 0xCu);
            swift_slowDealloc();
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }

          uint64_t v105 = v62[56];
          uint64_t v106 = v62[52];
          swift_getKeyPath();
          uint64_t v107 = swift_task_alloc();
          *(void *)(v107 + 16) = v105;
          *(void *)(v107 + 24) = v106;
          v62[32] = v105;
          swift_bridgeObjectRetain();
          ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
          v62[77] = 0;
          swift_release();
          swift_bridgeObjectRelease();
          swift_task_dealloc();
          uint64_t v108 = *(void **)(v126 + 16);
          swift_getKeyPath();
          v62[33] = v105;
          id v109 = v108;
          ObservationRegistrar.access<A, B>(_:keyPath:)();
          swift_release();
          if (*(void *)(v105 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__allowedResultOptions) == 1)
          {
            id v110 = [v109 string];
            static String._unconditionallyBridgeFromObjectiveC(_:)();

            id v111 = objc_allocWithZone((Class)NSMutableAttributedString);
            NSString v112 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
            id v113 = [v111 initWithString:v112];

            id v109 = v113;
          }
          uint64_t v114 = *(void **)(v126 + 16);
          *(void *)(v126 + 16) = v109;

          uint64_t v115 = Logger.logObject.getter();
          os_log_type_t v116 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v115, v116))
          {
            uint64_t v117 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v117 = 0;
            _os_log_impl((void *)&_mh_execute_header, v115, v116, "Finishing GES session", v117, 2u);
            swift_slowDealloc();
          }

          uint64_t v86 = (uint64_t)sub_1000782F4;
          uint64_t v87 = 0;
          uint64_t v88 = 0;
          return _swift_task_switch(v86, v87, v88);
        }
        uint64_t v118 = v62[56];
        swift_getKeyPath();
        uint64_t v119 = swift_task_alloc();
        *(void *)(v119 + 16) = v118;
        *(unsigned char *)(v119 + 24) = 1;
        v62[43] = v118;
LABEL_38:
        ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
        swift_release();
        swift_task_dealloc();
        goto LABEL_42;
      }
    }
    __break(1u);
    return _swift_task_switch(v86, v87, v88);
  }
  swift_release();
  sub_10002784C(v8, &qword_1001FB7D0);
  sub_100083FF4();
  swift_allocError();
  *uint64_t v9 = xmmword_10018CBE0;
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v27 = (uint64_t (*)(void))v0[1];
  return v27();
}

uint64_t sub_1000782F4()
{
  *(void *)(v0 + 624) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100078380, v2, v1);
}

uint64_t sub_100078380()
{
  swift_release();
  uint64_t v1 = (void *)sub_100066E8C();
  if (v1)
  {
    uint64_t v2 = v1;
    if ([v1 respondsToSelector:"endTextPlaceholderAndWillInsertText:completion:"])
    {
      uint64_t v3 = v0[72];
      uint64_t v4 = v0[63];
      uint64_t v6 = v0[61];
      uint64_t v5 = v0[62];
      uint64_t v7 = v0[56];
      sub_100089084(v0[64], v4, type metadata accessor for CompositionModel.Session);
      unint64_t v8 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
      unint64_t v9 = (v5 + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v10 = swift_allocObject();
      *(void *)(v10 + 16) = v7;
      sub_1000890EC(v4, v10 + v8, type metadata accessor for CompositionModel.Session);
      *(void *)(v10 + v9) = v3;
      v0[6] = sub_100088C30;
      v0[7] = v10;
      v0[2] = _NSConcreteStackBlock;
      v0[3] = 1107296256;
      v0[4] = sub_100048B2C;
      v0[5] = &unk_1001EC340;
      uint64_t v11 = _Block_copy(v0 + 2);
      swift_retain();
      swift_retain();
      swift_retain();
      [v2 endTextPlaceholderAndWillInsertText:1 completion:v11];
      _Block_release(v11);
      swift_release();
      swift_unknownObjectRelease();
      swift_release();
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
  uint64_t v12 = v0[68];
  uint64_t v13 = v0[67];
  return _swift_task_switch(sub_10007856C, v13, v12);
}

uint64_t sub_10007856C()
{
  uint64_t v44 = v0;
  swift_release();
  *(void *)(v0 + 88) = &type metadata for WritingTools;
  unint64_t v1 = sub_1000268F4();
  *(unsigned char *)(v0 + 64) = 9;
  *(void *)(v0 + 96) = v1;
  char v2 = isFeatureEnabled(_:)();
  sub_100027DBC(v0 + 64);
  if (v2)
  {
    uint64_t v3 = sub_100091378(*(void *)(v0 + 592), *(void *)(v0 + 600));
    if (qword_1001FAC30 != -1) {
      swift_once();
    }
    sub_10000EBE8(*(void *)(v0 + 568), (uint64_t)qword_100212788);
    swift_bridgeObjectRetain_n();
    uint64_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      id v43 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v6 = 136642819;
      swift_bridgeObjectRetain();
      uint64_t v7 = Array.description.getter();
      unint64_t v9 = v8;
      swift_bridgeObjectRelease();
      *(void *)(v0 + 312) = sub_100021444(v7, v9, (uint64_t *)&v43);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "found slots in output: %{sensitive}s", v6, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    int64_t v10 = v3[2];
    uint64_t v11 = _swiftEmptyArrayStorage;
    if (v10)
    {
      uint64_t v42 = v0;
      id v43 = _swiftEmptyArrayStorage;
      sub_1001291C8(0, v10, 0);
      uint64_t v12 = v43;
      unint64_t v13 = v43[2];
      uint64_t v14 = 72 * v13 + 96;
      uint64_t v41 = v3;
      uint64_t v15 = v3 + 5;
      do
      {
        BOOL v16 = v11;
        uint64_t v17 = *(v15 - 1);
        uint64_t v18 = *v15;
        id v43 = v12;
        int64_t v19 = v13 + 1;
        unint64_t v20 = v12[3];
        swift_bridgeObjectRetain();
        if (v13 >= v20 >> 1)
        {
          sub_1001291C8(v20 > 1, v19, 1);
          uint64_t v12 = v43;
        }
        void v12[2] = v19;
        uint64_t v21 = (char *)v12 + v14;
        *((void *)v21 - 8) = v17;
        *((void *)v21 - 7) = v18;
        *((void *)v21 - 6) = 0;
        *((void *)v21 - 5) = 0xE000000000000000;
        *(v21 - 32) = 0;
        *((void *)v21 - 3) = 0;
        *((void *)v21 - 2) = 0xE000000000000000;
        v14 += 72;
        uint64_t v11 = v16;
        *((void *)v21 - 1) = v16;
        v15 += 2;
        ++v13;
        *uint64_t v21 = 0;
        --v10;
      }
      while (v10);
      uint64_t v3 = v41;
      uint64_t v0 = v42;
    }
    else
    {
      uint64_t v12 = _swiftEmptyArrayStorage;
    }
    uint64_t v22 = *(void *)(v0 + 448);
    swift_getKeyPath();
    uint64_t v23 = swift_task_alloc();
    *(void *)(v23 + 16) = v22;
    *(void *)(v23 + 24) = v12;
    *(void *)(v0 + 304) = v22;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    if (v3[2]) {
      sub_10007BA64((uint64_t)v3, *(void *)(v0 + 592), *(void *)(v0 + 600));
    }
    swift_bridgeObjectRelease();
  }
  unint64_t v24 = (void *)v0;
  id v39 = *(id *)(v0 + 608);
  uint64_t v40 = *(void *)(v0 + 512);
  uint64_t v25 = *(void *)(v0 + 448);
  swift_bridgeObjectRelease();
  uint64_t v26 = *(void *)(v25 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel_education);
  swift_getKeyPath();
  uint64_t v27 = swift_task_alloc();
  *(void *)(v27 + 16) = v26;
  *(unsigned char *)(v27 + 24) = 1;
  v24[35] = v26;
  sub_10008868C((unint64_t *)&qword_1001FEED0, (void (*)(uint64_t))type metadata accessor for CompositionEducationModel);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  swift_task_dealloc();
  id v28 = [v39 copy];
  swift_getKeyPath();
  uint64_t v29 = swift_task_alloc();
  *(void *)(v29 + 16) = v25;
  *(void *)(v29 + 24) = v28;
  v24[36] = v25;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();

  swift_task_dealloc();
  id v30 = [v39 string];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v31 = _NSRange.init(_:)();
  uint64_t v33 = v32;
  char v35 = v34;
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  uint64_t v36 = swift_task_alloc();
  *(void *)(v36 + 16) = v25;
  *(void *)(v36 + 24) = v31;
  *(void *)(v36 + 32) = v33;
  *(unsigned char *)(v36 + 40) = v35 & 1;
  v24[37] = v25;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();

  swift_release();
  swift_task_dealloc();
  sub_100083F90(v40);
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v37 = (uint64_t (*)(void))v24[1];
  return v37();
}

void sub_100078C0C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = sub_100066E8C();
  if (v5)
  {
    uint64_t v6 = (void *)v5;
    uint64_t v7 = *a2;
    swift_beginAccess();
    unint64_t v8 = (void *)a2[1];
    id v9 = *(id *)(a3 + 16);
    id v10 = [v8 range];
    [v6 compositionSession:v7 didReceiveText:v9 replacementRange:v10 inContext:v11 finished:1];
    swift_unknownObjectRelease();
  }
}

uint64_t sub_100078CBC(uint64_t a1)
{
  v2[14] = a1;
  v2[15] = v1;
  v2[16] = type metadata accessor for MainActor();
  v2[17] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[18] = v4;
  v2[19] = v3;
  return _swift_task_switch(sub_100078D58, v4, v3);
}

uint64_t sub_100078D58()
{
  id v47 = v0;
  uint64_t v1 = v0;
  if (qword_1001FAC30 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000EBE8(v2, (uint64_t)qword_100212788);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Model requested more info from the user:", v5, 2u);
    swift_slowDealloc();
  }
  uint64_t v6 = v0[14];

  int64_t v7 = *(void *)(v6 + 16);
  unint64_t v8 = _swiftEmptyArrayStorage;
  if (v7)
  {
    uint64_t v42 = v1;
    uint64_t v41 = swift_bridgeObjectRetain();
    id v9 = (unsigned char *)(v41 + 64);
    int64_t v44 = v7;
    do
    {
      uint64_t v10 = *((void *)v9 - 4);
      uint64_t v11 = *((void *)v9 - 3);
      uint64_t v13 = *((void *)v9 - 2);
      uint64_t v12 = *((void *)v9 - 1);
      char v14 = *v9;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      uint64_t v15 = Logger.logObject.getter();
      os_log_type_t v16 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v15, v16))
      {
        uint64_t v17 = swift_slowAlloc();
        uint64_t v46 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v17 = 136315138;
        v42[2] = v10;
        v42[3] = v11;
        v42[4] = v13;
        v42[5] = v12;
        *((unsigned char *)v42 + 48) = v14;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v18 = String.init<A>(describing:)();
        *(void *)(v17 + 4) = sub_100021444(v18, v19, (uint64_t *)&v46);
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v15, v16, "%s", (uint8_t *)v17, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }
      v9 += 40;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
    uint64_t v46 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    int64_t v20 = v44;
    sub_1001291C8(0, v44, 0);
    uint64_t v21 = v46;
    unint64_t v22 = v46[2];
    uint64_t v23 = 72 * v22 + 96;
    unint64_t v24 = (unsigned char *)(v41 + 64);
    do
    {
      int64_t v45 = v20;
      uint64_t v26 = *((void *)v24 - 4);
      uint64_t v25 = *((void *)v24 - 3);
      uint64_t v28 = *((void *)v24 - 2);
      uint64_t v27 = *((void *)v24 - 1);
      char v43 = *v24;
      uint64_t v46 = v21;
      int64_t v29 = v22 + 1;
      unint64_t v30 = v21[3];
      uint64_t v31 = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v21 = v31;
      if (v22 >= v30 >> 1)
      {
        sub_1001291C8(v30 > 1, v29, 1);
        uint64_t v21 = v46;
      }
      v24 += 40;
      id v21[2] = v29;
      uint64_t v32 = (char *)v21 + v23;
      *((void *)v32 - 8) = v26;
      *((void *)v32 - 7) = v25;
      *((void *)v32 - 6) = v28;
      *((void *)v32 - 5) = v27;
      *(v32 - 32) = v43;
      *((void *)v32 - 3) = 0;
      *((void *)v32 - 2) = 0xE000000000000000;
      *((void *)v32 - 1) = _swiftEmptyArrayStorage;
      v23 += 72;
      ++v22;
      unsigned char *v32 = 0;
      int64_t v20 = v45 - 1;
    }
    while (v45 != 1);
    uint64_t v1 = v42;
    unint64_t v8 = v21;
    swift_bridgeObjectRelease();
  }
  uint64_t v33 = v1[15];
  swift_getKeyPath();
  uint64_t v34 = swift_task_alloc();
  *(void *)(v34 + 16) = v33;
  *(void *)(v34 + 24) = v8;
  v1[10] = v33;
  sub_10008868C((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_getKeyPath();
  v1[11] = v33;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (*(void *)(v33 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__analyticsInstance))
  {
    uint64_t v35 = v1[15];
    swift_getKeyPath();
    v1[12] = v35;
    swift_retain();
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    swift_beginAccess();
    uint64_t v36 = swift_bridgeObjectRetain();
    sub_10000B018(v36);
    swift_release();
    swift_bridgeObjectRelease();
  }
  sub_100079714();
  uint64_t v37 = static MainActor.shared.getter();
  v1[20] = v37;
  uint64_t v38 = swift_allocObject();
  v1[21] = v38;
  swift_weakInit();
  id v39 = (void *)swift_task_alloc();
  v1[22] = v39;
  void *v39 = v1;
  v39[1] = sub_1000793A0;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v1 + 13, v37, &protocol witness table for MainActor, 0xD000000000000020, 0x800000010019D990, sub_1000888FC, v38, &_s21RequestedInfoResponseVN);
}

uint64_t sub_1000793A0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 184) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 144);
    uint64_t v4 = *(void *)(v2 + 152);
    uint64_t v5 = sub_10007952C;
  }
  else
  {
    swift_release();
    swift_release();
    uint64_t v3 = *(void *)(v2 + 144);
    uint64_t v4 = *(void *)(v2 + 152);
    uint64_t v5 = sub_1000794C4;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_1000794C4()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_10007952C()
{
  swift_release();
  swift_release();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000795A4(uint64_t a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v3 = sub_10006DAD8(v10);
    uint64_t v5 = v4;
    uint64_t v6 = type metadata accessor for CompositionModel.Session(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6))
    {
      uint64_t v7 = v5 + *(int *)(v6 + 28);
      sub_10002784C(v7, &qword_1001FEC90);
      uint64_t v8 = sub_1000063C0(&qword_1001FEC88);
      uint64_t v9 = *(void *)(v8 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v7, a1, v8);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
    }
    ((void (*)(void *, void))v3)(v10, 0);
    return swift_release();
  }
  return result;
}

uint64_t sub_100079714()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000063C0(&qword_1001FF820);
  __chkstk_darwin(v2 - 8);
  uint64_t v53 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  id v52 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  double v50 = (char *)&v44 - v9;
  uint64_t v51 = v10;
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v44 - v11;
  uint64_t v13 = sub_1000063C0((uint64_t *)&unk_1001FB400);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  os_log_type_t v16 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v44 - v17;
  UUID.init()();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v18, 0, 1, v4);
  swift_getKeyPath();
  uint64_t v54 = v0;
  uint64_t v55 = v18;
  uint64_t v58 = v0;
  sub_10008868C((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  uint64_t v19 = (uint64_t)v18;
  uint64_t v20 = v5;
  sub_10002784C(v19, (uint64_t *)&unk_1001FB400);
  swift_getKeyPath();
  uint64_t v58 = v0;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v21 = v0 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__currentSearchToolQueryID;
  swift_beginAccess();
  sub_100008DD4(v21, (uint64_t)v16, (uint64_t *)&unk_1001FB400);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v16, 1, v4);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v49 = v1;
    uint64_t v46 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
    uint64_t v47 = v5 + 32;
    v46(v12, v16, v4);
    if (qword_1001FAC30 != -1) {
      swift_once();
    }
    uint64_t v23 = type metadata accessor for Logger();
    sub_10000EBE8(v23, (uint64_t)qword_100212788);
    unint64_t v24 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    uint64_t v25 = v50;
    uint64_t v48 = v12;
    int64_t v45 = v24;
    v24(v50, v12, v4);
    uint64_t v26 = Logger.logObject.getter();
    os_log_type_t v27 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = v25;
      int64_t v29 = (uint8_t *)swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      uint64_t v44 = v20;
      uint64_t v57 = v30;
      *(_DWORD *)int64_t v29 = 136315138;
      uint64_t v31 = UUID.uuidString.getter();
      uint64_t v56 = sub_100021444(v31, v32, &v57);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v33 = v44;
      uint64_t v34 = *(void (**)(char *, uint64_t))(v44 + 8);
      v34(v28, v4);
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "starting a new search tool invocation with UUID %s", v29, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v35 = v33;
    }
    else
    {
      uint64_t v34 = *(void (**)(char *, uint64_t))(v20 + 8);
      v34(v25, v4);

      uint64_t v35 = v20;
    }
    uint64_t v37 = v52;
    uint64_t v36 = (uint64_t)v53;
    uint64_t v38 = type metadata accessor for TaskPriority();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v36, 1, 1, v38);
    id v39 = v48;
    v45(v37, v48, v4);
    type metadata accessor for MainActor();
    uint64_t v40 = v49;
    swift_retain();
    uint64_t v41 = static MainActor.shared.getter();
    unint64_t v42 = (*(unsigned __int8 *)(v35 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
    char v43 = (char *)swift_allocObject();
    *((void *)v43 + 2) = v41;
    *((void *)v43 + 3) = &protocol witness table for MainActor;
    *((void *)v43 + 4) = v40;
    v46(&v43[v42], v37, v4);
    sub_1001228D0(v36, (uint64_t)&unk_1001FEE98, (uint64_t)v43);
    swift_release();
    return ((uint64_t (*)(char *, uint64_t))v34)(v39, v4);
  }
  return result;
}

uint64_t sub_100079D34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[34] = a4;
  v5[35] = a5;
  uint64_t v6 = type metadata accessor for UUID();
  v5[36] = v6;
  v5[37] = *(void *)(v6 - 8);
  v5[38] = swift_task_alloc();
  v5[39] = swift_task_alloc();
  v5[40] = sub_1000063C0((uint64_t *)&unk_1001FEE80);
  v5[41] = swift_task_alloc();
  sub_1000063C0((uint64_t *)&unk_1001FB400);
  v5[42] = swift_task_alloc();
  v5[43] = swift_task_alloc();
  v5[44] = swift_task_alloc();
  v5[45] = swift_task_alloc();
  type metadata accessor for MainActor();
  v5[46] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[47] = v8;
  v5[48] = v7;
  return _swift_task_switch(sub_100079EC4, v8, v7);
}

uint64_t sub_100079EC4()
{
  uint64_t v1 = v0[34];
  swift_getKeyPath();
  v0[49] = OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel___observationRegistrar;
  v0[32] = v1;
  v0[50] = sub_10008868C((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v2 = OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__slots;
  v0[51] = OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__slots;
  uint64_t v3 = v1 + v2;
  swift_beginAccess();
  uint64_t v4 = *(void *)(*(void *)v3 + 16);
  v0[52] = v4;
  if (v4)
  {
    uint64_t v5 = OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__currentSearchToolQueryID;
    v0[53] = OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel_userInfoSearcher;
    v0[54] = v5;
    swift_beginAccess();
    unint64_t v6 = 0;
    while (1)
    {
      v0[55] = v6;
      uint64_t v7 = v0[51];
      uint64_t v8 = v0[34];
      swift_getKeyPath();
      v0[28] = v8;
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      uint64_t v9 = *(void *)(v8 + v7);
      if (v6 >= *(void *)(v9 + 16))
      {
        __break(1u);
        goto LABEL_23;
      }
      uint64_t v10 = 9 * v6;
      int v11 = *(unsigned __int8 *)(v9 + 72 * v6 + 64);
      if (v11 != 1 && v11 != 2) {
        break;
      }
      char v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v12) {
        goto LABEL_15;
      }
      unint64_t v6 = v0[55] + 1;
      if (v6 == v0[52]) {
        goto LABEL_8;
      }
    }
    swift_bridgeObjectRelease();
LABEL_15:
    uint64_t v24 = v0[34];
    uint64_t v25 = (void **)(v24 + v0[51]);
    swift_getKeyPath();
    v0[17] = v24;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    v0[18] = v24;
    swift_getKeyPath();
    ObservationRegistrar.willSet<A, B>(_:keyPath:)();
    swift_release();
    swift_beginAccess();
    uint64_t v26 = *v25;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    char *v25 = v26;
    if ((result & 1) == 0)
    {
      uint64_t v34 = v0[51];
      uint64_t v35 = v0[34];
      uint64_t result = (uint64_t)sub_100144158(v26);
      uint64_t v26 = (void *)result;
      *(void *)(v35 + v34) = result;
    }
    if (v6 >= v26[2])
    {
      __break(1u);
    }
    else
    {
      uint64_t v27 = v0[51];
      uint64_t v28 = v0[34];
      LOBYTE(v26[v10 + 12]) = 1;
      swift_endAccess();
      v0[20] = v28;
      swift_getKeyPath();
      ObservationRegistrar.didSet<A, B>(_:keyPath:)();
      swift_release();
      swift_getKeyPath();
      v0[21] = v28;
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      uint64_t result = swift_release();
      uint64_t v29 = *(void *)(v28 + v27);
      if (v6 < *(void *)(v29 + 16))
      {
        uint64_t v30 = v29 + v10 * 8;
        uint64_t v32 = *(void *)(v30 + 48);
        uint64_t v31 = *(void *)(v30 + 56);
        v0[56] = v31;
        swift_bridgeObjectRetain();
        uint64_t v33 = (void *)swift_task_alloc();
        v0[57] = v33;
        *uint64_t v33 = v0;
        v33[1] = sub_10007A4DC;
        return sub_1000AA4AC(v32, v31);
      }
    }
    __break(1u);
    return result;
  }
LABEL_8:
  swift_release();
  if (qword_1001FAC30 != -1) {
LABEL_23:
  }
    swift_once();
  uint64_t v13 = type metadata accessor for Logger();
  sub_10000EBE8(v13, (uint64_t)qword_100212788);
  uint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v14, v15))
  {
    os_log_type_t v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v16 = 0;
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "search tool finished; setting current search tool query ID to nil",
      v16,
      2u);
    swift_slowDealloc();
  }
  uint64_t v17 = v0[42];
  uint64_t v18 = v0[36];
  uint64_t v19 = v0[37];
  uint64_t v20 = v0[34];

  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 56))(v17, 1, 1, v18);
  swift_getKeyPath();
  uint64_t v21 = swift_task_alloc();
  *(void *)(v21 + 16) = v20;
  *(void *)(v21 + 24) = v17;
  v0[19] = v20;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  swift_task_dealloc();
  sub_10002784C(v17, (uint64_t *)&unk_1001FB400);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v22 = (uint64_t (*)(void))v0[1];
  return v22();
}

uint64_t sub_10007A4DC(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(v4 + 464) = a1;
  *(void *)(v4 + 472) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(v3 + 384);
  uint64_t v6 = *(void *)(v3 + 376);
  if (v1) {
    uint64_t v7 = sub_10007B3CC;
  }
  else {
    uint64_t v7 = sub_10007A638;
  }
  return _swift_task_switch(v7, v6, v5);
}

uint64_t sub_10007A638()
{
  uint64_t v94 = v0;
  uint64_t v1 = v0[54];
  uint64_t v2 = v0[45];
  uint64_t v3 = v0[41];
  uint64_t v92 = (void *)v0[40];
  uint64_t v4 = v0[36];
  uint64_t v5 = v0[37];
  uint64_t v6 = v0[34];
  uint64_t v89 = *(void **)(v5 + 16);
  ((void (*)(uint64_t, void, uint64_t))v89)(v2, v0[35], v4);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v5 + 56))(v2, 0, 1, v4);
  swift_getKeyPath();
  v0[22] = v6;
  uint64_t v7 = v6 + v1;
  uint64_t v8 = v0 + 22;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v9 = v3 + *((int *)v92 + 12);
  sub_100008DD4(v2, v3, (uint64_t *)&unk_1001FB400);
  sub_100008DD4(v7, v9, (uint64_t *)&unk_1001FB400);
  uint64_t v10 = (void *)(v5 + 48);
  unint64_t KeyPath = *(void *)(v5 + 48);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))KeyPath)(v3, 1, v4) == 1)
  {
    uint64_t v12 = v0[36];
    sub_10002784C(v0[45], (uint64_t *)&unk_1001FB400);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))KeyPath)(v9, 1, v12) == 1)
    {
      sub_10002784C(v0[41], (uint64_t *)&unk_1001FB400);
      goto LABEL_13;
    }
    goto LABEL_6;
  }
  uint64_t v13 = v0[36];
  sub_100008DD4(v0[41], v0[44], (uint64_t *)&unk_1001FB400);
  int v14 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))KeyPath)(v9, 1, v13);
  uint64_t v15 = v0[44];
  uint64_t v16 = v0[45];
  if (v14 == 1)
  {
    uint64_t v18 = v0[36];
    uint64_t v17 = v0[37];
    sub_10002784C(v0[45], (uint64_t *)&unk_1001FB400);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v18);
LABEL_6:
    sub_10002784C(v0[41], (uint64_t *)&unk_1001FEE80);
LABEL_7:
    swift_bridgeObjectRelease();
    swift_release();
    if (qword_1001FAC30 != -1) {
LABEL_42:
    }
      swift_once();
    uint64_t v19 = v0[38];
    uint64_t v21 = v0[35];
    uint64_t v20 = v0[36];
    uint64_t v22 = type metadata accessor for Logger();
    sub_10000EBE8(v22, (uint64_t)qword_100212788);
    ((void (*)(uint64_t, uint64_t, uint64_t))v89)(v19, v21, v20);
    swift_retain_n();
    uint64_t v23 = Logger.logObject.getter();
    os_log_type_t v24 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v23, v24))
    {
      os_log_type_t v88 = v24;
      log = v23;
      uint64_t v86 = v0[54];
      uint64_t v87 = v0[43];
      uint64_t v26 = v0[37];
      uint64_t v25 = v0[38];
      uint64_t v85 = v0[36];
      uint64_t v27 = v0[34];
      uint64_t v28 = swift_slowAlloc();
      v93[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v28 = 136315394;
      uint64_t v29 = UUID.uuidString.getter();
      v0[23] = sub_100021444(v29, v30, v93);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
      v31(v25, v85);
      *(_WORD *)(v28 + 12) = 2080;
      swift_getKeyPath();
      v0[24] = v27;
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      sub_100008DD4(v27 + v86, v87, (uint64_t *)&unk_1001FB400);
      int v32 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))KeyPath)(v87, 1, v85);
      uint64_t v33 = v0[43];
      if (v32)
      {
        sub_10002784C(v0[43], (uint64_t *)&unk_1001FB400);
        unint64_t v34 = 0xE300000000000000;
        uint64_t v35 = 7104878;
      }
      else
      {
        uint64_t v65 = v0[39];
        uint64_t v66 = v0[36];
        ((void (*)(uint64_t, void, uint64_t))v89)(v65, v0[43], v66);
        sub_10002784C(v33, (uint64_t *)&unk_1001FB400);
        uint64_t v35 = UUID.uuidString.getter();
        unint64_t v34 = v67;
        v31(v65, v66);
      }
      v0[25] = sub_100021444(v35, v34, v93);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, log, v88, "user canceled search tool invocation; returning (query ID is %s, current ID is %s)",
        (uint8_t *)v28,
        0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(void, void))(v0[37] + 8))(v0[38], v0[36]);

      swift_release_n();
    }
    goto LABEL_31;
  }
  os_log_t loga = (os_log_t)v0[41];
  uint64_t v36 = v0[39];
  uint64_t v92 = v10;
  uint64_t v38 = v0[36];
  uint64_t v37 = v0[37];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 32))(v36, v9, v38);
  sub_10008868C(&qword_1001FAF60, (void (*)(uint64_t))&type metadata accessor for UUID);
  char v39 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v40 = *(void (**)(uint64_t, uint64_t))(v37 + 8);
  v40(v36, v38);
  sub_10002784C(v16, (uint64_t *)&unk_1001FB400);
  v40(v15, v38);
  uint64_t v8 = v0 + 22;
  sub_10002784C((uint64_t)loga, (uint64_t *)&unk_1001FB400);
  if ((v39 & 1) == 0) {
    goto LABEL_7;
  }
LABEL_13:
  uint64_t v41 = v0[34];
  uint64_t v42 = v41 + v0[51];
  unint64_t KeyPath = swift_getKeyPath();
  v0[26] = v41;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  v0[27] = v41;
  swift_getKeyPath();
  ObservationRegistrar.willSet<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  char v43 = *(void **)v42;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)uint64_t v42 = v43;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v80 = v0[51];
    uint64_t v81 = v0[34];
    char v43 = sub_100144158(v43);
    *(void *)(v81 + v80) = v43;
  }
  unint64_t v45 = v0[55];
  if (v45 >= v43[2])
  {
    __break(1u);
    goto LABEL_44;
  }
  uint64_t v92 = v8;
  uint64_t v46 = (void *)v0[34];
  uint64_t v47 = (void *)((char *)v46 + v0[51]);
  LOBYTE(v43[9 * v45 + 12]) = 0;
  swift_endAccess();
  v0[29] = v46;
  swift_getKeyPath();
  ObservationRegistrar.didSet<A, B>(_:keyPath:)();
  swift_release();
  swift_getKeyPath();
  v0[30] = v46;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t v42 = (uint64_t)(v8 - 20);
  swift_release();
  v0[31] = v46;
  swift_getKeyPath();
  ObservationRegistrar.willSet<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  unint64_t KeyPath = *v47;
  char v48 = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v47 = KeyPath;
  if ((v48 & 1) == 0)
  {
LABEL_44:
    uint64_t v82 = v0[51];
    uint64_t v46 = (void *)v0[34];
    unint64_t KeyPath = (unint64_t)sub_100144158((void *)KeyPath);
    *(void *)((char *)v46 + v82) = KeyPath;
  }
  unint64_t v49 = v0[55];
  if (v49 >= *(void *)(KeyPath + 16))
  {
    __break(1u);
LABEL_46:
    uint64_t v83 = v0[51];
    uint64_t v84 = v0[34];
    uint64_t v46 = sub_100144158(v46);
    *(void *)(v84 + v83) = v46;
  }
  else
  {
    uint64_t v89 = v92 - 4;
    uint64_t v50 = v0[34];
    *(void *)(KeyPath + 72 * v49 + 88) = v0[58];
    swift_endAccess();
    swift_bridgeObjectRelease();
    v0[33] = v50;
    swift_getKeyPath();
    ObservationRegistrar.didSet<A, B>(_:keyPath:)();
    swift_release();
    while (1)
    {
      unint64_t KeyPath = v0[55] + 1;
      if (KeyPath == v0[52])
      {
        swift_release();
        if (qword_1001FAC30 != -1) {
          goto LABEL_49;
        }
        goto LABEL_26;
      }
      v0[55] = KeyPath;
      uint64_t v52 = v0[51];
      uint64_t v53 = v0[34];
      swift_getKeyPath();
      v0[28] = v53;
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      uint64_t v54 = *(void *)(v53 + v52);
      if (KeyPath >= *(void *)(v54 + 16))
      {
        __break(1u);
        goto LABEL_42;
      }
      uint64_t v42 = 72 * KeyPath;
      int v55 = *(unsigned __int8 *)(v54 + 72 * KeyPath + 64);
      if (v55 != 1 && v55 != 2) {
        break;
      }
      char v51 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v51) {
        goto LABEL_35;
      }
    }
    swift_bridgeObjectRelease();
LABEL_35:
    uint64_t v70 = v0[34];
    os_log_type_t v71 = (void **)(v70 + v0[51]);
    swift_getKeyPath();
    v0[17] = v70;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    v0[18] = v70;
    swift_getKeyPath();
    ObservationRegistrar.willSet<A, B>(_:keyPath:)();
    swift_release();
    swift_beginAccess();
    uint64_t v46 = *v71;
    char v72 = swift_isUniquelyReferenced_nonNull_native();
    *os_log_type_t v71 = v46;
    if ((v72 & 1) == 0) {
      goto LABEL_46;
    }
  }
  if (KeyPath >= v46[2])
  {
    __break(1u);
  }
  else
  {
    uint64_t v73 = v0[51];
    uint64_t v74 = v0[34];
    *((unsigned char *)v46 + v42 + 96) = 1;
    swift_endAccess();
    v0[20] = v74;
    swift_getKeyPath();
    ObservationRegistrar.didSet<A, B>(_:keyPath:)();
    swift_release();
    swift_getKeyPath();
    v0[21] = v74;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v75 = *(void *)(v74 + v73);
    if (KeyPath < *(void *)(v75 + 16))
    {
      uint64_t v76 = v75 + v42;
      uint64_t v77 = *(void *)(v76 + 48);
      uint64_t v78 = *(void *)(v76 + 56);
      v0[56] = v78;
      swift_bridgeObjectRetain();
      uint64_t v79 = (void *)swift_task_alloc();
      v0[57] = v79;
      *uint64_t v79 = v0;
      v79[1] = sub_10007A4DC;
      return sub_1000AA4AC(v77, v78);
    }
  }
  __break(1u);
LABEL_49:
  swift_once();
LABEL_26:
  uint64_t v56 = type metadata accessor for Logger();
  sub_10000EBE8(v56, (uint64_t)qword_100212788);
  uint64_t v57 = Logger.logObject.getter();
  os_log_type_t v58 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v57, v58))
  {
    unint64_t v59 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v59 = 0;
    _os_log_impl((void *)&_mh_execute_header, v57, v58, "search tool finished; setting current search tool query ID to nil",
      v59,
      2u);
    swift_slowDealloc();
  }
  uint64_t v60 = v0[42];
  uint64_t v61 = v0[36];
  uint64_t v62 = v0[37];
  uint64_t v63 = v0[34];

  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v62 + 56))(v60, 1, 1, v61);
  swift_getKeyPath();
  uint64_t v64 = swift_task_alloc();
  *(void *)(v64 + 16) = v63;
  *(void *)(v64 + 24) = v60;
  v0[19] = v63;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  swift_task_dealloc();
  sub_10002784C(v60, (uint64_t *)&unk_1001FB400);
LABEL_31:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v68 = (uint64_t (*)(void))v0[1];
  return v68();
}

uint64_t sub_10007B3CC()
{
  if (qword_1001FAC30 != -1) {
LABEL_26:
  }
    swift_once();
  uint64_t KeyPath = type metadata accessor for Logger();
  sub_10000EBE8(KeyPath, (uint64_t)qword_100212788);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138412290;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v4 + 4) = v6;
    *uint64_t v5 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "failed to get user info: %@", (uint8_t *)v4, 0xCu);
    sub_1000063C0(&qword_1001FED90);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  while (1)
  {
    unint64_t v8 = v0[55] + 1;
    if (v8 == v0[52]) {
      break;
    }
    v0[55] = v8;
    uint64_t v9 = v0[51];
    uint64_t v10 = v0[34];
    swift_getKeyPath();
    v0[28] = v10;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v11 = *(void *)(v10 + v9);
    if (v8 >= *(void *)(v11 + 16))
    {
      __break(1u);
      goto LABEL_26;
    }
    uint64_t v12 = 9 * v8;
    int v13 = *(unsigned __int8 *)(v11 + 72 * v8 + 64);
    if (v13 != 1 && v13 != 2)
    {
      swift_bridgeObjectRelease();
LABEL_18:
      uint64_t v24 = v0[34];
      uint64_t v25 = (void **)(v24 + v0[51]);
      swift_getKeyPath();
      v0[17] = v24;
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      v0[18] = v24;
      uint64_t KeyPath = swift_getKeyPath();
      ObservationRegistrar.willSet<A, B>(_:keyPath:)();
      swift_release();
      swift_beginAccess();
      uint64_t v26 = *v25;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      char *v25 = v26;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t v35 = v0[51];
        uint64_t v36 = v0[34];
        uint64_t v26 = sub_100144158(v26);
        *(void *)(v36 + v35) = v26;
      }
      if (v8 >= v26[2])
      {
        __break(1u);
      }
      else
      {
        uint64_t KeyPath = v0[53];
        uint64_t v28 = v0[51];
        uint64_t v29 = v0[34];
        LOBYTE(v26[v12 + 12]) = 1;
        swift_endAccess();
        v0[20] = v29;
        swift_getKeyPath();
        ObservationRegistrar.didSet<A, B>(_:keyPath:)();
        swift_release();
        swift_getKeyPath();
        v0[21] = v29;
        ObservationRegistrar.access<A, B>(_:keyPath:)();
        swift_release();
        uint64_t v30 = *(void *)(v29 + v28);
        if (v8 < *(void *)(v30 + 16))
        {
          uint64_t v31 = v30 + v12 * 8;
          uint64_t v32 = *(void *)(v31 + 48);
          uint64_t v33 = *(void *)(v31 + 56);
          v0[56] = v33;
          swift_bridgeObjectRetain();
          unint64_t v34 = (void *)swift_task_alloc();
          v0[57] = v34;
          *unint64_t v34 = v0;
          v34[1] = sub_10007A4DC;
          return sub_1000AA4AC(v32, v33);
        }
      }
      __break(1u);
      goto LABEL_29;
    }
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v7) {
      goto LABEL_18;
    }
  }
  swift_release();
  if (qword_1001FAC30 == -1) {
    goto LABEL_12;
  }
LABEL_29:
  swift_once();
LABEL_12:
  sub_10000EBE8(KeyPath, (uint64_t)qword_100212788);
  int v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v16 = 0;
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "search tool finished; setting current search tool query ID to nil",
      v16,
      2u);
    swift_slowDealloc();
  }
  uint64_t v17 = v0[42];
  uint64_t v18 = v0[36];
  uint64_t v19 = v0[37];
  uint64_t v20 = v0[34];

  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 56))(v17, 1, 1, v18);
  swift_getKeyPath();
  uint64_t v21 = swift_task_alloc();
  *(void *)(v21 + 16) = v20;
  *(void *)(v21 + 24) = v17;
  v0[19] = v20;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  swift_task_dealloc();
  sub_10002784C(v17, (uint64_t *)&unk_1001FB400);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v22 = (uint64_t (*)(void))v0[1];
  return v22();
}

uint64_t sub_10007BA64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v61 = a2;
  uint64_t v62 = a3;
  uint64_t v59 = a1;
  uint64_t v5 = sub_1000063C0(&qword_1001FF820);
  __chkstk_darwin(v5 - 8);
  os_log_type_t v58 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v63 = *(void *)(v7 - 8);
  uint64_t v8 = v63;
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v57 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  int v55 = (char *)&v50 - v12;
  uint64_t v56 = v13;
  __chkstk_darwin(v11);
  os_log_type_t v15 = (char *)&v50 - v14;
  uint64_t v16 = sub_1000063C0((uint64_t *)&unk_1001FB400);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  uint64_t v19 = (char *)&v50 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v50 - v20;
  UUID.init()();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v21, 0, 1, v7);
  swift_getKeyPath();
  uint64_t v64 = v4;
  uint64_t v65 = v21;
  uint64_t v68 = v4;
  sub_10008868C((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  sub_10002784C((uint64_t)v21, (uint64_t *)&unk_1001FB400);
  swift_getKeyPath();
  uint64_t v68 = v4;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v60 = v4;
  uint64_t v22 = v4 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__currentSlotQueryRequestID;
  uint64_t v23 = v63;
  swift_beginAccess();
  sub_100008DD4(v22, (uint64_t)v19, (uint64_t *)&unk_1001FB400);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 48))(v19, 1, v7);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
    uint64_t v54 = v23 + 32;
    uint64_t v53 = v25;
    v25(v15, v19, v7);
    uint64_t v26 = v15;
    if (qword_1001FAC30 != -1) {
      swift_once();
    }
    uint64_t v27 = type metadata accessor for Logger();
    sub_10000EBE8(v27, (uint64_t)qword_100212788);
    uint64_t v28 = *(void (**)(char *, char *, uint64_t))(v23 + 16);
    uint64_t v29 = v55;
    v28(v55, v15, v7);
    uint64_t v30 = Logger.logObject.getter();
    os_log_type_t v31 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = swift_slowAlloc();
      uint64_t v50 = v28;
      uint64_t v33 = (uint8_t *)v32;
      uint64_t v67 = swift_slowAlloc();
      char v51 = v15;
      *(_DWORD *)uint64_t v33 = 136315138;
      uint64_t v34 = UUID.uuidString.getter();
      uint64_t v66 = sub_100021444(v34, v35, &v67);
      uint64_t v26 = v51;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v36 = v63;
      uint64_t v37 = *(char **)(v63 + 8);
      uint64_t v52 = (v63 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      int v55 = v37;
      ((void (*)(char *, uint64_t))v37)(v29, v7);
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "starting a new slot query request with UUID %s", v33, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v28 = v50;
      swift_slowDealloc();

      uint64_t v38 = v36;
    }
    else
    {
      char v39 = *(char **)(v23 + 8);
      uint64_t v52 = (v23 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      int v55 = v39;
      ((void (*)(char *, uint64_t))v39)(v29, v7);

      uint64_t v38 = v23;
    }
    uint64_t v40 = type metadata accessor for TaskPriority();
    uint64_t v41 = (uint64_t)v58;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v58, 1, 1, v40);
    uint64_t v42 = v57;
    v28(v57, v26, v7);
    type metadata accessor for MainActor();
    uint64_t v43 = v60;
    swift_retain();
    uint64_t v44 = v26;
    uint64_t v45 = v59;
    swift_bridgeObjectRetain();
    uint64_t v46 = v62;
    swift_bridgeObjectRetain();
    uint64_t v47 = static MainActor.shared.getter();
    unint64_t v48 = (*(unsigned __int8 *)(v38 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
    unint64_t v49 = (char *)swift_allocObject();
    *((void *)v49 + 2) = v47;
    *((void *)v49 + 3) = &protocol witness table for MainActor;
    *((void *)v49 + 4) = v43;
    *((void *)v49 + 5) = v45;
    *((void *)v49 + 6) = v61;
    *((void *)v49 + 7) = v46;
    v53(&v49[v48], v42, v7);
    sub_1001228D0(v41, (uint64_t)&unk_1001FEE78, (uint64_t)v49);
    swift_release();
    return ((uint64_t (*)(char *, uint64_t))v55)(v44, v7);
  }
  return result;
}

uint64_t sub_10007C0F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[26] = a7;
  v8[27] = a8;
  v8[24] = a5;
  v8[25] = a6;
  v8[23] = a4;
  uint64_t v9 = type metadata accessor for UUID();
  v8[28] = v9;
  v8[29] = *(void *)(v9 - 8);
  v8[30] = swift_task_alloc();
  v8[31] = swift_task_alloc();
  v8[32] = sub_1000063C0((uint64_t *)&unk_1001FEE80);
  v8[33] = swift_task_alloc();
  sub_1000063C0((uint64_t *)&unk_1001FB400);
  v8[34] = swift_task_alloc();
  v8[35] = swift_task_alloc();
  v8[36] = swift_task_alloc();
  v8[37] = swift_task_alloc();
  type metadata accessor for MainActor();
  v8[38] = static MainActor.shared.getter();
  uint64_t v11 = dispatch thunk of Actor.unownedExecutor.getter();
  v8[39] = v11;
  v8[40] = v10;
  return _swift_task_switch(sub_10007C28C, v11, v10);
}

uint64_t sub_10007C28C()
{
  uint64_t v1 = v0[23];
  swift_getKeyPath();
  uint64_t v2 = OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel___observationRegistrar;
  v0[20] = v1;
  v0[41] = v2;
  v0[42] = sub_10008868C((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__slotParser);
  v0[43] = v3;
  if (v3)
  {
    swift_retain();
    uint64_t v4 = (void *)swift_task_alloc();
    v0[44] = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_10007C508;
    uint64_t v5 = v0[25];
    uint64_t v6 = v0[26];
    uint64_t v7 = v0[24];
    return sub_10008ECFC(v7, v5, v6);
  }
  else
  {
    swift_release();
    if (qword_1001FAC30 != -1) {
      swift_once();
    }
    uint64_t v9 = type metadata accessor for Logger();
    sub_10000EBE8(v9, (uint64_t)qword_100212788);
    uint64_t v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "slots were found in the response, but slot parser is nil", v12, 2u);
      swift_slowDealloc();
    }

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v13 = (uint64_t (*)(void))v0[1];
    return v13();
  }
}

uint64_t sub_10007C508(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(v4 + 360) = a1;
  *(void *)(v4 + 368) = v1;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v3 + 320);
  uint64_t v6 = *(void *)(v3 + 312);
  if (v1) {
    uint64_t v7 = sub_10007D404;
  }
  else {
    uint64_t v7 = sub_10007C64C;
  }
  return _swift_task_switch(v7, v6, v5);
}

uint64_t sub_10007C64C()
{
  uint64_t v96 = v0;
  uint64_t v1 = v0[37];
  uint64_t v2 = v0[33];
  uint64_t v93 = v0[32];
  uint64_t v3 = v0[28];
  uint64_t v4 = v0[29];
  uint64_t v5 = v0[27];
  uint64_t v6 = v0[23];
  swift_release();
  uint64_t v91 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v91(v1, v5, v3);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v4 + 56))(v1, 0, 1, v3);
  swift_getKeyPath();
  v0[11] = v6;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t KeyPath = v6 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__currentSlotQueryRequestID;
  swift_beginAccess();
  uint64_t v8 = v2 + *(int *)(v93 + 48);
  sub_100008DD4(v1, v2, (uint64_t *)&unk_1001FB400);
  sub_100008DD4(KeyPath, v8, (uint64_t *)&unk_1001FB400);
  unint64_t v9 = *(void *)(v4 + 48);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v9)(v2, 1, v3) == 1)
  {
    uint64_t v10 = v0[28];
    sub_10002784C(v0[37], (uint64_t *)&unk_1001FB400);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v9)(v8, 1, v10) == 1)
    {
      sub_10002784C(v0[33], (uint64_t *)&unk_1001FB400);
LABEL_13:
      if (qword_1001FAC30 != -1) {
        swift_once();
      }
      uint64_t v82 = type metadata accessor for Logger();
      sub_10000EBE8(v82, (uint64_t)qword_100212788);
      swift_bridgeObjectRetain_n();
      uint64_t v42 = Logger.logObject.getter();
      os_log_type_t v43 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v42, v43))
      {
        uint64_t v44 = (uint8_t *)swift_slowAlloc();
        uint64_t v45 = swift_slowAlloc();
        *(_DWORD *)uint64_t v44 = 136642819;
        uint64_t KeyPath = (uint64_t)(v44 + 12);
        v95[0] = v45;
        swift_bridgeObjectRetain();
        uint64_t v46 = Array.description.getter();
        unint64_t v48 = v47;
        swift_bridgeObjectRelease();
        v0[22] = sub_100021444(v46, v48, v95);
        unint64_t v49 = v0 + 23;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v42, v43, "slot queries: %{sensitive}s", v44, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
        unint64_t v49 = v0 + 23;
      }
      uint64_t v50 = v0[45];
      uint64_t v91 = *(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 16);
      if (!v91)
      {
LABEL_37:
        swift_bridgeObjectRelease();
        sub_100079714();
        if (qword_1001FAC30 != -1) {
          swift_once();
        }
        sub_10000EBE8(v82, (uint64_t)qword_100212788);
        uint64_t v67 = Logger.logObject.getter();
        os_log_type_t v68 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v67, v68))
        {
          id v69 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)id v69 = 0;
          _os_log_impl((void *)&_mh_execute_header, v67, v68, "got slot queries; setting current slot query request ID to nil",
            v69,
            2u);
          swift_slowDealloc();
        }
        uint64_t v70 = v0[34];
        uint64_t v71 = v0[28];
        uint64_t v72 = v0[29];
        uint64_t v73 = v0[23];

        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v72 + 56))(v70, 1, 1, v71);
        swift_getKeyPath();
        uint64_t v74 = swift_task_alloc();
        *(void *)(v74 + 16) = v73;
        *(void *)(v74 + 24) = v70;
        v0[16] = v73;
        ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
        swift_release();
        swift_task_dealloc();
        sub_10002784C(v70, (uint64_t *)&unk_1001FB400);
        goto LABEL_44;
      }
      uint64_t v88 = v50 + 32;
      uint64_t v94 = *v49 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__slots;
      swift_beginAccess();
      unint64_t v9 = 0;
      uint64_t v85 = v50;
      uint64_t v83 = v0;
      while (v9 < *(void *)(v50 + 16))
      {
        uint64_t v51 = v0[23];
        uint64_t v52 = (uint64_t *)(v88 + 32 * v9);
        uint64_t v54 = *v52;
        unint64_t v53 = v52[1];
        uint64_t v55 = v52[3];
        uint64_t v92 = v52[2];
        uint64_t KeyPath = swift_getKeyPath();
        v0[17] = v51;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        ObservationRegistrar.access<A, B>(_:keyPath:)();
        swift_release();
        uint64_t v56 = *(void *)v94;
        uint64_t v57 = *(void *)(*(void *)v94 + 16);
        if (v57)
        {
          uint64_t KeyPath = 0;
          unint64_t v58 = 0;
          while (1)
          {
            BOOL v59 = *(void *)(v56 + KeyPath + 32) == v54 && *(void *)(v56 + KeyPath + 40) == v53;
            if (v59 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
              break;
            }
            ++v58;
            KeyPath += 72;
            if (v57 == v58) {
              goto LABEL_31;
            }
          }
          uint64_t v62 = v0[23];
          swift_getKeyPath();
          v0[18] = v62;
          swift_bridgeObjectRetain();
          ObservationRegistrar.access<A, B>(_:keyPath:)();
          swift_release();
          v0[19] = v62;
          swift_getKeyPath();
          ObservationRegistrar.willSet<A, B>(_:keyPath:)();
          swift_release();
          swift_beginAccess();
          uint64_t v63 = *(void **)v94;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *(void *)uint64_t v94 = v63;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            uint64_t v63 = sub_100144158(v63);
            *(void *)uint64_t v94 = v63;
          }
          uint64_t v50 = v85;
          uint64_t v0 = v83;
          if (v58 >= v63[2]) {
            goto LABEL_49;
          }
          uint64_t v65 = v83[23];
          uint64_t v66 = (char *)v63 + KeyPath;
          *((void *)v66 + 6) = v92;
          *((void *)v66 + 7) = v55;
          swift_endAccess();
          swift_bridgeObjectRelease();
          v83[21] = v65;
          swift_getKeyPath();
          ObservationRegistrar.didSet<A, B>(_:keyPath:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
        }
        else
        {
LABEL_31:
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v60 = Logger.logObject.getter();
          os_log_type_t v61 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v60, v61))
          {
            uint64_t KeyPath = swift_slowAlloc();
            v95[0] = swift_slowAlloc();
            *(_DWORD *)uint64_t KeyPath = 136642819;
            swift_bridgeObjectRetain();
            *(void *)(KeyPath + 4) = sub_100021444(v54, v53, v95);
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();
            _os_log_impl((void *)&_mh_execute_header, v60, v61, "got slot query for %{sensitive}s, but no slot found", (uint8_t *)KeyPath, 0xCu);
            swift_arrayDestroy();
            uint64_t v50 = v85;
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {

            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();
          }
        }
        if ((void (*)(uint64_t, uint64_t, uint64_t))++v9 == v91) {
          goto LABEL_37;
        }
      }
      __break(1u);
LABEL_49:
      __break(1u);
      goto LABEL_50;
    }
    goto LABEL_6;
  }
  uint64_t v11 = v0[28];
  sub_100008DD4(v0[33], v0[36], (uint64_t *)&unk_1001FB400);
  unsigned int v12 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v9)(v8, 1, v11);
  uint64_t v13 = v0[36];
  uint64_t v14 = v0[37];
  if (v12 == 1)
  {
    uint64_t v15 = v0[28];
    uint64_t v16 = v0[29];
    sub_10002784C(v0[37], (uint64_t *)&unk_1001FB400);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v13, v15);
LABEL_6:
    sub_10002784C(v0[33], (uint64_t *)&unk_1001FEE80);
    goto LABEL_7;
  }
  uint64_t v90 = v0[33];
  uint64_t v35 = v0[31];
  uint64_t v36 = KeyPath;
  uint64_t v38 = v0[28];
  uint64_t v37 = v0[29];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 32))(v35, v8, v38);
  sub_10008868C(&qword_1001FAF60, (void (*)(uint64_t))&type metadata accessor for UUID);
  char v39 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v40 = *(void (**)(uint64_t, uint64_t))(v37 + 8);
  v40(v35, v38);
  sub_10002784C(v14, (uint64_t *)&unk_1001FB400);
  uint64_t v41 = v38;
  uint64_t KeyPath = v36;
  v40(v13, v41);
  sub_10002784C(v90, (uint64_t *)&unk_1001FB400);
  if (v39) {
    goto LABEL_13;
  }
LABEL_7:
  swift_bridgeObjectRelease();
  if (qword_1001FAC30 != -1) {
LABEL_50:
  }
    swift_once();
  uint64_t v17 = v0[30];
  uint64_t v19 = v0[27];
  uint64_t v18 = v0[28];
  uint64_t v20 = type metadata accessor for Logger();
  sub_10000EBE8(v20, (uint64_t)qword_100212788);
  v91(v17, v19, v18);
  swift_retain_n();
  uint64_t v21 = Logger.logObject.getter();
  os_log_type_t v22 = static os_log_type_t.default.getter();
  if (!os_log_type_enabled(v21, v22))
  {
    (*(void (**)(void, void))(v0[29] + 8))(v0[30], v0[28]);

    swift_release();
    swift_release_n();
    goto LABEL_45;
  }
  os_log_type_t v87 = v22;
  uint64_t v89 = v21;
  uint64_t v84 = KeyPath;
  uint64_t v86 = v0[35];
  uint64_t v24 = v0[29];
  uint64_t v23 = v0[30];
  uint64_t v25 = v0[28];
  uint64_t v26 = v0[23];
  uint64_t v27 = swift_slowAlloc();
  v95[0] = swift_slowAlloc();
  *(_DWORD *)uint64_t v27 = 136315394;
  uint64_t v28 = UUID.uuidString.getter();
  v0[13] = sub_100021444(v28, v29, v95);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  swift_bridgeObjectRelease();
  uint64_t v30 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
  v30(v23, v25);
  *(_WORD *)(v27 + 12) = 2080;
  swift_getKeyPath();
  v0[14] = v26;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  sub_100008DD4(v84, v86, (uint64_t *)&unk_1001FB400);
  unsigned int v31 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v9)(v86, 1, v25);
  uint64_t v32 = v0[35];
  if (v31)
  {
    sub_10002784C(v0[35], (uint64_t *)&unk_1001FB400);
    unint64_t v33 = 0xE300000000000000;
    uint64_t v34 = 7104878;
  }
  else
  {
    uint64_t v75 = v0[31];
    uint64_t v76 = v0[28];
    v91(v75, v0[35], v76);
    sub_10002784C(v32, (uint64_t *)&unk_1001FB400);
    uint64_t v77 = UUID.uuidString.getter();
    uint64_t v78 = v30;
    uint64_t v34 = v77;
    unint64_t v33 = v79;
    v78(v75, v76);
  }
  v0[15] = sub_100021444(v34, v33, v95);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  swift_release_n();
  swift_bridgeObjectRelease();
  _os_log_impl((void *)&_mh_execute_header, v89, v87, "user already ignored or submitted their own input; returning (query ID is %s, current ID is %s)",
    (uint8_t *)v27,
    0x16u);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();

LABEL_44:
  swift_release();
LABEL_45:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v80 = (uint64_t (*)(void))v0[1];
  return v80();
}

uint64_t sub_10007D404()
{
  swift_release();
  uint64_t v1 = &off_1001FA000;
  if (qword_1001FAC30 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000EBE8(v2, (uint64_t)qword_100212788);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v18 = v2;
    uint64_t v6 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 138412290;
    swift_errorRetain();
    uint64_t v7 = _swift_stdlib_bridgeErrorToNSError();
    v0[12] = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v6 = v7;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "error generating slot queries: %@", v5, 0xCu);
    sub_1000063C0(&qword_1001FED90);
    swift_arrayDestroy();
    uint64_t v2 = v18;
    swift_slowDealloc();
    uint64_t v1 = &off_1001FA000;
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  if (v1[390] != (_UNKNOWN *)-1) {
    swift_once();
  }
  sub_10000EBE8(v2, (uint64_t)qword_100212788);
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "got slot queries; setting current slot query request ID to nil",
      v10,
      2u);
    swift_slowDealloc();
  }
  uint64_t v11 = v0[34];
  uint64_t v12 = v0[28];
  uint64_t v13 = v0[29];
  uint64_t v14 = v0[23];

  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
  swift_getKeyPath();
  uint64_t v15 = swift_task_alloc();
  *(void *)(v15 + 16) = v14;
  *(void *)(v15 + 24) = v11;
  v0[16] = v14;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  swift_task_dealloc();
  sub_10002784C(v11, (uint64_t *)&unk_1001FB400);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v16 = (uint64_t (*)(void))v0[1];
  return v16();
}

uint64_t sub_10007D7CC(char a1)
{
  *(void *)(v2 + 96) = v1;
  *(unsigned char *)(v2 + 232) = a1;
  sub_1000063C0(&qword_1001FEC90);
  *(void *)(v2 + 104) = swift_task_alloc();
  uint64_t v3 = sub_1000063C0(&qword_1001FEC88);
  *(void *)(v2 + 112) = v3;
  *(void *)(v2 + 120) = *(void *)(v3 - 8);
  *(void *)(v2 + 128) = swift_task_alloc();
  sub_1000063C0(&qword_1001FB7D0);
  *(void *)(v2 + 136) = swift_task_alloc();
  uint64_t v4 = type metadata accessor for CompositionModel.Session(0);
  *(void *)(v2 + 144) = v4;
  *(void *)(v2 + 152) = *(void *)(v4 - 8);
  *(void *)(v2 + 160) = swift_task_alloc();
  type metadata accessor for MainActor();
  *(void *)(v2 + 168) = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v2 + 176) = v6;
  *(void *)(v2 + 184) = v5;
  return _swift_task_switch(sub_10007D984, v6, v5);
}

uint64_t sub_10007D984()
{
  uint64_t v1 = *(void *)(v0 + 144);
  uint64_t v2 = *(void *)(v0 + 152);
  uint64_t v3 = *(void *)(v0 + 136);
  uint64_t v4 = *(void *)(v0 + 96);
  swift_getKeyPath();
  *(void *)(v0 + 64) = v4;
  *(void *)(v0 + 192) = OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel___observationRegistrar;
  *(void *)(v0 + 200) = sub_10008868C((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v5 = v4 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__session;
  swift_beginAccess();
  sub_100008DD4(v5, v3, &qword_1001FB7D0);
  int v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1);
  uint64_t v7 = *(void *)(v0 + 136);
  if (v6 == 1)
  {
    swift_release();
    sub_10002784C(v7, &qword_1001FB7D0);
    if (qword_1001FAC30 != -1) {
      swift_once();
    }
    uint64_t v8 = type metadata accessor for Logger();
    sub_10000EBE8(v8, (uint64_t)qword_100212788);
    os_log_type_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "no session", v11, 2u);
      swift_slowDealloc();
    }

    sub_100083FF4();
    uint64_t v12 = swift_allocError();
    *uint64_t v13 = xmmword_10018CC00;
    sub_10002FAC0(v12);
    swift_errorRelease();
    goto LABEL_20;
  }
  uint64_t v14 = *(void *)(v0 + 160);
  sub_1000890EC(*(void *)(v0 + 136), v14, type metadata accessor for CompositionModel.Session);
  uint64_t v15 = *(void *)(v14 + 16);
  *(void *)(v0 + 208) = v15;
  if (!v15)
  {
    swift_release();
    if (qword_1001FAC30 != -1) {
      swift_once();
    }
    uint64_t v26 = type metadata accessor for Logger();
    sub_10000EBE8(v26, (uint64_t)qword_100212788);
    uint64_t v27 = Logger.logObject.getter();
    os_log_type_t v28 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v27, v28))
    {
      unint64_t v29 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v29 = 0;
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "no GES session", v29, 2u);
      swift_slowDealloc();
    }
    uint64_t v30 = *(void *)(v0 + 160);

    sub_100083FF4();
    uint64_t v31 = swift_allocError();
    _OWORD *v32 = xmmword_10018CBF0;
    sub_10002FAC0(v31);
    swift_errorRelease();
    uint64_t v25 = v30;
    goto LABEL_19;
  }
  uint64_t v16 = *(void *)(v0 + 112);
  uint64_t v17 = *(void *)(v0 + 120);
  uint64_t v18 = *(void *)(v0 + 104);
  sub_100008DD4(*(void *)(v0 + 160) + *(int *)(*(void *)(v0 + 144) + 28), v18, &qword_1001FEC90);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v18, 1, v16) == 1)
  {
    uint64_t v19 = *(void *)(v0 + 104);
    swift_retain();
    swift_release();
    sub_10002784C(v19, &qword_1001FEC90);
    if (qword_1001FAC30 != -1) {
      swift_once();
    }
    uint64_t v20 = type metadata accessor for Logger();
    sub_10000EBE8(v20, (uint64_t)qword_100212788);
    uint64_t v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v23 = 0;
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "no continuation to call", v23, 2u);
      swift_slowDealloc();
    }
    uint64_t v24 = *(void *)(v0 + 160);
    swift_release();

    uint64_t v25 = v24;
LABEL_19:
    sub_100083F90(v25);
LABEL_20:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v33 = *(uint64_t (**)(void))(v0 + 8);
    return v33();
  }
  (*(void (**)(void, void, void))(*(void *)(v0 + 120) + 32))(*(void *)(v0 + 128), *(void *)(v0 + 104), *(void *)(v0 + 112));
  swift_retain();
  uint64_t v35 = (void *)swift_task_alloc();
  *(void *)(v0 + 216) = v35;
  *uint64_t v35 = v0;
  v35[1] = sub_10007DF1C;
  char v36 = *(unsigned char *)(v0 + 232);
  return sub_100080948(v15, v36);
}

uint64_t sub_10007DF1C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 224) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 184);
  uint64_t v4 = *(void *)(v2 + 176);
  if (v0) {
    uint64_t v5 = sub_10007E1BC;
  }
  else {
    uint64_t v5 = sub_10007E058;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_10007E058()
{
  uint64_t v1 = v0[12];
  swift_release();
  swift_getKeyPath();
  v0[10] = v1;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v2 = (void *)(v1 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__requestedInfoResponse);
  swift_beginAccess();
  v0[11] = *v2;
  swift_bridgeObjectRetain();
  CheckedContinuation.resume(returning:)();
  uint64_t v3 = v0[20];
  uint64_t v5 = v0[15];
  uint64_t v4 = v0[16];
  uint64_t v6 = v0[14];
  sub_10007E2B0(v0[12]);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  sub_100083F90(v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_10007E1BC()
{
  uint64_t v1 = v0[28];
  swift_release();
  v0[9] = v1;
  CheckedContinuation.resume(throwing:)();
  uint64_t v2 = v0[20];
  uint64_t v4 = v0[15];
  uint64_t v3 = v0[16];
  uint64_t v5 = v0[14];
  sub_10007E2B0(v0[12]);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  sub_100083F90(v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_10007E2B0(uint64_t a1)
{
  uint64_t v2 = sub_1000063C0(&qword_1001FEC90);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000063C0(&qword_1001FEC88);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  swift_getKeyPath();
  uint64_t v13 = a1;
  sub_10008868C((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v13 = a1;
  swift_getKeyPath();
  ObservationRegistrar.willSet<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v6 = a1 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__session;
  swift_beginAccess();
  uint64_t v7 = type metadata accessor for CompositionModel.Session(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    sub_100088424((uint64_t)v4, v6 + *(int *)(v7 + 28));
    swift_endAccess();
    uint64_t v13 = a1;
    swift_getKeyPath();
    ObservationRegistrar.didSet<A, B>(_:keyPath:)();
    swift_release();
    swift_getKeyPath();
    uint64_t v13 = a1;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v13 = a1;
    swift_getKeyPath();
    ObservationRegistrar.willSet<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v9 = (void *)(a1 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__requestedInfoResponse);
    swift_beginAccess();
    *uint64_t v9 = &_swiftEmptyDictionarySingleton;
    swift_bridgeObjectRelease();
    uint64_t v12 = a1;
    swift_getKeyPath();
    ObservationRegistrar.didSet<A, B>(_:keyPath:)();
    swift_release();
    swift_getKeyPath();
    uint64_t v12 = a1;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v12 = a1;
    swift_getKeyPath();
    ObservationRegistrar.willSet<A, B>(_:keyPath:)();
    swift_release();
    os_log_type_t v10 = (void *)(a1 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__slots);
    swift_beginAccess();
    void *v10 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRelease();
    v11[1] = a1;
    swift_getKeyPath();
    ObservationRegistrar.didSet<A, B>(_:keyPath:)();
    return swift_release();
  }
  return result;
}

uint64_t sub_10007E628(char a1)
{
  *(void *)(v2 + 544) = v1;
  *(unsigned char *)(v2 + 780) = a1;
  type metadata accessor for JSONEncoder.OutputFormatting();
  *(void *)(v2 + 552) = swift_task_alloc();
  sub_1000063C0(&qword_1001FB7D0);
  *(void *)(v2 + 560) = swift_task_alloc();
  uint64_t v3 = type metadata accessor for CompositionModel.Session(0);
  *(void *)(v2 + 568) = v3;
  *(void *)(v2 + 576) = *(void *)(v3 - 8);
  *(void *)(v2 + 584) = swift_task_alloc();
  type metadata accessor for MainActor();
  *(void *)(v2 + 592) = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v2 + 600) = v4;
  *(void *)(v2 + 608) = v5;
  return _swift_task_switch(sub_10007E7B4, v4, v5);
}

uint64_t sub_10007E7B4()
{
  if (*(unsigned char *)(v0 + 780) == 1)
  {
    uint64_t v1 = *(void *)(v0 + 544);
    swift_release();
    swift_getKeyPath();
    *(void *)(v0 + 480) = v1;
    sub_10008868C((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    *(void *)(v0 + 488) = v1;
    swift_getKeyPath();
    ObservationRegistrar.willSet<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v2 = (void *)(v1 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__requestedInfoResponse);
    swift_beginAccess();
    void *v2 = &_swiftEmptyDictionarySingleton;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 504) = v1;
    swift_getKeyPath();
    ObservationRegistrar.didSet<A, B>(_:keyPath:)();
    swift_release();
    swift_getKeyPath();
    *(void *)(v0 + 512) = v1;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    *(void *)(v0 + 520) = v1;
    swift_getKeyPath();
    ObservationRegistrar.willSet<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__slots);
    swift_beginAccess();
    void *v3 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 536) = v1;
    swift_getKeyPath();
    ObservationRegistrar.didSet<A, B>(_:keyPath:)();
    swift_release();
LABEL_18:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    os_log_type_t v28 = *(uint64_t (**)(void))(v0 + 8);
    return v28();
  }
  uint64_t v4 = *(void *)(v0 + 576);
  uint64_t v5 = *(void *)(v0 + 568);
  uint64_t v6 = *(void *)(v0 + 560);
  uint64_t v7 = *(void *)(v0 + 544);
  swift_getKeyPath();
  *(void *)(v0 + 616) = OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel___observationRegistrar;
  *(void *)(v0 + 528) = v7;
  *(void *)(v0 + 624) = sub_10008868C((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v8 = v7 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__session;
  swift_beginAccess();
  sub_100008DD4(v8, v6, &qword_1001FB7D0);
  int v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v6, 1, v5);
  uint64_t v10 = *(void *)(v0 + 560);
  if (v9 == 1)
  {
    swift_release();
    sub_10002784C(v10, &qword_1001FB7D0);
    if (qword_1001FAC30 != -1) {
      swift_once();
    }
    uint64_t v11 = type metadata accessor for Logger();
    sub_10000EBE8(v11, (uint64_t)qword_100212788);
    uint64_t v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v14 = 0;
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "no session", v14, 2u);
      swift_slowDealloc();
    }

    sub_100083FF4();
    uint64_t v15 = swift_allocError();
    *uint64_t v16 = xmmword_10018CC00;
    sub_10002FAC0(v15);
    swift_errorRelease();
    goto LABEL_18;
  }
  uint64_t v17 = *(void *)(v0 + 584);
  sub_1000890EC(*(void *)(v0 + 560), v17, type metadata accessor for CompositionModel.Session);
  uint64_t v18 = *(void *)(v17 + 16);
  *(void *)(v0 + 632) = v18;
  if (!v18)
  {
    swift_release();
    if (qword_1001FAC30 != -1) {
      swift_once();
    }
    uint64_t v21 = type metadata accessor for Logger();
    sub_10000EBE8(v21, (uint64_t)qword_100212788);
    os_log_type_t v22 = Logger.logObject.getter();
    os_log_type_t v23 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v24 = 0;
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "no GES session", v24, 2u);
      swift_slowDealloc();
    }
    uint64_t v25 = *(void *)(v0 + 584);

    sub_100083FF4();
    uint64_t v26 = swift_allocError();
    *uint64_t v27 = xmmword_10018CBF0;
    sub_10002FAC0(v26);
    swift_errorRelease();
    sub_100083F90(v25);
    goto LABEL_18;
  }
  swift_retain();
  uint64_t v19 = (void *)swift_task_alloc();
  *(void *)(v0 + 640) = v19;
  *uint64_t v19 = v0;
  v19[1] = sub_10007EE34;
  return sub_100080948(v18, 0);
}

uint64_t sub_10007EE34()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 648) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 608);
  uint64_t v4 = *(void *)(v2 + 600);
  if (v0) {
    uint64_t v5 = sub_1000803C8;
  }
  else {
    uint64_t v5 = sub_10007EF9C;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_10007EF9C()
{
  uint64_t v37 = v0;
  uint64_t v1 = *(void *)(v0 + 648);
  uint64_t v2 = *(void *)(v0 + 544);
  swift_getKeyPath();
  uint64_t v3 = swift_task_alloc();
  *(void *)(v3 + 16) = v2;
  *(unsigned char *)(v3 + 24) = 1;
  *(void *)(v0 + 360) = v2;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  swift_task_dealloc();
  uint64_t v4 = sub_100066E8C();
  if (v4)
  {
    uint64_t v5 = (void *)v4;
    id v6 = **(id **)(v0 + 584);
    [v5 writingToolsSession:v6 didReceiveAction:3];

    swift_unknownObjectRelease();
  }
  uint64_t v7 = *(void *)(v0 + 544);
  type metadata accessor for JSONEncoder();
  swift_allocObject();
  *(void *)(v0 + 656) = JSONEncoder.init()();
  static JSONEncoder.OutputFormatting.prettyPrinted.getter();
  dispatch thunk of JSONEncoder.outputFormatting.setter();
  swift_getKeyPath();
  *(void *)(v0 + 352) = v7;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v8 = (void *)(v7 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__requestedInfoResponse);
  swift_beginAccess();
  *(void *)(v0 + 344) = *v8;
  sub_1000445DC();
  swift_bridgeObjectRetain();
  uint64_t v9 = dispatch thunk of JSONEncoder.encode<A>(_:)();
  *(void *)(v0 + 664) = v9;
  *(void *)(v0 + 672) = v10;
  if (v1)
  {
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v11 = *(void *)(v0 + 544);
    swift_getKeyPath();
    *(void *)(v0 + 496) = v11;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    *(void *)(v0 + 464) = v11;
    swift_getKeyPath();
    ObservationRegistrar.willSet<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v12 = (void *)(v11 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__requestedInfoResponse);
    swift_beginAccess();
    void *v12 = &_swiftEmptyDictionarySingleton;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 456) = v11;
    swift_getKeyPath();
    ObservationRegistrar.didSet<A, B>(_:keyPath:)();
    swift_release();
    swift_getKeyPath();
    *(void *)(v0 + 448) = v11;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    *(void *)(v0 + 424) = v11;
    swift_getKeyPath();
    ObservationRegistrar.willSet<A, B>(_:keyPath:)();
    swift_release();
    os_log_type_t v13 = (void *)(v11 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__slots);
    swift_beginAccess();
    *os_log_type_t v13 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 408) = v11;
    swift_getKeyPath();
    ObservationRegistrar.didSet<A, B>(_:keyPath:)();
    swift_release();
    swift_errorRetain();
    sub_10002FAC0(v1);
    swift_errorRelease();
    swift_release();
    swift_errorRelease();
    sub_100083F90(*(void *)(v0 + 584));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
    return v14();
  }
  else
  {
    uint64_t v16 = v9;
    unint64_t v17 = v10;
    uint64_t v35 = (void *)(v0 + 64);
    swift_bridgeObjectRelease();
    switch(v17 >> 62)
    {
      case 1uLL:
        if (v16 >> 32 < (int)v16) {
          __break(1u);
        }
        sub_100044630(v16, v17);
        swift_retain();
        uint64_t v20 = sub_100084E0C((int)v16, v16 >> 32, v17 & 0x3FFFFFFFFFFFFFFFLL, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_100085078);
        uint64_t v21 = v22;
        sub_1000446E8(v16, v17);
        goto LABEL_13;
      case 2uLL:
        uint64_t v23 = *(void *)(v16 + 16);
        uint64_t v24 = *(void *)(v16 + 24);
        sub_100044630(v16, v17);
        swift_retain();
        swift_retain();
        uint64_t v20 = sub_100084E0C(v23, v24, v17 & 0x3FFFFFFFFFFFFFFFLL, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_100085078);
        uint64_t v21 = v25;
        swift_release();
        swift_release();
LABEL_13:
        if (v21) {
          goto LABEL_14;
        }
        *(void *)(v0 + 312) = v16;
        *(void *)(v0 + 320) = v17;
        sub_100044630(v16, v17);
        sub_1000063C0(&qword_1001FCA58);
        if (swift_dynamicCast())
        {
          sub_1000085E4((long long *)(v0 + 104), (uint64_t)v35);
          sub_100044740(v35, *(void *)(v0 + 88));
          if (dispatch thunk of _HasContiguousBytes._providesContiguousBytesNoCopy.getter())
          {
            sub_100044740(v35, *(void *)(v0 + 88));
            dispatch thunk of _HasContiguousBytes.withUnsafeBytes<A>(_:)();
            sub_1000446E8(v16, v17);
            uint64_t v20 = *(void *)(v0 + 328);
            uint64_t v21 = *(void *)(v0 + 336);
            sub_100027DBC((uint64_t)v35);
            goto LABEL_15;
          }
          sub_100027DBC((uint64_t)v35);
        }
        else
        {
          *(void *)(v0 + 136) = 0;
          *(_OWORD *)(v0 + 104) = 0u;
          *(_OWORD *)(v0 + 120) = 0u;
          sub_10002784C(v0 + 104, &qword_1001FEDB0);
        }
        uint64_t v18 = sub_10008432C(v16, v17);
LABEL_9:
        uint64_t v20 = v18;
        uint64_t v21 = v19;
LABEL_14:
        sub_1000446E8(v16, v17);
LABEL_15:
        *(void *)(v0 + 680) = v21;
        if (qword_1001FAC30 != -1) {
          swift_once();
        }
        uint64_t v26 = type metadata accessor for Logger();
        sub_10000EBE8(v26, (uint64_t)qword_100212788);
        swift_bridgeObjectRetain_n();
        uint64_t v27 = Logger.logObject.getter();
        os_log_type_t v28 = static os_log_type_t.default.getter();
        uint64_t v34 = v20;
        if (os_log_type_enabled(v27, v28))
        {
          uint64_t v29 = (uint8_t *)swift_slowAlloc();
          v36[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v29 = 136642819;
          swift_bridgeObjectRetain();
          *(void *)(v0 + 440) = sub_100021444(v20, v21, v36);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          _os_log_impl((void *)&_mh_execute_header, v27, v28, "sending slot filling info to model: %{sensitive}s", v29, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        uint64_t v33 = *(void *)(v0 + 632);
        uint64_t v30 = *(void *)(v0 + 544);
        swift_getKeyPath();
        *(void *)(v0 + 368) = v30;
        ObservationRegistrar.access<A, B>(_:keyPath:)();
        swift_release();
        *(void *)(v0 + 376) = v30;
        swift_getKeyPath();
        ObservationRegistrar.willSet<A, B>(_:keyPath:)();
        swift_release();
        void *v8 = &_swiftEmptyDictionarySingleton;
        swift_bridgeObjectRelease();
        *(void *)(v0 + 384) = v30;
        swift_getKeyPath();
        ObservationRegistrar.didSet<A, B>(_:keyPath:)();
        swift_release();
        swift_getKeyPath();
        *(void *)(v0 + 392) = v30;
        ObservationRegistrar.access<A, B>(_:keyPath:)();
        swift_release();
        *(void *)(v0 + 400) = v30;
        swift_getKeyPath();
        ObservationRegistrar.willSet<A, B>(_:keyPath:)();
        swift_release();
        uint64_t v31 = (void *)(v30 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__slots);
        swift_beginAccess();
        *uint64_t v31 = _swiftEmptyArrayStorage;
        swift_bridgeObjectRelease();
        *(void *)(v0 + 416) = v30;
        swift_getKeyPath();
        ObservationRegistrar.didSet<A, B>(_:keyPath:)();
        swift_release();
        uint64_t v32 = (void *)swift_task_alloc();
        *(void *)(v0 + 688) = v32;
        void *v32 = v0;
        v32[1] = sub_10007FAE8;
        uint64_t result = sub_100086B08(v0 + 16, v33, v34, v21);
        break;
      case 3uLL:
        *(void *)(v0 + 758) = 0;
        *(void *)(v0 + 752) = 0;
        sub_100085078(v36);
        sub_1000446E8(v16, v17);
        uint64_t v20 = v36[0];
        uint64_t v21 = v36[1];
        goto LABEL_15;
      default:
        *(void *)(v0 + 766) = v16;
        *(_WORD *)(v0 + 774) = v17;
        *(unsigned char *)(v0 + 776) = BYTE2(v17);
        *(unsigned char *)(v0 + 777) = BYTE3(v17);
        *(unsigned char *)(v0 + 778) = BYTE4(v17);
        *(unsigned char *)(v0 + 779) = BYTE5(v17);
        uint64_t v18 = static String._fromUTF8Repairing(_:)();
        goto LABEL_9;
    }
  }
  return result;
}

uint64_t sub_10007FAE8()
{
  uint64_t v2 = (void *)*v1;
  uint64_t v3 = (void *)*v1;
  uint64_t v4 = (void *)*v1;
  v3[87] = v0;
  uint64_t v14 = v2[2];
  uint64_t v5 = v2[3];
  v3[88] = v5;
  uint64_t v6 = v2[4];
  v3[89] = v6;
  uint64_t v7 = v2[5];
  v3[90] = v7;
  uint64_t v8 = v2[6];
  uint64_t v9 = v2[7];
  v3[91] = v9;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v0)
  {
    uint64_t v10 = v3[76];
    uint64_t v11 = v3[75];
    return _swift_task_switch(sub_10007FF74, v11, v10);
  }
  else
  {
    uint64_t v12 = (void *)swift_task_alloc();
    v3[92] = v12;
    void *v12 = v4;
    v12[1] = sub_10007FD90;
    return sub_100077084(v14, v5, v6, v7, v8, v9, 0);
  }
}

uint64_t sub_10007FD90()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 744) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v3 = *(void *)(v2 + 608);
  uint64_t v4 = *(void *)(v2 + 600);
  if (v0) {
    uint64_t v5 = sub_100080678;
  }
  else {
    uint64_t v5 = sub_100080244;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_10007FF74()
{
  unint64_t v1 = v0[84];
  uint64_t v2 = v0[83];
  swift_release();
  sub_1000446E8(v2, v1);
  swift_release();
  uint64_t v3 = v0[87];
  uint64_t v4 = v0[68];
  swift_getKeyPath();
  v0[62] = v4;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  v0[58] = v4;
  swift_getKeyPath();
  ObservationRegistrar.willSet<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v5 = (void *)(v4 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__requestedInfoResponse);
  swift_beginAccess();
  *uint64_t v5 = &_swiftEmptyDictionarySingleton;
  swift_bridgeObjectRelease();
  v0[57] = v4;
  swift_getKeyPath();
  ObservationRegistrar.didSet<A, B>(_:keyPath:)();
  swift_release();
  swift_getKeyPath();
  v0[56] = v4;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  v0[53] = v4;
  swift_getKeyPath();
  ObservationRegistrar.willSet<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v6 = (void *)(v4 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__slots);
  swift_beginAccess();
  void *v6 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  v0[51] = v4;
  swift_getKeyPath();
  ObservationRegistrar.didSet<A, B>(_:keyPath:)();
  swift_release();
  swift_errorRetain();
  sub_10002FAC0(v3);
  swift_errorRelease();
  swift_release();
  swift_errorRelease();
  sub_100083F90(v0[73]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_100080244()
{
  uint64_t v5 = v0[83];
  unint64_t v6 = v0[84];
  uint64_t v1 = v0[68];
  swift_release();
  swift_getKeyPath();
  uint64_t v2 = swift_task_alloc();
  *(void *)(v2 + 16) = v1;
  *(unsigned char *)(v2 + 24) = 0;
  v0[54] = v1;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  swift_release();
  swift_release();
  sub_1000446E8(v5, v6);
  swift_task_dealloc();
  sub_100083F90(v0[73]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_1000803C8()
{
  swift_release();
  uint64_t v1 = v0[81];
  uint64_t v2 = v0[68];
  swift_getKeyPath();
  v0[62] = v2;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  v0[58] = v2;
  swift_getKeyPath();
  ObservationRegistrar.willSet<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v3 = (void *)(v2 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__requestedInfoResponse);
  swift_beginAccess();
  void *v3 = &_swiftEmptyDictionarySingleton;
  swift_bridgeObjectRelease();
  v0[57] = v2;
  swift_getKeyPath();
  ObservationRegistrar.didSet<A, B>(_:keyPath:)();
  swift_release();
  swift_getKeyPath();
  v0[56] = v2;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  v0[53] = v2;
  swift_getKeyPath();
  ObservationRegistrar.willSet<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v4 = (void *)(v2 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__slots);
  swift_beginAccess();
  *uint64_t v4 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  v0[51] = v2;
  swift_getKeyPath();
  ObservationRegistrar.didSet<A, B>(_:keyPath:)();
  swift_release();
  swift_errorRetain();
  sub_10002FAC0(v1);
  swift_errorRelease();
  swift_release();
  swift_errorRelease();
  sub_100083F90(v0[73]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_100080678()
{
  unint64_t v1 = v0[84];
  uint64_t v2 = v0[83];
  swift_release();
  sub_1000446E8(v2, v1);
  swift_release();
  uint64_t v3 = v0[93];
  uint64_t v4 = v0[68];
  swift_getKeyPath();
  v0[62] = v4;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  v0[58] = v4;
  swift_getKeyPath();
  ObservationRegistrar.willSet<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v5 = (void *)(v4 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__requestedInfoResponse);
  swift_beginAccess();
  *uint64_t v5 = &_swiftEmptyDictionarySingleton;
  swift_bridgeObjectRelease();
  v0[57] = v4;
  swift_getKeyPath();
  ObservationRegistrar.didSet<A, B>(_:keyPath:)();
  swift_release();
  swift_getKeyPath();
  v0[56] = v4;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  v0[53] = v4;
  swift_getKeyPath();
  ObservationRegistrar.willSet<A, B>(_:keyPath:)();
  swift_release();
  unint64_t v6 = (void *)(v4 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__slots);
  swift_beginAccess();
  void *v6 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  v0[51] = v4;
  swift_getKeyPath();
  ObservationRegistrar.didSet<A, B>(_:keyPath:)();
  swift_release();
  swift_errorRetain();
  sub_10002FAC0(v3);
  swift_errorRelease();
  swift_release();
  swift_errorRelease();
  sub_100083F90(v0[73]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_100080948(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 256) = a2;
  *(void *)(v3 + 184) = a1;
  *(void *)(v3 + 192) = v2;
  sub_1000063C0((uint64_t *)&unk_1001FB400);
  *(void *)(v3 + 200) = swift_task_alloc();
  type metadata accessor for MainActor();
  *(void *)(v3 + 208) = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v3 + 216) = v5;
  *(void *)(v3 + 224) = v4;
  return _swift_task_switch(sub_100080A14, v5, v4);
}

uint64_t sub_100080A14()
{
  unint64_t v1 = (void *)v0;
  if (*(unsigned char *)(v0 + 256) == 1)
  {
    uint64_t v2 = *(void *)(v0 + 192);
    swift_release();
    swift_getKeyPath();
    *(void *)(v0 + 144) = v2;
    sub_10008868C((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    *(void *)(v0 + 152) = v2;
    swift_getKeyPath();
    ObservationRegistrar.willSet<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v3 = (void *)(v2 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__requestedInfoResponse);
    swift_beginAccess();
    void *v3 = &_swiftEmptyDictionarySingleton;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 168) = v2;
    swift_getKeyPath();
    ObservationRegistrar.didSet<A, B>(_:keyPath:)();
    swift_release();
    swift_getKeyPath();
    *(void *)(v0 + 176) = v2;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    swift_retain();
    sub_100139A3C();
    swift_release();
    if (qword_1001FAC30 != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    sub_10000EBE8(v4, (uint64_t)qword_100212788);
    uint64_t v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "user sent requested info; setting current search tool query and slot query request IDs to nil",
        v7,
        2u);
      swift_slowDealloc();
    }
    uint64_t v9 = v1[24];
    uint64_t v8 = v1[25];

    uint64_t v10 = type metadata accessor for UUID();
    uint64_t v26 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
    v26(v8, 1, 1, v10);
    swift_getKeyPath();
    uint64_t v11 = swift_task_alloc();
    *(void *)(v11 + 16) = v9;
    *(void *)(v11 + 24) = v8;
    v1[16] = v9;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    swift_task_dealloc();
    sub_10002784C(v8, (uint64_t *)&unk_1001FB400);
    v26(v8, 1, 1, v10);
    swift_getKeyPath();
    uint64_t v12 = swift_task_alloc();
    *(void *)(v12 + 16) = v9;
    *(void *)(v12 + 24) = v8;
    v1[17] = v9;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    swift_task_dealloc();
    sub_10002784C(v8, (uint64_t *)&unk_1001FB400);
    swift_task_dealloc();
    os_log_type_t v13 = (uint64_t (*)(void))v1[1];
    return v13();
  }
  else
  {
    uint64_t v15 = *(void *)(v0 + 192);
    swift_getKeyPath();
    *(void *)(v0 + 160) = v15;
    sub_10008868C((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v16 = v15 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__slots;
    swift_beginAccess();
    uint64_t v17 = *(void *)(*(void *)v16 + 16);
    if (v17)
    {
      uint64_t v18 = swift_bridgeObjectRetain() + 88;
      do
      {
        uint64_t v19 = v1[24];
        unint64_t v20 = *(void *)(v18 - 48);
        uint64_t v21 = *(void *)(v18 - 8);
        uint64_t v25 = *(void *)(v18 - 16);
        uint64_t v27 = *(void *)(v18 - 56);
        v18 += 72;
        swift_getKeyPath();
        v1[12] = v19;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        ObservationRegistrar.access<A, B>(_:keyPath:)();
        swift_release();
        v1[11] = v19;
        swift_getKeyPath();
        ObservationRegistrar.willSet<A, B>(_:keyPath:)();
        swift_release();
        swift_beginAccess();
        sub_100081740(v25, v21, v27, v20);
        swift_endAccess();
        swift_bridgeObjectRelease();
        v1[13] = v19;
        swift_getKeyPath();
        ObservationRegistrar.didSet<A, B>(_:keyPath:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        --v17;
      }
      while (v17);
      swift_bridgeObjectRelease();
    }
    uint64_t v22 = v1[24];
    swift_getKeyPath();
    v1[14] = v22;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    v1[29] = *(void *)(v22 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__attachmentManager);
    swift_retain();
    uint64_t v23 = (void *)swift_task_alloc();
    v1[30] = v23;
    *uint64_t v23 = v1;
    v23[1] = sub_100081124;
    uint64_t v24 = v1[23];
    return sub_100137850(v24);
  }
}

uint64_t sub_100081124()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 248) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 216);
    uint64_t v4 = *(void *)(v2 + 224);
    uint64_t v5 = sub_100081524;
  }
  else
  {
    swift_release();
    uint64_t v3 = *(void *)(v2 + 216);
    uint64_t v4 = *(void *)(v2 + 224);
    uint64_t v5 = sub_100081240;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_100081240()
{
  swift_release();
  if (qword_1001FAC30 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000EBE8(v1, (uint64_t)qword_100212788);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "user sent requested info; setting current search tool query and slot query request IDs to nil",
      v4,
      2u);
    swift_slowDealloc();
  }
  uint64_t v6 = v0[24];
  uint64_t v5 = v0[25];

  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
  v12(v5, 1, 1, v7);
  swift_getKeyPath();
  uint64_t v8 = swift_task_alloc();
  *(void *)(v8 + 16) = v6;
  *(void *)(v8 + 24) = v5;
  v0[16] = v6;
  sub_10008868C((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  swift_task_dealloc();
  sub_10002784C(v5, (uint64_t *)&unk_1001FB400);
  v12(v5, 1, 1, v7);
  swift_getKeyPath();
  uint64_t v9 = swift_task_alloc();
  *(void *)(v9 + 16) = v6;
  *(void *)(v9 + 24) = v5;
  v0[17] = v6;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  swift_task_dealloc();
  sub_10002784C(v5, (uint64_t *)&unk_1001FB400);
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_100081524()
{
  swift_release();
  swift_release();
  if (qword_1001FAC30 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000EBE8(v1, (uint64_t)qword_100212788);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138412290;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 120) = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v5 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "failed to upload attachments: %@", v4, 0xCu);
    sub_1000063C0(&qword_1001FED90);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  swift_willThrow();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_100081740(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (qword_1001FAC28 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  sub_10000EBE8(v8, (uint64_t)qword_100212770);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315395;
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_100021444(a3, a4, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v11 + 12) = 2085;
    uint64_t v16 = a1;
    uint64_t v17 = a2;
    swift_bridgeObjectRetain();
    uint64_t v12 = String.init<A>(describing:)();
    uint64_t v16 = sub_100021444(v12, v13, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "adding value to requested info response: %s: %{sensitive}s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  uint64_t v18 = &type metadata for String;
  uint64_t v19 = &protocol witness table for String;
  uint64_t v16 = a1;
  uint64_t v17 = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_1000663BC((uint64_t)&v16, a3, a4);
}

uint64_t sub_1000819B4()
{
  swift_getKeyPath();
  sub_10008868C((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__nonSelectedWordCount);
  swift_getKeyPath();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  if (__OFADD__(v1, *(void *)(v0 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__selectedWordCount)))
  {
    __break(1u);
  }
  else
  {
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    return swift_release();
  }
  return result;
}

uint64_t sub_100081B20()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000063C0(&qword_1001FF820);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v10[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for GenerativeAssistantSettingsUserDefaults();
  char v5 = static GenerativeAssistantSettingsUserDefaults.isEnabled()();
  swift_getKeyPath();
  uint64_t v11 = v1;
  char v12 = v5 & 1;
  uint64_t v13 = v1;
  sub_10008868C((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  uint64_t v6 = type metadata accessor for TaskPriority();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v4, 1, 1, v6);
  type metadata accessor for MainActor();
  swift_retain();
  uint64_t v7 = static MainActor.shared.getter();
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = v7;
  v8[3] = &protocol witness table for MainActor;
  v8[4] = v1;
  sub_1001228D0((uint64_t)v4, (uint64_t)&unk_1001FED88, (uint64_t)v8);
  return swift_release();
}

uint64_t sub_100081CF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[3] = a4;
  type metadata accessor for MainActor();
  v4[4] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[5] = v6;
  v4[6] = v5;
  return _swift_task_switch(sub_100081D90, v6, v5);
}

uint64_t sub_100081D90()
{
  uint64_t v1 = v0[3];
  swift_getKeyPath();
  v0[2] = v1;
  sub_10008868C((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  v0[7] = *(void *)(v1 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__rateLimitModel);
  swift_retain();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[8] = v2;
  void *v2 = v0;
  v2[1] = sub_100081EB4;
  return sub_1000BBCB0();
}

uint64_t sub_100081EB4()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 48);
  uint64_t v3 = *(void *)(v1 + 40);
  return _swift_task_switch(sub_100081FF8, v3, v2);
}

uint64_t sub_100081FF8()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100082058()
{
  uint64_t v1 = v0;
  type metadata accessor for Locale();
  __chkstk_darwin();
  type metadata accessor for String.LocalizationValue();
  __chkstk_darwin();
  *(unsigned char *)(v0 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__state) = 0;
  *(unsigned char *)(v0 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__inclusionPolicy) = 0;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  uint64_t v2 = (void *)(v0 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__prompt);
  void *v2 = 0;
  v2[1] = 0xE000000000000000;
  uint64_t v3 = (void *)(v0 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__notice);
  void *v3 = 0;
  v3[1] = 0;
  *(void *)(v0 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__resultAttributedString) = 0;
  uint64_t v4 = v0 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__resultAttributedStringRange;
  *(void *)uint64_t v4 = 0;
  *(void *)(v4 + 8) = 0;
  *(unsigned char *)(v4 + 16) = 1;
  *(void *)(v0 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__inputStringsForFeedback) = &_swiftEmptyArrayStorage;
  *(void *)(v0 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__promptStringsForFeedback) = &_swiftEmptyArrayStorage;
  *(void *)(v0 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__attachments) = &_swiftEmptyArrayStorage;
  *(void *)(v0 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__generatedImages) = &_swiftEmptyArrayStorage;
  uint64_t v5 = (void *)(v0 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__modelInfoString);
  *uint64_t v5 = 0x54504774616843;
  v5[1] = 0xE700000000000000;
  *(void *)(v0 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__analyticsInstance) = 0;
  *(void *)(v0 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__allowedResultOptions) = 0;
  type metadata accessor for AttachmentManager(0);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = &_swiftEmptyArrayStorage;
  *(_OWORD *)(v6 + 24) = 0u;
  *(_OWORD *)(v6 + 40) = 0u;
  *(void *)(v6 + 56) = 0;
  *(void *)(v6 + 64) = &_swiftEmptyArrayStorage;
  swift_retain();
  ObservationRegistrar.init()();
  *(void *)(v0 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__attachmentManager) = v6;
  uint64_t v7 = OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel_education;
  type metadata accessor for CompositionEducationModel();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = 0xD000000000000010;
  *(void *)(v8 + 24) = 0x800000010019DB30;
  ObservationRegistrar.init()();
  id v9 = [objc_allocWithZone((Class)NSUserDefaults) init];
  NSString v10 = String._bridgeToObjectiveC()();
  unsigned __int8 v11 = [v9 BOOLForKey:v10];

  *(unsigned char *)(v8 + 32) = v11;
  *(void *)(v0 + v7) = v8;
  *(void *)(v0 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__refinements) = &_swiftEmptyArrayStorage;
  *(void *)(v0 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__slots) = &_swiftEmptyArrayStorage;
  *(void *)(v0 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__requestedInfoResponse) = sub_100005730((uint64_t)&_swiftEmptyArrayStorage);
  *(void *)(v0 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__slotParser) = 0;
  uint64_t v12 = v0 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__currentSearchToolQueryID;
  uint64_t v13 = type metadata accessor for UUID();
  uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
  v14(v12, 1, 1, v13);
  v14(v12, 1, 1, v13);
  uint64_t v15 = v1 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__currentSlotQueryRequestID;
  v14(v1 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__currentSlotQueryRequestID, 1, 1, v13);
  v14(v15, 1, 1, v13);
  type metadata accessor for GenerativeAssistantSettingsUserDefaults();
  *(unsigned char *)(v1 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__isFeatureEnabled) = static GenerativeAssistantSettingsUserDefaults.isEnabled()() & 1;
  type metadata accessor for CompositionRateLimitModel();
  uint64_t v16 = swift_allocObject();
  *(unsigned char *)(v16 + 16) = 0;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  *(void *)(v16 + 24) = String.init(localized:table:bundle:locale:comment:)();
  *(void *)(v16 + 32) = v17;
  ObservationRegistrar.init()();
  *(void *)(v1 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__rateLimitModel) = v16;
  *(unsigned char *)(v1 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__wantsInlineEditing) = 1;
  *(unsigned char *)(v1 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__isForEditableContent) = 1;
  *(void *)(v1 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__nonInlineSupportResponse) = 0;
  *(unsigned char *)(v1 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__hasGeneratedResponseDrafts) = 0;
  *(void *)(v1 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__activeGeneratedResponseIndex) = 0;
  *(void *)(v1 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__allWordCount) = 0;
  *(void *)(v1 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__selectedWordCount) = 0;
  *(void *)(v1 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__nonSelectedWordCount) = 0;
  uint64_t v18 = v1 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__session;
  uint64_t v19 = type metadata accessor for CompositionModel.Session(0);
  unint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  v20(v18, 1, 1, v19);
  v20(v18, 1, 1, v19);
  uint64_t v21 = OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel_userInfoSearcher;
  type metadata accessor for UserInfoSearcher();
  swift_allocObject();
  *(void *)(v1 + v21) = sub_1000ABEC0();
  ObservationRegistrar.init()();
  swift_release();
  swift_unknownObjectWeakInit();
  *(_OWORD *)(v1 + 56) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(unsigned char *)(v1 + 72) = -1;
  *(void *)(v1 + 80) = 0;
  *(unsigned char *)(v1 + 88) = 0;
  *(void *)(v1 + 96) = 0;
  *(unsigned char *)(v1 + 104) = 0;
  *(void *)(v1 + 112) = 0;
  *(unsigned char *)(v1 + 120) = 0;
  ObservationRegistrar.init()();
  return v1;
}

uint64_t sub_1000825FC()
{
  sub_10002F7E4(v0 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__delegate);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_10002784C(v0 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__currentSearchToolQueryID, (uint64_t *)&unk_1001FB400);
  sub_10002784C(v0 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__currentSlotQueryRequestID, (uint64_t *)&unk_1001FB400);
  swift_release();

  sub_10002784C(v0 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__session, &qword_1001FB7D0);
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel___observationRegistrar;
  uint64_t v2 = type metadata accessor for ObservationRegistrar();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(v1, v2);
}

uint64_t sub_1000827EC()
{
  sub_10002F7E4(v0 + 16);

  swift_bridgeObjectRelease();
  sub_100024DB4(*(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(unsigned char *)(v0 + 72));
  swift_bridgeObjectRelease();
  swift_errorRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC21WritingToolsUIService9ToolModel___observationRegistrar;
  uint64_t v2 = type metadata accessor for ObservationRegistrar();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  sub_10002F7E4(v0 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__delegate);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_10002784C(v0 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__currentSearchToolQueryID, (uint64_t *)&unk_1001FB400);
  sub_10002784C(v0 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__currentSlotQueryRequestID, (uint64_t *)&unk_1001FB400);
  swift_release();

  sub_10002784C(v0 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__session, &qword_1001FB7D0);
  swift_release();
  v3(v0 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel___observationRegistrar, v2);
  return v0;
}

uint64_t sub_100082A3C()
{
  sub_1000827EC();

  return swift_deallocClassInstance();
}

uint64_t sub_100082A94()
{
  return type metadata accessor for CompositionModel(0);
}

uint64_t type metadata accessor for CompositionModel(uint64_t a1)
{
  return sub_10005AFA8(a1, (uint64_t *)&unk_1001FE0C0);
}

void sub_100082ABC()
{
  sub_100082CAC(319, (unint64_t *)&qword_1001FB2C0, (void (*)(uint64_t))&type metadata accessor for UUID);
  if (v0 <= 0x3F)
  {
    sub_100082CAC(319, (unint64_t *)&unk_1001FE130, (void (*)(uint64_t))type metadata accessor for CompositionModel.Session);
    if (v1 <= 0x3F)
    {
      type metadata accessor for ObservationRegistrar();
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

void sub_100082CAC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t type metadata accessor for CompositionModel.Session(uint64_t a1)
{
  return sub_10005AFA8(a1, (uint64_t *)&unk_1001FECF0);
}

unsigned char *initializeBufferWithCopyOfBuffer for RewriteType(unsigned char *result, unsigned char *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for RewritingModel.RewritingState(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for CompositionModel.InclusionPolicy(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100082E88);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_100082EB0(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_100082EB8(unsigned char *result, char a2)
{
  *uint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for CompositionModel.InclusionPolicy()
{
  return &type metadata for CompositionModel.InclusionPolicy;
}

uint64_t getEnumTagSinglePayload for WTUIRootViewType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for CompositionModel.State(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100083030);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

unsigned char *sub_100083058(unsigned char *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for CompositionModel.State()
{
  return &type metadata for CompositionModel.State;
}

char *sub_100083070(char *a1, char **a2, int *a3)
{
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = &v5[(v4 + 16) & ~(unint64_t)v4];
    swift_retain();
  }
  else
  {
    id v9 = a2[1];
    int v8 = a2[2];
    *((void *)a1 + 1) = v9;
    *((void *)a1 + 2) = v8;
    uint64_t v10 = a3[7];
    unsigned __int8 v11 = &a1[v10];
    uint64_t v12 = (char *)a2 + v10;
    uint64_t v13 = v5;
    uint64_t v14 = v9;
    swift_retain();
    uint64_t v15 = sub_1000063C0(&qword_1001FEC88);
    uint64_t v16 = *(void *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v12, 1, v15))
    {
      uint64_t v17 = sub_1000063C0(&qword_1001FEC90);
      memcpy(v11, v12, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v11, v12, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v11, 0, 1, v15);
    }
    uint64_t v18 = a3[8];
    uint64_t v19 = a3[9];
    unint64_t v20 = *(char **)((char *)a2 + v18);
    *(void *)&a1[v18] = v20;
    a1[v19] = *((unsigned char *)a2 + v19);
    id v21 = v20;
  }
  return a1;
}

void sub_100083210(id *a1, uint64_t a2)
{
  swift_release();
  int v4 = (char *)a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_1000063C0(&qword_1001FEC88);
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  }
  BOOL v7 = *(id *)((char *)a1 + *(int *)(a2 + 32));
}

void *sub_1000832F4(void *a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void **)a2;
  BOOL v7 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v7;
  a1[2] = *(void *)(a2 + 16);
  uint64_t v8 = a3[7];
  id v9 = (char *)a1 + v8;
  uint64_t v10 = (const void *)(a2 + v8);
  id v11 = v6;
  id v12 = v7;
  swift_retain();
  uint64_t v13 = sub_1000063C0(&qword_1001FEC88);
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48))(v10, 1, v13))
  {
    uint64_t v15 = sub_1000063C0(&qword_1001FEC90);
    memcpy(v9, v10, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(v14 + 16))(v9, v10, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v9, 0, 1, v13);
  }
  uint64_t v16 = a3[8];
  uint64_t v17 = a3[9];
  uint64_t v18 = *(void **)(a2 + v16);
  *(void *)((char *)a1 + v16) = v18;
  *((unsigned char *)a1 + v17) = *(unsigned char *)(a2 + v17);
  id v19 = v18;
  return a1;
}

uint64_t sub_10008344C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void **)a2;
  BOOL v7 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v8 = v6;

  id v9 = *(void **)(a2 + 8);
  uint64_t v10 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v9;
  id v11 = v9;

  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  uint64_t v12 = a3[7];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  uint64_t v15 = sub_1000063C0(&qword_1001FEC88);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v16 + 24))(v13, v14, v15);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_6;
  }
  if (v19)
  {
LABEL_6:
    uint64_t v20 = sub_1000063C0(&qword_1001FEC90);
    memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v16 + 16))(v13, v14, v15);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
LABEL_7:
  uint64_t v21 = a3[8];
  uint64_t v22 = *(void **)(a1 + v21);
  uint64_t v23 = *(void **)(a2 + v21);
  *(void *)(a1 + v21) = v23;
  id v24 = v23;

  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_100083634(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v6 = a3[7];
  BOOL v7 = (void *)(a1 + v6);
  id v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_1000063C0(&qword_1001FEC88);
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = sub_1000063C0(&qword_1001FEC90);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  *(unsigned char *)(a1 + v12) = *(unsigned char *)(a2 + v12);
  return a1;
}

uint64_t sub_100083778(uint64_t a1, void *a2, int *a3)
{
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *a2;

  BOOL v7 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = a2[1];

  *(void *)(a1 + 16) = a2[2];
  swift_release();
  uint64_t v8 = a3[7];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_1000063C0(&qword_1001FEC88);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    uint64_t v16 = sub_1000063C0(&qword_1001FEC90);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_7:
  uint64_t v17 = a3[8];
  int v18 = *(void **)(a1 + v17);
  *(void *)(a1 + v17) = *(void *)((char *)a2 + v17);

  *(unsigned char *)(a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  return a1;
}

uint64_t sub_10008394C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100083960);
}

uint64_t sub_100083960(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1000063C0(&qword_1001FEC90);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_100083A14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100083A28);
}

void *sub_100083A28(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1000063C0(&qword_1001FEC90);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 28);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_100083AD4()
{
  sub_100083B88();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_100083B88()
{
  if (!qword_1001FED00)
  {
    sub_100006C14(&qword_1001FEC88);
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1001FED00);
    }
  }
}

unint64_t sub_100083BE8()
{
  unint64_t result = qword_1001FED40;
  if (!qword_1001FED40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FED40);
  }
  return result;
}

unint64_t sub_100083C40()
{
  unint64_t result = qword_1002020B0;
  if (!qword_1002020B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002020B0);
  }
  return result;
}

uint64_t sub_100083C94()
{
  return sub_100027F2C((unint64_t *)&unk_1001FED50, &qword_1002020C0);
}

unint64_t sub_100083CD4()
{
  unint64_t result = qword_1001FED60;
  if (!qword_1001FED60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FED60);
  }
  return result;
}

Swift::Int sub_100083D28(void **a1)
{
  int v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    int v2 = (void *)sub_1001736D4(v2);
  }
  uint64_t v3 = v2[2];
  v5[0] = (uint64_t)(v2 + 4);
  v5[1] = v3;
  Swift::Int result = sub_1000843E0(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_100083D9C()
{
  return sub_100069B60(*(void *)(v0 + 16), *(void *)(v0 + 24), &OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__session, &qword_1001FB7D0);
}

uint64_t sub_100083DD0()
{
  return sub_100088904();
}

uint64_t sub_100083DF0()
{
  return sub_1000889D0();
}

uint64_t sub_100083E08@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1000688D0(a1, &OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__inputStringsForFeedback, a2);
}

uint64_t sub_100083E34()
{
  return sub_100069518(*(void *)(v0 + 16), *(void *)(v0 + 24), &OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__inputStringsForFeedback);
}

id sub_100083E58@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_100069EB4(a1, &OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__nonInlineSupportResponse, a2);
}

void sub_100083E84()
{
}

uint64_t sub_100083EAC@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1000688D0(a1, &OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__slots, a2);
}

uint64_t sub_100083EE0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100069948(a1, &OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__currentSearchToolQueryID, a2);
}

uint64_t sub_100083F0C()
{
  return sub_100069B60(*(void *)(v0 + 16), *(void *)(v0 + 24), &OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__currentSearchToolQueryID, (uint64_t *)&unk_1001FB400);
}

uint64_t sub_100083F38@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100069948(a1, &OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__currentSlotQueryRequestID, a2);
}

uint64_t sub_100083F64()
{
  return sub_100069B60(*(void *)(v0 + 16), *(void *)(v0 + 24), &OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__currentSlotQueryRequestID, (uint64_t *)&unk_1001FB400);
}

uint64_t sub_100083F90(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CompositionModel.Session(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_100083FF4()
{
  unint64_t result = qword_1001FED70;
  if (!qword_1001FED70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FED70);
  }
  return result;
}

uint64_t sub_100084048(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100084058()
{
  return swift_release();
}

uint64_t sub_100084060(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_1000063C0(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 24))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000840C4()
{
  return sub_100069518(*(void *)(v0 + 16), *(void *)(v0 + 24), &OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__slots);
}

uint64_t sub_1000840E8()
{
  return sub_100069518(*(void *)(v0 + 16), *(void *)(v0 + 24), &OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__requestedInfoResponse);
}

void sub_100084114()
{
  *(unsigned char *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__isFeatureEnabled) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_10008412C()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10008416C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100027FEC;
  return sub_100081CF8(a1, v4, v5, v6);
}

uint64_t sub_100084228()
{
  *(void *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__rateLimitModel) = *(void *)(v0 + 24);
  swift_retain();
  return swift_release();
}

uint64_t sub_10008426C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_10006D7E0(a1, &OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__nonSelectedWordCount, a2);
}

uint64_t sub_100084298@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_10006D7E0(a1, &OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__selectedWordCount, a2);
}

uint64_t sub_1000842C4@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_10006D7E0(a1, &OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__allWordCount, a2);
}

void sub_1000842F0()
{
  *(void *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__allWordCount) = *(void *)(v0 + 24);
}

void sub_100084304()
{
  *(void *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__selectedWordCount) = *(void *)(v0 + 24);
}

void sub_100084318()
{
  *(void *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__nonSelectedWordCount) = *(void *)(v0 + 24);
}

uint64_t sub_10008432C(uint64_t a1, unint64_t a2)
{
  sub_100044630(a1, a2);
  sub_100084EBC(a1, a2);
  sub_1000446E8(a1, a2);
  uint64_t v4 = static String._fromUTF8Repairing(_:)();
  swift_release();
  return v4;
}

uint64_t sub_1000843A4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = static String._fromUTF8Repairing(_:)();
  *a1 = result;
  a1[1] = v3;
  return result;
}

Swift::Int sub_1000843E0(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  Swift::Int result = _minimumMergeRunLength(_:)(v3);
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_136;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v87 = 0;
      uint64_t v88 = *a1;
      for (uint64_t i = 1; i != v3; ++i)
      {
        uint64_t v90 = *(void *)(v88 + 24 * i);
        uint64_t v91 = v87;
        do
        {
          uint64_t v92 = v88 + v91;
          if (v90 >= *(void *)(v88 + v91)) {
            break;
          }
          if (!v88) {
            goto LABEL_140;
          }
          uint64_t v93 = v88 + v91;
          long long v94 = *(_OWORD *)(v88 + v91 + 32);
          *(_OWORD *)(v88 + v91 + 24) = *(_OWORD *)v92;
          *(void *)(v88 + v91 + 40) = *(void *)(v92 + 16);
          *(void *)uint64_t v93 = v90;
          *(_OWORD *)(v93 + 8) = v94;
          v91 -= 24;
        }
        while (v91 != -24);
        v87 += 24;
      }
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_145;
  }
  Swift::Int v6 = result;
  uint64_t v104 = a1;
  if (v3 < 2)
  {
    uint64_t v9 = _swiftEmptyArrayStorage;
    __dst = (char *)&_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      unint64_t v13 = _swiftEmptyArrayStorage[2];
      uint64_t v12 = (char *)_swiftEmptyArrayStorage;
LABEL_102:
      uint64_t v95 = v12;
      uint64_t v106 = v9;
      if (v13 >= 2)
      {
        uint64_t v96 = *v104;
        do
        {
          unint64_t v97 = v13 - 2;
          if (v13 < 2) {
            goto LABEL_131;
          }
          if (!v96) {
            goto LABEL_144;
          }
          uint64_t v98 = v95;
          uint64_t v99 = *(void *)&v95[16 * v97 + 32];
          uint64_t v100 = *(void *)&v95[16 * v13 + 24];
          sub_100084B00((char *)(v96 + 24 * v99), (char *)(v96 + 24 * *(void *)&v95[16 * v13 + 16]), v96 + 24 * v100, __dst);
          if (v1) {
            break;
          }
          if (v100 < v99) {
            goto LABEL_132;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v98 = sub_10017260C((uint64_t)v98);
          }
          if (v97 >= *((void *)v98 + 2)) {
            goto LABEL_133;
          }
          os_log_type_t v101 = &v98[16 * v97 + 32];
          *(void *)os_log_type_t v101 = v99;
          *((void *)v101 + 1) = v100;
          unint64_t v102 = *((void *)v98 + 2);
          if (v13 > v102) {
            goto LABEL_134;
          }
          memmove(&v98[16 * v13 + 16], &v98[16 * v13 + 32], 16 * (v102 - v13));
          uint64_t v95 = v98;
          *((void *)v98 + 2) = v102 - 1;
          unint64_t v13 = v102 - 1;
        }
        while (v102 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      v106[2] = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v106 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v7 = v5 >> 1;
    sub_1000063C0(&qword_1001FEDF8);
    uint64_t v8 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)(v8 + 16) = v7;
    uint64_t v106 = (void *)v8;
    __dst = (char *)(v8 + 32);
  }
  Swift::Int v10 = 0;
  uint64_t v11 = *a1;
  uint64_t v105 = *a1 + 48;
  uint64_t v103 = *a1 - 24;
  uint64_t v12 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v107 = v6;
  Swift::Int v108 = v3;
  uint64_t v109 = v11;
  while (1)
  {
    Swift::Int v14 = v10++;
    if (v10 < v3)
    {
      uint64_t v15 = *(void *)(v11 + 24 * v10);
      uint64_t v16 = *(void *)(v11 + 24 * v14);
      Swift::Int v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        uint64_t v17 = (uint64_t *)(v105 + 24 * v14);
        uint64_t v18 = v15;
        while (1)
        {
          uint64_t v20 = *v17;
          v17 += 3;
          uint64_t v19 = v20;
          if (v15 < v16 == v20 >= v18) {
            break;
          }
          ++v10;
          uint64_t v18 = v19;
          if (v3 == v10)
          {
            Swift::Int v10 = v3;
            break;
          }
        }
      }
      if (v15 < v16)
      {
        if (v10 < v14) {
          goto LABEL_137;
        }
        if (v14 < v10)
        {
          uint64_t v21 = 24 * v10;
          uint64_t v22 = 24 * v14;
          Swift::Int v23 = v10;
          Swift::Int v24 = v14;
          do
          {
            if (v24 != --v23)
            {
              if (!v11) {
                goto LABEL_143;
              }
              uint64_t v25 = v11 + v22;
              uint64_t v26 = v11 + v21;
              uint64_t v27 = *(void *)(v11 + v22 + 16);
              long long v28 = *(_OWORD *)(v11 + v22);
              uint64_t v29 = *(void *)(v11 + v21 - 8);
              *(_OWORD *)uint64_t v25 = *(_OWORD *)(v11 + v21 - 24);
              *(void *)(v25 + 16) = v29;
              *(_OWORD *)(v26 - 24) = v28;
              *(void *)(v26 - 8) = v27;
            }
            ++v24;
            v21 -= 24;
            v22 += 24;
          }
          while (v24 < v23);
        }
      }
    }
    if (v10 >= v3) {
      goto LABEL_46;
    }
    if (__OFSUB__(v10, v14)) {
      goto LABEL_135;
    }
    if (v10 - v14 >= v6) {
      goto LABEL_46;
    }
    Swift::Int v30 = v14 + v6;
    if (__OFADD__(v14, v6)) {
      goto LABEL_138;
    }
    if (v30 >= v3) {
      Swift::Int v30 = v3;
    }
    if (v30 < v14) {
      break;
    }
    if (v10 != v30)
    {
      uint64_t v31 = v103 + 24 * v10;
      do
      {
        uint64_t v32 = *(void *)(v11 + 24 * v10);
        Swift::Int v33 = v14;
        uint64_t v34 = v31;
        do
        {
          if (v32 >= *(void *)v34) {
            break;
          }
          if (!v11) {
            goto LABEL_141;
          }
          long long v35 = *(_OWORD *)(v34 + 32);
          *(_OWORD *)(v34 + 24) = *(_OWORD *)v34;
          *(void *)(v34 + 40) = *(void *)(v34 + 16);
          *(void *)uint64_t v34 = v32;
          *(_OWORD *)(v34 + 8) = v35;
          v34 -= 24;
          ++v33;
        }
        while (v10 != v33);
        ++v10;
        v31 += 24;
      }
      while (v10 != v30);
      Swift::Int v10 = v30;
    }
LABEL_46:
    if (v10 < v14) {
      goto LABEL_130;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v12 = sub_10017222C(0, *((void *)v12 + 2) + 1, 1, v12);
    }
    unint64_t v37 = *((void *)v12 + 2);
    unint64_t v36 = *((void *)v12 + 3);
    unint64_t v13 = v37 + 1;
    uint64_t v11 = v109;
    if (v37 >= v36 >> 1)
    {
      uint64_t v86 = sub_10017222C((char *)(v36 > 1), v37 + 1, 1, v12);
      uint64_t v11 = v109;
      uint64_t v12 = v86;
    }
    *((void *)v12 + 2) = v13;
    uint64_t v38 = v12 + 32;
    char v39 = &v12[16 * v37 + 32];
    *(void *)char v39 = v14;
    *((void *)v39 + 1) = v10;
    if (v37)
    {
      while (1)
      {
        unint64_t v40 = v13 - 1;
        if (v13 >= 4)
        {
          uint64_t v45 = &v38[16 * v13];
          uint64_t v46 = *((void *)v45 - 8);
          uint64_t v47 = *((void *)v45 - 7);
          BOOL v51 = __OFSUB__(v47, v46);
          uint64_t v48 = v47 - v46;
          if (v51) {
            goto LABEL_119;
          }
          uint64_t v50 = *((void *)v45 - 6);
          uint64_t v49 = *((void *)v45 - 5);
          BOOL v51 = __OFSUB__(v49, v50);
          uint64_t v43 = v49 - v50;
          char v44 = v51;
          if (v51) {
            goto LABEL_120;
          }
          unint64_t v52 = v13 - 2;
          unint64_t v53 = &v38[16 * v13 - 32];
          uint64_t v55 = *(void *)v53;
          uint64_t v54 = *((void *)v53 + 1);
          BOOL v51 = __OFSUB__(v54, v55);
          uint64_t v56 = v54 - v55;
          if (v51) {
            goto LABEL_122;
          }
          BOOL v51 = __OFADD__(v43, v56);
          uint64_t v57 = v43 + v56;
          if (v51) {
            goto LABEL_125;
          }
          if (v57 >= v48)
          {
            uint64_t v75 = &v38[16 * v40];
            uint64_t v77 = *(void *)v75;
            uint64_t v76 = *((void *)v75 + 1);
            BOOL v51 = __OFSUB__(v76, v77);
            uint64_t v78 = v76 - v77;
            if (v51) {
              goto LABEL_129;
            }
            BOOL v68 = v43 < v78;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            uint64_t v69 = *((void *)v12 + 4);
            uint64_t v70 = *((void *)v12 + 5);
            BOOL v51 = __OFSUB__(v70, v69);
            uint64_t v62 = v70 - v69;
            char v63 = v51;
            goto LABEL_77;
          }
          uint64_t v42 = *((void *)v12 + 4);
          uint64_t v41 = *((void *)v12 + 5);
          BOOL v51 = __OFSUB__(v41, v42);
          uint64_t v43 = v41 - v42;
          char v44 = v51;
        }
        if (v44) {
          goto LABEL_121;
        }
        unint64_t v52 = v13 - 2;
        unint64_t v58 = &v38[16 * v13 - 32];
        uint64_t v60 = *(void *)v58;
        uint64_t v59 = *((void *)v58 + 1);
        BOOL v61 = __OFSUB__(v59, v60);
        uint64_t v62 = v59 - v60;
        char v63 = v61;
        if (v61) {
          goto LABEL_124;
        }
        uint64_t v64 = &v38[16 * v40];
        uint64_t v66 = *(void *)v64;
        uint64_t v65 = *((void *)v64 + 1);
        BOOL v51 = __OFSUB__(v65, v66);
        uint64_t v67 = v65 - v66;
        if (v51) {
          goto LABEL_127;
        }
        if (__OFADD__(v62, v67)) {
          goto LABEL_128;
        }
        if (v62 + v67 >= v43)
        {
          BOOL v68 = v43 < v67;
LABEL_83:
          if (v68) {
            unint64_t v40 = v52;
          }
          goto LABEL_85;
        }
LABEL_77:
        if (v63) {
          goto LABEL_123;
        }
        uint64_t v71 = &v38[16 * v40];
        uint64_t v73 = *(void *)v71;
        uint64_t v72 = *((void *)v71 + 1);
        BOOL v51 = __OFSUB__(v72, v73);
        uint64_t v74 = v72 - v73;
        if (v51) {
          goto LABEL_126;
        }
        if (v74 < v62) {
          goto LABEL_15;
        }
LABEL_85:
        unint64_t v79 = v40 - 1;
        if (v40 - 1 >= v13)
        {
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
          goto LABEL_139;
        }
        if (!v11) {
          goto LABEL_142;
        }
        uint64_t v80 = v12;
        uint64_t v81 = &v38[16 * v79];
        uint64_t v82 = *(void *)v81;
        uint64_t v83 = &v38[16 * v40];
        uint64_t v84 = *((void *)v83 + 1);
        sub_100084B00((char *)(v11 + 24 * *(void *)v81), (char *)(v11 + 24 * *(void *)v83), v11 + 24 * v84, __dst);
        if (v1) {
          goto LABEL_93;
        }
        if (v84 < v82) {
          goto LABEL_116;
        }
        if (v40 > *((void *)v80 + 2)) {
          goto LABEL_117;
        }
        *(void *)uint64_t v81 = v82;
        *(void *)&v38[16 * v79 + 8] = v84;
        unint64_t v85 = *((void *)v80 + 2);
        if (v40 >= v85) {
          goto LABEL_118;
        }
        uint64_t v12 = v80;
        unint64_t v13 = v85 - 1;
        memmove(&v38[16 * v40], v83 + 16, 16 * (v85 - 1 - v40));
        *((void *)v80 + 2) = v85 - 1;
        uint64_t v11 = v109;
        if (v85 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v13 = 1;
LABEL_15:
    Swift::Int v6 = v107;
    Swift::Int v3 = v108;
    if (v10 >= v108)
    {
      uint64_t v9 = v106;
      goto LABEL_102;
    }
  }
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  Swift::Int result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100084B00(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  Swift::Int v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = (a2 - __src) / 24;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 24;
  uint64_t v26 = __src;
  uint64_t v25 = __dst;
  if (v9 >= v11)
  {
    if (v10 >= -23)
    {
      if (__dst != a2 || &a2[24 * v11] <= __dst) {
        memmove(__dst, a2, 24 * v11);
      }
      uint64_t v16 = &v4[24 * v11];
      Swift::Int v24 = v16;
      uint64_t v26 = v6;
      if (v7 < v6 && v10 >= 24)
      {
        unint64_t v17 = a3 - 24;
        uint64_t v18 = v6;
        while (1)
        {
          uint64_t v19 = (char *)(v17 + 24);
          uint64_t v20 = *((void *)v18 - 3);
          v18 -= 24;
          if (*((void *)v16 - 3) >= v20)
          {
            Swift::Int v24 = v16 - 24;
            if (v19 < v16 || v17 >= (unint64_t)v16 || v19 != v16)
            {
              long long v22 = *(_OWORD *)(v16 - 24);
              *(void *)(v17 + 16) = *((void *)v16 - 1);
              *(_OWORD *)unint64_t v17 = v22;
            }
            uint64_t v18 = v6;
            v16 -= 24;
            if (v6 <= v7) {
              goto LABEL_38;
            }
          }
          else
          {
            if (v19 != v6 || v17 >= (unint64_t)v6)
            {
              long long v21 = *(_OWORD *)v18;
              *(void *)(v17 + 16) = *((void *)v18 + 2);
              *(_OWORD *)unint64_t v17 = v21;
            }
            uint64_t v26 = v18;
            if (v18 <= v7) {
              goto LABEL_38;
            }
          }
          v17 -= 24;
          Swift::Int v6 = v18;
          if (v16 <= v4) {
            goto LABEL_38;
          }
        }
      }
      goto LABEL_38;
    }
  }
  else if (v8 >= -23)
  {
    if (__dst != __src || &__src[24 * v9] <= __dst) {
      memmove(__dst, __src, 24 * v9);
    }
    uint64_t v12 = &v4[24 * v9];
    Swift::Int v24 = v12;
    if ((unint64_t)v6 < a3 && v8 >= 24)
    {
      do
      {
        if (*(void *)v6 >= *(void *)v4)
        {
          if (v7 != v4)
          {
            long long v15 = *(_OWORD *)v4;
            *((void *)v7 + 2) = *((void *)v4 + 2);
            *(_OWORD *)uint64_t v7 = v15;
          }
          v4 += 24;
          uint64_t v25 = v4;
          unint64_t v13 = v6;
        }
        else
        {
          unint64_t v13 = v6 + 24;
          if (v7 < v6 || v7 >= v13 || v7 != v6)
          {
            long long v14 = *(_OWORD *)v6;
            *((void *)v7 + 2) = *((void *)v6 + 2);
            *(_OWORD *)uint64_t v7 = v14;
          }
        }
        v7 += 24;
        if (v4 >= v12) {
          break;
        }
        Swift::Int v6 = v13;
      }
      while ((unint64_t)v13 < a3);
      uint64_t v26 = v7;
    }
LABEL_38:
    sub_100172328((void **)&v26, (const void **)&v25, &v24);
    return 1;
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void *sub_100084DB8(uint64_t a1, uint64_t a2, void *(*a3)(uint64_t *__return_ptr, uint64_t, uint64_t))
{
  if (a1) {
    uint64_t v4 = a2 - a1;
  }
  else {
    uint64_t v4 = 0;
  }
  uint64_t result = a3(&v6, a1, v4);
  if (!v3) {
    return (void *)v6;
  }
  return result;
}

uint64_t sub_100084E0C(uint64_t a1, uint64_t a2, uint64_t a3, void *(*a4)(uint64_t *__return_ptr, uint64_t, uint64_t))
{
  uint64_t result = __DataStorage._bytes.getter();
  uint64_t v9 = result;
  if (result)
  {
    uint64_t result = __DataStorage._offset.getter();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v9 += a1 - result;
  }
  BOOL v10 = __OFSUB__(a2, a1);
  uint64_t v11 = a2 - a1;
  if (v10)
  {
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v12 = __DataStorage._length.getter();
  if (v12 >= v11) {
    uint64_t v13 = v11;
  }
  else {
    uint64_t v13 = v12;
  }
  uint64_t v14 = v9 + v13;
  if (v9) {
    uint64_t v15 = v14;
  }
  else {
    uint64_t v15 = 0;
  }
  uint64_t result = (uint64_t)sub_100084DB8(v9, v15, a4);
  if (v4) {
    return v16;
  }
  return result;
}

void *sub_100084EBC(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = type metadata accessor for Data.Iterator();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v8 = _swiftEmptyArrayStorage;
  switch(a2 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(a1), a1)) {
        goto LABEL_12;
      }
      uint64_t v9 = HIDWORD(a1) - (int)a1;
LABEL_6:
      if (v9)
      {
        if (v9 >= 1)
        {
          sub_1000063C0(&qword_1001FBC08);
          int64_t v8 = (void *)swift_allocObject();
          size_t v12 = j__malloc_size(v8);
          v8[2] = v9;
          v8[3] = 2 * v12 - 64;
        }
        sub_100044630(a1, a2);
        uint64_t v13 = Data._copyContents(initializing:)();
        sub_1000446E8(a1, a2);
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
        if (v13 != v9)
        {
          __break(1u);
LABEL_12:
          __break(1u);
LABEL_13:
          __break(1u);
          JUMPOUT(0x100085068);
        }
      }
      return v8;
    case 2uLL:
      uint64_t v11 = *(void *)(a1 + 16);
      uint64_t v10 = *(void *)(a1 + 24);
      uint64_t v9 = v10 - v11;
      if (!__OFSUB__(v10, v11)) {
        goto LABEL_6;
      }
      goto LABEL_13;
    case 3uLL:
      return v8;
    default:
      uint64_t v9 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t sub_100085078@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = static String._fromUTF8Repairing(_:)();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_1000850B8()
{
  *(unsigned char *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__state) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_1000850D0(uint64_t a1, uint64_t a2)
{
  v2[17] = a1;
  v2[18] = a2;
  uint64_t v3 = type metadata accessor for String.Encoding();
  v2[19] = v3;
  v2[20] = *(void *)(v3 - 8);
  v2[21] = swift_task_alloc();
  sub_1000063C0(&qword_1001FEDE0);
  v2[22] = swift_task_alloc();
  v2[23] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for PromptCompletion.ImageContent();
  v2[24] = v4;
  v2[25] = *(void *)(v4 - 8);
  v2[26] = swift_task_alloc();
  v2[27] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for PromptCompletion.TextContent();
  v2[28] = v5;
  v2[29] = *(void *)(v5 - 8);
  v2[30] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for PromptCompletion.Content();
  v2[31] = v6;
  v2[32] = *(void *)(v6 - 8);
  v2[33] = swift_task_alloc();
  v2[34] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for PromptCompletion.Segment();
  v2[35] = v7;
  v2[36] = *(void *)(v7 - 8);
  v2[37] = swift_task_alloc();
  v2[38] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for PromptCompletion();
  v2[39] = v8;
  unsigned char v2[40] = *(void *)(v8 - 8);
  v2[41] = swift_task_alloc();
  v2[42] = swift_task_alloc();
  sub_1000063C0(&qword_1001FEDE8);
  v2[43] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for PromptCompletion.Candidate();
  v2[44] = v9;
  v2[45] = *(void *)(v9 - 8);
  v2[46] = swift_task_alloc();
  v2[47] = type metadata accessor for MainActor();
  v2[48] = static MainActor.shared.getter();
  uint64_t v11 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[49] = v11;
  v2[50] = v10;
  return _swift_task_switch(sub_1000854A0, v11, v10);
}

uint64_t sub_1000854A0()
{
  uint64_t v139 = v0;
  uint64_t v1 = PromptCompletion.candidates.getter();
  if (*(void *)(v1 + 16))
  {
    (*(void (**)(void, unint64_t, void))(*(void *)(v0 + 360) + 16))(*(void *)(v0 + 344), v1+ ((*(unsigned __int8 *)(*(void *)(v0 + 360) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0 + 360) + 80)), *(void *)(v0 + 352));
    uint64_t v2 = 0;
  }
  else
  {
    uint64_t v2 = 1;
  }
  uint64_t v3 = *(void *)(v0 + 352);
  uint64_t v4 = *(void *)(v0 + 360);
  uint64_t v5 = *(void *)(v0 + 344);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(v5, v2, 1, v3);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v5, 1, v3) == 1)
  {
    uint64_t v6 = *(void *)(v0 + 344);
    swift_release();
    sub_10002784C(v6, &qword_1001FEDE8);
    sub_100083FF4();
    swift_allocError();
    *uint64_t v7 = 0xD00000000000001CLL;
    v7[1] = 0x800000010019D890;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
    return v8();
  }
  uint64_t v10 = (uint64_t *)(v0 + 120);
  (*(void (**)(void, void, void))(*(void *)(v0 + 360) + 32))(*(void *)(v0 + 368), *(void *)(v0 + 344), *(void *)(v0 + 352));
  uint64_t v11 = PromptCompletion.metadata.getter();
  if (!*(void *)(v11 + 16) || (unint64_t v12 = sub_100007C48(0x73656369746F4ELL, 0xE700000000000000), (v13 & 1) == 0))
  {
    *(_OWORD *)(v0 + 16) = 0u;
    *(_OWORD *)(v0 + 32) = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  sub_100027E0C(*(void *)(v11 + 56) + 32 * v12, v0 + 16);
  swift_bridgeObjectRelease();
  if (!*(void *)(v0 + 40))
  {
LABEL_15:
    sub_10002784C(v0 + 16, &qword_1001FD2E0);
    goto LABEL_16;
  }
  sub_1000063C0(&qword_1001FEE20);
  if (swift_dynamicCast())
  {
    uint64_t v14 = *v10;
    uint64_t v15 = *(void *)(*v10 + 16);
    if (v15)
    {
      swift_bridgeObjectRetain();
      uint64_t v16 = 0;
      unint64_t v17 = _swiftEmptyArrayStorage;
      do
      {
        uint64_t v38 = *(void *)(v14 + 8 * v16 + 32);
        if (*(void *)(v38 + 16))
        {
          swift_bridgeObjectRetain();
          unint64_t v39 = sub_100007C48(0x6567617373656DLL, 0xE700000000000000);
          if (v40)
          {
            uint64_t v41 = (uint64_t *)(*(void *)(v38 + 56) + 16 * v39);
            uint64_t v43 = *v41;
            uint64_t v42 = v41[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              unint64_t v17 = sub_1001435CC(0, v17[2] + 1, 1, v17);
            }
            unint64_t v45 = v17[2];
            unint64_t v44 = v17[3];
            if (v45 >= v44 >> 1) {
              unint64_t v17 = sub_1001435CC((void *)(v44 > 1), v45 + 1, 1, v17);
            }
            v17[2] = v45 + 1;
            uint64_t v46 = &v17[2 * v45];
            v46[4] = v43;
            v46[5] = v42;
          }
          else
          {
            swift_bridgeObjectRelease();
          }
        }
        ++v16;
      }
      while (v15 != v16);
      swift_bridgeObjectRelease();
    }
    else
    {
      unint64_t v17 = _swiftEmptyArrayStorage;
    }
    swift_bridgeObjectRelease();
    *(void *)(v0 + 128) = v17;
    sub_1000063C0(&qword_1001FBE30);
    sub_100027F2C(&qword_1001FEDF0, &qword_1001FBE30);
    uint64_t v18 = BidirectionalCollection<>.joined(separator:)();
    uint64_t v19 = v113;
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
LABEL_16:
  uint64_t v18 = 0;
  uint64_t v19 = 0;
LABEL_17:
  *(void *)(v0 + 408) = v18;
  *(void *)(v0 + 416) = v19;
  if (qword_1001FAC30 != -1) {
    swift_once();
  }
  uint64_t v20 = *(void *)(v0 + 328);
  uint64_t v21 = *(void *)(v0 + 336);
  uint64_t v22 = *(void *)(v0 + 312);
  uint64_t v23 = *(void *)(v0 + 320);
  uint64_t v24 = *(void *)(v0 + 144);
  uint64_t v25 = type metadata accessor for Logger();
  *(void *)(v0 + 424) = sub_10000EBE8(v25, (uint64_t)qword_100212788);
  uint64_t v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16);
  v26(v21, v24, v22);
  v26(v20, v24, v22);
  uint64_t v27 = Logger.logObject.getter();
  os_log_type_t v28 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v27, v28))
  {
    os_log_type_t typea = v28;
    uint64_t v29 = *(void *)(v0 + 336);
    uint64_t v125 = *(void *)(v0 + 328);
    uint64_t v30 = *(void *)(v0 + 312);
    uint64_t v31 = *(void *)(v0 + 320);
    uint64_t v32 = swift_slowAlloc();
    uint64_t v138 = swift_slowAlloc();
    *(_DWORD *)uint64_t v32 = 134218243;
    uint64_t v33 = *(void *)(PromptCompletion.candidates.getter() + 16);
    swift_bridgeObjectRelease();
    uint64_t v34 = *(void (**)(uint64_t, uint64_t))(v31 + 8);
    v34(v29, v30);
    *(void *)(v0 + 104) = v33;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v32 + 12) = 2085;
    PromptCompletion.candidates.getter();
    uint64_t v35 = Array.description.getter();
    unint64_t v37 = v36;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 112) = sub_100021444(v35, v37, &v138);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    v34(v125, v30);
    _os_log_impl((void *)&_mh_execute_header, v27, typea, "%ld candidate(s): %{sensitive}s", (uint8_t *)v32, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v47 = *(void *)(v0 + 328);
    uint64_t v48 = *(void *)(v0 + 312);
    uint64_t v49 = *(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 320) + 8);
    v49(*(void *)(v0 + 336), v48);
    v49(v47, v48);
  }
  uint64_t v50 = PromptCompletion.Candidate.segments.getter();
  uint64_t v51 = *(void *)(v50 + 16);
  if (v51)
  {
    uint64_t v52 = *(void *)(v0 + 288);
    uint64_t v53 = *(void *)(v0 + 256);
    uint64_t v54 = *(void *)(v0 + 232);
    uint64_t v57 = *(void (**)(void, unint64_t, void))(v52 + 16);
    uint64_t v55 = v52 + 16;
    uint64_t v56 = v57;
    unint64_t v58 = v50 + ((*(unsigned __int8 *)(v55 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 64));
    uint64_t v136 = *(void *)(v55 + 56);
    os_log_type_t type = (uint64_t (**)(uint64_t, uint64_t))(v53 + 88);
    int v132 = enum case for PromptCompletion.Content.text(_:);
    os_log_t log = (os_log_t)(v55 - 8);
    uint64_t v121 = (void (**)(void, uint64_t))(v53 + 96);
    id v123 = (void (**)(void, uint64_t))(v53 + 8);
    uint64_t v117 = (void (**)(uint64_t, uint64_t))(v54 + 8);
    uint64_t v119 = (void (**)(uint64_t, uint64_t, uint64_t))(v54 + 32);
    uint64_t v59 = _swiftEmptyArrayStorage;
    uint64_t v126 = v57;
    do
    {
      uint64_t v60 = *(void *)(v0 + 272);
      uint64_t v61 = *(void *)(v0 + 248);
      v56(*(void *)(v0 + 304), v58, *(void *)(v0 + 280));
      PromptCompletion.Segment.content.getter();
      int v62 = (*type)(v60, v61);
      uint64_t v63 = *(void *)(v0 + 304);
      uint64_t v64 = *(void *)(v0 + 272);
      uint64_t v65 = *(void *)(v0 + 280);
      uint64_t v66 = *(void *)(v0 + 248);
      if (v62 == v132)
      {
        uint64_t v67 = v55;
        uint64_t v68 = *(void *)(v0 + 240);
        uint64_t v69 = v59;
        uint64_t v70 = *(void *)(v0 + 224);
        (*v121)(*(void *)(v0 + 272), v66);
        (*v119)(v68, v64, v70);
        uint64_t v71 = PromptCompletion.TextContent.value.getter();
        uint64_t v128 = v72;
        uint64_t v73 = v70;
        uint64_t v59 = v69;
        (*v117)(v68, v73);
        ((void (*)(uint64_t, uint64_t))log->isa)(v63, v65);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v59 = sub_1001435CC(0, v69[2] + 1, 1, v69);
        }
        unint64_t v75 = v59[2];
        unint64_t v74 = v59[3];
        uint64_t v55 = v67;
        uint64_t v56 = v126;
        if (v75 >= v74 >> 1) {
          uint64_t v59 = sub_1001435CC((void *)(v74 > 1), v75 + 1, 1, v59);
        }
        _DWORD v59[2] = v75 + 1;
        uint64_t v76 = &v59[2 * v75];
        v76[4] = v71;
        v76[5] = v128;
      }
      else
      {
        (*v123)(*(void *)(v0 + 272), v66);
        ((void (*)(uint64_t, uint64_t))log->isa)(v63, v65);
      }
      v58 += v136;
      --v51;
    }
    while (v51);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v59 = _swiftEmptyArrayStorage;
  }
  uint64_t v77 = PromptCompletion.Candidate.segments.getter();
  uint64_t v78 = *(void *)(v77 + 16);
  if (v78)
  {
    uint64_t v114 = v59;
    uint64_t v79 = *(void *)(v0 + 288);
    uint64_t v80 = *(void *)(v0 + 256);
    uint64_t v81 = *(void *)(v0 + 200);
    uint64_t v82 = *(void (**)(void, unint64_t, void))(v79 + 16);
    v79 += 16;
    uint64_t v133 = v82;
    unint64_t v83 = v77 + ((*(unsigned __int8 *)(v79 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v79 + 64));
    os_log_t loga = *(os_log_t *)(v79 + 56);
    uint64_t v129 = (uint64_t (**)(uint64_t, uint64_t))(v80 + 88);
    int v127 = enum case for PromptCompletion.Content.image(_:);
    uint64_t v124 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v81 + 56);
    uint64_t v115 = (void (**)(void, void))(v80 + 96);
    os_log_type_t v116 = (void (**)(uint64_t, uint64_t))(v80 + 8);
    uint64_t v137 = (void (**)(uint64_t, uint64_t, uint64_t))(v81 + 32);
    uint64_t v118 = v81;
    uint64_t v120 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v81 + 48);
    uint64_t v122 = (void (**)(uint64_t, uint64_t))(v79 - 8);
    uint64_t v84 = _swiftEmptyArrayStorage;
    do
    {
      unint64_t v85 = (unint64_t)v84;
      uint64_t v86 = *(void *)(v0 + 264);
      uint64_t v87 = *(void *)(v0 + 248);
      v133(*(void *)(v0 + 296), v83, *(void *)(v0 + 280));
      PromptCompletion.Segment.content.getter();
      int v88 = (*v129)(v86, v87);
      uint64_t v89 = *(void *)(v0 + 264);
      uint64_t v90 = *(void *)(v0 + 248);
      uint64_t v91 = *(void *)(v0 + 192);
      uint64_t v92 = *(void *)(v0 + 176);
      if (v88 == v127)
      {
        (*v115)(*(void *)(v0 + 264), *(void *)(v0 + 248));
        (*v137)(v92, v89, v91);
        (*v124)(v92, 0, 1, v91);
      }
      else
      {
        (*v124)(*(void *)(v0 + 176), 1, 1, *(void *)(v0 + 192));
        (*v116)(v89, v90);
      }
      uint64_t v93 = *(void *)(v0 + 296);
      uint64_t v94 = *(void *)(v0 + 280);
      uint64_t v96 = *(void *)(v0 + 184);
      uint64_t v95 = *(void *)(v0 + 192);
      sub_100026FD0(*(void *)(v0 + 176), v96, &qword_1001FEDE0);
      (*v122)(v93, v94);
      if ((*v120)(v96, 1, v95) == 1)
      {
        sub_10002784C(*(void *)(v0 + 184), &qword_1001FEDE0);
        uint64_t v84 = (void *)v85;
      }
      else
      {
        uint64_t v98 = *(void *)(v0 + 208);
        uint64_t v97 = *(void *)(v0 + 216);
        uint64_t v99 = *(void *)(v0 + 192);
        uint64_t v100 = *v137;
        (*v137)(v97, *(void *)(v0 + 184), v99);
        v100(v98, v97, v99);
        uint64_t v84 = (void *)v85;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v84 = (void *)sub_100143598(0, *(void *)(v85 + 16) + 1, 1, v85);
        }
        unint64_t v102 = v84[2];
        unint64_t v101 = v84[3];
        if (v102 >= v101 >> 1) {
          uint64_t v84 = (void *)sub_100143598(v101 > 1, v102 + 1, 1, (unint64_t)v84);
        }
        uint64_t v103 = *(void *)(v0 + 208);
        uint64_t v104 = *(void *)(v0 + 192);
        v84[2] = v102 + 1;
        v100((uint64_t)v84+ ((*(unsigned __int8 *)(v118 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v118 + 80))+ *(void *)(v118 + 72) * v102, v103, v104);
      }
      v83 += (unint64_t)loga;
      --v78;
    }
    while (v78);
    swift_bridgeObjectRelease();
    uint64_t v59 = v114;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v84 = _swiftEmptyArrayStorage;
  }
  *(void *)(v0 + 432) = v84;
  *(void *)(v0 + 80) = v59;
  sub_1000063C0(&qword_1001FBE30);
  sub_100027F2C(&qword_1001FEDF0, &qword_1001FBE30);
  uint64_t v105 = BidirectionalCollection<>.joined(separator:)();
  uint64_t v107 = v106;
  swift_bridgeObjectRelease();
  *(void *)(v0 + 440) = v105;
  *(void *)(v0 + 448) = v107;
  uint64_t v108 = sub_1000063C0(&qword_1001FEDF8);
  uint64_t v109 = static MainActor.shared.getter();
  *(void *)(v0 + 456) = v109;
  uint64_t v110 = swift_task_alloc();
  *(void *)(v0 + 464) = v110;
  *(void *)(v110 + 16) = v84;
  uint64_t v111 = sub_1000063C0(&qword_1001FEE10);
  NSString v112 = (void *)swift_task_alloc();
  *(void *)(v0 + 472) = v112;
  *NSString v112 = v0;
  v112[1] = sub_100086240;
  uint64_t v141 = v111;
  return withThrowingTaskGroup<A, B>(of:returning:isolation:body:)(v0 + 72, v108, v111, v109, &protocol witness table for MainActor, &unk_1001FEE08, v110, v108);
}

uint64_t sub_100086240()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 480) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v3 = *(void *)(v2 + 392);
    uint64_t v4 = *(void *)(v2 + 400);
    uint64_t v5 = sub_1000869C0;
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v3 = *(void *)(v2 + 392);
    uint64_t v4 = *(void *)(v2 + 400);
    uint64_t v5 = sub_1000863D8;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_1000863D8()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 72);
  swift_bridgeObjectRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 134217984;
    *(void *)(v0 + 96) = *(void *)(v1 + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "images: %ld", v4, 0xCu);
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  swift_bridgeObjectRetain();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 134217984;
    *(void *)(v0 + 88) = String.count.getter();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "text: %ld chars", v7, 0xCu);
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  unint64_t v8 = *(void *)(v0 + 448);
  uint64_t v9 = HIBYTE(v8) & 0xF;
  if ((v8 & 0x2000000000000000) == 0) {
    uint64_t v9 = *(void *)(v0 + 440) & 0xFFFFFFFFFFFFLL;
  }
  if (!v9)
  {
    uint64_t v21 = *(void *)(v0 + 360);
    uint64_t v20 = *(void *)(v0 + 368);
    uint64_t v22 = *(void *)(v0 + 352);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100083FF4();
    swift_allocError();
    *uint64_t v23 = 0xD000000000000016;
    v23[1] = 0x800000010019D8E0;
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
    goto LABEL_15;
  }
  uint64_t v11 = *(void *)(v0 + 160);
  uint64_t v10 = *(void *)(v0 + 168);
  uint64_t v12 = *(void *)(v0 + 152);
  type metadata accessor for JSONDecoder();
  swift_allocObject();
  JSONDecoder.init()();
  static String.Encoding.utf8.getter();
  uint64_t v13 = String.data(using:allowLossyConversion:)();
  unint64_t v15 = v14;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  if (v15 >> 60 == 15)
  {
    uint64_t v17 = *(void *)(v0 + 360);
    uint64_t v16 = *(void *)(v0 + 368);
    uint64_t v18 = *(void *)(v0 + 352);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100083FF4();
    swift_allocError();
    *uint64_t v19 = 0xD000000000000025;
    v19[1] = 0x800000010019D8B0;
    swift_willThrow();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
LABEL_15:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v29 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_16;
  }
  uint64_t v24 = *(void *)(v0 + 480);
  sub_1000881C4();
  dispatch thunk of JSONDecoder.decode<A>(_:from:)();
  uint64_t v25 = *(void *)(v0 + 416);
  if (v24)
  {
    uint64_t v26 = *(void *)(v0 + 360);
    uint64_t v27 = *(void *)(v0 + 368);
    uint64_t v28 = *(void *)(v0 + 352);
    sub_100088218(v13, v15);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v27, v28);
    goto LABEL_15;
  }
  uint64_t v34 = *(void *)(v0 + 408);
  uint64_t v31 = *(void *)(v0 + 136);
  (*(void (**)(void, void))(*(void *)(v0 + 360) + 8))(*(void *)(v0 + 368), *(void *)(v0 + 352));
  sub_100088218(v13, v15);
  swift_release();
  uint64_t v32 = *(void *)(v0 + 48);
  long long v33 = *(_OWORD *)(v0 + 56);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  *(void *)uint64_t v31 = v32;
  *(_OWORD *)(v31 + 8) = v33;
  *(void *)(v31 + 24) = v1;
  *(void *)(v31 + 32) = v34;
  *(void *)(v31 + 40) = v25;
  uint64_t v29 = *(uint64_t (**)(void))(v0 + 8);
LABEL_16:
  return v29();
}

uint64_t sub_1000869C0()
{
  uint64_t v2 = v0[45];
  uint64_t v1 = v0[46];
  uint64_t v3 = v0[44];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_100086B08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[21] = a3;
  v4[22] = a4;
  v4[19] = a1;
  v4[20] = a2;
  uint64_t v5 = type metadata accessor for PromptCompletionStream();
  v4[23] = v5;
  v4[24] = *(void *)(v5 - 8);
  v4[25] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for StringResponseSanitizer.DefaultableGuardrails();
  v4[26] = v6;
  v4[27] = *(void *)(v6 - 8);
  v4[28] = swift_task_alloc();
  type metadata accessor for OutputDenyListBundle();
  v4[29] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for StringResponseSanitizer.DefaultableOverrides();
  v4[30] = v7;
  v4[31] = *(void *)(v7 - 8);
  v4[32] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for StringResponseSanitizer();
  v4[33] = v8;
  v4[34] = *(void *)(v8 - 8);
  v4[35] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for StringRenderedPromptSanitizer.DefaultableGuardrails();
  v4[36] = v9;
  v4[37] = *(void *)(v9 - 8);
  v4[38] = swift_task_alloc();
  type metadata accessor for InputDenyListBundle();
  v4[39] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for StringRenderedPromptSanitizer.DefaultableOverrides();
  v4[40] = v10;
  v4[41] = *(void *)(v10 - 8);
  v4[42] = swift_task_alloc();
  uint64_t v11 = type metadata accessor for StringRenderedPromptSanitizer();
  v4[43] = v11;
  v4[44] = *(void *)(v11 - 8);
  v4[45] = swift_task_alloc();
  sub_1000063C0(&qword_1001FEDC0);
  v4[46] = swift_task_alloc();
  v4[47] = swift_task_alloc();
  uint64_t v12 = type metadata accessor for SamplingParameters();
  v4[48] = v12;
  v4[49] = *(void *)(v12 - 8);
  v4[50] = swift_task_alloc();
  uint64_t v13 = sub_1000063C0(&qword_1001FEDC8);
  v4[51] = v13;
  v4[52] = *(void *)(v13 - 8);
  v4[53] = swift_task_alloc();
  uint64_t v14 = type metadata accessor for PromptCompletion();
  v4[54] = v14;
  v4[55] = *(void *)(v14 - 8);
  v4[56] = swift_task_alloc();
  v4[57] = swift_task_alloc();
  type metadata accessor for MainActor();
  v4[58] = static MainActor.shared.getter();
  uint64_t v16 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[59] = v16;
  v4[60] = v15;
  return _swift_task_switch(sub_100086FE8, v16, v15);
}

uint64_t sub_100086FE8()
{
  uint64_t v45 = v0[53];
  uint64_t v1 = v0[50];
  uint64_t v51 = v0[51];
  uint64_t v52 = v0[52];
  uint64_t v2 = v0[47];
  uint64_t v49 = v0[49];
  uint64_t v50 = v0[48];
  uint64_t v3 = v0[46];
  uint64_t v33 = v0[45];
  uint64_t v4 = v0[42];
  uint64_t v47 = v0[44];
  uint64_t v48 = v0[43];
  uint64_t v5 = v0[41];
  uint64_t v29 = v0[40];
  uint64_t v30 = v0[38];
  uint64_t v31 = v0[37];
  uint64_t v32 = v0[36];
  uint64_t v41 = v0[35];
  uint64_t v44 = v0[34];
  uint64_t v46 = v0[33];
  uint64_t v36 = v0[31];
  uint64_t v37 = v0[30];
  uint64_t v34 = v0[32];
  uint64_t v38 = v0[28];
  uint64_t v39 = v0[27];
  uint64_t v40 = v0[26];
  uint64_t v43 = v0[22];
  uint64_t v42 = v0[21];
  uint64_t v6 = type metadata accessor for SamplingStrategy();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v2, 1, 1, v6);
  sub_100008DD4(v2, v3, &qword_1001FEDC0);
  uint64_t v35 = v1;
  SamplingParameters.init(strategy:temperature:frequencyPenalty:lengthPenalty:maximumTokens:stopSequences:randomSeed:timeout:)();
  SamplingParameters.promptLookupDraftSteps.setter();
  SamplingParameters.speculativeSampling.setter();
  SamplingParameters.tokenHealing.setter();
  sub_10002784C(v2, &qword_1001FEDC0);
  static Catalog.Resource.TokenInputDenyList.WritingToolsComposeInputDenyList()();
  uint64_t v7 = v0[11];
  uint64_t v8 = sub_100044740(v0 + 8, v7);
  uint64_t v9 = *(void *)(v7 - 8);
  uint64_t v10 = swift_task_alloc();
  (*(void (**)(uint64_t, void *, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 16))(v10, v8, v7, v11, v12, v13);
  InputDenyListBundle.init<A>(resource:)();
  swift_task_dealloc();
  StringRenderedPromptSanitizer.Overrides.init(denyList:)();
  sub_100027DBC((uint64_t)(v0 + 8));
  uint64_t v14 = type metadata accessor for StringRenderedPromptSanitizer.Overrides();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v4, 0, 1, v14);
  (*(void (**)(uint64_t, void, uint64_t))(v5 + 104))(v4, enum case for StringRenderedPromptSanitizer.DefaultableOverrides.withoutDefault(_:), v29);
  uint64_t v15 = type metadata accessor for StringRenderedPromptSanitizer.Guardrails();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v30, 1, 1, v15);
  (*(void (**)(uint64_t, void, uint64_t))(v31 + 104))(v30, enum case for StringRenderedPromptSanitizer.DefaultableGuardrails.withoutDefault(_:), v32);
  StringRenderedPromptSanitizer.init(overrides:guardrails:)();
  static Catalog.Resource.TokenOutputDenyList.WritingToolsComposeOutputDenyList()();
  uint64_t v16 = v0[16];
  uint64_t v17 = sub_100044740(v0 + 13, v16);
  uint64_t v18 = *(void *)(v16 - 8);
  uint64_t v19 = swift_task_alloc();
  (*(void (**)(uint64_t, void *, uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 16))(v19, v17, v16, v20, v21, v22);
  OutputDenyListBundle.init<A>(resource:)();
  swift_task_dealloc();
  StringResponseSanitizer.Overrides.init(denyList:)();
  sub_100027DBC((uint64_t)(v0 + 13));
  uint64_t v23 = type metadata accessor for StringResponseSanitizer.Overrides();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v34, 0, 1, v23);
  (*(void (**)(uint64_t, void, uint64_t))(v36 + 104))(v34, enum case for StringResponseSanitizer.DefaultableOverrides.withoutDefault(_:), v37);
  uint64_t v24 = type metadata accessor for StringResponseSanitizer.Guardrails();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v38, 1, 1, v24);
  (*(void (**)(uint64_t, void, uint64_t))(v39 + 104))(v38, enum case for StringResponseSanitizer.DefaultableGuardrails.withoutDefault(_:), v40);
  StringResponseSanitizer.init(overrides:guardrails:)();
  uint64_t v25 = swift_task_alloc();
  *(void *)(v25 + 16) = v42;
  *(void *)(v25 + 24) = v43;
  sub_1000880C0();
  GenerativeExperiencesSession.complete<A>(generating:parameters:promptSanitizer:responseSanitizer:query:)();
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v41, v46);
  (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v33, v48);
  (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v35, v50);
  TokenStream.events.getter();
  (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v45, v51);
  uint64_t v26 = (void *)swift_task_alloc();
  v0[61] = v26;
  *uint64_t v26 = v0;
  v26[1] = sub_100087654;
  uint64_t v27 = v0[57];
  return PromptCompletionStream.collect()(v27);
}

uint64_t sub_100087654()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 200);
  uint64_t v4 = *(void *)(*v1 + 192);
  uint64_t v5 = *(void *)(*v1 + 184);
  *(void *)(*v1 + 496) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  uint64_t v6 = *(void *)(v2 + 480);
  uint64_t v7 = *(void *)(v2 + 472);
  if (v0) {
    uint64_t v8 = sub_100087F6C;
  }
  else {
    uint64_t v8 = sub_1000877EC;
  }
  return _swift_task_switch(v8, v7, v6);
}

uint64_t sub_1000877EC()
{
  uint64_t v24 = v0;
  if (qword_1001FAC30 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000EBE8(v1, (uint64_t)qword_100212788);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Finished collecting token stream", v4, 2u);
    swift_slowDealloc();
  }
  uint64_t v6 = v0[56];
  uint64_t v5 = v0[57];
  uint64_t v7 = v0[54];
  uint64_t v8 = v0[55];

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v6, v5, v7);
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.debug.getter();
  BOOL v11 = os_log_type_enabled(v9, v10);
  uint64_t v13 = v0[55];
  uint64_t v12 = v0[56];
  if (v11)
  {
    uint64_t v22 = v0[54];
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 136315138;
    PromptCompletion.metadata.getter();
    uint64_t v15 = Dictionary.description.getter();
    unint64_t v17 = v16;
    swift_bridgeObjectRelease();
    v0[18] = sub_100021444(v15, v17, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v18 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    v18(v12, v22);
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "metadata: %s", v14, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v18 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    v18(v0[56], v0[54]);
  }

  v0[63] = v18;
  uint64_t v19 = (void *)swift_task_alloc();
  v0[64] = v19;
  *uint64_t v19 = v0;
  v19[1] = sub_100087AE8;
  uint64_t v20 = v0[57];
  return sub_1000850D0((uint64_t)(v0 + 2), v20);
}

uint64_t sub_100087AE8()
{
  uint64_t v2 = (void *)*v1;
  os_log_type_t v3 = (void *)*v1;
  v3[65] = v0;
  v3[66] = v2[2];
  *(_OWORD *)(v3 + 67) = *(_OWORD *)(v3 + 3);
  v3[69] = v2[5];
  *((_OWORD *)v3 + 35) = *((_OWORD *)v3 + 3);
  swift_task_dealloc();
  uint64_t v4 = v2[60];
  uint64_t v5 = v2[59];
  if (v0) {
    uint64_t v6 = sub_100087E14;
  }
  else {
    uint64_t v6 = sub_100087C68;
  }
  return _swift_task_switch(v6, v5, v4);
}

uint64_t sub_100087C68()
{
  uint64_t v10 = *(void *)(v0 + 568);
  long long v9 = *(_OWORD *)(v0 + 552);
  uint64_t v8 = *(void *)(v0 + 528);
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 504);
  uint64_t v2 = *(void *)(v0 + 456);
  uint64_t v3 = *(void *)(v0 + 432);
  uint64_t v4 = *(void *)(v0 + 152);
  long long v7 = *(_OWORD *)(v0 + 536);
  swift_release();
  v1(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  *(void *)uint64_t v4 = v8;
  *(_OWORD *)(v4 + 8) = v7;
  *(_OWORD *)(v4 + 24) = v9;
  *(void *)(v4 + 40) = v10;
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_100087E14()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[63];
  uint64_t v2 = v0[57];
  uint64_t v3 = v0[54];
  swift_release();
  v1(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_100087F6C()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000880A4@<X0>(uint64_t a1@<X8>)
{
  return sub_100075E30(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

unint64_t sub_1000880C0()
{
  unint64_t result = qword_1001FEDD0;
  if (!qword_1001FEDD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1001FEDD0);
  }
  return result;
}

uint64_t sub_100088114(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(v2 + 16);
  long long v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *long long v7 = v3;
  v7[1] = sub_100027FEC;
  return sub_100076214(a1, a2, v6);
}

unint64_t sub_1000881C4()
{
  unint64_t result = qword_1001FEE18;
  if (!qword_1001FEE18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FEE18);
  }
  return result;
}

uint64_t sub_100088218(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_1000446E8(a1, a2);
  }
  return a1;
}

uint64_t sub_10008822C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a3 >> 60 != 15) {
    return sub_1000446E8(a2, a3);
  }
  return result;
}

uint64_t sub_100088248()
{
  uint64_t v1 = type metadata accessor for PromptCompletion.ImageContent();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100088314(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for PromptCompletion.ImageContent() - 8);
  uint64_t v5 = *(void *)(v1 + 32);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  long long v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *long long v7 = v2;
  v7[3] = v5;
  v7[4] = v6;
  v7[1] = sub_100027204;
  v7[2] = a1;
  return _swift_task_switch(sub_100076E64, 0, 0);
}

uint64_t sub_100088408()
{
  return sub_100076064(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_100088424(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000063C0(&qword_1001FEC90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10008848C()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 64) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100088570(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for UUID() - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = v1[5];
  uint64_t v9 = v1[6];
  uint64_t v10 = v1[7];
  uint64_t v11 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v12;
  void *v12 = v2;
  v12[1] = sub_100027204;
  return sub_10007C0F4(a1, v5, v6, v7, v8, v9, v10, v11);
}

uint64_t sub_10008868C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000886D4()
{
  return sub_100089304();
}

uint64_t sub_1000886EC()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1000887C0(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for UUID() - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_100027FEC;
  return sub_100079D34(a1, v5, v6, v7, v8);
}

uint64_t sub_1000888C4()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000888FC(uint64_t a1)
{
  return sub_1000795A4(a1);
}

uint64_t sub_100088904()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = (void *)(v0[2] + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__notice);
  void *v2 = v0[3];
  v2[1] = v1;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100088950()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100088988()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000889A4@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_10006D7E0(a1, &OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__activeGeneratedResponseIndex, a2);
}

uint64_t sub_1000889D0()
{
  *(void *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__refinements) = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

void sub_100088A24()
{
  sub_1000B0410(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

id sub_100088A44@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_100069EB4(a1, &OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__resultAttributedString, a2);
}

void sub_100088A70()
{
}

double sub_100088A98()
{
  *(void *)&double result = sub_100088D18().n128_u64[0];
  return result;
}

uint64_t sub_100088AB0()
{
  uint64_t v1 = type metadata accessor for CompositionModel.Session(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  swift_release();

  swift_release();
  uint64_t v5 = v0 + v3 + *(int *)(v1 + 28);
  uint64_t v6 = sub_1000063C0(&qword_1001FEC88);
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }

  swift_release();

  return _swift_deallocObject(v0, ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8, v2 | 7);
}

void sub_100088C30()
{
  uint64_t v1 = *(void *)(type metadata accessor for CompositionModel.Session(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = *(void *)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));

  sub_100078C0C(v3, (uint64_t *)(v0 + v2), v4);
}

uint64_t sub_100088CC0@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_10006A11C(a1, &OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__hasGeneratedResponseDrafts, a2);
}

void sub_100088CEC()
{
  *(unsigned char *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__hasGeneratedResponseDrafts) = *(unsigned char *)(v0 + 24);
}

void sub_100088D04()
{
  *(void *)(*(void *)(v0 + 16)
            + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__activeGeneratedResponseIndex) = *(void *)(v0 + 24);
}

__n128 sub_100088D18()
{
  unsigned __int8 v1 = *(unsigned char *)(v0 + 40);
  unint64_t v2 = (__n128 *)(*(void *)(v0 + 16)
                + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__resultAttributedStringRange);
  __n128 result = *(__n128 *)(v0 + 24);
  __n128 *v2 = result;
  v2[1].n128_u8[0] = v1;
  return result;
}

uint64_t sub_100088D3C()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100088D7C(uint64_t a1)
{
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  void *v6 = v2;
  v6[1] = sub_100088E24;
  return sub_10007564C(a1, v5, v4);
}

uint64_t sub_100088E24(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

unint64_t sub_100088F20()
{
  unint64_t result = qword_1001FEEF0;
  if (!qword_1001FEEF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FEEF0);
  }
  return result;
}

uint64_t sub_100088F74()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 64, 7);
}

void sub_100088FBC(void *a1)
{
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(void **)(v1 + 24);
  uint64_t v4 = *(void **)(v2 + *a1);
  *(void *)(v2 + *a1) = v3;
  id v5 = v3;
}

uint64_t sub_100088FF8@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_10006A11C(a1, &OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__inclusionPolicy, a2);
}

uint64_t sub_100089024@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1000688D0(a1, &OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__promptStringsForFeedback, a2);
}

uint64_t sub_100089050@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1000688D0(a1, &OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__attachments, a2);
}

uint64_t sub_100089084(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000890EC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100089154@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1000688D0(a1, &OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__generatedImages, a2);
}

unint64_t sub_100089180()
{
  unint64_t result = qword_1001FEF00;
  if (!qword_1001FEF00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FEF00);
  }
  return result;
}

uint64_t sub_1000891D4()
{
  return sub_100069518(*(void *)(v0 + 16), *(void *)(v0 + 24), &OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__generatedImages);
}

uint64_t sub_1000891F8()
{
  return sub_100069518(*(void *)(v0 + 16), *(void *)(v0 + 24), &OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__attachments);
}

uint64_t sub_10008921C()
{
  return sub_100069518(*(void *)(v0 + 16), *(void *)(v0 + 24), &OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__promptStringsForFeedback);
}

void sub_100089240()
{
  *(unsigned char *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__inclusionPolicy) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_100089260()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = (void *)(v0[2] + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__modelInfoString);
  void *v2 = v0[3];
  v2[1] = v1;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000892B4()
{
  uint64_t result = swift_beginAccess();
  uint64_t v2 = *(void *)(v0 + 16);
  BOOL v3 = __OFADD__(v2, 1);
  uint64_t v4 = v2 + 1;
  if (v3) {
    __break(1u);
  }
  else {
    *(void *)(v0 + 16) = v4;
  }
  return result;
}

uint64_t sub_100089304()
{
  *(void *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__slotParser) = *(void *)(v0 + 24);
  swift_retain();
  return swift_release();
}

void *initializeBufferWithCopyOfBuffer for AttachmentType(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for AttachmentType()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for CompositionModel.CompositionError(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for AttachmentType(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AttachmentType(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for AttachmentType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)uint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

uint64_t sub_10008949C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_1000894B4(void *result, int a2)
{
  if (a2 < 0)
  {
    *uint64_t result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for CompositionModel.CompositionError()
{
  return &type metadata for CompositionModel.CompositionError;
}

uint64_t sub_1000894E8(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    String.index(_:offsetBy:limitedBy:)();
    return String.subscript.getter();
  }
  return result;
}

uint64_t sub_10008959C()
{
  return sub_100083F64();
}

uint64_t sub_1000895B4()
{
  return sub_100083F0C();
}

uint64_t sub_1000895CC()
{
  return sub_100083E34();
}

uint64_t sub_1000895E4()
{
  return sub_1000840C4();
}

uint64_t sub_1000895FC()
{
  return sub_100083D9C();
}

void sub_100089614()
{
}

void sub_100089634()
{
}

void sub_10008964C()
{
}

void sub_100089664()
{
}

void sub_10008967C()
{
}

void sub_100089694()
{
}

void destroy for RichTextView(uint64_t a1)
{
  swift_release();
  uint64_t v2 = *(void **)(a1 + 16);
}

uint64_t initializeWithCopy for RichTextView(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  uint64_t v4 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  swift_retain();
  id v5 = v4;
  return a1;
}

uint64_t assignWithCopy for RichTextView(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  id v5 = *(void **)(a1 + 16);
  uint64_t v6 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v6;
  id v7 = v6;

  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t assignWithTake for RichTextView(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;
  swift_release();
  id v5 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for RichTextView(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for RichTextView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RichTextView()
{
  return &type metadata for RichTextView;
}

uint64_t sub_1000898C0()
{
  uint64_t v9 = _swiftEmptyArrayStorage;
  id v1 = [v0 length];
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = &v9;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = sub_10008AEC4;
  *(void *)(v3 + 24) = v2;
  aBlock[4] = sub_10008AEDC;
  aBlock[5] = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10008A1C0;
  aBlock[3] = &unk_1001EC600;
  int v4 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  [v0 enumerateAttribute:NSAttachmentAttributeName inRange:0 options:0x100000 usingBlock:v4];
  _Block_release(v4);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
  }
  else
  {
    id v7 = v9;
    swift_release();
    return (uint64_t)v7;
  }
  return result;
}

void sub_100089A5C()
{
  qword_100212870 = 0x4008000000000000;
}

char *sub_100089A6C()
{
  id v1 = [v0 string];
  uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v4 = v3;

  uint64_t v5 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0) {
    uint64_t v5 = v2 & 0xFFFFFFFFFFFFLL;
  }
  if (v5)
  {
    while (1)
    {
      String.index(before:)();
      uint64_t v6 = String.subscript.getter();
      uint64_t v8 = v7;
      swift_bridgeObjectRelease();
      if (v6 == 10 && v8 == 0xE100000000000000)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
        uint64_t result = (char *)swift_bridgeObjectRelease();
        if ((v10 & 1) == 0) {
          return result;
        }
      }
      uint64_t result = (char *)[v0 length];
      if (__OFSUB__(result, 1)) {
        break;
      }
      [v0 deleteCharactersInRange:result - 1, 1];
      id v12 = [v0 string];
      uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v15 = v14;

      uint64_t v16 = HIBYTE(v15) & 0xF;
      if ((v15 & 0x2000000000000000) == 0) {
        uint64_t v16 = v13 & 0xFFFFFFFFFFFFLL;
      }
      if (!v16) {
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    return (char *)swift_bridgeObjectRelease();
  }
  return result;
}

id sub_100089C10()
{
  id result = [v0 length];
  if (result)
  {
    if ([v0 attribute:NSParagraphStyleAttributeName atIndex:0 effectiveRange:0])
    {
      _bridgeAnyObjectToAny(_:)();
      swift_unknownObjectRelease();
    }
    else
    {
      long long v6 = 0u;
      long long v7 = 0u;
    }
    sub_10008AD8C((uint64_t)&v6, (uint64_t)v8);
    sub_10008AD24((uint64_t)v8, (uint64_t)&v6);
    if (*((void *)&v7 + 1))
    {
      sub_1000085FC(0, &qword_1001FEF50);
      if (swift_dynamicCast())
      {
        id v2 = [v5 textLists];
        sub_1000085FC(0, &qword_1001FC390);
        unint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        if (v3 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();

          swift_bridgeObjectRelease_n();
        }
        else
        {
          uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRelease();
        }
        sub_100029500((uint64_t)v8);
        return (id)(v4 >= 1);
      }
    }
    else
    {
      sub_100029500((uint64_t)&v6);
    }
    sub_100029500((uint64_t)v8);
    return 0;
  }
  return result;
}

void sub_100089DC4()
{
  id v1 = v0;
  if (sub_100089C10())
  {
    id v2 = [objc_allocWithZone((Class)NSMutableParagraphStyle) init];
    if (qword_1001FACB8 != -1) {
      swift_once();
    }
    [v2 setLineSpacing:*(double *)&qword_100212870];
    [v2 setHeadIndent:18.0];
    sub_1000063C0(&qword_1001FAFD0);
    id v11 = v2;
    uint64_t v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_10018D460;
    sub_1000059AC((uint64_t)_swiftEmptyArrayStorage);
    id v4 = objc_allocWithZone((Class)NSTextTab);
    type metadata accessor for OptionKey(0);
    sub_10008AE18(&qword_1001FB188, type metadata accessor for OptionKey);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v6 = [v4 initWithTextAlignment:0 location:isa options:5.0];

    *(void *)(v3 + 32) = v6;
    sub_1000059AC((uint64_t)_swiftEmptyArrayStorage);
    id v7 = objc_allocWithZone((Class)NSTextTab);
    Class v8 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v9 = [v7 initWithTextAlignment:0 location:v8 options:18.0];

    *(void *)(v3 + 40) = v9;
    specialized Array._endMutation()();
    sub_1000085FC(0, &qword_1001FEF48);
    Class v10 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v11 setTabStops:v10];

    id v12 = v11;
    [v1 addAttribute:NSParagraphStyleAttributeName value:v12 range:0, [v1 length]];
  }
}

void sub_10008A0B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_10008AD24(a1, (uint64_t)v9);
  if (v10)
  {
    sub_1000085FC(0, &qword_1001FEF60);
    if (swift_dynamicCast())
    {
      id v6 = [v8 image];
      if (v6)
      {
        id v7 = v6;
        Image.init(uiImage:)();
        swift_retain();
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)(*(void *)a5 + 16) >= *(void *)(*(void *)a5 + 24) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        swift_release();
      }
    }
  }
  else
  {
    sub_100029500((uint64_t)v9);
  }
}

uint64_t sub_10008A1C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v9 = *(void (**)(long long *, uint64_t, uint64_t, uint64_t))(a1 + 32);
  if (a2)
  {
    *((void *)&v12 + 1) = swift_getObjectType();
    *(void *)&long long v11 = a2;
  }
  else
  {
    long long v11 = 0u;
    long long v12 = 0u;
  }
  swift_unknownObjectRetain();
  v9(&v11, a3, a4, a5);
  return sub_100029500((uint64_t)&v11);
}

void sub_10008A250(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  sub_10008AD24(a1, (uint64_t)v9);
  if (v10)
  {
    sub_1000085FC(0, &qword_1001FEF50);
    if (swift_dynamicCast())
    {
      [v8 mutableCopy];
      _bridgeAnyObjectToAny(_:)();
      swift_unknownObjectRelease();
      sub_1000085FC(0, &qword_1001FC388);
      swift_dynamicCast();
      [v8 setSecondaryLineBreakMode:2];
      [a5 removeAttribute:NSParagraphStyleAttributeName range:a2, a3];
      [a5 addAttribute:NSParagraphStyleAttributeName value:v8 range:a2, a3];
    }
  }
  else
  {
    sub_100029500((uint64_t)v9);
  }
}

id sub_10008A3AC(uint64_t a1)
{
  return sub_10008A72C(a1, *(void *)v1, *(unsigned char *)(v1 + 8), *(unsigned char *)(v1 + 24));
}

void sub_10008A3BC(uint64_t a1, uint64_t a2)
{
  sub_10008A974(a2, *(void *)v2, *(unsigned char *)(v2 + 8), *(void *)(v2 + 16), *(unsigned char *)(v2 + 24));
}

uint64_t sub_10008A3DC(uint64_t a1, char a2, int a3, int a4, id a5, double a6, double a7, double a8, double a9)
{
  if (a2) {
    return 0;
  }
  LODWORD(a8) = 1148846080;
  LODWORD(a9) = 1144750080;
  [a5 systemLayoutSizeFittingSize:*(double *)&a1 withHorizontalFittingPriority:1.79769313e308 verticalFittingPriority:a8];
  if (v10 < *(double *)&a1) {
    double v10 = *(double *)&a1;
  }
  return *(void *)&v10;
}

uint64_t sub_10008A45C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_10008AE60();

  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_10008A4C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_10008AE60();

  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_10008A524()
{
}

unint64_t sub_10008A550()
{
  unint64_t result = qword_1001FEF40;
  if (!qword_1001FEF40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FEF40);
  }
  return result;
}

uint64_t sub_10008A5A4@<X0>(uint64_t *a1@<X8>)
{
  swift_getKeyPath();
  sub_10008AE18((unint64_t *)&qword_1001FAE20, (void (*)(uint64_t))type metadata accessor for CommonUIManager);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  *a1 = result;
  return result;
}

void sub_10008A650(void **a1)
{
  uint64_t v1 = *a1;
  swift_getKeyPath();
  sub_10008AE18((unint64_t *)&qword_1001FAE20, (void (*)(uint64_t))type metadata accessor for CommonUIManager);
  id v2 = v1;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
}

id sub_10008A72C(uint64_t a1, uint64_t a2, char a3, char a4)
{
  char v5 = a3 & 1;
  id v6 = [objc_allocWithZone((Class)UITextView) init];
  uint64_t v7 = swift_retain();
  sub_100020A44(v7, v5);
  swift_release();
  swift_getKeyPath();
  sub_10008AE18((unint64_t *)&qword_1001FAE20, (void (*)(uint64_t))type metadata accessor for CommonUIManager);
  id v8 = v6;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  swift_release();

  if (a4) {
  [v8 setWritingToolsBehavior:-1];
  }
  [v8 setEditable:0];
  id v9 = self;
  id v10 = v8;
  id v11 = [v9 clearColor];
  [v10 setBackgroundColor:v11];

  [v10 setScrollEnabled:0];
  LODWORD(v12) = 1148846080;
  [v10 setContentCompressionResistancePriority:0 forAxis:v12];
  LODWORD(v13) = 1148846080;
  [v10 setContentCompressionResistancePriority:1 forAxis:v13];
  id v14 = v10;
  [v14 frame];
  [v14 setFrame:];

  return v14;
}

void sub_10008A974(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5)
{
  if (!a4)
  {
LABEL_7:
    id v8 = 0;
    goto LABEL_9;
  }
  id v7 = [self presentableAttributedString:a4 withAttributes:0];
  id v8 = [objc_allocWithZone((Class)NSMutableAttributedString) initWithAttributedString:v7];
  sub_100089A6C();
  id v9 = [v8 length];
  id v10 = [self labelColor];
  [v8 addAttribute:NSForegroundColorAttributeName value:v10 range:0];

  if (sub_100089C10()) {
    sub_100089DC4();
  }
  if (a5)
  {
    id v11 = [v8 length];
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = v8;
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = sub_10008ACCC;
    *(void *)(v13 + 24) = v12;
    aBlock[4] = sub_10008ACE4;
    aBlock[5] = v13;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10008A1C0;
    aBlock[3] = &unk_1001EC588;
    id v14 = _Block_copy(aBlock);
    id v15 = v8;
    swift_retain();
    swift_release();
    [v15 enumerateAttribute:NSParagraphStyleAttributeName inRange:0 options:v11 usingBlock:v14];
    _Block_release(v14);
    LOBYTE(v15) = swift_isEscapingClosureAtFileLocation();

    swift_release();
    swift_release();
    if ((v15 & 1) == 0) {
      goto LABEL_9;
    }
    __break(1u);
    goto LABEL_7;
  }

LABEL_9:
  char v16 = a3 & 1;
  uint64_t v17 = swift_retain();
  uint64_t v18 = sub_100020A44(v17, a3 & 1);
  swift_release();
  uint64_t v19 = *(void **)(v18 + 96);
  if (!v19)
  {
    swift_release();
LABEL_14:
    uint64_t v21 = swift_retain();
    sub_100020A44(v21, v16);
    swift_release();
    sub_10011ECF4(v8);
    swift_release();
LABEL_15:

    return;
  }
  if (v8)
  {
    unsigned __int8 v20 = [v19 isEqualToAttributedString:v8];
    swift_release();
    if (v20) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }
  swift_release();
}

uint64_t sub_10008AC94()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_10008ACCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_10008A250(a1, a2, a3, a4, *(void **)(v4 + 16));
}

uint64_t sub_10008ACD4()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10008ACE4()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_10008AD0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10008AD1C()
{
  return swift_release();
}

uint64_t sub_10008AD24(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000063C0(&qword_1001FD2E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10008AD8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000063C0(&qword_1001FD2E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10008ADFC()
{
  return sub_10011DFA4();
}

uint64_t sub_10008AE18(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10008AE60()
{
  unint64_t result = qword_1001FEF58;
  if (!qword_1001FEF58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FEF58);
  }
  return result;
}

uint64_t sub_10008AEB4()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_10008AEC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_10008A0B0(a1, a2, a3, a4, *(void *)(v4 + 16));
}

uint64_t sub_10008AECC()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10008AEE8()
{
  return sub_10008ADFC();
}

ValueMetadata *_s21RequestedInfoResponseVMa()
{
  return &_s21RequestedInfoResponseVN;
}

uint64_t _s4SlotVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t _s4SlotVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s4SlotVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  return a1;
}

uint64_t _s4SlotVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  return a1;
}

uint64_t _s4SlotVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 65)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s4SlotVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 64) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 65) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 65) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s4SlotVMa()
{
  return &_s4SlotVN;
}

void *sub_10008B1B0()
{
  return &protocol witness table for String;
}

uint64_t sub_10008B1BC@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_10008B1C8()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_10008B1F8@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

void sub_10008B200()
{
}

void sub_10008B24C()
{
}

uint64_t sub_10008B298(uint64_t a1)
{
  unint64_t v2 = sub_10008B6BC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10008B2D4(uint64_t a1)
{
  unint64_t v2 = sub_10008B6BC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10008B310(void *a1, uint64_t a2)
{
  uint64_t v37 = sub_1000063C0(&qword_1001FEF68);
  uint64_t v24 = *(void *)(v37 - 8);
  __chkstk_darwin(v37);
  id v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100044740(a1, a1[3]);
  sub_10008B6BC();
  uint64_t v28 = v6;
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  uint64_t v7 = *(void *)(a2 + 64);
  uint64_t v25 = a2 + 64;
  uint64_t v8 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & v7;
  int64_t v26 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v27 = v32;
  int64_t v23 = v26 - 1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v12 = 0;
  if (!v10) {
    goto LABEL_6;
  }
LABEL_4:
  unint64_t v13 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  unint64_t v14 = v13 | (v12 << 6);
LABEL_5:
  uint64_t v15 = *(void *)(a2 + 56);
  char v16 = (void *)(*(void *)(a2 + 48) + 16 * v14);
  uint64_t v17 = v16[1];
  *(void *)&long long v31 = *v16;
  *((void *)&v31 + 1) = v17;
  sub_1000251D0(v15 + 40 * v14, (uint64_t)v27);
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_10008B710((uint64_t)&v31, (uint64_t)&v34);
    uint64_t v20 = v35;
    if (!v35)
    {
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v28, v37);
    }
    uint64_t v21 = v34;
    sub_1000085E4(v36, (uint64_t)&v31);
    sub_100044740(&v31, *((uint64_t *)&v32[0] + 1));
    uint64_t v29 = v21;
    uint64_t v30 = v20;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    if (v2)
    {
      swift_release();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v28, v37);
      return sub_100027DBC((uint64_t)&v31);
    }
    swift_bridgeObjectRelease();
    uint64_t result = sub_100027DBC((uint64_t)&v31);
    if (v10) {
      goto LABEL_4;
    }
LABEL_6:
    int64_t v18 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v18 < v26)
    {
      unint64_t v19 = *(void *)(v25 + 8 * v18);
      if (v19) {
        goto LABEL_9;
      }
      v12 += 2;
      if (v18 + 1 >= v26)
      {
        int64_t v12 = v18;
        goto LABEL_14;
      }
      unint64_t v19 = *(void *)(v25 + 8 * v12);
      if (v19)
      {
        ++v18;
LABEL_9:
        unint64_t v10 = (v19 - 1) & v19;
        unint64_t v14 = __clz(__rbit64(v19)) + (v18 << 6);
        int64_t v12 = v18;
        goto LABEL_5;
      }
      if (v18 + 2 < v26) {
        break;
      }
    }
LABEL_14:
    unint64_t v10 = 0;
    uint64_t v33 = 0;
    memset(v32, 0, sizeof(v32));
    long long v31 = 0u;
  }
  unint64_t v19 = *(void *)(v25 + 8 * (v18 + 2));
  if (v19)
  {
    v18 += 2;
    goto LABEL_9;
  }
  int64_t v22 = v18 + 3;
  if (v18 + 3 >= v26)
  {
    int64_t v12 = v18 + 2;
    goto LABEL_14;
  }
  unint64_t v19 = *(void *)(v25 + 8 * v22);
  if (v19)
  {
    v18 += 3;
    goto LABEL_9;
  }
  while (1)
  {
    int64_t v18 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v18 >= v26)
    {
      int64_t v12 = v23;
      goto LABEL_14;
    }
    unint64_t v19 = *(void *)(v25 + 8 * v18);
    ++v22;
    if (v19) {
      goto LABEL_9;
    }
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_10008B6A0(void *a1)
{
  return sub_10008B310(a1, *v1);
}

unint64_t sub_10008B6BC()
{
  unint64_t result = qword_1001FEF70;
  if (!qword_1001FEF70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FEF70);
  }
  return result;
}

uint64_t sub_10008B710(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000063C0(&qword_1001FEF78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t _s21RequestedInfoResponseV3KeyVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s21RequestedInfoResponseV3KeyVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s21RequestedInfoResponseV3KeyVMa()
{
  return &_s21RequestedInfoResponseV3KeyVN;
}

unint64_t sub_10008B810()
{
  unint64_t result = qword_1001FEF80;
  if (!qword_1001FEF80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FEF80);
  }
  return result;
}

unint64_t sub_10008B868()
{
  unint64_t result = qword_1001FEF88;
  if (!qword_1001FEF88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FEF88);
  }
  return result;
}

uint64_t sub_10008B8BC(uint64_t a1)
{
  uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (*(void *)(a1 + 16) && (unint64_t v4 = sub_100007C48(v2, v3), (v5 & 1) != 0))
  {
    sub_100027E0C(*(void *)(a1 + 56) + 32 * v4, (uint64_t)&v28);
    swift_bridgeObjectRelease();
    if (*((void *)&v29 + 1))
    {
      if (swift_dynamicCast()) {
        return v27;
      }
      goto LABEL_8;
    }
  }
  else
  {
    long long v28 = 0u;
    long long v29 = 0u;
    swift_bridgeObjectRelease();
  }
  sub_10002784C((uint64_t)&v28, &qword_1001FD2E0);
LABEL_8:
  uint64_t v27 = 0;
  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (*(void *)(a1 + 16) && (unint64_t v8 = sub_100007C48(v6, v7), (v9 & 1) != 0))
  {
    sub_100027E0C(*(void *)(a1 + 56) + 32 * v8, (uint64_t)&v28);
  }
  else
  {
    long long v28 = 0u;
    long long v29 = 0u;
  }
  swift_bridgeObjectRelease();
  if (*((void *)&v29 + 1))
  {
    if (swift_dynamicCast())
    {
      String.append(_:)(v26);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_10002784C((uint64_t)&v28, &qword_1001FD2E0);
  }
  v10._uint64_t countAndFlagsBits = 58;
  v10._uint64_t object = (void *)0xE100000000000000;
  String.append(_:)(v10);
  uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (*(void *)(a1 + 16) && (unint64_t v13 = sub_100007C48(v11, v12), (v14 & 1) != 0))
  {
    sub_100027E0C(*(void *)(a1 + 56) + 32 * v13, (uint64_t)&v28);
  }
  else
  {
    long long v28 = 0u;
    long long v29 = 0u;
  }
  swift_bridgeObjectRelease();
  if (*((void *)&v29 + 1))
  {
    if (swift_dynamicCast())
    {
      String.append(_:)(v26);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_10002784C((uint64_t)&v28, &qword_1001FD2E0);
  }
  v15._uint64_t countAndFlagsBits = 124;
  v15._uint64_t object = (void *)0xE100000000000000;
  String.append(_:)(v15);
  uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (*(void *)(a1 + 16) && (unint64_t v18 = sub_100007C48(v16, v17), (v19 & 1) != 0))
  {
    sub_100027E0C(*(void *)(a1 + 56) + 32 * v18, (uint64_t)&v28);
  }
  else
  {
    long long v28 = 0u;
    long long v29 = 0u;
  }
  swift_bridgeObjectRelease();
  if (*((void *)&v29 + 1))
  {
    if (swift_dynamicCast())
    {
      String.append(_:)(v26);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_10002784C((uint64_t)&v28, &qword_1001FD2E0);
  }
  v20._uint64_t countAndFlagsBits = 58;
  v20._uint64_t object = (void *)0xE100000000000000;
  String.append(_:)(v20);
  uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (*(void *)(a1 + 16) && (unint64_t v23 = sub_100007C48(v21, v22), (v24 & 1) != 0))
  {
    sub_100027E0C(*(void *)(a1 + 56) + 32 * v23, (uint64_t)&v28);
  }
  else
  {
    long long v28 = 0u;
    long long v29 = 0u;
  }
  swift_bridgeObjectRelease();
  if (*((void *)&v29 + 1))
  {
    if (swift_dynamicCast())
    {
      String.append(_:)(v26);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_10002784C((uint64_t)&v28, &qword_1001FD2E0);
  }
  return v27;
}

uint64_t sub_10008BC70(uint64_t a1)
{
  uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (!*(void *)(a1 + 16) || (unint64_t v4 = sub_100007C48(v2, v3), (v5 & 1) == 0))
  {
    long long v8 = 0u;
    long long v9 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  sub_100027E0C(*(void *)(a1 + 56) + 32 * v4, (uint64_t)&v8);
  swift_bridgeObjectRelease();
  if (!*((void *)&v9 + 1))
  {
LABEL_7:
    sub_10002784C((uint64_t)&v8, &qword_1001FD2E0);
    return 0;
  }
  if (swift_dynamicCast()) {
    return v7;
  }
  return 0;
}

uint64_t sub_10008BD38(uint64_t a1)
{
  uint64_t v2 = sub_1000063C0(&qword_1001FEF90);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v85 = (uint64_t)&v82 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v84 = (char *)&v82 - v6;
  uint64_t v7 = __chkstk_darwin(v5);
  unint64_t v83 = (char *)&v82 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v82 = (uint64_t)&v82 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  unint64_t v13 = (char *)&v82 - v12;
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = (char *)&v82 - v15;
  uint64_t v17 = __chkstk_darwin(v14);
  char v19 = (char *)&v82 - v18;
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v82 - v20;
  uint64_t v90 = 0;
  unint64_t v91 = 0xE000000000000000;
  uint64_t v87 = a1;
  sub_10008C554(a1, (uint64_t)&v82 - v20);
  uint64_t v22 = type metadata accessor for InferenceEnvironmentInfo();
  uint64_t v23 = *(void *)(v22 - 8);
  char v24 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 48);
  int v25 = v24(v21, 1, v22);
  uint64_t v86 = v23;
  if (v25 == 1)
  {
    sub_10002784C((uint64_t)v21, &qword_1001FEF90);
  }
  else
  {
    uint64_t v26 = InferenceEnvironmentInfo.baseModelIdentifier.getter();
    long long v28 = v27;
    (*(void (**)(char *, uint64_t))(v23 + 8))(v21, v22);
    if (v28)
    {
      v29._uint64_t countAndFlagsBits = v26;
      v29._uint64_t object = v28;
      String.append(_:)(v29);
      swift_bridgeObjectRelease();
    }
  }
  v30._uint64_t countAndFlagsBits = 58;
  v30._uint64_t object = (void *)0xE100000000000000;
  String.append(_:)(v30);
  sub_10008C554(v87, (uint64_t)v19);
  if (v24(v19, 1, v22) == 1)
  {
    sub_10002784C((uint64_t)v19, &qword_1001FEF90);
  }
  else
  {
    uint64_t v31 = InferenceEnvironmentInfo.baseModelVersion.getter();
    uint64_t v33 = v32;
    (*(void (**)(char *, uint64_t))(v86 + 8))(v19, v22);
    if (v33)
    {
      v34._uint64_t countAndFlagsBits = v31;
      v34._uint64_t object = v33;
      String.append(_:)(v34);
      swift_bridgeObjectRelease();
    }
  }
  v35._uint64_t countAndFlagsBits = 124;
  v35._uint64_t object = (void *)0xE100000000000000;
  String.append(_:)(v35);
  uint64_t v36 = v87;
  sub_10008C554(v87, (uint64_t)v16);
  if (v24(v16, 1, v22) == 1)
  {
    sub_10002784C((uint64_t)v16, &qword_1001FEF90);
    uint64_t v37 = v86;
  }
  else
  {
    uint64_t v38 = InferenceEnvironmentInfo.modelIdentifier.getter();
    uint64_t v40 = v39;
    uint64_t v37 = v86;
    (*(void (**)(char *, uint64_t))(v86 + 8))(v16, v22);
    if (v40)
    {
      v41._uint64_t countAndFlagsBits = v38;
      v41._uint64_t object = v40;
      String.append(_:)(v41);
      swift_bridgeObjectRelease();
    }
  }
  v42._uint64_t countAndFlagsBits = 58;
  v42._uint64_t object = (void *)0xE100000000000000;
  String.append(_:)(v42);
  sub_10008C554(v36, (uint64_t)v13);
  int v43 = v24(v13, 1, v22);
  uint64_t v44 = (uint64_t)v83;
  if (v43 == 1)
  {
    sub_10002784C((uint64_t)v13, &qword_1001FEF90);
  }
  else
  {
    uint64_t v45 = InferenceEnvironmentInfo.modelVersion.getter();
    uint64_t v47 = v46;
    (*(void (**)(char *, uint64_t))(v37 + 8))(v13, v22);
    if (v47)
    {
      v48._uint64_t countAndFlagsBits = v45;
      v48._uint64_t object = v47;
      String.append(_:)(v48);
      swift_bridgeObjectRelease();
    }
  }
  v49._uint64_t countAndFlagsBits = 124;
  v49._uint64_t object = (void *)0xE100000000000000;
  String.append(_:)(v49);
  uint64_t v50 = v82;
  sub_10008C554(v36, v82);
  int v51 = v24((char *)v50, 1, v22);
  uint64_t v52 = (uint64_t)v84;
  if (v51 == 1)
  {
    sub_10002784C(v50, &qword_1001FEF90);
  }
  else
  {
    uint64_t v53 = v50;
    uint64_t v54 = InferenceEnvironmentInfo.tokenizerIdentifier.getter();
    uint64_t v56 = v55;
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v53, v22);
    if (v56)
    {
      v57._uint64_t countAndFlagsBits = v54;
      v57._uint64_t object = v56;
      String.append(_:)(v57);
      swift_bridgeObjectRelease();
    }
  }
  v58._uint64_t countAndFlagsBits = 58;
  v58._uint64_t object = (void *)0xE100000000000000;
  String.append(_:)(v58);
  sub_10008C554(v36, v44);
  if (v24((char *)v44, 1, v22) == 1)
  {
    sub_10002784C(v44, &qword_1001FEF90);
  }
  else
  {
    uint64_t v59 = InferenceEnvironmentInfo.tokenizerVersion.getter();
    uint64_t v61 = v60;
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v44, v22);
    if (v61)
    {
      v62._uint64_t countAndFlagsBits = v59;
      v62._uint64_t object = v61;
      String.append(_:)(v62);
      swift_bridgeObjectRelease();
    }
  }
  v63._uint64_t countAndFlagsBits = 124;
  v63._uint64_t object = (void *)0xE100000000000000;
  String.append(_:)(v63);
  sub_10008C554(v36, v52);
  if (v24((char *)v52, 1, v22) == 1)
  {
    sub_10002784C(v52, &qword_1001FEF90);
  }
  else
  {
    uint64_t v64 = InferenceEnvironmentInfo.draftModelIdentifier.getter();
    uint64_t v66 = v65;
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v52, v22);
    if (v66)
    {
      v67._uint64_t countAndFlagsBits = v64;
      v67._uint64_t object = v66;
      String.append(_:)(v67);
      swift_bridgeObjectRelease();
    }
  }
  v68._uint64_t countAndFlagsBits = 58;
  v68._uint64_t object = (void *)0xE100000000000000;
  String.append(_:)(v68);
  uint64_t v69 = v85;
  sub_10008C554(v36, v85);
  if (v24((char *)v69, 1, v22) == 1)
  {
    sub_10002784C(v69, &qword_1001FEF90);
  }
  else
  {
    uint64_t v70 = InferenceEnvironmentInfo.draftModelVersion.getter();
    uint64_t v72 = v71;
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v69, v22);
    if (v72)
    {
      v73._uint64_t countAndFlagsBits = v70;
      v73._uint64_t object = v72;
      String.append(_:)(v73);
      swift_bridgeObjectRelease();
    }
  }
  v74._uint64_t countAndFlagsBits = 124;
  v74._uint64_t object = (void *)0xE100000000000000;
  String.append(_:)(v74);
  if (qword_1001FAC58 != -1) {
    swift_once();
  }
  uint64_t v75 = type metadata accessor for Logger();
  sub_10000EBE8(v75, (uint64_t)qword_100212800);
  uint64_t v77 = v90;
  unint64_t v76 = v91;
  swift_bridgeObjectRetain_n();
  uint64_t v78 = Logger.logObject.getter();
  os_log_type_t v79 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v78, v79))
  {
    uint64_t v80 = (uint8_t *)swift_slowAlloc();
    v89[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v80 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v88 = sub_100021444(v77, v76, v89);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v78, v79, "Calculate model info string = %s", v80, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  swift_beginAccess();
  return v90;
}

uint64_t sub_10008C554(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000063C0(&qword_1001FEF90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for CenteringHStackLayout()
{
  return &type metadata for CenteringHStackLayout;
}

unint64_t sub_10008C5D0()
{
  unint64_t result = qword_1001FEF98;
  if (!qword_1001FEF98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FEF98);
  }
  return result;
}

double sub_10008C634(uint64_t a1, char a2)
{
  double result = *(double *)&a1;
  if (a2) {
    return 10.0;
  }
  return result;
}

uint64_t sub_10008C65C(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  return sub_10008E078(a9, a1, a2, a3, a4);
}

uint64_t sub_10008C668(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_10008C6D8(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t (*)(uint64_t))&Layout.explicitAlignment(of:in:proposal:subviews:cache:));
}

uint64_t sub_10008C6A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_10008C6D8(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t (*)(uint64_t))&Layout.explicitAlignment(of:in:proposal:subviews:cache:));
}

uint64_t sub_10008C6D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t))
{
  return a10(a1);
}

void (*sub_10008C71C(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = Animatable<>.animatableData.modify();
  return sub_10008C78C;
}

void sub_10008C78C(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

unint64_t sub_10008C7DC()
{
  unint64_t result = qword_1001FEFA0;
  if (!qword_1001FEFA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FEFA0);
  }
  return result;
}

Swift::Int sub_10008C830(void **a1)
{
  uint64_t v2 = *(void *)(sub_1000063C0(&qword_1001FEFA8) - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = (void *)sub_1001736E8(v3);
  }
  uint64_t v4 = v3[2];
  v6[0] = (char *)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  Swift::Int result = sub_10008C8DC(v6);
  *a1 = v3;
  return result;
}

Swift::Int sub_10008C8DC(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v182 = sub_1000063C0(&qword_1001FEFA8);
  uint64_t v169 = *(void *)(v182 - 8);
  uint64_t v4 = __chkstk_darwin(v182);
  uint64_t v165 = (uint64_t)&v155 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v177 = (uint64_t)&v155 - v7;
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v175 = (char *)&v155 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v174 = (_OWORD *)((char *)&v155 - v11);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v173 = (char *)&v155 - v13;
  __chkstk_darwin(v12);
  uint64_t v181 = (_OWORD *)((char *)&v155 - v14);
  Swift::Int v15 = a1[1];
  Swift::Int result = _minimumMergeRunLength(_:)(v15);
  if (result >= v15)
  {
    if (v15 < 0) {
      goto LABEL_142;
    }
    if (v15) {
      return sub_10008D5D4(0, v15, 1, a1);
    }
    return result;
  }
  if (v15 >= 0) {
    uint64_t v17 = v15;
  }
  else {
    uint64_t v17 = v15 + 1;
  }
  if (v15 < -1) {
    goto LABEL_150;
  }
  Swift::Int v157 = result;
  if (v15 < 2)
  {
    uint64_t v21 = (char *)_swiftEmptyArrayStorage;
    unint64_t v168 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v169 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v169 + 80));
    uint64_t v156 = _swiftEmptyArrayStorage;
    if (v15 != 1)
    {
      unint64_t v23 = _swiftEmptyArrayStorage[2];
LABEL_107:
      if (v23 >= 2)
      {
        uint64_t v148 = *a1;
        do
        {
          unint64_t v149 = v23 - 2;
          if (v23 < 2) {
            goto LABEL_137;
          }
          if (!v148) {
            goto LABEL_149;
          }
          uint64_t v150 = v21;
          uint64_t v151 = *(void *)&v21[16 * v149 + 32];
          uint64_t v152 = *(void *)&v21[16 * v23 + 24];
          sub_10008D968(v148 + *(void *)(v169 + 72) * v151, v148 + *(void *)(v169 + 72) * *(void *)&v21[16 * v23 + 16], v148 + *(void *)(v169 + 72) * v152, v168);
          if (v2) {
            break;
          }
          if (v152 < v151) {
            goto LABEL_138;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v150 = sub_10017260C((uint64_t)v21);
          }
          if (v149 >= *((void *)v150 + 2)) {
            goto LABEL_139;
          }
          int v153 = &v150[16 * v149 + 32];
          *(void *)int v153 = v151;
          *((void *)v153 + 1) = v152;
          unint64_t v154 = *((void *)v150 + 2);
          if (v23 > v154) {
            goto LABEL_140;
          }
          uint64_t v21 = v150;
          memmove(&v150[16 * v23 + 16], &v150[16 * v23 + 32], 16 * (v154 - v23));
          *((void *)v150 + 2) = v154 - 1;
          unint64_t v23 = v154 - 1;
        }
        while (v154 > 2);
      }
LABEL_118:
      swift_bridgeObjectRelease();
      v156[2] = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v18 = v17 >> 1;
    uint64_t v19 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)(v19 + 16) = v18;
    uint64_t v20 = *(unsigned __int8 *)(v169 + 80);
    uint64_t v156 = (void *)v19;
    unint64_t v168 = v19 + ((v20 + 32) & ~v20);
  }
  Swift::Int v22 = 0;
  uint64_t v21 = (char *)_swiftEmptyArrayStorage;
  uint64_t v167 = a1;
  while (1)
  {
    Swift::Int v24 = v22 + 1;
    uint64_t v164 = v21;
    uint64_t v166 = v22;
    if (v22 + 1 < v15)
    {
      uint64_t v158 = v2;
      uint64_t v159 = *a1;
      uint64_t v25 = v159;
      Swift::Int v26 = *(void *)(v169 + 72);
      Swift::Int v179 = v26;
      uint64_t v180 = v22 + 1;
      uint64_t v27 = v159 + v26 * v24;
      long long v28 = v181;
      sub_10008EBCC(v27, (uint64_t)v181);
      Swift::String v29 = v173;
      sub_10008EBCC(v25 + v26 * v166, (uint64_t)v173);
      uint64_t v30 = *(int *)(v182 + 48);
      uint64_t v31 = (char *)v174 + v30;
      uint64_t v32 = (char *)v28 + v30;
      *uint64_t v174 = *v28;
      uint64_t v33 = type metadata accessor for LayoutSubview();
      uint64_t v34 = *(void *)(v33 - 8);
      Swift::String v35 = *(void (**)(char *, char *, uint64_t))(v34 + 16);
      v35(v31, v32, v33);
      LayoutSubview.priority.getter();
      double v37 = v36;
      uint64_t v38 = *(void (**)(char *, uint64_t))(v34 + 8);
      v38(v31, v33);
      uint64_t v39 = *(int *)(v182 + 48);
      uint64_t v40 = v175;
      Swift::String v41 = &v175[v39];
      *(_OWORD *)uint64_t v175 = *(_OWORD *)v29;
      uint64_t v172 = v34 + 16;
      uint64_t v170 = (uint64_t)v35;
      v35(&v40[v39], &v29[v39], v33);
      LayoutSubview.priority.getter();
      double v43 = v42;
      uint64_t v171 = v33;
      uint64_t v178 = v34 + 8;
      uint64_t v163 = v38;
      v38(v41, v33);
      uint64_t v44 = v159;
      sub_10008EC34((uint64_t)v29);
      sub_10008EC34((uint64_t)v181);
      Swift::Int v45 = v179;
      Swift::Int v22 = v166;
      Swift::Int v24 = v166 + 2;
      if (v166 + 2 < v15)
      {
        uint64_t v161 = v179 * v180;
        Swift::Int v160 = v179 * v24;
        Swift::Int v162 = v15;
        while (1)
        {
          Swift::Int v176 = v24;
          LODWORD(v180) = v43 < v37;
          uint64_t v46 = v181;
          sub_10008EBCC(v44 + v160, (uint64_t)v181);
          uint64_t v47 = v173;
          sub_10008EBCC(v44 + v161, (uint64_t)v173);
          uint64_t v48 = v182;
          uint64_t v49 = *(int *)(v182 + 48);
          uint64_t v50 = v174;
          int v51 = (char *)v174 + v49;
          *uint64_t v174 = *v46;
          uint64_t v52 = v171;
          uint64_t v53 = (void (*)(char *, char *, uint64_t))v170;
          ((void (*)(char *, char *, uint64_t))v170)((char *)v50 + v49, (char *)v46 + v49, v171);
          LayoutSubview.priority.getter();
          double v55 = v54;
          uint64_t v56 = v163;
          v163(v51, v52);
          uint64_t v57 = *(int *)(v48 + 48);
          Swift::String v58 = v175;
          uint64_t v59 = &v175[v57];
          *(_OWORD *)uint64_t v175 = *(_OWORD *)v47;
          v53(&v58[v57], &v47[v57], v52);
          LayoutSubview.priority.getter();
          double v61 = v60;
          v56(v59, v52);
          sub_10008EC34((uint64_t)v47);
          sub_10008EC34((uint64_t)v181);
          if (v180 == v61 >= v55) {
            break;
          }
          Swift::Int v24 = v176 + 1;
          Swift::Int v45 = v179;
          v44 += v179;
          Swift::Int v15 = v162;
          if (v162 == v176 + 1)
          {
            Swift::Int v24 = v162;
            Swift::Int v22 = v166;
            a1 = v167;
            goto LABEL_22;
          }
        }
        Swift::Int v22 = v166;
        a1 = v167;
        Swift::Int v24 = v176;
        Swift::Int v15 = v162;
        Swift::Int v45 = v179;
      }
LABEL_22:
      uint64_t v2 = v158;
      if (v43 < v37)
      {
        if (v24 < v22) {
          goto LABEL_143;
        }
        if (v22 < v24)
        {
          Swift::Int v162 = v15;
          uint64_t v62 = 0;
          uint64_t v63 = v45 * (v24 - 1);
          Swift::Int v64 = v24 * v45;
          Swift::Int v65 = v22;
          uint64_t v66 = v22 * v45;
          do
          {
            if (v65 != v24 + v62 - 1)
            {
              uint64_t v67 = v159;
              if (!v159) {
                goto LABEL_148;
              }
              unint64_t v68 = v159 + v66;
              sub_10008EC94(v159 + v66, v165);
              if (v66 < v63 || v68 >= v67 + v64)
              {
                swift_arrayInitWithTakeFrontToBack();
              }
              else if (v66 != v63)
              {
                swift_arrayInitWithTakeBackToFront();
              }
              sub_10008EC94(v165, v67 + v63);
              Swift::Int v45 = v179;
            }
            ++v65;
            --v62;
            v63 -= v45;
            v64 -= v45;
            v66 += v45;
          }
          while (v65 < v24 + v62);
          uint64_t v2 = v158;
          Swift::Int v22 = v166;
          a1 = v167;
          Swift::Int v15 = v162;
        }
      }
    }
    if (v24 >= v15) {
      goto LABEL_48;
    }
    BOOL v87 = __OFSUB__(v24, v22);
    Swift::Int v69 = v24 - v22;
    if (v87) {
      goto LABEL_141;
    }
    if (v69 < v157) {
      break;
    }
    Swift::Int v22 = v166;
LABEL_48:
    if (v24 < v22) {
      goto LABEL_136;
    }
LABEL_49:
    if (swift_isUniquelyReferenced_nonNull_native()) {
      uint64_t v21 = v164;
    }
    else {
      uint64_t v21 = sub_10017222C(0, *((void *)v164 + 2) + 1, 1, v164);
    }
    unint64_t v72 = *((void *)v21 + 2);
    unint64_t v71 = *((void *)v21 + 3);
    unint64_t v23 = v72 + 1;
    Swift::Int v176 = v24;
    if (v72 >= v71 >> 1) {
      uint64_t v21 = sub_10017222C((char *)(v71 > 1), v72 + 1, 1, v21);
    }
    *((void *)v21 + 2) = v23;
    Swift::String v73 = v21 + 32;
    Swift::String v74 = &v21[16 * v72 + 32];
    Swift::Int v75 = v176;
    *(void *)Swift::String v74 = v166;
    *((void *)v74 + 1) = v75;
    if (v72)
    {
      while (1)
      {
        unint64_t v76 = v23 - 1;
        if (v23 >= 4)
        {
          uint64_t v81 = &v73[16 * v23];
          uint64_t v82 = *((void *)v81 - 8);
          uint64_t v83 = *((void *)v81 - 7);
          BOOL v87 = __OFSUB__(v83, v82);
          uint64_t v84 = v83 - v82;
          if (v87) {
            goto LABEL_125;
          }
          uint64_t v86 = *((void *)v81 - 6);
          uint64_t v85 = *((void *)v81 - 5);
          BOOL v87 = __OFSUB__(v85, v86);
          uint64_t v79 = v85 - v86;
          char v80 = v87;
          if (v87) {
            goto LABEL_126;
          }
          unint64_t v88 = v23 - 2;
          uint64_t v89 = &v73[16 * v23 - 32];
          uint64_t v91 = *(void *)v89;
          uint64_t v90 = *((void *)v89 + 1);
          BOOL v87 = __OFSUB__(v90, v91);
          uint64_t v92 = v90 - v91;
          if (v87) {
            goto LABEL_128;
          }
          BOOL v87 = __OFADD__(v79, v92);
          uint64_t v93 = v79 + v92;
          if (v87) {
            goto LABEL_131;
          }
          if (v93 >= v84)
          {
            uint64_t v111 = &v73[16 * v76];
            uint64_t v113 = *(void *)v111;
            uint64_t v112 = *((void *)v111 + 1);
            BOOL v87 = __OFSUB__(v112, v113);
            uint64_t v114 = v112 - v113;
            if (v87) {
              goto LABEL_135;
            }
            BOOL v104 = v79 < v114;
            goto LABEL_85;
          }
        }
        else
        {
          if (v23 != 3)
          {
            uint64_t v105 = *((void *)v21 + 4);
            uint64_t v106 = *((void *)v21 + 5);
            BOOL v87 = __OFSUB__(v106, v105);
            uint64_t v98 = v106 - v105;
            char v99 = v87;
            goto LABEL_79;
          }
          uint64_t v78 = *((void *)v21 + 4);
          uint64_t v77 = *((void *)v21 + 5);
          BOOL v87 = __OFSUB__(v77, v78);
          uint64_t v79 = v77 - v78;
          char v80 = v87;
        }
        if (v80) {
          goto LABEL_127;
        }
        unint64_t v88 = v23 - 2;
        uint64_t v94 = &v73[16 * v23 - 32];
        uint64_t v96 = *(void *)v94;
        uint64_t v95 = *((void *)v94 + 1);
        BOOL v97 = __OFSUB__(v95, v96);
        uint64_t v98 = v95 - v96;
        char v99 = v97;
        if (v97) {
          goto LABEL_130;
        }
        uint64_t v100 = &v73[16 * v76];
        uint64_t v102 = *(void *)v100;
        uint64_t v101 = *((void *)v100 + 1);
        BOOL v87 = __OFSUB__(v101, v102);
        uint64_t v103 = v101 - v102;
        if (v87) {
          goto LABEL_133;
        }
        if (__OFADD__(v98, v103)) {
          goto LABEL_134;
        }
        if (v98 + v103 >= v79)
        {
          BOOL v104 = v79 < v103;
LABEL_85:
          if (v104) {
            unint64_t v76 = v88;
          }
          goto LABEL_87;
        }
LABEL_79:
        if (v99) {
          goto LABEL_129;
        }
        uint64_t v107 = &v73[16 * v76];
        uint64_t v109 = *(void *)v107;
        uint64_t v108 = *((void *)v107 + 1);
        BOOL v87 = __OFSUB__(v108, v109);
        uint64_t v110 = v108 - v109;
        if (v87) {
          goto LABEL_132;
        }
        if (v110 < v98) {
          goto LABEL_14;
        }
LABEL_87:
        unint64_t v115 = v76 - 1;
        if (v76 - 1 >= v23)
        {
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
          goto LABEL_145;
        }
        uint64_t v116 = *a1;
        if (!*a1) {
          goto LABEL_147;
        }
        uint64_t v117 = &v73[16 * v115];
        uint64_t v118 = *(void *)v117;
        uint64_t v119 = &v73[16 * v76];
        uint64_t v120 = *((void *)v119 + 1);
        sub_10008D968(v116 + *(void *)(v169 + 72) * *(void *)v117, v116 + *(void *)(v169 + 72) * *(void *)v119, v116 + *(void *)(v169 + 72) * v120, v168);
        if (v2) {
          goto LABEL_118;
        }
        if (v120 < v118) {
          goto LABEL_122;
        }
        if (v76 > *((void *)v21 + 2)) {
          goto LABEL_123;
        }
        *(void *)uint64_t v117 = v118;
        *(void *)&v73[16 * v115 + 8] = v120;
        unint64_t v121 = *((void *)v21 + 2);
        if (v76 >= v121) {
          goto LABEL_124;
        }
        unint64_t v23 = v121 - 1;
        memmove(&v73[16 * v76], v119 + 16, 16 * (v121 - 1 - v76));
        *((void *)v21 + 2) = v121 - 1;
        a1 = v167;
        if (v121 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v23 = 1;
LABEL_14:
    Swift::Int v15 = a1[1];
    Swift::Int v22 = v176;
    if (v176 >= v15) {
      goto LABEL_107;
    }
  }
  if (__OFADD__(v166, v157)) {
    goto LABEL_144;
  }
  if (v166 + v157 >= v15) {
    uint64_t v70 = (void (*)(char *, uint64_t))v15;
  }
  else {
    uint64_t v70 = (void (*)(char *, uint64_t))(v166 + v157);
  }
  if ((uint64_t)v70 >= v166)
  {
    if ((void (*)(char *, uint64_t))v24 == v70)
    {
      if (v24 < v166) {
        goto LABEL_136;
      }
    }
    else
    {
      uint64_t v158 = v2;
      uint64_t v122 = *(void *)(v169 + 72);
      uint64_t v123 = v122 * (v24 - 1);
      uint64_t v170 = v122;
      Swift::Int v124 = v24 * v122;
      uint64_t v163 = v70;
      do
      {
        uint64_t v126 = 0;
        uint64_t v127 = v166;
        Swift::Int v176 = v24;
        uint64_t v171 = v124;
        uint64_t v172 = v123;
        while (1)
        {
          uint64_t v180 = v127;
          uint64_t v128 = *a1;
          Swift::Int v179 = v124 + v126;
          uint64_t v129 = (uint64_t)v181;
          sub_10008EBCC(v124 + v126 + v128, (uint64_t)v181);
          uint64_t v178 = v123 + v126;
          uint64_t v130 = v173;
          sub_10008EBCC(v123 + v126 + v128, (uint64_t)v173);
          uint64_t v131 = *(int *)(v182 + 48);
          int v132 = (char *)v174 + v131;
          uint64_t v133 = (_OWORD *)v129;
          uint64_t v134 = v129 + v131;
          *uint64_t v174 = *v133;
          uint64_t v135 = type metadata accessor for LayoutSubview();
          uint64_t v136 = *(void *)(v135 - 8);
          uint64_t v137 = *(void (**)(char *, uint64_t, uint64_t))(v136 + 16);
          v137(v132, v134, v135);
          LayoutSubview.priority.getter();
          double v139 = v138;
          uint64_t v140 = *(void (**)(char *, uint64_t))(v136 + 8);
          v140(v132, v135);
          uint64_t v141 = *(int *)(v182 + 48);
          unint64_t v142 = v175;
          char v143 = &v175[v141];
          *(_OWORD *)uint64_t v175 = *v130;
          v137(&v142[v141], (uint64_t)v130 + v141, v135);
          LayoutSubview.priority.getter();
          double v145 = v144;
          v140(v143, v135);
          sub_10008EC34((uint64_t)v130);
          sub_10008EC34((uint64_t)v181);
          if (v145 >= v139) {
            break;
          }
          uint64_t v146 = *a1;
          if (!*a1) {
            goto LABEL_146;
          }
          Swift::Int v124 = v171;
          uint64_t v123 = v172;
          uint64_t v147 = v146 + v172 + v126;
          sub_10008EC94(v146 + v171 + v126, v177);
          Swift::Int v125 = v176;
          swift_arrayInitWithTakeFrontToBack();
          sub_10008EC94(v177, v147);
          v126 -= v170;
          uint64_t v127 = v180 + 1;
          if (v125 == v180 + 1) {
            goto LABEL_97;
          }
        }
        Swift::Int v125 = v176;
        Swift::Int v124 = v171;
        uint64_t v123 = v172;
LABEL_97:
        Swift::Int v24 = v125 + 1;
        v123 += v170;
        v124 += v170;
      }
      while ((void (*)(char *, uint64_t))v24 != v163);
      Swift::Int v24 = (Swift::Int)v163;
      uint64_t v2 = v158;
      if ((uint64_t)v163 < v166) {
        goto LABEL_136;
      }
    }
    goto LABEL_49;
  }
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  Swift::Int result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10008D5D4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v46 = a1;
  uint64_t v60 = sub_1000063C0(&qword_1001FEFA8);
  uint64_t v7 = __chkstk_darwin(v60);
  uint64_t v56 = (uint64_t)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  int v51 = (char *)&v44 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v50 = (_OWORD *)((char *)&v44 - v12);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v49 = (char *)&v44 - v14;
  uint64_t result = __chkstk_darwin(v13);
  uint64_t v48 = (_OWORD *)((char *)&v44 - v17);
  uint64_t v55 = a3;
  uint64_t v45 = a2;
  if (a3 != a2)
  {
    uint64_t v18 = *(void *)(v16 + 72);
    uint64_t v19 = v18 * (v55 - 1);
    uint64_t v52 = v18;
    uint64_t v20 = v18 * v55;
    uint64_t v47 = a4;
    uint64_t v21 = v49;
LABEL_5:
    uint64_t v22 = 0;
    uint64_t v59 = v46;
    uint64_t v53 = v20;
    uint64_t v54 = v19;
    while (1)
    {
      uint64_t v23 = *a4;
      uint64_t v58 = v20 + v22;
      uint64_t v24 = v20 + v22 + v23;
      uint64_t v25 = v48;
      sub_10008EBCC(v24, (uint64_t)v48);
      uint64_t v57 = v19 + v22;
      sub_10008EBCC(v19 + v22 + v23, (uint64_t)v21);
      uint64_t v26 = *(int *)(v60 + 48);
      uint64_t v27 = (char *)v50 + v26;
      long long v28 = (char *)v25 + v26;
      *uint64_t v50 = *v25;
      uint64_t v29 = type metadata accessor for LayoutSubview();
      uint64_t v30 = *(void *)(v29 - 8);
      uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v30 + 16);
      v31(v27, v28, v29);
      LayoutSubview.priority.getter();
      double v33 = v32;
      uint64_t v34 = *(void (**)(char *, uint64_t))(v30 + 8);
      v34(v27, v29);
      uint64_t v35 = *(int *)(v60 + 48);
      double v36 = v51;
      double v37 = &v51[v35];
      *(_OWORD *)int v51 = *(_OWORD *)v21;
      v31(&v36[v35], &v21[v35], v29);
      LayoutSubview.priority.getter();
      double v39 = v38;
      uint64_t v40 = v29;
      uint64_t v19 = v54;
      v34(v37, v40);
      a4 = v47;
      sub_10008EC34((uint64_t)v21);
      uint64_t v41 = (uint64_t)v25;
      uint64_t v20 = v53;
      uint64_t result = sub_10008EC34(v41);
      if (v39 >= v33)
      {
LABEL_4:
        v19 += v52;
        v20 += v52;
        if (++v55 == v45) {
          return result;
        }
        goto LABEL_5;
      }
      uint64_t v42 = *a4;
      if (!*a4) {
        break;
      }
      uint64_t v43 = v42 + v19 + v22;
      sub_10008EC94(v42 + v20 + v22, v56);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = sub_10008EC94(v56, v43);
      v22 -= v52;
      if (v55 == ++v59) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_10008D968(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8 = sub_1000063C0(&qword_1001FEFA8);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v84 = (char *)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v83 = (_OWORD *)((char *)&v74 - v12);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v82 = (char *)&v74 - v14;
  __chkstk_darwin(v13);
  uint64_t v81 = (_OWORD *)((char *)&v74 - v15);
  uint64_t v17 = *(void *)(v16 + 72);
  if (!v17)
  {
    __break(1u);
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
  if (a2 - a1 == 0x8000000000000000 && v17 == -1) {
    goto LABEL_61;
  }
  int64_t v18 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v17 == -1) {
    goto LABEL_62;
  }
  uint64_t v19 = (uint64_t)(a2 - a1) / v17;
  unint64_t v89 = a1;
  unint64_t v88 = a4;
  uint64_t v20 = v18 / v17;
  if (v19 >= v18 / v17)
  {
    if ((v20 & 0x8000000000000000) == 0)
    {
      uint64_t v22 = v20 * v17;
      if (a4 < a2 || a2 + v22 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v48 = a4 + v22;
      unint64_t v87 = a4 + v22;
      unint64_t v89 = a2;
      if (v22 >= 1 && a1 < a2)
      {
        uint64_t v50 = -v17;
        uint64_t v80 = v8;
        unint64_t v76 = a1;
        unint64_t v77 = a4;
        uint64_t v75 = -v17;
        int v51 = v82;
        do
        {
          unint64_t v85 = a3;
          unint64_t v86 = a2;
          unint64_t v79 = a3 + v50;
          uint64_t v52 = v81;
          sub_10008EBCC(v48 + v50, (uint64_t)v81);
          uint64_t v78 = a2 + v50;
          sub_10008EBCC(a2 + v50, (uint64_t)v51);
          uint64_t v53 = *(int *)(v8 + 48);
          uint64_t v54 = (char *)v83 + v53;
          uint64_t v55 = (char *)v52 + v53;
          _OWORD *v83 = *v52;
          uint64_t v56 = type metadata accessor for LayoutSubview();
          uint64_t v57 = *(void *)(v56 - 8);
          uint64_t v58 = v8;
          uint64_t v59 = *(void (**)(char *, char *, uint64_t))(v57 + 16);
          v59(v54, v55, v56);
          LayoutSubview.priority.getter();
          double v61 = v60;
          uint64_t v62 = *(void (**)(char *, uint64_t))(v57 + 8);
          v62(v54, v56);
          uint64_t v63 = *(int *)(v58 + 48);
          Swift::Int v64 = v84;
          Swift::Int v65 = &v84[v63];
          *(_OWORD *)uint64_t v84 = *(_OWORD *)v51;
          v59(&v64[v63], &v51[v63], v56);
          LayoutSubview.priority.getter();
          double v67 = v66;
          v62(v65, v56);
          sub_10008EC34((uint64_t)v51);
          sub_10008EC34((uint64_t)v52);
          if (v67 >= v61)
          {
            unint64_t v71 = v86;
            unint64_t v72 = v87;
            v87 += v75;
            uint64_t v50 = v75;
            unint64_t v68 = v79;
            if (v85 < v72 || v79 >= v72)
            {
              uint64_t v8 = v80;
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v69 = v76;
              unint64_t v70 = v77;
            }
            else
            {
              uint64_t v8 = v80;
              unint64_t v69 = v76;
              unint64_t v70 = v77;
              if (v85 != v72) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
          }
          else
          {
            uint64_t v50 = v75;
            unint64_t v68 = v79;
            if (v85 < v86 || v79 >= v86)
            {
              unint64_t v71 = v78;
              uint64_t v8 = v80;
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v69 = v76;
              unint64_t v70 = v77;
            }
            else
            {
              uint64_t v8 = v80;
              unint64_t v69 = v76;
              unint64_t v70 = v77;
              unint64_t v71 = v78;
              if (v85 != v86) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            v89 += v50;
          }
          unint64_t v48 = v87;
          if (v87 <= v70) {
            break;
          }
          a2 = v71;
          a3 = v68;
        }
        while (v71 > v69);
      }
      goto LABEL_59;
    }
  }
  else if ((v19 & 0x8000000000000000) == 0)
  {
    uint64_t v21 = v19 * v17;
    if (a4 < a1 || a1 + v21 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v79 = a4 + v21;
    unint64_t v87 = a4 + v21;
    if (v21 >= 1 && a2 < a3)
    {
      uint64_t v80 = v8;
      unint64_t v85 = a3;
      uint64_t v78 = v17;
      uint64_t v24 = v81;
      do
      {
        unint64_t v86 = a2;
        sub_10008EBCC(a2, (uint64_t)v24);
        uint64_t v25 = v82;
        sub_10008EBCC(a4, (uint64_t)v82);
        uint64_t v26 = *(int *)(v8 + 48);
        uint64_t v27 = (char *)v83 + v26;
        uint64_t v28 = v8;
        uint64_t v29 = (char *)v24 + v26;
        _OWORD *v83 = *v24;
        uint64_t v30 = type metadata accessor for LayoutSubview();
        uint64_t v31 = *(void *)(v30 - 8);
        double v32 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
        v32(v27, v29, v30);
        LayoutSubview.priority.getter();
        double v34 = v33;
        uint64_t v35 = *(void (**)(char *, uint64_t))(v31 + 8);
        v35(v27, v30);
        uint64_t v36 = *(int *)(v28 + 48);
        double v37 = v84;
        double v38 = &v84[v36];
        *(_OWORD *)uint64_t v84 = *(_OWORD *)v25;
        v32(&v37[v36], &v25[v36], v30);
        LayoutSubview.priority.getter();
        double v40 = v39;
        v35(v38, v30);
        sub_10008EC34((uint64_t)v25);
        sub_10008EC34((uint64_t)v24);
        unint64_t v41 = v89;
        if (v40 >= v34)
        {
          unint64_t v45 = v86;
          uint64_t v42 = v78;
          unint64_t v46 = v88 + v78;
          if (v89 < v88 || v89 >= v46)
          {
            uint64_t v8 = v80;
            swift_arrayInitWithTakeFrontToBack();
            unint64_t v44 = v85;
            unint64_t v47 = v45;
          }
          else
          {
            unint64_t v44 = v85;
            unint64_t v47 = v86;
            uint64_t v8 = v80;
            if (v89 != v88) {
              swift_arrayInitWithTakeBackToFront();
            }
          }
          unint64_t v88 = v46;
          unint64_t v43 = v47;
        }
        else
        {
          uint64_t v42 = v78;
          unint64_t v43 = v86 + v78;
          if (v89 < v86 || v89 >= v43)
          {
            uint64_t v8 = v80;
            swift_arrayInitWithTakeFrontToBack();
            unint64_t v44 = v85;
          }
          else
          {
            unint64_t v44 = v85;
            uint64_t v8 = v80;
            if (v89 == v86) {
              unint64_t v41 = v86;
            }
            else {
              swift_arrayInitWithTakeBackToFront();
            }
          }
        }
        unint64_t v89 = v41 + v42;
        a4 = v88;
        if (v88 >= v79) {
          break;
        }
        a2 = v43;
      }
      while (v43 < v44);
    }
LABEL_59:
    sub_1001723F8(&v89, &v88, (uint64_t *)&v87);
    return 1;
  }
LABEL_63:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10008E078(void **a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  uint64_t v10 = (double *)type metadata accessor for LayoutSubviews();
  double v11 = *(v10 - 1);
  __chkstk_darwin(v10);
  unint64_t v13 = (unint64_t)v97 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v107 = COERCE_DOUBLE(sub_1000063C0(&qword_1001FEFA8));
  uint64_t v103 = *(void *)(*(void *)&v107 - 8);
  uint64_t v14 = __chkstk_darwin(*(void *)&v107);
  uint64_t v16 = (void *)((char *)v97 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v14);
  uint64_t v106 = (void *)((char *)v97 - v17);
  uint64_t v100 = type metadata accessor for LayoutSubview();
  uint64_t v102 = *(void *)(v100 - 8);
  uint64_t v18 = __chkstk_darwin(v100);
  uint64_t v20 = (char *)v97 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v18);
  uint64_t v23 = (char *)v97 - v22;
  __chkstk_darwin(v21);
  uint64_t v25 = (char *)v97 - v24;
  sub_10008EB74();
  dispatch thunk of Collection.startIndex.getter();
  dispatch thunk of Collection.endIndex.getter();
  if (dispatch thunk of Collection.distance(from:to:)() == 3)
  {
    LayoutSubviews.subscript.getter();
    LayoutSubviews.subscript.getter();
    LayoutSubviews.subscript.getter();
    sub_1000063C0(&qword_1001FEFB8);
    uint64_t v26 = (int *)(sub_1000063C0(&qword_1001FB1B0) - 8);
    uint64_t v27 = *(void *)(*(void *)v26 + 72);
    unint64_t v28 = (*(unsigned __int8 *)(*(void *)v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v26 + 80);
    uint64_t v105 = 2 * v27;
    uint64_t v29 = swift_allocObject();
    *(_OWORD *)(v29 + 16) = xmmword_10018A730;
    uint64_t v30 = (void *)(v29 + v28);
    unint64_t v31 = v29 + v28 + v26[14];
    static UnitPoint.leading.getter();
    *uint64_t v30 = v32;
    v30[1] = v33;
    uint64_t v101 = v23;
    double v34 = *(void (**)(unint64_t, char *, uint64_t))(v102 + 16);
    uint64_t v98 = v25;
    unint64_t v35 = v100;
    v34(v31, v25, v100);
    uint64_t v36 = (void *)((char *)v30 + v27);
    double v37 = (char *)v36 + v26[14];
    static UnitPoint.trailing.getter();
    void *v36 = v38;
    v36[1] = v39;
    char v99 = v20;
    v34((unint64_t)v37, v20, v35);
    double v40 = (void *)((char *)v30 + v105);
    unint64_t v41 = (char *)v30 + v105 + v26[14];
    static UnitPoint.center.getter();
    void *v40 = v42;
    v40[1] = v43;
    v34((unint64_t)v41, v101, v35);
    sub_100005ADC(v29);
    uint64_t v44 = swift_bridgeObjectRetain();
    a1 = (void **)sub_100171510(v44);
    swift_bridgeObjectRelease();
    v109[0] = a1;
    sub_10008C830(v109);
    unint64_t v13 = v35;
    swift_bridgeObjectRelease();
    double v11 = *(double *)v109;
    uint64_t v10 = (double *)sub_100005CE8((uint64_t)_swiftEmptyArrayStorage);
    LOBYTE(v110) = 0;
    uint64_t v45 = *(void *)(*(void *)&v11 + 16);
    if (v45)
    {
      uint64_t v105 = *(void *)&a5;
      BOOL v104 = (char *)v106 + *(int *)(*(void *)&v107 + 48);
      unint64_t v46 = (*(unsigned __int8 *)(v103 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v103 + 80);
      *(double *)&v97[1] = v11;
      uint64_t v47 = *(void *)&v11 + v46;
      uint64_t v103 = *(void *)(v103 + 72);
      unint64_t v48 = (void (**)(char *, char *, unint64_t))(v102 + 32);
      double v49 = a4;
      do
      {
        uint64_t v50 = v106;
        sub_10008EBCC(v47, (uint64_t)v106);
        double v11 = v49;
        uint64_t v51 = *v50;
        uint64_t v52 = v50[1];
        uint64_t v53 = (char *)v16 + *(int *)(*(void *)&v107 + 48);
        *uint64_t v16 = v51;
        v16[1] = v52;
        unint64_t v54 = v13;
        (*v48)(v53, v104, v13);
        LOBYTE(v109[0]) = v110;
        char v108 = 0;
        LayoutSubview.sizeThatFits(_:)();
        double v56 = v55;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v109[0] = v10;
        a1 = (void **)v10;
        unint64_t v13 = sub_100007D60();
        uint64_t v59 = *((void *)v10 + 2);
        BOOL v60 = (v58 & 1) == 0;
        uint64_t v61 = v59 + v60;
        if (__OFADD__(v59, v60))
        {
          __break(1u);
LABEL_37:
          __break(1u);
LABEL_38:
          __break(1u);
          goto LABEL_39;
        }
        double v11 = *(double *)&v58;
        if (*((void *)v10 + 3) >= v61)
        {
          if (isUniquelyReferenced_nonNull_native)
          {
            uint64_t v10 = (double *)v109[0];
            if (v58) {
              goto LABEL_11;
            }
          }
          else
          {
            a1 = v109;
            sub_1001707B8();
            uint64_t v10 = (double *)v109[0];
            if (LOBYTE(v11)) {
              goto LABEL_11;
            }
          }
        }
        else
        {
          sub_10016DAD4(v61, isUniquelyReferenced_nonNull_native);
          a1 = (void **)v109[0];
          unint64_t v62 = sub_100007D60();
          if ((LOBYTE(v11) & 1) != (v63 & 1)) {
            goto LABEL_55;
          }
          unint64_t v13 = v62;
          uint64_t v10 = (double *)v109[0];
          if (LOBYTE(v11))
          {
LABEL_11:
            *(double *)(*((void *)v10 + 7) + 8 * v13) = v56;
            goto LABEL_15;
          }
        }
        *(void *)&v10[(v13 >> 6) + 8] |= 1 << v13;
        Swift::Int v64 = (void *)(*((void *)v10 + 6) + 16 * v13);
        *Swift::Int v64 = v51;
        v64[1] = v52;
        *(double *)(*((void *)v10 + 7) + 8 * v13) = v56;
        uint64_t v65 = *((void *)v10 + 2);
        BOOL v66 = __OFADD__(v65, 1);
        uint64_t v67 = v65 + 1;
        if (v66) {
          goto LABEL_37;
        }
        *((void *)v10 + 2) = v67;
LABEL_15:
        swift_bridgeObjectRelease();
        if (v110) {
          goto LABEL_54;
        }
        unint64_t v13 = v54;
        sub_10008EC34((uint64_t)v16);
        double v49 = v49 - v56;
        v47 += v103;
        --v45;
      }
      while (v45);
    }
    swift_release();
    uint64_t v68 = v102;
    static UnitPoint.leading.getter();
    unint64_t v69 = v99;
    unint64_t v70 = (void **)v101;
    unint64_t v71 = (void **)v98;
    if (!*((void *)v10 + 2)) {
      goto LABEL_38;
    }
    a1 = (void **)v10;
    unint64_t v72 = sub_100007D60();
    if (v73)
    {
      double v74 = *(double *)(*((void *)v10 + 7) + 8 * v72);
      v111.origin.x = a2;
      v111.origin.y = a3;
      v111.size.width = a4;
      v111.size.height = a5;
      double MinX = CGRectGetMinX(v111);
      v112.origin.x = a2;
      v112.origin.y = a3;
      v112.size.width = a4;
      v112.size.height = a5;
      CGFloat MaxX = CGRectGetMaxX(v112);
      static UnitPoint.trailing.getter();
      if (*((void *)v10 + 2))
      {
        a1 = (void **)v10;
        unint64_t v77 = sub_100007D60();
        if (v78)
        {
          v113.origin.y = a3;
          v113.origin.x = a2;
          v113.size.height = a5;
          v113.size.width = a4;
          double v107 = MaxX;
          double v79 = *(double *)(*((void *)v10 + 7) + 8 * v77);
          double MidX = CGRectGetMidX(v113);
          static UnitPoint.center.getter();
          if (*((void *)v10 + 2))
          {
            a1 = (void **)v10;
            unint64_t v81 = sub_100007D60();
            if (v82)
            {
              double v83 = MidX + *(double *)(*((void *)v10 + 7) + 8 * v81) * -0.5;
              if (v83 >= v74 + MinX)
              {
                static UnitPoint.center.getter();
                if (!*((void *)v10 + 2))
                {
LABEL_50:
                  __break(1u);
                  goto LABEL_51;
                }
                a1 = (void **)v10;
                unint64_t v84 = sub_100007D60();
                if ((v85 & 1) == 0)
                {
LABEL_51:
                  __break(1u);
                  goto LABEL_52;
                }
                if (v107 - v79 < v83 + *(double *)(*((void *)v10 + 7) + 8 * v84))
                {
                  static UnitPoint.center.getter();
                  if (!*((void *)v10 + 2))
                  {
LABEL_52:
                    __break(1u);
LABEL_53:
                    __break(1u);
LABEL_54:
                    __break(1u);
LABEL_55:
                    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
                    __break(1u);
                    goto LABEL_56;
                  }
                  a1 = (void **)v10;
                  sub_100007D60();
                  if ((v86 & 1) == 0) {
                    goto LABEL_53;
                  }
                }
              }
              v114.origin.x = a2;
              v114.origin.y = a3;
              v114.size.width = a4;
              v114.size.height = a5;
              CGRectGetMidY(v114);
              static UnitPoint.leading.getter();
              static UnitPoint.center.getter();
              if (*((void *)v10 + 2))
              {
                a1 = (void **)v10;
                unint64_t v87 = sub_100007D60();
                if (v88)
                {
                  double v11 = *(double *)(*((void *)v10 + 7) + 8 * v87);
                  v115.origin.x = a2;
                  v115.origin.y = a3;
                  v115.size.width = a4;
                  v115.size.height = a5;
                  CGRectGetHeight(v115);
                  LOBYTE(v109[0]) = 0;
                  char v108 = 0;
                  a1 = v70;
                  LayoutSubview.place(at:anchor:proposal:)();
                  v116.origin.x = a2;
                  v116.origin.y = a3;
                  v116.size.width = a4;
                  v116.size.height = a5;
                  CGRectGetMinX(v116);
                  v117.origin.x = a2;
                  v117.origin.y = a3;
                  v117.size.width = a4;
                  v117.size.height = a5;
                  CGRectGetMidY(v117);
                  static UnitPoint.leading.getter();
                  static UnitPoint.leading.getter();
                  if (*((void *)v10 + 2))
                  {
                    a1 = (void **)v10;
                    unint64_t v89 = sub_100007D60();
                    if (v90)
                    {
                      double v11 = *(double *)(*((void *)v10 + 7) + 8 * v89);
                      v118.origin.x = a2;
                      v118.origin.y = a3;
                      v118.size.width = a4;
                      v118.size.height = a5;
                      CGRectGetHeight(v118);
                      LOBYTE(v109[0]) = 0;
                      char v108 = 0;
                      a1 = v71;
                      LayoutSubview.place(at:anchor:proposal:)();
                      v119.origin.x = a2;
                      v119.origin.y = a3;
                      v119.size.width = a4;
                      v119.size.height = a5;
                      CGRectGetMaxX(v119);
                      v120.origin.x = a2;
                      v120.origin.y = a3;
                      v120.size.width = a4;
                      v120.size.height = a5;
                      CGRectGetMidY(v120);
                      static UnitPoint.trailing.getter();
                      static UnitPoint.trailing.getter();
                      if (*((void *)v10 + 2))
                      {
                        a1 = (void **)v10;
                        sub_100007D60();
                        if (v91)
                        {
                          v121.origin.x = a2;
                          v121.origin.y = a3;
                          v121.size.width = a4;
                          v121.size.height = a5;
                          CGRectGetHeight(v121);
                          LOBYTE(v109[0]) = 0;
                          char v108 = 0;
                          LayoutSubview.place(at:anchor:proposal:)();
                          uint64_t v92 = *(void (**)(char *, unint64_t))(v68 + 8);
                          v92(v69, v13);
                          v92((char *)v70, v13);
                          v92((char *)v71, v13);
                          return swift_bridgeObjectRelease();
                        }
                        goto LABEL_49;
                      }
LABEL_48:
                      __break(1u);
LABEL_49:
                      __break(1u);
                      goto LABEL_50;
                    }
LABEL_47:
                    __break(1u);
                    goto LABEL_48;
                  }
LABEL_46:
                  __break(1u);
                  goto LABEL_47;
                }
LABEL_45:
                __break(1u);
                goto LABEL_46;
              }
LABEL_44:
              __break(1u);
              goto LABEL_45;
            }
LABEL_43:
            __break(1u);
            goto LABEL_44;
          }
LABEL_42:
          __break(1u);
          goto LABEL_43;
        }
LABEL_41:
        __break(1u);
        goto LABEL_42;
      }
    }
    else
    {
LABEL_39:
      __break(1u);
    }
    __break(1u);
    goto LABEL_41;
  }
LABEL_56:
  (*(void (**)(unint64_t, void **, double *))(*(void *)&v11 + 16))(v13, a1, v10);
  v109[0] = 0;
  v109[1] = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(92);
  v94._uint64_t countAndFlagsBits = 0xD000000000000033;
  v94._uint64_t object = (void *)0x800000010019DD90;
  String.append(_:)(v94);
  dispatch thunk of Collection.startIndex.getter();
  dispatch thunk of Collection.endIndex.getter();
  uint64_t v110 = dispatch thunk of Collection.distance(from:to:)();
  v95._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v95);
  swift_bridgeObjectRelease();
  v96._uint64_t object = (void *)0x800000010019DDD0;
  v96._uint64_t countAndFlagsBits = 0xD000000000000027;
  String.append(_:)(v96);
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

unint64_t sub_10008EB74()
{
  unint64_t result = qword_1001FEFB0;
  if (!qword_1001FEFB0)
  {
    type metadata accessor for LayoutSubviews();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FEFB0);
  }
  return result;
}

uint64_t sub_10008EBCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000063C0(&qword_1001FEFA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10008EC34(uint64_t a1)
{
  uint64_t v2 = sub_1000063C0(&qword_1001FEFA8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10008EC94(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000063C0(&qword_1001FEFA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10008ECFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[15] = a3;
  v4[16] = v3;
  v4[13] = a1;
  v4[14] = a2;
  uint64_t v5 = type metadata accessor for StringResponseSanitizer.DefaultableGuardrails();
  v4[17] = v5;
  v4[18] = *(void *)(v5 - 8);
  v4[19] = swift_task_alloc();
  type metadata accessor for OutputDenyListBundle();
  v4[20] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for StringResponseSanitizer.DefaultableOverrides();
  v4[21] = v6;
  v4[22] = *(void *)(v6 - 8);
  v4[23] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for StringResponseSanitizer();
  v4[24] = v7;
  v4[25] = *(void *)(v7 - 8);
  v4[26] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for StringRenderedPromptSanitizer.DefaultableGuardrails();
  v4[27] = v8;
  v4[28] = *(void *)(v8 - 8);
  v4[29] = swift_task_alloc();
  type metadata accessor for InputDenyListBundle();
  v4[30] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for StringRenderedPromptSanitizer.DefaultableOverrides();
  v4[31] = v9;
  v4[32] = *(void *)(v9 - 8);
  v4[33] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for StringRenderedPromptSanitizer();
  v4[34] = v10;
  v4[35] = *(void *)(v10 - 8);
  v4[36] = swift_task_alloc();
  sub_1000063C0(&qword_1001FEDC0);
  v4[37] = swift_task_alloc();
  v4[38] = swift_task_alloc();
  uint64_t v11 = type metadata accessor for SamplingParameters();
  v4[39] = v11;
  v4[40] = *(void *)(v11 - 8);
  v4[41] = swift_task_alloc();
  uint64_t v12 = sub_1000063C0(&qword_1001FF090);
  v4[42] = v12;
  v4[43] = *(void *)(v12 - 8);
  v4[44] = swift_task_alloc();
  type metadata accessor for MainActor();
  v4[45] = static MainActor.shared.getter();
  uint64_t v14 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[46] = v14;
  v4[47] = v13;
  return _swift_task_switch(sub_10008F114, v14, v13);
}

uint64_t sub_10008F114()
{
  uint64_t v1 = *(void *)(v0 + 328);
  uint64_t v48 = *(void *)(v0 + 320);
  uint64_t v2 = *(void *)(v0 + 304);
  uint64_t v49 = *(void *)(v0 + 312);
  uint64_t v3 = *(void *)(v0 + 296);
  uint64_t v33 = *(void *)(v0 + 288);
  uint64_t v4 = *(void *)(v0 + 264);
  uint64_t v46 = *(void *)(v0 + 280);
  uint64_t v47 = *(void *)(v0 + 272);
  uint64_t v5 = *(void *)(v0 + 256);
  uint64_t v29 = *(void *)(v0 + 248);
  uint64_t v30 = *(void *)(v0 + 232);
  uint64_t v31 = *(void *)(v0 + 224);
  uint64_t v32 = *(void *)(v0 + 216);
  uint64_t v41 = *(void *)(v0 + 208);
  uint64_t v44 = *(void *)(v0 + 200);
  uint64_t v45 = *(void *)(v0 + 192);
  uint64_t v36 = *(void *)(v0 + 176);
  uint64_t v37 = *(void *)(v0 + 168);
  uint64_t v34 = *(void *)(v0 + 184);
  uint64_t v38 = *(void *)(v0 + 152);
  uint64_t v39 = *(void *)(v0 + 144);
  uint64_t v40 = *(void *)(v0 + 136);
  long long v43 = *(_OWORD *)(v0 + 112);
  uint64_t v42 = *(void *)(v0 + 104);
  uint64_t v6 = type metadata accessor for SamplingStrategy();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v2, 1, 1, v6);
  sub_100091B0C(v2, v3);
  uint64_t v35 = v1;
  SamplingParameters.init(strategy:temperature:frequencyPenalty:lengthPenalty:maximumTokens:stopSequences:randomSeed:timeout:)();
  SamplingParameters.promptLookupDraftSteps.setter();
  SamplingParameters.speculativeSampling.setter();
  SamplingParameters.tokenHealing.setter();
  sub_10002784C(v2, &qword_1001FEDC0);
  static Catalog.Resource.TokenInputDenyList.WritingToolsComposeInputDenyList()();
  uint64_t v7 = *(void *)(v0 + 40);
  uint64_t v8 = sub_100044740((void *)(v0 + 16), v7);
  uint64_t v9 = *(void *)(v7 - 8);
  uint64_t v10 = swift_task_alloc();
  (*(void (**)(uint64_t, void *, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 16))(v10, v8, v7, v11, v12, v13);
  InputDenyListBundle.init<A>(resource:)();
  swift_task_dealloc();
  StringRenderedPromptSanitizer.Overrides.init(denyList:)();
  sub_100027DBC(v0 + 16);
  uint64_t v14 = type metadata accessor for StringRenderedPromptSanitizer.Overrides();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v4, 0, 1, v14);
  (*(void (**)(uint64_t, void, uint64_t))(v5 + 104))(v4, enum case for StringRenderedPromptSanitizer.DefaultableOverrides.withoutDefault(_:), v29);
  uint64_t v15 = type metadata accessor for StringRenderedPromptSanitizer.Guardrails();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v30, 1, 1, v15);
  (*(void (**)(uint64_t, void, uint64_t))(v31 + 104))(v30, enum case for StringRenderedPromptSanitizer.DefaultableGuardrails.withoutDefault(_:), v32);
  StringRenderedPromptSanitizer.init(overrides:guardrails:)();
  static Catalog.Resource.TokenOutputDenyList.WritingToolsComposeOutputDenyList()();
  uint64_t v16 = *(void *)(v0 + 80);
  uint64_t v17 = sub_100044740((void *)(v0 + 56), v16);
  uint64_t v18 = *(void *)(v16 - 8);
  uint64_t v19 = swift_task_alloc();
  (*(void (**)(uint64_t, void *, uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 16))(v19, v17, v16, v20, v21, v22);
  OutputDenyListBundle.init<A>(resource:)();
  swift_task_dealloc();
  StringResponseSanitizer.Overrides.init(denyList:)();
  sub_100027DBC(v0 + 56);
  uint64_t v23 = type metadata accessor for StringResponseSanitizer.Overrides();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v34, 0, 1, v23);
  (*(void (**)(uint64_t, void, uint64_t))(v36 + 104))(v34, enum case for StringResponseSanitizer.DefaultableOverrides.withoutDefault(_:), v37);
  uint64_t v24 = type metadata accessor for StringResponseSanitizer.Guardrails();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v38, 1, 1, v24);
  (*(void (**)(uint64_t, void, uint64_t))(v39 + 104))(v38, enum case for StringResponseSanitizer.DefaultableGuardrails.withoutDefault(_:), v40);
  StringResponseSanitizer.init(overrides:guardrails:)();
  uint64_t v25 = swift_task_alloc();
  *(_OWORD *)(v25 + 16) = v43;
  *(void *)(v25 + 32) = v42;
  sub_100091B94();
  GenerativeExperiencesSession.complete<A>(generating:parameters:promptSanitizer:responseSanitizer:query:)();
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v41, v45);
  (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v33, v47);
  (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v35, v49);
  uint64_t v26 = (void *)swift_task_alloc();
  *(void *)(v0 + 384) = v26;
  *uint64_t v26 = v0;
  v26[1] = sub_10008F744;
  uint64_t v27 = *(void *)(v0 + 336);
  return TokenStream.content()(v0 + 96, v27);
}

uint64_t sub_10008F744()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 352);
  uint64_t v4 = *(void *)(*v1 + 344);
  uint64_t v5 = *(void *)(*v1 + 336);
  *(void *)(*v1 + 392) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  uint64_t v6 = *(void *)(v2 + 376);
  uint64_t v7 = *(void *)(v2 + 368);
  if (v0) {
    uint64_t v8 = sub_10008F9F8;
  }
  else {
    uint64_t v8 = sub_10008F8DC;
  }
  return _swift_task_switch(v8, v7, v6);
}

uint64_t sub_10008F8DC()
{
  swift_release();
  uint64_t v3 = *(void *)(v0 + 96);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v1(v3);
}

uint64_t sub_10008F9F8()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10008FB08()
{
  uint64_t v0 = sub_1000063C0(&qword_1001FF0A8);
  sub_1000281F0(v0, qword_100212878);
  sub_10000EBE8(v0, (uint64_t)qword_100212878);
  sub_1000063C0(&qword_1001FF0B0);
  return Regex.init(_regexString:version:)();
}

void *sub_10008FB88()
{
  v41[1] = *v0;
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v55 = *(void *)(v1 - 8);
  uint64_t v56 = v1;
  __chkstk_darwin(v1);
  uint64_t v53 = (char *)v41 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for SessionConfiguration();
  __chkstk_darwin(v3 - 8);
  unint64_t v54 = (char *)v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Prompt();
  __chkstk_darwin(v5 - 8);
  uint64_t v52 = (char *)v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000063C0(&qword_1001FEF08);
  __chkstk_darwin(v7 - 8);
  uint64_t v51 = (char *)v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Prompt.StringInterpolation();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = type metadata accessor for ChatMessageRole();
  uint64_t v47 = *(void *)(v10 - 8);
  uint64_t v48 = v10;
  __chkstk_darwin(v10);
  uint64_t v45 = (char *)v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = type metadata accessor for ChatMessagePrompt();
  uint64_t v44 = *(void *)(v49 - 8);
  uint64_t v12 = __chkstk_darwin(v49);
  uint64_t v50 = (char *)v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  long long v43 = (char *)v41 - v14;
  uint64_t v15 = type metadata accessor for CachePolicy();
  __chkstk_darwin(v15 - 8);
  uint64_t v16 = type metadata accessor for SessionConfiguration();
  uint64_t v42 = *(void *)(v16 - 8);
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v46 = (char *)v41 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  unint64_t v62 = (char *)v41 - v19;
  uint64_t v57 = v0;
  v41[0] = (char *)v0 + OBJC_IVAR____TtC21WritingToolsUIService10SlotParser___observationRegistrar;
  ObservationRegistrar.init()();
  sub_1000063C0((uint64_t *)&unk_1001FEF10);
  type metadata accessor for ModelBundle();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_10018A720;
  static Catalog.Resource.LLM.Model.ChatGPT()();
  uint64_t v21 = v60;
  uint64_t v20 = v61;
  uint64_t v22 = sub_100044740(v59, v60);
  v58[3] = v21;
  v58[4] = *(void *)(v20 + 8);
  uint64_t v23 = sub_10002E148(v58);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(v23, v22, v21);
  uint64_t v24 = (char *)v16;
  ModelBundle.init(resource:)();
  sub_100027DBC((uint64_t)v59);
  static CachePolicy.inMemory.getter();
  uint64_t v25 = v43;
  SessionConfiguration.init(identifier:useCaseID:preferredModelBundles:handlesSensitiveData:cachePolicy:onBehalfOf:parentOfOnBehalfOf:)();
  (*(void (**)(char *, void, uint64_t))(v47 + 104))(v45, enum case for ChatMessageRole.system(_:), v48);
  uint64_t v26 = v44;
  Prompt.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v27._uint64_t countAndFlagsBits = 0;
  v27._uint64_t object = (void *)0xE000000000000000;
  Prompt.StringInterpolation.appendLiteral(_:)(v27);
  sub_100091234();
  uint64_t v28 = type metadata accessor for Prompt.Component.Privacy();
  uint64_t v29 = (uint64_t)v51;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v51, 1, 1, v28);
  Prompt.StringInterpolation.appendInterpolation(_:priority:privacy:)();
  swift_bridgeObjectRelease();
  uint64_t v30 = v49;
  sub_10002784C(v29, &qword_1001FEF08);
  v31._uint64_t countAndFlagsBits = 0;
  v31._uint64_t object = (void *)0xE000000000000000;
  Prompt.StringInterpolation.appendLiteral(_:)(v31);
  Prompt.init(stringInterpolation:)();
  ChatMessagePrompt.init(role:prompt:)();
  uint64_t v32 = v42;
  uint64_t v33 = *(void (**)(char *, char *, char *))(v42 + 16);
  uint64_t v52 = v24;
  v33(v46, v62, v24);
  (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v50, v25, v30);
  uint64_t v34 = v53;
  UUID.init()();
  UUID.uuidString.getter();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v34, v56);
  SessionConfiguration.init(tokenGeneratorConfig:identifier:instructions:templateID:)();
  type metadata accessor for GenerativeExperiencesSession();
  swift_allocObject();
  uint64_t v35 = GenerativeExperiencesSession.init(configuration:)();
  if (v35)
  {
    uint64_t v36 = v35;
    (*(void (**)(char *, uint64_t))(v26 + 8))(v25, v30);
    (*(void (**)(char *, char *))(v32 + 8))(v62, v52);
    uint64_t v37 = v57;
    void v57[2] = v36;
  }
  else
  {
    sub_100083FF4();
    swift_allocError();
    *uint64_t v38 = 0xD000000000000020;
    v38[1] = 0x800000010019DE60;
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v25, v30);
    (*(void (**)(char *, char *))(v32 + 8))(v62, v52);
    uint64_t v39 = type metadata accessor for ObservationRegistrar();
    (*(void (**)(void, uint64_t))(*(void *)(v39 - 8) + 8))(v41[0], v39);
    uint64_t v37 = v57;
    swift_deallocPartialClassInstance();
  }
  return v37;
}

uint64_t sub_100090458()
{
  uint64_t v1 = v0;
  type metadata accessor for GenerativeExperiencesSession();
  GenerativeExperiencesSession.sessionIdentifier()();
  char v2 = static GenerativeExperiencesSession.terminateSession(for:)();
  swift_bridgeObjectRelease();
  if ((v2 & 1) == 0)
  {
    if (qword_1001FAC30 != -1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for Logger();
    sub_10000EBE8(v3, (uint64_t)qword_100212788);
    uint64_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "failed to terminate GES session", v6, 2u);
      swift_slowDealloc();
    }
  }
  swift_release();
  uint64_t v7 = v1 + OBJC_IVAR____TtC21WritingToolsUIService10SlotParser___observationRegistrar;
  uint64_t v8 = type metadata accessor for ObservationRegistrar();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  return v1;
}

uint64_t sub_1000905B4()
{
  sub_100090458();

  return swift_deallocClassInstance();
}

uint64_t sub_10009060C()
{
  return type metadata accessor for SlotParser();
}

uint64_t type metadata accessor for SlotParser()
{
  uint64_t result = qword_1001FEFF0;
  if (!qword_1001FEFF0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100090660()
{
  uint64_t result = type metadata accessor for ObservationRegistrar();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_100090700@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v18 = a3;
  uint64_t v17 = a2;
  uint64_t v22 = a4;
  uint64_t v5 = type metadata accessor for User();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ChatMessagesPrompt();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = a1;
  uint64_t v20 = v17;
  uint64_t v21 = v18;
  User.init(_:)();
  static ChatMessagesPromptBuilder.buildExpression<A>(_:)();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_1000063C0(&qword_1001FEE58);
  unint64_t v13 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_10018A720;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 16))(v14 + v13, v12, v9);
  static ChatMessagesPromptBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_100090940@<X0>(void (*a1)(char *, uint64_t)@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v38 = a1;
  uint64_t v39 = a2;
  uint64_t v41 = a3;
  uint64_t v3 = sub_1000063C0(&qword_1001FEF08);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Prompt.StringInterpolation();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = type metadata accessor for Prompt();
  uint64_t v40 = *(void *)(v7 - 8);
  uint64_t v8 = v40;
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v14 = (char *)&v35 - v13;
  __chkstk_darwin(v12);
  uint64_t v37 = (char *)&v35 - v15;
  Prompt.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v16._uint64_t countAndFlagsBits = 0;
  v16._uint64_t object = (void *)0xE000000000000000;
  Prompt.StringInterpolation.appendLiteral(_:)(v16);
  uint64_t v17 = type metadata accessor for Prompt.Component.Privacy();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v5, 1, 1, v17);
  Prompt.StringInterpolation.appendInterpolation(_:priority:privacy:)();
  sub_10002784C((uint64_t)v5, &qword_1001FEF08);
  v18._uint64_t countAndFlagsBits = 2570;
  v18._uint64_t object = (void *)0xE200000000000000;
  Prompt.StringInterpolation.appendLiteral(_:)(v18);
  Prompt.init(stringInterpolation:)();
  static CustomPromptBuilder.buildExpression(_:)();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v8 + 8);
  uint64_t v36 = v14;
  v19(v14, v7);
  uint64_t v38 = v19;
  Prompt.init(stringLiteral:)();
  static CustomPromptBuilder.buildExpression(_:)();
  uint64_t v35 = v11;
  v19(v11, v7);
  v42[0] = v39;
  sub_1000063C0(&qword_1001FBE30);
  sub_100027F2C(&qword_1001FEDF0, &qword_1001FBE30);
  uint64_t v20 = BidirectionalCollection<>.joined(separator:)();
  v42[3] = &type metadata for String;
  v42[4] = &protocol witness table for String;
  v42[0] = v20;
  v42[1] = v21;
  static CustomPromptBuilder.buildExpression(_:)();
  sub_100027DBC((uint64_t)v42);
  sub_1000063C0((uint64_t *)&unk_1001FEE60);
  uint64_t v22 = *(void *)(v40 + 72);
  unint64_t v23 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v24 = 2 * v22;
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_10018A730;
  unint64_t v26 = v25 + v23;
  Swift::String v27 = *(void (**)(unint64_t, char *, uint64_t))(v8 + 16);
  uint64_t v28 = v37;
  v27(v26, v37, v7);
  unint64_t v29 = v26 + v22;
  uint64_t v30 = v36;
  v27(v29, v36, v7);
  unint64_t v31 = v26 + v24;
  uint64_t v32 = v35;
  v27(v31, v35, v7);
  static CustomPromptBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  uint64_t v33 = v38;
  v38(v32, v7);
  v33(v30, v7);
  return ((uint64_t (*)(char *, uint64_t))v33)(v28, v7);
}

uint64_t sub_100090DB0()
{
  uint64_t v0 = type metadata accessor for Schema();
  sub_1000281F0(v0, qword_100212890);
  sub_10000EBE8(v0, (uint64_t)qword_100212890);
  sub_1000063C0(&qword_1001FF080);
  type metadata accessor for Schema.Field();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_10018A740;
  Schema.Field.init<A>(name:type:)();
  Schema.Field.init<A>(name:type:)();
  return Schema.init(fields:)();
}

uint64_t sub_100090EF0()
{
  uint64_t v0 = type metadata accessor for Schema();
  sub_1000281F0(v0, qword_1002128A8);
  sub_10000EBE8(v0, (uint64_t)qword_1002128A8);
  sub_1000063C0(&qword_1001FF080);
  type metadata accessor for Schema.Field();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_10018A720;
  sub_1000063C0(&qword_1001FF0C8);
  sub_100091E38();
  Schema.Field.init<A>(name:description:type:)();
  return Schema.init(fields:)();
}

uint64_t sub_100091028@<X0>(uint64_t a1@<X8>)
{
  return sub_100091168(&qword_1001FACD0, (uint64_t)qword_1002128A8, a1);
}

uint64_t sub_10009104C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  sub_1000063C0(&qword_1001FF0C8);
  sub_100091E38();
  GeneratedValues.extract<A>(field:)();
  uint64_t v5 = type metadata accessor for GeneratedValues();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  if (!v2) {
    *a2 = v7;
  }
  return result;
}

uint64_t sub_100091144@<X0>(uint64_t a1@<X8>)
{
  return sub_100091168(&qword_1001FACC8, (uint64_t)qword_100212890, a1);
}

uint64_t sub_100091168@<X0>(void *a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Schema();
  uint64_t v6 = sub_10000EBE8(v5, a2);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v7(a3, v6, v5);
}

uint64_t sub_100091204@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1000919A0(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_100091234()
{
  _StringGuts.grow(_:)(1010);
  v0._uint64_t countAndFlagsBits = 0xD000000000000191;
  v0._uint64_t object = (void *)0x800000010019DE90;
  String.append(_:)(v0);
  _print_unlocked<A, B>(_:_:)();
  v1._uint64_t countAndFlagsBits = 0xD000000000000080;
  v1._uint64_t object = (void *)0x800000010019E030;
  String.append(_:)(v1);
  _print_unlocked<A, B>(_:_:)();
  v2._uint64_t object = (void *)0x800000010019E0C0;
  v2._uint64_t countAndFlagsBits = 0xD000000000000035;
  String.append(_:)(v2);
  _print_unlocked<A, B>(_:_:)();
  v3._uint64_t countAndFlagsBits = 0xD0000000000001A6;
  v3._uint64_t object = (void *)0x800000010019E100;
  String.append(_:)(v3);
  return 0;
}

void *sub_100091378(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000063C0(&qword_1001FF0A0);
  uint64_t v44 = *(void *)(v4 - 8);
  uint64_t v5 = __chkstk_darwin(v4);
  long long v43 = (char *)v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v37 - v7;
  *(void *)&long long v55 = a1;
  *((void *)&v55 + 1) = a2;
  if (qword_1001FACC0 != -1) {
    goto LABEL_40;
  }
  while (1)
  {
    uint64_t v9 = sub_1000063C0(&qword_1001FF0A8);
    sub_10000EBE8(v9, (uint64_t)qword_100212878);
    uint64_t v10 = sub_1000063C0(&qword_1001FF0B0);
    sub_100091C08();
    sub_100027F2C(&qword_1001FF0C0, &qword_1001FF0A8);
    uint64_t v39 = v10;
    uint64_t v45 = BidirectionalCollection<>.matches<A, B>(of:)();
    uint64_t v42 = *(void *)(v45 + 16);
    if (!v42) {
      break;
    }
    unint64_t v12 = 0;
    unint64_t v41 = v45 + ((*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80));
    uint64_t v47 = (void (**)(char *, uint64_t))(v44 + 8);
    uint64_t v13 = _swiftEmptyArrayStorage;
    *(void *)&long long v11 = 136315138;
    long long v38 = v11;
    v37[1] = (char *)&type metadata for Any + 8;
    uint64_t v14 = v43;
    uint64_t v40 = v44 + 16;
    while (1)
    {
      if (v12 >= *(void *)(v45 + 16))
      {
        __break(1u);
        goto LABEL_39;
      }
      uint64_t v46 = v13;
      uint64_t v15 = *(void (**)(char *, unint64_t, uint64_t))(v44 + 16);
      v15(v8, v41 + *(void *)(v44 + 72) * v12, v4);
      if (qword_1001FAC30 != -1) {
        swift_once();
      }
      uint64_t v16 = type metadata accessor for Logger();
      sub_10000EBE8(v16, (uint64_t)qword_100212788);
      v15(v14, (unint64_t)v8, v4);
      uint64_t v17 = Logger.logObject.getter();
      os_log_type_t v18 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v17, v18))
      {
        uint64_t v19 = v8;
        uint64_t v20 = v14;
        uint64_t v21 = swift_slowAlloc();
        uint64_t v54 = swift_slowAlloc();
        *(_DWORD *)uint64_t v21 = v38;
        Regex.Match.output.getter();
        long long v48 = v55;
        uint64_t v49 = v56;
        uint64_t v50 = v57;
        long long v51 = v58;
        uint64_t v52 = v59;
        uint64_t v53 = v60;
        uint64_t v22 = String.init<A>(describing:)();
        *(void *)(v21 + 4) = sub_100021444(v22, v23, &v54);
        swift_bridgeObjectRelease();
        uint64_t v24 = v20;
        uint64_t v8 = v19;
        uint64_t v25 = *v47;
        (*v47)(v24, v4);
        _os_log_impl((void *)&_mh_execute_header, v17, v18, "match: %s", (uint8_t *)v21, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        uint64_t v25 = *v47;
        (*v47)(v14, v4);
      }

      uint64_t v13 = v46;
      Regex.Match.output.getter();
      swift_bridgeObjectRelease();
      uint64_t v26 = static String._fromSubstring(_:)();
      uint64_t v28 = v27;
      swift_bridgeObjectRelease();
      unint64_t v29 = (void *)v13[2];
      if (!v29) {
        goto LABEL_17;
      }
      if ((v13[4] != v26 || v13[5] != v28) && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
      {
        if (v29 == (void *)1) {
          goto LABEL_17;
        }
        if ((v13[6] != v26 || v13[7] != v28) && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
          break;
        }
      }
LABEL_4:
      v25(v8, v4);
      swift_bridgeObjectRelease();
LABEL_5:
      ++v12;
      uint64_t v14 = v43;
      if (v12 == v42)
      {
        swift_bridgeObjectRelease();
        return v13;
      }
    }
    if (v29 == (void *)2)
    {
LABEL_17:
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v13 = sub_1001435CC(0, (int64_t)v29 + 1, 1, v13);
      }
      unint64_t v31 = v13[2];
      unint64_t v30 = v13[3];
      if (v31 >= v30 >> 1) {
        uint64_t v13 = sub_1001435CC((void *)(v30 > 1), v31 + 1, 1, v13);
      }
      v13[2] = v31 + 1;
      uint64_t v32 = &v13[2 * v31];
      v32[4] = v26;
      v32[5] = v28;
      v25(v8, v4);
      goto LABEL_5;
    }
    uint64_t v33 = v13 + 9;
    uint64_t v34 = 2;
    while (!__OFADD__(v34, 1))
    {
      if (*(v33 - 1) == v26 && *v33 == v28) {
        goto LABEL_4;
      }
      uint64_t v46 = (void *)(v34 + 1);
      if (_stringCompareWithSmolCheck(_:_:expecting:)()) {
        goto LABEL_4;
      }
      v33 += 2;
      ++v34;
      if (v46 == v29) {
        goto LABEL_17;
      }
    }
LABEL_39:
    __break(1u);
LABEL_40:
    swift_once();
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

uint64_t sub_1000919A0(uint64_t a1)
{
  GeneratedValues.extract<A>(field:)();
  if (v1)
  {
    uint64_t v4 = type metadata accessor for GeneratedValues();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    uint64_t v2 = v7;
    swift_bridgeObjectRetain();
    GeneratedValues.extract<A>(field:)();
    uint64_t v6 = type metadata accessor for GeneratedValues();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
    swift_bridgeObjectRelease();
  }
  return v2;
}

uint64_t sub_100091B0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000063C0(&qword_1001FEDC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100091B74@<X0>(uint64_t a1@<X8>)
{
  return sub_100090700(v1[2], v1[3], v1[4], a1);
}

unint64_t sub_100091B94()
{
  unint64_t result = qword_1001FF098;
  if (!qword_1001FF098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FF098);
  }
  return result;
}

uint64_t sub_100091BE8@<X0>(uint64_t a1@<X8>)
{
  return sub_100090940(*(void (**)(char *, uint64_t))(v1 + 24), *(void *)(v1 + 32), a1);
}

unint64_t sub_100091C08()
{
  unint64_t result = qword_1001FF0B8;
  if (!qword_1001FF0B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FF0B8);
  }
  return result;
}

ValueMetadata *type metadata accessor for SlotQueries()
{
  return &type metadata for SlotQueries;
}

uint64_t destroy for SlotQuery()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for SlotQuery(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for SlotQuery(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for SlotQuery(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SlotQuery(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SlotQuery(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SlotQuery()
{
  return &type metadata for SlotQuery;
}

unint64_t sub_100091E38()
{
  unint64_t result = qword_1001FF0D0;
  if (!qword_1001FF0D0)
  {
    sub_100006C14(&qword_1001FF0C8);
    sub_100091EAC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FF0D0);
  }
  return result;
}

unint64_t sub_100091EAC()
{
  unint64_t result = qword_1001FF0D8;
  if (!qword_1001FF0D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FF0D8);
  }
  return result;
}

void sub_100091F00()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000063C0(&qword_1001FF240);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (id *)(v0 + OBJC_IVAR____TtC21WritingToolsUIService26PromptEntryViewCoordinator_collectionView);
  swift_beginAccess();
  if (*v6)
  {
    uint64_t v7 = (char *)*v6;
    [v7 setDelegate:v1];
    *(void *)&v7[OBJC_IVAR____TtC21WritingToolsUIService24AttachmentCollectionView_attachmentCollectionViewDelegate
                 + 8] = &off_1001EC828;
    swift_unknownObjectWeakAssign();
    id v8 = objc_allocWithZone((Class)sub_1000063C0((uint64_t *)&unk_1001FF270));
    uint64_t v9 = v7;
    uint64_t v10 = UICollectionViewDiffableDataSource.init(collectionView:cellProvider:)();
    uint64_t v11 = OBJC_IVAR____TtC21WritingToolsUIService26PromptEntryViewCoordinator_dataSource;
    unint64_t v12 = *(void **)(v1 + OBJC_IVAR____TtC21WritingToolsUIService26PromptEntryViewCoordinator_dataSource);
    *(void *)(v1 + OBJC_IVAR____TtC21WritingToolsUIService26PromptEntryViewCoordinator_dataSource) = v10;

    uint64_t v13 = *(void **)(v1 + v11);
    if (v13)
    {
      id v14 = v13;
      dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();

      NSDiffableDataSourceSnapshot.appendSections(_:)((Swift::OpaquePointer)&off_1001EA3D8);
      uint64_t v15 = *(void **)(v1 + v11);
      if (v15)
      {
        id v16 = v15;
        dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)();

        (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  else
  {
    uint64_t v17 = *(void **)(v1 + OBJC_IVAR____TtC21WritingToolsUIService26PromptEntryViewCoordinator_dataSource);
    *(void *)(v1 + OBJC_IVAR____TtC21WritingToolsUIService26PromptEntryViewCoordinator_dataSource) = 0;
  }
}

uint64_t sub_100092104(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1000063C0(&qword_1002049C0);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  id v8 = &v18[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  uint64_t v10 = &v18[-v9];
  NSString v11 = String._bridgeToObjectiveC()();
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v13 = [a1 dequeueReusableCellWithReuseIdentifier:v11 forIndexPath:isa];

  type metadata accessor for AttachmentCollectionViewCell();
  uint64_t v14 = swift_dynamicCastClassUnconditional();
  type metadata accessor for AttachmentCollectionView();
  swift_dynamicCastClass();
  swift_unknownObjectWeakAssign();
  sub_1000941BC(a3, (uint64_t)v10);
  uint64_t v15 = type metadata accessor for Attachment(0);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v10, 0, 1, v15);
  uint64_t v16 = v14 + OBJC_IVAR____TtC21WritingToolsUIService28AttachmentCollectionViewCell_attachment;
  swift_beginAccess();
  sub_100008DD4(v16, (uint64_t)v8, &qword_1002049C0);
  swift_beginAccess();
  sub_100094220((uint64_t)v10, v16);
  swift_endAccess();
  sub_100034D54(v8);
  sub_10002784C((uint64_t)v10, &qword_1002049C0);
  sub_10002784C((uint64_t)v8, &qword_1002049C0);
  return v14;
}

void sub_100092328(void *a1)
{
  unint64_t v71 = a1;
  uint64_t v77 = sub_1000063C0(&qword_1001FF230);
  uint64_t v68 = *(void *)(v77 - 8);
  uint64_t v2 = __chkstk_darwin(v77);
  unint64_t v70 = (char *)v60 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v75 = (uint64_t)v60 - v5;
  uint64_t v6 = __chkstk_darwin(v4);
  id v8 = (char *)v60 - v7;
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)v60 - v9;
  uint64_t v11 = type metadata accessor for Attachment(0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11 - 8);
  uint64_t v74 = (uint64_t)v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v76 = (uint64_t)v60 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v73 = (uint64_t)v60 - v18;
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)v60 - v19;
  uint64_t v21 = sub_1000063C0(&qword_1001FF238);
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)v60 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_1000063C0(&qword_1001FF240);
  __chkstk_darwin(v25);
  uint64_t v28 = (char *)v60 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v29 = *(void **)(v1 + OBJC_IVAR____TtC21WritingToolsUIService26PromptEntryViewCoordinator_dataSource);
  if (v29)
  {
    uint64_t v66 = v22;
    uint64_t v67 = v26;
    unint64_t v72 = v20;
    uint64_t v62 = v1;
    id v65 = v29;
    dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();
    char v78 = v71;
    uint64_t v80 = NSDiffableDataSourceSnapshot.itemIdentifiers.getter();
    sub_1000063C0(&qword_1001FF248);
    sub_100027F2C(&qword_1001FF250, &qword_1001FF248);
    unint64_t v69 = v28;
    sub_100094084();
    BidirectionalCollection<>.difference<A>(from:)();
    swift_bridgeObjectRelease();
    sub_100027F2C(&qword_1001FF260, &qword_1001FF238);
    dispatch thunk of Collection.startIndex.getter();
    dispatch thunk of Collection.endIndex.getter();
    if (v78 == (void *)v80)
    {

      (*(void (**)(char *, uint64_t))(v66 + 8))(v24, v21);
      (*(void (**)(char *, uint64_t))(v67 + 8))(v69, v25);
      return;
    }
    char v63 = v24;
    uint64_t v64 = v25;
    uint64_t v61 = v21;
    uint64_t v30 = CollectionDifference.removals.getter();
    int64_t v31 = *(void *)(v30 + 16);
    if (v31)
    {
      char v78 = _swiftEmptyArrayStorage;
      sub_100129248(0, v31, 0);
      unint64_t v32 = (*(unsigned __int8 *)(v68 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80);
      v60[1] = v30;
      uint64_t v33 = v30 + v32;
      unint64_t v71 = *(void **)(v68 + 72);
      uint64_t v34 = (uint64_t)v72;
      while (1)
      {
        sub_100008DD4(v33, (uint64_t)v10, &qword_1001FF230);
        sub_100008DD4((uint64_t)v10, (uint64_t)v8, &qword_1001FF230);
        if (swift_getEnumCaseMultiPayload() != 1) {
          break;
        }
        uint64_t v35 = sub_1000063C0(&qword_1001FF268);
        uint64_t v36 = v73;
        sub_100035B34((uint64_t)&v8[*(int *)(v35 + 48)], v73);
        sub_100035B34(v36, v34);
        sub_10002784C((uint64_t)v10, &qword_1001FF230);
        uint64_t v37 = v78;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_100129248(0, v37[2] + 1, 1);
          uint64_t v37 = v78;
        }
        unint64_t v39 = v37[2];
        unint64_t v38 = v37[3];
        if (v39 >= v38 >> 1)
        {
          sub_100129248(v38 > 1, v39 + 1, 1);
          uint64_t v37 = v78;
        }
        void v37[2] = v39 + 1;
        uint64_t v34 = (uint64_t)v72;
        sub_100035B34((uint64_t)v72, (uint64_t)v37+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(void *)(v12 + 72) * v39);
        v33 += (uint64_t)v71;
        if (!--v31)
        {
          swift_bridgeObjectRelease();
          goto LABEL_14;
        }
      }
      sub_10002784C((uint64_t)v8, &qword_1001FF230);
      goto LABEL_32;
    }
    swift_bridgeObjectRelease();
    uint64_t v37 = _swiftEmptyArrayStorage;
LABEL_14:
    uint64_t v40 = v69;
    NSDiffableDataSourceSnapshot.deleteItems(_:)((Swift::OpaquePointer)v37);
    swift_bridgeObjectRelease();
    uint64_t v41 = v61;
    uint64_t v42 = CollectionDifference.insertions.getter();
    int64_t v43 = *(void *)(v42 + 16);
    if (v43)
    {
      char v78 = _swiftEmptyArrayStorage;
      sub_100129248(0, v43, 0);
      uint64_t v44 = *(unsigned __int8 *)(v68 + 80);
      uint64_t v73 = v42;
      uint64_t v45 = v42 + ((v44 + 32) & ~v44);
      uint64_t v46 = *(void *)(v68 + 72);
      uint64_t v47 = (uint64_t)v70;
      while (1)
      {
        uint64_t v48 = v75;
        sub_100008DD4(v45, v75, &qword_1001FF230);
        sub_100008DD4(v48, v47, &qword_1001FF230);
        if (swift_getEnumCaseMultiPayload() == 1) {
          break;
        }
        uint64_t v49 = sub_1000063C0(&qword_1001FF268);
        uint64_t v50 = v74;
        sub_100035B34(v47 + *(int *)(v49 + 48), v74);
        sub_100035B34(v50, v76);
        sub_10002784C(v48, &qword_1001FF230);
        long long v51 = v78;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_100129248(0, v51[2] + 1, 1);
          uint64_t v47 = (uint64_t)v70;
          long long v51 = v78;
        }
        unint64_t v53 = v51[2];
        unint64_t v52 = v51[3];
        if (v53 >= v52 >> 1)
        {
          sub_100129248(v52 > 1, v53 + 1, 1);
          uint64_t v47 = (uint64_t)v70;
          long long v51 = v78;
        }
        v51[2] = v53 + 1;
        sub_100035B34(v76, (uint64_t)v51+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(void *)(v12 + 72) * v53);
        v45 += v46;
        if (!--v43)
        {
          swift_bridgeObjectRelease();
          uint64_t v41 = v61;
          uint64_t v40 = v69;
          goto LABEL_24;
        }
      }
      sub_10002784C(v47, &qword_1001FF230);
LABEL_32:
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
      return;
    }
    swift_bridgeObjectRelease();
LABEL_24:
    char v78 = 0;
    char v79 = 1;
    uint64_t v54 = v64;
    NSDiffableDataSourceSnapshot.appendItems(_:toSection:)();
    swift_bridgeObjectRelease();
    id v55 = v65;
    dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)();
    uint64_t v56 = (void **)(v62 + OBJC_IVAR____TtC21WritingToolsUIService26PromptEntryViewCoordinator_collectionView);
    swift_beginAccess();
    uint64_t v57 = *v56;
    uint64_t v58 = v67;
    if (v57)
    {
      swift_endAccess();
      id v59 = v57;
      if ((uint64_t)[v59 numberOfSections] > 0)
      {
        [v59 setScrollEnabled:([v59 numberOfItemsInSection:0] > 1)];
        objc_msgSend(v59, "setShowsHorizontalScrollIndicator:", (uint64_t)objc_msgSend(v59, "numberOfItemsInSection:", 0) > 1);
      }

      (*(void (**)(char *, uint64_t))(v66 + 8))(v63, v41);
      (*(void (**)(char *, uint64_t))(v58 + 8))(v40, v54);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v66 + 8))(v63, v41);
      (*(void (**)(char *, uint64_t))(v58 + 8))(v40, v54);
      swift_endAccess();
    }
  }
}

uint64_t type metadata accessor for PromptEntryViewCoordinator()
{
  return self;
}

void sub_100092DA8()
{
  uint64_t v0 = (void *)IntelligenceUI.PromptEntryView.textView.getter();
  id v1 = [v0 text];

  if (v1)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    sub_1000063C0((uint64_t *)&unk_1001FF220);
    Binding.wrappedValue.setter();
  }
  else
  {
    __break(1u);
  }
}

UIMenu sub_100092E64()
{
  sub_1000085FC(0, (unint64_t *)&qword_100201960);
  v0._uint64_t countAndFlagsBits = 0;
  v0._uint64_t object = (void *)0xE000000000000000;
  v3.value.super.Class isa = 0;
  v3.is_nil = 0;
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v0, (Swift::String_optional)0, v3, 0, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)_swiftEmptyArrayStorage, v2);
}

uint64_t sub_100092ED4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for IntelligenceUI.PromptEntryView.AmbiguityAppearanceConfiguration();
  UIImage_optional v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(a1, 1, 1, v2);
}

uint64_t sub_100092F40()
{
  id v1 = *(void (**)())(v0 + OBJC_IVAR____TtC21WritingToolsUIService26PromptEntryViewCoordinator_owner + 120);
  sub_1000063C0((uint64_t *)&unk_1001FF220);
  Binding.wrappedValue.getter();
  v1();
  return swift_bridgeObjectRelease();
}

unint64_t sub_100092FC0(uint64_t a1, uint64_t a2)
{
  uint64_t v32 = a2;
  uint64_t v2 = type metadata accessor for Attachment(0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000063C0(&qword_1001FF240);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v28 - v15;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  id v18 = (id)Strong;
  if (!Strong) {
    return (unint64_t)v18;
  }
  uint64_t v30 = v11;
  uint64_t v31 = v3;
  uint64_t v19 = *(void **)(Strong + OBJC_IVAR____TtC21WritingToolsUIService26PromptEntryViewCoordinator_dataSource);
  id v20 = v19;

  if (!v19) {
    return 0;
  }
  id v29 = v20;
  dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();
  uint64_t v21 = NSDiffableDataSourceSnapshot.itemIdentifiers.getter();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  unint64_t result = IndexPath.item.getter();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(void *)(v21 + 16))
  {
    sub_1000941BC(v21+ ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80))+ *(void *)(v31 + 72) * result, (uint64_t)v5);
    swift_bridgeObjectRelease();
    uint64_t v23 = v30;
    uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v30 + 16);
    v24(v16, v5, v10);
    sub_100035B98((uint64_t)v5);
    v24(v14, v16, v10);
    uint64_t v25 = (objc_class *)type metadata accessor for PreviewProviderViewController();
    uint64_t v26 = (char *)objc_allocWithZone(v25);
    v24(&v26[OBJC_IVAR____TtC21WritingToolsUIService29PreviewProviderViewController_url], v14, v10);
    v33.receiver = v26;
    v33.super_class = v25;
    id v18 = [super initWithNibName:0 bundle:0];
    [v18 setDataSource:v18];
    uint64_t v27 = *(void (**)(char *, uint64_t))(v23 + 8);
    v27(v14, v10);

    v27(v16, v10);
    return (unint64_t)v18;
  }
  __break(1u);
  return result;
}

UIMenu sub_100093344(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = type metadata accessor for IndexPath();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  sub_1000085FC(0, (unint64_t *)&qword_100201960);
  sub_1000063C0(&qword_1001FAFD0);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_10018B4E0;
  sub_1000085FC(0, &qword_1001FF298);
  uint64_t v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v4);
  unint64_t v9 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v8;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v10 + v9, (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  *(void *)(v7 + 32) = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  UIMenuElementSize v15 = v7;
  specialized Array._endMutation()();
  v11._uint64_t countAndFlagsBits = 0;
  v11._uint64_t object = (void *)0xE000000000000000;
  v16.value.super.Class isa = 0;
  v16.is_nil = 0;
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v11, (Swift::String_optional)0, v16, 0, 0xFFFFFFFFFFFFFFFFLL, v15, v13);
}

void sub_10009358C()
{
  uint64_t v0 = sub_1000063C0(&qword_1001FF240);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = (char *)Strong;
    uint64_t v6 = IndexPath.item.getter();
    uint64_t v7 = *(void **)&v5[OBJC_IVAR____TtC21WritingToolsUIService26PromptEntryViewCoordinator_dataSource];
    if (v7)
    {
      unint64_t v8 = v6;
      id v9 = v7;
      dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();
      sub_1000063C0((uint64_t *)&unk_1001FF2A0);
      uint64_t v10 = *(void *)(type metadata accessor for Attachment(0) - 8);
      uint64_t v11 = *(void *)(v10 + 72);
      unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
      uint64_t v13 = swift_allocObject();
      *(_OWORD *)(v13 + 16) = xmmword_10018A720;
      uint64_t v14 = NSDiffableDataSourceSnapshot.itemIdentifiers.getter();
      if ((v8 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v8 < *(void *)(v14 + 16))
      {
        sub_1000941BC(v14 + v12 + v11 * v8, v13 + v12);
        swift_bridgeObjectRelease();
        NSDiffableDataSourceSnapshot.deleteItems(_:)((Swift::OpaquePointer)v13);
        swift_bridgeObjectRelease();
        dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)();
        sub_100139FA4(v8);

        (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
        goto LABEL_6;
      }
      __break(1u);
      return;
    }
LABEL_6:
  }
}

uint64_t sub_100093858(uint64_t a1)
{
  uint64_t v35 = sub_1000063C0(&qword_1001FF240);
  uint64_t v3 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000063C0(&qword_1001FF280);
  __chkstk_darwin(v6 - 8);
  unint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for IndexPath();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v33 - v14;
  uint64_t v36 = v1;
  UIImage_optional v16 = (void **)(v1 + OBJC_IVAR____TtC21WritingToolsUIService26PromptEntryViewCoordinator_collectionView);
  swift_beginAccess();
  uint64_t v17 = *v16;
  if (!*v16) {
    goto LABEL_16;
  }
  uint64_t v34 = v3;
  id v18 = [v17 indexPathForCell:a1];
  if (!v18)
  {
LABEL_17:
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
    goto LABEL_18;
  }
  uint64_t v19 = v18;
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();

  id v20 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v20(v8, v13, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9);
  if (result == 1)
  {
LABEL_18:
    __break(1u);
    return result;
  }
  v20(v15, v8, v9);
  uint64_t v22 = IndexPath.item.getter();
  uint64_t v23 = *(void **)(v36 + OBJC_IVAR____TtC21WritingToolsUIService26PromptEntryViewCoordinator_dataSource);
  if (!v23) {
    goto LABEL_8;
  }
  unint64_t v24 = v22;
  objc_super v33 = v15;
  id v25 = v23;
  dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();
  sub_1000063C0((uint64_t *)&unk_1001FF2A0);
  uint64_t v26 = *(void *)(type metadata accessor for Attachment(0) - 8);
  uint64_t v27 = *(void *)(v26 + 72);
  unint64_t v8 = (char *)((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80));
  uint64_t v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_10018A720;
  uint64_t v29 = NSDiffableDataSourceSnapshot.itemIdentifiers.getter();
  if ((v24 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (v24 >= *(void *)(v29 + 16))
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  sub_1000941BC((uint64_t)&v8[v29 + v27 * v24], (uint64_t)&v8[v28]);
  swift_bridgeObjectRelease();
  uint64_t v30 = v35;
  NSDiffableDataSourceSnapshot.deleteItems(_:)((Swift::OpaquePointer)v28);
  swift_bridgeObjectRelease();
  dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)();
  sub_100139FA4(v24);

  (*(void (**)(char *, uint64_t))(v34 + 8))(v5, v30);
  uint64_t v15 = v33;
LABEL_8:
  swift_beginAccess();
  uint64_t v31 = *v16;
  if (*v16)
  {
    swift_endAccess();
    id v32 = v31;
    if ((uint64_t)[v32 numberOfSections] >= 1)
    {
      [v32 setScrollEnabled:([v32 numberOfItemsInSection:0] > 1)];
      [v32 setShowsHorizontalScrollIndicator:[v32 numberOfItemsInSection:0] > 1];
    }

    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
    return swift_endAccess();
  }
}

uint64_t sub_100093FA0()
{
  return type metadata accessor for PreviewProviderViewController();
}

uint64_t type metadata accessor for PreviewProviderViewController()
{
  uint64_t result = qword_1001FF210;
  if (!qword_1001FF210) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100093FF4()
{
  uint64_t result = type metadata accessor for URL();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

unint64_t sub_100094084()
{
  unint64_t result = qword_1001FF258;
  if (!qword_1001FF258)
  {
    type metadata accessor for Attachment(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FF258);
  }
  return result;
}

id sub_1000940DC(uint64_t a1)
{
  unint64_t v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  uint64_t v3 = (void *)v1(v2);
  swift_release();

  return v3;
}

id sub_10009412C(uint64_t a1)
{
  unint64_t v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  sub_1000085FC(0, (unint64_t *)&unk_1001FF288);
  uint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  swift_retain();
  uint64_t v3 = (void *)v1(v2);
  swift_release();
  swift_bridgeObjectRelease();

  return v3;
}

uint64_t sub_1000941BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Attachment(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100094220(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000063C0(&qword_1002049C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_100094288(uint64_t a1)
{
  uint64_t v3 = sub_1000063C0(&qword_1001FF280);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for IndexPath();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v30 - v10;
  __chkstk_darwin(v9);
  id v14 = 0;
  if (*(void *)(a1 + 16) != 1) {
    return (uint64_t)v14;
  }
  uint64_t v35 = v13;
  uint64_t v36 = v1;
  uint64_t v37 = (char *)&v30 - v12;
  uint64_t v15 = *(unsigned __int8 *)(v7 + 80);
  UIImage_optional v16 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v16(v5, a1 + ((v15 + 32) & ~v15), v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6);
  if (result != 1)
  {
    uint64_t v31 = ~v15;
    uint64_t v34 = v7;
    id v32 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    id v18 = v37;
    v32(v37, v5, v6);
    uint64_t v19 = swift_allocObject();
    uint64_t v33 = v19;
    swift_unknownObjectWeakInit();
    v16(v11, (uint64_t)v18, v6);
    uint64_t v20 = (v15 + 24) & v31;
    uint64_t v30 = (void (*)(uint64_t, char *, uint64_t))v16;
    uint64_t v21 = swift_allocObject();
    uint64_t v31 = v21;
    *(void *)(v21 + 16) = v19;
    uint64_t v22 = (void (*)(uint64_t, uint64_t, uint64_t))v32;
    v32((char *)(v21 + v20), v11, v6);
    uint64_t v23 = v35;
    v30(v35, v18, v6);
    uint64_t v24 = swift_allocObject();
    id v25 = v36;
    *(void *)(v24 + 16) = v36;
    v22(v24 + v20, v23, v6);
    uint64_t v26 = self;
    uint64_t v42 = sub_100094734;
    uint64_t v43 = v31;
    aBlock = _NSConcreteStackBlock;
    uint64_t v39 = 1107296256;
    uint64_t v40 = sub_1000940DC;
    uint64_t v41 = &unk_1001EC8B0;
    uint64_t v27 = _Block_copy(&aBlock);
    swift_retain();
    id v28 = v25;
    swift_retain();
    swift_release();
    uint64_t v42 = sub_100094864;
    uint64_t v43 = v24;
    aBlock = _NSConcreteStackBlock;
    uint64_t v39 = 1107296256;
    uint64_t v40 = sub_10009412C;
    uint64_t v41 = &unk_1001EC8D8;
    uint64_t v29 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    id v14 = [v26 configurationWithIdentifier:0 previewProvider:v27 actionProvider:v29];
    swift_release();
    swift_release();
    _Block_release(v29);
    _Block_release(v27);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v37, v6);
    swift_release();
    return (uint64_t)v14;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000946F8()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

unint64_t sub_100094734()
{
  uint64_t v1 = *(void *)(type metadata accessor for IndexPath() - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_100092FC0(v2, v3);
}

uint64_t sub_100094798()
{
  uint64_t v1 = type metadata accessor for IndexPath();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

UIMenu sub_100094864(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for IndexPath() - 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_100093344(a1, v4, v5);
}

uint64_t sub_1000948D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000948E8()
{
  return swift_release();
}

uint64_t sub_1000948F4()
{
  uint64_t v1 = type metadata accessor for IndexPath();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

void sub_1000949C0()
{
  type metadata accessor for IndexPath();

  sub_10009358C();
}

uint64_t sub_100094A34(uint64_t a1)
{
  return a1;
}

id sub_100094C24()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AppDelegate();
  [super dealloc];
}

int main(int argc, const char **argv, const char **envp)
{
  type metadata accessor for AppDelegate();
  static CommandLine.unsafeArgv.getter();
  static CommandLine.argc.getter();
  static CommandLine.argc.getter();
  uint64_t ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  uint64_t v4 = NSStringFromClass(ObjCClassFromMetadata);
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  LODWORD(v4) = UIApplicationMain(_:_:_:_:)();
  swift_bridgeObjectRelease();
  exit((int)v4);
}

uint64_t type metadata accessor for AppDelegate()
{
  return self;
}

uint64_t sub_100094D08()
{
  return swift_retain();
}

uint64_t sub_100094DAC(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 24) = a2;
  swift_retain();
  return swift_release();
}

uint64_t sub_100094DE8()
{
  return swift_retain();
}

uint64_t sub_100094E8C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 32) = a2;
  swift_retain();
  return swift_release();
}

unint64_t sub_100094EC8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for GenerativeModelsAvailability.Availability.RestrictedInfo.RestrictedReason();
  uint64_t v44 = *(void (**)(void))(v2 - 8);
  uint64_t v45 = v2;
  __chkstk_darwin(v2);
  uint64_t v4 = &v40[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_1000063C0(&qword_1001FF818);
  __chkstk_darwin(v5 - 8);
  uint64_t v46 = &v40[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = type metadata accessor for GenerativeModelsAvailability.Availability.RestrictedInfo();
  uint64_t v48 = *(void *)(v7 - 8);
  uint64_t v49 = v7;
  __chkstk_darwin(v7);
  uint64_t v47 = &v40[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_1000063C0(&qword_1001FF400);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = &v40[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = type metadata accessor for GenerativeModelsAvailability.Availability();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  UIImage_optional v16 = &v40[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v14);
  id v18 = &v40[-v17];
  swift_getKeyPath();
  uint64_t v19 = v0 + OBJC_IVAR____TtC21WritingToolsUIService17WritingToolsModel___observationRegistrar;
  uint64_t v53 = v1;
  uint64_t v50 = sub_1000975B4((unint64_t *)&unk_1001FB3F0, (void (*)(uint64_t))type metadata accessor for WritingToolsModel);
  uint64_t v51 = v19;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v20 = v1 + OBJC_IVAR____TtC21WritingToolsUIService17WritingToolsModel__gmsAvailability;
  swift_beginAccess();
  sub_100008DD4(v20, (uint64_t)v11, &qword_1001FF400);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_10002784C((uint64_t)v11, &qword_1001FF400);
LABEL_3:
    uint64_t v21 = 3;
    goto LABEL_14;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v13 + 32))(v18, v11, v12);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v13 + 16))(v16, v18, v12);
  int v22 = (*(uint64_t (**)(unsigned char *, uint64_t))(v13 + 88))(v16, v12);
  if (v22 == enum case for GenerativeModelsAvailability.Availability.restricted(_:))
  {
    uint64_t v42 = v1;
    uint64_t v43 = v18;
    (*(void (**)(unsigned char *, uint64_t))(v13 + 96))(v16, v12);
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v48 + 32))(v47, v16, v49);
    uint64_t v52 = GenerativeModelsAvailability.Availability.RestrictedInfo.reasons.getter();
    uint64_t v23 = v44;
    uint64_t v24 = v45;
    id v25 = (void (*)(unsigned char *))*((void *)v44 + 13);
    unsigned int v41 = enum case for GenerativeModelsAvailability.Availability.RestrictedInfo.RestrictedReason.siriAssetIsNotReady(_:);
    v25(v4);
    uint64_t v26 = (uint64_t)v46;
    sub_100114A40((uint64_t)v4, (uint64_t)v46);
    uint64_t v27 = (void (*)(unsigned char *, uint64_t))*((void *)v23 + 1);
    v27(v4, v24);
    sub_10002784C(v26, &qword_1001FF818);
    uint64_t v28 = v52;
    uint64_t v44 = (void (*)(void))v25;
    ((void (*)(unsigned char *, void, uint64_t))v25)(v4, enum case for GenerativeModelsAvailability.Availability.RestrictedInfo.RestrictedReason.useCaseDisabled(_:), v24);
    LOBYTE(v26) = sub_10011482C((uint64_t)v4, v28);
    swift_bridgeObjectRelease();
    v27(v4, v24);
    if (v26)
    {
      uint64_t v21 = 0;
      uint64_t v29 = v47;
    }
    else
    {
      uint64_t v32 = v24;
      uint64_t v33 = v47;
      uint64_t v52 = GenerativeModelsAvailability.Availability.RestrictedInfo.reasons.getter();
      ((void (*)(unsigned char *, void, uint64_t))v44)(v4, v41, v32);
      uint64_t v34 = v46;
      sub_100114A40((uint64_t)v4, (uint64_t)v46);
      v27(v4, v32);
      sub_10002784C((uint64_t)v34, &qword_1001FF818);
      uint64_t v35 = *(void *)(v52 + 16);
      swift_bridgeObjectRelease();
      if (v35) {
        uint64_t v21 = 2;
      }
      else {
        uint64_t v21 = 3;
      }
      uint64_t v29 = v33;
    }
    uint64_t v1 = v42;
    uint64_t v36 = v43;
    (*(void (**)(unsigned char *, uint64_t))(v48 + 8))(v29, v49);
    (*(void (**)(unsigned char *, uint64_t))(v13 + 8))(v36, v12);
  }
  else
  {
    int v30 = v22;
    if (v22 != enum case for GenerativeModelsAvailability.Availability.unavailable(_:))
    {
      int v38 = enum case for GenerativeModelsAvailability.Availability.available(_:);
      uint64_t v39 = *(void (**)(unsigned char *, uint64_t))(v13 + 8);
      v39(v18, v12);
      if (v30 != v38) {
        v39(v16, v12);
      }
      goto LABEL_3;
    }
    uint64_t v31 = *(void (**)(unsigned char *, uint64_t))(v13 + 8);
    v31(v18, v12);
    v31(v16, v12);
    uint64_t v21 = 0;
  }
LABEL_14:
  swift_getKeyPath();
  uint64_t v52 = v1;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC21WritingToolsUIService17WritingToolsModel__networkAvailable) & 1 | ((v21 & 2) == 0)) {
    return v21;
  }
  else {
    return v21 & 0xFFFFFFFFFFFFFFFDLL;
  }
}

uint64_t sub_10009552C@<X0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  sub_1000975B4((unint64_t *)&unk_1001FB3F0, (void (*)(uint64_t))type metadata accessor for WritingToolsModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v3 = v1 + OBJC_IVAR____TtC21WritingToolsUIService17WritingToolsModel__gmsAvailability;
  swift_beginAccess();
  return sub_100008DD4(v3, a1, &qword_1001FF400);
}

uint64_t sub_100095600@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1000975B4((unint64_t *)&unk_1001FB3F0, (void (*)(uint64_t))type metadata accessor for WritingToolsModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v4 = v3 + OBJC_IVAR____TtC21WritingToolsUIService17WritingToolsModel__gmsAvailability;
  swift_beginAccess();
  return sub_100008DD4(v4, a2, &qword_1001FF400);
}

uint64_t sub_1000956D4(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = sub_1000063C0(&qword_1001FF400);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100008DD4(a1, (uint64_t)v6, &qword_1001FF400);
  uint64_t v7 = *a2;
  swift_getKeyPath();
  uint64_t v10 = v7;
  uint64_t v11 = v6;
  uint64_t v12 = v7;
  sub_1000975B4((unint64_t *)&unk_1001FB3F0, (void (*)(uint64_t))type metadata accessor for WritingToolsModel);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  return sub_10002784C((uint64_t)v6, &qword_1001FF400);
}

uint64_t sub_100095814(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + OBJC_IVAR____TtC21WritingToolsUIService17WritingToolsModel__gmsAvailability;
  swift_beginAccess();
  sub_100097520(a2, v3);
  return swift_endAccess();
}

uint64_t sub_100095880()
{
  return swift_release();
}

uint64_t sub_100095B00()
{
  return swift_unknownObjectWeakLoadStrong();
}

uint64_t sub_100095BAC@<X0>(uint64_t *a1@<X8>)
{
  swift_getKeyPath();
  sub_1000975B4((unint64_t *)&unk_1001FB3F0, (void (*)(uint64_t))type metadata accessor for WritingToolsModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  *a1 = result;
  return result;
}

uint64_t sub_100095C60()
{
  return swift_release();
}

uint64_t sub_100095D40()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_100095D98()
{
  swift_getKeyPath();
  sub_1000975B4((unint64_t *)&unk_1001FB3F0, (void (*)(uint64_t))type metadata accessor for WritingToolsModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC21WritingToolsUIService17WritingToolsModel__networkAvailable);
}

uint64_t sub_100095E40@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1000975B4((unint64_t *)&unk_1001FB3F0, (void (*)(uint64_t))type metadata accessor for WritingToolsModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + OBJC_IVAR____TtC21WritingToolsUIService17WritingToolsModel__networkAvailable);
  return result;
}

uint64_t sub_100095EF0()
{
  return swift_release();
}

uint64_t sub_100095FC0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1000063C0(&qword_1001FF810);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v23 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v21 - v7;
  uint64_t v9 = sub_1000063C0(&qword_1001FF400);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for LocalizedStringResource();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56);
  uint64_t v24 = a1;
  int v22 = v14;
  v14(a1, 1, 1, v12);
  swift_getKeyPath();
  uint64_t v26 = v2;
  sub_1000975B4((unint64_t *)&unk_1001FB3F0, (void (*)(uint64_t))type metadata accessor for WritingToolsModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v15 = v2 + OBJC_IVAR____TtC21WritingToolsUIService17WritingToolsModel__gmsAvailability;
  swift_beginAccess();
  sub_100008DD4(v15, (uint64_t)v11, &qword_1001FF400);
  uint64_t v16 = type metadata accessor for GenerativeModelsAvailability.Availability();
  LODWORD(v15) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v11, 1, v16);
  uint64_t result = sub_10002784C((uint64_t)v11, &qword_1001FF400);
  if (v15 != 1)
  {
    swift_getKeyPath();
    uint64_t v25 = v2;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    uint64_t result = swift_release();
    if ((*(unsigned char *)(v2 + OBJC_IVAR____TtC21WritingToolsUIService17WritingToolsModel__networkAvailable) & 1) == 0)
    {
      sub_100008DD4(v24, (uint64_t)v8, &qword_1001FF810);
      int v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48))(v8, 1, v12);
      uint64_t result = sub_10002784C((uint64_t)v8, &qword_1001FF810);
      if (v18 == 1)
      {
        uint64_t v19 = (uint64_t)v23;
        LocalizedStringResource.init(stringLiteral:)();
        uint64_t v20 = v24;
        sub_10002784C(v24, &qword_1001FF810);
        v22(v19, 0, 1, v12);
        return sub_1000972C8(v19, v20);
      }
    }
  }
  return result;
}

uint64_t WritingToolsModel.__allocating_init(hostIsReady:writingToolsDelegate:)(int a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  WritingToolsModel.init(hostIsReady:writingToolsDelegate:)(a1, a2);
  return v4;
}

uint64_t WritingToolsModel.init(hostIsReady:writingToolsDelegate:)(int a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v33 = a2;
  int v34 = a1;
  uint64_t v4 = type metadata accessor for GenerativeModelsAvailability.Parameters();
  uint64_t v40 = *(void *)(v4 - 8);
  uint64_t v41 = v4;
  __chkstk_darwin(v4);
  uint64_t v37 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for GenerativeModelsAvailability();
  uint64_t v38 = *(void *)(v6 - 8);
  uint64_t v39 = v6;
  __chkstk_darwin(v6);
  uint64_t v36 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000063C0(&qword_1001FF400);
  __chkstk_darwin(v8 - 8);
  uint64_t v35 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v10 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  uint64_t v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v13);
  uint64_t v14 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v14 - 8);
  type metadata accessor for ProofreadingModel();
  swift_allocObject();
  *(void *)(v2 + 16) = sub_10016B810();
  type metadata accessor for CompositionModel(0);
  swift_allocObject();
  *(void *)(v2 + 32) = sub_100082058();
  uint64_t v15 = v2 + OBJC_IVAR____TtC21WritingToolsUIService17WritingToolsModel__gmsAvailability;
  uint64_t v31 = type metadata accessor for GenerativeModelsAvailability.Availability();
  uint64_t v16 = *(void *)(v31 - 8);
  int v30 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56);
  uint64_t v32 = v16 + 56;
  v30(v15, 1, 1, v31);
  swift_unknownObjectWeakInit();
  *(unsigned char *)(v3 + OBJC_IVAR____TtC21WritingToolsUIService17WritingToolsModel__hostDidAddRemoteView) = 0;
  uint64_t v17 = v3 + OBJC_IVAR____TtC21WritingToolsUIService17WritingToolsModel__auditedHostPID;
  *(_DWORD *)uint64_t v17 = 0;
  *(unsigned char *)(v17 + 4) = 1;
  *(unsigned char *)(v3 + OBJC_IVAR____TtC21WritingToolsUIService17WritingToolsModel__isPopoverDetached) = 0;
  uint64_t v18 = OBJC_IVAR____TtC21WritingToolsUIService17WritingToolsModel_networkMonitor;
  type metadata accessor for NWPathMonitor();
  swift_allocObject();
  *(void *)(v3 + v18) = NWPathMonitor.init()();
  uint64_t v19 = OBJC_IVAR____TtC21WritingToolsUIService17WritingToolsModel_networkQueue;
  sub_10009706C();
  static DispatchQoS.unspecified.getter();
  uint64_t v46 = _swiftEmptyArrayStorage;
  sub_1000975B4((unint64_t *)&unk_1001FAE50, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_1000063C0((uint64_t *)&unk_1001FF450);
  sub_100006BB8();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v29);
  *(void *)(v3 + v19) = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  *(unsigned char *)(v3 + OBJC_IVAR____TtC21WritingToolsUIService17WritingToolsModel__networkAvailable) = 1;
  ObservationRegistrar.init()();
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = 0;
  *(void *)(v3 + 56) = 0;
  *(unsigned char *)(v3 + 64) = 2;
  type metadata accessor for RewritingModel();
  swift_allocObject();
  uint64_t v20 = v33;
  swift_unknownObjectRetain();
  uint64_t v21 = sub_1000AA1A4(0, 0, 0, 0);
  swift_unknownObjectRelease();
  *(void *)(v3 + 24) = v21;
  *(unsigned char *)(v3 + OBJC_IVAR____TtC21WritingToolsUIService17WritingToolsModel__hostIsReady) = v34;
  swift_getKeyPath();
  uint64_t v44 = v3;
  uint64_t v45 = v20;
  uint64_t v46 = (void *)v3;
  sub_1000975B4((unint64_t *)&unk_1001FB3F0, (void (*)(uint64_t))type metadata accessor for WritingToolsModel);
  swift_unknownObjectRetain();
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_unknownObjectRelease();
  swift_release();
  int v22 = v37;
  GenerativeModelsAvailability.Parameters.init(useCaseIdentifiers:)();
  uint64_t v23 = v36;
  static GenerativeModelsAvailability.current(parameters:)();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v22, v41);
  uint64_t v24 = (uint64_t)v35;
  GenerativeModelsAvailability.availability.getter();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v23, v39);
  v30(v24, 0, 1, v31);
  swift_getKeyPath();
  uint64_t v42 = v3;
  uint64_t v43 = v24;
  uint64_t v46 = (void *)v3;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  sub_10002784C(v24, &qword_1001FF400);
  swift_retain();
  swift_retain();
  NWPathMonitor.pathUpdateHandler.setter();
  swift_release();
  uint64_t v25 = *(void **)(v3 + OBJC_IVAR____TtC21WritingToolsUIService17WritingToolsModel_networkQueue);
  swift_retain();
  id v26 = v25;
  NWPathMonitor.start(queue:)();
  swift_unknownObjectRelease();

  swift_release();
  return v3;
}

uint64_t sub_100096A94(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NWPath();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000063C0(&qword_1001FF820);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  type metadata accessor for MainActor();
  swift_retain();
  uint64_t v12 = static MainActor.shared.getter();
  unint64_t v13 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v14 = (char *)swift_allocObject();
  *((void *)v14 + 2) = v12;
  *((void *)v14 + 3) = &protocol witness table for MainActor;
  *((void *)v14 + 4) = a2;
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v14[v13], v7, v4);
  sub_1001228D0((uint64_t)v10, (uint64_t)&unk_1001FF830, (uint64_t)v14);
  return swift_release();
}

uint64_t sub_100096C84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[3] = a4;
  v5[4] = a5;
  uint64_t v6 = type metadata accessor for NWPath.Status();
  v5[5] = v6;
  v5[6] = *(void *)(v6 - 8);
  v5[7] = swift_task_alloc();
  v5[8] = swift_task_alloc();
  type metadata accessor for MainActor();
  v5[9] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100096D88, v8, v7);
}

uint64_t sub_100096D88()
{
  uint64_t v1 = v0[8];
  uint64_t v3 = v0[6];
  uint64_t v2 = v0[7];
  uint64_t v4 = v0[5];
  uint64_t v5 = v0[3];
  swift_release();
  NWPath.status.getter();
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v2, enum case for NWPath.Status.satisfied(_:), v4);
  char v6 = static NWPath.Status.== infix(_:_:)();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v7(v2, v4);
  v7(v1, v4);
  swift_getKeyPath();
  uint64_t v8 = swift_task_alloc();
  *(void *)(v8 + 16) = v5;
  *(unsigned char *)(v8 + 24) = v6 & 1;
  v0[2] = v5;
  sub_1000975B4((unint64_t *)&unk_1001FB3F0, (void (*)(uint64_t))type metadata accessor for WritingToolsModel);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t WritingToolsModel.deinit()
{
  swift_release();
  swift_release();
  swift_release();
  sub_10000ED74(*(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(unsigned char *)(v0 + 64));
  sub_10002784C(v0 + OBJC_IVAR____TtC21WritingToolsUIService17WritingToolsModel__gmsAvailability, &qword_1001FF400);
  sub_10002F7E4(v0 + OBJC_IVAR____TtC21WritingToolsUIService17WritingToolsModel__writingToolsDelegate);
  swift_release();

  uint64_t v1 = v0 + OBJC_IVAR____TtC21WritingToolsUIService17WritingToolsModel___observationRegistrar;
  uint64_t v2 = type metadata accessor for ObservationRegistrar();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t WritingToolsModel.__deallocating_deinit()
{
  WritingToolsModel.deinit();

  return swift_deallocClassInstance();
}

unint64_t sub_10009706C()
{
  unint64_t result = qword_1001FF440;
  if (!qword_1001FF440)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1001FF440);
  }
  return result;
}

uint64_t sub_1000970B4()
{
  return sub_100095D40();
}

uint64_t type metadata accessor for WritingToolsModel()
{
  uint64_t result = qword_1001FF4A8;
  if (!qword_1001FF4A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100097124()
{
  return sub_100095814(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_100097140(uint64_t a1)
{
  return sub_100096A94(a1, v1);
}

uint64_t sub_100097148()
{
  return type metadata accessor for WritingToolsModel();
}

void sub_100097150()
{
  sub_100097268();
  if (v0 <= 0x3F)
  {
    type metadata accessor for ObservationRegistrar();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_100097268()
{
  if (!qword_1001FF4B8)
  {
    type metadata accessor for GenerativeModelsAvailability.Availability();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1001FF4B8);
    }
  }
}

uint64_t sub_1000972C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000063C0(&qword_1001FF810);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_100097330()
{
  *(unsigned char *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC21WritingToolsUIService17WritingToolsModel__networkAvailable) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_100097350()
{
  uint64_t v1 = type metadata accessor for NWPath();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100097424(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for NWPath() - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_100027204;
  return sub_100096C84(a1, v5, v6, v7, v8);
}

uint64_t sub_100097520(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000063C0(&qword_1001FF400);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_100097598()
{
  return sub_100066E68();
}

uint64_t sub_1000975B4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000975FC()
{
  return sub_100097124();
}

uint64_t sub_100097614()
{
  return sub_1000970B4();
}

void sub_10009762C()
{
}

uint64_t destroy for FloatingPromptEntryView(uint64_t a1)
{
  if (*(void *)(a1 + 24)) {
    sub_100027DBC(a1);
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t initializeWithCopy for FloatingPromptEntryView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = v4;
    *(void *)(a1 + 32) = v5;
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1, a2);
  }
  else
  {
    long long v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
  }
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  uint64_t v7 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v7;
  uint64_t v9 = *(void *)(a2 + 128);
  uint64_t v8 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = v9;
  *(void *)(a1 + 136) = v8;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for FloatingPromptEntryView(uint64_t a1, long long *a2)
{
  uint64_t v4 = *((void *)a2 + 3);
  if (!*(void *)(a1 + 24))
  {
    if (v4)
    {
      *(void *)(a1 + 24) = v4;
      *(void *)(a1 + 32) = *((void *)a2 + 4);
      (**(void (***)(uint64_t, long long *))(v4 - 8))(a1, a2);
      goto LABEL_8;
    }
LABEL_7:
    long long v5 = *a2;
    long long v6 = a2[1];
    *(void *)(a1 + 32) = *((void *)a2 + 4);
    *(_OWORD *)a1 = v5;
    *(_OWORD *)(a1 + 16) = v6;
    goto LABEL_8;
  }
  if (!v4)
  {
    sub_100027DBC(a1);
    goto LABEL_7;
  }
  sub_100097958((uint64_t *)a1, (uint64_t *)a2);
LABEL_8:
  *(void *)(a1 + 40) = *((void *)a2 + 5);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
  *(void *)(a1 + 56) = *((void *)a2 + 7);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
  *(void *)(a1 + 72) = *((void *)a2 + 9);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
  *(void *)(a1 + 88) = *((void *)a2 + 11);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 96) = *((unsigned char *)a2 + 96);
  *(unsigned char *)(a1 + 104) = *((unsigned char *)a2 + 104);
  *(void *)(a1 + 112) = *((void *)a2 + 14);
  swift_retain();
  swift_release();
  *(void *)(a1 + 120) = *((void *)a2 + 15);
  *(void *)(a1 + 128) = *((void *)a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *((void *)a2 + 17);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t *sub_100097958(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        uint64_t result = (uint64_t *)swift_release();
        uint64_t *v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          uint64_t *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

__n128 initializeWithTake for FloatingPromptEntryView(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  __n128 result = *(__n128 *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(__n128 *)(a1 + 80) = result;
  *(_OWORD *)(a1 + 96) = v6;
  return result;
}

uint64_t assignWithTake for FloatingPromptEntryView(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24)) {
    sub_100027DBC(a1);
  }
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_release();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_release();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_release();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_release();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_release();
  uint64_t v6 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for FloatingPromptEntryView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 144)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FloatingPromptEntryView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 144) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 40) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 144) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FloatingPromptEntryView()
{
  return &type metadata for FloatingPromptEntryView;
}

uint64_t sub_100097D48()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100097D64@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1000991D8((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  *a2 = *(void *)(v3 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__attachmentManager);
  return swift_retain();
}

uint64_t sub_100097E18()
{
  return swift_release();
}

uint64_t sub_100097EF8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for ContainerBackgroundPlacement();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  long long v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000063C0(&qword_1001FF838);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000063C0(&qword_1001FF840);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v10 = static VerticalAlignment.center.getter();
  *((void *)v10 + 1) = 0;
  unsigned char v10[16] = 1;
  uint64_t v15 = sub_1000063C0(&qword_1001FF848);
  sub_1000981CC(v2, (uint64_t)&v10[*(int *)(v15 + 44)]);
  *(void *)&v19[0] = static Color.clear.getter();
  static ContainerBackgroundPlacement.navigation.getter();
  sub_100027F2C(&qword_1001FF850, &qword_1001FF838);
  View.containerBackground<A>(_:for:)();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  swift_release();
  sub_10002784C((uint64_t)v10, &qword_1001FF838);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 16))(a1, v14, v11);
  uint64_t v16 = (_OWORD *)(a1 + *(int *)(sub_1000063C0(&qword_1001FF858) + 36));
  long long v17 = v19[1];
  *uint64_t v16 = v19[0];
  v16[1] = v17;
  v16[2] = v19[2];
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t sub_1000981CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000063C0(&qword_1001FF860);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  long long v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v20 - v8;
  uint64_t v10 = sub_1000063C0(&qword_1001FF868);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v20 - v14;
  *(void *)uint64_t v15 = static HorizontalAlignment.center.getter();
  *((void *)v15 + 1) = 0;
  unsigned char v15[16] = 1;
  uint64_t v16 = sub_1000063C0(&qword_1001FF870);
  sub_1000983C0(a1, (uint64_t)&v15[*(int *)(v16 + 44)]);
  *(void *)uint64_t v9 = static HorizontalAlignment.center.getter();
  *((void *)v9 + 1) = 0;
  unsigned char v9[16] = 1;
  uint64_t v17 = sub_1000063C0(&qword_1001FF878);
  sub_100098BB4(a1, &v9[*(int *)(v17 + 44)]);
  sub_100008DD4((uint64_t)v15, (uint64_t)v13, &qword_1001FF868);
  sub_100008DD4((uint64_t)v9, (uint64_t)v7, &qword_1001FF860);
  sub_100008DD4((uint64_t)v13, a2, &qword_1001FF868);
  uint64_t v18 = sub_1000063C0(&qword_1001FF880);
  sub_100008DD4((uint64_t)v7, a2 + *(int *)(v18 + 48), &qword_1001FF860);
  sub_10002784C((uint64_t)v9, &qword_1001FF860);
  sub_10002784C((uint64_t)v15, &qword_1001FF868);
  sub_10002784C((uint64_t)v7, &qword_1001FF860);
  return sub_10002784C((uint64_t)v13, &qword_1001FF868);
}

uint64_t sub_1000983C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000063C0(&qword_1001FF8A8);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)v21 - v9;
  sub_100099194(a1, (uint64_t)v21);
  uint64_t v11 = (_OWORD *)swift_allocObject();
  long long v12 = v21[7];
  v11[7] = v21[6];
  v11[8] = v12;
  v11[9] = v21[8];
  long long v13 = v21[3];
  v11[3] = v21[2];
  v11[4] = v13;
  long long v14 = v21[5];
  v11[5] = v21[4];
  v11[6] = v14;
  long long v15 = v21[1];
  v11[1] = v21[0];
  void v11[2] = v15;
  sub_1000063C0((uint64_t *)&unk_100201F10);
  sub_100099430();
  Button.init(action:label:)();
  uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v16(v8, v10, v4);
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  uint64_t v17 = sub_1000063C0(&qword_1001FF8E0);
  v16((char *)(a2 + *(int *)(v17 + 48)), v8, v4);
  uint64_t v18 = a2 + *(int *)(v17 + 64);
  *(void *)uint64_t v18 = 0;
  *(unsigned char *)(v18 + 8) = 1;
  uint64_t v19 = *(void (**)(char *, uint64_t))(v5 + 8);
  v19(v10, v4);
  return ((uint64_t (*)(char *, uint64_t))v19)(v8, v4);
}

uint64_t sub_1000985DC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  swift_getKeyPath();
  *(void *)&long long v9 = v2;
  sub_1000991D8((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_retain();
  sub_100139A3C();
  swift_release();
  uint64_t v3 = *(void *)(a1 + 136);
  long long v9 = *(_OWORD *)(a1 + 120);
  uint64_t v10 = v3;
  uint64_t v13 = 0;
  unint64_t v14 = 0xE000000000000000;
  sub_1000063C0(&qword_1001FF890);
  State.wrappedValue.setter();
  uint64_t v4 = *(void *)(a1 + 88);
  char v5 = *(unsigned char *)(a1 + 96);
  LOBYTE(v9) = *(unsigned char *)(a1 + 80);
  *((void *)&v9 + 1) = v4;
  LOBYTE(v10) = v5;
  sub_1000063C0(&qword_1001FB608);
  FocusState.wrappedValue.getter();
  sub_100008DD4(a1, (uint64_t)&v9, &qword_1001FF8A0);
  uint64_t v6 = v11;
  if (!v11) {
    return sub_10002784C((uint64_t)&v9, &qword_1001FF8A0);
  }
  uint64_t v7 = v12;
  sub_100044740(&v9, v11);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v7);
  return sub_100027DBC((uint64_t)&v9);
}

uint64_t sub_1000987D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v41 = a1;
  uint64_t v1 = sub_1000063C0(&qword_1001FF8D0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v38 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = type metadata accessor for TintShapeStyle();
  uint64_t v4 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  uint64_t v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000063C0(&qword_1001FF8C8);
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7);
  uint64_t v10 = (uint64_t *)((char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = sub_1000063C0(&qword_1001FF8C0);
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  unint64_t v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_1000063C0(&qword_1001FF8B8) - 8;
  __chkstk_darwin(v40);
  uint64_t v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = Image.init(systemName:)();
  TintShapeStyle.init()();
  uint64_t v18 = v39;
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v3, v6, v39);
  sub_100008DD4((uint64_t)v3, (uint64_t)v10 + *(int *)(v8 + 44), &qword_1001FF8D0);
  uint64_t *v10 = v17;
  swift_retain();
  sub_10002784C((uint64_t)v3, &qword_1001FF8D0);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v18);
  swift_release();
  uint64_t v19 = static Font.title.getter();
  uint64_t KeyPath = swift_getKeyPath();
  sub_100008DD4((uint64_t)v10, (uint64_t)v14, &qword_1001FF8C8);
  uint64_t v21 = (uint64_t *)&v14[*(int *)(v12 + 44)];
  *uint64_t v21 = KeyPath;
  v21[1] = v19;
  sub_10002784C((uint64_t)v10, &qword_1001FF8C8);
  LOBYTE(v19) = static Edge.Set.all.getter();
  EdgeInsets.init(_all:)();
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  sub_100008DD4((uint64_t)v14, (uint64_t)v16, &qword_1001FF8C0);
  int v30 = &v16[*(int *)(v40 + 44)];
  *int v30 = v19;
  *((void *)v30 + 1) = v23;
  *((void *)v30 + 2) = v25;
  *((void *)v30 + 3) = v27;
  *((void *)v30 + 4) = v29;
  v30[40] = 0;
  sub_10002784C((uint64_t)v14, &qword_1001FF8C0);
  if (qword_1001FAD28 != -1) {
    swift_once();
  }
  uint64_t v31 = qword_1002129D0;
  swift_retain();
  uint64_t v32 = static Alignment.center.getter();
  uint64_t v34 = v33;
  uint64_t v35 = v41;
  sub_100008DD4((uint64_t)v16, v41, &qword_1001FF8B8);
  uint64_t v36 = v35 + *(int *)(sub_1000063C0((uint64_t *)&unk_100201F10) + 36);
  *(void *)uint64_t v36 = v31;
  *(_WORD *)(v36 + 8) = 256;
  *(void *)(v36 + 16) = v32;
  *(void *)(v36 + 24) = v34;
  return sub_10002784C((uint64_t)v16, &qword_1001FF8B8);
}

uint64_t sub_100098BB4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v39 = a2;
  uint64_t v3 = sub_1000063C0(&qword_1001FF888);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v38 = &v30[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  uint64_t v8 = &v30[-v7];
  uint64_t v9 = *(void *)(a1 + 136);
  long long v40 = *(_OWORD *)(a1 + 120);
  *(void *)&long long v41 = v9;
  sub_1000063C0(&qword_1001FF890);
  State.projectedValue.getter();
  uint64_t v36 = *((void *)&v51 + 1);
  uint64_t v37 = v51;
  uint64_t v34 = *((void *)&v52 + 1);
  uint64_t v35 = v52;
  uint64_t v10 = *(void *)(a1 + 88);
  char v11 = *(unsigned char *)(a1 + 96);
  LOBYTE(v40) = *(unsigned char *)(a1 + 80);
  *((void *)&v40 + 1) = v10;
  LOBYTE(v41) = v11;
  sub_1000063C0(&qword_1001FB608);
  FocusState.projectedValue.getter();
  uint64_t v32 = *((void *)&v51 + 1);
  uint64_t v33 = v51;
  int v31 = v52;
  sub_100099194(a1, (uint64_t)&v51);
  uint64_t v12 = (_OWORD *)swift_allocObject();
  long long v13 = v58;
  v12[7] = v57;
  v12[8] = v13;
  v12[9] = v59;
  long long v14 = v54;
  uint64_t v12[3] = v53;
  _OWORD v12[4] = v14;
  long long v15 = v56;
  void v12[5] = v55;
  v12[6] = v15;
  long long v16 = v52;
  v12[1] = v51;
  void v12[2] = v16;
  type metadata accessor for WritingToolsModel();
  sub_1000991D8((unint64_t *)&unk_1001FB3F0, (void (*)(uint64_t))type metadata accessor for WritingToolsModel);
  uint64_t v17 = Environment.init<A>(_:)();
  char v19 = v18 & 1;
  type metadata accessor for CompositionModel(0);
  sub_1000991D8((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  uint64_t v20 = Environment.init<A>(_:)();
  sub_1000E9A58(v17, v19, v20, v21 & 1, v37, v36, v35, v34, (uint64_t)&v51, v33, v32, v31, 0, (uint64_t)sub_1000991D0, (uint64_t)v12, 0);
  long long v48 = v59;
  long long v49 = v60;
  long long v50 = v61;
  long long v44 = v55;
  long long v45 = v56;
  long long v46 = v57;
  long long v47 = v58;
  long long v40 = v51;
  long long v41 = v52;
  long long v42 = v53;
  long long v43 = v54;
  sub_100099278();
  View.environment<A>(_:)();
  sub_1000992CC((uint64_t)&v51);
  uint64_t v22 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v4 + 16);
  uint64_t v23 = v38;
  v22(v38, v8, v3);
  uint64_t v24 = v39;
  void *v39 = 0;
  *((unsigned char *)v24 + 8) = 1;
  uint64_t v25 = v24;
  uint64_t v26 = sub_1000063C0(&qword_1001FF898);
  v22((unsigned char *)v25 + *(int *)(v26 + 48), v23, v3);
  uint64_t v27 = (uint64_t)v25 + *(int *)(v26 + 64);
  *(void *)uint64_t v27 = 0;
  *(unsigned char *)(v27 + 8) = 1;
  uint64_t v28 = *(void (**)(unsigned char *, uint64_t))(v4 + 8);
  v28(v8, v3);
  return ((uint64_t (*)(unsigned char *, uint64_t))v28)(v23, v3);
}

uint64_t sub_100098FF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100008DD4(a3, (uint64_t)v8, &qword_1001FF8A0);
  uint64_t v5 = v9;
  if (!v9) {
    return sub_10002784C((uint64_t)v8, &qword_1001FF8A0);
  }
  uint64_t v6 = v10;
  sub_100044740(v8, v9);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 16))(a1, a2, v5, v6);
  return sub_100027DBC((uint64_t)v8);
}

double sub_1000990A0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_100099708(a1, a3);
  *(void *)(a3 + 40) = a2;
  State.init(wrappedValue:)();
  *(unsigned char *)(a3 + 48) = v8;
  *(void *)(a3 + 56) = *((void *)&v8 + 1);
  State.init(wrappedValue:)();
  *(unsigned char *)(a3 + 64) = v8;
  *(void *)(a3 + 72) = *((void *)&v8 + 1);
  *(unsigned char *)(a3 + 80) = FocusState.init<>()() & 1;
  *(void *)(a3 + 88) = v5;
  *(unsigned char *)(a3 + 96) = v6 & 1;
  State.init(wrappedValue:)();
  *(unsigned char *)(a3 + 104) = v8;
  *(void *)(a3 + 112) = *((void *)&v8 + 1);
  State.init(wrappedValue:)();
  double result = *(double *)&v8;
  *(_OWORD *)(a3 + 120) = v8;
  *(void *)(a3 + 136) = v9;
  return result;
}

uint64_t sub_100099194(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1000991D0(uint64_t a1, uint64_t a2)
{
  return sub_100098FF4(a1, a2, v2 + 16);
}

uint64_t sub_1000991D8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100099220@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.font.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10009924C()
{
  return EnvironmentValues.font.setter();
}

unint64_t sub_100099278()
{
  unint64_t result = qword_100201C30;
  if (!qword_100201C30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100201C30);
  }
  return result;
}

uint64_t sub_1000992CC(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000993B0()
{
  if (*(void *)(v0 + 40)) {
    sub_100027DBC(v0 + 16);
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 160, 7);
}

uint64_t sub_100099428()
{
  return sub_1000985DC(v0 + 16);
}

unint64_t sub_100099430()
{
  unint64_t result = qword_1001FF8B0;
  if (!qword_1001FF8B0)
  {
    sub_100006C14((uint64_t *)&unk_100201F10);
    sub_1000994D0();
    sub_100027F2C((unint64_t *)&unk_100201F60, &qword_1001FF8D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FF8B0);
  }
  return result;
}

unint64_t sub_1000994D0()
{
  unint64_t result = qword_100201F20;
  if (!qword_100201F20)
  {
    sub_100006C14(&qword_1001FF8B8);
    sub_10009954C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100201F20);
  }
  return result;
}

unint64_t sub_10009954C()
{
  unint64_t result = qword_100201F30;
  if (!qword_100201F30)
  {
    sub_100006C14(&qword_1001FF8C0);
    sub_1000995EC();
    sub_100027F2C((unint64_t *)&unk_1002025D0, &qword_1001FDAC0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100201F30);
  }
  return result;
}

unint64_t sub_1000995EC()
{
  unint64_t result = qword_100201F40;
  if (!qword_100201F40)
  {
    sub_100006C14(&qword_1001FF8C8);
    sub_100027F2C((unint64_t *)&unk_100201F50, &qword_1001FF8D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100201F40);
  }
  return result;
}

uint64_t sub_10009968C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.font.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1000996B8()
{
  return EnvironmentValues.font.setter();
}

uint64_t sub_1000996EC()
{
  return sub_100069004(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_100099708(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000063C0(&qword_1001FF8A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_100099774()
{
  unint64_t result = qword_1001FF8E8;
  if (!qword_1001FF8E8)
  {
    sub_100006C14(&qword_1001FF858);
    sub_100006C14(&qword_1001FF838);
    sub_100027F2C(&qword_1001FF850, &qword_1001FF838);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FF8E8);
  }
  return result;
}

uint64_t sub_100099864@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_10009AE54();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v4 = v3 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__session;
  swift_beginAccess();
  return sub_10009AEAC(v4, a2);
}

uint64_t sub_100099900(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = sub_1000063C0(&qword_1001FB7D0);
  __chkstk_darwin(v4 - 8);
  char v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10009AEAC(a1, (uint64_t)v6);
  uint64_t v7 = *a2;
  swift_getKeyPath();
  uint64_t v10 = v7;
  char v11 = v6;
  uint64_t v12 = v7;
  sub_10009AE54();
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  return sub_10009AF14((uint64_t)v6);
}

id sub_1000999FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = OBJC_IVAR____TtC21WritingToolsUIService25PromptEntryViewController_writingToolsDelegate;
  *(void *)&v4[OBJC_IVAR____TtC21WritingToolsUIService25PromptEntryViewController_writingToolsDelegate] = 0;
  uint64_t v7 = &v4[OBJC_IVAR____TtC21WritingToolsUIService25PromptEntryViewController_preferredContentSizeHandler];
  *(void *)uint64_t v7 = a1;
  *((void *)v7 + 1) = a2;
  *(void *)&v4[v6] = a3;
  long long v8 = v4;
  swift_retain();
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)&v8[OBJC_IVAR____TtC21WritingToolsUIService25PromptEntryViewController_compositionModel] = a4;
  uint64_t v17 = 0;
  memset(v16, 0, sizeof(v16));
  swift_retain_n();
  sub_1000990A0((uint64_t)v16, a4, (uint64_t)&v18);
  uint64_t v9 = &v8[OBJC_IVAR____TtC21WritingToolsUIService25PromptEntryViewController_promptEntryView];
  *((_OWORD *)v9 + 5) = v23;
  *((_OWORD *)v9 + 6) = v24;
  *((_OWORD *)v9 + 7) = v25;
  *((_OWORD *)v9 + 8) = v26;
  *((_OWORD *)v9 + 1) = v19;
  *((_OWORD *)v9 + 2) = v20;
  *((_OWORD *)v9 + 3) = v21;
  *((_OWORD *)v9 + 4) = v22;
  *(_OWORD *)uint64_t v9 = v18;

  uint64_t v10 = (objc_class *)type metadata accessor for PromptEntryViewController();
  v15.receiver = v8;
  v15.super_class = v10;
  id v11 = [super initWithNibName:0 bundle:0];
  *((void *)&v19 + 1) = v10;
  *(void *)&long long v20 = &off_1001ECA38;
  id v12 = v11;
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  *(void *)&long long v18 = v12;
  uint64_t v13 = (uint64_t)v12 + OBJC_IVAR____TtC21WritingToolsUIService25PromptEntryViewController_promptEntryView;
  swift_beginAccess();
  sub_10009ACD4((uint64_t)&v18, v13);
  swift_endAccess();
  return v12;
}

void sub_100099C14()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for UIHostingControllerSizingOptions();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = (uint64_t)v0 + OBJC_IVAR____TtC21WritingToolsUIService25PromptEntryViewController_promptEntryView;
  swift_beginAccess();
  sub_100099194(v3, (uint64_t)v43);
  id v4 = objc_allocWithZone((Class)sub_1000063C0(&qword_1001FF948));
  uint64_t v5 = (void *)UIHostingController.init(rootView:)();
  static UIHostingControllerSizingOptions.preferredContentSize.getter();
  dispatch thunk of UIHostingController.sizingOptions.setter();
  id v6 = [v0 view];
  if (!v6)
  {
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v7 = v6;
  id v8 = [v5 view];
  if (!v8)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v9 = v8;
  [v7 addSubview:v8];

  id v10 = [v5 view];
  if (!v10)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  id v11 = v10;
  [v10 setTranslatesAutoresizingMaskIntoConstraints:0];

  [v1 addChildViewController:v5];
  sub_1000063C0(&qword_1001FAFD0);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_100189610;
  id v13 = [v5 view];
  if (!v13)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  long long v14 = v13;
  id v15 = [v13 leadingAnchor];

  id v16 = [v1 view];
  if (!v16)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v17 = v16;
  id v18 = [v16 leadingAnchor];

  id v19 = [v15 constraintEqualToAnchor:v18];
  *(void *)(v12 + 32) = v19;
  id v20 = [v5 view];
  if (!v20)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  long long v21 = v20;
  id v22 = [v20 trailingAnchor];

  id v23 = [v1 view];
  if (!v23)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  long long v24 = v23;
  id v25 = [v23 trailingAnchor];

  id v26 = [v22 constraintEqualToAnchor:v25];
  *(void *)(v12 + 40) = v26;
  id v27 = [v5 view];
  if (!v27)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v28 = v27;
  id v29 = [v27 topAnchor];

  id v30 = [v1 view];
  if (!v30)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  int v31 = v30;
  id v32 = [v30 topAnchor];

  id v33 = [v29 constraintEqualToAnchor:v32];
  *(void *)(v12 + 48) = v33;
  id v34 = [v5 view];
  if (!v34)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v35 = v34;
  id v36 = [v34 bottomAnchor];

  id v37 = [v1 view];
  if (v37)
  {
    uint64_t v38 = v37;
    uint64_t v39 = self;
    id v40 = [v38 bottomAnchor];

    id v41 = [v36 constraintEqualToAnchor:v40];
    *(void *)(v12 + 56) = v41;
    v43[0] = v12;
    specialized Array._endMutation()();
    sub_10009AF90();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v39 activateConstraints:isa];

    return;
  }
LABEL_23:
  __break(1u);
}

uint64_t sub_10009A174(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1000063C0(&qword_1001FF820);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  type metadata accessor for MainActor();
  uint64_t v9 = v2;
  swift_bridgeObjectRetain();
  uint64_t v10 = static MainActor.shared.getter();
  id v11 = (void *)swift_allocObject();
  void v11[2] = v10;
  v11[3] = &protocol witness table for MainActor;
  v11[4] = v9;
  v11[5] = a1;
  v11[6] = a2;
  sub_1001228D0((uint64_t)v7, (uint64_t)&unk_1001FF940, (uint64_t)v11);
  uint64_t result = swift_release();
  id v13 = *(void **)&v9[OBJC_IVAR____TtC21WritingToolsUIService25PromptEntryViewController_writingToolsDelegate];
  if (v13)
  {
    uint64_t result = (uint64_t)[*(id *)&v9[OBJC_IVAR____TtC21WritingToolsUIService25PromptEntryViewController_writingToolsDelegate] respondsToSelector:"updatePromptEntryState:"];
    if (result) {
      return (uint64_t)[v13 updatePromptEntryState:2];
    }
  }
  return result;
}

uint64_t sub_10009A2E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[7] = a5;
  v6[8] = a6;
  v6[6] = a4;
  sub_1000063C0(&qword_1001FB7D0);
  v6[9] = swift_task_alloc();
  v6[10] = type metadata accessor for MainActor();
  v6[11] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v6[12] = v8;
  v6[13] = v7;
  return _swift_task_switch(sub_10009A3B4, v8, v7);
}

uint64_t sub_10009A3B4()
{
  uint64_t v1 = v0[9];
  uint64_t v2 = v0[6];
  uint64_t v3 = OBJC_IVAR____TtC21WritingToolsUIService25PromptEntryViewController_compositionModel;
  v0[14] = OBJC_IVAR____TtC21WritingToolsUIService25PromptEntryViewController_compositionModel;
  uint64_t v4 = *(void *)(v2 + v3);
  swift_getKeyPath();
  v0[5] = v4;
  sub_10009AE54();
  swift_retain();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v5 = v4 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__session;
  swift_beginAccess();
  sub_10009AEAC(v5, v1);
  swift_release();
  uint64_t v6 = type metadata accessor for CompositionModel.Session(0);
  LODWORD(v4) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v1, 1, v6);
  sub_10009AF14(v1);
  v0[15] = *(void *)(v2 + v3);
  if (v4 == 1)
  {
    swift_retain();
    uint64_t v7 = (void *)swift_task_alloc();
    v0[16] = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_10009A5E8;
    return sub_10006DCA8();
  }
  else
  {
    swift_retain();
    uint64_t v9 = (void *)swift_task_alloc();
    v0[20] = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_10009A9FC;
    uint64_t v11 = v0[7];
    uint64_t v10 = v0[8];
    return sub_10006F470(v11, v10);
  }
}

uint64_t sub_10009A5E8()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 104);
  uint64_t v3 = *(void *)(v1 + 96);
  return _swift_task_switch(sub_10009A72C, v3, v2);
}

uint64_t sub_10009A72C()
{
  v0[17] = *(void *)(v0[6] + v0[14]);
  swift_retain();
  v0[18] = static MainActor.shared.getter();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[19] = v1;
  void *v1 = v0;
  v1[1] = sub_10009A7E8;
  uint64_t v3 = v0[7];
  uint64_t v2 = v0[8];
  return sub_100070E18(v3, v2);
}

uint64_t sub_10009A7E8()
{
  swift_task_dealloc();
  uint64_t v1 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10009A924, v1, v0);
}

uint64_t sub_10009A924()
{
  swift_release();
  swift_release();
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t v2 = *(void *)(v0 + 104);
  return _swift_task_switch(sub_10009A990, v1, v2);
}

uint64_t sub_10009A990()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10009A9FC()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 104);
  uint64_t v3 = *(void *)(v1 + 96);
  return _swift_task_switch(sub_10009B024, v3, v2);
}

id sub_10009AB74()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PromptEntryViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for PromptEntryViewController()
{
  return self;
}

void sub_10009AC3C()
{
  uint64_t v1 = *(void **)(*v0 + OBJC_IVAR____TtC21WritingToolsUIService25PromptEntryViewController_writingToolsDelegate);
  if (v1 && ([v1 respondsToSelector:"updatePromptEntryState:"] & 1) != 0)
  {
    [v1 updatePromptEntryState:3];
  }
}

uint64_t sub_10009ACB0(uint64_t a1, uint64_t a2)
{
  return sub_10009A174(a1, a2);
}

uint64_t sub_10009ACD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000063C0(&qword_1001FF8A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10009AD3C()
{
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10009AD84(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_100027204;
  return sub_10009A2E4(a1, v4, v5, v6, v7, v8);
}

unint64_t sub_10009AE54()
{
  unint64_t result = qword_1001FAE70;
  if (!qword_1001FAE70)
  {
    type metadata accessor for CompositionModel(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FAE70);
  }
  return result;
}

uint64_t sub_10009AEAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000063C0(&qword_1001FB7D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10009AF14(uint64_t a1)
{
  uint64_t v2 = sub_1000063C0(&qword_1001FB7D0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10009AF74()
{
  return sub_10006DAB0(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

unint64_t sub_10009AF90()
{
  unint64_t result = qword_1001FAFD8;
  if (!qword_1001FAFD8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1001FAFD8);
  }
  return result;
}

uint64_t sub_10009AFD0(uint64_t a1)
{
  return a1;
}

BOOL sub_10009B028(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_10009B040()
{
  if (*v0) {
    return 0x66666F646E6168;
  }
  else {
    return 0x6E69746972776572;
  }
}

uint64_t sub_10009B080()
{
  swift_getKeyPath();
  sub_1000A98F4((unint64_t *)&unk_100201540, (void (*)(uint64_t))type metadata accessor for RewritingModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__state);
}

uint64_t sub_10009B114(uint64_t result, char a2)
{
  *(unsigned char *)(result + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__state) = a2 & 1;
  return result;
}

unint64_t sub_10009B128()
{
  unint64_t result = sub_100005FFC((uint64_t)_swiftEmptyArrayStorage);
  qword_1002128C8 = result;
  return result;
}

uint64_t sub_10009B150()
{
  return sub_10009B188((uint64_t)&unk_10018E118, &OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__isForEditableContent);
}

uint64_t sub_10009B164(uint64_t result, char a2)
{
  *(unsigned char *)(result + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__isForEditableContent) = a2;
  return result;
}

uint64_t sub_10009B174()
{
  return sub_10009B188((uint64_t)&unk_10018E140, &OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__wantsInlineEditing);
}

uint64_t sub_10009B188(uint64_t a1, void *a2)
{
  swift_getKeyPath();
  sub_1000A98F4((unint64_t *)&unk_100201540, (void (*)(uint64_t))type metadata accessor for RewritingModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(unsigned __int8 *)(v2 + *a2);
}

uint64_t sub_10009B214(uint64_t result, char a2)
{
  *(unsigned char *)(result + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__wantsInlineEditing) = a2;
  return result;
}

uint64_t sub_10009B224()
{
  swift_getKeyPath();
  sub_1000A98F4((unint64_t *)&qword_1001FD2A0, (void (*)(uint64_t))type metadata accessor for ToolModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  int v1 = *(unsigned __int8 *)(v0 + 72);
  if (v1 == 255)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = *(void *)(v0 + 56);
  uint64_t v4 = *(void *)(v0 + 64);
  swift_getKeyPath();
  sub_10000ED40(v2, v3, v4, v1);
  sub_1000A98F4((unint64_t *)&unk_100201540, (void (*)(uint64_t))type metadata accessor for RewritingModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v5 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__isForEditableContent);
  swift_getKeyPath();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  int v6 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__wantsInlineEditing);
  swift_getKeyPath();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (v6 != 1)
  {
    sub_100024DB4(v2, v3, v4, v1);
    return 0;
  }
  if (v1)
  {
LABEL_13:
    _StringGuts.grow(_:)(22);
    swift_bridgeObjectRelease();
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    JUMPOUT(0x10009B4ACLL);
  }
  unint64_t v7 = *(void *)(v0 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__allowedResultOptions);
  sub_100024DB4(v2, v3, v4, 0);
  switch((char)v2)
  {
    case 1:
    case 6:
    case 7:
      return 0;
    case 8:
      if ((v5 & 1) == 0) {
        return 0;
      }
      uint64_t v5 = (v7 >> 2) & 1;
      break;
    case 9:
      if ((v5 & 1) == 0) {
        return 0;
      }
      uint64_t v5 = (v7 >> 3) & 1;
      break;
    default:
      return v5;
  }
  return v5;
}

uint64_t sub_10009B4D4()
{
  swift_getKeyPath();
  sub_1000A98F4((unint64_t *)&unk_100201540, (void (*)(uint64_t))type metadata accessor for RewritingModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(unsigned __int8 *)(v0
                            + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__includeListMarkersInInlineResults);
}

uint64_t sub_10009B568@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1000A98F4((unint64_t *)&unk_100201540, (void (*)(uint64_t))type metadata accessor for RewritingModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__includeListMarkersInInlineResults);
  return result;
}

uint64_t sub_10009B604()
{
  return swift_release();
}

uint64_t sub_10009B6C0()
{
  return sub_10009D0C4((uint64_t)&unk_10018E000, &OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__allowedResultOptions);
}

uint64_t sub_10009B6D4(uint64_t result, uint64_t a2)
{
  *(void *)(result + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__allowedResultOptions) = a2;
  return result;
}

uint64_t sub_10009B6E4()
{
  swift_getKeyPath();
  sub_1000A98F4((unint64_t *)&qword_1001FD2A0, (void (*)(uint64_t))type metadata accessor for ToolModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (*(unsigned char *)(v0 + 72) || *(unsigned char *)(v0 + 48) != 9)
  {
    swift_getKeyPath();
    sub_1000A98F4((unint64_t *)&unk_100201540, (void (*)(uint64_t))type metadata accessor for RewritingModel);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__isForEditableContent);
  }
  else
  {
    swift_getKeyPath();
    sub_1000A98F4((unint64_t *)&unk_100201540, (void (*)(uint64_t))type metadata accessor for RewritingModel);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    if (*(unsigned char *)(v0 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__isForEditableContent) == 1)
    {
      swift_getKeyPath();
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      return (*(unsigned __int8 *)(v0 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__allowedResultOptions) >> 3) & 1;
    }
    else
    {
      return 0;
    }
  }
}

void sub_10009B8A8(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  unint64_t v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  uint64_t v39 = v1;
  sub_1000A98F4((unint64_t *)&unk_100201540, (void (*)(uint64_t))type metadata accessor for RewritingModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v37 = OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__session;
  uint64_t v8 = *(void **)(v1 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__session);
  if (v8)
  {
    if (a1)
    {
      sub_1000085FC(0, &qword_100200180);
      id v9 = a1;
      id v10 = v8;
      char v11 = static NSObject.== infix(_:_:)();

      if (v11) {
        return;
      }
    }
  }
  else if (!a1)
  {
    return;
  }
  id v33 = a1;
  id v34 = v7;
  uint64_t v35 = v5;
  uint64_t v36 = v4;
  uint64_t KeyPath = swift_getKeyPath();
  __chkstk_darwin(KeyPath);
  *(&v33 - 2) = (void *)v2;
  *(&v33 - 1) = 0;
  uint64_t v39 = v2;
  sub_1000A98F4((unint64_t *)&qword_1001FD2A0, (void (*)(uint64_t))type metadata accessor for ToolModel);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  uint64_t v13 = swift_getKeyPath();
  __chkstk_darwin(v13);
  *(&v33 - 2) = (void *)v2;
  *(&v33 - 1) = 0;
  uint64_t v39 = v2;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  uint64_t v14 = swift_getKeyPath();
  __chkstk_darwin(v14);
  *(&v33 - 3) = 0;
  *(&v33 - 2) = 0;
  *(&v33 - 4) = (void *)v2;
  *((unsigned char *)&v33 - 8) = 1;
  uint64_t v39 = v2;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  sub_10002FAC0(0);
  uint64_t v15 = swift_getKeyPath();
  __chkstk_darwin(v15);
  *(&v33 - 2) = (void *)v2;
  *(&v33 - 1) = 0;
  uint64_t v39 = v2;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  uint64_t v16 = swift_getKeyPath();
  __chkstk_darwin(v16);
  *(&v33 - 2) = (void *)v2;
  *((unsigned char *)&v33 - 8) = 0;
  uint64_t v39 = v2;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  unint64_t v17 = sub_100005328((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v18 = swift_getKeyPath();
  __chkstk_darwin(v18);
  *(&v33 - 2) = (void *)v2;
  *(&v33 - 1) = (void *)v17;
  uint64_t v39 = v2;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_bridgeObjectRelease();
  swift_release();
  unint64_t v19 = sub_10000551C((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v20 = swift_getKeyPath();
  __chkstk_darwin(v20);
  *(&v33 - 2) = (void *)v2;
  *(&v33 - 1) = (void *)v19;
  uint64_t v39 = v2;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_bridgeObjectRelease();
  swift_release();
  swift_getKeyPath();
  uint64_t v39 = v2;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v21 = v37;
  if (*(void *)(v2 + v37))
  {
    uint64_t v23 = v35;
    uint64_t v22 = v36;
    uint64_t v24 = (uint64_t)v34;
    if (qword_1001FACD8 != -1) {
      swift_once();
    }
    swift_getKeyPath();
    uint64_t v39 = v2;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    id v25 = *(void **)(v2 + v21);
    if (v25)
    {
      id v26 = [v25 uuid];
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      swift_beginAccess();
      swift_retain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v38 = qword_1002128C8;
      qword_1002128C8 = 0x8000000000000000;
      sub_10016F4D8(v2, v24, isUniquelyReferenced_nonNull_native);
      qword_1002128C8 = v38;
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v24, v22);
      swift_endAccess();
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    uint64_t v29 = v35;
    uint64_t v28 = v36;
    id v30 = v33;
    uint64_t v31 = (uint64_t)v34;
    if (v33)
    {
      if (qword_1001FACD8 != -1) {
        swift_once();
      }
      id v32 = [v30 uuid];
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      swift_beginAccess();
      sub_10016C3C0(v31);
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v31, v28);
      swift_endAccess();
      swift_release();
    }
  }
}

void *sub_10009BFF0()
{
  return sub_10009C368((uint64_t)&unk_10018DD80, &OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__session);
}

id sub_10009C004@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1000A98F4((unint64_t *)&unk_100201540, (void (*)(uint64_t))type metadata accessor for RewritingModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v4 = *(void **)(v3 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__session);
  *a2 = v4;

  return v4;
}

uint64_t sub_10009C0B0(void **a1)
{
  uint64_t v1 = *a1;
  swift_getKeyPath();
  sub_1000A98F4((unint64_t *)&unk_100201540, (void (*)(uint64_t))type metadata accessor for RewritingModel);
  id v2 = v1;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();

  return swift_release();
}

void sub_10009C178(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__session);
  *(void *)(a1 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__session) = a2;
  id v3 = a2;
  sub_10009B8A8(v2);
}

uint64_t sub_10009C1D4()
{
  return sub_10009C994();
}

uint64_t sub_10009C1E8@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1000A98F4((unint64_t *)&unk_100201540, (void (*)(uint64_t))type metadata accessor for RewritingModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  *a2 = *(void *)(v3 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__task);
  return swift_retain();
}

uint64_t sub_10009C288()
{
  return swift_release();
}

void *sub_10009C354()
{
  return sub_10009C368((uint64_t)&unk_10018DE20, &OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__resultAttributedString);
}

void *sub_10009C368(uint64_t a1, void *a2)
{
  swift_getKeyPath();
  sub_1000A98F4((unint64_t *)&unk_100201540, (void (*)(uint64_t))type metadata accessor for RewritingModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v4 = *(void **)(v2 + *a2);
  id v5 = v4;
  return v4;
}

void sub_10009C3FC(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(a1 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__resultAttributedString);
  *(void *)(a1 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__resultAttributedString) = a2;
  id v3 = a2;
}

uint64_t sub_10009C438()
{
  swift_getKeyPath();
  sub_1000A98F4((unint64_t *)&unk_100201540, (void (*)(uint64_t))type metadata accessor for RewritingModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(void *)(v0 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__resultAttributedStringRange);
}

__n128 sub_10009C4D4@<Q0>(uint64_t *a1@<X0>, __n128 *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1000A98F4((unint64_t *)&unk_100201540, (void (*)(uint64_t))type metadata accessor for RewritingModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  unsigned __int8 v4 = *(unsigned char *)(v3 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__resultAttributedStringRange + 16);
  __n128 result = *(__n128 *)(v3 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__resultAttributedStringRange);
  *a2 = result;
  a2[1].n128_u8[0] = v4;
  return result;
}

uint64_t sub_10009C57C()
{
  return swift_release();
}

uint64_t sub_10009C648()
{
  return sub_10009C754((uint64_t)&unk_10018E0A0, &OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__modelInfoString);
}

uint64_t sub_10009C65C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_10009C808(a1, &OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__modelInfoString, a2);
}

uint64_t sub_10009C670()
{
  return swift_release();
}

uint64_t sub_10009C740()
{
  return sub_10009C754((uint64_t)&unk_10018E028, &OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__inputStringForFeedback);
}

uint64_t sub_10009C754(uint64_t a1, void *a2)
{
  swift_getKeyPath();
  sub_1000A98F4((unint64_t *)&unk_100201540, (void (*)(uint64_t))type metadata accessor for RewritingModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v4 = *(void *)(v2 + *a2);
  swift_bridgeObjectRetain();
  return v4;
}

uint64_t sub_10009C7F4@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_10009C808(a1, &OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__inputStringForFeedback, a2);
}

uint64_t sub_10009C808@<X0>(uint64_t *a1@<X0>, void *a2@<X4>, void *a3@<X8>)
{
  uint64_t v5 = *a1;
  swift_getKeyPath();
  sub_1000A98F4((unint64_t *)&unk_100201540, (void (*)(uint64_t))type metadata accessor for RewritingModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v6 = (void *)(v5 + *a2);
  uint64_t v7 = v6[1];
  *a3 = *v6;
  a3[1] = v7;
  return swift_bridgeObjectRetain();
}

uint64_t sub_10009C8B0()
{
  return swift_release();
}

uint64_t sub_10009C980()
{
  return sub_10009C994();
}

uint64_t sub_10009C994()
{
  return swift_retain();
}

uint64_t sub_10009CA24(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__analyticsInstance) = a2;
  swift_retain();
  return swift_release();
}

uint64_t sub_10009CA68()
{
  return sub_10009CB5C();
}

uint64_t sub_10009CA7C()
{
  return swift_release();
}

uint64_t sub_10009CB48()
{
  return sub_10009CB5C();
}

uint64_t sub_10009CB5C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_10009CC04@<X0>(uint64_t *a1@<X0>, void *a2@<X4>, void *a3@<X8>)
{
  uint64_t v5 = *a1;
  swift_getKeyPath();
  sub_1000A98F4((unint64_t *)&unk_100201540, (void (*)(uint64_t))type metadata accessor for RewritingModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v6 = (void *)(v5 + *a2);
  swift_beginAccess();
  *a3 = *v6;
  return swift_bridgeObjectRetain();
}

uint64_t sub_10009CCC0()
{
  return swift_release();
}

uint64_t sub_10009CD8C()
{
  swift_getKeyPath();
  sub_1000A98F4((unint64_t *)&unk_100201540, (void (*)(uint64_t))type metadata accessor for RewritingModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__showingOriginal);
}

uint64_t sub_10009CE20@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1000A98F4((unint64_t *)&unk_100201540, (void (*)(uint64_t))type metadata accessor for RewritingModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__showingOriginal);
  return result;
}

uint64_t sub_10009CEBC()
{
  return swift_release();
}

void sub_10009CF78(uint64_t a1, char a2)
{
  uint64_t v3 = OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__showingOriginal;
  *(unsigned char *)(a1 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__showingOriginal) = a2;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = (void *)Strong;
    swift_getKeyPath();
    sub_1000A98F4((unint64_t *)&unk_100201540, (void (*)(uint64_t))type metadata accessor for RewritingModel);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v6 = *(void **)(a1 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__session);
    if (v6)
    {
      swift_getKeyPath();
      id v7 = v6;
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      if (*(unsigned char *)(a1 + v3)) {
        uint64_t v8 = 1;
      }
      else {
        uint64_t v8 = 2;
      }
      [v5 writingToolsSession:v7 didReceiveAction:v8];
      swift_unknownObjectRelease();
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_10009D0B0()
{
  return sub_10009D0C4((uint64_t)&unk_10018DFD8, &OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__undoCount);
}

uint64_t sub_10009D0C4(uint64_t a1, void *a2)
{
  swift_getKeyPath();
  sub_1000A98F4((unint64_t *)&unk_100201540, (void (*)(uint64_t))type metadata accessor for RewritingModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(void *)(v2 + *a2);
}

uint64_t sub_10009D150@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_10009D244(a1, &OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__undoCount, a2);
}

uint64_t sub_10009D164()
{
  return swift_release();
}

uint64_t sub_10009D21C()
{
  return sub_10009D0C4((uint64_t)&unk_10018DFB0, &OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__redoCount);
}

uint64_t sub_10009D230@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_10009D244(a1, &OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__redoCount, a2);
}

uint64_t sub_10009D244@<X0>(uint64_t *a1@<X0>, void *a2@<X4>, void *a3@<X8>)
{
  uint64_t v5 = *a1;
  swift_getKeyPath();
  sub_1000A98F4((unint64_t *)&unk_100201540, (void (*)(uint64_t))type metadata accessor for RewritingModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  *a3 = *(void *)(v5 + *a2);
  return result;
}

uint64_t sub_10009D2E4()
{
  return swift_release();
}

uint64_t sub_10009D39C()
{
  uint64_t v1 = v0;
  swift_getKeyPath();
  sub_1000A98F4((unint64_t *)&qword_1001FD2A0, (void (*)(uint64_t))type metadata accessor for ToolModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (*(unsigned __int8 *)(v0 + 72) == 255)
  {
    if (qword_1001FAC28 != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    sub_10000EBE8(v4, (uint64_t)qword_100212770);
    uint64_t v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v5, v6)) {
      goto LABEL_18;
    }
    id v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v7 = 0;
    uint64_t v8 = "Checking prompt when mode is nil";
    goto LABEL_17;
  }
  if (*(unsigned char *)(v0 + 72))
  {
    if (qword_1001FAC28 != -1) {
      swift_once();
    }
    uint64_t v9 = type metadata accessor for Logger();
    sub_10000EBE8(v9, (uint64_t)qword_100212770);
    uint64_t v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v5, v6)) {
      goto LABEL_18;
    }
    id v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v7 = 0;
    uint64_t v8 = "Checking prompt from unexpected mode";
    goto LABEL_17;
  }
  uint64_t v2 = *(void *)(v0 + 48);
  if (v2 != 5)
  {
    if (qword_1001FAC28 != -1) {
      swift_once();
    }
    uint64_t v10 = type metadata accessor for Logger();
    sub_10000EBE8(v10, (uint64_t)qword_100212770);
    uint64_t v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v5, v6)) {
      goto LABEL_18;
    }
    id v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v7 = 0;
    uint64_t v8 = "Checking prompt from unexpected type";
LABEL_17:
    _os_log_impl((void *)&_mh_execute_header, v5, v6, v8, v7, 2u);
    swift_slowDealloc();
LABEL_18:

    return 0;
  }
  uint64_t v3 = *(void *)(v0 + 56);
  sub_10000ED40(v2, v3, *(void *)(v1 + 64), 0);
  return v3;
}

uint64_t sub_10009D640(char a1)
{
  uint64_t v2 = (void *)v1;
  swift_getKeyPath();
  sub_1000A98F4((unint64_t *)&qword_1001FD2A0, (void (*)(uint64_t))type metadata accessor for ToolModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  if (*(unsigned char *)(v1 + 88) & 1) == 0 && (a1)
  {
    swift_getKeyPath();
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v5 = *(void *)(v1 + 96);
    if (v5)
    {
      swift_getErrorValue();
      swift_errorRetain();
      v6._uint64_t countAndFlagsBits = Error.localizedDescription.getter();
      String.append(_:)(v6);
      swift_bridgeObjectRelease();
      uint64_t v8 = 0xD000000000000011;
      unint64_t v7 = 0x800000010019EA10;
      swift_getKeyPath();
      sub_1000A98F4((unint64_t *)&unk_100201540, (void (*)(uint64_t))type metadata accessor for RewritingModel);
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      if (*(void *)(v1 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__analyticsInstance))
      {
        swift_getKeyPath();
        swift_errorRetain();
        swift_retain();
        ObservationRegistrar.access<A, B>(_:keyPath:)();
        uint64_t result = swift_release();
        int v9 = *(unsigned __int8 *)(v1 + 72);
        if (v9 == 255) {
          goto LABEL_13;
        }
        uint64_t v10 = *(void *)(v1 + 56);
        uint64_t v11 = *(void *)(v1 + 64);
        uint64_t v12 = *(void *)(v1 + 48);
        sub_10000ED40(v12, v10, v11, *(unsigned char *)(v1 + 72));
        sub_10000DC14(v5, v12, v10, v11, v9);
        swift_errorRelease();
        sub_100024DB4(v12, v10, v11, v9);
        swift_errorRelease();
        swift_release();
        uint64_t v8 = 0xD000000000000011;
        unint64_t v7 = 0x800000010019EA10;
      }
      else
      {
        swift_errorRelease();
      }
    }
    else
    {
      unint64_t v7 = 0xEF73736563637553;
      uint64_t v8 = 0x203A746C75736552;
    }
    swift_getKeyPath();
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    uint64_t result = swift_release();
    int v13 = *(unsigned __int8 *)(v1 + 72);
    if (v13 != 255)
    {
      uint64_t v15 = v2[7];
      uint64_t v14 = v2[8];
      uint64_t v16 = v2[6];
      sub_1000272F8(v16, v15, v14, v13);
      sub_100065F98(v16, v15, v14, v13, v8, v7);
      swift_bridgeObjectRelease();
      return sub_100024DB4(v16, v15, v14, v13);
    }
    __break(1u);
LABEL_13:
    __break(1u);
  }
  return result;
}

uint64_t sub_10009D978()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000063C0(&qword_1001FF820);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  type metadata accessor for MainActor();
  swift_retain();
  uint64_t v6 = static MainActor.shared.getter();
  unint64_t v7 = (void *)swift_allocObject();
  v7[2] = v6;
  v7[3] = &protocol witness table for MainActor;
  v7[4] = v1;
  sub_1001228D0((uint64_t)v4, (uint64_t)&unk_100200190, (uint64_t)v7);
  return swift_release();
}

uint64_t sub_10009DA90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[8] = a4;
  uint64_t v5 = type metadata accessor for UUID();
  v4[9] = v5;
  v4[10] = *(void *)(v5 - 8);
  v4[11] = swift_task_alloc();
  type metadata accessor for MainActor();
  v4[12] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[13] = v7;
  v4[14] = v6;
  return _swift_task_switch(sub_10009DB84, v7, v6);
}

uint64_t sub_10009DB84()
{
  uint64_t v1 = v0[8];
  swift_getKeyPath();
  v0[5] = v1;
  v0[15] = OBJC_IVAR____TtC21WritingToolsUIService9ToolModel___observationRegistrar;
  v0[16] = sub_1000A98F4((unint64_t *)&qword_1001FD2A0, (void (*)(uint64_t))type metadata accessor for ToolModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  unint64_t v2 = *(void *)(v1 + 80);
  v0[17] = v2;
  if (!v2)
  {
    swift_release();
    goto LABEL_27;
  }
  if (!(v2 >> 62))
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    v0[18] = v3;
    if (v3) {
      goto LABEL_4;
    }
LABEL_26:
    swift_release();
    swift_bridgeObjectRelease_n();
    goto LABEL_27;
  }
LABEL_31:
  swift_bridgeObjectRetain_n();
  uint64_t v35 = _CocoaArrayWrapper.endIndex.getter();
  v0[18] = v35;
  if (!v35) {
    goto LABEL_26;
  }
LABEL_4:
  uint64_t v4 = OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__finishedResultForContextUUID;
  v0[19] = OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel___observationRegistrar;
  v0[20] = v4;
  swift_beginAccess();
  uint64_t v5 = 0;
  while (1)
  {
    uint64_t v6 = v0[17];
    if ((v6 & 0xC000000000000001) != 0) {
      id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v7 = *(id *)(v6 + 8 * v5 + 32);
    }
    uint64_t v8 = v7;
    v0[21] = v7;
    v0[22] = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    uint64_t v9 = v0[8];
    swift_getKeyPath();
    v0[6] = v9;
    swift_bridgeObjectRetain();
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v10 = *(void *)(v9 + 80);
    unint64_t v11 = v0[17];
    if (!v10)
    {
      swift_release();
      swift_bridgeObjectRelease();
      goto LABEL_21;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unsigned __int8 v12 = sub_10016BFA8(v11, v10);
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    if ((v12 & 1) == 0) {
      break;
    }
    uint64_t v13 = v0[20];
    uint64_t v14 = v0[8];
    id v15 = [v8 uuid];
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    swift_getKeyPath();
    v0[7] = v14;
    sub_1000A98F4((unint64_t *)&unk_100201540, (void (*)(uint64_t))type metadata accessor for RewritingModel);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v16 = *(void *)(v14 + v13);
    if (*(void *)(v16 + 16))
    {
      uint64_t v17 = v0[11];
      swift_bridgeObjectRetain();
      unint64_t v18 = sub_100007B70(v17);
      if (v19)
      {
        uint64_t v21 = v0[10];
        uint64_t v20 = v0[11];
        uint64_t v22 = v0[9];
        uint64_t v23 = *(void **)(*(void *)(v16 + 56) + 8 * v18);
        v0[23] = v23;
        id v24 = v23;
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
        id v25 = [v8 range];
        uint64_t v27 = v26;
        uint64_t v28 = (void *)swift_task_alloc();
        v0[24] = v28;
        *uint64_t v28 = v0;
        v28[1] = sub_10009E08C;
        return sub_1000A82AC((uint64_t)v24, (uint64_t)v25, v27, (uint64_t)v8, 1);
      }
      swift_bridgeObjectRelease();
    }
    (*(void (**)(void, void))(v0[10] + 8))(v0[11], v0[9]);

    uint64_t v5 = v0[22];
    if (v5 == v0[18]) {
      goto LABEL_26;
    }
  }
  swift_release();
LABEL_21:
  swift_bridgeObjectRelease_n();
  if (qword_1001FAC28 != -1) {
    swift_once();
  }
  uint64_t v30 = type metadata accessor for Logger();
  sub_10000EBE8(v30, (uint64_t)qword_100212770);
  uint64_t v31 = Logger.logObject.getter();
  os_log_type_t v32 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v31, v32))
  {
    id v33 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v33 = 0;
    _os_log_impl((void *)&_mh_execute_header, v31, v32, "contexts changed while sending to results to client - stopping", v33, 2u);
    swift_slowDealloc();
  }

LABEL_27:
  swift_task_dealloc();
  id v34 = (uint64_t (*)(void))v0[1];
  return v34();
}

uint64_t sub_10009E08C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 112);
  uint64_t v3 = *(void *)(v1 + 104);
  return _swift_task_switch(sub_10009E1AC, v3, v2);
}

uint64_t sub_10009E1AC()
{
  uint64_t v1 = *(void **)(v0 + 168);

  uint64_t v2 = *(void *)(v0 + 176);
  if (v2 == *(void *)(v0 + 144))
  {
LABEL_2:
    swift_release();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    while (1)
    {
      uint64_t v3 = *(void *)(v0 + 136);
      if ((v3 & 0xC000000000000001) != 0) {
        id v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v4 = *(id *)(v3 + 8 * v2 + 32);
      }
      uint64_t v5 = v4;
      *(void *)(v0 + 168) = v4;
      *(void *)(v0 + 176) = v2 + 1;
      if (__OFADD__(v2, 1))
      {
        __break(1u);
        goto LABEL_27;
      }
      uint64_t v6 = *(void *)(v0 + 64);
      swift_getKeyPath();
      *(void *)(v0 + 48) = v6;
      swift_bridgeObjectRetain();
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      uint64_t v7 = *(void *)(v6 + 80);
      unint64_t v8 = *(void *)(v0 + 136);
      if (!v7)
      {
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_19;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unsigned __int8 v9 = sub_10016BFA8(v8, v7);
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      if ((v9 & 1) == 0) {
        break;
      }
      uint64_t v10 = *(void *)(v0 + 160);
      uint64_t v11 = *(void *)(v0 + 64);
      id v12 = [v5 uuid];
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      swift_getKeyPath();
      *(void *)(v0 + 56) = v11;
      sub_1000A98F4((unint64_t *)&unk_100201540, (void (*)(uint64_t))type metadata accessor for RewritingModel);
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      uint64_t v13 = *(void *)(v11 + v10);
      if (*(void *)(v13 + 16))
      {
        uint64_t v14 = *(void *)(v0 + 88);
        swift_bridgeObjectRetain();
        unint64_t v15 = sub_100007B70(v14);
        if (v16)
        {
          uint64_t v18 = *(void *)(v0 + 80);
          uint64_t v17 = *(void *)(v0 + 88);
          uint64_t v19 = *(void *)(v0 + 72);
          uint64_t v20 = *(void **)(*(void *)(v13 + 56) + 8 * v15);
          *(void *)(v0 + 184) = v20;
          id v21 = v20;
          swift_bridgeObjectRelease();
          (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
          id v22 = [v5 range];
          uint64_t v24 = v23;
          id v25 = (void *)swift_task_alloc();
          *(void *)(v0 + 192) = v25;
          void *v25 = v0;
          v25[1] = sub_10009E08C;
          return sub_1000A82AC((uint64_t)v21, (uint64_t)v22, v24, (uint64_t)v5, 1);
        }
        swift_bridgeObjectRelease();
      }
      (*(void (**)(void, void))(*(void *)(v0 + 80) + 8))(*(void *)(v0 + 88), *(void *)(v0 + 72));

      uint64_t v2 = *(void *)(v0 + 176);
      if (v2 == *(void *)(v0 + 144)) {
        goto LABEL_2;
      }
    }
    swift_release();
LABEL_19:
    swift_bridgeObjectRelease_n();
    if (qword_1001FAC28 == -1) {
      goto LABEL_20;
    }
LABEL_27:
    swift_once();
LABEL_20:
    uint64_t v27 = type metadata accessor for Logger();
    sub_10000EBE8(v27, (uint64_t)qword_100212770);
    uint64_t v28 = Logger.logObject.getter();
    os_log_type_t v29 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v30 = 0;
      _os_log_impl((void *)&_mh_execute_header, v28, v29, "contexts changed while sending to results to client - stopping", v30, 2u);
      swift_slowDealloc();
    }
  }
  swift_task_dealloc();
  uint64_t v31 = *(uint64_t (**)(void))(v0 + 8);
  return v31();
}

uint64_t sub_10009E5D4(char a1, char a2)
{
  *(void *)(v3 + 416) = v2;
  *(unsigned char *)(v3 + 561) = a2;
  *(unsigned char *)(v3 + 560) = a1;
  sub_1000063C0(&qword_1001FF820);
  *(void *)(v3 + 424) = swift_task_alloc();
  sub_1000063C0(&qword_1002001E8);
  *(void *)(v3 + 432) = swift_task_alloc();
  *(void *)(v3 + 440) = type metadata accessor for MainActor();
  *(void *)(v3 + 448) = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v3 + 456) = v5;
  *(void *)(v3 + 464) = v4;
  return _swift_task_switch(sub_10009E6D8, v5, v4);
}

uint64_t sub_10009E6D8()
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  *(void *)(v0 + 472) = Strong;
  if (!Strong)
  {
    swift_release();
LABEL_19:
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v37 = *(uint64_t (**)(void))(v0 + 8);
    return v37();
  }
  uint64_t v2 = (void *)Strong;
  uint64_t v3 = *(void *)(v0 + 416);
  swift_getKeyPath();
  *(void *)(v0 + 480) = OBJC_IVAR____TtC21WritingToolsUIService9ToolModel___observationRegistrar;
  *(void *)(v0 + 376) = v3;
  *(void *)(v0 + 488) = sub_1000A98F4((unint64_t *)&qword_1001FD2A0, (void (*)(uint64_t))type metadata accessor for ToolModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v4 = *(void *)(v3 + 48);
  *(void *)(v0 + 496) = v4;
  uint64_t v5 = *(void *)(v3 + 56);
  *(void *)(v0 + 504) = v5;
  uint64_t v6 = *(void *)(v3 + 64);
  *(void *)(v0 + 512) = v6;
  int v7 = *(unsigned __int8 *)(v3 + 72);
  *(unsigned char *)(v0 + 562) = v7;
  if (v7 == 255)
  {
    swift_unknownObjectRelease();
    swift_release();
    goto LABEL_19;
  }
  if (*(unsigned char *)(v0 + 560) != 1)
  {
    uint64_t v10 = *(void *)(v0 + 416);
    swift_release();
    swift_getKeyPath();
    *(void *)(v0 + 272) = v10;
    sub_1000A98F4((unint64_t *)&unk_100201540, (void (*)(uint64_t))type metadata accessor for RewritingModel);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v11 = OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__session;
    if (*(void *)(v10 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__session))
    {
      uint64_t v12 = *(void *)(v0 + 416);
      swift_getKeyPath();
      *(void *)(v0 + 264) = v12;
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      uint64_t v13 = *(void **)(v10 + v11);
      if (v13)
      {
        id v14 = v13;
        if (sub_10009B224())
        {
          uint64_t v15 = *(void *)(v0 + 416);
          [v2 writingToolsSession:v14 didReceiveAction:3];
          unint64_t v16 = sub_100005328((uint64_t)_swiftEmptyArrayStorage);
          swift_getKeyPath();
          uint64_t v17 = swift_task_alloc();
          *(void *)(v17 + 16) = v15;
          *(void *)(v17 + 24) = v16;
          *(void *)(v0 + 216) = v15;
          ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
          swift_release();
          swift_bridgeObjectRelease();
          swift_task_dealloc();
          unint64_t v18 = sub_10000551C((uint64_t)_swiftEmptyArrayStorage);
          swift_getKeyPath();
          uint64_t v19 = swift_task_alloc();
          *(void *)(v19 + 16) = v15;
          *(void *)(v19 + 24) = v18;
          *(void *)(v0 + 224) = v15;
          ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();

          swift_release();
          swift_bridgeObjectRelease();
          swift_task_dealloc();
        }
        else
        {
        }
      }
      uint64_t v25 = *(void *)(v0 + 416);
      swift_getKeyPath();
      *(void *)(v0 + 200) = v25;
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      uint64_t v26 = *(void *)(v25 + 80);
      uint64_t v27 = *(void *)(v0 + 416);
      uint64_t v28 = *(void *)(v0 + 424);
      char v29 = *(unsigned char *)(v0 + 561);
      char v30 = *(unsigned char *)(v0 + 560);
      uint64_t v31 = type metadata accessor for TaskPriority();
      uint64_t v32 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56);
      swift_bridgeObjectRetain();
      v32(v28, 1, 1, v31);
      swift_retain();
      uint64_t v33 = static MainActor.shared.getter();
      uint64_t v34 = swift_allocObject();
      *(void *)(v34 + 16) = v33;
      *(void *)(v34 + 24) = &protocol witness table for MainActor;
      *(void *)(v34 + 32) = v26;
      *(void *)(v34 + 40) = v27;
      *(unsigned char *)(v34 + 48) = v30;
      *(unsigned char *)(v34 + 49) = v29;
      uint64_t v35 = sub_1001228D0(v28, (uint64_t)&unk_1002001F8, v34);
      swift_getKeyPath();
      uint64_t v36 = swift_task_alloc();
      *(void *)(v36 + 16) = v27;
      *(void *)(v36 + 24) = v35;
      *(void *)(v0 + 208) = v27;
      ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
      swift_unknownObjectRelease();
      swift_release();
      swift_release();
      swift_task_dealloc();
      goto LABEL_19;
    }
    goto LABEL_12;
  }
  uint64_t v8 = *(void *)(v0 + 416);
  swift_getKeyPath();
  *(void *)(v0 + 520) = OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel___observationRegistrar;
  *(void *)(v0 + 232) = v8;
  sub_10000ED40(v4, v5, v6, v7);
  *(void *)(v0 + 528) = sub_1000A98F4((unint64_t *)&unk_100201540, (void (*)(uint64_t))type metadata accessor for RewritingModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v9 = OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__session;
  *(void *)(v0 + 536) = OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__session;
  if (*(void *)(v8 + v9))
  {
    swift_release();
    sub_100024DB4(v4, v5, v6, v7);
LABEL_12:
    swift_unknownObjectRelease();
    goto LABEL_19;
  }
  uint64_t v41 = *(void *)(v0 + 416);
  id v40 = [objc_allocWithZone((Class)WTSession) initWithType:2 textViewDelegate:0];
  swift_getKeyPath();
  uint64_t v20 = swift_task_alloc();
  *(void *)(v20 + 16) = v41;
  *(void *)(v20 + 24) = v40;
  *(void *)(v0 + 240) = v41;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  *(void *)(v0 + 544) = 0;
  swift_release();

  swift_task_dealloc();
  swift_getKeyPath();
  *(void *)(v0 + 248) = v41;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  id v21 = *(void **)(v8 + v9);
  if (v21) {
    [v21 setCompositionSessionType:sub_1000D543C(v4, v5, v6, v7)];
  }
  if (sub_10009B224())
  {
    uint64_t v22 = *(void *)(v0 + 416);
    swift_getKeyPath();
    *(void *)(v0 + 408) = v22;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v23 = *(void **)(v8 + v9);
    id v24 = v23;
  }
  else
  {
    uint64_t v23 = 0;
  }
  *(void *)(v0 + 552) = v23;
  *(void *)(v0 + 16) = v0;
  *(void *)(v0 + 56) = v0 + 256;
  *(void *)(v0 + 24) = sub_10009EF38;
  uint64_t v39 = swift_continuation_init();
  *(void *)(v0 + 160) = _NSConcreteStackBlock;
  *(void *)(v0 + 168) = 0x40000000;
  *(void *)(v0 + 176) = sub_10016353C;
  *(void *)(v0 + 184) = &unk_1001ECB58;
  *(void *)(v0 + 192) = v39;
  [v2 willBeginWritingToolsSession:v23 requestContexts:v0 + 160];
  return _swift_continuation_await(v0 + 16);
}

uint64_t sub_10009EF38()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 464);
  uint64_t v2 = *(void *)(*(void *)v0 + 456);
  return _swift_task_switch(sub_10009F040, v2, v1);
}

uint64_t sub_10009F040()
{
  uint64_t v1 = *(void **)(v0 + 552);
  uint64_t v2 = *(void *)(v0 + 544);
  uint64_t v3 = *(void *)(v0 + 416);
  swift_release();
  uint64_t v4 = *(void *)(v0 + 256);
  swift_getKeyPath();
  uint64_t v5 = swift_task_alloc();
  *(void *)(v5 + 16) = v3;
  *(void *)(v5 + 24) = v4;
  *(void *)(v0 + 280) = v3;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();

  swift_getKeyPath();
  *(void *)(v0 + 288) = v3;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v122 = v3;
  unint64_t v6 = *(void *)(v3 + 80);
  if (!v6)
  {
    __break(1u);
LABEL_76:
    __break(1u);
LABEL_77:
    __break(1u);
    goto LABEL_78;
  }
  if (v6 >> 62) {
    goto LABEL_62;
  }
  if (!*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_63:
    sub_100024DB4(*(void *)(v0 + 496), *(void *)(v0 + 504), *(void *)(v0 + 512), *(unsigned char *)(v0 + 562));
    if (qword_1001FAC28 != -1) {
      swift_once();
    }
    uint64_t v90 = type metadata accessor for Logger();
    sub_10000EBE8(v90, (uint64_t)qword_100212770);
    char v91 = Logger.logObject.getter();
    os_log_type_t v92 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v91, v92))
    {
      uint64_t v93 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v93 = 0;
      _os_log_impl((void *)&_mh_execute_header, v91, v92, "Error in rewriting: Unable to retrieve text from selection", v93, 2u);
      swift_slowDealloc();
    }
    uint64_t v94 = *(void *)(v0 + 416);

    sub_1000063C0(&qword_1001FD2D8);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10018A720;
    *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(inited + 40) = v96;
    *(void *)(inited + 72) = &type metadata for String;
    *(void *)(inited + 48) = 0xD000000000000026;
    *(void *)(inited + 56) = 0x800000010019EB10;
    sub_1000051F0(inited);
    id v97 = objc_allocWithZone((Class)NSError);
    NSString v98 = String._bridgeToObjectiveC()();
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v100 = [v97 initWithDomain:v98 code:1 userInfo:isa];

    sub_10002FAC0((uint64_t)v100);
    swift_getKeyPath();
    *(void *)(v0 + 384) = v94;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    if (!*(void *)(v94 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__analyticsInstance))
    {
      swift_unknownObjectRelease();
      goto LABEL_71;
    }
    uint64_t v101 = *(void *)(v0 + 416);
    swift_getKeyPath();
    *(void *)(v0 + 392) = v101;
    swift_retain();
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v102 = *(void *)(v101 + 96);
    swift_getKeyPath();
    *(void *)(v0 + 400) = v101;
    swift_errorRetain();
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    int v103 = *(unsigned __int8 *)(v101 + 72);
    if (v103 != 255)
    {
      BOOL v104 = *(void **)(v0 + 416);
      uint64_t v106 = v104[7];
      uint64_t v105 = v104[8];
      uint64_t v107 = v104[6];
      sub_10000ED40(v107, v106, v105, v103);
      sub_10000DC14(v102, v107, v106, v105, v103);
      swift_unknownObjectRelease();
      sub_100024DB4(v107, v106, v105, v103);
      swift_errorRelease();
      swift_release();
      goto LABEL_71;
    }
    goto LABEL_77;
  }
LABEL_4:
  uint64_t v7 = *(void *)(v0 + 416);
  swift_getKeyPath();
  *(void *)(v0 + 296) = v7;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  unint64_t v8 = *(void *)(v122 + 80);
  if (!v8) {
    goto LABEL_76;
  }
  if (v8 >> 62)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
  }
  int v121 = *(unsigned __int8 *)(v0 + 562);
  unint64_t v120 = v8;
  if (!v9) {
    goto LABEL_45;
  }
  uint64_t v10 = 0;
  unint64_t v119 = v8 & 0xC000000000000001;
  unsigned int v116 = enum case for TextCompositionClient.RewritingType.tables(_:);
  unsigned int v115 = enum case for TextCompositionClient.RewritingType.bullets(_:);
  unsigned int v117 = enum case for TextCompositionClient.RewritingType.takeaways(_:);
  unsigned int v114 = enum case for TextCompositionClient.RewritingType.openEnded(_:);
  unsigned int v113 = enum case for TextCompositionClient.RewritingType.professional(_:);
  unsigned int v112 = enum case for TextCompositionClient.RewritingType.friendly(_:);
  unsigned int v111 = enum case for TextCompositionClient.RewritingType.concise(_:);
  unsigned int v110 = enum case for TextCompositionClient.RewritingType.proofreading(_:);
  uint64_t v118 = *(unsigned __int8 *)(v0 + 496);
  unsigned int v109 = enum case for TextCompositionClient.RewritingType.magic(_:);
  while (1)
  {
    if (v119) {
      id v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v13 = *(id *)(v8 + 8 * v10 + 32);
    }
    uint64_t v123 = v13;
    uint64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
LABEL_62:
      swift_bridgeObjectRetain();
      uint64_t v89 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v89) {
        goto LABEL_63;
      }
      goto LABEL_4;
    }
    uint64_t v15 = *(void *)(v0 + 416);
    swift_getKeyPath();
    *(void *)(v0 + 304) = v15;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v16 = *(void *)(v122 + 80);
    if (!v16
      || (swift_bridgeObjectRetain(),
          swift_bridgeObjectRetain(),
          unsigned __int8 v17 = sub_10016BFA8(v8, v16),
          swift_bridgeObjectRelease(),
          swift_bridgeObjectRelease(),
          (v17 & 1) == 0))
    {
      uint64_t v37 = *(void *)(v0 + 504);
      uint64_t v36 = *(void *)(v0 + 512);
      uint64_t v38 = *(void *)(v0 + 496);
      char v39 = *(unsigned char *)(v0 + 562);
      swift_bridgeObjectRelease();
      sub_100024DB4(v38, v37, v36, v39);
      swift_bridgeObjectRelease();
      if (qword_1001FAC28 != -1) {
        swift_once();
      }
      uint64_t v40 = type metadata accessor for Logger();
      sub_10000EBE8(v40, (uint64_t)qword_100212770);
      uint64_t v41 = Logger.logObject.getter();
      os_log_type_t v42 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v41, v42))
      {
        long long v43 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)long long v43 = 0;
        _os_log_impl((void *)&_mh_execute_header, v41, v42, "contexts changed while getting actual context range for rewrite - stopping", v43, 2u);
        swift_slowDealloc();
        swift_unknownObjectRelease();
      }
      else
      {

        swift_unknownObjectRelease();
      }

      goto LABEL_71;
    }
    if (v121)
    {
      swift_bridgeObjectRelease();
      return _assertionFailure(_:_:file:line:flags:)();
    }
    if (v118 != 6)
    {
      switch(v118)
      {
        case 1:
          uint64_t v29 = *(void *)(v0 + 432);
          uint64_t v19 = type metadata accessor for TextCompositionClient.RewritingType();
          uint64_t v20 = *(void *)(v19 - 8);
          (*(void (**)(uint64_t, void, uint64_t))(v20 + 104))(v29, v110, v19);
          goto LABEL_20;
        case 2:
          uint64_t v30 = *(void *)(v0 + 432);
          uint64_t v19 = type metadata accessor for TextCompositionClient.RewritingType();
          uint64_t v20 = *(void *)(v19 - 8);
          (*(void (**)(uint64_t, void, uint64_t))(v20 + 104))(v30, v111, v19);
          goto LABEL_20;
        case 3:
          uint64_t v31 = *(void *)(v0 + 432);
          uint64_t v19 = type metadata accessor for TextCompositionClient.RewritingType();
          uint64_t v20 = *(void *)(v19 - 8);
          (*(void (**)(uint64_t, void, uint64_t))(v20 + 104))(v31, v112, v19);
          goto LABEL_20;
        case 4:
          uint64_t v32 = *(void *)(v0 + 432);
          uint64_t v19 = type metadata accessor for TextCompositionClient.RewritingType();
          uint64_t v20 = *(void *)(v19 - 8);
          (*(void (**)(uint64_t, void, uint64_t))(v20 + 104))(v32, v113, v19);
          goto LABEL_20;
        case 5:
          uint64_t v33 = *(void *)(v0 + 432);
          uint64_t v19 = type metadata accessor for TextCompositionClient.RewritingType();
          uint64_t v20 = *(void *)(v19 - 8);
          (*(void (**)(uint64_t, void, uint64_t))(v20 + 104))(v33, v114, v19);
          goto LABEL_20;
        case 6:
          _StringGuts.grow(_:)(22);
          swift_bridgeObjectRelease();
          return _assertionFailure(_:_:file:line:flags:)();
        case 7:
          break;
        case 8:
          uint64_t v34 = *(void *)(v0 + 432);
          uint64_t v19 = type metadata accessor for TextCompositionClient.RewritingType();
          uint64_t v20 = *(void *)(v19 - 8);
          (*(void (**)(uint64_t, void, uint64_t))(v20 + 104))(v34, v115, v19);
          goto LABEL_20;
        case 9:
          uint64_t v35 = *(void *)(v0 + 432);
          uint64_t v19 = type metadata accessor for TextCompositionClient.RewritingType();
          uint64_t v20 = *(void *)(v19 - 8);
          (*(void (**)(uint64_t, void, uint64_t))(v20 + 104))(v35, v116, v19);
          goto LABEL_20;
        default:
          uint64_t v28 = *(void *)(v0 + 432);
          uint64_t v19 = type metadata accessor for TextCompositionClient.RewritingType();
          uint64_t v20 = *(void *)(v19 - 8);
          (*(void (**)(uint64_t, void, uint64_t))(v20 + 104))(v28, v109, v19);
          goto LABEL_20;
      }
    }
    uint64_t v18 = *(void *)(v0 + 432);
    uint64_t v19 = type metadata accessor for TextCompositionClient.RewritingType();
    uint64_t v20 = *(void *)(v19 - 8);
    (*(void (**)(uint64_t, void, uint64_t))(v20 + 104))(v18, v117, v19);
LABEL_20:
    uint64_t v21 = *(void *)(v0 + 432);
    type metadata accessor for TextCompositionClient.RewritingType();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v20 + 56))(v21, 0, 1, v19);
    id v22 = [objc_allocWithZone((Class)type metadata accessor for TextCompositionClient()) init];
    id v23 = [v123 attributedText];
    [v123 range];
    uint64_t v24 = dispatch thunk of TextCompositionClient.actualRangeForRewritingOrReview(of:range:rewritingType:options:)();
    if (v2) {
      break;
    }
    NSUInteger v26 = v24;
    NSUInteger v27 = v25;

    if (sub_10009B224())
    {
      [v123 setRange:v26, v27];
    }
    else
    {
      v125.location = (NSUInteger)[v123 range];
      v126.location = v26;
      v126.length = v27;
      NSRange v11 = NSUnionRange(v125, v126);
      [v123 setRange:v11.location, v11.length];
    }
    uint64_t v12 = *(void *)(v0 + 432);

    sub_10002784C(v12, &qword_1002001E8);
    uint64_t v2 = 0;
    ++v10;
    unint64_t v8 = v120;
    if (v14 == v9)
    {
      LOBYTE(v121) = 0;
LABEL_45:
      uint64_t v51 = *(void *)(v0 + 536);
      uint64_t v53 = *(void *)(v0 + 504);
      uint64_t v52 = *(void *)(v0 + 512);
      uint64_t v54 = *(void *)(v0 + 496);
      uint64_t v55 = *(void *)(v0 + 416);
      swift_bridgeObjectRelease();
      sub_100024DB4(v54, v53, v52, v121);
      swift_getKeyPath();
      *(void *)(v0 + 336) = v55;
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      long long v56 = *(void **)(v55 + v51);
      if (v56)
      {
        uint64_t v57 = *(void *)(v0 + 416);
        swift_getKeyPath();
        *(void *)(v0 + 344) = v57;
        id v58 = v56;
        ObservationRegistrar.access<A, B>(_:keyPath:)();
        swift_release();
        uint64_t v59 = *(void *)(v122 + 80);
        if (v59)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          unsigned __int8 v60 = sub_10016BFA8(v8, v59);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v60)
          {
            if (sub_10009B224())
            {
              long long v61 = *(void **)(v0 + 472);
              sub_1000085FC(0, &qword_1001FD300);
              swift_bridgeObjectRetain();
              Class v62 = Array._bridgeToObjectiveC()().super.isa;
              swift_bridgeObjectRelease();
              [v61 didBeginWritingToolsSession:v58 contexts:v62];

              [v61 writingToolsSession:v58 didReceiveAction:3];
            }
            else
            {
              uint64_t v71 = *(void *)(v0 + 416);
              swift_getKeyPath();
              *(void *)(v0 + 352) = v71;
              ObservationRegistrar.access<A, B>(_:keyPath:)();
              swift_release();
              if (*(void *)(v71 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__analyticsInstance))
              {
                uint64_t v72 = *(void *)(v0 + 416);
                swift_getKeyPath();
                *(void *)(v0 + 360) = v72;
                swift_retain();
                ObservationRegistrar.access<A, B>(_:keyPath:)();
                swift_release();
                int v73 = *(unsigned __int8 *)(v72 + 72);
                if (v73 == 255) {
                  goto LABEL_79;
                }
                uint64_t v74 = *(void **)(v0 + 416);
                uint64_t v75 = v74[7];
                uint64_t v76 = v74[8];
                uint64_t v77 = v74[6];
                swift_getKeyPath();
                *(void *)(v0 + 368) = v74;
                sub_10000ED40(v77, v75, v76, v73);
                ObservationRegistrar.access<A, B>(_:keyPath:)();
                swift_release();
                sub_10000C6B8(v77, v75, v76, v73, v120, *((unsigned __int8 *)v74+ OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__isForEditableContent));

                uint64_t v78 = v76;
                unint64_t v8 = v120;
                sub_100024DB4(v77, v75, v78, v73);
                swift_release();
                goto LABEL_58;
              }
            }
          }
        }
      }
LABEL_58:
      uint64_t v79 = *(void *)(v0 + 416);
      uint64_t v80 = *(void *)(v0 + 424);
      char v81 = *(unsigned char *)(v0 + 561);
      char v82 = *(unsigned char *)(v0 + 560);
      uint64_t v83 = type metadata accessor for TaskPriority();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v83 - 8) + 56))(v80, 1, 1, v83);
      swift_retain();
      uint64_t v84 = static MainActor.shared.getter();
      uint64_t v85 = swift_allocObject();
      *(void *)(v85 + 16) = v84;
      *(void *)(v85 + 24) = &protocol witness table for MainActor;
      *(void *)(v85 + 32) = v8;
      *(void *)(v85 + 40) = v79;
      *(unsigned char *)(v85 + 48) = v82;
      *(unsigned char *)(v85 + 49) = v81;
      uint64_t v86 = sub_1001228D0(v80, (uint64_t)&unk_1002001F8, v85);
      swift_getKeyPath();
      uint64_t v87 = swift_task_alloc();
      *(void *)(v87 + 16) = v79;
      *(void *)(v87 + 24) = v86;
      *(void *)(v0 + 208) = v79;
      sub_1000A98F4((unint64_t *)&unk_100201540, (void (*)(uint64_t))type metadata accessor for RewritingModel);
      ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
      swift_unknownObjectRelease();
      swift_release();
      swift_release();
      swift_task_dealloc();
      goto LABEL_71;
    }
  }
  sub_100024DB4(*(void *)(v0 + 496), *(void *)(v0 + 504), *(void *)(v0 + 512), 0);

  swift_bridgeObjectRelease();
  swift_errorRetain();
  sub_10002FAC0(v2);
  swift_errorRelease();
  if (qword_1001FAC28 != -1) {
    swift_once();
  }
  uint64_t v45 = type metadata accessor for Logger();
  sub_10000EBE8(v45, (uint64_t)qword_100212770);
  swift_errorRetain();
  swift_errorRetain();
  long long v46 = Logger.logObject.getter();
  os_log_type_t v47 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v46, v47))
  {
    long long v48 = (uint8_t *)swift_slowAlloc();
    long long v49 = (void *)swift_slowAlloc();
    *(_DWORD *)long long v48 = 138412290;
    swift_errorRetain();
    uint64_t v50 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 328) = v50;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *long long v49 = v50;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v46, v47, "Error occurred when getting actual range: %@", v48, 0xCu);
    sub_1000063C0(&qword_1001FED90);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v63 = *(void *)(v0 + 416);

  swift_getKeyPath();
  *(void *)(v0 + 312) = v63;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (*(void *)(v63 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__analyticsInstance))
  {
    uint64_t v64 = *(void *)(v0 + 416);
    swift_getKeyPath();
    *(void *)(v0 + 320) = v64;
    swift_errorRetain();
    swift_retain();
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    int v65 = *(unsigned __int8 *)(v64 + 72);
    if (v65 != 255)
    {
      uint64_t v66 = *(void *)(v0 + 432);
      uint64_t v67 = *(void **)(v0 + 416);
      uint64_t v68 = v67[7];
      uint64_t v69 = v67[8];
      uint64_t v70 = v67[6];
      sub_1000272F8(v70, v68, v69, v65);
      swift_bridgeObjectRelease();
      sub_10000DC14(v2, v70, v68, v69, v65);

      sub_100024DB4(v70, v68, v69, v65);
      swift_errorRelease();
      swift_unknownObjectRelease();
      swift_release();
      swift_errorRelease();
      sub_10002784C(v66, &qword_1002001E8);
      goto LABEL_71;
    }
LABEL_78:
    __break(1u);
LABEL_79:
    swift_bridgeObjectRelease();
    __break(1u);
    JUMPOUT(0x1000A0548);
  }
  uint64_t v88 = *(void *)(v0 + 432);
  swift_unknownObjectRelease();

  swift_errorRelease();
  sub_10002784C(v88, &qword_1002001E8);
  swift_bridgeObjectRelease();
LABEL_71:
  swift_task_dealloc();
  swift_task_dealloc();
  char v108 = *(uint64_t (**)(void))(v0 + 8);
  return v108();
}

uint64_t sub_1000A0570(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, char a7)
{
  *(unsigned char *)(v7 + 193) = a7;
  *(unsigned char *)(v7 + 192) = a6;
  *(void *)(v7 + 80) = a4;
  *(void *)(v7 + 88) = a5;
  type metadata accessor for MainActor();
  *(void *)(v7 + 96) = static MainActor.shared.getter();
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v7 + 104) = v9;
  *(void *)(v7 + 112) = v8;
  return _swift_task_switch(sub_1000A0610, v9, v8);
}

uint64_t sub_1000A0610()
{
  uint64_t v2 = *(void *)(v0 + 80);
  uint64_t v1 = *(void *)(v0 + 88);
  swift_getKeyPath();
  *(void *)(v0 + 16) = v1;
  *(void *)(v0 + 120) = OBJC_IVAR____TtC21WritingToolsUIService9ToolModel___observationRegistrar;
  *(void *)(v0 + 128) = sub_1000A98F4((unint64_t *)&qword_1001FD2A0, (void (*)(uint64_t))type metadata accessor for ToolModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v3 = *(void *)(v1 + 80);
  if (v2)
  {
    if (v3)
    {
      swift_bridgeObjectRetain();
      unint64_t v4 = swift_bridgeObjectRetain();
      unsigned __int8 v5 = sub_10016BFA8(v4, v3);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v5)
      {
LABEL_4:
        uint64_t v6 = *(void *)(v0 + 88);
        swift_getKeyPath();
        uint64_t v7 = swift_task_alloc();
        *(void *)(v7 + 16) = v6;
        *(unsigned char *)(v7 + 24) = 1;
        *(void *)(v0 + 24) = v6;
        ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
        *(void *)(v0 + 136) = 0;
        swift_release();
        swift_task_dealloc();
        if (!v2)
        {
          swift_release();
LABEL_25:
          if (*(unsigned char *)(v0 + 192) != 1)
          {
            uint64_t v23 = *(void *)(v0 + 88);
            swift_getKeyPath();
            *(void *)(v0 + 32) = v23;
            sub_1000A98F4((unint64_t *)&unk_100201540, (void (*)(uint64_t))type metadata accessor for RewritingModel);
            ObservationRegistrar.access<A, B>(_:keyPath:)();
            swift_release();
            *(void *)(v0 + 40) = v23;
            swift_getKeyPath();
            ObservationRegistrar.willSet<A, B>(_:keyPath:)();
            uint64_t result = swift_release();
            uint64_t v24 = *(void *)(v23 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__undoCount);
            BOOL v25 = __CFADD__(v24, 1);
            uint64_t v26 = v24 + 1;
            if (v25)
            {
              __break(1u);
              return result;
            }
            uint64_t v27 = *(void *)(v0 + 88);
            *(void *)(v23 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__undoCount) = v26;
            *(void *)(v0 + 48) = v27;
            swift_getKeyPath();
            ObservationRegistrar.didSet<A, B>(_:keyPath:)();
            swift_release();
            swift_getKeyPath();
            uint64_t v28 = swift_task_alloc();
            *(void *)(v28 + 16) = v27;
            *(void *)(v28 + 24) = 0;
            *(void *)(v0 + 56) = v27;
            ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
            swift_release();
            swift_task_dealloc();
          }
          uint64_t v29 = *(void *)(v0 + 88);
          swift_getKeyPath();
          uint64_t v30 = swift_task_alloc();
          *(void *)(v30 + 16) = v29;
          *(unsigned char *)(v30 + 24) = 0;
          *(void *)(v0 + 64) = v29;
          ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
          swift_release();
          swift_task_dealloc();
          goto LABEL_29;
        }
        unint64_t v8 = *(void *)(v0 + 80);
        if (v8 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
          *(void *)(v0 + 144) = v22;
          if (v22) {
            goto LABEL_7;
          }
        }
        else
        {
          uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          *(void *)(v0 + 144) = v9;
          if (v9)
          {
LABEL_7:
            uint64_t v10 = *(void *)(v0 + 80);
            uint64_t v11 = OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__session;
            *(void *)(v0 + 152) = OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel___observationRegistrar;
            *(void *)(v0 + 160) = v11;
            if ((v10 & 0xC000000000000001) != 0)
            {
              id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
              uint64_t v11 = *(void *)(v0 + 160);
            }
            else
            {
              id v12 = *(id *)(v10 + 32);
            }
            *(void *)(v0 + 168) = v12;
            *(void *)(v0 + 176) = 1;
            uint64_t v17 = *(void *)(v0 + 88);
            swift_getKeyPath();
            *(void *)(v0 + 72) = v17;
            sub_1000A98F4((unint64_t *)&unk_100201540, (void (*)(uint64_t))type metadata accessor for RewritingModel);
            ObservationRegistrar.access<A, B>(_:keyPath:)();
            swift_release();
            if (*(void *)(v17 + v11))
            {
              uint64_t v18 = (void *)swift_task_alloc();
              *(void *)(v0 + 184) = v18;
              void *v18 = v0;
              v18[1] = sub_1000A0C04;
              char v19 = *(unsigned char *)(v0 + 193);
              char v20 = *(unsigned char *)(v0 + 192);
              return sub_1000A10FC((uint64_t)v12, v20, v19);
            }

            swift_release();
            goto LABEL_24;
          }
        }
        swift_release();
LABEL_24:
        swift_bridgeObjectRelease();
        goto LABEL_25;
      }
    }
  }
  else if (!v3)
  {
    goto LABEL_4;
  }
  swift_release();
  if (qword_1001FAC28 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for Logger();
  sub_10000EBE8(v13, (uint64_t)qword_100212770);
  uint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v16 = 0;
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "contexts changed while attemping to run rewrite in contexts - stopping", v16, 2u);
    swift_slowDealloc();
  }

LABEL_29:
  uint64_t v31 = *(uint64_t (**)(void))(v0 + 8);
  return v31();
}

uint64_t sub_1000A0C04()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 112);
  uint64_t v3 = *(void *)(v1 + 104);
  return _swift_task_switch(sub_1000A0D24, v3, v2);
}

id sub_1000A0D24()
{
  uint64_t v1 = *(void **)(v0 + 168);
  char v2 = static Task<>.isCancelled.getter();

  if (v2)
  {
    swift_release();
    swift_bridgeObjectRelease();
LABEL_17:
    char v20 = *(uint64_t (**)(void))(v0 + 8);
    return (id)v20();
  }
  uint64_t v3 = *(void *)(v0 + 176);
  if (v3 == *(void *)(v0 + 144)) {
    goto LABEL_13;
  }
  uint64_t v4 = *(void *)(v0 + 80);
  if ((v4 & 0xC000000000000001) != 0) {
    id result = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else {
    id result = *(id *)(v4 + 8 * v3 + 32);
  }
  uint64_t v6 = result;
  *(void *)(v0 + 168) = result;
  *(void *)(v0 + 176) = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v7 = *(void *)(v0 + 160);
  uint64_t v8 = *(void *)(v0 + 88);
  swift_getKeyPath();
  *(void *)(v0 + 72) = v8;
  sub_1000A98F4((unint64_t *)&unk_100201540, (void (*)(uint64_t))type metadata accessor for RewritingModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (!*(void *)(v8 + v7))
  {

LABEL_13:
    swift_release();
    swift_bridgeObjectRelease();
    if (*(unsigned char *)(v0 + 192) == 1)
    {
LABEL_16:
      uint64_t v18 = *(void *)(v0 + 88);
      swift_getKeyPath();
      uint64_t v19 = swift_task_alloc();
      *(void *)(v19 + 16) = v18;
      *(unsigned char *)(v19 + 24) = 0;
      *(void *)(v0 + 64) = v18;
      ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
      swift_release();
      swift_task_dealloc();
      goto LABEL_17;
    }
    uint64_t v12 = *(void *)(v0 + 88);
    swift_getKeyPath();
    *(void *)(v0 + 32) = v12;
    sub_1000A98F4((unint64_t *)&unk_100201540, (void (*)(uint64_t))type metadata accessor for RewritingModel);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    *(void *)(v0 + 40) = v12;
    swift_getKeyPath();
    ObservationRegistrar.willSet<A, B>(_:keyPath:)();
    id result = (id)swift_release();
    uint64_t v13 = *(void *)(v12 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__undoCount);
    BOOL v14 = __CFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (!v14)
    {
      uint64_t v16 = *(void *)(v0 + 88);
      *(void *)(v12 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__undoCount) = v15;
      *(void *)(v0 + 48) = v16;
      swift_getKeyPath();
      ObservationRegistrar.didSet<A, B>(_:keyPath:)();
      swift_release();
      swift_getKeyPath();
      uint64_t v17 = swift_task_alloc();
      *(void *)(v17 + 16) = v16;
      *(void *)(v17 + 24) = 0;
      *(void *)(v0 + 56) = v16;
      ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
      swift_release();
      swift_task_dealloc();
      goto LABEL_16;
    }
LABEL_21:
    __break(1u);
    return result;
  }
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v0 + 184) = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_1000A0C04;
  char v10 = *(unsigned char *)(v0 + 193);
  char v11 = *(unsigned char *)(v0 + 192);
  return (id)sub_1000A10FC((uint64_t)v6, v11, v10);
}

uint64_t sub_1000A10FC(uint64_t a1, char a2, char a3)
{
  *(void *)(v4 + 1168) = v3;
  *(unsigned char *)(v4 + 1801) = a3;
  *(unsigned char *)(v4 + 1800) = a2;
  *(void *)(v4 + 1160) = a1;
  sub_1000063C0(&qword_1001FEF90);
  *(void *)(v4 + 1176) = swift_task_alloc();
  sub_1000063C0(&qword_100200198);
  *(void *)(v4 + 1184) = swift_task_alloc();
  uint64_t v5 = sub_1000063C0(&qword_1002001A0);
  *(void *)(v4 + 1192) = v5;
  *(void *)(v4 + 1200) = *(void *)(v5 - 8);
  *(void *)(v4 + 1208) = swift_task_alloc();
  sub_1000063C0(&qword_1002001A8);
  *(void *)(v4 + 1216) = swift_task_alloc();
  uint64_t v6 = type metadata accessor for UUID();
  *(void *)(v4 + 1224) = v6;
  *(void *)(v4 + 1232) = *(void *)(v6 - 8);
  *(void *)(v4 + 1240) = swift_task_alloc();
  *(void *)(v4 + 1248) = swift_task_alloc();
  sub_1000063C0(&qword_1002001B0);
  *(void *)(v4 + 1256) = swift_task_alloc();
  uint64_t v7 = type metadata accessor for SummarizationClient.TextAssistantSummarizationOptions.Source();
  *(void *)(v4 + 1264) = v7;
  *(void *)(v4 + 1272) = *(void *)(v7 - 8);
  *(void *)(v4 + 1280) = swift_task_alloc();
  uint64_t v8 = type metadata accessor for SummarizationClient.TextAssistantSummarizationOptions();
  *(void *)(v4 + 1288) = v8;
  *(void *)(v4 + 1296) = *(void *)(v8 - 8);
  *(void *)(v4 + 1304) = swift_task_alloc();
  uint64_t v9 = sub_1000063C0(&qword_1002001B8);
  *(void *)(v4 + 1312) = v9;
  *(void *)(v4 + 1320) = *(void *)(v9 - 8);
  *(void *)(v4 + 1328) = swift_task_alloc();
  uint64_t v10 = sub_1000063C0(&qword_1002001C0);
  *(void *)(v4 + 1336) = v10;
  *(void *)(v4 + 1344) = *(void *)(v10 - 8);
  *(void *)(v4 + 1352) = swift_task_alloc();
  uint64_t v11 = type metadata accessor for LocalizedStringResource();
  *(void *)(v4 + 1360) = v11;
  *(void *)(v4 + 1368) = *(void *)(v11 - 8);
  *(void *)(v4 + 1376) = swift_task_alloc();
  uint64_t v12 = sub_1000063C0(&qword_1002001C8);
  *(void *)(v4 + 1384) = v12;
  *(void *)(v4 + 1392) = *(void *)(v12 - 8);
  *(void *)(v4 + 1400) = swift_task_alloc();
  uint64_t v13 = type metadata accessor for TextCompositionClient.RewritingType();
  *(void *)(v4 + 1408) = v13;
  *(void *)(v4 + 1416) = *(void *)(v13 - 8);
  *(void *)(v4 + 1424) = swift_task_alloc();
  uint64_t v14 = sub_1000063C0(&qword_1001FBCD8);
  *(void *)(v4 + 1432) = v14;
  *(void *)(v4 + 1440) = *(void *)(v14 - 8);
  *(void *)(v4 + 1448) = swift_task_alloc();
  uint64_t v15 = sub_1000063C0(&qword_1002001D0);
  *(void *)(v4 + 1456) = v15;
  *(void *)(v4 + 1464) = *(void *)(v15 - 8);
  *(void *)(v4 + 1472) = swift_task_alloc();
  uint64_t v16 = sub_1000063C0(&qword_1002001D8);
  *(void *)(v4 + 1480) = v16;
  *(void *)(v4 + 1488) = *(void *)(v16 - 8);
  *(void *)(v4 + 1496) = swift_task_alloc();
  *(void *)(v4 + 1504) = swift_task_alloc();
  *(void *)(v4 + 1512) = type metadata accessor for MainActor();
  *(void *)(v4 + 1520) = static MainActor.shared.getter();
  uint64_t v18 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v4 + 1528) = v18;
  *(void *)(v4 + 1536) = v17;
  return _swift_task_switch(sub_1000A16F4, v18, v17);
}

uint64_t sub_1000A16F4()
{
  uint64_t v1 = *(void *)(v0 + 1168);
  swift_getKeyPath();
  *(void *)(v0 + 1544) = OBJC_IVAR____TtC21WritingToolsUIService9ToolModel___observationRegistrar;
  *(void *)(v0 + 784) = v1;
  *(void *)(v0 + 1552) = sub_1000A98F4((unint64_t *)&qword_1001FD2A0, (void (*)(uint64_t))type metadata accessor for ToolModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (*(unsigned __int8 *)(v1 + 72) > 1u || *(unsigned char *)(v1 + 72))
  {
    _StringGuts.grow(_:)(22);
    swift_bridgeObjectRelease();
    return _assertionFailure(_:_:file:line:flags:)();
  }
  uint64_t v177 = (_OWORD *)(v0 + 352);
  uint64_t v172 = (_OWORD *)(v0 + 416);
  uint64_t v2 = *(void *)(v1 + 48);
  uint64_t v3 = *(void *)(v1 + 56);
  uint64_t v189 = *(void *)(v1 + 64);
  if (((1 << v2) & 0x33F) == 0)
  {
    if (*(void *)(v1 + 48) == 6)
    {
      uint64_t v55 = *(void *)(v0 + 1168);
      long long v56 = *(void **)(v0 + 1160);
      id v57 = [v56 attributedText:v0 + 944, v0 + 256, v0 + 936, v0 + 288, v0 + 192, v0 + 928];
      id v58 = [v56 range];
      id v60 = [v57 attributedSubstringFromRange:v58, v59];

      id v61 = [v60 string];
      uint64_t v62 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v64 = v63;

      swift_getKeyPath();
      int v65 = (void *)swift_task_alloc();
      v65[2] = v55;
      v65[3] = v62;
      v65[4] = v64;
      *(void *)(v0 + 1752) = OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel___observationRegistrar;
      *(void *)(v0 + 1144) = v55;
      *(void *)(v0 + 1760) = sub_1000A98F4((unint64_t *)&unk_100201540, (void (*)(uint64_t))type metadata accessor for RewritingModel);
      swift_bridgeObjectRetain();
      ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
      swift_release();
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      *(void *)(v0 + 504) = 0;
      *(void *)(v0 + 512) = 0xE000000000000000;
      swift_getKeyPath();
      *(void *)(v0 + 1136) = v55;
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      uint64_t v66 = OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__analyticsInstance;
      *(void *)(v0 + 1768) = OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__analyticsInstance;
      if (*(void *)(v55 + v66))
      {
        uint64_t v67 = *(void *)(v0 + 1168);
        swift_getKeyPath();
        *(void *)(v0 + 1128) = v67;
        swift_retain();
        ObservationRegistrar.access<A, B>(_:keyPath:)();
        id v11 = (id)swift_release();
        int v68 = *(unsigned __int8 *)(v1 + 72);
        if (v68 == 255)
        {
LABEL_89:
          __break(1u);
          goto LABEL_90;
        }
        uint64_t v69 = *(void *)(v1 + 56);
        uint64_t v70 = *(void *)(v1 + 64);
        uint64_t v71 = *(void *)(v1 + 48);
        sub_10000ED40(v71, v69, v70, *(unsigned char *)(v1 + 72));
        sub_10000BFB0(v71, v69, v70, v68, 0, 0, 0, 0, 2);
        sub_100024DB4(v71, v69, v70, v68);
        swift_release();
      }
      uint64_t v72 = *(void *)(v0 + 1280);
      uint64_t v73 = *(void *)(v0 + 1272);
      uint64_t v74 = *(void *)(v0 + 1264);
      uint64_t v75 = *(void *)(v0 + 1168);
      type metadata accessor for SummarizationClient();
      swift_allocObject();
      SummarizationClient.init()();
      (*(void (**)(uint64_t, void, uint64_t))(v73 + 104))(v72, enum case for SummarizationClient.TextAssistantSummarizationOptions.Source.textAssistant(_:), v74);
      swift_getKeyPath();
      *(void *)(v0 + 1120) = v75;
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      id v11 = *(id *)(v75 + 24);
      if (!v11) {
        goto LABEL_87;
      }
      [v11 pid];
      ClientProcessInfo.init(processIdentifier:)();
      uint64_t v76 = *(void *)(v0 + 1256);
      uint64_t v148 = type metadata accessor for ClientProcessInfo();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v148 - 8) + 56))(v76, 0, 1, v148);
      uint64_t v149 = *(void *)(v0 + 1328);
      uint64_t v150 = *(void *)(v0 + 1320);
      uint64_t v186 = *(void *)(v0 + 1312);
      uint64_t v151 = *(void *)(v0 + 1304);
      uint64_t v152 = *(void *)(v0 + 1296);
      uint64_t v183 = *(void *)(v0 + 1288);
      uint64_t v153 = *(void *)(v0 + 1248);
      uint64_t v154 = *(void *)(v0 + 1232);
      uint64_t v155 = *(void *)(v0 + 1224);
      SummarizationClient.TextAssistantSummarizationOptions.init(source:originatingProcess:)();
      UUID.init()();
      UUID.uuidString.getter();
      (*(void (**)(uint64_t, uint64_t))(v154 + 8))(v153, v155);
      SummarizationClient.partialSummaries(for:options:requestIdentifier:)();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v152 + 8))(v151, v183);
      AsyncThrowingStream.makeAsyncIterator()();
      (*(void (**)(uint64_t, uint64_t))(v150 + 8))(v149, v186);
      uint64_t v156 = static MainActor.shared.getter();
      *(void *)(v0 + 1776) = v156;
      Swift::Int v157 = (void *)swift_task_alloc();
      *(void *)(v0 + 1784) = v157;
      *Swift::Int v157 = v0;
      v157[1] = sub_1000A5834;
      uint64_t v9 = *(void *)(v0 + 1336);
      id v11 = *(id *)(v0 + 1216);
      uint64_t v8 = &protocol witness table for MainActor;
      uint64_t v7 = v156;
      uint64_t v10 = v0 + 1112;
LABEL_57:
      return __sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v11, v7, v8, v9, v10);
    }
    uint64_t v121 = *(void *)(v0 + 1168);
    sub_1000063C0(&qword_1001FD2D8);
    uint64_t v122 = swift_allocObject();
    *(_OWORD *)(v122 + 16) = xmmword_10018A720;
    *(void *)(v122 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(v122 + 40) = v123;
    swift_getKeyPath();
    *(void *)(v0 + 704) = v121;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    id v11 = *(id *)(v121 + 24);
    if (!v11)
    {
LABEL_88:
      __break(1u);
      goto LABEL_89;
    }
    uint64_t v124 = *(void *)(v0 + 1168);
    unsigned int v125 = [v11 pid];
    *(void *)(v122 + 72) = &type metadata for Int32;
    *(_DWORD *)(v122 + 48) = v125;
    unint64_t v195 = sub_1000051F0(v122);
    swift_getKeyPath();
    *(void *)(v0 + 1696) = OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel___observationRegistrar;
    *(void *)(v0 + 712) = v124;
    *(void *)(v0 + 1704) = sub_1000A98F4((unint64_t *)&unk_100201540, (void (*)(uint64_t))type metadata accessor for RewritingModel);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    int v126 = *(unsigned __int8 *)(v124
                              + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__includeListMarkersInInlineResults);
    if (v126 != 2 && (sub_10009B224() & 1) != 0)
    {
      uint64_t v127 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v129 = v128;
      *(void *)(v0 + 472) = &type metadata for Bool;
      *(unsigned char *)(v0 + 448) = (v126 & 1) == 0;
      sub_100007CC0((_OWORD *)(v0 + 448), v172);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      sub_10016F078(v172, v127, v129, isUniquelyReferenced_nonNull_native);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    *(void *)(v0 + 1712) = v195;
    uint64_t v131 = *(void *)(v0 + 1168);
    int v132 = *(void **)(v0 + 1160);
    swift_getKeyPath();
    *(void *)(v0 + 720) = v131;
    id v133 = v132;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v134 = OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__analyticsInstance;
    *(void *)(v0 + 1720) = OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__analyticsInstance;
    if (*(void *)(v131 + v134))
    {
      uint64_t v135 = *(void *)(v0 + 1168);
      swift_getKeyPath();
      *(void *)(v0 + 728) = v135;
      swift_retain();
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      id v11 = (id)swift_release();
      int v136 = *(unsigned __int8 *)(v1 + 72);
      if (v136 == 255)
      {
LABEL_90:
        __break(1u);
        return __sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v11, v7, v8, v9, v10);
      }
      uint64_t v138 = *(void *)(v1 + 56);
      uint64_t v137 = *(void *)(v1 + 64);
      uint64_t v139 = *(void *)(v1 + 48);
      sub_10000ED40(v139, v138, v137, *(unsigned char *)(v1 + 72));
      sub_10000BFB0(v139, v138, v137, v136, 0, 0, 0, 0, 2);
      sub_100024DB4(v139, v138, v137, v136);
      swift_release();
    }
    uint64_t v190 = (void *)(v0 + 88);
    uint64_t v192 = v0 + 744;
    uint64_t v188 = *(void *)(v0 + 1464);
    uint64_t v140 = *(void *)(v0 + 1448);
    uint64_t v178 = *(void *)(v0 + 1472);
    uint64_t v180 = *(void *)(v0 + 1440);
    uint64_t v182 = *(void *)(v0 + 1432);
    uint64_t v185 = *(void *)(v0 + 1456);
    uint64_t v141 = *(void *)(v0 + 1424);
    uint64_t v142 = *(void *)(v0 + 1416);
    uint64_t v171 = *(void *)(v0 + 1408);
    uint64_t v173 = *(void *)(v0 + 1392);
    uint64_t v174 = *(void *)(v0 + 1400);
    uint64_t v176 = *(void *)(v0 + 1384);
    char v143 = *(void **)(v0 + 1160);
    id v144 = [objc_allocWithZone((Class)type metadata accessor for TextCompositionClient()) init];
    id v145 = [v143 attributedText];
    [v143 range];
    sub_1000D5490(7, v141);
    swift_bridgeObjectRetain();
    dispatch thunk of TextCompositionClient.streamForRewriting(of:range:rewritingType:options:)();

    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v142 + 8))(v141, v171);
    uint64_t v146 = swift_task_alloc();
    *(void *)(v146 + 16) = v143;
    *(void *)(v146 + 24) = v140;
    sub_1000063C0(&qword_1002001E0);
    (*(void (**)(uint64_t, void, uint64_t))(v173 + 104))(v174, enum case for AsyncThrowingStream.Continuation.BufferingPolicy.unbounded<A, B>(_:), v176);
    AsyncThrowingStream.init<>(_:bufferingPolicy:_:)();
    swift_task_dealloc();
    (*(void (**)(uint64_t, uint64_t))(v180 + 8))(v140, v182);
    AsyncThrowingStream.makeAsyncIterator()();
    (*(void (**)(uint64_t, uint64_t))(v188 + 8))(v178, v185);
    uint64_t v111 = static MainActor.shared.getter();
    *(void *)(v0 + 1728) = v111;
    uint64_t v147 = (void *)swift_task_alloc();
    *(void *)(v0 + 1736) = v147;
    *uint64_t v147 = v0;
    v147[1] = sub_1000A4920;
LABEL_56:
    uint64_t v9 = *(void *)(v0 + 1480);
    uint64_t v8 = &protocol witness table for MainActor;
    id v11 = v190;
    uint64_t v10 = v192;
    uint64_t v7 = v111;
    goto LABEL_57;
  }
  unint64_t v168 = (_OWORD *)(v0 + 160);
  uint64_t v167 = (_OWORD *)(v0 + 192);
  uint64_t v166 = (_OWORD *)(v0 + 256);
  uint64_t v4 = *(void *)(v0 + 1168);
  sub_1000063C0(&qword_1001FD2D8);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_10018A720;
  *(void *)(v5 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v5 + 40) = v6;
  swift_getKeyPath();
  *(void *)(v0 + 896) = v4;
  uint64_t v194 = v2;
  sub_10000ED40(v2, v3, v189, 0);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  id v11 = *(id *)(v4 + 24);
  if (!v11)
  {
    __break(1u);
    goto LABEL_84;
  }
  uint64_t v12 = *(void *)(v0 + 1168);
  unsigned int v13 = [v11 pid];
  *(void *)(v5 + 72) = &type metadata for Int32;
  *(_DWORD *)(v5 + 48) = v13;
  unint64_t v14 = sub_1000051F0(v5);
  uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v17 = v16;
  swift_getKeyPath();
  *(void *)(v0 + 1560) = OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel___observationRegistrar;
  *(void *)(v0 + 912) = v12;
  *(void *)(v0 + 1568) = sub_1000A98F4((unint64_t *)&unk_100201540, (void (*)(uint64_t))type metadata accessor for RewritingModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v18 = *(void *)(v12 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__allowedResultOptions);
  uint64_t v19 = 3;
  if ((v18 & 0xC) != 0) {
    uint64_t v20 = 3;
  }
  else {
    uint64_t v20 = 1;
  }
  uint64_t v21 = v20 | v18;
  if (v18) {
    uint64_t v19 = v21;
  }
  *(void *)(v0 + 408) = &type metadata for UInt;
  *(void *)(v0 + 384) = v19;
  sub_100007CC0((_OWORD *)(v0 + 384), v177);
  char v22 = swift_isUniquelyReferenced_nonNull_native();
  sub_10016F078(v177, v15, v17, v22);
  unint64_t v23 = v14;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v189)
  {
    uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v26 = v25;
    *(void *)(v0 + 344) = &type metadata for String;
    *(void *)(v0 + 320) = v3;
    *(void *)(v0 + 328) = v189;
    sub_100007CC0((_OWORD *)(v0 + 320), v168);
    unsigned __int8 v27 = v194;
    sub_10000ED40(v194, v3, v189, 0);
    char v28 = swift_isUniquelyReferenced_nonNull_native();
    sub_10016F078(v168, v24, v26, v28);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    unsigned __int8 v27 = v194;
  }
  if v27 - 2 >= 4 && v27 || (*(unsigned char *)(v0 + 1800))
  {
    unint64_t v30 = v23;
  }
  else
  {
    uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v33 = v32;
    *(void *)(v0 + 248) = &type metadata for Int;
    *(void *)(v0 + 224) = sub_1000A9988(0x7FFFFFFFFFFFFFFFuLL);
    sub_100007CC0((_OWORD *)(v0 + 224), v167);
    char v34 = swift_isUniquelyReferenced_nonNull_native();
    sub_10016F078(v167, v31, v33, v34);
    unint64_t v30 = v23;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v35 = *(void *)(v0 + 1168);
  swift_getKeyPath();
  *(void *)(v0 + 928) = v35;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  int v36 = *(unsigned __int8 *)(v35
                           + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__includeListMarkersInInlineResults);
  if (v36 != 2 && (sub_10009B224() & 1) != 0)
  {
    uint64_t v37 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v39 = v38;
    *(void *)(v0 + 312) = &type metadata for Bool;
    *(unsigned char *)(v0 + 288) = (v36 & 1) == 0;
    sub_100007CC0((_OWORD *)(v0 + 288), v166);
    char v40 = swift_isUniquelyReferenced_nonNull_native();
    sub_10016F078(v166, v37, v39, v40);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  *(void *)(v0 + 1576) = v30;
  uint64_t v41 = *(void *)(v0 + 1168);
  os_log_type_t v42 = *(void **)(v0 + 1160);
  swift_getKeyPath();
  *(void *)(v0 + 936) = v41;
  id v43 = v42;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v44 = OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__analyticsInstance;
  *(void *)(v0 + 1584) = OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__analyticsInstance;
  if (*(void *)(v41 + v44))
  {
    uint64_t v45 = *(void *)(v0 + 1168);
    swift_getKeyPath();
    *(void *)(v0 + 944) = v45;
    swift_retain();
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    id v11 = (id)swift_release();
    int v46 = *(unsigned __int8 *)(v1 + 72);
    if (v46 != 255)
    {
      uint64_t v48 = *(void *)(v1 + 56);
      uint64_t v47 = *(void *)(v1 + 64);
      uint64_t v49 = *(void *)(v1 + 48);
      sub_10000ED40(v49, v48, v47, *(unsigned char *)(v1 + 72));
      sub_10000BFB0(v49, v48, v47, v46, v3, v189, 0, 0, 2);
      sub_100024DB4(v194, v3, v189, 0);
      sub_100024DB4(v49, v48, v47, v46);
      swift_release();
      goto LABEL_26;
    }
LABEL_84:
    __break(1u);
LABEL_85:
    __break(1u);
LABEL_86:
    __break(1u);
LABEL_87:
    __break(1u);
    goto LABEL_88;
  }
  sub_100024DB4(v194, v3, v189, 0);
LABEL_26:
  if (*(unsigned char *)(v0 + 1801) != 1)
  {
    uint64_t v54 = *(void **)(v0 + 1160);
    id v53 = [v54 attributedText];
    [v54 range];
LABEL_55:
    *(void *)(v0 + 1592) = v53;
    uint64_t v190 = (void *)(v0 + 16);
    uint64_t v192 = v0 + 960;
    uint64_t v103 = *(void *)(v0 + 1472);
    uint64_t v187 = *(void *)(v0 + 1464);
    uint64_t v104 = *(void *)(v0 + 1448);
    uint64_t v105 = *(void *)(v0 + 1440);
    uint64_t v181 = *(void *)(v0 + 1432);
    uint64_t v184 = *(void *)(v0 + 1456);
    uint64_t v106 = *(void *)(v0 + 1424);
    uint64_t v107 = *(void *)(v0 + 1416);
    uint64_t v169 = *(void *)(v0 + 1408);
    uint64_t v175 = *(void *)(v0 + 1400);
    uint64_t v108 = *(void *)(v0 + 1392);
    uint64_t v179 = *(void *)(v0 + 1384);
    uint64_t v170 = *(void *)(v0 + 1160);
    id v109 = [objc_allocWithZone((Class)type metadata accessor for TextCompositionClient()) init];
    sub_1000D5490(v194, v106);
    swift_bridgeObjectRetain();
    dispatch thunk of TextCompositionClient.streamForRewriting(of:range:rewritingType:options:)();

    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v107 + 8))(v106, v169);
    uint64_t v110 = swift_task_alloc();
    *(void *)(v110 + 16) = v170;
    *(void *)(v110 + 24) = v104;
    sub_1000063C0(&qword_1002001E0);
    (*(void (**)(uint64_t, void, uint64_t))(v108 + 104))(v175, enum case for AsyncThrowingStream.Continuation.BufferingPolicy.unbounded<A, B>(_:), v179);
    AsyncThrowingStream.init<>(_:bufferingPolicy:_:)();
    swift_task_dealloc();
    (*(void (**)(uint64_t, uint64_t))(v105 + 8))(v104, v181);
    AsyncThrowingStream.makeAsyncIterator()();
    (*(void (**)(uint64_t, uint64_t))(v187 + 8))(v103, v184);
    uint64_t v111 = static MainActor.shared.getter();
    *(void *)(v0 + 1600) = v111;
    unsigned int v112 = (void *)swift_task_alloc();
    *(void *)(v0 + 1608) = v112;
    *unsigned int v112 = v0;
    v112[1] = sub_1000A34F4;
    goto LABEL_56;
  }
  uint64_t v50 = *(void *)(v0 + 1168);
  swift_getKeyPath();
  *(void *)(v0 + 1096) = v50;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v51 = *(void **)(v50 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__resultAttributedString);
  if (!v51) {
    goto LABEL_37;
  }
  uint64_t v52 = *(void *)(v0 + 1168);
  swift_getKeyPath();
  *(void *)(v0 + 1104) = v52;
  id v53 = v51;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if ((*(unsigned char *)(v52 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__resultAttributedStringRange + 16) & 1) == 0) {
    goto LABEL_55;
  }

LABEL_37:
  swift_bridgeObjectRelease();
  swift_release();
  if (qword_1001FAC28 != -1) {
    swift_once();
  }
  uint64_t v77 = type metadata accessor for Logger();
  sub_10000EBE8(v77, (uint64_t)qword_100212770);
  uint64_t v78 = Logger.logObject.getter();
  os_log_type_t v79 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v78, v79))
  {
    uint64_t v80 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v80 = 0;
    _os_log_impl((void *)&_mh_execute_header, v78, v79, "Error in follow-up rewriting: Asked to use rewritten text, but either text or range is not specified", v80, 2u);
    swift_slowDealloc();
  }
  char v81 = *(void **)(v0 + 1160);

  uint64_t v82 = swift_allocObject();
  *(_OWORD *)(v82 + 16) = xmmword_10018A720;
  *(void *)(v82 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v82 + 40) = v83;
  *(void *)(v82 + 72) = &type metadata for String;
  *(void *)(v82 + 48) = 0xD00000000000002BLL;
  *(void *)(v82 + 56) = 0x800000010019EA80;
  sub_1000051F0(v82);
  id v84 = objc_allocWithZone((Class)NSError);
  NSString v85 = String._bridgeToObjectiveC()();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v87 = [v84 initWithDomain:v85 code:1 userInfo:isa];

  swift_willThrow();
  uint64_t v88 = (void *)_convertErrorToNSError(_:)();
  id v11 = [self sharedConnection];
  if (!v11) {
    goto LABEL_85;
  }
  uint64_t v89 = v11;
  unsigned int v90 = [v11 isExternalIntelligenceAllowed];

  if (!v90 || (sub_100113FD8() & 1) == 0) {
    goto LABEL_51;
  }
  if (qword_1001FAD70 != -1) {
    swift_once();
  }
  uint64_t v91 = qword_100212A28;
  swift_bridgeObjectRetain();
  char v92 = sub_1001157A4((uint64_t)[v88 code], v91);
  swift_bridgeObjectRelease();
  if (v92)
  {
    if (qword_1001FAC28 != -1) {
      swift_once();
    }
    sub_10000EBE8(v77, (uint64_t)qword_100212770);
    uint64_t v93 = v88;
    uint64_t v94 = Logger.logObject.getter();
    os_log_type_t v95 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v94, v95))
    {
      uint64_t v96 = (uint8_t *)swift_slowAlloc();
      char v191 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v96 = 138412290;
      *(void *)(v0 + 648) = v93;
      id v97 = v93;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *char v191 = v93;

      _os_log_impl((void *)&_mh_execute_header, v94, v95, "Error occurred in rewriting: %@, but hand off to Montara", v96, 0xCu);
      sub_1000063C0(&qword_1001FED90);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      uint64_t v94 = v93;
    }
    uint64_t v158 = *(void *)(v0 + 1168);

    swift_getKeyPath();
    *(void *)(v0 + 888) = v158;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    if (*(unsigned char *)(v158 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__state))
    {
      uint64_t v159 = v93;
      Swift::Int v160 = Logger.logObject.getter();
      os_log_type_t v161 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v160, v161))
      {
        Swift::Int v162 = (uint8_t *)swift_slowAlloc();
        char v193 = (void *)swift_slowAlloc();
        uint64_t v196 = v162;
        *(_DWORD *)Swift::Int v162 = 138412290;
        *(void *)(v0 + 880) = v159;
        uint64_t v163 = v159;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *char v193 = v159;

        _os_log_impl((void *)&_mh_execute_header, v160, v161, "%@ occurred while in hand off, this is not expected", v196, 0xCu);
        sub_1000063C0(&qword_1001FED90);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
    }
    else
    {
      uint64_t v164 = *(void *)(v0 + 1168);
      swift_getKeyPath();
      uint64_t v165 = swift_task_alloc();
      *(void *)(v165 + 16) = v164;
      *(unsigned char *)(v165 + 24) = 1;
      *(void *)(v0 + 736) = v164;
      ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();

      swift_release();
      swift_task_dealloc();
    }
  }
  else
  {
LABEL_51:

    swift_errorRetain();
    sub_10002FAC0((uint64_t)v87);
    swift_errorRelease();
    if (qword_1001FAC28 != -1) {
      swift_once();
    }
    sub_10000EBE8(v77, (uint64_t)qword_100212770);
    swift_errorRetain();
    swift_errorRetain();
    NSString v98 = Logger.logObject.getter();
    os_log_type_t v99 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v98, v99))
    {
      id v100 = (uint8_t *)swift_slowAlloc();
      uint64_t v101 = (void *)swift_slowAlloc();
      *(_DWORD *)id v100 = 138412290;
      swift_errorRetain();
      uint64_t v102 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 904) = v102;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v101 = v102;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v98, v99, "Error occurred in rewriting: %@", v100, 0xCu);
      sub_1000063C0(&qword_1001FED90);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }
  }
  uint64_t v113 = *(void *)(v0 + 1168);
  swift_getKeyPath();
  *(void *)(v0 + 952) = v113;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (!*(void *)(v113 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__analyticsInstance))
  {
    swift_errorRelease();
    goto LABEL_66;
  }
  uint64_t v114 = *(void *)(v0 + 1168);
  swift_getKeyPath();
  *(void *)(v0 + 920) = v114;
  swift_errorRetain();
  swift_retain();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  id v11 = (id)swift_release();
  int v115 = *(unsigned __int8 *)(v114 + 72);
  if (v115 == 255) {
    goto LABEL_86;
  }
  unsigned int v116 = *(void **)(v0 + 1168);
  uint64_t v118 = v116[7];
  uint64_t v117 = v116[8];
  uint64_t v119 = v116[6];
  sub_10000ED40(v119, v118, v117, v115);
  sub_10000DC14((uint64_t)v87, v119, v118, v117, v115);
  swift_errorRelease();
  sub_100024DB4(v119, v118, v117, v115);
  swift_errorRelease();
  swift_release();
LABEL_66:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v120 = *(uint64_t (**)(void))(v0 + 8);
  return v120();
}

uint64_t sub_1000A34F4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 1616) = v0;
  swift_task_dealloc();
  swift_release();
  if (v0)
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = *(void *)(v2 + 1536);
    uint64_t v4 = *(void *)(v2 + 1528);
    uint64_t v5 = sub_1000A79BC;
  }
  else
  {
    uint64_t v3 = *(void *)(v2 + 1536);
    uint64_t v4 = *(void *)(v2 + 1528);
    uint64_t v5 = sub_1000A362C;
  }
  return _swift_task_switch(v5, v4, v3);
}

void *sub_1000A362C()
{
  uint64_t v1 = *(void **)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  *(void *)(v0 + 1624) = v1;
  uint64_t v4 = *(void *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 40);
  *(void *)(v0 + 1632) = *(void *)(v0 + 48);
  *(_OWORD *)(v0 + 1640) = *(_OWORD *)(v0 + 56);
  *(void *)(v0 + 1656) = *(void *)(v0 + 72);
  if (!v1)
  {
    uint64_t v12 = *(void *)(v0 + 1168);
    (*(void (**)(void, void))(*(void *)(v0 + 1488) + 8))(*(void *)(v0 + 1504), *(void *)(v0 + 1480));
    swift_getKeyPath();
    *(void *)(v0 + 968) = v12;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v63 = OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__resultAttributedString;
    uint64_t v65 = v12;
    unsigned int v13 = *(void **)(v12 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__resultAttributedString);
    if (v13)
    {
      id v14 = *(id *)(v12 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__resultAttributedString);
    }
    else
    {
      uint64_t v24 = *(void **)(v0 + 1160);
      id v25 = [v24 attributedText];
      id v26 = [v24 range];
      id v14 = [v25 attributedSubstringFromRange:v26, v27];

      unsigned int v13 = 0;
    }
    uint64_t v28 = *(void *)(v0 + 1616);
    uint64_t v29 = *(void *)(v0 + 1168);
    swift_getKeyPath();
    uint64_t v30 = swift_task_alloc();
    *(void *)(v30 + 16) = v29;
    *(void *)(v30 + 24) = v14;
    *(void *)(v0 + 976) = v29;
    id v31 = v13;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();

    swift_task_dealloc();
    swift_getKeyPath();
    *(void *)(v0 + 984) = v29;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    id result = *(void **)(v12 + v63);
    if (result)
    {
      uint64_t v62 = *(void *)(v0 + 1584);
      uint64_t v32 = *(void *)(v0 + 1168);
      id v33 = [result string];
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v34 = _NSRange.init(_:)();
      uint64_t v36 = v35;
      char v38 = v37;
      swift_bridgeObjectRelease();
      swift_getKeyPath();
      uint64_t v39 = swift_task_alloc();
      *(void *)(v39 + 16) = v32;
      *(void *)(v39 + 24) = v34;
      *(void *)(v39 + 32) = v36;
      *(unsigned char *)(v39 + 40) = v38 & 1;
      *(void *)(v0 + 992) = v32;
      ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
      *(void *)(v0 + 1672) = v28;
      swift_release();
      swift_task_dealloc();
      swift_getKeyPath();
      *(void *)(v0 + 1000) = v32;
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      if (*(void *)(v32 + v62))
      {
        uint64_t v40 = *(void *)(v0 + 1168);
        swift_getKeyPath();
        *(void *)(v0 + 1008) = v40;
        swift_retain();
        ObservationRegistrar.access<A, B>(_:keyPath:)();
        swift_release();
        unint64_t v41 = *(void *)(v40 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__modelInfoString + 8);
        uint64_t v60 = *(void *)(v40 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__modelInfoString);
        swift_getKeyPath();
        *(void *)(v0 + 1016) = v40;
        unint64_t v61 = v41;
        swift_bridgeObjectRetain();
        ObservationRegistrar.access<A, B>(_:keyPath:)();
        id result = (void *)swift_release();
        int v42 = *(unsigned __int8 *)(v40 + 72);
        if (v42 == 255)
        {
LABEL_22:
          __break(1u);
          goto LABEL_23;
        }
        uint64_t v44 = *(void *)(v40 + 48);
        uint64_t v43 = *(void *)(v40 + 56);
        uint64_t v45 = *(void *)(v40 + 64);
        uint64_t v46 = *(void *)(v0 + 1168);
        swift_getKeyPath();
        *(void *)(v0 + 1024) = v46;
        sub_10000ED40(v44, v43, v45, v42);
        ObservationRegistrar.access<A, B>(_:keyPath:)();
        swift_release();
        uint64_t v47 = *(void **)(v46 + 112);
        swift_getKeyPath();
        *(void *)(v0 + 1032) = v46;
        ObservationRegistrar.access<A, B>(_:keyPath:)();
        swift_release();
        id result = *(void **)(v65 + v63);
        if (!result)
        {
LABEL_23:
          __break(1u);
          return result;
        }
        id v48 = [result string];
        uint64_t v49 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v51 = v50;

        sub_10000D44C(v60, v61, v44, v43, v45, v42, v47, v49, v51);
        swift_bridgeObjectRelease();
        sub_100024DB4(v44, v43, v45, v42);
        swift_release();
        swift_bridgeObjectRelease();
      }
      uint64_t v52 = *(void *)(v0 + 1168);
      swift_getKeyPath();
      *(void *)(v0 + 1040) = v52;
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      id result = (void *)swift_release();
      id v53 = *(void **)(v65 + v63);
      *(void *)(v0 + 1680) = v53;
      if (v53)
      {
        uint64_t v54 = *(void **)(v0 + 1160);
        id v55 = v53;
        swift_bridgeObjectRelease();
        id v56 = [v54 range];
        uint64_t v58 = v57;
        uint64_t v59 = (void *)swift_task_alloc();
        *(void *)(v0 + 1688) = v59;
        *uint64_t v59 = v0;
        v59[1] = sub_1000A42C4;
        uint64_t v19 = *(void *)(v0 + 1160);
        uint64_t v20 = (uint64_t)v55;
        uint64_t v21 = (uint64_t)v56;
        uint64_t v22 = v58;
        char v23 = 1;
        goto LABEL_17;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_22;
  }
  swift_bridgeObjectRelease();
  if (static Task<>.isCancelled.getter())
  {
    uint64_t v5 = *(void **)(v0 + 1592);
    uint64_t v6 = *(void *)(v0 + 1504);
    uint64_t v7 = *(void *)(v0 + 1488);
    uint64_t v8 = *(void *)(v0 + 1480);
    uint64_t v9 = *(void **)(v0 + 1160);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
    return (void *)v10();
  }
  uint64_t v15 = *(void *)(v0 + 1168);
  swift_getKeyPath();
  uint64_t v64 = v2;
  *(void *)(v0 + 1048) = v15;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  *(void *)(v0 + 1056) = v15;
  swift_getKeyPath();
  ObservationRegistrar.willSet<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v16 = *(void *)(v15 + 112);
  uint64_t v17 = v16 | v3;
  sub_10002ED24(v16 | v3);
  *(void *)(v15 + 112) = v17;
  *(void *)(v0 + 1064) = v15;
  swift_getKeyPath();
  ObservationRegistrar.didSet<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v18 = (void *)swift_task_alloc();
  *(void *)(v0 + 1664) = v18;
  void *v18 = v0;
  v18[1] = sub_1000A3F20;
  uint64_t v19 = *(void *)(v0 + 1160);
  uint64_t v20 = (uint64_t)v1;
  uint64_t v21 = v64;
  uint64_t v22 = v4;
  char v23 = 0;
LABEL_17:
  return (void *)sub_1000A82AC(v20, v21, v22, v19, v23);
}

uint64_t sub_1000A3F20()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 1536);
  uint64_t v3 = *(void *)(v1 + 1528);
  return _swift_task_switch(sub_1000A4040, v3, v2);
}

uint64_t sub_1000A4040()
{
  uint64_t v1 = v0;
  uint64_t v16 = v0 + 2;
  uint64_t v17 = v0 + 120;
  uint64_t v15 = v0[207];
  uint64_t v14 = v0[206];
  uint64_t v12 = v0[204];
  uint64_t v13 = v0[205];
  uint64_t v2 = (void *)v0[203];
  uint64_t v3 = v0[146];
  swift_getKeyPath();
  uint64_t v4 = swift_task_alloc();
  *(void *)(v4 + 16) = v3;
  *(void *)(v4 + 24) = v2;
  v0[134] = v3;
  id v5 = v2;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();

  swift_task_dealloc();
  swift_getKeyPath();
  uint64_t v6 = (void *)swift_task_alloc();
  void v6[2] = v3;
  v6[3] = v12;
  v6[4] = v13;
  v0[135] = v3;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_getKeyPath();
  uint64_t v7 = (void *)swift_task_alloc();
  v7[2] = v3;
  v7[3] = v14;
  v7[4] = v15;
  v0[136] = v3;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();

  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v8 = static MainActor.shared.getter();
  v0[200] = v8;
  uint64_t v9 = (void *)swift_task_alloc();
  v1[201] = v9;
  *uint64_t v9 = v1;
  v9[1] = sub_1000A34F4;
  uint64_t v10 = v1[185];
  return __sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v16, v8, &protocol witness table for MainActor, v10, v17);
}

uint64_t sub_1000A42C4()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void **)(*v0 + 1680);
  swift_task_dealloc();

  uint64_t v3 = *(void *)(v1 + 1536);
  uint64_t v4 = *(void *)(v1 + 1528);
  return _swift_task_switch(sub_1000A4404, v4, v3);
}

uint64_t sub_1000A4404()
{
  uint64_t v1 = *(void **)(v0 + 1592);
  uint64_t v2 = *(void **)(v0 + 1160);
  swift_release();

  uint64_t v3 = *(void *)(v0 + 1168);
  swift_getKeyPath();
  *(void *)(v0 + 584) = v3;
  sub_1000A98F4((unint64_t *)&unk_100201540, (void (*)(uint64_t))type metadata accessor for RewritingModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v4 = OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__resultAttributedString;
  id v5 = *(void **)(v3 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__resultAttributedString);
  if (v5)
  {
    uint64_t v27 = OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__resultAttributedString;
    uint64_t v6 = *(void *)(v0 + 1168);
    swift_getKeyPath();
    *(void *)(v0 + 632) = v6;
    id v7 = v5;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    if (*(void *)(v6 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__allowedResultOptions) == 1)
    {
      id v8 = [v7 string];
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      id v9 = objc_allocWithZone((Class)NSAttributedString);
      NSString v10 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v11 = [v9 initWithString:v10];
    }
    else
    {
      id v11 = v7;
    }
    uint64_t v12 = *(void *)(v0 + 1168);
    swift_getKeyPath();
    uint64_t v13 = swift_task_alloc();
    *(void *)(v13 + 16) = v12;
    *(void *)(v13 + 24) = v11;
    *(void *)(v0 + 640) = v12;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();

    swift_release();
    swift_task_dealloc();
    uint64_t v4 = v27;
  }
  uint64_t v14 = *(void *)(v0 + 1168);
  id v15 = [*(id *)(v0 + 1160) uuid];
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  swift_getKeyPath();
  *(void *)(v0 + 592) = v14;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v16 = *(void **)(v3 + v4);
  swift_getKeyPath();
  *(void *)(v0 + 600) = v14;
  id v17 = v16;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  *(void *)(v0 + 608) = v14;
  swift_getKeyPath();
  ObservationRegistrar.willSet<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v18 = (uint64_t *)(v14 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__finishedResultForContextUUID);
  swift_beginAccess();
  uint64_t v19 = *(void *)(v0 + 1240);
  uint64_t v20 = *(void *)(v0 + 1232);
  uint64_t v21 = *(void *)(v0 + 1224);
  if (v16)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v28 = *v18;
    uint64_t *v18 = 0x8000000000000000;
    sub_10016F840((uint64_t)v17, v19, isUniquelyReferenced_nonNull_native);
    uint64_t *v18 = v28;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
  }
  else
  {
    char v23 = (void *)sub_10016C3E0(*(void *)(v0 + 1240));
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
  }
  uint64_t v24 = *(void *)(v0 + 1168);
  swift_endAccess();
  *(void *)(v0 + 624) = v24;
  swift_getKeyPath();
  ObservationRegistrar.didSet<A, B>(_:keyPath:)();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v25 = *(uint64_t (**)(void))(v0 + 8);
  return v25();
}

uint64_t sub_1000A4920()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 1744) = v0;
  swift_task_dealloc();
  swift_release();
  if (v0)
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = *(void *)(v2 + 1536);
    uint64_t v4 = *(void *)(v2 + 1528);
    id v5 = sub_1000A67F8;
  }
  else
  {
    uint64_t v3 = *(void *)(v2 + 1536);
    uint64_t v4 = *(void *)(v2 + 1528);
    id v5 = sub_1000A4A58;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_1000A4A58()
{
  if (!*(void *)(v0 + 88))
  {
    uint64_t v12 = *(void *)(v0 + 1720);
    uint64_t v13 = *(void *)(v0 + 1168);
    (*(void (**)(void, void))(*(void *)(v0 + 1488) + 8))(*(void *)(v0 + 1496), *(void *)(v0 + 1480));
    swift_release();
    swift_getKeyPath();
    *(void *)(v0 + 752) = v13;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v14 = (void *)&unk_1001FF000;
    if (*(void *)(v13 + v12))
    {
      uint64_t v15 = *(void *)(v0 + 1168);
      swift_getKeyPath();
      *(void *)(v0 + 760) = v15;
      swift_retain();
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      unint64_t v16 = *(void *)(v15 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__modelInfoString + 8);
      uint64_t v84 = *(void *)(v15 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__modelInfoString);
      swift_getKeyPath();
      *(void *)(v0 + 768) = v15;
      unint64_t v86 = v16;
      swift_bridgeObjectRetain();
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      uint64_t v17 = swift_release();
      int v22 = *(unsigned __int8 *)(v15 + 72);
      if (v22 == 255)
      {
        __break(1u);
        return __sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v17, v18, v19, v20, v21);
      }
      uint64_t v23 = *(void *)(v0 + 1168);
      uint64_t v79 = *(void *)(v15 + 56);
      uint64_t v82 = *(void *)(v15 + 48);
      uint64_t v77 = *(void *)(v15 + 64);
      sub_10000ED40(v82, v79, v77, v22);
      swift_bridgeObjectRelease();
      swift_getKeyPath();
      *(void *)(v0 + 776) = v23;
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      uint64_t v24 = *(void **)(v23 + 112);
      swift_getKeyPath();
      *(void *)(v0 + 1152) = v23;
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      id v25 = *(void **)(v23 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__resultAttributedString);
      if (v25)
      {
        id v26 = [v25 string];
        uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v29 = v28;
      }
      else
      {
        uint64_t v27 = 0;
        uint64_t v29 = 0;
      }
      uint64_t v43 = *(void **)(v0 + 1160);
      sub_10000D44C(v84, v86, v82, v79, v77, v22, v24, v27, v29);

      swift_bridgeObjectRelease();
      sub_100024DB4(v82, v79, v77, v22);
      swift_release();
      uint64_t v14 = &unk_1001FF000;
    }
    else
    {
    }
    swift_bridgeObjectRelease();
    uint64_t v44 = *(void *)(v0 + 1168);
    swift_getKeyPath();
    *(void *)(v0 + 584) = v44;
    sub_1000A98F4((unint64_t *)&unk_100201540, (void (*)(uint64_t))type metadata accessor for RewritingModel);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v45 = v14[300];
    uint64_t v81 = v44;
    uint64_t v46 = *(void **)(v44 + v45);
    if (v46)
    {
      uint64_t v47 = *(void *)(v0 + 1168);
      swift_getKeyPath();
      *(void *)(v0 + 632) = v47;
      id v48 = v46;
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      if (*(void *)(v47 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__allowedResultOptions) == 1)
      {
        id v49 = [v48 string];
        static String._unconditionallyBridgeFromObjectiveC(_:)();

        id v50 = objc_allocWithZone((Class)NSAttributedString);
        NSString v51 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v52 = [v50 initWithString:v51];
      }
      else
      {
        id v52 = v48;
      }
      uint64_t v53 = *(void *)(v0 + 1168);
      swift_getKeyPath();
      uint64_t v54 = swift_task_alloc();
      *(void *)(v54 + 16) = v53;
      *(void *)(v54 + 24) = v52;
      *(void *)(v0 + 640) = v53;
      ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();

      swift_release();
      swift_task_dealloc();
    }
    uint64_t v55 = *(void *)(v0 + 1168);
    id v56 = [*(id *)(v0 + 1160) uuid];
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    swift_getKeyPath();
    *(void *)(v0 + 592) = v55;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v57 = *(void **)(v81 + v45);
    swift_getKeyPath();
    *(void *)(v0 + 600) = v55;
    id v58 = v57;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    *(void *)(v0 + 608) = v55;
    swift_getKeyPath();
    ObservationRegistrar.willSet<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v59 = (uint64_t *)(v55 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__finishedResultForContextUUID);
    swift_beginAccess();
    uint64_t v60 = *(void *)(v0 + 1240);
    uint64_t v61 = *(void *)(v0 + 1232);
    uint64_t v62 = *(void *)(v0 + 1224);
    if (v57)
    {
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v89 = *v59;
      *uint64_t v59 = 0x8000000000000000;
      sub_10016F840((uint64_t)v58, v60, isUniquelyReferenced_nonNull_native);
      *uint64_t v59 = v89;
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v60, v62);
    }
    else
    {
      uint64_t v64 = (void *)sub_10016C3E0(*(void *)(v0 + 1240));
      (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v60, v62);
    }
    uint64_t v65 = *(void *)(v0 + 1168);
    swift_endAccess();
    *(void *)(v0 + 624) = v65;
    swift_getKeyPath();
    ObservationRegistrar.didSet<A, B>(_:keyPath:)();
    swift_release();
    goto LABEL_31;
  }
  id v87 = *(void **)(v0 + 88);
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t v2 = *(void *)(v0 + 104);
  uint64_t v4 = *(void *)(v0 + 112);
  uint64_t v3 = *(void *)(v0 + 120);
  uint64_t v6 = *(void *)(v0 + 128);
  uint64_t v5 = *(void *)(v0 + 136);
  uint64_t v7 = *(void *)(v0 + 144);
  swift_bridgeObjectRelease();
  if ((static Task<>.isCancelled.getter() & 1) == 0)
  {
    uint64_t v75 = v2;
    uint64_t v76 = v1;
    uint64_t v78 = v3;
    uint64_t v80 = v6;
    uint64_t v83 = v5;
    uint64_t v85 = v7;
    uint64_t v30 = *(void *)(v0 + 1168);
    swift_getKeyPath();
    *(void *)(v0 + 792) = v30;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    *(void *)(v0 + 800) = v30;
    swift_getKeyPath();
    ObservationRegistrar.willSet<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v31 = *(void *)(v30 + 112) | v4;
    if (sub_10009B224())
    {
      uint64_t v32 = *(void *)(v0 + 1168);
      swift_getKeyPath();
      *(void *)(v0 + 848) = v32;
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      if (*(unsigned char *)(v32 + 104)) {
        goto LABEL_12;
      }
      uint64_t v33 = *(void *)(v0 + 1168);
      swift_getKeyPath();
      *(void *)(v0 + 856) = v33;
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      if ((*(unsigned char *)(v33 + 112) & 1) == 0
        || (uint64_t v34 = *(void *)(v0 + 1168),
            swift_getKeyPath(),
            *(void *)(v0 + 872) = v34,
            ObservationRegistrar.access<A, B>(_:keyPath:)(),
            swift_release(),
            *(unsigned char *)(v34 + 120) == 1))
      {
LABEL_12:
        if (v31)
        {
          uint64_t v35 = *(void *)(v0 + 1168);
          swift_getKeyPath();
          *(void *)(v0 + 864) = v35;
          ObservationRegistrar.access<A, B>(_:keyPath:)();
          swift_release();
          if ((*(unsigned char *)(v35 + 120) & 1) == 0)
          {
            uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
            if (Strong)
            {
              char v37 = Strong;
              if ([Strong respondsToSelector:"showContentWarningWithTitle:message:"])
              {
                if (qword_1001FAD68 != -1) {
                  swift_once();
                }
                uint64_t v38 = *(void *)(v0 + 1376);
                uint64_t v39 = *(void *)(v0 + 1368);
                uint64_t v40 = *(void *)(v0 + 1360);
                uint64_t v41 = sub_10000EBE8(v40, (uint64_t)qword_100212A10);
                (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 16))(v38, v41, v40);
                String.init(localized:)();
                NSString v42 = String._bridgeToObjectiveC()();
                [v37 showContentWarningWithTitle:0 message:v42];
                swift_bridgeObjectRelease();
                swift_unknownObjectRelease();
              }
              else
              {
                swift_unknownObjectRelease();
              }
            }
          }
        }
      }
    }
    uint64_t v68 = *(void *)(v0 + 1168);
    *(void *)(v68 + 112) = v31;
    *(void *)(v0 + 808) = v68;
    swift_getKeyPath();
    ObservationRegistrar.didSet<A, B>(_:keyPath:)();
    swift_release();
    swift_getKeyPath();
    uint64_t v69 = swift_task_alloc();
    *(void *)(v69 + 16) = v68;
    *(void *)(v69 + 24) = v87;
    *(void *)(v0 + 816) = v68;
    id v88 = v87;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();

    swift_task_dealloc();
    swift_getKeyPath();
    uint64_t v70 = swift_task_alloc();
    *(void *)(v70 + 16) = v68;
    *(void *)(v70 + 24) = v76;
    *(void *)(v70 + 32) = v75;
    *(unsigned char *)(v70 + 40) = 0;
    *(void *)(v0 + 824) = v68;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    swift_task_dealloc();
    swift_getKeyPath();
    uint64_t v71 = (void *)swift_task_alloc();
    void v71[2] = v68;
    v71[3] = v78;
    v71[4] = v80;
    *(void *)(v0 + 832) = v68;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_getKeyPath();
    uint64_t v72 = (void *)swift_task_alloc();
    v72[2] = v68;
    v72[3] = v83;
    v72[4] = v85;
    *(void *)(v0 + 840) = v68;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();

    swift_release();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v73 = static MainActor.shared.getter();
    *(void *)(v0 + 1728) = v73;
    uint64_t v74 = (void *)swift_task_alloc();
    *(void *)(v0 + 1736) = v74;
    *uint64_t v74 = v0;
    v74[1] = sub_1000A4920;
    uint64_t v20 = *(void *)(v0 + 1480);
    uint64_t v19 = &protocol witness table for MainActor;
    uint64_t v17 = v0 + 88;
    uint64_t v18 = v73;
    uint64_t v21 = v0 + 744;
    return __sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v17, v18, v19, v20, v21);
  }
  uint64_t v8 = *(void *)(v0 + 1496);
  uint64_t v9 = *(void *)(v0 + 1488);
  uint64_t v10 = *(void *)(v0 + 1480);
  id v11 = *(void **)(v0 + 1160);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  swift_bridgeObjectRelease();
LABEL_31:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v66 = *(uint64_t (**)(void))(v0 + 8);
  return v66();
}

uint64_t sub_1000A5834()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 1792) = v0;
  swift_task_dealloc();
  swift_release();
  if (v0)
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = *(void *)(v2 + 1536);
    uint64_t v4 = *(void *)(v2 + 1528);
    uint64_t v5 = sub_1000A70E0;
  }
  else
  {
    uint64_t v3 = *(void *)(v2 + 1536);
    uint64_t v4 = *(void *)(v2 + 1528);
    uint64_t v5 = sub_1000A596C;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_1000A596C()
{
  uint64_t v1 = *(void *)(v0 + 1216);
  uint64_t v2 = *(void *)(v0 + 1200);
  uint64_t v3 = *(void *)(v0 + 1192);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v1, 1, v3) == 1)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 1344) + 8))(*(void *)(v0 + 1352), *(void *)(v0 + 1336));
    swift_release();
    unint64_t v4 = *(void *)(v0 + 512);
    uint64_t v5 = HIBYTE(v4) & 0xF;
    if ((v4 & 0x2000000000000000) == 0) {
      uint64_t v5 = *(void *)(v0 + 504) & 0xFFFFFFFFFFFFLL;
    }
    if (v5)
    {
      uint64_t v6 = *(void *)(v0 + 1168);
      id v7 = objc_allocWithZone((Class)NSAttributedString);
      swift_bridgeObjectRetain();
      NSString v8 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v9 = [v7 initWithString:v8];

      swift_getKeyPath();
      uint64_t v10 = swift_task_alloc();
      *(void *)(v10 + 16) = v6;
      *(void *)(v10 + 24) = v9;
      *(void *)(v0 + 616) = v6;
      ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
      swift_release();

      swift_task_dealloc();
      swift_bridgeObjectRetain();
      uint64_t v11 = _NSRange.init(_:)();
      uint64_t v13 = v12;
      char v15 = v14;
      swift_bridgeObjectRelease();
      swift_getKeyPath();
      uint64_t v16 = swift_task_alloc();
      *(void *)(v16 + 16) = v6;
      *(void *)(v16 + 24) = v11;
      *(void *)(v16 + 32) = v13;
      *(unsigned char *)(v16 + 40) = v15 & 1;
      *(void *)(v0 + 536) = v6;
      ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
      swift_release();
      swift_task_dealloc();
    }
    uint64_t v17 = *(void *)(v0 + 1768);
    uint64_t v18 = *(void *)(v0 + 1168);
    swift_getKeyPath();
    *(void *)(v0 + 544) = v18;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v19 = (void *)&unk_1001FF000;
    if (!*(void *)(v18 + v17)) {
      goto LABEL_22;
    }
    uint64_t v20 = *(void *)(v0 + 1168);
    swift_getKeyPath();
    *(void *)(v0 + 552) = v20;
    swift_retain();
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    unint64_t v21 = *(void *)(v20 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__modelInfoString + 8);
    uint64_t v96 = *(void *)(v20 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__modelInfoString);
    swift_getKeyPath();
    *(void *)(v0 + 560) = v20;
    unint64_t v98 = v21;
    swift_bridgeObjectRetain();
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    uint64_t v22 = swift_release();
    int v27 = *(unsigned __int8 *)(v20 + 72);
    if (v27 != 255)
    {
      uint64_t v28 = *(void *)(v20 + 64);
      uint64_t v29 = *(void *)(v0 + 1168);
      uint64_t v94 = *(void *)(v20 + 48);
      uint64_t v92 = *(void *)(v20 + 56);
      sub_10000ED40(v94, v92, v28, v27);
      swift_bridgeObjectRelease();
      swift_getKeyPath();
      *(void *)(v0 + 568) = v29;
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      uint64_t v30 = *(void **)(v29 + 112);
      swift_getKeyPath();
      *(void *)(v0 + 576) = v29;
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      uint64_t v19 = &unk_1001FF000;
      uint64_t v31 = *(void **)(v29 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__resultAttributedString);
      if (v31)
      {
        id v32 = [v31 string];
        uint64_t v33 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v35 = v34;
      }
      else
      {
        uint64_t v33 = 0;
        uint64_t v35 = 0;
      }
      sub_10000D44C(v96, v98, v94, v92, v28, v27, v30, v33, v35);
      swift_bridgeObjectRelease();
      sub_100024DB4(v94, v92, v28, v27);
      swift_release();
LABEL_22:
      swift_bridgeObjectRelease();
      uint64_t v68 = *(void *)(v0 + 1168);
      swift_getKeyPath();
      *(void *)(v0 + 584) = v68;
      sub_1000A98F4((unint64_t *)&unk_100201540, (void (*)(uint64_t))type metadata accessor for RewritingModel);
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      uint64_t v69 = v19[300];
      uint64_t v70 = *(void **)(v68 + v69);
      if (v70)
      {
        uint64_t v93 = v19[300];
        uint64_t v71 = *(void *)(v0 + 1168);
        swift_getKeyPath();
        *(void *)(v0 + 632) = v71;
        id v72 = v70;
        ObservationRegistrar.access<A, B>(_:keyPath:)();
        swift_release();
        if (*(void *)(v71 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__allowedResultOptions) == 1)
        {
          id v73 = [v72 string];
          static String._unconditionallyBridgeFromObjectiveC(_:)();

          id v74 = objc_allocWithZone((Class)NSAttributedString);
          NSString v75 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          id v76 = [v74 initWithString:v75];
        }
        else
        {
          id v76 = v72;
        }
        uint64_t v77 = *(void *)(v0 + 1168);
        swift_getKeyPath();
        uint64_t v78 = swift_task_alloc();
        *(void *)(v78 + 16) = v77;
        *(void *)(v78 + 24) = v76;
        *(void *)(v0 + 640) = v77;
        ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();

        swift_release();
        swift_task_dealloc();
        uint64_t v69 = v93;
      }
      uint64_t v79 = *(void *)(v0 + 1168);
      id v80 = [*(id *)(v0 + 1160) uuid];
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      swift_getKeyPath();
      *(void *)(v0 + 592) = v79;
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      uint64_t v81 = *(void **)(v68 + v69);
      swift_getKeyPath();
      *(void *)(v0 + 600) = v79;
      id v82 = v81;
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      *(void *)(v0 + 608) = v79;
      swift_getKeyPath();
      ObservationRegistrar.willSet<A, B>(_:keyPath:)();
      swift_release();
      uint64_t v83 = (uint64_t *)(v79 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__finishedResultForContextUUID);
      swift_beginAccess();
      uint64_t v84 = *(void *)(v0 + 1240);
      uint64_t v85 = *(void *)(v0 + 1232);
      uint64_t v86 = *(void *)(v0 + 1224);
      if (v81)
      {
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v100 = *v83;
        uint64_t *v83 = 0x8000000000000000;
        sub_10016F840((uint64_t)v82, v84, isUniquelyReferenced_nonNull_native);
        uint64_t *v83 = v100;
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v84, v86);
      }
      else
      {
        id v88 = (void *)sub_10016C3E0(*(void *)(v0 + 1240));
        (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v84, v86);
      }
      uint64_t v89 = *(void *)(v0 + 1168);
      swift_endAccess();
      *(void *)(v0 + 624) = v89;
      swift_getKeyPath();
      ObservationRegistrar.didSet<A, B>(_:keyPath:)();
      swift_release();
      goto LABEL_31;
    }
    __break(1u);
    return __sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v22, v23, v24, v25, v26);
  }
  (*(void (**)(void, uint64_t, uint64_t))(v2 + 32))(*(void *)(v0 + 1208), v1, v3);
  if ((static Task<>.isCancelled.getter() & 1) == 0)
  {
    uint64_t v42 = *(void *)(v0 + 1184);
    SummarizationClient.TextAssistantPartialSummary.safetyClassification.getter();
    uint64_t v43 = type metadata accessor for SummarySafetyClassification();
    uint64_t v44 = *(void *)(v43 - 8);
    int v45 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v44 + 48))(v42, 1, v43);
    uint64_t v46 = *(void *)(v0 + 1184);
    if (v45 == 1)
    {
      sub_10002784C(*(void *)(v0 + 1184), &qword_100200198);
    }
    else
    {
      char v47 = SummarySafetyClassification.isSafe.getter();
      (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v46, v43);
      if ((v47 & 1) == 0)
      {
        uint64_t v48 = *(void *)(v0 + 1168);
        swift_getKeyPath();
        *(void *)(v0 + 680) = v48;
        ObservationRegistrar.access<A, B>(_:keyPath:)();
        swift_release();
        *(void *)(v0 + 688) = v48;
        swift_getKeyPath();
        ObservationRegistrar.willSet<A, B>(_:keyPath:)();
        swift_release();
        uint64_t v49 = *(void *)(v48 + 112);
        uint64_t v50 = v49 | 1;
        sub_10002ED24(v49 | 1);
        *(void *)(v48 + 112) = v50;
        *(void *)(v0 + 696) = v48;
        swift_getKeyPath();
        ObservationRegistrar.didSet<A, B>(_:keyPath:)();
        swift_release();
      }
    }
    uint64_t v99 = *(void *)(v0 + 1200);
    uint64_t v51 = *(void *)(v0 + 1176);
    uint64_t v52 = *(void *)(v0 + 1168);
    uint64_t v95 = *(void *)(v0 + 1208);
    uint64_t v97 = *(void *)(v0 + 1192);
    SummarizationClient.TextAssistantPartialSummary.content.getter();
    String.append(_:)(*(Swift::String *)(v0 + 520));
    swift_bridgeObjectRelease();
    SummarizationClient.TextAssistantPartialSummary.inferenceEnvironmentInfo.getter();
    uint64_t v53 = sub_10008BD38(v51);
    uint64_t v55 = v54;
    sub_10002784C(v51, &qword_1001FEF90);
    swift_getKeyPath();
    id v56 = (void *)swift_task_alloc();
    v56[2] = v52;
    v56[3] = v53;
    v56[4] = v55;
    *(void *)(v0 + 656) = v52;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    id v57 = objc_allocWithZone((Class)NSAttributedString);
    swift_bridgeObjectRetain();
    NSString v58 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v59 = [v57 initWithString:v58];

    swift_getKeyPath();
    uint64_t v60 = swift_task_alloc();
    *(void *)(v60 + 16) = v52;
    *(void *)(v60 + 24) = v59;
    *(void *)(v0 + 664) = v52;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();

    swift_task_dealloc();
    swift_bridgeObjectRetain();
    uint64_t v61 = _NSRange.init(_:)();
    uint64_t v63 = v62;
    LOBYTE(v59) = v64;
    swift_bridgeObjectRelease();
    swift_getKeyPath();
    uint64_t v65 = swift_task_alloc();
    *(void *)(v65 + 16) = v52;
    *(void *)(v65 + 24) = v61;
    *(void *)(v65 + 32) = v63;
    *(unsigned char *)(v65 + 40) = v59 & 1;
    *(void *)(v0 + 672) = v52;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    swift_task_dealloc();
    (*(void (**)(uint64_t, uint64_t))(v99 + 8))(v95, v97);
    uint64_t v66 = static MainActor.shared.getter();
    *(void *)(v0 + 1776) = v66;
    uint64_t v67 = (void *)swift_task_alloc();
    *(void *)(v0 + 1784) = v67;
    *uint64_t v67 = v0;
    v67[1] = sub_1000A5834;
    uint64_t v25 = *(void *)(v0 + 1336);
    uint64_t v22 = *(void *)(v0 + 1216);
    uint64_t v24 = &protocol witness table for MainActor;
    uint64_t v23 = v66;
    uint64_t v26 = v0 + 1112;
    return __sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v22, v23, v24, v25, v26);
  }
  uint64_t v36 = *(void *)(v0 + 1352);
  uint64_t v37 = *(void *)(v0 + 1344);
  uint64_t v38 = *(void *)(v0 + 1336);
  uint64_t v39 = *(void *)(v0 + 1208);
  uint64_t v40 = *(void *)(v0 + 1200);
  uint64_t v41 = *(void *)(v0 + 1192);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v39, v41);
  (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v36, v38);
  swift_bridgeObjectRelease();
LABEL_31:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v90 = *(uint64_t (**)(void))(v0 + 8);
  return v90();
}

id sub_1000A67F8()
{
  uint64_t v1 = *(void *)(v0 + 1496);
  uint64_t v2 = *(void *)(v0 + 1488);
  uint64_t v3 = *(void *)(v0 + 1480);

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v4 = *(void *)(v0 + 744);
  uint64_t v5 = (void *)_convertErrorToNSError(_:)();
  id result = [self sharedConnection];
  if (!result)
  {
    __break(1u);
    goto LABEL_31;
  }
  id v7 = result;
  unsigned int v8 = [result isExternalIntelligenceAllowed];

  if (!v8 || (sub_100113FD8() & 1) == 0) {
    goto LABEL_11;
  }
  if (qword_1001FAD70 != -1) {
    swift_once();
  }
  uint64_t v9 = qword_100212A28;
  swift_bridgeObjectRetain();
  char v10 = sub_1001157A4((uint64_t)[v5 code], v9);
  swift_bridgeObjectRelease();
  if (v10)
  {
    if (qword_1001FAC28 != -1) {
      swift_once();
    }
    uint64_t v11 = type metadata accessor for Logger();
    sub_10000EBE8(v11, (uint64_t)qword_100212770);
    uint64_t v12 = v5;
    uint64_t v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v13, v14))
    {
      char v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v40 = (void *)swift_slowAlloc();
      *(_DWORD *)char v15 = 138412290;
      *(void *)(v0 + 648) = v12;
      uint64_t v16 = v12;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v40 = v12;

      _os_log_impl((void *)&_mh_execute_header, v13, v14, "Error occurred in rewriting: %@, but hand off to Montara", v15, 0xCu);
      sub_1000063C0(&qword_1001FED90);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      uint64_t v13 = v12;
    }
    uint64_t v31 = *(void *)(v0 + 1168);

    swift_getKeyPath();
    *(void *)(v0 + 888) = v31;
    sub_1000A98F4((unint64_t *)&unk_100201540, (void (*)(uint64_t))type metadata accessor for RewritingModel);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    if (*(unsigned char *)(v31 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__state))
    {
      id v32 = v12;
      uint64_t v33 = Logger.logObject.getter();
      os_log_type_t v34 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v33, v34))
      {
        uint64_t v35 = (uint8_t *)swift_slowAlloc();
        uint64_t v36 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v35 = 138412290;
        *(void *)(v0 + 880) = v32;
        os_log_t log = v33;
        uint64_t v37 = v32;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        void *v36 = v32;

        _os_log_impl((void *)&_mh_execute_header, log, v34, "%@ occurred while in hand off, this is not expected", v35, 0xCu);
        sub_1000063C0(&qword_1001FED90);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
    }
    else
    {
      uint64_t v38 = *(void *)(v0 + 1168);
      swift_getKeyPath();
      uint64_t v39 = swift_task_alloc();
      *(void *)(v39 + 16) = v38;
      *(unsigned char *)(v39 + 24) = 1;
      *(void *)(v0 + 736) = v38;
      ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();

      swift_release();
      swift_task_dealloc();
    }
  }
  else
  {
LABEL_11:

    swift_errorRetain();
    sub_10002FAC0(v4);
    swift_errorRelease();
    if (qword_1001FAC28 != -1) {
      swift_once();
    }
    uint64_t v17 = type metadata accessor for Logger();
    sub_10000EBE8(v17, (uint64_t)qword_100212770);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      unint64_t v21 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v20 = 138412290;
      swift_errorRetain();
      uint64_t v22 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 904) = v22;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *unint64_t v21 = v22;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "Error occurred in rewriting: %@", v20, 0xCu);
      sub_1000063C0(&qword_1001FED90);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }
  }
  uint64_t v23 = *(void *)(v0 + 1168);
  swift_getKeyPath();
  *(void *)(v0 + 952) = v23;
  sub_1000A98F4((unint64_t *)&unk_100201540, (void (*)(uint64_t))type metadata accessor for RewritingModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (!*(void *)(v23 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__analyticsInstance))
  {
    swift_errorRelease();
    goto LABEL_21;
  }
  uint64_t v24 = *(void *)(v0 + 1168);
  swift_getKeyPath();
  *(void *)(v0 + 920) = v24;
  swift_errorRetain();
  swift_retain();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  id result = (id)swift_release();
  int v25 = *(unsigned __int8 *)(v24 + 72);
  if (v25 == 255)
  {
LABEL_31:
    __break(1u);
    return result;
  }
  uint64_t v26 = *(void **)(v0 + 1168);
  uint64_t v28 = v26[7];
  uint64_t v27 = v26[8];
  uint64_t v29 = v26[6];
  sub_10000ED40(v29, v28, v27, v25);
  sub_10000DC14(v4, v29, v28, v27, v25);
  swift_errorRelease();
  sub_100024DB4(v29, v28, v27, v25);
  swift_errorRelease();
  swift_release();
LABEL_21:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v30 = *(uint64_t (**)(void))(v0 + 8);
  return (id)v30();
}

id sub_1000A70E0()
{
  uint64_t v1 = v0[169];
  uint64_t v2 = v0[168];
  uint64_t v3 = v0[167];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v4 = v0[139];
  uint64_t v5 = (void *)_convertErrorToNSError(_:)();
  id result = [self sharedConnection];
  if (!result)
  {
    __break(1u);
    goto LABEL_31;
  }
  id v7 = result;
  unsigned int v8 = [result isExternalIntelligenceAllowed];

  if (!v8 || (sub_100113FD8() & 1) == 0) {
    goto LABEL_11;
  }
  if (qword_1001FAD70 != -1) {
    swift_once();
  }
  uint64_t v9 = qword_100212A28;
  swift_bridgeObjectRetain();
  char v10 = sub_1001157A4((uint64_t)[v5 code], v9);
  swift_bridgeObjectRelease();
  if (v10)
  {
    if (qword_1001FAC28 != -1) {
      swift_once();
    }
    uint64_t v11 = type metadata accessor for Logger();
    sub_10000EBE8(v11, (uint64_t)qword_100212770);
    uint64_t v12 = v5;
    uint64_t v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v13, v14))
    {
      char v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v40 = (void *)swift_slowAlloc();
      *(_DWORD *)char v15 = 138412290;
      v0[81] = v12;
      uint64_t v16 = v12;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v40 = v12;

      _os_log_impl((void *)&_mh_execute_header, v13, v14, "Error occurred in rewriting: %@, but hand off to Montara", v15, 0xCu);
      sub_1000063C0(&qword_1001FED90);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      uint64_t v13 = v12;
    }
    uint64_t v31 = v0[146];

    swift_getKeyPath();
    v0[111] = v31;
    sub_1000A98F4((unint64_t *)&unk_100201540, (void (*)(uint64_t))type metadata accessor for RewritingModel);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    if (*(unsigned char *)(v31 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__state))
    {
      id v32 = v12;
      uint64_t v33 = Logger.logObject.getter();
      os_log_type_t v34 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v33, v34))
      {
        uint64_t v35 = (uint8_t *)swift_slowAlloc();
        uint64_t v36 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v35 = 138412290;
        v0[110] = v32;
        os_log_t log = v33;
        uint64_t v37 = v32;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        void *v36 = v32;

        _os_log_impl((void *)&_mh_execute_header, log, v34, "%@ occurred while in hand off, this is not expected", v35, 0xCu);
        sub_1000063C0(&qword_1001FED90);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
    }
    else
    {
      uint64_t v38 = v0[146];
      swift_getKeyPath();
      uint64_t v39 = swift_task_alloc();
      *(void *)(v39 + 16) = v38;
      *(unsigned char *)(v39 + 24) = 1;
      v0[92] = v38;
      ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();

      swift_release();
      swift_task_dealloc();
    }
  }
  else
  {
LABEL_11:

    swift_errorRetain();
    sub_10002FAC0(v4);
    swift_errorRelease();
    if (qword_1001FAC28 != -1) {
      swift_once();
    }
    uint64_t v17 = type metadata accessor for Logger();
    sub_10000EBE8(v17, (uint64_t)qword_100212770);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      unint64_t v21 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v20 = 138412290;
      swift_errorRetain();
      uint64_t v22 = _swift_stdlib_bridgeErrorToNSError();
      v0[113] = v22;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *unint64_t v21 = v22;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "Error occurred in rewriting: %@", v20, 0xCu);
      sub_1000063C0(&qword_1001FED90);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }
  }
  uint64_t v23 = v0[146];
  swift_getKeyPath();
  v0[119] = v23;
  sub_1000A98F4((unint64_t *)&unk_100201540, (void (*)(uint64_t))type metadata accessor for RewritingModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (!*(void *)(v23 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__analyticsInstance))
  {
    swift_errorRelease();
    goto LABEL_21;
  }
  uint64_t v24 = v0[146];
  swift_getKeyPath();
  v0[115] = v24;
  swift_errorRetain();
  swift_retain();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  id result = (id)swift_release();
  int v25 = *(unsigned __int8 *)(v24 + 72);
  if (v25 == 255)
  {
LABEL_31:
    __break(1u);
    return result;
  }
  uint64_t v26 = (void *)v0[146];
  uint64_t v28 = v26[7];
  uint64_t v27 = v26[8];
  uint64_t v29 = v26[6];
  sub_10000ED40(v29, v28, v27, v25);
  sub_10000DC14(v4, v29, v28, v27, v25);
  swift_errorRelease();
  sub_100024DB4(v29, v28, v27, v25);
  swift_errorRelease();
  swift_release();
LABEL_21:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v30 = (uint64_t (*)(void))v0[1];
  return (id)v30();
}

id sub_1000A79BC()
{
  uint64_t v1 = *(void *)(v0 + 1504);
  uint64_t v2 = *(void *)(v0 + 1488);
  uint64_t v3 = *(void *)(v0 + 1480);
  uint64_t v4 = *(void **)(v0 + 1160);

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v5 = *(void *)(v0 + 960);
  uint64_t v6 = (void *)_convertErrorToNSError(_:)();
  id result = [self sharedConnection];
  if (!result)
  {
    __break(1u);
    goto LABEL_31;
  }
  unsigned int v8 = result;
  unsigned int v9 = [result isExternalIntelligenceAllowed];

  if (!v9 || (sub_100113FD8() & 1) == 0) {
    goto LABEL_11;
  }
  if (qword_1001FAD70 != -1) {
    swift_once();
  }
  uint64_t v10 = qword_100212A28;
  swift_bridgeObjectRetain();
  char v11 = sub_1001157A4((uint64_t)[v6 code], v10);
  swift_bridgeObjectRelease();
  if (v11)
  {
    if (qword_1001FAC28 != -1) {
      swift_once();
    }
    uint64_t v12 = type metadata accessor for Logger();
    sub_10000EBE8(v12, (uint64_t)qword_100212770);
    uint64_t v13 = v6;
    os_log_type_t v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v41 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v16 = 138412290;
      *(void *)(v0 + 648) = v13;
      uint64_t v17 = v13;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v41 = v13;

      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Error occurred in rewriting: %@, but hand off to Montara", v16, 0xCu);
      sub_1000063C0(&qword_1001FED90);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      os_log_type_t v14 = v13;
    }
    uint64_t v32 = *(void *)(v0 + 1168);

    swift_getKeyPath();
    *(void *)(v0 + 888) = v32;
    sub_1000A98F4((unint64_t *)&unk_100201540, (void (*)(uint64_t))type metadata accessor for RewritingModel);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    if (*(unsigned char *)(v32 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__state))
    {
      uint64_t v33 = v13;
      os_log_type_t v34 = Logger.logObject.getter();
      os_log_type_t v35 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v34, v35))
      {
        uint64_t v36 = (uint8_t *)swift_slowAlloc();
        uint64_t v37 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v36 = 138412290;
        *(void *)(v0 + 880) = v33;
        os_log_t log = v34;
        uint64_t v38 = v33;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *uint64_t v37 = v33;

        _os_log_impl((void *)&_mh_execute_header, log, v35, "%@ occurred while in hand off, this is not expected", v36, 0xCu);
        sub_1000063C0(&qword_1001FED90);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
    }
    else
    {
      uint64_t v39 = *(void *)(v0 + 1168);
      swift_getKeyPath();
      uint64_t v40 = swift_task_alloc();
      *(void *)(v40 + 16) = v39;
      *(unsigned char *)(v40 + 24) = 1;
      *(void *)(v0 + 736) = v39;
      ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();

      swift_release();
      swift_task_dealloc();
    }
  }
  else
  {
LABEL_11:

    swift_errorRetain();
    sub_10002FAC0(v5);
    swift_errorRelease();
    if (qword_1001FAC28 != -1) {
      swift_once();
    }
    uint64_t v18 = type metadata accessor for Logger();
    sub_10000EBE8(v18, (uint64_t)qword_100212770);
    swift_errorRetain();
    swift_errorRetain();
    os_log_type_t v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v19, v20))
    {
      unint64_t v21 = (uint8_t *)swift_slowAlloc();
      uint64_t v22 = (void *)swift_slowAlloc();
      *(_DWORD *)unint64_t v21 = 138412290;
      swift_errorRetain();
      uint64_t v23 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 904) = v23;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v22 = v23;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "Error occurred in rewriting: %@", v21, 0xCu);
      sub_1000063C0(&qword_1001FED90);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }
  }
  uint64_t v24 = *(void *)(v0 + 1168);
  swift_getKeyPath();
  *(void *)(v0 + 952) = v24;
  sub_1000A98F4((unint64_t *)&unk_100201540, (void (*)(uint64_t))type metadata accessor for RewritingModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (!*(void *)(v24 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__analyticsInstance))
  {
    swift_errorRelease();
    goto LABEL_21;
  }
  uint64_t v25 = *(void *)(v0 + 1168);
  swift_getKeyPath();
  *(void *)(v0 + 920) = v25;
  swift_errorRetain();
  swift_retain();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  id result = (id)swift_release();
  int v26 = *(unsigned __int8 *)(v25 + 72);
  if (v26 == 255)
  {
LABEL_31:
    __break(1u);
    return result;
  }
  uint64_t v27 = *(void **)(v0 + 1168);
  uint64_t v29 = v27[7];
  uint64_t v28 = v27[8];
  uint64_t v30 = v27[6];
  sub_10000ED40(v30, v29, v28, v26);
  sub_10000DC14(v5, v30, v29, v28, v26);
  swift_errorRelease();
  sub_100024DB4(v30, v29, v28, v26);
  swift_errorRelease();
  swift_release();
LABEL_21:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v31 = *(uint64_t (**)(void))(v0 + 8);
  return (id)v31();
}

uint64_t sub_1000A82AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(void *)(v6 + 192) = a4;
  *(void *)(v6 + 200) = v5;
  *(unsigned char *)(v6 + 256) = a5;
  *(void *)(v6 + 176) = a2;
  *(void *)(v6 + 184) = a3;
  *(void *)(v6 + 168) = a1;
  uint64_t v7 = type metadata accessor for UUID();
  *(void *)(v6 + 208) = v7;
  *(void *)(v6 + 216) = *(void *)(v7 - 8);
  *(void *)(v6 + 224) = swift_task_alloc();
  *(void *)(v6 + 232) = swift_task_alloc();
  *(void *)(v6 + 240) = swift_task_alloc();
  type metadata accessor for MainActor();
  *(void *)(v6 + 248) = static MainActor.shared.getter();
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1000A83C8, v9, v8);
}

uint64_t sub_1000A83C8()
{
  uint64_t v1 = *(void **)(v0 + 192);
  uint64_t v2 = *(void *)(v0 + 200);
  swift_release();
  id v3 = [v1 uuid];
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  swift_getKeyPath();
  *(void *)(v0 + 152) = v2;
  sub_1000A98F4((unint64_t *)&unk_100201540, (void (*)(uint64_t))type metadata accessor for RewritingModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v4 = (uint64_t *)(v2 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__sentFinishedResultToClientForContextUUID);
  swift_beginAccess();
  uint64_t v5 = *v4;
  if (*(void *)(*v4 + 16))
  {
    uint64_t v6 = *(void *)(v0 + 240);
    swift_bridgeObjectRetain();
    unint64_t v7 = sub_100007B70(v6);
    if (v8) {
      char v42 = *(unsigned char *)(*(void *)(v5 + 56) + v7);
    }
    else {
      char v42 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    char v42 = 0;
  }
  uint64_t v9 = *(void *)(v0 + 200);
  uint64_t v41 = *(void (**)(void))(*(void *)(v0 + 216) + 8);
  ((void (*)(void, void))v41)(*(void *)(v0 + 240), *(void *)(v0 + 208));
  swift_getKeyPath();
  *(void *)(v0 + 120) = v9;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v10 = *(void **)(v0 + 168);
  if (*(void *)(v9 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__allowedResultOptions) == 1)
  {
    id v11 = [v10 string];
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    id v12 = objc_allocWithZone((Class)NSAttributedString);
    NSString v13 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v14 = [v12 initWithString:v13];
  }
  else
  {
    id v14 = v10;
  }
  uint64_t v15 = *(void *)(v0 + 200);
  swift_getKeyPath();
  *(void *)(v0 + 88) = v15;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v16 = *(void **)(v15 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__session);
  if (!v16) {
    goto LABEL_16;
  }
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    goto LABEL_16;
  }
  uint64_t v18 = (void *)Strong;
  id v19 = v16;
  if (sub_10009B224() & 1) == 0 || (sub_10002F3E0() & 1) != 0 || (v42)
  {
    swift_unknownObjectRelease();

LABEL_16:
    goto LABEL_17;
  }
  uint64_t v22 = *(void **)(v0 + 192);
  uint64_t v38 = (char *)(v0 + 256);
  uint64_t v40 = *(void *)(v0 + 200);
  [v18 compositionSession:v19 didReceiveText:v14 replacementRange:*(void *)(v0 + 176) inContext:*(void *)(v0 + 184) finished:v22];
  id v23 = [v22 uuid];
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  swift_getKeyPath();
  *(void *)(v0 + 96) = v40;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (!*(void *)(*v4 + 16)
    || (uint64_t v24 = *(void *)(v0 + 232),
        swift_bridgeObjectRetain(),
        sub_100007B70(v24),
        LOBYTE(v24) = v25,
        swift_bridgeObjectRelease(),
        (v24 & 1) == 0))
  {
    uint64_t v34 = *(void *)(v0 + 224);
    char v36 = *v38;
    uint64_t v31 = *(void **)(v0 + 192);
    uint64_t v30 = *(void *)(v0 + 200);
    uint64_t v37 = *(void *)(v0 + 208);
    v41(*(void *)(v0 + 232));
    id v32 = [v31 uuid];
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    swift_getKeyPath();
    *(void *)(v0 + 104) = v30;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    *(void *)(v0 + 112) = v30;
    swift_getKeyPath();
    ObservationRegistrar.willSet<A, B>(_:keyPath:)();
    swift_release();
    swift_beginAccess();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v44 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    sub_10016F6A0(v36, v34, isUniquelyReferenced_nonNull_native);
    *uint64_t v4 = v44;
    swift_bridgeObjectRelease();
    ((void (*)(uint64_t, uint64_t))v41)(v34, v37);
    swift_endAccess();
    *(void *)(v0 + 128) = v30;
    swift_getKeyPath();
    ObservationRegistrar.didSet<A, B>(_:keyPath:)();
    swift_unknownObjectRelease();

    goto LABEL_25;
  }
  char v26 = *v38;
  ((void (*)(void, void))v41)(*(void *)(v0 + 232), *(void *)(v0 + 208));
  if (v26)
  {
    uint64_t v35 = *(void *)(v0 + 224);
    uint64_t v27 = *(void *)(v0 + 200);
    uint64_t v39 = *(void *)(v0 + 208);
    id v28 = [*(id *)(v0 + 192) uuid];
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    swift_getKeyPath();
    *(void *)(v0 + 136) = v27;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    *(void *)(v0 + 144) = v27;
    swift_getKeyPath();
    ObservationRegistrar.willSet<A, B>(_:keyPath:)();
    swift_release();
    swift_beginAccess();
    char v29 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v43 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    sub_10016F6A0(1, v35, v29);
    *uint64_t v4 = v43;
    swift_bridgeObjectRelease();
    ((void (*)(uint64_t, uint64_t))v41)(v35, v39);
    swift_endAccess();
    *(void *)(v0 + 160) = v27;
    swift_getKeyPath();
    ObservationRegistrar.didSet<A, B>(_:keyPath:)();
    swift_unknownObjectRelease();

LABEL_25:
    swift_release();
    goto LABEL_17;
  }
  swift_unknownObjectRelease();

LABEL_17:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v20 = *(uint64_t (**)(void))(v0 + 8);
  return v20();
}

uint64_t sub_1000A8AE0(char a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v4 = v3;
  swift_getKeyPath();
  sub_1000A98F4((unint64_t *)&unk_100201540, (void (*)(uint64_t))type metadata accessor for RewritingModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  uint64_t v9 = *(void **)(v3 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__session);
  if (v9 && (uint64_t result = swift_unknownObjectWeakLoadStrong()) != 0)
  {
    uint64_t v10 = (void *)result;
    swift_getKeyPath();
    id v15 = v9;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    if (*(void *)(v4 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__task))
    {
      swift_retain();
      Task.cancel()();
      swift_release();
    }
    if (a2)
    {
      swift_errorRetain();
      id v11 = (void *)_convertErrorToNSError(_:)();
      [v10 endWritingToolsWithError:v11];

      swift_errorRelease();
    }
    else if (sub_10009B224())
    {
      if (a1 == 2)
      {
        swift_getKeyPath();
        ObservationRegistrar.access<A, B>(_:keyPath:)();
        swift_release();
        char v12 = *(unsigned char *)(v4 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__showingOriginal) ^ 1;
      }
      else
      {
        char v12 = a1 & 1;
      }
      [v10 didEndWritingToolsSession:v15 accepted:v12 & 1];
    }
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    uint64_t v14 = swift_release();
    if (a3) {
      a3(v14);
    }

    return swift_unknownObjectRelease();
  }
  else if (a3)
  {
    return ((uint64_t (*)(uint64_t))a3)(result);
  }
  return result;
}

void *sub_1000A8D9C()
{
  swift_getKeyPath();
  sub_1000A98F4((unint64_t *)&unk_100201540, (void (*)(uint64_t))type metadata accessor for RewritingModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = (void *)swift_release();
  uint64_t v2 = OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__undoCount;
  if (*(void *)(v0 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__undoCount))
  {
    swift_getKeyPath();
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    swift_getKeyPath();
    ObservationRegistrar.willSet<A, B>(_:keyPath:)();
    uint64_t result = (void *)swift_release();
    uint64_t v3 = *(void *)(v0 + v2);
    BOOL v4 = v3 != 0;
    uint64_t v5 = v3 - 1;
    if (!v4)
    {
      __break(1u);
LABEL_10:
      __break(1u);
      return result;
    }
    *(void *)(v0 + v2) = v5;
    swift_getKeyPath();
    ObservationRegistrar.didSet<A, B>(_:keyPath:)();
    swift_release();
    swift_getKeyPath();
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    swift_getKeyPath();
    ObservationRegistrar.willSet<A, B>(_:keyPath:)();
    uint64_t result = (void *)swift_release();
    uint64_t v6 = *(void *)(v0 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__redoCount);
    BOOL v4 = __CFADD__(v6, 1);
    uint64_t v7 = v6 + 1;
    if (v4) {
      goto LABEL_10;
    }
    *(void *)(v0 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__redoCount) = v7;
    swift_getKeyPath();
    ObservationRegistrar.didSet<A, B>(_:keyPath:)();
    swift_release();
    uint64_t result = (void *)swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      char v8 = result;
      if ([result respondsToSelector:"undo"]) {
        [v8 undo];
      }
      return (void *)swift_unknownObjectRelease();
    }
  }
  return result;
}

void *sub_1000A8FB4()
{
  swift_getKeyPath();
  sub_1000A98F4((unint64_t *)&unk_100201540, (void (*)(uint64_t))type metadata accessor for RewritingModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = (void *)swift_release();
  uint64_t v2 = OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__redoCount;
  if (*(void *)(v0 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__redoCount))
  {
    swift_getKeyPath();
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    swift_getKeyPath();
    ObservationRegistrar.willSet<A, B>(_:keyPath:)();
    uint64_t result = (void *)swift_release();
    uint64_t v3 = *(void *)(v0 + v2);
    BOOL v4 = v3 != 0;
    uint64_t v5 = v3 - 1;
    if (!v4)
    {
      __break(1u);
LABEL_10:
      __break(1u);
      return result;
    }
    *(void *)(v0 + v2) = v5;
    swift_getKeyPath();
    ObservationRegistrar.didSet<A, B>(_:keyPath:)();
    swift_release();
    swift_getKeyPath();
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    swift_getKeyPath();
    ObservationRegistrar.willSet<A, B>(_:keyPath:)();
    uint64_t result = (void *)swift_release();
    uint64_t v6 = *(void *)(v0 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__undoCount);
    BOOL v4 = __CFADD__(v6, 1);
    uint64_t v7 = v6 + 1;
    if (v4) {
      goto LABEL_10;
    }
    *(void *)(v0 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__undoCount) = v7;
    swift_getKeyPath();
    ObservationRegistrar.didSet<A, B>(_:keyPath:)();
    swift_release();
    uint64_t result = (void *)swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      char v8 = result;
      if ([result respondsToSelector:"redo"]) {
        [v8 redo];
      }
      return (void *)swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1000A91CC()
{
  *(unsigned char *)(v0 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__state) = 0;
  *(unsigned char *)(v0 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__isForEditableContent) = 1;
  *(unsigned char *)(v0 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__wantsInlineEditing) = 1;
  *(unsigned char *)(v0 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__includeListMarkersInInlineResults) = 2;
  *(void *)(v0 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__allowedResultOptions) = 0;
  *(void *)(v0 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__session) = 0;
  *(void *)(v0 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__task) = 0;
  *(void *)(v0 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__resultAttributedString) = 0;
  uint64_t v1 = v0 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__resultAttributedStringRange;
  *(void *)uint64_t v1 = 0;
  *(void *)(v1 + 8) = 0;
  *(unsigned char *)(v1 + 16) = 1;
  uint64_t v2 = (void *)(v0 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__modelInfoString);
  void *v2 = 0;
  v2[1] = 0xE000000000000000;
  uint64_t v3 = (void *)(v0 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__inputStringForFeedback);
  void *v3 = 0;
  v3[1] = 0xE000000000000000;
  *(void *)(v0 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__analyticsInstance) = 0;
  swift_retain();
  *(void *)(v0 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__sentFinishedResultToClientForContextUUID) = sub_100005328((uint64_t)&_swiftEmptyArrayStorage);
  *(void *)(v0 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__finishedResultForContextUUID) = sub_10000551C((uint64_t)&_swiftEmptyArrayStorage);
  *(unsigned char *)(v0 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__showingOriginal) = 0;
  *(void *)(v0 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__undoCount) = 0;
  *(void *)(v0 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__redoCount) = 0;
  ObservationRegistrar.init()();
  swift_release();
  swift_unknownObjectWeakInit();
  *(_OWORD *)(v0 + 56) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  *(unsigned char *)(v0 + 72) = -1;
  *(void *)(v0 + 80) = 0;
  *(unsigned char *)(v0 + 88) = 0;
  *(void *)(v0 + 96) = 0;
  *(unsigned char *)(v0 + 104) = 0;
  *(void *)(v0 + 112) = 0;
  *(unsigned char *)(v0 + 120) = 0;
  ObservationRegistrar.init()();
  return v0;
}

uint64_t sub_1000A9358()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel___observationRegistrar;
  uint64_t v2 = type metadata accessor for ObservationRegistrar();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(v1, v2);
}

uint64_t RewritingModel.deinit()
{
  sub_10002F7E4(v0 + 16);

  swift_bridgeObjectRelease();
  sub_100024DB4(*(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(unsigned char *)(v0 + 72));
  swift_bridgeObjectRelease();
  swift_errorRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC21WritingToolsUIService9ToolModel___observationRegistrar;
  uint64_t v2 = type metadata accessor for ObservationRegistrar();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v3(v0 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel___observationRegistrar, v2);
  return v0;
}

uint64_t RewritingModel.__deallocating_deinit()
{
  RewritingModel.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_1000A95F8()
{
  return type metadata accessor for RewritingModel();
}

uint64_t type metadata accessor for RewritingModel()
{
  uint64_t result = qword_1001FFA08;
  if (!qword_1001FFA08) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000A964C()
{
  uint64_t result = type metadata accessor for ObservationRegistrar();
  if (v1 <= 0x3F) {
    return swift_updateClassMetadata2();
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for RewritingModel.RewritingState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000A9808);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RewritingModel.RewritingState()
{
  return &type metadata for RewritingModel.RewritingState;
}

unint64_t sub_1000A9844()
{
  unint64_t result = qword_100200178;
  if (!qword_100200178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100200178);
  }
  return result;
}

void sub_1000A98A8()
{
  sub_10009C178(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

void sub_1000A98CC()
{
  sub_10009CF78(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_1000A98F4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1000A9950()
{
}

double sub_1000A9970()
{
  *(void *)&double result = sub_1000A9F68().n128_u64[0];
  return result;
}

unint64_t sub_1000A9988(unint64_t result)
{
  if (result)
  {
    unint64_t v1 = result;
    swift_stdlib_random();
    double result = (0 * (unsigned __int128)v1) >> 64;
    if (-(uint64_t)v1 % v1)
    {
      while (1)
        swift_stdlib_random();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1000A9A1C()
{
  sub_10002EFA4(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1000A9A40()
{
  return sub_10002F3AC(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_1000A9A60@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_10009CC04(a1, &OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__sentFinishedResultToClientForContextUUID, a2);
}

uint64_t sub_1000A9A8C()
{
  return sub_100069518(*(void *)(v0 + 16), *(void *)(v0 + 24), &OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__sentFinishedResultToClientForContextUUID);
}

uint64_t sub_1000A9AB0@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_10009CC04(a1, &OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__finishedResultForContextUUID, a2);
}

uint64_t sub_1000A9ADC()
{
  return sub_100069518(*(void *)(v0 + 16), *(void *)(v0 + 24), &OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__finishedResultForContextUUID);
}

uint64_t sub_1000A9B00()
{
  return sub_1000AA150();
}

uint64_t sub_1000A9B18()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1000A9B58(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100027204;
  return sub_10009DA90(a1, v4, v5, v6);
}

uint64_t sub_1000A9C2C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_10009D244(a1, &OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__redoCount, a2);
}

uint64_t sub_1000A9C58@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_10009D244(a1, &OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__undoCount, a2);
}

void sub_1000A9C84()
{
  *(void *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__undoCount) = *(void *)(v0 + 24);
}

void sub_1000A9C98()
{
  *(void *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__redoCount) = *(void *)(v0 + 24);
}

uint64_t sub_1000A9CB4@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_10009C808(a1, &OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__inputStringForFeedback, a2);
}

uint64_t sub_1000A9CE0()
{
  return sub_1000A9FE4(&OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__inputStringForFeedback);
}

void sub_1000A9D10()
{
  *(unsigned char *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__state) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_1000A9D28@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_10009C808(a1, &OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__modelInfoString, a2);
}

unint64_t sub_1000A9D54(char a1, uint64_t a2, uint64_t a3, char a4, char a5)
{
  if (!a4)
  {
    switch(a1)
    {
      case 6:
        unint64_t result = 0x732E61742E6D675FLL;
        strcpy((char *)v7, "_gm.ta.summary");
        HIBYTE(v7[1]) = -18;
        if ((a5 & 1) == 0) {
          return result;
        }
        goto LABEL_10;
      case 7:
        unint64_t result = 0xD000000000000010;
        v7[0] = 0xD000000000000010;
        v7[1] = 0x800000010019EB80;
        if (a5) {
          goto LABEL_10;
        }
        return result;
      case 8:
        unint64_t result = 0x6C2E61742E6D675FLL;
        strcpy((char *)v7, "_gm.ta.list");
        HIDWORD(v7[1]) = -352321536;
        if ((a5 & 1) == 0) {
          return result;
        }
        goto LABEL_10;
      case 9:
        unint64_t result = 0x742E61742E6D675FLL;
        strcpy((char *)v7, "_gm.ta.table");
        BYTE5(v7[1]) = 0;
        HIWORD(v7[1]) = -5120;
        if ((a5 & 1) == 0) {
          return result;
        }
LABEL_10:
        v6._uint64_t countAndFlagsBits = 7889198;
        v6._uint64_t object = (void *)0xE300000000000000;
        String.append(_:)(v6);
        return v7[0];
      default:
        break;
    }
  }
  v7[0] = 0;
  v7[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(22);
  swift_bridgeObjectRelease();
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  JUMPOUT(0x1000A9F20);
}

uint64_t sub_1000A9F30()
{
  return sub_1000A9FE4(&OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__modelInfoString);
}

uint64_t sub_1000A9F58(uint64_t a1)
{
  return sub_100028458(a1, *(void **)(v1 + 16), *(void *)(v1 + 24));
}

__n128 sub_1000A9F68()
{
  unsigned __int8 v1 = *(unsigned char *)(v0 + 40);
  uint64_t v2 = (__n128 *)(*(void *)(v0 + 16)
                + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__resultAttributedStringRange);
  __n128 result = *(__n128 *)(v0 + 24);
  __n128 *v2 = result;
  v2[1].n128_u8[0] = v1;
  return result;
}

void sub_1000A9F8C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void **)(v0 + 24);
  int v3 = *(void **)(v1 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__resultAttributedString);
  *(void *)(v1 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__resultAttributedString) = v2;
  id v4 = v2;
}

void sub_1000A9FCC()
{
  *(unsigned char *)(*(void *)(v0 + 16)
           + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__includeListMarkersInInlineResults) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_1000A9FE4(void *a1)
{
  uint64_t v2 = v1[4];
  int v3 = (void *)(v1[2] + *a1);
  void *v3 = v1[3];
  v3[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000AA030()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 50, 7);
}

uint64_t sub_1000AA078(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 40);
  char v8 = *(unsigned char *)(v1 + 48);
  char v9 = *(unsigned char *)(v1 + 49);
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  void *v10 = v2;
  v10[1] = sub_100027FEC;
  return sub_1000A0570(a1, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_1000AA150()
{
  *(void *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__task) = *(void *)(v0 + 24);
  swift_retain();
  return swift_release();
}

uint64_t sub_1000AA1A4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  *(unsigned char *)(v4 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__state) = 0;
  *(unsigned char *)(v4 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__isForEditableContent) = 1;
  *(unsigned char *)(v4 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__wantsInlineEditing) = 1;
  *(unsigned char *)(v4 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__includeListMarkersInInlineResults) = 2;
  *(void *)(v4 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__allowedResultOptions) = 0;
  *(void *)(v4 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__session) = 0;
  *(void *)(v4 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__task) = 0;
  *(void *)(v4 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__resultAttributedString) = 0;
  uint64_t v9 = v4 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__resultAttributedStringRange;
  *(void *)uint64_t v9 = 0;
  *(void *)(v9 + 8) = 0;
  *(unsigned char *)(v9 + 16) = 1;
  uint64_t v10 = (void *)(v4 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__modelInfoString);
  void *v10 = 0;
  v10[1] = 0xE000000000000000;
  id v11 = (void *)(v4 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__inputStringForFeedback);
  *id v11 = 0;
  v11[1] = 0xE000000000000000;
  *(void *)(v4 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__analyticsInstance) = 0;
  swift_retain();
  *(void *)(v4 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__sentFinishedResultToClientForContextUUID) = sub_100005328((uint64_t)_swiftEmptyArrayStorage);
  *(void *)(v4 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__finishedResultForContextUUID) = sub_10000551C((uint64_t)_swiftEmptyArrayStorage);
  *(unsigned char *)(v4 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__showingOriginal) = 0;
  *(void *)(v4 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__undoCount) = 0;
  *(void *)(v4 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__redoCount) = 0;
  ObservationRegistrar.init()();
  swift_release();
  swift_unknownObjectWeakInit();
  *(_OWORD *)(v4 + 56) = 0u;
  *(_OWORD *)(v4 + 40) = 0u;
  *(_OWORD *)(v4 + 24) = 0u;
  *(unsigned char *)(v4 + 72) = -1;
  *(void *)(v4 + 80) = 0;
  *(unsigned char *)(v4 + 88) = 0;
  *(void *)(v4 + 96) = 0;
  *(unsigned char *)(v4 + 104) = 0;
  *(void *)(v4 + 112) = 0;
  *(unsigned char *)(v4 + 120) = 0;
  ObservationRegistrar.init()();
  swift_getKeyPath();
  sub_1000A98F4((unint64_t *)&qword_1001FD2A0, (void (*)(uint64_t))type metadata accessor for ToolModel);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  sub_10000ED74(a1, a2, a3, a4);
  swift_release();
  swift_unknownObjectWeakAssign();
  return v4;
}

uint64_t sub_1000AA418()
{
  return sub_1000A9ADC();
}

uint64_t sub_1000AA430()
{
  return sub_1000A9A8C();
}

void sub_1000AA448()
{
}

uint64_t sub_1000AA460()
{
  return sub_10004F880();
}

uint64_t sub_1000AA478()
{
  return sub_10004F46C();
}

void sub_1000AA490()
{
}

uint64_t sub_1000AA4AC(uint64_t a1, uint64_t a2)
{
  v3[37] = a2;
  v3[38] = v2;
  v3[36] = a1;
  uint64_t v4 = sub_1000063C0(&qword_1002002A8);
  v3[39] = v4;
  v3[40] = *(void *)(v4 - 8);
  v3[41] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for AppIntentPerformOptions();
  v3[42] = v5;
  v3[43] = *(void *)(v5 - 8);
  v3[44] = swift_task_alloc();
  uint64_t v6 = sub_1000063C0(&qword_1002002B0);
  v3[45] = v6;
  v3[46] = *(void *)(v6 - 8);
  v3[47] = swift_task_alloc();
  return _swift_task_switch(sub_1000AA630, 0, 0);
}

uint64_t sub_1000AA630()
{
  uint64_t v27 = v0;
  *(void *)(v0 + 104) = &type metadata for WritingTools;
  unint64_t v1 = sub_1000268F4();
  *(unsigned char *)(v0 + 80) = 6;
  *(void *)(v0 + 112) = v1;
  char v2 = isFeatureEnabled(_:)();
  sub_100027DBC(v0 + 80);
  if (v2)
  {
    if (qword_1001FAC60 != -1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for Logger();
    *(void *)(v0 + 384) = sub_10000EBE8(v3, (uint64_t)qword_100212818);
    swift_bridgeObjectRetain_n();
    uint64_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.default.getter();
    BOOL v6 = os_log_type_enabled(v4, v5);
    unint64_t v7 = *(void *)(v0 + 296);
    if (v6)
    {
      uint64_t v8 = *(void *)(v0 + 288);
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 136315138;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 280) = sub_100021444(v8, v7, &v26);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "searching for user info using query: %s", v9, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    uint64_t v16 = *(void *)(v0 + 296);
    uint64_t v17 = *(void *)(v0 + 288);
    uint64_t v18 = *(void *)(*(void *)(v0 + 304) + 24);
    uint64_t ObjectType = swift_getObjectType();
    *(void *)(v0 + 208) = v17;
    *(void *)(v0 + 216) = v16;
    sub_1000063C0(&qword_1002002B8);
    swift_allocObject();
    swift_bridgeObjectRetain();
    *(void *)(v0 + 272) = IntentParameter.init(wrappedValue:)();
    unint64_t v20 = sub_1000AC0B0();
    unint64_t v21 = sub_1000AC104();
    sub_1000ABD84();
    type metadata accessor for DefaultPerformAppIntentDelegate();
    swift_allocObject();
    uint64_t v22 = DefaultPerformAppIntentDelegate.init()();
    *(void *)(v0 + 392) = v22;
    id v23 = (void *)swift_task_alloc();
    *(void *)(v0 + 400) = v23;
    *id v23 = v0;
    v23[1] = sub_1000AAA94;
    uint64_t v24 = *(void *)(v0 + 376);
    uint64_t v25 = *(void *)(v0 + 352);
    unint64_t v29 = v20;
    unint64_t v30 = v21;
    return AppIntentDispatching.perform<A>(_:options:delegate:)(v24, v0 + 272, v25, v22, &protocol witness table for DefaultPerformAppIntentDelegate, ObjectType, &type metadata for SearchTool, v18);
  }
  else
  {
    if (qword_1001FAC60 != -1) {
      swift_once();
    }
    uint64_t v10 = type metadata accessor for Logger();
    sub_10000EBE8(v10, (uint64_t)qword_100212818);
    id v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v11, v12))
    {
      NSString v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)NSString v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "personal info search is disabled", v13, 2u);
      swift_slowDealloc();
    }

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v14 = *(uint64_t (**)(void *))(v0 + 8);
    return v14(_swiftEmptyArrayStorage);
  }
}

uint64_t sub_1000AAA94()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 352);
  uint64_t v3 = *(void *)(*(void *)v1 + 344);
  uint64_t v4 = *(void *)(*(void *)v1 + 336);
  *(void *)(*(void *)v1 + 408) = v0;
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_release();
  if (v0) {
    os_log_type_t v5 = sub_1000AB82C;
  }
  else {
    os_log_type_t v5 = sub_1000AAC30;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1000AAC30()
{
  uint64_t v78 = v0;
  uint64_t v2 = v0[46];
  uint64_t v1 = v0[47];
  uint64_t v3 = v0[45];
  uint64_t v5 = v0[40];
  uint64_t v4 = v0[41];
  uint64_t v6 = v0[39];
  AppIntentSuccessResult.output.getter();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  IntentOutput.value.getter();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  unint64_t v8 = v0[33];
  if (!v8)
  {
    uint64_t v43 = Logger.logObject.getter();
    os_log_type_t v44 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v43, v44))
    {
      uint64_t v45 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v45 = 0;
      _os_log_impl((void *)&_mh_execute_header, v43, v44, "user info search returned no results", v45, 2u);
      swift_slowDealloc();
    }

    uint64_t v46 = _swiftEmptyArrayStorage;
LABEL_64:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v62 = (uint64_t (*)(void *))v0[1];
    return v62(v46);
  }
  uint64_t v68 = v0 + 32;
  v0[32] = _swiftEmptyArrayStorage;
  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v69 = v0 + 31;
  uint64_t v71 = v0;
  if (!v9)
  {
    swift_bridgeObjectRelease();
    char v42 = _swiftEmptyArrayStorage;
LABEL_53:
    swift_bridgeObjectRetain();
    char v47 = Logger.logObject.getter();
    os_log_type_t v48 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v47, v48))
    {
      uint64_t v49 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v49 = 134217984;
      v0[30] = v42[2];
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v47, v48, "found %ld results:", v49, 0xCu);
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease();
    }

    swift_beginAccess();
    uint64_t v46 = (void *)*v68;
    uint64_t v50 = *(void *)(*v68 + 16);
    if (v50)
    {
      swift_bridgeObjectRetain();
      uint64_t v51 = v46 + 6;
      do
      {
        uint64_t v53 = *(v51 - 2);
        uint64_t v52 = *(v51 - 1);
        uint64_t v54 = v51[1];
        uint64_t v55 = v51[3];
        uint64_t v74 = v51[2];
        uint64_t v76 = *v51;
        uint64_t v56 = v51[5];
        uint64_t v72 = v51[4];
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        id v57 = Logger.logObject.getter();
        os_log_type_t v58 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v57, v58))
        {
          os_log_t log = v57;
          uint64_t v59 = swift_slowAlloc();
          v77[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v59 = 136642819;
          void v71[2] = v53;
          v71[3] = v52;
          v71[4] = v76;
          v71[5] = v54;
          v71[6] = v74;
          v71[7] = v55;
          v71[8] = v72;
          v71[9] = v56;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v60 = String.init<A>(describing:)();
          *(void *)(v59 + 4) = sub_100021444(v60, v61, v77);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          _os_log_impl((void *)&_mh_execute_header, log, v58, "%{sensitive}s", (uint8_t *)v59, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
        }
        v51 += 8;
        --v50;
      }
      while (v50);
      swift_bridgeObjectRelease();
      uint64_t v46 = (void *)*v68;
    }
    uint64_t v0 = v71;
    goto LABEL_64;
  }
  if (v9 >= 1)
  {
    uint64_t v10 = 0;
    id v11 = (unsigned __int8 *)(v0 + 52);
    unint64_t v75 = v8 & 0xC000000000000001;
    uint64_t v73 = v9;
    while (1)
    {
      if (v75) {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        swift_retain();
      }
      swift_retain_n();
      os_log_type_t v12 = Logger.logObject.getter();
      os_log_type_t v13 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v12, v13))
      {
        uint64_t v14 = swift_slowAlloc();
        v77[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v14 = 136642819;
        swift_retain();
        uint64_t v15 = sub_1000ACB50();
        unint64_t v17 = v16;
        swift_release();
        *(void *)(v14 + 4) = sub_100021444(v15, v17, v77);
        swift_bridgeObjectRelease();
        swift_release_n();
        _os_log_impl((void *)&_mh_execute_header, v12, v13, "processing %{sensitive}s", (uint8_t *)v14, 0xCu);
        swift_arrayDestroy();
        uint64_t v9 = v73;
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_release_n();
      }

      swift_retain();
      EntityProperty.wrappedValue.getter();
      swift_release();
      int v18 = *v11;
      if (v18 != 23)
      {
        if (sub_1000AD5B4(v18) == 0x726577736E61 && v25 == 0xE600000000000000)
        {
          swift_bridgeObjectRelease();
LABEL_28:
          swift_retain();
          EntityProperty.wrappedValue.getter();
          swift_release();
          if (*v69)
          {
            swift_retain();
            EntityProperty.wrappedValue.getter();
            swift_release();
            uint64_t v27 = v0[23];
            if (v27)
            {
              uint64_t v28 = v0[22];
              swift_retain();
              EntityProperty.wrappedValue.getter();
              swift_release();
              uint64_t v29 = v0[21];
              if (v29)
              {
                uint64_t v67 = v0[20];
                swift_retain();
                EntityProperty.wrappedValue.getter();
                swift_release();
                uint64_t v65 = v0[19];
                uint64_t v66 = v0[18];
                swift_retain();
                EntityProperty.wrappedValue.getter();
                swift_release();
                uint64_t v63 = v0[25];
                uint64_t v64 = v0[24];
                unint64_t v30 = (void *)v0[32];
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  unint64_t v30 = sub_100143A84(0, v30[2] + 1, 1, v30);
                }
                unint64_t v32 = v30[2];
                unint64_t v31 = v30[3];
                if (v32 >= v31 >> 1) {
                  unint64_t v30 = sub_100143A84((void *)(v31 > 1), v32 + 1, 1, v30);
                }
                v30[2] = v32 + 1;
                uint64_t v33 = &v30[8 * v32];
                v33[4] = v28;
                v33[5] = v27;
                v33[6] = v67;
                v33[7] = v29;
                v33[8] = v66;
                v33[9] = v65;
                v33[10] = v64;
                v33[11] = v63;
                swift_release();
                swift_release();
                *uint64_t v68 = v30;
                uint64_t v0 = v71;
                uint64_t v9 = v73;
              }
              else
              {
                swift_bridgeObjectRelease();
                uint64_t v39 = Logger.logObject.getter();
                os_log_type_t v40 = static os_log_type_t.error.getter();
                if (os_log_type_enabled(v39, v40))
                {
                  uint64_t v41 = (uint8_t *)swift_slowAlloc();
                  *(_WORD *)uint64_t v41 = 0;
                  _os_log_impl((void *)&_mh_execute_header, v39, v40, "documentSource property for answerEntity is nil, this shouldn't happen and is unexpected", v41, 2u);
                  swift_slowDealloc();
                  swift_release();

                  swift_release();
                }
                else
                {
                  swift_release();
                  swift_release();
                }
              }
              goto LABEL_8;
            }
            uint64_t v34 = Logger.logObject.getter();
            os_log_type_t v37 = static os_log_type_t.error.getter();
            if (!os_log_type_enabled(v34, v37))
            {
              swift_release();
LABEL_46:
              swift_release();

              goto LABEL_8;
            }
            uint64_t v38 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v38 = 0;
            _os_log_impl((void *)&_mh_execute_header, v34, v37, "Answer property for answerEntity is nil, this shouldn't happen and is unexpected", v38, 2u);
            swift_slowDealloc();
            swift_release();
          }
          else
          {
            uint64_t v34 = Logger.logObject.getter();
            os_log_type_t v35 = static os_log_type_t.error.getter();
            if (!os_log_type_enabled(v34, v35)) {
              goto LABEL_46;
            }
            char v36 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)char v36 = 0;
            _os_log_impl((void *)&_mh_execute_header, v34, v35, "no answer", v36, 2u);
            swift_slowDealloc();
          }

LABEL_41:
          swift_release();
          goto LABEL_8;
        }
        char v26 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if (v26) {
          goto LABEL_28;
        }
      }
      swift_retain_n();
      id v19 = Logger.logObject.getter();
      os_log_type_t v20 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v19, v20))
      {
        uint64_t v21 = swift_slowAlloc();
        v77[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v21 = 136315138;
        swift_retain();
        EntityProperty.wrappedValue.getter();
        swift_release();
        uint64_t v22 = v0[29];
        if (v22) {
          uint64_t v23 = v0[28];
        }
        else {
          uint64_t v23 = 7104878;
        }
        if (v22) {
          unint64_t v24 = v0[29];
        }
        else {
          unint64_t v24 = 0xE300000000000000;
        }
        *(void *)(v21 + 4) = sub_100021444(v23, v24, v77);
        swift_bridgeObjectRelease();
        swift_release_n();
        _os_log_impl((void *)&_mh_execute_header, v19, v20, "unhandled result type: %s", (uint8_t *)v21, 0xCu);
        swift_arrayDestroy();
        uint64_t v9 = v73;
        swift_slowDealloc();
        swift_slowDealloc();

        goto LABEL_41;
      }
      swift_release_n();

LABEL_8:
      if (v9 == ++v10)
      {
        swift_bridgeObjectRelease();
        char v42 = (void *)*v68;
        goto LABEL_53;
      }
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1000AB82C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_1000AB8A8()
{
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  if (!*(void *)(v0 + 40))
  {
    Hasher._combine(_:)(0);
    if (*(void *)(v0 + 56)) {
      goto LABEL_3;
    }
LABEL_7:
    Hasher._combine(_:)(0);
    return;
  }
  Hasher._combine(_:)(1u);
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  if (!*(void *)(v0 + 56)) {
    goto LABEL_7;
  }
LABEL_3:
  Hasher._combine(_:)(1u);
  swift_bridgeObjectRetain();
  String.hash(into:)();

  swift_bridgeObjectRelease();
}

uint64_t sub_1000AB9B8(void *a1)
{
  uint64_t v3 = sub_1000063C0(&qword_1002002F0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100044740(a1, a1[3]);
  sub_1000AC4F0();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v8[15] = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v1)
  {
    v8[14] = 1;
    KeyedEncodingContainer.encode(_:forKey:)();
    v8[13] = 2;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    v8[12] = 3;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1000ABB68()
{
  uint64_t result = 0x736E4174726F6873;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x656372756F73;
      break;
    case 2:
      uint64_t result = 0x656C746974;
      break;
    case 3:
      uint64_t result = 0x676F6C616964;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000ABBF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000AC8E0(a1, a2);
  *a3 = result;
  return result;
}

void sub_1000ABC1C(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_1000ABC28(uint64_t a1)
{
  unint64_t v2 = sub_1000AC4F0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000ABC64(uint64_t a1)
{
  unint64_t v2 = sub_1000AC4F0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000ABCA0(void *a1)
{
  return sub_1000AB9B8(a1);
}

uint64_t sub_1000ABCB8(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  long long v3 = a1[3];
  void v7[2] = a1[2];
  v7[3] = v3;
  long long v4 = a2[1];
  v8[0] = *a2;
  v8[1] = v4;
  long long v5 = a2[3];
  v8[2] = a2[2];
  void v8[3] = v5;
  return sub_1000AC544(v7, v8) & 1;
}

Swift::Int sub_1000ABD04()
{
  return Hasher._finalize()();
}

Swift::Int sub_1000ABD48()
{
  return Hasher._finalize()();
}

uint64_t sub_1000ABD84()
{
  uint64_t v0 = sub_1000063C0(&qword_1001FC4F0);
  __chkstk_darwin(v0 - 8);
  long long v2 = (char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for UTType();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  static AppIntentPerformOptions.defaultConnectionOperationTimeout.getter();
  return AppIntentPerformOptions.init(allowsPrepareBeforePerform:connectionOperationTimeout:donateToTranscript:exportedContentType:interactionMode:kind:preferredBundleIdentifier:preferNoticePresentation:requestUnlockIfNeeded:)();
}

uint64_t sub_1000ABE64()
{
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for UserInfoSearcher()
{
  return self;
}

uint64_t sub_1000ABEC0()
{
  uint64_t v1 = type metadata accessor for IntentsServices.PayloadPrivacy();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin();
  long long v4 = (char *)&v15[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for IntentsServices.DispatcherOptions();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  unint64_t v8 = (char *)&v15[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = [self defaultEnvironment];
  v15[3] = sub_1000AC1D0();
  v15[4] = &protocol witness table for LNEnvironment;
  v15[0] = v9;
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, enum case for IntentsServices.PayloadPrivacy.default(_:), v1);
  IntentsServices.DispatcherOptions.init(payloadPrivacy:)();
  uint64_t v10 = static IntentsServices.localDispatcher(clientLabel:source:environment:options:)();
  uint64_t v12 = v11;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_100027DBC((uint64_t)v15);
  *(void *)(v0 + 16) = v10;
  *(void *)(v0 + 24) = v12;
  return v0;
}

unint64_t sub_1000AC0B0()
{
  unint64_t result = qword_1002002C0;
  if (!qword_1002002C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002002C0);
  }
  return result;
}

unint64_t sub_1000AC104()
{
  unint64_t result = qword_1002002C8;
  if (!qword_1002002C8)
  {
    sub_100006C14(&qword_1002002D0);
    sub_1000AC178();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002002C8);
  }
  return result;
}

unint64_t sub_1000AC178()
{
  unint64_t result = qword_1002002D8;
  if (!qword_1002002D8)
  {
    type metadata accessor for SearchEntity(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002002D8);
  }
  return result;
}

unint64_t sub_1000AC1D0()
{
  unint64_t result = qword_1002002E0;
  if (!qword_1002002E0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1002002E0);
  }
  return result;
}

uint64_t destroy for SynthesizedAnswer()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for SynthesizedAnswer(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for SynthesizedAnswer(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for SynthesizedAnswer(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

void *assignWithTake for SynthesizedAnswer(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SynthesizedAnswer(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SynthesizedAnswer(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SynthesizedAnswer()
{
  return &type metadata for SynthesizedAnswer;
}

unint64_t sub_1000AC49C()
{
  unint64_t result = qword_1002002E8;
  if (!qword_1002002E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002002E8);
  }
  return result;
}

unint64_t sub_1000AC4F0()
{
  unint64_t result = qword_1002002F8;
  if (!qword_1002002F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002002F8);
  }
  return result;
}

uint64_t sub_1000AC544(void *a1, void *a2)
{
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (v5 = _stringCompareWithSmolCheck(_:_:expecting:)(), uint64_t result = 0, (v5 & 1) != 0))
  {
    BOOL v7 = a1[2] == a2[2] && a1[3] == a2[3];
    if (v7 || (v8 = _stringCompareWithSmolCheck(_:_:expecting:)(), uint64_t result = 0, (v8 & 1) != 0))
    {
      uint64_t v9 = a1[5];
      uint64_t v10 = a2[5];
      if (v9)
      {
        if (!v10) {
          return 0;
        }
        if (a1[4] != a2[4] || v9 != v10)
        {
          char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
          uint64_t result = 0;
          if ((v11 & 1) == 0) {
            return result;
          }
        }
      }
      else if (v10)
      {
        return 0;
      }
      uint64_t v12 = a1[7];
      uint64_t v13 = a2[7];
      if (v12)
      {
        if (v13 && (a1[6] == a2[6] && v12 == v13 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)) {
          return 1;
        }
      }
      else if (!v13)
      {
        return 1;
      }
      return 0;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for SynthesizedAnswer.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for SynthesizedAnswer.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000AC7A0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SynthesizedAnswer.CodingKeys()
{
  return &type metadata for SynthesizedAnswer.CodingKeys;
}

unint64_t sub_1000AC7DC()
{
  unint64_t result = qword_100200300;
  if (!qword_100200300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100200300);
  }
  return result;
}

unint64_t sub_1000AC834()
{
  unint64_t result = qword_100200308;
  if (!qword_100200308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100200308);
  }
  return result;
}

unint64_t sub_1000AC88C()
{
  unint64_t result = qword_100200310;
  if (!qword_100200310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100200310);
  }
  return result;
}

uint64_t sub_1000AC8E0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x736E4174726F6873 && a2 == 0xEB00000000726577;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656372756F73 && a2 == 0xE600000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x676F6C616964 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t type metadata accessor for SearchEntity(uint64_t a1)
{
  return sub_10005AFA8(a1, (uint64_t *)&unk_100200348);
}

uint64_t sub_1000ACABC()
{
  return swift_initClassMetadata2();
}

unint64_t sub_1000ACB14()
{
  return 0xD000000000000028;
}

uint64_t sub_1000ACB30()
{
  return 0x6F54686372616553;
}

uint64_t sub_1000ACB50()
{
  uint64_t v0 = 7104878;
  _StringGuts.grow(_:)(80);
  v1._uint64_t countAndFlagsBits = 0xD000000000000015;
  v1._uint64_t object = (void *)0x800000010019ED80;
  String.append(_:)(v1);
  swift_retain();
  EntityProperty.wrappedValue.getter();
  swift_release();
  if (v31) {
    uint64_t v2 = v30;
  }
  else {
    uint64_t v2 = 7104878;
  }
  unint64_t v3 = 0xE300000000000000;
  if (v31) {
    unint64_t v4 = v31;
  }
  else {
    unint64_t v4 = 0xE300000000000000;
  }
  unint64_t v5 = v4;
  String.append(_:)(*(Swift::String *)&v2);
  swift_bridgeObjectRelease();
  v6._uint64_t countAndFlagsBits = 0x3D6570797420;
  v6._uint64_t object = (void *)0xE600000000000000;
  String.append(_:)(v6);
  swift_retain();
  EntityProperty.wrappedValue.getter();
  swift_release();
  uint64_t v7 = 7104878;
  if (v30 != 23)
  {
    swift_retain();
    EntityProperty.wrappedValue.getter();
    swift_release();
    uint64_t v7 = String.init<A>(describing:)();
    unint64_t v3 = v8;
  }
  unint64_t v9 = v3;
  String.append(_:)(*(Swift::String *)&v7);
  swift_bridgeObjectRelease();
  v10._uint64_t countAndFlagsBits = 0x69746E4570706120;
  v10._uint64_t object = (void *)0xEB000000003D7974;
  String.append(_:)(v10);
  swift_retain();
  EntityProperty.wrappedValue.getter();
  swift_release();
  swift_release();
  char v11 = (void *)0xE300000000000000;
  if (v30)
  {
    swift_retain();
    EntityProperty.wrappedValue.getter();
    swift_release();
    uint64_t v12 = sub_1000ADBFC();
    uint64_t v14 = v13;
    swift_release();
  }
  else
  {
    uint64_t v12 = 7104878;
    uint64_t v14 = (void *)0xE300000000000000;
  }
  v15._uint64_t countAndFlagsBits = v12;
  v15._uint64_t object = v14;
  String.append(_:)(v15);
  swift_bridgeObjectRelease();
  v16._uint64_t countAndFlagsBits = 1029990688;
  v16._uint64_t object = (void *)0xE400000000000000;
  String.append(_:)(v16);
  swift_retain();
  EntityProperty.wrappedValue.getter();
  swift_release();
  if (v31) {
    uint64_t v17 = v30;
  }
  else {
    uint64_t v17 = 7104878;
  }
  if (v31) {
    unint64_t v18 = v31;
  }
  else {
    unint64_t v18 = 0xE300000000000000;
  }
  unint64_t v19 = v18;
  String.append(_:)(*(Swift::String *)&v17);
  swift_bridgeObjectRelease();
  v20._uint64_t object = (void *)0x800000010019EDA0;
  v20._uint64_t countAndFlagsBits = 0xD000000000000011;
  String.append(_:)(v20);
  swift_retain();
  EntityProperty.wrappedValue.getter();
  swift_release();
  swift_release();
  if (v30)
  {
    swift_retain();
    EntityProperty.wrappedValue.getter();
    swift_release();
    uint64_t v21 = sub_1000AE0A4();
    char v11 = v22;
    swift_release();
  }
  else
  {
    uint64_t v21 = 7104878;
  }
  v23._uint64_t countAndFlagsBits = v21;
  v23._uint64_t object = v11;
  String.append(_:)(v23);
  swift_bridgeObjectRelease();
  v24._uint64_t countAndFlagsBits = 0x3D726577736E6120;
  v24._uint64_t object = (void *)0xE800000000000000;
  String.append(_:)(v24);
  swift_retain();
  EntityProperty.wrappedValue.getter();
  swift_release();
  swift_release();
  if (v30)
  {
    swift_retain();
    EntityProperty.wrappedValue.getter();
    swift_release();
    uint64_t v0 = sub_1000AE9E0();
    char v26 = v25;
    swift_release();
  }
  else
  {
    char v26 = (void *)0xE300000000000000;
  }
  v27._uint64_t countAndFlagsBits = v0;
  v27._uint64_t object = v26;
  String.append(_:)(v27);
  swift_bridgeObjectRelease();
  v28._uint64_t countAndFlagsBits = 62;
  v28._uint64_t object = (void *)0xE100000000000000;
  String.append(_:)(v28);
  return 0;
}

uint64_t sub_1000ACF54(uint64_t a1)
{
  return sub_1000AE56C(a1, sub_1000ACF6C);
}

uint64_t sub_1000ACF6C(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for CustomAppEntityRepresentationBase.InstanceInfo();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  Swift::String v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = qword_100200318;
  sub_1000063C0(&qword_100200668);
  swift_allocObject();
  swift_retain();
  *(void *)(v1 + v7) = EntityProperty.init(identifier:)();
  uint64_t v8 = qword_100200320;
  sub_1000063C0(&qword_100200678);
  swift_allocObject();
  *(void *)(v1 + v8) = EntityProperty.init(identifier:)();
  uint64_t v9 = qword_100200328;
  sub_1000063C0(&qword_100200680);
  swift_allocObject();
  *(void *)(v1 + v9) = EntityProperty.init(identifier:)();
  uint64_t v10 = qword_100200330;
  swift_allocObject();
  *(void *)(v1 + v10) = EntityProperty.init(identifier:)();
  uint64_t v11 = qword_100200338;
  sub_1000063C0(&qword_100200688);
  swift_allocObject();
  *(void *)(v1 + v11) = EntityProperty.init(identifier:)();
  uint64_t v12 = qword_100200340;
  sub_1000063C0(&qword_100200690);
  swift_allocObject();
  *(void *)(v1 + v12) = EntityProperty.init(identifier:)();
  swift_release();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  uint64_t v13 = CustomAppEntityRepresentationBase.init(_:)();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  return v13;
}

uint64_t sub_1000AD1B4()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_1000AD234()
{
  CustomAppEntityRepresentationBase.deinit();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1000AD2D4()
{
  return type metadata accessor for SearchEntity(0);
}

uint64_t type metadata accessor for SearchAppEntity(uint64_t a1)
{
  return sub_10005AFA8(a1, (uint64_t *)&unk_1002003B8);
}

uint64_t sub_1000AD2FC()
{
  return sub_1000AE810();
}

uint64_t sub_1000AD308()
{
  return sub_1000ACB50();
}

uint64_t sub_1000AD32C()
{
  return dispatch thunk of CustomAppEntityRepresentationBase.displayRepresentation.getter();
}

uint64_t sub_1000AD350()
{
  return dispatch thunk of CustomAppEntityRepresentationBase.identifier.getter();
}

uint64_t sub_1000AD374()
{
  return dispatch thunk of CustomAppEntityRepresentationBase.isTransient.getter() & 1;
}

uint64_t sub_1000AD39C()
{
  return dispatch thunk of CustomAppEntityRepresentationBase.properties.getter();
}

uint64_t sub_1000AD3C0()
{
  return 0x6E45686372616553;
}

uint64_t sub_1000AD3E0(uint64_t a1)
{
  uint64_t v3 = sub_1000AF608(&qword_100200648, (void (*)(uint64_t))type metadata accessor for SearchEntity);

  return static IntentValueTypeIdentifiable.canConvertFrom(_:)(a1, v1, v3);
}

uint64_t sub_1000AD450()
{
  uint64_t v1 = sub_1000AF608(&qword_100200638, (void (*)(uint64_t))type metadata accessor for SearchEntity);

  return static AppEntityTypeDescribing.lnValueType.getter(v0, v1);
}

uint64_t sub_1000AD4B0()
{
  return CustomAppEntityRepresentationBase.lnValue.getter();
}

uint64_t sub_1000AD4D4(uint64_t a1)
{
  uint64_t v3 = sub_1000AF608(&qword_100200648, (void (*)(uint64_t))type metadata accessor for SearchEntity);

  return static IntentValueTypeIdentifiable.canConvert(_:)(a1, v1, v3);
}

uint64_t sub_1000AD544@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = static CustomAppEntityRepresentationBase.from(_:context:)();
  *a1 = result;
  return result;
}

uint64_t sub_1000AD56C()
{
  return dispatch thunk of CustomAppEntityRepresentationBase.origin.getter();
}

uint64_t sub_1000AD590()
{
  return dispatch thunk of CustomAppEntityRepresentationBase.exportedContent.getter();
}

unint64_t sub_1000AD5B4(char a1)
{
  unint64_t result = 0x746E657665;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6567616D69;
      break;
    case 2:
      unint64_t result = 1701603686;
      break;
    case 3:
      unint64_t result = 1818845549;
      break;
    case 4:
      unint64_t result = 0x6567617373656DLL;
      break;
    case 5:
      unint64_t result = 0x7261646E656C6163;
      break;
    case 6:
      unint64_t result = 1702129518;
      break;
    case 7:
    case 12:
      unint64_t result = 0xD000000000000011;
      break;
    case 8:
      unint64_t result = 0x615074656C6C6177;
      break;
    case 9:
      unint64_t result = 0x746361746E6F63;
      break;
    case 10:
      unint64_t result = 0x46746E6174736E69;
      break;
    case 11:
      unint64_t result = 0x48746E6174736E69;
      break;
    case 13:
      unint64_t result = 7300455;
      break;
    case 14:
      unint64_t result = 0x6567616D49626577;
      break;
    case 15:
      unint64_t result = 0x6577736E41626577;
      break;
    case 16:
      unint64_t result = 0x6764656C776F6E6BLL;
      break;
    case 17:
      unint64_t result = 0x636972656E6567;
      break;
    case 18:
      unint64_t result = 0x7469746E45707061;
      break;
    case 19:
      unint64_t result = 0x6C61626F6C67;
      break;
    case 20:
      unint64_t result = 0x6867696C746F7073;
      break;
    case 21:
      unint64_t result = 0x726577736E61;
      break;
    case 22:
      unint64_t result = 0x6946746E65746E69;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000AD85C(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_1000AD5B4(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_1000AD5B4(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

Swift::Int sub_1000AD8E8()
{
  char v1 = *v0;
  Hasher.init(_seed:)();
  sub_1000AD5B4(v1);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t sub_1000AD94C()
{
  sub_1000AD5B4(*v0);
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1000AD9A0()
{
  char v1 = *v0;
  Hasher.init(_seed:)();
  sub_1000AD5B4(v1);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t sub_1000ADA00@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1000B0040();
  *a1 = result;
  return result;
}

unint64_t sub_1000ADA30@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1000AD5B4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1000ADA5C()
{
  return 0xD000000000000010;
}

void sub_1000ADA78(void *a1@<X8>)
{
  *a1 = &off_1001EA678;
}

uint64_t sub_1000ADA88(uint64_t a1)
{
  unint64_t v2 = sub_1000B0094();

  return static AppEnumRepresentation.lnValueType.getter(a1, v2);
}

uint64_t sub_1000ADAC4(uint64_t a1)
{
  unint64_t v2 = sub_1000B0094();

  return AppEnumRepresentation.lnValue.getter(a1, v2);
}

uint64_t sub_1000ADB00(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1000AF290();

  return static IntentValueTypeIdentifiable.canConvert(_:)(a1, a2, v4);
}

uint64_t sub_1000ADB4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1000B0094();

  return static AppEnumRepresentation.from(_:context:)(a1, a2, a3, v6);
}

uint64_t sub_1000ADBB0(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1000AF290();

  return static IntentValueTypeIdentifiable.canConvertFrom(_:)(a1, a2, v4);
}

uint64_t sub_1000ADBFC()
{
  _StringGuts.grow(_:)(59);
  v0._uint64_t object = (void *)0x800000010019EDC0;
  v0._uint64_t countAndFlagsBits = 0xD000000000000014;
  String.append(_:)(v0);
  swift_retain();
  EntityProperty.wrappedValue.getter();
  swift_release();
  if (v19) {
    uint64_t v1 = v18;
  }
  else {
    uint64_t v1 = 7104878;
  }
  if (v19) {
    unint64_t v2 = v19;
  }
  else {
    unint64_t v2 = 0xE300000000000000;
  }
  unint64_t v3 = v2;
  String.append(_:)(*(Swift::String *)&v1);
  swift_bridgeObjectRelease();
  v4._uint64_t countAndFlagsBits = 0x49656C646E756220;
  v4._uint64_t object = (void *)0xEA00000000003D64;
  String.append(_:)(v4);
  swift_retain();
  EntityProperty.wrappedValue.getter();
  swift_release();
  if (v19) {
    uint64_t v5 = v18;
  }
  else {
    uint64_t v5 = 7104878;
  }
  if (v19) {
    unint64_t v6 = v19;
  }
  else {
    unint64_t v6 = 0xE300000000000000;
  }
  unint64_t v7 = v6;
  String.append(_:)(*(Swift::String *)&v5);
  swift_bridgeObjectRelease();
  v8._uint64_t countAndFlagsBits = 0x3D64496570797420;
  v8._uint64_t object = (void *)0xE800000000000000;
  String.append(_:)(v8);
  swift_retain();
  EntityProperty.wrappedValue.getter();
  swift_release();
  if (v19) {
    uint64_t v9 = v18;
  }
  else {
    uint64_t v9 = 7104878;
  }
  if (v19) {
    unint64_t v10 = v19;
  }
  else {
    unint64_t v10 = 0xE300000000000000;
  }
  unint64_t v11 = v10;
  String.append(_:)(*(Swift::String *)&v9);
  swift_bridgeObjectRelease();
  v12._uint64_t countAndFlagsBits = 0x6F636F746F727020;
  v12._uint64_t object = (void *)0xEC0000003D64496CLL;
  String.append(_:)(v12);
  swift_retain();
  EntityProperty.wrappedValue.getter();
  swift_release();
  if (v19) {
    uint64_t v13 = v18;
  }
  else {
    uint64_t v13 = 7104878;
  }
  if (v19) {
    unint64_t v14 = v19;
  }
  else {
    unint64_t v14 = 0xE300000000000000;
  }
  unint64_t v15 = v14;
  String.append(_:)(*(Swift::String *)&v13);
  swift_bridgeObjectRelease();
  v16._uint64_t countAndFlagsBits = 62;
  v16._uint64_t object = (void *)0xE100000000000000;
  String.append(_:)(v16);
  return 0;
}

uint64_t sub_1000ADE10(uint64_t a1)
{
  return sub_1000ADE34(a1, &qword_100200398, &qword_1002003A0, &qword_1002003A8, &qword_1002003B0);
}

uint64_t sub_1000ADE34(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t *a4, uint64_t *a5)
{
  return sub_1000AEC0C(a1, a2, a3, a4, a5);
}

uint64_t sub_1000ADEA0()
{
  return sub_1000AEE10();
}

uint64_t sub_1000ADEC4()
{
  return sub_1000AEEA0();
}

uint64_t sub_1000ADEE8()
{
  return type metadata accessor for SearchAppEntity(0);
}

uint64_t type metadata accessor for SearchSpotlightEntity(uint64_t a1)
{
  return sub_10005AFA8(a1, (uint64_t *)&unk_100200428);
}

uint64_t sub_1000ADF10()
{
  return sub_1000AE810();
}

uint64_t sub_1000ADF1C()
{
  return sub_1000ADBFC();
}

uint64_t sub_1000ADF40()
{
  return 0x7041686372616553;
}

uint64_t sub_1000ADF64(uint64_t a1)
{
  uint64_t v3 = sub_1000AF608(&qword_100200608, (void (*)(uint64_t))type metadata accessor for SearchAppEntity);

  return static IntentValueTypeIdentifiable.canConvertFrom(_:)(a1, v1, v3);
}

uint64_t sub_1000ADFD4()
{
  uint64_t v1 = sub_1000AF608(&qword_1002005F8, (void (*)(uint64_t))type metadata accessor for SearchAppEntity);

  return static AppEntityTypeDescribing.lnValueType.getter(v0, v1);
}

uint64_t sub_1000AE034(uint64_t a1)
{
  uint64_t v3 = sub_1000AF608(&qword_100200608, (void (*)(uint64_t))type metadata accessor for SearchAppEntity);

  return static IntentValueTypeIdentifiable.canConvert(_:)(a1, v1, v3);
}

uint64_t sub_1000AE0A4()
{
  uint64_t v0 = sub_1000063C0(&qword_100200650);
  uint64_t v1 = __chkstk_darwin(v0 - 8);
  os_log_type_t v37 = (char *)&v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v38 = (char *)&v37 - v4;
  uint64_t v5 = __chkstk_darwin(v3);
  unint64_t v7 = (char *)&v37 - v6;
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v37 - v8;
  uint64_t v41 = 0;
  unint64_t v42 = 0xE000000000000000;
  _StringGuts.grow(_:)(93);
  v10._uint64_t countAndFlagsBits = 0xD000000000000026;
  v10._uint64_t object = (void *)0x800000010019EDE0;
  String.append(_:)(v10);
  swift_retain();
  EntityProperty.wrappedValue.getter();
  swift_release();
  if (v40) {
    uint64_t v11 = v39;
  }
  else {
    uint64_t v11 = 7104878;
  }
  Swift::String v12 = (void *)0xE300000000000000;
  if (v40) {
    unint64_t v13 = v40;
  }
  else {
    unint64_t v13 = 0xE300000000000000;
  }
  unint64_t v14 = v13;
  String.append(_:)(*(Swift::String *)&v11);
  swift_bridgeObjectRelease();
  v15._uint64_t countAndFlagsBits = 0x3D656C74697420;
  v15._uint64_t object = (void *)0xE700000000000000;
  String.append(_:)(v15);
  swift_retain();
  EntityProperty.wrappedValue.getter();
  swift_release();
  if (v40) {
    uint64_t v16 = v39;
  }
  else {
    uint64_t v16 = 7104878;
  }
  if (v40) {
    unint64_t v17 = v40;
  }
  else {
    unint64_t v17 = 0xE300000000000000;
  }
  unint64_t v18 = v17;
  String.append(_:)(*(Swift::String *)&v16);
  swift_bridgeObjectRelease();
  v19._uint64_t object = (void *)0x800000010019EE10;
  v19._uint64_t countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v19);
  swift_retain();
  EntityProperty.wrappedValue.getter();
  swift_release();
  uint64_t v20 = type metadata accessor for IntentFileRepresentation();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48);
  int v23 = v22(v9, 1, v20);
  sub_1000AFFE0((uint64_t)v9);
  uint64_t v24 = 7104878;
  if (v23 != 1)
  {
    swift_retain();
    EntityProperty.wrappedValue.getter();
    swift_release();
    uint64_t result = v22(v7, 1, v20);
    if (result == 1)
    {
      __break(1u);
      goto LABEL_22;
    }
    sub_1000AF608(&qword_100200658, (void (*)(uint64_t))&type metadata accessor for IntentFileRepresentation);
    uint64_t v24 = dispatch thunk of CustomStringConvertible.description.getter();
    Swift::String v12 = v26;
    (*(void (**)(char *, uint64_t))(v21 + 8))(v7, v20);
  }
  v27._uint64_t countAndFlagsBits = v24;
  v27._uint64_t object = v12;
  String.append(_:)(v27);
  swift_bridgeObjectRelease();
  v28._uint64_t countAndFlagsBits = 0xD000000000000017;
  v28._uint64_t object = (void *)0x800000010019EE30;
  String.append(_:)(v28);
  swift_retain();
  uint64_t v29 = (uint64_t)v38;
  EntityProperty.wrappedValue.getter();
  swift_release();
  int v30 = v22((char *)v29, 1, v20);
  sub_1000AFFE0(v29);
  if (v30 == 1)
  {
    unint64_t v31 = (void *)0xE300000000000000;
    uint64_t v32 = 7104878;
LABEL_20:
    v35._uint64_t countAndFlagsBits = v32;
    v35._uint64_t object = v31;
    String.append(_:)(v35);
    swift_bridgeObjectRelease();
    v36._uint64_t countAndFlagsBits = 62;
    v36._uint64_t object = (void *)0xE100000000000000;
    String.append(_:)(v36);
    return v41;
  }
  swift_retain();
  uint64_t v33 = v37;
  EntityProperty.wrappedValue.getter();
  swift_release();
  uint64_t result = v22(v33, 1, v20);
  if (result != 1)
  {
    sub_1000AF608(&qword_100200658, (void (*)(uint64_t))&type metadata accessor for IntentFileRepresentation);
    uint64_t v32 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v31 = v34;
    (*(void (**)(char *, uint64_t))(v21 + 8))(v33, v20);
    goto LABEL_20;
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_1000AE554(uint64_t a1)
{
  return sub_1000AE56C(a1, sub_1000AE5B8);
}

uint64_t sub_1000AE56C(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  return a2(a1);
}

uint64_t sub_1000AE5B8(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for CustomAppEntityRepresentationBase.InstanceInfo();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = qword_100200408;
  sub_1000063C0(&qword_100200668);
  swift_allocObject();
  swift_retain();
  *(void *)(v1 + v7) = EntityProperty.init(identifier:)();
  uint64_t v8 = qword_100200410;
  swift_allocObject();
  *(void *)(v1 + v8) = EntityProperty.init(identifier:)();
  uint64_t v9 = qword_100200418;
  sub_1000063C0(&qword_100200670);
  swift_allocObject();
  *(void *)(v1 + v9) = EntityProperty.init(identifier:)();
  uint64_t v10 = qword_100200420;
  swift_allocObject();
  *(void *)(v1 + v10) = EntityProperty.init(identifier:)();
  swift_release();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  uint64_t v11 = CustomAppEntityRepresentationBase.init(_:)();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  return v11;
}

uint64_t sub_1000AE794()
{
  return sub_1000AEE10();
}

uint64_t sub_1000AE7B8()
{
  return sub_1000AEEA0();
}

uint64_t sub_1000AE7DC()
{
  return type metadata accessor for SearchSpotlightEntity(0);
}

uint64_t type metadata accessor for SearchAnswerEntity(uint64_t a1)
{
  return sub_10005AFA8(a1, (uint64_t *)&unk_100200498);
}

uint64_t sub_1000AE804()
{
  return sub_1000AE810();
}

uint64_t sub_1000AE810()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1000AE860()
{
  return sub_1000AE0A4();
}

unint64_t sub_1000AE884()
{
  return 0xD000000000000015;
}

uint64_t sub_1000AE8A0(uint64_t a1)
{
  uint64_t v3 = sub_1000AF608(&qword_1002005C0, (void (*)(uint64_t))type metadata accessor for SearchSpotlightEntity);

  return static IntentValueTypeIdentifiable.canConvertFrom(_:)(a1, v1, v3);
}

uint64_t sub_1000AE910()
{
  uint64_t v1 = sub_1000AF608(&qword_1002005B0, (void (*)(uint64_t))type metadata accessor for SearchSpotlightEntity);

  return static AppEntityTypeDescribing.lnValueType.getter(v0, v1);
}

uint64_t sub_1000AE970(uint64_t a1)
{
  uint64_t v3 = sub_1000AF608(&qword_1002005C0, (void (*)(uint64_t))type metadata accessor for SearchSpotlightEntity);

  return static IntentValueTypeIdentifiable.canConvert(_:)(a1, v1, v3);
}

uint64_t sub_1000AE9E0()
{
  _StringGuts.grow(_:)(58);
  v0._uint64_t object = (void *)0x800000010019EE50;
  v0._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
  String.append(_:)(v0);
  swift_retain();
  EntityProperty.wrappedValue.getter();
  swift_release();
  if (v19) {
    uint64_t v1 = v18;
  }
  else {
    uint64_t v1 = 7104878;
  }
  if (v19) {
    unint64_t v2 = v19;
  }
  else {
    unint64_t v2 = 0xE300000000000000;
  }
  unint64_t v3 = v2;
  String.append(_:)(*(Swift::String *)&v1);
  swift_bridgeObjectRelease();
  v4._uint64_t countAndFlagsBits = 0x3D656C74697420;
  v4._uint64_t object = (void *)0xE700000000000000;
  String.append(_:)(v4);
  swift_retain();
  EntityProperty.wrappedValue.getter();
  swift_release();
  if (v19) {
    uint64_t v5 = v18;
  }
  else {
    uint64_t v5 = 7104878;
  }
  if (v19) {
    unint64_t v6 = v19;
  }
  else {
    unint64_t v6 = 0xE300000000000000;
  }
  unint64_t v7 = v6;
  String.append(_:)(*(Swift::String *)&v5);
  swift_bridgeObjectRelease();
  v8._uint64_t countAndFlagsBits = 0x3D656C74697420;
  v8._uint64_t object = (void *)0xE700000000000000;
  String.append(_:)(v8);
  swift_retain();
  EntityProperty.wrappedValue.getter();
  swift_release();
  if (v19) {
    uint64_t v9 = v18;
  }
  else {
    uint64_t v9 = 7104878;
  }
  if (v19) {
    unint64_t v10 = v19;
  }
  else {
    unint64_t v10 = 0xE300000000000000;
  }
  unint64_t v11 = v10;
  String.append(_:)(*(Swift::String *)&v9);
  swift_bridgeObjectRelease();
  v12._uint64_t countAndFlagsBits = 0x3D676F6C61696420;
  v12._uint64_t object = (void *)0xE800000000000000;
  String.append(_:)(v12);
  swift_retain();
  EntityProperty.wrappedValue.getter();
  swift_release();
  if (v19) {
    uint64_t v13 = v18;
  }
  else {
    uint64_t v13 = 7104878;
  }
  if (v19) {
    unint64_t v14 = v19;
  }
  else {
    unint64_t v14 = 0xE300000000000000;
  }
  unint64_t v15 = v14;
  String.append(_:)(*(Swift::String *)&v13);
  swift_bridgeObjectRelease();
  v16._uint64_t countAndFlagsBits = 62;
  v16._uint64_t object = (void *)0xE100000000000000;
  String.append(_:)(v16);
  return 0;
}

uint64_t sub_1000AEBE8(uint64_t a1)
{
  return sub_1000ADE34(a1, &qword_100200478, &qword_100200480, &qword_100200488, &qword_100200490);
}

uint64_t sub_1000AEC0C(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t *a4, uint64_t *a5)
{
  uint64_t v21 = a5;
  uint64_t v10 = type metadata accessor for CustomAppEntityRepresentationBase.InstanceInfo();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *a2;
  sub_1000063C0(&qword_100200668);
  swift_allocObject();
  swift_retain();
  *(void *)(v5 + v14) = EntityProperty.init(identifier:)();
  uint64_t v15 = *a3;
  swift_allocObject();
  *(void *)(v5 + v15) = EntityProperty.init(identifier:)();
  uint64_t v16 = *a4;
  swift_allocObject();
  *(void *)(v5 + v16) = EntityProperty.init(identifier:)();
  uint64_t v17 = *v21;
  swift_allocObject();
  *(void *)(v5 + v17) = EntityProperty.init(identifier:)();
  swift_release();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, v10);
  uint64_t v18 = CustomAppEntityRepresentationBase.init(_:)();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a1, v10);
  return v18;
}

uint64_t sub_1000AEDEC()
{
  return sub_1000AEE10();
}

uint64_t sub_1000AEE10()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_1000AEE7C()
{
  return sub_1000AEEA0();
}

uint64_t sub_1000AEEA0()
{
  CustomAppEntityRepresentationBase.deinit();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1000AEF30()
{
  return type metadata accessor for SearchAnswerEntity(0);
}

uint64_t getEnumTagSinglePayload for SearchResultType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xEA) {
    goto LABEL_17;
  }
  if (a2 + 22 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 22) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 22;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 22;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 22;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x17;
  int v8 = v6 - 23;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for SearchResultType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 22 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 22) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE9)
  {
    unsigned int v6 = ((a2 - 234) >> 8) + 1;
    *uint64_t result = a2 + 22;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000AF094);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 22;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchResultType()
{
  return &type metadata for SearchResultType;
}

unint64_t sub_1000AF0D0()
{
  unint64_t result = qword_1002004E8;
  if (!qword_1002004E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002004E8);
  }
  return result;
}

unint64_t sub_1000AF128()
{
  unint64_t result = qword_1002004F0;
  if (!qword_1002004F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002004F0);
  }
  return result;
}

unint64_t sub_1000AF180()
{
  unint64_t result = qword_1002004F8;
  if (!qword_1002004F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002004F8);
  }
  return result;
}

unint64_t sub_1000AF1D8()
{
  unint64_t result = qword_100200500;
  if (!qword_100200500)
  {
    sub_100006C14(&qword_100200508);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100200500);
  }
  return result;
}

unint64_t sub_1000AF238()
{
  unint64_t result = qword_100200510;
  if (!qword_100200510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100200510);
  }
  return result;
}

unint64_t sub_1000AF290()
{
  unint64_t result = qword_100200518;
  if (!qword_100200518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100200518);
  }
  return result;
}

unint64_t sub_1000AF2E8()
{
  unint64_t result = qword_100200520;
  if (!qword_100200520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100200520);
  }
  return result;
}

unint64_t sub_1000AF340()
{
  unint64_t result = qword_100200528;
  if (!qword_100200528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100200528);
  }
  return result;
}

void *sub_1000AF394()
{
  return &protocol witness table for String;
}

unint64_t sub_1000AF3A4()
{
  unint64_t result = qword_100200530;
  if (!qword_100200530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100200530);
  }
  return result;
}

uint64_t sub_1000AF3F8()
{
  return sub_1000AE9E0();
}

unint64_t sub_1000AF41C()
{
  return 0xD000000000000012;
}

uint64_t sub_1000AF438(uint64_t a1)
{
  uint64_t v3 = sub_1000AF608(&qword_100200578, (void (*)(uint64_t))type metadata accessor for SearchAnswerEntity);

  return static IntentValueTypeIdentifiable.canConvertFrom(_:)(a1, v1, v3);
}

uint64_t sub_1000AF4A8()
{
  uint64_t v1 = sub_1000AF608(&qword_100200568, (void (*)(uint64_t))type metadata accessor for SearchAnswerEntity);

  return static AppEntityTypeDescribing.lnValueType.getter(v0, v1);
}

uint64_t sub_1000AF508(uint64_t a1)
{
  uint64_t v3 = sub_1000AF608(&qword_100200578, (void (*)(uint64_t))type metadata accessor for SearchAnswerEntity);

  return static IntentValueTypeIdentifiable.canConvert(_:)(a1, v1, v3);
}

uint64_t sub_1000AF578()
{
  return sub_1000AF608(&qword_100200538, (void (*)(uint64_t))type metadata accessor for SearchAnswerEntity);
}

uint64_t sub_1000AF5C0()
{
  return sub_1000AF608(&qword_100200540, (void (*)(uint64_t))type metadata accessor for SearchAnswerEntity);
}

uint64_t sub_1000AF608(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000AF650()
{
  return sub_1000AF608(&qword_100200548, (void (*)(uint64_t))type metadata accessor for SearchAnswerEntity);
}

uint64_t sub_1000AF698()
{
  return sub_1000AF608(&qword_100200550, (void (*)(uint64_t))type metadata accessor for SearchAnswerEntity);
}

uint64_t sub_1000AF6E0()
{
  return sub_1000AF608(&qword_100200558, (void (*)(uint64_t))type metadata accessor for SearchAnswerEntity);
}

uint64_t sub_1000AF728()
{
  return sub_1000AF608(&qword_100200560, (void (*)(uint64_t))type metadata accessor for SearchAnswerEntity);
}

uint64_t sub_1000AF770()
{
  return sub_1000AF608(&qword_100200568, (void (*)(uint64_t))type metadata accessor for SearchAnswerEntity);
}

uint64_t sub_1000AF7B8()
{
  return sub_1000AF608(&qword_100200570, (void (*)(uint64_t))type metadata accessor for SearchAnswerEntity);
}

uint64_t sub_1000AF800()
{
  return sub_1000AF608(&qword_100200578, (void (*)(uint64_t))type metadata accessor for SearchAnswerEntity);
}

uint64_t sub_1000AF848()
{
  return sub_1000AF608(&qword_100200580, (void (*)(uint64_t))type metadata accessor for SearchSpotlightEntity);
}

uint64_t sub_1000AF890()
{
  return sub_1000AF608(&qword_100200588, (void (*)(uint64_t))type metadata accessor for SearchSpotlightEntity);
}

uint64_t sub_1000AF8D8()
{
  return sub_1000AF608(&qword_100200590, (void (*)(uint64_t))type metadata accessor for SearchSpotlightEntity);
}

uint64_t sub_1000AF920()
{
  return sub_1000AF608(&qword_100200598, (void (*)(uint64_t))type metadata accessor for SearchSpotlightEntity);
}

uint64_t sub_1000AF968()
{
  return sub_1000AF608(&qword_1002005A0, (void (*)(uint64_t))type metadata accessor for SearchSpotlightEntity);
}

uint64_t sub_1000AF9B0()
{
  return sub_1000AF608(&qword_1002005A8, (void (*)(uint64_t))type metadata accessor for SearchSpotlightEntity);
}

uint64_t sub_1000AF9F8()
{
  return sub_1000AF608(&qword_1002005B0, (void (*)(uint64_t))type metadata accessor for SearchSpotlightEntity);
}

uint64_t sub_1000AFA40()
{
  return sub_1000AF608(&qword_1002005B8, (void (*)(uint64_t))type metadata accessor for SearchSpotlightEntity);
}

uint64_t sub_1000AFA88()
{
  return sub_1000AF608(&qword_1002005C0, (void (*)(uint64_t))type metadata accessor for SearchSpotlightEntity);
}

uint64_t sub_1000AFAD0()
{
  return sub_1000AF608(&qword_1002005C8, (void (*)(uint64_t))type metadata accessor for SearchAppEntity);
}

uint64_t sub_1000AFB18()
{
  return sub_1000AF608(&qword_1002005D0, (void (*)(uint64_t))type metadata accessor for SearchAppEntity);
}

uint64_t sub_1000AFB60()
{
  return sub_1000AF608(&qword_1002005D8, (void (*)(uint64_t))type metadata accessor for SearchAppEntity);
}

uint64_t sub_1000AFBA8()
{
  return sub_1000AF608(&qword_1002005E0, (void (*)(uint64_t))type metadata accessor for SearchAppEntity);
}

uint64_t sub_1000AFBF0()
{
  return sub_1000AF608(&qword_1002005E8, (void (*)(uint64_t))type metadata accessor for SearchAppEntity);
}

uint64_t sub_1000AFC38()
{
  return sub_1000AF608(&qword_1002005F0, (void (*)(uint64_t))type metadata accessor for SearchAppEntity);
}

uint64_t sub_1000AFC80()
{
  return sub_1000AF608(&qword_1002005F8, (void (*)(uint64_t))type metadata accessor for SearchAppEntity);
}

uint64_t sub_1000AFCC8()
{
  return sub_1000AF608(&qword_100200600, (void (*)(uint64_t))type metadata accessor for SearchAppEntity);
}

uint64_t sub_1000AFD10()
{
  return sub_1000AF608(&qword_100200608, (void (*)(uint64_t))type metadata accessor for SearchAppEntity);
}

uint64_t sub_1000AFD58()
{
  return sub_1000AF608(&qword_100200610, (void (*)(uint64_t))type metadata accessor for SearchEntity);
}

uint64_t sub_1000AFDA0()
{
  return sub_1000AF608((unint64_t *)&qword_1002002D8, (void (*)(uint64_t))type metadata accessor for SearchEntity);
}

uint64_t sub_1000AFDE8()
{
  return sub_1000AF608(&qword_100200618, (void (*)(uint64_t))type metadata accessor for SearchEntity);
}

uint64_t sub_1000AFE30()
{
  return sub_1000AF608(&qword_100200620, (void (*)(uint64_t))type metadata accessor for SearchEntity);
}

uint64_t sub_1000AFE78()
{
  return sub_1000AF608(&qword_100200628, (void (*)(uint64_t))type metadata accessor for SearchEntity);
}

uint64_t sub_1000AFEC0()
{
  return sub_1000AF608(&qword_100200630, (void (*)(uint64_t))type metadata accessor for SearchEntity);
}

uint64_t sub_1000AFF08()
{
  return sub_1000AF608(&qword_100200638, (void (*)(uint64_t))type metadata accessor for SearchEntity);
}

uint64_t sub_1000AFF50()
{
  return sub_1000AF608(&qword_100200640, (void (*)(uint64_t))type metadata accessor for SearchEntity);
}

uint64_t sub_1000AFF98()
{
  return sub_1000AF608(&qword_100200648, (void (*)(uint64_t))type metadata accessor for SearchEntity);
}

uint64_t sub_1000AFFE0(uint64_t a1)
{
  uint64_t v2 = sub_1000063C0(&qword_100200650);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000B0040()
{
  unint64_t v0 = _findStringSwitchCaseWithCache(cases:string:cache:)();
  swift_bridgeObjectRelease();
  if (v0 >= 0x17) {
    return 23;
  }
  else {
    return v0;
  }
}

unint64_t sub_1000B0094()
{
  unint64_t result = qword_100200660;
  if (!qword_100200660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100200660);
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchTool()
{
  return &type metadata for SearchTool;
}

ValueMetadata *type metadata accessor for Warnings()
{
  return &type metadata for Warnings;
}

unint64_t sub_1000B012C()
{
  unint64_t result = qword_100200698;
  if (!qword_100200698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100200698);
  }
  return result;
}

unint64_t sub_1000B0184()
{
  unint64_t result = qword_1002006A0;
  if (!qword_1002006A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002006A0);
  }
  return result;
}

unint64_t sub_1000B01DC()
{
  unint64_t result = qword_1002006A8;
  if (!qword_1002006A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002006A8);
  }
  return result;
}

unint64_t sub_1000B0234()
{
  unint64_t result = qword_1002006B0;
  if (!qword_1002006B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002006B0);
  }
  return result;
}

uint64_t sub_1000B0288()
{
  swift_getKeyPath();
  sub_1000B0690();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t sub_1000B02F8@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1000B0690();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + 32);
  return result;
}

uint64_t sub_1000B0370()
{
  return swift_release();
}

void sub_1000B0410(uint64_t a1, char a2)
{
  *(unsigned char *)(a1 + 32) = a2;
  id v2 = [self standardUserDefaults];
  swift_getKeyPath();
  sub_1000B0690();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  Class isa = Bool._bridgeToObjectiveC()().super.super.isa;
  NSString v4 = String._bridgeToObjectiveC()();
  [v2 setValue:isa forKey:v4];
}

uint64_t sub_1000B04E8()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC21WritingToolsUIService25CompositionEducationModel___observationRegistrar;
  uint64_t v2 = type metadata accessor for ObservationRegistrar();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_1000B0590()
{
  return type metadata accessor for CompositionEducationModel();
}

uint64_t type metadata accessor for CompositionEducationModel()
{
  uint64_t result = qword_1002006E8;
  if (!qword_1002006E8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000B05E4()
{
  uint64_t result = type metadata accessor for ObservationRegistrar();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

unint64_t sub_1000B0690()
{
  unint64_t result = qword_1001FEED0;
  if (!qword_1001FEED0)
  {
    type metadata accessor for CompositionEducationModel();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FEED0);
  }
  return result;
}

uint64_t sub_1000B06E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = sub_1000063C0((uint64_t *)&unk_1001FAE40);
  __chkstk_darwin(v6 - 8);
  int v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *a3 = swift_getKeyPath();
  sub_1000063C0(&qword_1001FAE68);
  swift_storeEnumTagMultiPayload();
  uint64_t v9 = (int *)type metadata accessor for ModelResponseView(0);
  uint64_t v10 = (char *)a3 + v9[5];
  type metadata accessor for CommonUIManager();
  sub_1000B4C1C((unint64_t *)&qword_1001FAE20, (void (*)(uint64_t))type metadata accessor for CommonUIManager);
  *(void *)uint64_t v10 = Environment.init<A>(_:)();
  v10[8] = v11 & 1;
  uint64_t v12 = (char *)a3 + v9[6];
  type metadata accessor for PresentationModel();
  sub_1000B4C1C((unint64_t *)&qword_1001FB410, (void (*)(uint64_t))type metadata accessor for PresentationModel);
  *(void *)uint64_t v12 = Environment.init<A>(_:)();
  v12[8] = v13 & 1;
  uint64_t v14 = (char *)a3 + v9[8];
  LOBYTE(v24) = 0;
  State.init(wrappedValue:)();
  uint64_t v15 = v26;
  *uint64_t v14 = v25;
  *((void *)v14 + 1) = v15;
  uint64_t v16 = (uint64_t *)((char *)a3 + v9[9]);
  uint64_t v17 = type metadata accessor for FBKSEvaluation.Subject();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v8, 1, 1, v17);
  id v18 = objc_allocWithZone((Class)type metadata accessor for FBKEvaluationController());
  uint64_t v24 = FBKEvaluationController.init(subject:)();
  State.init(wrappedValue:)();
  uint64_t v19 = v26;
  *uint64_t v16 = v25;
  v16[1] = v19;
  uint64_t v20 = (uint64_t *)((char *)a3 + v9[7]);
  uint64_t v24 = a1;
  type metadata accessor for RewritingModel();
  State.init(wrappedValue:)();
  uint64_t v21 = v26;
  *uint64_t v20 = v25;
  v20[1] = v21;
  return sub_100026FD0(a2, (uint64_t)a3 + v9[10], &qword_1001FB438);
}

uint64_t sub_1000B0970@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1000B4C1C((unint64_t *)&qword_1001FD2A0, (void (*)(uint64_t))type metadata accessor for ToolModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + 88);
  return result;
}

uint64_t sub_1000B0A18()
{
  return swift_release();
}

id sub_1000B0AE8@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1000B4C1C((unint64_t *)&unk_100201540, (void (*)(uint64_t))type metadata accessor for RewritingModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  NSString v4 = *(void **)(v3 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__resultAttributedString);
  *a2 = v4;

  return v4;
}

void sub_1000B0BA8(void **a1)
{
  unint64_t v1 = *a1;
  swift_getKeyPath();
  sub_1000B4C1C((unint64_t *)&unk_100201540, (void (*)(uint64_t))type metadata accessor for RewritingModel);
  id v2 = v1;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
}

uint64_t sub_1000B0C84@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1000B4C1C((unint64_t *)&unk_100201540, (void (*)(uint64_t))type metadata accessor for RewritingModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  *a2 = *(void *)(v3 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__analyticsInstance);
  return swift_retain();
}

uint64_t sub_1000B0D38()
{
  return swift_release();
}

void sub_1000B0E18()
{
  qword_100212910 = 0x407C200000000000;
}

uint64_t property wrapper backing initializer of ModelResponseView.rewritingModel(uint64_t a1)
{
  return sub_1000B0E5C(a1, (void (*)(void))type metadata accessor for RewritingModel);
}

uint64_t property wrapper backing initializer of ModelResponseView.feedbackController(uint64_t a1)
{
  return sub_1000B0E5C(a1, (void (*)(void))&type metadata accessor for FBKEvaluationController);
}

uint64_t sub_1000B0E5C(uint64_t a1, void (*a2)(void))
{
  a2(0);
  State.init(wrappedValue:)();
  return v3;
}

uint64_t sub_1000B0E9C@<X0>(BOOL *a1@<X8>)
{
  type metadata accessor for ModelResponseView(0);
  sub_1000063C0(&qword_100200808);
  State.wrappedValue.getter();
  char v2 = sub_10002F3E0();
  uint64_t result = swift_release();
  *a1 = (v2 & 1) == 0;
  return result;
}

uint64_t ModelResponseView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v55 = a1;
  uint64_t v3 = type metadata accessor for ModelResponseView(0);
  uint64_t v4 = v3 - 8;
  uint64_t v51 = *(void *)(v3 - 8);
  uint64_t v56 = *(void *)(v51 + 64);
  __chkstk_darwin(v3);
  uint64_t v45 = (uint64_t)v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000063C0(&qword_1001FB438);
  __chkstk_darwin(v6);
  v44[0] = (uint64_t)v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000063C0(&qword_1001FB760);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000063C0(&qword_1001FB768);
  __chkstk_darwin(v11 - 8);
  char v13 = (char *)v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000063C0(&qword_1002007E8);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = v16;
  uint64_t v50 = sub_1000063C0(&qword_1002007F0);
  __chkstk_darwin(v50);
  uint64_t v49 = (char *)v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1000063C0(&qword_1002007F8);
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v53 = v18;
  uint64_t v54 = v19;
  __chkstk_darwin(v18);
  uint64_t v52 = (char *)v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v10 = static HorizontalAlignment.center.getter();
  *((void *)v10 + 1) = 0;
  unsigned char v10[16] = 1;
  uint64_t v21 = sub_1000063C0(&qword_100200800);
  sub_1000B168C(v2, (uint64_t)&v10[*(int *)(v21 + 44)]);
  uint64_t v22 = static Alignment.center.getter();
  sub_100019BC8(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v13, 0.0, 1, 0.0, 1, v22, v23);
  sub_10002784C((uint64_t)v10, &qword_1001FB760);
  sub_100008DD4((uint64_t)v13, (uint64_t)v16, &qword_1001FB768);
  sub_10002784C((uint64_t)v13, &qword_1001FB768);
  uint64_t v24 = (uint64_t *)(v2 + *(int *)(v4 + 36));
  uint64_t v25 = (void *)v24[1];
  uint64_t v58 = *v24;
  uint64_t v59 = v25;
  sub_1000063C0(&qword_100200808);
  State.wrappedValue.getter();
  v44[1] = swift_unknownObjectWeakLoadStrong();
  swift_release();
  uint64_t v47 = v2;
  Binding.projectedValue.getter();
  os_log_type_t v48 = type metadata accessor for ModelResponseView;
  uint64_t v26 = v45;
  sub_1000BA6C8(v2, v45, type metadata accessor for ModelResponseView);
  type metadata accessor for MainActor();
  uint64_t v27 = static MainActor.shared.getter();
  uint64_t v28 = *(unsigned __int8 *)(v51 + 80);
  uint64_t v51 = v28 | 7;
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = v27;
  *(void *)(v29 + 24) = &protocol witness table for MainActor;
  sub_1000BA7B4(v26, v29 + ((v28 + 32) & ~v28), type metadata accessor for ModelResponseView);
  uint64_t v30 = static MainActor.shared.getter();
  uint64_t v31 = swift_allocObject();
  *(void *)(v31 + 16) = v30;
  *(void *)(v31 + 24) = &protocol witness table for MainActor;
  Binding.init(get:set:)();
  uint64_t v32 = (uint64_t)v49;
  uint64_t v33 = v50;
  sub_1000EF1D8(1, 0, v44[0], v58, (uint64_t)v59, v60, (uint64_t)&v49[*(int *)(v50 + 36)]);
  sub_100026FD0((uint64_t)v46, v32, &qword_1002007E8);
  uint64_t v34 = (void *)v24[1];
  uint64_t v58 = *v24;
  uint64_t v59 = v34;
  State.wrappedValue.getter();
  uint64_t v35 = v62;
  swift_getKeyPath();
  uint64_t v58 = v35;
  sub_1000B4C1C((unint64_t *)&qword_1001FD2A0, (void (*)(uint64_t))type metadata accessor for ToolModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  LOBYTE(v30) = *(unsigned char *)(v35 + 88);
  swift_release();
  LOBYTE(v58) = v30;
  uint64_t v36 = v47;
  sub_1000BA6C8(v47, v26, v48);
  uint64_t v37 = swift_allocObject();
  sub_1000BA7B4(v26, v37 + ((v28 + 16) & ~v28), type metadata accessor for ModelResponseView);
  unint64_t v38 = sub_1000B4A44();
  uint64_t v39 = v52;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  sub_10002784C(v32, &qword_1002007F0);
  uint64_t v57 = v36;
  sub_1000063C0(&qword_100200838);
  uint64_t v58 = v33;
  uint64_t v59 = &type metadata for Bool;
  unint64_t v60 = v38;
  unint64_t v61 = &protocol witness table for Bool;
  swift_getOpaqueTypeConformance2();
  uint64_t v40 = sub_100006C14(&qword_100200840);
  uint64_t v41 = (void *)sub_100027F2C(&qword_100200848, &qword_100200840);
  uint64_t v58 = v40;
  uint64_t v59 = v41;
  swift_getOpaqueTypeConformance2();
  uint64_t v42 = v53;
  View.toolbar<A>(content:)();
  return (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v39, v42);
}

uint64_t type metadata accessor for ModelResponseView(uint64_t a1)
{
  return sub_10005AFA8(a1, (uint64_t *)&unk_1002008B0);
}

uint64_t sub_1000B168C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v100 = type metadata accessor for NavigationBarItem.TitleDisplayMode();
  uint64_t v99 = *(void *)(v100 - 8);
  __chkstk_darwin(v100);
  unint64_t v98 = (char *)&v83 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ModelResponseView(0);
  uint64_t v104 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v105 = v6;
  uint64_t v106 = (uint64_t)&v83 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000063C0(&qword_1001FB770);
  uint64_t v102 = *(void *)(v7 - 8);
  uint64_t v103 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v83 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000063C0(&qword_1001FB778);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v83 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v108 = sub_1000063C0(&qword_100200B08);
  __chkstk_darwin(v108);
  uint64_t v107 = (uint64_t)&v83 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = sub_1000063C0(&qword_100200B10);
  uint64_t v88 = *(void *)(v90 - 8);
  __chkstk_darwin(v90);
  uint64_t v86 = (char *)&v83 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = sub_1000063C0(&qword_100200B18);
  __chkstk_darwin(v89);
  uint64_t v91 = (char *)&v83 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = sub_1000063C0(&qword_100200B20);
  uint64_t v92 = *(void *)(v93 - 8);
  __chkstk_darwin(v93);
  id v87 = (char *)&v83 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = sub_1000063C0(&qword_100200B28);
  __chkstk_darwin(v112);
  uint64_t v95 = (char *)&v83 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1000063C0(&qword_100200B30);
  uint64_t v97 = *(void *)(v18 - 8);
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v94 = (char *)&v83 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v96 = (char *)&v83 - v21;
  uint64_t v109 = sub_1000063C0(&qword_100200B38);
  __chkstk_darwin(v109);
  uint64_t v111 = (uint64_t)&v83 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = type metadata accessor for InputWarningView(0);
  __chkstk_darwin(v110);
  uint64_t v24 = (char *)&v83 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = v5;
  uint64_t v25 = a1;
  uint64_t v26 = (uint64_t *)(a1 + *(int *)(v5 + 28));
  unint64_t v27 = v26[1];
  uint64_t v115 = *v26;
  unint64_t v116 = v27;
  sub_1000063C0(&qword_100200808);
  State.wrappedValue.getter();
  LOBYTE(v5) = sub_10002F3E0();
  uint64_t v28 = swift_release();
  if (v5)
  {
    if (qword_1001FAD68 != -1) {
      swift_once();
    }
    uint64_t v29 = type metadata accessor for LocalizedStringResource();
    uint64_t v30 = sub_10000EBE8(v29, (uint64_t)qword_100212A10);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 16))(v24, v30, v29);
    sub_1000BA6C8((uint64_t)v24, v111, type metadata accessor for InputWarningView);
    swift_storeEnumTagMultiPayload();
    sub_1000B4C1C(&qword_100200B78, (void (*)(uint64_t))type metadata accessor for InputWarningView);
    unint64_t v31 = sub_1000BB238();
    uint64_t v115 = v112;
    unint64_t v116 = v31;
    swift_getOpaqueTypeConformance2();
    _ConditionalContent<>.init(storage:)();
    return sub_1000BA738((uint64_t)v24, type metadata accessor for InputWarningView);
  }
  else
  {
    uint64_t v84 = v18;
    uint64_t v85 = a2;
    __chkstk_darwin(v28);
    static Axis.Set.vertical.getter();
    sub_1000063C0(&qword_100200B40);
    sub_100027F2C(&qword_100200B48, &qword_100200B40);
    ScrollView.init(_:showsIndicators:content:)();
    if (qword_1001FACE0 != -1) {
      swift_once();
    }
    double v33 = *(double *)&qword_100212910;
    uint64_t v34 = static Alignment.center.getter();
    double v36 = sub_100019C38(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, (uint64_t)v12, 0.0, 1, v33, 0, v34, v35);
    (*(void (**)(char *, uint64_t, double))(v102 + 8))(v9, v103, v36);
    uint64_t v37 = v106;
    sub_1000BA6C8(a1, v106, type metadata accessor for ModelResponseView);
    unint64_t v38 = (*(unsigned __int8 *)(v104 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v104 + 80);
    uint64_t v39 = swift_allocObject();
    sub_1000BA7B4(v37, v39 + v38, type metadata accessor for ModelResponseView);
    uint64_t v40 = v107;
    sub_100008DD4((uint64_t)v12, v107, &qword_1001FB778);
    uint64_t v41 = (void *)(v40 + *(int *)(v108 + 36));
    *uint64_t v41 = 0;
    v41[1] = 0;
    v41[2] = sub_1000BB06C;
    void v41[3] = v39;
    sub_10002784C((uint64_t)v12, &qword_1001FB778);
    unint64_t v42 = v26[1];
    uint64_t v115 = *v26;
    unint64_t v116 = v42;
    State.wrappedValue.getter();
    uint64_t v43 = v113;
    swift_getKeyPath();
    uint64_t v115 = v43;
    sub_1000B4C1C((unint64_t *)&qword_1001FD2A0, (void (*)(uint64_t))type metadata accessor for ToolModel);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v45 = *(void *)(v43 + 48);
    uint64_t v44 = *(void *)(v43 + 56);
    uint64_t v46 = *(void *)(v43 + 64);
    int v47 = *(unsigned __int8 *)(v43 + 72);
    sub_1000272F8(v45, v44, v46, *(unsigned char *)(v43 + 72));
    uint64_t result = swift_release();
    if (v47 == 255)
    {
      __break(1u);
    }
    else
    {
      uint64_t v48 = v84;
      uint64_t v49 = v86;
      if (!v47 && v45 == 5 && v46)
      {
        uint64_t v50 = v46;
      }
      else
      {
        uint64_t v51 = sub_1000D5160();
        uint64_t v50 = v52;
        sub_100024DB4(v45, v44, v46, v47);
        uint64_t v44 = v51;
      }
      uint64_t v115 = v44;
      unint64_t v116 = v50;
      sub_1000BA454(&qword_100200B50, &qword_100200B08, (void (*)(void))sub_1000BB0A0);
      sub_10002DF54();
      View.navigationTitle<A>(_:)();
      swift_bridgeObjectRelease();
      sub_10002784C(v40, &qword_100200B08);
      char v53 = static Edge.Set.top.getter();
      if (qword_1001FACF0 != -1) {
        swift_once();
      }
      char v54 = byte_1002007E0;
      uint64_t v55 = 0;
      uint64_t v56 = 0;
      uint64_t v57 = 0;
      uint64_t v58 = 0;
      if ((byte_1002007E0 & 1) == 0)
      {
        EdgeInsets.init(_all:)();
        uint64_t v55 = v59;
        uint64_t v56 = v60;
        uint64_t v57 = v61;
        uint64_t v58 = v62;
      }
      uint64_t v63 = v88;
      uint64_t v64 = (uint64_t)v91;
      uint64_t v65 = v90;
      (*(void (**)(char *, char *, uint64_t))(v88 + 16))(v91, v49, v90);
      uint64_t v66 = v64 + *(int *)(v89 + 36);
      *(unsigned char *)uint64_t v66 = v53;
      *(void *)(v66 + 8) = v55;
      *(void *)(v66 + 16) = v56;
      *(void *)(v66 + 24) = v57;
      *(void *)(v66 + 32) = v58;
      *(unsigned char *)(v66 + 40) = v54;
      (*(void (**)(char *, uint64_t))(v63 + 8))(v49, v65);
      uint64_t v67 = v99;
      uint64_t v68 = v98;
      uint64_t v69 = v100;
      (*(void (**)(char *, void, uint64_t))(v99 + 104))(v98, enum case for NavigationBarItem.TitleDisplayMode.inline(_:), v100);
      sub_1000BB140();
      uint64_t v70 = v87;
      View.navigationBarTitleDisplayMode(_:)();
      (*(void (**)(char *, uint64_t))(v67 + 8))(v68, v69);
      sub_10002784C(v64, &qword_100200B18);
      uint64_t v71 = v92;
      uint64_t v72 = (uint64_t)v95;
      uint64_t v73 = v93;
      (*(void (**)(char *, char *, uint64_t))(v92 + 16))(v95, v70, v93);
      (*(void (**)(char *, uint64_t))(v71 + 8))(v70, v73);
      uint64_t v74 = (uint64_t *)(v25 + *(int *)(v101 + 36));
      uint64_t v76 = *v74;
      uint64_t v75 = v74[1];
      uint64_t v113 = v76;
      uint64_t v114 = v75;
      sub_1000063C0(&qword_1001FC678);
      State.projectedValue.getter();
      uint64_t v77 = v117;
      unint64_t v78 = sub_1000BB238();
      uint64_t v79 = v94;
      uint64_t v80 = v112;
      View.inlineFeedback(controller:completion:)();

      swift_release();
      swift_release();
      sub_10002784C(v72, &qword_100200B28);
      uint64_t v81 = v97;
      id v82 = v96;
      (*(void (**)(char *, char *, uint64_t))(v97 + 32))(v96, v79, v48);
      (*(void (**)(uint64_t, char *, uint64_t))(v81 + 16))(v111, v82, v48);
      swift_storeEnumTagMultiPayload();
      sub_1000B4C1C(&qword_100200B78, (void (*)(uint64_t))type metadata accessor for InputWarningView);
      uint64_t v115 = v80;
      unint64_t v116 = v78;
      swift_getOpaqueTypeConformance2();
      _ConditionalContent<>.init(storage:)();
      return (*(uint64_t (**)(char *, uint64_t))(v81 + 8))(v82, v48);
    }
  }
  return result;
}

uint64_t sub_1000B249C()
{
  uint64_t v1 = type metadata accessor for ModelResponseView(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  swift_unknownObjectRelease();
  uint64_t v5 = v0 + v3;
  sub_1000063C0(&qword_1001FAE68);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for DismissAction();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
  }
  else
  {
    swift_release();
  }
  swift_release();
  j__swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  uint64_t v7 = v5 + *(int *)(v1 + 40);
  swift_release();
  swift_release();
  uint64_t v8 = v7 + *(int *)(sub_1000063C0(&qword_1001FB438) + 32);
  uint64_t v9 = type metadata accessor for NavigationPath();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_1000B267C@<X0>(BOOL *a1@<X8>)
{
  type metadata accessor for ModelResponseView(0);

  return sub_1000B0E9C(a1);
}

uint64_t sub_1000B26F0()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000B2730@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = static HorizontalAlignment.center.getter();
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 1;
  uint64_t v4 = sub_1000063C0(&qword_100200B80);
  return sub_1000B2780(a1, (char *)(a2 + *(int *)(v4 + 44)));
}

uint64_t sub_1000B2780@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v185 = a2;
  uint64_t v3 = type metadata accessor for ModelResponseView(0);
  __chkstk_darwin(v3);
  uint64_t v169 = (uint64_t)&v155 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Locale();
  __chkstk_darwin(v5 - 8);
  Swift::Int v162 = (char *)&v155 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v7 - 8);
  os_log_type_t v161 = (char *)&v155 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for AccessibilityChildBehavior();
  uint64_t v171 = *(void *)(v9 - 8);
  uint64_t v172 = v9;
  __chkstk_darwin(v9);
  uint64_t v170 = (char *)&v155 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000063C0(&qword_100200B88);
  uint64_t v174 = *(void *)(v11 - 8);
  uint64_t v175 = v11;
  __chkstk_darwin(v11);
  uint64_t v186 = (char *)&v155 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v179 = sub_1000063C0(&qword_100200B90);
  uint64_t v13 = __chkstk_darwin(v179);
  uint64_t v173 = (char *)&v155 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v176 = (uint64_t)&v155 - v15;
  uint64_t v177 = sub_1000063C0(&qword_100200B98);
  __chkstk_darwin(v177);
  uint64_t v178 = (char *)&v155 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for ScrollBounceBehavior();
  uint64_t v156 = *(void *)(v17 - 8);
  uint64_t v157 = v17;
  __chkstk_darwin(v17);
  uint64_t v165 = (char *)&v155 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v180 = sub_1000063C0(&qword_100200BA0);
  uint64_t v158 = *(void *)(v180 - 8);
  __chkstk_darwin(v180);
  uint64_t v164 = (uint64_t)&v155 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v181 = sub_1000063C0(&qword_100200BA8);
  uint64_t v159 = *(void *)(v181 - 8);
  uint64_t v20 = __chkstk_darwin(v181);
  uint64_t v163 = (char *)&v155 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  Swift::Int v160 = (char *)&v155 - v22;
  uint64_t v23 = sub_1000063C0(&qword_100200BB0);
  uint64_t v24 = __chkstk_darwin(v23 - 8);
  uint64_t v184 = (uint64_t)&v155 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v189 = (uint64_t)&v155 - v26;
  uint64_t v27 = sub_1000063C0(&qword_1001FBA78);
  uint64_t v28 = __chkstk_darwin(v27 - 8);
  uint64_t v183 = (uint64_t)&v155 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  uint64_t v194 = (uint64_t)&v155 - v30;
  uint64_t v190 = type metadata accessor for ActionButtonView(0);
  __chkstk_darwin(v190);
  uint64_t v32 = (char *)&v155 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_1000063C0(&qword_100200BB8);
  uint64_t v192 = *(void *)(v33 - 8);
  uint64_t v193 = v33;
  uint64_t v34 = __chkstk_darwin(v33);
  double v36 = (char *)&v155 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  unint64_t v38 = (char *)&v155 - v37;
  sub_1000B3DCC((uint64_t)v32);
  uint64_t v166 = v3;
  uint64_t v167 = a1;
  uint64_t v39 = (uint64_t *)(a1 + *(int *)(v3 + 28));
  uint64_t v40 = v39[1];
  uint64_t v221 = *v39;
  uint64_t v222 = v40;
  sub_1000063C0(&qword_100200808);
  State.wrappedValue.getter();
  type metadata accessor for RewritingModel();
  sub_1000B4C1C(&qword_100200BC0, (void (*)(uint64_t))type metadata accessor for ActionButtonView);
  uint64_t v187 = sub_1000B4C1C((unint64_t *)&unk_100201540, (void (*)(uint64_t))type metadata accessor for RewritingModel);
  View.environment<A>(_:)();
  swift_release();
  sub_1000BA738((uint64_t)v32, type metadata accessor for ActionButtonView);
  uint64_t v41 = *(void (**)(char *, char *, uint64_t))(v192 + 32);
  uint64_t v190 = (uint64_t)v38;
  char v191 = v36;
  v41(v38, v36, v193);
  uint64_t v42 = v39[1];
  uint64_t v221 = *v39;
  uint64_t v222 = v42;
  State.wrappedValue.getter();
  uint64_t v43 = v197;
  swift_getKeyPath();
  uint64_t v221 = v43;
  uint64_t v44 = sub_1000B4C1C((unint64_t *)&qword_1001FD2A0, (void (*)(uint64_t))type metadata accessor for ToolModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v182 = *(void *)(v43 + 112);
  swift_release();
  uint64_t v45 = v194;
  Divider.init()();
  uint64_t v46 = type metadata accessor for Divider();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v45, 0, 1, v46);
  uint64_t v47 = *v39;
  uint64_t v48 = v39[1];
  uint64_t v188 = v39;
  uint64_t v221 = v47;
  uint64_t v222 = v48;
  State.wrappedValue.getter();
  uint64_t v49 = v197;
  swift_getKeyPath();
  uint64_t v221 = v49;
  uint64_t v168 = v44;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (*(unsigned char *)(v49 + 72))
  {
    swift_release();
LABEL_7:
    uint64_t v62 = v188;
    uint64_t v63 = v188[1];
    uint64_t v221 = *v188;
    uint64_t v222 = v63;
    State.wrappedValue.getter();
    uint64_t v64 = v197;
    swift_getKeyPath();
    uint64_t v221 = v64;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v65 = *(void **)(v64 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__resultAttributedString);
    id v66 = v65;
    swift_release();
    type metadata accessor for CommonUIManager();
    sub_1000B4C1C((unint64_t *)&qword_1001FAE20, (void (*)(uint64_t))type metadata accessor for CommonUIManager);
    uint64_t v221 = Environment.init<A>(_:)();
    LOBYTE(v222) = v67 & 1;
    id v223 = v65;
    LOBYTE(v224) = 0;
    uint64_t v68 = v170;
    static AccessibilityChildBehavior.ignore.getter();
    uint64_t v69 = sub_1000063C0(&qword_100200BC8);
    uint64_t v70 = sub_1000BB2F0(&qword_100200BD0, &qword_100200BC8, (void (*)(void))sub_10008A550, (void (*)(void))sub_1000BB378);
    View.accessibilityElement(children:)();
    (*(void (**)(char *, uint64_t))(v171 + 8))(v68, v172);
    swift_release();

    uint64_t v71 = v62[1];
    uint64_t v221 = *v62;
    uint64_t v222 = v71;
    State.wrappedValue.getter();
    uint64_t v72 = v197;
    swift_getKeyPath();
    uint64_t v221 = v72;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v73 = *(void **)(v72 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__resultAttributedString);
    id v74 = v73;
    swift_release();
    if (v73)
    {
      id v75 = [v74 string];

      uint64_t v76 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v78 = v77;
    }
    else
    {
      String.LocalizationValue.init(stringLiteral:)();
      static Locale.current.getter();
      uint64_t v76 = String.init(localized:table:bundle:locale:comment:)();
      uint64_t v78 = v79;
    }
    uint64_t v80 = (uint64_t)v178;
    uint64_t v221 = v76;
    uint64_t v222 = v78;
    *(void *)&long long v197 = v69;
    *((void *)&v197 + 1) = v70;
    swift_getOpaqueTypeConformance2();
    sub_10002DF54();
    uint64_t v81 = (uint64_t)v173;
    uint64_t v82 = v175;
    uint64_t v83 = v186;
    View.accessibilityLabel<A>(_:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v174 + 8))(v83, v82);
    uint64_t v84 = v176;
    sub_100026FD0(v81, v176, &qword_100200B90);
    sub_100008DD4(v84, v80, &qword_100200B90);
    swift_storeEnumTagMultiPayload();
    uint64_t v85 = sub_100027F2C(&qword_100200BE0, &qword_100200BA0);
    uint64_t v221 = v180;
    uint64_t v222 = v85;
    swift_getOpaqueTypeConformance2();
    sub_1000BB3CC();
    _ConditionalContent<>.init(storage:)();
    sub_10002784C(v84, &qword_100200B90);
    goto LABEL_11;
  }
  uint64_t v50 = v163;
  uint64_t v51 = v164;
  uint64_t v52 = v165;
  uint64_t v53 = *(unsigned __int8 *)(v49 + 48);
  swift_release();
  if (v53 != 9) {
    goto LABEL_7;
  }
  uint64_t v54 = static Axis.Set.horizontal.getter();
  __chkstk_darwin(v54);
  *(&v155 - 2) = v167;
  sub_1000063C0(&qword_100200BF8);
  sub_1000BB514();
  ScrollView.init(_:showsIndicators:content:)();
  static ScrollBounceBehavior.basedOnSize.getter();
  unsigned __int8 v55 = static Axis.Set.horizontal.getter();
  Axis.Set.init(rawValue:)();
  Axis.Set.init(rawValue:)();
  if (Axis.Set.init(rawValue:)() != v55) {
    Axis.Set.init(rawValue:)();
  }
  uint64_t v56 = sub_100027F2C(&qword_100200BE0, &qword_100200BA0);
  uint64_t v57 = v180;
  View.scrollBounceBehavior(_:axes:)();
  (*(void (**)(char *, uint64_t))(v156 + 8))(v52, v157);
  (*(void (**)(uint64_t, uint64_t))(v158 + 8))(v51, v57);
  uint64_t v58 = v159;
  uint64_t v59 = v160;
  uint64_t v60 = v50;
  uint64_t v61 = v181;
  (*(void (**)(char *, char *, uint64_t))(v159 + 32))(v160, v60, v181);
  (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v178, v59, v61);
  swift_storeEnumTagMultiPayload();
  uint64_t v221 = v57;
  uint64_t v222 = v56;
  swift_getOpaqueTypeConformance2();
  sub_1000BB3CC();
  _ConditionalContent<>.init(storage:)();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v59, v61);
LABEL_11:
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v86 = v226;
  unint64_t v87 = v227;
  uint64_t v88 = v228;
  uint64_t v89 = v229;
  uint64_t v90 = v230;
  uint64_t v91 = v231;
  uint64_t v92 = type metadata accessor for FeedbackFeatureFlags();
  uint64_t v224 = v92;
  uint64_t v225 = sub_1000B4C1C((unint64_t *)&unk_1001FDED0, (void (*)(uint64_t))&type metadata accessor for FeedbackFeatureFlags);
  uint64_t v93 = sub_10002E148(&v221);
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v92 - 8) + 104))(v93, enum case for FeedbackFeatureFlags.CentralizedFeedback(_:), v92);
  LOBYTE(v92) = isFeatureEnabled(_:)();
  sub_100027DBC((uint64_t)&v221);
  uint64_t v186 = (char *)v87;
  uint64_t v180 = v89;
  uint64_t v181 = v86;
  uint64_t v178 = v90;
  uint64_t v179 = v88;
  uint64_t v177 = v91;
  if (v92)
  {
    uint64_t v94 = v188;
    uint64_t v95 = v188[1];
    uint64_t v221 = *v188;
    uint64_t v222 = v95;
    State.wrappedValue.getter();
    uint64_t v96 = v197;
    swift_getKeyPath();
    uint64_t v221 = v96;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v97 = *(void *)(v96 + 48);
    uint64_t v98 = *(void *)(v96 + 64);
    int v99 = *(unsigned __int8 *)(v96 + 72);
    uint64_t v164 = *(void *)(v96 + 56);
    uint64_t v165 = (char *)v97;
    uint64_t v163 = (char *)v98;
    LODWORD(v162) = v99;
    sub_1000272F8(v97, v164, v98, v99);
    swift_release();
    uint64_t v100 = v94[1];
    uint64_t v221 = *v94;
    uint64_t v222 = v100;
    State.wrappedValue.getter();
    uint64_t v101 = v197;
    swift_getKeyPath();
    uint64_t v221 = v101;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v102 = *(void *)(v101 + 40);
    uint64_t v175 = *(void *)(v101 + 32);
    uint64_t v176 = v102;
    swift_bridgeObjectRetain();
    swift_release();
    uint64_t v103 = v94[1];
    uint64_t v221 = *v94;
    uint64_t v222 = v103;
    State.wrappedValue.getter();
    uint64_t v104 = v197;
    swift_getKeyPath();
    uint64_t v221 = v104;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v105 = *(void *)(v104 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__inputStringForFeedback + 8);
    uint64_t v173 = *(char **)(v104 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__inputStringForFeedback);
    uint64_t v174 = v105;
    swift_bridgeObjectRetain();
    swift_release();
    uint64_t v106 = v94[1];
    uint64_t v221 = *v94;
    uint64_t v222 = v106;
    State.wrappedValue.getter();
    uint64_t v107 = v197;
    swift_getKeyPath();
    uint64_t v221 = v107;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v108 = *(void **)(v107 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__resultAttributedString);
    if (v108)
    {
      id v109 = v108;
      id v110 = [v109 string];
      uint64_t v111 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      Swift::Int v160 = v112;
      os_log_type_t v161 = (char *)v111;
      swift_release();
    }
    else
    {
      swift_release();
      Swift::Int v160 = (char *)0xE000000000000000;
      os_log_type_t v161 = 0;
    }
    uint64_t v113 = v166;
    uint64_t v114 = v188;
    uint64_t v115 = v188[1];
    uint64_t v221 = *v188;
    uint64_t v222 = v115;
    State.wrappedValue.getter();
    uint64_t v116 = v197;
    swift_getKeyPath();
    uint64_t v221 = v116;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v117 = *(void *)(v116 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__modelInfoString + 8);
    uint64_t v171 = *(void *)(v116 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__modelInfoString);
    uint64_t v172 = v117;
    swift_bridgeObjectRetain();
    swift_release();
    uint64_t v118 = v167;
    uint64_t v119 = (uint64_t *)(v167 + *(int *)(v113 + 36));
    uint64_t v121 = *v119;
    uint64_t v120 = v119[1];
    uint64_t v221 = v121;
    uint64_t v222 = v120;
    sub_1000063C0(&qword_1001FC678);
    State.wrappedValue.getter();
    uint64_t v170 = (char *)v197;
    uint64_t v122 = v114[1];
    uint64_t v221 = *v114;
    uint64_t v222 = v122;
    State.wrappedValue.getter();
    uint64_t v123 = v197;
    swift_getKeyPath();
    uint64_t v221 = v123;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v124 = *(void *)(v123 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__session);
    swift_release();
    uint64_t v125 = v169;
    sub_1000BA6C8(v118, v169, type metadata accessor for ModelResponseView);
    if (v124)
    {
      int v126 = (uint64_t *)(v125 + *(int *)(v113 + 28));
      uint64_t v128 = *v126;
      uint64_t v127 = v126[1];
      uint64_t v221 = v128;
      uint64_t v222 = v127;
      State.wrappedValue.getter();
      uint64_t v129 = v197;
      swift_getKeyPath();
      uint64_t v221 = v129;
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      char v130 = *(unsigned char *)(v129 + 88);
      uint64_t v125 = v169;
      swift_release();
    }
    else
    {
      char v130 = 1;
    }
    uint64_t v132 = v164;
    uint64_t v131 = v165;
    id v133 = v163;
    char v134 = (char)v162;
    sub_1000BA738(v125, type metadata accessor for ModelResponseView);
    *(void *)&long long v197 = 0x3FF0000000000000;
    uint64_t v135 = v170;
    int v136 = v170;
    State.init(wrappedValue:)();
    uint64_t v137 = v221;
    uint64_t v138 = v222;

    *(void *)&long long v197 = v135;
    *((void *)&v197 + 1) = v175;
    uint64_t v198 = v176;
    uint64_t v199 = v173;
    uint64_t v200 = v174;
    uint64_t v201 = 0;
    uint64_t v202 = 0;
    BOOL v203 = v161;
    uint64_t v204 = v160;
    uint64_t v205 = v171;
    uint64_t v206 = v172;
    uint64_t v207 = _swiftEmptyArrayStorage;
    uint64_t v208 = _swiftEmptyArrayStorage;
    uint64_t v209 = _swiftEmptyArrayStorage;
    uint64_t v210 = v131;
    uint64_t v211 = v132;
    uint64_t v212 = v133;
    char v213 = v134;
    char v214 = v130;
    __int16 v215 = 1;
    char v216 = 0;
    uint64_t v217 = 0;
    uint64_t v218 = 0;
    uint64_t v219 = v137;
    uint64_t v220 = v138;
    nullsub_1(&v197);
  }
  else
  {
    sub_100064980(&v197);
  }
  sub_100026FD0((uint64_t)&v197, (uint64_t)&v221, &qword_100201C50);
  LODWORD(v188) = (v182 & 2) == 0;
  uint64_t v140 = v191;
  uint64_t v139 = v192;
  uint64_t v141 = *(void (**)(char *, uint64_t, uint64_t))(v192 + 16);
  uint64_t v142 = v193;
  v141(v191, v190, v193);
  uint64_t v143 = v183;
  sub_100008DD4(v194, v183, &qword_1001FBA78);
  uint64_t v144 = v189;
  uint64_t v145 = v184;
  sub_100008DD4(v189, v184, &qword_100200BB0);
  sub_100026FD0((uint64_t)&v221, (uint64_t)v195, &qword_100201C50);
  uint64_t v146 = v185;
  v141(v185, (uint64_t)v140, v142);
  uint64_t v147 = (int *)sub_1000063C0(&qword_100200BF0);
  v146[v147[12]] = (char)v188;
  sub_100008DD4(v143, (uint64_t)&v146[v147[16]], &qword_1001FBA78);
  sub_100008DD4(v145, (uint64_t)&v146[v147[20]], &qword_100200BB0);
  uint64_t v148 = &v146[v147[24]];
  *(_OWORD *)uint64_t v148 = xmmword_10018C770;
  uint64_t v149 = v186;
  *((void *)v148 + 2) = v181;
  *((void *)v148 + 3) = v149;
  uint64_t v150 = v180;
  *((void *)v148 + 4) = v179;
  *((void *)v148 + 5) = v150;
  uint64_t v151 = v177;
  *((void *)v148 + 6) = v178;
  *((void *)v148 + 7) = v151;
  v148[64] = 0;
  uint64_t v152 = (uint64_t)&v146[v147[28]];
  sub_100026FD0((uint64_t)v195, (uint64_t)v196, &qword_100201C50);
  sub_100026FD0((uint64_t)v196, v152, &qword_100201C50);
  sub_100064B1C(v196, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100064A04);
  sub_10002784C(v144, &qword_100200BB0);
  sub_10002784C(v194, &qword_1001FBA78);
  uint64_t v153 = *(void (**)(uint64_t, uint64_t))(v139 + 8);
  v153(v190, v142);
  sub_100026FD0((uint64_t)v195, (uint64_t)&v197, &qword_100201C50);
  sub_100064B1C(&v197, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100064B88);
  sub_10002784C(v145, &qword_100200BB0);
  sub_10002784C(v143, &qword_1001FBA78);
  return ((uint64_t (*)(char *, uint64_t))v153)(v191, v142);
}

uint64_t sub_1000B3DCC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for PresentationDetent();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v15 - v7;
  type metadata accessor for RewritingModel();
  sub_1000B4C1C((unint64_t *)&unk_100201540, (void (*)(uint64_t))type metadata accessor for RewritingModel);
  *(void *)a1 = Environment.init<A>(_:)();
  *(unsigned char *)(a1 + 8) = v9 & 1;
  type metadata accessor for PresentationModel();
  sub_1000B4C1C((unint64_t *)&qword_1001FB410, (void (*)(uint64_t))type metadata accessor for PresentationModel);
  *(void *)(a1 + 16) = Environment.init<A>(_:)();
  *(unsigned char *)(a1 + 24) = v10 & 1;
  uint64_t v16 = 0;
  char v17 = 1;
  sub_1000063C0(&qword_1001FDC70);
  State.init(wrappedValue:)();
  char v11 = v19;
  uint64_t v12 = v20;
  *(void *)(a1 + 32) = v18;
  *(unsigned char *)(a1 + 40) = v11;
  *(void *)(a1 + 48) = v12;
  LOBYTE(v16) = 0;
  State.init(wrappedValue:)();
  uint64_t v13 = v19;
  *(unsigned char *)(a1 + 56) = v18;
  *(void *)(a1 + 64) = v13;
  type metadata accessor for ActionButtonView(0);
  static PresentationDetent.medium.getter();
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
  State.init(wrappedValue:)();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
}

uint64_t sub_1000B401C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v43 = a2;
  uint64_t v3 = type metadata accessor for Locale();
  __chkstk_darwin(v3 - 8);
  v37[1] = (char *)v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v5 - 8);
  v37[0] = (char *)v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = type metadata accessor for AccessibilityChildBehavior();
  uint64_t v7 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  char v9 = (char *)v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000063C0(&qword_100200C18);
  uint64_t v41 = *(void *)(v10 - 8);
  uint64_t v42 = v10;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000063C0(&qword_100200BF8);
  __chkstk_darwin(v13 - 8);
  uint64_t v39 = (char *)v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (void *)(a1 + *(int *)(type metadata accessor for ModelResponseView(0) + 28));
  uint64_t v16 = v15[1];
  *(void *)&v62[0] = *v15;
  *((void *)&v62[0] + 1) = v16;
  v37[3] = sub_1000063C0(&qword_100200808);
  State.wrappedValue.getter();
  uint64_t v17 = v46;
  swift_getKeyPath();
  *(void *)&v62[0] = v17;
  void v37[2] = sub_1000B4C1C((unint64_t *)&unk_100201540, (void (*)(uint64_t))type metadata accessor for RewritingModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v18 = *(void **)(v17 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__resultAttributedString);
  id v19 = v18;
  swift_release();
  type metadata accessor for CommonUIManager();
  sub_1000B4C1C((unint64_t *)&qword_1001FAE20, (void (*)(uint64_t))type metadata accessor for CommonUIManager);
  uint64_t v20 = Environment.init<A>(_:)();
  LOBYTE(v17) = v21;
  static Alignment.center.getter();
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  char v61 = v17 & 1;
  char v60 = v64;
  char v59 = v66;
  char v58 = v68;
  char v57 = v70;
  char v56 = v72;
  char v55 = v74;
  *(void *)&long long v46 = v20;
  BYTE8(v46) = v17 & 1;
  *(void *)&long long v47 = v18;
  BYTE8(v47) = 1;
  *(void *)&long long v48 = v63;
  BYTE8(v48) = v64;
  *(void *)&long long v49 = v65;
  BYTE8(v49) = v66;
  *(void *)&long long v50 = v67;
  BYTE8(v50) = v68;
  *(void *)&long long v51 = v69;
  BYTE8(v51) = v70;
  *(void *)&long long v52 = v71;
  BYTE8(v52) = v72;
  *(void *)&long long v53 = v73;
  BYTE8(v53) = v74;
  long long v54 = v75;
  static AccessibilityChildBehavior.ignore.getter();
  uint64_t v22 = sub_1000063C0(&qword_100200C08);
  unint64_t v23 = sub_1000BB5F4();
  uint64_t v40 = v12;
  View.accessibilityElement(children:)();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v38);
  v62[6] = v52;
  v62[7] = v53;
  v62[8] = v54;
  v62[2] = v48;
  v62[3] = v49;
  v62[4] = v50;
  v62[5] = v51;
  v62[0] = v46;
  v62[1] = v47;
  sub_1000BB6A8((uint64_t)v62);
  uint64_t v24 = v15[1];
  *(void *)&long long v46 = *v15;
  *((void *)&v46 + 1) = v24;
  State.wrappedValue.getter();
  uint64_t v25 = v44;
  swift_getKeyPath();
  *(void *)&long long v46 = v25;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v26 = *(void **)(v25 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__resultAttributedString);
  id v27 = v26;
  swift_release();
  if (v26)
  {
    id v28 = [v27 string];

    uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v31 = v30;
  }
  else
  {
    String.LocalizationValue.init(stringLiteral:)();
    static Locale.current.getter();
    uint64_t v29 = String.init(localized:table:bundle:locale:comment:)();
    uint64_t v31 = v32;
  }
  *(void *)&long long v46 = v29;
  *((void *)&v46 + 1) = v31;
  uint64_t v44 = v22;
  unint64_t v45 = v23;
  swift_getOpaqueTypeConformance2();
  sub_10002DF54();
  uint64_t v33 = (uint64_t)v39;
  uint64_t v34 = v42;
  uint64_t v35 = v40;
  View.accessibilityLabel<A>(_:)();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v35, v34);
  return sub_100026FD0(v33, v43, &qword_100200BF8);
}

uint64_t sub_1000B467C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ModelResponseView(0);
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v5 = &v18[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = a1 + *(int *)(v3 + 32);
  char v7 = *(unsigned char *)v6;
  uint64_t v8 = *(void *)(v6 + 8);
  LOBYTE(v19) = v7;
  uint64_t v20 = v8;
  sub_1000063C0(&qword_1001FB5A8);
  State.wrappedValue.getter();
  char v9 = v18[8];
  sub_1000BA6C8(a1, (uint64_t)v5, type metadata accessor for ModelResponseView);
  if (v9) {
    return sub_1000BA738((uint64_t)v5, type metadata accessor for ModelResponseView);
  }
  uint64_t v11 = (uint64_t *)&v5[*(int *)(v2 + 28)];
  uint64_t v13 = *v11;
  uint64_t v12 = v11[1];
  uint64_t v19 = v13;
  uint64_t v20 = v12;
  sub_1000063C0(&qword_100200808);
  State.wrappedValue.getter();
  char v14 = sub_10002F3E0();
  swift_release();
  uint64_t result = sub_1000BA738((uint64_t)v5, type metadata accessor for ModelResponseView);
  if ((v14 & 1) == 0)
  {
    uint64_t v15 = (uint64_t *)(a1 + *(int *)(v2 + 28));
    uint64_t v17 = *v15;
    uint64_t v16 = v15[1];
    uint64_t v19 = v17;
    uint64_t v20 = v16;
    State.wrappedValue.getter();
    sub_1000A8AE0(0, 0, 0);
    return swift_release();
  }
  return result;
}

uint64_t sub_1000B4818(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  int v3 = *a2;
  char v4 = *(unsigned char *)(a3 + *(int *)(type metadata accessor for ModelResponseView(0) + 20) + 8);
  uint64_t v5 = swift_retain();
  uint64_t v6 = sub_100020A44(v5, v4);
  swift_release();
  swift_getKeyPath();
  sub_1000B4C1C((unint64_t *)&qword_1001FAE20, (void (*)(uint64_t))type metadata accessor for CommonUIManager);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  int v7 = *(unsigned __int8 *)(v6 + 81);
  uint64_t result = swift_release();
  if (v3 != v7)
  {
    uint64_t v9 = swift_retain();
    sub_100020A44(v9, v4);
    swift_release();
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1000B49C4(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for ModelResponseView(0) - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_1000B4818(a1, a2, v6);
}

unint64_t sub_1000B4A44()
{
  unint64_t result = qword_100200810;
  if (!qword_100200810)
  {
    sub_100006C14(&qword_1002007F0);
    sub_1000BB2F0(&qword_100200818, &qword_1002007E8, (void (*)(void))sub_1000B4B28, (void (*)(void))sub_1000B4BC8);
    sub_1000B4C1C(&qword_1001FB910, (void (*)(uint64_t))type metadata accessor for PreferredContentSizeModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100200810);
  }
  return result;
}

unint64_t sub_1000B4B28()
{
  unint64_t result = qword_100200820;
  if (!qword_100200820)
  {
    sub_100006C14(&qword_1001FB768);
    sub_100027F2C(&qword_100200828, &qword_1001FB760);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100200820);
  }
  return result;
}

unint64_t sub_1000B4BC8()
{
  unint64_t result = qword_100200830;
  if (!qword_100200830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100200830);
  }
  return result;
}

uint64_t sub_1000B4C1C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000B4C64(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ToolbarItemPlacement();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = sub_1000063C0(&qword_100200840);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  static ToolbarItemPlacement.confirmationAction.getter();
  uint64_t v9 = a1;
  sub_1000063C0(&qword_100200AE0);
  sub_1000BACE0();
  ToolbarItem<>.init(placement:content:)();
  sub_100027F2C(&qword_100200848, &qword_100200840);
  static ToolbarContentBuilder.buildBlock<A>(_:)();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1000B4E08()
{
  return sub_1000B4C64(*(void *)(v0 + 16));
}

uint64_t sub_1000B4E10()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000B4E2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v38 = a2;
  uint64_t v37 = sub_1000063C0(&qword_100200AF8);
  __chkstk_darwin(v37);
  uint64_t v35 = (char *)v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_1000063C0(&qword_100200B00);
  __chkstk_darwin(v36);
  uint64_t v5 = (char *)v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ModelResponseView(0);
  uint64_t v34 = *(void *)(v6 - 8);
  uint64_t v7 = *(void *)(v34 + 64);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000063C0(&qword_1001FC6B8);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (uint64_t *)(a1 + *(int *)(v6 + 28));
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  uint64_t v39 = v15;
  uint64_t v40 = v14;
  sub_1000063C0(&qword_100200808);
  State.wrappedValue.getter();
  char v16 = sub_10002F3E0();
  swift_release();
  if (v16)
  {
    LocalizedStringKey.init(stringLiteral:)();
    uint64_t v35 = v17;
    sub_1000BA6C8(a1, (uint64_t)v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ModelResponseView);
    unint64_t v18 = (*(unsigned __int8 *)(v34 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
    uint64_t v19 = swift_allocObject();
    sub_1000BA7B4((uint64_t)v8, v19 + v18, type metadata accessor for ModelResponseView);
    Button<>.init(_:action:)();
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v5, v12, v9);
    swift_storeEnumTagMultiPayload();
    sub_100027F2C((unint64_t *)&unk_1001FDDF0, &qword_1001FC6B8);
    sub_1000BAD80();
    _ConditionalContent<>.init(storage:)();
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  else
  {
    v33[3] = v7;
    uint64_t v21 = a1 + *(int *)(v6 + 24);
    uint64_t v22 = *(void *)v21;
    char v23 = *(unsigned char *)(v21 + 8);
    j__swift_retain();
    uint64_t v24 = sub_1000207F8(v22, v23);
    j__swift_release();
    if (v24)
    {
      id v25 = [self currentDevice];
      id v26 = [v25 userInterfaceIdiom];

      if (v26 == (id)6
        || (swift_getKeyPath(),
            uint64_t v39 = v24,
            sub_1000B4C1C((unint64_t *)&qword_1001FB410, (void (*)(uint64_t))type metadata accessor for PresentationModel), ObservationRegistrar.access<A, B>(_:keyPath:)(), swift_release(), (*(unsigned char *)(v24 + 24) & 1) == 0)&& *(void *)(v24 + 16) == 1)
      {
        uint64_t v27 = LocalizedStringKey.init(stringLiteral:)();
        v33[1] = v28;
        v33[2] = v27;
        sub_1000BA6C8(a1, (uint64_t)v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ModelResponseView);
        unint64_t v29 = (*(unsigned __int8 *)(v34 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
        uint64_t v30 = swift_allocObject();
        sub_1000BA7B4((uint64_t)v8, v30 + v29, type metadata accessor for ModelResponseView);
        Button<>.init(_:action:)();
        uint64_t v31 = 0;
      }
      else
      {
        uint64_t v31 = 1;
      }
      swift_release();
    }
    else
    {
      uint64_t v31 = 1;
    }
    uint64_t v32 = (uint64_t)v35;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v35, v31, 1, v9);
    sub_100008DD4(v32, (uint64_t)v5, &qword_100200AF8);
    swift_storeEnumTagMultiPayload();
    sub_100027F2C((unint64_t *)&unk_1001FDDF0, &qword_1001FC6B8);
    sub_1000BAD80();
    _ConditionalContent<>.init(storage:)();
    return sub_10002784C(v32, &qword_100200AF8);
  }
}

uint64_t sub_1000B541C()
{
  return swift_release();
}

uint64_t sub_1000B5528()
{
  type metadata accessor for ModelResponseView(0);
  sub_1000063C0(&qword_1001FB5A8);
  State.wrappedValue.setter();
  sub_1000063C0(&qword_100200808);
  State.wrappedValue.getter();
  sub_1000A8AE0(2, 0, 0);
  swift_release();
  State.wrappedValue.getter();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  uint64_t result = swift_release();
  if (Strong)
  {
    [Strong endWritingTools];
    return swift_unknownObjectRelease();
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for ModelResponseView(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1000063C0(&qword_1001FAE68);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for DismissAction();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = a3[5];
    uint64_t v10 = a3[6];
    uint64_t v11 = (char *)a1 + v9;
    uint64_t v12 = (char *)a2 + v9;
    uint64_t v13 = *(void *)v12;
    LOBYTE(v12) = v12[8];
    *(void *)uint64_t v11 = v13;
    v11[8] = (char)v12;
    uint64_t v14 = (char *)a1 + v10;
    uint64_t v15 = *(void *)((char *)a2 + v10);
    char v16 = *((unsigned char *)a2 + v10 + 8);
    swift_retain();
    j__swift_retain();
    *(void *)uint64_t v14 = v15;
    v14[8] = v16;
    uint64_t v17 = a3[7];
    uint64_t v18 = a3[8];
    uint64_t v19 = (void *)((char *)a1 + v17);
    uint64_t v20 = (void *)((char *)a2 + v17);
    uint64_t v21 = v20[1];
    *uint64_t v19 = *v20;
    v19[1] = v21;
    uint64_t v22 = (char *)a1 + v18;
    char v23 = (char *)a2 + v18;
    char *v22 = *v23;
    *((void *)v22 + 1) = *((void *)v23 + 1);
    uint64_t v24 = a3[9];
    uint64_t v25 = a3[10];
    id v26 = (void *)((char *)a1 + v24);
    uint64_t v27 = (char *)a2 + v24;
    unint64_t v29 = *(void **)v27;
    uint64_t v28 = *((void *)v27 + 1);
    *id v26 = *(void *)v27;
    v26[1] = v28;
    uint64_t v30 = (void *)((char *)a1 + v25);
    uint64_t v31 = (char *)a2 + v25;
    uint64_t v32 = *(void *)((char *)a2 + v25 + 8);
    *uint64_t v30 = *(void *)((char *)a2 + v25);
    v30[1] = v32;
    swift_retain();
    swift_retain();
    swift_retain();
    id v33 = v29;
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v34 = *(int *)(sub_1000063C0(&qword_1001FB438) + 32);
    uint64_t v35 = (char *)v30 + v34;
    uint64_t v36 = &v31[v34];
    uint64_t v37 = type metadata accessor for NavigationPath();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16))(v35, v36, v37);
  }
  return a1;
}

uint64_t destroy for ModelResponseView(uint64_t a1, uint64_t a2)
{
  sub_1000063C0(&qword_1001FAE68);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for DismissAction();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  swift_release();
  j__swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  uint64_t v5 = a1 + *(int *)(a2 + 40);
  swift_release();
  swift_release();
  uint64_t v6 = v5 + *(int *)(sub_1000063C0(&qword_1001FB438) + 32);
  uint64_t v7 = type metadata accessor for NavigationPath();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);

  return v8(v6, v7);
}

void *initializeWithCopy for ModelResponseView(void *a1, void *a2, int *a3)
{
  sub_1000063C0(&qword_1001FAE68);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for DismissAction();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (char *)a1 + v7;
  uint64_t v10 = (char *)a2 + v7;
  uint64_t v11 = *(void *)v10;
  LOBYTE(v10) = v10[8];
  *(void *)uint64_t v9 = v11;
  v9[8] = (char)v10;
  uint64_t v12 = (char *)a1 + v8;
  uint64_t v13 = *(void *)((char *)a2 + v8);
  char v14 = *((unsigned char *)a2 + v8 + 8);
  swift_retain();
  j__swift_retain();
  *(void *)uint64_t v12 = v13;
  v12[8] = v14;
  uint64_t v15 = a3[7];
  uint64_t v16 = a3[8];
  uint64_t v17 = (void *)((char *)a1 + v15);
  uint64_t v18 = (void *)((char *)a2 + v15);
  uint64_t v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  uint64_t v20 = (char *)a1 + v16;
  uint64_t v21 = (char *)a2 + v16;
  *uint64_t v20 = *v21;
  *((void *)v20 + 1) = *((void *)v21 + 1);
  uint64_t v22 = a3[9];
  uint64_t v23 = a3[10];
  uint64_t v24 = (void *)((char *)a1 + v22);
  uint64_t v25 = (char *)a2 + v22;
  uint64_t v27 = *(void **)v25;
  uint64_t v26 = *((void *)v25 + 1);
  *uint64_t v24 = *(void *)v25;
  v24[1] = v26;
  uint64_t v28 = (void *)((char *)a1 + v23);
  unint64_t v29 = (char *)a2 + v23;
  uint64_t v30 = *(void *)((char *)a2 + v23 + 8);
  *uint64_t v28 = *(void *)((char *)a2 + v23);
  v28[1] = v30;
  swift_retain();
  swift_retain();
  swift_retain();
  id v31 = v27;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v32 = *(int *)(sub_1000063C0(&qword_1001FB438) + 32);
  id v33 = (char *)v28 + v32;
  uint64_t v34 = &v29[v32];
  uint64_t v35 = type metadata accessor for NavigationPath();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
  return a1;
}

void *assignWithCopy for ModelResponseView(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_10002784C((uint64_t)a1, &qword_1001FAE68);
    sub_1000063C0(&qword_1001FAE68);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for DismissAction();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = *(void *)v9;
  LOBYTE(v9) = v9[8];
  *(void *)uint64_t v8 = v10;
  v8[8] = (char)v9;
  swift_retain();
  swift_release();
  uint64_t v11 = a3[6];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = *(void *)v13;
  char v15 = v13[8];
  j__swift_retain();
  *(void *)uint64_t v12 = v14;
  v12[8] = v15;
  j__swift_release();
  uint64_t v16 = a3[7];
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  *(void *)((char *)a1 + v16) = *(void *)((char *)a2 + v16);
  swift_retain();
  swift_release();
  *((void *)v17 + 1) = *((void *)v18 + 1);
  swift_retain();
  swift_release();
  uint64_t v19 = a3[8];
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  *uint64_t v20 = *v21;
  *((void *)v20 + 1) = *((void *)v21 + 1);
  swift_retain();
  swift_release();
  uint64_t v22 = a3[9];
  uint64_t v23 = (char *)a1 + v22;
  uint64_t v24 = (char *)a2 + v22;
  uint64_t v25 = *(void **)((char *)a2 + v22);
  uint64_t v26 = *(void **)v23;
  *(void *)uint64_t v23 = v25;
  id v27 = v25;

  *((void *)v23 + 1) = *((void *)v24 + 1);
  swift_retain();
  swift_release();
  uint64_t v28 = a3[10];
  unint64_t v29 = (char *)a1 + v28;
  uint64_t v30 = (char *)a2 + v28;
  *(void *)((char *)a1 + v28) = *(void *)((char *)a2 + v28);
  swift_retain();
  swift_release();
  *((void *)v29 + 1) = *((void *)v30 + 1);
  swift_retain();
  swift_release();
  uint64_t v31 = *(int *)(sub_1000063C0(&qword_1001FB438) + 32);
  uint64_t v32 = &v29[v31];
  id v33 = &v30[v31];
  uint64_t v34 = type metadata accessor for NavigationPath();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 24))(v32, v33, v34);
  return a1;
}

char *initializeWithTake for ModelResponseView(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1000063C0(&qword_1001FAE68);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for DismissAction();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = a3[6];
  uint64_t v10 = &a1[v8];
  uint64_t v11 = &a2[v8];
  *(void *)uint64_t v10 = *(void *)v11;
  v10[8] = v11[8];
  uint64_t v12 = &a1[v9];
  uint64_t v13 = &a2[v9];
  *(void *)uint64_t v12 = *(void *)v13;
  v12[8] = v13[8];
  uint64_t v14 = a3[8];
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  *(_OWORD *)&a1[v14] = *(_OWORD *)&a2[v14];
  uint64_t v15 = a3[10];
  *(_OWORD *)&a1[a3[9]] = *(_OWORD *)&a2[a3[9]];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v18 = *(void *)&a2[v15];
  uint64_t v19 = *(void *)&a2[v15 + 8];
  *(void *)uint64_t v16 = v18;
  *((void *)v16 + 1) = v19;
  uint64_t v20 = *(int *)(sub_1000063C0(&qword_1001FB438) + 32);
  uint64_t v21 = &v16[v20];
  uint64_t v22 = &v17[v20];
  uint64_t v23 = type metadata accessor for NavigationPath();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
  return a1;
}

char *assignWithTake for ModelResponseView(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_10002784C((uint64_t)a1, &qword_1001FAE68);
    uint64_t v6 = sub_1000063C0(&qword_1001FAE68);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for DismissAction();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = *(void *)v10;
  LOBYTE(v10) = v10[8];
  *(void *)uint64_t v9 = v11;
  v9[8] = (char)v10;
  swift_release();
  uint64_t v12 = a3[6];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = *(void *)v14;
  LOBYTE(v14) = v14[8];
  *(void *)uint64_t v13 = v15;
  v13[8] = (char)v14;
  j__swift_release();
  uint64_t v16 = a3[7];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  *(void *)&a1[v16] = *(void *)&a2[v16];
  swift_release();
  *((void *)v17 + 1) = *((void *)v18 + 1);
  swift_release();
  uint64_t v19 = a3[8];
  uint64_t v20 = &a1[v19];
  uint64_t v21 = &a2[v19];
  *uint64_t v20 = *v21;
  *((void *)v20 + 1) = *((void *)v21 + 1);
  swift_release();
  uint64_t v22 = a3[9];
  uint64_t v23 = &a1[v22];
  uint64_t v24 = &a2[v22];
  uint64_t v25 = *(void **)&a1[v22];
  *(void *)&a1[v22] = *(void *)&a2[v22];

  *((void *)v23 + 1) = *((void *)v24 + 1);
  swift_release();
  uint64_t v26 = a3[10];
  id v27 = &a1[v26];
  uint64_t v28 = &a2[v26];
  *(void *)&a1[v26] = *(void *)&a2[v26];
  swift_release();
  *((void *)v27 + 1) = *((void *)v28 + 1);
  swift_release();
  uint64_t v29 = *(int *)(sub_1000063C0(&qword_1001FB438) + 32);
  uint64_t v30 = &v27[v29];
  uint64_t v31 = &v28[v29];
  uint64_t v32 = type metadata accessor for NavigationPath();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 40))(v30, v31, v32);
  return a1;
}

uint64_t getEnumTagSinglePayload for ModelResponseView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000B61FC);
}

uint64_t sub_1000B61FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000063C0(&qword_100200850);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 28));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v11 = sub_1000063C0(&qword_1001FB438);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 40);
    return v12(v14, a2, v13);
  }
}

uint64_t storeEnumTagSinglePayload for ModelResponseView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000B6344);
}

uint64_t sub_1000B6344(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1000063C0(&qword_100200850);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  }
  else
  {
    uint64_t v11 = sub_1000063C0(&qword_1001FB438);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 40);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

void sub_1000B6478()
{
  sub_1000B6FC0(319, (unint64_t *)&unk_1002008C0, (uint64_t (*)(uint64_t))&type metadata accessor for DismissAction, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v0 <= 0x3F)
  {
    sub_1000B6FC0(319, (unint64_t *)&qword_100201800, (uint64_t (*)(uint64_t))&type metadata accessor for NavigationPath, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Binding);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_1000B65C0()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for ModelResponseTextViewModifier()
{
  return &type metadata for ModelResponseTextViewModifier;
}

ValueMetadata *type metadata accessor for OutputWarningView()
{
  return &type metadata for OutputWarningView;
}

uint64_t sub_1000B6708(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = v17 + ((v5 + 16) & ~(unint64_t)v5);
  }
  else
  {
    char v7 = *((unsigned char *)a2 + 8);
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = v7;
    uint64_t v8 = a2[2];
    char v9 = *((unsigned char *)a2 + 24);
    swift_retain();
    j__swift_retain();
    *(void *)(v4 + 16) = v8;
    *(unsigned char *)(v4 + 24) = v9;
    *(void *)(v4 + 32) = a2[4];
    *(unsigned char *)(v4 + 40) = *((unsigned char *)a2 + 40);
    *(void *)(v4 + 48) = a2[6];
    *(unsigned char *)(v4 + 56) = *((unsigned char *)a2 + 56);
    uint64_t v10 = a2[8];
    uint64_t v11 = *(int *)(a3 + 32);
    uint64_t v12 = v4 + v11;
    uint64_t v13 = (uint64_t)a2 + v11;
    *(void *)(v4 + 64) = v10;
    uint64_t v14 = type metadata accessor for PresentationDetent();
    uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16);
    swift_retain();
    swift_retain();
    v15(v12, v13, v14);
    uint64_t v16 = sub_1000063C0(&qword_1001FDC78);
    *(void *)(v12 + *(int *)(v16 + 28)) = *(void *)(v13 + *(int *)(v16 + 28));
  }
  swift_retain();
  return v4;
}

uint64_t sub_1000B6868(uint64_t a1, uint64_t a2)
{
  swift_release();
  j__swift_release();
  swift_release();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = type metadata accessor for PresentationDetent();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  sub_1000063C0(&qword_1001FDC78);

  return swift_release();
}

uint64_t sub_1000B6914(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v6;
  uint64_t v7 = *(void *)(a2 + 16);
  char v8 = *(unsigned char *)(a2 + 24);
  swift_retain();
  j__swift_retain();
  *(void *)(a1 + 16) = v7;
  *(unsigned char *)(a1 + 24) = v8;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v9 = *(void *)(a2 + 64);
  uint64_t v10 = *(int *)(a3 + 32);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  *(void *)(a1 + 64) = v9;
  uint64_t v13 = type metadata accessor for PresentationDetent();
  uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16);
  swift_retain();
  swift_retain();
  v14(v11, v12, v13);
  uint64_t v15 = sub_1000063C0(&qword_1001FDC78);
  *(void *)(v11 + *(int *)(v15 + 28)) = *(void *)(v12 + *(int *)(v15 + 28));
  swift_retain();
  return a1;
}

uint64_t sub_1000B6A28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v6;
  swift_retain();
  swift_release();
  uint64_t v7 = *(void *)(a2 + 16);
  char v8 = *(unsigned char *)(a2 + 24);
  j__swift_retain();
  *(void *)(a1 + 16) = v7;
  *(unsigned char *)(a1 + 24) = v8;
  j__swift_release();
  uint64_t v9 = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = v9;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_retain();
  swift_release();
  uint64_t v10 = *(int *)(a3 + 32);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = type metadata accessor for PresentationDetent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  uint64_t v14 = sub_1000063C0(&qword_1001FDC78);
  *(void *)(v11 + *(int *)(v14 + 28)) = *(void *)(v12 + *(int *)(v14 + 28));
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1000B6B64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v4 = *(int *)(a3 + 32);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t v7 = type metadata accessor for PresentationDetent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  uint64_t v8 = sub_1000063C0(&qword_1001FDC78);
  *(void *)(v5 + *(int *)(v8 + 28)) = *(void *)(v6 + *(int *)(v8 + 28));
  return a1;
}

uint64_t sub_1000B6C28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v6;
  swift_release();
  char v7 = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = v7;
  j__swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_release();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_release();
  uint64_t v8 = *(int *)(a3 + 32);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = type metadata accessor for PresentationDetent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  uint64_t v12 = sub_1000063C0(&qword_1001FDC78);
  *(void *)(v9 + *(int *)(v12 + 28)) = *(void *)(v10 + *(int *)(v12 + 28));
  swift_release();
  return a1;
}

uint64_t sub_1000B6D30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000B6D44);
}

uint64_t sub_1000B6D44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 48);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_1000063C0(&qword_1001FDC78);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 32);
    return v10(v12, a2, v11);
  }
}

uint64_t sub_1000B6E04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000B6E18);
}

uint64_t sub_1000B6E18(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 48) = a2;
  }
  else
  {
    uint64_t v7 = sub_1000063C0(&qword_1001FDC78);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 32);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for ActionButtonView(uint64_t a1)
{
  return sub_10005AFA8(a1, qword_100200960);
}

void sub_1000B6EE4()
{
  sub_1000B6FC0(319, (unint64_t *)&unk_1001FDCF0, (uint64_t (*)(uint64_t))&type metadata accessor for PresentationDetent, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for State);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1000B6FC0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1000B7024(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LocalizedStringResource();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t sub_1000B7090(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for LocalizedStringResource();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_1000B70F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LocalizedStringResource();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_1000B7158(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LocalizedStringResource();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_1000B71BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LocalizedStringResource();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_1000B7220(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LocalizedStringResource();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_1000B7284(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000B7298);
}

uint64_t sub_1000B7298(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LocalizedStringResource();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_1000B7304(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000B7318);
}

uint64_t sub_1000B7318(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LocalizedStringResource();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for InputWarningView(uint64_t a1)
{
  return sub_10005AFA8(a1, qword_100200A00);
}

uint64_t sub_1000B73A8()
{
  uint64_t result = type metadata accessor for LocalizedStringResource();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1000B7434()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000B7450@<X0>(uint64_t a1@<X8>)
{
  uint64_t v41 = a1;
  uint64_t v40 = type metadata accessor for ParagraphTypesetting();
  uint64_t v38 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  uint64_t v3 = (char *)&v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for LocalizedStringResource();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_1000063C0(&qword_1001FBA98);
  uint64_t v37 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  uint64_t v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v1, v4);
  uint64_t v42 = String.init(localized:)();
  uint64_t v43 = v10;
  sub_10002DF54();
  uint64_t v11 = Text.init<A>(_:)();
  uint64_t v13 = v12;
  char v15 = v14 & 1;
  LODWORD(v42) = static HierarchicalShapeStyle.secondary.getter();
  uint64_t v16 = Text.foregroundStyle<A>(_:)();
  uint64_t v18 = v17;
  char v20 = v19;
  uint64_t v22 = v21;
  sub_100026F18(v11, v13, v15);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v42 = v16;
  uint64_t v43 = v18;
  char v44 = v20 & 1;
  uint64_t v45 = v22;
  uint64_t v46 = KeyPath;
  char v47 = 1;
  static ParagraphTypesetting.balanced.getter();
  sub_1000063C0((uint64_t *)&unk_100201E50);
  sub_100026F30();
  View.paragraphTypesetting(_:isEnabled:)();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v3, v40);
  sub_100026F18(v42, v43, v44);
  swift_bridgeObjectRelease();
  swift_release();
  LOBYTE(v18) = static Edge.Set.bottom.getter();
  EdgeInsets.init(_all:)();
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  uint64_t v32 = v37;
  uint64_t v33 = v41;
  uint64_t v34 = v39;
  (*(void (**)(uint64_t, char *, uint64_t))(v37 + 16))(v41, v9, v39);
  uint64_t v35 = v33 + *(int *)(sub_1000063C0((uint64_t *)&unk_1001FBAA0) + 36);
  *(unsigned char *)uint64_t v35 = v18;
  *(void *)(v35 + 8) = v25;
  *(void *)(v35 + 16) = v27;
  *(void *)(v35 + 24) = v29;
  *(void *)(v35 + 32) = v31;
  *(unsigned char *)(v35 + 40) = 0;
  return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v9, v34);
}

uint64_t sub_1000B77E4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000B7800@<X0>(uint64_t a1@<X8>)
{
  uint64_t v29 = a1;
  uint64_t v1 = type metadata accessor for ParagraphTypesetting();
  uint64_t v25 = *(void *)(v1 - 8);
  uint64_t v26 = v1;
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000063C0(&qword_1001FBA98);
  uint64_t v27 = *(void *)(v4 - 8);
  uint64_t v28 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v7 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v9 = v8;
  char v11 = v10 & 1;
  LODWORD(v30) = static HierarchicalShapeStyle.secondary.getter();
  uint64_t v12 = Text.foregroundStyle<A>(_:)();
  uint64_t v14 = v13;
  char v16 = v15;
  uint64_t v18 = v17;
  sub_100026F18(v7, v9, v11);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v30 = v12;
  uint64_t v31 = v14;
  char v32 = v16 & 1;
  uint64_t v33 = v18;
  uint64_t v34 = KeyPath;
  char v35 = 1;
  static ParagraphTypesetting.balanced.getter();
  sub_1000063C0((uint64_t *)&unk_100201E50);
  sub_100026F30();
  View.paragraphTypesetting(_:isEnabled:)();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v3, v26);
  sub_100026F18(v30, v31, v32);
  swift_bridgeObjectRelease();
  swift_release();
  LOBYTE(v14) = static Edge.Set.bottom.getter();
  uint64_t v21 = v27;
  uint64_t v20 = v28;
  uint64_t v22 = v29;
  (*(void (**)(uint64_t, char *, uint64_t))(v27 + 16))(v29, v6, v28);
  uint64_t v23 = v22 + *(int *)(sub_1000063C0((uint64_t *)&unk_1001FBAA0) + 36);
  *(unsigned char *)uint64_t v23 = v14;
  *(_OWORD *)(v23 + 8) = 0u;
  *(_OWORD *)(v23 + 24) = 0u;
  *(unsigned char *)(v23 + 40) = 1;
  return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v6, v20);
}

void *sub_1000B7AEC()
{
  uint64_t v1 = *(void *)(v0 + 16);
  char v2 = *(unsigned char *)(v0 + 24);
  j__swift_retain();
  uint64_t v3 = sub_1000207F8(v1, v2);
  j__swift_release();
  if (v3)
  {
    swift_getKeyPath();
    sub_1000B4C1C((unint64_t *)&qword_1001FB410, (void (*)(uint64_t))type metadata accessor for PresentationModel);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    if ((*(unsigned char *)(v3 + 24) & 1) != 0 || *(void *)(v3 + 16) != 1)
    {
      swift_release();
      return &_swiftEmptySetSingleton;
    }
    swift_release();
  }
  sub_1000063C0(&qword_1001FDF00);
  type metadata accessor for PresentationDetent();
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_10018A740;
  static PresentationDetent.medium.getter();
  static PresentationDetent.large.getter();
  uint64_t v5 = sub_100145F08(v4);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  return v5;
}

uint64_t sub_1000B7CC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v88 = a1;
  uint64_t v102 = a2;
  uint64_t v2 = type metadata accessor for ActionButtonView(0);
  uint64_t v81 = *(void *)(v2 - 8);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v83 = (char *)&v78 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = v4;
  __chkstk_darwin(v3);
  uint64_t v95 = (uint64_t)&v78 - v5;
  uint64_t v91 = type metadata accessor for SmallIconTitleLabelStyle(0);
  __chkstk_darwin(v91);
  uint64_t v7 = (char *)&v78 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000063C0(&qword_100200A90);
  uint64_t v9 = __chkstk_darwin(v8);
  char v11 = (char *)&v78 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v87 = (uint64_t)&v78 - v12;
  uint64_t v90 = sub_1000063C0(&qword_100200AA0);
  uint64_t v89 = *(void *)(v90 - 8);
  __chkstk_darwin(v90);
  uint64_t v86 = (char *)&v78 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = sub_1000063C0(&qword_100200A88);
  __chkstk_darwin(v85);
  char v15 = (char *)&v78 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = sub_1000063C0(&qword_100200A78);
  __chkstk_darwin(v84);
  uint64_t v92 = (uint64_t)&v78 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = sub_1000063C0(&qword_100200A68);
  __chkstk_darwin(v94);
  uint64_t v79 = (char *)&v78 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v96 = sub_1000063C0(&qword_100200A58);
  __chkstk_darwin(v96);
  uint64_t v97 = (uint64_t)&v78 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = sub_1000063C0(&qword_100200A40);
  __chkstk_darwin(v99);
  uint64_t v80 = (char *)&v78 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1000063C0(&qword_100200A38);
  uint64_t v100 = *(void *)(v20 - 8);
  uint64_t v101 = v20;
  __chkstk_darwin(v20);
  uint64_t v98 = (char *)&v78 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1001FAD20 != -1) {
    swift_once();
  }
  long long v22 = xmmword_1002129C0;
  uint64_t v23 = static Alignment.center.getter();
  uint64_t v25 = v24;
  *((void *)v11 + 3) = 0;
  *((void *)v11 + 4) = 0;
  v11[40] = 1;
  uint64_t v26 = (uint64_t *)&v11[*(int *)(v8 + 48)];
  *uint64_t v26 = swift_getKeyPath();
  sub_1000063C0((uint64_t *)&unk_1001FAE30);
  swift_storeEnumTagMultiPayload();
  *char v11 = 0;
  *((void *)v11 + 1) = v23;
  *((void *)v11 + 2) = v25;
  *(_OWORD *)(v11 + 24) = v22;
  v11[40] = 0;
  uint64_t v27 = v88;
  sub_1000B88FC(v88, (uint64_t)&v11[*(int *)(v8 + 44)]);
  uint64_t v28 = v87;
  sub_100026FD0((uint64_t)v11, v87, &qword_100200A90);
  char v29 = *(unsigned char *)(v27 + 40);
  uint64_t v30 = *(void *)(v27 + 48);
  uint64_t v103 = *(void *)(v27 + 32);
  LOBYTE(v104) = v29;
  uint64_t v105 = v30;
  uint64_t v93 = sub_1000063C0(&qword_1001FDE70);
  State.projectedValue.getter();
  uint64_t v31 = v107;
  char v32 = v108;
  *(_OWORD *)uint64_t v7 = v106;
  *((void *)v7 + 2) = v31;
  v7[24] = v32;
  uint64_t v33 = (uint64_t *)&v7[*(int *)(v91 + 20)];
  *uint64_t v33 = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  sub_100027F2C(&qword_100200A98, &qword_100200A90);
  sub_1000B4C1C((unint64_t *)&unk_1001FD560, (void (*)(uint64_t))type metadata accessor for SmallIconTitleLabelStyle);
  uint64_t v34 = v86;
  View.labelStyle<A>(_:)();
  sub_1000BA738((uint64_t)v7, type metadata accessor for SmallIconTitleLabelStyle);
  sub_10002784C(v28, &qword_100200A90);
  uint64_t v35 = v89;
  uint64_t v36 = v90;
  (*(void (**)(char *, char *, uint64_t))(v89 + 16))(v15, v34, v90);
  uint64_t v37 = &v15[*(int *)(v85 + 36)];
  *(_WORD *)uint64_t v37 = 0;
  void v37[2] = 1;
  (*(void (**)(char *, uint64_t))(v35 + 8))(v34, v36);
  uint64_t v38 = v92;
  sub_100008DD4((uint64_t)v15, v92, &qword_100200A88);
  *(_WORD *)(v38 + *(int *)(v84 + 36)) = 256;
  sub_10002784C((uint64_t)v15, &qword_100200A88);
  LOBYTE(v35) = *(unsigned char *)(v27 + 8);
  uint64_t v39 = swift_retain();
  uint64_t v40 = sub_100020F98(v39, v35);
  swift_release();
  swift_getKeyPath();
  *(void *)&long long v106 = v40;
  sub_1000B4C1C((unint64_t *)&qword_1001FD2A0, (void (*)(uint64_t))type metadata accessor for ToolModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  LODWORD(v35) = *(unsigned __int8 *)(v40 + 88);
  swift_release();
  uint64_t v41 = v95;
  sub_1000BA6C8(v27, v95, type metadata accessor for ActionButtonView);
  uint64_t v42 = v27;
  if (v35 == 1)
  {
    sub_1000BA738(v41, type metadata accessor for ActionButtonView);
LABEL_7:
    char v47 = 1;
    goto LABEL_8;
  }
  char v43 = *(unsigned char *)(v41 + 8);
  uint64_t v44 = swift_retain();
  uint64_t v45 = sub_100020F98(v44, v43);
  swift_release();
  swift_getKeyPath();
  *(void *)&long long v106 = v45;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v46 = *(void *)(v45 + 96);
  swift_errorRetain();
  swift_release();
  sub_1000BA738(v41, type metadata accessor for ActionButtonView);
  if (v46)
  {
    swift_errorRelease();
    goto LABEL_7;
  }
  char v47 = 0;
LABEL_8:
  uint64_t v48 = (uint64_t)v83;
  uint64_t v49 = v81;
  uint64_t v50 = (uint64_t)v80;
  uint64_t v51 = (uint64_t)v79;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v53 = swift_allocObject();
  *(unsigned char *)(v53 + 16) = v47;
  sub_100008DD4(v38, v51, &qword_100200A78);
  long long v54 = (uint64_t *)(v51 + *(int *)(v94 + 36));
  *long long v54 = KeyPath;
  v54[1] = (uint64_t)sub_100026D50;
  v54[2] = v53;
  sub_10002784C(v38, &qword_100200A78);
  char v55 = static Edge.Set.bottom.getter();
  if (qword_1001FACE8 != -1) {
    swift_once();
  }
  char v56 = byte_1002007D0;
  uint64_t v57 = 0;
  uint64_t v58 = 0;
  uint64_t v59 = 0;
  uint64_t v60 = 0;
  if ((byte_1002007D0 & 1) == 0)
  {
    EdgeInsets.init(_all:)();
    uint64_t v57 = v61;
    uint64_t v58 = v62;
    uint64_t v59 = v63;
    uint64_t v60 = v64;
  }
  uint64_t v65 = v97;
  sub_100008DD4(v51, v97, &qword_100200A68);
  uint64_t v66 = v65 + *(int *)(v96 + 36);
  *(unsigned char *)uint64_t v66 = v55;
  *(void *)(v66 + 8) = v57;
  *(void *)(v66 + 16) = v58;
  *(void *)(v66 + 24) = v59;
  *(void *)(v66 + 32) = v60;
  *(unsigned char *)(v66 + 40) = v56;
  sub_10002784C(v51, &qword_100200A68);
  char v67 = *(unsigned char *)(v42 + 40);
  uint64_t v68 = *(void *)(v42 + 48);
  uint64_t v103 = *(void *)(v42 + 32);
  LOBYTE(v104) = v67;
  uint64_t v105 = v68;
  State.projectedValue.getter();
  long long v96 = v106;
  uint64_t v69 = v107;
  char v70 = v108;
  sub_100008DD4(v65, v50, &qword_100200A58);
  uint64_t v71 = v50 + *(int *)(v99 + 36);
  *(_OWORD *)uint64_t v71 = v96;
  *(void *)(v71 + 16) = v69;
  *(unsigned char *)(v71 + 24) = v70;
  sub_10002784C(v65, &qword_100200A58);
  uint64_t v72 = *(void *)(v42 + 64);
  LOBYTE(v103) = *(unsigned char *)(v42 + 56);
  uint64_t v104 = v72;
  sub_1000063C0(&qword_1001FB5A8);
  State.projectedValue.getter();
  sub_1000BA6C8(v42, v48, type metadata accessor for ActionButtonView);
  unint64_t v73 = (*(unsigned __int8 *)(v49 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
  uint64_t v74 = swift_allocObject();
  sub_1000BA7B4(v48, v74 + v73, type metadata accessor for ActionButtonView);
  sub_1000063C0(&qword_1001FDEF0);
  sub_1000BB2F0(&qword_100200A48, &qword_100200A40, (void (*)(void))sub_1000BA424, (void (*)(void))sub_100025EB4);
  unint64_t v75 = sub_10006491C();
  *(void *)&long long v106 = &type metadata for SharingActivityView;
  *((void *)&v106 + 1) = v75;
  swift_getOpaqueTypeConformance2();
  uint64_t v76 = v98;
  View.sheet<A>(isPresented:onDismiss:content:)();
  swift_release();
  swift_release();
  swift_release();
  sub_10002784C(v50, &qword_100200A40);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v100 + 32))(v102, v76, v101);
}

uint64_t sub_1000B88FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v76 = a2;
  uint64_t v3 = type metadata accessor for TapGesture();
  uint64_t v67 = *(void *)(v3 - 8);
  uint64_t v68 = v3;
  __chkstk_darwin(v3);
  uint64_t v65 = (char *)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = sub_1000063C0(&qword_100200AA8);
  uint64_t v69 = *(void *)(v71 - 8);
  __chkstk_darwin(v71);
  uint64_t v66 = (char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000063C0(&qword_100200AB0);
  uint64_t v74 = *(void *)(v6 - 8);
  uint64_t v75 = v6;
  uint64_t v7 = __chkstk_darwin(v6);
  unint64_t v73 = (char *)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  char v70 = (char *)&v61 - v9;
  uint64_t v10 = sub_1000063C0(&qword_1001FDF08);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v72 = (uint64_t)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v85 = (uint64_t)&v61 - v13;
  uint64_t v14 = type metadata accessor for ActionButtonView(0);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  __chkstk_darwin(v14 - 8);
  uint64_t v17 = sub_1000063C0(&qword_1001FD580);
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v61 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = sub_1000063C0(&qword_1001FD588);
  uint64_t v64 = *(void *)(v86 - 8);
  uint64_t v21 = __chkstk_darwin(v86);
  uint64_t v23 = (uint64_t)&v61 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v61 - v24;
  sub_1000BA6C8(a1, (uint64_t)&v61 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ActionButtonView);
  uint64_t v26 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v27 = (v26 + 16) & ~v26;
  uint64_t v28 = v23;
  uint64_t v81 = v26 | 7;
  uint64_t v82 = v27 + v16;
  uint64_t v29 = swift_allocObject();
  uint64_t v83 = v27;
  uint64_t v30 = v29 + v27;
  uint64_t v31 = (char *)&v61 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000BA7B4((uint64_t)v31, v30, type metadata accessor for ActionButtonView);
  uint64_t v32 = sub_1000063C0(&qword_1001FD590);
  unint64_t v79 = sub_100057CF4();
  uint64_t v80 = v32;
  Button.init(action:label:)();
  uint64_t v78 = *(void (**)(uint64_t, char *, uint64_t))(v18 + 16);
  v78(v23, v20, v17);
  uint64_t v77 = *(void (**)(char *, uint64_t))(v18 + 8);
  v77(v20, v17);
  uint64_t v87 = v25;
  sub_100026FD0(v23, (uint64_t)v25, &qword_1001FD588);
  uint64_t v33 = a1;
  LOBYTE(v25) = *(unsigned char *)(a1 + 8);
  uint64_t v34 = swift_retain();
  sub_100020F98(v34, (char)v25);
  swift_release();
  LOBYTE(v23) = sub_10009B6E4();
  swift_release();
  uint64_t v84 = v28;
  uint64_t v63 = v18 + 8;
  if (v23)
  {
    uint64_t v35 = a1;
    sub_1000BA6C8(a1, (uint64_t)v31, type metadata accessor for ActionButtonView);
    uint64_t v36 = swift_allocObject();
    sub_1000BA7B4((uint64_t)v31, v36 + v83, type metadata accessor for ActionButtonView);
    Button.init(action:label:)();
    v78(v28, v20, v17);
    v77(v20, v17);
    uint64_t v37 = v85;
    sub_100026FD0(v28, v85, &qword_1001FD588);
    uint64_t v38 = 0;
    uint64_t v39 = v37;
    uint64_t v33 = v35;
  }
  else
  {
    uint64_t v38 = 1;
    uint64_t v39 = v85;
  }
  uint64_t v62 = v33;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v64 + 56))(v39, v38, 1, v86);
  sub_1000BA6C8(v33, (uint64_t)v31, type metadata accessor for ActionButtonView);
  uint64_t v40 = swift_allocObject();
  uint64_t v41 = v83;
  sub_1000BA7B4((uint64_t)v31, v40 + v83, type metadata accessor for ActionButtonView);
  Button.init(action:label:)();
  uint64_t v42 = v84;
  v78(v84, v20, v17);
  v77(v20, v17);
  char v43 = v65;
  TapGesture.init(count:)();
  sub_1000BA6C8(v62, (uint64_t)v31, type metadata accessor for ActionButtonView);
  uint64_t v44 = swift_allocObject();
  sub_1000BA7B4((uint64_t)v31, v44 + v41, type metadata accessor for ActionButtonView);
  uint64_t v45 = swift_allocObject();
  *(void *)(v45 + 16) = sub_1000BAB20;
  *(void *)(v45 + 24) = v44;
  uint64_t v46 = v66;
  uint64_t v47 = v68;
  Gesture.onEnded(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v67 + 8))(v43, v47);
  static GestureMask.all.getter();
  sub_1000BABAC();
  sub_100027F2C(&qword_100200AD0, &qword_100200AA8);
  uint64_t v48 = v73;
  uint64_t v49 = v71;
  uint64_t v50 = v42;
  View.simultaneousGesture<A>(_:including:)();
  (*(void (**)(char *, uint64_t))(v69 + 8))(v46, v49);
  sub_10002784C(v42, &qword_1001FD588);
  uint64_t v52 = v74;
  uint64_t v51 = v75;
  uint64_t v53 = v70;
  (*(void (**)(char *, char *, uint64_t))(v74 + 32))(v70, v48, v75);
  sub_100008DD4((uint64_t)v87, v50, &qword_1001FD588);
  uint64_t v54 = v85;
  uint64_t v55 = v72;
  sub_100008DD4(v85, v72, &qword_1001FDF08);
  char v56 = *(void (**)(char *, char *, uint64_t))(v52 + 16);
  v56(v48, v53, v51);
  uint64_t v57 = v76;
  sub_100008DD4(v50, v76, &qword_1001FD588);
  uint64_t v58 = sub_1000063C0(&qword_100200AD8);
  sub_100008DD4(v55, v57 + *(int *)(v58 + 48), &qword_1001FDF08);
  v56((char *)(v57 + *(int *)(v58 + 64)), v48, v51);
  uint64_t v59 = *(void (**)(char *, uint64_t))(v52 + 8);
  v59(v53, v51);
  sub_10002784C(v54, &qword_1001FDF08);
  sub_10002784C((uint64_t)v87, &qword_1001FD588);
  v59(v48, v51);
  sub_10002784C(v55, &qword_1001FDF08);
  return sub_10002784C(v84, &qword_1001FD588);
}