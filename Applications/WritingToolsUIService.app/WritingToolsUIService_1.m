uint64_t sub_1000B9314(uint64_t a1)
{
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  void *Strong;
  uint64_t v11;
  void *v12;
  uint64_t result;

  v1 = *(unsigned char *)(a1 + 8);
  v2 = swift_retain();
  v3 = sub_100020F98(v2, v1);
  swift_release();
  swift_getKeyPath();
  sub_1000B4C1C((unint64_t *)&unk_100201540, (void (*)(uint64_t))type metadata accessor for RewritingModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  v4 = *(void *)(v3 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__analyticsInstance);
  swift_retain();
  swift_release();
  if (v4)
  {
    sub_10000E1DC(IAPayloadValueWritingToolsInteractionTypeCopy);
    swift_release();
  }
  v5 = swift_retain();
  v6 = sub_100020F98(v5, v1);
  swift_release();
  swift_getKeyPath();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  v7 = *(void **)(v6 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__resultAttributedString);
  v8 = v7;
  swift_release();
  if (v7)
  {
    v9 = swift_retain();
    sub_100020F98(v9, v1);
    swift_release();
    Strong = (void *)swift_unknownObjectWeakLoadStrong();
    swift_release();
    if (Strong)
    {
      [Strong copyText:v8];

      swift_unknownObjectRelease();
    }
    else
    {
    }
  }
  v11 = swift_retain();
  sub_100020F98(v11, v1);
  swift_release();
  v12 = (void *)swift_unknownObjectWeakLoadStrong();
  result = swift_release();
  if (v12)
  {
    [v12 endWritingTools];
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1000B9534@<X0>(uint64_t a1@<X8>)
{
  return sub_1000B9A1C(a1);
}

uint64_t sub_1000B955C(uint64_t a1)
{
  char v1 = *(unsigned char *)(a1 + 8);
  uint64_t v2 = swift_retain();
  uint64_t v3 = sub_100020F98(v2, v1);
  swift_release();
  swift_getKeyPath();
  sub_1000B4C1C((unint64_t *)&unk_100201540, (void (*)(uint64_t))type metadata accessor for RewritingModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v4 = *(void *)(v3 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__analyticsInstance);
  swift_retain();
  swift_release();
  if (v4)
  {
    if (qword_1001FAB48 != -1) {
      swift_once();
    }
    sub_10000E1DC((void *)qword_100212688);
    swift_release();
  }
  uint64_t v5 = swift_retain();
  uint64_t v6 = sub_100020F98(v5, v1);
  swift_release();
  swift_getKeyPath();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  v7 = *(void **)(v6 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__resultAttributedString);
  id v8 = v7;
  swift_release();
  if (v7)
  {
    uint64_t v9 = swift_retain();
    sub_100020F98(v9, v1);
    swift_release();
    Strong = (void *)swift_unknownObjectWeakLoadStrong();
    swift_release();
    if (Strong)
    {
      [Strong replaceSelectionWithText:v8];

      swift_unknownObjectRelease();
    }
    else
    {
    }
  }
  uint64_t v11 = swift_retain();
  sub_100020F98(v11, v1);
  swift_release();
  v12 = (void *)swift_unknownObjectWeakLoadStrong();
  uint64_t result = swift_release();
  if (v12)
  {
    [v12 endWritingTools];
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1000B97A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1000063C0(&qword_1001FBBC0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  Label.init(title:icon:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 16))(a1, v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1000B98E0@<X0>(uint64_t a1@<X8>)
{
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t result = Text.init(_:tableName:bundle:comment:)();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_1000B9954@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = Image.init(_internalSystemName:)();
  *a1 = result;
  return result;
}

uint64_t sub_1000B9998()
{
  return State.wrappedValue.setter();
}

uint64_t sub_1000B99F0@<X0>(uint64_t a1@<X8>)
{
  return sub_1000B9A1C(a1);
}

uint64_t sub_1000B9A1C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1000063C0(&qword_1001FBBC0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  LocalizedStringKey.init(stringLiteral:)();
  Label<>.init(_:systemImage:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 16))(a1, v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1000B9B3C(uint64_t a1)
{
  char v1 = *(unsigned char *)(a1 + 8);
  uint64_t v2 = swift_retain();
  uint64_t v3 = sub_100020F98(v2, v1);
  swift_release();
  swift_getKeyPath();
  sub_1000B4C1C((unint64_t *)&unk_100201540, (void (*)(uint64_t))type metadata accessor for RewritingModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v4 = *(void *)(v3 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__analyticsInstance);
  swift_retain();
  uint64_t result = swift_release();
  if (v4)
  {
    sub_10000E1DC(IAPayloadValueWritingToolsInteractionTypeShare);
    return swift_release();
  }
  return result;
}

uint64_t sub_1000B9C30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000063C0(&qword_1001FDEE8);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for AttributedString();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_1000063C0(&qword_1001FDEF0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v12 = *(unsigned char *)(a1 + 8);
  uint64_t v13 = swift_retain();
  v14 = (char *)sub_100020F98(v13, v12);
  swift_release();
  swift_getKeyPath();
  v20[0] = v14;
  sub_1000B4C1C((unint64_t *)&unk_100201540, (void (*)(uint64_t))type metadata accessor for RewritingModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  v15 = *(void **)&v14[OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__resultAttributedString];
  id v16 = v15;
  swift_release();
  if (!v15)
  {
    sub_1000BA894();
    AttributedString.init(stringLiteral:)();
    id v16 = (id)NSAttributedString.init(_:)();
  }
  sub_1000063C0(&qword_1001FDEF8);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_10018A720;
  *(void *)(v17 + 32) = UIActivityTypeCopyToPasteboard;
  v20[0] = v16;
  v20[1] = (id)v17;
  v18 = UIActivityTypeCopyToPasteboard;
  sub_1000B7AEC();
  type metadata accessor for ActionButtonView(0);
  sub_1000063C0(&qword_1001FDC78);
  State.projectedValue.getter();
  sub_10006491C();
  View.presentationDetents(_:selection:)();
  swift_bridgeObjectRelease();
  sub_10002784C((uint64_t)v6, &qword_1001FDEE8);

  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(a2, v11, v8);
}

void sub_1000B9F30()
{
  id v0 = [self currentDevice];
  id v1 = [v0 userInterfaceIdiom];

  uint64_t v2 = 0x4024000000000000;
  if (v1 == (id)6) {
    uint64_t v2 = 0x401C000000000000;
  }
  qword_1002007C8 = v2;
  byte_1002007D0 = 0;
}

uint64_t sub_1000B9FA4()
{
  return Section<>.init(content:)();
}

uint64_t sub_1000BA0D0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000BA0EC()
{
  return swift_getOpaqueTypeConformance2();
}

double sub_1000BA108@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = static Alignment.center.getter();
  return sub_100019C94(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, a1, 0.0, 1, INFINITY, 0, v2, v3);
}

void sub_1000BA17C()
{
  id v0 = [self currentDevice];
  id v1 = [v0 userInterfaceIdiom];

  unint64_t v2 = 0xC024000000000000;
  if (v1 == (id)6) {
    unint64_t v2 = 0xC036000000000000;
  }
  qword_1002007D8 = v2;
  byte_1002007E0 = 0;
}

uint64_t sub_1000BA1F0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1000B4C1C((unint64_t *)&qword_1001FB410, (void (*)(uint64_t))type metadata accessor for PresentationModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  char v5 = *(unsigned char *)(v3 + 24);
  *(void *)a2 = *(void *)(v3 + 16);
  *(unsigned char *)(a2 + 8) = v5;
  return result;
}

uint64_t sub_1000BA2A0()
{
  return swift_release();
}

uint64_t sub_1000BA374@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = EnvironmentValues.multilineTextAlignment.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1000BA3A0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = EnvironmentValues.multilineTextAlignment.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1000BA3CC()
{
  return EnvironmentValues.multilineTextAlignment.setter();
}

uint64_t sub_1000BA3F4()
{
  return EnvironmentValues.multilineTextAlignment.setter();
}

uint64_t sub_1000BA41C@<X0>(uint64_t a1@<X8>)
{
  return sub_1000B7CC8(*(void *)(v1 + 16), a1);
}

uint64_t sub_1000BA424()
{
  return sub_1000BA454(&qword_100200A50, &qword_100200A58, (void (*)(void))sub_1000BA4D0);
}

uint64_t sub_1000BA454(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100006C14(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000BA4D0()
{
  unint64_t result = qword_100200A60;
  if (!qword_100200A60)
  {
    sub_100006C14(&qword_100200A68);
    sub_1000BA454(&qword_100200A70, &qword_100200A78, (void (*)(void))sub_1000BA59C);
    sub_100027F2C(&qword_1001FC6D8, &qword_1001FD760);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100200A60);
  }
  return result;
}

unint64_t sub_1000BA59C()
{
  unint64_t result = qword_100200A80;
  if (!qword_100200A80)
  {
    sub_100006C14(&qword_100200A88);
    sub_100006C14(&qword_100200A90);
    type metadata accessor for SmallIconTitleLabelStyle(255);
    sub_100027F2C(&qword_100200A98, &qword_100200A90);
    sub_1000B4C1C((unint64_t *)&unk_1001FD560, (void (*)(uint64_t))type metadata accessor for SmallIconTitleLabelStyle);
    swift_getOpaqueTypeConformance2();
    sub_100026CDC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100200A80);
  }
  return result;
}

uint64_t sub_1000BA6C8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000BA738(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1000BA7A0()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1000BA7B4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000BA81C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for ActionButtonView(0) - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_1000B9C30(v4, a1);
}

unint64_t sub_1000BA894()
{
  unint64_t result = qword_1001FEEA8;
  if (!qword_1001FEEA8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1001FEEA8);
  }
  return result;
}

uint64_t sub_1000BA8DC()
{
  return sub_100136954(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32));
}

void sub_1000BA8FC()
{
  sub_10009C3FC(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1000BA91C()
{
  uint64_t v1 = (int *)(type metadata accessor for ActionButtonView(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;
  swift_release();
  j__swift_release();
  swift_release();
  swift_release();
  uint64_t v7 = v6 + v1[10];
  uint64_t v8 = type metadata accessor for PresentationDetent();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  sub_1000063C0(&qword_1001FDC78);
  swift_release();

  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_1000BAA44()
{
  return sub_1000BAAA0(type metadata accessor for ActionButtonView, sub_1000B9314);
}

uint64_t sub_1000BAA74()
{
  return sub_1000BAAA0(type metadata accessor for ActionButtonView, (uint64_t (*)(uint64_t))sub_1000B9998);
}

uint64_t sub_1000BAAA0(uint64_t (*a1)(void), uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = *(void *)(a1(0) - 8);
  uint64_t v4 = v2 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return a2(v4);
}

uint64_t sub_1000BAB20()
{
  return sub_1000BAAA0(type metadata accessor for ActionButtonView, sub_1000B9B3C);
}

uint64_t sub_1000BAB4C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000BAB84()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

unint64_t sub_1000BABAC()
{
  unint64_t result = qword_100200AB8;
  if (!qword_100200AB8)
  {
    sub_100006C14(&qword_1001FD588);
    sub_100027F2C(&qword_100200AC0, &qword_1001FD580);
    sub_1000BAC4C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100200AB8);
  }
  return result;
}

unint64_t sub_1000BAC4C()
{
  unint64_t result = qword_100200AC8;
  if (!qword_100200AC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100200AC8);
  }
  return result;
}

uint64_t sub_1000BACA4()
{
  return sub_1000BAAA0(type metadata accessor for ActionButtonView, sub_1000B955C);
}

uint64_t sub_1000BACD8@<X0>(uint64_t a1@<X8>)
{
  return sub_1000B4E2C(*(void *)(v1 + 16), a1);
}

unint64_t sub_1000BACE0()
{
  unint64_t result = qword_100200AE8;
  if (!qword_100200AE8)
  {
    sub_100006C14(&qword_100200AE0);
    sub_100027F2C((unint64_t *)&unk_1001FDDF0, &qword_1001FC6B8);
    sub_1000BAD80();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100200AE8);
  }
  return result;
}

unint64_t sub_1000BAD80()
{
  unint64_t result = qword_100200AF0;
  if (!qword_100200AF0)
  {
    sub_100006C14(&qword_100200AF8);
    sub_100027F2C((unint64_t *)&unk_1001FDDF0, &qword_1001FC6B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100200AF0);
  }
  return result;
}

uint64_t sub_1000BAE1C()
{
  uint64_t v1 = type metadata accessor for ModelResponseView(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v5 = v0 + v3;
  sub_1000063C0(&qword_1001FAE68);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for DismissAction();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
  }
  else
  {
    swift_release();
  }
  swift_release();
  j__swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  uint64_t v7 = v5 + *(int *)(v1 + 40);
  swift_release();
  swift_release();
  uint64_t v8 = v7 + *(int *)(sub_1000063C0(&qword_1001FB438) + 32);
  uint64_t v9 = type metadata accessor for NavigationPath();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_1000BAFF4()
{
  return sub_1000BAAA0(type metadata accessor for ModelResponseView, (uint64_t (*)(uint64_t))sub_1000B5528);
}

uint64_t sub_1000BB024()
{
  return sub_1000BAAA0(type metadata accessor for ModelResponseView, (uint64_t (*)(uint64_t))sub_1000B541C);
}

uint64_t sub_1000BB060@<X0>(uint64_t a1@<X8>)
{
  return sub_1000B2730(*(void *)(v1 + 16), a1);
}

uint64_t sub_1000BB06C()
{
  return sub_1000BAAA0(type metadata accessor for ModelResponseView, sub_1000B467C);
}

unint64_t sub_1000BB0A0()
{
  unint64_t result = qword_100200B58;
  if (!qword_100200B58)
  {
    sub_100006C14(&qword_1001FB778);
    sub_100027F2C(&qword_100200B60, &qword_1001FB770);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100200B58);
  }
  return result;
}

unint64_t sub_1000BB140()
{
  unint64_t result = qword_100200B68;
  if (!qword_100200B68)
  {
    sub_100006C14(&qword_100200B18);
    sub_100006C14(&qword_100200B08);
    sub_1000BA454(&qword_100200B50, &qword_100200B08, (void (*)(void))sub_1000BB0A0);
    sub_10002DF54();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100200B68);
  }
  return result;
}

unint64_t sub_1000BB238()
{
  unint64_t result = qword_100200B70;
  if (!qword_100200B70)
  {
    sub_100006C14(&qword_100200B28);
    sub_100006C14(&qword_100200B18);
    sub_1000BB140();
    swift_getOpaqueTypeConformance2();
    sub_10003F42C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100200B70);
  }
  return result;
}

uint64_t sub_1000BB2F0(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100006C14(a2);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000BB378()
{
  unint64_t result = qword_100200BD8;
  if (!qword_100200BD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100200BD8);
  }
  return result;
}

unint64_t sub_1000BB3CC()
{
  unint64_t result = qword_100200BE8;
  if (!qword_100200BE8)
  {
    sub_100006C14(&qword_100200B90);
    sub_100006C14(&qword_100200BC8);
    sub_1000BB2F0(&qword_100200BD0, &qword_100200BC8, (void (*)(void))sub_10008A550, (void (*)(void))sub_1000BB378);
    swift_getOpaqueTypeConformance2();
    sub_1000B4C1C(&qword_1001FD8A0, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100200BE8);
  }
  return result;
}

uint64_t sub_1000BB50C@<X0>(uint64_t a1@<X8>)
{
  return sub_1000B401C(*(void *)(v1 + 16), a1);
}

unint64_t sub_1000BB514()
{
  unint64_t result = qword_100200C00;
  if (!qword_100200C00)
  {
    sub_100006C14(&qword_100200BF8);
    sub_100006C14(&qword_100200C08);
    sub_1000BB5F4();
    swift_getOpaqueTypeConformance2();
    sub_1000B4C1C(&qword_1001FD8A0, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100200C00);
  }
  return result;
}

unint64_t sub_1000BB5F4()
{
  unint64_t result = qword_100200C10;
  if (!qword_100200C10)
  {
    sub_100006C14(&qword_100200C08);
    sub_1000BB2F0(&qword_100200BD0, &qword_100200BC8, (void (*)(void))sub_10008A550, (void (*)(void))sub_1000BB378);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100200C10);
  }
  return result;
}

uint64_t sub_1000BB6A8(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 16);
  swift_release();

  return a1;
}

unint64_t sub_1000BB6E4()
{
  unint64_t result = qword_100200C20;
  if (!qword_100200C20)
  {
    sub_100006C14(&qword_1001FB748);
    sub_100027F2C(&qword_100200C28, &qword_1001FB740);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100200C20);
  }
  return result;
}

unint64_t sub_1000BB788()
{
  unint64_t result = qword_100200C30;
  if (!qword_100200C30)
  {
    sub_100006C14((uint64_t *)&unk_1001FBAA0);
    sub_100006C14((uint64_t *)&unk_100201E50);
    sub_100026F30();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100200C30);
  }
  return result;
}

unint64_t sub_1000BB83C()
{
  unint64_t result = qword_100200C38;
  if (!qword_100200C38)
  {
    sub_100006C14(&qword_100200C40);
    sub_100006C14(&qword_100200A40);
    sub_100006C14(&qword_1001FDEF0);
    sub_1000BB2F0(&qword_100200A48, &qword_100200A40, (void (*)(void))sub_1000BA424, (void (*)(void))sub_100025EB4);
    sub_10006491C();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100200C38);
  }
  return result;
}

uint64_t sub_1000BB978()
{
  swift_getKeyPath();
  sub_1000BCDA0();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_1000BB9E8@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1000BCDA0();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + 16);
  return result;
}

uint64_t sub_1000BBA60()
{
  return swift_release();
}

uint64_t sub_1000BBB00()
{
  swift_getKeyPath();
  sub_1000BCDA0();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1000BBB80@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1000BCDA0();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v4 = *(void *)(v3 + 32);
  *a2 = *(void *)(v3 + 24);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1000BBBFC()
{
  return swift_release();
}

uint64_t sub_1000BBCB0()
{
  v1[6] = v0;
  sub_1000063C0(&qword_1001FF820);
  v1[7] = swift_task_alloc();
  uint64_t v2 = type metadata accessor for OpenAIAuthenticator();
  v1[8] = v2;
  v1[9] = *(void *)(v2 - 8);
  v1[10] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for OpenAIAuthenticator.RateLimitBudgets();
  v1[11] = v3;
  v1[12] = *(void *)(v3 - 8);
  v1[13] = swift_task_alloc();
  v1[14] = type metadata accessor for MainActor();
  v1[15] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[16] = v5;
  v1[17] = v4;
  return _swift_task_switch(sub_1000BBE34, v5, v4);
}

uint64_t sub_1000BBE34()
{
  type metadata accessor for GenerativeAssistantSettingsUserDefaults();
  if (static GenerativeAssistantSettingsUserDefaults.forcedRateLimitState()())
  {
    swift_release();
    if (qword_1001FAC30 != -1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for Logger();
    sub_10000EBE8(v3, (uint64_t)qword_100212788);
    uint64_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "RateLimited is forced by UserDefaults", v6, 2u);
      swift_slowDealloc();
    }
    uint64_t v7 = v0[6];

    swift_getKeyPath();
    uint64_t v8 = swift_task_alloc();
    *(void *)(v8 + 16) = v7;
    *(unsigned char *)(v8 + 24) = 1;
    v0[5] = v7;
    sub_1000BCDA0();
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    swift_task_dealloc();
    uint64_t v10 = v0[6];
    uint64_t v9 = v0[7];
    uint64_t v11 = type metadata accessor for TaskPriority();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v9, 1, 1, v11);
    swift_retain();
    uint64_t v12 = static MainActor.shared.getter();
    uint64_t v13 = (void *)swift_allocObject();
    v13[2] = v12;
    v13[3] = &protocol witness table for MainActor;
    v13[4] = v10;
    sub_1001228D0(v9, (uint64_t)&unk_100200DA8, (uint64_t)v13);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v14 = (uint64_t (*)(void))v0[1];
    return v14();
  }
  else
  {
    static OpenAIAuthenticator.shared.getter();
    uint64_t v1 = (void *)swift_task_alloc();
    v0[18] = v1;
    *uint64_t v1 = v0;
    v1[1] = sub_1000BC138;
    uint64_t v2 = v0[13];
    return OpenAIAuthenticator.checkRateLimitBudgets()(v2);
  }
}

uint64_t sub_1000BC138()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2[9] + 8))(v2[10], v2[8]);
  uint64_t v3 = v2[17];
  uint64_t v4 = v2[16];
  if (v0) {
    os_log_type_t v5 = sub_1000BC4B4;
  }
  else {
    os_log_type_t v5 = sub_1000BC2C0;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_1000BC2C0()
{
  uint64_t v2 = v0[12];
  uint64_t v1 = v0[13];
  uint64_t v3 = v0[11];
  uint64_t v4 = v0[6];
  swift_release();
  char v5 = OpenAIAuthenticator.RateLimitBudgets.isRateLimited.getter();
  swift_getKeyPath();
  uint64_t v6 = swift_task_alloc();
  *(void *)(v6 + 16) = v4;
  *(unsigned char *)(v6 + 24) = v5 & 1;
  v0[4] = v4;
  sub_1000BCDA0();
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v8 = v0[6];
  uint64_t v7 = v0[7];
  uint64_t v9 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v7, 1, 1, v9);
  swift_retain();
  uint64_t v10 = static MainActor.shared.getter();
  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = v10;
  v11[3] = &protocol witness table for MainActor;
  v11[4] = v8;
  sub_1001228D0(v7, (uint64_t)&unk_100200DA8, (uint64_t)v11);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_1000BC4B4()
{
  v15 = v0;
  swift_release();
  if (qword_1001FAC30 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000EBE8(v1, (uint64_t)qword_100212788);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = swift_slowAlloc();
    char v5 = (void *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315394;
    v0[2] = sub_100021444(0x2868736572666572, 0xE900000000000029, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v4 + 12) = 2112;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    v0[3] = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *char v5 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "%s failed: %@", (uint8_t *)v4, 0x16u);
    sub_1000063C0(&qword_1001FED90);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v8 = v0[6];
  uint64_t v7 = v0[7];
  uint64_t v9 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v7, 1, 1, v9);
  swift_retain();
  uint64_t v10 = static MainActor.shared.getter();
  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = v10;
  v11[3] = &protocol witness table for MainActor;
  v11[4] = v8;
  sub_1001228D0(v7, (uint64_t)&unk_100200DA8, (uint64_t)v11);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_1000BC7F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[3] = a4;
  v4[4] = type metadata accessor for MainActor();
  v4[5] = static MainActor.shared.getter();
  char v5 = (void *)swift_task_alloc();
  v4[6] = v5;
  *char v5 = v4;
  v5[1] = sub_1000BC8A4;
  return static SettingsRemoteLocalization.upgradeIAPString()();
}

uint64_t sub_1000BC8A4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 56) = a1;
  *(void *)(v3 + 64) = a2;
  swift_task_dealloc();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1000BC9E8, v5, v4);
}

uint64_t sub_1000BC9E8()
{
  uint64_t v2 = v0[7];
  uint64_t v1 = v0[8];
  uint64_t v3 = v0[3];
  swift_release();
  swift_getKeyPath();
  uint64_t v4 = (void *)swift_task_alloc();
  v4[2] = v3;
  v4[3] = v2;
  v4[4] = v1;
  v0[2] = v3;
  sub_1000BCDA0();
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_1000BCAF4()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC21WritingToolsUIService25CompositionRateLimitModel___observationRegistrar;
  uint64_t v2 = type metadata accessor for ObservationRegistrar();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_1000BCB9C()
{
  return type metadata accessor for CompositionRateLimitModel();
}

uint64_t type metadata accessor for CompositionRateLimitModel()
{
  uint64_t result = qword_100200C78;
  if (!qword_100200C78) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000BCBF0()
{
  uint64_t result = type metadata accessor for ObservationRegistrar();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1000BCC94()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1000BCCD4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  void *v7 = v2;
  v7[1] = sub_100027204;
  return sub_1000BC7F8(a1, v4, v5, v6);
}

void sub_1000BCD90()
{
  *(unsigned char *)(*(void *)(v0 + 16) + 16) = *(unsigned char *)(v0 + 24);
}

unint64_t sub_1000BCDA0()
{
  unint64_t result = qword_100200DB0;
  if (!qword_100200DB0)
  {
    type metadata accessor for CompositionRateLimitModel();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100200DB0);
  }
  return result;
}

uint64_t sub_1000BCE00()
{
  return sub_1000BCE18();
}

uint64_t sub_1000BCE18()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[4];
  *(void *)(v1 + 24) = v0[3];
  *(void *)(v1 + 32) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

void sub_1000BCE58()
{
}

ValueMetadata *type metadata accessor for CompositionRateLimitBanner()
{
  return &type metadata for CompositionRateLimitBanner;
}

ValueMetadata *type metadata accessor for CompositionRateLimitAlert()
{
  return &type metadata for CompositionRateLimitAlert;
}

uint64_t sub_1000BCE9C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000BCEB8@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  v68[1] = a1;
  uint64_t v72 = a3;
  char v3 = a2 & 1;
  uint64_t v70 = type metadata accessor for RoundedRectangle();
  __chkstk_darwin(v70);
  uint64_t v5 = (_OWORD *)((char *)v68 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v71 = sub_1000063C0(&qword_100202510);
  __chkstk_darwin(v71);
  uint64_t v7 = (char *)v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000063C0(&qword_100200DB8);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000063C0(&qword_100200DC0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000063C0(&qword_100200DC8);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)v68 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = sub_1000063C0(&qword_100200DD0);
  __chkstk_darwin(v69);
  v18 = (char *)v68 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = static HorizontalAlignment.leading.getter();
  if (qword_1001FAD20 != -1) {
    swift_once();
  }
  uint64_t v20 = *((void *)&xmmword_1002129C0 + 1);
  *(void *)uint64_t v10 = v19;
  *((void *)v10 + 1) = v20;
  v10[16] = 0;
  uint64_t v21 = sub_1000063C0(&qword_100200DD8);
  sub_1000BD3C0(v3, (uint64_t *)&v10[*(int *)(v21 + 44)]);
  char v22 = static Edge.Set.all.getter();
  EdgeInsets.init(_all:)();
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  sub_100008DD4((uint64_t)v10, (uint64_t)v13, &qword_100200DB8);
  v31 = &v13[*(int *)(v11 + 36)];
  char *v31 = v22;
  *((void *)v31 + 1) = v24;
  *((void *)v31 + 2) = v26;
  *((void *)v31 + 3) = v28;
  *((void *)v31 + 4) = v30;
  v31[40] = 0;
  sub_10002784C((uint64_t)v10, &qword_100200DB8);
  char v32 = static Edge.Set.trailing.getter();
  EdgeInsets.init(_all:)();
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  uint64_t v38 = v37;
  uint64_t v40 = v39;
  sub_100008DD4((uint64_t)v13, (uint64_t)v16, &qword_100200DC0);
  v41 = &v16[*(int *)(v14 + 36)];
  char *v41 = v32;
  *((void *)v41 + 1) = v34;
  *((void *)v41 + 2) = v36;
  *((void *)v41 + 3) = v38;
  *((void *)v41 + 4) = v40;
  v41[40] = 0;
  sub_10002784C((uint64_t)v13, &qword_100200DC0);
  v42 = (char *)v5 + *(int *)(v70 + 20);
  uint64_t v43 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v44 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v44 - 8) + 104))(v42, v43, v44);
  __asm { FMOV            V0.2D, #10.0 }
  *uint64_t v5 = _Q0;
  if (qword_1001FAD48 != -1) {
    swift_once();
  }
  uint64_t v50 = qword_1002129F0;
  sub_1000BE9E4((uint64_t)v5, (uint64_t)v7);
  uint64_t v51 = v71;
  *(void *)&v7[*(int *)(v71 + 52)] = v50;
  *(_WORD *)&v7[*(int *)(v51 + 56)] = 256;
  swift_retain();
  sub_1000BEA48((uint64_t)v5);
  uint64_t v52 = static Alignment.center.getter();
  uint64_t v54 = v53;
  uint64_t v55 = (uint64_t)&v18[*(int *)(v69 + 36)];
  sub_100008DD4((uint64_t)v7, v55, &qword_100202510);
  v56 = (uint64_t *)(v55 + *(int *)(sub_1000063C0(&qword_1001FC7C0) + 36));
  uint64_t *v56 = v52;
  v56[1] = v54;
  sub_100008DD4((uint64_t)v16, (uint64_t)v18, &qword_100200DC8);
  sub_10002784C((uint64_t)v7, &qword_100202510);
  sub_10002784C((uint64_t)v16, &qword_100200DC8);
  LOBYTE(v52) = static Edge.Set.bottom.getter();
  EdgeInsets.init(_all:)();
  uint64_t v58 = v57;
  uint64_t v60 = v59;
  uint64_t v62 = v61;
  uint64_t v64 = v63;
  uint64_t v65 = v72;
  sub_100008DD4((uint64_t)v18, v72, &qword_100200DD0);
  uint64_t v66 = v65 + *(int *)(sub_1000063C0(&qword_100200DE0) + 36);
  *(unsigned char *)uint64_t v66 = v52;
  *(void *)(v66 + 8) = v58;
  *(void *)(v66 + 16) = v60;
  *(void *)(v66 + 24) = v62;
  *(void *)(v66 + 32) = v64;
  *(unsigned char *)(v66 + 40) = 0;
  return sub_10002784C((uint64_t)v18, &qword_100200DD0);
}

uint64_t sub_1000BD3C0@<X0>(char a1@<W1>, uint64_t *a2@<X8>)
{
  uint64_t v50 = a2;
  int v45 = a1 & 1;
  uint64_t v2 = sub_1000063C0(&qword_1001FC6B8);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v53 = v2;
  uint64_t v54 = v3;
  __chkstk_darwin(v2);
  uint64_t v51 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_1000063C0(&qword_100200DE8);
  uint64_t v58 = *(void *)(v52 - 8);
  uint64_t v5 = __chkstk_darwin(v52);
  v47 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v59 = (char *)&v44 - v7;
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v8 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v10 = v9;
  char v12 = v11 & 1;
  static Font.headline.getter();
  uint64_t v48 = Text.font(_:)();
  uint64_t v49 = v13;
  uint64_t v57 = v14;
  char v16 = v15;
  swift_release();
  int v17 = v16 & 1;
  sub_100026F18(v8, v10, v12);
  swift_bridgeObjectRelease();
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v55 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v56 = v18;
  uint64_t v46 = v19;
  char v21 = v20 & 1;
  uint64_t v22 = swift_retain();
  uint64_t v23 = sub_100020F7C(v22, v45);
  swift_release();
  swift_getKeyPath();
  uint64_t v60 = v23;
  sub_1000BEABC((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v24 = *(void *)(v23 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__rateLimitModel);
  swift_retain();
  swift_release();
  swift_getKeyPath();
  uint64_t v60 = v24;
  sub_1000BEABC((unint64_t *)&qword_100200DB0, (void (*)(uint64_t))type metadata accessor for CompositionRateLimitModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v26 = *(void *)(v24 + 24);
  uint64_t v25 = *(void *)(v24 + 32);
  swift_bridgeObjectRetain();
  swift_release();
  uint64_t v60 = v26;
  uint64_t v61 = v25;
  sub_10002DF54();
  uint64_t v27 = v51;
  Button<>.init<A>(_:action:)();
  sub_100027F2C((unint64_t *)&unk_1001FDDF0, &qword_1001FC6B8);
  uint64_t v28 = v47;
  uint64_t v29 = v53;
  View.bold(_:)();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v27, v29);
  uint64_t v30 = v58;
  v31 = v59;
  uint64_t v32 = v52;
  (*(void (**)(char *, char *, uint64_t))(v58 + 32))(v59, v28, v52);
  int v44 = v17;
  LOBYTE(v60) = v17;
  uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v30 + 16);
  v33(v28, v31, v32);
  uint64_t v35 = v48;
  uint64_t v34 = v49;
  uint64_t v36 = v50;
  uint64_t v37 = v57;
  *uint64_t v50 = v48;
  v36[1] = v37;
  *((unsigned char *)v36 + 16) = v17;
  uint64_t v38 = v55;
  v36[3] = v34;
  v36[4] = v38;
  uint64_t v39 = v46;
  v36[5] = v46;
  *((unsigned char *)v36 + 48) = v21;
  v36[7] = v56;
  uint64_t v40 = sub_1000063C0(&qword_100200DF0);
  v33((char *)v36 + *(int *)(v40 + 64), v28, v32);
  sub_10002783C(v35, v37, v44);
  swift_bridgeObjectRetain();
  uint64_t v41 = v55;
  sub_10002783C(v55, v39, v21);
  v42 = *(void (**)(char *, uint64_t))(v58 + 8);
  swift_bridgeObjectRetain();
  v42(v59, v32);
  v42(v28, v32);
  sub_100026F18(v41, v39, v21);
  swift_bridgeObjectRelease();
  sub_100026F18(v35, v57, v60);
  return swift_bridgeObjectRelease();
}

void sub_1000BD930()
{
  uint64_t v0 = type metadata accessor for GenerativeAssistantSettingsDestination.Origin();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for GenerativeAssistantSettingsDestination();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  char v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = [self defaultWorkspace];
  if (v12)
  {
    uint64_t v13 = v12;
    (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for GenerativeAssistantSettingsDestination.rateLimitPrompt(_:), v4);
    (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for GenerativeAssistantSettingsDestination.Origin.writingTools(_:), v0);
    GenerativeAssistantSettingsDestination.fullURL(origin:)();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    URL._bridgeToObjectiveC()(v14);
    char v16 = v15;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    sub_1000051F0((uint64_t)_swiftEmptyArrayStorage);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v13 openSensitiveURL:v16 withOptions:isa];
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1000BDC14@<X0>(uint64_t a1@<X8>)
{
  return sub_1000BCEB8(*(void *)v1, *(unsigned char *)(v1 + 8), a1);
}

uint64_t sub_1000BDC20@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v54 = a1;
  uint64_t v57 = a3;
  char v3 = a2 & 1;
  uint64_t v55 = type metadata accessor for RoundedRectangle();
  __chkstk_darwin(v55);
  uint64_t v5 = (_OWORD *)((char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v56 = sub_1000063C0(&qword_100202510);
  __chkstk_darwin(v56);
  uint64_t v7 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000063C0(&qword_1001FBA90);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000063C0(&qword_100200DF8);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000063C0(&qword_100200E00);
  __chkstk_darwin(v14);
  char v16 = (char *)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1000063C0(&qword_100200E08);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = static HorizontalAlignment.leading.getter();
  if (qword_1001FAD20 != -1) {
    swift_once();
  }
  uint64_t v21 = *((void *)&xmmword_1002129C0 + 1);
  *(void *)uint64_t v13 = v20;
  *((void *)v13 + 1) = v21;
  v13[16] = 0;
  uint64_t v22 = sub_1000063C0(&qword_100200E10);
  sub_1000BE104(v3, (uint64_t)&v13[*(int *)(v22 + 44)]);
  uint64_t v23 = type metadata accessor for Font.Design();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v10, 1, 1, v23);
  uint64_t v24 = static Font.system(size:weight:design:)();
  sub_10002784C((uint64_t)v10, &qword_1001FBA90);
  uint64_t KeyPath = swift_getKeyPath();
  sub_100008DD4((uint64_t)v13, (uint64_t)v16, &qword_100200DF8);
  uint64_t v26 = (uint64_t *)&v16[*(int *)(v14 + 36)];
  *uint64_t v26 = KeyPath;
  v26[1] = v24;
  sub_10002784C((uint64_t)v13, &qword_100200DF8);
  LOBYTE(KeyPath) = static Edge.Set.all.getter();
  EdgeInsets.init(_all:)();
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  sub_100008DD4((uint64_t)v16, (uint64_t)v19, &qword_100200E00);
  uint64_t v35 = &v19[*(int *)(v17 + 36)];
  *uint64_t v35 = KeyPath;
  *((void *)v35 + 1) = v28;
  *((void *)v35 + 2) = v30;
  *((void *)v35 + 3) = v32;
  *((void *)v35 + 4) = v34;
  v35[40] = 0;
  sub_10002784C((uint64_t)v16, &qword_100200E00);
  uint64_t v36 = (char *)v5 + *(int *)(v55 + 20);
  uint64_t v37 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v38 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v38 - 8) + 104))(v36, v37, v38);
  __asm { FMOV            V0.2D, #10.0 }
  *uint64_t v5 = _Q0;
  if (qword_1001FAD48 != -1) {
    swift_once();
  }
  uint64_t v44 = qword_1002129F0;
  sub_1000BE9E4((uint64_t)v5, (uint64_t)v7);
  uint64_t v45 = v56;
  *(void *)&v7[*(int *)(v56 + 52)] = v44;
  *(_WORD *)&v7[*(int *)(v45 + 56)] = 256;
  swift_retain();
  sub_1000BEA48((uint64_t)v5);
  uint64_t v46 = static Alignment.center.getter();
  uint64_t v48 = v47;
  uint64_t v49 = sub_1000063C0(&qword_100200E18);
  uint64_t v50 = v57;
  uint64_t v51 = v57 + *(int *)(v49 + 36);
  sub_100008DD4((uint64_t)v7, v51, &qword_100202510);
  uint64_t v52 = (uint64_t *)(v51 + *(int *)(sub_1000063C0(&qword_1001FC7C0) + 36));
  *uint64_t v52 = v46;
  v52[1] = v48;
  sub_100008DD4((uint64_t)v19, v50, &qword_100200E08);
  sub_10002784C((uint64_t)v7, &qword_100202510);
  return sub_10002784C((uint64_t)v19, &qword_100200E08);
}

uint64_t sub_1000BE104@<X0>(char a1@<W1>, uint64_t a2@<X8>)
{
  uint64_t v56 = a2;
  int v49 = a1 & 1;
  uint64_t v52 = sub_1000063C0(&qword_100200E20) - 8;
  __chkstk_darwin(v52);
  uint64_t v55 = (uint64_t *)((char *)&v47 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v3 = type metadata accessor for OpenURLAction();
  uint64_t v53 = *(void *)(v3 - 8);
  uint64_t v54 = v3;
  __chkstk_darwin(v3);
  uint64_t v58 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for LocalizedStringKey.StringInterpolation();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = type metadata accessor for GenerativeAssistantSettingsDestination.Origin();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for GenerativeAssistantSettingsDestination();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = type metadata accessor for URL();
  uint64_t v14 = *(void *)(v57 - 8);
  uint64_t v51 = *(void *)(v14 + 64);
  uint64_t v15 = __chkstk_darwin(v57);
  uint64_t v50 = (char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v47 - v17;
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, enum case for GenerativeAssistantSettingsDestination.rateLimitPrompt(_:), v10);
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for GenerativeAssistantSettingsDestination.Origin.writingTools(_:), v6);
  GenerativeAssistantSettingsDestination.fullURL(origin:)();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v19._object = (void *)0x800000010019F080;
  v19._countAndFlagsBits = 0x1000000000000053;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v19);
  uint64_t v20 = swift_retain();
  uint64_t v21 = sub_100020F7C(v20, v49);
  swift_release();
  swift_getKeyPath();
  uint64_t v59 = v21;
  sub_1000BEABC((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v22 = *(void *)(v21 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__rateLimitModel);
  swift_retain();
  swift_release();
  swift_getKeyPath();
  uint64_t v59 = v22;
  sub_1000BEABC((unint64_t *)&qword_100200DB0, (void (*)(uint64_t))type metadata accessor for CompositionRateLimitModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v23 = *(void *)(v22 + 24);
  uint64_t v24 = *(void **)(v22 + 32);
  swift_bridgeObjectRetain();
  swift_release();
  v25._countAndFlagsBits = v23;
  v25._object = v24;
  LocalizedStringKey.StringInterpolation.appendInterpolation(_:)(v25);
  swift_bridgeObjectRelease();
  v26._countAndFlagsBits = 10333;
  v26._object = (void *)0xE200000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v26);
  sub_1000BEABC(&qword_100200E28, (void (*)(uint64_t))&type metadata accessor for URL);
  uint64_t v48 = v18;
  uint64_t v27 = v57;
  LocalizedStringKey.StringInterpolation.appendInterpolation<A>(_:formatter:)();
  v28._countAndFlagsBits = 41;
  v28._object = (void *)0xE100000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v28);
  LocalizedStringKey.init(stringInterpolation:)();
  uint64_t v29 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  LOBYTE(v6) = v34 & 1;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v36 = v50;
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v50, v18, v27);
  unint64_t v37 = (*(unsigned __int8 *)(v14 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v38 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v38 + v37, v36, v27);
  uint64_t v39 = v58;
  OpenURLAction.init(handler:)();
  uint64_t v40 = v53;
  uint64_t v41 = v55;
  v42 = v39;
  uint64_t v43 = v54;
  (*(void (**)(char *, char *, uint64_t))(v53 + 16))((char *)v55 + *(int *)(v52 + 36), v42, v54);
  uint64_t *v41 = KeyPath;
  uint64_t v44 = sub_1000063C0(&qword_100200E30);
  uint64_t v45 = v56;
  sub_100008DD4((uint64_t)v41, v56 + *(int *)(v44 + 36), &qword_100200E20);
  *(void *)uint64_t v45 = v29;
  *(void *)(v45 + 8) = v31;
  *(unsigned char *)(v45 + 16) = v6;
  *(void *)(v45 + 24) = v33;
  sub_10002783C(v29, v31, v6);
  swift_bridgeObjectRetain();
  sub_10002784C((uint64_t)v41, &qword_100200E20);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v58, v43);
  sub_100026F18(v29, v31, v6);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v48, v57);
}

uint64_t sub_1000BE818(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for OpenURLAction();
  __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return EnvironmentValues.openURL.setter();
}

uint64_t sub_1000BE8E0()
{
  id v0 = [self defaultWorkspace];
  if (v0)
  {
    uint64_t v2 = v0;
    URL._bridgeToObjectiveC()(v1);
    uint64_t v4 = v3;
    sub_1000051F0((uint64_t)_swiftEmptyArrayStorage);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v2 openSensitiveURL:v4 withOptions:isa];
  }
  else
  {
    __break(1u);
  }
  return static OpenURLAction.Result.handled.getter();
}

uint64_t sub_1000BE9BC@<X0>(uint64_t a1@<X8>)
{
  return sub_1000BDC20(*(void *)v1, *(unsigned char *)(v1 + 8), a1);
}

uint64_t sub_1000BE9C8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000BE9E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RoundedRectangle();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000BEA48(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for RoundedRectangle();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000BEABC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000BEB04()
{
  return EnvironmentValues.openURL.getter();
}

uint64_t sub_1000BEB2C()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1000BEBBC()
{
  type metadata accessor for URL();

  return sub_1000BE8E0();
}

unint64_t sub_1000BEC40()
{
  unint64_t result = qword_100200E38;
  if (!qword_100200E38)
  {
    sub_100006C14(&qword_100200DE0);
    sub_1000BEDE4(&qword_100200E40, &qword_100200DD0, (void (*)(void))sub_1000BECE0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100200E38);
  }
  return result;
}

uint64_t sub_1000BECE0()
{
  return sub_1000BEEB0(&qword_100200E48, &qword_100200DC8, (void (*)(void))sub_1000BED08);
}

unint64_t sub_1000BED08()
{
  unint64_t result = qword_100200E50;
  if (!qword_100200E50)
  {
    sub_100006C14(&qword_100200DC0);
    sub_100027F2C(&qword_100200E58, &qword_100200DB8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100200E50);
  }
  return result;
}

uint64_t sub_1000BEDA8()
{
  return sub_1000BEDE4(&qword_100200E68, &qword_100200E18, (void (*)(void))sub_1000BEE88);
}

uint64_t sub_1000BEDE4(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100006C14(a2);
    a3();
    sub_100027F2C(&qword_100200E60, &qword_1001FC7C0);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000BEE88()
{
  return sub_1000BEEB0(&qword_100200E70, &qword_100200E08, (void (*)(void))sub_1000BEF30);
}

uint64_t sub_1000BEEB0(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100006C14(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000BEF30()
{
  unint64_t result = qword_100200E78;
  if (!qword_100200E78)
  {
    sub_100006C14(&qword_100200E00);
    sub_100027F2C(&qword_100200E80, &qword_100200DF8);
    sub_100027F2C((unint64_t *)&unk_1002025D0, &qword_1001FDAC0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100200E78);
  }
  return result;
}

id sub_1000BF058()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for UIHostingControllerSizingOptions();
  __chkstk_darwin(v2 - 8);
  uint64_t v57 = type metadata accessor for QuestionnaireView(0);
  __chkstk_darwin(v57);
  uint64_t v4 = (char **)((char *)&v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = sub_1000063C0(&qword_100200EC0);
  uint64_t v58 = *(void *)(v5 - 8);
  uint64_t v59 = v5;
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v53 - v9;
  uint64_t v11 = sub_1000063C0(&qword_1001FB438);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v14 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v53 - v15;
  uint64_t v17 = type metadata accessor for NavigationPath();
  uint64_t v54 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v53 = (char *)&v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  NavigationPath.init()();
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = 0;
  *(void *)(v19 + 24) = 0;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = 0;
  *(void *)(v20 + 24) = 0;
  uint64_t v55 = v17;
  Binding.init(get:set:)();
  type metadata accessor for CommonUIManager();
  swift_allocObject();
  uint64_t v21 = sub_100120EC4();
  uint64_t v56 = v16;
  sub_1000BFB94((uint64_t)v16, (uint64_t)v14);
  uint64_t v22 = swift_retain();
  sub_10012353C(v22, (uint64_t)v14, v4);
  sub_1000BFBFC(&qword_1001FB580, (void (*)(uint64_t))type metadata accessor for QuestionnaireView);
  sub_1000BFBFC((unint64_t *)&qword_1001FAE20, (void (*)(uint64_t))type metadata accessor for CommonUIManager);
  swift_retain();
  uint64_t v23 = v59;
  View.environment<A>(_:)();
  uint64_t v57 = v21;
  swift_release();
  sub_1000BFC44((uint64_t)v4);
  (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v8, v10, v23);
  id v24 = objc_allocWithZone((Class)sub_1000063C0(&qword_100200EC8));
  Swift::String v25 = (void *)UIHostingController.init(rootView:)();
  static UIHostingControllerSizingOptions.preferredContentSize.getter();
  dispatch thunk of UIHostingController.sizingOptions.setter();
  id result = [v0 view];
  if (!result)
  {
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v27 = result;
  id result = [v25 view];
  if (!result)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  Swift::String v28 = result;
  [v27 addSubview:result];

  id result = [v25 view];
  if (!result)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v29 = result;
  [result setTranslatesAutoresizingMaskIntoConstraints:0];

  [v1 addChildViewController:v25];
  sub_1000063C0(&qword_1001FAFD0);
  uint64_t v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_100189610;
  id result = [v25 view];
  if (!result)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v31 = result;
  id v32 = [result leadingAnchor];

  id result = [v1 view];
  if (!result)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v33 = result;
  id v34 = [result leadingAnchor];

  id v35 = [v32 constraintEqualToAnchor:v34];
  *(void *)(v30 + 32) = v35;
  id result = [v25 view];
  if (!result)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v36 = result;
  id v37 = [result trailingAnchor];

  id result = [v1 view];
  if (!result)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v38 = result;
  id v39 = [result trailingAnchor];

  id v40 = [v37 constraintEqualToAnchor:v39];
  *(void *)(v30 + 40) = v40;
  id result = [v25 view];
  if (!result)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v41 = result;
  id v42 = [result topAnchor];

  id result = [v1 view];
  if (!result)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v43 = result;
  id v44 = [result topAnchor];

  id v45 = [v42 constraintEqualToAnchor:v44];
  *(void *)(v30 + 48) = v45;
  id result = [v25 view];
  if (!result)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v46 = result;
  id v47 = [result bottomAnchor];

  id result = [v1 view];
  if (result)
  {
    uint64_t v48 = result;
    int v49 = self;
    id v50 = [v48 bottomAnchor];

    id v51 = [v47 constraintEqualToAnchor:v50];
    *(void *)(v30 + 56) = v51;
    uint64_t v60 = v30;
    specialized Array._endMutation()();
    sub_10009AF90();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v49 activateConstraints:isa];
    swift_release();

    (*(void (**)(char *, uint64_t))(v58 + 8))(v10, v59);
    sub_1000BFCA0((uint64_t)v56);
    return (id)(*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v53, v55);
  }
LABEL_23:
  __break(1u);
  return result;
}

id sub_1000BF960()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for QuestionnaireOnlyViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for QuestionnaireOnlyViewController()
{
  return self;
}

uint64_t sub_1000BFA08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = &v3[OBJC_IVAR____TtC21WritingToolsUIService31QuestionnaireOnlyViewController_preferredContentSizeHandler];
  *(void *)uint64_t v5 = a1;
  *((void *)v5 + 1) = a2;
  uint64_t v6 = qword_1001FAC80;
  uint64_t v7 = v3;
  swift_retain();
  if (v6 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v8 = qword_100212838;
  if (*(void *)(qword_100212838 + 16) && (unint64_t v9 = sub_100007B70(a3), (v10 & 1) != 0))
  {
    uint64_t v11 = *(void *)(*(void *)(v8 + 56) + 8 * v9);
    swift_endAccess();
    *(void *)&v7[OBJC_IVAR____TtC21WritingToolsUIService31QuestionnaireOnlyViewController_questionnaireModel] = v11;
    swift_retain();

    v15.receiver = v7;
    v15.super_class = (Class)type metadata accessor for QuestionnaireOnlyViewController();
    id v12 = [super initWithNibName:0 bundle:0];
    uint64_t v13 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(a3, v13);
    return (uint64_t)v12;
  }
  else
  {
    uint64_t result = swift_endAccess();
    __break(1u);
  }
  return result;
}

uint64_t sub_1000BFB5C()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000BFB94(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000063C0(&qword_1001FB438);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000BFBFC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000BFC44(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for QuestionnaireView(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000BFCA0(uint64_t a1)
{
  uint64_t v2 = sub_1000063C0(&qword_1001FB438);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t destroy for FeedbackView(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  int v2 = *(unsigned __int8 *)(a1 + 136);
  if (v2 != 255) {
    sub_10000ED74(*(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), v2);
  }
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for FeedbackView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  uint64_t v8 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v8;
  uint64_t v9 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v9;
  uint64_t v10 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v10;
  uint64_t v11 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v11;
  int v12 = *(unsigned __int8 *)(a2 + 136);
  id v13 = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v14 = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12 == 255)
  {
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 121) = *(_OWORD *)(a2 + 121);
  }
  else
  {
    uint64_t v15 = *(void *)(a2 + 112);
    uint64_t v16 = *(void *)(a2 + 120);
    uint64_t v17 = *(void *)(a2 + 128);
    sub_10000ED40(v15, v16, v17, v14);
    *(void *)(a1 + 112) = v15;
    *(void *)(a1 + 120) = v16;
    *(void *)(a1 + 128) = v17;
    *(unsigned char *)(a1 + 136) = v14;
  }
  *(_DWORD *)(a1 + 137) = *(_DWORD *)(a2 + 137);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for FeedbackView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = (long long *)(a1 + 112);
  uint64_t v8 = (long long *)(a2 + 112);
  int v9 = *(unsigned __int8 *)(a2 + 136);
  if (*(unsigned __int8 *)(a1 + 136) == 255)
  {
    if (v9 == 255)
    {
      long long v21 = *v8;
      *(_OWORD *)(a1 + 121) = *(_OWORD *)(a2 + 121);
      long long *v7 = v21;
    }
    else
    {
      uint64_t v17 = *(void *)(a2 + 112);
      uint64_t v18 = *(void *)(a2 + 120);
      uint64_t v19 = *(void *)(a2 + 128);
      sub_10000ED40(v17, v18, v19, *(unsigned char *)(a2 + 136));
      *(void *)(a1 + 112) = v17;
      *(void *)(a1 + 120) = v18;
      *(void *)(a1 + 128) = v19;
      *(unsigned char *)(a1 + 136) = v9;
    }
  }
  else if (v9 == 255)
  {
    sub_1000C0140(a1 + 112);
    long long v20 = *(_OWORD *)(a2 + 121);
    long long *v7 = *v8;
    *(_OWORD *)(a1 + 121) = v20;
  }
  else
  {
    uint64_t v10 = *(void *)(a2 + 112);
    uint64_t v11 = *(void *)(a2 + 120);
    uint64_t v12 = *(void *)(a2 + 128);
    sub_10000ED40(v10, v11, v12, *(unsigned char *)(a2 + 136));
    uint64_t v13 = *(void *)(a1 + 112);
    uint64_t v14 = *(void *)(a1 + 120);
    uint64_t v15 = *(void *)(a1 + 128);
    *(void *)(a1 + 112) = v10;
    *(void *)(a1 + 120) = v11;
    *(void *)(a1 + 128) = v12;
    char v16 = *(unsigned char *)(a1 + 136);
    *(unsigned char *)(a1 + 136) = v9;
    sub_10000ED74(v13, v14, v15, v16);
  }
  *(unsigned char *)(a1 + 137) = *(unsigned char *)(a2 + 137);
  *(unsigned char *)(a1 + 138) = *(unsigned char *)(a2 + 138);
  *(unsigned char *)(a1 + 139) = *(unsigned char *)(a2 + 139);
  *(unsigned char *)(a1 + 140) = *(unsigned char *)(a2 + 140);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_retain();
  swift_release();
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1000C0140(uint64_t a1)
{
  return a1;
}

__n128 initializeWithTake for FeedbackView(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  long long v4 = a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  __n128 result = (__n128)a2[7];
  long long v8 = a2[8];
  long long v9 = a2[10];
  *(_OWORD *)(a1 + 144) = a2[9];
  *(_OWORD *)(a1 + 160) = v9;
  *(__n128 *)(a1 + 112) = result;
  *(_OWORD *)(a1 + 128) = v8;
  return result;
}

uint64_t assignWithTake for FeedbackView(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  uint64_t v5 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v9;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRelease();
  int v10 = *(unsigned __int8 *)(a1 + 136);
  if (v10 == 255) {
    goto LABEL_5;
  }
  int v11 = *(unsigned __int8 *)(a2 + 136);
  if (v11 == 255)
  {
    sub_1000C0140(a1 + 112);
LABEL_5:
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 121) = *(_OWORD *)(a2 + 121);
    goto LABEL_6;
  }
  uint64_t v12 = *(void *)(a2 + 128);
  uint64_t v13 = *(void *)(a1 + 112);
  uint64_t v14 = *(void *)(a1 + 120);
  uint64_t v15 = *(void *)(a1 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(void *)(a1 + 128) = v12;
  *(unsigned char *)(a1 + 136) = v11;
  sub_10000ED74(v13, v14, v15, v10);
LABEL_6:
  *(unsigned char *)(a1 + 137) = *(unsigned char *)(a2 + 137);
  *(unsigned char *)(a1 + 138) = *(unsigned char *)(a2 + 138);
  *(unsigned char *)(a1 + 139) = *(unsigned char *)(a2 + 139);
  *(unsigned char *)(a1 + 140) = *(unsigned char *)(a2 + 140);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_release();
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedbackView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 176)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 88);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FeedbackView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 168) = 0;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 176) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 88) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 176) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedbackView()
{
  return &type metadata for FeedbackView;
}

uint64_t sub_1000C03F0()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_1000C040C()
{
  NSString v0 = String._bridgeToObjectiveC()();
  char v1 = MGGetBoolAnswer();

  byte_100212918 = v1;
}

uint64_t sub_1000C0464(uint64_t a1)
{
  v2[3] = a1;
  v2[4] = v1;
  uint64_t v3 = type metadata accessor for FBKSEvaluation.Subject();
  v2[5] = v3;
  v2[6] = *(void *)(v3 - 8);
  v2[7] = swift_task_alloc();
  type metadata accessor for MainActor();
  v2[8] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[9] = v5;
  v2[10] = v4;
  return _swift_task_switch(sub_1000C0558, v5, v4);
}

uint64_t sub_1000C0558()
{
  sub_1000C09EC(*(uint64_t **)(v0 + 56));
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1000C0604;
  uint64_t v2 = *(void *)(v0 + 24);
  return FBKSEvaluation.Subject._remoteEvaluate(action:showFeedbackForm:)(v2, 1);
}

uint64_t sub_1000C0604()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 96) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 72);
  if (v0) {
    uint64_t v5 = sub_1000C07C4;
  }
  else {
    uint64_t v5 = sub_1000C0740;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_1000C0740()
{
  swift_release();
  (*(void (**)(void, void))(v0[6] + 8))(v0[7], v0[5]);
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1000C07C4()
{
  swift_release();
  if (qword_1001FAC58 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000EBE8(v1, (uint64_t)qword_100212800);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138412290;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    v0[2] = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v5 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Unexpected error trying to launch remote evaluation: %@.", v4, 0xCu);
    sub_1000063C0(&qword_1001FED90);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }
  swift_errorRelease();
  (*(void (**)(void, void))(v0[6] + 8))(v0[7], v0[5]);
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_1000C09EC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  v123 = a1;
  uint64_t v3 = type metadata accessor for FBKSInteraction.FeatureDomain();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v139 = v3;
  uint64_t v140 = v4;
  uint64_t v5 = __chkstk_darwin(v3);
  v127 = (char *)&v111 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v130 = (char *)&v111 - v7;
  uint64_t v8 = sub_1000063C0(&qword_100201000);
  __chkstk_darwin(v8 - 8);
  v122 = (char *)&v111 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for FBKSInteraction.Content();
  unint64_t v131 = *(void *)(v10 - 8);
  v132 = (void (*)(void, void, void))v10;
  uint64_t v11 = __chkstk_darwin(v10);
  v117 = (uint64_t *)((char *)&v111 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = __chkstk_darwin(v11);
  v121 = (char *)&v111 - v14;
  __chkstk_darwin(v13);
  char v16 = (uint64_t *)((char *)&v111 - v15);
  uint64_t v17 = type metadata accessor for CharacterSet();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  long long v20 = (char *)&v111 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1000063C0(&qword_100201008);
  uint64_t v22 = __chkstk_darwin(v21 - 8);
  uint64_t v126 = (uint64_t)&v111 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v141 = (uint64_t)&v111 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v136 = (uint64_t)&v111 - v27;
  __chkstk_darwin(v26);
  uint64_t v29 = (char *)&v111 - v28;
  uint64_t v30 = *(void *)(v1 + 120);
  uint64_t v31 = *(void *)(v1 + 128);
  int v32 = *(unsigned __int8 *)(v1 + 136);
  uint64_t v119 = *(void *)(v1 + 112);
  uint64_t v120 = v30;
  uint64_t v118 = v31;
  LODWORD(v137) = v32;
  sub_1000C90C0(v119, v30, v31, v32, (uint64_t)&v143);
  uint64_t v113 = v143;
  unint64_t v129 = v144;
  uint64_t v114 = v145;
  uint64_t v128 = v146;
  uint64_t v115 = v147;
  uint64_t v125 = v148;
  uint64_t v116 = v149;
  uint64_t v124 = v150;
  uint64_t v33 = type metadata accessor for FBKSInteraction.AnnotatedContent();
  uint64_t v34 = *(void *)(v33 - 8);
  id v35 = *(void **)(v34 + 56);
  v138 = v29;
  uint64_t v134 = v34 + 56;
  v135 = v35;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v35)(v29, 1, 1, v33);
  unint64_t v36 = *(void *)(v1 + 32);
  uint64_t v133 = v1;
  if (v36)
  {
    uint64_t v37 = *(void *)(v1 + 24);
    uint64_t v143 = v37;
    unint64_t v144 = v36;
    swift_bridgeObjectRetain();
    static CharacterSet.whitespacesAndNewlines.getter();
    sub_10002DF54();
    StringProtocol.trimmingCharacters(in:)();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
    swift_bridgeObjectRelease();
    uint64_t v38 = String.count.getter();
    swift_bridgeObjectRelease();
    if (v38 >= 1)
    {
      *char v16 = v37;
      v16[1] = v36;
      unint64_t v40 = v131;
      id v39 = v132;
      (*(void (**)(uint64_t *, void, void))(v131 + 104))(v16, enum case for FBKSInteraction.Content.text(_:), v132);
      uint64_t v41 = *(void (**)(char *, uint64_t *, void))(v40 + 16);
      v112 = v16;
      v41(v121, v16, v39);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v42 = type metadata accessor for FBKSInteraction.AnnotatedContent.IconType();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v122, 1, 1, v42);
      uint64_t v43 = v136;
      FBKSInteraction.AnnotatedContent.init(payload:displayName:description:fileName:group:iconType:additionalInfo:)();
      uint64_t v44 = (uint64_t)v138;
      sub_10002784C((uint64_t)v138, &qword_100201008);
      ((void (*)(uint64_t, void, uint64_t, uint64_t))v135)(v43, 0, 1, v33);
      sub_100026FD0(v43, v44, &qword_100201008);
      if (qword_1001FAC58 != -1) {
        swift_once();
      }
      uint64_t v45 = type metadata accessor for Logger();
      sub_10000EBE8(v45, (uint64_t)qword_100212800);
      uint64_t v2 = v133;
      sub_10003FB08(v133);
      sub_10003FB08(v2);
      uint64_t v46 = Logger.logObject.getter();
      os_log_type_t v47 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v46, v47))
      {
        uint64_t v48 = (uint8_t *)swift_slowAlloc();
        uint64_t v143 = swift_slowAlloc();
        *(_DWORD *)uint64_t v48 = 136642819;
        swift_bridgeObjectRetain();
        uint64_t v142 = sub_100021444(v37, v36, &v143);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_10002E220(v2);
        sub_10002E220(v2);
        _os_log_impl((void *)&_mh_execute_header, v46, v47, "Feedback Initiated - originalContent: %{sensitive}s", v48, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        sub_10002E220(v2);
        sub_10002E220(v2);
      }
      (*(void (**)(uint64_t *, void (*)(void, void, void)))(v131 + 8))(v112, v132);
    }
  }
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v135)(v141, 1, 1, v33);
  unint64_t v49 = *(void *)(v2 + 64);
  uint64_t v50 = v2;
  if (v49)
  {
    uint64_t v51 = *(void *)(v2 + 56);
    uint64_t v52 = String.count.getter();
    uint64_t v53 = v127;
    if (v52 <= 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v54 = v117;
      uint64_t *v117 = v51;
      v54[1] = v49;
      unint64_t v56 = v131;
      uint64_t v55 = v132;
      (*(void (**)(uint64_t *, void, void))(v131 + 104))(v54, enum case for FBKSInteraction.Content.text(_:), v132);
      (*(void (**)(char *, uint64_t *, void))(v56 + 16))(v121, v54, v55);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      uint64_t v57 = type metadata accessor for FBKSInteraction.AnnotatedContent.IconType();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56))(v122, 1, 1, v57);
      uint64_t v58 = v136;
      FBKSInteraction.AnnotatedContent.init(payload:displayName:description:fileName:group:iconType:additionalInfo:)();
      uint64_t v59 = v141;
      sub_10002784C(v141, &qword_100201008);
      ((void (*)(uint64_t, void, uint64_t, uint64_t))v135)(v58, 0, 1, v33);
      sub_100026FD0(v58, v59, &qword_100201008);
      if (qword_1001FAC58 != -1) {
        swift_once();
      }
      uint64_t v60 = type metadata accessor for Logger();
      sub_10000EBE8(v60, (uint64_t)qword_100212800);
      sub_10003FB08(v50);
      sub_10003FB08(v50);
      uint64_t v61 = Logger.logObject.getter();
      os_log_type_t v62 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v61, v62))
      {
        uint64_t v63 = (uint8_t *)swift_slowAlloc();
        uint64_t v143 = swift_slowAlloc();
        *(_DWORD *)uint64_t v63 = 136642819;
        swift_bridgeObjectRetain();
        uint64_t v142 = sub_100021444(v51, v49, &v143);
        uint64_t v50 = v133;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_10002E220(v50);
        sub_10002E220(v50);
        _os_log_impl((void *)&_mh_execute_header, v61, v62, "Feedback Initiated - generatedContent: %{sensitive}s", v63, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        sub_10002E220(v50);
        sub_10002E220(v50);
      }
      (*(void (**)(uint64_t *, void (*)(void, void, void)))(v131 + 8))(v54, v132);
    }
    uint64_t v64 = v139;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v64 = v139;
    uint64_t v53 = v127;
  }
  v135 = sub_1000C756C();
  uint64_t v65 = v140;
  uint64_t v66 = *(void (**)(char *))(v140 + 104);
  v67 = v130;
  LODWORD(v134) = enum case for FBKSInteraction.FeatureDomain.writingTools(_:);
  v66(v130);
  if (v137 != 255 && v137)
  {
    if (v137 == 1)
    {
      if (v120 != 1) {
        goto LABEL_29;
      }
      v68 = (unsigned int *)&enum case for FBKSInteraction.FeatureDomain.writingToolsCompose(_:);
      goto LABEL_28;
    }
    if (v118 | v120 | v119)
    {
      v68 = (unsigned int *)&enum case for FBKSInteraction.FeatureDomain.smartReplies(_:);
      if (v119 != 1 || v118 | v120)
      {
LABEL_28:
        (*(void (**)(char *, uint64_t))(v65 + 8))(v67, v64);
        ((void (*)(char *, void, uint64_t))v66)(v67, *v68, v64);
      }
    }
  }
LABEL_29:
  v132 = (void (*)(void, void, void))v66;
  (*(void (**)(char *, char *, uint64_t))(v65 + 16))(v53, v67, v64);
  sub_100008DD4((uint64_t)v138, v136, &qword_100201008);
  sub_100008DD4(v141, v126, &qword_100201008);
  uint64_t v69 = *(void *)(v50 + 72);
  unint64_t v70 = *(void *)(v50 + 80);
  objc_allocWithZone((Class)type metadata accessor for FBKSInteraction());
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v131 = v70;
  uint64_t v136 = v69;
  uint64_t v71 = FBKSInteraction.init(featureDomain:bundleID:prefillQuestions:originalAnnotatedContent:generatedAnnotatedContent:extraContent:modelVersion:diagnostics:auxiliaryMetrics:isHighPriority:)();
  if (v137 == 255)
  {
    v73 = v67;
    if (qword_1001FAC58 != -1) {
      swift_once();
    }
    uint64_t v91 = type metadata accessor for Logger();
    sub_10000EBE8(v91, (uint64_t)qword_100212800);
    v92 = Logger.logObject.getter();
    os_log_type_t v93 = static os_log_type_t.error.getter();
    BOOL v94 = os_log_type_enabled(v92, v93);
    uint64_t v95 = v133;
    if (!v94) {
      goto LABEL_44;
    }
    v96 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v96 = 0;
    v97 = "Feedback Initiated - No Subject";
    goto LABEL_43;
  }
  uint64_t v72 = v139;
  v132(v53, v134, v139);
  v73 = v67;
  char v74 = static FBKSInteraction.FeatureDomain.== infix(_:_:)();
  (*(void (**)(char *, uint64_t))(v140 + 8))(v53, v72);
  if ((v74 & 1) == 0)
  {
    if (qword_1001FAC58 != -1) {
      swift_once();
    }
    uint64_t v98 = type metadata accessor for Logger();
    sub_10000EBE8(v98, (uint64_t)qword_100212800);
    v92 = Logger.logObject.getter();
    os_log_type_t v93 = static os_log_type_t.error.getter();
    BOOL v99 = os_log_type_enabled(v92, v93);
    uint64_t v95 = v133;
    if (!v99) {
      goto LABEL_44;
    }
    v96 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v96 = 0;
    v97 = "Feedback Initiated - Ignoring subject for domain";
LABEL_43:
    _os_log_impl((void *)&_mh_execute_header, v92, v93, v97, v96, 2u);
    swift_slowDealloc();
LABEL_44:

    goto LABEL_47;
  }
  uint64_t v75 = sub_1000C92A8(v119, v120, v118, v137);
  unint64_t v77 = v76;
  sub_1000063C0(&qword_100201010);
  v78 = (int *)(sub_1000063C0(&qword_1001FAF28) - 8);
  unint64_t v79 = (*(unsigned __int8 *)(*(void *)v78 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v78 + 80);
  uint64_t v80 = swift_allocObject();
  long long v137 = xmmword_10018A720;
  *(_OWORD *)(v80 + 16) = xmmword_10018A720;
  unint64_t v81 = v80 + v79;
  uint64_t v82 = v78[14];
  strcpy((char *)v81, ":sub_feature");
  *(unsigned char *)(v81 + 13) = 0;
  *(_WORD *)(v81 + 14) = -5120;
  uint64_t v83 = enum case for FBKSForm.Question.custom(_:);
  uint64_t v84 = type metadata accessor for FBKSForm.Question();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v84 - 8) + 104))(v81, v83, v84);
  sub_1000063C0(&qword_100201018);
  uint64_t v85 = swift_allocObject();
  *(_OWORD *)(v85 + 16) = v137;
  *(void *)(v85 + 32) = v75;
  *(void *)(v85 + 40) = v77;
  *(void *)(v81 + v82) = v85;
  swift_bridgeObjectRetain();
  sub_100006010(v80);
  dispatch thunk of FBKSInteraction.prefillQuestions.setter();
  if (qword_1001FAC58 != -1) {
    swift_once();
  }
  uint64_t v86 = type metadata accessor for Logger();
  sub_10000EBE8(v86, (uint64_t)qword_100212800);
  swift_bridgeObjectRetain();
  v87 = Logger.logObject.getter();
  os_log_type_t v88 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v87, v88))
  {
    v89 = (uint8_t *)swift_slowAlloc();
    uint64_t v90 = swift_slowAlloc();
    *(void *)&long long v137 = v71;
    uint64_t v143 = v90;
    *(_DWORD *)v89 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v142 = sub_100021444(v75, v77, &v143);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v87, v88, "Feedback Initiated - Subject: %s", v89, 0xCu);
    swift_arrayDestroy();
    uint64_t v71 = v137;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v95 = v133;
LABEL_47:
  if (qword_1001FAC58 != -1) {
    swift_once();
  }
  uint64_t v100 = type metadata accessor for Logger();
  sub_10000EBE8(v100, (uint64_t)qword_100212800);
  sub_10003FB08(v95);
  sub_10003FB08(v95);
  v101 = Logger.logObject.getter();
  os_log_type_t v102 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v101, v102))
  {
    v103 = (uint8_t *)swift_slowAlloc();
    uint64_t v104 = swift_slowAlloc();
    *(_DWORD *)v103 = 136380675;
    uint64_t v143 = v104;
    if (v131) {
      uint64_t v105 = v136;
    }
    else {
      uint64_t v105 = 0;
    }
    if (v131) {
      unint64_t v106 = v131;
    }
    else {
      unint64_t v106 = 0xE000000000000000;
    }
    swift_bridgeObjectRetain();
    uint64_t v142 = sub_100021444(v105, v106, &v143);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10002E220(v95);
    sub_10002E220(v95);
    _os_log_impl((void *)&_mh_execute_header, v101, v102, "Feedback Initiated - modelInfoString: %{private}s", v103, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v140 + 8))(v130, v139);
  }
  else
  {

    sub_10002E220(v95);
    sub_10002E220(v95);
    (*(void (**)(char *, uint64_t))(v140 + 8))(v73, v139);
  }
  sub_10002784C(v141, &qword_100201008);
  sub_10002784C((uint64_t)v138, &qword_100201008);
  v107 = v123;
  uint64_t *v123 = v71;
  uint64_t v108 = enum case for FBKSEvaluation.Subject.interaction(_:);
  uint64_t v109 = type metadata accessor for FBKSEvaluation.Subject();
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v109 - 8) + 104))(v107, v108, v109);
}

uint64_t sub_1000C1DEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v54 = a2;
  uint64_t v5 = sub_1000063C0(&qword_100201060);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v50 = v5;
  uint64_t v51 = v6;
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000063C0(&qword_100201130);
  uint64_t v52 = *(void *)(v9 - 8);
  uint64_t v53 = v9;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000063C0(&qword_100201058);
  uint64_t v13 = v12 - 8;
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v16 = (_OWORD *)swift_allocObject();
  long long v17 = v3[9];
  v16[9] = v3[8];
  v16[10] = v17;
  v16[11] = v3[10];
  long long v18 = v3[5];
  v16[5] = v3[4];
  v16[6] = v18;
  long long v19 = v3[7];
  v16[7] = v3[6];
  v16[8] = v19;
  long long v20 = v3[1];
  v16[1] = *v3;
  v16[2] = v20;
  long long v21 = v3[3];
  v16[3] = v3[2];
  v16[4] = v21;
  uint64_t v55 = a1;
  sub_10003FB08((uint64_t)v3);
  sub_1000063C0(&qword_1001FBE40);
  uint64_t v22 = sub_100006C14(&qword_1001FBBC0);
  uint64_t v23 = type metadata accessor for IconOnlyLabelStyle();
  uint64_t v24 = sub_100027F2C((unint64_t *)&unk_1001FD5A0, &qword_1001FBBC0);
  uint64_t v25 = sub_1000C9EB4(&qword_1001FDA20, (void (*)(uint64_t))&type metadata accessor for IconOnlyLabelStyle);
  double v56 = *(double *)&v22;
  uint64_t v57 = v23;
  uint64_t v58 = v24;
  uint64_t v59 = v25;
  swift_getOpaqueTypeConformance2();
  Button.init(action:label:)();
  LocalizedStringKey.init(stringLiteral:)();
  sub_100027F2C(&qword_100201068, &qword_100201060);
  uint64_t v26 = v50;
  View.help(_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v8, v26);
  LOBYTE(v26) = static Edge.Set.bottom.getter();
  EdgeInsets.init(_all:)();
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  uint64_t v36 = v52;
  uint64_t v35 = v53;
  (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v15, v11, v53);
  uint64_t v37 = &v15[*(int *)(v13 + 44)];
  *uint64_t v37 = v26;
  *((void *)v37 + 1) = v28;
  *((void *)v37 + 2) = v30;
  *((void *)v37 + 3) = v32;
  *((void *)v37 + 4) = v34;
  v37[40] = 0;
  (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v35);
  uint64_t v38 = static Color.blue.getter();
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
  double v39 = v56;
  uint64_t v40 = v58;
  uint64_t v41 = v59;
  uint64_t v42 = v60;
  swift_retain();
  uint64_t v43 = static Alignment.center.getter();
  uint64_t v45 = v44;
  uint64_t v46 = v54;
  sub_100008DD4((uint64_t)v15, v54, &qword_100201058);
  swift_release();
  uint64_t v47 = v46 + *(int *)(sub_1000063C0(&qword_100201040) + 36);
  *(double *)uint64_t v47 = v39 * 0.5;
  *(double *)(v47 + 8) = v39;
  *(void *)(v47 + 16) = v57;
  *(void *)(v47 + 24) = v40;
  *(void *)(v47 + 32) = v41;
  *(void *)(v47 + 40) = v42;
  *(void *)(v47 + 48) = v38;
  *(_WORD *)(v47 + 56) = 256;
  *(void *)(v47 + 64) = v43;
  *(void *)(v47 + 72) = v45;
  return sub_10002784C((uint64_t)v15, &qword_100201058);
}

uint64_t sub_1000C22BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v54 = a2;
  uint64_t v5 = sub_1000063C0(&qword_100201190);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v50 = v5;
  uint64_t v51 = v6;
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000063C0(&qword_100201198);
  uint64_t v52 = *(void *)(v9 - 8);
  uint64_t v53 = v9;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000063C0(&qword_1002011A0);
  uint64_t v13 = v12 - 8;
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v16 = (_OWORD *)swift_allocObject();
  long long v17 = v3[9];
  v16[9] = v3[8];
  v16[10] = v17;
  v16[11] = v3[10];
  long long v18 = v3[5];
  v16[5] = v3[4];
  v16[6] = v18;
  long long v19 = v3[7];
  v16[7] = v3[6];
  v16[8] = v19;
  long long v20 = v3[1];
  v16[1] = *v3;
  v16[2] = v20;
  long long v21 = v3[3];
  v16[3] = v3[2];
  v16[4] = v21;
  uint64_t v55 = a1;
  sub_10003FB08((uint64_t)v3);
  sub_1000063C0(&qword_1002011A8);
  uint64_t v22 = sub_100006C14(&qword_1001FBBC0);
  uint64_t v23 = type metadata accessor for TitleAndIconLabelStyle();
  uint64_t v24 = sub_100027F2C((unint64_t *)&unk_1001FD5A0, &qword_1001FBBC0);
  uint64_t v25 = sub_1000C9EB4(&qword_1002011B0, (void (*)(uint64_t))&type metadata accessor for TitleAndIconLabelStyle);
  double v56 = *(double *)&v22;
  uint64_t v57 = v23;
  uint64_t v58 = v24;
  uint64_t v59 = v25;
  swift_getOpaqueTypeConformance2();
  Button.init(action:label:)();
  LocalizedStringKey.init(stringLiteral:)();
  sub_100027F2C(&qword_1002011B8, &qword_100201190);
  uint64_t v26 = v50;
  View.help(_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v8, v26);
  LOBYTE(v26) = static Edge.Set.bottom.getter();
  EdgeInsets.init(_all:)();
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  uint64_t v36 = v52;
  uint64_t v35 = v53;
  (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v15, v11, v53);
  uint64_t v37 = &v15[*(int *)(v13 + 44)];
  *uint64_t v37 = v26;
  *((void *)v37 + 1) = v28;
  *((void *)v37 + 2) = v30;
  *((void *)v37 + 3) = v32;
  *((void *)v37 + 4) = v34;
  v37[40] = 0;
  (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v35);
  uint64_t v38 = static Color.blue.getter();
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
  double v39 = v56;
  uint64_t v40 = v58;
  uint64_t v41 = v59;
  uint64_t v42 = v60;
  swift_retain();
  uint64_t v43 = static Alignment.center.getter();
  uint64_t v45 = v44;
  uint64_t v46 = v54;
  sub_100008DD4((uint64_t)v15, v54, &qword_1002011A0);
  swift_release();
  uint64_t v47 = v46 + *(int *)(sub_1000063C0(&qword_100201178) + 36);
  *(double *)uint64_t v47 = v39 * 0.5;
  *(double *)(v47 + 8) = v39;
  *(void *)(v47 + 16) = v57;
  *(void *)(v47 + 24) = v40;
  *(void *)(v47 + 32) = v41;
  *(void *)(v47 + 40) = v42;
  *(void *)(v47 + 48) = v38;
  *(_WORD *)(v47 + 56) = 256;
  *(void *)(v47 + 64) = v43;
  *(void *)(v47 + 72) = v45;
  return sub_10002784C((uint64_t)v15, &qword_1002011A0);
}

uint64_t sub_1000C278C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a4;
  uint64_t v5 = type metadata accessor for FBKSEvaluation.Action();
  v4[3] = v5;
  v4[4] = *(void *)(v5 - 8);
  v4[5] = swift_task_alloc();
  type metadata accessor for MainActor();
  v4[6] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[7] = v7;
  v4[8] = v6;
  return _swift_task_switch(sub_1000C2880, v7, v6);
}

uint64_t sub_1000C2880()
{
  if (qword_1001FAC58 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000EBE8(v1, (uint64_t)qword_100212800);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Report a Concern button pressed - launching remote eval", v4, 2u);
    swift_slowDealloc();
  }
  uint64_t v6 = v0[4];
  uint64_t v5 = v0[5];
  uint64_t v7 = v0[3];

  (*(void (**)(uint64_t, void, uint64_t))(v6 + 104))(v5, enum case for FBKSEvaluation.Action.reportConcern(_:), v7);
  uint64_t v8 = (void *)swift_task_alloc();
  v0[9] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_1000C2A00;
  uint64_t v9 = v0[5];
  return sub_1000C0464(v9);
}

uint64_t sub_1000C2A00()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 40);
  uint64_t v3 = *(void *)(*v0 + 32);
  uint64_t v4 = *(void *)(*v0 + 24);
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  uint64_t v5 = *(void *)(v1 + 64);
  uint64_t v6 = *(void *)(v1 + 56);
  return _swift_task_switch(sub_1000C2B84, v6, v5);
}

uint64_t sub_1000C2B84()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000C2BEC@<X0>(uint64_t a1@<X0>, void (*a2)(void)@<X1>, unint64_t *a3@<X2>, void (*a4)(uint64_t)@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  long long v20 = a4;
  uint64_t v21 = a5;
  long long v18 = a2;
  long long v19 = a3;
  uint64_t v22 = a6;
  uint64_t v23 = a1;
  uint64_t v6 = type metadata accessor for FBKSEvaluation.Action();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000063C0(&qword_1001FBBC0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v16 = v10;
  uint64_t v17 = v11;
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  LocalizedStringKey.init(stringLiteral:)();
  type metadata accessor for FBKEvaluationController();
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for FBKSEvaluation.Action.reportConcern(_:), v6);
  static FBKEvaluationController.systemImageName(for:hasResponse:)();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  Label<>.init(_:systemImage:)();
  v18(0);
  sub_100027F2C((unint64_t *)&unk_1001FD5A0, &qword_1001FBBC0);
  sub_1000C9EB4(v19, v20);
  uint64_t v14 = v16;
  View.labelStyle<A>(_:)();
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v13, v14);
}

uint64_t sub_1000C2E60@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1000063C0(&qword_1002010A0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000063C0(&qword_100201090);
  uint64_t v9 = v8 - 8;
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v7 = static VerticalAlignment.center.getter();
  *((void *)v7 + 1) = 0;
  v7[16] = 0;
  uint64_t v12 = sub_1000063C0(&qword_1002010A8);
  sub_1000C3098(a1, v2, &v7[*(int *)(v12 + 44)]);
  LOBYTE(a1) = static Edge.Set.bottom.getter();
  EdgeInsets.init(_all:)();
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  uint64_t v20 = v19;
  sub_100008DD4((uint64_t)v7, (uint64_t)v11, &qword_1002010A0);
  uint64_t v21 = &v11[*(int *)(v9 + 44)];
  *uint64_t v21 = a1;
  *((void *)v21 + 1) = v14;
  *((void *)v21 + 2) = v16;
  *((void *)v21 + 3) = v18;
  *((void *)v21 + 4) = v20;
  v21[40] = 0;
  sub_10002784C((uint64_t)v7, &qword_1002010A0);
  uint64_t v22 = static Color.blue.getter();
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
  double v23 = *(double *)&v32[1];
  uint64_t v24 = v32[3];
  uint64_t v25 = v32[4];
  uint64_t v26 = v32[5];
  swift_retain();
  uint64_t v27 = static Alignment.center.getter();
  uint64_t v29 = v28;
  sub_100008DD4((uint64_t)v11, a2, &qword_100201090);
  swift_release();
  uint64_t v30 = a2 + *(int *)(sub_1000063C0(&qword_100201030) + 36);
  *(double *)uint64_t v30 = v23 * 0.5;
  *(double *)(v30 + 8) = v23;
  *(void *)(v30 + 16) = v32[2];
  *(void *)(v30 + 24) = v24;
  *(void *)(v30 + 32) = v25;
  *(void *)(v30 + 40) = v26;
  *(void *)(v30 + 48) = v22;
  *(_WORD *)(v30 + 56) = 256;
  *(void *)(v30 + 64) = v27;
  *(void *)(v30 + 72) = v29;
  return sub_10002784C((uint64_t)v11, &qword_100201090);
}

uint64_t sub_1000C3098@<X0>(int a1@<W0>, _OWORD *a2@<X1>, void *a3@<X8>)
{
  int v152 = a1;
  uint64_t v142 = a3;
  uint64_t v145 = sub_1000063C0(&qword_100201060);
  uint64_t v4 = *(void *)(v145 - 8);
  __chkstk_darwin(v145);
  uint64_t v6 = (char *)v110 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v144 = sub_1000063C0(&qword_1002010B0);
  __chkstk_darwin(v144);
  uint64_t v8 = (char *)v110 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v148 = sub_1000063C0(&qword_1002010B8);
  uint64_t v150 = *(void *)(v148 - 8);
  __chkstk_darwin(v148);
  uint64_t v147 = (char *)v110 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v146 = sub_1000063C0(&qword_1002010C0);
  uint64_t v10 = __chkstk_darwin(v146);
  uint64_t v141 = (uint64_t)v110 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v149 = (uint64_t)v110 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v153 = (uint64_t)v110 - v15;
  __chkstk_darwin(v14);
  uint64_t v151 = (uint64_t)v110 - v16;
  uint64_t v17 = (_OWORD *)swift_allocObject();
  long long v18 = a2[9];
  v17[9] = a2[8];
  v17[10] = v18;
  v17[11] = a2[10];
  long long v19 = a2[5];
  v17[5] = a2[4];
  v17[6] = v19;
  long long v20 = a2[7];
  v17[7] = a2[6];
  v17[8] = v20;
  long long v21 = a2[1];
  v17[1] = *a2;
  v17[2] = v21;
  long long v22 = a2[3];
  v17[3] = a2[2];
  v17[4] = v22;
  sub_10003FB08((uint64_t)a2);
  uint64_t v23 = sub_1000063C0(&qword_1001FBE40);
  uint64_t v24 = sub_100006C14(&qword_1001FBBC0);
  uint64_t v25 = type metadata accessor for IconOnlyLabelStyle();
  uint64_t v26 = sub_100027F2C((unint64_t *)&unk_1001FD5A0, &qword_1001FBBC0);
  uint64_t v27 = sub_1000C9EB4(&qword_1001FDA20, (void (*)(uint64_t))&type metadata accessor for IconOnlyLabelStyle);
  *(void *)&long long v225 = v24;
  *((void *)&v225 + 1) = v25;
  *(void *)&long long v226 = v26;
  *((void *)&v226 + 1) = v27;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v137 = v23;
  Button.init(action:label:)();
  uint64_t v28 = v145;
  uint64_t v134 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
  uint64_t v135 = v4 + 16;
  v134(v8, v6, v145);
  uint64_t v29 = *(void (**)(char *, uint64_t))(v4 + 8);
  v138 = v6;
  uint64_t v139 = v4 + 8;
  uint64_t v133 = v29;
  v29(v6, v28);
  unint64_t v131 = "chatgpt_text.txt";
  LocalizedStringKey.init(stringLiteral:)();
  unint64_t v30 = sub_1000C9728();
  uint64_t v31 = v147;
  unint64_t v132 = v30;
  View.help(_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v140 = v8;
  sub_10002784C((uint64_t)v8, &qword_1002010B0);
  uint64_t v32 = static Color.red.getter();
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
  double v33 = v241;
  uint64_t v34 = v243;
  uint64_t v35 = v244;
  uint64_t v36 = v245;
  swift_retain();
  uint64_t v37 = static Alignment.center.getter();
  uint64_t v39 = v38;
  uint64_t v40 = v150;
  uint64_t v41 = v153;
  uint64_t v42 = v148;
  unint64_t v129 = *(void (**)(uint64_t, char *, uint64_t))(v150 + 16);
  uint64_t v130 = v150 + 16;
  v129(v153, v31, v148);
  swift_release();
  uint64_t v43 = v41 + *(int *)(v146 + 36);
  *(double *)uint64_t v43 = v33 * 0.5;
  *(double *)(v43 + 8) = v33;
  *(void *)(v43 + 16) = v242;
  *(void *)(v43 + 24) = v34;
  *(void *)(v43 + 32) = v35;
  *(void *)(v43 + 40) = v36;
  *(void *)(v43 + 48) = v32;
  *(_WORD *)(v43 + 56) = 256;
  *(void *)(v43 + 64) = v37;
  *(void *)(v43 + 72) = v39;
  uint64_t v44 = *(void (**)(char *, uint64_t))(v40 + 8);
  uint64_t v150 = v40 + 8;
  uint64_t v128 = v44;
  v44(v31, v42);
  sub_100026FD0(v41, v151, &qword_1002010C0);
  if (v152)
  {
    if (qword_1001FAD00 != -1) {
      swift_once();
    }
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    int v143 = v247;
    uint64_t v124 = v246;
    uint64_t v125 = v248;
    int v118 = v249;
    uint64_t v126 = v251;
    uint64_t v127 = v250;
    LocalizedStringKey.init(stringLiteral:)();
    uint64_t v45 = Text.init(_:tableName:bundle:comment:)();
    uint64_t v47 = v46;
    char v49 = v48 & 1;
    static Font.footnote.getter();
    uint64_t v50 = Text.font(_:)();
    uint64_t v123 = v51;
    char v53 = v52;
    swift_release();
    sub_100026F18(v45, v47, v49);
    swift_bridgeObjectRelease();
    LODWORD(v225) = static HierarchicalShapeStyle.secondary.getter();
    uint64_t v54 = v123;
    uint64_t v55 = Text.foregroundStyle<A>(_:)();
    uint64_t v57 = v56;
    uint64_t v113 = v58;
    int v60 = v59 & 1;
    sub_100026F18(v50, v54, v53 & 1);
    swift_bridgeObjectRelease();
    uint64_t v61 = static Color.red.getter();
    StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
    double v62 = v252;
    uint64_t v63 = v254;
    uint64_t v64 = v255;
    uint64_t v65 = v256;
    uint64_t v66 = static Alignment.center.getter();
    uint64_t v122 = v67;
    uint64_t v123 = v66;
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    uint64_t v117 = v257;
    uint64_t v121 = v261;
    uint64_t v119 = v259;
    uint64_t v120 = *((void *)&v261 + 1);
    char v169 = 1;
    char v167 = v143;
    char v68 = v118;
    char v165 = v118;
    char v163 = v60;
    char v159 = 1;
    unsigned __int8 v157 = v258;
    unsigned __int8 v155 = v260;
    LODWORD(v177) = *(_DWORD *)v168;
    *(_DWORD *)((char *)&v177 + 3) = *(_DWORD *)&v168[3];
    *(_DWORD *)((char *)&v262 + 3) = *(_DWORD *)&v166[3];
    LODWORD(v262) = *(_DWORD *)v166;
    *(_DWORD *)((char *)v176 + 3) = *(_DWORD *)&v164[3];
    v176[0] = *(_DWORD *)v164;
    *(_DWORD *)((char *)v175 + 3) = *(_DWORD *)&v162[3];
    v175[0] = *(_DWORD *)v162;
    __int16 v174 = v161;
    int v173 = v160;
    int v111 = v60;
    int v112 = 1;
    *(_DWORD *)((char *)v172 + 3) = *(_DWORD *)&v158[3];
    v172[0] = *(_DWORD *)v158;
    *(_DWORD *)((char *)v171 + 3) = *(_DWORD *)&v156[3];
    v171[0] = *(_DWORD *)v156;
    int v114 = v258;
    int v115 = v260;
    *(_DWORD *)((char *)v170 + 3) = *(_DWORD *)&v154[3];
    v170[0] = *(_DWORD *)v154;
    sub_10002783C(v55, v57, v60);
    uint64_t v69 = v113;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    int v116 = v60;
    sub_10002783C(v55, v57, v60);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_100026F18(v55, v57, v60);
    v110[1] = v61;
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v70 = v253;
    swift_bridgeObjectRelease();
    *(void *)&long long v209 = 0;
    BYTE8(v209) = 1;
    *(_DWORD *)((char *)&v209 + 9) = v177;
    HIDWORD(v209) = *(_DWORD *)((char *)&v177 + 3);
    *(void *)&long long v210 = v124;
    BYTE8(v210) = v143;
    *(_DWORD *)((char *)&v210 + 9) = LODWORD(v262);
    HIDWORD(v210) = *(_DWORD *)((char *)&v262 + 3);
    *(void *)&long long v211 = v125;
    BYTE8(v211) = v68;
    HIDWORD(v211) = *(_DWORD *)((char *)v176 + 3);
    *(_DWORD *)((char *)&v211 + 9) = v176[0];
    *(void *)&long long v212 = v127;
    *((void *)&v212 + 1) = v126;
    *(void *)&long long v213 = v55;
    *((void *)&v213 + 1) = v57;
    LOBYTE(v214) = v111;
    DWORD1(v214) = *(_DWORD *)((char *)v175 + 3);
    *(_DWORD *)((char *)&v214 + 1) = v175[0];
    *((void *)&v214 + 1) = v69;
    *(double *)&long long v215 = v62 * 0.5;
    *((double *)&v215 + 1) = v62;
    *(void *)&long long v216 = v70;
    *((void *)&v216 + 1) = v63;
    *(void *)&long long v217 = v64;
    *((void *)&v217 + 1) = v65;
    *(void *)&long long v218 = v61;
    WORD4(v218) = 256;
    HIWORD(v218) = v174;
    *(_DWORD *)((char *)&v218 + 10) = v173;
    *(void *)&long long v219 = v123;
    *((void *)&v219 + 1) = v122;
    *(void *)&long long v220 = 0;
    BYTE8(v220) = v112;
    *(_DWORD *)((char *)&v220 + 9) = v172[0];
    HIDWORD(v220) = *(_DWORD *)((char *)v172 + 3);
    *(void *)&long long v221 = v117;
    BYTE8(v221) = v114;
    HIDWORD(v221) = *(_DWORD *)((char *)v171 + 3);
    *(_DWORD *)((char *)&v221 + 9) = v171[0];
    *(void *)&long long v222 = v119;
    BYTE8(v222) = v115;
    *(_DWORD *)((char *)&v222 + 9) = v170[0];
    HIDWORD(v222) = *(_DWORD *)((char *)v170 + 3);
    *(void *)&long long v223 = v121;
    *((void *)&v223 + 1) = v120;
    sub_1000C9A54((uint64_t)&v209);
    sub_100026FD0((uint64_t)&v209, (uint64_t)&v225, &qword_1002010D8);
    sub_1000063C0(&qword_1002010E0);
    sub_1000063C0(&qword_1002010E8);
    sub_100027F2C(&qword_1002010F0, &qword_1002010E0);
    sub_1000C9828();
    _ConditionalContent<>.init(storage:)();
    sub_100026F18(v55, v57, v116);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    long long v237 = v205;
    long long v238 = v206;
    long long v239 = v207;
    char v240 = v208;
    long long v233 = v201;
    long long v234 = v202;
    long long v235 = v203;
    long long v236 = v204;
    long long v229 = v197;
    long long v230 = v198;
    long long v231 = v199;
    long long v232 = v200;
    long long v225 = v193;
    long long v226 = v194;
    long long v227 = v195;
    long long v228 = v196;
  }
  else
  {
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    *(void *)&long long v209 = 0;
    BYTE8(v209) = 1;
    *(void *)&long long v210 = v257;
    BYTE8(v210) = v258;
    *(void *)&long long v211 = v259;
    BYTE8(v211) = v260;
    long long v212 = v261;
    sub_1000C981C((uint64_t)&v209);
    sub_100026FD0((uint64_t)&v209, (uint64_t)&v193, &qword_1002010D8);
    sub_1000063C0(&qword_1002010E0);
    sub_1000063C0(&qword_1002010E8);
    sub_100027F2C(&qword_1002010F0, &qword_1002010E0);
    sub_1000C9828();
    _ConditionalContent<>.init(storage:)();
  }
  int v143 = v152 & 1;
  uint64_t v71 = (_OWORD *)swift_allocObject();
  long long v72 = a2[9];
  v71[9] = a2[8];
  v71[10] = v72;
  v71[11] = a2[10];
  long long v73 = a2[5];
  v71[5] = a2[4];
  v71[6] = v73;
  long long v74 = a2[7];
  v71[7] = a2[6];
  v71[8] = v74;
  long long v75 = a2[1];
  v71[1] = *a2;
  v71[2] = v75;
  long long v76 = a2[3];
  v71[3] = a2[2];
  v71[4] = v76;
  sub_10003FB08((uint64_t)a2);
  unint64_t v77 = v138;
  Button.init(action:label:)();
  uint64_t v78 = (uint64_t)v140;
  uint64_t v79 = v145;
  v134(v140, v77, v145);
  v133(v77, v79);
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v80 = v147;
  View.help(_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10002784C(v78, &qword_1002010B0);
  uint64_t v81 = static Color.red.getter();
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
  double v82 = v262;
  uint64_t v83 = v264;
  uint64_t v145 = v265;
  uint64_t v84 = v266;
  swift_retain();
  uint64_t v85 = static Alignment.center.getter();
  uint64_t v87 = v86;
  uint64_t v88 = v153;
  uint64_t v89 = v148;
  v129(v153, v80, v148);
  swift_release();
  uint64_t v90 = v145;
  uint64_t v91 = v88 + *(int *)(v146 + 36);
  *(double *)uint64_t v91 = v82 * 0.5;
  *(double *)(v91 + 8) = v82;
  *(void *)(v91 + 16) = v263;
  *(void *)(v91 + 24) = v83;
  *(void *)(v91 + 32) = v90;
  *(void *)(v91 + 40) = v84;
  *(void *)(v91 + 48) = v81;
  *(_WORD *)(v91 + 56) = 256;
  *(void *)(v91 + 64) = v85;
  *(void *)(v91 + 72) = v87;
  v128(v80, v89);
  uint64_t v92 = v149;
  sub_100026FD0(v88, v149, &qword_1002010C0);
  uint64_t v93 = v88;
  sub_100008DD4(v151, v88, &qword_1002010C0);
  long long v189 = v237;
  long long v190 = v238;
  long long v191 = v239;
  long long v185 = v233;
  long long v186 = v234;
  long long v187 = v235;
  long long v188 = v236;
  long long v181 = v229;
  long long v182 = v230;
  long long v183 = v231;
  long long v184 = v232;
  long long v177 = v225;
  long long v178 = v226;
  long long v179 = v227;
  char v192 = v240;
  long long v180 = v228;
  uint64_t v94 = v141;
  sub_100008DD4(v92, v141, &qword_1002010C0);
  uint64_t v95 = v142;
  *uint64_t v142 = 0;
  *((unsigned char *)v95 + 8) = v143;
  LOBYTE(v92) = (v152 & 1) == 0;
  *((unsigned char *)v95 + 9) = v92;
  v96 = (int *)sub_1000063C0(&qword_100201100);
  sub_100008DD4(v93, (uint64_t)v95 + v96[12], &qword_1002010C0);
  v97 = (char *)v95 + v96[16];
  long long v205 = v189;
  long long v206 = v190;
  long long v207 = v191;
  char v208 = v192;
  long long v201 = v185;
  long long v202 = v186;
  long long v203 = v187;
  long long v204 = v188;
  long long v197 = v181;
  long long v198 = v182;
  long long v199 = v183;
  long long v200 = v184;
  long long v193 = v177;
  long long v194 = v178;
  long long v98 = v179;
  long long v99 = v190;
  *((_OWORD *)v97 + 12) = v189;
  *((_OWORD *)v97 + 13) = v99;
  *((_OWORD *)v97 + 14) = v191;
  long long v100 = v186;
  *((_OWORD *)v97 + 8) = v185;
  *((_OWORD *)v97 + 9) = v100;
  long long v101 = v188;
  *((_OWORD *)v97 + 10) = v187;
  *((_OWORD *)v97 + 11) = v101;
  long long v102 = v182;
  *((_OWORD *)v97 + 4) = v181;
  *((_OWORD *)v97 + 5) = v102;
  long long v103 = v184;
  *((_OWORD *)v97 + 6) = v183;
  *((_OWORD *)v97 + 7) = v103;
  long long v104 = v178;
  *(_OWORD *)v97 = v177;
  *((_OWORD *)v97 + 1) = v104;
  long long v105 = v180;
  *((_OWORD *)v97 + 2) = v179;
  *((_OWORD *)v97 + 3) = v105;
  long long v106 = v180;
  v97[240] = v192;
  uint64_t v107 = (uint64_t)v95 + v96[20];
  long long v195 = v98;
  long long v196 = v106;
  sub_100008DD4(v94, v107, &qword_1002010C0);
  uint64_t v108 = (char *)v95 + v96[24];
  *(void *)uint64_t v108 = 0;
  v108[8] = v143;
  v108[9] = v92;
  sub_1000C9958((uint64_t)&v193, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1000C98E0);
  sub_10002784C(v149, &qword_1002010C0);
  sub_10002784C(v151, &qword_1002010C0);
  sub_10002784C(v94, &qword_1002010C0);
  long long v221 = v189;
  long long v222 = v190;
  long long v223 = v191;
  char v224 = v192;
  long long v217 = v185;
  long long v218 = v186;
  long long v219 = v187;
  long long v220 = v188;
  long long v213 = v181;
  long long v214 = v182;
  long long v215 = v183;
  long long v216 = v184;
  long long v209 = v177;
  long long v210 = v178;
  long long v211 = v179;
  long long v212 = v180;
  sub_1000C9958((uint64_t)&v209, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1000C99DC);
  return sub_10002784C(v153, &qword_1002010C0);
}

uint64_t sub_1000C4200(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a4;
  uint64_t v5 = type metadata accessor for FBKSEvaluation.Action();
  v4[3] = v5;
  v4[4] = *(void *)(v5 - 8);
  v4[5] = swift_task_alloc();
  type metadata accessor for MainActor();
  v4[6] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[7] = v7;
  v4[8] = v6;
  return _swift_task_switch(sub_1000C42F4, v7, v6);
}

uint64_t sub_1000C42F4()
{
  if (qword_1001FAC58 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000EBE8(v1, (uint64_t)qword_100212800);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Thumbs Up button pressed - launching remote eval", v4, 2u);
    swift_slowDealloc();
  }
  uint64_t v6 = v0[4];
  uint64_t v5 = v0[5];
  uint64_t v7 = v0[3];

  (*(void (**)(uint64_t, void, uint64_t))(v6 + 104))(v5, enum case for FBKSEvaluation.Action.thumbsUp(_:), v7);
  uint64_t v8 = (void *)swift_task_alloc();
  v0[9] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_1000C4474;
  uint64_t v9 = v0[5];
  return sub_1000C0464(v9);
}

uint64_t sub_1000C4474()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 40);
  uint64_t v3 = *(void *)(*v0 + 32);
  uint64_t v4 = *(void *)(*v0 + 24);
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  uint64_t v5 = *(void *)(v1 + 64);
  uint64_t v6 = *(void *)(v1 + 56);
  return _swift_task_switch(sub_1000CA144, v6, v5);
}

uint64_t sub_1000C45F8@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C4A48((unsigned int *)&enum case for FBKSEvaluation.Action.thumbsUp(_:), a1);
}

uint64_t sub_1000C461C(_OWORD *a1, void **a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_1000063C0(&qword_1001FF820);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*((void *)a1 + 18))
  {
    uint64_t v10 = *a2;
    swift_retain();
    sub_10011D110(v10);
    return swift_release();
  }
  else
  {
    uint64_t v12 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v9, 1, 1, v12);
    type metadata accessor for MainActor();
    sub_10003FB08((uint64_t)a1);
    uint64_t v13 = static MainActor.shared.getter();
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = v13;
    *(void *)(v14 + 24) = &protocol witness table for MainActor;
    long long v15 = a1[9];
    *(_OWORD *)(v14 + 160) = a1[8];
    *(_OWORD *)(v14 + 176) = v15;
    *(_OWORD *)(v14 + 192) = a1[10];
    long long v16 = a1[5];
    *(_OWORD *)(v14 + 96) = a1[4];
    *(_OWORD *)(v14 + 112) = v16;
    long long v17 = a1[7];
    *(_OWORD *)(v14 + 128) = a1[6];
    *(_OWORD *)(v14 + 144) = v17;
    long long v18 = a1[1];
    *(_OWORD *)(v14 + 32) = *a1;
    *(_OWORD *)(v14 + 48) = v18;
    long long v19 = a1[3];
    *(_OWORD *)(v14 + 64) = a1[2];
    *(_OWORD *)(v14 + 80) = v19;
    sub_1001228D0((uint64_t)v9, a4, v14);
    return swift_release();
  }
}

uint64_t sub_1000C47AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a4;
  uint64_t v5 = type metadata accessor for FBKSEvaluation.Action();
  v4[3] = v5;
  v4[4] = *(void *)(v5 - 8);
  v4[5] = swift_task_alloc();
  type metadata accessor for MainActor();
  v4[6] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[7] = v7;
  v4[8] = v6;
  return _swift_task_switch(sub_1000C48A0, v7, v6);
}

uint64_t sub_1000C48A0()
{
  if (qword_1001FAC58 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000EBE8(v1, (uint64_t)qword_100212800);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Thumbs Down button pressed - launching remote eval", v4, 2u);
    swift_slowDealloc();
  }
  uint64_t v6 = v0[4];
  uint64_t v5 = v0[5];
  uint64_t v7 = v0[3];

  (*(void (**)(uint64_t, void, uint64_t))(v6 + 104))(v5, enum case for FBKSEvaluation.Action.thumbsDown(_:), v7);
  uint64_t v8 = (void *)swift_task_alloc();
  v0[9] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_1000C4474;
  uint64_t v9 = v0[5];
  return sub_1000C0464(v9);
}

uint64_t sub_1000C4A20@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C4A48((unsigned int *)&enum case for FBKSEvaluation.Action.thumbsDown(_:), a1);
}

uint64_t sub_1000C4A48@<X0>(unsigned int *a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v3 = type metadata accessor for IconOnlyLabelStyle();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v19 = v3;
  uint64_t v20 = v4;
  __chkstk_darwin(v3);
  long long v17 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for FBKSEvaluation.Action();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1000063C0(&qword_1001FBBC0);
  uint64_t v18 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  LocalizedStringKey.init(stringLiteral:)();
  type metadata accessor for FBKEvaluationController();
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *a1, v6);
  static FBKEvaluationController.systemImageName(for:hasResponse:)();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  Label<>.init(_:systemImage:)();
  uint64_t v12 = v17;
  IconOnlyLabelStyle.init()();
  sub_100027F2C((unint64_t *)&unk_1001FD5A0, &qword_1001FBBC0);
  sub_1000C9EB4(&qword_1001FDA20, (void (*)(uint64_t))&type metadata accessor for IconOnlyLabelStyle);
  uint64_t v13 = v16;
  uint64_t v14 = v19;
  View.labelStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v12, v14);
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v11, v13);
}

void sub_1000C4D68()
{
  uint64_t v1 = (void *)v0;
  uint64_t v2 = type metadata accessor for FBKSEvaluation.Subject();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)((char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_1001FAC58 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_10000EBE8(v6, (uint64_t)qword_100212800);
  sub_10003FB08(v0);
  sub_10003FB08(v0);
  sub_10003FB08(v0);
  sub_10003FB08(v0);
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.info.getter();
  if (!os_log_type_enabled(v7, v8))
  {
    sub_10002E220((uint64_t)v1);
    sub_10002E220((uint64_t)v1);
    sub_10002E220((uint64_t)v1);
    sub_10002E220((uint64_t)v1);

    if (!v1[18]) {
      goto LABEL_13;
    }
LABEL_7:
    swift_retain();
    NSString v12 = String._bridgeToObjectiveC()();
    sub_10011D110(v12);
    swift_release();

    return;
  }
  uint64_t v20 = v3;
  uint64_t v21 = v2;
  uint64_t v9 = swift_slowAlloc();
  uint64_t v23 = swift_slowAlloc();
  *(_DWORD *)uint64_t v9 = 136643075;
  if (v1[4])
  {
    uint64_t v10 = v1[3];
    unint64_t v11 = v1[4];
  }
  else
  {
    uint64_t v10 = 0;
    unint64_t v11 = 0xE000000000000000;
  }
  swift_bridgeObjectRetain();
  uint64_t v22 = sub_100021444(v10, v11, &v23);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  swift_bridgeObjectRelease();
  sub_10002E220((uint64_t)v1);
  sub_10002E220((uint64_t)v1);
  *(_WORD *)(v9 + 12) = 2085;
  if (v1[8])
  {
    uint64_t v13 = v1[7];
    unint64_t v14 = v1[8];
  }
  else
  {
    uint64_t v13 = 0;
    unint64_t v14 = 0xE000000000000000;
  }
  swift_bridgeObjectRetain();
  uint64_t v22 = sub_100021444(v13, v14, &v23);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  swift_bridgeObjectRelease();
  sub_10002E220((uint64_t)v1);
  sub_10002E220((uint64_t)v1);
  _os_log_impl((void *)&_mh_execute_header, v7, v8, "Feedback View with input string: <%{sensitive}s>, output string: <%{sensitive}s>", (uint8_t *)v9, 0x16u);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();

  uint64_t v3 = v20;
  uint64_t v2 = v21;
  if (v1[18]) {
    goto LABEL_7;
  }
LABEL_13:
  sub_1000C09EC(v5);
  int v15 = (*(uint64_t (**)(uint64_t *, uint64_t))(v3 + 88))(v5, v2);
  if (v15 != enum case for FBKSEvaluation.Subject.id(_:))
  {
    if (v15 == enum case for FBKSEvaluation.Subject.interaction(_:))
    {
      (*(void (**)(uint64_t *, uint64_t))(v3 + 96))(v5, v2);
      uint64_t v16 = (void *)*v5;
      dispatch thunk of FBKSInteraction.presented(_:)();

      return;
    }
    long long v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Failed to mark the interaction - unknown interaction case", v19, 2u);
      swift_slowDealloc();
    }
  }
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
}

void sub_1000C51AC(uint64_t a1)
{
  if (a1)
  {
    swift_errorRetain();
    if (qword_1001FAC58 != -1) {
      swift_once();
    }
    uint64_t v1 = type metadata accessor for Logger();
    sub_10000EBE8(v1, (uint64_t)qword_100212800);
    swift_errorRetain();
    swift_errorRetain();
    oslog = Logger.logObject.getter();
    os_log_type_t v2 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v2))
    {
      uint64_t v3 = (uint8_t *)swift_slowAlloc();
      uint64_t v4 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v3 = 138412290;
      swift_errorRetain();
      uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v4 = v6;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, oslog, v2, "Failed to mark the interaction as presented: %@", v3, 0xCu);
      sub_1000063C0(&qword_1001FED90);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
  }
}

uint64_t sub_1000C53A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  v27[1] = a1;
  uint64_t v3 = sub_1000063C0(&qword_100200ED8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000063C0(&qword_100200EE0);
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27[0] = sub_1000063C0(&qword_100200EE8);
  __chkstk_darwin(v27[0]);
  NSString v12 = (char *)v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v13 = 0.0;
  if (*(unsigned char *)(v2 + 140)) {
    double v13 = 1.0;
  }
  if (*(unsigned char *)(v2 + 139)) {
    double v14 = v13;
  }
  else {
    double v14 = 1.0;
  }
  v27[4] = v2;
  sub_1000063C0(&qword_100200EF0);
  sub_1000C8B48(&qword_100200EF8, &qword_100200EF0, (void (*)(void))sub_1000C8990, (void (*)(void))sub_1000C8B0C);
  Section<>.init(content:)();
  char v15 = *(unsigned char *)(v2 + 137);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v17 = swift_allocObject();
  *(unsigned char *)(v17 + 16) = v15;
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v10, v6, v3);
  os_log_type_t v18 = (uint64_t *)&v10[*(int *)(v8 + 44)];
  uint64_t *v18 = KeyPath;
  v18[1] = (uint64_t)sub_100026D50;
  v18[2] = v17;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  *(_OWORD *)uint64_t v28 = *(_OWORD *)(v2 + 160);
  sub_1000063C0(&qword_100200FA0);
  State.wrappedValue.getter();
  uint64_t v19 = v29;
  sub_100008DD4((uint64_t)v10, (uint64_t)v12, &qword_100200EE0);
  *(void *)&v12[*(int *)(v27[0] + 36)] = v19;
  sub_10002784C((uint64_t)v10, &qword_100200EE0);
  v28[0] = v14;
  uint64_t v20 = swift_allocObject();
  *(double *)(v20 + 16) = v14;
  long long v21 = *(_OWORD *)(v2 + 96);
  *(_OWORD *)(v20 + 136) = *(_OWORD *)(v2 + 112);
  long long v22 = *(_OWORD *)(v2 + 144);
  *(_OWORD *)(v20 + 152) = *(_OWORD *)(v2 + 128);
  *(_OWORD *)(v20 + 168) = v22;
  *(_OWORD *)(v20 + 184) = *(_OWORD *)(v2 + 160);
  long long v23 = *(_OWORD *)(v2 + 32);
  *(_OWORD *)(v20 + 72) = *(_OWORD *)(v2 + 48);
  long long v24 = *(_OWORD *)(v2 + 80);
  *(_OWORD *)(v20 + 88) = *(_OWORD *)(v2 + 64);
  *(_OWORD *)(v20 + 104) = v24;
  *(_OWORD *)(v20 + 120) = v21;
  long long v25 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v20 + 24) = *(_OWORD *)v2;
  *(_OWORD *)(v20 + 40) = v25;
  *(_OWORD *)(v20 + 56) = v23;
  sub_10003FB08(v2);
  sub_1000C8E54();
  View.onChange<A>(of:initial:_:)();
  swift_release();
  return sub_10002784C((uint64_t)v12, &qword_100200EE8);
}

uint64_t sub_1000C5754@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v99 = a2;
  uint64_t v3 = sub_1000063C0(&qword_100200F98);
  __chkstk_darwin(v3 - 8);
  uint64_t v85 = (uint64_t *)((char *)&v82 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v93 = sub_1000063C0(&qword_100200F88);
  uint64_t v5 = __chkstk_darwin(v93);
  uint64_t v84 = (uint64_t)&v82 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v86 = (uint64_t)&v82 - v7;
  uint64_t v91 = sub_1000063C0(&qword_100200FC0);
  __chkstk_darwin(v91);
  uint64_t v92 = (uint64_t)&v82 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = sub_1000063C0(&qword_100200F58);
  __chkstk_darwin(v98);
  uint64_t v94 = (char *)&v82 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000063C0(&qword_100200F78);
  __chkstk_darwin(v10 - 8);
  NSString v12 = (char *)&v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = sub_1000063C0(&qword_100200F68);
  uint64_t v13 = __chkstk_darwin(v90);
  char v15 = (char *)&v82 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v83 = (uint64_t)&v82 - v16;
  uint64_t v17 = sub_1000063C0(&qword_100200F48);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = (char *)&v82 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = sub_1000063C0(&qword_100200F38);
  uint64_t v20 = __chkstk_darwin(v89);
  long long v22 = (char *)&v82 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v82 = (uint64_t)&v82 - v23;
  uint64_t v95 = sub_1000063C0(&qword_100200FC8);
  __chkstk_darwin(v95);
  uint64_t v97 = (uint64_t)&v82 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = sub_1000063C0(&qword_100200FD0);
  __chkstk_darwin(v87);
  uint64_t v26 = (char *)&v82 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = sub_1000063C0(&qword_100200F08);
  __chkstk_darwin(v96);
  uint64_t v88 = (char *)&v82 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_1000063C0(&qword_100200F28);
  __chkstk_darwin(v28 - 8);
  unint64_t v30 = (char *)&v82 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_1000063C0(&qword_100200F18);
  uint64_t v32 = __chkstk_darwin(v31);
  uint64_t v34 = (char *)&v82 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  uint64_t v36 = (char *)&v82 - v35;
  switch(*(unsigned char *)(a1 + 138))
  {
    case 1:
      *(void *)uint64_t v19 = static HorizontalAlignment.center.getter();
      *((void *)v19 + 1) = 0;
      v19[16] = 1;
      uint64_t v70 = sub_1000063C0(&qword_100200FF0);
      sub_1000C6714(a1, (uint64_t)&v19[*(int *)(v70 + 44)]);
      uint64_t v71 = (void (*)())swift_allocObject();
      long long v72 = *(_OWORD *)(a1 + 144);
      *((_OWORD *)v71 + 9) = *(_OWORD *)(a1 + 128);
      *((_OWORD *)v71 + 10) = v72;
      *((_OWORD *)v71 + 11) = *(_OWORD *)(a1 + 160);
      long long v73 = *(_OWORD *)(a1 + 80);
      *((_OWORD *)v71 + 5) = *(_OWORD *)(a1 + 64);
      *((_OWORD *)v71 + 6) = v73;
      long long v74 = *(_OWORD *)(a1 + 112);
      *((_OWORD *)v71 + 7) = *(_OWORD *)(a1 + 96);
      *((_OWORD *)v71 + 8) = v74;
      long long v75 = *(_OWORD *)(a1 + 16);
      *((_OWORD *)v71 + 1) = *(_OWORD *)a1;
      *((_OWORD *)v71 + 2) = v75;
      long long v76 = *(_OWORD *)(a1 + 48);
      *((_OWORD *)v71 + 3) = *(_OWORD *)(a1 + 32);
      *((_OWORD *)v71 + 4) = v76;
      sub_100008DD4((uint64_t)v19, (uint64_t)v22, &qword_100200F48);
      unint64_t v77 = (void (**)())&v22[*(int *)(v89 + 36)];
      *unint64_t v77 = sub_1000C9090;
      v77[1] = v71;
      v77[2] = 0;
      v77[3] = 0;
      sub_10003FB08(a1);
      sub_10002784C((uint64_t)v19, &qword_100200F48);
      uint64_t v45 = &qword_100200F38;
      uint64_t v78 = (uint64_t)v22;
      uint64_t v79 = v82;
      sub_100026FD0(v78, v82, &qword_100200F38);
      sub_100008DD4(v79, (uint64_t)v26, &qword_100200F38);
      swift_storeEnumTagMultiPayload();
      sub_1000C89CC();
      sub_1000C8A6C();
      uint64_t v80 = (uint64_t)v88;
      _ConditionalContent<>.init(storage:)();
      sub_100008DD4(v80, v97, &qword_100200F08);
      swift_storeEnumTagMultiPayload();
      sub_1000C8990();
      sub_1000C8B0C();
      _ConditionalContent<>.init(storage:)();
      sub_10002784C(v80, &qword_100200F08);
      uint64_t v47 = v79;
      break;
    case 2:
      *(void *)NSString v12 = static HorizontalAlignment.center.getter();
      *((void *)v12 + 1) = 0;
      v12[16] = 1;
      uint64_t v48 = sub_1000063C0(&qword_100200FE8);
      sub_1000C68FC(a1, (uint64_t)&v12[*(int *)(v48 + 44)]);
      char v49 = (void (*)())swift_allocObject();
      long long v50 = *(_OWORD *)(a1 + 144);
      *((_OWORD *)v49 + 9) = *(_OWORD *)(a1 + 128);
      *((_OWORD *)v49 + 10) = v50;
      *((_OWORD *)v49 + 11) = *(_OWORD *)(a1 + 160);
      long long v51 = *(_OWORD *)(a1 + 80);
      *((_OWORD *)v49 + 5) = *(_OWORD *)(a1 + 64);
      *((_OWORD *)v49 + 6) = v51;
      long long v52 = *(_OWORD *)(a1 + 112);
      *((_OWORD *)v49 + 7) = *(_OWORD *)(a1 + 96);
      *((_OWORD *)v49 + 8) = v52;
      long long v53 = *(_OWORD *)(a1 + 16);
      *((_OWORD *)v49 + 1) = *(_OWORD *)a1;
      *((_OWORD *)v49 + 2) = v53;
      long long v54 = *(_OWORD *)(a1 + 48);
      *((_OWORD *)v49 + 3) = *(_OWORD *)(a1 + 32);
      *((_OWORD *)v49 + 4) = v54;
      sub_100008DD4((uint64_t)v12, (uint64_t)v15, &qword_100200F78);
      uint64_t v55 = (void (**)())&v15[*(int *)(v90 + 36)];
      *uint64_t v55 = sub_1000CA140;
      v55[1] = v49;
      v55[2] = 0;
      v55[3] = 0;
      sub_10003FB08(a1);
      sub_10002784C((uint64_t)v12, &qword_100200F78);
      uint64_t v45 = &qword_100200F68;
      uint64_t v56 = v83;
      sub_100026FD0((uint64_t)v15, v83, &qword_100200F68);
      sub_100008DD4(v56, v92, &qword_100200F68);
      swift_storeEnumTagMultiPayload();
      sub_1000C8BD0();
      sub_1000C8C70();
      uint64_t v57 = (uint64_t)v94;
      goto LABEL_5;
    case 3:
      uint64_t v58 = static HorizontalAlignment.center.getter();
      uint64_t v59 = (uint64_t)v85;
      *uint64_t v85 = v58;
      *(void *)(v59 + 8) = 0;
      *(unsigned char *)(v59 + 16) = 1;
      uint64_t v60 = v59 + *(int *)(sub_1000063C0(&qword_100200FD8) + 44);
      *(void *)uint64_t v60 = static VerticalAlignment.center.getter();
      *(void *)(v60 + 8) = 0;
      *(unsigned char *)(v60 + 16) = 1;
      uint64_t v61 = sub_1000063C0(&qword_100200FE0);
      sub_1000C7014(a1, v60 + *(int *)(v61 + 44));
      double v62 = (void (*)())swift_allocObject();
      long long v63 = *(_OWORD *)(a1 + 144);
      *((_OWORD *)v62 + 9) = *(_OWORD *)(a1 + 128);
      *((_OWORD *)v62 + 10) = v63;
      *((_OWORD *)v62 + 11) = *(_OWORD *)(a1 + 160);
      long long v64 = *(_OWORD *)(a1 + 80);
      *((_OWORD *)v62 + 5) = *(_OWORD *)(a1 + 64);
      *((_OWORD *)v62 + 6) = v64;
      long long v65 = *(_OWORD *)(a1 + 112);
      *((_OWORD *)v62 + 7) = *(_OWORD *)(a1 + 96);
      *((_OWORD *)v62 + 8) = v65;
      long long v66 = *(_OWORD *)(a1 + 16);
      *((_OWORD *)v62 + 1) = *(_OWORD *)a1;
      *((_OWORD *)v62 + 2) = v66;
      long long v67 = *(_OWORD *)(a1 + 48);
      *((_OWORD *)v62 + 3) = *(_OWORD *)(a1 + 32);
      *((_OWORD *)v62 + 4) = v67;
      uint64_t v68 = v84;
      sub_100008DD4(v59, v84, &qword_100200F98);
      uint64_t v69 = (void (**)())(v68 + *(int *)(v93 + 36));
      *uint64_t v69 = sub_1000CA140;
      v69[1] = v62;
      v69[2] = 0;
      v69[3] = 0;
      sub_10003FB08(a1);
      sub_10002784C(v59, &qword_100200F98);
      uint64_t v45 = &qword_100200F88;
      uint64_t v56 = v86;
      sub_100026FD0(v68, v86, &qword_100200F88);
      sub_100008DD4(v56, v92, &qword_100200F88);
      swift_storeEnumTagMultiPayload();
      sub_1000C8BD0();
      sub_1000C8C70();
      uint64_t v57 = (uint64_t)v94;
LABEL_5:
      _ConditionalContent<>.init(storage:)();
      sub_100008DD4(v57, v97, &qword_100200F58);
      swift_storeEnumTagMultiPayload();
      sub_1000C8990();
      sub_1000C8B0C();
      _ConditionalContent<>.init(storage:)();
      sub_10002784C(v57, &qword_100200F58);
      uint64_t v47 = v56;
      break;
    default:
      *(void *)unint64_t v30 = static HorizontalAlignment.center.getter();
      *((void *)v30 + 1) = 0;
      v30[16] = 1;
      uint64_t v37 = sub_1000063C0(&qword_100200FF8);
      sub_1000C6264((uint64_t)&v30[*(int *)(v37 + 44)]);
      uint64_t v38 = (void (*)())swift_allocObject();
      long long v39 = *(_OWORD *)(a1 + 144);
      *((_OWORD *)v38 + 9) = *(_OWORD *)(a1 + 128);
      *((_OWORD *)v38 + 10) = v39;
      *((_OWORD *)v38 + 11) = *(_OWORD *)(a1 + 160);
      long long v40 = *(_OWORD *)(a1 + 80);
      *((_OWORD *)v38 + 5) = *(_OWORD *)(a1 + 64);
      *((_OWORD *)v38 + 6) = v40;
      long long v41 = *(_OWORD *)(a1 + 112);
      *((_OWORD *)v38 + 7) = *(_OWORD *)(a1 + 96);
      *((_OWORD *)v38 + 8) = v41;
      long long v42 = *(_OWORD *)(a1 + 16);
      *((_OWORD *)v38 + 1) = *(_OWORD *)a1;
      *((_OWORD *)v38 + 2) = v42;
      long long v43 = *(_OWORD *)(a1 + 48);
      *((_OWORD *)v38 + 3) = *(_OWORD *)(a1 + 32);
      *((_OWORD *)v38 + 4) = v43;
      sub_100008DD4((uint64_t)v30, (uint64_t)v34, &qword_100200F28);
      uint64_t v44 = (void (**)())&v34[*(int *)(v31 + 36)];
      *uint64_t v44 = sub_1000C90B8;
      v44[1] = v38;
      v44[2] = 0;
      v44[3] = 0;
      sub_10003FB08(a1);
      sub_10002784C((uint64_t)v30, &qword_100200F28);
      uint64_t v45 = &qword_100200F18;
      sub_100026FD0((uint64_t)v34, (uint64_t)v36, &qword_100200F18);
      sub_100008DD4((uint64_t)v36, (uint64_t)v26, &qword_100200F18);
      swift_storeEnumTagMultiPayload();
      sub_1000C89CC();
      sub_1000C8A6C();
      uint64_t v46 = (uint64_t)v88;
      _ConditionalContent<>.init(storage:)();
      sub_100008DD4(v46, v97, &qword_100200F08);
      swift_storeEnumTagMultiPayload();
      sub_1000C8990();
      sub_1000C8B0C();
      _ConditionalContent<>.init(storage:)();
      sub_10002784C(v46, &qword_100200F08);
      uint64_t v47 = (uint64_t)v36;
      break;
  }
  return sub_10002784C(v47, v45);
}

uint64_t sub_1000C6264@<X0>(uint64_t a1@<X8>)
{
  v20[1] = a1;
  uint64_t v21 = sub_1000063C0(&qword_100201030);
  __chkstk_darwin(v21);
  v20[0] = (uint64_t)v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_1000063C0(&qword_100201038);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for IconOnlyLabelStyle();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000063C0(&qword_100201040);
  uint64_t v10 = __chkstk_darwin(v9);
  NSString v12 = (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)v20 - v13;
  if (qword_1001FACF8 != -1) {
    swift_once();
  }
  if (byte_100212918 == 1
    && (uint64_t v23 = &type metadata for WritingTools,
        unint64_t v24 = sub_1000268F4(),
        v22[0] = 14,
        char v15 = isFeatureEnabled(_:)(),
        sub_100027DBC((uint64_t)v22),
        (v15 & 1) == 0))
  {
    uint64_t v18 = v20[0];
    sub_1000C2E60(0, v20[0]);
    uint64_t v16 = &qword_100201030;
    sub_100008DD4(v18, (uint64_t)v4, &qword_100201030);
    swift_storeEnumTagMultiPayload();
    sub_1000C94C4(&qword_100201048, &qword_100201040, (void (*)(void))sub_1000C9568);
    sub_1000C94C4(&qword_100201080, &qword_100201030, (void (*)(void))sub_1000C9644);
    _ConditionalContent<>.init(storage:)();
    uint64_t v17 = v18;
  }
  else
  {
    IconOnlyLabelStyle.init()();
    sub_1000C1DEC((uint64_t)v8, (uint64_t)v12);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v16 = &qword_100201040;
    sub_100026FD0((uint64_t)v12, (uint64_t)v14, &qword_100201040);
    sub_100008DD4((uint64_t)v14, (uint64_t)v4, &qword_100201040);
    swift_storeEnumTagMultiPayload();
    sub_1000C94C4(&qword_100201048, &qword_100201040, (void (*)(void))sub_1000C9568);
    sub_1000C94C4(&qword_100201080, &qword_100201030, (void (*)(void))sub_1000C9644);
    _ConditionalContent<>.init(storage:)();
    uint64_t v17 = (uint64_t)v14;
  }
  return sub_10002784C(v17, v16);
}

void sub_1000C6630()
{
  if (qword_1001FAC58 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_10000EBE8(v0, (uint64_t)qword_100212800);
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Report a Concern button - horizontal", v3, 2u);
    swift_slowDealloc();
  }

  sub_1000C4D68();
}

uint64_t sub_1000C6714@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000063C0(&qword_100201148);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000063C0(&qword_100201150);
  uint64_t v8 = v7 - 8;
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)v19 - v12;
  *(void *)uint64_t v6 = static VerticalAlignment.center.getter();
  *((void *)v6 + 1) = 0;
  v6[16] = 1;
  uint64_t v14 = sub_1000063C0(&qword_100201158);
  sub_1000C6BA4(a1, (uint64_t)&v6[*(int *)(v14 + 44)]);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  sub_100008DD4((uint64_t)v6, (uint64_t)v11, &qword_100201148);
  char v15 = &v11[*(int *)(v8 + 44)];
  long long v16 = v19[1];
  *(_OWORD *)char v15 = v19[0];
  *((_OWORD *)v15 + 1) = v16;
  *((_OWORD *)v15 + 2) = v19[2];
  sub_10002784C((uint64_t)v6, &qword_100201148);
  sub_100026FD0((uint64_t)v11, (uint64_t)v13, &qword_100201150);
  sub_100008DD4((uint64_t)v13, (uint64_t)v11, &qword_100201150);
  *(void *)a2 = 0x4040000000000000;
  *(unsigned char *)(a2 + 8) = 0;
  uint64_t v17 = sub_1000063C0(&qword_100201160);
  sub_100008DD4((uint64_t)v11, a2 + *(int *)(v17 + 48), &qword_100201150);
  sub_10002784C((uint64_t)v13, &qword_100201150);
  return sub_10002784C((uint64_t)v11, &qword_100201150);
}

uint64_t sub_1000C68FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000063C0(&qword_100201148);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000063C0(&qword_1002011C0);
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000063C0(&qword_1002011C8);
  uint64_t v12 = v11 - 8;
  uint64_t v13 = __chkstk_darwin(v11);
  char v15 = (char *)v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)v32 - v16;
  *(void *)uint64_t v6 = static VerticalAlignment.center.getter();
  *((void *)v6 + 1) = 0;
  v6[16] = 1;
  uint64_t v18 = sub_1000063C0(&qword_100201158);
  sub_1000C6BA4(a1, (uint64_t)&v6[*(int *)(v18 + 44)]);
  LOBYTE(a1) = static Edge.Set.all.getter();
  EdgeInsets.init(_all:)();
  uint64_t v20 = v19;
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  sub_100008DD4((uint64_t)v6, (uint64_t)v10, &qword_100201148);
  uint64_t v27 = &v10[*(int *)(v8 + 44)];
  *uint64_t v27 = a1;
  *((void *)v27 + 1) = v20;
  *((void *)v27 + 2) = v22;
  *((void *)v27 + 3) = v24;
  *((void *)v27 + 4) = v26;
  v27[40] = 0;
  sub_10002784C((uint64_t)v6, &qword_100201148);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  sub_100008DD4((uint64_t)v10, (uint64_t)v15, &qword_1002011C0);
  uint64_t v28 = &v15[*(int *)(v12 + 44)];
  long long v29 = v32[1];
  *(_OWORD *)uint64_t v28 = v32[0];
  *((_OWORD *)v28 + 1) = v29;
  *((_OWORD *)v28 + 2) = v32[2];
  sub_10002784C((uint64_t)v10, &qword_1002011C0);
  sub_100026FD0((uint64_t)v15, (uint64_t)v17, &qword_1002011C8);
  sub_100008DD4((uint64_t)v17, (uint64_t)v15, &qword_1002011C8);
  *(void *)a2 = 0x4014000000000000;
  *(unsigned char *)(a2 + 8) = 0;
  uint64_t v30 = sub_1000063C0(&qword_1002011D0);
  sub_100008DD4((uint64_t)v15, a2 + *(int *)(v30 + 48), &qword_1002011C8);
  sub_10002784C((uint64_t)v17, &qword_1002011C8);
  return sub_10002784C((uint64_t)v15, &qword_1002011C8);
}

uint64_t sub_1000C6BA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v24[1] = a1;
  uint64_t v26 = a2;
  uint64_t v27 = sub_1000063C0(&qword_100201030);
  __chkstk_darwin(v27);
  uint64_t v3 = (char *)v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000063C0(&qword_100201168);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_1000063C0(&qword_100201170);
  __chkstk_darwin(v25);
  uint64_t v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for TitleAndIconLabelStyle();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000063C0(&qword_100201178);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v16 = (char *)v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)v24 - v17;
  if (qword_1001FACF8 != -1) {
    swift_once();
  }
  if (byte_100212918 == 1
    && (long long v29 = &type metadata for WritingTools,
        unint64_t v30 = sub_1000268F4(),
        v28[0] = 14,
        char v19 = isFeatureEnabled(_:)(),
        sub_100027DBC((uint64_t)v28),
        (v19 & 1) == 0))
  {
    sub_1000C2E60(1, (uint64_t)v3);
    uint64_t v20 = &qword_100201030;
    sub_100008DD4((uint64_t)v3, (uint64_t)v6, &qword_100201030);
    swift_storeEnumTagMultiPayload();
    sub_100027F2C(&qword_100201188, &qword_100201170);
    sub_1000C94C4(&qword_100201080, &qword_100201030, (void (*)(void))sub_1000C9644);
    _ConditionalContent<>.init(storage:)();
    uint64_t v22 = (uint64_t)v3;
  }
  else
  {
    TitleAndIconLabelStyle.init()();
    sub_1000C22BC((uint64_t)v12, (uint64_t)v16);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    uint64_t v20 = &qword_100201178;
    sub_100026FD0((uint64_t)v16, (uint64_t)v18, &qword_100201178);
    sub_100008DD4((uint64_t)v18, (uint64_t)v16, &qword_100201178);
    *(void *)uint64_t v8 = 0;
    v8[8] = 1;
    uint64_t v21 = sub_1000063C0(&qword_100201180);
    sub_100008DD4((uint64_t)v16, (uint64_t)&v8[*(int *)(v21 + 48)], &qword_100201178);
    sub_10002784C((uint64_t)v16, &qword_100201178);
    sub_100008DD4((uint64_t)v8, (uint64_t)v6, &qword_100201170);
    swift_storeEnumTagMultiPayload();
    sub_100027F2C(&qword_100201188, &qword_100201170);
    sub_1000C94C4(&qword_100201080, &qword_100201030, (void (*)(void))sub_1000C9644);
    _ConditionalContent<>.init(storage:)();
    sub_10002784C((uint64_t)v8, &qword_100201170);
    uint64_t v22 = (uint64_t)v18;
  }
  return sub_10002784C(v22, v20);
}

uint64_t sub_1000C7014@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v27[1] = a1;
  uint64_t v30 = sub_1000063C0(&qword_100201030);
  __chkstk_darwin(v30);
  v27[0] = (uint64_t)v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_1000063C0(&qword_100201038);
  __chkstk_darwin(v28);
  uint64_t v5 = (char *)v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for IconOnlyLabelStyle();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_1000063C0(&qword_100201040);
  uint64_t v10 = __chkstk_darwin(v29);
  uint64_t v12 = (char *)v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)v27 - v13;
  uint64_t v15 = sub_1000063C0(&qword_1002011D8);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  uint64_t v18 = (char *)v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)v27 - v19;
  if (qword_1001FACF8 != -1) {
    swift_once();
  }
  if (byte_100212918 == 1
    && (uint64_t v32 = &type metadata for WritingTools,
        unint64_t v33 = sub_1000268F4(),
        v31[0] = 14,
        char v21 = isFeatureEnabled(_:)(),
        sub_100027DBC((uint64_t)v31),
        (v21 & 1) == 0))
  {
    uint64_t v24 = v27[0];
    sub_1000C2E60(0, v27[0]);
    uint64_t v22 = &qword_100201030;
    sub_100008DD4(v24, (uint64_t)v5, &qword_100201030);
    swift_storeEnumTagMultiPayload();
    sub_1000C94C4(&qword_100201048, &qword_100201040, (void (*)(void))sub_1000C9568);
    sub_1000C94C4(&qword_100201080, &qword_100201030, (void (*)(void))sub_1000C9644);
    _ConditionalContent<>.init(storage:)();
    uint64_t v23 = v24;
  }
  else
  {
    IconOnlyLabelStyle.init()();
    sub_1000C1DEC((uint64_t)v9, (uint64_t)v12);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    uint64_t v22 = &qword_100201040;
    sub_100026FD0((uint64_t)v12, (uint64_t)v14, &qword_100201040);
    sub_100008DD4((uint64_t)v14, (uint64_t)v5, &qword_100201040);
    swift_storeEnumTagMultiPayload();
    sub_1000C94C4(&qword_100201048, &qword_100201040, (void (*)(void))sub_1000C9568);
    sub_1000C94C4(&qword_100201080, &qword_100201030, (void (*)(void))sub_1000C9644);
    _ConditionalContent<>.init(storage:)();
    uint64_t v23 = (uint64_t)v14;
  }
  sub_10002784C(v23, v22);
  sub_100008DD4((uint64_t)v20, (uint64_t)v18, &qword_1002011D8);
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  *(void *)(a2 + 16) = 0;
  *(unsigned char *)(a2 + 24) = 1;
  uint64_t v25 = sub_1000063C0(&qword_1002011E0);
  sub_100008DD4((uint64_t)v18, a2 + *(int *)(v25 + 64), &qword_1002011D8);
  sub_10002784C((uint64_t)v20, &qword_1002011D8);
  return sub_10002784C((uint64_t)v18, &qword_1002011D8);
}

uint64_t sub_1000C74B0()
{
  return swift_release();
}

void *sub_1000C756C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000063C0(&qword_100201008);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v116 = (uint64_t)&v115 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v3);
  int v115 = (char *)&v115 - v6;
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v115 - v7;
  uint64_t v129 = type metadata accessor for Attachment(0);
  uint64_t v132 = *(void *)(v129 - 8);
  uint64_t v9 = __chkstk_darwin(v129);
  uint64_t v147 = (char *)&v115 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  unint64_t v144 = (unint64_t)&v115 - v11;
  uint64_t v12 = sub_1000063C0(&qword_100201020);
  uint64_t v141 = *(unsigned int (***)(uint64_t *, uint64_t, uint64_t))(v12 - 8);
  __chkstk_darwin(v12);
  unint64_t v131 = (char *)&v115 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000063C0(&qword_100201028);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  uint64_t v17 = (unint64_t *)((char *)&v115 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v15);
  uint64_t v19 = (uint64_t *)((char *)&v115 - v18);
  uint64_t v20 = sub_1000063C0(&qword_100201000);
  __chkstk_darwin(v20 - 8);
  uint64_t v22 = (char *)&v115 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for FBKSInteraction.Content();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v123 = (uint64_t *)((char *)&v115 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v25);
  uint64_t v28 = (uint64_t *)((char *)&v115 - v27);
  uint64_t v29 = type metadata accessor for FBKSInteraction.AnnotatedContent();
  unint64_t v30 = *(void *)(v29 - 8);
  uint64_t v138 = v29;
  unint64_t v139 = v30;
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v146 = (char *)&v115 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = __chkstk_darwin(v31);
  uint64_t v124 = (char *)&v115 - v34;
  __chkstk_darwin(v33);
  uint64_t v35 = v1;
  uint64_t v37 = (char *)&v115 - v36;
  uint64_t v38 = v35[6];
  uint64_t v145 = v22;
  uint64_t v136 = v28;
  uint64_t v140 = v17;
  uint64_t v122 = v8;
  uint64_t v126 = v35;
  uint64_t v137 = v23;
  uint64_t v125 = v24;
  if (v38)
  {
    *uint64_t v28 = v35[5];
    v28[1] = v38;
    (*(void (**)(uint64_t *, void, uint64_t))(v24 + 104))(v28, enum case for FBKSInteraction.Content.text(_:), v23);
    uint64_t v39 = type metadata accessor for FBKSInteraction.AnnotatedContent.IconType();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v22, 1, 1, v39);
    swift_bridgeObjectRetain_n();
    FBKSInteraction.AnnotatedContent.init(payload:displayName:description:fileName:group:iconType:additionalInfo:)();
    long long v40 = (void *)sub_100143B94(0, 1, 1, (unint64_t)_swiftEmptyArrayStorage);
    unint64_t v42 = v40[2];
    unint64_t v41 = v40[3];
    uint64_t v148 = v40;
    unint64_t v43 = v42 + 1;
    if (v42 >= v41 >> 1) {
LABEL_53:
    }
      uint64_t v148 = (void *)sub_100143B94(v41 > 1, v43, 1, (unint64_t)v148);
    uint64_t v44 = v148;
    v148[2] = v43;
    unint64_t v43 = v139;
    (*(void (**)(unint64_t, char *, uint64_t))(v139 + 32))((unint64_t)v44+ ((*(unsigned __int8 *)(v139 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v139 + 80))+ *(void *)(v139 + 72) * v42, v37, v138);
    uint64_t v17 = v140;
    uint64_t v35 = v126;
  }
  else
  {
    uint64_t v148 = _swiftEmptyArrayStorage;
    unint64_t v43 = v139;
  }
  uint64_t v153 = v35[11];
  unint64_t v143 = *(void *)(v153 + 16);
  unint64_t v42 = v144;
  unint64_t v121 = v144 + 8;
  uint64_t v45 = v141;
  v141 += 6;
  uint64_t v142 = (void (**)(unint64_t *, uint64_t, uint64_t, uint64_t))(v45 + 7);
  unsigned int v133 = enum case for FBKSInteraction.Content.image(_:);
  uint64_t v134 = (void (**)(uint64_t *, void, uint64_t))(v125 + 104);
  unint64_t v135 = v43 + 32;
  uint64_t v130 = v153;
  swift_bridgeObjectRetain();
  unint64_t v46 = 0;
  uint64_t v37 = 0;
  *(void *)&long long v47 = 136642819;
  long long v128 = v47;
  uint64_t v127 = (char *)&type metadata for Any + 8;
  uint64_t v48 = v145;
  while (1)
  {
    unint64_t v41 = v143;
    if (v46 == v143)
    {
      uint64_t v49 = 1;
      unint64_t v46 = v143;
    }
    else
    {
      if (v46 >= v143)
      {
        __break(1u);
        goto LABEL_53;
      }
      uint64_t v50 = (uint64_t)&v131[*(int *)(v12 + 48)];
      sub_1000941BC(v130+ ((*(unsigned __int8 *)(v132 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v132 + 80))+ *(void *)(v132 + 72) * v46, v50);
      uint64_t v51 = (uint64_t)v17 + *(int *)(v12 + 48);
      *uint64_t v17 = v46;
      sub_100035B34(v50, v51);
      uint64_t v49 = 0;
      ++v46;
      unint64_t v42 = v144;
    }
    (*v142)(v17, v49, 1, v12);
    sub_100026FD0((uint64_t)v17, (uint64_t)v19, &qword_100201028);
    if ((*v141)(v19, 1, v12) == 1) {
      break;
    }
    uint64_t v52 = *v19;
    sub_100035B34((uint64_t)v19 + *(int *)(v12 + 48), v42);
    __n128 result = (void *)Data.init(contentsOf:options:)();
    uint64_t v54 = (uint64_t)result;
    unint64_t v43 = v55;
    if (v143 == 1)
    {
      uint64_t v120 = 0;
      uint64_t v56 = (void *)0xE000000000000000;
    }
    else
    {
      if (__OFADD__(v52, 1))
      {
        __break(1u);
        goto LABEL_55;
      }
      v151[0] = v52 + 1;
      uint64_t v120 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v56 = v57;
    }
    uint64_t v119 = URL.pathExtension.getter();
    unint64_t v59 = v58;
    swift_bridgeObjectRelease();
    uint64_t v60 = HIBYTE(v59) & 0xF;
    if ((v59 & 0x2000000000000000) == 0) {
      uint64_t v60 = v119 & 0xFFFFFFFFFFFFLL;
    }
    if (v60)
    {
      v61._countAndFlagsBits = URL.pathExtension.getter();
      v151[0] = 46;
      v151[1] = 0xE100000000000000;
      String.append(_:)(v61);
      uint64_t v48 = v145;
      swift_bridgeObjectRelease();
      v117._countAndFlagsBits = v151[0];
      double v62 = (void *)v151[1];
    }
    else
    {
      v117._countAndFlagsBits = 0;
      double v62 = (void *)0xE000000000000000;
    }
    v117._object = v62;
    if (*(void *)(v121 + *(int *)(v129 + 20)))
    {
      uint64_t v119 = 0;
      unint64_t v118 = 0xE000000000000000;
    }
    else
    {
      uint64_t v119 = URL.lastPathComponent.getter();
      unint64_t v118 = v63;
    }
    strcpy((char *)v151, "attachment");
    BYTE3(v151[1]) = 0;
    HIDWORD(v151[1]) = -369098752;
    v64._countAndFlagsBits = v120;
    v64._object = v56;
    String.append(_:)(v64);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    String.append(_:)(v117);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    long long v66 = v136;
    uint64_t v65 = v137;
    *uint64_t v136 = v54;
    v66[1] = v43;
    (*v134)(v66, v133, v65);
    uint64_t v67 = type metadata accessor for FBKSInteraction.AnnotatedContent.IconType();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v67 - 8) + 56))(v48, 1, 1, v67);
    sub_100044630(v54, v43);
    FBKSInteraction.AnnotatedContent.init(payload:displayName:description:fileName:group:iconType:additionalInfo:)();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v148 = (void *)sub_100143B94(0, v148[2] + 1, 1, (unint64_t)v148);
    }
    unint64_t v69 = v148[2];
    unint64_t v68 = v148[3];
    if (v69 >= v68 >> 1) {
      uint64_t v148 = (void *)sub_100143B94(v68 > 1, v69 + 1, 1, (unint64_t)v148);
    }
    uint64_t v70 = v148;
    v148[2] = v69 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v139 + 32))((unint64_t)v70+ ((*(unsigned __int8 *)(v139 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v139 + 80))+ *(void *)(v139 + 72) * v69, v124, v138);
    sub_1000446E8(v54, v43);
    unint64_t v42 = v144;
    sub_100035B98(v144);
    uint64_t v17 = v140;
  }
  sub_1000C9498((uint64_t)&v153);
  uint64_t v152 = v126[13];
  uint64_t v71 = *(void *)(v152 + 16);
  if (v71)
  {
    uint64_t v72 = 0;
    long long v73 = (unint64_t *)(swift_bridgeObjectRetain() + 40);
    long long v74 = v136;
    do
    {
      uint64_t v75 = *(v73 - 1);
      unint64_t v76 = *v73;
      ++v72;
      if (v71 == 1)
      {
        sub_100044630(*(v73 - 1), *v73);
        uint64_t v77 = 0;
        uint64_t v78 = (void *)0xE000000000000000;
      }
      else
      {
        v151[0] = v72;
        sub_100044630(v75, v76);
        uint64_t v77 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v78 = v79;
      }
      *long long v74 = v75;
      v74[1] = v76;
      (*v134)(v74, v133, v137);
      strcpy((char *)v151, "chatgpt_image");
      HIWORD(v151[1]) = -4864;
      v80._countAndFlagsBits = v77;
      v80._object = v78;
      String.append(_:)(v80);
      uint64_t v81 = v151[0];
      uint64_t v82 = v151[1];
      sub_100044630(v75, v76);
      swift_bridgeObjectRelease();
      v151[0] = v81;
      v151[1] = v82;
      swift_bridgeObjectRetain();
      v83._countAndFlagsBits = 1735290926;
      v83._object = (void *)0xE400000000000000;
      String.append(_:)(v83);
      swift_bridgeObjectRelease();
      uint64_t v84 = type metadata accessor for FBKSInteraction.AnnotatedContent.IconType();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v84 - 8) + 56))(v145, 1, 1, v84);
      FBKSInteraction.AnnotatedContent.init(payload:displayName:description:fileName:group:iconType:additionalInfo:)();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v148 = (void *)sub_100143B94(0, v148[2] + 1, 1, (unint64_t)v148);
      }
      unint64_t v86 = v148[2];
      unint64_t v85 = v148[3];
      if (v86 >= v85 >> 1) {
        uint64_t v148 = (void *)sub_100143B94(v85 > 1, v86 + 1, 1, (unint64_t)v148);
      }
      v73 += 2;
      uint64_t v87 = v148;
      v148[2] = v86 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v139 + 32))((unint64_t)v87+ ((*(unsigned __int8 *)(v139 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v139 + 80))+ *(void *)(v139 + 72) * v86, v146, v138);
      sub_1000446E8(v75, v76);
    }
    while (v71 != v72);
    sub_1000C9498((uint64_t)&v152);
  }
  uint64_t v88 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v139 + 56);
  uint64_t v89 = (uint64_t)v122;
  v88(v122, 1, 1, v138);
  uint64_t v90 = v126[12];
  v151[0] = v90;
  uint64_t v91 = v125;
  if (!*(void *)(v90 + 16))
  {
LABEL_51:
    sub_10002784C(v89, &qword_100201008);
    return v148;
  }
  uint64_t v150 = v90;
  swift_bridgeObjectRetain();
  uint64_t v92 = sub_1000063C0(&qword_1001FBE30);
  uint64_t v93 = sub_100027F2C(&qword_1001FEDF0, &qword_1001FBE30);
  uint64_t v94 = BidirectionalCollection<>.joined(separator:)();
  uint64_t v96 = v95;
  sub_1000C9498((uint64_t)v151);
  uint64_t v97 = v123;
  uint64_t *v123 = v94;
  v97[1] = v96;
  uint64_t v98 = v137;
  (*(void (**)(uint64_t *, void, uint64_t))(v91 + 104))(v97, enum case for FBKSInteraction.Content.text(_:), v137);
  (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v91 + 16))(v136, v97, v98);
  uint64_t v150 = v151[0];
  swift_bridgeObjectRetain();
  uint64_t v146 = (char *)v93;
  uint64_t v147 = (char *)v92;
  BidirectionalCollection<>.joined(separator:)();
  sub_1000C9498((uint64_t)v151);
  uint64_t v99 = type metadata accessor for FBKSInteraction.AnnotatedContent.IconType();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v99 - 8) + 56))(v145, 1, 1, v99);
  uint64_t v100 = (uint64_t)v115;
  uint64_t v101 = v138;
  FBKSInteraction.AnnotatedContent.init(payload:displayName:description:fileName:group:iconType:additionalInfo:)();
  sub_10002784C(v89, &qword_100201008);
  v88((char *)v100, 0, 1, v101);
  sub_100026FD0(v100, v89, &qword_100201008);
  uint64_t v102 = v116;
  sub_100008DD4(v89, v116, &qword_100201008);
  __n128 result = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v139 + 48))(v102, 1, v101);
  if (result != 1)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v148 = (void *)sub_100143B94(0, v148[2] + 1, 1, (unint64_t)v148);
    }
    unint64_t v104 = v148[2];
    unint64_t v103 = v148[3];
    if (v104 >= v103 >> 1) {
      uint64_t v148 = (void *)sub_100143B94(v103 > 1, v104 + 1, 1, (unint64_t)v148);
    }
    long long v105 = v148;
    v148[2] = v104 + 1;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v139 + 32))((unint64_t)v105+ ((*(unsigned __int8 *)(v139 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v139 + 80))+ *(void *)(v139 + 72) * v104, v102, v138);
    if (qword_1001FAC58 != -1) {
      swift_once();
    }
    uint64_t v106 = type metadata accessor for Logger();
    sub_10000EBE8(v106, (uint64_t)qword_100212800);
    uint64_t v107 = (uint64_t)v126;
    sub_10003FB08((uint64_t)v126);
    sub_10003FB08(v107);
    uint64_t v108 = Logger.logObject.getter();
    os_log_type_t v109 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v108, v109))
    {
      v110 = (uint8_t *)swift_slowAlloc();
      uint64_t v111 = swift_slowAlloc();
      *(_DWORD *)v110 = v128;
      uint64_t v149 = v151[0];
      uint64_t v150 = v111;
      swift_bridgeObjectRetain();
      uint64_t v112 = BidirectionalCollection<>.joined(separator:)();
      unint64_t v114 = v113;
      sub_1000C9498((uint64_t)v151);
      uint64_t v149 = sub_100021444(v112, v114, &v150);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10002E220(v107);
      sub_10002E220(v107);
      _os_log_impl((void *)&_mh_execute_header, v108, v109, "Feedback Initiated - refinementsContent: %{sensitive}s", v110, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      sub_10002E220(v107);
      sub_10002E220(v107);
    }
    (*(void (**)(uint64_t *, uint64_t))(v125 + 8))(v123, v137);
    goto LABEL_51;
  }
LABEL_55:
  __break(1u);
  return result;
}

uint64_t sub_1000C892C@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C53A0(a1);
}

uint64_t sub_1000C8988@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C5754(*(void *)(v1 + 16), a1);
}

uint64_t sub_1000C8990()
{
  return sub_1000C8B48(&qword_100200F00, &qword_100200F08, (void (*)(void))sub_1000C89CC, (void (*)(void))sub_1000C8A6C);
}

unint64_t sub_1000C89CC()
{
  unint64_t result = qword_100200F10;
  if (!qword_100200F10)
  {
    sub_100006C14(&qword_100200F18);
    sub_100027F2C(&qword_100200F20, &qword_100200F28);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100200F10);
  }
  return result;
}

unint64_t sub_1000C8A6C()
{
  unint64_t result = qword_100200F30;
  if (!qword_100200F30)
  {
    sub_100006C14(&qword_100200F38);
    sub_100027F2C(&qword_100200F40, &qword_100200F48);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100200F30);
  }
  return result;
}

uint64_t sub_1000C8B0C()
{
  return sub_1000C8B48(&qword_100200F50, &qword_100200F58, (void (*)(void))sub_1000C8BD0, (void (*)(void))sub_1000C8C70);
}

uint64_t sub_1000C8B48(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100006C14(a2);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000C8BD0()
{
  unint64_t result = qword_100200F60;
  if (!qword_100200F60)
  {
    sub_100006C14(&qword_100200F68);
    sub_100027F2C(&qword_100200F70, &qword_100200F78);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100200F60);
  }
  return result;
}

unint64_t sub_1000C8C70()
{
  unint64_t result = qword_100200F80;
  if (!qword_100200F80)
  {
    sub_100006C14(&qword_100200F88);
    sub_100027F2C(&qword_100200F90, &qword_100200F98);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100200F80);
  }
  return result;
}

void sub_1000C8D10()
{
  qword_100200ED0 = 0x402E000000000000;
}

uint64_t sub_1000C8D20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000063C0(&qword_1002011F0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a2, a1, v4);
}

uint64_t sub_1000C8D98()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1000C8DA8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  int v1 = *(unsigned __int8 *)(v0 + 160);
  if (v1 != 255) {
    sub_10000ED74(*(void *)(v0 + 136), *(void *)(v0 + 144), *(void *)(v0 + 152), v1);
  }
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 200, 7);
}

uint64_t sub_1000C8E48()
{
  return sub_1000C74B0();
}

unint64_t sub_1000C8E54()
{
  unint64_t result = qword_100200FA8;
  if (!qword_100200FA8)
  {
    sub_100006C14(&qword_100200EE8);
    sub_1000C8ED0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100200FA8);
  }
  return result;
}

unint64_t sub_1000C8ED0()
{
  unint64_t result = qword_100200FB0;
  if (!qword_100200FB0)
  {
    sub_100006C14(&qword_100200EE0);
    sub_1000C8F70();
    sub_100027F2C(&qword_1001FC6D8, &qword_1001FD760);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100200FB0);
  }
  return result;
}

unint64_t sub_1000C8F70()
{
  unint64_t result = qword_100200FB8;
  if (!qword_100200FB8)
  {
    sub_100006C14(&qword_100200ED8);
    sub_1000C8B48(&qword_100200EF8, &qword_100200EF0, (void (*)(void))sub_1000C8990, (void (*)(void))sub_1000C8B0C);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100200FB8);
  }
  return result;
}

uint64_t sub_1000C9028()
{
  return State.wrappedValue.setter();
}

void sub_1000C9090()
{
}

void sub_1000C90B8()
{
}

uint64_t sub_1000C90C0@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned __int8 a4@<W3>, uint64_t a5@<X8>)
{
  if (a4 > 1u)
  {
    if (a4 != 255)
    {
      if (a3 | a2 | result)
      {
        unint64_t v6 = 0x800000010019F250;
        unint64_t v9 = 0xEF7478742E796C70;
        unint64_t v5 = 0x65725F7472616D73;
        unint64_t v7 = 0xEB00000000736E6FLL;
        uint64_t v8 = 0x6974736567677553;
        if (result != 1 || a3 | a2) {
          goto LABEL_14;
        }
      }
    }
LABEL_13:
    unint64_t v7 = 0xEB00000000747865;
    unint64_t v6 = 0x800000010019F230;
    unint64_t v9 = 0xEF7478742E747865;
    unint64_t v5 = 0x745F646574696465;
    uint64_t v8 = 0x5420646574696445;
    goto LABEL_14;
  }
  if (a4)
  {
    if (a2 == 1)
    {
      unint64_t v9 = 0x800000010019F270;
      unint64_t v6 = 0x800000010019F230;
      unint64_t v7 = 0xEC00000074786554;
      uint64_t v8 = 0x2054504774616843;
      unint64_t v5 = 0xD000000000000010;
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  switch((char)result)
  {
    case 6:
    case 7:
    case 8:
    case 9:
      if (a3) {
        goto LABEL_13;
      }
      unint64_t v5 = 0x2E7972616D6D7573;
      unint64_t v6 = 0x800000010019F230;
      unint64_t v7 = 0xE700000000000000;
      uint64_t v8 = 0x7972616D6D7553;
      unint64_t v9 = 0xEB00000000747874;
      break;
    default:
      goto LABEL_13;
  }
LABEL_14:
  strcpy((char *)a5, "Selected Text");
  *(_WORD *)(a5 + 14) = -4864;
  *(void *)(a5 + 16) = 0xD000000000000011;
  *(void *)(a5 + 24) = v6;
  *(void *)(a5 + 32) = v8;
  *(void *)(a5 + 40) = v7;
  *(void *)(a5 + 48) = v5;
  *(void *)(a5 + 56) = v9;
  return result;
}

uint64_t sub_1000C92A8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  char v4 = a1;
  if (a4)
  {
    if (a4 == 1)
    {
      return 0x65736F706D6F43;
    }
    else
    {
      uint64_t v6 = 0x6552207472616D53;
      if (a1 == 1 && (a3 | a2) == 0) {
        uint64_t v6 = 0x616572666F6F7250;
      }
      if (a3 | a2 | a1) {
        return v6;
      }
      else {
        return 0x20676E6974697257;
      }
    }
  }
  else
  {
    uint64_t result = 0x65746972776552;
    switch(v4)
    {
      case 1:
        uint64_t result = 0x616572666F6F7250;
        break;
      case 2:
        uint64_t result = 0x657369636E6F43;
        break;
      case 3:
        uint64_t result = 0x796C646E65697246;
        break;
      case 4:
        uint64_t result = 0x69737365666F7250;
        break;
      case 5:
        uint64_t result = 0x646E45206E65704FLL;
        break;
      case 6:
        uint64_t result = 0x7972616D6D7553;
        break;
      case 7:
        uint64_t result = 0x6E696F502079654BLL;
        break;
      case 8:
        uint64_t result = 1953720652;
        break;
      case 9:
        uint64_t result = 0x656C626154;
        break;
      default:
        return result;
    }
  }
  return result;
}

uint64_t sub_1000C9498(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000C94C4(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100006C14(a2);
    a3();
    sub_100027F2C(&qword_100201070, &qword_100201078);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000C9568()
{
  unint64_t result = qword_100201050;
  if (!qword_100201050)
  {
    sub_100006C14(&qword_100201058);
    sub_100006C14(&qword_100201060);
    sub_100027F2C(&qword_100201068, &qword_100201060);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100201050);
  }
  return result;
}

unint64_t sub_1000C9644()
{
  unint64_t result = qword_100201088;
  if (!qword_100201088)
  {
    sub_100006C14(&qword_100201090);
    sub_100027F2C(&qword_100201098, &qword_1002010A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100201088);
  }
  return result;
}

uint64_t sub_1000C96E8()
{
  return sub_1000C461C((_OWORD *)(v0 + 16), &IASignalFeedbackServiceLaunchSmartRepliesThumbsUp, (uint64_t)&unk_1001ED388, (uint64_t)&unk_100201128);
}

unint64_t sub_1000C9728()
{
  unint64_t result = qword_1002010C8;
  if (!qword_1002010C8)
  {
    sub_100006C14(&qword_1002010B0);
    sub_100027F2C(&qword_100201068, &qword_100201060);
    sub_1000C97C8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002010C8);
  }
  return result;
}

unint64_t sub_1000C97C8()
{
  unint64_t result = qword_1002010D0;
  if (!qword_1002010D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002010D0);
  }
  return result;
}

uint64_t sub_1000C981C(uint64_t result)
{
  *(unsigned char *)(result + 240) = 1;
  return result;
}

unint64_t sub_1000C9828()
{
  unint64_t result = qword_1002010F8;
  if (!qword_1002010F8)
  {
    sub_100006C14(&qword_1002010E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002010F8);
  }
  return result;
}

uint64_t sub_1000C98A0()
{
  return sub_1000C461C((_OWORD *)(v0 + 16), &IASignalFeedbackServiceLaunchSmartRepliesThumbsDown, (uint64_t)&unk_1001ED360, (uint64_t)&unk_100201110);
}

uint64_t sub_1000C98E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  if ((a31 & 1) == 0)
  {
    sub_10002783C(a9, a10, a11 & 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_1000C9958(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))
{
  char v4 = *(unsigned char *)(a1 + 240);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    *(void *)(a1 + 208),
    *(void *)(a1 + 216),
    *(void *)(a1 + 224),
    *(void *)(a1 + 232),
    v4);
  return a1;
}

uint64_t sub_1000C99DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  if ((a31 & 1) == 0)
  {
    sub_100026F18(a9, a10, a11 & 1);
    swift_release();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1000C9A54(uint64_t result)
{
  *(unsigned char *)(result + 240) = 0;
  return result;
}

uint64_t sub_1000C9A60(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_100027FEC;
  return sub_1000C47AC(a1, v4, v5, v1 + 32);
}

uint64_t sub_1000C9B18(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_100027FEC;
  return sub_1000C4200(a1, v4, v5, v1 + 32);
}

uint64_t sub_1000C9BD0()
{
  return sub_1000C461C((_OWORD *)(v0 + 16), &IASignalFeedbackServiceLaunchSmartRepliesReportConcern, (uint64_t)&unk_1001ED3D8, (uint64_t)&unk_100201140);
}

uint64_t sub_1000C9C10@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C2BEC(*(void *)(v1 + 16), (void (*)(void))&type metadata accessor for IconOnlyLabelStyle, &qword_1001FDA20, (void (*)(uint64_t))&type metadata accessor for IconOnlyLabelStyle, (uint64_t)&protocol conformance descriptor for IconOnlyLabelStyle, a1);
}

uint64_t sub_1000C9C64()
{
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  int v1 = *(unsigned __int8 *)(v0 + 168);
  if (v1 != 255) {
    sub_10000ED74(*(void *)(v0 + 144), *(void *)(v0 + 152), *(void *)(v0 + 160), v1);
  }
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 208, 7);
}

uint64_t sub_1000C9D0C(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_100027204;
  return sub_1000C278C(a1, v4, v5, v1 + 32);
}

uint64_t sub_1000C9DC4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  int v1 = *(unsigned __int8 *)(v0 + 152);
  if (v1 != 255) {
    sub_10000ED74(*(void *)(v0 + 128), *(void *)(v0 + 136), *(void *)(v0 + 144), v1);
  }
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 192, 7);
}

uint64_t sub_1000C9E64@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C2BEC(*(void *)(v1 + 16), (void (*)(void))&type metadata accessor for TitleAndIconLabelStyle, &qword_1002011B0, (void (*)(uint64_t))&type metadata accessor for TitleAndIconLabelStyle, (uint64_t)&protocol conformance descriptor for TitleAndIconLabelStyle, a1);
}

uint64_t sub_1000C9EB4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedbackView.UIConstants()
{
  return &type metadata for FeedbackView.UIConstants;
}

ValueMetadata *type metadata accessor for FeedbackView.UIConstants.ThumbControlSize()
{
  return &type metadata for FeedbackView.UIConstants.ThumbControlSize;
}

unsigned char *storeEnumTagSinglePayload for FeedbackView.LayoutStyle(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000C9FE8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedbackView.LayoutStyle()
{
  return &type metadata for FeedbackView.LayoutStyle;
}

uint64_t sub_1000CA020()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1000CA094()
{
  unint64_t result = qword_1002011E8;
  if (!qword_1002011E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002011E8);
  }
  return result;
}

uint64_t sub_1000CA0E8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000CA104()
{
  return sub_100027F2C(&qword_1002011F8, &qword_1002011F0);
}

uint64_t sub_1000CA14C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1000D4F6C((unint64_t *)&qword_1001FD2A0, (void (*)(uint64_t))type metadata accessor for ToolModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v4 = *(void *)(v3 + 40);
  *a2 = *(void *)(v3 + 32);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1000CA1F8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000CA2DC@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1000D4F6C((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  *a2 = *(void *)(v3 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__analyticsInstance);
  return swift_retain();
}

uint64_t sub_1000CA390()
{
  return swift_release();
}

uint64_t sub_1000CA470@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1000CA568(a1, &OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__isForEditableContent, a2);
}

uint64_t sub_1000CA484()
{
  return swift_release();
}

uint64_t sub_1000CA554@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1000CA568(a1, &OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__wantsInlineEditing, a2);
}

uint64_t sub_1000CA568@<X0>(uint64_t *a1@<X0>, void *a2@<X4>, unsigned char *a3@<X8>)
{
  uint64_t v5 = *a1;
  swift_getKeyPath();
  sub_1000D4F6C((unint64_t *)&unk_100201540, (void (*)(uint64_t))type metadata accessor for RewritingModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  *a3 = *(unsigned char *)(v5 + *a2);
  return result;
}

uint64_t sub_1000CA61C()
{
  return swift_release();
}

uint64_t sub_1000CA6EC@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1000D4F6C((unint64_t *)&unk_100201540, (void (*)(uint64_t))type metadata accessor for RewritingModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  *a2 = *(void *)(v3 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__allowedResultOptions);
  return result;
}

uint64_t sub_1000CA79C()
{
  return swift_release();
}

void sub_1000CA918(double a1, double a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = (void *)Strong;
    sub_1000CD44C(a1, a2);
  }
}

id sub_1000CAA18()
{
  if (qword_1001FAC38 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000EBE8(v1, (uint64_t)qword_1002127A0);
  os_log_type_t v2 = static os_log_type_t.debug.getter();
  id v3 = v0;
  uint64_t v4 = Logger.logObject.getter();
  if (os_log_type_enabled(v4, v2))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    unsigned int v6 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 138412290;
    id v7 = v3;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *unsigned int v6 = v3;

    _os_log_impl((void *)&_mh_execute_header, v4, v2, "SceneDelegate deinit %@", v5, 0xCu);
    sub_1000063C0(&qword_1001FED90);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  v9.receiver = v3;
  v9.super_class = (Class)type metadata accessor for SceneDelegate();
  return [super dealloc];
}

uint64_t sub_1000CACDC()
{
  return type metadata accessor for SceneDelegate();
}

uint64_t type metadata accessor for SceneDelegate()
{
  uint64_t result = qword_1002014E0;
  if (!qword_1002014E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1000CAD30(void *a1)
{
  sub_1000CADF8(a1, "localKeyboardChanged pos=%s source=%s", (uint64_t)&unk_1001ED5E8, (uint64_t)sub_1000D4718, (uint64_t)&unk_1001ED600);
}

void sub_1000CADC8(void *a1)
{
  sub_1000CADF8(a1, "remoteKeyboardChanged pos=%s source=%s", (uint64_t)&unk_1001ED598, (uint64_t)sub_1000D5064, (uint64_t)&unk_1001ED5B0);
}

void sub_1000CADF8(void *a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v47 = a4;
  uint64_t v48 = a5;
  uint64_t v45 = a2;
  uint64_t v46 = a3;
  unsigned int v6 = v5;
  uint64_t v8 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v53 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v51 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = type metadata accessor for DispatchQoS();
  uint64_t v50 = *(void *)(v52 - 8);
  __chkstk_darwin(v52);
  uint64_t v49 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Logger();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  [a1 keyboardPositionWithIAV];
  uint64_t v15 = NSStringFromCGRect(v57);
  uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v18 = v17;

  if (qword_1001FAC30 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_10000EBE8(v11, (uint64_t)qword_100212788);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v19, v11);
  int v20 = static os_log_type_t.debug.getter();
  id v21 = a1;
  swift_bridgeObjectRetain();
  uint64_t v22 = v11;
  uint64_t v23 = Logger.logObject.getter();
  int v44 = v20;
  BOOL v24 = os_log_type_enabled(v23, (os_log_type_t)v20);
  uint64_t v54 = v8;
  if (v24)
  {
    uint64_t v42 = v22;
    unint64_t v43 = v6;
    uint64_t v25 = swift_slowAlloc();
    uint64_t v41 = swift_slowAlloc();
    aBlock[0] = v41;
    *(_DWORD *)uint64_t v25 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v55 = sub_100021444(v16, v18, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v25 + 12) = 2080;
    id v26 = [v21 sourceBundleIdentifier];
    if (!v26)
    {

      __break(1u);
      return;
    }
    uint64_t v27 = v26;
    uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v30 = v29;

    uint64_t v55 = sub_100021444(v28, v30, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v23, (os_log_type_t)v44, v45, (uint8_t *)v25, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v42);
    unsigned int v6 = v43;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v22);
  }
  uint64_t v31 = *(void **)&v6[OBJC_IVAR____TtC21WritingToolsUIService13SceneDelegate_pendingKeyboardInformation];
  *(void *)&v6[OBJC_IVAR____TtC21WritingToolsUIService13SceneDelegate_pendingKeyboardInformation] = v21;
  id v32 = v21;

  uint64_t v33 = OBJC_IVAR____TtC21WritingToolsUIService13SceneDelegate_writingToolsSizeUpdateScheduled;
  if ((v6[OBJC_IVAR____TtC21WritingToolsUIService13SceneDelegate_writingToolsSizeUpdateScheduled] & 1) == 0)
  {
    sub_1000085FC(0, (unint64_t *)&qword_1001FF440);
    uint64_t v34 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v35 = swift_allocObject();
    *(void *)(v35 + 16) = v6;
    aBlock[4] = v47;
    aBlock[5] = v35;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_100048B2C;
    aBlock[3] = v48;
    uint64_t v36 = _Block_copy(aBlock);
    uint64_t v37 = v6;
    swift_release();
    uint64_t v38 = v49;
    static DispatchQoS.unspecified.getter();
    aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
    sub_1000D4F6C((unint64_t *)&unk_1001FD330, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000063C0((uint64_t *)&unk_100201550);
    sub_10004FAEC();
    uint64_t v39 = v51;
    uint64_t v40 = v54;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v36);

    (*(void (**)(char *, uint64_t))(v53 + 8))(v39, v40);
    (*(void (**)(char *, uint64_t))(v50 + 8))(v38, v52);
    v6[v33] = 1;
  }
}

void sub_1000CB450()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0 + OBJC_IVAR____TtC21WritingToolsUIService13SceneDelegate_pendingPreferredContentSize;
  int v3 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC21WritingToolsUIService13SceneDelegate_pendingPreferredContentSize + 16);
  uint64_t v4 = OBJC_IVAR____TtC21WritingToolsUIService13SceneDelegate_pendingKeyboardInformation;
  uint64_t v5 = *(void **)(v0 + OBJC_IVAR____TtC21WritingToolsUIService13SceneDelegate_pendingKeyboardInformation);
  if (v5)
  {
    uint64_t v6 = v3 ^ 1u;
    id v7 = v5;
    sub_1000D447C(v7);
    double v9 = v8;
    double v11 = v10;
    double v13 = v12;
    double v15 = v14;
    [v7 keyboardPositionWithIAV];
    if (qword_1001FAC30 != -1) {
      swift_once();
    }
    uint64_t v16 = type metadata accessor for Logger();
    sub_10000EBE8(v16, (uint64_t)qword_100212788);
    os_log_type_t v17 = static os_log_type_t.default.getter();
    unint64_t v18 = Logger.logObject.getter();
    if (os_log_type_enabled(v18, v17))
    {
      uint64_t v19 = swift_slowAlloc();
      *(_DWORD *)uint64_t v19 = 134218240;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v19 + 12) = 2048;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v18, v17, "Send host updated keyboard size=(%f,%f)", (uint8_t *)v19, 0x16u);
      swift_slowDealloc();
    }

    id v20 = [self actionForUpdateKeyboardPosition:v6 preferredContentSizeChanged:v9, v11, v13, v15];
    sub_1000CDBCC(v20);

    id v21 = *(void **)(v1 + v4);
    *(void *)(v1 + v4) = 0;

    LOBYTE(v3) = *(unsigned char *)(v2 + 16);
  }
  if ((v3 & 1) == 0)
  {
    if (qword_1001FAC30 != -1) {
      swift_once();
    }
    uint64_t v22 = type metadata accessor for Logger();
    sub_10000EBE8(v22, (uint64_t)qword_100212788);
    os_log_type_t v23 = static os_log_type_t.default.getter();
    BOOL v24 = Logger.logObject.getter();
    if (os_log_type_enabled(v24, v23))
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v25 = 134217984;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v24, v23, "Send host updated preferredContentSize (height=%f)", v25, 0xCu);
      swift_slowDealloc();
    }

    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v27 = Strong;
      [Strong _setPreferredContentSize:0.0 nullsub_1(Strong)];
    }
    *(void *)uint64_t v2 = 0;
    *(void *)(v2 + 8) = 0;
    *(unsigned char *)(v2 + 16) = 1;
  }
  *(unsigned char *)(v1 + OBJC_IVAR____TtC21WritingToolsUIService13SceneDelegate_writingToolsSizeUpdateScheduled) = 0;
}

void sub_1000CBB3C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  double v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    id v12 = [a1 uuid];
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v13 = UUID.uuidString.getter();
    unint64_t v15 = v14;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  else
  {
    uint64_t v13 = 0;
    unint64_t v15 = 0xE000000000000000;
  }
  if (qword_1001FAC38 != -1) {
    swift_once();
  }
  uint64_t v16 = type metadata accessor for Logger();
  sub_10000EBE8(v16, (uint64_t)qword_1002127A0);
  os_log_type_t v17 = v4;
  swift_bridgeObjectRetain();
  unint64_t v18 = Logger.logObject.getter();
  os_log_type_t v19 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = swift_slowAlloc();
    id v32 = a1;
    uint64_t v21 = v20;
    unint64_t v30 = (void *)swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    uint64_t v34 = (uint64_t)v17;
    aBlock[0] = v31;
    *(_DWORD *)uint64_t v21 = 138412546;
    uint64_t v33 = a2;
    uint64_t v22 = v17;
    uint64_t v29 = v13;
    os_log_type_t v23 = v22;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *unint64_t v30 = v17;

    *(_WORD *)(v21 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v34 = sub_100021444(v29, v15, aBlock);
    a2 = v33;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "SceneDelegate %@: willBeginWritingToolsSession (sessionID=%s)", (uint8_t *)v21, 0x16u);
    sub_1000063C0(&qword_1001FED90);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    a1 = v32;
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  BOOL v24 = *(void **)&v17[OBJC_IVAR____TtC21WritingToolsUIService13SceneDelegate_session];
  *(void *)&v17[OBJC_IVAR____TtC21WritingToolsUIService13SceneDelegate_session] = a1;
  id v25 = a1;

  id v26 = self;
  aBlock[4] = a2;
  aBlock[5] = a3;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1000CBF40;
  aBlock[3] = (uint64_t)&unk_1001ED560;
  uint64_t v27 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  id v28 = [v26 actionForWillBeginWritingToolsSession:v25 requestContextsCompletion:v27];
  _Block_release(v27);
  sub_1000CDBCC(v28);
}

uint64_t sub_1000CBF40(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  sub_1000085FC(0, &qword_1001FD300);
  uint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  swift_retain();
  v1(v2);
  swift_release();

  return swift_bridgeObjectRelease();
}

void sub_1000CC064(uint64_t a1, uint64_t a2)
{
  sub_1000085FC(0, &qword_1001FD300);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  (*(void (**)(uint64_t, objc_class *))(a2 + 16))(a2, isa);
}

void sub_1000CC274(void *a1, char a2)
{
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1001FAC30 != -1) {
    swift_once();
  }
  uint64_t v9 = type metadata accessor for Logger();
  sub_10000EBE8(v9, (uint64_t)qword_100212788);
  os_log_type_t v10 = static os_log_type_t.debug.getter();
  id v11 = v2;
  id v12 = a1;
  uint64_t v13 = (char *)v11;
  id v14 = v12;
  unint64_t v15 = Logger.logObject.getter();
  int v16 = v10;
  if (os_log_type_enabled(v15, v10))
  {
    uint64_t v17 = swift_slowAlloc();
    unint64_t v18 = (void *)swift_slowAlloc();
    uint64_t v38 = swift_slowAlloc();
    uint64_t v39 = (uint64_t)v13;
    uint64_t v40 = v38;
    *(_DWORD *)uint64_t v17 = 138412546;
    int v37 = v16;
    os_log_t v36 = v15;
    id v32 = v8;
    uint64_t v35 = &v40;
    os_log_type_t v19 = v13;
    uint64_t v33 = v5;
    char v20 = a2;
    uint64_t v21 = v19;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v18 = v13;

    a2 = v20;
    *(_WORD *)(v17 + 12) = 2080;
    uint64_t v34 = v17 + 14;
    id v22 = [v14 uuid];
    os_log_type_t v23 = v32;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    sub_1000D4F6C((unint64_t *)&unk_100201560, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v24 = v33;
    uint64_t v25 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v27 = v26;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v23, v24);
    uint64_t v39 = sub_100021444(v25, v27, &v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    os_log_t v28 = v36;
    _os_log_impl((void *)&_mh_execute_header, v36, (os_log_type_t)v37, "SceneDelegate %@: didEndWritingToolsSession (sessionID=%s)", (uint8_t *)v17, 0x16u);
    sub_1000063C0(&qword_1001FED90);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  id v29 = [self actionForDidEndWritingToolsSession:v14 accepted:a2 & 1];
  sub_1000CDBCC(v29);

  unint64_t v30 = *(void **)&v13[OBJC_IVAR____TtC21WritingToolsUIService13SceneDelegate_session];
  *(void *)&v13[OBJC_IVAR____TtC21WritingToolsUIService13SceneDelegate_session] = 0;
}

void sub_1000CC6F0(void *a1)
{
  if (qword_1001FAC30 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  sub_10000EBE8(v3, (uint64_t)qword_100212788);
  os_log_type_t v4 = static os_log_type_t.debug.getter();
  id v5 = v1;
  swift_errorRetain();
  id v6 = v5;
  swift_errorRetain();
  uint64_t v7 = Logger.logObject.getter();
  if (!os_log_type_enabled(v7, v4))
  {

    swift_errorRelease();
    swift_errorRelease();

    if (!a1) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  uint64_t v8 = swift_slowAlloc();
  uint64_t v9 = (void *)swift_slowAlloc();
  *(_DWORD *)uint64_t v8 = 138412546;
  id v10 = v6;
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  *uint64_t v9 = v6;

  *(_WORD *)(v8 + 12) = 2112;
  if (a1)
  {
    swift_errorRetain();
    uint64_t v11 = _swift_stdlib_bridgeErrorToNSError();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
  }
  else
  {
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v11 = 0;
  }
  v9[1] = v11;
  swift_errorRelease();
  swift_errorRelease();
  _os_log_impl((void *)&_mh_execute_header, v7, v4, "SceneDelegate %@: endWritingTools (error=%@)", (uint8_t *)v8, 0x16u);
  sub_1000063C0(&qword_1001FED90);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();

  if (a1) {
LABEL_10:
  }
    a1 = (void *)_convertErrorToNSError(_:)();
LABEL_11:
  id v12 = [self actionForEndWritingToolsWithError:a1];

  sub_1000CDBCC(v12);
}

void sub_1000CCB04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  id v10 = self;
  NSString v11 = String._bridgeToObjectiveC()();
  NSString v12 = String._bridgeToObjectiveC()();
  NSString v13 = String._bridgeToObjectiveC()();
  v16[4] = a7;
  v16[5] = a8;
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 1107296256;
  v16[2] = sub_100048B2C;
  v16[3] = &unk_1001ED538;
  id v14 = _Block_copy(v16);
  swift_retain();
  swift_release();
  id v15 = [v10 actionForShowAlertWithTitle:v11 message:v12 buttonTitle:v13 buttonAction:v14];
  _Block_release(v14);

  sub_1000CDBCC(v15);
}

void sub_1000CD114(void *a1, uint64_t a2, void *a3, SEL *a4)
{
  uint64_t v7 = self;
  id v8 = a3;
  id v9 = a1;
  id v10 = [v7 *a4:v8];
  sub_1000CDBCC(v10);
}

void sub_1000CD334(void *a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  uint64_t v7 = self;
  id v8 = a1;
  id v9 = [v7 *a4:a3];
  sub_1000CDBCC(v9);
}

void sub_1000CD44C(double a1, double a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchQoS();
  uint64_t v26 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  NSString v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1001FAC30 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for Logger();
  sub_10000EBE8(v13, (uint64_t)qword_100212788);
  os_log_type_t v14 = static os_log_type_t.default.getter();
  id v15 = Logger.logObject.getter();
  if (os_log_type_enabled(v15, v14))
  {
    int v16 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)int v16 = 134217984;
    *(double *)aBlock = a2;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v15, v14, "preferredContentSize changed (height=%f)", v16, 0xCu);
    swift_slowDealloc();
  }

  if ([self _isWritingToolsHandlingKeyboardTracking])
  {
    uint64_t v25 = v7;
    uint64_t v17 = (double *)&v3[OBJC_IVAR____TtC21WritingToolsUIService13SceneDelegate_pendingPreferredContentSize];
    *uint64_t v17 = a1;
    v17[1] = a2;
    *((unsigned char *)v17 + 16) = 0;
    uint64_t v18 = OBJC_IVAR____TtC21WritingToolsUIService13SceneDelegate_writingToolsSizeUpdateScheduled;
    if ((v3[OBJC_IVAR____TtC21WritingToolsUIService13SceneDelegate_writingToolsSizeUpdateScheduled] & 1) == 0)
    {
      sub_1000085FC(0, (unint64_t *)&qword_1001FF440);
      os_log_type_t v19 = (void *)static OS_dispatch_queue.main.getter();
      uint64_t v20 = swift_allocObject();
      *(void *)(v20 + 16) = v3;
      aBlock[4] = sub_1000D5064;
      aBlock[5] = v20;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100048B2C;
      aBlock[3] = &unk_1001ED510;
      uint64_t v21 = _Block_copy(aBlock);
      id v22 = v3;
      swift_release();
      static DispatchQoS.unspecified.getter();
      aBlock[0] = _swiftEmptyArrayStorage;
      sub_1000D4F6C((unint64_t *)&unk_1001FD330, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_1000063C0((uint64_t *)&unk_100201550);
      sub_10004FAEC();
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v21);

      (*(void (**)(char *, uint64_t))(v25 + 8))(v9, v6);
      (*(void (**)(char *, uint64_t))(v26 + 8))(v12, v10);
      v3[v18] = 1;
    }
  }
  else
  {
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v24 = Strong;
      [Strong _setPreferredContentSize:0.0, [Strong nullsub_1]];
    }
  }
}

void sub_1000CD8E8(double a1, double a2, double a3, double a4)
{
  if (qword_1001FAC38 != -1) {
    swift_once();
  }
  uint64_t v9 = type metadata accessor for Logger();
  sub_10000EBE8(v9, (uint64_t)qword_1002127A0);
  os_log_type_t v10 = static os_log_type_t.debug.getter();
  id v11 = v4;
  NSString v12 = Logger.logObject.getter();
  if (os_log_type_enabled(v12, v10))
  {
    uint64_t v13 = swift_slowAlloc();
    os_log_type_t v14 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 138413314;
    id v15 = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v14 = v11;

    *(_WORD *)(v13 + 12) = 2048;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v13 + 22) = 2048;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v13 + 32) = 2048;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v13 + 42) = 2048;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v12, v10, "SceneDelegate %@: show smart reply questionnaire (rect: %f, %f; %f, %f)",
      (uint8_t *)v13,
      0x34u);
    sub_1000063C0(&qword_1001FED90);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  id v16 = [self actionForShowSmartReplyQuestionnaireWithRect:a1, a2, a3, a4];
  sub_1000CDBCC(v16);
}

void sub_1000CDBCC(void *a1)
{
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC21WritingToolsUIService13SceneDelegate_window);
  if (v3
    && (id v4 = [v3 rootViewController]) != 0
    && (id v5 = v4, v12 = [v4 _hostedWindowScene], v5, v12))
  {
    [v12 sendAction:a1];
  }
  else
  {
    if (qword_1001FAC30 != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    sub_10000EBE8(v6, (uint64_t)qword_100212788);
    id v12 = a1;
    uint64_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      os_log_type_t v10 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 138412290;
      id v11 = v12;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *os_log_type_t v10 = v12;

      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Could not send action: %@ to hostedWindowScene since it is nil.", v9, 0xCu);
      sub_1000063C0(&qword_1001FED90);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return;
    }
  }
}

uint64_t sub_1000CE0FC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v13 = v12;
  LODWORD(v64) = a6;
  uint64_t v62 = a3;
  uint64_t v63 = a4;
  uint64_t v65 = a2;
  uint64_t v18 = sub_1000063C0((uint64_t *)&unk_1001FB400);
  uint64_t v19 = __chkstk_darwin(v18 - 8);
  uint64_t v66 = (uint64_t)v56 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  id v22 = (char *)v56 - v21;
  uint64_t v23 = type metadata accessor for UUID();
  uint64_t v24 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v26 = (char *)v56 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100008DD4(a1, (uint64_t)v22, (uint64_t *)&unk_1001FB400);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23) == 1)
  {
    uint64_t v58 = v13;
    int v60 = a7;
    int v61 = a8;
    sub_10002784C((uint64_t)v22, (uint64_t *)&unk_1001FB400);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v26, v22, v23);
    if (qword_1001FACD8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v27 = qword_1002128C8;
    if (*(void *)(qword_1002128C8 + 16))
    {
      unint64_t v28 = sub_100007B70((uint64_t)v26);
      if (v29)
      {
        uint64_t v30 = *(void *)(*(void *)(v27 + 56) + 8 * v28);
        swift_endAccess();
        uint64_t v31 = *(void (**)(char *, uint64_t))(v24 + 8);
        swift_retain();
        v31(v26, v23);
        swift_unknownObjectWeakAssign();
        return v30;
      }
    }
    uint64_t v58 = v13;
    int v60 = a7;
    int v61 = a8;
    swift_endAccess();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);
  }
  uint64_t v59 = a10;
  uint64_t v57 = a9;
  type metadata accessor for RewritingModel();
  swift_allocObject();
  uint64_t v30 = sub_1000A91CC();
  uint64_t KeyPath = swift_getKeyPath();
  v56[1] = v56;
  __chkstk_darwin(KeyPath);
  uint64_t v33 = v62;
  uint64_t v34 = v63;
  v56[-6] = v30;
  v56[-5] = v33;
  v56[-4] = v34;
  v56[-3] = a5;
  uint64_t v35 = a5;
  char v36 = v64;
  LOBYTE(v56[-2]) = v64;
  uint64_t v37 = v30 + OBJC_IVAR____TtC21WritingToolsUIService9ToolModel___observationRegistrar;
  uint64_t v67 = v30;
  swift_retain();
  sub_1000272F8(v33, v34, v35, v36);
  v56[2] = &protocol conformance descriptor for ToolModel;
  uint64_t v38 = sub_1000D4F6C((unint64_t *)&qword_1001FD2A0, (void (*)(uint64_t))type metadata accessor for ToolModel);
  v56[0] = (char *)&type metadata for () + 8;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  sub_100024DB4(v33, v34, v35, v36);
  swift_release();
  swift_release();
  swift_unknownObjectWeakAssign();
  uint64_t v39 = swift_getKeyPath();
  __chkstk_darwin(v39);
  uint64_t v40 = v65;
  v56[-2] = v30;
  v56[-1] = v40;
  uint64_t v67 = v30;
  swift_retain();
  id v41 = v40;
  uint64_t v64 = v38;
  uint64_t v65 = (void *)v37;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  swift_release();

  uint64_t v42 = swift_getKeyPath();
  __chkstk_darwin(v42);
  v56[-2] = v30;
  LOBYTE(v56[-1]) = v60 & 1;
  uint64_t v67 = v30;
  sub_1000D4F6C((unint64_t *)&unk_100201540, (void (*)(uint64_t))type metadata accessor for RewritingModel);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  uint64_t v43 = swift_getKeyPath();
  __chkstk_darwin(v43);
  uint64_t v44 = v57;
  v56[-2] = v30;
  v56[-1] = v44;
  uint64_t v67 = v30;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  uint64_t v45 = swift_getKeyPath();
  __chkstk_darwin(v45);
  v56[-2] = v30;
  LOBYTE(v56[-1]) = v61 & 1;
  uint64_t v67 = v30;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  uint64_t v46 = v66;
  sub_100008DD4(v59, v66, (uint64_t *)&unk_1001FB400);
  type metadata accessor for WritingToolsAnalytics();
  uint64_t v47 = swift_allocObject();
  ObservationRegistrar.init()();
  sub_100008DD4(v46, v47 + OBJC_IVAR____TtC21WritingToolsUIService21WritingToolsAnalytics_analyticsUUID, (uint64_t *)&unk_1001FB400);
  if (qword_1001FAC48 != -1) {
    swift_once();
  }
  uint64_t v63 = a11;
  uint64_t v48 = type metadata accessor for Logger();
  sub_10000EBE8(v48, (uint64_t)qword_1002127D0);
  uint64_t v49 = Logger.logObject.getter();
  os_log_type_t v50 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v49, v50))
  {
    uint64_t v51 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v51 = 0;
    _os_log_impl((void *)&_mh_execute_header, v49, v50, "WritingToolsAnalytics init", v51, 2u);
    swift_slowDealloc();
  }

  sub_10002784C(v46, (uint64_t *)&unk_1001FB400);
  uint64_t v52 = swift_getKeyPath();
  __chkstk_darwin(v52);
  v56[-2] = v30;
  v56[-1] = v47;
  uint64_t v67 = v30;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  swift_release();
  uint64_t v53 = swift_getKeyPath();
  __chkstk_darwin(v53);
  uint64_t v54 = v63;
  v56[-4] = v30;
  v56[-3] = v54;
  v56[-2] = a12;
  uint64_t v67 = v30;
  swift_bridgeObjectRetain();
  swift_retain();
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v30;
}

uint64_t sub_1000CE984(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v39 = a3;
  uint64_t v9 = sub_1000063C0((uint64_t *)&unk_1001FB400);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  os_log_type_t v14 = (char *)&v37 - v13;
  uint64_t v15 = type metadata accessor for UUID();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100008DD4(a1, (uint64_t)v14, (uint64_t *)&unk_1001FB400);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    uint64_t v37 = a4;
    uint64_t v38 = a5;
    sub_10002784C((uint64_t)v14, (uint64_t *)&unk_1001FB400);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v14, v15);
    if (qword_1001FADF0 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v19 = qword_100212BA0;
    if (*(void *)(qword_100212BA0 + 16))
    {
      unint64_t v20 = sub_100007B70((uint64_t)v18);
      if (v21)
      {
        uint64_t v22 = *(void *)(*(void *)(v19 + 56) + 8 * v20);
        swift_endAccess();
        uint64_t v23 = *(void (**)(char *, uint64_t))(v16 + 8);
        swift_retain();
        v23(v18, v15);
        swift_unknownObjectWeakAssign();
        return v22;
      }
    }
    uint64_t v37 = a4;
    uint64_t v38 = a5;
    swift_endAccess();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  }
  type metadata accessor for ProofreadingModel();
  swift_allocObject();
  uint64_t v22 = sub_10016B810();
  uint64_t KeyPath = swift_getKeyPath();
  __chkstk_darwin(KeyPath);
  *(&v37 - 2) = v22;
  *(&v37 - 1) = (uint64_t)a2;
  uint64_t v40 = v22;
  sub_1000D4F6C((unint64_t *)&qword_1001FD2A0, (void (*)(uint64_t))type metadata accessor for ToolModel);
  swift_retain();
  id v25 = a2;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  swift_release();

  swift_unknownObjectWeakAssign();
  uint64_t v26 = swift_getKeyPath();
  __chkstk_darwin(v26);
  *(&v37 - 6) = v22;
  *(&v37 - 5) = 1;
  *(&v37 - 4) = 0;
  *(&v37 - 3) = 0;
  *((unsigned char *)&v37 - 16) = 2;
  uint64_t v40 = v22;
  swift_retain();
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  swift_release();
  sub_100008DD4(v39, (uint64_t)v12, (uint64_t *)&unk_1001FB400);
  type metadata accessor for WritingToolsAnalytics();
  uint64_t v27 = swift_allocObject();
  ObservationRegistrar.init()();
  sub_100008DD4((uint64_t)v12, v27 + OBJC_IVAR____TtC21WritingToolsUIService21WritingToolsAnalytics_analyticsUUID, (uint64_t *)&unk_1001FB400);
  if (qword_1001FAC48 != -1) {
    swift_once();
  }
  uint64_t v28 = type metadata accessor for Logger();
  sub_10000EBE8(v28, (uint64_t)qword_1002127D0);
  char v29 = Logger.logObject.getter();
  os_log_type_t v30 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v29, v30))
  {
    uint64_t v31 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v31 = 0;
    _os_log_impl((void *)&_mh_execute_header, v29, v30, "WritingToolsAnalytics init", v31, 2u);
    swift_slowDealloc();
  }

  sub_10002784C((uint64_t)v12, (uint64_t *)&unk_1001FB400);
  uint64_t v32 = swift_getKeyPath();
  __chkstk_darwin(v32);
  *(&v37 - 2) = v22;
  *(&v37 - 1) = v27;
  uint64_t v40 = v22;
  sub_1000D4F6C((unint64_t *)&qword_1001FBD30, (void (*)(uint64_t))type metadata accessor for ProofreadingModel);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  swift_release();
  uint64_t v33 = swift_getKeyPath();
  __chkstk_darwin(v33);
  uint64_t v34 = v37;
  uint64_t v35 = v38;
  *(&v37 - 4) = v22;
  *(&v37 - 3) = v34;
  *(&v37 - 2) = v35;
  uint64_t v40 = v22;
  swift_bridgeObjectRetain();
  swift_retain();
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v22;
}

uint64_t sub_1000CF030(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v66 = a3;
  uint64_t v9 = sub_1000063C0((uint64_t *)&unk_1001FB400);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v63 = (uint64_t)v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v65 = (uint64_t)v60 - v13;
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)v60 - v14;
  uint64_t v16 = type metadata accessor for UUID();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)v60 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100008DD4(a1, (uint64_t)v15, (uint64_t *)&unk_1001FB400);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_10002784C((uint64_t)v15, (uint64_t *)&unk_1001FB400);
LABEL_13:
    if (qword_1001FAC28 != -1) {
      swift_once();
    }
    uint64_t v61 = a4;
    uint64_t v62 = a5;
    v60[0] = type metadata accessor for Logger();
    sub_10000EBE8(v60[0], (uint64_t)qword_100212770);
    uint64_t v32 = Logger.logObject.getter();
    os_log_type_t v33 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v34 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v34 = 0;
      _os_log_impl((void *)&_mh_execute_header, v32, v33, "No CompositionModel found. Creating a new Model and setting the delegate for CompositionModel", v34, 2u);
      swift_slowDealloc();
    }

    type metadata accessor for CompositionModel(0);
    swift_allocObject();
    uint64_t v23 = sub_100082058();
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    v60[-2] = v23;
    v60[-1] = (uint64_t)a2;
    uint64_t v36 = v23 + OBJC_IVAR____TtC21WritingToolsUIService9ToolModel___observationRegistrar;
    v68[0] = v23;
    uint64_t v37 = sub_1000D4F6C((unint64_t *)&qword_1001FD2A0, (void (*)(uint64_t))type metadata accessor for ToolModel);
    swift_retain();
    id v38 = a2;
    v60[1] = v37;
    v60[2] = v36;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    swift_release();

    uint64_t v39 = swift_getKeyPath();
    __chkstk_darwin(v39);
    uint64_t v40 = v64;
    v60[-2] = v23;
    v60[-1] = (uint64_t)v40;
    v68[0] = v23;
    sub_1000D4F6C((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
    id v41 = v40;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();

    uint64_t v42 = v65;
    sub_100008DD4(v66, v65, (uint64_t *)&unk_1001FB400);
    uint64_t v43 = type metadata accessor for WritingToolsAnalytics();
    uint64_t v44 = swift_allocObject();
    ObservationRegistrar.init()();
    sub_100008DD4(v42, v44 + OBJC_IVAR____TtC21WritingToolsUIService21WritingToolsAnalytics_analyticsUUID, (uint64_t *)&unk_1001FB400);
    if (qword_1001FAC48 != -1) {
      swift_once();
    }
    sub_10000EBE8(v60[0], (uint64_t)qword_1002127D0);
    uint64_t v45 = Logger.logObject.getter();
    os_log_type_t v46 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v45, v46))
    {
      uint64_t v47 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v47 = 0;
      _os_log_impl((void *)&_mh_execute_header, v45, v46, "WritingToolsAnalytics init", v47, 2u);
      uint64_t v42 = v65;
      swift_slowDealloc();
    }

    sub_10002784C(v42, (uint64_t *)&unk_1001FB400);
    uint64_t v48 = swift_getKeyPath();
    __chkstk_darwin(v48);
    v60[-2] = v23;
    v60[-1] = v44;
    v68[0] = v23;
    uint64_t v65 = (uint64_t)&type metadata for () + 8;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    swift_release();
    swift_getKeyPath();
    v68[0] = v23;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v49 = *(void *)(v23 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__attachmentManager);
    uint64_t v50 = v63;
    sub_100008DD4(v66, v63, (uint64_t *)&unk_1001FB400);
    uint64_t v51 = swift_allocObject();
    swift_retain();
    ObservationRegistrar.init()();
    sub_100008DD4(v50, v51 + OBJC_IVAR____TtC21WritingToolsUIService21WritingToolsAnalytics_analyticsUUID, (uint64_t *)&unk_1001FB400);
    uint64_t v52 = Logger.logObject.getter();
    os_log_type_t v53 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v52, v53))
    {
      uint64_t v54 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v54 = 0;
      _os_log_impl((void *)&_mh_execute_header, v52, v53, "WritingToolsAnalytics init", v54, 2u);
      swift_slowDealloc();
    }

    sub_10002784C(v50, (uint64_t *)&unk_1001FB400);
    v68[3] = v43;
    v68[4] = &off_1001EAC28;
    v68[0] = v51;
    uint64_t v55 = swift_getKeyPath();
    __chkstk_darwin(v55);
    v60[-2] = v49;
    v60[-1] = (uint64_t)v68;
    uint64_t v67 = v49;
    sub_1000D4F6C(&qword_100201970, (void (*)(uint64_t))type metadata accessor for AttachmentManager);
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    sub_10002784C((uint64_t)v68, (uint64_t *)&unk_100201530);
    swift_release();
    uint64_t v56 = swift_getKeyPath();
    __chkstk_darwin(v56);
    uint64_t v57 = v61;
    uint64_t v58 = v62;
    v60[-4] = v23;
    v60[-3] = v57;
    v60[-2] = v58;
    v68[0] = v23;
    swift_bridgeObjectRetain();
    swift_retain();
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    return v23;
  }
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v15, v16);
  if (qword_1001FACB0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v20 = qword_100212858;
  if (!*(void *)(qword_100212858 + 16) || (unint64_t v21 = sub_100007B70((uint64_t)v19), (v22 & 1) == 0))
  {
    swift_endAccess();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    goto LABEL_13;
  }
  uint64_t v23 = *(void *)(*(void *)(v20 + 56) + 8 * v21);
  swift_endAccess();
  uint64_t v24 = qword_1001FAC28;
  swift_retain();
  if (v24 != -1) {
    swift_once();
  }
  uint64_t v25 = type metadata accessor for Logger();
  sub_10000EBE8(v25, (uint64_t)qword_100212770);
  uint64_t v26 = Logger.logObject.getter();
  os_log_type_t v27 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v28 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v28 = 0;
    _os_log_impl((void *)&_mh_execute_header, v26, v27, "Setting the delegate for CompositionModel", v28, 2u);
    swift_slowDealloc();
  }

  uint64_t v29 = swift_getKeyPath();
  __chkstk_darwin(v29);
  os_log_type_t v30 = v64;
  v60[-2] = v23;
  v60[-1] = (uint64_t)v30;
  v68[0] = v23;
  sub_1000D4F6C((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  id v31 = v30;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();

  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  return v23;
}

void sub_1000CFBA4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  if (qword_1001FAC28 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_10000EBE8(v6, (uint64_t)qword_100212770);
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Handling handoff to UCB...", v9, 2u);
    swift_slowDealloc();
  }

  uint64_t v10 = *(void *)(v3 + OBJC_IVAR____TtC21WritingToolsUIService13SceneDelegate_writingToolsModel);
  if (!v10)
  {
    __break(1u);
    return;
  }
  swift_getKeyPath();
  sub_1000D4F6C((unint64_t *)&unk_1001FB3F0, (void (*)(uint64_t))type metadata accessor for WritingToolsModel);
  swift_retain();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v11 = *(void *)(v10 + 32);
  swift_retain();
  swift_release();
  swift_getKeyPath();
  sub_1000D4F6C((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  char v12 = *(unsigned char *)(v11 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__isFeatureEnabled);
  swift_release();
  if (v12)
  {
    if (!a2) {
      return;
    }
    uint64_t v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "Proceeding with handoff", v15, 2u);
      swift_slowDealloc();
    }

    uint64_t v16 = self;
    NSString v17 = String._bridgeToObjectiveC()();
    id v18 = [v16 actionForHandOffFromUCBWithPrompt:v17];
  }
  else
  {
    uint64_t v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v19, v20))
    {
      unint64_t v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v21 = 0;
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "Not yet enrolled, holding pending prompt", v21, 2u);
      swift_slowDealloc();
    }

    qword_100212848 = a1;
    qword_100212850 = a2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    id v18 = [self actionForEnrollmentBegan];
  }
  sub_1000CDBCC(v18);
}

void sub_1000CFF78(void *a1, uint64_t a2, SEL *a3)
{
  id v5 = self;
  id v6 = a1;
  id v7 = [v5 *a3];
  sub_1000CDBCC(v7);
}

id sub_1000CFFF8()
{
  swift_unknownObjectWeakInit();
  *(void *)&v0[OBJC_IVAR____TtC21WritingToolsUIService13SceneDelegate_window] = 0;
  uint64_t v1 = &v0[OBJC_IVAR____TtC21WritingToolsUIService13SceneDelegate_writingToolsView];
  uint64_t v2 = type metadata accessor for WritingToolsView();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  *(void *)&v0[OBJC_IVAR____TtC21WritingToolsUIService13SceneDelegate_writingToolsModel] = 0;
  uint64_t v3 = OBJC_IVAR____TtC21WritingToolsUIService13SceneDelegate_presentationModel;
  type metadata accessor for PresentationModel();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = 0;
  *(unsigned char *)(v4 + 24) = 1;
  *(void *)(v4 + 32) = 0;
  *(_WORD *)(v4 + 40) = 1;
  id v5 = v0;
  ObservationRegistrar.init()();
  *(void *)&v0[v3] = v4;
  *(void *)&v5[OBJC_IVAR____TtC21WritingToolsUIService13SceneDelegate_session] = 0;
  uint64_t v6 = OBJC_IVAR____TtC21WritingToolsUIService13SceneDelegate_commonUIManager;
  type metadata accessor for CommonUIManager();
  swift_allocObject();
  *(void *)&v5[v6] = sub_100120EC4();
  *(void *)&v5[OBJC_IVAR____TtC21WritingToolsUIService13SceneDelegate_hostingControllerBottomConstraint] = 0;
  *(void *)&v5[OBJC_IVAR____TtC21WritingToolsUIService13SceneDelegate_hostingControllerHeightConstraint] = 0;
  *(void *)&v5[OBJC_IVAR____TtC21WritingToolsUIService13SceneDelegate_pendingKeyboardInformation] = 0;
  id v7 = &v5[OBJC_IVAR____TtC21WritingToolsUIService13SceneDelegate_pendingPreferredContentSize];
  *(void *)id v7 = 0;
  *((void *)v7 + 1) = 0;
  v7[16] = 1;
  v5[OBJC_IVAR____TtC21WritingToolsUIService13SceneDelegate_writingToolsSizeUpdateScheduled] = 0;
  type metadata accessor for SceneDelegateContainerViewController();
  id v8 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  [v8 setModalInPresentation:0];
  id result = [v8 view];
  if (result)
  {
    uint64_t v10 = result;
    uint64_t v11 = OBJC_IVAR____TtC21WritingToolsUIService13SceneDelegate_rootViewController;
    [result setTranslatesAutoresizingMaskIntoConstraints:0];

    *(void *)&v5[v11] = v8;
    v12.receiver = v5;
    v12.super_class = (Class)type metadata accessor for SceneDelegate();
    return [super init];
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1000D0220()
{
  sub_1000D0300();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_1000D0300()
{
  if (!qword_1002014F0)
  {
    type metadata accessor for WritingToolsView();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1002014F0);
    }
  }
}

id sub_1000D0358(uint64_t a1)
{
  uint64_t v2 = sub_1000063C0((uint64_t *)&unk_100201520);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for EnablementUIDismissType();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  objc_super v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
  int v13 = (*(uint64_t (**)(char *, uint64_t))(v10 + 88))(v12, v9);
  if (v13 != enum case for EnablementUIDismissType.enableWithAccount(_:))
  {
    if (v13 == enum case for EnablementUIDismissType.enableWithoutAccount(_:))
    {
      type metadata accessor for GenerativeAssistantSettingsUserDefaults();
      static GenerativeAssistantSettingsUserDefaults.setEnabled(_:)();
      char v20 = 0;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      char v20 = 1;
    }
    goto LABEL_8;
  }
  URL.init(string:)();
  id result = (id)(*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (result == 1)
  {
    __break(1u);
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
  id result = [self defaultWorkspace];
  if (!result)
  {
LABEL_13:
    __break(1u);
    return result;
  }
  uint64_t v16 = result;
  URL._bridgeToObjectiveC()(v15);
  id v18 = v17;
  sub_1000051F0((uint64_t)_swiftEmptyArrayStorage);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v16 openSensitiveURL:v18 withOptions:isa];

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  char v20 = 0;
LABEL_8:
  unint64_t v21 = self;
  id v22 = [v21 actionForEnrollmentDismissed];
  sub_1000CDBCC(v22);

  if ((v20 & 1) == 0)
  {
    if (qword_100212850)
    {
      swift_bridgeObjectRetain();
      NSString v23 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v24 = [v21 actionForHandOffFromUCBWithPrompt:v23];

      sub_1000CDBCC(v24);
    }
  }
  qword_100212848 = 0;
  qword_100212850 = 0;
  return (id)swift_bridgeObjectRelease();
}

id sub_1000D0748(uint64_t a1)
{
  return sub_1000D0358(a1);
}

id sub_1000D0854()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SceneDelegateContainerViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for SceneDelegateContainerViewController()
{
  return self;
}

uint64_t sub_1000D08D4()
{
  return sub_100068F88(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1000D0900()
{
  return sub_10013F484(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1000D0924()
{
  return sub_10002E66C(v0[2], v0[3], v0[4]);
}

uint64_t sub_1000D0954()
{
  return sub_100164FE4(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1000D0970@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1000CA568(a1, &OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__isForEditableContent, a2);
}

uint64_t sub_1000D09A4@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1000CA568(a1, &OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__wantsInlineEditing, a2);
}

uint64_t sub_1000D09D8()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000D0A10(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000D0A20()
{
  return swift_release();
}

uint64_t sub_1000D0A28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  LOBYTE(v5) = a5;
  uint64_t v10 = sub_1000063C0((uint64_t *)&unk_1001FB400);
  __chkstk_darwin(v10 - 8);
  objc_super v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for UUID();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100008DD4(a1, (uint64_t)v12, (uint64_t *)&unk_1001FB400);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_10002784C((uint64_t)v12, (uint64_t *)&unk_1001FB400);
    goto LABEL_21;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
  if (qword_1001FACD8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v17 = qword_1002128C8;
  if (*(void *)(qword_1002128C8 + 16))
  {
    unint64_t v18 = sub_100007B70((uint64_t)v16);
    if (v19)
    {
      uint64_t v20 = *(void *)(*(void *)(v17 + 56) + 8 * v18);
      swift_endAccess();
      swift_getKeyPath();
      uint64_t v29 = v20;
      sub_1000D4F6C((unint64_t *)&qword_1001FD2A0, (void (*)(uint64_t))type metadata accessor for ToolModel);
      swift_retain_n();
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      a2 = *(void *)(v20 + 48);
      a3 = *(void *)(v20 + 56);
      a4 = *(void *)(v20 + 64);
      int v5 = *(unsigned __int8 *)(v20 + 72);
      sub_1000272F8(a2, a3, a4, *(unsigned char *)(v20 + 72));
      swift_release();
      if (v5 != 255) {
        goto LABEL_14;
      }
      __break(1u);
    }
  }
  swift_endAccess();
  if (qword_1001FADF0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v21 = qword_100212BA0;
  if (!*(void *)(qword_100212BA0 + 16) || (unint64_t v22 = sub_100007B70((uint64_t)v16), (v23 & 1) == 0))
  {
    swift_endAccess();
    if (qword_1001FACB0 != -1) {
      swift_once();
    }
    swift_beginAccess();
    if (!*(void *)(qword_100212858 + 16) || (sub_100007B70((uint64_t)v16), (v27 & 1) == 0))
    {
      swift_endAccess();
      (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
LABEL_21:
      if ((_BYTE)v5 == 0xFF) {
        return 0;
      }
      sub_10000ED40(a2, a3, a4, v5);
      return a2;
    }
    swift_endAccess();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    return 0;
  }
  uint64_t v24 = *(void *)(*(void *)(v21 + 56) + 8 * v22);
  swift_endAccess();
  swift_getKeyPath();
  uint64_t v29 = v24;
  sub_1000D4F6C((unint64_t *)&qword_1001FD2A0, (void (*)(uint64_t))type metadata accessor for ToolModel);
  swift_retain_n();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  a2 = *(void *)(v24 + 48);
  int v25 = *(unsigned __int8 *)(v24 + 72);
  sub_1000272F8(a2, *(void *)(v24 + 56), *(void *)(v24 + 64), *(unsigned char *)(v24 + 72));
  uint64_t result = swift_release();
  if (v25 != 255)
  {
LABEL_14:
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    swift_release();
    return a2;
  }
  __break(1u);
  return result;
}

void sub_1000D0F28(void *a1, void *a2)
{
  v423 = a2;
  uint64_t v4 = sub_1000063C0(&qword_100201578);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  v397 = (char *)&v371 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v405 = sub_1000063C0(&qword_100201580);
  uint64_t v404 = *(void *)(v405 - 8);
  uint64_t v7 = __chkstk_darwin(v405);
  uint64_t v9 = (char *)&v371 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v403 = (char *)&v371 - v10;
  uint64_t v396 = sub_1000063C0(&qword_100201588);
  uint64_t v11 = __chkstk_darwin(v396);
  uint64_t v395 = (uint64_t)&v371 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v394 = (uint64_t)&v371 - v13;
  uint64_t v387 = sub_1000063C0(&qword_100201590);
  uint64_t v392 = *(void *)(v387 - 8);
  uint64_t v14 = __chkstk_darwin(v387);
  v386 = (char *)&v371 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v391 = (char *)&v371 - v16;
  uint64_t v385 = type metadata accessor for GenerativeAssistantSettingsOnboarding();
  uint64_t v384 = *(void *)(v385 - 8);
  __chkstk_darwin(v385);
  v382 = (char *)&v371 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v390 = sub_1000063C0(&qword_100201598);
  uint64_t v389 = *(void *)(v390 - 8);
  uint64_t v18 = __chkstk_darwin(v390);
  v383 = (char *)&v371 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v388 = (char *)&v371 - v20;
  uint64_t v21 = sub_1000063C0((uint64_t *)&unk_1001FB400);
  uint64_t v22 = __chkstk_darwin(v21 - 8);
  uint64_t v393 = (uint64_t)&v371 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __chkstk_darwin(v22);
  v406 = (char *)&v371 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v408 = (uint64_t)&v371 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  v415 = (char *)&v371 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  v416 = ((char *)&v371 - v31);
  uint64_t v32 = __chkstk_darwin(v30);
  v402 = (char *)&v371 - v33;
  uint64_t v34 = __chkstk_darwin(v32);
  uint64_t v36 = (char *)&v371 - v35;
  uint64_t v37 = __chkstk_darwin(v34);
  uint64_t v426 = (uint64_t)&v371 - v38;
  uint64_t v39 = __chkstk_darwin(v37);
  id v41 = (char *)&v371 - v40;
  __chkstk_darwin(v39);
  uint64_t v427 = (uint64_t)&v371 - v42;
  if (qword_1001FAC38 != -1) {
    swift_once();
  }
  uint64_t v401 = type metadata accessor for Logger();
  uint64_t v43 = sub_10000EBE8(v401, (uint64_t)qword_1002127A0);
  os_log_type_t v44 = static os_log_type_t.debug.getter();
  uint64_t v45 = v2;
  uint64_t v407 = v43;
  os_log_type_t v46 = Logger.logObject.getter();
  os_log_type_t v47 = v44;
  BOOL v48 = os_log_type_enabled(v46, v44);
  v425 = v36;
  v428 = (char *)v45;
  uint64_t v400 = v4;
  uint64_t v399 = v5;
  v398 = v9;
  if (v48)
  {
    uint64_t v49 = (uint8_t *)swift_slowAlloc();
    uint64_t v50 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v49 = 138412290;
    p_Class isa = v45;
    uint64_t v51 = v428;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v50 = v428;

    _os_log_impl((void *)&_mh_execute_header, v46, v47, "SceneDelegate %@: scene will connnect to session ", v49, 0xCu);
    sub_1000063C0(&qword_1001FED90);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  self;
  uint64_t v52 = swift_dynamicCastObjCClass();
  if (v52)
  {
    os_log_type_t v53 = (void *)v52;
    type metadata accessor for WTSceneConnectionOptionsDefinition();
    type metadata accessor for WTStartupOptions();
    sub_1000D4F6C(&qword_1002015A0, (void (*)(uint64_t))&type metadata accessor for WTSceneConnectionOptionsDefinition);
    id v424 = a1;
    UISceneConnectionOptions.subscript.getter();
    uint64_t v54 = p_isa;
    if (p_isa)
    {
      uint64_t v55 = v427;
      dispatch thunk of WTStartupOptions.sessionUUID.getter();
      uint64_t v56 = (void *)dispatch thunk of WTStartupOptions.prompt.getter();
      uint64_t v58 = v57;
      uint64_t v59 = dispatch thunk of WTStartupOptions.requestedTool.getter();
      char v60 = dispatch thunk of WTStartupOptions.isResumingFromModelEnrollment.getter();
      uint64_t v412 = v58;
      v373 = v56;
      if (v60)
      {
        uint64_t v61 = 0;
        uint64_t v62 = 0;
        uint64_t v63 = 0;
        int v64 = 2;
      }
      else
      {
        uint64_t v65 = sub_1000D673C(v59, (uint64_t)v56);
        uint64_t v67 = v66;
        uint64_t v69 = v68;
        char v71 = v70;
        uint64_t v72 = sub_1000D0A28(v55, v65, v66, v68, v70);
        uint64_t v63 = v73;
        int v75 = v74;
        uint64_t v76 = v65;
        uint64_t v62 = v77;
        uint64_t v78 = v67;
        uint64_t v61 = (const char *)v72;
        sub_10000ED74(v76, v78, v69, v71);
        int v64 = v75;
      }
      uint64_t v79 = v428;
      uint64_t v421 = (uint64_t)v61;
      LODWORD(v423) = v64;
      sub_100065B24(v61, v62, v63, v64);
      int v380 = dispatch thunk of WTStartupOptions.editable.getter();
      int v379 = dispatch thunk of WTStartupOptions.wantsInlineEditing.getter();
      uint64_t v378 = dispatch thunk of WTStartupOptions.allowedResultOptions.getter();
      id v414 = (id)dispatch thunk of WTStartupOptions.smartReplyConfiguration.getter();
      LODWORD(v411) = dispatch thunk of WTStartupOptions.isForInputDashboard.getter();
      int v376 = dispatch thunk of WTStartupOptions.isForAssistant.getter();
      int v375 = dispatch thunk of WTStartupOptions.wantsFormSheetPresentation.getter();
      uint64_t v374 = dispatch thunk of WTStartupOptions.formSheetUIType.getter();
      dispatch thunk of WTStartupOptions.suggestionUUID.getter();
      dispatch thunk of WTStartupOptions.contextUUID.getter();
      int v377 = dispatch thunk of WTStartupOptions.isQuestionnairePopover.getter();
      dispatch thunk of WTStartupOptions.sourceResponderHorizontalSizeClass.getter();
      LODWORD(v410) = dispatch thunk of WTStartupOptions.isWindowingModeEnabled.getter();
      dispatch thunk of WTStartupOptions.analyticsUUID.getter();
      uint64_t v409 = dispatch thunk of WTStartupOptions.sourceUserInterfaceIdiom.getter();
      uint64_t v80 = dispatch thunk of WTStartupOptions.bundleID.getter();
      uint64_t v413 = v81;
      if ([self _isWritingToolsHandlingKeyboardTracking])
      {
        id v82 = [v53 keyboardSceneDelegate];
        if (v82)
        {
          Swift::String v83 = v82;
          [v82 addVisibilityObserver:v79];
        }
      }
      type metadata accessor for WritingToolsModel();
      swift_allocObject();
      uint64_t v84 = WritingToolsModel.init(hostIsReady:writingToolsDelegate:)(1, 0);
      uint64_t v85 = OBJC_IVAR____TtC21WritingToolsUIService13SceneDelegate_writingToolsModel;
      *(void *)&v79[OBJC_IVAR____TtC21WritingToolsUIService13SceneDelegate_writingToolsModel] = v84;
      swift_release();
      if (v423 >= 2u && !(v63 | v62 | v421))
      {
        id v86 = [objc_allocWithZone((Class)type metadata accessor for TextCompositionClient()) init];
        dispatch thunk of TextCompositionClient.requestPrewarming(for:)();
      }
      *(void *)&long long v418 = v62;
      *((void *)&v418 + 1) = v63;
      id v87 = [objc_allocWithZone((Class)UIWindow) initWithWindowScene:v53];
      uint64_t v88 = *(void **)&v79[OBJC_IVAR____TtC21WritingToolsUIService13SceneDelegate_window];
      *(void *)&v79[OBJC_IVAR____TtC21WritingToolsUIService13SceneDelegate_window] = v87;
      id v417 = v87;

      self;
      uint64_t v89 = v424;
      uint64_t v90 = (void *)swift_dynamicCastObjCClass();
      if (v90) {
        id v91 = v89;
      }
      swift_unknownObjectWeakAssign();

      id v92 = [v89 _FBSScene];
      id v93 = [v92 hostHandle];

      if (v93)
      {
        uint64_t v372 = v85;
        uint64_t v381 = v80;
        id v371 = v87;
        v420 = v54;
        v422 = v41;
        id v419 = [v93 auditToken];

        id v94 = [self activeKeyboardSceneDelegate];
        if ([v94 respondsToSelector:"setHideSystemInputAssistantViewForWritingTools:"]) {
          [v94 setHideSystemInputAssistantViewForWritingTools:1];
        }

        uint64_t v95 = OBJC_IVAR____TtC21WritingToolsUIService13SceneDelegate_presentationModel;
        uint64_t v96 = *(void **)&v79[OBJC_IVAR____TtC21WritingToolsUIService13SceneDelegate_presentationModel];
        uint64_t KeyPath = swift_getKeyPath();
        __chkstk_darwin(KeyPath);
        p_Class isa = v96;
        sub_1000D4F6C((unint64_t *)&qword_1001FB410, (void (*)(uint64_t))type metadata accessor for PresentationModel);
        swift_retain();
        ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
        swift_release();
        swift_release();
        uint64_t v98 = *(void **)&v79[v95];
        uint64_t v99 = swift_getKeyPath();
        __chkstk_darwin(v99);
        p_Class isa = v98;
        swift_retain();
        ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
        swift_release();
        swift_release();
        uint64_t v409 = v95;
        uint64_t v100 = *(void **)&v79[v95];
        uint64_t v101 = swift_getKeyPath();
        __chkstk_darwin(v101);
        p_Class isa = v100;
        swift_retain();
        ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
        swift_release();
        swift_release();
        if (v411)
        {
          swift_bridgeObjectRelease();
          char v102 = (char)v423;
          unint64_t v103 = v420;
          if ((_BYTE)v423)
          {
            unint64_t v104 = v424;
            uint64_t v105 = (uint64_t)v425;
            uint64_t v107 = v427;
            id v106 = v428;
            id v108 = v414;
            id v109 = v417;
            uint64_t v110 = v421;
            if (v423 == 2)
            {
              if (v421 == 1 && v418 == 0)
              {
                uint64_t v111 = sub_1000CE984(v427, v419, (uint64_t)v425, v381, v413);
                swift_bridgeObjectRelease();
                v435 = (void *)v111;
                type metadata accessor for ProofreadingModel();
                id v112 = v106;
                swift_retain();
                State.init(wrappedValue:)();
                unint64_t v113 = p_isa;
                uint64_t v114 = v430;
                LOBYTE(v435) = v376 & 1;
                State.init(wrappedValue:)();

                char v115 = (char)p_isa;
                uint64_t v116 = v430;
                p_Class isa = v113;
                uint64_t v430 = v114;
                LOBYTE(v431) = v115;
                uint64_t v432 = v116;
                id v117 = objc_allocWithZone((Class)sub_1000063C0(&qword_100201600));
                swift_retain();
                swift_retain();
                swift_retain();
                unint64_t v118 = (void *)UIHostingController.init(rootView:)();
                UIHostingController.safeAreaRegions.setter();
                id v119 = [v118 view];
                if (v119)
                {
                  uint64_t v120 = v119;
                  id v121 = [self clearColor];
                  [v120 setBackgroundColor:v121];

                  id v122 = [v118 view];
                  if (v122)
                  {
                    uint64_t v123 = v122;
                    id v124 = [v122 layer];

                    [v124 setHitTestsAsOpaque:1];
                    id v125 = v417;
                    [v417 setRootViewController:v118];
                    id v109 = v125;
                    swift_release();
                    swift_release();
                    swift_release();
                    swift_release();

                    uint64_t v105 = (uint64_t)v425;
LABEL_63:
                    uint64_t v107 = v427;
                    unint64_t v103 = v420;
                    unint64_t v104 = v424;
                    goto LABEL_64;
                  }
                  goto LABEL_122;
                }
LABEL_121:
                __break(1u);
LABEL_122:
                __break(1u);
LABEL_123:
                __break(1u);
                goto LABEL_124;
              }
              if (v421 == 2 && v418 == 0)
              {
                swift_bridgeObjectRelease();
                os_log_type_t v168 = static os_log_type_t.debug.getter();
                char v169 = v106;
                v170 = Logger.logObject.getter();
                os_log_type_t v171 = v168;
                if (os_log_type_enabled(v170, v168))
                {
                  v172 = (uint8_t *)swift_slowAlloc();
                  int v173 = (void *)swift_slowAlloc();
                  *(_DWORD *)v172 = 138412290;
                  p_Class isa = &v169->isa;
                  __int16 v174 = v169;
                  id v108 = v414;
                  UnsafeMutableRawBufferPointer.copyMemory(from:)();
                  *int v173 = v169;

                  _os_log_impl((void *)&_mh_execute_header, v170, v171, "SceneDelegate %@: creating SmartReplyInputDashboardView with delegate=self", v172, 0xCu);
                  sub_1000063C0(&qword_1001FED90);
                  swift_arrayDestroy();
                  uint64_t v107 = v427;
                  swift_slowDealloc();
                  swift_slowDealloc();
                }
                else
                {

                  v170 = v169;
                }
                uint64_t v201 = (uint64_t)v402;

                sub_100008DD4(v107, v201, (uint64_t *)&unk_1001FB400);
                if (v108)
                {
                  long long v202 = v169;
                  p_Class isa = (void *)sub_100132C20(2, 0, 0, 2, (uint64_t)v169, v201, v419, v108);
                  uint64_t v430 = v203;
                  unint64_t v431 = v204;
                  id v205 = objc_allocWithZone((Class)sub_1000063C0(&qword_1002015F8));
                  swift_retain();
                  swift_retain();
                  swift_retain();
                  long long v206 = (void *)UIHostingController.init(rootView:)();
                  UIHostingController.safeAreaRegions.setter();
                  id v207 = [v206 view];
                  if (v207)
                  {
                    char v208 = v207;
                    id v209 = [self clearColor];
                    [v208 setBackgroundColor:v209];

                    id v210 = [v206 view];
                    if (v210)
                    {
                      long long v211 = v210;
                      id v212 = [v210 layer];

                      [v212 setHitTestsAsOpaque:1];
                      id v213 = v417;
                      [v417 setRootViewController:v206];
                      swift_release();
                      swift_release();
                      id v109 = v213;
                      swift_release();

                      goto LABEL_63;
                    }
                    goto LABEL_126;
                  }
LABEL_125:
                  __break(1u);
LABEL_126:
                  __break(1u);
LABEL_127:
                  __break(1u);
                  goto LABEL_128;
                }
LABEL_124:
                __break(1u);
                goto LABEL_125;
              }
            }
            swift_bridgeObjectRelease();
            sub_10000ED74(v110, v418, *((uint64_t *)&v418 + 1), v102);
            unint64_t v131 = v419;
LABEL_65:
            uint64_t v194 = (uint64_t)v422;
            goto LABEL_66;
          }
          uint64_t v145 = *((void *)&v418 + 1);
          swift_bridgeObjectRetain();
          id v146 = v428;
          uint64_t v147 = v421;
          uint64_t v148 = v418;
          uint64_t v149 = sub_1000CE0FC(v427, v419, v421, v418, v145, 0, v380 & 1, v379 & 1, v378, (uint64_t)v425, v381, v413);
          swift_bridgeObjectRelease();
          sub_10000ED74(v147, v148, v145, 0);
          uint64_t v150 = swift_allocObject();
          *(void *)(v150 + 16) = v146;
          LOBYTE(v435) = 0;
          id v151 = v146;
          swift_retain();
          State.init(wrappedValue:)();
          LOBYTE(v146) = (_BYTE)p_isa;
          uint64_t v152 = v430;
          v435 = (void *)v149;
          type metadata accessor for RewritingModel();
          State.init(wrappedValue:)();
          LOBYTE(v431) = (_BYTE)v146;
          uint64_t v432 = v152;
          v433 = sub_1000D5008;
          uint64_t v434 = v150;
          id v153 = objc_allocWithZone((Class)sub_1000063C0(&qword_100201608));
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          v154 = (void *)UIHostingController.init(rootView:)();
          UIHostingController.safeAreaRegions.setter();
          id v155 = [v154 view];
          if (v155)
          {
            v156 = v155;
            id v157 = [self clearColor];
            [v156 setBackgroundColor:v157];

            id v158 = [v154 view];
            if (v158)
            {
              char v159 = v158;
              id v160 = [v158 layer];

              [v160 setHitTestsAsOpaque:1];
              id v161 = v154;
              id v162 = v417;
              [v417 setRootViewController:v161];
              sub_10000ED74(v421, v418, *((uint64_t *)&v418 + 1), 0);
              id v109 = v162;
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();

              unint64_t v104 = v424;
              uint64_t v105 = (uint64_t)v425;
              uint64_t v107 = v427;
              unint64_t v103 = v420;
              id v108 = v414;
LABEL_64:
              unint64_t v131 = v419;
              goto LABEL_65;
            }
            goto LABEL_120;
          }
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
          goto LABEL_121;
        }
        uint64_t v126 = type metadata accessor for UUID();
        uint64_t v127 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v126 - 8) + 48);
        int v128 = v127(v422, 1, v126);
        unint64_t v103 = v420;
        if (v128 == 1)
        {
          if (dispatch thunk of WTStartupOptions.requestPromptEntry.getter())
          {
            swift_bridgeObjectRelease();
            sub_10000ED74(v421, v418, *((uint64_t *)&v418 + 1), (char)v423);
            uint64_t v129 = swift_allocObject();
            id v130 = v428;
            swift_unknownObjectWeakInit();
            uint64_t v107 = v427;
            unint64_t v131 = v419;
            uint64_t v105 = (uint64_t)v425;
            uint64_t v132 = sub_1000CF030(v427, v419, (uint64_t)v425, v381, v413);
            swift_bridgeObjectRelease();
            id v133 = objc_allocWithZone((Class)type metadata accessor for PromptEntryViewController());
            id v134 = v130;
            swift_retain();
            swift_retain();
            id v135 = sub_1000999FC((uint64_t)sub_1000D4FEC, v129, (uint64_t)v130, v132);
            id v136 = v417;
            [v417 setRootViewController:v135];
            id v109 = v136;
            swift_release();
            swift_release();

            unint64_t v104 = v424;
            id v108 = v414;
            goto LABEL_65;
          }
          unint64_t v104 = v424;
          if (v377)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_10000ED74(v421, v418, *((uint64_t *)&v418 + 1), (char)v423);
            os_log_type_t v163 = static os_log_type_t.debug.getter();
            v164 = v428;
            char v165 = Logger.logObject.getter();
            if (os_log_type_enabled(v165, v163))
            {
              v166 = (uint8_t *)swift_slowAlloc();
              v423 = (void *)swift_slowAlloc();
              *(_DWORD *)v166 = 138412290;
              uint64_t v421 = (uint64_t)(v166 + 4);
              p_Class isa = v164;
              char v167 = v164;
              unint64_t v104 = v424;
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              void *v423 = v164;

              unint64_t v103 = v420;
              _os_log_impl((void *)&_mh_execute_header, v165, v163, "SceneDelegate %@: creating QuestionnaireOnlyViewController with delegate=self", v166, 0xCu);
              sub_1000063C0(&qword_1001FED90);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {

              char v165 = v164;
            }
            uint64_t v189 = (uint64_t)v406;

            uint64_t v190 = swift_allocObject();
            swift_unknownObjectWeakInit();
            sub_100008DD4(v427, v189, (uint64_t *)&unk_1001FB400);
            if (v127((char *)v189, 1, v126) != 1)
            {
              id v191 = objc_allocWithZone((Class)type metadata accessor for QuestionnaireOnlyViewController());
              unint64_t v131 = v419;
              id v192 = v419;
              swift_retain();
              long long v193 = (void *)sub_1000BFA08((uint64_t)sub_1000D4FEC, v190, v189);
              swift_release();

              id v109 = v417;
              [v417 setRootViewController:v193];
              swift_release();

              uint64_t v105 = (uint64_t)v425;
              uint64_t v107 = v427;
              uint64_t v194 = (uint64_t)v422;
              id v108 = v414;
LABEL_66:
              [v109 makeKeyAndVisible];
              sub_10011E9C4();

              sub_10002784C(v105, (uint64_t *)&unk_1001FB400);
              sub_10002784C(v426, (uint64_t *)&unk_1001FB400);
              sub_10002784C(v107, (uint64_t *)&unk_1001FB400);
              sub_10002784C(v194, (uint64_t *)&unk_1001FB400);
              return;
            }
            goto LABEL_123;
          }
          if (v375)
          {
            swift_bridgeObjectRelease();
            sub_10000ED74(v421, v418, *((uint64_t *)&v418 + 1), (char)v423);
            id v175 = v428;
            if (qword_1001FAC30 != -1) {
              swift_once();
            }
            uint64_t v176 = sub_10000EBE8(v401, (uint64_t)qword_100212788);
            long long v177 = v175;
            long long v178 = Logger.logObject.getter();
            os_log_type_t v179 = static os_log_type_t.info.getter();
            BOOL v180 = os_log_type_enabled(v178, v179);
            v423 = v177;
            if (v180)
            {
              uint64_t v181 = swift_slowAlloc();
              uint64_t v421 = v176;
              uint64_t v182 = v181;
              long long v183 = (void *)swift_slowAlloc();
              p_Class isa = (void *)swift_slowAlloc();
              *(_DWORD *)uint64_t v182 = 138412546;
              v435 = v177;
              long long v184 = v177;
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              *long long v183 = v177;

              *(_WORD *)(v182 + 12) = 2080;
              long long v185 = (void *)v374;
              v435 = (void *)v374;
              type metadata accessor for WTFormSheetUIType(0);
              uint64_t v186 = String.init<A>(describing:)();
              v435 = (void *)sub_100021444(v186, v187, (uint64_t *)&p_isa);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease();
              _os_log_impl((void *)&_mh_execute_header, v178, v179, "SceneDelegate %@: creating form sheet presentation with view: %s", (uint8_t *)v182, 0x16u);
              sub_1000063C0(&qword_1001FED90);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();

              uint64_t v105 = (uint64_t)v425;
              uint64_t v107 = v427;
              uint64_t v188 = v413;
            }
            else
            {

              uint64_t v105 = (uint64_t)v425;
              uint64_t v107 = v427;
              uint64_t v188 = v413;
              long long v185 = (void *)v374;
            }
            if (v185 == (void *)2)
            {
              uint64_t v281 = v105;
              type metadata accessor for CompositionModel(0);
              sub_1000D4F6C((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
              v282 = (void *)Environment.init<A>(_:)();
              char v284 = v283;
              LOBYTE(v435) = 1;
              State.init(wrappedValue:)();
              char v285 = (char)p_isa;
              uint64_t v286 = v430;
              v435 = _swiftEmptyArrayStorage;
              sub_1000063C0((uint64_t *)&unk_1002048E0);
              State.init(wrappedValue:)();
              v287 = p_isa;
              uint64_t v288 = v430;
              p_Class isa = v282;
              LOBYTE(v430) = v284 & 1;
              LOBYTE(v431) = v285;
              uint64_t v432 = v286;
              v433 = v287;
              uint64_t v434 = v288;
              sub_1000CF030(v427, v419, v281, v381, v188);
              swift_bridgeObjectRelease();
              sub_1000D4F18();
              v289 = v391;
              View.environment<A>(_:)();
              swift_bridgeObjectRelease();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              uint64_t v290 = v387;
              (*(void (**)(char *, char *, uint64_t))(v392 + 16))(v386, v289, v387);
              id v291 = objc_allocWithZone((Class)sub_1000063C0(&qword_1002015D8));
              v292 = (void *)UIHostingController.init(rootView:)();
              UIHostingController.safeAreaRegions.setter();
              id v293 = [v292 view];
              if (v293)
              {
                v294 = v293;
                id v295 = [self clearColor];
                [v294 setBackgroundColor:v295];

                id v296 = [v292 view];
                unint64_t v103 = v420;
                unint64_t v104 = v424;
                id v108 = v414;
                if (v296)
                {
                  v297 = v296;
                  id v298 = [v296 layer];

                  [v298 setHitTestsAsOpaque:1];
                  (*(void (**)(char *, uint64_t))(v392 + 8))(v391, v290);
                  id v109 = v417;
                  [v417 setRootViewController:v292];

                  uint64_t v107 = v427;
                  unint64_t v131 = v419;
                  uint64_t v105 = (uint64_t)v425;
                  goto LABEL_65;
                }
                goto LABEL_147;
              }
LABEL_146:
              __break(1u);
LABEL_147:
              __break(1u);
              goto LABEL_148;
            }
            if (v185 == (void *)1)
            {
              uint64_t v432 = type metadata accessor for SceneDelegate();
              v433 = (void *)sub_1000D4F6C(&qword_1002015E0, (void (*)(uint64_t))type metadata accessor for SceneDelegate);
              p_Class isa = v423;
              v299 = v423;
              v300 = v382;
              GenerativeAssistantSettingsOnboarding.init(enablementDelegate:)();
              sub_1000CF030(v107, v419, v105, v381, v188);
              swift_bridgeObjectRelease();
              type metadata accessor for CompositionModel(0);
              sub_1000D4F6C(&qword_1002015E8, (void (*)(uint64_t))&type metadata accessor for GenerativeAssistantSettingsOnboarding);
              sub_1000D4F6C((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
              v301 = v388;
              uint64_t v302 = v385;
              View.environment<A>(_:)();
              swift_release();
              (*(void (**)(char *, uint64_t))(v384 + 8))(v300, v302);
              (*(void (**)(char *, char *, uint64_t))(v389 + 16))(v383, v301, v390);
              id v303 = objc_allocWithZone((Class)sub_1000063C0(&qword_1002015F0));
              long long v215 = (void *)UIHostingController.init(rootView:)();
              UIHostingController.safeAreaRegions.setter();
              id v304 = [v215 view];
              unint64_t v103 = v420;
              unint64_t v104 = v424;
              id v108 = v414;
              if (!v304)
              {
LABEL_148:
                __break(1u);
                goto LABEL_149;
              }
              v305 = v304;
              id v306 = [self clearColor];
              [v305 setBackgroundColor:v306];

              id v307 = [v215 view];
              if (!v307)
              {
LABEL_149:
                __break(1u);
LABEL_150:
                __break(1u);
                goto LABEL_151;
              }
              v308 = v307;
              id v309 = [v307 layer];

              [v309 setHitTestsAsOpaque:1];
              (*(void (**)(char *, uint64_t))(v389 + 8))(v388, v390);
            }
            else
            {
              unint64_t v103 = v420;
              unint64_t v104 = v424;
              id v108 = v414;
              if (v185)
              {
                swift_bridgeObjectRelease();
                v310 = Logger.logObject.getter();
                os_log_type_t v311 = static os_log_type_t.error.getter();
                if (os_log_type_enabled(v310, v311))
                {
                  v312 = (uint8_t *)swift_slowAlloc();
                  p_Class isa = (void *)swift_slowAlloc();
                  *(_DWORD *)v312 = 136315138;
                  v435 = v185;
                  type metadata accessor for WTFormSheetUIType(0);
                  uint64_t v313 = String.init<A>(describing:)();
                  v435 = (void *)sub_100021444(v313, v314, (uint64_t *)&p_isa);
                  uint64_t v105 = (uint64_t)v425;
                  unint64_t v103 = v420;
                  uint64_t v107 = v427;
                  UnsafeMutableRawBufferPointer.copyMemory(from:)();
                  unint64_t v104 = v424;
                  swift_bridgeObjectRelease();
                  _os_log_impl((void *)&_mh_execute_header, v310, v311, "No valid view assignment for enum: %s found.", v312, 0xCu);
                  swift_arrayDestroy();
                  swift_slowDealloc();
                  swift_slowDealloc();
                }

                id v315 = objc_allocWithZone((Class)sub_1000063C0((uint64_t *)&unk_1002015C0));
                long long v215 = (void *)UIHostingController.init(rootView:)();
                UIHostingController.safeAreaRegions.setter();
                id v316 = [v215 view];
                if (!v316) {
                  goto LABEL_150;
                }
                v317 = v316;
                id v318 = [self clearColor];
                [v317 setBackgroundColor:v318];

                id v219 = [v215 view];
                if (!v219)
                {
LABEL_151:
                  __break(1u);
                  return;
                }
              }
              else
              {
                swift_bridgeObjectRelease();
                id v214 = objc_allocWithZone((Class)sub_1000063C0((uint64_t *)&unk_1002015C0));
                long long v215 = (void *)UIHostingController.init(rootView:)();
                UIHostingController.safeAreaRegions.setter();
                id v216 = [v215 view];
                if (!v216)
                {
LABEL_144:
                  __break(1u);
                  goto LABEL_145;
                }
                long long v217 = v216;
                id v218 = [self clearColor];
                [v217 setBackgroundColor:v218];

                id v219 = [v215 view];
                if (!v219)
                {
LABEL_145:
                  __break(1u);
                  goto LABEL_146;
                }
              }
              v319 = v219;
              id v320 = [v219 layer];

              [v320 setHitTestsAsOpaque:1];
            }
            id v109 = v417;
            [v417 setRootViewController:v215];

            goto LABEL_64;
          }
          os_log_type_t v195 = static os_log_type_t.debug.getter();
          v416 = v428;
          long long v196 = Logger.logObject.getter();
          os_log_type_t v197 = v195;
          if (os_log_type_enabled(v196, v195))
          {
            long long v198 = (uint8_t *)swift_slowAlloc();
            v415 = (char *)swift_slowAlloc();
            *(_DWORD *)long long v198 = 138412290;
            long long v199 = v416;
            p_Class isa = &v416->isa;
            long long v200 = v416;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *(void *)v415 = v199;

            _os_log_impl((void *)&_mh_execute_header, v196, v197, "SceneDelegate %@: creating WritingToolsView with delegate=self", v198, 0xCu);
            sub_1000063C0(&qword_1001FED90);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {

            long long v196 = v416;
          }
          uint64_t v220 = v418;

          uint64_t v221 = v421;
          uint64_t v222 = *((void *)&v418 + 1);
          int v223 = (int)v423;
          sub_10000ED40(v421, v220, *((uint64_t *)&v418 + 1), (char)v423);
          uint64_t v224 = (uint64_t)v425;
          uint64_t v225 = v427;
          long long v226 = v419;
          uint64_t v411 = sub_1000CE0FC(v427, v419, v221, v220, v222, v223, v380 & 1, v379 & 1, v378, (uint64_t)v425, v381, v413);
          uint64_t v227 = v220;
          uint64_t v228 = v381;
          sub_10000ED74(v221, v227, v222, v223);
          uint64_t v229 = v224;
          uint64_t v230 = v413;
          uint64_t v410 = sub_1000CE984(v225, v226, v229, v228, v413);
          long long v231 = v428;
          uint64_t v232 = v372;
          long long v233 = *(void **)&v428[v372];
          if (!v233) {
            goto LABEL_127;
          }
          swift_retain();
          sub_1000CF030(v225, v226, (uint64_t)v425, v228, v230);
          swift_bridgeObjectRelease();
          uint64_t v234 = swift_getKeyPath();
          __chkstk_darwin(v234);
          p_Class isa = v233;
          sub_1000D4F6C((unint64_t *)&unk_1001FB3F0, (void (*)(uint64_t))type metadata accessor for WritingToolsModel);
          ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
          uint64_t v413 = 0;
          swift_release();
          swift_release();
          swift_release();
          if (!*(void *)&v231[v232])
          {
LABEL_128:
            __break(1u);
            goto LABEL_129;
          }
          uint64_t v235 = *(void *)&v231[v232];
          uint64_t v236 = v393;
          sub_100008DD4((uint64_t)v425, v393, (uint64_t *)&unk_1001FB400);
          v415 = v416;
          long long v237 = (char *)v421;
          long long v238 = v418;
          int v239 = (int)v423;
          sub_10000ED40(v421, v418, *((uint64_t *)&v418 + 1), (char)v423);
          uint64_t v240 = (uint64_t)v414;
          id v241 = v414;
          uint64_t v242 = v411;
          swift_retain();
          uint64_t v243 = v410;
          swift_retain();
          swift_retain();
          id v244 = v419;
          uint64_t v370 = v242;
          uint64_t v245 = v394;
          WritingToolsView.init(writingToolsDelegate:writingToolsModel:requestedMode:hostAppAuditToken:prompt:smartReplyConfiguration:isForEditableContent:wantsInlineEditing:allowedResultOptions:rewritingModel:proofreadingModel:analyticsUUID:)((uint64_t)v416, v235, v237, v238, *((uint64_t *)&v238 + 1), v239, v244, v373, v394, v412, v240, v380 & 1, v379 & 1, v378, v370, v243, v236);
          uint64_t v246 = type metadata accessor for WritingToolsView();
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v246 - 8) + 56))(v245, 0, 1, v246);
          unsigned __int8 v247 = v415;
          uint64_t v248 = (uint64_t)&v415[OBJC_IVAR____TtC21WritingToolsUIService13SceneDelegate_writingToolsView];
          swift_beginAccess();
          sub_1000D4D9C(v245, v248);
          swift_endAccess();
          uint64_t v249 = v395;
          sub_100008DD4(v248, v395, &qword_100201588);
          uint64_t v250 = *(void **)((char *)v247 + OBJC_IVAR____TtC21WritingToolsUIService13SceneDelegate_commonUIManager);
          uint64_t v251 = type metadata accessor for CommonUIManager();
          unint64_t v252 = sub_1000D4E04();
          uint64_t v253 = sub_1000D4F6C((unint64_t *)&qword_1001FAE20, (void (*)(uint64_t))type metadata accessor for CommonUIManager);
          uint64_t v254 = v397;
          uint64_t v255 = (void *)v396;
          View.environment<A>(_:)();
          sub_10002784C(v249, &qword_100201588);
          type metadata accessor for PresentationModel();
          swift_retain();
          p_Class isa = v255;
          uint64_t v430 = v251;
          unint64_t v431 = v252;
          uint64_t v432 = v253;
          swift_getOpaqueTypeConformance2();
          uint64_t v256 = v403;
          uint64_t v257 = v400;
          View.environment<A>(_:)();
          swift_release();
          (*(void (**)(char *, uint64_t))(v399 + 8))(v254, v257);
          (*(void (**)(char *, char *, uint64_t))(v404 + 16))(v398, v256, v405);
          id v258 = objc_allocWithZone((Class)sub_1000063C0(&qword_1002015B8));
          uint64_t v259 = (void *)UIHostingController.init(rootView:)();
          UIHostingController.safeAreaRegions.setter();
          id v260 = [v259 view];
          if (!v260)
          {
LABEL_129:
            __break(1u);
            goto LABEL_130;
          }
          long long v261 = v260;
          id v262 = [self clearColor];
          [v261 setBackgroundColor:v262];

          id v263 = [v259 view];
          if (!v263)
          {
LABEL_130:
            __break(1u);
            goto LABEL_131;
          }
          uint64_t v264 = v263;
          id v265 = [v263 layer];

          [v265 setHitTestsAsOpaque:1];
          id v266 = [v259 view];
          uint64_t v267 = v421;
          v268 = v415;
          if (!v266)
          {
LABEL_131:
            __break(1u);
            goto LABEL_132;
          }
          v269 = v266;
          [v266 setTranslatesAutoresizingMaskIntoConstraints:0];

          uint64_t v270 = OBJC_IVAR____TtC21WritingToolsUIService13SceneDelegate_rootViewController;
          id v271 = [*(id *)((char *)v268 + OBJC_IVAR____TtC21WritingToolsUIService13SceneDelegate_rootViewController) view];
          if (!v271)
          {
LABEL_132:
            __break(1u);
            goto LABEL_133;
          }
          v272 = v271;
          id v273 = [v259 view];
          if (!v273)
          {
LABEL_133:
            __break(1u);
            goto LABEL_134;
          }
          v274 = v273;
          [v272 addSubview:v273];

          [*(id *)((char *)v268 + v270) addChildViewController:v259];
          v275 = *(void **)((char *)v268 + v270);
          if ((_BYTE)v423)
          {
            if (v423 != 1)
            {
              if (*((void *)&v418 + 1) | (unint64_t)v418 | v267) {
                [v275 setModalInPresentation:1];
              }
              else {
                [v275 setModalInPresentation:0];
              }
LABEL_103:
              id v321 = [*(id *)((char *)v268 + v270) view];
              if (v321)
              {
                v322 = v321;
                id v323 = [v321 bottomAnchor];

                id v324 = [v259 view];
                if (v324)
                {
                  v325 = v324;
                  uint64_t v421 = v253;
                  id v326 = [v324 bottomAnchor];

                  id v327 = [v323 constraintEqualToAnchor:v326];
                  v328 = *(void **)((char *)v268
                                  + OBJC_IVAR____TtC21WritingToolsUIService13SceneDelegate_hostingControllerBottomConstraint);
                  *(void *)((char *)v268
                            + OBJC_IVAR____TtC21WritingToolsUIService13SceneDelegate_hostingControllerBottomConstraint) = v327;

                  v423 = v259;
                  id v329 = [v259 view];
                  if (v329)
                  {
                    v330 = v329;
                    id v331 = [v329 heightAnchor];

                    id v332 = [v331 constraintEqualToConstant:2000.0];
                    uint64_t v333 = OBJC_IVAR____TtC21WritingToolsUIService13SceneDelegate_hostingControllerHeightConstraint;
                    v334 = *(void **)((char *)v268
                                    + OBJC_IVAR____TtC21WritingToolsUIService13SceneDelegate_hostingControllerHeightConstraint);
                    *(void *)((char *)v268
                              + OBJC_IVAR____TtC21WritingToolsUIService13SceneDelegate_hostingControllerHeightConstraint) = v332;

                    sub_1000063C0(&qword_1001FAFD0);
                    uint64_t v335 = swift_allocObject();
                    *(_OWORD *)(v335 + 16) = xmmword_100189610;
                    id v336 = [*(id *)((char *)v268 + v270) view];
                    if (v336)
                    {
                      v337 = v336;
                      id v338 = [v336 leadingAnchor];

                      id v339 = [v423 view];
                      if (v339)
                      {
                        v340 = v339;
                        id v341 = [v339 leadingAnchor];

                        id v342 = [v338 constraintEqualToAnchor:v341];
                        *(void *)(v335 + 32) = v342;
                        id v343 = [*(id *)&v415[v270] view];
                        if (v343)
                        {
                          v344 = v343;
                          id v345 = [v343 trailingAnchor];

                          id v346 = [v423 view];
                          if (v346)
                          {
                            v347 = v346;
                            id v348 = [v346 trailingAnchor];

                            id v349 = [v345 constraintEqualToAnchor:v348];
                            *(void *)(v335 + 40) = v349;
                            id v350 = [*(id *)&v415[v270] view];
                            if (v350)
                            {
                              v351 = v350;
                              id v352 = [v350 topAnchor];

                              id v353 = [v423 view];
                              if (v353)
                              {
                                v354 = v353;
                                id v355 = [v353 topAnchor];

                                id v356 = [v352 constraintEqualToAnchor:v355];
                                *(void *)(v335 + 48) = v356;
                                v357 = v415;
                                v358 = *(void **)&v415[v333];
                                if (v358)
                                {
                                  v359 = self;
                                  *(void *)(v335 + 56) = v358;
                                  p_Class isa = (void *)v335;
                                  specialized Array._endMutation()();
                                  sub_1000085FC(0, (unint64_t *)&qword_1001FAFD8);
                                  id v360 = v358;
                                  Class isa = Array._bridgeToObjectiveC()().super.isa;
                                  swift_bridgeObjectRelease();
                                  [v359 activateConstraints:isa];

                                  id v362 = v417;
                                  [v417 setRootViewController:*(void *)((char *)v357 + v270)];
                                  v363 = *(void **)((char *)v357 + v270);
                                  uint64_t v364 = swift_getKeyPath();
                                  __chkstk_darwin(v364);
                                  p_Class isa = v250;
                                  id v365 = v363;
                                  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
                                  swift_release();

                                  uint64_t v366 = swift_getKeyPath();
                                  __chkstk_darwin(v366);
                                  p_Class isa = v250;
                                  id v367 = v362;
                                  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
                                  swift_release();

                                  uint64_t v368 = swift_getKeyPath();
                                  __chkstk_darwin(v368);
                                  p_Class isa = v250;
                                  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
                                  swift_release();
                                  uint64_t v369 = swift_getKeyPath();
                                  __chkstk_darwin(v369);
                                  p_Class isa = v250;
                                  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
                                  swift_release();
                                  swift_release();

                                  swift_release();
                                  id v109 = v362;
                                  (*(void (**)(char *, uint64_t))(v404 + 8))(v403, v405);
                                  uint64_t v194 = (uint64_t)v422;
                                  unint64_t v104 = v424;
                                  uint64_t v105 = (uint64_t)v425;
                                  uint64_t v107 = v427;
                                  unint64_t v131 = v419;
                                  unint64_t v103 = v420;
                                  id v108 = v414;
                                  goto LABEL_66;
                                }
                                goto LABEL_143;
                              }
LABEL_142:
                              __break(1u);
LABEL_143:
                              __break(1u);
                              goto LABEL_144;
                            }
LABEL_141:
                            __break(1u);
                            goto LABEL_142;
                          }
LABEL_140:
                          __break(1u);
                          goto LABEL_141;
                        }
LABEL_139:
                        __break(1u);
                        goto LABEL_140;
                      }
LABEL_138:
                      __break(1u);
                      goto LABEL_139;
                    }
LABEL_137:
                    __break(1u);
                    goto LABEL_138;
                  }
LABEL_136:
                  __break(1u);
                  goto LABEL_137;
                }
LABEL_135:
                __break(1u);
                goto LABEL_136;
              }
LABEL_134:
              __break(1u);
              goto LABEL_135;
            }
            id v276 = v275;
            [v276 setModalInPresentation:1];
            uint64_t v277 = v267;
            uint64_t v279 = *((void *)&v418 + 1);
            uint64_t v278 = v418;
            char v280 = 1;
          }
          else
          {
            id v276 = v275;
            [v276 setModalInPresentation:1];
            uint64_t v277 = v267;
            uint64_t v279 = *((void *)&v418 + 1);
            uint64_t v278 = v418;
            char v280 = 0;
          }
          sub_10000ED74(v277, v278, v279, v280);

          goto LABEL_103;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_10000ED74(v421, v418, *((uint64_t *)&v418 + 1), (char)v423);
        uint64_t v137 = swift_allocObject();
        swift_unknownObjectWeakInit();
        uint64_t v138 = v416;
        sub_100008DD4(v427, (uint64_t)v416, (uint64_t *)&unk_1001FB400);
        if (v127((char *)v138, 1, v126) != 1)
        {
          unint64_t v139 = v415;
          sub_100008DD4((uint64_t)v422, (uint64_t)v415, (uint64_t *)&unk_1001FB400);
          int v140 = v127(v139, 1, v126);
          unint64_t v104 = v424;
          uint64_t v105 = (uint64_t)v425;
          id v108 = v414;
          uint64_t v141 = v408;
          if (v140 != 1)
          {
            sub_100008DD4(v426, v408, (uint64_t *)&unk_1001FB400);
            if (v127((char *)v141, 1, v126) != 1)
            {
              id v142 = objc_allocWithZone((Class)type metadata accessor for SuggestionViewController());
              unint64_t v131 = v419;
              id v143 = v419;
              swift_retain();
              id v144 = sub_10000838C((uint64_t)sub_1000D4FEC, v137, (uint64_t)v416, v143, (uint64_t)v415, v141);
              swift_release();

              id v109 = v417;
              [v417 setRootViewController:v144];
              swift_release();

              uint64_t v107 = v427;
              goto LABEL_65;
            }
            goto LABEL_118;
          }
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
          goto LABEL_119;
        }
LABEL_116:
        __break(1u);
        goto LABEL_117;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_116;
  }
}

id sub_1000D447C(void *a1)
{
  id v2 = [a1 sourceBundleIdentifier];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v6 = v5;
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v6 = 0;
  }
  uint64_t v7 = self;
  id v8 = [v7 mainBundle];
  id v9 = [v8 bundleIdentifier];

  if (v9)
  {
    uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v12 = v11;

    if (v6)
    {
      if (v12)
      {
        if (v4 == v10 && v6 == v12) {
          goto LABEL_25;
        }
        char v14 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v14) {
          goto LABEL_33;
        }
LABEL_17:
        id v15 = [a1 hostBundleIdentifier];
        if (v15)
        {
          uint64_t v16 = v15;
          uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v19 = v18;
        }
        else
        {
          uint64_t v17 = 0;
          uint64_t v19 = 0;
        }
        id v20 = [v7 mainBundle];
        id v21 = [v20 bundleIdentifier];

        if (v21)
        {
          uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v24 = v23;

          if (v19)
          {
            if (v24)
            {
              if (v17 == v22 && v19 == v24)
              {
LABEL_25:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                goto LABEL_33;
              }
              char v27 = _stringCompareWithSmolCheck(_:_:expecting:)();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (v27) {
                goto LABEL_33;
              }
LABEL_30:
              unsigned int v25 = [a1 isLocal];
              id result = [a1 isFloating];
              if (!v25) {
                return result;
              }
              goto LABEL_34;
            }
          }
          else if (!v24)
          {
            goto LABEL_33;
          }
        }
        else if (!v19)
        {
          goto LABEL_33;
        }
        swift_bridgeObjectRelease();
        goto LABEL_30;
      }
LABEL_16:
      swift_bridgeObjectRelease();
      goto LABEL_17;
    }
    if (v12) {
      goto LABEL_16;
    }
  }
  else if (v6)
  {
    goto LABEL_16;
  }
LABEL_33:
  id result = [a1 isFloating];
LABEL_34:
  if ((result & 1) == 0) {
    return [a1 keyboardPositionWithIAV:0.0, 0.0, 0.0, 0.0];
  }
  return result;
}

void sub_1000D4718()
{
}

uint64_t sub_1000D4744()
{
  return sub_100136B70(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

void sub_1000D4774()
{
  sub_10011D978(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32));
}

uint64_t sub_1000D4794()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000D47CC()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

void sub_1000D47DC(uint64_t a1)
{
  sub_1000CC064(a1, *(void *)(v1 + 16));
}

uint64_t sub_1000D47E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (qword_1001FADF0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  if (!*(void *)(qword_100212BA0 + 16)) {
    return swift_endAccess();
  }
  sub_100007B70(a1);
  if ((v6 & 1) == 0) {
    return swift_endAccess();
  }
  swift_endAccess();
  swift_retain();
  sub_1001696B4(a2, a3);
  return swift_release();
}

void sub_1000D48B8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  char v6 = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  id v8 = (char *)v25 - v7;
  if (qword_1001FACD8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v9 = qword_1002128C8;
  if (*(void *)(qword_1002128C8 + 16) && (unint64_t v10 = sub_100007B70(a1), (v11 & 1) != 0))
  {
    uint64_t v12 = *(void *)(*(void *)(v9 + 56) + 8 * v10);
    swift_retain();
  }
  else
  {
    uint64_t v12 = 0;
  }
  swift_endAccess();
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v13(v8, a1, v2);
  if (v12) {
    goto LABEL_8;
  }
  if (qword_1001FAC80 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v15 = qword_100212838;
  if (*(void *)(qword_100212838 + 16))
  {
    unint64_t v16 = sub_100007B70((uint64_t)v8);
    if (v17)
    {
      uint64_t v12 = *(void *)(*(void *)(v15 + 56) + 8 * v16);
      swift_endAccess();
      swift_retain();
LABEL_8:
      (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
      uint64_t KeyPath = swift_getKeyPath();
      __chkstk_darwin(KeyPath);
      v25[-2] = v12;
      LOBYTE(v25[-1]) = 1;
      v26[0] = v12;
      sub_1000D4F6C((unint64_t *)&qword_1001FD2A0, (void (*)(uint64_t))type metadata accessor for ToolModel);
      ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
      swift_release();
      swift_release();
      return;
    }
  }
  swift_endAccess();
  uint64_t v18 = *(void (**)(char *, uint64_t))(v3 + 8);
  v18(v8, v2);
  if (qword_1001FAC30 != -1) {
    swift_once();
  }
  uint64_t v19 = type metadata accessor for Logger();
  sub_10000EBE8(v19, (uint64_t)qword_100212788);
  v13(v6, a1, v2);
  id v20 = Logger.logObject.getter();
  os_log_type_t v21 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = (uint8_t *)swift_slowAlloc();
    v26[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v22 = 136315138;
    v25[0] = v22 + 4;
    sub_1000D4F6C((unint64_t *)&unk_100201560, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v23 = dispatch thunk of CustomStringConvertible.description.getter();
    v25[2] = sub_100021444(v23, v24, v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    v18(v6, v2);
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "didDismissInputWarningForSessionWithUUID: no model found for UUID [%s]", v22, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    v18(v6, v2);
  }
}

uint64_t sub_1000D4D9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000063C0(&qword_100201588);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_1000D4E04()
{
  unint64_t result = qword_1002015A8;
  if (!qword_1002015A8)
  {
    sub_100006C14(&qword_100201588);
    sub_1000D4F6C(&qword_1002015B0, (void (*)(uint64_t))type metadata accessor for WritingToolsView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002015A8);
  }
  return result;
}

uint64_t sub_1000D4EB0()
{
  return sub_10011E15C();
}

uint64_t sub_1000D4ED4()
{
  return sub_10011DD5C();
}

uint64_t sub_1000D4EF8()
{
  return sub_10011DBB8(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

unint64_t sub_1000D4F18()
{
  unint64_t result = qword_1002015D0;
  if (!qword_1002015D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002015D0);
  }
  return result;
}

uint64_t sub_1000D4F6C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000D4FB4()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1000D4FEC(double a1, double a2)
{
}

void sub_1000D5008(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_1000D502C()
{
  return sub_1000BA8DC();
}

void sub_1000D5044()
{
}

uint64_t sub_1000D50A0()
{
  return sub_100097598();
}

uint64_t sub_1000D50B8()
{
  return sub_1000D08D4();
}

void sub_1000D50D0()
{
}

uint64_t sub_1000D50E8()
{
  return sub_1000270D8();
}

uint64_t sub_1000D5100()
{
  return sub_1000270B4();
}

uint64_t sub_1000D5118()
{
  return sub_10002708C();
}

uint64_t sub_1000D5130()
{
  return sub_1000D4744();
}

uint64_t sub_1000D5148()
{
  return sub_1000D0924();
}

uint64_t sub_1000D5160()
{
  uint64_t v0 = type metadata accessor for Locale();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v1 - 8);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  return String.init(localized:table:bundle:locale:comment:)();
}

BOOL static WTIcon.__derived_enum_equals(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_1000D543C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (!a4) {
    return qword_1001900C0[(char)a1];
  }
  if (a4 == 1) {
    return 10;
  }
  if (a4 == 2 && a1 == 2 && !(a3 | a2)) {
    return 11;
  }
  return 0;
}

uint64_t sub_1000D5490@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  switch(a1)
  {
    case 1:
      uint64_t v3 = (unsigned int *)&enum case for TextCompositionClient.RewritingType.proofreading(_:);
      break;
    case 2:
      uint64_t v3 = (unsigned int *)&enum case for TextCompositionClient.RewritingType.concise(_:);
      break;
    case 3:
      uint64_t v3 = (unsigned int *)&enum case for TextCompositionClient.RewritingType.friendly(_:);
      break;
    case 4:
      uint64_t v3 = (unsigned int *)&enum case for TextCompositionClient.RewritingType.professional(_:);
      break;
    case 5:
      uint64_t v3 = (unsigned int *)&enum case for TextCompositionClient.RewritingType.openEnded(_:);
      break;
    case 6:
      _StringGuts.grow(_:)(22);
      swift_bridgeObjectRelease();
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
      JUMPOUT(0x1000D55F8);
    case 7:
      uint64_t v3 = (unsigned int *)&enum case for TextCompositionClient.RewritingType.takeaways(_:);
      break;
    case 8:
      uint64_t v3 = (unsigned int *)&enum case for TextCompositionClient.RewritingType.bullets(_:);
      break;
    case 9:
      uint64_t v3 = (unsigned int *)&enum case for TextCompositionClient.RewritingType.tables(_:);
      break;
    default:
      uint64_t v3 = (unsigned int *)&enum case for TextCompositionClient.RewritingType.magic(_:);
      break;
  }
  uint64_t v4 = *v3;
  uint64_t v5 = type metadata accessor for TextCompositionClient.RewritingType();
  char v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104);

  return v6(a2, v4, v5);
}

void CompositionMode.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a3 == 1)
  {
    Hasher._combine(_:)(1uLL);
  }
  else
  {
    Swift::UInt8 v6 = a4 & 1;
    Hasher._combine(_:)(0);
    if (a3)
    {
      Hasher._combine(_:)(1u);
      swift_bridgeObjectRetain();
      String.hash(into:)();
      sub_10000ED94(a2, a3);
    }
    else
    {
      Hasher._combine(_:)(0);
    }
    Hasher._combine(_:)(v6);
  }
}

Swift::Int CompositionMode.hashValue.getter(uint64_t a1, uint64_t a2, char a3)
{
  if (a2 == 1)
  {
    Hasher._combine(_:)(1uLL);
  }
  else
  {
    Hasher._combine(_:)(0);
    if (a2)
    {
      Hasher._combine(_:)(1u);
      swift_bridgeObjectRetain();
      String.hash(into:)();
      sub_10000ED94(a1, a2);
    }
    else
    {
      Hasher._combine(_:)(0);
    }
    Hasher._combine(_:)(a3 & 1);
  }
  return Hasher._finalize()();
}

Swift::Int sub_1000D5794()
{
  return CompositionMode.hashValue.getter(*(void *)v0, *(void *)(v0 + 8), *(unsigned char *)(v0 + 16));
}

void sub_1000D57A0()
{
  uint64_t v1 = *(void *)(v0 + 8);
  if (v1 == 1)
  {
    Hasher._combine(_:)(1uLL);
  }
  else
  {
    uint64_t v2 = *(void *)v0;
    char v3 = *(unsigned char *)(v0 + 16);
    Hasher._combine(_:)(0);
    if (v1)
    {
      Hasher._combine(_:)(1u);
      swift_bridgeObjectRetain();
      String.hash(into:)();
      sub_10000ED94(v2, v1);
    }
    else
    {
      Hasher._combine(_:)(0);
    }
    Hasher._combine(_:)(v3 & 1);
  }
}

Swift::Int sub_1000D5848()
{
  uint64_t v2 = *(void *)v0;
  uint64_t v1 = *(void *)(v0 + 8);
  char v3 = *(unsigned char *)(v0 + 16);
  Hasher.init(_seed:)();
  if (v1 == 1)
  {
    Hasher._combine(_:)(1uLL);
  }
  else
  {
    Hasher._combine(_:)(0);
    if (v1)
    {
      Hasher._combine(_:)(1u);
      swift_bridgeObjectRetain();
      String.hash(into:)();
      sub_10000ED94(v2, v1);
    }
    else
    {
      Hasher._combine(_:)(0);
    }
    Hasher._combine(_:)(v3 & 1);
  }
  return Hasher._finalize()();
}

BOOL sub_1000D590C(uint64_t a1, uint64_t a2)
{
  return _s21WritingToolsUIService15CompositionModeO21__derived_enum_equalsySbAC_ACtFZ_0(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(unsigned char *)(a2 + 16));
}

void WTIcon.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
}

Swift::Int WTIcon.hashValue.getter(unsigned __int8 a1)
{
  return Hasher._finalize()();
}

void Mode.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5)
  {
    if (a5 == 1)
    {
      Hasher._combine(_:)(3uLL);
      if (a3 != 1)
      {
        Hasher._combine(_:)(0);
        if (a3)
        {
          Hasher._combine(_:)(1u);
          swift_bridgeObjectRetain();
          String.hash(into:)();
          sub_10000ED74(a2, a3, a4, 1);
        }
        else
        {
          Hasher._combine(_:)(0);
        }
        Swift::UInt8 v9 = a4 & 1;
        goto LABEL_20;
      }
    }
    else
    {
      if (!(a4 | a3 | a2))
      {
        Swift::UInt v8 = 0;
        goto LABEL_17;
      }
      if (a2 != 1 || a4 | a3)
      {
        Swift::UInt v8 = 4;
        goto LABEL_17;
      }
    }
    Swift::UInt v8 = 1;
LABEL_17:
    Hasher._combine(_:)(v8);
    return;
  }
  Hasher._combine(_:)(2uLL);
  Hasher._combine(_:)(a2);
  if (!a4)
  {
    Swift::UInt8 v9 = 0;
LABEL_20:
    Hasher._combine(_:)(v9);
    return;
  }
  Hasher._combine(_:)(1u);
  swift_bridgeObjectRetain();
  String.hash(into:)();

  sub_10000ED74(a2, a3, a4, 0);
}

Swift::Int Mode.hashValue.getter(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  Hasher.init(_seed:)();
  if (a4)
  {
    if (a4 == 1)
    {
      Hasher._combine(_:)(3uLL);
      if (a2 != 1)
      {
        Hasher._combine(_:)(0);
        if (a2)
        {
          Hasher._combine(_:)(1u);
          swift_bridgeObjectRetain();
          String.hash(into:)();
          sub_10000ED74(a1, a2, a3, 1);
        }
        else
        {
          Hasher._combine(_:)(0);
        }
        Swift::UInt8 v9 = a3 & 1;
        goto LABEL_18;
      }
    }
    else
    {
      if (!(a3 | a2 | a1))
      {
        Swift::UInt v8 = 0;
        goto LABEL_15;
      }
      if (a1 != 1 || a3 | a2)
      {
        Swift::UInt v8 = 4;
        goto LABEL_15;
      }
    }
    Swift::UInt v8 = 1;
LABEL_15:
    Hasher._combine(_:)(v8);
    return Hasher._finalize()();
  }
  Hasher._combine(_:)(2uLL);
  Hasher._combine(_:)(a1);
  if (!a3)
  {
    Swift::UInt8 v9 = 0;
LABEL_18:
    Hasher._combine(_:)(v9);
    return Hasher._finalize()();
  }
  Hasher._combine(_:)(1u);
  swift_bridgeObjectRetain();
  String.hash(into:)();
  sub_10000ED74(a1, a2, a3, 0);
  return Hasher._finalize()();
}

Swift::Int sub_1000D5C54()
{
  return Mode.hashValue.getter(*(void *)v0, *(void *)(v0 + 8), *(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

void sub_1000D5C64(uint64_t a1)
{
  Mode.hash(into:)(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), *(unsigned char *)(v1 + 24));
}

Swift::Int sub_1000D5C74()
{
  uint64_t v1 = *(void *)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  uint64_t v3 = *(void *)(v0 + 16);
  int v4 = *(unsigned __int8 *)(v0 + 24);
  Hasher.init(_seed:)();
  if (v4)
  {
    if (v4 == 1)
    {
      Hasher._combine(_:)(3uLL);
      if (v2 != 1)
      {
        Hasher._combine(_:)(0);
        if (v2)
        {
          Hasher._combine(_:)(1u);
          swift_bridgeObjectRetain();
          String.hash(into:)();
          sub_10000ED74(v1, v2, v3, 1);
        }
        else
        {
          Hasher._combine(_:)(0);
        }
        Swift::UInt8 v6 = v3 & 1;
        goto LABEL_18;
      }
    }
    else
    {
      if (!(v3 | v2 | v1))
      {
        Swift::UInt v5 = 0;
        goto LABEL_15;
      }
      if (v1 != 1 || v3 | v2)
      {
        Swift::UInt v5 = 4;
        goto LABEL_15;
      }
    }
    Swift::UInt v5 = 1;
LABEL_15:
    Hasher._combine(_:)(v5);
    return Hasher._finalize()();
  }
  Hasher._combine(_:)(2uLL);
  Hasher._combine(_:)(v1);
  if (!v3)
  {
    Swift::UInt8 v6 = 0;
LABEL_18:
    Hasher._combine(_:)(v6);
    return Hasher._finalize()();
  }
  Hasher._combine(_:)(1u);
  swift_bridgeObjectRetain();
  String.hash(into:)();
  sub_10000ED74(v1, v2, v3, 0);
  return Hasher._finalize()();
}

uint64_t sub_1000D5DDC(uint64_t a1, uint64_t a2)
{
  return _s21WritingToolsUIService4ModeO21__derived_enum_equalsySbAC_ACtFZ_0(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24), *(void *)a2, *(void *)(a2 + 8), *(void *)(a2 + 16), *(unsigned char *)(a2 + 24));
}

BOOL _s21WritingToolsUIService15CompositionModeO21__derived_enum_equalsySbAC_ACtFZ_0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if (a2 == 1) {
    return a5 == 1;
  }
  if (a5 == 1) {
    return 0;
  }
  if (a2)
  {
    if (a5)
    {
      if (a1 != a4 || a2 != a5)
      {
        char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
        char v10 = 0;
        if ((v9 & 1) == 0) {
          return v10 & 1;
        }
      }
      goto LABEL_14;
    }
  }
  else
  {
    if (!a5)
    {
LABEL_14:
      char v10 = ((a3 & 1) == 0) ^ a6;
      return v10 & 1;
    }
    sub_10000ED94(a1, 0);
  }
  char v10 = 0;
  return v10 & 1;
}

uint64_t _s21WritingToolsUIService4ModeO21__derived_enum_equalsySbAC_ACtFZ_0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  int v8 = a7;
  int v9 = a3;
  if (a4)
  {
    if (a4 == 1)
    {
      if (a8 == 1)
      {
        if (a2 == 1) {
          return a6 == 1;
        }
        if (a6 != 1)
        {
          if (a2)
          {
            if (!a6) {
              return 0;
            }
            if (a1 != a5 || a2 != a6) {
              return (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0 && ((v9 ^ v8) & 1) == 0;
            }
          }
          else if (a6)
          {
            sub_10000ED74(a1, 0, a3, 1);
            return 0;
          }
          if ((a3 & 1) == (a7 & 1)) {
            return 1;
          }
        }
      }
    }
    else
    {
      if (!(a3 | a2 | a1)) {
        return a8 == 2 && !(a7 | a6 | a5);
      }
      if (a1 != 1 || a3 | a2)
      {
        if (a8 != 2 || a5 != 2) {
          return 0;
        }
      }
      else if (a8 != 2 || a5 != 1)
      {
        return 0;
      }
      if (!(a7 | a6)) {
        return 1;
      }
    }
  }
  else
  {
    if (a8 || a5 != a1) {
      return 0;
    }
    if (a3) {
      return a7 && (a2 == a6 && a3 == a7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0);
    }
    if (!a7) {
      return 1;
    }
  }
  return 0;
}

unint64_t sub_1000D6034()
{
  unint64_t result = qword_100201730;
  if (!qword_100201730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100201730);
  }
  return result;
}

unint64_t sub_1000D608C()
{
  unint64_t result = qword_100201738;
  if (!qword_100201738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100201738);
  }
  return result;
}

unint64_t sub_1000D60E4()
{
  unint64_t result = qword_100201740;
  if (!qword_100201740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100201740);
  }
  return result;
}

unint64_t destroy for CompositionMode(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  int v2 = -1;
  if (result < 0xFFFFFFFF) {
    int v2 = result;
  }
  if (v2 - 1 < 0) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s21WritingToolsUIService15CompositionModeOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  LODWORD(v4) = -1;
  if (v3 < 0xFFFFFFFF) {
    uint64_t v4 = *(void *)(a2 + 8);
  }
  if ((int)v4 - 1 < 0)
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  }
  return a1;
}

uint64_t assignWithCopy for CompositionMode(uint64_t a1, long long *a2)
{
  LODWORD(v4) = -1;
  if (*(void *)(a1 + 8) >= 0xFFFFFFFFuLL) {
    LODWORD(v5) = -1;
  }
  else {
    uint64_t v5 = *(void *)(a1 + 8);
  }
  int v6 = v5 - 1;
  if (*((void *)a2 + 1) < 0xFFFFFFFFuLL) {
    uint64_t v4 = *((void *)a2 + 1);
  }
  int v7 = v4 - 1;
  if (v6 < 0)
  {
    if (v7 < 0)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *((void *)a2 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
      return a1;
    }
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  if ((v7 & 0x80000000) == 0)
  {
LABEL_11:
    long long v8 = *a2;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    *(_OWORD *)a1 = v8;
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *((void *)a2 + 1);
  *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

__n128 initializeWithTake for CompositionMode(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for CompositionMode(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a1 + 8);
  int v5 = -1;
  if (v4 < 0xFFFFFFFF) {
    int v5 = v4;
  }
  if (v5 - 1 < 0)
  {
    unint64_t v6 = *(void *)(a2 + 8);
    LODWORD(v7) = -1;
    if (v6 < 0xFFFFFFFF) {
      uint64_t v7 = *(void *)(a2 + 8);
    }
    if ((int)v7 - 1 < 0)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v6;
      swift_bridgeObjectRelease();
      goto LABEL_9;
    }
    swift_bridgeObjectRelease();
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_9:
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for CompositionMode(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  if ((v4 + 1) >= 2) {
    return v4;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for CompositionMode(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)__n128 result = 0;
    *(void *)(result + 8) = 0;
    *(unsigned char *)(result + 16) = 0;
    *(_DWORD *)__n128 result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 1;
    }
  }
  return result;
}

uint64_t sub_1000D63CC(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  int v2 = v1 - 1;
  if (v2 < 0) {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1000D63F0(uint64_t result, unsigned int a2)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
  }
  else if (a2)
  {
    *(void *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for CompositionMode()
{
  return &type metadata for CompositionMode;
}

uint64_t getEnumTagSinglePayload for RewriteType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF7) {
    goto LABEL_17;
  }
  if (a2 + 9 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 9) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 9;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xA;
  int v8 = v6 - 10;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for RewriteType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *__n128 result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000D658CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RewriteType()
{
  return &type metadata for RewriteType;
}

uint64_t destroy for Mode(uint64_t a1)
{
  return sub_10000ED74(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
}

uint64_t initializeWithCopy for Mode(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_10000ED40(*(void *)a2, v4, v5, v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for Mode(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_10000ED40(*(void *)a2, v4, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  char v10 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v6;
  sub_10000ED74(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for Mode(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  char v8 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v4;
  sub_10000ED74(v5, v7, v6, v8);
  return a1;
}

uint64_t sub_1000D66F8(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 24) <= 1u) {
    return *(unsigned __int8 *)(a1 + 24);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_1000D6710(uint64_t result, unsigned int a2)
{
  uint64_t v2 = a2 - 2;
  if (a2 >= 2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    LOBYTE(a2) = 2;
    *(void *)__n128 result = v2;
  }
  *(unsigned char *)(result + 24) = a2;
  return result;
}

ValueMetadata *type metadata accessor for Mode()
{
  return &type metadata for Mode;
}

uint64_t sub_1000D673C(uint64_t result, uint64_t a2)
{
  switch(result)
  {
    case 1:
      return result;
    case 2:
      __n128 result = 0;
      break;
    case 3:
      __n128 result = 1;
      break;
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 20:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
    case 63:
    case 64:
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
    case 71:
    case 72:
    case 73:
    case 74:
    case 75:
    case 76:
    case 77:
    case 78:
    case 79:
    case 80:
    case 81:
    case 82:
    case 83:
    case 84:
    case 85:
    case 86:
    case 87:
    case 88:
    case 89:
    case 90:
    case 91:
    case 92:
    case 93:
    case 94:
    case 95:
    case 96:
    case 97:
    case 98:
    case 99:
    case 100:
      goto LABEL_5;
    case 11:
      __n128 result = 3;
      break;
    case 12:
      __n128 result = 4;
      break;
    case 13:
    case 101:
      __n128 result = 2;
      break;
    case 19:
      swift_bridgeObjectRetain();
      __n128 result = 5;
      break;
    case 21:
      __n128 result = 6;
      break;
    case 22:
      __n128 result = 7;
      break;
    case 23:
      __n128 result = 8;
      break;
    case 24:
      __n128 result = 9;
      break;
    default:
      if (result == 201)
      {
        swift_bridgeObjectRetain();
        __n128 result = a2;
      }
      else
      {
LABEL_5:
        __n128 result = 0;
      }
      break;
  }
  return result;
}

uint64_t sub_1000D6A3C@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1000E9680((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__state);
  return result;
}

uint64_t sub_1000D6AEC()
{
  return swift_release();
}

uint64_t sub_1000D6BBC@<X0>(uint64_t *a1@<X8>)
{
  swift_getKeyPath();
  sub_1000E9680((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  *a1 = result;
  return result;
}

uint64_t sub_1000D6C70()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_1000D6D50@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1000E9680((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__isFeatureEnabled);
  return result;
}

uint64_t sub_1000D6E00()
{
  return swift_release();
}

uint64_t sub_1000D6ED0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v63 = a1;
  uint64_t v64 = type metadata accessor for TaskPriority();
  uint64_t v62 = *(void *)(v64 - 8);
  __chkstk_darwin(v64);
  uint64_t v61 = (char *)&v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CompositionView(0);
  uint64_t v5 = v4 - 8;
  uint64_t v55 = *(uint64_t (**)(uint64_t))(v4 - 8);
  uint64_t OpaqueTypeConformance2 = *((void *)v55 + 8);
  __chkstk_darwin(v4);
  uint64_t v66 = (uint64_t)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = type metadata accessor for ContainerBackgroundPlacement();
  uint64_t v7 = *(void *)(v53 - 8);
  __chkstk_darwin(v53);
  uint64_t v9 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000063C0(&qword_100201848);
  __chkstk_darwin(v10);
  uint64_t v12 = (uint64_t *)((char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v67 = sub_1000063C0(&qword_100201850);
  uint64_t v56 = *(void *)(v67 - 8);
  __chkstk_darwin(v67);
  char v14 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1000063C0(&qword_100201858);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v57 = v15;
  uint64_t v58 = v16;
  __chkstk_darwin(v15);
  uint64_t v65 = (char *)&v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1000063C0(&qword_100201860);
  uint64_t v59 = *(void *)(v18 - 8);
  uint64_t v60 = v18;
  __chkstk_darwin(v18);
  uint64_t v68 = (char *)&v51 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t *v12 = static Alignment.center.getter();
  v12[1] = v20;
  uint64_t v21 = sub_1000063C0(&qword_100201868);
  sub_1000D7718(v1, (uint64_t *)((char *)v12 + *(int *)(v21 + 44)));
  uint64_t v69 = static Color.clear.getter();
  static ContainerBackgroundPlacement.navigation.getter();
  uint64_t v22 = sub_100027F2C(&qword_100201870, &qword_100201848);
  View.containerBackground<A>(_:for:)();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v53);
  swift_release();
  sub_10002784C((uint64_t)v12, &qword_100201848);
  uint64_t v23 = v1 + *(int *)(v5 + 44);
  char v24 = *(unsigned char *)v23;
  unsigned int v25 = *(void **)(v23 + 8);
  LOBYTE(v23) = *(unsigned char *)(v23 + 16);
  LOBYTE(v69) = v24;
  char v70 = v25;
  LOBYTE(v71) = v23;
  sub_1000063C0(&qword_1001FB608);
  FocusState.wrappedValue.getter();
  uint64_t v26 = v66;
  sub_1000E98F0(v2, v66, type metadata accessor for CompositionView);
  unint64_t v27 = (*((unsigned __int8 *)v55 + 80) + 16) & ~(unint64_t)*((unsigned __int8 *)v55 + 80);
  uint64_t v28 = swift_allocObject();
  uint64_t v55 = type metadata accessor for CompositionView;
  sub_1000E99F0(v26, v28 + v27, type metadata accessor for CompositionView);
  uint64_t v69 = v10;
  char v70 = &type metadata for Color;
  uint64_t v71 = v22;
  uint64_t v72 = &protocol witness table for Color;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v29 = v67;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v14, v29);
  LOBYTE(v29) = *(unsigned char *)(v2 + 32);
  uint64_t v52 = v2;
  uint64_t v30 = swift_retain();
  uint64_t v31 = sub_100020F7C(v30, v29);
  swift_release();
  swift_getKeyPath();
  uint64_t v69 = v31;
  sub_1000E9680((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  LODWORD(v26) = *(unsigned __int8 *)(v31 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__state);
  swift_release();
  BOOL v73 = v26 == 1;
  uint64_t v32 = v2;
  uint64_t v33 = v66;
  sub_1000E98F0(v32, v66, type metadata accessor for CompositionView);
  uint64_t v34 = swift_allocObject();
  uint64_t v35 = v55;
  sub_1000E99F0(v33, v34 + v27, v55);
  uint64_t v69 = v67;
  char v70 = &type metadata for Bool;
  uint64_t v71 = OpaqueTypeConformance2;
  uint64_t v72 = &protocol witness table for Bool;
  swift_getOpaqueTypeConformance2();
  uint64_t v36 = v57;
  uint64_t v37 = v65;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v37, v36);
  sub_1000E98F0(v52, v33, type metadata accessor for CompositionView);
  uint64_t v38 = swift_allocObject();
  sub_1000E99F0(v33, v38 + v27, v35);
  uint64_t v39 = v61;
  static TaskPriority.userInitiated.getter();
  uint64_t v40 = sub_1000063C0((uint64_t *)&unk_100201888);
  uint64_t v41 = v63;
  uint64_t v42 = (char *)(v63 + *(int *)(v40 + 36));
  uint64_t v43 = type metadata accessor for _TaskModifier();
  uint64_t v44 = v62;
  uint64_t v45 = v64;
  (*(void (**)(char *, char *, uint64_t))(v62 + 16))(&v42[*(int *)(v43 + 20)], v39, v64);
  *(void *)uint64_t v42 = &unk_100201880;
  *((void *)v42 + 1) = v38;
  uint64_t v47 = v59;
  uint64_t v46 = v60;
  uint64_t v48 = v41;
  uint64_t v49 = v68;
  (*(void (**)(uint64_t, char *, uint64_t))(v59 + 16))(v48, v68, v60);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v39, v45);
  return (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v49, v46);
}

uint64_t sub_1000D7718@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v35 = a2;
  uint64_t v42 = sub_1000063C0(&qword_1002018A0);
  uint64_t v37 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v36 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_1000063C0(&qword_1002018A8);
  uint64_t v39 = *(void *)(v41 - 8);
  __chkstk_darwin(v41);
  uint64_t v38 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000063C0(&qword_1002018B0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v40 = (char *)&v29 - v10;
  uint64_t v34 = static SafeAreaRegions.all.getter();
  int v33 = static Edge.Set.all.getter();
  uint64_t v11 = a1 + *(int *)(type metadata accessor for CompositionView(0) + 36);
  uint64_t v12 = *(void *)(v11 + 8);
  char v13 = *(unsigned char *)(v11 + 16);
  LOBYTE(v43) = *(unsigned char *)v11;
  uint64_t v44 = v12;
  char v45 = v13;
  uint64_t v29 = sub_1000063C0(&qword_1001FB608);
  FocusState.wrappedValue.getter();
  if (v46)
  {
    uint64_t v32 = 0;
    uint64_t v30 = 0;
    int v31 = 0;
  }
  else
  {
    if (qword_1001FAD28 != -1) {
      swift_once();
    }
    uint64_t v32 = qword_1002129D0;
    swift_retain();
    int v31 = static Edge.Set.vertical.getter();
    uint64_t v30 = static SafeAreaRegions.all.getter();
  }
  uint64_t v14 = sub_1000D7C54();
  __chkstk_darwin(v14);
  *(&v29 - 2) = a1;
  static Axis.Set.vertical.getter();
  sub_1000063C0(&qword_1002018B8);
  sub_1000EDA34(&qword_1002018C0, &qword_1002018B8, (void (*)(void))sub_1000E96F0, (void (*)(void))sub_1000E980C);
  uint64_t v15 = v36;
  ScrollView.init(_:showsIndicators:content:)();
  uint64_t v16 = sub_100027F2C(&qword_100201900, &qword_1002018A0);
  uint64_t v17 = v38;
  uint64_t v18 = v42;
  View.defaultScrollAnchor(_:)();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v15, v18);
  uint64_t v19 = *(void *)(v11 + 8);
  char v20 = *(unsigned char *)(v11 + 16);
  LOBYTE(v43) = *(unsigned char *)v11;
  uint64_t v44 = v19;
  char v45 = v20;
  FocusState.wrappedValue.getter();
  uint64_t v43 = v18;
  uint64_t v44 = v16;
  swift_getOpaqueTypeConformance2();
  uint64_t v21 = v41;
  View.scrollDisabled(_:)();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v17, v21);
  uint64_t v22 = v40;
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v40, v9, v5);
  uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
  v23(v9, v22, v5);
  char v24 = v35;
  *uint64_t v35 = v34;
  *((unsigned char *)v24 + 8) = v33;
  uint64_t v25 = v30;
  void v24[2] = v32;
  v24[3] = v25;
  *((unsigned char *)v24 + 32) = v31;
  uint64_t v26 = sub_1000063C0(&qword_100201908);
  v23((char *)v24 + *(int *)(v26 + 64), v9, v5);
  unint64_t v27 = *(void (**)(char *, uint64_t))(v6 + 8);
  swift_retain();
  v27(v22, v5);
  v27(v9, v5);
  return swift_release();
}

uint64_t sub_1000D7C54()
{
  id v0 = [self currentDevice];
  id v1 = [v0 userInterfaceIdiom];

  if (v1 == (id)6 || v1 == (id)1)
  {
  }
  else
  {
    type metadata accessor for CompositionView(0);
    sub_1000063C0(&qword_1001FB608);
    FocusState.wrappedValue.getter();
    if (v4 == 1) {
      return static UnitPoint.bottom.getter();
    }
  }
  return static UnitPoint.top.getter();
}

uint64_t sub_1000D7D44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v90 = a2;
  uint64_t v79 = (char *)sub_1000063C0(&qword_100201910);
  __chkstk_darwin(v79);
  uint64_t v81 = (uint64_t)&v78 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = type metadata accessor for CompositionResponseView();
  __chkstk_darwin(v80);
  uint64_t v5 = (char *)&v78 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000063C0(&qword_1002018F0);
  __chkstk_darwin(v6);
  id v82 = (char *)&v78 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000063C0(&qword_100201918);
  __chkstk_darwin(v8);
  uint64_t v10 = (int *)((char *)&v78 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v87 = (int *)type metadata accessor for CompositionIndexView(0);
  uint64_t v11 = __chkstk_darwin(v87);
  char v13 = (char *)&v78 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v83 = (uint64_t)&v78 - v14;
  uint64_t v84 = sub_1000063C0(&qword_100201920);
  __chkstk_darwin(v84);
  uint64_t v85 = (uint64_t)&v78 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1000063C0(&qword_1001FB438);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v78 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for CompositionConfirmView(0);
  __chkstk_darwin(v19);
  uint64_t v78 = (uint64_t)&v78 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1000063C0(&qword_1002018D0);
  __chkstk_darwin(v21);
  id v86 = (char *)&v78 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v23 = *(void *)(a1 + 8);
  uint64_t v88 = v19;
  uint64_t v89 = v8;
  if (!v23) {
    goto LABEL_11;
  }
  if (v23 == 1)
  {
    uint64_t v24 = (uint64_t)v18;
    id v86 = (char *)v21;
    id v87 = v10;
    char v25 = *(unsigned char *)(a1 + 32);
    uint64_t v26 = swift_retain();
    uint64_t v27 = sub_100020F7C(v26, v25);
    swift_release();
    swift_getKeyPath();
    *(void *)&long long v91 = v27;
    sub_1000E9680((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    if (*(unsigned char *)(v27 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__isForEditableContent) == 1)
    {
      swift_getKeyPath();
      *(void *)&long long v91 = v27;
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      char v28 = *(unsigned char *)(v27 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__wantsInlineEditing);
      swift_release();
      if (v28)
      {
        uint64_t v29 = (char *)(a1 + *(int *)(type metadata accessor for CompositionView(0) + 36));
        char v30 = *v29;
        unint64_t v31 = *((void *)v29 + 1);
        LOBYTE(v29) = v29[16];
        LOBYTE(v93) = v30;
        unint64_t v94 = v31;
        char v95 = (char)v29;
        sub_1000063C0(&qword_1001FB608);
        FocusState.projectedValue.getter();
        uint64_t v33 = *((void *)&v91 + 1);
        uint64_t v32 = v91;
        char v34 = v92;
        Binding.projectedValue.getter();
        type metadata accessor for CommonUIManager();
        sub_1000E9680((unint64_t *)&qword_1001FAE20, (void (*)(uint64_t))type metadata accessor for CommonUIManager);
        uint64_t v35 = Environment.init<A>(_:)();
        uint64_t v37 = v78;
        sub_1000D8A88(v35, v36 & 1, v32, v33, v34, v24, v78);
        sub_1000E98F0(v37, v81, type metadata accessor for CompositionConfirmView);
        swift_storeEnumTagMultiPayload();
        sub_1000E9680(&qword_1002018F8, (void (*)(uint64_t))type metadata accessor for CompositionResponseView);
        sub_1000E9680(&qword_1002018D8, (void (*)(uint64_t))type metadata accessor for CompositionConfirmView);
        uint64_t v38 = (uint64_t)v82;
        _ConditionalContent<>.init(storage:)();
        uint64_t v39 = type metadata accessor for CompositionConfirmView;
        uint64_t v40 = v37;
LABEL_15:
        sub_1000E9960(v40, v39);
        BOOL v73 = &qword_1002018F0;
        sub_100008DD4(v38, (uint64_t)v87, &qword_1002018F0);
        swift_storeEnumTagMultiPayload();
        sub_1000E96F0();
        sub_1000E980C();
        _ConditionalContent<>.init(storage:)();
        uint64_t v74 = v38;
        return sub_10002784C(v74, v73);
      }
    }
    else
    {
      swift_release();
    }
    type metadata accessor for CompositionView(0);
    Binding.projectedValue.getter();
    type metadata accessor for CommonUIManager();
    sub_1000E9680((unint64_t *)&qword_1001FAE20, (void (*)(uint64_t))type metadata accessor for CommonUIManager);
    uint64_t v75 = Environment.init<A>(_:)();
    sub_100062788(v75, v76 & 1, (uint64_t)v18, (uint64_t)v5);
    sub_1000E98F0((uint64_t)v5, v81, (uint64_t (*)(void))type metadata accessor for CompositionResponseView);
    swift_storeEnumTagMultiPayload();
    sub_1000E9680(&qword_1002018F8, (void (*)(uint64_t))type metadata accessor for CompositionResponseView);
    sub_1000E9680(&qword_1002018D8, (void (*)(uint64_t))type metadata accessor for CompositionConfirmView);
    uint64_t v38 = (uint64_t)v82;
    _ConditionalContent<>.init(storage:)();
    uint64_t v39 = (uint64_t (*)(void))type metadata accessor for CompositionResponseView;
    uint64_t v40 = (uint64_t)v5;
    goto LABEL_15;
  }
  if ((v23 & 0x2000000000000000) != 0 ? HIBYTE(v23) & 0xF : *(void *)a1 & 0xFFFFFFFFFFFFLL)
  {
    uint64_t v42 = (char *)(a1 + *(int *)(type metadata accessor for CompositionView(0) + 36));
    char v43 = *v42;
    unint64_t v44 = *((void *)v42 + 1);
    LOBYTE(v42) = v42[16];
    LOBYTE(v93) = v43;
    unint64_t v94 = v44;
    char v95 = (char)v42;
    sub_1000063C0(&qword_1001FB608);
    FocusState.projectedValue.getter();
    long long v45 = v91;
    LODWORD(v83) = v92;
    Binding.projectedValue.getter();
    type metadata accessor for CommonUIManager();
    sub_1000E9680((unint64_t *)&qword_1001FAE20, (void (*)(uint64_t))type metadata accessor for CommonUIManager);
    uint64_t v46 = Environment.init<A>(_:)();
    uint64_t v48 = v78;
    sub_1000D8A88(v46, v47 & 1, v45, *((uint64_t *)&v45 + 1), v83, (uint64_t)v18, v78);
    sub_1000E98F0(v48, v85, type metadata accessor for CompositionConfirmView);
    swift_storeEnumTagMultiPayload();
    sub_1000E9680(&qword_1002018D8, (void (*)(uint64_t))type metadata accessor for CompositionConfirmView);
    sub_1000E9680(&qword_1002018E0, (void (*)(uint64_t))type metadata accessor for CompositionIndexView);
    uint64_t v49 = (uint64_t)v86;
    _ConditionalContent<>.init(storage:)();
    uint64_t v50 = type metadata accessor for CompositionConfirmView;
  }
  else
  {
LABEL_11:
    uint64_t v51 = (char *)(a1 + *(int *)(type metadata accessor for CompositionView(0) + 36));
    char v52 = *v51;
    unint64_t v53 = *((void *)v51 + 1);
    LOBYTE(v51) = v51[16];
    LOBYTE(v93) = v52;
    unint64_t v94 = v53;
    char v95 = (char)v51;
    sub_1000063C0(&qword_1001FB608);
    FocusState.projectedValue.getter();
    uint64_t v81 = *((void *)&v91 + 1);
    id v82 = (char *)v91;
    LODWORD(v80) = v92;
    Binding.projectedValue.getter();
    type metadata accessor for WritingToolsModel();
    sub_1000E9680((unint64_t *)&unk_1001FB3F0, (void (*)(uint64_t))type metadata accessor for WritingToolsModel);
    uint64_t v54 = Environment.init<A>(_:)();
    uint64_t v79 = v18;
    char v56 = v55;
    type metadata accessor for CompositionModel(0);
    sub_1000E9680((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
    uint64_t v57 = Environment.init<A>(_:)();
    char v59 = v58;
    type metadata accessor for PresentationModel();
    sub_1000E9680((unint64_t *)&qword_1001FB410, (void (*)(uint64_t))type metadata accessor for PresentationModel);
    uint64_t v60 = Environment.init<A>(_:)();
    uint64_t v61 = v10;
    char v63 = v62;
    uint64_t KeyPath = swift_getKeyPath();
    *(void *)char v13 = v54;
    v13[8] = v56 & 1;
    *((void *)v13 + 2) = v57;
    v13[24] = v59 & 1;
    *((void *)v13 + 4) = v60;
    char v65 = v63 & 1;
    uint64_t v10 = v61;
    v13[40] = v65;
    *((void *)v13 + 6) = KeyPath;
    *((void *)v13 + 7) = 0;
    v13[64] = 0;
    uint64_t v66 = v87;
    uint64_t v67 = (uint64_t *)&v13[v87[8]];
    uint64_t *v67 = swift_getKeyPath();
    sub_1000063C0((uint64_t *)&unk_1001FBC30);
    swift_storeEnumTagMultiPayload();
    uint64_t v68 = &v13[v66[9]];
    uint64_t v93 = 0;
    unint64_t v94 = 0xE000000000000000;
    State.init(wrappedValue:)();
    uint64_t v69 = v92;
    *(_OWORD *)uint64_t v68 = v91;
    *((void *)v68 + 2) = v69;
    char v70 = &v13[v66[10]];
    uint64_t v71 = v81;
    *(void *)char v70 = v82;
    *((void *)v70 + 1) = v71;
    v70[16] = v80;
    sub_100026FD0((uint64_t)v79, (uint64_t)&v13[v66[11]], &qword_1001FB438);
    uint64_t v72 = (uint64_t)v13;
    uint64_t v48 = v83;
    sub_1000E99F0(v72, v83, type metadata accessor for CompositionIndexView);
    sub_1000E98F0(v48, v85, type metadata accessor for CompositionIndexView);
    swift_storeEnumTagMultiPayload();
    sub_1000E9680(&qword_1002018D8, (void (*)(uint64_t))type metadata accessor for CompositionConfirmView);
    sub_1000E9680(&qword_1002018E0, (void (*)(uint64_t))type metadata accessor for CompositionIndexView);
    uint64_t v49 = (uint64_t)v86;
    _ConditionalContent<>.init(storage:)();
    uint64_t v50 = type metadata accessor for CompositionIndexView;
  }
  sub_1000E9960(v48, v50);
  BOOL v73 = &qword_1002018D0;
  sub_100008DD4(v49, (uint64_t)v10, &qword_1002018D0);
  swift_storeEnumTagMultiPayload();
  sub_1000E96F0();
  sub_1000E980C();
  _ConditionalContent<>.init(storage:)();
  uint64_t v74 = v49;
  return sub_10002784C(v74, v73);
}

double sub_1000D8A88@<D0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v14 = sub_1000063C0((uint64_t *)&unk_1001FAE40);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CompositionModel(0);
  sub_1000E9680((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  *(void *)a7 = Environment.init<A>(_:)();
  *(unsigned char *)(a7 + 8) = v17 & 1;
  type metadata accessor for PresentationModel();
  sub_1000E9680((unint64_t *)&qword_1001FB410, (void (*)(uint64_t))type metadata accessor for PresentationModel);
  *(void *)(a7 + 16) = Environment.init<A>(_:)();
  *(unsigned char *)(a7 + 24) = v18 & 1;
  *(void *)(a7 + 32) = a1;
  *(unsigned char *)(a7 + 40) = a2 & 1;
  LOBYTE(v28) = 0;
  State.init(wrappedValue:)();
  uint64_t v19 = *((void *)&v30 + 1);
  *(unsigned char *)(a7 + 48) = v30;
  *(void *)(a7 + 56) = v19;
  *(void *)(a7 + 64) = a3;
  *(void *)(a7 + 72) = a4;
  *(unsigned char *)(a7 + 80) = a5;
  uint64_t v20 = type metadata accessor for FBKSEvaluation.Subject();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v16, 1, 1, v20);
  id v21 = objc_allocWithZone((Class)type metadata accessor for FBKEvaluationController());
  uint64_t v28 = FBKEvaluationController.init(subject:)();
  State.init(wrappedValue:)();
  uint64_t v22 = *((void *)&v30 + 1);
  *(void *)(a7 + 88) = v30;
  *(void *)(a7 + 96) = v22;
  uint64_t v23 = type metadata accessor for CompositionConfirmView(0);
  sub_100026FD0(a6, a7 + *(int *)(v23 + 40), &qword_1001FB438);
  uint64_t v24 = a7 + *(int *)(v23 + 44);
  uint64_t v28 = 0;
  unint64_t v29 = 0xE000000000000000;
  State.init(wrappedValue:)();
  double result = *(double *)&v30;
  uint64_t v26 = v31;
  *(_OWORD *)uint64_t v24 = v30;
  *(void *)(v24 + 16) = v26;
  return result;
}

uint64_t sub_1000D8CF8(uint64_t a1)
{
  char v1 = *(unsigned char *)(a1 + 32);
  uint64_t v2 = swift_retain();
  sub_100020F7C(v2, v1);
  swift_release();
  swift_getKeyPath();
  sub_1000E9680((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  swift_release();
  if (Strong)
  {
    type metadata accessor for CompositionView(0);
    sub_1000063C0(&qword_1001FB608);
    FocusState.wrappedValue.getter();
    [Strong enableIntelligentEntryFieldView:v7];
    swift_unknownObjectRelease();
  }
  uint64_t v4 = swift_retain();
  sub_100020F7C(v4, v1);
  swift_release();
  swift_getKeyPath();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v5 = (void *)swift_unknownObjectWeakLoadStrong();
  swift_release();
  if (v5)
  {
    [v5 resetPresentationSelectedDetent];
    swift_unknownObjectRelease();
  }
  type metadata accessor for CompositionView(0);
  sub_1000063C0(&qword_1001FB608);
  FocusState.wrappedValue.getter();
  sub_1000063C0(&qword_100201898);
  return Binding.wrappedValue.setter();
}

uint64_t sub_1000D8F54(uint64_t a1)
{
  uint64_t v1 = a1;
  char v2 = *(unsigned char *)(a1 + 48);
  uint64_t v3 = swift_retain();
  sub_100020A44(v3, v2);
  swift_release();
  LOBYTE(v1) = *(unsigned char *)(v1 + 32);
  uint64_t v4 = swift_retain();
  sub_100020F7C(v4, v1);
  swift_release();
  swift_getKeyPath();
  sub_1000E9680((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_release();
  swift_getKeyPath();
  sub_1000E9680((unint64_t *)&qword_1001FAE20, (void (*)(uint64_t))type metadata accessor for CommonUIManager);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  return swift_release();
}

uint64_t sub_1000D90F8(uint64_t a1)
{
  *(void *)(v1 + 24) = a1;
  type metadata accessor for MainActor();
  *(void *)(v1 + 32) = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1000D9190, v3, v2);
}

uint64_t sub_1000D9190()
{
  uint64_t v1 = v0[3];
  swift_release();
  LOBYTE(v1) = *(unsigned char *)(v1 + 32);
  uint64_t v2 = swift_retain();
  uint64_t v3 = sub_100020F7C(v2, v1);
  swift_release();
  swift_getKeyPath();
  v0[2] = v3;
  sub_1000E9680((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (swift_unknownObjectWeakLoadStrong())
  {
    type metadata accessor for SceneDelegate();
    if (swift_dynamicCastClass())
    {
      id v4 = [self activeKeyboardSceneDelegate];
      if ([v4 respondsToSelector:"setHideSystemInputAssistantViewForWritingTools:"]) {
        [v4 setHideSystemInputAssistantViewForWritingTools:1];
      }
    }
    swift_unknownObjectRelease();
  }
  swift_release();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

BOOL sub_1000D9320()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for CompositionIndexView(0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = v0 + *(int *)(v3 + 48);
  uint64_t v7 = *(void *)v6;
  uint64_t v8 = *(void *)(v6 + 8);
  LOBYTE(v6) = *(unsigned char *)(v6 + 16);
  v14[1] = v7;
  v14[2] = v8;
  char v15 = v6;
  sub_1000063C0(&qword_1001FC910);
  FocusState.Binding.wrappedValue.getter();
  int v9 = v16;
  sub_1000E98F0(v1, (uint64_t)v5, type metadata accessor for CompositionIndexView);
  if (v9 == 1)
  {
    char v10 = v5[40];
    uint64_t v11 = swift_retain();
    sub_100020FBC(v11, v10);
    swift_release();
    BOOL v12 = sub_100136B78();
    swift_release();
  }
  else
  {
    BOOL v12 = 0;
  }
  sub_1000E9960((uint64_t)v5, type metadata accessor for CompositionIndexView);
  return v12;
}

uint64_t sub_1000D9450(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v38 = a1;
  uint64_t v39 = a2;
  uint64_t v4 = type metadata accessor for CompositionIndexView(0);
  uint64_t v36 = *(void *)(v4 - 8);
  uint64_t v37 = v4;
  uint64_t v5 = *(void *)(v36 + 64);
  __chkstk_darwin(v4);
  uint64_t v6 = sub_1000063C0(&qword_1001FF820);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v9 = *(unsigned char *)(v2 + 24);
  uint64_t v10 = swift_retain();
  uint64_t v11 = sub_100020F7C(v10, v9);
  swift_release();
  swift_getKeyPath();
  *(void *)&long long v41 = v11;
  sub_1000E9680((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v12 = *(void *)(v11 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__analyticsInstance);
  swift_retain();
  swift_release();
  if (v12)
  {
    uint64_t v13 = swift_retain();
    uint64_t v14 = sub_100020F7C(v13, v9);
    swift_release();
    swift_getKeyPath();
    *(void *)&long long v41 = v14;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    char v15 = *(unsigned char *)(v14 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__inclusionPolicy);
    swift_release();
    sub_10000BFB0(0, 1, 0, 1, v38, v39, 0, 0, v15);
    swift_release();
  }
  uint64_t v16 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v8, 1, 1, v16);
  sub_1000E98F0(v3, (uint64_t)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CompositionIndexView);
  type metadata accessor for MainActor();
  uint64_t v17 = v39;
  swift_bridgeObjectRetain();
  uint64_t v18 = static MainActor.shared.getter();
  unint64_t v19 = (*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = v18;
  *(void *)(v20 + 24) = &protocol witness table for MainActor;
  sub_1000E99F0((uint64_t)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v20 + v19, type metadata accessor for CompositionIndexView);
  id v21 = (void *)(v20 + ((v5 + v19 + 7) & 0xFFFFFFFFFFFFFFF8));
  *id v21 = v38;
  v21[1] = v17;
  sub_1001228D0((uint64_t)v8, (uint64_t)&unk_100201E88, v20);
  swift_release();
  uint64_t v22 = v37;
  uint64_t v23 = v3 + *(int *)(v37 + 36);
  long long v24 = *(_OWORD *)v23;
  uint64_t v25 = *(void *)(v23 + 16);
  long long v41 = v24;
  uint64_t v42 = v25;
  uint64_t v44 = 0;
  unint64_t v45 = 0xE000000000000000;
  sub_1000063C0(&qword_1001FF890);
  State.wrappedValue.setter();
  uint64_t v26 = v3 + *(int *)(v22 + 40);
  uint64_t v27 = *(void *)v26;
  uint64_t v28 = *(void *)(v26 + 8);
  char v29 = *(unsigned char *)(v26 + 16);
  *(void *)&long long v41 = *(void *)v26;
  *((void *)&v41 + 1) = v28;
  LOBYTE(v42) = v29;
  sub_1000063C0(&qword_1001FC910);
  FocusState.Binding.wrappedValue.getter();
  if (v44 == 1)
  {
    *(void *)&long long v41 = v27;
    *((void *)&v41 + 1) = v28;
    LOBYTE(v42) = v29;
    swift_retain();
    swift_retain();
    FocusState.Binding.wrappedValue.getter();
    *(void *)&long long v41 = v27;
    *((void *)&v41 + 1) = v28;
    LOBYTE(v42) = v29;
    BOOL v40 = (v44 & 1) == 0;
    FocusState.Binding.wrappedValue.setter();
    swift_release();
    swift_release();
  }
  uint64_t v30 = *(void *)(v3 + 48);
  uint64_t v31 = *(void *)(v3 + 56);
  char v32 = *(unsigned char *)(v3 + 64);
  sub_1000EA1F0();
  uint64_t v33 = (void (*)(long long *))sub_1000211E0(v30, v31, v32);
  sub_100027F70();
  long long v41 = xmmword_10018C770;
  uint64_t v42 = 0;
  char v43 = 1;
  v33(&v41);
  return swift_release();
}

uint64_t sub_1000D98F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  v6[5] = type metadata accessor for MainActor();
  v6[6] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v6[7] = v8;
  v6[8] = v7;
  return _swift_task_switch(sub_1000D9998, v8, v7);
}

uint64_t sub_1000D9998()
{
  char v1 = *(unsigned char *)(v0[2] + 24);
  uint64_t v2 = swift_retain();
  v0[9] = sub_100020F7C(v2, v1);
  swift_release();
  v0[10] = static MainActor.shared.getter();
  uint64_t v3 = (void *)swift_task_alloc();
  v0[11] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1000D9A70;
  uint64_t v5 = v0[3];
  uint64_t v4 = v0[4];
  return sub_100070E18(v5, v4);
}

uint64_t sub_1000D9A70()
{
  swift_task_dealloc();
  uint64_t v1 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1000D9BAC, v1, v0);
}

uint64_t sub_1000D9BAC()
{
  swift_release();
  swift_release();
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = *(void *)(v0 + 64);
  return _swift_task_switch(sub_10001EC60, v1, v2);
}

uint64_t sub_1000D9C18@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v107 = a1;
  uint64_t v3 = type metadata accessor for NavigationBarItem.TitleDisplayMode();
  uint64_t v105 = *(void *)(v3 - 8);
  uint64_t v106 = v3;
  __chkstk_darwin(v3);
  unint64_t v104 = (char *)&v71 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = sub_1000063C0(&qword_1001FB438);
  __chkstk_darwin(v102);
  unint64_t v103 = (char *)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for NSNotificationCenter.Publisher();
  uint64_t v98 = *(void *)(v6 - 8);
  uint64_t v99 = v6;
  __chkstk_darwin(v6);
  char v95 = (char *)&v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = type metadata accessor for ScenePhase();
  uint64_t v88 = *(void *)(v89 - 8);
  __chkstk_darwin(v89);
  uint64_t v82 = (uint64_t)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = type metadata accessor for TaskPriority();
  uint64_t v9 = *(void *)(v79 - 8);
  __chkstk_darwin(v79);
  uint64_t v11 = (char *)&v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = type metadata accessor for CompositionIndexView(0);
  uint64_t v12 = *(void *)(v109 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  __chkstk_darwin(v109);
  uint64_t v14 = sub_1000063C0(&qword_100201CE0);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v71 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1000063C0(&qword_100201CE8);
  __chkstk_darwin(v17);
  uint64_t v80 = (char *)&v71 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = sub_1000063C0(&qword_100201CF0);
  uint64_t v86 = *(void *)(v87 - 8);
  __chkstk_darwin(v87);
  uint64_t v81 = (char *)&v71 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = sub_1000063C0(&qword_100201CF8);
  __chkstk_darwin(v83);
  uint64_t v85 = (char *)&v71 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = sub_1000063C0(&qword_100201D00);
  __chkstk_darwin(v84);
  uint64_t v90 = (uint64_t)&v71 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = sub_1000063C0(&qword_100201D08);
  __chkstk_darwin(v93);
  long long v91 = (char *)&v71 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = sub_1000063C0(&qword_100201D10);
  uint64_t v94 = *(void *)(v97 - 8);
  __chkstk_darwin(v97);
  uint64_t v92 = (char *)&v71 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_1000063C0(&qword_100201D18);
  uint64_t v100 = *(void *)(v24 - 8);
  uint64_t v101 = v24;
  __chkstk_darwin(v24);
  uint64_t v96 = (char *)&v71 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1001FAD20 != -1) {
    swift_once();
  }
  uint64_t v26 = *((void *)&xmmword_1002129C0 + 1);
  *(void *)uint64_t v16 = static HorizontalAlignment.center.getter();
  *((void *)v16 + 1) = v26;
  v16[16] = 0;
  uint64_t v27 = sub_1000063C0(&qword_100201D20);
  sub_1000DA988(v2, &v16[*(int *)(v27 + 44)]);
  uint64_t v74 = type metadata accessor for CompositionIndexView;
  sub_1000E98F0(v2, (uint64_t)&v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CompositionIndexView);
  uint64_t v28 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v29 = (v28 + 16) & ~v28;
  uint64_t v73 = v28 | 7;
  uint64_t v78 = v29 + v13;
  uint64_t v30 = swift_allocObject();
  uint64_t v77 = v29;
  uint64_t v72 = (uint64_t)&v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v108 = type metadata accessor for CompositionIndexView;
  sub_1000E99F0(v72, v30 + v29, type metadata accessor for CompositionIndexView);
  static TaskPriority.userInitiated.getter();
  uint64_t v31 = *(int *)(v17 + 36);
  uint64_t v75 = v17;
  uint64_t v32 = (uint64_t)v16;
  uint64_t v33 = v2;
  uint64_t v34 = (uint64_t)v80;
  uint64_t v35 = &v80[v31];
  uint64_t v36 = type metadata accessor for _TaskModifier();
  uint64_t v37 = v79;
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(&v35[*(int *)(v36 + 20)], v11, v79);
  *(void *)uint64_t v35 = &unk_100201D30;
  *((void *)v35 + 1) = v30;
  sub_100008DD4(v32, v34, &qword_100201CE0);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v37);
  sub_10002784C(v32, &qword_100201CE0);
  uint64_t v76 = v33;
  uint64_t v38 = v82;
  sub_10002140C(v82);
  uint64_t v39 = v72;
  BOOL v40 = v74;
  sub_1000E98F0(v33, v72, v74);
  uint64_t v41 = swift_allocObject();
  sub_1000E99F0(v39, v41 + v29, v108);
  sub_1000ED6CC();
  sub_1000E9680(&qword_100201D48, (void (*)(uint64_t))&type metadata accessor for ScenePhase);
  uint64_t v42 = v81;
  uint64_t v43 = v89;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v88 + 8))(v38, v43);
  sub_10002784C(v34, &qword_100201CE8);
  id v44 = [self defaultCenter];
  unint64_t v45 = v95;
  NSNotificationCenter.publisher(for:object:)();

  uint64_t v46 = v76;
  sub_1000E98F0(v76, v39, v40);
  uint64_t v47 = swift_allocObject();
  sub_1000E99F0(v39, v47 + v77, v108);
  uint64_t v48 = v86;
  uint64_t v49 = (uint64_t)v85;
  uint64_t v50 = v87;
  (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v85, v42, v87);
  uint64_t v51 = v83;
  uint64_t v53 = v98;
  uint64_t v52 = v99;
  (*(void (**)(uint64_t, char *, uint64_t))(v98 + 16))(v49 + *(int *)(v83 + 52), v45, v99);
  uint64_t v54 = (uint64_t (**)(uint64_t))(v49 + *(int *)(v51 + 56));
  *uint64_t v54 = sub_1000ED7A0;
  v54[1] = (uint64_t (*)(uint64_t))v47;
  (*(void (**)(char *, uint64_t))(v53 + 8))(v45, v52);
  (*(void (**)(char *, uint64_t))(v48 + 8))(v42, v50);
  LOBYTE(v47) = sub_1000D9320();
  uint64_t v55 = v90;
  sub_100008DD4(v49, v90, &qword_100201CF8);
  *(unsigned char *)(v55 + *(int *)(v84 + 36)) = v47 & 1;
  sub_10002784C(v49, &qword_100201CF8);
  LOBYTE(v47) = *(unsigned char *)(v46 + 24);
  uint64_t v56 = swift_retain();
  uint64_t v57 = sub_100020F7C(v56, v47);
  swift_release();
  swift_getKeyPath();
  uint64_t v111 = v57;
  sub_1000E9680((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_unknownObjectWeakLoadStrong();
  swift_release();
  LOBYTE(v57) = sub_1000D9320();
  uint64_t v58 = (uint64_t)v103;
  Binding.projectedValue.getter();
  char v110 = 0;
  static Binding.constant(_:)();
  uint64_t v59 = v93;
  uint64_t v60 = (uint64_t)v91;
  sub_1000EF1D8((v57 & 1) == 0, 1, v58, v111, v112, v113, (uint64_t)&v91[*(int *)(v93 + 36)]);
  sub_100026FD0(v55, v60, &qword_100201D00);
  char v62 = v104;
  uint64_t v61 = v105;
  uint64_t v63 = v106;
  (*(void (**)(char *, void, uint64_t))(v105 + 104))(v104, enum case for NavigationBarItem.TitleDisplayMode.inline(_:), v106);
  unint64_t v64 = sub_1000ED810();
  char v65 = v92;
  View.navigationBarTitleDisplayMode(_:)();
  (*(void (**)(char *, uint64_t))(v61 + 8))(v62, v63);
  sub_10002784C(v60, &qword_100201D08);
  sub_1000D9320();
  uint64_t v111 = v59;
  uint64_t v112 = v64;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v68 = v96;
  uint64_t v67 = v97;
  View.navigationBarHidden(_:)();
  (*(void (**)(char *, uint64_t))(v94 + 8))(v65, v67);
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v111 = v67;
  uint64_t v112 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  uint64_t v69 = v101;
  View.navigationTitle(_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v100 + 8))(v68, v69);
}

uint64_t sub_1000DA988@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v106 = a2;
  uint64_t v103 = sub_1000063C0(&qword_100201D68);
  __chkstk_darwin(v103);
  uint64_t v93 = (uint64_t *)((char *)&v93 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v100 = sub_1000063C0(&qword_100201D70);
  __chkstk_darwin(v100);
  uint64_t v101 = (uint64_t **)((char *)&v93 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = sub_1000063C0(&qword_100201D78);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v94 = (char *)&v93 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  char v95 = (char *)&v93 - v8;
  uint64_t v9 = type metadata accessor for Divider();
  uint64_t v98 = *(void *)(v9 - 8);
  uint64_t v99 = v9;
  __chkstk_darwin(v9);
  uint64_t v97 = (char *)&v93 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = sub_1000063C0(&qword_100201C10);
  uint64_t v11 = __chkstk_darwin(v96);
  uint64_t v108 = (uint64_t)&v93 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v107 = (uint64_t)&v93 - v13;
  uint64_t v14 = sub_1000063C0(&qword_100201D80);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  uint64_t v105 = (char *)&v93 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  unint64_t v104 = (char *)&v93 - v17;
  uint64_t v18 = type metadata accessor for CompositionIndexView(0);
  uint64_t v19 = v18 - 8;
  uint64_t v20 = *(void *)(v18 - 8);
  uint64_t v21 = *(void *)(v20 + 64);
  __chkstk_darwin(v18);
  uint64_t v22 = a1 + *(int *)(v19 + 44);
  long long v23 = *(_OWORD *)v22;
  uint64_t v24 = *(void *)(v22 + 16);
  long long v114 = v23;
  *(void *)&long long v115 = v24;
  sub_1000063C0(&qword_1001FF890);
  State.projectedValue.getter();
  uint64_t v111 = *((void *)&v125 + 1);
  uint64_t v112 = v125;
  uint64_t v109 = *((void *)&v126 + 1);
  uint64_t v110 = v126;
  uint64_t v25 = a1 + *(int *)(v19 + 48);
  uint64_t v26 = *(void *)v25;
  uint64_t v27 = *(void *)(v25 + 8);
  LOBYTE(v25) = *(unsigned char *)(v25 + 16);
  *(void *)&long long v114 = v26;
  *((void *)&v114 + 1) = v27;
  LOBYTE(v115) = v25;
  sub_1000063C0(&qword_1001FC910);
  FocusState.Binding.projectedValue.getter();
  long long v28 = v125;
  char v29 = v126;
  BOOL v30 = sub_1000D9320();
  sub_1000E98F0(a1, (uint64_t)&v93 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CompositionIndexView);
  unint64_t v31 = (*(unsigned __int8 *)(v20 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  uint64_t v32 = swift_allocObject();
  sub_1000E99F0((uint64_t)&v93 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0), v32 + v31, type metadata accessor for CompositionIndexView);
  type metadata accessor for WritingToolsModel();
  sub_1000E9680((unint64_t *)&unk_1001FB3F0, (void (*)(uint64_t))type metadata accessor for WritingToolsModel);
  uint64_t v33 = Environment.init<A>(_:)();
  LOBYTE(v21) = v34 & 1;
  type metadata accessor for CompositionModel(0);
  uint64_t v102 = sub_1000E9680((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  uint64_t v35 = Environment.init<A>(_:)();
  uint64_t v37 = a1;
  sub_1000E9A58(v33, v21, v35, v36 & 1, v112, v111, v110, v109, (uint64_t)&v125, v28, *((uint64_t *)&v28 + 1), v29, v30, (uint64_t)sub_1000ED960, v32, 0);
  if (sub_1000D9320())
  {
    uint64_t v38 = sub_1000063C0(&qword_100201DB8);
    uint64_t v39 = (uint64_t)v104;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v104, 1, 1, v38);
    uint64_t v41 = (uint64_t)v105;
    BOOL v40 = v106;
  }
  else
  {
    uint64_t v42 = (uint64_t)v95;
    uint64_t v43 = v97;
    Divider.init()();
    char v44 = static Edge.Set.top.getter();
    EdgeInsets.init(_all:)();
    uint64_t v46 = v45;
    uint64_t v48 = v47;
    uint64_t v50 = v49;
    uint64_t v52 = v51;
    uint64_t v54 = v98;
    uint64_t v53 = v99;
    uint64_t v55 = v108;
    (*(void (**)(uint64_t, char *, uint64_t))(v98 + 16))(v108, v43, v99);
    uint64_t v56 = v55 + *(int *)(v96 + 36);
    *(unsigned char *)uint64_t v56 = v44;
    *(void *)(v56 + 8) = v46;
    *(void *)(v56 + 16) = v48;
    *(void *)(v56 + 24) = v50;
    *(void *)(v56 + 32) = v52;
    *(unsigned char *)(v56 + 40) = 0;
    (*(void (**)(char *, uint64_t))(v54 + 8))(v43, v53);
    sub_100026FD0(v55, v107, &qword_100201C10);
    LOBYTE(v53) = *(unsigned char *)(v37 + 24);
    uint64_t v57 = swift_retain();
    uint64_t v58 = sub_100020F7C(v57, v53);
    swift_release();
    swift_getKeyPath();
    *(void *)&long long v114 = v58;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    char v59 = *(unsigned char *)(v58 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__isFeatureEnabled);
    swift_release();
    if (v59)
    {
      uint64_t v112 = v37;
      char v60 = *(unsigned char *)(v37 + 24);
      uint64_t v61 = swift_retain();
      uint64_t v62 = sub_100020F7C(v61, v60);
      swift_release();
      swift_getKeyPath();
      *(void *)&long long v114 = v62;
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      uint64_t v63 = *(void *)(v62 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__rateLimitModel);
      swift_retain();
      swift_release();
      swift_getKeyPath();
      *(void *)&long long v114 = v63;
      sub_1000E9680((unint64_t *)&qword_100200DB0, (void (*)(uint64_t))type metadata accessor for CompositionRateLimitModel);
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      int v64 = *(unsigned __int8 *)(v63 + 16);
      swift_release();
      uint64_t v41 = (uint64_t)v105;
      BOOL v40 = v106;
      uint64_t v39 = (uint64_t)v104;
      uint64_t v65 = (uint64_t)v94;
      if (v64 == 1)
      {
        *(void *)&v113[0] = Environment.init<A>(_:)();
        BYTE8(v113[0]) = v66 & 1;
        BYTE9(v113[0]) = 1;
        sub_1000ED98C();
        sub_1000ED9E0();
        swift_retain();
        _ConditionalContent<>.init(storage:)();
        char v67 = BYTE8(v114);
        char v68 = BYTE9(v114);
        uint64_t v69 = v101;
        void *v101 = v114;
        *((unsigned char *)v69 + 8) = v67;
        *((unsigned char *)v69 + 9) = v68;
        swift_storeEnumTagMultiPayload();
        sub_1000063C0(&qword_100201D98);
        sub_1000EDA34(&qword_100201DA0, &qword_100201D98, (void (*)(void))sub_1000ED98C, (void (*)(void))sub_1000ED9E0);
        sub_100027F2C(&qword_100201DA8, &qword_100201D68);
        _ConditionalContent<>.init(storage:)();
        swift_release();
      }
      else
      {
        uint64_t v74 = static HorizontalAlignment.center.getter();
        uint64_t v75 = (uint64_t)v93;
        *uint64_t v93 = v74;
        *(void *)(v75 + 8) = 0;
        *(unsigned char *)(v75 + 16) = 1;
        uint64_t v76 = sub_1000063C0(&qword_100201DC8);
        sub_1000DBA48(v112, v75 + *(int *)(v76 + 44));
        sub_100008DD4(v75, (uint64_t)v101, &qword_100201D68);
        swift_storeEnumTagMultiPayload();
        sub_1000063C0(&qword_100201D98);
        sub_1000EDA34(&qword_100201DA0, &qword_100201D98, (void (*)(void))sub_1000ED98C, (void (*)(void))sub_1000ED9E0);
        sub_100027F2C(&qword_100201DA8, &qword_100201D68);
        _ConditionalContent<>.init(storage:)();
        sub_10002784C(v75, &qword_100201D68);
      }
    }
    else
    {
      *(void *)&v113[0] = Environment.init<A>(_:)();
      WORD4(v113[0]) = v70 & 1;
      sub_1000ED98C();
      sub_1000ED9E0();
      swift_retain();
      _ConditionalContent<>.init(storage:)();
      char v71 = BYTE8(v114);
      char v72 = BYTE9(v114);
      uint64_t v73 = v101;
      void *v101 = v114;
      *((unsigned char *)v73 + 8) = v71;
      *((unsigned char *)v73 + 9) = v72;
      swift_storeEnumTagMultiPayload();
      sub_1000063C0(&qword_100201D98);
      sub_1000EDA34(&qword_100201DA0, &qword_100201D98, (void (*)(void))sub_1000ED98C, (void (*)(void))sub_1000ED9E0);
      sub_100027F2C(&qword_100201DA8, &qword_100201D68);
      _ConditionalContent<>.init(storage:)();
      swift_release();
      uint64_t v41 = (uint64_t)v105;
      BOOL v40 = v106;
      uint64_t v39 = (uint64_t)v104;
      uint64_t v65 = (uint64_t)v94;
    }
    uint64_t v78 = v107;
    uint64_t v77 = v108;
    sub_100008DD4(v107, v108, &qword_100201C10);
    sub_100008DD4(v42, v65, &qword_100201D78);
    sub_100008DD4(v77, v41, &qword_100201C10);
    uint64_t v79 = sub_1000063C0(&qword_100201DB0);
    sub_100008DD4(v65, v41 + *(int *)(v79 + 48), &qword_100201D78);
    sub_10002784C(v42, &qword_100201D78);
    sub_10002784C(v78, &qword_100201C10);
    sub_10002784C(v65, &qword_100201D78);
    sub_10002784C(v77, &qword_100201C10);
    uint64_t v80 = sub_1000063C0(&qword_100201DB8);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v80 - 8) + 56))(v41, 0, 1, v80);
    sub_100026FD0(v41, v39, &qword_100201D80);
  }
  sub_100008DD4(v39, v41, &qword_100201D80);
  long long v81 = v134;
  v113[8] = v133;
  v113[9] = v134;
  long long v82 = v135;
  v113[10] = v135;
  long long v83 = v129;
  long long v84 = v130;
  v113[4] = v129;
  v113[5] = v130;
  long long v85 = v132;
  long long v86 = v131;
  v113[6] = v131;
  v113[7] = v132;
  long long v87 = v125;
  long long v88 = v126;
  v113[0] = v125;
  v113[1] = v126;
  long long v89 = v128;
  long long v90 = v127;
  v113[2] = v127;
  v113[3] = v128;
  v40[8] = v133;
  v40[9] = v81;
  v40[10] = v82;
  v40[4] = v83;
  v40[5] = v84;
  v40[6] = v86;
  v40[7] = v85;
  *BOOL v40 = v87;
  v40[1] = v88;
  v40[2] = v90;
  v40[3] = v89;
  uint64_t v91 = sub_1000063C0(&qword_100201DC0);
  sub_100008DD4(v41, (uint64_t)v40 + *(int *)(v91 + 48), &qword_100201D80);
  sub_1000EDABC((uint64_t)v113);
  sub_10002784C(v39, &qword_100201D80);
  sub_10002784C(v41, &qword_100201D80);
  long long v122 = v133;
  long long v123 = v134;
  long long v124 = v135;
  long long v118 = v129;
  long long v119 = v130;
  long long v120 = v131;
  long long v121 = v132;
  long long v114 = v125;
  long long v115 = v126;
  long long v116 = v127;
  long long v117 = v128;
  return sub_1000992CC((uint64_t)&v114);
}

uint64_t sub_1000DB73C(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  type metadata accessor for MainActor();
  *(void *)(v1 + 24) = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1000DB7D4, v3, v2);
}

uint64_t sub_1000DB7D4()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_release();
  LOBYTE(v1) = *(unsigned char *)(v1 + 24);
  uint64_t v2 = swift_retain();
  sub_100020F7C(v2, v1);
  swift_release();
  sub_100081B20();
  swift_release();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_1000DB868(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ScenePhase();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v14 - v7;
  type metadata accessor for CompositionIndexView(0);
  sub_10002140C((uint64_t)v8);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v6, enum case for ScenePhase.active(_:), v2);
  char v9 = static ScenePhase.== infix(_:_:)();
  uint64_t v10 = *(void (**)(char *, uint64_t))(v3 + 8);
  v10(v6, v2);
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v10)(v8, v2);
  if (v9)
  {
    char v12 = *(unsigned char *)(a1 + 24);
    uint64_t v13 = swift_retain();
    sub_100020F7C(v13, v12);
    swift_release();
    sub_100081B20();
    return swift_release();
  }
  return result;
}

uint64_t sub_1000DB9F0(uint64_t a1, uint64_t a2)
{
  char v2 = *(unsigned char *)(a2 + 24);
  uint64_t v3 = swift_retain();
  sub_100020F7C(v3, v2);
  swift_release();
  sub_100081B20();

  return swift_release();
}

uint64_t sub_1000DBA48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v52 = a2;
  uint64_t v3 = sub_1000063C0(&qword_100201DD0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = sub_1000063C0(&qword_100201DD8);
  __chkstk_darwin(v49);
  uint64_t v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = sub_1000063C0(&qword_100201DE0);
  __chkstk_darwin(v50);
  char v9 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = sub_1000063C0(&qword_100201DE8);
  uint64_t v10 = *(void *)(v51 - 8);
  __chkstk_darwin(v51);
  char v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for CompositionIndexView(0);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v16 = *(unsigned char *)(a1 + 8);
  uint64_t v17 = swift_retain();
  uint64_t v18 = sub_100020A68(v17, v16);
  swift_release();
  swift_getKeyPath();
  uint64_t v53 = v18;
  sub_1000E9680((unint64_t *)&unk_1001FB3F0, (void (*)(uint64_t))type metadata accessor for WritingToolsModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  char v19 = *(unsigned char *)(v18 + OBJC_IVAR____TtC21WritingToolsUIService17WritingToolsModel__networkAvailable);
  swift_release();
  sub_1000E98F0(a1, (uint64_t)v15, type metadata accessor for CompositionIndexView);
  if (v19)
  {
    char v20 = v15[24];
    uint64_t v21 = swift_retain();
    sub_100020F7C(v21, v20);
    swift_release();
    sub_1000E9960((uint64_t)v15, type metadata accessor for CompositionIndexView);
    swift_release();
  }
  else
  {
    sub_1000E9960((uint64_t)v15, type metadata accessor for CompositionIndexView);
  }
  *(void *)uint64_t v5 = static HorizontalAlignment.center.getter();
  *((void *)v5 + 1) = 0x4044000000000000;
  v5[16] = 0;
  uint64_t v22 = sub_1000063C0(&qword_100201DF0);
  sub_1000DBEF4(a1, (uint64_t)&v5[*(int *)(v22 + 44)]);
  char v23 = static Edge.Set.horizontal.getter();
  sub_100008DD4((uint64_t)v5, (uint64_t)v7, &qword_100201DD0);
  uint64_t v24 = &v7[*(int *)(v49 + 36)];
  *uint64_t v24 = v23;
  *(_OWORD *)(v24 + 8) = 0u;
  *(_OWORD *)(v24 + 24) = 0u;
  v24[40] = 1;
  sub_10002784C((uint64_t)v5, &qword_100201DD0);
  char v25 = static Edge.Set.top.getter();
  EdgeInsets.init(_all:)();
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  sub_100008DD4((uint64_t)v7, (uint64_t)v9, &qword_100201DD8);
  char v34 = &v9[*(int *)(v50 + 36)];
  *char v34 = v25;
  *((void *)v34 + 1) = v27;
  *((void *)v34 + 2) = v29;
  *((void *)v34 + 3) = v31;
  *((void *)v34 + 4) = v33;
  v34[40] = 0;
  sub_10002784C((uint64_t)v7, &qword_100201DD8);
  char v35 = static Edge.Set.bottom.getter();
  EdgeInsets.init(_all:)();
  uint64_t v37 = v36;
  uint64_t v39 = v38;
  uint64_t v41 = v40;
  uint64_t v43 = v42;
  sub_100008DD4((uint64_t)v9, (uint64_t)v12, &qword_100201DE0);
  uint64_t v44 = v51;
  uint64_t v45 = &v12[*(int *)(v51 + 36)];
  *uint64_t v45 = v35;
  *((void *)v45 + 1) = v37;
  *((void *)v45 + 2) = v39;
  *((void *)v45 + 3) = v41;
  *((void *)v45 + 4) = v43;
  v45[40] = 0;
  sub_10002784C((uint64_t)v9, &qword_100201DE0);
  uint64_t v46 = v52;
  sub_100026FD0((uint64_t)v12, v52, &qword_100201DE8);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v10 + 56))(v46, 0, 1, v44);
}

uint64_t sub_1000DBEF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v87 = a2;
  uint64_t v86 = sub_1000063C0(&qword_100201DF8);
  __chkstk_darwin(v86);
  uint64_t v4 = (char *)&v76 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000063C0((uint64_t *)&unk_100201E00);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v76 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000063C0(&qword_1001FBA90);
  __chkstk_darwin(v8 - 8);
  uint64_t v80 = (char *)&v76 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000063C0(&qword_100201E10);
  uint64_t v78 = *(void *)(v10 - 8);
  uint64_t v79 = v10;
  __chkstk_darwin(v10);
  char v12 = (char *)&v76 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = sub_1000063C0(&qword_100201E18);
  uint64_t v13 = __chkstk_darwin(v77);
  uint64_t v82 = (uint64_t)&v76 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v83 = (uint64_t)&v76 - v15;
  uint64_t v84 = sub_1000063C0(&qword_100201E20);
  __chkstk_darwin(v84);
  long long v85 = (uint64_t *)((char *)&v76 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = type metadata accessor for LocalizedStringKey.StringInterpolation();
  __chkstk_darwin(v17 - 8);
  char v18 = *(unsigned char *)(a1 + 8);
  uint64_t v19 = swift_retain();
  uint64_t v20 = sub_100020A68(v19, v18);
  swift_release();
  swift_getKeyPath();
  uint64_t v88 = v20;
  sub_1000E9680((unint64_t *)&unk_1001FB3F0, (void (*)(uint64_t))type metadata accessor for WritingToolsModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  char v21 = *(unsigned char *)(v20 + OBJC_IVAR____TtC21WritingToolsUIService17WritingToolsModel__networkAvailable);
  swift_release();
  if (v21)
  {
    long long v81 = v4;
    uint64_t v76 = v7;
    char v22 = *(unsigned char *)(a1 + 24);
    uint64_t v23 = swift_retain();
    sub_100020F7C(v23, v22);
    swift_release();
    swift_release();
    LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v24._object = (void *)0x800000010019F8A0;
    v24._countAndFlagsBits = 0x1000000000000029;
    LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v24);
    v25._countAndFlagsBits = 0x54504774616843;
    v25._object = (void *)0xE700000000000000;
    LocalizedStringKey.StringInterpolation.appendInterpolation(_:)(v25);
    v26._countAndFlagsBits = 0xD000000000000018;
    v26._object = (void *)0x800000010019F8D0;
    LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v26);
    LocalizedStringKey.init(stringInterpolation:)();
    uint64_t v27 = Text.init(_:tableName:bundle:comment:)();
    uint64_t v29 = v28;
    uint64_t v31 = v30;
    char v33 = v32 & 1;
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v88 = v27;
    uint64_t v89 = v29;
    char v90 = v33;
    uint64_t v91 = v31;
    uint64_t v92 = KeyPath;
    char v93 = 1;
    static Font.Weight.semibold.getter();
    sub_1000063C0((uint64_t *)&unk_100201E50);
    sub_100026F30();
    View.fontWeight(_:)();
    sub_100026F18(v27, v29, v33);
    swift_release();
    swift_bridgeObjectRelease();
    if (qword_1001FAD38 != -1) {
      swift_once();
    }
    uint64_t v35 = qword_1002129E0;
    uint64_t v37 = v78;
    uint64_t v36 = v79;
    uint64_t v38 = v82;
    (*(void (**)(uint64_t, char *, uint64_t))(v78 + 16))(v82, v12, v79);
    *(void *)(v38 + *(int *)(v77 + 36)) = v35;
    uint64_t v39 = *(void (**)(char *, uint64_t))(v37 + 8);
    swift_retain();
    v39(v12, v36);
    uint64_t v40 = v83;
    sub_100026FD0(v38, v83, &qword_100201E18);
    LocalizedStringKey.init(stringLiteral:)();
    uint64_t v41 = Text.init(_:tableName:bundle:comment:)();
    uint64_t v43 = v42;
    LODWORD(v79) = v44;
    uint64_t v46 = v45;
    uint64_t v47 = swift_getKeyPath();
    uint64_t v48 = type metadata accessor for Font.Design();
    uint64_t v49 = (uint64_t)v80;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v80, 1, 1, v48);
    static Font.system(size:weight:design:)();
    sub_10002784C(v49, &qword_1001FBA90);
    uint64_t v50 = Font.italic()();
    swift_release();
    uint64_t v51 = swift_getKeyPath();
    if (qword_1001FAD40 != -1) {
      swift_once();
    }
    uint64_t v52 = qword_1002129E8;
    sub_100008DD4(v40, v38, &qword_100201E18);
    uint64_t v53 = (uint64_t)v81;
    sub_100008DD4(v38, (uint64_t)v81, &qword_100201E18);
    uint64_t v54 = v53 + *(int *)(sub_1000063C0(&qword_100201E78) + 48);
    *(void *)uint64_t v54 = v41;
    *(void *)(v54 + 8) = v43;
    LOBYTE(v53) = v79 & 1;
    *(unsigned char *)(v54 + 16) = v79 & 1;
    uint64_t v78 = v46;
    *(void *)(v54 + 24) = v46;
    *(void *)(v54 + 32) = v47;
    *(unsigned char *)(v54 + 40) = 1;
    *(void *)(v54 + 48) = v51;
    *(void *)(v54 + 56) = v50;
    *(void *)(v54 + 64) = v52;
    sub_10002783C(v41, v43, v53);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v80 = (char *)v52;
    swift_retain_n();
    sub_10002783C(v41, v43, v53);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_100026F18(v41, v43, v53);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    sub_10002784C(v38, &qword_100201E18);
    uint64_t v82 = v41;
    uint64_t v55 = (uint64_t)v81;
    sub_100008DD4((uint64_t)v81, (uint64_t)v85, &qword_100201DF8);
    swift_storeEnumTagMultiPayload();
    sub_1000063C0(&qword_100201E28);
    sub_1000EDBB4();
    sub_100027F2C(&qword_100201E68, &qword_100201DF8);
    uint64_t v56 = (uint64_t)v76;
    _ConditionalContent<>.init(storage:)();
    sub_10002784C(v55, &qword_100201DF8);
    sub_100026F18(v82, v43, v53);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    sub_10002784C(v83, &qword_100201E18);
    uint64_t v57 = sub_1000063C0(&qword_100201E70);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56))(v56, 0, 1, v57);
    return sub_100026FD0(v56, v87, (uint64_t *)&unk_100201E00);
  }
  else
  {
    LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v59._object = (void *)0x800000010019F810;
    v59._countAndFlagsBits = 0xD000000000000010;
    LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v59);
    v60._countAndFlagsBits = 0x54504774616843;
    v60._object = (void *)0xE700000000000000;
    LocalizedStringKey.StringInterpolation.appendInterpolation(_:)(v60);
    v61._countAndFlagsBits = 0xD00000000000001ALL;
    v61._object = (void *)0x800000010019F830;
    LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v61);
    LocalizedStringKey.init(stringInterpolation:)();
    uint64_t v62 = Text.init(_:tableName:bundle:comment:)();
    uint64_t v64 = v63;
    char v66 = v65;
    uint64_t v68 = v67;
    uint64_t v69 = swift_getKeyPath();
    uint64_t v70 = static Font.subheadline.getter();
    uint64_t v71 = swift_getKeyPath();
    if (qword_1001FAD40 != -1) {
      swift_once();
    }
    uint64_t v72 = qword_1002129E8;
    uint64_t v73 = v85;
    *long long v85 = v62;
    v73[1] = v64;
    *((unsigned char *)v73 + 16) = v66 & 1;
    v73[3] = v68;
    v73[4] = v69;
    *((unsigned char *)v73 + 40) = 1;
    v73[6] = v71;
    v73[7] = v70;
    v73[8] = v72;
    swift_storeEnumTagMultiPayload();
    swift_retain();
    sub_1000063C0(&qword_100201E28);
    sub_1000EDBB4();
    sub_100027F2C(&qword_100201E68, &qword_100201DF8);
    uint64_t v74 = v87;
    _ConditionalContent<>.init(storage:)();
    uint64_t v75 = sub_1000063C0(&qword_100201E70);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v75 - 8) + 56))(v74, 0, 1, v75);
  }
}

uint64_t sub_1000DC9D4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ScenePhase();
  __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return EnvironmentValues.scenePhase.setter();
}

BOOL sub_1000DCAA0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for CompositionConfirmView(0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(v0 + 72);
  char v6 = *(unsigned char *)(v0 + 80);
  v12[1] = *(void *)(v0 + 64);
  v12[2] = v5;
  char v13 = v6;
  sub_1000063C0(&qword_1001FC910);
  FocusState.Binding.wrappedValue.getter();
  int v7 = v14;
  sub_1000E98F0(v1, (uint64_t)v4, type metadata accessor for CompositionConfirmView);
  if (v7 == 1)
  {
    char v8 = v4[24];
    uint64_t v9 = swift_retain();
    sub_100020FBC(v9, v8);
    swift_release();
    BOOL v10 = sub_100136B78();
    swift_release();
  }
  else
  {
    BOOL v10 = 0;
  }
  sub_1000E9960((uint64_t)v4, type metadata accessor for CompositionConfirmView);
  return v10;
}

uint64_t sub_1000DCBC8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for CompositionConfirmView(0);
  uint64_t v7 = v6 - 8;
  uint64_t v8 = *(void *)(v6 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v6);
  BOOL v10 = &v27[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = sub_1000063C0(&qword_1001FF820);
  __chkstk_darwin(v11 - 8);
  char v13 = &v27[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = type metadata accessor for TaskPriority();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  sub_1000E98F0(v2, (uint64_t)v10, type metadata accessor for CompositionConfirmView);
  type metadata accessor for MainActor();
  swift_bridgeObjectRetain();
  uint64_t v15 = static MainActor.shared.getter();
  unint64_t v16 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v17 = (v9 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v15;
  *(void *)(v18 + 24) = &protocol witness table for MainActor;
  sub_1000E99F0((uint64_t)v10, v18 + v16, type metadata accessor for CompositionConfirmView);
  uint64_t v19 = (void *)(v18 + v17);
  *uint64_t v19 = a1;
  v19[1] = a2;
  sub_1001228D0((uint64_t)v13, (uint64_t)&unk_100201CD8, v18);
  swift_release();
  uint64_t v20 = v3 + *(int *)(v7 + 52);
  long long v21 = *(_OWORD *)v20;
  uint64_t v22 = *(void *)(v20 + 16);
  long long v30 = v21;
  uint64_t v31 = v22;
  uint64_t v28 = 0;
  unint64_t v29 = 0xE000000000000000;
  sub_1000063C0(&qword_1001FF890);
  State.wrappedValue.setter();
  uint64_t v23 = *(void *)(v3 + 64);
  uint64_t v24 = *(void *)(v3 + 72);
  char v25 = *(unsigned char *)(v3 + 80);
  *(void *)&long long v30 = v23;
  *((void *)&v30 + 1) = v24;
  LOBYTE(v31) = v25;
  sub_1000063C0(&qword_1001FC910);
  uint64_t result = FocusState.Binding.wrappedValue.getter();
  if (v28 == 1)
  {
    *(void *)&long long v30 = v23;
    *((void *)&v30 + 1) = v24;
    LOBYTE(v31) = v25;
    swift_retain();
    swift_retain();
    FocusState.Binding.wrappedValue.getter();
    *(void *)&long long v30 = v23;
    *((void *)&v30 + 1) = v24;
    LOBYTE(v31) = v25;
    v27[7] = (v28 & 1) == 0;
    FocusState.Binding.wrappedValue.setter();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1000DCEA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  type metadata accessor for MainActor();
  v6[5] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v6[6] = v8;
  v6[7] = v7;
  return _swift_task_switch(sub_1000DCF3C, v8, v7);
}

uint64_t sub_1000DCF3C()
{
  char v1 = *(unsigned char *)(v0[2] + 8);
  uint64_t v2 = swift_retain();
  v0[8] = sub_100020F7C(v2, v1);
  swift_release();
  uint64_t v3 = (void *)swift_task_alloc();
  v0[9] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_10001F020;
  uint64_t v5 = v0[3];
  uint64_t v4 = v0[4];
  return sub_10006F470(v5, v4);
}

uint64_t sub_1000DD000@<X0>(uint64_t a1@<X8>)
{
  uint64_t v120 = a1;
  uint64_t v2 = type metadata accessor for NavigationBarItem.TitleDisplayMode();
  uint64_t v118 = *(void *)(v2 - 8);
  uint64_t v119 = v2;
  __chkstk_darwin(v2);
  long long v117 = (char *)&v80 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v115 = sub_1000063C0(&qword_1001FB438);
  __chkstk_darwin(v115);
  long long v116 = (char *)&v80 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = type metadata accessor for CompositionConfirmView(0);
  uint64_t v84 = *(void *)(v114 - 8);
  __chkstk_darwin(v114);
  uint64_t v85 = v5;
  uint64_t v86 = (uint64_t *)((char *)&v80 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_1000063C0(&qword_100201B10);
  uint64_t v126 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v80 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = sub_1000063C0(&qword_100201B18);
  __chkstk_darwin(v87);
  uint64_t v10 = (char *)&v80 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = sub_1000063C0(&qword_100201B20);
  uint64_t v89 = *(void *)(v92 - 8);
  __chkstk_darwin(v92);
  uint64_t v88 = (char *)&v80 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = sub_1000063C0(&qword_100201B28);
  uint64_t v96 = *(void *)(v98 - 8);
  __chkstk_darwin(v98);
  uint64_t v94 = (char *)&v80 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = sub_1000063C0(&qword_100201B30);
  uint64_t v95 = *(void *)(v97 - 8);
  __chkstk_darwin(v97);
  uint64_t v91 = (char *)&v80 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = sub_1000063C0(&qword_100201B38);
  __chkstk_darwin(v90);
  uint64_t v99 = (char *)&v80 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = sub_1000063C0(&qword_100201B40);
  __chkstk_darwin(v104);
  uint64_t v100 = (char *)&v80 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = sub_1000063C0(&qword_100201B48);
  uint64_t v103 = *(void *)(v109 - 8);
  __chkstk_darwin(v109);
  uint64_t v101 = (char *)&v80 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = sub_1000063C0(&qword_100201B50);
  uint64_t v110 = *(void *)(v113 - 8);
  __chkstk_darwin(v113);
  uint64_t v106 = (char *)&v80 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = sub_1000063C0(&qword_100201B58);
  uint64_t v111 = *(void *)(v112 - 8);
  __chkstk_darwin(v112);
  uint64_t v108 = (char *)&v80 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = sub_1000063C0(&qword_100201B60);
  uint64_t v105 = *(void *)(v107 - 8);
  __chkstk_darwin(v107);
  uint64_t v102 = (char *)&v80 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v124 = swift_allocBox();
  uint64_t v21 = v20;
  uint64_t v93 = v1;
  char v22 = *(unsigned char *)(v1 + 8);
  uint64_t v23 = swift_retain();
  sub_100020F7C(v23, v22);
  swift_release();
  type metadata accessor for CompositionModel(0);
  uint64_t v24 = sub_1000E9680((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  Bindable<A>.init(wrappedValue:)();
  *(void *)uint64_t v10 = static HorizontalAlignment.center.getter();
  *((void *)v10 + 1) = 0;
  uint64_t v25 = (uint64_t)v10;
  v10[16] = 1;
  uint64_t v26 = *(int *)(sub_1000063C0(&qword_100201B68) + 44);
  uint64_t v27 = v126;
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t))(v126 + 16);
  uint64_t v125 = v21;
  long long v122 = v28;
  uint64_t v123 = v126 + 16;
  v28(v8, v21, v6);
  Bindable.wrappedValue.getter();
  unint64_t v29 = *(void (**)(char *, uint64_t))(v27 + 8);
  uint64_t v30 = v6;
  uint64_t v126 = v27 + 8;
  long long v121 = v29;
  v29(v8, v6);
  uint64_t v31 = v129;
  swift_getKeyPath();
  uint64_t v129 = v31;
  uint64_t v32 = v24;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_release();
  if (qword_1001FAD20 != -1) {
    swift_once();
  }
  uint64_t v33 = v25 + v26;
  uint64_t v34 = *((void *)&xmmword_1002129C0 + 1);
  *(void *)uint64_t v33 = static HorizontalAlignment.center.getter();
  *(void *)(v33 + 8) = v34;
  *(unsigned char *)(v33 + 16) = 0;
  uint64_t v35 = sub_1000063C0(&qword_100201B70);
  uint64_t v36 = v124;
  uint64_t v37 = v93;
  sub_1000DE080(v124, v93, v25 + v26 + *(int *)(v35 + 44));
  long long v81 = v8;
  uint64_t v82 = v30;
  v122(v8, v125, v30);
  Bindable.wrappedValue.getter();
  v121(v8, v30);
  uint64_t v38 = v129;
  swift_getKeyPath();
  uint64_t v129 = v38;
  uint64_t v83 = v32;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  LODWORD(v33) = *(unsigned __int8 *)(v38 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__state);
  swift_release();
  LOBYTE(v129) = v33 == 1;
  uint64_t v39 = (uint64_t)v86;
  sub_1000E98F0(v37, (uint64_t)v86, type metadata accessor for CompositionConfirmView);
  unint64_t v40 = (*(unsigned __int8 *)(v84 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v84 + 80);
  uint64_t v41 = swift_allocObject();
  *(void *)(v41 + 16) = v36;
  sub_1000E99F0(v39, v41 + v40, type metadata accessor for CompositionConfirmView);
  uint64_t v42 = sub_100027F2C(&qword_100201B78, &qword_100201B18);
  swift_retain();
  uint64_t v43 = v88;
  uint64_t v44 = v87;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  uint64_t v45 = sub_10002784C(v25, &qword_100201B18);
  uint64_t v86 = &v80;
  __chkstk_darwin(v45);
  *(&v80 - 2) = v37;
  *(&v80 - 1) = v36;
  uint64_t v46 = (void *)sub_1000063C0(&qword_100201B80);
  uint64_t v129 = v44;
  long long v130 = &type metadata for Bool;
  long long v131 = (void *)v42;
  long long v132 = &protocol witness table for Bool;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v48 = sub_100006C14(&qword_100201B88);
  uint64_t v49 = (void *)sub_1000EC558();
  uint64_t v129 = v48;
  long long v130 = v49;
  uint64_t v50 = swift_getOpaqueTypeConformance2();
  uint64_t v51 = v94;
  uint64_t v52 = v92;
  View.toolbar<A>(content:)();
  (*(void (**)(char *, uint64_t))(v89 + 8))(v43, v52);
  uint64_t v53 = *(void *)(v37 + 96);
  uint64_t v127 = *(void *)(v37 + 88);
  uint64_t v128 = v53;
  sub_1000063C0(&qword_1001FC678);
  State.projectedValue.getter();
  uint64_t v54 = v131;
  uint64_t v129 = v52;
  long long v130 = v46;
  long long v131 = (void *)OpaqueTypeConformance2;
  long long v132 = (void *)v50;
  swift_getOpaqueTypeConformance2();
  uint64_t v55 = v91;
  uint64_t v56 = v98;
  View.inlineFeedback(controller:completion:)();

  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v96 + 8))(v51, v56);
  LOBYTE(v40) = sub_1000DCAA0();
  uint64_t v57 = v95;
  uint64_t v58 = (uint64_t)v99;
  uint64_t v59 = v97;
  (*(void (**)(char *, char *, uint64_t))(v95 + 16))(v99, v55, v97);
  *(unsigned char *)(v58 + *(int *)(v90 + 36)) = v40 & 1;
  (*(void (**)(char *, uint64_t))(v57 + 8))(v55, v59);
  Swift::String v60 = v81;
  uint64_t v61 = v82;
  v122(v81, v125, v82);
  Bindable.wrappedValue.getter();
  v121(v60, v61);
  uint64_t v62 = v129;
  swift_getKeyPath();
  uint64_t v129 = v62;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_unknownObjectWeakLoadStrong();
  swift_release();
  LOBYTE(v62) = sub_1000DCAA0();
  uint64_t v63 = (uint64_t)v116;
  Binding.projectedValue.getter();
  LOBYTE(v127) = 0;
  static Binding.constant(_:)();
  uint64_t v64 = v104;
  uint64_t v65 = (uint64_t)v100;
  sub_1000EF1D8((v62 & 1) == 0, 1, v63, v129, (uint64_t)v130, (char)v131, (uint64_t)&v100[*(int *)(v104 + 36)]);
  sub_100026FD0(v58, v65, &qword_100201B38);
  uint64_t v67 = v117;
  uint64_t v66 = v118;
  uint64_t v68 = v119;
  (*(void (**)(char *, void, uint64_t))(v118 + 104))(v117, enum case for NavigationBarItem.TitleDisplayMode.inline(_:), v119);
  uint64_t v69 = (void *)sub_1000EC5F0();
  uint64_t v70 = v101;
  View.navigationBarTitleDisplayMode(_:)();
  (*(void (**)(char *, uint64_t))(v66 + 8))(v67, v68);
  sub_10002784C(v65, &qword_100201B40);
  sub_1000DCAA0();
  uint64_t v129 = v64;
  long long v130 = v69;
  uint64_t v71 = (void *)swift_getOpaqueTypeConformance2();
  uint64_t v72 = v106;
  uint64_t v73 = v109;
  View.navigationBarHidden(_:)();
  (*(void (**)(char *, uint64_t))(v103 + 8))(v70, v73);
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v129 = v73;
  long long v130 = v71;
  uint64_t v74 = (void *)swift_getOpaqueTypeConformance2();
  uint64_t v75 = v108;
  uint64_t v76 = v113;
  View.navigationTitle(_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v110 + 8))(v72, v76);
  uint64_t v129 = v76;
  long long v130 = v74;
  swift_getOpaqueTypeConformance2();
  uint64_t v77 = v102;
  uint64_t v78 = v112;
  View.navigationBarBackButtonHidden(_:)();
  (*(void (**)(char *, uint64_t))(v111 + 8))(v75, v78);
  (*(void (**)(uint64_t, char *, uint64_t))(v105 + 32))(v120, v77, v107);
  return swift_release();
}

uint64_t sub_1000DE080@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v279 = a2;
  uint64_t v275 = a3;
  uint64_t v263 = sub_1000063C0(&qword_100201BC8);
  __chkstk_darwin(v263);
  *(void *)&long long v270 = &v234[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v246 = type metadata accessor for PrimaryButtonStyle(0);
  __chkstk_darwin(v246);
  uint64_t v245 = &v234[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_1000063C0(&qword_100201BD0);
  uint64_t v243 = *(void *)(v6 - 8);
  uint64_t v244 = v6;
  __chkstk_darwin(v6);
  uint64_t v242 = &v234[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_1000063C0(&qword_100201BD8);
  uint64_t v249 = *(void *)(v8 - 8);
  uint64_t v250 = (unsigned char *)v8;
  __chkstk_darwin(v8);
  uint64_t v248 = &v234[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v258 = sub_1000063C0(&qword_100201BE0);
  uint64_t v10 = __chkstk_darwin(v258);
  unsigned __int8 v247 = &v234[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  uint64_t v251 = &v234[-v12];
  uint64_t v256 = sub_1000063C0(&qword_100201BE8);
  __chkstk_darwin(v256);
  uint64_t v257 = (uint64_t *)&v234[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = sub_1000063C0(&qword_100201BF0);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  id v260 = &v234[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v15);
  v269 = &v234[-v17];
  uint64_t v261 = sub_1000063C0(&qword_100201BF8);
  __chkstk_darwin(v261);
  id v262 = (uint64_t *)&v234[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v19 = sub_1000063C0((uint64_t *)&unk_100201C00);
  uint64_t v20 = __chkstk_darwin(v19 - 8);
  v268 = &v234[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v20);
  id v273 = &v234[-v22];
  uint64_t v23 = sub_1000063C0(&qword_1001FDE68);
  uint64_t v24 = __chkstk_darwin(v23 - 8);
  uint64_t v267 = &v234[-((v25 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v24);
  v272 = &v234[-v26];
  uint64_t v277 = sub_1000063C0(&qword_100201B10);
  uint64_t v287 = *(void *)(v277 - 8);
  uint64_t v27 = __chkstk_darwin(v277);
  *(void *)&long long v259 = &v234[-((v28 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v27);
  uint64_t v278 = &v234[-v29];
  id v271 = (void *)type metadata accessor for Divider();
  uint64_t v266 = *(v271 - 1);
  __chkstk_darwin(v271);
  id v265 = &v234[-((v30 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v264 = sub_1000063C0(&qword_100201C10);
  uint64_t v31 = __chkstk_darwin(v264);
  v282 = &v234[-((v32 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v31);
  char v280 = &v234[-v33];
  uint64_t v34 = sub_1000063C0(&qword_100201C18);
  uint64_t v35 = __chkstk_darwin(v34 - 8);
  char v284 = &v234[-((v36 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v35);
  char v283 = &v234[-v37];
  uint64_t v38 = type metadata accessor for CompositionConfirmView(0);
  uint64_t v39 = *(void *)(v38 - 8);
  uint64_t v40 = *(void *)(v39 + 64);
  __chkstk_darwin(v38);
  char v285 = (void (*)(unsigned char *))sub_1000063C0(&qword_100201C20);
  __chkstk_darwin(v285);
  uint64_t v42 = &v234[-((v41 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v286 = sub_1000063C0(&qword_1001FC6B8);
  uint64_t v43 = *(void *)(v286 - 8);
  __chkstk_darwin(v286);
  uint64_t v45 = &v234[-((v44 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v46 = sub_1000063C0(&qword_100201C28);
  uint64_t v47 = __chkstk_darwin(v46 - 8);
  v274 = &v234[-((v48 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v47);
  uint64_t v281 = &v234[-v49];
  *((void *)&v317 + 1) = &type metadata for WritingTools;
  *(void *)&long long v318 = sub_1000268F4();
  LOBYTE(v316) = 8;
  char v50 = isFeatureEnabled(_:)();
  sub_100027DBC((uint64_t)&v316);
  uint64_t v252 = v38;
  uint64_t v253 = v39;
  uint64_t v254 = v40;
  uint64_t v255 = &v234[-((v40 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v276 = a1;
  if (v50)
  {
    LocalizedStringKey.init(stringLiteral:)();
    swift_retain();
    Button<>.init(_:action:)();
    uint64_t v51 = v286;
    (*(void (**)(_OWORD *, unsigned char *, uint64_t))(v43 + 16))(v42, v45, v286);
    swift_storeEnumTagMultiPayload();
    sub_100027F2C((unint64_t *)&unk_1001FDDF0, &qword_1001FC6B8);
    sub_100099278();
    uint64_t v52 = v281;
    _ConditionalContent<>.init(storage:)();
    (*(void (**)(unsigned char *, uint64_t))(v43 + 8))(v45, v51);
    uint64_t v53 = (uint64_t)v52;
  }
  else
  {
    uint64_t v54 = v279;
    uint64_t v55 = (long long *)(v279 + *(int *)(v38 + 44));
    long long v56 = *v55;
    uint64_t v57 = *((void *)v55 + 2);
    *(_OWORD *)uint64_t v313 = v56;
    *(void *)&v313[16] = v57;
    sub_1000063C0(&qword_1001FF890);
    State.projectedValue.getter();
    uint64_t v240 = *((void *)&v316 + 1);
    uint64_t v241 = v316;
    uint64_t v238 = *((void *)&v317 + 1);
    uint64_t v239 = v317;
    uint64_t v58 = *(void *)(v54 + 72);
    char v59 = *(unsigned char *)(v54 + 80);
    *(void *)uint64_t v313 = *(void *)(v54 + 64);
    *(void *)&v313[8] = v58;
    v313[16] = v59;
    sub_1000063C0(&qword_1001FC910);
    FocusState.Binding.projectedValue.getter();
    uint64_t v236 = *((void *)&v316 + 1);
    uint64_t v237 = v316;
    int v235 = v317;
    BOOL v60 = sub_1000DCAA0();
    sub_1000E98F0(v54, (uint64_t)&v234[-((v40 + 15) & 0xFFFFFFFFFFFFFFF0)], type metadata accessor for CompositionConfirmView);
    unint64_t v61 = (*(unsigned __int8 *)(v39 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
    uint64_t v62 = swift_allocObject();
    sub_1000E99F0((uint64_t)&v234[-((v40 + 15) & 0xFFFFFFFFFFFFFFF0)], v62 + v61, type metadata accessor for CompositionConfirmView);
    type metadata accessor for WritingToolsModel();
    sub_1000E9680((unint64_t *)&unk_1001FB3F0, (void (*)(uint64_t))type metadata accessor for WritingToolsModel);
    uint64_t v63 = Environment.init<A>(_:)();
    char v65 = v64 & 1;
    type metadata accessor for CompositionModel(0);
    sub_1000E9680((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
    uint64_t v66 = Environment.init<A>(_:)();
    sub_1000E9A58(v63, v65, v66, v67 & 1, v241, v240, v239, v238, (uint64_t)&v316, v237, v236, v235, v60, (uint64_t)sub_1000ECAD4, v62, 1);
    long long v68 = v325;
    v42[8] = v324;
    v42[9] = v68;
    v42[10] = v326;
    long long v69 = v321;
    v42[4] = v320;
    v42[5] = v69;
    long long v70 = v323;
    v42[6] = v322;
    v42[7] = v70;
    long long v71 = v317;
    _OWORD *v42 = v316;
    v42[1] = v71;
    long long v72 = v319;
    v42[2] = v318;
    v42[3] = v72;
    swift_storeEnumTagMultiPayload();
    sub_100027F2C((unint64_t *)&unk_1001FDDF0, &qword_1001FC6B8);
    sub_100099278();
    uint64_t v53 = (uint64_t)v281;
    _ConditionalContent<>.init(storage:)();
  }
  BOOL v73 = sub_1000DCAA0();
  uint64_t v74 = v283;
  uint64_t v75 = (uint64_t)v284;
  uint64_t v77 = v277;
  uint64_t v76 = v278;
  uint64_t v78 = v287;
  if (v73)
  {
    uint64_t v79 = sub_1000063C0(&qword_100201C60);
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v79 - 8) + 56))(v74, 1, 1, v79);
    goto LABEL_37;
  }
  uint64_t v80 = v265;
  Divider.init()();
  char v81 = static Edge.Set.vertical.getter();
  EdgeInsets.init(_all:)();
  uint64_t v83 = v82;
  uint64_t v85 = v84;
  uint64_t v87 = v86;
  uint64_t v89 = v88;
  uint64_t v90 = v266;
  uint64_t v91 = v282;
  uint64_t v92 = v271;
  (*(void (**)(unsigned char *, unsigned char *, void *))(v266 + 16))(v282, v80, v271);
  uint64_t v93 = &v91[*(int *)(v264 + 36)];
  *uint64_t v93 = v81;
  *((void *)v93 + 1) = v83;
  *((void *)v93 + 2) = v85;
  *((void *)v93 + 3) = v87;
  *((void *)v93 + 4) = v89;
  v93[40] = 0;
  (*(void (**)(unsigned char *, void *))(v90 + 8))(v80, v92);
  sub_100026FD0((uint64_t)v91, (uint64_t)v280, &qword_100201C10);
  uint64_t v94 = swift_projectBox();
  uint64_t v95 = v78 + 16;
  char v285 = *(void (**)(unsigned char *))(v78 + 16);
  uint64_t v286 = v94;
  v285(v76);
  Bindable.wrappedValue.getter();
  uint64_t v96 = *(void (**)(unsigned char *, uint64_t))(v78 + 8);
  uint64_t v287 = v78 + 8;
  v96(v76, v77);
  uint64_t v97 = *(void *)v313;
  swift_getKeyPath();
  *(void *)uint64_t v313 = v97;
  uint64_t v98 = sub_1000E9680((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v99 = *(void *)(v97 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__rateLimitModel);
  swift_retain();
  swift_release();
  swift_getKeyPath();
  *(void *)uint64_t v313 = v99;
  sub_1000E9680((unint64_t *)&qword_100200DB0, (void (*)(uint64_t))type metadata accessor for CompositionRateLimitModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  int v100 = *(unsigned __int8 *)(v99 + 16);
  swift_release();
  if (v100 == 1)
  {
    type metadata accessor for CompositionModel(0);
    id v265 = (unsigned char *)Environment.init<A>(_:)();
    int v102 = v101 & 1;
  }
  else
  {
    id v265 = 0;
    int v102 = 255;
  }
  LODWORD(v264) = v102;
  ((void (*)(unsigned char *, uint64_t, uint64_t))v285)(v76, v286, v77);
  Bindable.wrappedValue.getter();
  v96(v76, v77);
  uint64_t v103 = *(void *)v313;
  swift_getKeyPath();
  *(void *)uint64_t v313 = v103;
  uint64_t v104 = v98;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v106 = *(void *)(v103 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__notice);
  unint64_t v105 = *(void *)(v103 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__notice + 8);
  swift_bridgeObjectRetain();
  swift_release();
  if (v105)
  {
    uint64_t v107 = HIBYTE(v105) & 0xF;
    if ((v105 & 0x2000000000000000) == 0) {
      uint64_t v107 = v106 & 0xFFFFFFFFFFFFLL;
    }
    if (v107)
    {
      *(void *)uint64_t v313 = v106;
      *(void *)&v313[8] = v105;
      sub_10002DF54();
      uint64_t v108 = v272;
      Label<>.init<A>(_:systemImage:)();
      uint64_t v109 = sub_1000063C0(&qword_1001FBBC0);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v109 - 8) + 56))(v108, 0, 1, v109);
      goto LABEL_16;
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v110 = sub_1000063C0(&qword_1001FBBC0);
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v110 - 8) + 56))(v272, 1, 1, v110);
LABEL_16:
  uint64_t v111 = v96;
  ((void (*)(unsigned char *, uint64_t, uint64_t))v285)(v76, v286, v77);
  Bindable.wrappedValue.getter();
  v96(v76, v77);
  uint64_t v112 = *(void *)v313;
  swift_getKeyPath();
  *(void *)uint64_t v313 = v112;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v113 = (uint64_t *)(v112 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__slots);
  swift_beginAccess();
  uint64_t v114 = *v113;
  swift_bridgeObjectRetain();
  swift_release();
  uint64_t v115 = *(void *)(v114 + 16);
  swift_bridgeObjectRelease();
  id v271 = v96;
  if (!v115)
  {
    ((void (*)(unsigned char *, uint64_t, uint64_t))v285)(v76, v286, v77);
    Bindable.wrappedValue.getter();
    v96(v76, v77);
    uint64_t v124 = *(void *)v313;
    swift_getKeyPath();
    uint64_t v266 = v95;
    *(void *)uint64_t v313 = v124;
    uint64_t v276 = v104;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    int v125 = *(unsigned __int8 *)(v124
                              + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__hasGeneratedResponseDrafts);
    swift_release();
    if (v125 == 1)
    {
      uint64_t v126 = v279;
      uint64_t v127 = (long long *)(v279 + *(int *)(v252 + 44));
      long long v128 = *v127;
      uint64_t v129 = *((void *)v127 + 2);
      long long v290 = v128;
      uint64_t v291 = v129;
      sub_1000063C0(&qword_1001FF890);
      State.projectedValue.getter();
      long long v259 = *(_OWORD *)v313;
      uint64_t v250 = v314;
      uint64_t v251 = *(unsigned char **)&v313[16];
      long long v130 = v255;
      sub_1000E98F0(v126, (uint64_t)v255, type metadata accessor for CompositionConfirmView);
      unint64_t v131 = (*(unsigned __int8 *)(v253 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v253 + 80);
      uint64_t v132 = swift_allocObject();
      uint64_t v133 = v286;
      sub_1000E99F0((uint64_t)v130, v132 + v131, type metadata accessor for CompositionConfirmView);
      type metadata accessor for CompositionModel(0);
      uint64_t v134 = Environment.init<A>(_:)();
      long long v135 = v257;
      *uint64_t v257 = v134;
      *((unsigned char *)v135 + 8) = v136 & 1;
      *((_OWORD *)v135 + 1) = v259;
      uint64_t v137 = v250;
      v135[4] = (uint64_t)v251;
      v135[5] = (uint64_t)v137;
      v135[6] = (uint64_t)sub_1000ECAD4;
      v135[7] = v132;
      swift_storeEnumTagMultiPayload();
      sub_1000ECE04();
      sub_1000ECE58();
      _ConditionalContent<>.init(storage:)();
    }
    else
    {
      uint64_t v138 = v255;
      sub_1000E98F0(v279, (uint64_t)v255, type metadata accessor for CompositionConfirmView);
      unint64_t v139 = (*(unsigned __int8 *)(v253 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v253 + 80);
      uint64_t v140 = swift_allocObject();
      sub_1000E99F0((uint64_t)v138, v140 + v139, type metadata accessor for CompositionConfirmView);
      sub_1000063C0(&qword_100201C78);
      sub_1000ECD44();
      uint64_t v141 = v242;
      Button.init(action:label:)();
      uint64_t KeyPath = swift_getKeyPath();
      id v144 = v245;
      uint64_t v143 = v246;
      *uint64_t v245 = 0;
      *((void *)v144 + 1) = 0;
      uint64_t v145 = (uint64_t *)((char *)v144 + *(int *)(v143 + 28));
      *uint64_t v145 = swift_getKeyPath();
      sub_1000063C0((uint64_t *)&unk_1001FB730);
      swift_storeEnumTagMultiPayload();
      id v146 = (char *)v144 + *(int *)(v143 + 32);
      *(void *)id v146 = KeyPath;
      v146[8] = 0;
      sub_100027F2C((unint64_t *)&unk_100201CA0, &qword_100201BD0);
      sub_1000E9680(&qword_1001FC888, (void (*)(uint64_t))type metadata accessor for PrimaryButtonStyle);
      uint64_t v147 = v248;
      uint64_t v148 = v244;
      View.buttonStyle<A>(_:)();
      uint64_t v149 = (uint64_t)v144;
      uint64_t v133 = v286;
      uint64_t v76 = v278;
      sub_1000E9960(v149, type metadata accessor for PrimaryButtonStyle);
      (*(void (**)(unsigned char *, uint64_t))(v243 + 8))(v141, v148);
      ((void (*)(unsigned char *, uint64_t, uint64_t))v285)(v76, v133, v77);
      Bindable.wrappedValue.getter();
      v111(v76, v77);
      uint64_t v150 = *(void *)v313;
      swift_getKeyPath();
      *(void *)uint64_t v313 = v150;
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      LODWORD(KeyPath) = *(unsigned __int8 *)(v150 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__state);
      swift_release();
      *(void *)&long long v259 = swift_getKeyPath();
      uint64_t v151 = swift_allocObject();
      *(unsigned char *)(v151 + 16) = KeyPath == 1;
      uint64_t v152 = v249;
      id v153 = v250;
      uint64_t v154 = (uint64_t)v247;
      (*(void (**)(unsigned char *, unsigned char *, unsigned char *))(v249 + 16))(v247, v147, v250);
      id v155 = (void *)(v154 + *(int *)(v258 + 36));
      *id v155 = v259;
      v155[1] = sub_100040414;
      v155[2] = v151;
      (*(void (**)(unsigned char *, unsigned char *))(v152 + 8))(v147, v153);
      v156 = v251;
      sub_100026FD0(v154, (uint64_t)v251, &qword_100201BE0);
      sub_100008DD4((uint64_t)v156, (uint64_t)v257, &qword_100201BE0);
      swift_storeEnumTagMultiPayload();
      sub_1000ECE04();
      sub_1000ECE58();
      _ConditionalContent<>.init(storage:)();
      sub_10002784C((uint64_t)v156, &qword_100201BE0);
    }
    id v157 = (void (*)(unsigned char *, uint64_t))v271;
    id v158 = (void (*)(unsigned char *, uint64_t, uint64_t))v285;
    ((void (*)(unsigned char *, uint64_t, uint64_t))v285)(v76, v133, v77);
    Bindable.wrappedValue.getter();
    v157(v76, v77);
    uint64_t v159 = *(void *)v313;
    swift_getKeyPath();
    *(void *)uint64_t v313 = v159;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v160 = *(void *)(v159 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__refinements);
    swift_bridgeObjectRetain();
    swift_release();
    uint64_t v161 = *(void *)(v160 + 16);
    swift_bridgeObjectRelease();
    if (v161)
    {
      v158(v76, v133, v77);
      Bindable.wrappedValue.getter();
      v157(v76, v77);
      uint64_t v162 = *(void *)v313;
      swift_getKeyPath();
      *(void *)uint64_t v313 = v162;
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      int v163 = *(unsigned __int8 *)(v162 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__state);
      swift_release();
      if (v163 != 1)
      {
        uint64_t v169 = v279;
        v170 = (long long *)(v279 + *(int *)(v252 + 44));
        long long v171 = *v170;
        uint64_t v172 = *((void *)v170 + 2);
        long long v290 = v171;
        uint64_t v291 = v172;
        sub_1000063C0(&qword_1001FF890);
        State.projectedValue.getter();
        uint64_t v165 = *(void *)v313;
        uint64_t v256 = *(void *)&v313[16];
        uint64_t v257 = *(uint64_t **)&v313[8];
        uint64_t v255 = v314;
        uint64_t v173 = *(void *)(v169 + 72);
        char v174 = *(unsigned char *)(v169 + 80);
        *(void *)&long long v290 = *(void *)(v169 + 64);
        *((void *)&v290 + 1) = v173;
        LOBYTE(v291) = v174;
        sub_1000063C0(&qword_1001FC910);
        FocusState.Binding.projectedValue.getter();
        uint64_t v166 = *(void *)v313;
        uint64_t v167 = *(void *)&v313[8];
        char v168 = v313[16];
        type metadata accessor for CompositionModel(0);
        uint64_t v164 = Environment.init<A>(_:)();
        uint64_t v161 = v175 & 1;
        goto LABEL_27;
      }
      uint64_t v164 = 0;
      uint64_t v161 = 0;
    }
    else
    {
      uint64_t v164 = 0;
    }
    uint64_t v165 = 0;
    uint64_t v256 = 0;
    uint64_t v257 = 0;
    uint64_t v255 = 0;
    uint64_t v166 = 0;
    uint64_t v167 = 0;
    char v168 = 0;
LABEL_27:
    uint64_t v176 = v260;
    sub_100008DD4((uint64_t)v269, (uint64_t)v260, &qword_100201BF0);
    uint64_t v177 = (uint64_t)v176;
    uint64_t v178 = v270;
    sub_100008DD4(v177, v270, &qword_100201BF0);
    uint64_t v179 = v178 + *(int *)(sub_1000063C0((uint64_t *)&unk_100201CC0) + 48);
    *(void *)uint64_t v179 = v164;
    *(void *)(v179 + 8) = v161;
    BOOL v180 = v257;
    *(void *)(v179 + 16) = v165;
    *(void *)(v179 + 24) = v180;
    uint64_t v181 = v255;
    *(void *)(v179 + 32) = v256;
    *(void *)(v179 + 40) = v181;
    *(void *)(v179 + 48) = v166;
    *(void *)(v179 + 56) = v167;
    *(unsigned char *)(v179 + 64) = v168;
    uint64_t v258 = v161;
    *(void *)&long long v259 = v164;
    sub_1000ECFA0(v164, v161, v165, (uint64_t)v180);
    sub_1000ECFA0(v164, v161, v165, (uint64_t)v180);
    sub_1000ED024(v164, v161, v165, (uint64_t)v180);
    sub_10002784C((uint64_t)v260, &qword_100201BF0);
    sub_100008DD4(v270, (uint64_t)v262, &qword_100201BC8);
    swift_storeEnumTagMultiPayload();
    sub_1000ECB20();
    sub_100027F2C((unint64_t *)&unk_100201C40, &qword_100201BC8);
    _ConditionalContent<>.init(storage:)();
    sub_1000ED024(v259, v258, v165, (uint64_t)v180);
    sub_10002784C(v270, &qword_100201BC8);
    sub_10002784C((uint64_t)v269, &qword_100201BF0);
    uint64_t v75 = (uint64_t)v284;
    long long v122 = (void (*)(unsigned char *, uint64_t, uint64_t))v285;
    uint64_t v77 = v277;
    uint64_t v76 = v278;
    uint64_t v95 = v266;
    uint64_t v123 = v276;
    goto LABEL_28;
  }
  long long v116 = (unsigned char *)v259;
  long long v117 = (void (*)(void))v285;
  ((void (*)(void, uint64_t, uint64_t))v285)(v259, v286, v77);
  Bindable.projectedValue.getter();
  v96(v116, v77);
  swift_getKeyPath();
  Bindable<A>.subscript.getter();
  swift_release();
  v96(v76, v77);
  uint64_t v118 = *(void *)v313;
  type metadata accessor for CompositionModel(0);
  long long v270 = *(_OWORD *)&v313[8];
  uint64_t v119 = Environment.init<A>(_:)();
  uint64_t v120 = v262;
  *id v262 = v119;
  *((unsigned char *)v120 + 8) = v121 & 1;
  v120[2] = v118;
  *(_OWORD *)(v120 + 3) = v270;
  swift_storeEnumTagMultiPayload();
  sub_1000ECB20();
  sub_100027F2C((unint64_t *)&unk_100201C40, &qword_100201BC8);
  _ConditionalContent<>.init(storage:)();
  long long v122 = (void (*)(unsigned char *, uint64_t, uint64_t))v117;
  uint64_t v123 = v104;
  uint64_t v75 = (uint64_t)v284;
LABEL_28:
  uint64_t v182 = type metadata accessor for FeedbackFeatureFlags();
  unint64_t v314 = (unsigned char *)v182;
  uint64_t v315 = sub_1000E9680((unint64_t *)&unk_1001FDED0, (void (*)(uint64_t))&type metadata accessor for FeedbackFeatureFlags);
  long long v183 = sub_10002E148((uint64_t *)v313);
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v182 - 8) + 104))(v183, enum case for FeedbackFeatureFlags.CentralizedFeedback(_:), v182);
  LOBYTE(v182) = isFeatureEnabled(_:)();
  sub_100027DBC((uint64_t)v313);
  if (v182)
  {
    uint64_t v184 = v286;
    v122(v76, v286, v77);
    Bindable.wrappedValue.getter();
    uint64_t v276 = v123;
    ((void (*)(unsigned char *, uint64_t))v271)(v76, v77);
    uint64_t v185 = *(void *)v313;
    swift_getKeyPath();
    *(void *)uint64_t v313 = v185;
    sub_1000E9680((unint64_t *)&qword_1001FD2A0, (void (*)(uint64_t))type metadata accessor for ToolModel);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v186 = *(void *)(v185 + 40);
    *(void *)&long long v270 = *(void *)(v185 + 32);
    uint64_t v277 = v186;
    swift_bridgeObjectRetain();
    swift_release();
    v122(v76, v184, v77);
    Bindable.wrappedValue.getter();
    unint64_t v187 = (void (*)(unsigned char *, uint64_t))v271;
    ((void (*)(unsigned char *, uint64_t))v271)(v76, v77);
    v269 = (unsigned char *)sub_100068CD8();
    uint64_t v263 = v188;
    swift_release();
    v122(v76, v184, v77);
    Bindable.wrappedValue.getter();
    v187(v76, v77);
    uint64_t v189 = (uint64_t *)sub_100068D30();
    uint64_t v261 = v190;
    id v262 = v189;
    swift_release();
    uint64_t v266 = v95;
    v122(v76, v184, v77);
    id v191 = v187;
    Bindable.wrappedValue.getter();
    v187(v76, v77);
    uint64_t v192 = *(void *)v313;
    swift_getKeyPath();
    *(void *)uint64_t v313 = v192;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    long long v193 = *(void **)(v192 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__resultAttributedString);
    if (v193)
    {
      id v194 = v193;
      id v195 = [v194 string];
      uint64_t v196 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v255 = v197;
      uint64_t v256 = v196;
      swift_release();
    }
    else
    {
      swift_release();
      uint64_t v255 = (unsigned char *)0xE000000000000000;
      uint64_t v256 = 0;
    }
    ((void (*)(unsigned char *, uint64_t, uint64_t))v285)(v76, v184, v77);
    Bindable.wrappedValue.getter();
    v191(v76, v77);
    uint64_t v198 = *(void *)v313;
    swift_getKeyPath();
    *(void *)uint64_t v313 = v198;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    long long v199 = *(unsigned char **)(v198 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__modelInfoString + 8);
    *(void *)&long long v259 = *(void *)(v198 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__modelInfoString);
    id v260 = v199;
    swift_bridgeObjectRetain();
    swift_release();
    uint64_t v200 = *(void *)(v279 + 96);
    *(void *)uint64_t v313 = *(void *)(v279 + 88);
    *(void *)&v313[8] = v200;
    sub_1000063C0(&qword_1001FC678);
    State.wrappedValue.getter();
    uint64_t v279 = v290;
    uint64_t v201 = (void (*)(unsigned char *, uint64_t, uint64_t))v285;
    ((void (*)(unsigned char *, uint64_t, uint64_t))v285)(v76, v184, v77);
    Bindable.wrappedValue.getter();
    long long v202 = v271;
    ((void (*)(unsigned char *, uint64_t))v271)(v76, v77);
    uint64_t v203 = *(void *)v313;
    swift_getKeyPath();
    unint64_t v204 = (void (*)(unsigned char *, uint64_t))v202;
    id v205 = v76;
    *(void *)uint64_t v313 = v203;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    long long v206 = v201;
    LODWORD(v202) = *(unsigned __int8 *)(v203 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__state);
    swift_release();
    BOOL v207 = 1;
    if (v202 != 1)
    {
      v201(v76, v286, v77);
      Bindable.wrappedValue.getter();
      v204(v76, v77);
      uint64_t v208 = *(void *)v313;
      swift_getKeyPath();
      *(void *)uint64_t v313 = v208;
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      int v209 = *(unsigned __int8 *)(v208 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__state);
      swift_release();
      BOOL v207 = v209 == 2;
    }
    LODWORD(v258) = v207;
    v201(v76, v286, v77);
    Bindable.wrappedValue.getter();
    v204(v76, v77);
    uint64_t v210 = *(void *)v313;
    swift_getKeyPath();
    *(void *)uint64_t v313 = v210;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    long long v211 = (uint64_t **)(v210 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__attachments);
    swift_beginAccess();
    uint64_t v257 = *v211;
    swift_bridgeObjectRetain();
    swift_release();
    uint64_t v212 = v286;
    v201(v205, v286, v77);
    Bindable.wrappedValue.getter();
    id v213 = (void (*)(unsigned char *, uint64_t))v271;
    ((void (*)(unsigned char *, uint64_t))v271)(v205, v77);
    uint64_t v214 = *(void *)v313;
    swift_getKeyPath();
    uint64_t v215 = v77;
    *(void *)uint64_t v313 = v214;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v216 = *(void *)(v214 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__refinements);
    swift_bridgeObjectRetain();
    swift_release();
    v206(v205, v212, v215);
    Bindable.wrappedValue.getter();
    v213(v205, v215);
    uint64_t v217 = *(void *)v313;
    swift_getKeyPath();
    *(void *)uint64_t v313 = v217;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    id v218 = (uint64_t *)(v217 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__generatedImages);
    swift_beginAccess();
    uint64_t v219 = *v218;
    swift_bridgeObjectRetain();
    swift_release();
    *(void *)&long long v290 = 0x3FF0000000000000;
    State.init(wrappedValue:)();
    *(void *)&long long v290 = v279;
    *((void *)&v290 + 1) = v270;
    uint64_t v291 = v277;
    v292 = v269;
    uint64_t v293 = v263;
    v294 = v262;
    uint64_t v295 = v261;
    uint64_t v296 = v256;
    v297 = v255;
    uint64_t v298 = v259;
    v299 = v260;
    v300 = v257;
    uint64_t v301 = v216;
    uint64_t v302 = v219;
    long long v303 = xmmword_10018C770;
    uint64_t v304 = 0;
    char v305 = 1;
    char v306 = v258;
    __int16 v307 = 2;
    char v308 = 0;
    uint64_t v310 = 0;
    uint64_t v309 = 0;
    uint64_t v311 = *(void *)v313;
    uint64_t v312 = *(void *)&v313[8];
    nullsub_1(&v290);
    sub_100026FD0((uint64_t)&v290, (uint64_t)v313, &qword_100201C50);
    uint64_t v75 = (uint64_t)v284;
  }
  else
  {
    sub_100064980(&v290);
    sub_100026FD0((uint64_t)&v290, (uint64_t)v313, &qword_100201C50);
  }
  uint64_t v220 = v282;
  sub_100008DD4((uint64_t)v280, (uint64_t)v282, &qword_100201C10);
  uint64_t v221 = v272;
  uint64_t v222 = v267;
  sub_100008DD4((uint64_t)v272, (uint64_t)v267, &qword_1001FDE68);
  int v223 = v273;
  uint64_t v224 = v268;
  sub_100008DD4((uint64_t)v273, (uint64_t)v268, (uint64_t *)&unk_100201C00);
  sub_100026FD0((uint64_t)v313, (uint64_t)v288, &qword_100201C50);
  sub_100008DD4((uint64_t)v220, v75, &qword_100201C10);
  uint64_t v225 = (int *)sub_1000063C0(&qword_100201C58);
  uint64_t v226 = v75 + v225[12];
  uint64_t v227 = (uint64_t)v265;
  *(void *)uint64_t v226 = v265;
  LOBYTE(v220) = v264;
  *(unsigned char *)(v226 + 8) = v264;
  sub_100008DD4((uint64_t)v222, v75 + v225[16], &qword_1001FDE68);
  sub_100008DD4((uint64_t)v224, v75 + v225[20], (uint64_t *)&unk_100201C00);
  uint64_t v228 = v75 + v225[24];
  sub_100026FD0((uint64_t)v288, (uint64_t)v289, &qword_100201C50);
  sub_100026FD0((uint64_t)v289, v228, &qword_100201C50);
  sub_100024D64(v227, (char)v220);
  sub_100064B1C(v289, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100064A04);
  sub_10002784C((uint64_t)v223, (uint64_t *)&unk_100201C00);
  sub_10002784C((uint64_t)v221, &qword_1001FDE68);
  sub_10002784C((uint64_t)v280, &qword_100201C10);
  sub_100026FD0((uint64_t)v288, (uint64_t)&v290, &qword_100201C50);
  sub_100064B1C(&v290, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100064B88);
  sub_10002784C((uint64_t)v224, (uint64_t *)&unk_100201C00);
  sub_10002784C((uint64_t)v222, &qword_1001FDE68);
  sub_100024D78(v227, (char)v220);
  sub_10002784C((uint64_t)v282, &qword_100201C10);
  uint64_t v229 = sub_1000063C0(&qword_100201C60);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v229 - 8) + 56))(v75, 0, 1, v229);
  uint64_t v74 = v283;
  sub_100026FD0(v75, (uint64_t)v283, &qword_100201C18);
  uint64_t v53 = (uint64_t)v281;
LABEL_37:
  uint64_t v230 = v274;
  sub_100008DD4(v53, (uint64_t)v274, &qword_100201C28);
  sub_100008DD4((uint64_t)v74, v75, &qword_100201C18);
  uint64_t v231 = v275;
  sub_100008DD4((uint64_t)v230, v275, &qword_100201C28);
  uint64_t v232 = sub_1000063C0((uint64_t *)&unk_100201C68);
  sub_100008DD4(v75, v231 + *(int *)(v232 + 48), &qword_100201C18);
  sub_10002784C((uint64_t)v74, &qword_100201C18);
  sub_10002784C(v53, &qword_100201C28);
  sub_10002784C(v75, &qword_100201C18);
  return sub_10002784C((uint64_t)v230, &qword_100201C28);
}

uint64_t sub_1000E0700()
{
  uint64_t v0 = sub_1000063C0(&qword_100201B10);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = swift_projectBox();
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v4, v0);
  Bindable.wrappedValue.getter();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  uint64_t v5 = v9;
  swift_getKeyPath();
  uint64_t v9 = v5;
  sub_1000E9680((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  uint64_t result = swift_release();
  if (Strong)
  {
    if ([Strong respondsToSelector:"updatePromptEntryState:"]) {
      [Strong updatePromptEntryState:1];
    }
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1000E08BC()
{
  type metadata accessor for CompositionConfirmView(0);
  sub_1000063C0(&qword_1001FF890);
  State.wrappedValue.getter();
  sub_1000DCBC8(v1, v2);
  return swift_bridgeObjectRelease();
}

double sub_1000E093C@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = static VerticalAlignment.center.getter();
  sub_1000E09F0((uint64_t)v12);
  uint64_t v3 = v12[0];
  uint64_t v4 = v12[1];
  char v5 = v13;
  uint64_t v6 = v14;
  uint64_t v7 = v15;
  char v8 = v16;
  uint64_t v9 = v17;
  char v10 = static Edge.Set.all.getter();
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  *(void *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = v4;
  *(unsigned char *)(a1 + 40) = v5;
  *(void *)(a1 + 48) = v6;
  *(void *)(a1 + 56) = v7;
  *(unsigned char *)(a1 + 64) = v8;
  *(void *)(a1 + 72) = v9;
  *(unsigned char *)(a1 + 80) = v10;
  double result = 0.0;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(unsigned char *)(a1 + 120) = 1;
  return result;
}

uint64_t sub_1000E09F0@<X0>(uint64_t a1@<X8>)
{
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v2 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  char v8 = v7 & 1;
  uint64_t v9 = Image.init(_internalSystemName:)();
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 40) = 1;
  *(void *)(a1 + 48) = v9;
  sub_10002783C(v2, v4, v8);
  swift_bridgeObjectRetain();
  sub_100026F18(v2, v4, v8);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1000E0AE4(uint64_t a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = sub_1000063C0(&qword_100201B10);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v10 = *a2;
  uint64_t v11 = swift_projectBox();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v11, v6);
  Bindable.wrappedValue.getter();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v12 = v23;
  swift_getKeyPath();
  uint64_t v23 = v12;
  sub_1000E9680((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  LOBYTE(a2) = *(unsigned char *)(v12 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__wantsInlineEditing);
  uint64_t result = swift_release();
  if ((a2 & 1) == 0)
  {
    char v14 = *(unsigned char *)(a4 + 40);
    if (v10)
    {
      uint64_t v15 = swift_retain();
      sub_100020A44(v15, v14);
      swift_release();
      sub_10011E6F4();
      swift_release();
    }
    uint64_t v16 = swift_retain();
    uint64_t v17 = sub_100020A44(v16, v14);
    swift_release();
    swift_getKeyPath();
    uint64_t v23 = v17;
    sub_1000E9680((unint64_t *)&qword_1001FAE20, (void (*)(uint64_t))type metadata accessor for CommonUIManager);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    int v18 = *(unsigned __int8 *)(v17 + 81);
    uint64_t result = swift_release();
    if (v10 != v18)
    {
      uint64_t v19 = swift_retain();
      uint64_t v20 = sub_100020A44(v19, v14);
      swift_release();
      uint64_t KeyPath = swift_getKeyPath();
      __chkstk_darwin(KeyPath);
      *(&v22 - 2) = v20;
      *((unsigned char *)&v22 - 8) = v10;
      uint64_t v23 = v20;
      ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
      swift_release();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1000E0E04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v40 = a3;
  uint64_t v38 = sub_1000063C0(&qword_1001FDDD0);
  __chkstk_darwin(v38);
  uint64_t v35 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000063C0(&qword_1001FDDD8);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ToolbarItemPlacement();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = sub_1000063C0((uint64_t *)&unk_1001FDDE0);
  uint64_t v36 = *(void *)(v11 - 8);
  uint64_t v37 = v11;
  __chkstk_darwin(v11);
  char v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_1000063C0(&qword_100201B88);
  uint64_t v14 = __chkstk_darwin(v39);
  uint64_t v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  int v18 = (char *)&v31 - v17;
  if (sub_1000DCAA0())
  {
    uint64_t v19 = sub_1000063C0((uint64_t *)&unk_100201BA0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v16, 1, 1, v19);
    sub_100027F2C((unint64_t *)&unk_1001FDDA0, (uint64_t *)&unk_100201BA0);
    static ToolbarContentBuilder.buildIf<A>(_:)();
    sub_10002784C((uint64_t)v16, &qword_100201B88);
  }
  else
  {
    uint64_t v20 = static ToolbarItemPlacement.cancellationAction.getter();
    uint64_t v33 = v6;
    uint64_t v31 = (uint64_t)&v31;
    __chkstk_darwin(v20);
    uint64_t v32 = v13;
    *(&v31 - 2) = a1;
    *(&v31 - 1) = a2;
    sub_1000063C0(&qword_1001FC6B8);
    uint64_t v34 = v9;
    sub_100027F2C((unint64_t *)&unk_1001FDDF0, &qword_1001FC6B8);
    ToolbarItem<>.init(placement:content:)();
    uint64_t v21 = static ToolbarItemPlacement.confirmationAction.getter();
    __chkstk_darwin(v21);
    *(&v31 - 2) = a1;
    *(&v31 - 1) = a2;
    sub_1000063C0(&qword_1001FC6D0);
    sub_10003F498();
    uint64_t v22 = v34;
    ToolbarItem<>.init(placement:content:)();
    uint64_t v23 = v37;
    uint64_t v24 = v36;
    uint64_t v25 = &v35[*(int *)(v38 + 48)];
    uint64_t v26 = v32;
    (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v35, v32, v37);
    uint64_t v27 = v22;
    uint64_t v28 = v33;
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v25, v27, v33);
    TupleToolbarContent.init(_:)();
    uint64_t v29 = sub_1000063C0((uint64_t *)&unk_100201BA0);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v16, 0, 1, v29);
    sub_100027F2C((unint64_t *)&unk_1001FDDA0, (uint64_t *)&unk_100201BA0);
    static ToolbarContentBuilder.buildIf<A>(_:)();
    sub_10002784C((uint64_t)v16, &qword_100201B88);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v34, v28);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);
  }
  sub_1000EC558();
  static ToolbarContentBuilder.buildBlock<A>(_:)();
  return sub_10002784C((uint64_t)v18, &qword_100201B88);
}

uint64_t sub_1000E136C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CompositionConfirmView(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4 - 8);
  LocalizedStringKey.init(stringLiteral:)();
  sub_1000E98F0(a1, (uint64_t)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CompositionConfirmView);
  unint64_t v7 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = swift_allocObject();
  sub_1000E99F0((uint64_t)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v8 + v7, type metadata accessor for CompositionConfirmView);
  *(void *)(v8 + ((v6 + v7 + 7) & 0xFFFFFFFFFFFFFFF8)) = a2;
  swift_retain();
  return Button<>.init(_:action:)();
}

uint64_t sub_1000E14F8(uint64_t a1)
{
  uint64_t v19 = type metadata accessor for NavigationPath();
  uint64_t v2 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000063C0(&qword_100201B10);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v9 = *(unsigned char *)(a1 + 40);
  uint64_t v10 = swift_retain();
  sub_100020A44(v10, v9);
  swift_release();
  sub_10011E5C0();
  swift_release();
  uint64_t v11 = swift_projectBox();
  uint64_t v17 = *(void (**)(char *))(v6 + 16);
  uint64_t v18 = v11;
  v17(v8);
  Bindable.wrappedValue.getter();
  uint64_t v12 = *(void (**)(char *, uint64_t))(v6 + 8);
  v12(v8, v5);
  sub_10006FD80(0, 0, 0, 0);
  swift_release();
  type metadata accessor for CompositionConfirmView(0);
  sub_1000063C0(&qword_1001FB438);
  Binding.wrappedValue.getter();
  uint64_t v13 = NavigationPath.count.getter();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v19);
  if (v13 < 1)
  {
    ((void (*)(char *, uint64_t, uint64_t))v17)(v8, v18, v5);
    Bindable.wrappedValue.getter();
    v12(v8, v5);
    uint64_t v15 = v20;
    swift_getKeyPath();
    uint64_t v20 = v15;
    sub_1000E9680((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    uint64_t result = swift_release();
    if (Strong)
    {
      [Strong endWritingTools];
      return swift_unknownObjectRelease();
    }
  }
  else
  {
    Binding.wrappedValue.getter();
    NavigationPath.removeLast(_:)(1);
    return Binding.wrappedValue.setter();
  }
  return result;
}

uint64_t sub_1000E184C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v30 = a2;
  uint64_t v33 = a3;
  uint64_t v4 = sub_1000063C0(&qword_100201B10);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for CompositionConfirmView(0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8 - 8);
  uint64_t v11 = (char *)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000063C0(&qword_1001FC6B8);
  uint64_t v31 = *(void *)(v12 - 8);
  uint64_t v32 = v12;
  __chkstk_darwin(v12);
  uint64_t v29 = (char *)v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28[1] = LocalizedStringKey.init(stringLiteral:)();
  sub_1000E98F0(a1, (uint64_t)v11, type metadata accessor for CompositionConfirmView);
  unint64_t v14 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v15 = (v10 + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v16 = swift_allocObject();
  sub_1000E99F0((uint64_t)v11, v16 + v14, type metadata accessor for CompositionConfirmView);
  *(void *)(v16 + v15) = v30;
  swift_retain();
  uint64_t v17 = v29;
  Button<>.init(_:action:)();
  uint64_t v18 = swift_projectBox();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v18, v4);
  Bindable.wrappedValue.getter();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v19 = v34;
  swift_getKeyPath();
  uint64_t v34 = v19;
  sub_1000E9680((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  LODWORD(v14) = *(unsigned __int8 *)(v19 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__state);
  swift_release();
  BOOL v20 = v14 == 1;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v22 = swift_allocObject();
  *(unsigned char *)(v22 + 16) = v20;
  uint64_t v24 = v31;
  uint64_t v23 = v32;
  uint64_t v25 = v33;
  (*(void (**)(uint64_t, char *, uint64_t))(v31 + 16))(v33, v17, v32);
  uint64_t v26 = (uint64_t *)(v25 + *(int *)(sub_1000063C0(&qword_1001FC6D0) + 36));
  *uint64_t v26 = KeyPath;
  v26[1] = (uint64_t)sub_100026D50;
  v26[2] = v22;
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v17, v23);
}

uint64_t sub_1000E1C4C(uint64_t a1)
{
  uint64_t v2 = sub_1000063C0(&qword_100201B10);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(a1) = *(unsigned char *)(a1 + 40);
  uint64_t v6 = swift_retain();
  sub_100020A44(v6, a1);
  swift_release();
  sub_10011E5C0();
  swift_release();
  uint64_t v7 = swift_projectBox();
  uint64_t v8 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v8(v5, v7, v2);
  Bindable.wrappedValue.getter();
  uint64_t v9 = *(void (**)(char *, uint64_t))(v3 + 8);
  v9(v5, v2);
  sub_10006FD80(1u, 0, 0, 0);
  swift_release();
  v8(v5, v7, v2);
  Bindable.wrappedValue.getter();
  v9(v5, v2);
  uint64_t v10 = v14;
  swift_getKeyPath();
  uint64_t v14 = v10;
  sub_1000E9680((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  uint64_t result = swift_release();
  if (Strong)
  {
    [Strong endWritingTools];
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1000E1E98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1000063C0(&qword_100202020);
  uint64_t v6 = v5 - 8;
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*v2) {
    uint64_t v9 = 0x404E000000000000;
  }
  else {
    uint64_t v9 = 0;
  }
  if (*v2) {
    uint64_t v10 = 0x4020000000000000;
  }
  else {
    uint64_t v10 = 0x4034000000000000;
  }
  char v11 = static Edge.Set.all.getter();
  uint64_t v12 = sub_1000063C0(&qword_100202028);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v8, a1, v12);
  uint64_t v13 = &v8[*(int *)(v6 + 44)];
  *uint64_t v13 = v11;
  *((void *)v13 + 1) = v9;
  *((void *)v13 + 2) = v10;
  *((void *)v13 + 3) = 0;
  *((void *)v13 + 4) = v10;
  v13[40] = 0;
  return sub_100026FD0((uint64_t)v8, a2, &qword_100202020);
}

id sub_1000E1FB4()
{
  uint64_t v1 = (_OWORD *)v0;
  char v2 = *(unsigned char *)(v0 + 8);
  sub_1000E9C00(v0);
  uint64_t v3 = swift_retain();
  uint64_t v4 = sub_100020F7C(v3, v2);
  swift_release();
  swift_getKeyPath();
  uint64_t v17 = v4;
  sub_1000E9680((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v5 = *(void *)(v4 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__attachmentManager);
  swift_retain();
  swift_release();
  uint64_t v6 = (objc_class *)type metadata accessor for PromptEntryViewCoordinator();
  uint64_t v7 = (char *)objc_allocWithZone(v6);
  *(void *)&v7[OBJC_IVAR____TtC21WritingToolsUIService26PromptEntryViewCoordinator_collectionView] = 0;
  *(void *)&v7[OBJC_IVAR____TtC21WritingToolsUIService26PromptEntryViewCoordinator_dataSource] = 0;
  uint64_t v8 = &v7[OBJC_IVAR____TtC21WritingToolsUIService26PromptEntryViewCoordinator_owner];
  *(_OWORD *)uint64_t v8 = *v1;
  long long v9 = v1[4];
  long long v11 = v1[1];
  long long v10 = v1[2];
  *((_OWORD *)v8 + 3) = v1[3];
  *((_OWORD *)v8 + 4) = v9;
  *((_OWORD *)v8 + 1) = v11;
  *((_OWORD *)v8 + 2) = v10;
  long long v12 = v1[5];
  long long v13 = v1[6];
  long long v14 = v1[7];
  *(_OWORD *)(v8 + 121) = *(_OWORD *)((char *)v1 + 121);
  *((_OWORD *)v8 + 6) = v13;
  *((_OWORD *)v8 + 7) = v14;
  *((_OWORD *)v8 + 5) = v12;
  *(void *)&v7[OBJC_IVAR____TtC21WritingToolsUIService26PromptEntryViewCoordinator_attachmentManager] = v5;
  v16.receiver = v7;
  v16.super_class = v6;
  return [super init];
}

void sub_1000E212C(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v144 = a2;
  uint64_t v5 = sub_1000063C0(&qword_1001FF820);
  __chkstk_darwin(v5 - 8);
  unint64_t v131 = (char *)&v130 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v143 = type metadata accessor for IntelligenceUI.PromptEntryView.PlaceholderConfiguration();
  id v140 = *(id *)(v143 - 8);
  uint64_t v7 = __chkstk_darwin(v143);
  uint64_t v138 = (char *)&v130 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  unint64_t v139 = (char *)&v130 - v9;
  uint64_t v137 = type metadata accessor for UIPromptBackgroundView.FillStyle();
  uint64_t v136 = *(void *)(v137 - 8);
  __chkstk_darwin(v137);
  long long v135 = (uint64_t *)((char *)&v130 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = sub_1000063C0(&qword_100201928);
  __chkstk_darwin(v11 - 8);
  id v142 = (char *)&v130 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v134 = type metadata accessor for UIPromptBackgroundView.Configuration();
  uint64_t v133 = *(void *)(v134 - 8);
  uint64_t v13 = __chkstk_darwin(v134);
  uint64_t v132 = (char *)&v130 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  objc_super v16 = (char *)&v130 - v15;
  uint64_t v17 = (void *)IntelligenceUI.PromptEntryView.textView.getter();
  long long v18 = *(_OWORD *)(v2 + 32);
  long long v151 = *(_OWORD *)(v2 + 16);
  long long v152 = v18;
  sub_1000063C0((uint64_t *)&unk_1001FF220);
  Binding.wrappedValue.getter();
  NSString v19 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v17 setText:v19];

  BOOL v20 = (void *)IntelligenceUI.PromptEntryView.trailingButton.getter();
  [v20 setNeedsUpdateConfiguration];

  uint64_t v145 = a1;
  uint64_t v21 = (void *)IntelligenceUI.PromptEntryView.textView.getter();
  int v22 = *(unsigned __int8 *)(v2 + 8);
  uint64_t v23 = swift_retain();
  uint64_t v24 = sub_100020F7C(v23, v22);
  swift_release();
  swift_getKeyPath();
  *(void *)&long long v151 = v24;
  sub_1000E9680((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  int v25 = *(unsigned __int8 *)(v24 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__state);
  swift_release();
  if (v25 == 1)
  {
    uint64_t v26 = 0;
  }
  else
  {
    uint64_t v27 = swift_retain();
    uint64_t v28 = sub_100020F7C(v27, v22);
    swift_release();
    swift_getKeyPath();
    *(void *)&long long v151 = v28;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v26 = *(unsigned __int8 *)(v28 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__isFeatureEnabled);
    swift_release();
  }
  [v21 setSelectable:v26];

  uint64_t v29 = (void *)IntelligenceUI.PromptEntryView.textView.getter();
  uint64_t v30 = swift_retain();
  uint64_t v31 = sub_100020F7C(v30, v22);
  swift_release();
  swift_getKeyPath();
  *(void *)&long long v151 = v31;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  int v32 = *(unsigned __int8 *)(v31 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__state);
  swift_release();
  int v141 = v22;
  if (v32 == 1)
  {
    uint64_t v33 = 0;
  }
  else
  {
    uint64_t v34 = swift_retain();
    uint64_t v35 = sub_100020F7C(v34, v22);
    swift_release();
    swift_getKeyPath();
    *(void *)&long long v151 = v35;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v33 = *(unsigned __int8 *)(v35 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__isFeatureEnabled);
    swift_release();
  }
  [v29 setEditable:v33];

  long long v153 = *(_OWORD *)(v3 + 96);
  char v154 = *(unsigned char *)(v3 + 112);
  long long v151 = *(_OWORD *)(v3 + 96);
  LOBYTE(v152) = *(unsigned char *)(v3 + 112);
  uint64_t v36 = sub_1000063C0(&qword_1001FC910);
  FocusState.Binding.wrappedValue.getter();
  int v37 = v147;
  uint64_t v38 = v145;
  uint64_t v39 = (void *)dispatch thunk of IntelligenceUI.PromptEntryView.backgroundView.getter();
  if (v37 == 1)
  {
    uint64_t v143 = v36;
    dispatch thunk of UIPromptBackgroundView.configuration.getter();

    uint64_t v40 = v132;
    static UIPromptBackgroundView.Configuration.intelligent.getter();
    sub_1000E9680((unint64_t *)&unk_100201950, (void (*)(uint64_t))&type metadata accessor for UIPromptBackgroundView.Configuration);
    uint64_t v41 = v134;
    char v42 = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t v43 = *(void (**)(char *, uint64_t))(v133 + 8);
    v43(v40, v41);
    v43(v16, v41);
    if ((v42 & 1) == 0)
    {
      uint64_t v44 = (void *)dispatch thunk of IntelligenceUI.PromptEntryView.backgroundView.getter();
      static UIPromptBackgroundView.Configuration.intelligent.getter();
      dispatch thunk of UIPromptBackgroundView.configuration.setter();

      NSString v45 = String._bridgeToObjectiveC()();
      unint64_t v139 = (char *)self;
      id v46 = [v139 systemImageNamed:v45];

      uint64_t v47 = (void *)IntelligenceUI.PromptEntryView.leadingButton.getter();
      id v48 = [self tintColor];
      uint64_t v49 = UIFontTextStyleBody;
      char v50 = v142;
      static UIButton.Configuration.borderless()();
      id v51 = [self configurationWithTextStyle:v49];
      UIButton.Configuration.preferredSymbolConfigurationForImage.setter();
      id v140 = v46;
      UIButton.Configuration.image.setter();
      id v52 = v48;
      UIButton.Configuration.baseForegroundColor.setter();

      uint64_t v53 = type metadata accessor for UIButton.Configuration();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v50, 0, 1, v53);
      UIButton.configuration.setter();

      uint64_t v54 = (void *)IntelligenceUI.PromptEntryView.leadingButton.getter();
      [v54 setNeedsUpdateConfiguration];

      uint64_t v55 = (void *)IntelligenceUI.PromptEntryView.leadingButton.getter();
      [v55 setShowsMenuAsPrimaryAction:1];

      id v142 = (char *)IntelligenceUI.PromptEntryView.leadingButton.getter();
      sub_1000085FC(0, &qword_1001FF298);
      NSString v56 = String._bridgeToObjectiveC()();
      id v57 = v139;
      id v58 = [v139 systemImageNamed:v56];

      char v59 = (_OWORD *)swift_allocObject();
      long long v60 = *(_OWORD *)(v3 + 112);
      v59[7] = *(_OWORD *)(v3 + 96);
      v59[8] = v60;
      *(_OWORD *)((char *)v59 + 137) = *(_OWORD *)(v3 + 121);
      long long v61 = *(_OWORD *)(v3 + 48);
      v59[3] = *(_OWORD *)(v3 + 32);
      v59[4] = v61;
      long long v62 = *(_OWORD *)(v3 + 80);
      v59[5] = *(_OWORD *)(v3 + 64);
      v59[6] = v62;
      long long v63 = *(_OWORD *)(v3 + 16);
      v59[1] = *(_OWORD *)v3;
      v59[2] = v63;
      sub_1000E9C00(v3);
      uint64_t v64 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
      NSString v65 = String._bridgeToObjectiveC()();
      id v66 = [v57 systemImageNamed:v65];

      char v67 = (_OWORD *)swift_allocObject();
      long long v68 = *(_OWORD *)(v3 + 112);
      v67[7] = *(_OWORD *)(v3 + 96);
      v67[8] = v68;
      *(_OWORD *)((char *)v67 + 137) = *(_OWORD *)(v3 + 121);
      long long v69 = *(_OWORD *)(v3 + 48);
      v67[3] = *(_OWORD *)(v3 + 32);
      v67[4] = v69;
      long long v70 = *(_OWORD *)(v3 + 80);
      v67[5] = *(_OWORD *)(v3 + 64);
      v67[6] = v70;
      long long v71 = *(_OWORD *)(v3 + 16);
      v67[1] = *(_OWORD *)v3;
      v67[2] = v71;
      sub_1000E9C00(v3);
      uint64_t v72 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
      sub_1000085FC(0, (unint64_t *)&qword_100201960);
      sub_1000063C0(&qword_1001FAFD0);
      uint64_t v73 = swift_allocObject();
      *(_OWORD *)(v73 + 16) = xmmword_10018D460;
      *(void *)(v73 + 32) = v64;
      *(void *)(v73 + 40) = v72;
      *(void *)&long long v151 = v73;
      specialized Array._endMutation()();
      v74._countAndFlagsBits = 0;
      v74._object = (void *)0xE000000000000000;
      v155.value.super.Class isa = 0;
      v155.is_nil = 0;
      Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v74, (Swift::String_optional)0, v155, 0, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)v151, v129).super.super.isa;
      uint64_t v76 = v142;
      [v142 setMenu:isa];
    }
    uint64_t v77 = swift_retain();
    char v78 = v141;
    uint64_t v79 = sub_100020F7C(v77, v141);
    swift_release();
    swift_getKeyPath();
    *(void *)&long long v151 = v79;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v80 = *(void *)(v79 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__attachmentManager);
    swift_retain();
    swift_release();
    swift_getKeyPath();
    *(void *)&long long v151 = v80;
    sub_1000E9680(&qword_100201970, (void (*)(uint64_t))type metadata accessor for AttachmentManager);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    swift_beginAccess();
    uint64_t v81 = *(void *)(v80 + 16);
    swift_bridgeObjectRetain();
    swift_release();
    uint64_t v82 = *(void *)(v81 + 16);
    swift_bridgeObjectRelease();
    if (v82)
    {
      uint64_t v83 = (void *)dispatch thunk of IntelligenceUI.PromptEntryView.accessoryView.getter();

      if (!v83)
      {
        uint64_t v84 = [(char *)objc_allocWithZone((Class)type metadata accessor for AttachmentsAccessoryView()) initWithFrame:0.0, 0.0, 0.0, 0.0];
        id v142 = v84;
        sub_1000063C0(&qword_100201938);
        UIViewRepresentableContext.coordinator.getter();
        uint64_t v85 = v147;
        char v86 = v78;
        uint64_t v87 = *(void **)&v84[OBJC_IVAR____TtC21WritingToolsUIServiceP33_C936B4EAF778CD52602455D3431E6E0E24AttachmentsAccessoryView_collectionView];
        uint64_t v88 = (void **)&v147[OBJC_IVAR____TtC21WritingToolsUIService26PromptEntryViewCoordinator_collectionView];
        swift_beginAccess();
        uint64_t v89 = *v88;
        *uint64_t v88 = v87;
        id v90 = v87;
        char v78 = v86;
        id v91 = v90;

        sub_100091F00();
        uint64_t v92 = v142;
        dispatch thunk of IntelligenceUI.PromptEntryView.accessoryView.setter();
      }
      sub_1000063C0(&qword_100201938);
      UIViewRepresentableContext.coordinator.getter();
      uint64_t v93 = (void *)v148;
      uint64_t v94 = swift_retain();
      uint64_t v95 = sub_100020F7C(v94, v78);
      swift_release();
      swift_getKeyPath();
      uint64_t v147 = (char *)v95;
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      uint64_t v96 = *(char **)(v95 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__attachmentManager);
      swift_retain();
      swift_release();
      swift_getKeyPath();
      uint64_t v147 = v96;
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      swift_beginAccess();
      uint64_t v97 = (void *)*((void *)v96 + 2);
      swift_bridgeObjectRetain();
      swift_release();
      sub_100092328(v97);

      swift_bridgeObjectRelease();
    }
    else
    {
      dispatch thunk of IntelligenceUI.PromptEntryView.accessoryView.setter();
      sub_1000063C0(&qword_100201938);
      UIViewRepresentableContext.coordinator.getter();
      uint64_t v119 = v146;
      uint64_t v120 = (void **)&v146[OBJC_IVAR____TtC21WritingToolsUIService26PromptEntryViewCoordinator_collectionView];
      swift_beginAccess();
      char v121 = *v120;
      *uint64_t v120 = 0;

      sub_100091F00();
    }
  }
  else
  {
    static UIPromptBackgroundView.Configuration.default.getter();
    sub_1000085FC(0, (unint64_t *)&qword_100201930);
    if (qword_1001FAD58 != -1) {
      swift_once();
    }
    swift_retain();
    uint64_t v98 = UIColor.init(_:)();
    uint64_t v99 = v135;
    uint64_t *v135 = v98;
    (*(void (**)(uint64_t *, void, uint64_t))(v136 + 104))(v99, enum case for UIPromptBackgroundView.FillStyle.solid(_:), v137);
    UIPromptBackgroundView.Configuration.fillStyle.setter();
    UIPromptBackgroundView.Configuration.shadowRadius.setter();
    int v100 = self;
    id v101 = [v100 clearColor];
    UIPromptBackgroundView.Configuration.shadowColor.setter();
    dispatch thunk of UIPromptBackgroundView.configuration.setter();

    if (qword_1001FAD40 != -1) {
      swift_once();
    }
    swift_retain();
    UIColor.init(_:)();
    int v102 = v139;
    IntelligenceUI.PromptEntryView.PlaceholderConfiguration.init(textColor:)();
    uint64_t v103 = (void (**)(char *, uint64_t))v140;
    (*((void (**)(char *, char *, uint64_t))v140 + 2))(v138, v102, v143);
    dispatch thunk of IntelligenceUI.PromptEntryView.placeholderConfiguration.setter();
    NSString v104 = String._bridgeToObjectiveC()();
    id v105 = [self _systemImageNamed:v104];

    uint64_t v106 = (void *)IntelligenceUI.PromptEntryView.leadingButton.getter();
    id v107 = [v100 labelColor];
    uint64_t v108 = v142;
    static UIButton.Configuration.borderless()();
    id v109 = [self configurationWithTextStyle:UIFontTextStyleTitle2];
    UIButton.Configuration.preferredSymbolConfigurationForImage.setter();
    id v110 = v105;
    UIButton.Configuration.image.setter();
    UIButton.Configuration.baseForegroundColor.setter();
    uint64_t v111 = type metadata accessor for UIButton.Configuration();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v111 - 8) + 56))(v108, 0, 1, v111);
    UIButton.configuration.setter();

    uint64_t v112 = (void *)IntelligenceUI.PromptEntryView.leadingButton.getter();
    [v112 setNeedsUpdateConfiguration];

    uint64_t v113 = (void *)IntelligenceUI.PromptEntryView.textView.getter();
    [v113 setKeyboardAppearance:13];

    uint64_t v114 = (void *)IntelligenceUI.PromptEntryView.leadingButton.getter();
    [v114 setShowsMenuAsPrimaryAction:0];

    uint64_t v115 = (void *)IntelligenceUI.PromptEntryView.leadingButton.getter();
    [v115 setMenu:0];

    dispatch thunk of IntelligenceUI.PromptEntryView.accessoryView.setter();
    sub_1000063C0(&qword_100201938);
    UIViewRepresentableContext.coordinator.getter();
    long long v116 = v147;
    long long v117 = (void **)&v147[OBJC_IVAR____TtC21WritingToolsUIService26PromptEntryViewCoordinator_collectionView];
    swift_beginAccess();
    uint64_t v118 = *v117;
    char *v117 = 0;

    sub_100091F00();
    v103[1](v102, v143);
  }
  long long v148 = v153;
  char v149 = v154;
  FocusState.Binding.wrappedValue.getter();
  if (v150 == 1)
  {
    long long v122 = (void *)IntelligenceUI.PromptEntryView.textView.getter();
    unsigned __int8 v123 = [v122 isFirstResponder];

    if ((v123 & 1) == 0)
    {
      uint64_t v124 = type metadata accessor for TaskPriority();
      uint64_t v125 = (uint64_t)v131;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v124 - 8) + 56))(v131, 1, 1, v124);
      type metadata accessor for MainActor();
      id v126 = v38;
      uint64_t v127 = static MainActor.shared.getter();
      long long v128 = (void *)swift_allocObject();
      v128[2] = v127;
      v128[3] = &protocol witness table for MainActor;
      v128[4] = v126;
      sub_1001228FC(v125, (uint64_t)&unk_100201948, (uint64_t)v128);
      swift_release();
    }
  }
}

uint64_t sub_1000E3404(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a1;
  v4[3] = a4;
  type metadata accessor for MainActor();
  v4[4] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1000E349C, v6, v5);
}

uint64_t sub_1000E349C()
{
  uint64_t v1 = *(unsigned __int8 **)(v0 + 16);
  swift_release();
  uint64_t v2 = (void *)IntelligenceUI.PromptEntryView.textView.getter();
  unsigned __int8 v3 = [v2 becomeFirstResponder];

  *uint64_t v1 = v3;
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

id sub_1000E3528()
{
  type metadata accessor for IntelligenceUI.PromptEntryView();
  id v1 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  char v2 = *(unsigned char *)(v0 + 8);
  uint64_t v3 = swift_retain();
  sub_100020F7C(v3, v2);
  swift_release();
  swift_release();
  dispatch thunk of IntelligenceUI.PromptEntryView.placeholder.setter();
  uint64_t v4 = (void *)IntelligenceUI.PromptEntryView.textView.getter();
  long long v7 = *(_OWORD *)(v0 + 16);
  long long v8 = *(_OWORD *)(v0 + 32);
  sub_1000063C0((uint64_t *)&unk_1001FF220);
  Binding.wrappedValue.getter();
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v4 setText:v5, v7, v8];

  dispatch thunk of IntelligenceUI.PromptEntryView.isLeadingButtonVisible.setter();
  dispatch thunk of IntelligenceUI.PromptEntryView.isLeadingButtonConfiguredAsToggle.setter();
  dispatch thunk of IntelligenceUI.PromptEntryView.trailingButtonActivatesDictationWhenEmpty.setter();
  sub_1000063C0(&qword_100201978);
  sub_100027F2C(&qword_100201980, &qword_100201978);
  dispatch thunk of IntelligenceUI.PromptEntryView.visibleLineLimit.setter();
  sub_1000063C0(&qword_100201938);
  UIViewRepresentableContext.coordinator.getter();
  sub_1000E9680(&qword_100201988, (void (*)(uint64_t))type metadata accessor for PromptEntryViewCoordinator);
  dispatch thunk of IntelligenceUI.PromptEntryView.delegate.setter();
  return v1;
}

void sub_1000E371C(void *a1, uint64_t a2)
{
}

id sub_1000E3770@<X0>(void *a1@<X8>)
{
  id result = sub_1000E1FB4();
  *a1 = result;
  return result;
}

double sub_1000E37CC(uint64_t a1, char a2, uint64_t a3, char a4, id a5)
{
  double v6 = 10.0;
  if (a2) {
    *(double *)&a1 = 10.0;
  }
  if ((a4 & 1) == 0) {
    double v6 = *(double *)&a3;
  }
  [a5 sizeThatFits:*(double *)&a1 v6];
  return result;
}

uint64_t sub_1000E3818(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1000E9F30();

  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_1000E387C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1000E9F30();

  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_1000E38E0()
{
}

id sub_1000E3908()
{
  id v0 = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  id v1 = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v0 addSubview:v1];
  id v2 = [v0 keyboardLayoutGuide];
  [v2 useLightEffectsBackgroundBelowView:v1];

  return v0;
}

uint64_t sub_1000E39C8(uint64_t a1, char a2)
{
  if (a2) {
    return 0x4024000000000000;
  }
  return result;
}

uint64_t sub_1000E39E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1000EE6D8();

  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_1000E3A48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1000EE6D8();

  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_1000E3AAC()
{
}

uint64_t sub_1000E3AD4@<X0>(uint64_t a1@<X2>, char a2@<W3>, unsigned char *a3@<X8>)
{
  char v5 = a2 & 1;
  swift_retain();
  uint64_t v6 = sub_100020F7C(a1, v5);
  swift_release();
  swift_getKeyPath();
  sub_1000E9680((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  LOBYTE(a1) = *(unsigned char *)(v6 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__inclusionPolicy);
  uint64_t result = swift_release();
  *a3 = a1;
  return result;
}

uint64_t sub_1000E3BB0(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  char v6 = a5 & 1;
  char v7 = *a1;
  swift_retain();
  sub_100020F7C(a4, v6);
  swift_release();
  swift_getKeyPath();
  sub_1000E9680((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  swift_release();
  uint64_t v8 = swift_retain();
  uint64_t v9 = sub_100020F7C(v8, v6);
  swift_release();
  swift_getKeyPath();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v10 = *(void *)(v9 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__analyticsInstance);
  swift_retain();
  uint64_t result = swift_release();
  if (v10)
  {
    sub_100009EA0(v7);
    return swift_release();
  }
  return result;
}

uint64_t sub_1000E3D48(uint64_t a1, char a2)
{
  type metadata accessor for MainActor();
  swift_retain();
  uint64_t v4 = static MainActor.shared.getter();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = &protocol witness table for MainActor;
  *(void *)(v5 + 32) = a1;
  a2 &= 1u;
  *(unsigned char *)(v5 + 40) = a2;
  swift_retain();
  uint64_t v6 = static MainActor.shared.getter();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v6;
  *(void *)(v7 + 24) = &protocol witness table for MainActor;
  *(void *)(v7 + 32) = a1;
  *(unsigned char *)(v7 + 40) = a2;
  Binding.init(get:set:)();
  sub_1000063C0(&qword_1002020A8);
  sub_100083C40();
  sub_1000EEE7C();
  return Picker.init(selection:label:content:)();
}

uint64_t sub_1000E3EC4(uint64_t a1, char a2)
{
  swift_getKeyPath();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(unsigned char *)(v4 + 24) = a2 & 1;
  swift_retain();
  sub_1000063C0(&qword_1002020C0);
  sub_100027F2C(&qword_1002020C8, &qword_1002020C0);
  sub_100083C40();
  return ForEach<>.init(_:id:content:)();
}

uint64_t sub_1000E3FD4(char a1, char a2, char a3, uint64_t a4, char a5)
{
  char v42 = a5 & 1;
  uint64_t v8 = type metadata accessor for LocalizedStringKey.StringInterpolation();
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v9);
  __chkstk_darwin(v10);
  if (a1) {
    uint64_t v11 = 0x64657463656C6553;
  }
  else {
    uint64_t v11 = 0x74786554206C6C41;
  }
  if (a1) {
    uint64_t v12 = (void *)0xED00007478655420;
  }
  else {
    uint64_t v12 = (void *)0xE800000000000000;
  }
  LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
  if (a2)
  {
    uint64_t v13 = 0x206564756C636E49;
    unint64_t v14 = 0xE800000000000000;
  }
  else
  {
    uint64_t v13 = 0;
    unint64_t v14 = 0xE000000000000000;
  }
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v13);
  v15._countAndFlagsBits = v11;
  v15._object = v12;
  LocalizedStringKey.StringInterpolation.appendInterpolation(_:)(v15);
  swift_bridgeObjectRelease();
  v16._countAndFlagsBits = 0x209480E220;
  v16._object = (void *)0xA500000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v16);
  LocalizedStringKey.init(stringInterpolation:)();
  uint64_t v17 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v19 = v18;
  char v21 = v20;
  if (a3) {
    static Font.Weight.semibold.getter();
  }
  char v22 = v21 & 1;
  uint64_t v41 = Text.fontWeight(_:)();
  uint64_t v40 = v23;
  char v25 = v24;
  sub_100026F18(v17, v19, v22);
  swift_bridgeObjectRelease();
  LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v26._countAndFlagsBits = 23390;
  v26._object = (void *)0xE200000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v26);
  uint64_t v27 = swift_retain();
  sub_100020F7C(v27, v42);
  swift_release();
  swift_getKeyPath();
  sub_1000E9680((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_release();
  LocalizedStringKey.StringInterpolation.appendInterpolation<A>(_:specifier:)();
  v28._object = (void *)0x800000010019F980;
  v28._countAndFlagsBits = 0xD000000000000016;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v28);
  LocalizedStringKey.init(stringInterpolation:)();
  uint64_t v29 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v31 = v30;
  char v33 = v32;
  if (a3) {
    static Font.Weight.light.getter();
  }
  uint64_t v34 = Text.fontWeight(_:)();
  uint64_t v36 = v35;
  char v38 = v37 & 1;
  sub_100026F18(v29, v31, v33 & 1);
  swift_bridgeObjectRelease();
  uint64_t v43 = static Text.+ infix(_:_:)();
  sub_100026F18(v34, v36, v38);
  swift_bridgeObjectRelease();
  sub_100026F18(v41, v40, v25 & 1);
  swift_bridgeObjectRelease();
  return v43;
}

uint64_t sub_1000E44D8@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  char v5 = a2 & 1;
  uint64_t v6 = sub_1000063C0(&qword_1001FF8D0);
  __chkstk_darwin(v6 - 8);
  uint64_t v55 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = type metadata accessor for TintShapeStyle();
  uint64_t v53 = *(void *)(v54 - 8);
  __chkstk_darwin(v54);
  id v52 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000063C0(&qword_1001FBA90);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = static VerticalAlignment.center.getter();
  sub_1000E4A1C(a1, v5, (uint64_t)&v66);
  unsigned long long v14 = v66;
  unint64_t v13 = v14 >> 64;
  unint64_t v12 = v14;
  unsigned long long v15 = v66;
  uint64_t v48 = v15 >> 64;
  uint64_t v49 = v15;
  char v16 = v67[0];
  int v50 = v67[0];
  uint64_t v17 = *(void *)&v67[8];
  uint64_t v56 = *(void *)&v67[24];
  uint64_t v18 = *(void *)&v67[16];
  LOBYTE(a1) = v68;
  int v51 = v68;
  uint64_t v57 = *((void *)&v68 + 1);
  uint64_t v19 = type metadata accessor for Font.Design();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v11, 1, 1, v19);
  uint64_t v20 = static Font.system(size:weight:design:)();
  sub_10002784C((uint64_t)v11, &qword_1001FBA90);
  uint64_t KeyPath = swift_getKeyPath();
  LOBYTE(v11) = static Edge.Set.all.getter();
  EdgeInsets.init(_all:)();
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  char v65 = 1;
  char v63 = v16;
  char v61 = a1;
  char v58 = 0;
  LOBYTE(a1) = static Edge.Set.leading.getter();
  EdgeInsets.init(_all:)();
  unsigned long long v66 = (unint64_t)v47;
  v67[0] = v65;
  *(_DWORD *)&v67[1] = *(_DWORD *)v64;
  *(_DWORD *)&v67[4] = *(_DWORD *)&v64[3];
  *(_OWORD *)&v67[8] = __PAIR128__(v13, v12);
  v67[24] = v63;
  *(_DWORD *)&v67[25] = *(_DWORD *)v62;
  *(_DWORD *)&v67[28] = *(_DWORD *)&v62[3];
  *(void *)&long long v68 = v17;
  *((void *)&v68 + 1) = v18;
  *(void *)&long long v69 = v56;
  BYTE8(v69) = v61;
  *(_DWORD *)((char *)&v69 + 9) = *(_DWORD *)v60;
  HIDWORD(v69) = *(_DWORD *)&v60[3];
  *(void *)&long long v70 = v57;
  *((void *)&v70 + 1) = KeyPath;
  *(void *)&long long v71 = v20;
  BYTE8(v71) = (_BYTE)v11;
  *(_DWORD *)((char *)&v71 + 9) = *(_DWORD *)v59;
  HIDWORD(v71) = *(_DWORD *)&v59[3];
  *(void *)&long long v72 = v23;
  *((void *)&v72 + 1) = v25;
  *(void *)&long long v73 = v27;
  *((void *)&v73 + 1) = v29;
  LOBYTE(v74) = v58;
  BYTE8(v74) = a1;
  *(void *)&long long v75 = v30;
  *((void *)&v75 + 1) = v31;
  *(void *)&long long v76 = v32;
  *((void *)&v76 + 1) = v33;
  char v77 = 0;
  uint64_t v34 = v52;
  TintShapeStyle.init()();
  uint64_t v35 = v53;
  uint64_t v36 = (uint64_t)v55;
  uint64_t v37 = v54;
  (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v55, v34, v54);
  uint64_t v38 = sub_1000063C0(&qword_100202038);
  sub_100008DD4(v36, a3 + *(int *)(v38 + 36), &qword_1001FF8D0);
  long long v39 = v76;
  *(_OWORD *)(a3 + 160) = v75;
  *(_OWORD *)(a3 + 176) = v39;
  *(unsigned char *)(a3 + 192) = v77;
  long long v40 = v72;
  *(_OWORD *)(a3 + 96) = v71;
  *(_OWORD *)(a3 + 112) = v40;
  long long v41 = v74;
  *(_OWORD *)(a3 + 128) = v73;
  *(_OWORD *)(a3 + 144) = v41;
  long long v42 = v68;
  *(_OWORD *)(a3 + 32) = *(_OWORD *)&v67[16];
  *(_OWORD *)(a3 + 48) = v42;
  long long v43 = v70;
  *(_OWORD *)(a3 + 64) = v69;
  *(_OWORD *)(a3 + 80) = v43;
  long long v44 = *(_OWORD *)v67;
  *(_OWORD *)a3 = v66;
  *(_OWORD *)(a3 + 16) = v44;
  sub_1000EED70((uint64_t)&v66);
  sub_10002784C(v36, &qword_1001FF8D0);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v34, v37);
  sub_100026F18(v49, v48, v50);
  swift_bridgeObjectRelease();
  sub_100026F18(v18, v56, v51);
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000E4A1C@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  char v5 = a2 & 1;
  uint64_t v6 = swift_retain();
  uint64_t v7 = sub_100020F7C(v6, v5);
  swift_release();
  swift_getKeyPath();
  sub_1000E9680((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  char v8 = *(unsigned char *)(v7 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__inclusionPolicy);
  swift_release();
  uint64_t v9 = sub_1000E3FD4(v8, 1, 1, a1, v5);
  uint64_t v26 = v10;
  uint64_t v27 = v9;
  uint64_t v28 = v11;
  LOBYTE(v7) = v12 & 1;
  Image.init(systemName:)();
  uint64_t v13 = Text.init(_:)();
  uint64_t v15 = v14;
  char v17 = v16 & 1;
  static Font.Weight.semibold.getter();
  uint64_t v18 = Text.fontWeight(_:)();
  uint64_t v20 = v19;
  uint64_t v22 = v21;
  char v24 = v23 & 1;
  sub_100026F18(v13, v15, v17);
  swift_bridgeObjectRelease();
  *(void *)a3 = v27;
  *(void *)(a3 + 8) = v26;
  *(unsigned char *)(a3 + 16) = v7;
  *(void *)(a3 + 24) = v28;
  *(void *)(a3 + 32) = v18;
  *(void *)(a3 + 40) = v20;
  *(unsigned char *)(a3 + 48) = v24;
  *(void *)(a3 + 56) = v22;
  sub_10002783C(v27, v26, v7);
  swift_bridgeObjectRetain();
  sub_10002783C(v18, v20, v24);
  swift_bridgeObjectRetain();
  sub_100026F18(v18, v20, v24);
  swift_bridgeObjectRelease();
  sub_100026F18(v27, v26, v7);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000E4C24()
{
  uint64_t v1 = sub_1000063C0(&qword_100202030);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = &v7[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  char v5 = *((unsigned char *)v0 + 8);
  uint64_t v10 = *v0;
  char v11 = v5;
  uint64_t v8 = v10;
  char v9 = v5;
  sub_1000063C0(&qword_100202038);
  sub_1000063C0(&qword_100202040);
  sub_1000EEB6C();
  sub_100027F2C(&qword_100202090, &qword_100202040);
  Menu.init(content:label:)();
  sub_100027F2C(&qword_100202098, &qword_100202030);
  sub_1000EED1C();
  View.buttonStyle<A>(_:)();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t sub_1000E4E00@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for Capsule();
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000063C0(&qword_1002020E0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ButtonStyleConfiguration.Label();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  char v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  ButtonStyleConfiguration.label.getter();
  uint64_t v12 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v13 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v4, v12, v13);
  if (qword_1001FAD28 != -1) {
    swift_once();
  }
  uint64_t v14 = qword_1002129D0;
  sub_1000E98F0((uint64_t)v4, (uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for Capsule);
  *(void *)&v7[*(int *)(v5 + 52)] = v14;
  *(_WORD *)&v7[*(int *)(v5 + 56)] = 256;
  swift_retain();
  sub_1000E9960((uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for Capsule);
  uint64_t v15 = static Alignment.center.getter();
  uint64_t v17 = v16;
  uint64_t v18 = a1 + *(int *)(sub_1000063C0(&qword_1002020E8) + 36);
  sub_100008DD4((uint64_t)v7, v18, &qword_1002020E0);
  uint64_t v19 = (uint64_t *)(v18 + *(int *)(sub_1000063C0(&qword_1002020F0) + 36));
  *uint64_t v19 = v15;
  v19[1] = v17;
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 16))(a1, v11, v8);
  sub_10002784C((uint64_t)v7, &qword_1002020E0);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1000E50CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v29 = a1;
  uint64_t v3 = sub_1000063C0(&qword_100201E90);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_1000063C0(&qword_100201E98);
  __chkstk_darwin(v27);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_1000063C0(&qword_100201EA0);
  uint64_t v26 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v5 = static HorizontalAlignment.center.getter();
  *((void *)v5 + 1) = 0x4020000000000000;
  v5[16] = 0;
  uint64_t v10 = sub_1000063C0(&qword_100201EA8);
  sub_1000E54B8(v1, (uint64_t)&v5[*(int *)(v10 + 44)]);
  char v11 = *(unsigned char *)(v1 + 24);
  uint64_t v12 = swift_retain();
  uint64_t v13 = sub_100020F7C(v12, v11);
  swift_release();
  swift_getKeyPath();
  *(void *)&long long v30 = v13;
  sub_1000E9680((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  int v14 = *(unsigned __int8 *)(v13 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__state);
  swift_release();
  if (v14 == 1) {
    goto LABEL_3;
  }
  uint64_t v15 = swift_retain();
  uint64_t v16 = sub_100020F7C(v15, v11);
  swift_release();
  swift_getKeyPath();
  *(void *)&long long v30 = v16;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  char v17 = *(unsigned char *)(v16 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__isFeatureEnabled);
  swift_release();
  double v18 = 1.0;
  if ((v17 & 1) == 0) {
LABEL_3:
  }
    double v18 = 0.3;
  sub_100008DD4((uint64_t)v5, (uint64_t)v7, &qword_100201E90);
  *(double *)&v7[*(int *)(v27 + 36)] = v18;
  sub_10002784C((uint64_t)v5, &qword_100201E90);
  long long v30 = *(_OWORD *)(v2 + 64);
  char v31 = *(unsigned char *)(v2 + 80);
  sub_1000063C0(&qword_1001FC910);
  FocusState.Binding.wrappedValue.getter();
  LOBYTE(v30) = v32;
  uint64_t v19 = (_OWORD *)swift_allocObject();
  long long v20 = *(_OWORD *)(v2 + 144);
  v19[9] = *(_OWORD *)(v2 + 128);
  v19[10] = v20;
  v19[11] = *(_OWORD *)(v2 + 160);
  long long v21 = *(_OWORD *)(v2 + 80);
  v19[5] = *(_OWORD *)(v2 + 64);
  v19[6] = v21;
  long long v22 = *(_OWORD *)(v2 + 112);
  v19[7] = *(_OWORD *)(v2 + 96);
  v19[8] = v22;
  long long v23 = *(_OWORD *)(v2 + 16);
  v19[1] = *(_OWORD *)v2;
  v19[2] = v23;
  long long v24 = *(_OWORD *)(v2 + 48);
  _OWORD v19[3] = *(_OWORD *)(v2 + 32);
  v19[4] = v24;
  sub_1000EDABC(v2);
  sub_1000EE038();
  View.onChange<A>(of:initial:_:)();
  swift_release();
  sub_10002784C((uint64_t)v7, &qword_100201E98);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v26 + 32))(v29, v9, v28);
}

uint64_t sub_1000E54B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000063C0(&qword_100201EC0);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v20 - v8;
  long long v20 = *(_OWORD *)(a1 + 64);
  char v21 = *(unsigned char *)(a1 + 80);
  sub_1000063C0(&qword_1001FC910);
  FocusState.Binding.wrappedValue.getter();
  if (v22 != 1) {
    goto LABEL_5;
  }
  char v10 = *(unsigned char *)(a1 + 24);
  uint64_t v11 = swift_retain();
  uint64_t v12 = sub_100020F7C(v11, v10);
  swift_release();
  swift_getKeyPath();
  *(void *)&long long v20 = v12;
  sub_1000E9680((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v13 = *(void *)(v12 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__allWordCount);
  swift_release();
  if (v13 < 1 || (*(unsigned char *)(a1 + 104) & 1) != 0)
  {
LABEL_5:
    uint64_t v14 = 0;
    char v16 = -1;
  }
  else
  {
    type metadata accessor for CompositionModel(0);
    uint64_t v14 = Environment.init<A>(_:)();
    char v16 = v15 & 1;
  }
  *(void *)uint64_t v9 = static VerticalAlignment.center.getter();
  *((void *)v9 + 1) = 0;
  v9[16] = 1;
  uint64_t v17 = sub_1000063C0(&qword_100201EC8);
  sub_1000E5714(a1, (uint64_t)&v9[*(int *)(v17 + 44)]);
  sub_100008DD4((uint64_t)v9, (uint64_t)v7, &qword_100201EC0);
  *(void *)a2 = v14;
  *(unsigned char *)(a2 + 8) = v16;
  uint64_t v18 = sub_1000063C0(&qword_100201ED0);
  sub_100008DD4((uint64_t)v7, a2 + *(int *)(v18 + 48), &qword_100201EC0);
  sub_100024D64(v14, v16);
  sub_10002784C((uint64_t)v9, &qword_100201EC0);
  sub_10002784C((uint64_t)v7, &qword_100201EC0);
  return sub_100024D78(v14, v16);
}

uint64_t sub_1000E5714@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000063C0(&qword_100201ED8);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v22 - v8;
  uint64_t v10 = sub_1000063C0(&qword_100201EE0);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  char v15 = (char *)&v22 - v14;
  if (*(unsigned char *)(a1 + 81))
  {
    *(void *)char v15 = static HorizontalAlignment.center.getter();
    *((void *)v15 + 1) = 0;
    v15[16] = 1;
    uint64_t v17 = sub_1000063C0((uint64_t *)&unk_100201F00);
    sub_1000E5990((_OWORD *)a1, (uint64_t)&v15[*(int *)(v17 + 44)]);
    uint64_t v18 = sub_1000063C0(&qword_100201EE8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v15, 0, 1, v18);
  }
  else
  {
    uint64_t v16 = sub_1000063C0(&qword_100201EE8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
  }
  *(void *)uint64_t v9 = static HorizontalAlignment.center.getter();
  *((void *)v9 + 1) = 0;
  v9[16] = 1;
  uint64_t v19 = sub_1000063C0(&qword_100201EF0);
  sub_1000E61EC(a1, &v9[*(int *)(v19 + 44)]);
  sub_100008DD4((uint64_t)v15, (uint64_t)v13, &qword_100201EE0);
  sub_100008DD4((uint64_t)v9, (uint64_t)v7, &qword_100201ED8);
  sub_100008DD4((uint64_t)v13, a2, &qword_100201EE0);
  uint64_t v20 = sub_1000063C0(&qword_100201EF8);
  sub_100008DD4((uint64_t)v7, a2 + *(int *)(v20 + 48), &qword_100201ED8);
  sub_10002784C((uint64_t)v9, &qword_100201ED8);
  sub_10002784C((uint64_t)v15, &qword_100201EE0);
  sub_10002784C((uint64_t)v7, &qword_100201ED8);
  return sub_10002784C((uint64_t)v13, &qword_100201EE0);
}

uint64_t sub_1000E5990@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000063C0(&qword_1001FF8A8);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v21 - v9;
  uint64_t v11 = (_OWORD *)swift_allocObject();
  long long v12 = a1[9];
  v11[9] = a1[8];
  v11[10] = v12;
  v11[11] = a1[10];
  long long v13 = a1[5];
  v11[5] = a1[4];
  v11[6] = v13;
  long long v14 = a1[7];
  v11[7] = a1[6];
  v11[8] = v14;
  long long v15 = a1[1];
  v11[1] = *a1;
  v11[2] = v15;
  long long v16 = a1[3];
  v11[3] = a1[2];
  v11[4] = v16;
  sub_1000EDABC((uint64_t)a1);
  sub_1000063C0((uint64_t *)&unk_100201F10);
  sub_100099430();
  Button.init(action:label:)();
  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v17(v8, v10, v4);
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  uint64_t v18 = sub_1000063C0(&qword_100201F70);
  v17((char *)(a2 + *(int *)(v18 + 48)), v8, v4);
  uint64_t v19 = *(void (**)(char *, uint64_t))(v5 + 8);
  v19(v10, v4);
  return ((uint64_t (*)(char *, uint64_t))v19)(v8, v4);
}

uint64_t sub_1000E5B90(uint64_t a1)
{
  char v1 = *(unsigned char *)(a1 + 24);
  uint64_t v2 = swift_retain();
  sub_100020F7C(v2, v1);
  swift_release();
  swift_getKeyPath();
  sub_1000E9680((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_retain();
  swift_release();
  sub_100139A3C();
  swift_release();
  sub_1000063C0((uint64_t *)&unk_1001FF220);
  Binding.wrappedValue.setter();
  sub_1000063C0(&qword_1001FC910);
  return FocusState.Binding.wrappedValue.getter();
}

uint64_t sub_1000E5E10@<X0>(uint64_t a1@<X8>)
{
  uint64_t v41 = a1;
  uint64_t v1 = sub_1000063C0(&qword_1001FF8D0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v38 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = type metadata accessor for TintShapeStyle();
  uint64_t v4 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  uint64_t v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000063C0(&qword_1001FF8C8);
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7);
  uint64_t v10 = (uint64_t *)((char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = sub_1000063C0(&qword_1001FF8C0);
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  long long v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_1000063C0(&qword_1001FF8B8) - 8;
  __chkstk_darwin(v40);
  long long v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = Image.init(systemName:)();
  TintShapeStyle.init()();
  uint64_t v18 = v39;
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v3, v6, v39);
  sub_100008DD4((uint64_t)v3, (uint64_t)v10 + *(int *)(v8 + 44), &qword_1001FF8D0);
  *uint64_t v10 = v17;
  swift_retain();
  sub_10002784C((uint64_t)v3, &qword_1001FF8D0);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v18);
  swift_release();
  uint64_t v19 = static Font.title.getter();
  uint64_t KeyPath = swift_getKeyPath();
  sub_100008DD4((uint64_t)v10, (uint64_t)v14, &qword_1001FF8C8);
  uint64_t v21 = (uint64_t *)&v14[*(int *)(v12 + 44)];
  *uint64_t v21 = KeyPath;
  v21[1] = v19;
  sub_10002784C((uint64_t)v10, &qword_1001FF8C8);
  LOBYTE(v19) = static Edge.Set.all.getter();
  EdgeInsets.init(_all:)();
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  sub_100008DD4((uint64_t)v14, (uint64_t)v16, &qword_1001FF8C0);
  long long v30 = &v16[*(int *)(v40 + 44)];
  *long long v30 = v19;
  *((void *)v30 + 1) = v23;
  *((void *)v30 + 2) = v25;
  *((void *)v30 + 3) = v27;
  *((void *)v30 + 4) = v29;
  v30[40] = 0;
  sub_10002784C((uint64_t)v14, &qword_1001FF8C0);
  if (qword_1001FAD28 != -1) {
    swift_once();
  }
  uint64_t v31 = qword_1002129D0;
  swift_retain();
  uint64_t v32 = static Alignment.center.getter();
  uint64_t v34 = v33;
  uint64_t v35 = v41;
  sub_100008DD4((uint64_t)v16, v41, &qword_1001FF8B8);
  uint64_t v36 = v35 + *(int *)(sub_1000063C0((uint64_t *)&unk_100201F10) + 36);
  *(void *)uint64_t v36 = v31;
  *(_WORD *)(v36 + 8) = 256;
  *(void *)(v36 + 16) = v32;
  *(void *)(v36 + 24) = v34;
  return sub_10002784C((uint64_t)v16, &qword_1001FF8B8);
}

uint64_t sub_1000E61EC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v103 = a2;
  uint64_t v88 = sub_1000063C0(&qword_100201F78);
  uint64_t v105 = *(void *)(v88 - 8);
  __chkstk_darwin(v88);
  uint64_t v87 = &v72[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v91 = sub_1000063C0(&qword_100201F80);
  uint64_t v89 = *(void *)(v91 - 8);
  __chkstk_darwin(v91);
  NSString v104 = &v72[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_1000063C0(&qword_100201F88);
  uint64_t v92 = *(void *)(v5 - 8);
  uint64_t v93 = v5;
  __chkstk_darwin(v5);
  id v90 = &v72[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_1000063C0(&qword_100201F90);
  uint64_t v95 = *(void *)(v7 - 8);
  uint64_t v96 = v7;
  __chkstk_darwin(v7);
  uint64_t v94 = &v72[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_1000063C0(&qword_100201F98);
  uint64_t v98 = *(void *)(v9 - 8);
  uint64_t v99 = v9;
  __chkstk_darwin(v9);
  uint64_t v106 = &v72[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = sub_1000063C0((uint64_t *)&unk_100201FA0);
  uint64_t v101 = *(void *)(v11 - 8);
  uint64_t v102 = v11;
  uint64_t v12 = __chkstk_darwin(v11);
  int v100 = &v72[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v12);
  uint64_t v97 = &v72[-v14];
  long long v15 = *(_OWORD *)(a1 + 48);
  long long v110 = *(_OWORD *)(a1 + 32);
  long long v111 = v15;
  sub_1000063C0((uint64_t *)&unk_1001FF220);
  Binding.projectedValue.getter();
  long long v86 = v130;
  uint64_t v84 = *((void *)&v131 + 1);
  uint64_t v85 = v131;
  long long v124 = *(_OWORD *)(a1 + 112);
  long long v110 = *(_OWORD *)(a1 + 112);
  uint64_t v16 = sub_1000063C0(&qword_1001FB5A8);
  State.projectedValue.getter();
  uint64_t v82 = *((void *)&v130 + 1);
  uint64_t v83 = v130;
  int v81 = v131;
  long long v123 = *(_OWORD *)(a1 + 128);
  long long v110 = *(_OWORD *)(a1 + 128);
  State.projectedValue.getter();
  uint64_t v79 = *((void *)&v130 + 1);
  uint64_t v80 = v130;
  int v78 = v131;
  long long v121 = *(_OWORD *)(a1 + 64);
  char v122 = *(unsigned char *)(a1 + 80);
  long long v110 = *(_OWORD *)(a1 + 64);
  LOBYTE(v111) = *(unsigned char *)(a1 + 80);
  sub_1000063C0(&qword_1001FC910);
  FocusState.Binding.projectedValue.getter();
  uint64_t v74 = *((void *)&v130 + 1);
  uint64_t v75 = v130;
  int v73 = v131;
  uint64_t v17 = *(void *)(a1 + 96);
  uint64_t v77 = *(void *)(a1 + 88);
  int v76 = *(unsigned __int8 *)(a1 + 104);
  type metadata accessor for CompositionModel(0);
  sub_1000E9680((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  swift_retain();
  uint64_t v18 = Environment.init<A>(_:)();
  char v129 = v19 & 1;
  char v20 = *(unsigned char *)(a1 + 8);
  uint64_t v21 = swift_retain();
  uint64_t v22 = sub_100020A68(v21, v20);
  swift_release();
  swift_getKeyPath();
  *(void *)&long long v130 = v22;
  sub_1000E9680((unint64_t *)&unk_1001FB3F0, (void (*)(uint64_t))type metadata accessor for WritingToolsModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  char v23 = *(unsigned char *)(v22 + OBJC_IVAR____TtC21WritingToolsUIService17WritingToolsModel__networkAvailable);
  swift_release();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v25 = swift_allocObject();
  *(unsigned char *)(v25 + 16) = (v23 & 1) == 0;
  *(void *)&long long v130 = v18;
  BYTE8(v130) = v129;
  *(_DWORD *)((char *)&v130 + 9) = *(_DWORD *)v128;
  HIDWORD(v130) = *(_DWORD *)&v128[3];
  long long v131 = v86;
  *(void *)&long long v132 = v85;
  *((void *)&v132 + 1) = v84;
  *(void *)&long long v133 = v83;
  *((void *)&v133 + 1) = v82;
  LOBYTE(v134) = v81;
  DWORD1(v134) = *(_DWORD *)&v127[3];
  *(_DWORD *)((char *)&v134 + 1) = *(_DWORD *)v127;
  *((void *)&v134 + 1) = v80;
  *(void *)&long long v135 = v79;
  BYTE8(v135) = v78;
  *(_DWORD *)((char *)&v135 + 9) = *(_DWORD *)v126;
  HIDWORD(v135) = *(_DWORD *)&v126[3];
  *(void *)&long long v136 = v75;
  *((void *)&v136 + 1) = v74;
  LOBYTE(v137) = v73;
  *(_DWORD *)((char *)&v137 + 1) = *(_DWORD *)v125;
  DWORD1(v137) = *(_DWORD *)&v125[3];
  *((void *)&v137 + 1) = v77;
  *(void *)&long long v138 = v17;
  BYTE8(v138) = v76;
  *(void *)&long long v139 = KeyPath;
  *((void *)&v139 + 1) = sub_100040414;
  uint64_t v140 = v25;
  long long v118 = v138;
  long long v119 = v139;
  uint64_t v120 = v25;
  long long v114 = v134;
  long long v115 = v135;
  long long v116 = v136;
  long long v117 = v137;
  long long v110 = v130;
  long long v111 = v86;
  long long v112 = v132;
  long long v113 = v133;
  long long v107 = v121;
  char v108 = v122;
  FocusState.Binding.projectedValue.getter();
  uint64_t v26 = sub_1000063C0(&qword_100201FB0);
  unint64_t v27 = sub_1000EE17C();
  uint64_t v28 = v87;
  View.focused(_:)();
  swift_release();
  swift_release();
  sub_1000EE21C((uint64_t)&v130);
  uint64_t v29 = type metadata accessor for IntelligenceUI.PromptEntryView();
  *(void *)&long long v110 = v26;
  *((void *)&v110 + 1) = v27;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v31 = v88;
  View.representablePreferredFocusableView<A>(_:resolver:)();
  (*(void (**)(unsigned char *, uint64_t))(v105 + 8))(v28, v31);
  long long v109 = v124;
  uint64_t v105 = v16;
  State.projectedValue.getter();
  if (qword_1001FACA8 != -1) {
    swift_once();
  }
  uint64_t v32 = (_OWORD *)swift_allocObject();
  long long v33 = *(_OWORD *)(a1 + 144);
  v32[9] = *(_OWORD *)(a1 + 128);
  v32[10] = v33;
  v32[11] = *(_OWORD *)(a1 + 160);
  long long v34 = *(_OWORD *)(a1 + 80);
  v32[5] = *(_OWORD *)(a1 + 64);
  void v32[6] = v34;
  long long v35 = *(_OWORD *)(a1 + 112);
  v32[7] = *(_OWORD *)(a1 + 96);
  v32[8] = v35;
  long long v36 = *(_OWORD *)(a1 + 16);
  v32[1] = *(_OWORD *)a1;
  v32[2] = v36;
  long long v37 = *(_OWORD *)(a1 + 48);
  _OWORD v32[3] = *(_OWORD *)(a1 + 32);
  v32[4] = v37;
  sub_1000EDABC(a1);
  *(void *)&long long v110 = v31;
  *((void *)&v110 + 1) = v29;
  *(void *)&long long v111 = OpaqueTypeConformance2;
  uint64_t v38 = swift_getOpaqueTypeConformance2();
  uint64_t v39 = v90;
  uint64_t v40 = v91;
  uint64_t v41 = v104;
  View.fileImporter(isPresented:allowedContentTypes:allowsMultipleSelection:onCompletion:)();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(unsigned char *, uint64_t))(v89 + 8))(v41, v40);
  long long v110 = v123;
  State.wrappedValue.getter();
  long long v42 = (_OWORD *)swift_allocObject();
  long long v43 = *(_OWORD *)(a1 + 144);
  v42[9] = *(_OWORD *)(a1 + 128);
  v42[10] = v43;
  v42[11] = *(_OWORD *)(a1 + 160);
  long long v44 = *(_OWORD *)(a1 + 80);
  v42[5] = *(_OWORD *)(a1 + 64);
  v42[6] = v44;
  long long v45 = *(_OWORD *)(a1 + 112);
  v42[7] = *(_OWORD *)(a1 + 96);
  v42[8] = v45;
  long long v46 = *(_OWORD *)(a1 + 16);
  v42[1] = *(_OWORD *)a1;
  v42[2] = v46;
  long long v47 = *(_OWORD *)(a1 + 48);
  v42[3] = *(_OWORD *)(a1 + 32);
  v42[4] = v47;
  sub_1000EDABC(a1);
  *(void *)&long long v110 = v40;
  *((void *)&v110 + 1) = v38;
  uint64_t v48 = swift_getOpaqueTypeConformance2();
  uint64_t v50 = v93;
  uint64_t v49 = v94;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  (*(void (**)(unsigned char *, uint64_t))(v92 + 8))(v39, v50);
  long long v110 = *(_OWORD *)(a1 + 160);
  sub_1000063C0(&qword_100201FC0);
  State.wrappedValue.getter();
  int v51 = (_OWORD *)swift_allocObject();
  long long v52 = *(_OWORD *)(a1 + 144);
  v51[9] = *(_OWORD *)(a1 + 128);
  v51[10] = v52;
  v51[11] = *(_OWORD *)(a1 + 160);
  long long v53 = *(_OWORD *)(a1 + 80);
  v51[5] = *(_OWORD *)(a1 + 64);
  v51[6] = v53;
  long long v54 = *(_OWORD *)(a1 + 112);
  v51[7] = *(_OWORD *)(a1 + 96);
  v51[8] = v54;
  long long v55 = *(_OWORD *)(a1 + 16);
  v51[1] = *(_OWORD *)a1;
  v51[2] = v55;
  long long v56 = *(_OWORD *)(a1 + 48);
  v51[3] = *(_OWORD *)(a1 + 32);
  v51[4] = v56;
  sub_1000EDABC(a1);
  uint64_t v92 = sub_1000063C0((uint64_t *)&unk_1002048E0);
  *(void *)&long long v110 = v50;
  *((void *)&v110 + 1) = &type metadata for Bool;
  *(void *)&long long v111 = v48;
  *((void *)&v111 + 1) = &protocol witness table for Bool;
  NSString v104 = &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>;
  uint64_t v57 = swift_getOpaqueTypeConformance2();
  unint64_t v58 = sub_1000EE3B8();
  uint64_t v59 = v96;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(unsigned char *, uint64_t))(v95 + 8))(v49, v59);
  uint64_t v95 = LocalizedStringKey.init(stringLiteral:)();
  LODWORD(v94) = v60;
  long long v109 = *(_OWORD *)(a1 + 144);
  State.projectedValue.getter();
  LODWORD(v105) = v111;
  sub_1000063C0(&qword_1001FC6B8);
  *(void *)&long long v110 = v59;
  *((void *)&v110 + 1) = v92;
  *(void *)&long long v111 = v57;
  *((void *)&v111 + 1) = v58;
  swift_getOpaqueTypeConformance2();
  sub_100027F2C((unint64_t *)&unk_1001FDDF0, &qword_1001FC6B8);
  uint64_t v61 = v99;
  long long v62 = v100;
  char v63 = v106;
  View.alert<A>(_:isPresented:actions:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  (*(void (**)(unsigned char *, uint64_t))(v98 + 8))(v63, v61);
  uint64_t v65 = v101;
  uint64_t v64 = v102;
  unsigned long long v66 = v97;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v101 + 32))(v97, v62, v102);
  char v67 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v65 + 16);
  v67(v62, v66, v64);
  long long v68 = v103;
  void *v103 = 0;
  *((unsigned char *)v68 + 8) = 1;
  uint64_t v69 = sub_1000063C0(&qword_100201FD8);
  v67((unsigned char *)v68 + *(int *)(v69 + 48), v62, v64);
  long long v70 = *(void (**)(unsigned char *, uint64_t))(v65 + 8);
  v70(v66, v64);
  return ((uint64_t (*)(unsigned char *, uint64_t))v70)(v62, v64);
}

uint64_t sub_1000E6F38()
{
  return IntelligenceUI.PromptEntryView.textView.getter();
}

uint64_t sub_1000E6F5C(uint64_t a1, char a2, _OWORD *a3)
{
  uint64_t v6 = sub_1000063C0(&qword_1001FF820);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = &v24[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (a2)
  {
    swift_errorRetain();
    if (qword_1001FAC28 != -1) {
      swift_once();
    }
    uint64_t v18 = type metadata accessor for Logger();
    sub_10000EBE8(v18, (uint64_t)qword_100212770);
    swift_errorRetain();
    swift_errorRetain();
    char v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      uint64_t v22 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v21 = 138412290;
      swift_errorRetain();
      uint64_t v23 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)&long long v26 = v23;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v22 = v23;
      sub_1000EE524(a1, 1);
      sub_1000EE524(a1, 1);
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "Unable to add file attachment: %@", v21, 0xCu);
      sub_1000063C0(&qword_1001FED90);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_1000EE524(a1, 1);
      sub_1000EE524(a1, 1);
    }

    long long v25 = a3[9];
    long long v26 = v25;
    v24[15] = 1;
    sub_100026FD0((uint64_t)&v26 + 8, (uint64_t)v27, (uint64_t *)&unk_100201FF8);
    sub_10005CF60((uint64_t)v27);
    sub_1000063C0(&qword_1001FB5A8);
    State.wrappedValue.setter();
    sub_1000EE524(a1, 1);
    return sub_1000EE530((uint64_t)&v26);
  }
  else
  {
    uint64_t v9 = type metadata accessor for TaskPriority();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
    type metadata accessor for MainActor();
    sub_1000EE55C(a1, 0);
    sub_1000EDABC((uint64_t)a3);
    uint64_t v10 = static MainActor.shared.getter();
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = v10;
    *(void *)(v11 + 24) = &protocol witness table for MainActor;
    long long v12 = a3[9];
    *(_OWORD *)(v11 + 160) = a3[8];
    *(_OWORD *)(v11 + 176) = v12;
    *(_OWORD *)(v11 + 192) = a3[10];
    long long v13 = a3[5];
    *(_OWORD *)(v11 + 96) = a3[4];
    *(_OWORD *)(v11 + 112) = v13;
    long long v14 = a3[7];
    *(_OWORD *)(v11 + 128) = a3[6];
    *(_OWORD *)(v11 + 144) = v14;
    long long v15 = a3[1];
    *(_OWORD *)(v11 + 32) = *a3;
    *(_OWORD *)(v11 + 48) = v15;
    long long v16 = a3[3];
    *(_OWORD *)(v11 + 64) = a3[2];
    *(_OWORD *)(v11 + 80) = v16;
    *(void *)(v11 + 208) = a1;
    sub_100122AC8((uint64_t)v8, (uint64_t)&unk_100202010, v11);
    return swift_release();
  }
}

uint64_t sub_1000E72C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[4] = a4;
  v5[5] = a5;
  v5[3] = a1;
  type metadata accessor for MainActor();
  v5[6] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[7] = v7;
  v5[8] = v6;
  return _swift_task_switch(sub_1000E7360, v7, v6);
}

uint64_t sub_1000E7360()
{
  char v1 = *(unsigned char *)(v0[4] + 24);
  uint64_t v2 = swift_retain();
  uint64_t v3 = sub_100020F7C(v2, v1);
  swift_release();
  swift_getKeyPath();
  v0[2] = v3;
  sub_1000E9680((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  v0[9] = *(void *)(v3 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__attachmentManager);
  swift_retain();
  swift_release();
  uint64_t v4 = (void *)swift_task_alloc();
  v0[10] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1000E74BC;
  uint64_t v5 = v0[5];
  return sub_10013AEFC(v5, 0, 0);
}

uint64_t sub_1000E74BC(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 88) = a1;
  swift_task_dealloc();
  swift_release();
  uint64_t v3 = *(void *)(v2 + 64);
  uint64_t v4 = *(void *)(v2 + 56);
  return _swift_task_switch(sub_1000E7608, v4, v3);
}

uint64_t sub_1000E7608()
{
  uint64_t v1 = v0[11];
  uint64_t v2 = (void *)v0[3];
  swift_release();
  *uint64_t v2 = v1;
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_1000E7674(uint64_t a1)
{
  char v1 = *(unsigned char *)(a1 + 24);
  uint64_t v2 = swift_retain();
  sub_100020F7C(v2, v1);
  swift_release();
  swift_getKeyPath();
  sub_1000E9680((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  uint64_t result = swift_release();
  if (Strong)
  {
    if ([Strong respondsToSelector:"photosPickerSessionBegan"]) {
      [Strong photosPickerSessionBegan];
    }
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1000E7780(_OWORD *a1)
{
  uint64_t v2 = sub_1000063C0(&qword_1001FF820);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v18 = a1[10];
  long long v16 = a1[10];
  sub_1000063C0(&qword_100201FC0);
  State.wrappedValue.getter();
  uint64_t v5 = v17[2];
  uint64_t result = swift_bridgeObjectRelease();
  if (v5)
  {
    long long v16 = v18;
    State.wrappedValue.getter();
    uint64_t v7 = v17;
    uint64_t v8 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v4, 1, 1, v8);
    type metadata accessor for MainActor();
    sub_1000EDABC((uint64_t)a1);
    uint64_t v9 = static MainActor.shared.getter();
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = v9;
    *(void *)(v10 + 24) = &protocol witness table for MainActor;
    long long v11 = a1[9];
    *(_OWORD *)(v10 + 160) = a1[8];
    *(_OWORD *)(v10 + 176) = v11;
    *(_OWORD *)(v10 + 192) = a1[10];
    long long v12 = a1[5];
    *(_OWORD *)(v10 + 96) = a1[4];
    *(_OWORD *)(v10 + 112) = v12;
    long long v13 = a1[7];
    *(_OWORD *)(v10 + 128) = a1[6];
    *(_OWORD *)(v10 + 144) = v13;
    long long v14 = a1[1];
    *(_OWORD *)(v10 + 32) = *a1;
    *(_OWORD *)(v10 + 48) = v14;
    long long v15 = a1[3];
    *(_OWORD *)(v10 + 64) = a1[2];
    *(_OWORD *)(v10 + 80) = v15;
    *(void *)(v10 + 208) = v7;
    sub_1001228D0((uint64_t)v4, (uint64_t)&unk_100201FF0, v10);
    swift_release();
    long long v16 = v18;
    uint64_t v17 = _swiftEmptyArrayStorage;
    return State.wrappedValue.setter();
  }
  return result;
}

uint64_t sub_1000E7950(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[3] = a4;
  v5[4] = a5;
  type metadata accessor for MainActor();
  v5[5] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[6] = v7;
  v5[7] = v6;
  return _swift_task_switch(sub_1000E79E8, v7, v6);
}

uint64_t sub_1000E79E8()
{
  char v1 = *(unsigned char *)(v0[3] + 24);
  uint64_t v2 = swift_retain();
  uint64_t v3 = sub_100020F7C(v2, v1);
  swift_release();
  swift_getKeyPath();
  v0[2] = v3;
  sub_1000E9680((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  v0[8] = *(void *)(v3 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__attachmentManager);
  swift_retain();
  swift_release();
  uint64_t v7 = (char *)&dword_100204920 + dword_100204920;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[9] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_10001F020;
  uint64_t v5 = v0[4];
  return ((uint64_t (*)(uint64_t, void, void))v7)(v5, 0, 0);
}

uint64_t sub_1000E7B5C()
{
  uint64_t v0 = sub_1000063C0(&qword_100201FE0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  LocalizedStringKey.init(stringLiteral:)();
  static ButtonRole.cancel.getter();
  uint64_t v3 = type metadata accessor for ButtonRole();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 0, 1, v3);
  return Button<>.init(_:role:action:)();
}

uint64_t sub_1000E7C70(uint64_t a1)
{
  sub_1000063C0(&qword_1001FC910);
  uint64_t result = FocusState.Binding.wrappedValue.getter();
  if (v7 == 1)
  {
    char v3 = *(unsigned char *)(a1 + 24);
    uint64_t v4 = swift_retain();
    uint64_t v5 = sub_100020F7C(v4, v3);
    swift_release();
    swift_getKeyPath();
    sub_1000E9680((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v6 = *(void *)(v5 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__analyticsInstance);
    swift_retain();
    uint64_t result = swift_release();
    if (v6)
    {
      if (qword_1001FAB60 != -1) {
        swift_once();
      }
      sub_100009ADC((void *)qword_1002126A0);
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1000E7DC8@<X0>(uint64_t a1@<X8>)
{
  return sub_1000E50CC(a1);
}

id sub_1000E80BC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AttachmentsAccessoryView();
  return [super dealloc];
}

uint64_t type metadata accessor for AttachmentsAccessoryView()
{
  return self;
}

uint64_t destroy for PromptView()
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for PromptView(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v7 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v7;
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  uint64_t v8 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v8;
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  uint64_t v9 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v9;
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for PromptView(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_release();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_retain();
  swift_release();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_retain();
  swift_release();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  uint64_t v5 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v5;
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  return a1;
}

__n128 initializeWithTake for PromptView(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  __n128 result = *(__n128 *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 121) = *(_OWORD *)(a2 + 121);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 80) = result;
  return result;
}

uint64_t assignWithTake for PromptView(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_release();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  swift_release();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_release();
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  swift_release();
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  swift_release();
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  swift_release();
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  return a1;
}

uint64_t getEnumTagSinglePayload for PromptView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 137)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PromptView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 136) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 137) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 137) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PromptView()
{
  return &type metadata for PromptView;
}

void *sub_1000E85F0(void *a1, uint64_t *a2, int *a3)
{
  char v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    char v4 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = a2[1];
    if (v7 == 1)
    {
      *(_OWORD *)char v4 = *(_OWORD *)a2;
      *((unsigned char *)v4 + 16) = *((unsigned char *)a2 + 16);
    }
    else
    {
      *char v4 = *a2;
      v4[1] = v7;
      *((unsigned char *)v4 + 16) = *((unsigned char *)a2 + 16);
      swift_bridgeObjectRetain();
    }
    char v9 = *((unsigned char *)a2 + 32);
    v4[3] = a2[3];
    *((unsigned char *)v4 + 32) = v9;
    char v10 = *((unsigned char *)a2 + 48);
    v4[5] = a2[5];
    *((unsigned char *)v4 + 48) = v10;
    uint64_t v11 = a3[7];
    long long v12 = (void *)((char *)v4 + v11);
    uint64_t v13 = (uint64_t)a2 + v11;
    uint64_t v14 = *(uint64_t *)((char *)a2 + v11 + 8);
    void *v12 = *(uint64_t *)((char *)a2 + v11);
    v12[1] = v14;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v15 = *(int *)(sub_1000063C0(&qword_1001FB438) + 32);
    long long v16 = (char *)v12 + v15;
    uint64_t v17 = v13 + v15;
    uint64_t v18 = type metadata accessor for NavigationPath();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
    uint64_t v19 = a3[8];
    uint64_t v20 = a3[9];
    uint64_t v21 = (char *)v4 + v19;
    uint64_t v22 = (uint64_t)a2 + v19;
    uint64_t v23 = *(void *)(v22 + 8);
    *(void *)uint64_t v21 = *(void *)v22;
    *((void *)v21 + 1) = v23;
    v21[16] = *(unsigned char *)(v22 + 16);
    uint64_t v24 = (char *)v4 + v20;
    long long v25 = (char *)a2 + v20;
    *uint64_t v24 = *v25;
    *((void *)v24 + 1) = *((void *)v25 + 1);
    unsigned char v24[16] = v25[16];
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_1000E87A8(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) != 1) {
    swift_bridgeObjectRelease();
  }
  swift_release();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  swift_release();
  swift_release();
  uint64_t v5 = v4 + *(int *)(sub_1000063C0(&qword_1001FB438) + 32);
  uint64_t v6 = type metadata accessor for NavigationPath();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_1000E888C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  if (v6 == 1)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v6;
    *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
    swift_bridgeObjectRetain();
  }
  char v7 = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = v7;
  char v8 = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = v8;
  uint64_t v9 = a3[7];
  char v10 = (void *)(a1 + v9);
  uint64_t v11 = a2 + v9;
  uint64_t v12 = *(void *)(a2 + v9 + 8);
  *char v10 = *(void *)(a2 + v9);
  v10[1] = v12;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v13 = *(int *)(sub_1000063C0(&qword_1001FB438) + 32);
  uint64_t v14 = (char *)v10 + v13;
  uint64_t v15 = v11 + v13;
  uint64_t v16 = type metadata accessor for NavigationPath();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  uint64_t v17 = a3[8];
  uint64_t v18 = a3[9];
  uint64_t v19 = a1 + v17;
  uint64_t v20 = a2 + v17;
  uint64_t v21 = *(void *)(v20 + 8);
  *(void *)uint64_t v19 = *(void *)v20;
  *(void *)(v19 + 8) = v21;
  *(unsigned char *)(v19 + 16) = *(unsigned char *)(v20 + 16);
  uint64_t v22 = a1 + v18;
  uint64_t v23 = a2 + v18;
  *(unsigned char *)uint64_t v22 = *(unsigned char *)v23;
  *(void *)(v22 + 8) = *(void *)(v23 + 8);
  *(unsigned char *)(v22 + 16) = *(unsigned char *)(v23 + 16);
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_1000E89F8(uint64_t a1, long long *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  if (*(void *)(a1 + 8) == 1)
  {
    if (v6 == 1)
    {
      long long v7 = *a2;
      *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
      *(_OWORD *)a1 = v7;
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *((void *)a2 + 1);
      *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
      swift_bridgeObjectRetain();
    }
  }
  else
  {
    if (v6 == 1)
    {
      sub_10002784C(a1, &qword_100201790);
      char v8 = *((unsigned char *)a2 + 16);
      *(_OWORD *)a1 = *a2;
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *((void *)a2 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      char v8 = *((unsigned char *)a2 + 16);
    }
    *(unsigned char *)(a1 + 16) = v8;
  }
  char v9 = *((unsigned char *)a2 + 32);
  *(void *)(a1 + 24) = *((void *)a2 + 3);
  *(unsigned char *)(a1 + 32) = v9;
  swift_retain();
  swift_release();
  char v10 = *((unsigned char *)a2 + 48);
  *(void *)(a1 + 40) = *((void *)a2 + 5);
  *(unsigned char *)(a1 + 48) = v10;
  swift_retain();
  swift_release();
  uint64_t v11 = a3[7];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = (uint64_t)a2 + v11;
  *(void *)(a1 + v11) = *(void *)((char *)a2 + v11);
  swift_retain();
  swift_release();
  *(void *)(v12 + 8) = *(void *)(v13 + 8);
  swift_retain();
  swift_release();
  uint64_t v14 = *(int *)(sub_1000063C0(&qword_1001FB438) + 32);
  uint64_t v15 = v12 + v14;
  uint64_t v16 = v13 + v14;
  uint64_t v17 = type metadata accessor for NavigationPath();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 24))(v15, v16, v17);
  uint64_t v18 = a3[8];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = (uint64_t)a2 + v18;
  *(void *)(a1 + v18) = *(void *)((char *)a2 + v18);
  swift_retain();
  swift_release();
  *(void *)(v19 + 8) = *(void *)(v20 + 8);
  swift_retain();
  swift_release();
  *(unsigned char *)(v19 + 16) = *(unsigned char *)(v20 + 16);
  uint64_t v21 = a3[9];
  uint64_t v22 = a1 + v21;
  uint64_t v23 = (uint64_t)a2 + v21;
  *(unsigned char *)uint64_t v22 = *((unsigned char *)a2 + v21);
  *(void *)(v22 + 8) = *(void *)((char *)a2 + v21 + 8);
  swift_retain();
  swift_release();
  *(unsigned char *)(v22 + 16) = *(unsigned char *)(v23 + 16);
  return a1;
}

uint64_t sub_1000E8C14(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v6 = a3[7];
  long long v7 = (void *)(a1 + v6);
  uint64_t v8 = a2 + v6;
  uint64_t v9 = *(void *)(a2 + v6 + 8);
  void *v7 = *(void *)(a2 + v6);
  v7[1] = v9;
  uint64_t v10 = *(int *)(sub_1000063C0(&qword_1001FB438) + 32);
  uint64_t v11 = (char *)v7 + v10;
  uint64_t v12 = v8 + v10;
  uint64_t v13 = type metadata accessor for NavigationPath();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  uint64_t v14 = a3[8];
  uint64_t v15 = a3[9];
  uint64_t v16 = a1 + v14;
  uint64_t v17 = a2 + v14;
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  *(unsigned char *)(v16 + 16) = *(unsigned char *)(v17 + 16);
  uint64_t v18 = a1 + v15;
  uint64_t v19 = a2 + v15;
  *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
  *(unsigned char *)(v18 + 16) = *(unsigned char *)(v19 + 16);
  return a1;
}

uint64_t sub_1000E8D1C(uint64_t a1, uint64_t a2, int *a3)
{
  if (*(void *)(a1 + 8) != 1)
  {
    uint64_t v6 = *(void *)(a2 + 8);
    if (v6 != 1)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v6;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_10002784C(a1, &qword_100201790);
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_6:
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  char v7 = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = v7;
  swift_release();
  char v8 = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = v8;
  swift_release();
  uint64_t v9 = a3[7];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  *(void *)(a1 + v9) = *(void *)(a2 + v9);
  swift_release();
  *(void *)(v10 + 8) = *(void *)(v11 + 8);
  swift_release();
  uint64_t v12 = *(int *)(sub_1000063C0(&qword_1001FB438) + 32);
  uint64_t v13 = v10 + v12;
  uint64_t v14 = v11 + v12;
  uint64_t v15 = type metadata accessor for NavigationPath();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  uint64_t v16 = a3[8];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  *(void *)(a1 + v16) = *(void *)(a2 + v16);
  swift_release();
  *(void *)(v17 + 8) = *(void *)(v18 + 8);
  swift_release();
  *(unsigned char *)(v17 + 16) = *(unsigned char *)(v18 + 16);
  uint64_t v19 = a3[9];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  *(unsigned char *)uint64_t v20 = *(unsigned char *)v21;
  *(void *)(v20 + 8) = *(void *)(v21 + 8);
  swift_release();
  *(unsigned char *)(v20 + 16) = *(unsigned char *)(v21 + 16);
  return a1;
}

uint64_t sub_1000E8EB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000E8EC4);
}

uint64_t sub_1000E8EC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000063C0(&qword_1001FB438);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 28);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 32) + 8);
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t sub_1000E8F90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000E8FA4);
}

uint64_t sub_1000E8FA4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1000063C0(&qword_1001FB438);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 28);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 32) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for CompositionView(uint64_t a1)
{
  return sub_10005AFA8(a1, (uint64_t *)&unk_1002017F0);
}

void sub_1000E908C()
{
  sub_1000EAFC4(319, (unint64_t *)&qword_100201800, (uint64_t (*)(uint64_t))&type metadata accessor for NavigationPath, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Binding);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unint64_t sub_1000E9178()
{
  unint64_t result = qword_100201840;
  if (!qword_100201840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100201840);
  }
  return result;
}

uint64_t sub_1000E91CC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000E91EC()
{
  return sub_1000E9524(type metadata accessor for CompositionView, sub_1000D8CF8);
}

uint64_t sub_1000E9218@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1000E9680((unint64_t *)&qword_1001FAE20, (void (*)(uint64_t))type metadata accessor for CommonUIManager);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + 81);
  return result;
}

uint64_t sub_1000E92C0()
{
  return swift_release();
}

uint64_t sub_1000E939C()
{
  uint64_t v1 = type metadata accessor for CompositionView(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v5 = v0 + v3;
  if (*(void *)(v0 + v3 + 8) != 1) {
    swift_bridgeObjectRelease();
  }
  uint64_t v6 = v3 + v4;
  swift_release();
  swift_release();
  uint64_t v7 = v5 + *(int *)(v1 + 28);
  swift_release();
  swift_release();
  uint64_t v8 = v7 + *(int *)(sub_1000063C0(&qword_1001FB438) + 32);
  uint64_t v9 = type metadata accessor for NavigationPath();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, v6, v2 | 7);
}

uint64_t sub_1000E94F8()
{
  return sub_1000E9524(type metadata accessor for CompositionView, sub_1000D8F54);
}

uint64_t sub_1000E9524(uint64_t (*a1)(void), uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = *(void *)(a1(0) - 8);
  uint64_t v4 = v2 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return a2(v4);
}

uint64_t sub_1000E95A4()
{
  uint64_t v2 = *(void *)(type metadata accessor for CompositionView(0) - 8);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_100027FEC;
  return sub_1000D90F8(v3);
}

uint64_t sub_1000E9680(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000E96C8()
{
  return sub_1000669A0(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_1000E96E8@<X0>(uint64_t a1@<X8>)
{
  return sub_1000D7D44(*(void *)(v1 + 16), a1);
}

unint64_t sub_1000E96F0()
{
  unint64_t result = qword_1002018C8;
  if (!qword_1002018C8)
  {
    sub_100006C14(&qword_1002018D0);
    sub_1000E9680(&qword_1002018D8, (void (*)(uint64_t))type metadata accessor for CompositionConfirmView);
    sub_1000E9680(&qword_1002018E0, (void (*)(uint64_t))type metadata accessor for CompositionIndexView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002018C8);
  }
  return result;
}

uint64_t type metadata accessor for CompositionConfirmView(uint64_t a1)
{
  return sub_10005AFA8(a1, qword_100201AA8);
}

uint64_t type metadata accessor for CompositionIndexView(uint64_t a1)
{
  return sub_10005AFA8(a1, (uint64_t *)&unk_1002019F8);
}

unint64_t sub_1000E980C()
{
  unint64_t result = qword_1002018E8;
  if (!qword_1002018E8)
  {
    sub_100006C14(&qword_1002018F0);
    sub_1000E9680(&qword_1002018F8, (void (*)(uint64_t))type metadata accessor for CompositionResponseView);
    sub_1000E9680(&qword_1002018D8, (void (*)(uint64_t))type metadata accessor for CompositionConfirmView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002018E8);
  }
  return result;
}

uint64_t sub_1000E98F0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000E9960(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1000E99C8()
{
  return EnvironmentValues.scenePhase.getter();
}

uint64_t sub_1000E99F0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000E9A58@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, char a12, char a13, uint64_t a14, uint64_t a15, char a16)
{
  State.init(wrappedValue:)();
  State.init(wrappedValue:)();
  State.init(wrappedValue:)();
  sub_1000063C0((uint64_t *)&unk_1002048E0);
  uint64_t result = State.init(wrappedValue:)();
  *(void *)a9 = a1;
  *(unsigned char *)(a9 + 8) = a2 & 1;
  *(void *)(a9 + 16) = a3;
  *(unsigned char *)(a9 + 24) = a4 & 1;
  *(void *)(a9 + 32) = a5;
  *(void *)(a9 + 40) = a6;
  *(void *)(a9 + 48) = a7;
  *(void *)(a9 + 56) = a8;
  *(void *)(a9 + 64) = a10;
  *(void *)(a9 + 72) = a11;
  *(unsigned char *)(a9 + 80) = a12;
  *(unsigned char *)(a9 + 81) = a13;
  *(void *)(a9 + 88) = a14;
  *(void *)(a9 + 96) = a15;
  *(unsigned char *)(a9 + 104) = a16;
  *(unsigned char *)(a9 + 112) = v26;
  *(void *)(a9 + 120) = v27;
  *(unsigned char *)(a9 + 128) = v26;
  *(void *)(a9 + 136) = v27;
  *(unsigned char *)(a9 + 144) = v26;
  *(void *)(a9 + 152) = v27;
  *(void *)(a9 + 160) = v26;
  *(void *)(a9 + 168) = v27;
  return result;
}

uint64_t sub_1000E9C00(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000E9CD4()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1000E9D14(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  void *v7 = v2;
  v7[1] = sub_100027204;
  return sub_1000E3404(a1, v4, v5, v6);
}

uint64_t sub_1000E9DCC()
{
  return Binding.wrappedValue.setter();
}

uint64_t sub_1000E9E28()
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 153, 7);
}

uint64_t sub_1000E9EB0()
{
  return Binding.wrappedValue.setter();
}

uint64_t sub_1000E9F10()
{
  return sub_100069BE4(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

unint64_t sub_1000E9F30()
{
  unint64_t result = qword_100201990;
  if (!qword_100201990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100201990);
  }
  return result;
}

double sub_1000E9F84(double a1, double a2, double a3, double a4, double a5, double a6)
{
  return a1 + a6;
}

uint64_t sub_1000E9FA0(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = v17 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    char v7 = *((unsigned char *)a2 + 8);
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = v7;
    char v8 = *((unsigned char *)a2 + 24);
    *(void *)(a1 + 16) = a2[2];
    *(unsigned char *)(a1 + 24) = v8;
    char v9 = *((unsigned char *)a2 + 40);
    *(void *)(a1 + 32) = a2[4];
    *(unsigned char *)(a1 + 40) = v9;
    uint64_t v10 = a2[6];
    uint64_t v11 = a2[7];
    char v12 = *((unsigned char *)a2 + 64);
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1000EA1F0();
    *(void *)(v4 + 48) = v10;
    *(void *)(v4 + 56) = v11;
    *(unsigned char *)(v4 + 64) = v12;
    uint64_t v13 = a3[8];
    uint64_t v14 = (void *)(v4 + v13);
    uint64_t v15 = (uint64_t *)((char *)a2 + v13);
    sub_1000063C0((uint64_t *)&unk_1001FBC30);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v16 = type metadata accessor for ScenePhase();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    }
    else
    {
      void *v14 = *v15;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v18 = a3[9];
    uint64_t v19 = a3[10];
    uint64_t v20 = (void *)(v4 + v18);
    uint64_t v21 = (uint64_t *)((char *)a2 + v18);
    uint64_t v22 = v21[1];
    *uint64_t v20 = *v21;
    v20[1] = v22;
    uint64_t v20[2] = v21[2];
    uint64_t v23 = v4 + v19;
    uint64_t v24 = (uint64_t)a2 + v19;
    uint64_t v25 = *(void *)(v24 + 8);
    *(void *)uint64_t v23 = *(void *)v24;
    *(void *)(v23 + 8) = v25;
    *(unsigned char *)(v23 + 16) = *(unsigned char *)(v24 + 16);
    uint64_t v26 = a3[11];
    uint64_t v27 = (void *)(v4 + v26);
    uint64_t v28 = (uint64_t)a2 + v26;
    uint64_t v29 = *(uint64_t *)((char *)a2 + v26 + 8);
    *uint64_t v27 = *(uint64_t *)((char *)a2 + v26);
    v27[1] = v29;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v30 = *(int *)(sub_1000063C0(&qword_1001FB438) + 32);
    uint64_t v31 = (char *)v27 + v30;
    uint64_t v32 = v28 + v30;
    uint64_t v33 = type metadata accessor for NavigationPath();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v33 - 8) + 16))(v31, v32, v33);
  }
  return v4;
}

uint64_t sub_1000EA1F0()
{
  return swift_retain();
}

uint64_t sub_1000EA1FC(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_release();
  swift_release();
  sub_100027F70();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  sub_1000063C0((uint64_t *)&unk_1001FBC30);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for ScenePhase();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v6 = a1 + *(int *)(a2 + 44);
  swift_release();
  swift_release();
  uint64_t v7 = v6 + *(int *)(sub_1000063C0(&qword_1001FB438) + 32);
  uint64_t v8 = type metadata accessor for NavigationPath();
  char v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);

  return v9(v7, v8);
}

uint64_t sub_1000EA358(uint64_t a1, uint64_t a2, int *a3)
{
  char v6 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v6;
  char v7 = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = v7;
  char v8 = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = v8;
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  char v11 = *(unsigned char *)(a2 + 64);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1000EA1F0();
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(unsigned char *)(a1 + 64) = v11;
  uint64_t v12 = a3[8];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  sub_1000063C0((uint64_t *)&unk_1001FBC30);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = type metadata accessor for ScenePhase();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  }
  else
  {
    *uint64_t v13 = *v14;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v16 = a3[9];
  uint64_t v17 = a3[10];
  uint64_t v18 = (void *)(a1 + v16);
  uint64_t v19 = (void *)(a2 + v16);
  uint64_t v20 = v19[1];
  void *v18 = *v19;
  v18[1] = v20;
  v18[2] = v19[2];
  uint64_t v21 = a1 + v17;
  uint64_t v22 = a2 + v17;
  uint64_t v23 = *(void *)(v22 + 8);
  *(void *)uint64_t v21 = *(void *)v22;
  *(void *)(v21 + 8) = v23;
  *(unsigned char *)(v21 + 16) = *(unsigned char *)(v22 + 16);
  uint64_t v24 = a3[11];
  uint64_t v25 = (void *)(a1 + v24);
  uint64_t v26 = a2 + v24;
  uint64_t v27 = *(void *)(a2 + v24 + 8);
  *uint64_t v25 = *(void *)(a2 + v24);
  v25[1] = v27;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v28 = *(int *)(sub_1000063C0(&qword_1001FB438) + 32);
  uint64_t v29 = (char *)v25 + v28;
  uint64_t v30 = v26 + v28;
  uint64_t v31 = type metadata accessor for NavigationPath();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
  return a1;
}

uint64_t sub_1000EA558(uint64_t a1, uint64_t a2, int *a3)
{
  char v6 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v6;
  swift_retain();
  swift_release();
  char v7 = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = v7;
  swift_retain();
  swift_release();
  char v8 = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = v8;
  swift_retain();
  swift_release();
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  char v11 = *(unsigned char *)(a2 + 64);
  sub_1000EA1F0();
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(unsigned char *)(a1 + 64) = v11;
  sub_100027F70();
  if (a1 != a2)
  {
    uint64_t v12 = a3[8];
    uint64_t v13 = (void *)(a1 + v12);
    uint64_t v14 = (void *)(a2 + v12);
    sub_10002784C(a1 + v12, (uint64_t *)&unk_1001FBC30);
    sub_1000063C0((uint64_t *)&unk_1001FBC30);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v15 = type metadata accessor for ScenePhase();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    }
    else
    {
      *uint64_t v13 = *v14;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v16 = a3[9];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = a2 + v16;
  *uint64_t v17 = *(void *)(a2 + v16);
  v17[1] = *(void *)(a2 + v16 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v17[2] = *(void *)(v18 + 16);
  swift_retain();
  swift_release();
  uint64_t v19 = a3[10];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  *(void *)(a1 + v19) = *(void *)(a2 + v19);
  swift_retain();
  swift_release();
  *(void *)(v20 + 8) = *(void *)(v21 + 8);
  swift_retain();
  swift_release();
  *(unsigned char *)(v20 + 16) = *(unsigned char *)(v21 + 16);
  uint64_t v22 = a3[11];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  *(void *)(a1 + v22) = *(void *)(a2 + v22);
  swift_retain();
  swift_release();
  *(void *)(v23 + 8) = *(void *)(v24 + 8);
  swift_retain();
  swift_release();
  uint64_t v25 = *(int *)(sub_1000063C0(&qword_1001FB438) + 32);
  uint64_t v26 = v23 + v25;
  uint64_t v27 = v24 + v25;
  uint64_t v28 = type metadata accessor for NavigationPath();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 24))(v26, v27, v28);
  return a1;
}

uint64_t sub_1000EA7E0(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v6 = a3[8];
  char v7 = (void *)(a1 + v6);
  char v8 = (const void *)(a2 + v6);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  uint64_t v9 = sub_1000063C0((uint64_t *)&unk_1001FBC30);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for ScenePhase();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  uint64_t v11 = a3[9];
  uint64_t v12 = a3[10];
  uint64_t v13 = a1 + v11;
  uint64_t v14 = (long long *)(a2 + v11);
  long long v15 = *v14;
  *(void *)(v13 + 16) = *((void *)v14 + 2);
  *(_OWORD *)uint64_t v13 = v15;
  uint64_t v16 = a1 + v12;
  uint64_t v17 = a2 + v12;
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  *(unsigned char *)(v16 + 16) = *(unsigned char *)(v17 + 16);
  uint64_t v18 = a3[11];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = a2 + v18;
  uint64_t v21 = *(void *)(a2 + v18 + 8);
  *uint64_t v19 = *(void *)(a2 + v18);
  v19[1] = v21;
  uint64_t v22 = *(int *)(sub_1000063C0(&qword_1001FB438) + 32);
  uint64_t v23 = (char *)v19 + v22;
  uint64_t v24 = v20 + v22;
  uint64_t v25 = type metadata accessor for NavigationPath();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
  return a1;
}

uint64_t sub_1000EA998(uint64_t a1, uint64_t a2, int *a3)
{
  char v6 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v6;
  swift_release();
  char v7 = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = v7;
  swift_release();
  char v8 = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = v8;
  swift_release();
  char v9 = *(unsigned char *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 64) = v9;
  sub_100027F70();
  if (a1 != a2)
  {
    uint64_t v10 = a3[8];
    uint64_t v11 = (void *)(a1 + v10);
    uint64_t v12 = (const void *)(a2 + v10);
    sub_10002784C(a1 + v10, (uint64_t *)&unk_1001FBC30);
    uint64_t v13 = sub_1000063C0((uint64_t *)&unk_1001FBC30);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v14 = type metadata accessor for ScenePhase();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v14 - 8) + 32))(v11, v12, v14);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
    }
  }
  uint64_t v15 = a3[9];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = a2 + v15;
  uint64_t v18 = *(void *)(a2 + v15 + 8);
  *uint64_t v16 = *(void *)(a2 + v15);
  v16[1] = v18;
  swift_bridgeObjectRelease();
  v16[2] = *(void *)(v17 + 16);
  swift_release();
  uint64_t v19 = a3[10];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  *(void *)(a1 + v19) = *(void *)(a2 + v19);
  swift_release();
  *(void *)(v20 + 8) = *(void *)(v21 + 8);
  swift_release();
  *(unsigned char *)(v20 + 16) = *(unsigned char *)(v21 + 16);
  uint64_t v22 = a3[11];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  *(void *)(a1 + v22) = *(void *)(a2 + v22);
  swift_release();
  *(void *)(v23 + 8) = *(void *)(v24 + 8);
  swift_release();
  uint64_t v25 = *(int *)(sub_1000063C0(&qword_1001FB438) + 32);
  uint64_t v26 = v23 + v25;
  uint64_t v27 = v24 + v25;
  uint64_t v28 = type metadata accessor for NavigationPath();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 40))(v26, v27, v28);
  return a1;
}

uint64_t sub_1000EABD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000EABE4);
}

uint64_t sub_1000EABE4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000063C0(&qword_100201998);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + a3[8];
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v12 = *(void *)(a1 + a3[9] + 8);
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
  else
  {
    uint64_t v13 = sub_1000063C0(&qword_1001FB438);
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
    uint64_t v15 = v13;
    uint64_t v16 = a1 + a3[11];
    return v14(v16, a2, v15);
  }
}

uint64_t sub_1000EAD20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000EAD34);
}

uint64_t sub_1000EAD34(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result = sub_1000063C0(&qword_100201998);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + a4[8];
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[9] + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v13 = sub_1000063C0(&qword_1001FB438);
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
    uint64_t v15 = v13;
    uint64_t v16 = a1 + a4[11];
    return v14(v16, a2, a2, v15);
  }
  return result;
}

void sub_1000EAE70()
{
  sub_1000EAFC4(319, (unint64_t *)&unk_100201A08, (uint64_t (*)(uint64_t))&type metadata accessor for ScenePhase, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v0 <= 0x3F)
  {
    sub_1000EAFC4(319, (unint64_t *)&qword_100201800, (uint64_t (*)(uint64_t))&type metadata accessor for NavigationPath, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Binding);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_1000EAFC4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1000EB028(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v22 = *a2;
    *(void *)a1 = *a2;
    uint64_t v4 = v22 + ((v5 + 16) & ~(unint64_t)v5);
  }
  else
  {
    char v6 = *((unsigned char *)a2 + 8);
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = v6;
    char v7 = *((unsigned char *)a2 + 24);
    *(void *)(a1 + 16) = a2[2];
    *(unsigned char *)(a1 + 24) = v7;
    char v8 = *((unsigned char *)a2 + 40);
    *(void *)(a1 + 32) = a2[4];
    *(unsigned char *)(a1 + 40) = v8;
    *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
    uint64_t v9 = a2[8];
    *(void *)(a1 + 56) = a2[7];
    *(void *)(a1 + 64) = v9;
    *(void *)(a1 + 72) = a2[9];
    *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
    uint64_t v24 = (void *)a2[11];
    uint64_t v25 = a2[12];
    *(void *)(a1 + 88) = v24;
    *(void *)(a1 + 96) = v25;
    uint64_t v10 = *(int *)(a3 + 40);
    uint64_t v11 = (void *)(a1 + v10);
    uint64_t v12 = (uint64_t)a2 + v10;
    uint64_t v26 = *(uint64_t *)((char *)a2 + v10 + 8);
    *uint64_t v11 = *(uint64_t *)((char *)a2 + v10);
    v11[1] = v26;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    id v13 = v24;
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v14 = *(int *)(sub_1000063C0(&qword_1001FB438) + 32);
    uint64_t v15 = (char *)v11 + v14;
    uint64_t v16 = v12 + v14;
    uint64_t v17 = type metadata accessor for NavigationPath();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    uint64_t v18 = *(int *)(a3 + 44);
    uint64_t v19 = (void *)(v4 + v18);
    uint64_t v20 = (uint64_t *)((char *)a2 + v18);
    uint64_t v21 = v20[1];
    *uint64_t v19 = *v20;
    v19[1] = v21;
    v19[2] = v20[2];
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_1000EB204(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 40);
  swift_release();
  swift_release();
  uint64_t v5 = v4 + *(int *)(sub_1000063C0(&qword_1001FB438) + 32);
  uint64_t v6 = type metadata accessor for NavigationPath();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t sub_1000EB2F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v5 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v5;
  char v6 = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = v6;
  char v7 = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = v7;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v8 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v8;
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v22 = *(void **)(a2 + 88);
  uint64_t v23 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = v22;
  *(void *)(a1 + 96) = v23;
  uint64_t v9 = *(int *)(a3 + 40);
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = a2 + v9;
  uint64_t v24 = *(void *)(a2 + v9 + 8);
  *uint64_t v10 = *(void *)(a2 + v9);
  v10[1] = v24;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  id v12 = v22;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v13 = *(int *)(sub_1000063C0(&qword_1001FB438) + 32);
  uint64_t v14 = (char *)v10 + v13;
  uint64_t v15 = v11 + v13;
  uint64_t v16 = type metadata accessor for NavigationPath();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  uint64_t v17 = *(int *)(a3 + 44);
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (void *)(a2 + v17);
  uint64_t v20 = v19[1];
  void *v18 = *v19;
  v18[1] = v20;
  v18[2] = v19[2];
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_1000EB48C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v6;
  swift_retain();
  swift_release();
  char v7 = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = v7;
  swift_retain();
  swift_release();
  char v8 = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = v8;
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_retain();
  swift_release();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_retain();
  swift_release();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v9 = *(void **)(a2 + 88);
  uint64_t v10 = *(void **)(a1 + 88);
  *(void *)(a1 + 88) = v9;
  id v11 = v9;

  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_retain();
  swift_release();
  uint64_t v12 = *(int *)(a3 + 40);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  swift_retain();
  swift_release();
  *(void *)(v13 + 8) = *(void *)(v14 + 8);
  swift_retain();
  swift_release();
  uint64_t v15 = *(int *)(sub_1000063C0(&qword_1001FB438) + 32);
  uint64_t v16 = v13 + v15;
  uint64_t v17 = v14 + v15;
  uint64_t v18 = type metadata accessor for NavigationPath();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = *(int *)(a3 + 44);
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = a2 + v19;
  *uint64_t v20 = *(void *)(a2 + v19);
  v20[1] = *(void *)(a2 + v19 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v20[2] = *(void *)(v21 + 16);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1000EB680(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v6;
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  uint64_t v7 = *(int *)(a3 + 40);
  char v8 = (void *)(a1 + v7);
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a2 + v7 + 8);
  *char v8 = *(void *)(a2 + v7);
  v8[1] = v10;
  uint64_t v11 = *(int *)(sub_1000063C0(&qword_1001FB438) + 32);
  uint64_t v12 = (char *)v8 + v11;
  uint64_t v13 = v9 + v11;
  uint64_t v14 = type metadata accessor for NavigationPath();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = *(int *)(a3 + 44);
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  *(void *)(v16 + 16) = *(void *)(v17 + 16);
  return a1;
}

uint64_t sub_1000EB788(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v6;
  swift_release();
  char v7 = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = v7;
  swift_release();
  char v8 = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = v8;
  swift_release();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_release();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_release();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_release();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v9 = *(void **)(a1 + 88);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);

  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_release();
  uint64_t v10 = *(int *)(a3 + 40);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  *(void *)(a1 + v10) = *(void *)(a2 + v10);
  swift_release();
  *(void *)(v11 + 8) = *(void *)(v12 + 8);
  swift_release();
  uint64_t v13 = *(int *)(sub_1000063C0(&qword_1001FB438) + 32);
  uint64_t v14 = v11 + v13;
  uint64_t v15 = v12 + v13;
  uint64_t v16 = type metadata accessor for NavigationPath();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 40))(v14, v15, v16);
  uint64_t v17 = *(int *)(a3 + 44);
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (void *)(a2 + v17);
  uint64_t v20 = v19[1];
  void *v18 = *v19;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  v18[2] = v19[2];
  swift_release();
  return a1;
}

uint64_t sub_1000EB918(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000EB92C);
}

uint64_t sub_1000EB92C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 72);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1000063C0(&qword_1001FB438);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 40);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1000EB9E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000EB9F4);
}

uint64_t sub_1000EB9F4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 72) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1000063C0(&qword_1001FB438);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 40);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1000EBAA0()
{
  sub_1000EAFC4(319, (unint64_t *)&qword_100201800, (uint64_t (*)(uint64_t))&type metadata accessor for NavigationPath, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Binding);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

ValueMetadata *type metadata accessor for GuideCapableView()
{
  return &type metadata for GuideCapableView;
}

uint64_t destroy for PromptViewContainer()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t initializeWithCopy for PromptViewContainer(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  char v4 = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  *(_WORD *)(a1 + 80) = *(_WORD *)(a2 + 80);
  uint64_t v8 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v8;
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  uint64_t v9 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v9;
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for PromptViewContainer(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  char v5 = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = v5;
  swift_retain();
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_retain();
  swift_release();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(unsigned char *)(a1 + 81) = *(unsigned char *)(a2 + 81);
  uint64_t v6 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v6;
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_retain();
  swift_release();
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for PromptViewContainer(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;
  swift_release();
  char v5 = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = v5;
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_release();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_release();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(unsigned char *)(a1 + 81) = *(unsigned char *)(a2 + 81);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  swift_release();
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_release();
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_release();
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  swift_release();
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for PromptViewContainer(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 176)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PromptViewContainer(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 168) = 0;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 176) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 40) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 176) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PromptViewContainer()
{
  return &type metadata for PromptViewContainer;
}

unint64_t sub_1000EC114()
{
  unint64_t result = qword_100201AF8;
  if (!qword_100201AF8)
  {
    sub_100006C14((uint64_t *)&unk_100201888);
    sub_100006C14(&qword_100201858);
    sub_100006C14(&qword_100201850);
    sub_100006C14(&qword_100201848);
    sub_100027F2C(&qword_100201870, &qword_100201848);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_1000E9680(&qword_1001FB4F0, (void (*)(uint64_t))&type metadata accessor for _TaskModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100201AF8);
  }
  return result;
}

unint64_t sub_1000EC2B4()
{
  unint64_t result = qword_100201B08;
  if (!qword_100201B08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100201B08);
  }
  return result;
}

uint64_t sub_1000EC308()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000EC324()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000EC340()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000EC35C()
{
  unint64_t v1 = (int *)(type metadata accessor for CompositionConfirmView(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  uint64_t v6 = v0 + v3 + v1[12];
  swift_release();
  swift_release();
  uint64_t v7 = v6 + *(int *)(sub_1000063C0(&qword_1001FB438) + 32);
  uint64_t v8 = type metadata accessor for NavigationPath();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_1000EC4CC(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for CompositionConfirmView(0) - 8);
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_1000E0AE4(a1, a2, v6, v7);
}

uint64_t sub_1000EC550@<X0>(uint64_t a1@<X8>)
{
  return sub_1000E0E04(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

unint64_t sub_1000EC558()
{
  unint64_t result = qword_100201B90;
  if (!qword_100201B90)
  {
    sub_100006C14(&qword_100201B88);
    sub_100027F2C((unint64_t *)&unk_1001FDDA0, (uint64_t *)&unk_100201BA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100201B90);
  }
  return result;
}

unint64_t sub_1000EC5F0()
{
  unint64_t result = qword_100201BB0;
  if (!qword_100201BB0)
  {
    sub_100006C14(&qword_100201B40);
    sub_1000EC69C();
    sub_1000E9680(&qword_1001FB910, (void (*)(uint64_t))type metadata accessor for PreferredContentSizeModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100201BB0);
  }
  return result;
}

unint64_t sub_1000EC69C()
{
  unint64_t result = qword_100201BB8;
  if (!qword_100201BB8)
  {
    sub_100006C14(&qword_100201B38);
    sub_100006C14(&qword_100201B28);
    sub_100006C14(&qword_100201B20);
    sub_100006C14(&qword_100201B80);
    sub_100006C14(&qword_100201B18);
    sub_100027F2C(&qword_100201B78, &qword_100201B18);
    swift_getOpaqueTypeConformance2();
    sub_100006C14(&qword_100201B88);
    sub_1000EC558();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_100064424();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100201BB8);
  }
  return result;
}

uint64_t sub_1000EC84C()
{
  return sub_1000E136C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1000EC854@<X0>(uint64_t a1@<X8>)
{
  return sub_1000E184C(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_1000EC860()
{
  return sub_1000ECA30((uint64_t (*)(unint64_t, uint64_t))sub_1000E1C4C);
}

uint64_t sub_1000EC880()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1000EC894()
{
  uint64_t v1 = (int *)(type metadata accessor for CompositionConfirmView(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = ((*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v6 = v0 + v3;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  uint64_t v7 = v6 + v1[12];
  swift_release();
  swift_release();
  uint64_t v8 = v7 + *(int *)(sub_1000063C0(&qword_1001FB438) + 32);
  uint64_t v9 = type metadata accessor for NavigationPath();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, v5, v4);
}

uint64_t sub_1000ECA18()
{
  return sub_1000ECA30((uint64_t (*)(unint64_t, uint64_t))sub_1000E14F8);
}

uint64_t sub_1000ECA30(uint64_t (*a1)(unint64_t, uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for CompositionConfirmView(0) - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v1 + ((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8));

  return a1(v1 + v3, v4);
}

uint64_t sub_1000ECAD4(uint64_t a1, uint64_t a2)
{
  return sub_1000ED0AC(a1, a2, (void (*)(void))type metadata accessor for CompositionConfirmView, sub_1000DCBC8);
}

unint64_t sub_1000ECB20()
{
  unint64_t result = qword_100201C38;
  if (!qword_100201C38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100201C38);
  }
  return result;
}

uint64_t sub_1000ECBB0()
{
  uint64_t v1 = (int *)(type metadata accessor for CompositionConfirmView(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  uint64_t v7 = v6 + v1[12];
  swift_release();
  swift_release();
  uint64_t v8 = v7 + *(int *)(sub_1000063C0(&qword_1001FB438) + 32);
  uint64_t v9 = type metadata accessor for NavigationPath();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_1000ECD18()
{
  return sub_1000E9524(type metadata accessor for CompositionConfirmView, (uint64_t (*)(uint64_t))sub_1000E08BC);
}

unint64_t sub_1000ECD44()
{
  unint64_t result = qword_100201C80;
  if (!qword_100201C80)
  {
    sub_100006C14(&qword_100201C78);
    sub_100027F2C(&qword_100201C88, (uint64_t *)&unk_100201C90);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100201C80);
  }
  return result;
}

uint64_t sub_1000ECDF4()
{
  return _swift_deallocObject(v0, 17, 7);
}

unint64_t sub_1000ECE04()
{
  unint64_t result = qword_100201CB0;
  if (!qword_100201CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100201CB0);
  }
  return result;
}

unint64_t sub_1000ECE58()
{
  unint64_t result = qword_100201CB8;
  if (!qword_100201CB8)
  {
    sub_100006C14(&qword_100201BE0);
    sub_100006C14(&qword_100201BD0);
    type metadata accessor for PrimaryButtonStyle(255);
    sub_100027F2C((unint64_t *)&unk_100201CA0, &qword_100201BD0);
    sub_1000E9680(&qword_1001FC888, (void (*)(uint64_t))type metadata accessor for PrimaryButtonStyle);
    swift_getOpaqueTypeConformance2();
    sub_100027F2C(&qword_1001FC6D8, &qword_1001FD760);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100201CB8);
  }
  return result;
}

uint64_t sub_1000ECFA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4)
  {
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1000ED024(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1000ED0AC(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t (*a4)(uint64_t, uint64_t))
{
  return a4(a1, a2);
}

uint64_t sub_1000ED12C()
{
  return sub_1000E0700();
}

uint64_t sub_1000ED134()
{
  uint64_t v1 = (int *)(type metadata accessor for CompositionConfirmView(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = ((*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  uint64_t v6 = v0 + v3 + v1[12];
  swift_release();
  swift_release();
  uint64_t v7 = v6 + *(int *)(sub_1000063C0(&qword_1001FB438) + 32);
  uint64_t v8 = type metadata accessor for NavigationPath();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v5, v4);
}

uint64_t sub_1000ED2C4(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for CompositionConfirmView(0) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = v1 + v5;
  uint64_t v9 = (uint64_t *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = *v9;
  uint64_t v11 = v9[1];
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v12;
  void *v12 = v2;
  v12[1] = sub_100027FEC;
  return sub_1000DCEA0(a1, v6, v7, v8, v10, v11);
}

uint64_t sub_1000ED3F4()
{
  uint64_t v2 = *(void *)(type metadata accessor for CompositionIndexView(0) - 8);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_100027FEC;
  return sub_1000DB73C(v3);
}

uint64_t sub_1000ED4C4()
{
  uint64_t v1 = type metadata accessor for CompositionIndexView(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  swift_release();
  swift_release();
  swift_release();
  sub_100027F70();
  uint64_t v5 = v0 + v3 + *(int *)(v1 + 32);
  sub_1000063C0((uint64_t *)&unk_1001FBC30);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for ScenePhase();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v7 = v0 + v3 + *(int *)(v1 + 44);
  swift_release();
  swift_release();
  uint64_t v8 = v7 + *(int *)(sub_1000063C0(&qword_1001FB438) + 32);
  uint64_t v9 = type metadata accessor for NavigationPath();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_1000ED6A0()
{
  return sub_1000E9524(type metadata accessor for CompositionIndexView, sub_1000DB868);
}

unint64_t sub_1000ED6CC()
{
  unint64_t result = qword_100201D38;
  if (!qword_100201D38)
  {
    sub_100006C14(&qword_100201CE8);
    sub_100027F2C(&qword_100201D40, &qword_100201CE0);
    sub_1000E9680(&qword_1001FB4F0, (void (*)(uint64_t))&type metadata accessor for _TaskModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100201D38);
  }
  return result;
}

uint64_t sub_1000ED7A0(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for CompositionIndexView(0) - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_1000DB9F0(a1, v4);
}

unint64_t sub_1000ED810()
{
  unint64_t result = qword_100201D50;
  if (!qword_100201D50)
  {
    sub_100006C14(&qword_100201D08);
    sub_1000ED8BC();
    sub_1000E9680(&qword_1001FB910, (void (*)(uint64_t))type metadata accessor for PreferredContentSizeModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100201D50);
  }
  return result;
}

unint64_t sub_1000ED8BC()
{
  unint64_t result = qword_100201D58;
  if (!qword_100201D58)
  {
    sub_100006C14(&qword_100201D00);
    sub_100027F2C(&qword_100201D60, &qword_100201CF8);
    sub_100064424();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100201D58);
  }
  return result;
}

uint64_t sub_1000ED960(uint64_t a1, uint64_t a2)
{
  return sub_1000ED0AC(a1, a2, (void (*)(void))type metadata accessor for CompositionIndexView, sub_1000D9450);
}

unint64_t sub_1000ED98C()
{
  unint64_t result = qword_100201D88;
  if (!qword_100201D88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100201D88);
  }
  return result;
}

unint64_t sub_1000ED9E0()
{
  unint64_t result = qword_100201D90;
  if (!qword_100201D90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100201D90);
  }
  return result;
}

uint64_t sub_1000EDA34(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100006C14(a2);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000EDABC(uint64_t a1)
{
  return a1;
}

unint64_t sub_1000EDBB4()
{
  unint64_t result = qword_100201E30;
  if (!qword_100201E30)
  {
    sub_100006C14(&qword_100201E28);
    sub_1000EDC54();
    sub_100027F2C((unint64_t *)&unk_1001FD920, &qword_100201E60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100201E30);
  }
  return result;
}

unint64_t sub_1000EDC54()
{
  unint64_t result = qword_100201E38;
  if (!qword_100201E38)
  {
    sub_100006C14((uint64_t *)&unk_100201E40);
    sub_100026F30();
    sub_100027F2C((unint64_t *)&unk_1002025D0, &qword_1001FDAC0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100201E38);
  }
  return result;
}

uint64_t sub_1000EDD04()
{
  uint64_t v1 = type metadata accessor for CompositionIndexView(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  sub_100027F70();
  uint64_t v5 = v0 + v3 + *(int *)(v1 + 32);
  sub_1000063C0((uint64_t *)&unk_1001FBC30);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for ScenePhase();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v7 = v0 + v3 + *(int *)(v1 + 44);
  swift_release();
  swift_release();
  uint64_t v8 = v7 + *(int *)(sub_1000063C0(&qword_1001FB438) + 32);
  uint64_t v9 = type metadata accessor for NavigationPath();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16, v2 | 7);
}

uint64_t sub_1000EDF00(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for CompositionIndexView(0) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = v1 + v5;
  uint64_t v9 = (uint64_t *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = *v9;
  uint64_t v11 = v9[1];
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v12;
  void *v12 = v2;
  v12[1] = sub_100027FEC;
  return sub_1000D98F8(a1, v6, v7, v8, v10, v11);
}

uint64_t sub_1000EE030()
{
  return sub_1000E7C70(v0 + 16);
}

unint64_t sub_1000EE038()
{
  unint64_t result = qword_100201EB0;
  if (!qword_100201EB0)
  {
    sub_100006C14(&qword_100201E98);
    sub_100027F2C(&qword_100201EB8, &qword_100201E90);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100201EB0);
  }
  return result;
}

uint64_t sub_1000EE0E4()
{
  return sub_1000E5B90(v0 + 16);
}

uint64_t sub_1000EE0EC(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100006C14(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000EE16C()
{
  return _swift_deallocObject(v0, 17, 7);
}

unint64_t sub_1000EE17C()
{
  unint64_t result = qword_100201FB8;
  if (!qword_100201FB8)
  {
    sub_100006C14(&qword_100201FB0);
    sub_1000E9178();
    sub_100027F2C(&qword_1001FC6D8, &qword_1001FD760);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100201FB8);
  }
  return result;
}

uint64_t sub_1000EE21C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000EE2FC(uint64_t a1, char a2)
{
  return sub_1000E6F5C(a1, a2 & 1, (_OWORD *)(v2 + 16));
}

uint64_t sub_1000EE30C()
{
  return sub_1000E7674(v0 + 16);
}

uint64_t sub_1000EE318()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 192, 7);
}

uint64_t sub_1000EE3B0()
{
  return sub_1000E7780((_OWORD *)(v0 + 16));
}

unint64_t sub_1000EE3B8()
{
  unint64_t result = qword_100201FC8;
  if (!qword_100201FC8)
  {
    sub_100006C14((uint64_t *)&unk_1002048E0);
    sub_1000E9680(&qword_100201FD0, (void (*)(uint64_t))&type metadata accessor for PhotosPickerItem);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100201FC8);
  }
  return result;
}

uint64_t sub_1000EE460(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (uint64_t)(v1 + 4);
  uint64_t v7 = v1[26];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_100027FEC;
  return sub_1000E7950(a1, v4, v5, v6, v7);
}

uint64_t sub_1000EE524(uint64_t a1, char a2)
{
  if (a2) {
    return swift_errorRelease();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1000EE530(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000EE55C(uint64_t a1, char a2)
{
  if (a2) {
    return swift_errorRetain();
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_1000EE56C()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 216, 7);
}

uint64_t sub_1000EE614(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (uint64_t)(v1 + 4);
  uint64_t v7 = v1[26];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_100027FEC;
  return sub_1000E72C4(a1, v4, v5, v6, v7);
}

unint64_t sub_1000EE6D8()
{
  unint64_t result = qword_100202018;
  if (!qword_100202018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100202018);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for PaddingModifier(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for PaddingModifier(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000EE898);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PaddingModifier()
{
  return &type metadata for PaddingModifier;
}

ValueMetadata *type metadata accessor for TransparencyView()
{
  return &type metadata for TransparencyView;
}

uint64_t sub_1000EE8E0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000EE9E0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000EEAAC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000EEB1C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000EEB38()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000EEB54()
{
  return sub_1000E3D48(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_1000EEB60@<X0>(uint64_t a1@<X8>)
{
  return sub_1000E44D8(*(void *)(v1 + 16), *(unsigned char *)(v1 + 24), a1);
}

unint64_t sub_1000EEB6C()
{
  unint64_t result = qword_100202048;
  if (!qword_100202048)
  {
    sub_100006C14(&qword_100202038);
    sub_1000EE0EC(&qword_100202050, &qword_100202058, (void (*)(void))sub_1000EEC30);
    sub_100027F2C((unint64_t *)&unk_100201F50, &qword_1001FF8D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100202048);
  }
  return result;
}

uint64_t sub_1000EEC30()
{
  return sub_1000EE0EC(&qword_100202060, &qword_100202068, (void (*)(void))sub_1000EEC58);
}

unint64_t sub_1000EEC58()
{
  unint64_t result = qword_100202070;
  if (!qword_100202070)
  {
    sub_100006C14(&qword_100202078);
    sub_100027F2C(&qword_100202080, &qword_100202088);
    sub_100027F2C((unint64_t *)&unk_1002025D0, &qword_1001FDAC0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100202070);
  }
  return result;
}

unint64_t sub_1000EED1C()
{
  unint64_t result = qword_1002020A0;
  if (!qword_1002020A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002020A0);
  }
  return result;
}

uint64_t sub_1000EED70(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 56);
  uint64_t v3 = *(void *)(a1 + 64);
  char v4 = *(unsigned char *)(a1 + 72);
  sub_10002783C(*(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  swift_bridgeObjectRetain();
  sub_10002783C(v2, v3, v4);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_1000EEE0C@<X0>(unsigned char *a1@<X8>)
{
  return sub_1000E3AD4(*(void *)(v1 + 32), *(unsigned char *)(v1 + 40), a1);
}

uint64_t sub_1000EEE20()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 41, 7);
}

uint64_t sub_1000EEE60(char *a1)
{
  return sub_1000E3BB0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(unsigned char *)(v1 + 40));
}

uint64_t sub_1000EEE70()
{
  return sub_1000E3EC4(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

unint64_t sub_1000EEE7C()
{
  unint64_t result = qword_1002020B8;
  if (!qword_1002020B8)
  {
    sub_100006C14(&qword_1002020A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002020B8);
  }
  return result;
}

uint64_t sub_1000EEEE8()
{
  swift_release();

  return _swift_deallocObject(v0, 25, 7);
}

uint64_t sub_1000EEF20@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1000E3FD4(*a1, 0, 0, *(void *)(v2 + 16), *(unsigned char *)(v2 + 24));
  *(void *)a2 = result;
  *(void *)(a2 + 8) = v5;
  *(unsigned char *)(a2 + 16) = v6 & 1;
  *(void *)(a2 + 24) = v7;
  return result;
}

uint64_t sub_1000EEF68()
{
  return sub_100066DA8(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

ValueMetadata *type metadata accessor for TransparencyUIButtonStyle()
{
  return &type metadata for TransparencyUIButtonStyle;
}

unint64_t sub_1000EEF9C()
{
  unint64_t result = qword_1002020D0;
  if (!qword_1002020D0)
  {
    sub_100006C14(&qword_100202020);
    sub_100027F2C(&qword_1002020D8, &qword_100202028);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002020D0);
  }
  return result;
}

uint64_t sub_1000EF03C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000EF0D0()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1000EF0F0()
{
  unint64_t result = qword_1002020F8;
  if (!qword_1002020F8)
  {
    sub_100006C14(&qword_1002020E8);
    sub_1000E9680(&qword_100202100, (void (*)(uint64_t))&type metadata accessor for ButtonStyleConfiguration.Label);
    sub_100027F2C(&qword_100202108, &qword_1002020F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002020F8);
  }
  return result;
}

uint64_t sub_1000EF1C0()
{
  return sub_10003F2FC();
}

uint64_t sub_1000EF1D8@<X0>(char a1@<W1>, char a2@<W2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, char a6@<W6>, uint64_t a7@<X8>)
{
  swift_unknownObjectWeakInit();
  swift_unknownObjectRelease();
  *(unsigned char *)(a7 + 8) = a1;
  *(unsigned char *)(a7 + 9) = a2;
  uint64_t v14 = (int *)type metadata accessor for PreferredContentSizeModifier(0);
  sub_100026FD0(a3, a7 + v14[7], &qword_1001FB438);
  uint64_t v15 = a7 + v14[8];
  *(void *)uint64_t v15 = a4;
  *(void *)(v15 + 8) = a5;
  *(unsigned char *)(v15 + 16) = a6;
  uint64_t v16 = a7 + v14[9];
  type metadata accessor for CGSize(0);
  State.init(wrappedValue:)();
  *(_OWORD *)uint64_t v16 = v21;
  *(void *)(v16 + 16) = v22;
  uint64_t v17 = a7 + v14[10];
  State.init(wrappedValue:)();
  *(unsigned char *)uint64_t v17 = v21;
  *(void *)(v17 + 8) = *((void *)&v21 + 1);
  uint64_t v18 = a7 + v14[11];
  sub_1000063C0(&qword_100202630);
  State.init(wrappedValue:)();
  *(void *)uint64_t v18 = v21;
  *(unsigned char *)(v18 + 8) = BYTE8(v21);
  *(void *)(v18 + 16) = v22;
  uint64_t v19 = a7 + v14[12];
  uint64_t result = State.init(wrappedValue:)();
  *(unsigned char *)uint64_t v19 = v21;
  *(void *)(v19 + 8) = *((void *)&v21 + 1);
  return result;
}

uint64_t sub_1000EF360()
{
  return EnvironmentValues.colorScheme.getter();
}

uint64_t sub_1000EF384(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000FAFAC(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for ColorScheme, (uint64_t (*)(char *))&EnvironmentValues.colorScheme.setter);
}

uint64_t sub_1000EF3B0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = EnvironmentValues.isEnabled.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1000EF3E0()
{
  return EnvironmentValues.isEnabled.setter();
}

uint64_t sub_1000EF408()
{
  uint64_t v0 = type metadata accessor for Gradient.ColorSpace();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for ColorScheme();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for ColorScheme.light(_:), v4);
  char v8 = static ColorScheme.== infix(_:_:)();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) == 0)
  {
    static Color.accentColor.getter();
    char v9 = static Color.== infix(_:_:)();
    swift_release();
    if ((v9 & 1) == 0) {
      goto LABEL_6;
    }
  }
  sub_1000085FC(0, (unint64_t *)&qword_100201930);
  swift_retain();
  uint64_t v10 = (void *)UIColor.init(_:)();
  [v10 alphaComponent];
  if (v11 >= 0.5)
  {

LABEL_6:
    static Color.black.getter();
    static Gradient.ColorSpace.perceptual.getter();
    Color.mix(with:by:in:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    uint64_t v13 = Color.opacity(_:)();
    swift_release();
    return v13;
  }
  id v12 = [v10 colorWithAlphaComponent:v11 * 1.4];
  uint64_t v13 = Color.init(uiColor:)();

  return v13;
}

unint64_t sub_1000EF6B8()
{
  unint64_t result = qword_100202110;
  if (!qword_100202110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100202110);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for WTIcon(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xEB) {
    goto LABEL_17;
  }
  if (a2 + 21 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 21) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 21;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 21;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 21;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x16;
  int v8 = v6 - 22;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for WTIcon(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 21 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 21) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEA)
  {
    unsigned int v6 = ((a2 - 235) >> 8) + 1;
    *unint64_t result = a2 + 21;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000EF868);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 21;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WTIcon()
{
  return &type metadata for WTIcon;
}

ValueMetadata *type metadata accessor for HorizontalIconTitleLabelStyle()
{
  return &type metadata for HorizontalIconTitleLabelStyle;
}

uint64_t *sub_1000EF8B0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unsigned int v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *unsigned int v4 = *a2;
    unsigned int v4 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_WORD *)a1 = *(_WORD *)a2;
    a1[1] = a2[1];
    uint64_t v7 = *(int *)(a3 + 28);
    int v8 = (uint64_t *)((char *)a1 + v7);
    char v9 = (uint64_t *)((char *)a2 + v7);
    sub_1000063C0((uint64_t *)&unk_1001FB730);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = type metadata accessor for ColorScheme();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      *int v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v12 = *(int *)(a3 + 32);
    uint64_t v13 = (char *)v4 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = *(void *)v14;
    char v16 = v14[8];
    sub_100058794(*(void *)v14, v16);
    *(void *)uint64_t v13 = v15;
    v13[8] = v16;
  }
  return v4;
}

uint64_t sub_1000EFA04(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  sub_1000063C0((uint64_t *)&unk_1001FB730);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for ColorScheme();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = a1 + *(int *)(a2 + 32);
  uint64_t v7 = *(void *)v6;
  char v8 = *(unsigned char *)(v6 + 8);

  return sub_100024D58(v7, v8);
}

uint64_t sub_1000EFABC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (void *)(a1 + v6);
  char v8 = (void *)(a2 + v6);
  sub_1000063C0((uint64_t *)&unk_1001FB730);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = type metadata accessor for ColorScheme();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  }
  else
  {
    void *v7 = *v8;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v10 = *(int *)(a3 + 32);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = *(void *)v12;
  char v14 = *(unsigned char *)(v12 + 8);
  sub_100058794(*(void *)v12, v14);
  *(void *)uint64_t v11 = v13;
  *(unsigned char *)(v11 + 8) = v14;
  return a1;
}

uint64_t sub_1000EFBC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 28);
    uint64_t v7 = (void *)(a1 + v6);
    char v8 = (void *)(a2 + v6);
    sub_10002784C(a1 + v6, (uint64_t *)&unk_1001FB730);
    sub_1000063C0((uint64_t *)&unk_1001FB730);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = type metadata accessor for ColorScheme();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      void *v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v10 = *(int *)(a3 + 32);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = *(void *)v12;
  char v14 = *(unsigned char *)(v12 + 8);
  sub_100058794(*(void *)v12, v14);
  uint64_t v15 = *(void *)v11;
  char v16 = *(unsigned char *)(v11 + 8);
  *(void *)uint64_t v11 = v13;
  *(unsigned char *)(v11 + 8) = v14;
  sub_100024D58(v15, v16);
  return a1;
}

uint64_t sub_1000EFCF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (void *)(a1 + v6);
  char v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_1000063C0((uint64_t *)&unk_1001FB730);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for ColorScheme();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  uint64_t v11 = *(int *)(a3 + 32);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(void *)uint64_t v12 = *(void *)v13;
  *(unsigned char *)(v12 + 8) = *(unsigned char *)(v13 + 8);
  return a1;
}

uint64_t sub_1000EFDF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 28);
    uint64_t v7 = (void *)(a1 + v6);
    char v8 = (const void *)(a2 + v6);
    sub_10002784C(a1 + v6, (uint64_t *)&unk_1001FB730);
    uint64_t v9 = sub_1000063C0((uint64_t *)&unk_1001FB730);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = type metadata accessor for ColorScheme();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
    }
  }
  uint64_t v11 = *(int *)(a3 + 32);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = (uint64_t *)(a2 + v11);
  uint64_t v14 = *v13;
  LOBYTE(v13) = *((unsigned char *)v13 + 8);
  uint64_t v15 = *(void *)v12;
  char v16 = *(unsigned char *)(v12 + 8);
  *(void *)uint64_t v12 = v14;
  *(unsigned char *)(v12 + 8) = (_BYTE)v13;
  sub_100024D58(v15, v16);
  return a1;
}

uint64_t sub_1000EFF2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000EFF40);
}

uint64_t sub_1000EFF40(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *a1;
    BOOL v5 = v4 >= 2;
    int v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5) {
      return (v6 + 1);
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v10 = sub_1000063C0(&qword_100202120);
    uint64_t v11 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = &a1[*(int *)(a3 + 28)];
    return v11(v13, a2, v12);
  }
}

uint64_t sub_1000EFFF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000F0008);
}

unsigned char *sub_1000F0008(unsigned char *result, uint64_t a2, int a3, uint64_t a4)
{
  BOOL v5 = result;
  if (a3 == 254)
  {
    *unint64_t result = a2 + 1;
  }
  else
  {
    uint64_t v7 = sub_1000063C0(&qword_100202120);
    char v8 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = &v5[*(int *)(a4 + 28)];
    return (unsigned char *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for PrimaryButtonStyle(uint64_t a1)
{
  return sub_10005AFA8(a1, (uint64_t *)&unk_100202180);
}

void sub_1000F00D0()
{
  sub_1000FB9E4(319, (unint64_t *)&unk_100202190, (uint64_t (*)(uint64_t))&type metadata accessor for ColorScheme, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t *sub_1000F01B0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unsigned int v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *unsigned int v4 = *a2;
    unsigned int v4 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_WORD *)a1 = *(_WORD *)a2;
    uint64_t v7 = *(int *)(a3 + 24);
    char v8 = (uint64_t *)((char *)a1 + v7);
    uint64_t v9 = (uint64_t *)((char *)a2 + v7);
    sub_1000063C0((uint64_t *)&unk_1001FB730);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = type metadata accessor for ColorScheme();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      *char v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v12 = *(int *)(a3 + 28);
    uint64_t v13 = (char *)v4 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = *(void *)v14;
    char v16 = v14[8];
    sub_100058794(*(void *)v14, v16);
    *(void *)uint64_t v13 = v15;
    v13[8] = v16;
  }
  return v4;
}

uint64_t sub_1000F02FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  sub_1000063C0((uint64_t *)&unk_1001FB730);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for ColorScheme();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = a1 + *(int *)(a2 + 28);
  uint64_t v7 = *(void *)v6;
  char v8 = *(unsigned char *)(v6 + 8);

  return sub_100024D58(v7, v8);
}

_WORD *sub_1000F03B4(_WORD *a1, _WORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (void *)((char *)a1 + v6);
  char v8 = (void *)((char *)a2 + v6);
  sub_1000063C0((uint64_t *)&unk_1001FB730);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = type metadata accessor for ColorScheme();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  }
  else
  {
    void *v7 = *v8;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v10 = *(int *)(a3 + 28);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = *(void *)v12;
  char v14 = v12[8];
  sub_100058794(*(void *)v12, v14);
  *(void *)uint64_t v11 = v13;
  v11[8] = v14;
  return a1;
}

unsigned char *sub_1000F04B0(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = &a1[v6];
    char v8 = &a2[v6];
    sub_10002784C((uint64_t)&a1[v6], (uint64_t *)&unk_1001FB730);
    sub_1000063C0((uint64_t *)&unk_1001FB730);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = type metadata accessor for ColorScheme();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      void *v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v10 = *(int *)(a3 + 28);
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  uint64_t v13 = *(void *)v12;
  char v14 = v12[8];
  sub_100058794(*(void *)v12, v14);
  uint64_t v15 = *(void *)v11;
  char v16 = v11[8];
  *(void *)uint64_t v11 = v13;
  v11[8] = v14;
  sub_100024D58(v15, v16);
  return a1;
}

_WORD *sub_1000F05D8(_WORD *a1, _WORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  char v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1000063C0((uint64_t *)&unk_1001FB730);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for ColorScheme();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  uint64_t v11 = *(int *)(a3 + 28);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  *(void *)uint64_t v12 = *(void *)v13;
  v12[8] = v13[8];
  return a1;
}

unsigned char *sub_1000F06D8(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = &a1[v6];
    char v8 = &a2[v6];
    sub_10002784C((uint64_t)&a1[v6], (uint64_t *)&unk_1001FB730);
    uint64_t v9 = sub_1000063C0((uint64_t *)&unk_1001FB730);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = type metadata accessor for ColorScheme();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
    }
  }
  uint64_t v11 = *(int *)(a3 + 28);
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  uint64_t v14 = *(void *)v13;
  LOBYTE(v13) = v13[8];
  uint64_t v15 = *(void *)v12;
  char v16 = v12[8];
  *(void *)uint64_t v12 = v14;
  v12[8] = (_BYTE)v13;
  sub_100024D58(v15, v16);
  return a1;
}

uint64_t sub_1000F0804(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000F0818);
}

uint64_t sub_1000F0818(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *a1;
    BOOL v5 = v4 >= 2;
    int v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5) {
      return (v6 + 1);
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v10 = sub_1000063C0(&qword_100202120);
    uint64_t v11 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = &a1[*(int *)(a3 + 24)];
    return v11(v13, a2, v12);
  }
}

uint64_t sub_1000F08CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000F08E0);
}

unsigned char *sub_1000F08E0(unsigned char *result, uint64_t a2, int a3, uint64_t a4)
{
  BOOL v5 = result;
  if (a3 == 254)
  {
    *unint64_t result = a2 + 1;
  }
  else
  {
    uint64_t v7 = sub_1000063C0(&qword_100202120);
    char v8 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = &v5[*(int *)(a4 + 24)];
    return (unsigned char *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for UnevenCornerPrimaryButtonStyle(uint64_t a1)
{
  return sub_10005AFA8(a1, qword_100202228);
}

void sub_1000F09A8()
{
  sub_1000FB9E4(319, (unint64_t *)&unk_100202190, (uint64_t (*)(uint64_t))&type metadata accessor for ColorScheme, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

ValueMetadata *type metadata accessor for ParentPaddingViewModifier()
{
  return &type metadata for ParentPaddingViewModifier;
}

ValueMetadata *type metadata accessor for ToolbarRoleModifier()
{
  return &type metadata for ToolbarRoleModifier;
}

void *sub_1000F0A98(void *a1, uint64_t *a2, int *a3)
{
  unsigned int v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v31 = *a2;
    *a1 = *a2;
    unsigned int v4 = (void *)(v31 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    swift_unknownObjectWeakCopyInit();
    *((_WORD *)v4 + 4) = *((_WORD *)a2 + 4);
    uint64_t v7 = a3[7];
    char v8 = (void *)((char *)v4 + v7);
    uint64_t v9 = (uint64_t)a2 + v7;
    uint64_t v10 = *(uint64_t *)((char *)a2 + v7 + 8);
    *char v8 = *(uint64_t *)((char *)a2 + v7);
    v8[1] = v10;
    swift_retain();
    swift_retain();
    uint64_t v11 = *(int *)(sub_1000063C0(&qword_1001FB438) + 32);
    uint64_t v12 = (char *)v8 + v11;
    uint64_t v13 = v9 + v11;
    uint64_t v14 = type metadata accessor for NavigationPath();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    uint64_t v15 = a3[8];
    uint64_t v16 = a3[9];
    uint64_t v17 = (char *)v4 + v15;
    uint64_t v18 = (uint64_t)a2 + v15;
    uint64_t v19 = *(void *)(v18 + 8);
    *(void *)uint64_t v17 = *(void *)v18;
    *((void *)v17 + 1) = v19;
    v17[16] = *(unsigned char *)(v18 + 16);
    uint64_t v20 = (char *)v4 + v16;
    uint64_t v21 = (uint64_t)a2 + v16;
    *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
    *((void *)v20 + 2) = *(void *)(v21 + 16);
    uint64_t v22 = a3[10];
    uint64_t v23 = a3[11];
    uint64_t v24 = (char *)v4 + v22;
    uint64_t v25 = (char *)a2 + v22;
    *uint64_t v24 = *v25;
    *((void *)v24 + 1) = *((void *)v25 + 1);
    uint64_t v26 = (char *)v4 + v23;
    uint64_t v27 = (uint64_t)a2 + v23;
    *(void *)uint64_t v26 = *(void *)v27;
    v26[8] = *(unsigned char *)(v27 + 8);
    *((void *)v26 + 2) = *(void *)(v27 + 16);
    uint64_t v28 = a3[12];
    uint64_t v29 = (char *)v4 + v28;
    uint64_t v30 = (char *)a2 + v28;
    *uint64_t v29 = *v30;
    *((void *)v29 + 1) = *((void *)v30 + 1);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_1000F0C68(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectWeakDestroy();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  swift_release();
  swift_release();
  uint64_t v5 = v4 + *(int *)(sub_1000063C0(&qword_1001FB438) + 32);
  uint64_t v6 = type metadata accessor for NavigationPath();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_1000F0D60(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = swift_unknownObjectWeakCopyInit();
  *(_WORD *)(v6 + 8) = *(_WORD *)(a2 + 8);
  uint64_t v7 = a3[7];
  char v8 = (void *)(v6 + v7);
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a2 + v7 + 8);
  *char v8 = *(void *)(a2 + v7);
  v8[1] = v10;
  swift_retain();
  swift_retain();
  uint64_t v11 = *(int *)(sub_1000063C0(&qword_1001FB438) + 32);
  uint64_t v12 = (char *)v8 + v11;
  uint64_t v13 = v9 + v11;
  uint64_t v14 = type metadata accessor for NavigationPath();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[8];
  uint64_t v16 = a3[9];
  uint64_t v17 = a1 + v15;
  uint64_t v18 = a2 + v15;
  uint64_t v19 = *(void *)(v18 + 8);
  *(void *)uint64_t v17 = *(void *)v18;
  *(void *)(v17 + 8) = v19;
  *(unsigned char *)(v17 + 16) = *(unsigned char *)(v18 + 16);
  uint64_t v20 = a1 + v16;
  uint64_t v21 = a2 + v16;
  *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
  *(void *)(v20 + 16) = *(void *)(v21 + 16);
  uint64_t v22 = a3[10];
  uint64_t v23 = a3[11];
  uint64_t v24 = a1 + v22;
  uint64_t v25 = a2 + v22;
  *(unsigned char *)uint64_t v24 = *(unsigned char *)v25;
  *(void *)(v24 + 8) = *(void *)(v25 + 8);
  uint64_t v26 = a1 + v23;
  uint64_t v27 = a2 + v23;
  *(void *)uint64_t v26 = *(void *)v27;
  *(unsigned char *)(v26 + 8) = *(unsigned char *)(v27 + 8);
  *(void *)(v26 + 16) = *(void *)(v27 + 16);
  uint64_t v28 = a3[12];
  uint64_t v29 = a1 + v28;
  uint64_t v30 = a2 + v28;
  *(unsigned char *)uint64_t v29 = *(unsigned char *)v30;
  *(void *)(v29 + 8) = *(void *)(v30 + 8);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_1000F0EDC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = swift_unknownObjectWeakCopyAssign();
  *(unsigned char *)(v6 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(v6 + 9) = *(unsigned char *)(a2 + 9);
  uint64_t v7 = a3[7];
  uint64_t v8 = v6 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)(v6 + v7) = *(void *)(a2 + v7);
  swift_retain();
  swift_release();
  *(void *)(v8 + 8) = *(void *)(v9 + 8);
  swift_retain();
  swift_release();
  uint64_t v10 = *(int *)(sub_1000063C0(&qword_1001FB438) + 32);
  uint64_t v11 = v8 + v10;
  uint64_t v12 = v9 + v10;
  uint64_t v13 = type metadata accessor for NavigationPath();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  uint64_t v14 = a3[8];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  *(void *)(a1 + v14) = *(void *)(a2 + v14);
  swift_retain();
  swift_release();
  *(void *)(v15 + 8) = *(void *)(v16 + 8);
  swift_retain();
  swift_release();
  *(unsigned char *)(v15 + 16) = *(unsigned char *)(v16 + 16);
  uint64_t v17 = a3[9];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (void *)(a2 + v17);
  void *v18 = *v19;
  v18[1] = v19[1];
  v18[2] = v19[2];
  swift_retain();
  swift_release();
  uint64_t v20 = a3[10];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  *(unsigned char *)uint64_t v21 = *(unsigned char *)v22;
  *(void *)(v21 + 8) = *(void *)(v22 + 8);
  swift_retain();
  swift_release();
  uint64_t v23 = a3[11];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = (uint64_t *)(a2 + v23);
  uint64_t v26 = *v25;
  *(unsigned char *)(v24 + 8) = *((unsigned char *)v25 + 8);
  *(void *)uint64_t v24 = v26;
  *(void *)(v24 + 16) = v25[2];
  swift_retain();
  swift_release();
  uint64_t v27 = a3[12];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  *(unsigned char *)uint64_t v28 = *(unsigned char *)v29;
  *(void *)(v28 + 8) = *(void *)(v29 + 8);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1000F10C0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = swift_unknownObjectWeakTakeInit();
  *(_WORD *)(v6 + 8) = *(_WORD *)(a2 + 8);
  uint64_t v7 = a3[7];
  uint64_t v8 = (void *)(v6 + v7);
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a2 + v7 + 8);
  *uint64_t v8 = *(void *)(a2 + v7);
  v8[1] = v10;
  uint64_t v11 = *(int *)(sub_1000063C0(&qword_1001FB438) + 32);
  uint64_t v12 = (char *)v8 + v11;
  uint64_t v13 = v9 + v11;
  uint64_t v14 = type metadata accessor for NavigationPath();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[8];
  uint64_t v16 = a3[9];
  uint64_t v17 = a1 + v15;
  uint64_t v18 = a2 + v15;
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  *(unsigned char *)(v17 + 16) = *(unsigned char *)(v18 + 16);
  uint64_t v19 = a1 + v16;
  uint64_t v20 = a2 + v16;
  *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
  *(void *)(v19 + 16) = *(void *)(v20 + 16);
  uint64_t v21 = a3[11];
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  *(void *)(v22 + 16) = *(void *)(v23 + 16);
  *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
  *(_OWORD *)(a1 + a3[12]) = *(_OWORD *)(a2 + a3[12]);
  return a1;
}

uint64_t sub_1000F11D4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = swift_unknownObjectWeakTakeAssign();
  *(unsigned char *)(v6 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(v6 + 9) = *(unsigned char *)(a2 + 9);
  uint64_t v7 = a3[7];
  uint64_t v8 = v6 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)(v6 + v7) = *(void *)(a2 + v7);
  swift_release();
  *(void *)(v8 + 8) = *(void *)(v9 + 8);
  swift_release();
  uint64_t v10 = *(int *)(sub_1000063C0(&qword_1001FB438) + 32);
  uint64_t v11 = v8 + v10;
  uint64_t v12 = v9 + v10;
  uint64_t v13 = type metadata accessor for NavigationPath();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  uint64_t v14 = a3[8];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  *(void *)(a1 + v14) = *(void *)(a2 + v14);
  swift_release();
  *(void *)(v15 + 8) = *(void *)(v16 + 8);
  swift_release();
  *(unsigned char *)(v15 + 16) = *(unsigned char *)(v16 + 16);
  uint64_t v17 = a3[9];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
  *(void *)(v18 + 16) = *(void *)(v19 + 16);
  swift_release();
  uint64_t v20 = a3[10];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  *(unsigned char *)uint64_t v21 = *(unsigned char *)v22;
  *(void *)(v21 + 8) = *(void *)(v22 + 8);
  swift_release();
  uint64_t v23 = a3[11];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  *(void *)uint64_t v24 = *(void *)v25;
  *(unsigned char *)(v24 + 8) = *(unsigned char *)(v25 + 8);
  *(void *)(v24 + 16) = *(void *)(v25 + 16);
  swift_release();
  uint64_t v26 = a3[12];
  uint64_t v27 = a1 + v26;
  uint64_t v28 = a2 + v26;
  *(unsigned char *)uint64_t v27 = *(unsigned char *)v28;
  *(void *)(v27 + 8) = *(void *)(v28 + 8);
  swift_release();
  return a1;
}

uint64_t sub_1000F1370(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000F1384);
}

uint64_t sub_1000F1384(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000063C0(&qword_1001FB438);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 28);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 32) + 8);
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t sub_1000F1450(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000F1464);
}

uint64_t sub_1000F1464(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1000063C0(&qword_1001FB438);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 28);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 32) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for PreferredContentSizeModifier(uint64_t a1)
{
  return sub_10005AFA8(a1, qword_1002022C8);
}

void sub_1000F154C()
{
  sub_1000FB9E4(319, (unint64_t *)&qword_100201800, (uint64_t (*)(uint64_t))&type metadata accessor for NavigationPath, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Binding);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t initializeBufferWithCopyOfBuffer for PrimaryButtonModifier(uint64_t result, __int16 *a2)
{
  __int16 v2 = *a2;
  *(unsigned char *)(result + 2) = *((unsigned char *)a2 + 2);
  *(_WORD *)uint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for PrimaryButtonModifier(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF)
  {
    if ((a2 + 33554177) >> 24)
    {
      int v2 = *((unsigned __int8 *)a1 + 3);
      if (*((unsigned char *)a1 + 3)) {
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16776961;
      }
    }
    else
    {
      int v2 = *(unsigned __int16 *)((char *)a1 + 3);
      if (*(unsigned __int16 *)((char *)a1 + 3)) {
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16776961;
      }
    }
  }
  unsigned int v4 = *(unsigned __int8 *)a1;
  BOOL v5 = v4 >= 2;
  int v6 = (v4 + 2147483646) & 0x7FFFFFFF;
  if (!v5) {
    int v6 = -1;
  }
  return (v6 + 1);
}

uint64_t storeEnumTagSinglePayload for PrimaryButtonModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if ((a3 + 33554177) >> 24) {
    int v3 = 1;
  }
  else {
    int v3 = 2;
  }
  if (a3 <= 0xFE) {
    int v3 = 0;
  }
  if (a2 > 0xFE)
  {
    *(_WORD *)uint64_t result = a2 - 255;
    *(unsigned char *)(result + 2) = (a2 - 255) >> 16;
    if (v3)
    {
      unsigned int v4 = ((a2 - 255) >> 24) + 1;
      if (v3 == 2) {
        *(_WORD *)(result + 3) = v4;
      }
      else {
        *(unsigned char *)(result + 3) = v4;
      }
    }
  }
  else
  {
    if (!v3) {
      goto LABEL_10;
    }
    if (v3 == 2)
    {
      *(_WORD *)(result + 3) = 0;
LABEL_10:
      if (!a2) {
        return result;
      }
LABEL_16:
      *(unsigned char *)uint64_t result = a2 + 1;
      return result;
    }
    *(unsigned char *)(result + 3) = 0;
    if (a2) {
      goto LABEL_16;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PrimaryButtonModifier()
{
  return &type metadata for PrimaryButtonModifier;
}

uint64_t sub_1000F1774(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000F1788);
}

uint64_t sub_1000F1788(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000063C0(&qword_100202120);
  BOOL v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_1000F17F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000F180C);
}

uint64_t sub_1000F180C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000063C0(&qword_100202120);
  BOOL v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for HeaderButtonWithIconStyle(uint64_t a1)
{
  return sub_10005AFA8(a1, qword_100202380);
}

void sub_1000F18A0()
{
  sub_1000FB9E4(319, (unint64_t *)&unk_100202190, (uint64_t (*)(uint64_t))&type metadata accessor for ColorScheme, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

ValueMetadata *type metadata accessor for ScreenTitleModifier()
{
  return &type metadata for ScreenTitleModifier;
}

ValueMetadata *type metadata accessor for AlignToTopModifier()
{
  return &type metadata for AlignToTopModifier;
}

uint64_t sub_1000F197C()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_1000F1998()
{
  qword_100212970 = 0x4008000000000000;
}

uint64_t sub_1000F19A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v56 = a1;
  uint64_t v60 = a2;
  uint64_t v59 = type metadata accessor for DynamicTypeSize();
  uint64_t v57 = *(void *)(v59 - 8);
  __chkstk_darwin(v59);
  int v3 = (char *)&v53 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000063C0(&qword_100202990);
  uint64_t v5 = v4 - 8;
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v53 - v9;
  uint64_t v11 = sub_1000063C0(&qword_100202998);
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = sub_1000063C0(&qword_1002029A0) - 8;
  __chkstk_darwin(v58);
  long long v54 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = static Alignment.center.getter();
  uint64_t v18 = v17;
  *((void *)v8 + 3) = 0;
  *((void *)v8 + 4) = 0;
  v8[40] = 1;
  uint64_t v19 = (uint64_t *)&v8[*(int *)(v5 + 56)];
  *uint64_t v19 = swift_getKeyPath();
  sub_1000063C0((uint64_t *)&unk_1001FAE30);
  swift_storeEnumTagMultiPayload();
  *uint64_t v8 = 1;
  *((void *)v8 + 1) = v16;
  *((void *)v8 + 2) = v18;
  *((void *)v8 + 3) = 0;
  *((void *)v8 + 4) = 0;
  v8[40] = 1;
  sub_1000F1DF0(v55, v56, &v8[*(int *)(v5 + 52)]);
  sub_100026FD0((uint64_t)v8, (uint64_t)v10, &qword_100202990);
  LOBYTE(v19) = static Edge.Set.bottom.getter();
  type metadata accessor for IconTitleLabelStyle(0);
  sub_100020A04((uint64_t)v3);
  DynamicTypeSize.isAccessibilitySize.getter();
  uint64_t v20 = *(void (**)(char *, uint64_t))(v57 + 8);
  uint64_t v21 = v59;
  v20(v3, v59);
  EdgeInsets.init(_all:)();
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  sub_100008DD4((uint64_t)v10, (uint64_t)v14, &qword_100202990);
  uint64_t v30 = &v14[*(int *)(v12 + 44)];
  *uint64_t v30 = (char)v19;
  *((void *)v30 + 1) = v23;
  *((void *)v30 + 2) = v25;
  *((void *)v30 + 3) = v27;
  *((void *)v30 + 4) = v29;
  v30[40] = 0;
  sub_10002784C((uint64_t)v10, &qword_100202990);
  LOBYTE(v12) = static Edge.Set.top.getter();
  uint64_t v31 = (uint64_t)v54;
  sub_100020A04((uint64_t)v3);
  DynamicTypeSize.isAccessibilitySize.getter();
  v20(v3, v21);
  EdgeInsets.init(_all:)();
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  uint64_t v37 = v36;
  uint64_t v39 = v38;
  sub_100008DD4((uint64_t)v14, v31, &qword_100202998);
  uint64_t v40 = v31 + *(int *)(v58 + 44);
  *(unsigned char *)uint64_t v40 = v12;
  *(void *)(v40 + 8) = v33;
  *(void *)(v40 + 16) = v35;
  *(void *)(v40 + 24) = v37;
  *(void *)(v40 + 32) = v39;
  *(unsigned char *)(v40 + 40) = 0;
  sub_10002784C((uint64_t)v14, &qword_100202998);
  char v41 = static Edge.Set.horizontal.getter();
  if (qword_1001FAD08 != -1) {
    swift_once();
  }
  EdgeInsets.init(_all:)();
  uint64_t v43 = v42;
  uint64_t v45 = v44;
  uint64_t v47 = v46;
  uint64_t v49 = v48;
  uint64_t v50 = v60;
  sub_100008DD4(v31, v60, &qword_1002029A0);
  uint64_t v51 = v50 + *(int *)(sub_1000063C0(&qword_1002029A8) + 36);
  *(unsigned char *)uint64_t v51 = v41;
  *(void *)(v51 + 8) = v43;
  *(void *)(v51 + 16) = v45;
  *(void *)(v51 + 24) = v47;
  *(void *)(v51 + 32) = v49;
  *(unsigned char *)(v51 + 40) = 0;
  return sub_10002784C(v31, &qword_1002029A0);
}

uint64_t sub_1000F1DF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v95 = a2;
  uint64_t v91 = a3;
  uint64_t v4 = type metadata accessor for LabelStyleConfiguration.Title();
  uint64_t v87 = *(void *)(v4 - 8);
  uint64_t v88 = v4;
  __chkstk_darwin(v4);
  long long v86 = (char *)v70 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = sub_1000063C0(&qword_1002028E8);
  uint64_t v6 = __chkstk_darwin(v85);
  id v90 = (char *)v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v89 = (uint64_t)v70 - v8;
  uint64_t v82 = type metadata accessor for Image.Scale();
  uint64_t v72 = *(void *)(v82 - 8);
  uint64_t v9 = __chkstk_darwin(v82);
  int v76 = (char *)v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v80 = (uint64_t)v70 - v11;
  uint64_t v12 = type metadata accessor for LabelStyleConfiguration.Icon();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)v70 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70[0] = sub_1000063C0(&qword_100202910);
  __chkstk_darwin(v70[0]);
  uint64_t v17 = (char *)v70 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = sub_1000063C0(&qword_100202918);
  __chkstk_darwin(v71);
  uint64_t v77 = (char *)v70 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = sub_1000063C0(&qword_100202920);
  __chkstk_darwin(v73);
  uint64_t v79 = (uint64_t)v70 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = sub_1000063C0(&qword_100202928);
  uint64_t v20 = __chkstk_darwin(v78);
  uint64_t v81 = (uint64_t)v70 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v83 = (uint64_t)v70 - v22;
  uint64_t v23 = type metadata accessor for DynamicTypeSize();
  uint64_t v24 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v26 = (char *)v70 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = *(int *)(type metadata accessor for IconTitleLabelStyle(0) + 20);
  *(void *)&long long v84 = a1;
  uint64_t v28 = a1 + v27;
  sub_100020A04((uint64_t)v26);
  int v29 = DynamicTypeSize.isAccessibilitySize.getter();
  uint64_t v30 = *(void (**)(char *, uint64_t))(v24 + 8);
  uint64_t v93 = v24 + 8;
  uint64_t v94 = v23;
  uint64_t v92 = v30;
  v30(v26, v23);
  LabelStyleConfiguration.icon.getter();
  if (qword_1001FAD30 != -1) {
    swift_once();
  }
  int v75 = v29;
  BOOL v74 = (v29 & 1) == 0;
  uint64_t v31 = qword_1002129D8;
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v17, v15, v12);
  *(void *)&v17[*(int *)(v70[0] + 36)] = v31;
  uint64_t v32 = *(void (**)(char *, uint64_t))(v13 + 8);
  swift_retain();
  v32(v15, v12);
  v70[1] = v28;
  sub_100020A04((uint64_t)v26);
  uint64_t v33 = v72;
  uint64_t v34 = (uint64_t)v76;
  uint64_t v35 = v82;
  (*(void (**)(char *, void, uint64_t))(v72 + 104))(v76, enum case for Image.Scale.large(_:), v82);
  uint64_t v36 = v80;
  sub_100116FF8(v34, v80);
  uint64_t v37 = *(void (**)(uint64_t, uint64_t))(v33 + 8);
  v37(v34, v35);
  v92(v26, v94);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v39 = (uint64_t)v77;
  uint64_t v40 = (uint64_t *)&v77[*(int *)(v71 + 36)];
  uint64_t v41 = sub_1000063C0(&qword_100202460);
  (*(void (**)(char *, uint64_t, uint64_t))(v33 + 16))((char *)v40 + *(int *)(v41 + 28), v36, v35);
  *uint64_t v40 = KeyPath;
  sub_100008DD4((uint64_t)v17, v39, &qword_100202910);
  v37(v36, v35);
  sub_10002784C((uint64_t)v17, &qword_100202910);
  LOBYTE(KeyPath) = static Edge.Set.vertical.getter();
  EdgeInsets.init(_all:)();
  uint64_t v43 = v42;
  uint64_t v45 = v44;
  uint64_t v47 = v46;
  uint64_t v49 = v48;
  uint64_t v50 = v79;
  sub_100008DD4(v39, v79, &qword_100202918);
  uint64_t v51 = v50 + *(int *)(v73 + 36);
  *(unsigned char *)uint64_t v51 = KeyPath;
  *(void *)(v51 + 8) = v43;
  *(void *)(v51 + 16) = v45;
  *(void *)(v51 + 24) = v47;
  *(void *)(v51 + 32) = v49;
  *(unsigned char *)(v51 + 40) = 0;
  sub_10002784C(v39, &qword_100202918);
  uint64_t v52 = *(void *)(v84 + 16);
  char v53 = *(unsigned char *)(v84 + 24);
  long long v96 = *(_OWORD *)v84;
  uint64_t v97 = v52;
  char v98 = v53;
  sub_1000063C0(&qword_100202930);
  Binding.projectedValue.getter();
  long long v84 = v99;
  uint64_t v54 = v100;
  char v55 = v101;
  uint64_t v56 = v81;
  sub_100008DD4(v50, v81, &qword_100202920);
  uint64_t v57 = v56 + *(int *)(v78 + 36);
  *(_OWORD *)uint64_t v57 = v84;
  *(void *)(v57 + 16) = v54;
  *(unsigned char *)(v57 + 24) = v55;
  sub_10002784C(v50, &qword_100202920);
  uint64_t v58 = v83;
  sub_100026FD0(v56, v83, &qword_100202928);
  uint64_t v59 = v86;
  LabelStyleConfiguration.title.getter();
  uint64_t v60 = qword_1002129D8;
  uint64_t v62 = v87;
  uint64_t v61 = v88;
  uint64_t v63 = (uint64_t)v90;
  (*(void (**)(char *, char *, uint64_t))(v87 + 16))(v90, v59, v88);
  *(void *)(v63 + *(int *)(v85 + 36)) = v60;
  uint64_t v64 = *(void (**)(char *, uint64_t))(v62 + 8);
  swift_retain();
  v64(v59, v61);
  uint64_t v65 = v89;
  sub_100026FD0(v63, v89, &qword_1002028E8);
  sub_100020A04((uint64_t)v26);
  LOBYTE(v60) = DynamicTypeSize.isAccessibilitySize.getter();
  v92(v26, v94);
  sub_100008DD4(v58, v56, &qword_100202928);
  sub_100008DD4(v65, v63, &qword_1002028E8);
  unsigned long long v66 = v91;
  *uint64_t v91 = 0;
  *((unsigned char *)v66 + 8) = v74;
  *((unsigned char *)v66 + 9) = v75 & 1;
  char v67 = (int *)sub_1000063C0(&qword_1002029B0);
  sub_100008DD4(v56, (uint64_t)v66 + v67[12], &qword_100202928);
  sub_100008DD4(v63, (uint64_t)v66 + v67[16], &qword_1002028E8);
  long long v68 = (char *)v66 + v67[20];
  *(void *)long long v68 = 0;
  v68[8] = 0;
  v68[9] = (v60 & 1) == 0;
  sub_10002784C(v65, &qword_1002028E8);
  sub_10002784C(v58, &qword_100202928);
  sub_10002784C(v63, &qword_1002028E8);
  return sub_10002784C(v56, &qword_100202928);
}

uint64_t sub_1000F275C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v69 = a2;
  uint64_t v65 = type metadata accessor for CommonUIBlendModifier(0);
  uint64_t v3 = __chkstk_darwin(v65);
  unsigned long long v66 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v68 = (uint64_t)&v54 - v5;
  uint64_t v6 = type metadata accessor for ColorScheme();
  uint64_t v55 = *(void *)(v6 - 8);
  uint64_t v56 = v6;
  __chkstk_darwin(v6);
  uint64_t v54 = (uint64_t)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_1000063C0(&qword_100202598);
  __chkstk_darwin(v64);
  char v67 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ButtonStyleConfiguration.Label();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000063C0(&qword_1002025A0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_1000063C0(&qword_1002025A8);
  uint64_t v57 = *(void *)(v60 - 8);
  __chkstk_darwin(v60);
  uint64_t v17 = (char *)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = sub_1000063C0(&qword_1002025B0);
  __chkstk_darwin(v58);
  uint64_t v19 = (char *)&v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = sub_1000063C0(&qword_1002025B8);
  __chkstk_darwin(v59);
  uint64_t v21 = (char *)&v54 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_1000063C0(&qword_1002025C0);
  __chkstk_darwin(v61);
  uint64_t v62 = (char *)&v54 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = a1;
  ButtonStyleConfiguration.label.getter();
  uint64_t v23 = static Font.footnote.getter();
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v15, v12, v9);
  uint64_t v25 = (uint64_t *)&v15[*(int *)(v13 + 36)];
  *uint64_t v25 = KeyPath;
  v25[1] = v23;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  static Font.Weight.bold.getter();
  sub_1000FB644();
  View.fontWeight(_:)();
  sub_10002784C((uint64_t)v15, &qword_1002025A0);
  if (qword_1001FAD40 != -1) {
    swift_once();
  }
  uint64_t v26 = qword_1002129E8;
  uint64_t v27 = v57;
  uint64_t v28 = v60;
  (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v19, v17, v60);
  *(void *)&v19[*(int *)(v58 + 36)] = v26;
  int v29 = *(void (**)(char *, uint64_t))(v27 + 8);
  swift_retain();
  v29(v17, v28);
  LOBYTE(v26) = static Edge.Set.all.getter();
  EdgeInsets.init(_all:)();
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  uint64_t v37 = v36;
  sub_100008DD4((uint64_t)v19, (uint64_t)v21, &qword_1002025B0);
  uint64_t v38 = &v21[*(int *)(v59 + 36)];
  *uint64_t v38 = v26;
  *((void *)v38 + 1) = v31;
  *((void *)v38 + 2) = v33;
  *((void *)v38 + 3) = v35;
  *((void *)v38 + 4) = v37;
  v38[40] = 0;
  sub_10002784C((uint64_t)v19, &qword_1002025B0);
  uint64_t v39 = (uint64_t)v21;
  if (ButtonStyleConfiguration.isPressed.getter())
  {
    uint64_t v40 = v54;
    sub_100020A84(v54);
    if (qword_1001FAD58 != -1) {
      swift_once();
    }
    swift_retain();
    uint64_t v41 = sub_1000EF408();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v40, v56);
  }
  else
  {
    if (qword_1001FAD58 != -1) {
      swift_once();
    }
    uint64_t v41 = qword_100212A00;
    swift_retain();
  }
  uint64_t v42 = v65;
  uint64_t v43 = (uint64_t)v66;
  *unsigned long long v66 = 0;
  uint64_t v44 = (uint64_t *)(v43 + *(int *)(v42 + 20));
  *uint64_t v44 = swift_getKeyPath();
  sub_1000063C0((uint64_t *)&unk_1001FB730);
  swift_storeEnumTagMultiPayload();
  uint64_t v45 = v68;
  sub_1000FB57C(v43, v68, type metadata accessor for CommonUIBlendModifier);
  uint64_t v46 = (uint64_t)v67;
  sub_1000FB450(v45, (uint64_t)&v67[*(int *)(v64 + 36)], type metadata accessor for CommonUIBlendModifier);
  *(void *)uint64_t v46 = v41;
  *(_WORD *)(v46 + 8) = 256;
  sub_1000FB4B8(v45, type metadata accessor for CommonUIBlendModifier);
  uint64_t v47 = static Alignment.center.getter();
  uint64_t v49 = v48;
  uint64_t v50 = (uint64_t)v62;
  uint64_t v51 = (uint64_t)&v62[*(int *)(v61 + 36)];
  sub_100008DD4(v46, v51, &qword_100202598);
  uint64_t v52 = (uint64_t *)(v51 + *(int *)(sub_1000063C0(&qword_1002025E0) + 36));
  *uint64_t v52 = v47;
  v52[1] = v49;
  sub_100008DD4(v39, v50, &qword_1002025B8);
  sub_10002784C(v46, &qword_100202598);
  sub_10002784C(v39, &qword_1002025B8);
  return sub_100026FD0(v50, v69, &qword_1002025C0);
}

uint64_t sub_1000F2ECC@<X0>(int a1@<W1>, uint64_t a2@<X8>)
{
  int v41 = a1;
  uint64_t v45 = a2;
  int v43 = (unsigned __int16)a1;
  uint64_t v2 = sub_1000063C0(&qword_1001FBA90);
  __chkstk_darwin(v2 - 8);
  uint64_t v44 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for ButtonStyleConfiguration.Label();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000063C0(&qword_100202AC8);
  uint64_t v9 = v8 - 8;
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000063C0(&qword_100202AD0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_1000063C0(&qword_100202AD8);
  __chkstk_darwin(v40);
  uint64_t v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_1000063C0(&qword_100202AE0);
  __chkstk_darwin(v42);
  uint64_t v18 = (char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  ButtonStyleConfiguration.label.getter();
  char v19 = static Edge.Set.all.getter();
  EdgeInsets.init(_all:)();
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v11, v7, v4);
  uint64_t v28 = &v11[*(int *)(v9 + 44)];
  *uint64_t v28 = v19;
  *((void *)v28 + 1) = v21;
  *((void *)v28 + 2) = v23;
  *((void *)v28 + 3) = v25;
  *((void *)v28 + 4) = v27;
  v28[40] = 0;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if ((v41 & 0x100) != 0) {
    uint64_t v29 = static Color.primary.getter();
  }
  else {
    uint64_t v29 = static Color.accentColor.getter();
  }
  uint64_t v30 = v29;
  sub_100008DD4((uint64_t)v11, (uint64_t)v14, &qword_100202AC8);
  *(void *)&v14[*(int *)(v12 + 36)] = v30;
  sub_10002784C((uint64_t)v11, &qword_100202AC8);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v32 = swift_allocObject();
  *(unsigned char *)(v32 + 16) = v43 & 1;
  sub_100008DD4((uint64_t)v14, (uint64_t)v16, &qword_100202AD0);
  uint64_t v33 = (uint64_t *)&v16[*(int *)(v40 + 36)];
  *uint64_t v33 = KeyPath;
  v33[1] = (uint64_t)sub_100026D50;
  v33[2] = v32;
  sub_10002784C((uint64_t)v14, &qword_100202AD0);
  uint64_t v34 = type metadata accessor for Font.Design();
  uint64_t v35 = (uint64_t)v44;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v44, 1, 1, v34);
  uint64_t v36 = static Font.system(size:weight:design:)();
  sub_10002784C(v35, &qword_1001FBA90);
  uint64_t v37 = swift_getKeyPath();
  sub_100008DD4((uint64_t)v16, (uint64_t)v18, &qword_100202AD8);
  uint64_t v38 = (uint64_t *)&v18[*(int *)(v42 + 36)];
  *uint64_t v38 = v37;
  v38[1] = v36;
  sub_10002784C((uint64_t)v16, &qword_100202AD8);
  return sub_100026FD0((uint64_t)v18, v45, &qword_100202AE0);
}

uint64_t sub_1000F3330@<X0>(uint64_t a1@<X8>)
{
  if (v1[1]) {
    int v2 = 256;
  }
  else {
    int v2 = 0;
  }
  return sub_1000F2ECC(v2 | *v1, a1);
}

uint64_t sub_1000F334C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v63 = a1;
  uint64_t v60 = type metadata accessor for RoundedRectangle();
  __chkstk_darwin(v60);
  uint64_t v61 = (char *)&v52 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = type metadata accessor for ColorScheme();
  uint64_t v53 = *(void *)(v2 - 8);
  uint64_t v54 = v2;
  __chkstk_darwin(v2);
  uint64_t v52 = (uint64_t)&v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for ButtonStyleConfiguration.Label();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000063C0(&qword_100202AC8);
  uint64_t v9 = v8 - 8;
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_1000063C0(&qword_100202AD0);
  __chkstk_darwin(v55);
  uint64_t v13 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = sub_1000063C0(&qword_100202AE8);
  __chkstk_darwin(v56);
  uint64_t v15 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_1000063C0(&qword_100202AF0);
  __chkstk_darwin(v57);
  uint64_t v17 = (char *)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = sub_1000063C0(&qword_100202AF8);
  __chkstk_darwin(v58);
  uint64_t v59 = (uint64_t)&v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  ButtonStyleConfiguration.label.getter();
  char v19 = static Edge.Set.all.getter();
  EdgeInsets.init(_all:)();
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v11, v7, v4);
  uint64_t v28 = &v11[*(int *)(v9 + 44)];
  *uint64_t v28 = v19;
  *((void *)v28 + 1) = v21;
  *((void *)v28 + 2) = v23;
  *((void *)v28 + 3) = v25;
  *((void *)v28 + 4) = v27;
  v28[40] = 0;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (qword_1001FAD28 != -1) {
    swift_once();
  }
  uint64_t v29 = qword_1002129D0;
  sub_100008DD4((uint64_t)v11, (uint64_t)v13, &qword_100202AC8);
  *(void *)&v13[*(int *)(v55 + 36)] = v29;
  swift_retain();
  sub_10002784C((uint64_t)v11, &qword_100202AC8);
  char v30 = ButtonStyleConfiguration.isPressed.getter();
  uint64_t v31 = static Color.accentColor.getter();
  if (v30)
  {
    uint64_t v32 = v52;
    uint64_t v33 = v62;
    sub_100020A84(v52);
    uint64_t v34 = sub_1000EF408();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v32, v54);
    uint64_t v31 = v34;
  }
  else
  {
    uint64_t v33 = v62;
  }
  char v35 = static Edge.Set.all.getter();
  sub_100008DD4((uint64_t)v13, (uint64_t)v15, &qword_100202AD0);
  uint64_t v36 = &v15[*(int *)(v56 + 36)];
  *(void *)uint64_t v36 = v31;
  v36[8] = v35;
  sub_10002784C((uint64_t)v13, &qword_100202AD0);
  uint64_t v37 = v61;
  uint64_t v38 = &v61[*(int *)(v60 + 20)];
  uint64_t v39 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v40 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v40 - 8) + 104))(v38, v39, v40);
  __asm { FMOV            V0.2D, #6.0 }
  *uint64_t v37 = _Q0;
  uint64_t v46 = (uint64_t)&v17[*(int *)(v57 + 36)];
  sub_1000FB450((uint64_t)v37, v46, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  *(_WORD *)(v46 + *(int *)(sub_1000063C0(&qword_100202B00) + 36)) = 256;
  sub_100008DD4((uint64_t)v15, (uint64_t)v17, &qword_100202AE8);
  sub_1000FB4B8((uint64_t)v37, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  sub_10002784C((uint64_t)v15, &qword_100202AE8);
  LOBYTE(v39) = *(unsigned char *)(v33 + *(int *)(type metadata accessor for InputDashboardQuestionnaireButtonStyle(0) + 20));
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v48 = swift_allocObject();
  *(unsigned char *)(v48 + 16) = v39;
  uint64_t v49 = v59;
  sub_100008DD4((uint64_t)v17, v59, &qword_100202AF0);
  uint64_t v50 = (uint64_t *)(v49 + *(int *)(v58 + 36));
  *uint64_t v50 = KeyPath;
  v50[1] = (uint64_t)sub_100040414;
  v50[2] = v48;
  sub_10002784C((uint64_t)v17, &qword_100202AF0);
  return sub_100026FD0(v49, v63, &qword_100202AF8);
}

uint64_t sub_1000F3980@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v32 = a2;
  uint64_t v3 = type metadata accessor for AccessibilityTraits();
  uint64_t v33 = *(void *)(v3 - 8);
  uint64_t v34 = v3;
  __chkstk_darwin(v3);
  uint64_t v31 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000063C0(&qword_1002025E8);
  uint64_t v6 = v5 - 8;
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000063C0(&qword_1002025F0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_1000063C0(&qword_1002025F8);
  uint64_t v12 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1000063C0(&qword_100202600);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v19 = sub_1000063C0(&qword_100202608);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v8, a1, v19);
  uint64_t v20 = &v8[*(int *)(v6 + 44)];
  *(void *)uint64_t v20 = KeyPath;
  v20[8] = 1;
  uint64_t v21 = static Font.title2.getter();
  uint64_t v22 = swift_getKeyPath();
  sub_100008DD4((uint64_t)v8, (uint64_t)v11, &qword_1002025E8);
  uint64_t v23 = (uint64_t *)&v11[*(int *)(v9 + 36)];
  *uint64_t v23 = v22;
  v23[1] = v21;
  sub_10002784C((uint64_t)v8, &qword_1002025E8);
  static Font.Weight.semibold.getter();
  sub_1000FB71C();
  View.fontWeight(_:)();
  sub_10002784C((uint64_t)v11, &qword_1002025F0);
  if (qword_1001FAD30 != -1) {
    swift_once();
  }
  uint64_t v24 = qword_1002129D8;
  uint64_t v25 = v30;
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v17, v14, v30);
  *(void *)&v17[*(int *)(v15 + 36)] = v24;
  uint64_t v26 = *(void (**)(char *, uint64_t))(v12 + 8);
  swift_retain();
  v26(v14, v25);
  uint64_t v27 = v31;
  static AccessibilityTraits.isHeader.getter();
  sub_1000FB880();
  View.accessibility(addTraits:)();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v27, v34);
  return sub_10002784C((uint64_t)v17, &qword_100202600);
}

uint64_t sub_1000F3D64()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000F3D80()
{
  return swift_getOpaqueTypeConformance2();
}

double sub_1000F3D9C()
{
  double result = 60.0;
  xmmword_100212980 = xmmword_100190C20;
  *(_OWORD *)&qword_100212990 = xmmword_100190C30;
  return result;
}

double sub_1000F3DBC()
{
  double result = 0.0;
  __asm { FMOV            V1.2D, #16.0 }
  xmmword_1002129A0 = _Q1;
  *(_OWORD *)&qword_1002129B0 = xmmword_100190C40;
  return result;
}

__n128 sub_1000F3DD8()
{
  __asm { FMOV            V0.2D, #10.0 }
  xmmword_1002129C0 = (__int128)result;
  return result;
}

__n128 sub_1000F3DE8@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (qword_1001FAD18 != -1) {
    swift_once();
  }
  long long v10 = xmmword_1002129A0;
  uint64_t v4 = qword_1002129B0;
  uint64_t v5 = unk_1002129B8;
  char v6 = static Edge.Set.all.getter();
  uint64_t v7 = sub_1000063C0(&qword_1002023D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a2, a1, v7);
  uint64_t v8 = a2 + *(int *)(sub_1000063C0(&qword_1002023D8) + 36);
  *(unsigned char *)uint64_t v8 = v6;
  __n128 result = (__n128)v10;
  *(_OWORD *)(v8 + 8) = v10;
  *(void *)(v8 + 24) = v4;
  *(void *)(v8 + 32) = v5;
  *(unsigned char *)(v8 + 40) = 0;
  return result;
}

uint64_t sub_1000F3ED8()
{
  uint64_t result = Color.init(_:bundle:)();
  qword_1002129D0 = result;
  return result;
}

uint64_t sub_1000F3F14(uint64_t a1)
{
  return sub_1000F405C(a1, (SEL *)&selRef_labelColor, &qword_1002129D8);
}

uint64_t sub_1000F3F28(uint64_t a1)
{
  return sub_1000F3F4C(a1, &qword_1002129E0);
}

uint64_t sub_1000F3F3C(uint64_t a1)
{
  return sub_1000F3F4C(a1, &qword_1002129E8);
}

uint64_t sub_1000F3F4C(uint64_t a1, uint64_t *a2)
{
  if (qword_1001FAD30 != -1) {
    swift_once();
  }
  uint64_t result = Color.opacity(_:)();
  *a2 = result;
  return result;
}

uint64_t sub_1000F3FBC(uint64_t a1)
{
  return sub_1000F405C(a1, (SEL *)&selRef_secondarySystemFillColor, &qword_1002129F0);
}

uint64_t sub_1000F3FD0(uint64_t a1)
{
  return sub_1000F405C(a1, (SEL *)&selRef_tertiarySystemFillColor, &qword_1002129F8);
}

uint64_t sub_1000F3FE4()
{
  if (qword_1001FAD48 != -1) {
    swift_once();
  }
  qword_100212A00 = qword_1002129F0;

  return swift_retain();
}

uint64_t sub_1000F4048(uint64_t a1)
{
  return sub_1000F405C(a1, (SEL *)&selRef_secondarySystemBackgroundColor, &qword_100212A08);
}

uint64_t sub_1000F405C(uint64_t a1, SEL *a2, uint64_t *a3)
{
  id v4 = [self *a2];
  uint64_t result = Color.init(_:)();
  *a3 = result;
  return result;
}

uint64_t sub_1000F40A4@<X0>(char a1@<W1>, char a2@<W3>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1000063C0(&qword_100202CA8);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000063C0(&qword_100202CB0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v8 = static VerticalAlignment.top.getter();
  *((void *)v8 + 1) = 0;
  v8[16] = 1;
  uint64_t v12 = sub_1000063C0(&qword_100202CB8);
  sub_1000F4244(&v8[*(int *)(v12 + 44)]);
  uint64_t v13 = 0;
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  uint64_t v16 = 0;
  if ((a2 & 1) == 0)
  {
    EdgeInsets.init(_all:)();
    uint64_t v13 = v17;
    uint64_t v14 = v18;
    uint64_t v15 = v19;
    uint64_t v16 = v20;
  }
  sub_100008DD4((uint64_t)v8, (uint64_t)v11, &qword_100202CA8);
  uint64_t v21 = &v11[*(int *)(v9 + 36)];
  *uint64_t v21 = a1;
  *((void *)v21 + 1) = v13;
  *((void *)v21 + 2) = v14;
  *((void *)v21 + 3) = v15;
  *((void *)v21 + 4) = v16;
  v21[40] = a2 & 1;
  sub_10002784C((uint64_t)v8, &qword_100202CA8);
  return sub_100026FD0((uint64_t)v11, a3, &qword_100202CB0);
}

uint64_t sub_1000F4244@<X0>(char *a1@<X8>)
{
  uint64_t v29 = type metadata accessor for LabelStyleConfiguration.Icon();
  uint64_t v26 = *(void *)(v29 - 8);
  uint64_t v2 = v26;
  uint64_t v3 = __chkstk_darwin(v29);
  uint64_t v28 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v25 - v5;
  uint64_t v25 = (char *)&v25 - v5;
  uint64_t v7 = type metadata accessor for LabelStyleConfiguration.Title();
  uint64_t v27 = *(void *)(v7 - 8);
  uint64_t v8 = v27;
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v25 - v12;
  LabelStyleConfiguration.title.getter();
  LabelStyleConfiguration.icon.getter();
  uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  v14(v11, v13, v7);
  char v30 = 1;
  uint64_t v15 = *(void (**)(char *, char *, uint64_t))(v2 + 16);
  uint64_t v16 = v28;
  uint64_t v17 = v6;
  uint64_t v18 = v29;
  v15(v28, v17, v29);
  v14(a1, v11, v7);
  uint64_t v19 = sub_1000063C0(&qword_100202CC0);
  uint64_t v20 = &a1[*(int *)(v19 + 48)];
  char v21 = v30;
  *(void *)uint64_t v20 = 0;
  v20[8] = v21;
  v15(&a1[*(int *)(v19 + 64)], v16, v18);
  uint64_t v22 = *(void (**)(char *, uint64_t))(v26 + 8);
  v22(v25, v18);
  uint64_t v23 = *(void (**)(char *, uint64_t))(v27 + 8);
  v23(v13, v7);
  v22(v16, v18);
  return ((uint64_t (*)(char *, uint64_t))v23)(v11, v7);
}

uint64_t sub_1000F44E0@<X0>(uint64_t a1@<X8>)
{
  return sub_1000F40A4(*v1, v1[16], a1);
}

uint64_t sub_1000F44F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v76 = a1;
  uint64_t v88 = a2;
  uint64_t v2 = type metadata accessor for LabelStyleConfiguration.Icon();
  uint64_t v85 = *(void *)(v2 - 8);
  uint64_t v86 = v2;
  __chkstk_darwin(v2);
  uint64_t v77 = (char *)&v72 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = sub_1000063C0(&qword_100202BE0);
  __chkstk_darwin(v80);
  uint64_t v87 = (char *)&v72 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = sub_1000063C0(&qword_100202BE8);
  uint64_t v5 = __chkstk_darwin(v81);
  uint64_t v83 = (uint64_t)&v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v82 = (uint64_t)&v72 - v7;
  uint64_t v8 = sub_1000063C0((uint64_t *)&unk_100202BF0);
  __chkstk_darwin(v8 - 8);
  uint64_t v79 = (uint64_t *)((char *)&v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = sub_1000063C0((uint64_t *)&unk_1001FBC90);
  __chkstk_darwin(v10 - 8);
  uint64_t v84 = (uint64_t)&v72 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for LabelStyleConfiguration.Title();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v72 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1000063C0(&qword_100202C00);
  uint64_t v17 = v16 - 8;
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v72 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1000063C0(&qword_100202C08);
  uint64_t v21 = v20 - 8;
  __chkstk_darwin(v20);
  uint64_t v75 = (uint64_t)&v72 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_1000063C0((uint64_t *)&unk_100202C10);
  __chkstk_darwin(v23 - 8);
  uint64_t v25 = (char *)&v72 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_1000063C0(&qword_1001FBCA0);
  __chkstk_darwin(v26 - 8);
  uint64_t v74 = (uint64_t)&v72 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = sub_1000063C0(&qword_100202C20) - 8;
  __chkstk_darwin(v78);
  uint64_t v29 = (char *)&v72 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v25 = static VerticalAlignment.center.getter();
  *((void *)v25 + 1) = 0;
  v25[16] = 1;
  uint64_t v73 = &v25[*(int *)(sub_1000063C0(&qword_100202C28) + 44)];
  LabelStyleConfiguration.title.getter();
  uint64_t v30 = static Font.subheadline.getter();
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v19, v15, v12);
  uint64_t v32 = (uint64_t *)&v19[*(int *)(v17 + 44)];
  *uint64_t v32 = KeyPath;
  v32[1] = v30;
  uint64_t v33 = v77;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  LOBYTE(v12) = static Edge.Set.trailing.getter();
  uint64_t v34 = v75;
  sub_100008DD4((uint64_t)v19, v75, &qword_100202C00);
  uint64_t v35 = v34 + *(int *)(v21 + 44);
  *(unsigned char *)uint64_t v35 = v12;
  *(_OWORD *)(v35 + 8) = 0u;
  *(_OWORD *)(v35 + 24) = 0u;
  *(unsigned char *)(v35 + 40) = 1;
  sub_10002784C((uint64_t)v19, &qword_100202C00);
  sub_100026FD0(v34, (uint64_t)v73, &qword_100202C08);
  uint64_t v36 = static Alignment.leading.getter();
  uint64_t v37 = v74;
  sub_100019CF0(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v74, 0.0, 1, 0.0, 1, v36, v38);
  sub_10002784C((uint64_t)v25, (uint64_t *)&unk_100202C10);
  LOBYTE(v12) = static Edge.Set.all.getter();
  sub_100008DD4(v37, (uint64_t)v29, &qword_1001FBCA0);
  uint64_t v39 = v79;
  uint64_t v40 = &v29[*(int *)(v78 + 44)];
  *uint64_t v40 = v12;
  *(_OWORD *)(v40 + 8) = 0u;
  *(_OWORD *)(v40 + 24) = 0u;
  v40[40] = 1;
  sub_10002784C(v37, &qword_1001FBCA0);
  uint64_t v41 = static Alignment.center.getter();
  uint64_t v78 = v42;
  *uint64_t v39 = static Alignment.center.getter();
  v39[1] = v43;
  uint64_t v44 = v33;
  LabelStyleConfiguration.icon.getter();
  LOBYTE(v37) = static Edge.Set.top.getter();
  unsigned __int8 v45 = static Edge.Set.trailing.getter();
  char v46 = Edge.Set.init(rawValue:)();
  Edge.Set.init(rawValue:)();
  if (Edge.Set.init(rawValue:)() != v37) {
    char v46 = Edge.Set.init(rawValue:)();
  }
  Edge.Set.init(rawValue:)();
  if (Edge.Set.init(rawValue:)() != v45) {
    char v46 = Edge.Set.init(rawValue:)();
  }
  uint64_t v47 = (uint64_t)v87;
  uint64_t v48 = *(int *)(sub_1000063C0(&qword_100202C30) + 36);
  uint64_t v49 = *(int *)(sub_1000063C0(&qword_100202C38) + 44);
  EdgeInsets.init(_all:)();
  uint64_t v51 = v50;
  uint64_t v53 = v52;
  uint64_t v55 = v54;
  uint64_t v57 = v56;
  uint64_t v59 = v85;
  uint64_t v58 = v86;
  (*(void (**)(uint64_t, char *, uint64_t))(v85 + 16))(v47, v44, v86);
  uint64_t v60 = v47 + *(int *)(v80 + 36);
  *(unsigned char *)uint64_t v60 = v46;
  *(void *)(v60 + 8) = v51;
  *(void *)(v60 + 16) = v53;
  *(void *)(v60 + 24) = v55;
  *(void *)(v60 + 32) = v57;
  *(unsigned char *)(v60 + 40) = 0;
  (*(void (**)(char *, uint64_t))(v59 + 8))(v44, v58);
  if (qword_1001FAD40 != -1) {
    swift_once();
  }
  uint64_t v61 = v88;
  uint64_t v62 = v88 + v48;
  uint64_t v63 = qword_1002129E8;
  uint64_t v64 = v83;
  sub_100008DD4(v47, v83, &qword_100202BE0);
  *(void *)(v64 + *(int *)(v81 + 36)) = v63;
  swift_retain();
  sub_10002784C(v47, &qword_100202BE0);
  uint64_t v65 = v82;
  sub_100026FD0(v64, v82, &qword_100202BE8);
  sub_100026FD0(v65, (uint64_t)v39 + v49, &qword_100202BE8);
  uint64_t v66 = static Alignment.topTrailing.getter();
  uint64_t v67 = v84;
  sub_100019D60(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v84, 0.0, 1, INFINITY, 0, v66, v68);
  sub_10002784C((uint64_t)v39, (uint64_t *)&unk_100202BF0);
  sub_100026FD0(v67, v62, (uint64_t *)&unk_1001FBC90);
  uint64_t v69 = (uint64_t *)(v62 + *(int *)(sub_1000063C0(&qword_100202C40) + 36));
  uint64_t v70 = v78;
  *uint64_t v69 = v41;
  v69[1] = v70;
  return sub_100026FD0((uint64_t)v29, v61, &qword_100202C20);
}

uint64_t sub_1000F4D44@<X0>(uint64_t a1@<X8>)
{
  uint64_t v52 = a1;
  uint64_t v1 = type metadata accessor for LabelStyleConfiguration.Title();
  uint64_t v50 = *(void *)(v1 - 8);
  uint64_t v51 = v1;
  uint64_t v2 = __chkstk_darwin(v1);
  uint64_t v49 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v48 = (char *)&v45 - v4;
  uint64_t v5 = type metadata accessor for Image.Scale();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = type metadata accessor for LabelStyleConfiguration.Icon();
  uint64_t v45 = *(void *)(v47 - 8);
  __chkstk_darwin(v47);
  uint64_t v10 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000063C0(&qword_100202450);
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1000063C0(&qword_100202458);
  uint64_t v16 = v15 - 8;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v46 = (uint64_t)&v45 - v20;
  LabelStyleConfiguration.icon.getter();
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, enum case for Image.Scale.large(_:), v5);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v22 = (uint64_t *)&v14[*(int *)(v12 + 44)];
  uint64_t v23 = sub_1000063C0(&qword_100202460);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))((char *)v22 + *(int *)(v23 + 28), v8, v5);
  *uint64_t v22 = KeyPath;
  uint64_t v24 = v45;
  uint64_t v25 = v47;
  (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v14, v10, v47);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v10, v25);
  LOBYTE(v25) = static Edge.Set.vertical.getter();
  EdgeInsets.init(_all:)();
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  sub_100008DD4((uint64_t)v14, (uint64_t)v19, &qword_100202450);
  uint64_t v34 = &v19[*(int *)(v16 + 44)];
  *uint64_t v34 = v25;
  *((void *)v34 + 1) = v27;
  *((void *)v34 + 2) = v29;
  *((void *)v34 + 3) = v31;
  *((void *)v34 + 4) = v33;
  v34[40] = 0;
  sub_10002784C((uint64_t)v14, &qword_100202450);
  uint64_t v35 = v46;
  sub_100026FD0((uint64_t)v19, v46, &qword_100202458);
  uint64_t v36 = v48;
  LabelStyleConfiguration.title.getter();
  sub_100008DD4(v35, (uint64_t)v19, &qword_100202458);
  uint64_t v38 = v49;
  uint64_t v37 = v50;
  uint64_t v39 = *(void (**)(char *, char *, uint64_t))(v50 + 16);
  uint64_t v40 = v51;
  v39(v49, v36, v51);
  uint64_t v41 = v52;
  sub_100008DD4((uint64_t)v19, v52, &qword_100202458);
  uint64_t v42 = sub_1000063C0(&qword_100202468);
  v39((char *)(v41 + *(int *)(v42 + 48)), v38, v40);
  uint64_t v43 = *(void (**)(char *, uint64_t))(v37 + 8);
  v43(v36, v40);
  sub_10002784C(v35, &qword_100202458);
  v43(v38, v40);
  return sub_10002784C((uint64_t)v19, &qword_100202458);
}

uint64_t sub_1000F51FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000FA0A4(a1, (uint64_t (*)(void))&static VerticalAlignment.center.getter, &qword_100202448, (uint64_t (*)(uint64_t))sub_1000F4D44, a2);
}

uint64_t sub_1000F5230@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v56 = a1;
  uint64_t v60 = a2;
  uint64_t v59 = type metadata accessor for DynamicTypeSize();
  uint64_t v57 = *(void *)(v59 - 8);
  __chkstk_darwin(v59);
  uint64_t v3 = (char *)&v53 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000063C0(&qword_1002028C8);
  uint64_t v5 = v4 - 8;
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v53 - v9;
  uint64_t v11 = sub_1000063C0(&qword_1002028D0);
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = sub_1000063C0(&qword_1002028D8) - 8;
  __chkstk_darwin(v58);
  uint64_t v54 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = static Alignment.center.getter();
  uint64_t v18 = v17;
  *((void *)v8 + 3) = 0;
  *((void *)v8 + 4) = 0;
  v8[40] = 1;
  uint64_t v19 = (uint64_t *)&v8[*(int *)(v5 + 56)];
  *uint64_t v19 = swift_getKeyPath();
  sub_1000063C0((uint64_t *)&unk_1001FAE30);
  swift_storeEnumTagMultiPayload();
  *uint64_t v8 = 1;
  *((void *)v8 + 1) = v16;
  *((void *)v8 + 2) = v18;
  *((void *)v8 + 3) = 0;
  *((void *)v8 + 4) = 0;
  v8[40] = 1;
  sub_1000F5678(v55, v56, &v8[*(int *)(v5 + 52)]);
  sub_100026FD0((uint64_t)v8, (uint64_t)v10, &qword_1002028C8);
  LOBYTE(v19) = static Edge.Set.bottom.getter();
  type metadata accessor for SmallIconTitleLabelStyle(0);
  sub_100020A04((uint64_t)v3);
  DynamicTypeSize.isAccessibilitySize.getter();
  uint64_t v20 = *(void (**)(char *, uint64_t))(v57 + 8);
  uint64_t v21 = v59;
  v20(v3, v59);
  EdgeInsets.init(_all:)();
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  sub_100008DD4((uint64_t)v10, (uint64_t)v14, &qword_1002028C8);
  uint64_t v30 = &v14[*(int *)(v12 + 44)];
  *uint64_t v30 = (char)v19;
  *((void *)v30 + 1) = v23;
  *((void *)v30 + 2) = v25;
  *((void *)v30 + 3) = v27;
  *((void *)v30 + 4) = v29;
  v30[40] = 0;
  sub_10002784C((uint64_t)v10, &qword_1002028C8);
  LOBYTE(v12) = static Edge.Set.top.getter();
  uint64_t v31 = (uint64_t)v54;
  sub_100020A04((uint64_t)v3);
  DynamicTypeSize.isAccessibilitySize.getter();
  v20(v3, v21);
  EdgeInsets.init(_all:)();
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  uint64_t v37 = v36;
  uint64_t v39 = v38;
  sub_100008DD4((uint64_t)v14, v31, &qword_1002028D0);
  uint64_t v40 = v31 + *(int *)(v58 + 44);
  *(unsigned char *)uint64_t v40 = v12;
  *(void *)(v40 + 8) = v33;
  *(void *)(v40 + 16) = v35;
  *(void *)(v40 + 24) = v37;
  *(void *)(v40 + 32) = v39;
  *(unsigned char *)(v40 + 40) = 0;
  sub_10002784C((uint64_t)v14, &qword_1002028D0);
  char v41 = static Edge.Set.horizontal.getter();
  if (qword_1001FAD08 != -1) {
    swift_once();
  }
  EdgeInsets.init(_all:)();
  uint64_t v43 = v42;
  uint64_t v45 = v44;
  uint64_t v47 = v46;
  uint64_t v49 = v48;
  uint64_t v50 = v60;
  sub_100008DD4(v31, v60, &qword_1002028D8);
  uint64_t v51 = v50 + *(int *)(sub_1000063C0(&qword_1002028E0) + 36);
  *(unsigned char *)uint64_t v51 = v41;
  *(void *)(v51 + 8) = v43;
  *(void *)(v51 + 16) = v45;
  *(void *)(v51 + 24) = v47;
  *(void *)(v51 + 32) = v49;
  *(unsigned char *)(v51 + 40) = 0;
  return sub_10002784C(v31, &qword_1002028D8);
}

uint64_t sub_1000F5678@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v117 = a2;
  long long v113 = a3;
  uint64_t v109 = type metadata accessor for LabelStyleConfiguration.Title();
  uint64_t v107 = *(void *)(v109 - 8);
  __chkstk_darwin(v109);
  uint64_t v103 = (char *)&v82 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = sub_1000063C0(&qword_1002028E8);
  __chkstk_darwin(v99);
  char v101 = (char *)&v82 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = sub_1000063C0(&qword_1002028F0);
  __chkstk_darwin(v98);
  uint64_t v102 = (uint64_t)&v82 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = sub_1000063C0(&qword_1002028F8);
  __chkstk_darwin(v106);
  uint64_t v104 = (uint64_t)&v82 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = sub_1000063C0(&qword_100202900);
  uint64_t v108 = *(void *)(v110 - 8);
  __chkstk_darwin(v110);
  uint64_t v105 = (char *)&v82 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = sub_1000063C0(&qword_100202908);
  uint64_t v9 = __chkstk_darwin(v100);
  long long v112 = (char *)&v82 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v111 = (uint64_t)&v82 - v11;
  uint64_t v92 = type metadata accessor for Image.Scale();
  uint64_t v91 = *(void *)(v92 - 8);
  uint64_t v12 = __chkstk_darwin(v92);
  uint64_t v14 = (char *)&v82 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v90 = (uint64_t)&v82 - v15;
  uint64_t v84 = type metadata accessor for LabelStyleConfiguration.Icon();
  uint64_t v16 = *(void *)(v84 - 8);
  __chkstk_darwin(v84);
  uint64_t v18 = (char *)&v82 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = sub_1000063C0(&qword_100202910);
  __chkstk_darwin(v82);
  uint64_t v20 = (char *)&v82 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = sub_1000063C0(&qword_100202918);
  __chkstk_darwin(v83);
  uint64_t v86 = (char *)&v82 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = sub_1000063C0(&qword_100202920);
  __chkstk_darwin(v85);
  uint64_t v88 = (uint64_t)&v82 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = sub_1000063C0(&qword_100202928);
  uint64_t v23 = __chkstk_darwin(v87);
  uint64_t v96 = (uint64_t)&v82 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v95 = (uint64_t)&v82 - v25;
  uint64_t v26 = type metadata accessor for DynamicTypeSize();
  uint64_t v27 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  uint64_t v29 = (char *)&v82 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = *(int *)(type metadata accessor for SmallIconTitleLabelStyle(0) + 20);
  *(void *)&long long v97 = a1;
  uint64_t v31 = a1 + v30;
  sub_100020A04((uint64_t)v29);
  int v32 = DynamicTypeSize.isAccessibilitySize.getter();
  long long v114 = *(void (**)(char *, uint64_t))(v27 + 8);
  uint64_t v115 = v26;
  uint64_t v116 = v27 + 8;
  v114(v29, v26);
  LabelStyleConfiguration.icon.getter();
  if (qword_1001FAD30 != -1) {
    swift_once();
  }
  int v94 = v32;
  BOOL v93 = (v32 & 1) == 0;
  uint64_t v33 = qword_1002129D8;
  uint64_t v34 = v84;
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v20, v18, v84);
  *(void *)&v20[*(int *)(v82 + 36)] = v33;
  uint64_t v35 = *(void (**)(char *, uint64_t))(v16 + 8);
  swift_retain();
  v35(v18, v34);
  uint64_t v89 = v31;
  sub_100020A04((uint64_t)v29);
  uint64_t v36 = v91;
  uint64_t v37 = v92;
  (*(void (**)(char *, void, uint64_t))(v91 + 104))(v14, enum case for Image.Scale.medium(_:), v92);
  uint64_t v38 = v90;
  sub_100116FF8((uint64_t)v14, v90);
  uint64_t v39 = *(void (**)(char *, uint64_t))(v36 + 8);
  v39(v14, v37);
  v114(v29, v115);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v41 = (uint64_t)v86;
  uint64_t v42 = (uint64_t *)&v86[*(int *)(v83 + 36)];
  uint64_t v43 = sub_1000063C0(&qword_100202460);
  (*(void (**)(char *, uint64_t, uint64_t))(v36 + 16))((char *)v42 + *(int *)(v43 + 28), v38, v37);
  uint64_t *v42 = KeyPath;
  sub_100008DD4((uint64_t)v20, v41, &qword_100202910);
  v39((char *)v38, v37);
  sub_10002784C((uint64_t)v20, &qword_100202910);
  LOBYTE(KeyPath) = static Edge.Set.bottom.getter();
  EdgeInsets.init(_all:)();
  uint64_t v45 = v44;
  uint64_t v47 = v46;
  uint64_t v49 = v48;
  uint64_t v51 = v50;
  uint64_t v52 = v88;
  sub_100008DD4(v41, v88, &qword_100202918);
  uint64_t v53 = v52 + *(int *)(v85 + 36);
  *(unsigned char *)uint64_t v53 = KeyPath;
  *(void *)(v53 + 8) = v45;
  *(void *)(v53 + 16) = v47;
  *(void *)(v53 + 24) = v49;
  *(void *)(v53 + 32) = v51;
  *(unsigned char *)(v53 + 40) = 0;
  sub_10002784C(v41, &qword_100202918);
  uint64_t v54 = *(void *)(v97 + 16);
  char v55 = *(unsigned char *)(v97 + 24);
  long long v118 = *(_OWORD *)v97;
  uint64_t v119 = v54;
  char v120 = v55;
  sub_1000063C0(&qword_100202930);
  Binding.projectedValue.getter();
  long long v97 = v121;
  uint64_t v56 = v122;
  LOBYTE(v38) = v123;
  uint64_t v57 = v96;
  sub_100008DD4(v52, v96, &qword_100202920);
  uint64_t v58 = v57 + *(int *)(v87 + 36);
  *(_OWORD *)uint64_t v58 = v97;
  *(void *)(v58 + 16) = v56;
  *(unsigned char *)(v58 + 24) = v38;
  sub_10002784C(v52, &qword_100202920);
  uint64_t v59 = v95;
  sub_100026FD0(v57, v95, &qword_100202928);
  uint64_t v60 = v103;
  LabelStyleConfiguration.title.getter();
  uint64_t v61 = qword_1002129D8;
  uint64_t v62 = v107;
  uint64_t v63 = (uint64_t)v101;
  uint64_t v64 = v109;
  (*(void (**)(char *, char *, uint64_t))(v107 + 16))(v101, v60, v109);
  *(void *)(v63 + *(int *)(v99 + 36)) = v61;
  uint64_t v65 = *(void (**)(char *, uint64_t))(v62 + 8);
  swift_retain();
  v65(v60, v64);
  uint64_t v66 = v102;
  sub_100008DD4(v63, v102, &qword_1002028E8);
  *(_WORD *)(v66 + *(int *)(v98 + 36)) = 257;
  sub_10002784C(v63, &qword_1002028E8);
  uint64_t v67 = static Font.caption.getter();
  uint64_t v68 = swift_getKeyPath();
  uint64_t v69 = v104;
  sub_100008DD4(v66, v104, &qword_1002028F0);
  uint64_t v70 = (uint64_t *)(v69 + *(int *)(v106 + 36));
  *uint64_t v70 = v68;
  v70[1] = v67;
  sub_10002784C(v66, &qword_1002028F0);
  static Font.Weight.medium.getter();
  sub_1000FD2EC();
  uint64_t v71 = v105;
  View.fontWeight(_:)();
  sub_10002784C(v69, &qword_1002028F8);
  uint64_t v72 = swift_getKeyPath();
  uint64_t v73 = v108;
  uint64_t v74 = (uint64_t)v112;
  uint64_t v75 = v110;
  (*(void (**)(char *, char *, uint64_t))(v108 + 16))(v112, v71, v110);
  uint64_t v76 = v74 + *(int *)(v100 + 36);
  *(void *)uint64_t v76 = v72;
  *(void *)(v76 + 8) = 1;
  *(unsigned char *)(v76 + 16) = 0;
  (*(void (**)(char *, uint64_t))(v73 + 8))(v71, v75);
  uint64_t v77 = v111;
  sub_100026FD0(v74, v111, &qword_100202908);
  sub_100020A04((uint64_t)v29);
  LOBYTE(v72) = DynamicTypeSize.isAccessibilitySize.getter();
  v114(v29, v115);
  sub_100008DD4(v59, v57, &qword_100202928);
  sub_100008DD4(v77, v74, &qword_100202908);
  uint64_t v78 = v113;
  *long long v113 = 0;
  *((unsigned char *)v78 + 8) = v93;
  *((unsigned char *)v78 + 9) = v94 & 1;
  uint64_t v79 = (int *)sub_1000063C0(&qword_100202958);
  sub_100008DD4(v57, (uint64_t)v78 + v79[12], &qword_100202928);
  sub_100008DD4(v74, (uint64_t)v78 + v79[16], &qword_100202908);
  uint64_t v80 = (char *)v78 + v79[20];
  *(void *)uint64_t v80 = 0;
  v80[8] = 0;
  v80[9] = (v72 & 1) == 0;
  sub_10002784C(v77, &qword_100202908);
  sub_10002784C(v59, &qword_100202928);
  sub_10002784C(v74, &qword_100202908);
  return sub_10002784C(v57, &qword_100202928);
}

uint64_t sub_1000F62DC@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v52 = a3;
  char v5 = a2 & 1;
  char v6 = BYTE1(a2) & 1;
  uint64_t v50 = sub_1000063C0(&qword_100202560);
  __chkstk_darwin(v50);
  uint64_t v51 = (char *)v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for PrimaryButtonStyle(0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000063C0(&qword_100202568);
  uint64_t v48 = *(void *)(v11 - 8);
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v14 = (char *)v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v47 = (char *)v46 - v15;
  uint64_t v49 = sub_1000063C0(&qword_100202570);
  uint64_t v16 = __chkstk_darwin(v49);
  uint64_t v18 = (char *)v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v21 = (char *)v46 - v20;
  if ((a2 & 0x10000) != 0)
  {
    if (qword_1001FAD08 != -1) {
      swift_once();
    }
    uint64_t v35 = qword_100212970;
    uint64_t KeyPath = swift_getKeyPath();
    *uint64_t v10 = v5;
    v10[1] = v6;
    *((void *)v10 + 1) = v35;
    uint64_t v37 = (uint64_t *)&v10[*(int *)(v8 + 28)];
    *uint64_t v37 = swift_getKeyPath();
    sub_1000063C0((uint64_t *)&unk_1001FB730);
    swift_storeEnumTagMultiPayload();
    uint64_t v38 = &v10[*(int *)(v8 + 32)];
    *(void *)uint64_t v38 = KeyPath;
    v38[8] = 0;
    uint64_t v39 = sub_1000063C0(&qword_100202578);
    uint64_t v40 = sub_100027F2C((unint64_t *)&unk_100202580, &qword_100202578);
    uint64_t v41 = sub_1000FAE98(&qword_1001FC888, (void (*)(uint64_t))type metadata accessor for PrimaryButtonStyle);
    View.buttonStyle<A>(_:)();
    sub_1000FB4B8((uint64_t)v10, type metadata accessor for PrimaryButtonStyle);
    uint64_t v43 = v47;
    uint64_t v42 = v48;
    (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v47, v14, v11);
    (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v51, v43, v11);
    swift_storeEnumTagMultiPayload();
    uint64_t v53 = v39;
    uint64_t v54 = (ValueMetadata *)v8;
    uint64_t v55 = v40;
    unint64_t v56 = v41;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    unint64_t v45 = sub_10003FEF8();
    uint64_t v53 = v11;
    uint64_t v54 = &type metadata for HorizontalIconTitleLabelStyle;
    uint64_t v55 = OpaqueTypeConformance2;
    unint64_t v56 = v45;
    swift_getOpaqueTypeConformance2();
    _ConditionalContent<>.init(storage:)();
    return (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v43, v11);
  }
  else
  {
    v46[0] = v19;
    v46[1] = a1;
    if (qword_1001FAD08 != -1) {
      swift_once();
    }
    uint64_t v22 = qword_100212970;
    uint64_t v23 = swift_getKeyPath();
    *uint64_t v10 = v5;
    v10[1] = v6;
    *((void *)v10 + 1) = v22;
    uint64_t v24 = (uint64_t *)&v10[*(int *)(v8 + 28)];
    *uint64_t v24 = swift_getKeyPath();
    sub_1000063C0((uint64_t *)&unk_1001FB730);
    swift_storeEnumTagMultiPayload();
    uint64_t v25 = &v10[*(int *)(v8 + 32)];
    *(void *)uint64_t v25 = v23;
    v25[8] = 0;
    uint64_t v26 = sub_1000063C0(&qword_100202578);
    uint64_t v27 = sub_100027F2C((unint64_t *)&unk_100202580, &qword_100202578);
    uint64_t v28 = sub_1000FAE98(&qword_1001FC888, (void (*)(uint64_t))type metadata accessor for PrimaryButtonStyle);
    uint64_t v29 = v47;
    View.buttonStyle<A>(_:)();
    sub_1000FB4B8((uint64_t)v10, type metadata accessor for PrimaryButtonStyle);
    uint64_t v53 = v26;
    uint64_t v54 = (ValueMetadata *)v8;
    uint64_t v55 = v27;
    unint64_t v56 = v28;
    uint64_t v30 = swift_getOpaqueTypeConformance2();
    unint64_t v31 = sub_10003FEF8();
    View.labelStyle<A>(_:)();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v29, v11);
    uint64_t v32 = v46[0];
    uint64_t v33 = v49;
    (*(void (**)(char *, char *, uint64_t))(v46[0] + 32))(v21, v18, v49);
    (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v51, v21, v33);
    swift_storeEnumTagMultiPayload();
    uint64_t v53 = v11;
    uint64_t v54 = &type metadata for HorizontalIconTitleLabelStyle;
    uint64_t v55 = v30;
    unint64_t v56 = v31;
    swift_getOpaqueTypeConformance2();
    _ConditionalContent<>.init(storage:)();
    return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v21, v33);
  }
}

uint64_t sub_1000F69C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (v2[2]) {
    int v3 = 0x10000;
  }
  else {
    int v3 = 0;
  }
  if (v2[1]) {
    int v4 = 256;
  }
  else {
    int v4 = 0;
  }
  return sub_1000F62DC(a1, v4 | *v2 | v3, a2);
}

uint64_t sub_1000F69F0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000F6A0C(uint64_t a1)
{
  uint64_t v2 = sub_1000063C0(&qword_100202470);
  __chkstk_darwin(v2);
  int v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000063C0(&qword_100202478);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = [self currentDevice];
  [v8 userInterfaceIdiom];

  sub_1000F6B9C(a1, (uint64_t)v7);
  sub_100008DD4((uint64_t)v7, (uint64_t)v4, &qword_100202478);
  swift_storeEnumTagMultiPayload();
  sub_1000FB0BC();
  _ConditionalContent<>.init(storage:)();
  return sub_10002784C((uint64_t)v7, &qword_100202478);
}

uint64_t sub_1000F6B9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v92 = a2;
  uint64_t v89 = type metadata accessor for CommonUIBlendModifier(0);
  __chkstk_darwin(v89);
  uint64_t v90 = (char *)&v74 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ColorScheme();
  uint64_t v76 = *(void *)(v6 - 8);
  uint64_t v77 = v6;
  __chkstk_darwin(v6);
  uint64_t v75 = (uint64_t)&v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = type metadata accessor for RoundedRectangle();
  __chkstk_darwin(v79);
  uint64_t v86 = (char *)&v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = sub_1000063C0(&qword_100202510);
  __chkstk_darwin(v82);
  uint64_t v87 = (uint64_t)&v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = sub_1000063C0((uint64_t *)&unk_100202518);
  __chkstk_darwin(v85);
  uint64_t v88 = (char *)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ButtonStyleConfiguration.Label();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1000063C0((uint64_t *)&unk_1002024D0);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v74 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1000063C0(&qword_1002024C0);
  uint64_t v19 = v18 - 8;
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v74 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1000063C0(&qword_1002024B0);
  __chkstk_darwin(v22);
  uint64_t v78 = (char *)&v74 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = sub_1000063C0(&qword_1002024A0);
  __chkstk_darwin(v80);
  uint64_t v83 = (char *)&v74 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = sub_1000063C0(&qword_100202490);
  __chkstk_darwin(v81);
  uint64_t v84 = (uint64_t)&v74 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = a1;
  ButtonStyleConfiguration.label.getter();
  char v26 = *v3;
  if (*v3) {
    double v27 = 0.0;
  }
  else {
    double v27 = INFINITY;
  }
  static Alignment.center.getter();
  __n128 v28 = sub_100019DD0(0.0, 1, 0.0, 1, v27, v26, 0.0, 1, (uint64_t)v17, 0.0, 1, v27, v26);
  (*(void (**)(char *, uint64_t, __n128))(v12 + 8))(v14, v11, v28);
  char v29 = static Edge.Set.horizontal.getter();
  EdgeInsets.init(_all:)();
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  uint64_t v37 = v36;
  sub_100008DD4((uint64_t)v17, (uint64_t)v21, (uint64_t *)&unk_1002024D0);
  uint64_t v38 = &v21[*(int *)(v19 + 44)];
  *uint64_t v38 = v29;
  *((void *)v38 + 1) = v31;
  *((void *)v38 + 2) = v33;
  *((void *)v38 + 3) = v35;
  *((void *)v38 + 4) = v37;
  v38[40] = 0;
  sub_10002784C((uint64_t)v17, (uint64_t *)&unk_1002024D0);
  if (v3[1])
  {
    uint64_t v39 = static Color.accentColor.getter();
  }
  else
  {
    if (qword_1001FAD30 != -1) {
      swift_once();
    }
    uint64_t v39 = qword_1002129D8;
    swift_retain();
  }
  uint64_t v40 = (uint64_t)v78;
  uint64_t KeyPath = swift_getKeyPath();
  sub_100008DD4((uint64_t)v21, v40, &qword_1002024C0);
  uint64_t v42 = (uint64_t *)(v40 + *(int *)(v22 + 36));
  uint64_t *v42 = KeyPath;
  v42[1] = v39;
  sub_10002784C((uint64_t)v21, &qword_1002024C0);
  uint64_t v43 = v86;
  uint64_t v44 = &v86[*(int *)(v79 + 20)];
  uint64_t v45 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v46 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v46 - 8) + 104))(v44, v45, v46);
  __asm { FMOV            V0.2D, #12.0 }
  *uint64_t v43 = _Q0;
  if (ButtonStyleConfiguration.isPressed.getter())
  {
    if (v3[1])
    {
      static Color.accentColor.getter();
      Color.opacity(_:)();
      swift_release();
    }
    else
    {
      if (qword_1001FAD58 != -1) {
        swift_once();
      }
      swift_retain();
    }
    type metadata accessor for PrimaryButtonStyle(0);
    uint64_t v53 = v75;
    sub_100020A84(v75);
    uint64_t v52 = sub_1000EF408();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v53, v77);
  }
  else if (v3[1])
  {
    static Color.accentColor.getter();
    uint64_t v52 = Color.opacity(_:)();
    swift_release();
  }
  else
  {
    if (qword_1001FAD58 != -1) {
      swift_once();
    }
    uint64_t v52 = qword_100212A00;
    swift_retain();
  }
  uint64_t v54 = v87;
  sub_1000FB450((uint64_t)v43, v87, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  uint64_t v55 = v82;
  *(void *)(v54 + *(int *)(v82 + 52)) = v52;
  *(_WORD *)(v54 + *(int *)(v55 + 56)) = 256;
  sub_1000FB4B8((uint64_t)v43, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  uint64_t v56 = v89;
  uint64_t v57 = (uint64_t)v90;
  *uint64_t v90 = 0;
  uint64_t v58 = (uint64_t *)(v57 + *(int *)(v56 + 20));
  *uint64_t v58 = swift_getKeyPath();
  sub_1000063C0((uint64_t *)&unk_1001FB730);
  swift_storeEnumTagMultiPayload();
  uint64_t v59 = (uint64_t)v88;
  sub_1000FB57C(v57, (uint64_t)&v88[*(int *)(v85 + 36)], type metadata accessor for CommonUIBlendModifier);
  sub_100026FD0(v54, v59, &qword_100202510);
  uint64_t v60 = static Alignment.center.getter();
  uint64_t v62 = v61;
  uint64_t v63 = (uint64_t)v83;
  uint64_t v64 = (uint64_t)&v83[*(int *)(v80 + 36)];
  sub_100008DD4(v59, v64, (uint64_t *)&unk_100202518);
  uint64_t v65 = (uint64_t *)(v64 + *(int *)(sub_1000063C0(&qword_1002024F8) + 36));
  *uint64_t v65 = v60;
  v65[1] = v62;
  sub_100008DD4(v40, v63, &qword_1002024B0);
  sub_10002784C(v59, (uint64_t *)&unk_100202518);
  sub_10002784C(v40, &qword_1002024B0);
  uint64_t v66 = &v3[*(int *)(type metadata accessor for PrimaryButtonStyle(0) + 32)];
  uint64_t v67 = *(void *)v66;
  LOBYTE(v62) = v66[8];
  sub_100058794(*(void *)v66, v62);
  LOBYTE(v64) = sub_100020D78(v67, v62);
  sub_100024D58(v67, v62);
  if (v64) {
    double v68 = 1.0;
  }
  else {
    double v68 = 0.3;
  }
  uint64_t v69 = v84;
  sub_100008DD4(v63, v84, &qword_1002024A0);
  *(double *)(v69 + *(int *)(v81 + 36)) = v68;
  sub_10002784C(v63, &qword_1002024A0);
  char v70 = ButtonStyleConfiguration.isPressed.getter();
  uint64_t v71 = v92;
  sub_100008DD4(v69, v92, &qword_100202490);
  uint64_t v72 = v71 + *(int *)(sub_1000063C0(&qword_100202478) + 36);
  *(void *)uint64_t v72 = 0;
  *(unsigned char *)(v72 + 8) = v70 & 1;
  return sub_10002784C(v69, &qword_100202490);
}

uint64_t sub_1000F750C@<X0>(char a1@<W1>, uint64_t a2@<X8>)
{
  uint64_t v70 = a2;
  uint64_t v3 = type metadata accessor for TintShapeStyle();
  uint64_t v68 = *(void *)(v3 - 8);
  uint64_t v69 = v3;
  __chkstk_darwin(v3);
  uint64_t v67 = (char *)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = type metadata accessor for RoundedRectangle() - 8;
  __chkstk_darwin(v64);
  uint64_t v63 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_1000063C0(&qword_100202B58) - 8;
  __chkstk_darwin(v66);
  uint64_t v65 = (uint64_t)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = type metadata accessor for ButtonStyleConfiguration.Label();
  uint64_t v58 = *(void *)(v60 - 8);
  __chkstk_darwin(v60);
  uint64_t v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000063C0((uint64_t *)&unk_1002024D0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000063C0(&qword_1002024C0);
  uint64_t v13 = v12 - 8;
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = sub_1000063C0(&qword_100202B60);
  __chkstk_darwin(v56);
  uint64_t v17 = (char *)&v55 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = sub_1000063C0(&qword_100202B68);
  uint64_t v57 = *(void *)(v59 - 8);
  __chkstk_darwin(v59);
  uint64_t v19 = (char *)&v55 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1000063C0(&qword_100202B70);
  uint64_t v21 = v20 - 8;
  __chkstk_darwin(v20);
  uint64_t v55 = (char *)&v55 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_1000063C0(&qword_100202B78) - 8;
  __chkstk_darwin(v62);
  uint64_t v61 = (char *)&v55 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  ButtonStyleConfiguration.label.getter();
  if (a1) {
    double v24 = 0.0;
  }
  else {
    double v24 = INFINITY;
  }
  static Alignment.center.getter();
  __n128 v25 = sub_100019DD0(0.0, 1, 0.0, 1, v24, a1 & 1, 0.0, 1, (uint64_t)v11, 0.0, 1, v24, a1);
  (*(void (**)(char *, uint64_t, __n128))(v58 + 8))(v8, v60, v25);
  char v26 = static Edge.Set.all.getter();
  sub_100008DD4((uint64_t)v11, (uint64_t)v15, (uint64_t *)&unk_1002024D0);
  double v27 = &v15[*(int *)(v13 + 44)];
  *double v27 = v26;
  *(_OWORD *)(v27 + 8) = 0u;
  *(_OWORD *)(v27 + 24) = 0u;
  v27[40] = 1;
  sub_10002784C((uint64_t)v11, (uint64_t *)&unk_1002024D0);
  uint64_t v28 = static Color.white.getter();
  sub_100008DD4((uint64_t)v15, (uint64_t)v17, &qword_1002024C0);
  *(void *)&v17[*(int *)(v56 + 36)] = v28;
  sub_10002784C((uint64_t)v15, &qword_1002024C0);
  static Font.Weight.semibold.getter();
  sub_1000FE828();
  View.fontWeight(_:)();
  sub_10002784C((uint64_t)v17, &qword_100202B60);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v30 = v57;
  uint64_t v31 = (uint64_t)v55;
  uint64_t v32 = v59;
  (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v55, v19, v59);
  uint64_t v33 = v31 + *(int *)(v21 + 44);
  *(void *)uint64_t v33 = KeyPath;
  *(unsigned char *)(v33 + 8) = 1;
  (*(void (**)(char *, uint64_t))(v30 + 8))(v19, v32);
  uint64_t v34 = v63;
  uint64_t v35 = &v63[*(int *)(v64 + 28)];
  uint64_t v36 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v37 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v37 - 8) + 104))(v35, v36, v37);
  __asm { FMOV            V0.2D, #12.0 }
  *uint64_t v34 = _Q0;
  uint64_t v43 = v67;
  TintShapeStyle.init()();
  uint64_t v44 = v65;
  sub_1000FB450((uint64_t)v34, v65, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  uint64_t v45 = v66;
  uint64_t v47 = v68;
  uint64_t v46 = v69;
  (*(void (**)(uint64_t, char *, uint64_t))(v68 + 16))(v44 + *(int *)(v66 + 60), v43, v69);
  *(_WORD *)(v44 + *(int *)(v45 + 64)) = 256;
  (*(void (**)(char *, uint64_t))(v47 + 8))(v43, v46);
  sub_1000FB4B8((uint64_t)v34, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  uint64_t v48 = static Alignment.center.getter();
  uint64_t v50 = v49;
  uint64_t v51 = (uint64_t)v61;
  uint64_t v52 = (uint64_t)&v61[*(int *)(v62 + 44)];
  sub_100008DD4(v44, v52, &qword_100202B58);
  uint64_t v53 = (uint64_t *)(v52 + *(int *)(sub_1000063C0(&qword_100202B88) + 36));
  *uint64_t v53 = v48;
  v53[1] = v50;
  sub_100008DD4(v31, v51, &qword_100202B70);
  sub_10002784C(v44, &qword_100202B58);
  sub_10002784C(v31, &qword_100202B70);
  return sub_100026FD0(v51, v70, &qword_100202B78);
}

uint64_t sub_1000F7C0C@<X0>(uint64_t a1@<X8>)
{
  return sub_1000F750C(*v1, a1);
}

uint64_t sub_1000F7C14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v81 = a2;
  uint64_t v77 = type metadata accessor for CommonUIBlendModifier(0);
  __chkstk_darwin(v77);
  uint64_t v78 = (char *)&v65 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for ColorScheme();
  uint64_t v66 = *(void *)(v4 - 8);
  uint64_t v67 = v4;
  __chkstk_darwin(v4);
  uint64_t v65 = (uint64_t)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = type metadata accessor for UnevenRoundedRectangle();
  __chkstk_darwin(v68);
  uint64_t v7 = (uint64_t *)((char *)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v70 = sub_1000063C0(&qword_100202528);
  __chkstk_darwin(v70);
  uint64_t v75 = (uint64_t)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = sub_1000063C0(&qword_100202530);
  __chkstk_darwin(v74);
  uint64_t v76 = (char *)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ButtonStyleConfiguration.Label();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000063C0((uint64_t *)&unk_1002024D0);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v65 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1000063C0(&qword_1002024C0);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v65 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = sub_1000063C0(&qword_100202538);
  __chkstk_darwin(v69);
  uint64_t v21 = (char *)&v65 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = sub_1000063C0(&qword_100202540);
  __chkstk_darwin(v72);
  uint64_t v23 = (char *)&v65 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = sub_1000063C0(&qword_100202548);
  __chkstk_darwin(v71);
  uint64_t v73 = (uint64_t)&v65 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = a1;
  ButtonStyleConfiguration.label.getter();
  static Alignment.center.getter();
  __n128 v25 = sub_100019DD0(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v16, 0.0, 1, INFINITY, 0);
  (*(void (**)(char *, uint64_t, __n128))(v11 + 8))(v13, v10, v25);
  LOBYTE(v13) = static Edge.Set.leading.getter();
  unsigned __int8 v26 = static Edge.Set.trailing.getter();
  char v27 = Edge.Set.init(rawValue:)();
  Edge.Set.init(rawValue:)();
  if (Edge.Set.init(rawValue:)() != v13) {
    char v27 = Edge.Set.init(rawValue:)();
  }
  Edge.Set.init(rawValue:)();
  if (Edge.Set.init(rawValue:)() != v26) {
    char v27 = Edge.Set.init(rawValue:)();
  }
  uint64_t v28 = v79;
  EdgeInsets.init(_all:)();
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  sub_100008DD4((uint64_t)v16, (uint64_t)v19, (uint64_t *)&unk_1002024D0);
  uint64_t v37 = &v19[*(int *)(v17 + 36)];
  *uint64_t v37 = v27;
  *((void *)v37 + 1) = v30;
  *((void *)v37 + 2) = v32;
  *((void *)v37 + 3) = v34;
  *((void *)v37 + 4) = v36;
  v37[40] = 0;
  sub_10002784C((uint64_t)v16, (uint64_t *)&unk_1002024D0);
  uint64_t v38 = (char *)v7 + *(int *)(v68 + 20);
  uint64_t v39 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v40 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v40 - 8) + 104))(v38, v39, v40);
  RectangleCornerRadii.init(topLeft:topRight:bottomRight:bottomLeft:)();
  void *v7 = v41;
  v7[1] = v42;
  v7[2] = v43;
  v7[3] = v44;
  if (ButtonStyleConfiguration.isPressed.getter())
  {
    type metadata accessor for UnevenCornerPrimaryButtonStyle(0);
    uint64_t v45 = v65;
    sub_100020A84(v65);
    if (qword_1001FAD58 != -1) {
      swift_once();
    }
    swift_retain();
    uint64_t v46 = sub_1000EF408();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v45, v67);
  }
  else
  {
    if (qword_1001FAD58 != -1) {
      swift_once();
    }
    uint64_t v46 = qword_100212A00;
    swift_retain();
  }
  uint64_t v47 = v75;
  sub_1000FB450((uint64_t)v7, v75, (uint64_t (*)(void))&type metadata accessor for UnevenRoundedRectangle);
  uint64_t v48 = v70;
  *(void *)(v47 + *(int *)(v70 + 52)) = v46;
  *(_WORD *)(v47 + *(int *)(v48 + 56)) = 256;
  sub_1000FB4B8((uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for UnevenRoundedRectangle);
  uint64_t v49 = v77;
  uint64_t v50 = (uint64_t)v78;
  unsigned char *v78 = 0;
  uint64_t v51 = (uint64_t *)(v50 + *(int *)(v49 + 20));
  *uint64_t v51 = swift_getKeyPath();
  sub_1000063C0((uint64_t *)&unk_1001FB730);
  swift_storeEnumTagMultiPayload();
  uint64_t v52 = (uint64_t)v76;
  sub_1000FB57C(v50, (uint64_t)&v76[*(int *)(v74 + 36)], type metadata accessor for CommonUIBlendModifier);
  sub_100026FD0(v47, v52, &qword_100202528);
  uint64_t v53 = static Alignment.center.getter();
  uint64_t v55 = v54;
  uint64_t v56 = (uint64_t)&v21[*(int *)(v69 + 36)];
  sub_100008DD4(v52, v56, &qword_100202530);
  uint64_t v57 = (uint64_t *)(v56 + *(int *)(sub_1000063C0(&qword_100202550) + 36));
  *uint64_t v57 = v53;
  v57[1] = v55;
  sub_100008DD4((uint64_t)v19, (uint64_t)v21, &qword_1002024C0);
  sub_10002784C(v52, &qword_100202530);
  sub_10002784C((uint64_t)v19, &qword_1002024C0);
  uint64_t v58 = v28 + *(int *)(type metadata accessor for UnevenCornerPrimaryButtonStyle(0) + 28);
  uint64_t v59 = *(void *)v58;
  LOBYTE(v55) = *(unsigned char *)(v58 + 8);
  sub_100058794(*(void *)v58, v55);
  LOBYTE(v56) = sub_100020D78(v59, v55);
  sub_100024D58(v59, v55);
  if (v56) {
    double v60 = 1.0;
  }
  else {
    double v60 = 0.3;
  }
  sub_100008DD4((uint64_t)v21, (uint64_t)v23, &qword_100202538);
  *(double *)&v23[*(int *)(v72 + 36)] = v60;
  sub_10002784C((uint64_t)v21, &qword_100202538);
  char v61 = ButtonStyleConfiguration.isPressed.getter();
  uint64_t v62 = v73;
  sub_100008DD4((uint64_t)v23, v73, &qword_100202540);
  uint64_t v63 = v62 + *(int *)(v71 + 36);
  *(void *)uint64_t v63 = 0;
  *(unsigned char *)(v63 + 8) = v61 & 1;
  sub_10002784C((uint64_t)v23, &qword_100202540);
  return sub_100026FD0(v62, v81, &qword_100202548);
}

uint64_t sub_1000F8510@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v19[1] = a2;
  uint64_t v3 = sub_1000063C0(&qword_100202960);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000063C0((uint64_t *)&unk_100202968);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000063C0(&qword_1001FBC40);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = [self currentDevice];
  id v14 = [v13 userInterfaceIdiom];

  if (v14 == (id)6)
  {
    uint64_t v15 = static Alignment.center.getter();
    sub_100019FB8(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v12, 0.0, 1, 0.0, 1, v15, v16);
    sub_100008DD4((uint64_t)v12, (uint64_t)v9, &qword_1001FBC40);
    swift_storeEnumTagMultiPayload();
    sub_1000FD550();
    sub_100027F2C(&qword_100202980, &qword_100202960);
    _ConditionalContent<>.init(storage:)();
    return sub_10002784C((uint64_t)v12, &qword_1001FBC40);
  }
  else
  {
    uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    v18(v6, a1, v3);
    v18(v9, (uint64_t)v6, v3);
    swift_storeEnumTagMultiPayload();
    sub_1000FD550();
    sub_100027F2C(&qword_100202980, &qword_100202960);
    _ConditionalContent<>.init(storage:)();
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
}

uint64_t sub_1000F8838@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v72 = a2;
  uint64_t v4 = type metadata accessor for PreferredContentSizeModifier(0);
  uint64_t v5 = v4 - 8;
  uint64_t v74 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v74 + 64);
  __chkstk_darwin(v4);
  uint64_t v62 = type metadata accessor for NavigationPath();
  uint64_t v63 = *(void *)(v62 - 8);
  __chkstk_darwin(v62);
  uint64_t v8 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000063C0(&qword_1002023E0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_1000063C0(&qword_1002023E8);
  uint64_t v67 = *(void *)(v65 - 8);
  __chkstk_darwin(v65);
  uint64_t v76 = (char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000063C0(&qword_1002023F0);
  uint64_t v69 = *(void *)(v13 - 8);
  uint64_t v70 = v13;
  __chkstk_darwin(v13);
  uint64_t v64 = (char *)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_1000063C0(&qword_1002023F8) - 8;
  __chkstk_darwin(v66);
  uint64_t v77 = (uint64_t)&v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = sub_1000063C0(&qword_100202400) - 8;
  __chkstk_darwin(v71);
  uint64_t v68 = (uint64_t)&v57 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1000063C0(&qword_100202408);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v11, a1, v17);
  uint64_t v18 = *(int *)(v9 + 36);
  uint64_t v58 = v9;
  *(_WORD *)&v11[v18] = 256;
  uint64_t v78 = v2;
  sub_1000063C0(&qword_1001FB438);
  Binding.wrappedValue.getter();
  uint64_t v75 = type metadata accessor for PreferredContentSizeModifier;
  uint64_t v59 = (uint64_t)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000FB450(v2, v59, type metadata accessor for PreferredContentSizeModifier);
  uint64_t v19 = *(unsigned __int8 *)(v74 + 80);
  uint64_t v74 = ((v19 + 16) & ~v19) + v6;
  uint64_t v20 = (v19 + 16) & ~v19;
  uint64_t v61 = v20;
  uint64_t v73 = v19 | 7;
  uint64_t v21 = swift_allocObject();
  double v60 = type metadata accessor for PreferredContentSizeModifier;
  sub_1000FB57C((uint64_t)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v21 + v20, type metadata accessor for PreferredContentSizeModifier);
  unint64_t v22 = sub_1000FAB18();
  uint64_t v23 = sub_1000FAE98(&qword_1001FB600, (void (*)(uint64_t))&type metadata accessor for NavigationPath);
  uint64_t v24 = v62;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  __n128 v25 = v8;
  uint64_t v26 = v24;
  (*(void (**)(char *, uint64_t))(v63 + 8))(v25, v24);
  sub_10002784C((uint64_t)v11, &qword_1002023E0);
  uint64_t v27 = v78;
  uint64_t v28 = (uint64_t *)(v78 + *(int *)(v5 + 40));
  uint64_t v29 = *v28;
  uint64_t v30 = v28[1];
  LOBYTE(v28) = *((unsigned char *)v28 + 16);
  uint64_t v79 = v29;
  uint64_t v80 = v30;
  LOBYTE(v81) = (_BYTE)v28;
  sub_1000063C0(&qword_100201898);
  Binding.wrappedValue.getter();
  uint64_t v31 = v59;
  uint64_t v32 = v75;
  sub_1000FB450(v27, v59, v75);
  uint64_t v33 = swift_allocObject();
  uint64_t v34 = v61;
  uint64_t v35 = v60;
  sub_1000FB57C(v31, v33 + v61, v60);
  uint64_t v79 = v58;
  uint64_t v80 = v26;
  unint64_t v81 = v22;
  uint64_t v82 = v23;
  swift_getOpaqueTypeConformance2();
  uint64_t v36 = v64;
  uint64_t v37 = v65;
  uint64_t v38 = v76;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v67 + 8))(v38, v37);
  uint64_t v39 = v78;
  sub_1000FB450(v78, v31, v32);
  uint64_t v40 = swift_allocObject();
  uint64_t v41 = v31;
  sub_1000FB57C(v31, v40 + v34, v35);
  uint64_t v42 = v69;
  uint64_t v43 = v77;
  uint64_t v44 = v36;
  uint64_t v45 = v36;
  uint64_t v46 = v70;
  (*(void (**)(uint64_t, char *, uint64_t))(v69 + 16))(v77, v44, v70);
  uint64_t v47 = (void *)(v43 + *(int *)(v66 + 44));
  void *v47 = sub_1000F92A0;
  v47[1] = 0;
  v47[2] = sub_1000FADBC;
  v47[3] = v40;
  (*(void (**)(char *, uint64_t))(v42 + 8))(v45, v46);
  uint64_t v48 = v75;
  sub_1000FB450(v39, v41, v75);
  uint64_t v49 = swift_allocObject();
  sub_1000FB57C(v41, v49 + v34, v35);
  uint64_t v50 = v77;
  uint64_t v51 = v68;
  sub_100008DD4(v77, v68, &qword_1002023F8);
  uint64_t v52 = (uint64_t (**)())(v51 + *(int *)(v71 + 44));
  *uint64_t v52 = sub_1000FAE30;
  v52[1] = (uint64_t (*)())v49;
  v52[2] = 0;
  v52[3] = 0;
  sub_10002784C(v50, &qword_1002023F8);
  sub_1000FB450(v78, v41, v48);
  uint64_t v53 = swift_allocObject();
  sub_1000FB57C(v41, v53 + v34, v35);
  uint64_t v54 = v72;
  sub_100008DD4(v51, v72, &qword_100202400);
  uint64_t v55 = (void *)(v54 + *(int *)(sub_1000063C0((uint64_t *)&unk_100202420) + 36));
  *uint64_t v55 = 0;
  v55[1] = 0;
  v55[2] = sub_1000FAE4C;
  v55[3] = v53;
  return sub_10002784C(v51, &qword_100202400);
}

uint64_t sub_1000F9040(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NavigationPath();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for PreferredContentSizeModifier(0);
  uint64_t v7 = (uint64_t *)(a1 + *(int *)(v6 + 44));
  uint64_t v8 = *v7;
  char v9 = *((unsigned char *)v7 + 8);
  uint64_t v10 = v7[2];
  uint64_t v18 = v8;
  LOBYTE(v19) = v9;
  uint64_t v20 = v10;
  sub_1000063C0((uint64_t *)&unk_100202430);
  uint64_t result = State.wrappedValue.getter();
  if ((v22 & 1) == 0)
  {
    uint64_t v12 = v21;
    sub_1000063C0(&qword_1001FB438);
    Binding.wrappedValue.getter();
    uint64_t v13 = NavigationPath.count.getter();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    if (v13 < v12)
    {
      uint64_t v14 = (char *)(a1 + *(int *)(v6 + 48));
      char v15 = *v14;
      uint64_t v16 = *((void *)v14 + 1);
      LOBYTE(v18) = v15;
      uint64_t v19 = v16;
      LOBYTE(v21) = 1;
      sub_1000063C0(&qword_1001FB5A8);
      return State.wrappedValue.setter();
    }
  }
  return result;
}

uint64_t sub_1000F91CC()
{
  type metadata accessor for PreferredContentSizeModifier(0);
  sub_1000063C0(&qword_1001FB5A8);
  uint64_t result = State.wrappedValue.getter();
  if (v2 == 1)
  {
    uint64_t result = swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      uint64_t v1 = (void *)result;
      sub_1000063C0(&qword_100201898);
      Binding.wrappedValue.getter();
      [v1 setFeedbackHiddenDetentEnabled:v2];
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1000F92A0@<X0>(void *a1@<X8>)
{
  uint64_t result = GeometryProxy.size.getter();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

void *sub_1000F92CC(double *a1, uint64_t a2)
{
  uint64_t v4 = (int *)type metadata accessor for PreferredContentSizeModifier(0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v7 = *a1;
  double v8 = a1[1];
  if (*(unsigned char *)(a2 + 8) == 1)
  {
    id v9 = [self currentTraitCollection];
    id v10 = [v9 userInterfaceIdiom];

    double v11 = 44.0;
    if (v10 == (id)6) {
      double v11 = 92.0;
    }
    if (v10 == (id)1) {
      double v11 = 50.0;
    }
    double v8 = v8 + v11;
  }
  uint64_t v12 = a2 + v4[9];
  uint64_t v13 = *(void *)(v12 + 16);
  long long v23 = *(_OWORD *)v12;
  uint64_t v24 = v13;
  *(double *)char v22 = v7;
  *(double *)&v22[1] = v8;
  sub_1000063C0(&qword_100202440);
  State.wrappedValue.setter();
  uint64_t v14 = a2 + v4[10];
  char v15 = *(unsigned char *)v14;
  uint64_t v16 = *(void *)(v14 + 8);
  LOBYTE(v23) = v15;
  *((void *)&v23 + 1) = v16;
  sub_1000063C0(&qword_1001FB5A8);
  State.wrappedValue.getter();
  int v17 = LOBYTE(v22[0]);
  sub_1000FB450(a2, (uint64_t)v6, type metadata accessor for PreferredContentSizeModifier);
  if (v17 != 1) {
    return (void *)sub_1000FB4B8((uint64_t)v6, type metadata accessor for PreferredContentSizeModifier);
  }
  uint64_t v18 = &v6[v4[12]];
  char v19 = *v18;
  uint64_t v20 = *((void *)v18 + 1);
  LOBYTE(v23) = v19;
  *((void *)&v23 + 1) = v20;
  State.wrappedValue.getter();
  uint64_t result = (void *)sub_1000FB4B8((uint64_t)v6, type metadata accessor for PreferredContentSizeModifier);
  if ((v22[0] & 1) == 0)
  {
    uint64_t result = (void *)swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      [result preferredContentSizeChanged:v7, v8];
      return (void *)swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1000F94FC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v59 = *(void *)(v2 - 8);
  uint64_t v60 = v2;
  __chkstk_darwin(v2);
  uint64_t v57 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = type metadata accessor for DispatchQoS();
  uint64_t v56 = *(void *)(v58 - 8);
  __chkstk_darwin(v58);
  uint64_t v55 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for PreferredContentSizeModifier(0);
  uint64_t v49 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v50 = v6;
  uint64_t v51 = (uint64_t)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = type metadata accessor for DispatchTimeInterval();
  uint64_t v47 = *(void *)(v48 - 8);
  __chkstk_darwin(v48);
  uint64_t v46 = (uint64_t *)((char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = type metadata accessor for DispatchTime();
  uint64_t v53 = *(void *)(v8 - 8);
  uint64_t v54 = v8;
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v45 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v52 = (char *)&v44 - v11;
  uint64_t v61 = type metadata accessor for NavigationPath();
  uint64_t v12 = *(void *)(v61 - 8);
  uint64_t v13 = __chkstk_darwin(v61);
  char v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  int v17 = (char *)&v44 - v16;
  uint64_t v18 = *(int *)(v5 + 44);
  uint64_t v62 = a1;
  uint64_t v19 = a1 + v18;
  uint64_t v20 = *(void ***)(a1 + v18);
  char v21 = *(unsigned char *)(a1 + v18 + 8);
  char v22 = *(uint64_t (**)(uint64_t))(v19 + 16);
  aBlock = v20;
  LOBYTE(v64) = v21;
  uint64_t v65 = v22;
  sub_1000063C0((uint64_t *)&unk_100202430);
  State.wrappedValue.getter();
  if (v70 == 1)
  {
    sub_1000063C0(&qword_1001FB438);
    Binding.wrappedValue.getter();
    uint64_t v23 = NavigationPath.count.getter();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v61);
    uint64_t v20 = *(void ***)v19;
    char v21 = *(unsigned char *)(v19 + 8);
    char v22 = *(uint64_t (**)(uint64_t))(v19 + 16);
    aBlock = *(void ***)v19;
    LOBYTE(v64) = v21;
    uint64_t v65 = v22;
    uint64_t v69 = v23;
    char v70 = 0;
    State.wrappedValue.setter();
  }
  aBlock = v20;
  LOBYTE(v64) = v21;
  uint64_t v65 = v22;
  State.wrappedValue.getter();
  uint64_t v24 = v69;
  char v25 = v70;
  uint64_t v26 = v62;
  sub_1000063C0(&qword_1001FB438);
  Binding.wrappedValue.getter();
  uint64_t v27 = NavigationPath.count.getter();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, v61);
  if ((v25 & 1) == 0 && v24 == v27)
  {
    sub_1000085FC(0, (unint64_t *)&qword_1001FF440);
    uint64_t v61 = static OS_dispatch_queue.main.getter();
    uint64_t v29 = v45;
    static DispatchTime.now()();
    uint64_t v30 = v46;
    *uint64_t v46 = 200;
    uint64_t v31 = v47;
    uint64_t v32 = v48;
    (*(void (**)(void *, void, uint64_t))(v47 + 104))(v30, enum case for DispatchTimeInterval.milliseconds(_:), v48);
    uint64_t v33 = v52;
    + infix(_:_:)();
    (*(void (**)(void *, uint64_t))(v31 + 8))(v30, v32);
    uint64_t v34 = v54;
    uint64_t v35 = *(void (**)(char *, uint64_t))(v53 + 8);
    v35(v29, v54);
    uint64_t v36 = v51;
    sub_1000FB450(v26, v51, type metadata accessor for PreferredContentSizeModifier);
    unint64_t v37 = (*(unsigned __int8 *)(v49 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
    uint64_t v38 = swift_allocObject();
    sub_1000FB57C(v36, v38 + v37, type metadata accessor for PreferredContentSizeModifier);
    uint64_t v67 = sub_1000FAE68;
    uint64_t v68 = v38;
    aBlock = _NSConcreteStackBlock;
    uint64_t v64 = 1107296256;
    uint64_t v65 = sub_100048B2C;
    uint64_t v66 = &unk_1001EE2C8;
    uint64_t v39 = _Block_copy(&aBlock);
    swift_release();
    uint64_t v40 = v55;
    static DispatchQoS.unspecified.getter();
    aBlock = (void **)_swiftEmptyArrayStorage;
    sub_1000FAE98((unint64_t *)&unk_1001FD330, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000063C0((uint64_t *)&unk_100201550);
    sub_100027F2C(&qword_1001FD340, (uint64_t *)&unk_100201550);
    uint64_t v41 = v57;
    uint64_t v42 = v60;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    uint64_t v43 = (void *)v61;
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
    _Block_release(v39);

    (*(void (**)(char *, uint64_t))(v59 + 8))(v41, v42);
    (*(void (**)(char *, uint64_t))(v56 + 8))(v40, v58);
    return ((uint64_t (*)(char *, uint64_t))v35)(v33, v34);
  }
  return result;
}

uint64_t sub_1000F9C70(uint64_t a1)
{
  uint64_t v2 = (int *)type metadata accessor for PreferredContentSizeModifier(0);
  uint64_t v3 = (char *)(a1 + v2[10]);
  char v4 = *v3;
  uint64_t v5 = *((void *)v3 + 1);
  LOBYTE(v20) = v4;
  *((void *)&v20 + 1) = v5;
  LOBYTE(v18) = 1;
  sub_1000063C0(&qword_1001FB5A8);
  State.wrappedValue.setter();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    [Strong enableSmallDetent:*(unsigned __int8 *)(a1 + 9)];
    swift_unknownObjectRelease();
  }
  uint64_t v7 = type metadata accessor for FeedbackFeatureFlags();
  uint64_t v22 = v7;
  uint64_t v23 = sub_1000FAE98((unint64_t *)&unk_1001FDED0, (void (*)(uint64_t))&type metadata accessor for FeedbackFeatureFlags);
  uint64_t v8 = sub_10002E148((uint64_t *)&v20);
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v7 - 8) + 104))(v8, enum case for FeedbackFeatureFlags.CentralizedFeedback(_:), v7);
  LOBYTE(v7) = isFeatureEnabled(_:)();
  sub_100027DBC((uint64_t)&v20);
  if (v7)
  {
    uint64_t v9 = (void *)swift_unknownObjectWeakLoadStrong();
    if (v9)
    {
      uint64_t v10 = v9;
      if ([v9 respondsToSelector:"setFeedbackHiddenDetentEnabled:"])
      {
        uint64_t v11 = (uint64_t *)(a1 + v2[8]);
        uint64_t v12 = *v11;
        uint64_t v13 = v11[1];
        LOBYTE(v11) = *((unsigned char *)v11 + 16);
        *(void *)&long long v20 = v12;
        *((void *)&v20 + 1) = v13;
        LOBYTE(v21) = (_BYTE)v11;
        sub_1000063C0(&qword_100201898);
        Binding.wrappedValue.getter();
        [v10 setFeedbackHiddenDetentEnabled:1];
      }
      swift_unknownObjectRelease();
    }
  }
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    char v15 = (void *)result;
    uint64_t v16 = (long long *)(a1 + v2[9]);
    uint64_t v17 = *((void *)v16 + 2);
    long long v20 = *v16;
    uint64_t v21 = v17;
    sub_1000063C0(&qword_100202440);
    State.wrappedValue.getter();
    [v15 preferredContentSizeChanged:v18, v19];
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1000F9E84()
{
  return State.wrappedValue.setter();
}

uint64_t sub_1000F9EF0@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4 = sub_1000063C0(&qword_1002023C0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v15 - v9;
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v11((char *)&v15 - v9, a1, v4);
  v11(v8, (uint64_t)v10, v4);
  v11(a2, (uint64_t)v8, v4);
  uint64_t v12 = &a2[*(int *)(sub_1000063C0(&qword_1002023C8) + 48)];
  *(void *)uint64_t v12 = 0;
  v12[8] = 1;
  *((void *)v12 + 2) = 0x3FF0000000000000;
  uint64_t v13 = *(void (**)(char *, uint64_t))(v5 + 8);
  v13(v10, v4);
  return ((uint64_t (*)(char *, uint64_t))v13)(v8, v4);
}

uint64_t sub_1000FA070@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000FA0A4(a1, (uint64_t (*)(void))&static HorizontalAlignment.center.getter, &qword_1002023B8, (uint64_t (*)(uint64_t))sub_1000F9EF0, a2);
}

uint64_t sub_1000FA0A4@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X3>, uint64_t *a3@<X4>, uint64_t (*a4)(uint64_t)@<X5>, uint64_t a5@<X8>)
{
  *(void *)a5 = a2();
  *(void *)(a5 + 8) = 0;
  *(unsigned char *)(a5 + 16) = 1;
  sub_1000063C0(a3);
  return a4(a1);
}

uint64_t sub_1000FA108@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v58 = a1;
  uint64_t v66 = a2;
  uint64_t v2 = sub_1000063C0(&qword_100202B90);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v57 - v7;
  uint64_t v60 = sub_1000063C0(&qword_100202B98);
  __chkstk_darwin(v60);
  uint64_t v10 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000063C0(&qword_100202BA0);
  uint64_t v63 = *(void *)(v11 - 8);
  uint64_t v64 = v11;
  __chkstk_darwin(v11);
  uint64_t v57 = (char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = sub_1000063C0(&qword_100202BA8);
  __chkstk_darwin(v59);
  uint64_t v14 = (char *)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_1000063C0(&qword_100202BB0);
  __chkstk_darwin(v61);
  uint64_t v16 = (char *)&v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_1000063C0(&qword_100202BB8);
  __chkstk_darwin(v62);
  uint64_t v65 = (uint64_t)&v57 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v10 = static VerticalAlignment.center.getter();
  *((void *)v10 + 1) = 0;
  v10[16] = 1;
  double v18 = &v10[*(int *)(sub_1000063C0(&qword_100202BC0) + 44)];
  double v19 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v19(v8, v58, v2);
  v19(v6, (uint64_t)v8, v2);
  v19(v18, (uint64_t)v6, v2);
  long long v20 = &v18[*(int *)(sub_1000063C0(&qword_100202BC8) + 48)];
  uint64_t v21 = v57;
  *(void *)long long v20 = 0;
  v20[8] = 1;
  uint64_t v22 = *(void (**)(char *, uint64_t))(v3 + 8);
  v22(v8, v2);
  v22(v6, v2);
  static Font.Weight.semibold.getter();
  sub_100027F2C(&qword_100202BD0, &qword_100202B98);
  View.fontWeight(_:)();
  sub_10002784C((uint64_t)v10, &qword_100202B98);
  if (qword_1001FAD30 != -1) {
    swift_once();
  }
  uint64_t v23 = qword_1002129D8;
  uint64_t v25 = v63;
  uint64_t v24 = v64;
  (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v14, v21, v64);
  *(void *)&v14[*(int *)(v59 + 36)] = v23;
  uint64_t v26 = *(void (**)(char *, uint64_t))(v25 + 8);
  swift_retain();
  v26(v21, v24);
  LOBYTE(v23) = static Edge.Set.leading.getter();
  EdgeInsets.init(_all:)();
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  sub_100008DD4((uint64_t)v14, (uint64_t)v16, &qword_100202BA8);
  uint64_t v35 = &v16[*(int *)(v61 + 36)];
  *uint64_t v35 = v23;
  *((void *)v35 + 1) = v28;
  *((void *)v35 + 2) = v30;
  *((void *)v35 + 3) = v32;
  *((void *)v35 + 4) = v34;
  v35[40] = 0;
  sub_10002784C((uint64_t)v14, &qword_100202BA8);
  LOBYTE(v23) = static Edge.Set.top.getter();
  EdgeInsets.init(_all:)();
  uint64_t v37 = v36;
  uint64_t v39 = v38;
  uint64_t v41 = v40;
  uint64_t v43 = v42;
  uint64_t v44 = v65;
  sub_100008DD4((uint64_t)v16, v65, &qword_100202BB0);
  uint64_t v45 = v44 + *(int *)(v62 + 36);
  *(unsigned char *)uint64_t v45 = v23;
  *(void *)(v45 + 8) = v37;
  *(void *)(v45 + 16) = v39;
  *(void *)(v45 + 24) = v41;
  *(void *)(v45 + 32) = v43;
  *(unsigned char *)(v45 + 40) = 0;
  sub_10002784C((uint64_t)v16, &qword_100202BB0);
  LOBYTE(v23) = static Edge.Set.bottom.getter();
  EdgeInsets.init(_all:)();
  uint64_t v47 = v46;
  uint64_t v49 = v48;
  uint64_t v51 = v50;
  uint64_t v53 = v52;
  uint64_t v54 = v66;
  sub_100008DD4(v44, v66, &qword_100202BB8);
  uint64_t v55 = v54 + *(int *)(sub_1000063C0(&qword_100202BD8) + 36);
  *(unsigned char *)uint64_t v55 = v23;
  *(void *)(v55 + 8) = v47;
  *(void *)(v55 + 16) = v49;
  *(void *)(v55 + 24) = v51;
  *(void *)(v55 + 32) = v53;
  *(unsigned char *)(v55 + 40) = 0;
  return sub_10002784C(v44, &qword_100202BB8);
}

uint64_t sub_1000FA698@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v25 = a1;
  uint64_t v4 = type metadata accessor for ColorScheme();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v22 - v9;
  uint64_t v11 = type metadata accessor for BlendMode();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_1000063C0(&qword_1002029B8);
  __chkstk_darwin(v24);
  uint64_t v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*v2 == 1)
  {
    (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, enum case for BlendMode.normal(_:), v11);
  }
  else
  {
    uint64_t v23 = a2;
    type metadata accessor for CommonUIBlendModifier(0);
    sub_100020A84((uint64_t)v10);
    (*(void (**)(char *, void, uint64_t))(v5 + 104))(v8, enum case for ColorScheme.dark(_:), v4);
    char v17 = static ColorScheme.== infix(_:_:)();
    double v18 = *(void (**)(char *, uint64_t))(v5 + 8);
    v18(v8, v4);
    v18(v10, v4);
    if (v17) {
      double v19 = (unsigned int *)&enum case for BlendMode.plusLighter(_:);
    }
    else {
      double v19 = (unsigned int *)&enum case for BlendMode.plusDarker(_:);
    }
    (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, *v19, v11);
    a2 = v23;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(&v16[*(int *)(v24 + 36)], v14, v11);
  uint64_t v20 = sub_1000063C0(&qword_1002029C0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v16, v25, v20);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  return sub_100026FD0((uint64_t)v16, a2, &qword_1002029B8);
}

uint64_t sub_1000FA9D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000FA9E8(a1, &qword_100202988, a2);
}

uint64_t sub_1000FA9DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000FA9E8(a1, &qword_100202558, a2);
}

uint64_t sub_1000FA9E8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v5 = sub_1000063C0(a2);
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a3, a1, v5);
}

uint64_t sub_1000FAA54()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000FAA70()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000FAA8C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000FAAA8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000FAAC4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000FAAE0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000FAB00()
{
  return sub_1000FAD44(sub_1000F9040);
}

unint64_t sub_1000FAB18()
{
  unint64_t result = qword_100202410;
  if (!qword_100202410)
  {
    sub_100006C14(&qword_1002023E0);
    sub_100027F2C(&qword_100202418, &qword_100202408);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100202410);
  }
  return result;
}

uint64_t sub_1000FABBC()
{
  uint64_t v1 = (int *)(type metadata accessor for PreferredContentSizeModifier(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;
  swift_unknownObjectWeakDestroy();
  uint64_t v7 = v6 + v1[9];
  swift_release();
  swift_release();
  uint64_t v8 = v7 + *(int *)(sub_1000063C0(&qword_1001FB438) + 32);
  uint64_t v9 = type metadata accessor for NavigationPath();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_1000FAD2C()
{
  return sub_1000FAD44((uint64_t (*)(uint64_t))sub_1000F91CC);
}

uint64_t sub_1000FAD44(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for PreferredContentSizeModifier(0) - 8);
  uint64_t v3 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return a1(v3);
}

void *sub_1000FADBC(double *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for PreferredContentSizeModifier(0) - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_1000F92CC(a1, v4);
}

uint64_t sub_1000FAE30()
{
  return sub_1000FAD44(sub_1000F94FC);
}

uint64_t sub_1000FAE4C()
{
  return sub_1000FAD44((uint64_t (*)(uint64_t))sub_1000F9E84);
}

uint64_t sub_1000FAE68()
{
  return sub_1000FAD44(sub_1000F9C70);
}

uint64_t sub_1000FAE80(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000FAE90()
{
  return swift_release();
}

uint64_t sub_1000FAE98(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000FAEE0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.foregroundColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1000FAF0C()
{
  return EnvironmentValues.foregroundColor.setter();
}

uint64_t sub_1000FAF38()
{
  return EnvironmentValues.imageScale.getter();
}

uint64_t sub_1000FAF5C()
{
  return EnvironmentValues.imageScale.getter();
}

uint64_t sub_1000FAF80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000FAFAC(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for Image.Scale, (uint64_t (*)(char *))&EnvironmentValues.imageScale.setter);
}

uint64_t sub_1000FAFAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t (*a6)(char *))
{
  a5(0);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v12 - v8;
  (*(void (**)(char *, uint64_t))(v10 + 16))((char *)&v12 - v8, a1);
  return a6(v9);
}

uint64_t sub_1000FB07C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000FAFAC(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for Image.Scale, (uint64_t (*)(char *))&EnvironmentValues.imageScale.setter);
}

unint64_t sub_1000FB0BC()
{
  unint64_t result = qword_100202480;
  if (!qword_100202480)
  {
    sub_100006C14(&qword_100202478);
    sub_1000FB188(&qword_100202488, &qword_100202490, (void (*)(void))sub_1000FB204);
    sub_100027F2C(&qword_100202500, &qword_100202508);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100202480);
  }
  return result;
}

uint64_t sub_1000FB188(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100006C14(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000FB204()
{
  unint64_t result = qword_100202498;
  if (!qword_100202498)
  {
    sub_100006C14(&qword_1002024A0);
    sub_1000FB2A4();
    sub_100027F2C(&qword_1002024F0, &qword_1002024F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100202498);
  }
  return result;
}

unint64_t sub_1000FB2A4()
{
  unint64_t result = qword_1002024A8;
  if (!qword_1002024A8)
  {
    sub_100006C14(&qword_1002024B0);
    sub_1000FB344();
    sub_100027F2C((unint64_t *)&unk_1002024E0, &qword_1001FC9D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002024A8);
  }
  return result;
}

unint64_t sub_1000FB344()
{
  unint64_t result = qword_1002024B8;
  if (!qword_1002024B8)
  {
    sub_100006C14(&qword_1002024C0);
    sub_1000FE54C(&qword_1002024C8, (uint64_t *)&unk_1002024D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002024B8);
  }
  return result;
}

uint64_t type metadata accessor for CommonUIBlendModifier(uint64_t a1)
{
  return sub_10005AFA8(a1, qword_1002027B8);
}

uint64_t sub_1000FB3F8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.foregroundColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1000FB424()
{
  return EnvironmentValues.foregroundColor.setter();
}

uint64_t sub_1000FB450(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000FB4B8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1000FB518()
{
  return EnvironmentValues.colorScheme.getter();
}

uint64_t sub_1000FB53C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000FAFAC(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for ColorScheme, (uint64_t (*)(char *))&EnvironmentValues.colorScheme.setter);
}

uint64_t sub_1000FB57C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000FB5E4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = EnvironmentValues.isEnabled.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1000FB614()
{
  return EnvironmentValues.isEnabled.setter();
}

unint64_t sub_1000FB644()
{
  unint64_t result = qword_1002025C8;
  if (!qword_1002025C8)
  {
    sub_100006C14(&qword_1002025A0);
    sub_1000FAE98(&qword_100202100, (void (*)(uint64_t))&type metadata accessor for ButtonStyleConfiguration.Label);
    sub_100027F2C((unint64_t *)&unk_1002025D0, &qword_1001FDAC0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002025C8);
  }
  return result;
}

unint64_t sub_1000FB71C()
{
  unint64_t result = qword_100202610;
  if (!qword_100202610)
  {
    sub_100006C14(&qword_1002025F0);
    sub_1000FB7BC();
    sub_100027F2C((unint64_t *)&unk_1002025D0, &qword_1001FDAC0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100202610);
  }
  return result;
}

unint64_t sub_1000FB7BC()
{
  unint64_t result = qword_100202618;
  if (!qword_100202618)
  {
    sub_100006C14(&qword_1002025E8);
    sub_100027F2C(&qword_100202620, &qword_100202608);
    sub_100027F2C(&qword_1001FBB78, &qword_1001FBB80);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100202618);
  }
  return result;
}

unint64_t sub_1000FB880()
{
  unint64_t result = qword_100202628;
  if (!qword_100202628)
  {
    sub_100006C14(&qword_100202600);
    sub_100006C14(&qword_1002025F0);
    sub_1000FB71C();
    swift_getOpaqueTypeConformance2();
    sub_100027F2C((unint64_t *)&unk_1001FD920, &qword_100201E60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100202628);
  }
  return result;
}

uint64_t sub_1000FB96C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000FB980);
}

uint64_t sub_1000FB984(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000FB998);
}

uint64_t type metadata accessor for SmallIconTitleLabelStyle(uint64_t a1)
{
  return sub_10005AFA8(a1, qword_100202690);
}

void sub_1000FB9BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_1000FB9E4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1000FBA48(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[2];
    *(void *)(a1 + 8) = a2[1];
    *(void *)(a1 + 16) = v6;
    *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
    uint64_t v7 = *(int *)(a3 + 20);
    unint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (uint64_t *)((char *)a2 + v7);
    swift_retain();
    swift_retain();
    sub_1000063C0((uint64_t *)&unk_1001FAE30);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      *unint64_t v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1000FBB78(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  sub_1000063C0((uint64_t *)&unk_1001FAE30);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for DynamicTypeSize();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(v4, v5);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_1000FBC38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (void *)(a1 + v5);
  uint64_t v7 = (void *)(a2 + v5);
  swift_retain();
  swift_retain();
  sub_1000063C0((uint64_t *)&unk_1001FAE30);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  else
  {
    *uint64_t v6 = *v7;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1000FBD18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  uint64_t v6 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v6;
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (void *)(a2 + v7);
    sub_10002784C(a1 + v7, (uint64_t *)&unk_1001FAE30);
    sub_1000063C0((uint64_t *)&unk_1001FAE30);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      *uint64_t v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_1000FBE34(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  *(_OWORD *)((char *)a1 + 9) = *(_OWORD *)((char *)a2 + 9);
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1000063C0((uint64_t *)&unk_1001FAE30);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(v5, v6, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1000FBF10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (void *)(a1 + v6);
    uint64_t v8 = (const void *)(a2 + v6);
    sub_10002784C(a1 + v6, (uint64_t *)&unk_1001FAE30);
    uint64_t v9 = sub_1000063C0((uint64_t *)&unk_1001FAE30);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1000FC02C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000FC040);
}

uint64_t sub_1000FC044(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1000063C0(&qword_1001FD3A0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1000FC0F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000FC10C);
}

uint64_t sub_1000FC110(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1000063C0(&qword_1001FD3A0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for IconTitleLabelStyle(uint64_t a1)
{
  return sub_10005AFA8(a1, qword_100202728);
}

void sub_1000FC1DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t *a5, uint64_t (*a6)(uint64_t))
{
  sub_1000FB9E4(319, a5, a6, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v6 <= 0x3F) {
    swift_initStructMetadata();
  }
}

ValueMetadata *type metadata accessor for LargeButtonHeightModifier()
{
  return &type metadata for LargeButtonHeightModifier;
}

ValueMetadata *type metadata accessor for LargeButtonLabelViewModifier()
{
  return &type metadata for LargeButtonLabelViewModifier;
}

uint64_t *sub_1000FC2A8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v5 = *(int *)(a3 + 20);
    unint64_t v6 = (uint64_t *)((char *)a1 + v5);
    uint64_t v7 = (uint64_t *)((char *)a2 + v5);
    sub_1000063C0((uint64_t *)&unk_1001FB730);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v8 = type metadata accessor for ColorScheme();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
    }
    else
    {
      *unint64_t v6 = *v7;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v3;
}

uint64_t sub_1000FC3C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  sub_1000063C0((uint64_t *)&unk_1001FB730);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v3 = type metadata accessor for ColorScheme();
    int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(v2, v3);
  }
  else
  {
    return swift_release();
  }
}

unsigned char *sub_1000FC46C(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = &a1[v4];
  unint64_t v6 = &a2[v4];
  sub_1000063C0((uint64_t *)&unk_1001FB730);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for ColorScheme();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  }
  else
  {
    *uint64_t v5 = *v6;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

unsigned char *sub_1000FC530(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  if (a1 != a2)
  {
    uint64_t v4 = *(int *)(a3 + 20);
    uint64_t v5 = &a1[v4];
    unint64_t v6 = &a2[v4];
    sub_10002784C((uint64_t)&a1[v4], (uint64_t *)&unk_1001FB730);
    sub_1000063C0((uint64_t *)&unk_1001FB730);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for ColorScheme();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
    }
    else
    {
      *uint64_t v5 = *v6;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

unsigned char *sub_1000FC60C(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = &a1[v4];
  unint64_t v6 = &a2[v4];
  uint64_t v7 = sub_1000063C0((uint64_t *)&unk_1001FB730);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = type metadata accessor for ColorScheme();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v8 - 8) + 32))(v5, v6, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
  }
  return a1;
}

unsigned char *sub_1000FC6E0(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  if (a1 != a2)
  {
    uint64_t v4 = *(int *)(a3 + 20);
    uint64_t v5 = &a1[v4];
    unint64_t v6 = &a2[v4];
    sub_10002784C((uint64_t)&a1[v4], (uint64_t *)&unk_1001FB730);
    uint64_t v7 = sub_1000063C0((uint64_t *)&unk_1001FB730);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v8 = type metadata accessor for ColorScheme();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v8 - 8) + 32))(v5, v6, v8);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1000FC7CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000FC7E0);
}

uint64_t sub_1000FC7E0(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *a1;
    BOOL v5 = v4 >= 2;
    int v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5) {
      return (v6 + 1);
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v10 = sub_1000063C0(&qword_100202120);
    uint64_t v11 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = &a1[*(int *)(a3 + 20)];
    return v11(v13, a2, v12);
  }
}

uint64_t sub_1000FC894(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000FC8A8);
}

unsigned char *sub_1000FC8A8(unsigned char *result, uint64_t a2, int a3, uint64_t a4)
{
  BOOL v5 = result;
  if (a3 == 254)
  {
    *unint64_t result = a2 + 1;
  }
  else
  {
    uint64_t v7 = sub_1000063C0(&qword_100202120);
    uint64_t v8 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = &v5[*(int *)(a4 + 20)];
    return (unsigned char *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1000FC950(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_1000FC978()
{
  return sub_100027F2C(&qword_1002027F0, &qword_1002027F8);
}

unint64_t sub_1000FC9B8()
{
  unint64_t result = qword_100202800;
  if (!qword_100202800)
  {
    sub_100006C14(&qword_1002023D8);
    sub_100027F2C(&qword_100202808, &qword_1002023D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100202800);
  }
  return result;
}

uint64_t sub_1000FCA58()
{
  return sub_1000FB188(&qword_100202810, (uint64_t *)&unk_100202420, (void (*)(void))sub_1000FCA9C);
}

uint64_t sub_1000FCA9C()
{
  return sub_1000FB188(&qword_100202818, &qword_100202400, (void (*)(void))sub_1000FCACC);
}

unint64_t sub_1000FCACC()
{
  unint64_t result = qword_100202820;
  if (!qword_100202820)
  {
    sub_100006C14(&qword_1002023F8);
    sub_100006C14(&qword_1002023E8);
    sub_100006C14(&qword_1002023E0);
    type metadata accessor for NavigationPath();
    sub_1000FAB18();
    sub_1000FAE98(&qword_1001FB600, (void (*)(uint64_t))&type metadata accessor for NavigationPath);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_100027F2C(&qword_100202828, &qword_100202830);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100202820);
  }
  return result;
}

uint64_t sub_1000FCC34()
{
  return sub_100027F2C(&qword_100202838, &qword_100202840);
}

unint64_t sub_1000FCC74()
{
  unint64_t result = qword_100202848;
  if (!qword_100202848)
  {
    sub_100006C14(&qword_100202850);
    sub_1000FB0BC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100202848);
  }
  return result;
}

unint64_t sub_1000FCCEC()
{
  unint64_t result = qword_100202858;
  if (!qword_100202858)
  {
    sub_100006C14(&qword_100202548);
    sub_1000FB188(&qword_100202860, &qword_100202540, (void (*)(void))sub_1000FCDB8);
    sub_100027F2C(&qword_100202500, &qword_100202508);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100202858);
  }
  return result;
}

unint64_t sub_1000FCDB8()
{
  unint64_t result = qword_100202868;
  if (!qword_100202868)
  {
    sub_100006C14(&qword_100202538);
    sub_1000FB344();
    sub_100027F2C(&qword_100202870, &qword_100202550);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100202868);
  }
  return result;
}

uint64_t sub_1000FCE58()
{
  return sub_100027F2C(&qword_100202878, &qword_100202558);
}

unint64_t sub_1000FCE98()
{
  unint64_t result = qword_100202880;
  if (!qword_100202880)
  {
    sub_100006C14(&qword_100202888);
    sub_100006C14(&qword_100202568);
    sub_100006C14(&qword_100202578);
    type metadata accessor for PrimaryButtonStyle(255);
    sub_100027F2C((unint64_t *)&unk_100202580, &qword_100202578);
    sub_1000FAE98(&qword_1001FC888, (void (*)(uint64_t))type metadata accessor for PrimaryButtonStyle);
    swift_getOpaqueTypeConformance2();
    sub_10003FEF8();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100202880);
  }
  return result;
}

unint64_t sub_1000FD008()
{
  unint64_t result = qword_100202890;
  if (!qword_100202890)
  {
    sub_100006C14(&qword_1002025C0);
    sub_1000FB188(&qword_100202898, &qword_1002025B8, (void (*)(void))sub_1000FD0D4);
    sub_100027F2C(&qword_1002028A8, &qword_1002025E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100202890);
  }
  return result;
}

unint64_t sub_1000FD0D4()
{
  unint64_t result = qword_1002028A0;
  if (!qword_1002028A0)
  {
    sub_100006C14(&qword_1002025B0);
    sub_100006C14(&qword_1002025A0);
    sub_1000FB644();
    swift_getOpaqueTypeConformance2();
    sub_100027F2C((unint64_t *)&unk_1001FD920, &qword_100201E60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002028A0);
  }
  return result;
}

unint64_t sub_1000FD1AC()
{
  unint64_t result = qword_1002028B0;
  if (!qword_1002028B0)
  {
    sub_100006C14((uint64_t *)&unk_1002028B8);
    sub_1000FB880();
    sub_1000FAE98(&qword_1001FD8A0, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002028B0);
  }
  return result;
}

uint64_t sub_1000FD258()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000FD274()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000FD290()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000FD2AC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000FD2C8()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1000FD2EC()
{
  unint64_t result = qword_100202938;
  if (!qword_100202938)
  {
    sub_100006C14(&qword_1002028F8);
    sub_1000FB188(&qword_100202940, &qword_1002028F0, (void (*)(void))sub_1000FD3B8);
    sub_100027F2C((unint64_t *)&unk_1002025D0, &qword_1001FDAC0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100202938);
  }
  return result;
}

unint64_t sub_1000FD3B8()
{
  unint64_t result = qword_100202948;
  if (!qword_100202948)
  {
    sub_100006C14(&qword_1002028E8);
    sub_1000FAE98(&qword_100202950, (void (*)(uint64_t))&type metadata accessor for LabelStyleConfiguration.Title);
    sub_100027F2C((unint64_t *)&unk_1001FD920, &qword_100201E60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100202948);
  }
  return result;
}

uint64_t sub_1000FD488@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = EnvironmentValues.lineLimit.getter();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_1000FD4BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = EnvironmentValues.lineLimit.getter();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_1000FD4F0()
{
  return EnvironmentValues.lineLimit.setter();
}

uint64_t sub_1000FD520()
{
  return EnvironmentValues.lineLimit.setter();
}

unint64_t sub_1000FD550()
{
  unint64_t result = qword_100202978;
  if (!qword_100202978)
  {
    sub_100006C14(&qword_1001FBC40);
    sub_100027F2C(&qword_100202980, &qword_100202960);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100202978);
  }
  return result;
}

void *sub_1000FD5F0(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1000063C0((uint64_t *)&unk_1001FB730);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for ColorScheme();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

void *sub_1000FD70C(void *a1, void *a2, uint64_t a3)
{
  sub_1000063C0((uint64_t *)&unk_1001FB730);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for ColorScheme();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  return a1;
}

void *sub_1000FD7D8(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10002784C((uint64_t)a1, (uint64_t *)&unk_1001FB730);
    sub_1000063C0((uint64_t *)&unk_1001FB730);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for ColorScheme();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  return a1;
}

void *sub_1000FD8BC(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1000063C0((uint64_t *)&unk_1001FB730);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for ColorScheme();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  return a1;
}

void *sub_1000FD990(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10002784C((uint64_t)a1, (uint64_t *)&unk_1001FB730);
    uint64_t v6 = sub_1000063C0((uint64_t *)&unk_1001FB730);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for ColorScheme();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1000FDA7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000FDA90);
}

uint64_t sub_1000FDA90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000063C0(&qword_100202120);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 2) {
      return ((v10 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_1000FDB64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000FDB78);
}

uint64_t sub_1000FDB78(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1000063C0(&qword_100202120);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  }
  return result;
}

uint64_t type metadata accessor for InputDashboardQuestionnaireButtonStyle(uint64_t a1)
{
  return sub_10005AFA8(a1, qword_100202A20);
}

void sub_1000FDC58()
{
  sub_1000FB9E4(319, (unint64_t *)&unk_100202190, (uint64_t (*)(uint64_t))&type metadata accessor for ColorScheme, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t storeEnumTagSinglePayload for InputDashboardButtonStyle(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65281 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65281 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 16) + 1;
    *(_WORD *)uint64_t result = a2 - 255;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000FDDE8);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InputDashboardButtonStyle()
{
  return &type metadata for InputDashboardButtonStyle;
}

uint64_t sub_1000FDE20()
{
  return sub_1000FB188(&qword_100202A58, &qword_1002028E0, (void (*)(void))sub_1000FDE64);
}

uint64_t sub_1000FDE64()
{
  return sub_1000FB188(&qword_100202A60, &qword_1002028D8, (void (*)(void))sub_1000FDE94);
}

unint64_t sub_1000FDE94()
{
  unint64_t result = qword_100202A68;
  if (!qword_100202A68)
  {
    sub_100006C14(&qword_1002028D0);
    sub_100027F2C(&qword_100202A70, &qword_1002028C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100202A68);
  }
  return result;
}

unint64_t sub_1000FDF38()
{
  unint64_t result = qword_100202A78;
  if (!qword_100202A78)
  {
    sub_100006C14(&qword_100202A80);
    sub_1000FD550();
    sub_100027F2C(&qword_100202980, &qword_100202960);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100202A78);
  }
  return result;
}

uint64_t sub_1000FDFD8()
{
  return sub_100027F2C(&qword_100202A88, &qword_100202988);
}

uint64_t sub_1000FE014()
{
  return sub_1000FB188(&qword_100202A90, &qword_1002029A8, (void (*)(void))sub_1000FE058);
}

uint64_t sub_1000FE058()
{
  return sub_1000FB188(&qword_100202A98, &qword_1002029A0, (void (*)(void))sub_1000FE088);
}

unint64_t sub_1000FE088()
{
  unint64_t result = qword_100202AA0;
  if (!qword_100202AA0)
  {
    sub_100006C14(&qword_100202998);
    sub_100027F2C(&qword_100202AA8, &qword_100202990);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100202AA0);
  }
  return result;
}

unint64_t sub_1000FE12C()
{
  unint64_t result = qword_100202AB0;
  if (!qword_100202AB0)
  {
    sub_100006C14(&qword_1002029B8);
    sub_100027F2C((unint64_t *)&unk_100202AB8, &qword_1002029C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100202AB0);
  }
  return result;
}

uint64_t sub_1000FE1CC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000FE1E8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000FE20C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1000FE21C()
{
  return _swift_deallocObject(v0, 17, 7);
}

unsigned char *storeEnumTagSinglePayload for PaddedPrimaryButtonStyle(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000FE2F8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PaddedPrimaryButtonStyle()
{
  return &type metadata for PaddedPrimaryButtonStyle;
}

ValueMetadata *type metadata accessor for RefinementsTitleImageLabelStyle()
{
  return &type metadata for RefinementsTitleImageLabelStyle;
}

ValueMetadata *type metadata accessor for SectionTitleModifier()
{
  return &type metadata for SectionTitleModifier;
}

unint64_t sub_1000FE354()
{
  unint64_t result = qword_100202B08;
  if (!qword_100202B08)
  {
    sub_100006C14(&qword_100202AE0);
    sub_1000FE3F4();
    sub_100027F2C((unint64_t *)&unk_1002025D0, &qword_1001FDAC0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100202B08);
  }
  return result;
}

unint64_t sub_1000FE3F4()
{
  unint64_t result = qword_100202B10;
  if (!qword_100202B10)
  {
    sub_100006C14(&qword_100202AD8);
    sub_1000FE494();
    sub_100027F2C(&qword_1001FC6D8, &qword_1001FD760);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100202B10);
  }
  return result;
}

unint64_t sub_1000FE494()
{
  unint64_t result = qword_100202B18;
  if (!qword_100202B18)
  {
    sub_100006C14(&qword_100202AD0);
    sub_1000FE54C(&qword_100202B20, &qword_100202AC8);
    sub_100027F2C((unint64_t *)&unk_1001FD920, &qword_100201E60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100202B18);
  }
  return result;
}

uint64_t sub_1000FE54C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100006C14(a2);
    sub_1000FAE98(&qword_100202100, (void (*)(uint64_t))&type metadata accessor for ButtonStyleConfiguration.Label);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000FE5F4()
{
  unint64_t result = qword_100202B28;
  if (!qword_100202B28)
  {
    sub_100006C14(&qword_100202AF8);
    sub_1000FE694();
    sub_100027F2C(&qword_1001FC6D8, &qword_1001FD760);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100202B28);
  }
  return result;
}

unint64_t sub_1000FE694()
{
  unint64_t result = qword_100202B30;
  if (!qword_100202B30)
  {
    sub_100006C14(&qword_100202AF0);
    sub_1000FE734();
    sub_100027F2C(&qword_100202B50, &qword_100202B00);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100202B30);
  }
  return result;
}

unint64_t sub_1000FE734()
{
  unint64_t result = qword_100202B38;
  if (!qword_100202B38)
  {
    sub_100006C14(&qword_100202AE8);
    sub_1000FE494();
    sub_100027F2C(&qword_100202B40, &qword_100202B48);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100202B38);
  }
  return result;
}

uint64_t sub_1000FE7D4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000FE7F0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000FE80C()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1000FE828()
{
  unint64_t result = qword_100202B80;
  if (!qword_100202B80)
  {
    sub_100006C14(&qword_100202B60);
    sub_1000FB344();
    sub_100027F2C((unint64_t *)&unk_1001FD920, &qword_100201E60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100202B80);
  }
  return result;
}

unint64_t sub_1000FE8CC()
{
  unint64_t result = qword_100202C48;
  if (!qword_100202C48)
  {
    sub_100006C14(&qword_100202B78);
    sub_1000FE96C();
    sub_100027F2C(&qword_100202C58, &qword_100202B88);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100202C48);
  }
  return result;
}

unint64_t sub_1000FE96C()
{
  unint64_t result = qword_100202C50;
  if (!qword_100202C50)
  {
    sub_100006C14(&qword_100202B70);
    sub_100006C14(&qword_100202B60);
    sub_1000FE828();
    swift_getOpaqueTypeConformance2();
    sub_100027F2C(&qword_1001FBB78, &qword_1001FBB80);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100202C50);
  }
  return result;
}

uint64_t sub_1000FEA40()
{
  return sub_1000FB188(&qword_100202C60, &qword_100202BD8, (void (*)(void))sub_1000FEA84);
}

uint64_t sub_1000FEA84()
{
  return sub_1000FB188(&qword_100202C68, &qword_100202BB8, (void (*)(void))sub_1000FEAB4);
}

uint64_t sub_1000FEAB4()
{
  return sub_1000FB188(&qword_100202C70, &qword_100202BB0, (void (*)(void))sub_1000FEAE4);
}

unint64_t sub_1000FEAE4()
{
  unint64_t result = qword_100202C78;
  if (!qword_100202C78)
  {
    sub_100006C14(&qword_100202BA8);
    sub_100006C14(&qword_100202B98);
    sub_100027F2C(&qword_100202BD0, &qword_100202B98);
    swift_getOpaqueTypeConformance2();
    sub_100027F2C((unint64_t *)&unk_1001FD920, &qword_100201E60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100202C78);
  }
  return result;
}

unint64_t sub_1000FEBE8()
{
  unint64_t result = qword_100202C80;
  if (!qword_100202C80)
  {
    sub_100006C14(&qword_100202C30);
    sub_1000FB188(&qword_100202C88, &qword_100202C20, (void (*)(void))sub_1000FECB4);
    sub_100027F2C(&qword_100202CA0, &qword_100202C40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100202C80);
  }
  return result;
}

unint64_t sub_1000FECB4()
{
  unint64_t result = qword_100202C90;
  if (!qword_100202C90)
  {
    sub_100006C14(&qword_1001FBCA0);
    sub_100027F2C(&qword_100202C98, (uint64_t *)&unk_100202C10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100202C90);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for TitleImageLabelStyle(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for TitleImageLabelStyle(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 17) = v3;
  return result;
}

ValueMetadata *type metadata accessor for TitleImageLabelStyle()
{
  return &type metadata for TitleImageLabelStyle;
}

uint64_t sub_1000FEDB0()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1000FEDD0()
{
  unint64_t result = qword_100202CC8;
  if (!qword_100202CC8)
  {
    sub_100006C14(&qword_100202CB0);
    sub_100027F2C((unint64_t *)&unk_100202CD0, &qword_100202CA8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100202CC8);
  }
  return result;
}

uint64_t destroy for CompositionUndoRedoView()
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t initializeWithCopy for CompositionUndoRedoView(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = v5;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for CompositionUndoRedoView(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for CompositionUndoRedoView(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = v5;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for CompositionUndoRedoView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CompositionUndoRedoView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CompositionUndoRedoView()
{
  return &type metadata for CompositionUndoRedoView;
}

uint64_t sub_1000FF134()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000FF150(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for TaskPriority();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(void *)(a3 + 16)) {
      return swift_task_create();
    }
    goto LABEL_3;
  }
  sub_10002784C(a1, &qword_1001FF820);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t sub_1000FF2D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v64 = a2;
  uint64_t v3 = type metadata accessor for PrimaryButtonStyle(0);
  __chkstk_darwin(v3);
  uint64_t v5 = &v53[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v55 = sub_1000063C0(&qword_1001FC850);
  uint64_t v6 = *(void *)(v55 - 8);
  __chkstk_darwin(v55);
  uint64_t v8 = &v53[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_1000063C0(&qword_100202CE8);
  uint64_t v61 = *(void *)(v9 - 8);
  uint64_t v62 = v9;
  __chkstk_darwin(v9);
  uint64_t v56 = &v53[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v58 = sub_1000063C0(&qword_100202CF0);
  uint64_t v11 = __chkstk_darwin(v58);
  uint64_t v63 = &v53[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v57 = &v53[-v14];
  __chkstk_darwin(v13);
  uint64_t v60 = &v53[-v15];
  uint64_t v16 = sub_1000063C0(&qword_100202CF8);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  uint64_t v59 = &v53[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v17);
  uint64_t v20 = &v53[-v19];
  *(void *)uint64_t v20 = static VerticalAlignment.center.getter();
  *((void *)v20 + 1) = 0;
  v20[16] = 1;
  uint64_t v21 = sub_1000063C0(&qword_100202D00);
  sub_1000FFA30((uint64_t *)a1, (uint64_t)&v20[*(int *)(v21 + 44)]);
  int v54 = *(unsigned __int8 *)(a1 + 8);
  uint64_t v22 = *(void *)(a1 + 16);
  long long v66 = *(_OWORD *)(a1 + 32);
  uint64_t v67 = v22;
  uint64_t v23 = (_OWORD *)swift_allocObject();
  long long v24 = *(_OWORD *)(a1 + 16);
  v23[1] = *(_OWORD *)a1;
  v23[2] = v24;
  long long v25 = *(_OWORD *)(a1 + 48);
  v23[3] = *(_OWORD *)(a1 + 32);
  v23[4] = v25;
  swift_retain();
  sub_1001009E4((uint64_t)&v66);
  swift_retain();
  swift_retain();
  sub_10005CF60((uint64_t)&v67);
  sub_1000063C0(&qword_1001FBBC0);
  sub_100027F2C((unint64_t *)&unk_1001FD5A0, &qword_1001FBBC0);
  Button.init(action:label:)();
  if (qword_1001FAD08 != -1) {
    swift_once();
  }
  uint64_t v26 = qword_100212970;
  uint64_t KeyPath = swift_getKeyPath();
  *(_WORD *)uint64_t v5 = 0;
  *((void *)v5 + 1) = v26;
  uint64_t v28 = (uint64_t *)&v5[*(int *)(v3 + 28)];
  *uint64_t v28 = swift_getKeyPath();
  sub_1000063C0((uint64_t *)&unk_1001FB730);
  swift_storeEnumTagMultiPayload();
  uint64_t v29 = &v5[*(int *)(v3 + 32)];
  *(void *)uint64_t v29 = KeyPath;
  v29[8] = 0;
  sub_100027F2C(&qword_1001FC880, &qword_1001FC850);
  sub_100100B1C(&qword_1001FC888, (void (*)(uint64_t))type metadata accessor for PrimaryButtonStyle);
  uint64_t v30 = v55;
  uint64_t v31 = v56;
  View.buttonStyle<A>(_:)();
  sub_100100B64((uint64_t)v5, type metadata accessor for PrimaryButtonStyle);
  (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v30);
  uint64_t v32 = swift_retain();
  char v33 = v54;
  uint64_t v34 = sub_100020F7C(v32, v54);
  swift_release();
  swift_getKeyPath();
  uint64_t v65 = v34;
  sub_100100B1C((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  int v35 = *(unsigned __int8 *)(v34 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__state);
  swift_release();
  if (v35 == 1)
  {
    BOOL v36 = 1;
  }
  else
  {
    uint64_t v37 = swift_retain();
    uint64_t v38 = sub_100020F7C(v37, v33);
    swift_release();
    swift_getKeyPath();
    uint64_t v65 = v38;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    int v39 = *(unsigned __int8 *)(v38 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__state);
    swift_release();
    BOOL v36 = v39 == 2;
  }
  uint64_t v40 = swift_getKeyPath();
  uint64_t v41 = swift_allocObject();
  *(unsigned char *)(v41 + 16) = v36;
  uint64_t v43 = v61;
  uint64_t v42 = v62;
  uint64_t v44 = v57;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v61 + 16))(v57, v31, v62);
  uint64_t v45 = (uint64_t *)&v44[*(int *)(v58 + 36)];
  *uint64_t v45 = v40;
  v45[1] = (uint64_t)sub_100026D50;
  v45[2] = v41;
  (*(void (**)(unsigned char *, uint64_t))(v43 + 8))(v31, v42);
  uint64_t v46 = (uint64_t)v44;
  uint64_t v47 = v60;
  sub_100026FD0(v46, (uint64_t)v60, &qword_100202CF0);
  uint64_t v48 = v59;
  sub_100008DD4((uint64_t)v20, (uint64_t)v59, &qword_100202CF8);
  uint64_t v49 = v63;
  sub_100008DD4((uint64_t)v47, (uint64_t)v63, &qword_100202CF0);
  uint64_t v50 = v64;
  sub_100008DD4((uint64_t)v48, v64, &qword_100202CF8);
  uint64_t v51 = sub_1000063C0(&qword_100202D08);
  sub_100008DD4((uint64_t)v49, v50 + *(int *)(v51 + 48), &qword_100202CF0);
  sub_10002784C((uint64_t)v47, &qword_100202CF0);
  sub_10002784C((uint64_t)v20, &qword_100202CF8);
  sub_10002784C((uint64_t)v49, &qword_100202CF0);
  return sub_10002784C((uint64_t)v48, &qword_100202CF8);
}

uint64_t sub_1000FFA30@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v102 = a2;
  uint64_t v106 = type metadata accessor for UnevenCornerPrimaryButtonStyle(0);
  __chkstk_darwin(v106);
  uint64_t v4 = (_WORD *)((char *)&v77 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v103 = type metadata accessor for IconOnlyLabelStyle();
  uint64_t v112 = *(void *)(v103 - 8);
  __chkstk_darwin(v103);
  uint64_t v6 = (char *)&v77 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000063C0(&qword_100202D10);
  uint64_t v111 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v77 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = sub_1000063C0(&qword_100202D18);
  uint64_t v113 = *(void *)(v105 - 8);
  __chkstk_darwin(v105);
  uint64_t v78 = (char *)&v77 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = sub_1000063C0(&qword_100202D20);
  uint64_t v114 = *(void *)(v107 - 8);
  __chkstk_darwin(v107);
  uint64_t v104 = (char *)&v77 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = sub_1000063C0(&qword_100202D28) - 8;
  uint64_t v12 = __chkstk_darwin(v110);
  uint64_t v101 = (uint64_t)&v77 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v100 = (char *)&v77 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  long long v97 = (char *)&v77 - v17;
  __chkstk_darwin(v16);
  uint64_t v109 = (uint64_t)&v77 - v18;
  uint64_t v83 = *a1;
  int v108 = *((unsigned __int8 *)a1 + 8);
  uint64_t v19 = a1[2];
  uint64_t v99 = a1[3];
  long long v119 = *((_OWORD *)a1 + 2);
  uint64_t v120 = v19;
  uint64_t v98 = a1[7];
  uint64_t v20 = (_OWORD *)swift_allocObject();
  long long v21 = *((_OWORD *)a1 + 1);
  v20[1] = *(_OWORD *)a1;
  uint64_t v20[2] = v21;
  long long v22 = *((_OWORD *)a1 + 3);
  v20[3] = *((_OWORD *)a1 + 2);
  v20[4] = v22;
  swift_retain();
  sub_10005CF60((uint64_t)&v120);
  swift_retain();
  sub_1001009E4((uint64_t)&v119);
  swift_retain();
  uint64_t v96 = sub_1000063C0(&qword_100202D30);
  unint64_t v95 = sub_100100A7C();
  uint64_t v23 = v9;
  uint64_t v90 = v9;
  Button.init(action:label:)();
  long long v24 = v6;
  uint64_t v91 = v6;
  IconOnlyLabelStyle.init()();
  uint64_t v25 = sub_100027F2C(&qword_100202D40, &qword_100202D10);
  uint64_t v26 = sub_100100B1C(&qword_1001FDA20, (void (*)(uint64_t))&type metadata accessor for IconOnlyLabelStyle);
  uint64_t v27 = v7;
  uint64_t v28 = v103;
  uint64_t v29 = v25;
  uint64_t v82 = v25;
  uint64_t v81 = v26;
  View.labelStyle<A>(_:)();
  uint64_t v30 = *(void (**)(char *, uint64_t))(v112 + 8);
  v112 += 8;
  int v94 = v30;
  uint64_t v31 = v28;
  v30(v24, v28);
  uint64_t v32 = *(void (**)(char *, uint64_t))(v111 + 8);
  v111 += 8;
  BOOL v93 = v32;
  uint64_t v80 = v27;
  v32(v23, v27);
  uint64_t KeyPath = swift_getKeyPath();
  *uint64_t v4 = 1;
  uint64_t v34 = v106;
  int v35 = (uint64_t *)((char *)v4 + *(int *)(v106 + 24));
  *int v35 = swift_getKeyPath();
  uint64_t v92 = sub_1000063C0((uint64_t *)&unk_1001FB730);
  swift_storeEnumTagMultiPayload();
  BOOL v36 = (char *)v4 + *(int *)(v34 + 28);
  uint64_t v79 = v4;
  *(void *)BOOL v36 = KeyPath;
  v36[8] = 0;
  uint64_t v115 = v27;
  uint64_t v116 = v31;
  uint64_t v117 = v29;
  uint64_t v118 = v26;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v89 = sub_100100B1C(&qword_1001FC8C0, (void (*)(uint64_t))type metadata accessor for UnevenCornerPrimaryButtonStyle);
  uint64_t v37 = v104;
  uint64_t v38 = v105;
  int v39 = v78;
  View.buttonStyle<A>(_:)();
  uint64_t v87 = type metadata accessor for UnevenCornerPrimaryButtonStyle;
  sub_100100B64((uint64_t)v4, type metadata accessor for UnevenCornerPrimaryButtonStyle);
  uint64_t v40 = *(void (**)(char *, uint64_t))(v113 + 8);
  v113 += 8;
  uint64_t v86 = v40;
  uint64_t v41 = v39;
  v40(v39, v38);
  uint64_t v42 = swift_retain();
  sub_100020F7C(v42, v108);
  swift_release();
  LOBYTE(v35) = sub_10006A380();
  swift_release();
  uint64_t v43 = swift_getKeyPath();
  uint64_t v44 = swift_allocObject();
  *(unsigned char *)(v44 + 16) = v35 & 1;
  uint64_t v45 = v114;
  uint64_t v85 = *(void (**)(char *, char *, uint64_t))(v114 + 16);
  uint64_t v46 = (uint64_t)v97;
  uint64_t v47 = v107;
  v85(v97, v37, v107);
  uint64_t v48 = (uint64_t *)(v46 + *(int *)(v110 + 44));
  *uint64_t v48 = v43;
  v48[1] = (uint64_t)sub_100040414;
  v48[2] = v44;
  uint64_t v49 = *(void (**)(char *, uint64_t))(v45 + 8);
  uint64_t v114 = v45 + 8;
  uint64_t v84 = v49;
  v49(v37, v47);
  sub_100026FD0(v46, v109, &qword_100202D28);
  uint64_t v50 = (_OWORD *)swift_allocObject();
  long long v51 = *((_OWORD *)a1 + 1);
  v50[1] = *(_OWORD *)a1;
  v50[2] = v51;
  long long v52 = *((_OWORD *)a1 + 3);
  v50[3] = *((_OWORD *)a1 + 2);
  v50[4] = v52;
  swift_retain();
  sub_10005CF60((uint64_t)&v120);
  swift_retain();
  sub_1001009E4((uint64_t)&v119);
  swift_retain();
  uint64_t v53 = v90;
  Button.init(action:label:)();
  int v54 = v91;
  IconOnlyLabelStyle.init()();
  uint64_t v55 = v41;
  uint64_t v56 = v80;
  uint64_t v57 = v103;
  View.labelStyle<A>(_:)();
  v94(v54, v57);
  v93(v53, v56);
  uint64_t v58 = swift_getKeyPath();
  uint64_t v59 = (uint64_t)v79;
  *uint64_t v79 = 256;
  uint64_t v60 = v106;
  uint64_t v61 = (uint64_t *)(v59 + *(int *)(v106 + 24));
  *uint64_t v61 = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  uint64_t v62 = v59 + *(int *)(v60 + 28);
  *(void *)uint64_t v62 = v58;
  *(unsigned char *)(v62 + 8) = 0;
  uint64_t v64 = v104;
  uint64_t v63 = v105;
  View.buttonStyle<A>(_:)();
  sub_100100B64(v59, v87);
  v86(v55, v63);
  uint64_t v65 = swift_retain();
  sub_100020F7C(v65, v108);
  swift_release();
  LOBYTE(v63) = sub_10006A600();
  swift_release();
  uint64_t v66 = swift_getKeyPath();
  uint64_t v67 = swift_allocObject();
  *(unsigned char *)(v67 + 16) = v63 & 1;
  uint64_t v68 = (uint64_t)v100;
  uint64_t v69 = v107;
  v85(v100, v64, v107);
  char v70 = (uint64_t *)(v68 + *(int *)(v110 + 44));
  *char v70 = v66;
  v70[1] = (uint64_t)sub_100040414;
  void v70[2] = v67;
  v84(v64, v69);
  sub_100026FD0(v68, v46, &qword_100202D28);
  uint64_t v71 = v109;
  sub_100008DD4(v109, v68, &qword_100202D28);
  uint64_t v72 = v101;
  sub_100008DD4(v46, v101, &qword_100202D28);
  uint64_t v73 = v102;
  sub_100008DD4(v68, v102, &qword_100202D28);
  uint64_t v74 = sub_1000063C0(&qword_100202D48);
  uint64_t v75 = v73 + *(int *)(v74 + 48);
  *(void *)uint64_t v75 = 0x3FF0000000000000;
  *(unsigned char *)(v75 + 8) = 0;
  sub_100008DD4(v72, v73 + *(int *)(v74 + 64), &qword_100202D28);
  sub_10002784C(v46, &qword_100202D28);
  sub_10002784C(v71, &qword_100202D28);
  sub_10002784C(v72, &qword_100202D28);
  return sub_10002784C(v68, &qword_100202D28);
}

uint64_t sub_10010054C@<X0>(uint64_t a1@<X8>)
{
  return sub_1001006EC(a1);
}

uint64_t sub_10010057C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1000063C0(&qword_1001FF820);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(a1) = *(unsigned char *)(a1 + 8);
  uint64_t v8 = swift_retain();
  uint64_t v9 = sub_100020F7C(v8, a1);
  swift_release();
  uint64_t v10 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v7, 1, 1, v10);
  type metadata accessor for MainActor();
  swift_retain();
  uint64_t v11 = static MainActor.shared.getter();
  uint64_t v12 = (void *)swift_allocObject();
  void v12[2] = v11;
  void v12[3] = &protocol witness table for MainActor;
  v12[4] = v9;
  sub_1000FF150((uint64_t)v7, a3, (uint64_t)v12);
  swift_release();
  return swift_release();
}

uint64_t sub_1001006C4@<X0>(uint64_t a1@<X8>)
{
  return sub_1001006EC(a1);
}

uint64_t sub_1001006EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1000063C0(&qword_1001FBBC0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  LocalizedStringKey.init(stringLiteral:)();
  Label<>.init(_:systemImage:)();
  char v6 = static Edge.Set.all.getter();
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 16))(a1, v5, v2);
  uint64_t v7 = a1 + *(int *)(sub_1000063C0(&qword_100202D30) + 36);
  *(unsigned char *)uint64_t v7 = v6;
  *(_OWORD *)(v7 + 8) = 0u;
  *(_OWORD *)(v7 + 24) = 0u;
  *(unsigned char *)(v7 + 40) = 1;
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_100100840(uint64_t a1)
{
  uint64_t v1 = *(void (**)())(a1 + 48);
  sub_1000063C0((uint64_t *)&unk_1001FF220);
  Binding.wrappedValue.getter();
  v1();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001008AC()
{
  return Label.init(title:icon:)();
}

uint64_t sub_100100900@<X0>(uint64_t a1@<X8>)
{
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t result = Text.init(_:tableName:bundle:comment:)();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_100100974@<X0>(uint64_t a1@<X8>)
{
  long long v3 = v1[1];
  v7[0] = *v1;
  v7[1] = v3;
  long long v4 = v1[3];
  v7[2] = v1[2];
  v7[3] = v4;
  *(void *)a1 = static VerticalAlignment.center.getter();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  uint64_t v5 = sub_1000063C0(&qword_100202CE0);
  return sub_1000FF2D8((uint64_t)v7, a1 + *(int *)(v5 + 44));
}

uint64_t sub_1001009DC()
{
  return sub_100100840(v0 + 16);
}

uint64_t sub_1001009E4(uint64_t a1)
{
  return a1;
}

uint64_t sub_100100A30()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100100A44()
{
  return sub_10010057C(v0 + 16, (uint64_t)&unk_1001EE6F0, (uint64_t)&unk_100202D58);
}

unint64_t sub_100100A7C()
{
  unint64_t result = qword_100202D38;
  if (!qword_100202D38)
  {
    sub_100006C14(&qword_100202D30);
    sub_100027F2C((unint64_t *)&unk_1001FD5A0, &qword_1001FBBC0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100202D38);
  }
  return result;
}

uint64_t sub_100100B1C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100100B64(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100100BC4()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100100BD8()
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 80, 7);
}

uint64_t sub_100100C30()
{
  return sub_10010057C(v0 + 16, (uint64_t)&unk_1001EE6C8, (uint64_t)&unk_100202D50);
}

uint64_t sub_100100C68()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100100C7C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  void *v7 = v2;
  v7[1] = sub_100027204;
  return sub_10006BD98(a1, v4, v5, v6);
}

uint64_t sub_100100D34(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  void *v7 = v2;
  v7[1] = sub_100027FEC;
  return sub_10006A82C(a1, v4, v5, v6);
}

uint64_t sub_100100DE8()
{
  return sub_100027F2C(&qword_100202D60, &qword_100202D68);
}

id sub_100100E24(uint64_t a1, void *a2)
{
  sub_1000063C0((uint64_t *)&unk_100202E10);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_10018A720;
  uint64_t v4 = (objc_class *)type metadata accessor for TextActivityItemWithIcon();
  uint64_t v5 = (char *)objc_allocWithZone(v4);
  *(void *)&v5[OBJC_IVAR____TtC21WritingToolsUIService24TextActivityItemWithIcon_text] = a2;
  v13.receiver = v5;
  v13.super_class = v4;
  id v6 = a2;
  [super init];
  *(void *)(v3 + 56) = v4;
  *(void *)(v3 + 32) = v7;
  id v8 = objc_allocWithZone((Class)UIActivityViewController);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v10 = [v8 initWithActivityItems:isa 0 v13.receiver v13.super_class];

  type metadata accessor for ActivityType(0);
  Class v11 = Array._bridgeToObjectiveC()().super.isa;
  [v10 setExcludedActivityTypes:v11];

  return v10;
}

id sub_100100F48(uint64_t a1)
{
  return sub_100100E24(a1, *v1);
}

uint64_t sub_100100F5C()
{
  return UIViewControllerRepresentable.sizeThatFits(_:uiViewController:context:)();
}

uint64_t sub_100100F98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1001016D8();

  return static UIViewControllerRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_100100FFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1001016D8();

  return static UIViewControllerRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_100101060()
{
}

id sub_10010134C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TextActivityItemWithIcon();
  return [super dealloc];
}

uint64_t type metadata accessor for TextActivityItemWithIcon()
{
  return self;
}

void sub_1001013B4()
{
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [self systemImageNamed:v1];

  if (v2)
  {
    id v3 = [self systemGrayColor];
    id v4 = [v2 imageWithTintColor:v3];

    id v5 = [objc_allocWithZone((Class)NSItemProvider) initWithObject:v4];
    id v6 = [objc_allocWithZone((Class)LPLinkMetadata) init];
    [v6 setIconProvider:v5];
    NSString v7 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                               + OBJC_IVAR____TtC21WritingToolsUIService24TextActivityItemWithIcon_text), "string"));
    if (!v7)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v7 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    [v6 setSummary:v7];
  }
  else
  {
    __break(1u);
  }
}

void *initializeBufferWithCopyOfBuffer for SharingActivityView(void *a1, uint64_t a2)
{
  id v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  id v5 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for SharingActivityView(id *a1)
{
  return swift_bridgeObjectRelease();
}

uint64_t assignWithCopy for SharingActivityView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

id *assignWithTake for SharingActivityView(id *a1, _OWORD *a2)
{
  *(_OWORD *)a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SharingActivityView(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SharingActivityView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SharingActivityView()
{
  return &type metadata for SharingActivityView;
}

unint64_t sub_1001016D8()
{
  unint64_t result = qword_100202E08;
  if (!qword_100202E08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100202E08);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for WritingTools(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF2) {
    goto LABEL_17;
  }
  if (a2 + 14 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 14) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 14;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 14;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 14;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xF;
  int v8 = v6 - 15;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for WritingTools(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 14 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 14) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF2) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF1)
  {
    unsigned int v6 = ((a2 - 242) >> 8) + 1;
    *unint64_t result = a2 + 14;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10010188CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 14;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WritingTools()
{
  return &type metadata for WritingTools;
}

unint64_t sub_1001018C8()
{
  unint64_t result = qword_100202E20;
  if (!qword_100202E20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100202E20);
  }
  return result;
}

const char *sub_10010191C(char a1)
{
  unint64_t result = "Panel_iOS";
  switch(a1)
  {
    case 1:
      unint64_t result = "Panel_iPadOS";
      break;
    case 2:
      unint64_t result = "Panel_macOS";
      break;
    case 3:
      unint64_t result = "OpenEndedAdjustmentV2";
      break;
    case 4:
      unint64_t result = "OpenEndedAdjustmentV2_FollowUp";
      break;
    case 5:
      unint64_t result = "Montara";
      break;
    case 6:
      unint64_t result = "Montara_PersonalInfoSearch";
      break;
    case 7:
      unint64_t result = "Montara_NonInlineClients";
      break;
    case 8:
      unint64_t result = "Montara_PromptEntryView";
      break;
    case 9:
      unint64_t result = "Montara_SlotFill";
      break;
    case 10:
      unint64_t result = "Montara_PopoverAdjustment";
      break;
    case 11:
      unint64_t result = "CustomQuestionnaireEntry";
      break;
    case 12:
      unint64_t result = "AlternateQuestionnaire_macOS";
      break;
    case 13:
      unint64_t result = "AlternateQuestionnaire_iPadOS";
      break;
    case 14:
      unint64_t result = "FeedbackFCSBehavior";
      break;
    default:
      return result;
  }
  return result;
}

const char *sub_100101A9C()
{
  return "WritingTools";
}

const char *sub_100101AB0()
{
  return sub_10010191C(*v0);
}

uint64_t destroy for SlotFormView()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SlotFormView(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SlotFormView(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for OpenEndedAdjustmentView(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for SlotFormView(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SlotFormView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SlotFormView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SlotFormView()
{
  return &type metadata for SlotFormView;
}

uint64_t sub_100101D38()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100101D54@<X0>(uint64_t a1@<X8>)
{
  unint64_t v2 = v1;
  uint64_t v75 = a1;
  uint64_t v71 = type metadata accessor for PhotosPickerItem.EncodingDisambiguationPolicy();
  uint64_t v69 = *(void *)(v71 - 8);
  __chkstk_darwin(v71);
  uint64_t v68 = (char *)&v57 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for PhotosPickerSelectionBehavior();
  uint64_t v66 = *(void *)(v4 - 8);
  uint64_t v67 = v4;
  __chkstk_darwin(v4);
  uint64_t v65 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000063C0(&qword_100202F28);
  __chkstk_darwin(v6 - 8);
  uint64_t v79 = (uint64_t)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000063C0(&qword_100202F30);
  uint64_t v62 = *(void *)(v8 - 8);
  uint64_t v63 = v8;
  __chkstk_darwin(v8);
  uint64_t v76 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = sub_1000063C0(&qword_100202F38);
  uint64_t v64 = *(void *)(v80 - 8);
  __chkstk_darwin(v80);
  uint64_t v77 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = sub_1000063C0(&qword_100202F40);
  uint64_t v70 = *(void *)(v72 - 8);
  __chkstk_darwin(v72);
  uint64_t v81 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000063C0(&qword_100202F48);
  uint64_t v73 = *(void *)(v12 - 8);
  uint64_t v74 = v12;
  __chkstk_darwin(v12);
  uint64_t v82 = (char *)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = static Alignment.center.getter();
  uint64_t v16 = v15;
  sub_10010282C((uint64_t)v2, v97);
  long long v90 = v97[4];
  long long v91 = v97[5];
  v92[0] = v98[0];
  *(_OWORD *)((char *)v92 + 11) = *(_OWORD *)((char *)v98 + 11);
  long long v86 = v97[0];
  long long v87 = v97[1];
  long long v88 = v97[2];
  long long v89 = v97[3];
  char v17 = static Edge.Set.all.getter();
  char v99 = 1;
  *(void *)&long long v85 = v14;
  *((void *)&v85 + 1) = v16;
  char v93 = v17;
  long long v94 = 0u;
  long long v95 = 0u;
  char v96 = 1;
  long long v83 = v2[8];
  uint64_t v18 = sub_1000063C0(&qword_1001FB5A8);
  State.projectedValue.getter();
  uint64_t v19 = sub_1000063C0(&qword_100202F50);
  unint64_t v20 = sub_100107548();
  unint64_t v21 = sub_1001075E8();
  View.sheet<A>(isPresented:onDismiss:content:)();
  swift_release();
  swift_release();
  sub_10010763C((uint64_t)v97);
  long long v84 = v2[9];
  uint64_t v78 = v18;
  State.projectedValue.getter();
  if (qword_1001FACA8 != -1) {
    swift_once();
  }
  long long v22 = (_OWORD *)swift_allocObject();
  long long v23 = v2[11];
  v22[11] = v2[10];
  v22[12] = v23;
  long long v24 = v2[13];
  v22[13] = v2[12];
  v22[14] = v24;
  long long v25 = v2[7];
  v22[7] = v2[6];
  v22[8] = v25;
  long long v26 = v2[9];
  v22[9] = v2[8];
  v22[10] = v26;
  long long v27 = v2[3];
  v22[3] = v2[2];
  v22[4] = v27;
  long long v28 = v2[5];
  v22[5] = v2[4];
  v22[6] = v28;
  long long v29 = v2[1];
  v22[1] = *v2;
  void v22[2] = v29;
  sub_100106B70((uint64_t)v2);
  *(void *)&long long v85 = v19;
  *((void *)&v85 + 1) = &type metadata for ContactPickerView;
  *(void *)&long long v86 = v20;
  *((void *)&v86 + 1) = v21;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v30 = v63;
  uint64_t v31 = v76;
  View.fileImporter(isPresented:allowedContentTypes:allowsMultipleSelection:onCompletion:)();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v62 + 8))(v31, v30);
  long long v84 = v2[10];
  State.projectedValue.getter();
  uint64_t v59 = *((void *)&v85 + 1);
  LODWORD(v62) = v86;
  long long v83 = v2[11];
  long long v84 = v83;
  uint64_t v76 = (char *)sub_1000063C0(&qword_100201FC0);
  State.projectedValue.getter();
  uint64_t v60 = v85;
  uint64_t v32 = v79;
  static PHPickerFilter.images.getter();
  uint64_t v33 = type metadata accessor for PHPickerFilter();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v32, 0, 1, v33);
  id v58 = [self sharedPhotoLibrary];
  uint64_t v34 = v65;
  static PhotosPickerSelectionBehavior.default.getter();
  int v35 = v68;
  static PhotosPickerItem.EncodingDisambiguationPolicy.automatic.getter();
  *(void *)&long long v85 = v30;
  *((void *)&v85 + 1) = OpaqueTypeConformance2;
  uint64_t v63 = swift_getOpaqueTypeConformance2();
  BOOL v36 = v77;
  View.photosPicker(isPresented:selection:maxSelectionCount:selectionBehavior:matching:preferredItemEncoding:photoLibrary:)();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v69 + 8))(v35, v71);
  (*(void (**)(char *, uint64_t))(v66 + 8))(v34, v67);
  sub_10002784C(v79, &qword_100202F28);
  uint64_t v37 = v80;
  (*(void (**)(char *, uint64_t))(v64 + 8))(v36, v80);
  long long v85 = v84;
  State.wrappedValue.getter();
  uint64_t v38 = (_OWORD *)swift_allocObject();
  long long v39 = v2[11];
  v38[11] = v2[10];
  v38[12] = v39;
  long long v40 = v2[13];
  v38[13] = v2[12];
  v38[14] = v40;
  long long v41 = v2[7];
  v38[7] = v2[6];
  v38[8] = v41;
  long long v42 = v2[9];
  v38[9] = v2[8];
  v38[10] = v42;
  long long v43 = v2[3];
  v38[3] = v2[2];
  v38[4] = v43;
  long long v44 = v2[5];
  v38[5] = v2[4];
  v38[6] = v44;
  long long v45 = v2[1];
  v38[1] = *v2;
  v38[2] = v45;
  sub_100106B70((uint64_t)v2);
  uint64_t v76 = (char *)sub_1000063C0((uint64_t *)&unk_1002048E0);
  *(void *)&long long v85 = v37;
  *((void *)&v85 + 1) = v63;
  uint64_t v46 = swift_getOpaqueTypeConformance2();
  unint64_t v47 = sub_1000EE3B8();
  uint64_t v48 = v72;
  uint64_t v49 = v81;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v70 + 8))(v49, v48);
  uint64_t v50 = LocalizedStringKey.init(stringLiteral:)();
  uint64_t v80 = v51;
  uint64_t v81 = (char *)v50;
  LODWORD(v77) = v52;
  uint64_t v79 = v53;
  long long v83 = v2[12];
  State.projectedValue.getter();
  LODWORD(v78) = v86;
  long long v85 = v2[13];
  sub_1000063C0(&qword_100202F78);
  State.wrappedValue.getter();
  sub_1000063C0(&qword_1001FC6B8);
  sub_1000063C0(&qword_1001FEE40);
  *(void *)&long long v85 = v48;
  *((void *)&v85 + 1) = v76;
  *(void *)&long long v86 = v46;
  *((void *)&v86 + 1) = v47;
  swift_getOpaqueTypeConformance2();
  sub_100027F2C((unint64_t *)&unk_1001FDDF0, &qword_1001FC6B8);
  uint64_t v54 = v74;
  uint64_t v55 = v82;
  View.alert<A, B, C>(_:isPresented:presenting:actions:message:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_errorRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v73 + 8))(v55, v54);
}

double sub_10010282C@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  long long v4 = *(_OWORD *)(a1 + 64);
  uint64_t v5 = (long long *)(a1 + 16);
  long long v77 = *(_OWORD *)(a1 + 48);
  long long v78 = v4;
  long long v79 = *(_OWORD *)(a1 + 80);
  LOBYTE(v80) = *(unsigned char *)(a1 + 96);
  long long v6 = *(_OWORD *)(a1 + 32);
  long long v75 = *(_OWORD *)(a1 + 16);
  long long v76 = v6;
  sub_1000063C0(&qword_1001FC958);
  Binding.wrappedValue.getter();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((_BYTE)v70)
  {
    if (v70 != 1)
    {
      Binding.projectedValue.getter();
      long long v34 = v76;
      long long v36 = v75;
      long long v20 = v77;
      char v21 = v78;
      uint64_t v22 = *((void *)&v78 + 1);
      char v23 = v80;
      long long v38 = v79;
      sub_1000063C0(&qword_1001FB5A8);
      State.projectedValue.getter();
      long long v24 = v75;
      char v25 = v76;
      type metadata accessor for CompositionModel(0);
      sub_10010796C((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
      uint64_t v26 = Environment.init<A>(_:)();
      char v67 = v27 & 1;
      *(void *)&long long v68 = v26;
      BYTE8(v68) = v27 & 1;
      *(_DWORD *)((char *)&v68 + 9) = v53;
      HIDWORD(v68) = *(_DWORD *)((char *)&v53 + 3);
      long long v69 = v36;
      long long v70 = v34;
      long long v71 = v20;
      LOBYTE(v72) = v21;
      DWORD1(v72) = *(_DWORD *)((char *)&v39 + 3);
      *(_DWORD *)((char *)&v72 + 1) = v39;
      *((void *)&v72 + 1) = v22;
      long long v73 = v38;
      v74[0] = v23;
      *(_DWORD *)&v74[4] = *(_DWORD *)((char *)&v46 + 3);
      *(_DWORD *)&v74[1] = v46;
      *(_OWORD *)&v74[8] = v24;
      v74[24] = v25;
      sub_100107C14((uint64_t)&v68);
      sub_100026FD0((uint64_t)&v68, (uint64_t)&v60, &qword_100202FA0);
      sub_1000063C0(&qword_100202FA8);
      sub_100107C20();
      sub_100107D44();
      _ConditionalContent<>.init(storage:)();
      goto LABEL_7;
    }
    long long v7 = v5[3];
    long long v70 = v5[2];
    long long v71 = v7;
    long long v72 = v5[4];
    LOBYTE(v73) = *((unsigned char *)v5 + 80);
    long long v8 = v5[1];
    long long v68 = *v5;
    long long v69 = v8;
    Binding.projectedValue.getter();
    uint64_t v9 = *((void *)&v75 + 1);
    uint64_t v35 = v75;
    long long v10 = v77;
    char v11 = v78;
    uint64_t v12 = *((void *)&v78 + 1);
    char v37 = v80;
    long long v32 = v79;
    long long v33 = v76;
    long long v68 = *(_OWORD *)(a1 + 144);
    sub_1000063C0(&qword_1001FB5A8);
    State.projectedValue.getter();
    long long v13 = v75;
    char v14 = v76;
    type metadata accessor for CompositionModel(0);
    sub_10010796C((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
    *(void *)&long long v46 = Environment.init<A>(_:)();
    BYTE8(v46) = v15 & 1;
    *(void *)&long long v47 = v35;
    *((void *)&v47 + 1) = v9;
    long long v48 = v33;
    long long v49 = v10;
    LOBYTE(v50) = v11;
    *((void *)&v50 + 1) = v12;
    long long v51 = v32;
    v52[0] = v37;
    *(_OWORD *)&v52[8] = v13;
    v52[24] = v14;
    long long v55 = v33;
    long long v56 = v10;
    long long v53 = v46;
    long long v54 = v47;
    *(_OWORD *)((char *)v59 + 9) = *(_OWORD *)&v52[9];
    long long v58 = v32;
    v59[0] = *(_OWORD *)v52;
    long long v57 = v50;
    sub_100107D98((uint64_t)&v53);
    sub_100026FD0((uint64_t)&v53, (uint64_t)&v75, &qword_100202FD0);
    sub_100107DA4((uint64_t)&v46);
    sub_100107C9C();
    sub_100107CF0();
    _ConditionalContent<>.init(storage:)();
    long long v72 = v43;
    long long v73 = v44;
    *(_OWORD *)uint64_t v74 = *(_OWORD *)v45;
    *(_OWORD *)&v74[10] = *(_OWORD *)&v45[10];
    long long v68 = v39;
    long long v69 = v40;
    long long v70 = v41;
    long long v71 = v42;
    sub_100107E48((uint64_t)&v68);
    sub_100026FD0((uint64_t)&v68, (uint64_t)&v75, &qword_100202FA0);
    sub_1000063C0(&qword_100202FA8);
    sub_100107C20();
    sub_100107D44();
    _ConditionalContent<>.init(storage:)();
    sub_100107E50((uint64_t)&v46);
    long long v79 = v64;
    long long v80 = v65;
    v81[0] = v66[0];
    *(_OWORD *)((char *)v81 + 11) = *(_OWORD *)((char *)v66 + 11);
    long long v75 = v60;
    long long v76 = v61;
    long long v16 = v62;
    long long v17 = v63;
  }
  else
  {
    long long v18 = v5[3];
    long long v70 = v5[2];
    long long v71 = v18;
    long long v72 = v5[4];
    LOBYTE(v73) = *((unsigned char *)v5 + 80);
    long long v19 = v5[1];
    long long v68 = *v5;
    long long v69 = v19;
    Binding.projectedValue.getter();
    long long v53 = v75;
    long long v54 = v76;
    long long v55 = v77;
    LOBYTE(v56) = v78;
    *((void *)&v56 + 1) = *((void *)&v78 + 1);
    long long v57 = v79;
    LOBYTE(v58) = v80;
    sub_100107EF0((uint64_t)&v53);
    sub_100026FD0((uint64_t)&v53, (uint64_t)&v75, &qword_100202FD0);
    sub_100107C9C();
    sub_100107CF0();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    _ConditionalContent<>.init(storage:)();
    long long v72 = v43;
    long long v73 = v44;
    *(_OWORD *)uint64_t v74 = *(_OWORD *)v45;
    *(_OWORD *)&v74[10] = *(_OWORD *)&v45[10];
    long long v68 = v39;
    long long v69 = v40;
    long long v70 = v41;
    long long v71 = v42;
    sub_100107E48((uint64_t)&v68);
    sub_100026FD0((uint64_t)&v68, (uint64_t)&v75, &qword_100202FA0);
    sub_1000063C0(&qword_100202FA8);
    sub_100107C20();
    sub_100107D44();
    _ConditionalContent<>.init(storage:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    long long v79 = v64;
    long long v80 = v65;
    v81[0] = v66[0];
    *(_OWORD *)((char *)v81 + 11) = *(_OWORD *)((char *)v66 + 11);
    long long v75 = v60;
    long long v76 = v61;
    long long v16 = v62;
    long long v17 = v63;
  }
  long long v77 = v16;
  long long v78 = v17;
LABEL_7:
  long long v28 = v80;
  a2[4] = v79;
  a2[5] = v28;
  a2[6] = v81[0];
  *(_OWORD *)((char *)a2 + 107) = *(_OWORD *)((char *)v81 + 11);
  long long v29 = v76;
  *a2 = v75;
  a2[1] = v29;
  double result = *(double *)&v77;
  long long v31 = v78;
  a2[2] = v77;
  a2[3] = v31;
  return result;
}

void sub_100102ED8(void *a1@<X8>)
{
  *a1 = nullsub_1;
  a1[1] = 0;
}

uint64_t sub_100102EF0(uint64_t a1, char a2, _OWORD *a3)
{
  uint64_t v6 = sub_1000063C0(&qword_1001FF820);
  __chkstk_darwin(v6 - 8);
  long long v8 = &v26[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (a2)
  {
    swift_errorRetain();
    if (qword_1001FAC30 != -1) {
      swift_once();
    }
    uint64_t v20 = type metadata accessor for Logger();
    sub_10000EBE8(v20, (uint64_t)qword_100212788);
    swift_errorRetain();
    swift_errorRetain();
    char v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v21, v22))
    {
      char v23 = (uint8_t *)swift_slowAlloc();
      long long v24 = (void *)swift_slowAlloc();
      *(_DWORD *)char v23 = 138412290;
      swift_errorRetain();
      uint64_t v25 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)&long long v28 = v25;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *long long v24 = v25;
      sub_1000EE524(a1, 1);
      sub_1000EE524(a1, 1);
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "failed to import files: %@", v23, 0xCu);
      sub_1000063C0(&qword_1001FED90);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_1000EE524(a1, 1);
      sub_1000EE524(a1, 1);
    }

    long long v28 = a3[13];
    *(void *)&long long v27 = a1;
    swift_errorRetain();
    sub_1000063C0(&qword_100202F78);
    State.wrappedValue.setter();
    long long v27 = a3[12];
    long long v28 = v27;
    v26[15] = 1;
    sub_100026FD0((uint64_t)&v28 + 8, (uint64_t)v29, (uint64_t *)&unk_100201FF8);
    sub_10005CF60((uint64_t)v29);
    sub_1000063C0(&qword_1001FB5A8);
    State.wrappedValue.setter();
    sub_1000EE524(a1, 1);
    return sub_1000EE530((uint64_t)&v28);
  }
  else
  {
    uint64_t v9 = type metadata accessor for TaskPriority();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
    type metadata accessor for MainActor();
    sub_1000EE55C(a1, 0);
    sub_100106B70((uint64_t)a3);
    uint64_t v10 = static MainActor.shared.getter();
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = v10;
    *(void *)(v11 + 24) = &protocol witness table for MainActor;
    long long v12 = a3[11];
    *(_OWORD *)(v11 + 192) = a3[10];
    *(_OWORD *)(v11 + 208) = v12;
    long long v13 = a3[13];
    *(_OWORD *)(v11 + 224) = a3[12];
    *(_OWORD *)(v11 + 240) = v13;
    long long v14 = a3[7];
    *(_OWORD *)(v11 + 128) = a3[6];
    *(_OWORD *)(v11 + 144) = v14;
    long long v15 = a3[9];
    *(_OWORD *)(v11 + 160) = a3[8];
    *(_OWORD *)(v11 + 176) = v15;
    long long v16 = a3[3];
    *(_OWORD *)(v11 + 64) = a3[2];
    *(_OWORD *)(v11 + 80) = v16;
    long long v17 = a3[5];
    *(_OWORD *)(v11 + 96) = a3[4];
    *(_OWORD *)(v11 + 112) = v17;
    long long v18 = a3[1];
    *(_OWORD *)(v11 + 32) = *a3;
    *(_OWORD *)(v11 + 48) = v18;
    *(void *)(v11 + 256) = a1;
    sub_100122AC8((uint64_t)v8, (uint64_t)&unk_100202F98, v11);
    return swift_release();
  }
}

uint64_t sub_100103290(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[24] = a4;
  v5[25] = a5;
  v5[23] = a1;
  type metadata accessor for MainActor();
  v5[26] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[27] = v7;
  v5[28] = v6;
  return _swift_task_switch(sub_10010332C, v7, v6);
}

uint64_t sub_10010332C()
{
  uint64_t v1 = *(void *)(v0 + 192);
  char v2 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = swift_retain();
  uint64_t v4 = sub_100020F7C(v3, v2);
  swift_release();
  swift_getKeyPath();
  *(void *)(v0 + 176) = v4;
  sub_10010796C((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  *(void *)(v0 + 232) = *(void *)(v4 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__attachmentManager);
  swift_retain();
  swift_release();
  long long v5 = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v0 + 32) = v5;
  long long v6 = *(_OWORD *)(v1 + 48);
  long long v7 = *(_OWORD *)(v1 + 64);
  long long v8 = *(_OWORD *)(v1 + 80);
  *(unsigned char *)(v0 + 96) = *(unsigned char *)(v1 + 96);
  *(_OWORD *)(v0 + 64) = v7;
  *(_OWORD *)(v0 + 80) = v8;
  *(_OWORD *)(v0 + 48) = v6;
  sub_1000063C0(&qword_1001FC958);
  Binding.wrappedValue.getter();
  uint64_t v10 = *(void *)(v0 + 104);
  uint64_t v9 = *(void *)(v0 + 112);
  *(void *)(v0 + 240) = v9;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v0 + 248) = v11;
  *uint64_t v11 = v0;
  v11[1] = sub_100103500;
  uint64_t v12 = *(void *)(v0 + 200);
  return sub_10013AEFC(v12, v10, v9);
}

uint64_t sub_100103500(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 256) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v3 = *(void *)(v2 + 224);
  uint64_t v4 = *(void *)(v2 + 216);
  return _swift_task_switch(sub_100103668, v4, v3);
}

uint64_t sub_100103668()
{
  uint64_t v1 = v0[32];
  uint64_t v2 = (void *)v0[23];
  swift_release();
  *uint64_t v2 = v1;
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_1001036D4(_OWORD *a1)
{
  uint64_t v2 = sub_1000063C0(&qword_1001FF820);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v20 = a1[11];
  long long v18 = a1[11];
  sub_1000063C0(&qword_100201FC0);
  State.wrappedValue.getter();
  uint64_t v5 = v19[2];
  uint64_t result = swift_bridgeObjectRelease();
  if (v5)
  {
    long long v18 = v20;
    State.wrappedValue.getter();
    long long v7 = v19;
    uint64_t v8 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v4, 1, 1, v8);
    type metadata accessor for MainActor();
    sub_100106B70((uint64_t)a1);
    uint64_t v9 = static MainActor.shared.getter();
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = v9;
    *(void *)(v10 + 24) = &protocol witness table for MainActor;
    long long v11 = a1[11];
    *(_OWORD *)(v10 + 192) = a1[10];
    *(_OWORD *)(v10 + 208) = v11;
    long long v12 = a1[13];
    *(_OWORD *)(v10 + 224) = a1[12];
    *(_OWORD *)(v10 + 240) = v12;
    long long v13 = a1[7];
    *(_OWORD *)(v10 + 128) = a1[6];
    *(_OWORD *)(v10 + 144) = v13;
    long long v14 = a1[9];
    *(_OWORD *)(v10 + 160) = a1[8];
    *(_OWORD *)(v10 + 176) = v14;
    long long v15 = a1[3];
    *(_OWORD *)(v10 + 64) = a1[2];
    *(_OWORD *)(v10 + 80) = v15;
    long long v16 = a1[5];
    *(_OWORD *)(v10 + 96) = a1[4];
    *(_OWORD *)(v10 + 112) = v16;
    long long v17 = a1[1];
    *(_OWORD *)(v10 + 32) = *a1;
    *(_OWORD *)(v10 + 48) = v17;
    *(void *)(v10 + 256) = v7;
    sub_1001228D0((uint64_t)v4, (uint64_t)&unk_100202F88, v10);
    swift_release();
    long long v18 = v20;
    long long v19 = _swiftEmptyArrayStorage;
    return State.wrappedValue.setter();
  }
  return result;
}

uint64_t sub_1001038AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[23] = a4;
  v5[24] = a5;
  type metadata accessor for MainActor();
  v5[25] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[26] = v7;
  v5[27] = v6;
  return _swift_task_switch(sub_100103944, v7, v6);
}

uint64_t sub_100103944()
{
  uint64_t v1 = *(void *)(v0 + 184);
  char v2 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = swift_retain();
  uint64_t v4 = sub_100020F7C(v3, v2);
  swift_release();
  swift_getKeyPath();
  *(void *)(v0 + 176) = v4;
  sub_10010796C((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  *(void *)(v0 + 224) = *(void *)(v4 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__attachmentManager);
  swift_retain();
  swift_release();
  long long v5 = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v0 + 32) = v5;
  long long v6 = *(_OWORD *)(v1 + 48);
  long long v7 = *(_OWORD *)(v1 + 64);
  long long v8 = *(_OWORD *)(v1 + 80);
  *(unsigned char *)(v0 + 96) = *(unsigned char *)(v1 + 96);
  *(_OWORD *)(v0 + 64) = v7;
  *(_OWORD *)(v0 + 80) = v8;
  *(_OWORD *)(v0 + 48) = v6;
  sub_1000063C0(&qword_1001FC958);
  Binding.wrappedValue.getter();
  uint64_t v10 = *(void *)(v0 + 104);
  uint64_t v9 = *(void *)(v0 + 112);
  *(void *)(v0 + 232) = v9;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_100204920 + dword_100204920);
  long long v11 = (void *)swift_task_alloc();
  *(void *)(v0 + 240) = v11;
  *long long v11 = v0;
  v11[1] = sub_100103B2C;
  uint64_t v12 = *(void *)(v0 + 192);
  return v14(v12, v10, v9);
}

uint64_t sub_100103B2C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 216);
  uint64_t v3 = *(void *)(v1 + 208);
  return _swift_task_switch(sub_100103C8C, v3, v2);
}

uint64_t sub_100103C8C()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100103CEC()
{
  LocalizedStringKey.init(stringLiteral:)();

  return Button<>.init(_:action:)();
}

uint64_t sub_100103D48@<X0>(uint64_t a1@<X8>)
{
  swift_getErrorValue();
  Error.localizedDescription.getter();
  sub_10002DF54();
  uint64_t result = Text.init<A>(_:)();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_100103DB8@<X0>(uint64_t a1@<X8>)
{
  return sub_100101D54(a1);
}

uint64_t sub_100103E1C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000063C0(&qword_100202E30);
  __chkstk_darwin(v4 - 8);
  long long v6 = &v32[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_1000063C0(&qword_100202E38);
  uint64_t v8 = v7 - 8;
  uint64_t v9 = __chkstk_darwin(v7);
  long long v11 = &v32[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  long long v13 = &v32[-v12];
  uint64_t v34 = static VerticalAlignment.center.getter();
  sub_100104144((uint64_t)v35);
  *(_OWORD *)((char *)&v37[5] + 7) = v35[5];
  *(_OWORD *)((char *)&v37[6] + 7) = v35[6];
  *(_OWORD *)((char *)&v37[7] + 7) = v36[0];
  v37[8] = *(_OWORD *)((char *)v36 + 9);
  *(_OWORD *)((char *)&v37[1] + 7) = v35[1];
  *(_OWORD *)((char *)&v37[2] + 7) = v35[2];
  *(_OWORD *)((char *)&v37[3] + 7) = v35[3];
  *(_OWORD *)((char *)&v37[4] + 7) = v35[4];
  char v38 = 1;
  *(_OWORD *)((char *)v37 + 7) = v35[0];
  int v33 = 1;
  *(void *)long long v6 = static HorizontalAlignment.center.getter();
  *((void *)v6 + 1) = 0x4024000000000000;
  v6[16] = 0;
  uint64_t v14 = sub_1000063C0(&qword_100202E40);
  sub_1001044E8(a1, (uint64_t)&v6[*(int *)(v14 + 44)]);
  LOBYTE(a1) = static Edge.Set.bottom.getter();
  EdgeInsets.init(_all:)();
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  uint64_t v20 = v19;
  uint64_t v22 = v21;
  sub_100008DD4((uint64_t)v6, (uint64_t)v11, &qword_100202E30);
  char v23 = &v11[*(int *)(v8 + 44)];
  *char v23 = (_BYTE)a1;
  *((void *)v23 + 1) = v16;
  *((void *)v23 + 2) = v18;
  *((void *)v23 + 3) = v20;
  *((void *)v23 + 4) = v22;
  v23[40] = 0;
  sub_10002784C((uint64_t)v6, &qword_100202E30);
  sub_100026FD0((uint64_t)v11, (uint64_t)v13, &qword_100202E38);
  sub_100008DD4((uint64_t)v13, (uint64_t)v11, &qword_100202E38);
  *(_OWORD *)&v40[33] = v37[2];
  *(_OWORD *)&v40[17] = v37[1];
  *(_OWORD *)&v40[81] = v37[5];
  *(_OWORD *)&v40[97] = v37[6];
  *(_OWORD *)&v40[113] = v37[7];
  *(_OWORD *)&v40[129] = v37[8];
  *(_OWORD *)&v40[49] = v37[3];
  uint64_t v24 = v34;
  long long v39 = (unint64_t)v34;
  LOBYTE(a1) = v33;
  v40[0] = v33;
  *(_OWORD *)&v40[65] = v37[4];
  *(_OWORD *)&v40[1] = v37[0];
  long long v25 = *(_OWORD *)&v40[128];
  *(_OWORD *)(a2 + 128) = *(_OWORD *)&v40[112];
  *(_OWORD *)(a2 + 144) = v25;
  *(unsigned char *)(a2 + 160) = v40[144];
  long long v26 = *(_OWORD *)&v40[64];
  *(_OWORD *)(a2 + 64) = *(_OWORD *)&v40[48];
  *(_OWORD *)(a2 + 80) = v26;
  long long v27 = *(_OWORD *)&v40[96];
  *(_OWORD *)(a2 + 96) = *(_OWORD *)&v40[80];
  *(_OWORD *)(a2 + 112) = v27;
  long long v28 = *(_OWORD *)v40;
  *(_OWORD *)a2 = v39;
  *(_OWORD *)(a2 + 16) = v28;
  long long v29 = *(_OWORD *)&v40[32];
  *(_OWORD *)(a2 + 32) = *(_OWORD *)&v40[16];
  *(_OWORD *)(a2 + 48) = v29;
  uint64_t v30 = sub_1000063C0(&qword_100202E48);
  sub_100008DD4((uint64_t)v11, a2 + *(int *)(v30 + 48), &qword_100202E38);
  sub_1001064BC((uint64_t)&v39);
  sub_10002784C((uint64_t)v13, &qword_100202E38);
  sub_10002784C((uint64_t)v11, &qword_100202E38);
  long long v48 = v37[5];
  long long v49 = v37[6];
  long long v50 = v37[7];
  long long v51 = v37[8];
  long long v44 = v37[1];
  long long v45 = v37[2];
  long long v46 = v37[3];
  long long v47 = v37[4];
  v41[0] = v24;
  v41[1] = 0;
  char v42 = (char)a1;
  long long v43 = v37[0];
  return sub_1001064FC((uint64_t)v41);
}

uint64_t sub_100104144@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1000063C0(&qword_1001FBA90);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for LocalizedStringKey.StringInterpolation();
  __chkstk_darwin(v5 - 8);
  LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v6._countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v6);
  v7._countAndFlagsBits = 0x54504774616843;
  v7._object = (void *)0xE700000000000000;
  LocalizedStringKey.StringInterpolation.appendInterpolation(_:)(v7);
  v8._object = (void *)0x800000010019FC00;
  v8._countAndFlagsBits = 0xD000000000000021;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v8);
  LocalizedStringKey.init(stringInterpolation:)();
  uint64_t v9 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v11 = v10;
  char v13 = v12 & 1;
  static Font.Weight.bold.getter();
  uint64_t v14 = type metadata accessor for Font.Design();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v4, 1, 1, v14);
  static Font.system(size:weight:design:)();
  sub_10002784C((uint64_t)v4, &qword_1001FBA90);
  uint64_t v15 = Text.font(_:)();
  uint64_t v17 = v16;
  int v43 = v18;
  uint64_t v20 = v19;
  swift_release();
  sub_100026F18(v9, v11, v13);
  swift_bridgeObjectRelease();
  char v21 = static Edge.Set.top.getter();
  EdgeInsets.init(_all:)();
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  LOBYTE(v9) = static Edge.Set.bottom.getter();
  EdgeInsets.init(_all:)();
  *(_DWORD *)long long v61 = *(_DWORD *)v49;
  *(_DWORD *)&v61[3] = *(_DWORD *)&v49[3];
  *(_DWORD *)long long v64 = *(_DWORD *)v48;
  *(_DWORD *)&v64[3] = *(_DWORD *)&v48[3];
  *(_DWORD *)&v70[3] = *(_DWORD *)&v46[3];
  *(_DWORD *)long long v70 = *(_DWORD *)v46;
  *(_DWORD *)&v72[3] = *(_DWORD *)&v45[3];
  *(_DWORD *)long long v72 = *(_DWORD *)v45;
  DWORD1(v52) = *(_DWORD *)&v49[3];
  *(_DWORD *)((char *)&v52 + 1) = *(_DWORD *)v49;
  DWORD1(v53) = *(_DWORD *)&v48[3];
  char v30 = v43 & 1;
  char v50 = v43 & 1;
  char v47 = 0;
  char v44 = 0;
  *(_DWORD *)((char *)&v53 + 1) = *(_DWORD *)v48;
  HIDWORD(v55) = *(_DWORD *)&v46[3];
  *(void *)&long long v51 = v15;
  *((void *)&v51 + 1) = v17;
  LOBYTE(v52) = v43 & 1;
  *((void *)&v52 + 1) = v20;
  LOBYTE(v53) = v21;
  *((void *)&v53 + 1) = v23;
  *(void *)&long long v54 = v25;
  *((void *)&v54 + 1) = v27;
  *(void *)&long long v55 = v29;
  BYTE8(v55) = 0;
  *(_DWORD *)((char *)&v55 + 9) = *(_DWORD *)v46;
  LOBYTE(v56) = v9;
  DWORD1(v56) = *(_DWORD *)&v45[3];
  *(_DWORD *)((char *)&v56 + 1) = *(_DWORD *)v45;
  *((void *)&v56 + 1) = v31;
  *(void *)&v57[0] = v32;
  *((void *)&v57[0] + 1) = v33;
  *(void *)&v57[1] = v34;
  BYTE8(v57[1]) = 0;
  long long v35 = v51;
  long long v36 = v52;
  long long v37 = v54;
  *(_OWORD *)(a1 + 32) = v53;
  *(_OWORD *)(a1 + 48) = v37;
  *(_OWORD *)a1 = v35;
  *(_OWORD *)(a1 + 16) = v36;
  long long v38 = v55;
  long long v39 = v56;
  long long v40 = v57[0];
  *(_OWORD *)(a1 + 105) = *(_OWORD *)((char *)v57 + 9);
  *(_OWORD *)(a1 + 80) = v39;
  *(_OWORD *)(a1 + 96) = v40;
  *(_OWORD *)(a1 + 64) = v38;
  char v58 = 1;
  *(void *)(a1 + 128) = 0;
  *(unsigned char *)(a1 + 136) = 1;
  v59[0] = v15;
  v59[1] = v17;
  char v60 = v30;
  uint64_t v62 = v20;
  char v63 = v21;
  uint64_t v65 = v23;
  uint64_t v66 = v25;
  uint64_t v67 = v27;
  uint64_t v68 = v29;
  char v69 = 0;
  char v71 = v9;
  uint64_t v73 = v31;
  uint64_t v74 = v32;
  uint64_t v75 = v33;
  uint64_t v76 = v34;
  char v77 = 0;
  sub_100106D9C((uint64_t)&v51);
  return sub_100106DDC((uint64_t)v59);
}

uint64_t sub_1001044E8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v62 = a1;
  uint64_t v70 = a2;
  uint64_t v66 = type metadata accessor for PrimaryButtonStyle(0);
  __chkstk_darwin(v66);
  char v63 = (_WORD *)((char *)&v61 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v64 = sub_1000063C0(&qword_100202E50);
  __chkstk_darwin(v64);
  uint64_t v5 = (char *)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000063C0(&qword_100202E58);
  uint64_t v68 = *(void *)(v6 - 8);
  uint64_t v69 = v6;
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v67 = (char *)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v65 = (char *)&v61 - v9;
  uint64_t v10 = type metadata accessor for RoundedRectangle();
  uint64_t v11 = v10 - 8;
  __chkstk_darwin(v10);
  char v13 = (_OWORD *)((char *)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = sub_1000063C0(&qword_100202510);
  uint64_t v15 = v14 - 8;
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v61 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1000063C0(&qword_100202E60);
  __chkstk_darwin(v18 - 8);
  uint64_t v20 = (char *)&v61 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1000063C0(&qword_100202E68);
  uint64_t v22 = v21 - 8;
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v61 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v27 = (char *)&v61 - v26;
  *(void *)uint64_t v20 = static HorizontalAlignment.center.getter();
  *((void *)v20 + 1) = 0;
  v20[16] = 0;
  sub_1000063C0(&qword_100202E70);
  sub_100104B90(a1);
  uint64_t v28 = (char *)v13 + *(int *)(v11 + 28);
  uint64_t v29 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v30 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 104))(v28, v29, v30);
  __asm { FMOV            V0.2D, #10.0 }
  *char v13 = _Q0;
  id v36 = [self tertiarySystemFillColor];
  uint64_t v37 = Color.init(_:)();
  sub_1000BE9E4((uint64_t)v13, (uint64_t)v17);
  *(void *)&v17[*(int *)(v15 + 60)] = v37;
  *(_WORD *)&v17[*(int *)(v15 + 64)] = 256;
  sub_10010654C((uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  uint64_t v38 = static Alignment.center.getter();
  uint64_t v40 = v39;
  uint64_t v41 = (uint64_t)&v25[*(int *)(v22 + 44)];
  sub_100008DD4((uint64_t)v17, v41, &qword_100202510);
  uint64_t v42 = (uint64_t *)(v41 + *(int *)(sub_1000063C0(&qword_1001FC7C0) + 36));
  uint64_t *v42 = v38;
  v42[1] = v40;
  sub_100008DD4((uint64_t)v20, (uint64_t)v25, &qword_100202E60);
  sub_10002784C((uint64_t)v17, &qword_100202510);
  uint64_t v43 = (uint64_t)v20;
  uint64_t v44 = (uint64_t)v27;
  sub_10002784C(v43, &qword_100202E60);
  sub_100026FD0((uint64_t)v25, (uint64_t)v27, &qword_100202E68);
  *(void *)uint64_t v5 = static VerticalAlignment.center.getter();
  *((void *)v5 + 1) = 0;
  v5[16] = 1;
  uint64_t v45 = sub_1000063C0(&qword_100202E78);
  sub_1001050AC(v62, (uint64_t)&v5[*(int *)(v45 + 44)]);
  if (qword_1001FAD08 != -1) {
    swift_once();
  }
  uint64_t v46 = qword_100212970;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v48 = (uint64_t)v63;
  *char v63 = 0;
  *(void *)(v48 + 8) = v46;
  uint64_t v49 = v66;
  char v50 = (uint64_t *)(v48 + *(int *)(v66 + 28));
  *char v50 = swift_getKeyPath();
  sub_1000063C0((uint64_t *)&unk_1001FB730);
  swift_storeEnumTagMultiPayload();
  uint64_t v51 = v48 + *(int *)(v49 + 32);
  *(void *)uint64_t v51 = KeyPath;
  *(unsigned char *)(v51 + 8) = 0;
  sub_100027F2C(&qword_100202E80, &qword_100202E50);
  sub_10010796C(&qword_1001FC888, (void (*)(uint64_t))type metadata accessor for PrimaryButtonStyle);
  long long v52 = v67;
  View.buttonStyle<A>(_:)();
  sub_10010654C(v48, type metadata accessor for PrimaryButtonStyle);
  sub_10002784C((uint64_t)v5, &qword_100202E50);
  uint64_t v54 = v68;
  uint64_t v53 = v69;
  long long v55 = v65;
  (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v65, v52, v69);
  sub_100008DD4(v44, (uint64_t)v25, &qword_100202E68);
  long long v56 = *(void (**)(char *, char *, uint64_t))(v54 + 16);
  v56(v52, v55, v53);
  uint64_t v57 = v70;
  sub_100008DD4((uint64_t)v25, v70, &qword_100202E68);
  uint64_t v58 = sub_1000063C0(&qword_100202E88);
  v56((char *)(v57 + *(int *)(v58 + 48)), v52, v53);
  uint64_t v59 = *(void (**)(char *, uint64_t))(v54 + 8);
  v59(v55, v53);
  sub_10002784C(v44, &qword_100202E68);
  v59(v52, v53);
  return sub_10002784C((uint64_t)v25, &qword_100202E68);
}

uint64_t sub_100104B90(uint64_t *a1)
{
  uint64_t v2 = a1[4];
  uint64_t v8 = a1[2];
  uint64_t v9 = v2;
  sub_1000063C0(&qword_100202EC8);
  Binding.wrappedValue.getter();
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  uint64_t v6 = *a1;
  char v7 = *((unsigned char *)a1 + 8);
  uint64_t v3 = swift_allocObject();
  long long v4 = *((_OWORD *)a1 + 1);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 32) = v4;
  *(void *)(v3 + 48) = a1[4];
  sub_10005CF60((uint64_t)&v6);
  sub_10005CF60((uint64_t)&v8);
  swift_retain();
  sub_1001065E8((uint64_t)&v9);
  sub_1000063C0(&qword_100202ED0);
  sub_1000063C0(&qword_100202ED8);
  sub_10010688C();
  sub_100027F2C(&qword_100202EF0, &qword_100202ED8);
  return ForEach<>.init(_:id:content:)();
}

uint64_t sub_100104D08@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, long long *a3@<X8>)
{
  uint64_t v6 = sub_1000063C0(&qword_1001FBA78);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)v33 - v10;
  uint64_t v12 = *a1;
  long long v62 = *(_OWORD *)(a2 + 16);
  uint64_t v63 = *(void *)(a2 + 32);
  long long v34 = *(_OWORD *)(a2 + 16);
  *(void *)&long long v35 = *(void *)(a2 + 32);
  sub_1000063C0(&qword_100202EC8);
  Binding.projectedValue.getter();
  *(void *)&v33[0] = v12;
  sub_100027F2C(&qword_100202EF8, &qword_100202F00);
  Binding<A>.subscript.getter();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  v64[2] = v36;
  v64[3] = v37;
  v64[4] = v38;
  char v65 = v39;
  v64[0] = v34;
  v64[1] = v35;
  type metadata accessor for CompositionModel(0);
  sub_10010796C((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  uint64_t v13 = Environment.init<A>(_:)();
  sub_10010695C(v13, v14 & 1, v64, (uint64_t)&v48);
  long long v34 = v62;
  *(void *)&long long v35 = v63;
  Binding.wrappedValue.getter();
  uint64_t v15 = *(void *)(*(void *)&v33[0] + 16);
  swift_bridgeObjectRelease();
  if (v12 >= v15 - 1)
  {
    uint64_t v17 = type metadata accessor for Divider();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v11, 1, 1, v17);
  }
  else
  {
    Divider.init()();
    uint64_t v16 = type metadata accessor for Divider();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v11, 0, 1, v16);
  }
  sub_100008DD4((uint64_t)v11, (uint64_t)v9, &qword_1001FBA78);
  long long v18 = v59;
  v33[10] = v58;
  v33[11] = v59;
  long long v19 = v60;
  long long v20 = v61;
  v33[12] = v60;
  v33[13] = v61;
  long long v21 = v54;
  long long v22 = v55;
  v33[6] = v54;
  v33[7] = v55;
  long long v23 = v56;
  long long v24 = v57;
  v33[8] = v56;
  v33[9] = v57;
  long long v25 = v50;
  long long v26 = v51;
  v33[2] = v50;
  v33[3] = v51;
  long long v27 = v52;
  long long v28 = v53;
  v33[4] = v52;
  v33[5] = v53;
  long long v29 = v48;
  long long v30 = v49;
  v33[0] = v48;
  v33[1] = v49;
  a3[10] = v58;
  a3[11] = v18;
  a3[12] = v19;
  a3[13] = v20;
  a3[6] = v21;
  a3[7] = v22;
  a3[8] = v23;
  a3[9] = v24;
  a3[2] = v25;
  a3[3] = v26;
  a3[4] = v27;
  a3[5] = v28;
  *a3 = v29;
  a3[1] = v30;
  uint64_t v31 = sub_1000063C0(&qword_100202F08);
  sub_100008DD4((uint64_t)v9, (uint64_t)a3 + *(int *)(v31 + 48), &qword_1001FBA78);
  sub_100106B70((uint64_t)v33);
  sub_10002784C((uint64_t)v11, &qword_1001FBA78);
  sub_10002784C((uint64_t)v9, &qword_1001FBA78);
  long long v44 = v58;
  long long v45 = v59;
  long long v46 = v60;
  long long v47 = v61;
  long long v40 = v54;
  long long v41 = v55;
  long long v42 = v56;
  long long v43 = v57;
  long long v36 = v50;
  long long v37 = v51;
  long long v38 = v52;
  long long v39 = v53;
  long long v34 = v48;
  long long v35 = v49;
  return sub_100106C88((uint64_t)&v34);
}

uint64_t sub_1001050AC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v47 = a2;
  uint64_t v3 = sub_1000063C0(&qword_100200DE8);
  uint64_t v45 = *(void *)(v3 - 8);
  uint64_t v46 = v3;
  __chkstk_darwin(v3);
  long long v41 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_1000063C0(&qword_100202E90) - 8;
  uint64_t v5 = __chkstk_darwin(v43);
  long long v42 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v44 = (uint64_t)&v39 - v7;
  uint64_t v40 = sub_1000063C0(&qword_1001FC6B8);
  uint64_t v49 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  uint64_t v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000063C0(&qword_100202E98);
  uint64_t v11 = v10 - 8;
  uint64_t v12 = __chkstk_darwin(v10);
  char v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v48 = (uint64_t)&v39 - v15;
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v16 = *a1;
  char v59 = *((unsigned char *)a1 + 8);
  uint64_t v17 = a1[2];
  uint64_t v39 = a1[3];
  uint64_t v18 = a1[4];
  uint64_t v57 = v17;
  uint64_t v58 = v16;
  uint64_t v56 = v18;
  uint64_t v19 = swift_allocObject();
  long long v20 = *((_OWORD *)a1 + 1);
  *(_OWORD *)(v19 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v19 + 32) = v20;
  *(void *)(v19 + 48) = a1[4];
  sub_10005CF60((uint64_t)&v58);
  sub_10005CF60((uint64_t)&v57);
  swift_retain();
  sub_1001065E8((uint64_t)&v56);
  Button<>.init(_:action:)();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v21 = v49;
  uint64_t v22 = v40;
  (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v14, v9, v40);
  long long v23 = &v14[*(int *)(v11 + 44)];
  long long v24 = v51;
  *(_OWORD *)long long v23 = v50;
  *((_OWORD *)v23 + 1) = v24;
  *((_OWORD *)v23 + 2) = v52;
  long long v25 = *(void (**)(char *, uint64_t))(v21 + 8);
  uint64_t v49 = v21 + 8;
  v25(v9, v22);
  sub_100026FD0((uint64_t)v14, v48, &qword_100202E98);
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v26 = swift_allocObject();
  long long v27 = *((_OWORD *)a1 + 1);
  *(_OWORD *)(v26 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v26 + 32) = v27;
  *(void *)(v26 + 48) = a1[4];
  sub_10005CF60((uint64_t)&v58);
  sub_10005CF60((uint64_t)&v57);
  swift_retain();
  sub_1001065E8((uint64_t)&v56);
  Button<>.init(_:action:)();
  sub_100027F2C((unint64_t *)&unk_1001FDDF0, &qword_1001FC6B8);
  long long v28 = v41;
  View.bold(_:)();
  v25(v9, v22);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v30 = v45;
  uint64_t v29 = v46;
  uint64_t v31 = (uint64_t)v42;
  (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v42, v28, v46);
  uint64_t v32 = (_OWORD *)(v31 + *(int *)(v43 + 44));
  long long v33 = v54;
  *uint64_t v32 = v53;
  v32[1] = v33;
  v32[2] = v55;
  (*(void (**)(char *, uint64_t))(v30 + 8))(v28, v29);
  uint64_t v34 = v44;
  sub_100026FD0(v31, v44, &qword_100202E90);
  uint64_t v35 = v48;
  sub_100008DD4(v48, (uint64_t)v14, &qword_100202E98);
  sub_100008DD4(v34, v31, &qword_100202E90);
  uint64_t v36 = v47;
  sub_100008DD4((uint64_t)v14, v47, &qword_100202E98);
  uint64_t v37 = sub_1000063C0(&qword_100202EA0);
  sub_100008DD4(v31, v36 + *(int *)(v37 + 48), &qword_100202E90);
  sub_10002784C(v34, &qword_100202E90);
  sub_10002784C(v35, &qword_100202E98);
  sub_10002784C(v31, &qword_100202E90);
  return sub_10002784C((uint64_t)v14, &qword_100202E98);
}

uint64_t sub_100105688(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[8] = a4;
  type metadata accessor for MainActor();
  v4[9] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[10] = v6;
  v4[11] = v5;
  return _swift_task_switch(sub_100105720, v6, v5);
}

uint64_t sub_100105720()
{
  char v1 = *(unsigned char *)(v0[8] + 8);
  uint64_t v2 = swift_retain();
  uint64_t v3 = sub_100020F7C(v2, v1);
  swift_release();
  swift_getKeyPath();
  v0[5] = v3;
  sub_10010796C((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v4 = *(void *)(v3 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__analyticsInstance);
  swift_retain();
  swift_release();
  if (v4)
  {
    uint64_t v5 = swift_retain();
    uint64_t v6 = sub_100020F7C(v5, v1);
    swift_release();
    swift_getKeyPath();
    v0[6] = v6;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v7 = (uint64_t *)(v6 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__slots);
    swift_beginAccess();
    uint64_t v8 = *v7;
    swift_bridgeObjectRetain();
    swift_release();
    sub_10000B6A0(0, v8);
    swift_bridgeObjectRelease();
    swift_release();
  }
  uint64_t v9 = swift_retain();
  uint64_t v10 = sub_100020F7C(v9, v1);
  swift_release();
  swift_getKeyPath();
  v0[7] = v10;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  int v11 = *(unsigned __int8 *)(v10 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__state);
  swift_release();
  if (v11)
  {
    if (v11 == 1)
    {
      uint64_t v12 = swift_retain();
      v0[12] = sub_100020F7C(v12, v1);
      swift_release();
      uint64_t v13 = (void *)swift_task_alloc();
      v0[13] = v13;
      *uint64_t v13 = v0;
      v13[1] = sub_100105AB0;
      return sub_10007D7CC(1);
    }
    else
    {
      swift_release();
      uint64_t v17 = (uint64_t (*)(void))v0[1];
      return v17();
    }
  }
  else
  {
    uint64_t v15 = swift_retain();
    v0[14] = sub_100020F7C(v15, v1);
    swift_release();
    uint64_t v16 = (void *)swift_task_alloc();
    v0[15] = v16;
    *uint64_t v16 = v0;
    v16[1] = sub_100105BF4;
    return sub_10007E628(1);
  }
}

uint64_t sub_100105AB0()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 88);
  uint64_t v3 = *(void *)(v1 + 80);
  return _swift_task_switch(sub_1001080DC, v3, v2);
}

uint64_t sub_100105BF4()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 88);
  uint64_t v3 = *(void *)(v1 + 80);
  return _swift_task_switch(sub_1001080DC, v3, v2);
}

uint64_t sub_100105D38(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1000063C0(&qword_1001FF820);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  type metadata accessor for MainActor();
  uint64_t v9 = *a1;
  char v18 = *((unsigned char *)a1 + 8);
  uint64_t v10 = a1[4];
  uint64_t v16 = a1[2];
  uint64_t v17 = v9;
  uint64_t v15 = v10;
  sub_10005CF60((uint64_t)&v17);
  sub_10005CF60((uint64_t)&v16);
  swift_retain();
  sub_1001065E8((uint64_t)&v15);
  uint64_t v11 = static MainActor.shared.getter();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v11;
  *(void *)(v12 + 24) = &protocol witness table for MainActor;
  long long v13 = *((_OWORD *)a1 + 1);
  *(_OWORD *)(v12 + 32) = *(_OWORD *)a1;
  *(_OWORD *)(v12 + 48) = v13;
  *(void *)(v12 + 64) = a1[4];
  sub_1001228D0((uint64_t)v7, a3, v12);
  return swift_release();
}

uint64_t sub_100105E90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[8] = a4;
  type metadata accessor for MainActor();
  v4[9] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[10] = v6;
  v4[11] = v5;
  return _swift_task_switch(sub_100105F28, v6, v5);
}

uint64_t sub_100105F28()
{
  char v1 = *(unsigned char *)(v0[8] + 8);
  uint64_t v2 = swift_retain();
  uint64_t v3 = sub_100020F7C(v2, v1);
  swift_release();
  swift_getKeyPath();
  v0[5] = v3;
  sub_10010796C((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v4 = *(void *)(v3 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__analyticsInstance);
  swift_retain();
  swift_release();
  if (v4)
  {
    uint64_t v5 = swift_retain();
    uint64_t v6 = sub_100020F7C(v5, v1);
    swift_release();
    swift_getKeyPath();
    v0[6] = v6;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v7 = (uint64_t *)(v6 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__slots);
    swift_beginAccess();
    uint64_t v8 = *v7;
    swift_bridgeObjectRetain();
    swift_release();
    sub_10000B6A0(1, v8);
    swift_bridgeObjectRelease();
    swift_release();
  }
  uint64_t v9 = swift_retain();
  uint64_t v10 = sub_100020F7C(v9, v1);
  swift_release();
  swift_getKeyPath();
  v0[7] = v10;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  int v11 = *(unsigned __int8 *)(v10 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__state);
  swift_release();
  if (v11)
  {
    if (v11 == 1)
    {
      uint64_t v12 = swift_retain();
      v0[12] = sub_100020F7C(v12, v1);
      swift_release();
      long long v13 = (void *)swift_task_alloc();
      v0[13] = v13;
      *long long v13 = v0;
      v13[1] = sub_1001062B8;
      return sub_10007D7CC(0);
    }
    else
    {
      swift_release();
      uint64_t v17 = (uint64_t (*)(void))v0[1];
      return v17();
    }
  }
  else
  {
    uint64_t v15 = swift_retain();
    v0[14] = sub_100020F7C(v15, v1);
    swift_release();
    uint64_t v16 = (void *)swift_task_alloc();
    v0[15] = v16;
    *uint64_t v16 = v0;
    v16[1] = sub_100105BF4;
    return sub_10007E628(0);
  }
}

uint64_t sub_1001062B8()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 88);
  uint64_t v3 = *(void *)(v1 + 80);
  return _swift_task_switch(sub_1001063FC, v3, v2);
}

uint64_t sub_1001063FC()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10010645C@<X0>(uint64_t a1@<X8>)
{
  long long v3 = *(_OWORD *)(v1 + 16);
  v6[0] = *(_OWORD *)v1;
  v6[1] = v3;
  uint64_t v7 = *(void *)(v1 + 32);
  *(void *)a1 = static HorizontalAlignment.center.getter();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  uint64_t v4 = sub_1000063C0(&qword_100202E28);
  return sub_100103E1C((uint64_t *)v6, a1 + *(int *)(v4 + 44));
}

uint64_t sub_1001064BC(uint64_t a1)
{
  return a1;
}

uint64_t sub_1001064FC(uint64_t a1)
{
  return a1;
}

uint64_t sub_10010654C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1001065B0()
{
  return sub_100105D38((uint64_t *)(v0 + 16), (uint64_t)&unk_1001EE920, (uint64_t)&unk_100202EC0);
}

uint64_t sub_1001065E8(uint64_t a1)
{
  return a1;
}

uint64_t sub_100106618()
{
  return sub_100105D38((uint64_t *)(v0 + 16), (uint64_t)&unk_1001EE8F8, (uint64_t)&unk_100202EB0);
}

uint64_t sub_100106654(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_100027204;
  return sub_100105E90(a1, v4, v5, v1 + 32);
}

uint64_t sub_100106724()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_10010677C(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_100027FEC;
  return sub_100105688(a1, v4, v5, v1 + 32);
}

uint64_t sub_100106834()
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100106884@<X0>(uint64_t *a1@<X0>, long long *a2@<X8>)
{
  return sub_100104D08(a1, v2 + 16, a2);
}

unint64_t sub_10010688C()
{
  unint64_t result = qword_100202EE0;
  if (!qword_100202EE0)
  {
    sub_100006C14(&qword_100202ED0);
    sub_100106908();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100202EE0);
  }
  return result;
}

unint64_t sub_100106908()
{
  unint64_t result = qword_100202EE8;
  if (!qword_100202EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100202EE8);
  }
  return result;
}

__n128 sub_10010695C@<Q0>(uint64_t a1@<X0>, char a2@<W1>, long long *a3@<X2>, uint64_t a4@<X8>)
{
  long long v12 = a3[1];
  long long v13 = *a3;
  uint64_t v10 = *((void *)a3 + 5);
  uint64_t v11 = *((void *)a3 + 4);
  char v9 = *((unsigned char *)a3 + 48);
  uint64_t v8 = *((void *)a3 + 7);
  char v15 = a3[5] & 1;
  State.init(wrappedValue:)();
  State.init(wrappedValue:)();
  State.init(wrappedValue:)();
  State.init(wrappedValue:)();
  sub_1000063C0((uint64_t *)&unk_1002048E0);
  State.init(wrappedValue:)();
  State.init(wrappedValue:)();
  sub_1000063C0(&qword_100202F10);
  State.init(wrappedValue:)();
  __n128 result = v16;
  *(void *)a4 = a1;
  *(unsigned char *)(a4 + 8) = a2 & 1;
  *(_OWORD *)(a4 + 16) = v13;
  *(_OWORD *)(a4 + 32) = v12;
  *(void *)(a4 + 48) = v11;
  *(void *)(a4 + 56) = v10;
  *(unsigned char *)(a4 + 64) = v9;
  *(void *)(a4 + 72) = v8;
  *(_OWORD *)(a4 + 80) = a3[4];
  *(unsigned char *)(a4 + 96) = v15;
  *(__n128 *)(a4 + 104) = v16;
  *(void *)(a4 + 120) = v17;
  *(unsigned char *)(a4 + 128) = v16.n128_u8[0];
  *(void *)(a4 + 136) = v16.n128_u64[1];
  *(unsigned char *)(a4 + 144) = v16.n128_u8[0];
  *(void *)(a4 + 152) = v16.n128_u64[1];
  *(unsigned char *)(a4 + 160) = v16.n128_u8[0];
  *(void *)(a4 + 168) = v16.n128_u64[1];
  *(__n128 *)(a4 + 176) = v16;
  *(unsigned char *)(a4 + 192) = v16.n128_u8[0];
  *(void *)(a4 + 200) = v16.n128_u64[1];
  *(__n128 *)(a4 + 208) = v16;
  return result;
}

uint64_t sub_100106B70(uint64_t a1)
{
  return a1;
}

uint64_t sub_100106C88(uint64_t a1)
{
  return a1;
}

uint64_t sub_100106D9C(uint64_t a1)
{
  return a1;
}

uint64_t sub_100106DDC(uint64_t a1)
{
  return a1;
}

uint64_t destroy for SlotTextField()
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_errorRelease();

  return swift_release();
}

uint64_t initializeWithCopy for SlotTextField(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v8 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v8;
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  uint64_t v9 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v9;
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  uint64_t v12 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v12;
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
  uint64_t v13 = *(void *)(a2 + 208);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_errorRetain();
  uint64_t v10 = *(void *)(a2 + 216);
  *(void *)(a1 + 208) = v13;
  *(void *)(a1 + 216) = v10;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for SlotTextField(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_retain();
  swift_release();
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  swift_retain();
  swift_release();
  uint64_t v5 = *(void *)(a2 + 208);
  swift_errorRetain();
  *(void *)(a1 + 208) = v5;
  swift_errorRelease();
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for SlotTextField(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  long long v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  __n128 result = *(__n128 *)(a2 + 160);
  long long v10 = *(_OWORD *)(a2 + 176);
  long long v11 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v11;
  *(__n128 *)(a1 + 160) = result;
  *(_OWORD *)(a1 + 176) = v10;
  return result;
}

uint64_t assignWithTake for SlotTextField(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  swift_release();
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_release();
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_release();
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  swift_release();
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_release();
  *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
  swift_release();
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  swift_errorRelease();
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for SlotTextField(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 224)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SlotTextField(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 216) = 0;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 224) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 224) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SlotTextField()
{
  return &type metadata for SlotTextField;
}

uint64_t sub_1001074F0()
{
  return sub_100027F2C(&qword_100202F18, &qword_100202F20);
}

uint64_t sub_10010752C()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_100107548()
{
  unint64_t result = qword_100202F58;
  if (!qword_100202F58)
  {
    sub_100006C14(&qword_100202F50);
    sub_100027F2C(&qword_100202F60, &qword_100202F68);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100202F58);
  }
  return result;
}

unint64_t sub_1001075E8()
{
  unint64_t result = qword_100202F70;
  if (!qword_100202F70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100202F70);
  }
  return result;
}

uint64_t sub_10010763C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1001076A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, __int16 a16, char a17)
{
  if (a17)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  else
  {
    __int16 v19 = a16 & 0x1FF;
    return sub_1001077B0(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, v19, SHIBYTE(v19));
  }
}

uint64_t sub_1001077B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, char a17)
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a17)
  {
    swift_release();
    swift_release();
    swift_release();
  }

  return swift_release();
}

uint64_t sub_10010789C(uint64_t a1, char a2)
{
  return sub_100102EF0(a1, a2 & 1, (_OWORD *)(v2 + 16));
}

uint64_t sub_1001078AC()
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_errorRelease();
  swift_release();

  return _swift_deallocObject(v0, 240, 7);
}

uint64_t sub_100107964()
{
  return sub_1001036D4((_OWORD *)(v0 + 16));
}

uint64_t sub_10010796C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001079B8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (uint64_t)(v1 + 4);
  uint64_t v7 = v1[32];
  long long v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *long long v8 = v2;
  v8[1] = sub_100027FEC;
  return sub_1001038AC(a1, v4, v5, v6, v7);
}

uint64_t sub_100107A88()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_errorRelease();
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 264, 7);
}

uint64_t sub_100107B50(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (uint64_t)(v1 + 4);
  uint64_t v7 = v1[32];
  long long v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *long long v8 = v2;
  v8[1] = sub_100027FEC;
  return sub_100103290(a1, v4, v5, v6, v7);
}

uint64_t sub_100107C14(uint64_t result)
{
  *(unsigned char *)(result + 122) = 1;
  return result;
}

unint64_t sub_100107C20()
{
  unint64_t result = qword_100202FB0;
  if (!qword_100202FB0)
  {
    sub_100006C14(&qword_100202FA8);
    sub_100107C9C();
    sub_100107CF0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100202FB0);
  }
  return result;
}

unint64_t sub_100107C9C()
{
  unint64_t result = qword_100202FB8;
  if (!qword_100202FB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100202FB8);
  }
  return result;
}

unint64_t sub_100107CF0()
{
  unint64_t result = qword_100202FC0;
  if (!qword_100202FC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100202FC0);
  }
  return result;
}

unint64_t sub_100107D44()
{
  unint64_t result = qword_100202FC8;
  if (!qword_100202FC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100202FC8);
  }
  return result;
}

uint64_t sub_100107D98(uint64_t result)
{
  *(unsigned char *)(result + 121) = 1;
  return result;
}

uint64_t sub_100107DA4(uint64_t a1)
{
  return a1;
}

uint64_t sub_100107E48(uint64_t result)
{
  *(unsigned char *)(result + 122) = 0;
  return result;
}

uint64_t sub_100107E50(uint64_t a1)
{
  return a1;
}

uint64_t sub_100107EF0(uint64_t result)
{
  *(unsigned char *)(result + 121) = 0;
  return result;
}

uint64_t sub_100107EF8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001080E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v35 = a7;
  uint64_t v36 = a8;
  uint64_t v17 = sub_1000063C0((uint64_t *)&unk_1001FAE40);
  __chkstk_darwin(v17 - 8);
  __int16 v19 = (char *)&v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CommonUIManager();
  sub_100113ADC((unint64_t *)&qword_1001FAE20, (void (*)(uint64_t))type metadata accessor for CommonUIManager);
  *(void *)a9 = Environment.init<A>(_:)();
  *(unsigned char *)(a9 + 8) = v20 & 1;
  LOBYTE(v37) = 0;
  State.init(wrappedValue:)();
  uint64_t v21 = v39;
  *(unsigned char *)(a9 + 24) = v38;
  *(void *)(a9 + 32) = v21;
  uint64_t v22 = type metadata accessor for FBKSEvaluation.Subject();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v19, 1, 1, v22);
  id v23 = objc_allocWithZone((Class)type metadata accessor for FBKEvaluationController());
  uint64_t v37 = FBKEvaluationController.init(subject:)();
  State.init(wrappedValue:)();
  uint64_t v24 = v39;
  *(void *)(a9 + 40) = v38;
  *(void *)(a9 + 48) = v24;
  long long v25 = (int *)type metadata accessor for RewritingView();
  uint64_t v26 = a9 + v25[9];
  *(unsigned char *)uint64_t v26 = FocusState.init<>()() & 1;
  *(void *)(v26 + 8) = v27;
  *(unsigned char *)(v26 + 16) = v28 & 1;
  uint64_t result = sub_100026FD0(a2, a9 + v25[8], &qword_1001FB438);
  *(void *)(a9 + 16) = a1;
  uint64_t v30 = a9 + v25[10];
  *(void *)uint64_t v30 = a3;
  *(void *)(v30 + 8) = a4;
  *(unsigned char *)(v30 + 16) = a5;
  uint64_t v31 = (void *)(a9 + v25[11]);
  uint64_t v32 = v35;
  void *v31 = a6;
  v31[1] = v32;
  long long v33 = (void *)(a9 + v25[12]);
  *long long v33 = v36;
  v33[1] = a10;
  return result;
}

uint64_t sub_100108308@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_100113ADC((unint64_t *)&unk_100201540, (void (*)(uint64_t))type metadata accessor for RewritingModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__state);
  return result;
}

uint64_t sub_1001083B8()
{
  return swift_release();
}

uint64_t property wrapper backing initializer of RewritingView.feedbackController()
{
  type metadata accessor for FBKEvaluationController();
  State.init(wrappedValue:)();
  return v1;
}

uint64_t sub_1001084C4@<X0>(uint64_t a1@<X2>, unsigned char *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for RewritingView();
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v7 = sub_10002F3E0();
  sub_100112F04(a1, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for RewritingView);
  if (v7)
  {
    char v8 = 0;
  }
  else
  {
    uint64_t v9 = *((void *)v6 + 2);
    swift_getKeyPath();
    v11[1] = v9;
    sub_100113ADC((unint64_t *)&unk_100201540, (void (*)(uint64_t))type metadata accessor for RewritingModel);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    char v8 = *(unsigned char *)(v9 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__state) ^ 1;
  }
  uint64_t result = sub_1001135DC((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for RewritingView);
  *a2 = v8 & 1;
  return result;
}

uint64_t RewritingView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v102 = a1;
  uint64_t v3 = type metadata accessor for ContainerBackgroundPlacement();
  uint64_t v100 = *(void *)(v3 - 8);
  uint64_t v101 = v3;
  __chkstk_darwin(v3);
  char v99 = (char *)&v76 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for RewritingView();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v86 = v5 - 8;
  uint64_t v97 = v6;
  uint64_t v96 = *(void *)(v6 + 64);
  __chkstk_darwin(v5 - 8);
  uint64_t v94 = (uint64_t)&v76 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = sub_1000063C0(&qword_1001FB438);
  __chkstk_darwin(v93);
  uint64_t v92 = (char *)&v76 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for NavigationBarItem.TitleDisplayMode();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v76 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000063C0(&qword_100202FD8);
  __chkstk_darwin(v13);
  char v15 = (uint64_t *)((char *)&v76 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v78 = sub_1000063C0(&qword_100202FE0);
  uint64_t v80 = *(void *)(v78 - 8);
  __chkstk_darwin(v78);
  uint64_t v17 = (char *)&v76 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = sub_1000063C0(&qword_100202FE8);
  uint64_t v83 = *(void *)(v82 - 8);
  __chkstk_darwin(v82);
  uint64_t v76 = (char *)&v76 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Strong = sub_1000063C0(&qword_1001FB750);
  uint64_t v84 = *(void *)(Strong - 8);
  __chkstk_darwin(Strong);
  char v77 = (char *)&v76 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1000063C0(&qword_1001FB758);
  __chkstk_darwin(v20 - 8);
  uint64_t v79 = (uint64_t)&v76 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = sub_1000063C0(&qword_100202FF0) - 8;
  __chkstk_darwin(v81);
  uint64_t v103 = (uint64_t)&v76 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = sub_1000063C0(&qword_100202FF8) - 8;
  __chkstk_darwin(v88);
  long long v87 = (char *)&v76 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = sub_1000063C0(&qword_100203000);
  __chkstk_darwin(v91);
  uint64_t v89 = (uint64_t)&v76 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = sub_1000063C0(&qword_100203008);
  uint64_t v95 = *(void *)(v98 - 8);
  __chkstk_darwin(v98);
  long long v90 = (char *)&v76 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t *v15 = static Alignment.center.getter();
  v15[1] = v26;
  uint64_t v27 = sub_1000063C0(&qword_100203010);
  sub_100109254(v1, (uint64_t)v15 + *(int *)(v27 + 44));
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, enum case for NavigationBarItem.TitleDisplayMode.inline(_:), v9);
  uint64_t v28 = sub_100027F2C(&qword_100203018, &qword_100202FD8);
  View.navigationBarTitleDisplayMode(_:)();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  sub_10002784C((uint64_t)v15, &qword_100202FD8);
  uint64_t v104 = v13;
  uint64_t v105 = v28;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v30 = v76;
  uint64_t v31 = v78;
  View.navigationBarBackButtonHidden(_:)();
  (*(void (**)(char *, uint64_t))(v80 + 8))(v17, v31);
  uint64_t v32 = v86;
  uint64_t v33 = v1 + *(int *)(v86 + 44);
  uint64_t v34 = *(void *)(v33 + 8);
  char v35 = *(unsigned char *)(v33 + 16);
  LOBYTE(v104) = *(unsigned char *)v33;
  uint64_t v105 = v34;
  char v106 = v35;
  sub_1000063C0(&qword_1001FB608);
  FocusState.wrappedValue.getter();
  uint64_t v104 = v31;
  uint64_t v105 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  uint64_t v36 = v77;
  uint64_t v37 = v82;
  View.navigationBarHidden(_:)();
  (*(void (**)(char *, uint64_t))(v83 + 8))(v30, v37);
  uint64_t v38 = static Alignment.center.getter();
  uint64_t v39 = v79;
  double v41 = sub_10001A014(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v79, 0.0, 1, 0.0, 1, v38, v40);
  (*(void (**)(char *, uint64_t, double))(v84 + 8))(v36, Strong, v41);
  uint64_t v42 = *(void *)(v33 + 8);
  char v43 = *(unsigned char *)(v33 + 16);
  LOBYTE(v104) = *(unsigned char *)v33;
  uint64_t v105 = v42;
  char v106 = v43;
  FocusState.wrappedValue.getter();
  char v44 = v107;
  uint64_t v45 = v103;
  sub_100008DD4(v39, v103, &qword_1001FB758);
  *(unsigned char *)(v45 + *(int *)(v81 + 44)) = v44;
  sub_10002784C(v39, &qword_1001FB758);
  uint64_t v46 = v2;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  uint64_t v47 = *(void *)(v33 + 8);
  char v48 = *(unsigned char *)(v33 + 16);
  LOBYTE(v104) = *(unsigned char *)v33;
  uint64_t v105 = v47;
  char v106 = v48;
  FocusState.wrappedValue.getter();
  LOBYTE(v33) = v107;
  uint64_t v49 = (uint64_t)v92;
  Binding.projectedValue.getter();
  uint64_t v50 = v94;
  sub_100112F04(v46, v94, (uint64_t (*)(void))type metadata accessor for RewritingView);
  type metadata accessor for MainActor();
  uint64_t v51 = static MainActor.shared.getter();
  unint64_t v52 = (*(unsigned __int8 *)(v97 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v97 + 80);
  uint64_t v53 = swift_allocObject();
  *(void *)(v53 + 16) = v51;
  *(void *)(v53 + 24) = &protocol witness table for MainActor;
  sub_10010957C(v50, v53 + v52);
  uint64_t v54 = static MainActor.shared.getter();
  uint64_t v55 = swift_allocObject();
  *(void *)(v55 + 16) = v54;
  *(void *)(v55 + 24) = &protocol witness table for MainActor;
  Binding.init(get:set:)();
  uint64_t v56 = (uint64_t)v87;
  sub_1000EF1D8((v33 & 1) == 0, 0, v49, v104, v105, v106, (uint64_t)&v87[*(int *)(v88 + 44)]);
  uint64_t v57 = v56;
  sub_100026FD0(v103, v56, &qword_100202FF0);
  uint64_t v58 = v46;
  uint64_t v59 = v46 + *(int *)(v32 + 48);
  uint64_t v60 = *(void *)v59;
  uint64_t v61 = *(void *)(v59 + 8);
  LOBYTE(v59) = *(unsigned char *)(v59 + 16);
  uint64_t v104 = v60;
  uint64_t v105 = v61;
  char v106 = v59;
  sub_1000063C0(&qword_100201898);
  Binding.wrappedValue.getter();
  LOBYTE(v46) = v107;
  uint64_t v62 = static Alignment.center.getter();
  uint64_t v64 = v63;
  uint64_t v65 = v89;
  sub_100008DD4(v57, v89, &qword_100202FF8);
  uint64_t v66 = v65 + *(int *)(v91 + 36);
  *(unsigned char *)uint64_t v66 = 1;
  *(unsigned char *)(v66 + 1) = v46;
  *(void *)(v66 + 8) = v62;
  *(void *)(v66 + 16) = v64;
  sub_10002784C(v57, &qword_100202FF8);
  uint64_t v104 = static Color.clear.getter();
  uint64_t v67 = v99;
  static ContainerBackgroundPlacement.navigation.getter();
  sub_10010968C();
  uint64_t v68 = v90;
  View.containerBackground<A>(_:for:)();
  (*(void (**)(char *, uint64_t))(v100 + 8))(v67, v101);
  swift_release();
  sub_10002784C(v65, &qword_100203000);
  uint64_t v69 = static Animation.spring(response:dampingFraction:blendDuration:)();
  uint64_t v70 = *(void *)(v58 + 16);
  swift_getKeyPath();
  uint64_t v104 = v70;
  sub_100113ADC((unint64_t *)&unk_100201540, (void (*)(uint64_t))type metadata accessor for RewritingModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  LOBYTE(v64) = *(unsigned char *)(v70 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__state);
  uint64_t v71 = v95;
  uint64_t v72 = v102;
  uint64_t v73 = v98;
  (*(void (**)(uint64_t, char *, uint64_t))(v95 + 16))(v102, v68, v98);
  uint64_t v74 = v72 + *(int *)(sub_1000063C0(&qword_100203048) + 36);
  *(void *)uint64_t v74 = v69;
  *(unsigned char *)(v74 + 8) = v64;
  return (*(uint64_t (**)(char *, uint64_t))(v71 + 8))(v68, v73);
}

uint64_t type metadata accessor for RewritingView()
{
  uint64_t result = qword_1002030A8;
  if (!qword_1002030A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100109254@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v21[0] = a2;
  uint64_t v3 = sub_1000063C0(&qword_100203140);
  __chkstk_darwin(v3);
  uint64_t v5 = (void *)((char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_1000063C0(&qword_100203148);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000063C0(&qword_100203150);
  __chkstk_darwin(v9);
  uint64_t v11 = (void *)((char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = *(void *)(a1 + 16);
  swift_getKeyPath();
  v21[1] = v12;
  sub_100113ADC((unint64_t *)&unk_100201540, (void (*)(uint64_t))type metadata accessor for RewritingModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  char v13 = *(unsigned char *)(v12 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__state);
  uint64_t v14 = static Alignment.center.getter();
  if (v13)
  {
    *uint64_t v5 = v14;
    v5[1] = v15;
    uint64_t v16 = sub_1000063C0(&qword_100203158);
    sub_10010FD6C(a1, (uint64_t)v5 + *(int *)(v16 + 44));
    uint64_t v17 = &qword_100203140;
    sub_100008DD4((uint64_t)v5, (uint64_t)v8, &qword_100203140);
    swift_storeEnumTagMultiPayload();
    sub_100027F2C(&qword_100203160, &qword_100203150);
    sub_100027F2C(&qword_100203168, &qword_100203140);
    _ConditionalContent<>.init(storage:)();
    uint64_t v18 = (uint64_t)v5;
  }
  else
  {
    *uint64_t v11 = v14;
    v11[1] = v15;
    uint64_t v19 = sub_1000063C0(&qword_100203170);
    sub_100109A18(a1, (uint64_t *)((char *)v11 + *(int *)(v19 + 44)));
    uint64_t v17 = &qword_100203150;
    sub_100008DD4((uint64_t)v11, (uint64_t)v8, &qword_100203150);
    swift_storeEnumTagMultiPayload();
    sub_100027F2C(&qword_100203160, &qword_100203150);
    sub_100027F2C(&qword_100203168, &qword_100203140);
    _ConditionalContent<>.init(storage:)();
    uint64_t v18 = (uint64_t)v11;
  }
  return sub_10002784C(v18, v17);
}

uint64_t sub_10010957C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RewritingView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001095E0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for RewritingView() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_1001084C4(v4, a1);
}

uint64_t sub_100109654()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

unint64_t sub_10010968C()
{
  unint64_t result = qword_100203020;
  if (!qword_100203020)
  {
    sub_100006C14(&qword_100203000);
    sub_10010972C();
    sub_100027F2C(&qword_1001FB5E0, &qword_1001FB5E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100203020);
  }
  return result;
}

unint64_t sub_10010972C()
{
  unint64_t result = qword_100203028;
  if (!qword_100203028)
  {
    sub_100006C14(&qword_100202FF8);
    sub_1001097D8();
    sub_100113ADC(&qword_1001FB910, (void (*)(uint64_t))type metadata accessor for PreferredContentSizeModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100203028);
  }
  return result;
}

unint64_t sub_1001097D8()
{
  unint64_t result = qword_100203030;
  if (!qword_100203030)
  {
    sub_100006C14(&qword_100202FF0);
    sub_100109854();
    sub_1001099A0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100203030);
  }
  return result;
}

unint64_t sub_100109854()
{
  unint64_t result = qword_100203038;
  if (!qword_100203038)
  {
    sub_100006C14(&qword_1001FB758);
    sub_100006C14(&qword_100202FE8);
    sub_100006C14(&qword_100202FE0);
    sub_100006C14(&qword_100202FD8);
    sub_100027F2C(&qword_100203018, &qword_100202FD8);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100203038);
  }
  return result;
}

unint64_t sub_1001099A0()
{
  unint64_t result = qword_100203040;
  if (!qword_100203040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100203040);
  }
  return result;
}

uint64_t sub_1001099FC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100109A18@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for RewritingView();
  uint64_t v84 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v85 = v5;
  uint64_t v6 = (char *)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = sub_1000063C0(&qword_100203178);
  __chkstk_darwin(v71);
  uint64_t v8 = (char *)&v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = sub_1000063C0(&qword_100203180);
  unint64_t v75 = *(void *)(v76 - 8);
  __chkstk_darwin(v76);
  uint64_t v10 = (char *)&v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = sub_1000063C0(&qword_100203188);
  uint64_t v73 = *(void *)(v74 - 8);
  __chkstk_darwin(v74);
  uint64_t v72 = (char *)&v71 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = sub_1000063C0(&qword_100203190);
  __chkstk_darwin(v78);
  char v77 = (uint64_t (*)())((char *)&v71 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v86 = sub_1000063C0(&qword_100203198);
  uint64_t v80 = *(void *)(v86 - 8);
  __chkstk_darwin(v86);
  uint64_t v79 = (char *)&v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = sub_1000063C0(&qword_1002031A0);
  uint64_t v89 = *(void *)(v91 - 8);
  __chkstk_darwin(v91);
  long long v87 = (char *)&v71 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1000063C0(&qword_1002031A8);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v92 = (char *)&v71 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v83 = (char *)&v71 - v20;
  __chkstk_darwin(v19);
  uint64_t v88 = (char *)&v71 - v21;
  uint64_t v90 = static Color.clear.getter();
  int v82 = static Edge.Set.vertical.getter();
  uint64_t v81 = static SafeAreaRegions.all.getter();
  *(void *)uint64_t v8 = static HorizontalAlignment.center.getter();
  *((void *)v8 + 1) = 0x4024000000000000;
  v8[16] = 0;
  uint64_t v22 = sub_1000063C0(&qword_1002031B0);
  sub_10010A5E8(a1, (uint64_t)&v8[*(int *)(v22 + 44)]);
  uint64_t v23 = *(void *)(a1 + 16);
  char v24 = sub_10002F3E0();
  uint64_t v96 = v6;
  uint64_t v97 = a2;
  uint64_t v94 = v15;
  uint64_t v95 = v4;
  uint64_t v93 = v16;
  if (v24)
  {
    uint64_t v25 = (void *)a1;
    uint64_t v26 = 0;
    unint64_t v27 = 0xE000000000000000;
LABEL_10:
    uint64_t v98 = v26;
    char v99 = (void *)v27;
    uint64_t v34 = sub_100027F2C(&qword_1002031B8, &qword_100203178);
    unint64_t v35 = sub_10002DF54();
    uint64_t v36 = v71;
    View.navigationTitle<A>(_:)();
    swift_bridgeObjectRelease();
    sub_10002784C((uint64_t)v8, &qword_100203178);
    uint64_t v37 = v25[6];
    uint64_t v102 = v25[5];
    uint64_t v103 = v37;
    sub_1000063C0(&qword_1001FC678);
    State.projectedValue.getter();
    uint64_t v38 = v100;
    uint64_t v98 = v36;
    char v99 = &type metadata for String;
    uint64_t v100 = (void *)v34;
    uint64_t v101 = (void *)v35;
    swift_getOpaqueTypeConformance2();
    uint64_t v39 = v72;
    uint64_t v40 = v76;
    View.inlineFeedback(controller:completion:)();

    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v75 + 8))(v10, v40);
    uint64_t v41 = v73;
    uint64_t v42 = v77;
    uint64_t v43 = v74;
    (*(void (**)(uint64_t (*)(), char *, uint64_t))(v73 + 16))(v77, v39, v74);
    uint64_t v44 = (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v39, v43);
    __chkstk_darwin(v44);
    *(&v71 - 2) = (uint64_t)v25;
    uint64_t v76 = sub_1000063C0(&qword_1002031C0);
    unint64_t v75 = sub_1001129A4();
    uint64_t v45 = sub_100027F2C(&qword_1002031D0, &qword_1002031C0);
    uint64_t v46 = v79;
    uint64_t v47 = v78;
    View.toolbar<A>(content:)();
    sub_10002784C((uint64_t)v42, &qword_100203190);
    uint64_t v48 = v25[2];
    swift_getKeyPath();
    uint64_t v98 = v48;
    sub_100113ADC((unint64_t *)&qword_1001FD2A0, (void (*)(uint64_t))type metadata accessor for ToolModel);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    LOBYTE(v102) = *(unsigned char *)(v48 + 88);
    char v77 = type metadata accessor for RewritingView;
    uint64_t v49 = (uint64_t)v96;
    sub_100112F04((uint64_t)v25, (uint64_t)v96, (uint64_t (*)(void))type metadata accessor for RewritingView);
    unint64_t v50 = (*(unsigned __int8 *)(v84 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v84 + 80);
    v85 += v50;
    uint64_t v51 = swift_allocObject();
    sub_10010957C(v49, v51 + v50);
    uint64_t v98 = v47;
    char v99 = (void *)v76;
    uint64_t v100 = (void *)v75;
    uint64_t v101 = (void *)v45;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    uint64_t v53 = v86;
    uint64_t v54 = v87;
    View.onChange<A>(of:initial:_:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v80 + 8))(v46, v53);
    uint64_t v55 = (char *)v25 + *(int *)(v95 + 36);
    char v56 = *v55;
    uint64_t v57 = (void *)*((void *)v55 + 1);
    LOBYTE(v55) = v55[16];
    LOBYTE(v98) = v56;
    char v99 = v57;
    LOBYTE(v100) = (_BYTE)v55;
    sub_1000063C0(&qword_1001FB608);
    FocusState.wrappedValue.getter();
    sub_100112F04((uint64_t)v25, v49, (uint64_t (*)(void))v77);
    uint64_t v58 = swift_allocObject();
    sub_10010957C(v49, v58 + v50);
    uint64_t v98 = v53;
    char v99 = &type metadata for Bool;
    uint64_t v100 = (void *)OpaqueTypeConformance2;
    uint64_t v101 = &protocol witness table for Bool;
    swift_getOpaqueTypeConformance2();
    uint64_t v59 = v83;
    uint64_t v60 = v91;
    View.onChange<A>(of:initial:_:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v89 + 8))(v54, v60);
    uint64_t v61 = v93;
    uint64_t v62 = v88;
    uint64_t v63 = v59;
    uint64_t v64 = v94;
    (*(void (**)(char *, char *, uint64_t))(v93 + 32))(v88, v63, v94);
    uint64_t v65 = *(void (**)(char *, char *, uint64_t))(v61 + 16);
    uint64_t v66 = v92;
    v65(v92, v62, v64);
    uint64_t v67 = v97;
    uint64_t v68 = v81;
    uint64_t *v97 = v90;
    v67[1] = v68;
    *((unsigned char *)v67 + 16) = v82;
    uint64_t v69 = sub_1000063C0(&qword_1002031D8);
    v65((char *)v67 + *(int *)(v69 + 48), v66, v64);
    uint64_t v70 = *(void (**)(char *, uint64_t))(v61 + 8);
    swift_retain();
    v70(v62, v64);
    v70(v66, v64);
    return swift_release();
  }
  swift_getKeyPath();
  uint64_t v98 = v23;
  sub_100113ADC((unint64_t *)&qword_1001FD2A0, (void (*)(uint64_t))type metadata accessor for ToolModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  int v29 = *(unsigned __int8 *)(v23 + 72);
  if (v29 != 255)
  {
    uint64_t v30 = *(void *)(v23 + 48);
    uint64_t v26 = *(void *)(v23 + 56);
    uint64_t v31 = *(void *)(v23 + 64);
    if (!v29 && v30 == 5)
    {
      if (v31)
      {
        uint64_t v25 = (void *)a1;
        sub_10000ED40(v30, v26, v31, 0);
        unint64_t v27 = v31;
        goto LABEL_10;
      }
      sub_10000ED40(v30, v26, 0, 0);
    }
    uint64_t v25 = (void *)a1;
    sub_10000ED40(v30, v26, v31, v29);
    uint64_t v32 = sub_1000D5160();
    unint64_t v27 = v33;
    sub_100024DB4(v30, v26, v31, v29);
    uint64_t v26 = v32;
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

uint64_t sub_10010A5E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v191 = a2;
  uint64_t v3 = sub_1000063C0(&qword_100203230);
  __chkstk_darwin(v3);
  uint64_t v184 = (char *)&v154 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000063C0(&qword_100203238);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v154 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000063C0(&qword_100203240);
  __chkstk_darwin(v8 - 8);
  uint64_t v181 = (uint64_t)&v154 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v177 = sub_1000063C0(&qword_100203248);
  uint64_t v10 = __chkstk_darwin(v177);
  uint64_t v178 = (uint64_t)&v154 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v176 = (uint64_t)&v154 - v13;
  __chkstk_darwin(v12);
  uint64_t v182 = (uint64_t)&v154 - v14;
  uint64_t v15 = sub_1000063C0(&qword_100203250);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  uint64_t v183 = (uint64_t)&v154 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v186 = (char *)&v154 - v18;
  uint64_t v19 = type metadata accessor for Divider();
  unint64_t v167 = *(void *)(v19 - 8);
  uint64_t v168 = v19;
  __chkstk_darwin(v19);
  uint64_t v169 = (char *)&v154 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1000063C0(&qword_100201C10);
  uint64_t v170 = *(void *)(v21 - 8);
  uint64_t v171 = v21;
  uint64_t v22 = __chkstk_darwin(v21);
  char v24 = (char *)&v154 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v166 = (uint64_t)&v154 - v25;
  uint64_t v26 = sub_1000063C0(&qword_100203258);
  uint64_t v27 = __chkstk_darwin(v26 - 8);
  uint64_t v173 = (uint64_t)&v154 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  unint64_t v172 = (unint64_t)&v154 - v29;
  uint64_t v30 = type metadata accessor for RewritingView();
  uint64_t v31 = __chkstk_darwin(v30);
  uint64_t v179 = (uint64_t)&v154 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = __chkstk_darwin(v31);
  BOOL v180 = (char *)&v154 - v34;
  __chkstk_darwin(v33);
  uint64_t v36 = (char *)&v154 - v35;
  uint64_t v37 = sub_1000063C0(&qword_100203260);
  uint64_t v38 = __chkstk_darwin(v37 - 8);
  uint64_t v185 = (uint64_t *)((char *)&v154 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v38);
  uint64_t v187 = (uint64_t)&v154 - v40;
  uint64_t v188 = sub_1000063C0(&qword_100203268);
  __chkstk_darwin(v188);
  uint64_t v190 = (uint64_t)&v154 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v189 = type metadata accessor for InputWarningView(0);
  __chkstk_darwin(v189);
  uint64_t v43 = (char *)&v154 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = *(unsigned char **)(a1 + 16);
  if (sub_10002F3E0())
  {
    if (qword_1001FAD68 != -1) {
      swift_once();
    }
    uint64_t v45 = type metadata accessor for LocalizedStringResource();
    uint64_t v46 = sub_10000EBE8(v45, (uint64_t)qword_100212A10);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v45 - 8) + 16))(v43, v46, v45);
    sub_100112F04((uint64_t)v43, v190, type metadata accessor for InputWarningView);
    swift_storeEnumTagMultiPayload();
    sub_100113ADC(&qword_100200B78, (void (*)(uint64_t))type metadata accessor for InputWarningView);
    sub_100027F2C(&qword_100203298, &qword_100203230);
    _ConditionalContent<>.init(storage:)();
    return sub_1001135DC((uint64_t)v43, type metadata accessor for InputWarningView);
  }
  else
  {
    uint64_t v175 = v3;
    uint64_t v48 = *(int *)(v30 + 36);
    uint64_t v164 = (void *)a1;
    uint64_t v49 = a1 + v48;
    uint64_t v50 = *(void *)(a1 + v48 + 8);
    unsigned __int8 v51 = *(unsigned char *)(a1 + v48 + 16);
    LOBYTE(v226) = *(unsigned char *)(a1 + v48);
    uint64_t v227 = v50;
    unsigned __int8 v228 = v51;
    uint64_t v174 = sub_1000063C0(&qword_1001FB608);
    FocusState.wrappedValue.getter();
    int v165 = v214;
    if (v214)
    {
      BOOL v163 = 0;
    }
    else
    {
      swift_getKeyPath();
      uint64_t v226 = v44;
      sub_100113ADC((unint64_t *)&qword_1001FD2A0, (void (*)(uint64_t))type metadata accessor for ToolModel);
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      BOOL v163 = (v44[112] & 2) == 0;
    }
    swift_getKeyPath();
    uint64_t v226 = v44;
    uint64_t v162 = sub_100113ADC((unint64_t *)&qword_1001FD2A0, (void (*)(uint64_t))type metadata accessor for ToolModel);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    if (!v44[72]
      && v44[48] == 5
      && (uint64_t v229 = &type metadata for WritingTools,
          unint64_t v230 = sub_1000268F4(),
          LOBYTE(v226) = 4,
          char v52 = isFeatureEnabled(_:)(),
          sub_100027DBC((uint64_t)&v226),
          (v52 & 1) != 0))
    {
      uint64_t v53 = *(void *)(v49 + 8);
      char v54 = *(unsigned char *)(v49 + 16);
      LOBYTE(v214) = *(unsigned char *)v49;
      *(void *)uint64_t v215 = v53;
      v215[8] = v54;
      FocusState.projectedValue.getter();
      uint64_t v160 = v227;
      uint64_t v161 = (uint64_t)v226;
      int v157 = v228;
      uint64_t v55 = (void *)((char *)v164 + *(int *)(v30 + 44));
      uint64_t v56 = v55[1];
      uint64_t v156 = *v55;
      uint64_t v57 = v164[2];
      swift_getKeyPath();
      uint64_t v226 = (unsigned char *)v57;
      uint64_t KeyPath = sub_100113ADC((unint64_t *)&unk_100201540, (void (*)(uint64_t))type metadata accessor for RewritingModel);
      uint64_t v159 = v56;
      swift_retain();
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      uint64_t v58 = *(void *)(v57 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__analyticsInstance);
      uint64_t v59 = (uint64_t)v164;
      uint64_t v60 = v164[2];
      swift_getKeyPath();
      uint64_t v226 = (unsigned char *)v60;
      uint64_t v158 = v58;
      swift_retain();
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      uint64_t v61 = *(void *)(v60 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__session);
      sub_100112F04(v59, (uint64_t)v36, (uint64_t (*)(void))type metadata accessor for RewritingView);
      if (v61)
      {
        uint64_t v62 = *((void *)v36 + 2);
        swift_getKeyPath();
        uint64_t v226 = (unsigned char *)v62;
        ObservationRegistrar.access<A, B>(_:keyPath:)();
        swift_release();
        char v63 = *(unsigned char *)(v62 + 88);
      }
      else
      {
        char v63 = 1;
      }
      uint64_t v124 = v173;
      sub_1001135DC((uint64_t)v36, (uint64_t (*)(void))type metadata accessor for RewritingView);
      uint64_t KeyPath = swift_getKeyPath();
      uint64_t v154 = swift_allocObject();
      *(unsigned char *)(v154 + 16) = v63;
      uint64_t v125 = *(void *)(v49 + 8);
      unsigned __int8 v126 = *(unsigned char *)(v49 + 16);
      LOBYTE(v226) = *(unsigned char *)v49;
      uint64_t v227 = v125;
      unsigned __int8 v228 = v126;
      FocusState.wrappedValue.getter();
      uint64_t v127 = 1;
      if ((v214 & 1) == 0)
      {
        Divider.init()();
        unsigned __int8 v128 = static Edge.Set.top.getter();
        unsigned __int8 v129 = static Edge.Set.bottom.getter();
        char v130 = Edge.Set.init(rawValue:)();
        Edge.Set.init(rawValue:)();
        if (Edge.Set.init(rawValue:)() != v128) {
          char v130 = Edge.Set.init(rawValue:)();
        }
        Edge.Set.init(rawValue:)();
        if (Edge.Set.init(rawValue:)() != v129) {
          char v130 = Edge.Set.init(rawValue:)();
        }
        EdgeInsets.init(_all:)();
        uint64_t v132 = v131;
        uint64_t v134 = v133;
        uint64_t v136 = v135;
        uint64_t v138 = v137;
        unint64_t v140 = v167;
        uint64_t v139 = v168;
        int v141 = v169;
        (*(void (**)(char *, char *, uint64_t))(v167 + 16))(v24, v169, v168);
        id v142 = &v24[*(int *)(v171 + 36)];
        *id v142 = v130;
        *((void *)v142 + 1) = v132;
        *((void *)v142 + 2) = v134;
        *((void *)v142 + 3) = v136;
        *((void *)v142 + 4) = v138;
        v142[40] = 0;
        (*(void (**)(char *, uint64_t))(v140 + 8))(v141, v139);
        uint64_t v143 = (uint64_t)v24;
        uint64_t v144 = v166;
        sub_100026FD0(v143, v166, &qword_100201C10);
        sub_100026FD0(v144, v172, &qword_100201C10);
        uint64_t v127 = 0;
      }
      uint64_t v145 = v172;
      (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v170 + 56))(v172, v127, 1, v171);
      sub_100008DD4(v145, v124, &qword_100203258);
      id v146 = v185;
      uint64_t v147 = v160;
      *uint64_t v185 = v161;
      v146[1] = v147;
      *((unsigned char *)v146 + 16) = v157;
      *((unsigned char *)v146 + 17) = 1;
      uint64_t v148 = KeyPath;
      uint64_t v150 = v158;
      uint64_t v149 = v159;
      v146[3] = v156;
      v146[4] = v149;
      v146[5] = v150;
      v146[6] = v148;
      uint64_t v151 = v154;
      v146[7] = (uint64_t)sub_100040414;
      v146[8] = v151;
      uint64_t v152 = sub_1000063C0(&qword_1002032A0);
      sub_100008DD4(v124, (uint64_t)v146 + *(int *)(v152 + 48), &qword_100203258);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      sub_10002784C(v145, &qword_100203258);
      sub_10002784C(v173, &qword_100203258);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v153 = sub_1000063C0(&qword_100203270);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v153 - 8) + 56))(v146, 0, 1, v153);
      uint64_t v65 = v187;
      sub_100026FD0((uint64_t)v146, v187, &qword_100203260);
    }
    else
    {
      uint64_t v64 = sub_1000063C0(&qword_100203270);
      uint64_t v65 = v187;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v64 - 8) + 56))(v187, 1, 1, v64);
    }
    uint64_t v66 = *(void *)(v49 + 8);
    unsigned __int8 v67 = *(unsigned char *)(v49 + 16);
    LOBYTE(v226) = *(unsigned char *)v49;
    uint64_t v227 = v66;
    unsigned __int8 v228 = v67;
    FocusState.wrappedValue.getter();
    uint64_t v68 = (uint64_t)v186;
    uint64_t v69 = (uint64_t)v180;
    if (v214)
    {
      uint64_t v70 = sub_1000063C0(&qword_100203288);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v70 - 8) + 56))(v68, 1, 1, v70);
      uint64_t v71 = v183;
    }
    else
    {
      *(void *)uint64_t v7 = static VerticalAlignment.center.getter();
      *((void *)v7 + 1) = 0;
      char v72 = 1;
      unsigned char v7[16] = 1;
      uint64_t v73 = sub_1000063C0(&qword_100203278);
      uint64_t v74 = (uint64_t)v164;
      sub_10010BDF8((uint64_t)v164, (uint64_t)&v7[*(int *)(v73 + 44)]);
      sub_100008DD4((uint64_t)v7, v181, &qword_100203238);
      sub_10002784C((uint64_t)v7, &qword_100203238);
      uint64_t v75 = *(void *)(v74 + 16);
      swift_getKeyPath();
      uint64_t v226 = (unsigned char *)v75;
      uint64_t v76 = sub_100113ADC((unint64_t *)&unk_100201540, (void (*)(uint64_t))type metadata accessor for RewritingModel);
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      uint64_t v77 = *(void *)(v75 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__session);
      sub_100112F04(v74, v69, (uint64_t (*)(void))type metadata accessor for RewritingView);
      uint64_t v174 = v76;
      if (v77)
      {
        uint64_t v78 = *(void *)(v69 + 16);
        swift_getKeyPath();
        uint64_t v226 = (unsigned char *)v78;
        ObservationRegistrar.access<A, B>(_:keyPath:)();
        swift_release();
        char v72 = *(unsigned char *)(v78 + 88);
      }
      sub_1001135DC(v69, (uint64_t (*)(void))type metadata accessor for RewritingView);
      uint64_t v79 = swift_getKeyPath();
      uint64_t v80 = swift_allocObject();
      *(unsigned char *)(v80 + 16) = v72;
      uint64_t v81 = v181;
      uint64_t v82 = v176;
      sub_100008DD4(v181, v176, &qword_100203240);
      uint64_t v83 = (uint64_t *)(v82 + *(int *)(v177 + 36));
      *uint64_t v83 = v79;
      v83[1] = (uint64_t)sub_100040414;
      v83[2] = v80;
      sub_10002784C(v81, &qword_100203240);
      sub_100026FD0(v82, v182, &qword_100203248);
      uint64_t v84 = type metadata accessor for FeedbackFeatureFlags();
      uint64_t v229 = (ValueMetadata *)v84;
      unint64_t v230 = sub_100113ADC((unint64_t *)&unk_1001FDED0, (void (*)(uint64_t))&type metadata accessor for FeedbackFeatureFlags);
      uint64_t v85 = sub_10002E148((uint64_t *)&v226);
      (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v84 - 8) + 104))(v85, enum case for FeedbackFeatureFlags.CentralizedFeedback(_:), v84);
      LOBYTE(v84) = isFeatureEnabled(_:)();
      sub_100027DBC((uint64_t)&v226);
      if (v84)
      {
        uint64_t v86 = *(void *)(v74 + 16);
        swift_getKeyPath();
        uint64_t v226 = (unsigned char *)v86;
        ObservationRegistrar.access<A, B>(_:keyPath:)();
        swift_release();
        uint64_t v87 = *(void *)(v86 + 48);
        uint64_t v88 = *(void *)(v86 + 56);
        uint64_t v89 = *(void *)(v86 + 64);
        int v90 = *(unsigned __int8 *)(v86 + 72);
        uint64_t v91 = *(void *)(v74 + 16);
        swift_getKeyPath();
        uint64_t v226 = (unsigned char *)v91;
        uint64_t v169 = (char *)v87;
        uint64_t v181 = v88;
        uint64_t v92 = v88;
        uint64_t v93 = (char *)v89;
        LODWORD(v177) = v90;
        sub_1000272F8(v87, v92, v89, v90);
        ObservationRegistrar.access<A, B>(_:keyPath:)();
        swift_release();
        uint64_t v94 = *(void *)(v91 + 40);
        uint64_t v173 = *(void *)(v91 + 32);
        uint64_t v95 = *(void *)(v74 + 16);
        swift_getKeyPath();
        uint64_t v226 = (unsigned char *)v95;
        swift_bridgeObjectRetain();
        ObservationRegistrar.access<A, B>(_:keyPath:)();
        swift_release();
        uint64_t v96 = *(void *)(v95 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__inputStringForFeedback + 8);
        uint64_t v171 = *(void *)(v95 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__inputStringForFeedback);
        uint64_t v97 = *(void *)(v74 + 16);
        swift_getKeyPath();
        uint64_t v226 = (unsigned char *)v97;
        unint64_t v172 = v96;
        swift_bridgeObjectRetain();
        ObservationRegistrar.access<A, B>(_:keyPath:)();
        swift_release();
        uint64_t v98 = *(void **)(v97 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__resultAttributedString);
        BOOL v180 = v93;
        uint64_t v176 = v94;
        if (v98)
        {
          id v99 = v98;
          id v100 = [v99 string];
          uint64_t v101 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v167 = v102;
          uint64_t v168 = v101;
        }
        else
        {
          unint64_t v167 = 0xE000000000000000;
          uint64_t v168 = 0;
        }
        uint64_t v103 = v164;
        uint64_t v104 = v164[2];
        swift_getKeyPath();
        uint64_t v226 = (unsigned char *)v104;
        ObservationRegistrar.access<A, B>(_:keyPath:)();
        swift_release();
        uint64_t v105 = *(void *)(v104 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__modelInfoString + 8);
        uint64_t v170 = *(void *)(v104 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__modelInfoString);
        uint64_t v106 = v103[6];
        uint64_t v226 = (unsigned char *)v103[5];
        uint64_t v227 = v106;
        swift_bridgeObjectRetain();
        sub_1000063C0(&qword_1001FC678);
        State.wrappedValue.getter();
        char v107 = (void *)v214;
        uint64_t v108 = v103[2];
        swift_getKeyPath();
        uint64_t v226 = (unsigned char *)v108;
        ObservationRegistrar.access<A, B>(_:keyPath:)();
        swift_release();
        uint64_t v109 = *(void *)(v108 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__session);
        uint64_t v110 = v179;
        sub_100112F04((uint64_t)v103, v179, (uint64_t (*)(void))type metadata accessor for RewritingView);
        if (v109)
        {
          uint64_t v111 = *(void *)(v179 + 16);
          swift_getKeyPath();
          uint64_t v226 = (unsigned char *)v111;
          ObservationRegistrar.access<A, B>(_:keyPath:)();
          swift_release();
          char v112 = *(unsigned char *)(v111 + 88);
          uint64_t v110 = v179;
        }
        else
        {
          char v112 = 1;
        }
        uint64_t v68 = (uint64_t)v186;
        uint64_t v113 = v169;
        sub_1001135DC(v110, (uint64_t (*)(void))type metadata accessor for RewritingView);
        uint64_t v214 = 0x3FF0000000000000;
        id v114 = v107;
        State.init(wrappedValue:)();
        uint64_t v115 = (uint64_t)v226;
        uint64_t v116 = v227;

        *(void *)&long long v192 = v107;
        *((void *)&v192 + 1) = v173;
        *(void *)&long long v193 = v176;
        *((void *)&v193 + 1) = v171;
        long long v194 = v172;
        *(void *)&long long v195 = 0;
        *((void *)&v195 + 1) = v168;
        *(void *)&long long v196 = v167;
        *((void *)&v196 + 1) = v170;
        *(void *)&long long v197 = v105;
        *((void *)&v197 + 1) = _swiftEmptyArrayStorage;
        *(void *)&long long v198 = _swiftEmptyArrayStorage;
        *((void *)&v198 + 1) = _swiftEmptyArrayStorage;
        *(void *)&long long v199 = v113;
        *((void *)&v199 + 1) = v181;
        *(void *)&long long v200 = v180;
        BYTE8(v200) = v177;
        BYTE9(v200) = v112;
        WORD5(v200) = 1;
        BYTE12(v200) = 0;
        long long v201 = 0uLL;
        *(void *)&long long v202 = v115;
        *((void *)&v202 + 1) = v116;
        char v203 = 1;
        *(_OWORD *)&v213[7] = v192;
        *(_OWORD *)&v213[23] = v193;
        *(_OWORD *)&v213[39] = v172;
        *(_OWORD *)&v213[103] = v198;
        *(_OWORD *)&v213[87] = v197;
        *(_OWORD *)&v213[71] = v196;
        *(_OWORD *)&v213[55] = v195;
        *(_OWORD *)&v213[167] = v202;
        *(_OWORD *)&v213[151] = 0uLL;
        *(_OWORD *)&v213[135] = v200;
        *(_OWORD *)&v213[119] = v199;
        v204[0] = v107;
        v204[1] = v173;
        v204[2] = v176;
        v204[3] = v171;
        v204[4] = v172;
        v204[5] = 0;
        v204[6] = 0;
        v204[7] = v168;
        v204[8] = v167;
        v204[9] = v170;
        v204[10] = v105;
        v204[11] = _swiftEmptyArrayStorage;
        v204[12] = _swiftEmptyArrayStorage;
        v204[13] = _swiftEmptyArrayStorage;
        v204[14] = v113;
        v204[15] = v181;
        v204[16] = v180;
        char v205 = v177;
        char v206 = v112;
        __int16 v207 = 1;
        char v208 = 0;
        uint64_t v210 = 0;
        uint64_t v209 = 0;
        uint64_t v211 = v115;
        uint64_t v212 = v116;
        sub_10003FB08((uint64_t)&v192);
        sub_10002E220((uint64_t)v204);
        long long v223 = *(_OWORD *)&v213[128];
        long long v224 = *(_OWORD *)&v213[144];
        *(_OWORD *)uint64_t v225 = *(_OWORD *)&v213[160];
        long long v219 = *(_OWORD *)&v213[64];
        long long v220 = *(_OWORD *)&v213[80];
        long long v221 = *(_OWORD *)&v213[96];
        long long v222 = *(_OWORD *)&v213[112];
        *(_OWORD *)&v215[1] = *(_OWORD *)v213;
        long long v216 = *(_OWORD *)&v213[16];
        long long v217 = *(_OWORD *)&v213[32];
        uint64_t v214 = 0;
        v215[0] = 1;
        *(void *)&v225[15] = *(void *)&v213[175];
        long long v218 = *(_OWORD *)&v213[48];
        nullsub_1(&v214);
        sub_100026FD0((uint64_t)&v214, (uint64_t)&v226, &qword_1001FC7A8);
        uint64_t v65 = v187;
      }
      else
      {
        sub_10003F824(&v214);
        sub_100026FD0((uint64_t)&v214, (uint64_t)&v226, &qword_1001FC7A8);
      }
      uint64_t v117 = v182;
      uint64_t v118 = v178;
      sub_100008DD4(v182, v178, &qword_100203248);
      sub_100026FD0((uint64_t)&v226, (uint64_t)v204, &qword_1001FC7A8);
      uint64_t v71 = v183;
      sub_100008DD4(v118, v183, &qword_100203248);
      uint64_t v119 = v71 + *(int *)(sub_1000063C0(&qword_100203280) + 48);
      sub_100026FD0((uint64_t)v204, (uint64_t)v213, &qword_1001FC7A8);
      sub_100026FD0((uint64_t)v213, v119, &qword_1001FC7A8);
      sub_10003F95C(v213, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10003F844);
      sub_10002784C(v117, &qword_100203248);
      sub_100026FD0((uint64_t)v204, (uint64_t)&v214, &qword_1001FC7A8);
      sub_10003F95C(&v214, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10003F9D0);
      sub_10002784C(v118, &qword_100203248);
      uint64_t v120 = sub_1000063C0(&qword_100203288);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v120 - 8) + 56))(v71, 0, 1, v120);
      sub_100026FD0(v71, v68, &qword_100203250);
    }
    long long v121 = v185;
    sub_100008DD4(v65, (uint64_t)v185, &qword_100203260);
    sub_100008DD4(v68, v71, &qword_100203250);
    uint64_t v122 = (uint64_t)v184;
    *uint64_t v184 = v163;
    *(unsigned char *)(v122 + 1) = v165;
    uint64_t v123 = sub_1000063C0(&qword_100203290);
    sub_100008DD4((uint64_t)v121, v122 + *(int *)(v123 + 48), &qword_100203260);
    sub_100008DD4(v71, v122 + *(int *)(v123 + 64), &qword_100203250);
    sub_10002784C(v71, &qword_100203250);
    sub_10002784C((uint64_t)v121, &qword_100203260);
    sub_100008DD4(v122, v190, &qword_100203230);
    swift_storeEnumTagMultiPayload();
    sub_100113ADC(&qword_100200B78, (void (*)(uint64_t))type metadata accessor for InputWarningView);
    sub_100027F2C(&qword_100203298, &qword_100203230);
    _ConditionalContent<>.init(storage:)();
    sub_10002784C(v122, &qword_100203230);
    sub_10002784C(v68, &qword_100203250);
    return sub_10002784C(v65, &qword_100203260);
  }
}

uint64_t sub_10010BDF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v121 = a2;
  uint64_t v100 = sub_1000063C0(&qword_1002032A8);
  uint64_t v99 = *(void *)(v100 - 8);
  __chkstk_darwin(v100);
  uint64_t v97 = (char *)v93 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = sub_1000063C0(&qword_1002032B0);
  __chkstk_darwin(v96);
  uint64_t v101 = (char *)v93 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v117 = sub_1000063C0(&qword_1002032B8);
  uint64_t v5 = __chkstk_darwin(v117);
  uint64_t v98 = (uint64_t)v93 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v102 = (uint64_t)v93 - v7;
  uint64_t v115 = sub_1000063C0(&qword_1002032C0);
  __chkstk_darwin(v115);
  uint64_t v116 = (uint64_t)v93 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = type metadata accessor for IconOnlyLabelStyle();
  uint64_t v107 = *(void *)(v113 - 8);
  __chkstk_darwin(v113);
  uint64_t v105 = (char *)v93 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v108 = sub_1000063C0(&qword_1002032C8);
  __chkstk_darwin(v108);
  uint64_t v104 = (void *)((char *)v93 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v111 = sub_1000063C0(&qword_1002032D0);
  uint64_t v110 = *(void *)(v111 - 8);
  __chkstk_darwin(v111);
  uint64_t v109 = (char *)v93 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = sub_1000063C0(&qword_1002032D8);
  uint64_t v12 = __chkstk_darwin(v114);
  uint64_t v106 = (char *)v93 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v112 = (uint64_t)v93 - v14;
  uint64_t v15 = sub_1000063C0(&qword_1002032E0);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  uint64_t v120 = (char *)v93 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v119 = (uint64_t)v93 - v18;
  uint64_t v19 = type metadata accessor for RewritingView();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(void *)(v20 + 64);
  uint64_t v22 = __chkstk_darwin(v19 - 8);
  uint64_t v124 = (uint64_t)v93 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  char v24 = (char *)v93 - v23;
  uint64_t v25 = sub_1000063C0(&qword_1002032E8);
  uint64_t v26 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v28 = (char *)v93 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v122 = sub_1000063C0(&qword_1002032F0);
  __chkstk_darwin(v122);
  uint64_t v30 = (char *)v93 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_1000063C0(&qword_1002032F8);
  uint64_t v32 = __chkstk_darwin(v31 - 8);
  uint64_t v118 = (uint64_t)v93 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __chkstk_darwin(v32);
  uint64_t v123 = (char *)v93 - v35;
  __chkstk_darwin(v34);
  uint64_t v125 = (uint64_t)v93 - v36;
  sub_100112F04(a1, (uint64_t)v24, (uint64_t (*)(void))type metadata accessor for RewritingView);
  uint64_t v37 = *(unsigned __int8 *)(v20 + 80);
  uint64_t v38 = (v37 + 16) & ~v37;
  v93[1] = v38 + v21;
  v93[0] = v37 | 7;
  uint64_t v39 = swift_allocObject();
  uint64_t v94 = v38;
  uint64_t v95 = v24;
  sub_10010957C((uint64_t)v24, v39 + v38);
  sub_1000063C0(&qword_100203300);
  sub_100112F88();
  Button.init(action:label:)();
  uint64_t v40 = *(void *)(a1 + 16);
  swift_getKeyPath();
  uint64_t v126 = v40;
  uint64_t v41 = sub_100113ADC((unint64_t *)&unk_100201540, (void (*)(uint64_t))type metadata accessor for RewritingModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  LOBYTE(v21) = *(unsigned char *)(v40 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__showingOriginal);
  uint64_t v42 = a1;
  uint64_t v43 = v122;
  (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v30, v28, v25);
  uint64_t v44 = &v30[*(int *)(v43 + 36)];
  *uint64_t v44 = 0;
  v44[1] = v21;
  v44[2] = 0;
  (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v25);
  uint64_t v45 = *(void *)(v42 + 16);
  swift_getKeyPath();
  uint64_t v126 = v45;
  uint64_t v103 = v41;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v46 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v48 = v47;
  LOBYTE(v24) = v49 & 1;
  sub_100113084();
  uint64_t v50 = (uint64_t)v123;
  View.accessibilityLabel(_:)();
  sub_100026F18(v46, v48, (char)v24);
  swift_bridgeObjectRelease();
  sub_10002784C((uint64_t)v30, &qword_1002032F0);
  uint64_t v51 = v125;
  sub_100026FD0(v50, v125, &qword_1002032F8);
  uint64_t v52 = *(void *)(v42 + 16);
  swift_getKeyPath();
  uint64_t v126 = v52;
  sub_100113ADC((unint64_t *)&qword_1001FD2A0, (void (*)(uint64_t))type metadata accessor for ToolModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  LOBYTE(v21) = *(unsigned char *)(v52 + 88);
  uint64_t v53 = v124;
  sub_100112F04(v42, v124, (uint64_t (*)(void))type metadata accessor for RewritingView);
  if (v21)
  {
    int v54 = 1;
  }
  else
  {
    uint64_t v55 = *(void *)(v53 + 16);
    swift_getKeyPath();
    uint64_t v126 = v55;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    int v54 = *(unsigned __int8 *)(v55 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__showingOriginal);
  }
  sub_1001135DC(v53, (uint64_t (*)(void))type metadata accessor for RewritingView);
  uint64_t v56 = *(void *)(v42 + 32);
  LOBYTE(v126) = *(unsigned char *)(v42 + 24);
  uint64_t v127 = v56;
  sub_1000063C0(&qword_1001FB5A8);
  State.wrappedValue.getter();
  if (v130 == 1)
  {
    uint64_t v57 = static VerticalAlignment.center.getter();
    uint64_t v58 = (uint64_t)v104;
    *uint64_t v104 = v57;
    *(void *)(v58 + 8) = 0;
    *(unsigned char *)(v58 + 16) = 1;
    uint64_t v59 = sub_1000063C0(&qword_100203370);
    sub_10010CFA0(v54, v42, v58 + *(int *)(v59 + 44));
    uint64_t v60 = v105;
    IconOnlyLabelStyle.init()();
    uint64_t v61 = sub_100027F2C(&qword_100203350, &qword_1002032C8);
    uint64_t v62 = sub_100113ADC(&qword_1001FDA20, (void (*)(uint64_t))&type metadata accessor for IconOnlyLabelStyle);
    char v63 = v109;
    uint64_t v64 = v108;
    uint64_t v65 = v113;
    View.labelStyle<A>(_:)();
    (*(void (**)(char *, uint64_t))(v107 + 8))(v60, v65);
    sub_10002784C(v58, &qword_1002032C8);
    LocalizedStringKey.init(stringLiteral:)();
    uint64_t v126 = v64;
    uint64_t v127 = v65;
    uint64_t v128 = v61;
    uint64_t v129 = v62;
    swift_getOpaqueTypeConformance2();
    uint64_t v66 = (uint64_t)v106;
    uint64_t v67 = v111;
    View.accessibilityLabel(_:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v110 + 8))(v63, v67);
    uint64_t v68 = &qword_1002032D8;
    uint64_t v69 = v112;
    sub_100026FD0(v66, v112, &qword_1002032D8);
    sub_100008DD4(v69, v116, &qword_1002032D8);
    swift_storeEnumTagMultiPayload();
    sub_1001131F0();
    sub_100113344();
    uint64_t v70 = (uint64_t)v120;
    _ConditionalContent<>.init(storage:)();
    uint64_t v71 = v69;
LABEL_12:
    sub_10002784C(v71, v68);
    uint64_t v89 = sub_1000063C0(&qword_100203328);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v89 - 8) + 56))(v70, 0, 1, v89);
    uint64_t v75 = v119;
    sub_100026FD0(v70, v119, &qword_1002032E0);
    goto LABEL_13;
  }
  uint64_t v72 = *(void *)(v42 + 16);
  swift_getKeyPath();
  uint64_t v126 = v72;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  if (!*(unsigned char *)(v72 + 72))
  {
    if (*(unsigned __int8 *)(v72 + 48) - 2 < 4 || !*(unsigned char *)(v72 + 48))
    {
      uint64_t v76 = (uint64_t)v95;
      sub_100112F04(v42, (uint64_t)v95, (uint64_t (*)(void))type metadata accessor for RewritingView);
      uint64_t v77 = swift_allocObject();
      sub_10010957C(v76, v77 + v94);
      sub_1000063C0(&qword_100203338);
      sub_100113140();
      uint64_t v78 = v97;
      Button.init(action:label:)();
      uint64_t v79 = v99;
      uint64_t v80 = (uint64_t)v101;
      uint64_t v81 = v100;
      (*(void (**)(char *, char *, uint64_t))(v99 + 16))(v101, v78, v100);
      uint64_t v82 = v80 + *(int *)(v96 + 36);
      *(_WORD *)uint64_t v82 = 0;
      *(unsigned char *)(v82 + 2) = 0;
      (*(void (**)(char *, uint64_t))(v79 + 8))(v78, v81);
      uint64_t KeyPath = swift_getKeyPath();
      uint64_t v84 = swift_allocObject();
      *(unsigned char *)(v84 + 16) = v54;
      uint64_t v85 = v98;
      sub_100008DD4(v80, v98, &qword_1002032B0);
      uint64_t v86 = (uint64_t *)(v85 + *(int *)(v117 + 36));
      *uint64_t v86 = KeyPath;
      v86[1] = (uint64_t)sub_100040414;
      v86[2] = v84;
      sub_10002784C(v80, &qword_1002032B0);
      uint64_t v68 = &qword_1002032B8;
      uint64_t v87 = v85;
      uint64_t v88 = v102;
      sub_100026FD0(v87, v102, &qword_1002032B8);
      sub_100008DD4(v88, v116, &qword_1002032B8);
      swift_storeEnumTagMultiPayload();
      sub_1001131F0();
      sub_100113344();
      uint64_t v70 = (uint64_t)v120;
      _ConditionalContent<>.init(storage:)();
      uint64_t v71 = v88;
      goto LABEL_12;
    }
LABEL_8:
    uint64_t v74 = sub_1000063C0(&qword_100203328);
    uint64_t v75 = v119;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v74 - 8) + 56))(v119, 1, 1, v74);
    uint64_t v70 = (uint64_t)v120;
LABEL_13:
    uint64_t v90 = v118;
    sub_100008DD4(v51, v118, &qword_1002032F8);
    sub_100008DD4(v75, v70, &qword_1002032E0);
    uint64_t v91 = v121;
    sub_100008DD4(v90, v121, &qword_1002032F8);
    uint64_t v92 = sub_1000063C0(&qword_100203330);
    sub_100008DD4(v70, v91 + *(int *)(v92 + 48), &qword_1002032E0);
    sub_10002784C(v75, &qword_1002032E0);
    sub_10002784C(v51, &qword_1002032F8);
    sub_10002784C(v70, &qword_1002032E0);
    return sub_10002784C(v90, &qword_1002032F8);
  }
  if (*(unsigned __int8 *)(v72 + 72) != 255) {
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

uint64_t sub_10010CE4C()
{
  return swift_release();
}

uint64_t sub_10010CF74@<X0>(uint64_t a1@<X8>)
{
  return sub_10010E6B0(a1);
}

uint64_t sub_10010CFA0@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int v39 = a1;
  uint64_t v44 = a3;
  uint64_t v43 = type metadata accessor for PrimaryButtonStyle(0);
  __chkstk_darwin(v43);
  uint64_t v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for RewritingView();
  uint64_t v38 = *(void *)(v6 - 8);
  uint64_t v7 = *(void *)(v38 + 64);
  __chkstk_darwin(v6 - 8);
  uint64_t v42 = sub_1000063C0(&qword_1002032E8);
  uint64_t v40 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000063C0(&qword_100203378);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v41 = (char *)&v37 - v15;
  uint64_t v16 = sub_1000063C0(&qword_100203380);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  uint64_t v19 = (char *)&v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v37 - v20;
  *(void *)uint64_t v21 = static VerticalAlignment.center.getter();
  *((void *)v21 + 1) = 0x3FF0000000000000;
  v21[16] = 0;
  uint64_t v22 = sub_1000063C0(&qword_100203388);
  sub_10010D540(v39, a2, (uint64_t)&v21[*(int *)(v22 + 44)]);
  sub_100112F04(a2, (uint64_t)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for RewritingView);
  unint64_t v23 = (*(unsigned __int8 *)(v38 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
  uint64_t v24 = swift_allocObject();
  sub_10010957C((uint64_t)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v24 + v23);
  sub_1000063C0(&qword_100203300);
  sub_100112F88();
  Button.init(action:label:)();
  if (qword_1001FAD08 != -1) {
    swift_once();
  }
  uint64_t v25 = qword_100212970;
  uint64_t KeyPath = swift_getKeyPath();
  *(_WORD *)uint64_t v5 = 0;
  *((void *)v5 + 1) = v25;
  uint64_t v27 = v43;
  uint64_t v28 = (uint64_t *)&v5[*(int *)(v43 + 28)];
  *uint64_t v28 = swift_getKeyPath();
  sub_1000063C0((uint64_t *)&unk_1001FB730);
  swift_storeEnumTagMultiPayload();
  uint64_t v29 = &v5[*(int *)(v27 + 32)];
  *(void *)uint64_t v29 = KeyPath;
  unsigned char v29[8] = 0;
  sub_100027F2C(&qword_100203320, &qword_1002032E8);
  sub_100113ADC(&qword_1001FC888, (void (*)(uint64_t))type metadata accessor for PrimaryButtonStyle);
  uint64_t v30 = v42;
  View.buttonStyle<A>(_:)();
  sub_1001135DC((uint64_t)v5, type metadata accessor for PrimaryButtonStyle);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v9, v30);
  uint64_t v31 = v41;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v41, v14, v10);
  sub_100008DD4((uint64_t)v21, (uint64_t)v19, &qword_100203380);
  uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  v32(v14, v31, v10);
  uint64_t v33 = v44;
  sub_100008DD4((uint64_t)v19, v44, &qword_100203380);
  uint64_t v34 = sub_1000063C0(&qword_100203390);
  v32((char *)(v33 + *(int *)(v34 + 48)), v14, v10);
  uint64_t v35 = *(void (**)(char *, uint64_t))(v11 + 8);
  v35(v31, v10);
  sub_10002784C((uint64_t)v21, &qword_100203380);
  v35(v14, v10);
  return sub_10002784C((uint64_t)v19, &qword_100203380);
}

uint64_t sub_10010D540@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v101 = a3;
  uint64_t v97 = type metadata accessor for UnevenCornerPrimaryButtonStyle(0);
  __chkstk_darwin(v97);
  uint64_t v96 = (_WORD *)((char *)v80 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v104 = sub_1000063C0(&qword_1001FC850);
  uint64_t v108 = *(void *)(v104 - 8);
  __chkstk_darwin(v104);
  uint64_t v102 = (char *)v80 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = sub_1000063C0(&qword_1002033A8);
  __chkstk_darwin(v103);
  uint64_t v95 = (char *)v80 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = sub_1000063C0(&qword_1002033B0);
  uint64_t v98 = *(void *)(v107 - 8);
  __chkstk_darwin(v107);
  uint64_t v109 = (char *)v80 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000063C0(&qword_1002033B8);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v100 = (uint64_t)v80 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v99 = (char *)v80 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v105 = (uint64_t)v80 - v15;
  __chkstk_darwin(v14);
  uint64_t v106 = (uint64_t)v80 - v16;
  uint64_t v17 = type metadata accessor for RewritingView();
  uint64_t v91 = *(void *)(v17 - 8);
  uint64_t v18 = *(void *)(v91 + 64);
  uint64_t v19 = __chkstk_darwin(v17 - 8);
  uint64_t v20 = (char *)v80 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v19);
  unint64_t v23 = (char *)v80 - v22;
  __chkstk_darwin(v21);
  uint64_t v25 = (char *)v80 - v24;
  sub_100112F04(a2, (uint64_t)v80 - v24, (uint64_t (*)(void))type metadata accessor for RewritingView);
  if (a1)
  {
    BOOL v26 = 1;
  }
  else
  {
    uint64_t v27 = *((void *)v25 + 2);
    swift_getKeyPath();
    uint64_t v110 = v27;
    sub_100113ADC((unint64_t *)&unk_100201540, (void (*)(uint64_t))type metadata accessor for RewritingModel);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    BOOL v26 = *(void *)(v27 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__undoCount) == 0;
  }
  sub_1001135DC((uint64_t)v25, (uint64_t (*)(void))type metadata accessor for RewritingView);
  sub_100112F04(a2, (uint64_t)v23, (uint64_t (*)(void))type metadata accessor for RewritingView);
  BOOL v28 = 1;
  if ((a1 & 1) == 0)
  {
    uint64_t v29 = *((void *)v23 + 2);
    swift_getKeyPath();
    uint64_t v110 = v29;
    sub_100113ADC((unint64_t *)&unk_100201540, (void (*)(uint64_t))type metadata accessor for RewritingModel);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    BOOL v28 = *(void *)(v29 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__redoCount) == 0;
  }
  BOOL v94 = v28;
  sub_1001135DC((uint64_t)v23, (uint64_t (*)(void))type metadata accessor for RewritingView);
  uint64_t v92 = type metadata accessor for RewritingView;
  uint64_t v93 = a2;
  uint64_t v88 = (uint64_t)v80 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100112F04(a2, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for RewritingView);
  uint64_t v30 = *(unsigned __int8 *)(v91 + 80);
  uint64_t v90 = ((v30 + 16) & ~v30) + v18;
  uint64_t v31 = (v30 + 16) & ~v30;
  uint64_t v91 = v31;
  uint64_t v89 = v30 | 7;
  uint64_t v32 = swift_allocObject();
  sub_10010957C((uint64_t)v20, v32 + v31);
  uint64_t v87 = sub_1000063C0(&qword_1001FBBC0);
  uint64_t v86 = sub_100027F2C((unint64_t *)&unk_1001FD5A0, &qword_1001FBBC0);
  uint64_t v33 = v102;
  Button.init(action:label:)();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v35 = swift_allocObject();
  *(unsigned char *)(v35 + 16) = v26;
  uint64_t v36 = v108;
  uint64_t v37 = *(void (**)(uint64_t, char *, uint64_t))(v108 + 16);
  uint64_t v84 = v108 + 16;
  uint64_t v85 = v37;
  uint64_t v38 = (uint64_t)v95;
  uint64_t v39 = v104;
  v37((uint64_t)v95, v33, v104);
  uint64_t v40 = v103;
  uint64_t v41 = (uint64_t *)(v38 + *(int *)(v103 + 36));
  uint64_t *v41 = KeyPath;
  v41[1] = (uint64_t)sub_100040414;
  void v41[2] = v35;
  uint64_t v42 = *(void (**)(char *, uint64_t))(v36 + 8);
  uint64_t v108 = v36 + 8;
  uint64_t v83 = v42;
  v42(v33, v39);
  uint64_t v43 = swift_getKeyPath();
  uint64_t v45 = v96;
  uint64_t v44 = v97;
  _WORD *v96 = 1;
  uint64_t v46 = (uint64_t *)((char *)v45 + *(int *)(v44 + 24));
  *uint64_t v46 = swift_getKeyPath();
  uint64_t v82 = sub_1000063C0((uint64_t *)&unk_1001FB730);
  swift_storeEnumTagMultiPayload();
  uint64_t v47 = (char *)v45 + *(int *)(v44 + 28);
  *(void *)uint64_t v47 = v43;
  v47[8] = 0;
  uint64_t v48 = sub_100112C50(&qword_1002033C0, &qword_1002033A8, &qword_1001FC880, &qword_1001FC850);
  uint64_t v49 = sub_100113ADC(&qword_1001FC8C0, (void (*)(uint64_t))type metadata accessor for UnevenCornerPrimaryButtonStyle);
  v80[1] = v48;
  v80[0] = v49;
  View.buttonStyle<A>(_:)();
  uint64_t v81 = type metadata accessor for UnevenCornerPrimaryButtonStyle;
  sub_1001135DC((uint64_t)v45, type metadata accessor for UnevenCornerPrimaryButtonStyle);
  sub_10002784C(v38, &qword_1002033A8);
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v50 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v52 = v51;
  uint64_t v110 = v40;
  uint64_t v111 = v44;
  LOBYTE(v40) = v53 & 1;
  uint64_t v112 = v48;
  uint64_t v113 = v49;
  v80[2] = swift_getOpaqueTypeConformance2();
  uint64_t v54 = v105;
  uint64_t v55 = v107;
  uint64_t v56 = v109;
  View.accessibilityLabel(_:)();
  sub_100026F18(v50, v52, v40);
  swift_bridgeObjectRelease();
  uint64_t v98 = *(void *)(v98 + 8);
  ((void (*)(char *, uint64_t))v98)(v56, v55);
  sub_100026FD0(v54, v106, &qword_1002033B8);
  uint64_t v57 = v88;
  sub_100112F04(v93, v88, (uint64_t (*)(void))v92);
  uint64_t v58 = swift_allocObject();
  sub_10010957C(v57, v58 + v91);
  uint64_t v59 = v102;
  Button.init(action:label:)();
  uint64_t v60 = swift_getKeyPath();
  uint64_t v61 = swift_allocObject();
  *(unsigned char *)(v61 + 16) = v94;
  uint64_t v62 = v104;
  v85(v38, v59, v104);
  char v63 = (uint64_t *)(v38 + *(int *)(v103 + 36));
  *char v63 = v60;
  v63[1] = (uint64_t)sub_100040414;
  v63[2] = v61;
  v83(v59, v62);
  uint64_t v64 = swift_getKeyPath();
  *uint64_t v45 = 256;
  uint64_t v65 = (uint64_t *)((char *)v45 + *(int *)(v44 + 24));
  *uint64_t v65 = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  uint64_t v66 = (char *)v45 + *(int *)(v44 + 28);
  *(void *)uint64_t v66 = v64;
  v66[8] = 0;
  uint64_t v67 = v109;
  View.buttonStyle<A>(_:)();
  sub_1001135DC((uint64_t)v45, v81);
  sub_10002784C(v38, &qword_1002033A8);
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v68 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v70 = v69;
  LOBYTE(v59) = v71 & 1;
  uint64_t v72 = (uint64_t)v99;
  uint64_t v73 = v107;
  View.accessibilityLabel(_:)();
  sub_100026F18(v68, v70, (char)v59);
  swift_bridgeObjectRelease();
  ((void (*)(char *, uint64_t))v98)(v67, v73);
  uint64_t v74 = v105;
  sub_100026FD0(v72, v105, &qword_1002033B8);
  uint64_t v75 = v106;
  sub_100008DD4(v106, v72, &qword_1002033B8);
  uint64_t v76 = v100;
  sub_100008DD4(v74, v100, &qword_1002033B8);
  uint64_t v77 = v101;
  sub_100008DD4(v72, v101, &qword_1002033B8);
  uint64_t v78 = sub_1000063C0(&qword_1002033C8);
  sub_100008DD4(v76, v77 + *(int *)(v78 + 48), &qword_1002033B8);
  sub_10002784C(v74, &qword_1002033B8);
  sub_10002784C(v75, &qword_1002033B8);
  sub_10002784C(v76, &qword_1002033B8);
  return sub_10002784C(v72, &qword_1002033B8);
}

uint64_t sub_10010E164()
{
  return sub_10010E1BC();
}

uint64_t sub_10010E194()
{
  return sub_10010E1BC();
}

uint64_t sub_10010E1BC()
{
  LocalizedStringKey.init(stringLiteral:)();

  return Label<>.init(_:systemImage:)();
}

uint64_t sub_10010E210(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for RewritingView();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000063C0(&qword_1001FF820);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  sub_100112F04(a1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for RewritingView);
  type metadata accessor for MainActor();
  uint64_t v10 = static MainActor.shared.getter();
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v10;
  *(void *)(v12 + 24) = &protocol witness table for MainActor;
  sub_10010957C((uint64_t)v5, v12 + v11);
  sub_1001228D0((uint64_t)v8, (uint64_t)&unk_1002033A0, v12);
  return swift_release();
}

uint64_t sub_10010E3D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a4;
  type metadata accessor for MainActor();
  v4[3] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[4] = v6;
  v4[5] = v5;
  return _swift_task_switch(sub_10010E468, v6, v5);
}

uint64_t sub_10010E468()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10010E504;
  return sub_10009E5D4(0, 0);
}

uint64_t sub_10010E504()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 40);
  uint64_t v3 = *(void *)(v1 + 32);
  return _swift_task_switch(sub_10010E624, v3, v2);
}

uint64_t sub_10010E624()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10010E684@<X0>(uint64_t a1@<X8>)
{
  return sub_10010E6B0(a1);
}

uint64_t sub_10010E6B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1000063C0(&qword_1001FBBC0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  Label.init(title:icon:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 16))(a1, v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_10010E7D8@<X0>(uint64_t a1@<X8>)
{
  return sub_10003DAF8(a1);
}

uint64_t sub_10010E7F0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for RewritingView();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2 - 8);
  uint64_t v5 = &v15[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_1000063C0(&qword_1001FF820);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = *(void *)(a1 + 32);
  v15[16] = *(unsigned char *)(a1 + 24);
  uint64_t v16 = v9;
  v15[15] = 1;
  sub_1000063C0(&qword_1001FB5A8);
  State.wrappedValue.setter();
  uint64_t v10 = type metadata accessor for TaskPriority();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v8, 1, 1, v10);
  sub_100112F04(a1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for RewritingView);
  type metadata accessor for MainActor();
  uint64_t v11 = static MainActor.shared.getter();
  unint64_t v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v11;
  *(void *)(v13 + 24) = &protocol witness table for MainActor;
  sub_10010957C((uint64_t)v5, v13 + v12);
  sub_1001228D0((uint64_t)v8, (uint64_t)&unk_1002033D8, v13);
  return swift_release();
}

uint64_t sub_10010E9E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a4;
  type metadata accessor for MainActor();
  v4[3] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[4] = v6;
  v4[5] = v5;
  return _swift_task_switch(sub_10010EA80, v6, v5);
}

uint64_t sub_10010EA80()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10010EB1C;
  return sub_10009E5D4(0, 0);
}

uint64_t sub_10010EB1C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 40);
  uint64_t v3 = *(void *)(v1 + 32);
  return _swift_task_switch(sub_100113FD4, v3, v2);
}

uint64_t sub_10010EC3C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1000063C0(&qword_1001FBBC0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000063C0(&qword_100203300);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  Label.init(title:icon:)();
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v8, v5, v2);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (qword_1001FAD30 != -1) {
    swift_once();
  }
  uint64_t v9 = qword_1002129D8;
  sub_100008DD4((uint64_t)v8, a1, &qword_100203300);
  *(void *)(a1 + *(int *)(sub_1000063C0(&qword_100203338) + 36)) = v9;
  swift_retain();
  return sub_10002784C((uint64_t)v8, &qword_100203300);
}

uint64_t sub_10010EE3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v20 = a2;
  uint64_t v19 = sub_1000063C0(&qword_1002031E0);
  __chkstk_darwin(v19);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1000063C0(&qword_1002031E8);
  uint64_t v5 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ToolbarItemPlacement();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1000063C0(&qword_1002031F0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  unint64_t v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  static ToolbarItemPlacement.cancellationAction.getter();
  uint64_t v22 = a1;
  sub_1000063C0(&qword_1002031F8);
  sub_100027F2C(&qword_100203200, &qword_1002031F8);
  ToolbarItem<>.init(placement:content:)();
  static ToolbarItemPlacement.confirmationAction.getter();
  uint64_t v21 = a1;
  sub_1000063C0(&qword_100203208);
  sub_100112B88();
  ToolbarItem<>.init(placement:content:)();
  uint64_t v13 = &v4[*(int *)(v19 + 48)];
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v4, v12, v9);
  uint64_t v14 = v13;
  uint64_t v15 = v18;
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v14, v7, v18);
  TupleToolbarContent.init(_:)();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v15);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_10010F160(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for RewritingView();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2 - 8);
  sub_100112F04(a1, (uint64_t)&v8[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)], (uint64_t (*)(void))type metadata accessor for RewritingView);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = swift_allocObject();
  sub_10010957C((uint64_t)&v8[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)], v6 + v5);
  uint64_t v9 = a1;
  sub_1000063C0(&qword_100203220);
  sub_100112E40();
  return Button.init(action:label:)();
}

double sub_10010F2B4@<D0>(uint64_t a1@<X8>)
{
  sub_10002F3E0();
  LocalizedStringKey.init(stringLiteral:)();
  Text.init(_:tableName:bundle:comment:)();
  _ConditionalContent<>.init(storage:)();
  double result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = v5;
  return result;
}

uint64_t sub_10010F3B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v34 = a2;
  uint64_t v35 = sub_1000063C0(&qword_1001FC6D0);
  uint64_t v3 = __chkstk_darwin(v35);
  char v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v29 - v6;
  uint64_t v31 = sub_1000063C0(&qword_100203218);
  __chkstk_darwin(v31);
  uint64_t v33 = (uint64_t)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for RewritingView();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9 - 8);
  unint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_1000063C0(&qword_1001FC6B8);
  uint64_t v13 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  uint64_t v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_10002F3E0())
  {
    LocalizedStringKey.init(stringLiteral:)();
    sub_100112F04(a1, (uint64_t)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for RewritingView);
    unint64_t v16 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    uint64_t v17 = swift_allocObject();
    sub_10010957C((uint64_t)v12, v17 + v16);
    Button<>.init(_:action:)();
    uint64_t v18 = v32;
    (*(void (**)(uint64_t, char *, uint64_t))(v13 + 16))(v33, v15, v32);
    swift_storeEnumTagMultiPayload();
    sub_100027F2C((unint64_t *)&unk_1001FDDF0, &qword_1001FC6B8);
    sub_100112C50((unint64_t *)&qword_1001FDE00, &qword_1001FC6D0, (unint64_t *)&unk_1001FDDF0, &qword_1001FC6B8);
    _ConditionalContent<>.init(storage:)();
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v18);
  }
  else
  {
    LocalizedStringKey.init(stringLiteral:)();
    uint64_t v29 = v5;
    uint64_t v30 = v7;
    sub_100112F04(a1, (uint64_t)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for RewritingView);
    unint64_t v20 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    uint64_t v21 = swift_allocObject();
    sub_10010957C((uint64_t)v12, v21 + v20);
    Button<>.init(_:action:)();
    uint64_t v22 = *(void *)(a1 + 16);
    swift_getKeyPath();
    uint64_t v36 = v22;
    sub_100113ADC((unint64_t *)&qword_1001FD2A0, (void (*)(uint64_t))type metadata accessor for ToolModel);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    LOBYTE(v22) = *(unsigned char *)(v22 + 88);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v24 = swift_allocObject();
    *(unsigned char *)(v24 + 16) = v22;
    uint64_t v25 = (uint64_t)v29;
    uint64_t v26 = v32;
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v29, v15, v32);
    uint64_t v27 = (uint64_t *)(v25 + *(int *)(v35 + 36));
    *uint64_t v27 = KeyPath;
    v27[1] = (uint64_t)sub_100026D50;
    uint64_t v27[2] = v24;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v26);
    uint64_t v28 = (uint64_t)v30;
    sub_100026FD0(v25, (uint64_t)v30, &qword_1001FC6D0);
    sub_100008DD4(v28, v33, &qword_1001FC6D0);
    swift_storeEnumTagMultiPayload();
    sub_100027F2C((unint64_t *)&unk_1001FDDF0, &qword_1001FC6B8);
    sub_100112C50((unint64_t *)&qword_1001FDE00, &qword_1001FC6D0, (unint64_t *)&unk_1001FDDF0, &qword_1001FC6B8);
    _ConditionalContent<>.init(storage:)();
    return sub_10002784C(v28, &qword_1001FC6D0);
  }
}

uint64_t sub_10010F978()
{
  return swift_release();
}

void *sub_10010FA48()
{
  sub_1000A8AE0(2, 0, 0);
  double result = (void *)swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    [result endWritingTools];
    return (void *)swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_10010FAB8(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  int v3 = *a2;
  char v4 = *(unsigned char *)(a3 + 8);
  uint64_t v5 = swift_retain();
  uint64_t v6 = sub_100020A44(v5, v4);
  swift_release();
  swift_getKeyPath();
  sub_100113ADC((unint64_t *)&qword_1001FAE20, (void (*)(uint64_t))type metadata accessor for CommonUIManager);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  int v7 = *(unsigned __int8 *)(v6 + 81);
  uint64_t result = swift_release();
  if (v3 != v7)
  {
    uint64_t v9 = swift_retain();
    sub_100020A44(v9, v4);
    swift_release();
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_10010FC4C()
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    type metadata accessor for RewritingView();
    sub_1000063C0(&qword_1001FB608);
    FocusState.wrappedValue.getter();
    [v1 enableIntelligentEntryFieldView:v3];
    swift_unknownObjectRelease();
  }
  type metadata accessor for RewritingView();
  sub_1000063C0(&qword_1001FB608);
  FocusState.wrappedValue.getter();
  sub_1000063C0(&qword_100201898);
  return Binding.wrappedValue.setter();
}

uint64_t sub_10010FD6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000063C0(&qword_1002033E0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000063C0(&qword_1002033E8);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v20 - v12;
  uint64_t v23 = static Color.clear.getter();
  int v22 = static Edge.Set.vertical.getter();
  uint64_t v21 = static SafeAreaRegions.all.getter();
  *(void *)uint64_t v6 = static HorizontalAlignment.center.getter();
  *((void *)v6 + 1) = 0;
  v6[16] = 1;
  uint64_t v14 = sub_1000063C0(&qword_1002033F0);
  sub_100110048((uint64_t)&v6[*(int *)(v14 + 44)]);
  uint64_t v24 = a1;
  sub_1000063C0(&qword_1002033F8);
  sub_100027F2C(&qword_100203400, &qword_1002033E0);
  sub_100027F2C(&qword_100203408, &qword_1002033F8);
  View.toolbar<A>(content:)();
  sub_10002784C((uint64_t)v6, &qword_1002033E0);
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v11, v7);
  uint64_t v15 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  v15(v11, v13, v7);
  uint64_t v16 = v21;
  *(void *)a2 = v23;
  *(void *)(a2 + 8) = v16;
  *(unsigned char *)(a2 + 16) = v22;
  uint64_t v17 = sub_1000063C0(&qword_100203410);
  v15((char *)(a2 + *(int *)(v17 + 48)), v11, v7);
  uint64_t v18 = *(void (**)(char *, uint64_t))(v8 + 8);
  swift_retain();
  v18(v13, v7);
  v18(v11, v7);
  return swift_release();
}

uint64_t sub_100110048@<X0>(uint64_t a1@<X8>)
{
  uint64_t v94 = a1;
  uint64_t v100 = type metadata accessor for ParagraphTypesetting();
  uint64_t v102 = *(void *)(v100 - 8);
  __chkstk_darwin(v100);
  uint64_t v2 = (char *)v87 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for LocalizedStringKey.StringInterpolation();
  __chkstk_darwin(v3 - 8);
  uint64_t v97 = sub_1000063C0(&qword_1001FBA98);
  uint64_t v101 = *(void *)(v97 - 8);
  __chkstk_darwin(v97);
  uint64_t v95 = (char *)v87 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = sub_1000063C0((uint64_t *)&unk_1001FBAA0) - 8;
  uint64_t v5 = __chkstk_darwin(v99);
  uint64_t v93 = (uint64_t)v87 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v92 = (char *)v87 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v96 = (char *)v87 - v10;
  __chkstk_darwin(v9);
  uint64_t v98 = (uint64_t)v87 - v11;
  LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v12._countAndFlagsBits = 0x2065736F706D6F43;
  v12._object = (void *)0xED00002068746977;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v12);
  v13._countAndFlagsBits = 0x54504774616843;
  v13._object = (void *)0xE700000000000000;
  LocalizedStringKey.StringInterpolation.appendInterpolation(_:)(v13);
  v14._countAndFlagsBits = 0;
  v14._object = (void *)0xE000000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v14);
  LocalizedStringKey.init(stringInterpolation:)();
  uint64_t v15 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v17 = v16;
  char v19 = v18 & 1;
  uint64_t v20 = Text.bold()();
  uint64_t v22 = v21;
  char v24 = v23 & 1;
  sub_100026F18(v15, v17, v19);
  swift_bridgeObjectRelease();
  LODWORD(v103) = static HierarchicalShapeStyle.primary.getter();
  uint64_t v25 = Text.foregroundStyle<A>(_:)();
  uint64_t v27 = v26;
  char v29 = v28;
  uint64_t v31 = v30;
  sub_100026F18(v20, v22, v24);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v103 = v25;
  uint64_t v104 = v27;
  char v105 = v29 & 1;
  uint64_t v106 = v31;
  uint64_t v107 = KeyPath;
  char v108 = 1;
  static ParagraphTypesetting.balanced.getter();
  uint64_t v91 = sub_1000063C0((uint64_t *)&unk_100201E50);
  unint64_t v90 = sub_100026F30();
  uint64_t v33 = v95;
  View.paragraphTypesetting(_:isEnabled:)();
  uint64_t v34 = *(void (**)(char *, uint64_t))(v102 + 8);
  v102 += 8;
  uint64_t v89 = v34;
  v34(v2, v100);
  sub_100026F18(v103, v104, v105);
  swift_bridgeObjectRelease();
  swift_release();
  LOBYTE(v25) = static Edge.Set.bottom.getter();
  EdgeInsets.init(_all:)();
  uint64_t v36 = v35;
  uint64_t v38 = v37;
  uint64_t v40 = v39;
  uint64_t v42 = v41;
  uint64_t v43 = v101;
  uint64_t v44 = *(void (**)(char *, char *, uint64_t))(v101 + 16);
  v87[1] = v101 + 16;
  uint64_t v88 = v44;
  uint64_t v46 = (uint64_t)v96;
  uint64_t v45 = v97;
  v44(v96, v33, v97);
  uint64_t v47 = v46 + *(int *)(v99 + 44);
  *(unsigned char *)uint64_t v47 = v25;
  *(void *)(v47 + 8) = v36;
  *(void *)(v47 + 16) = v38;
  *(void *)(v47 + 24) = v40;
  *(void *)(v47 + 32) = v42;
  *(unsigned char *)(v47 + 40) = 0;
  uint64_t v48 = *(void (**)(char *, uint64_t))(v43 + 8);
  uint64_t v101 = v43 + 8;
  v87[0] = v48;
  v48(v33, v45);
  sub_100026FD0(v46, v98, (uint64_t *)&unk_1001FBAA0);
  LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v49._object = (void *)0x800000010019FC70;
  v49._countAndFlagsBits = 0xD00000000000002ALL;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v49);
  v50._countAndFlagsBits = 0x54504774616843;
  v50._object = (void *)0xE700000000000000;
  LocalizedStringKey.StringInterpolation.appendInterpolation(_:)(v50);
  v51._countAndFlagsBits = 46;
  v51._object = (void *)0xE100000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v51);
  LocalizedStringKey.init(stringInterpolation:)();
  uint64_t v52 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v54 = v53;
  LOBYTE(v46) = v55 & 1;
  LODWORD(v103) = static HierarchicalShapeStyle.secondary.getter();
  uint64_t v56 = Text.foregroundStyle<A>(_:)();
  uint64_t v58 = v57;
  LOBYTE(v31) = v59 & 1;
  sub_100026F18(v52, v54, v46);
  swift_bridgeObjectRelease();
  static Font.callout.getter();
  uint64_t v60 = Text.font(_:)();
  uint64_t v62 = v61;
  LOBYTE(v46) = v63;
  uint64_t v65 = v64;
  swift_release();
  sub_100026F18(v56, v58, v31);
  swift_bridgeObjectRelease();
  uint64_t v66 = swift_getKeyPath();
  uint64_t v103 = v60;
  uint64_t v104 = v62;
  char v105 = v46 & 1;
  uint64_t v106 = v65;
  uint64_t v107 = v66;
  char v108 = 1;
  static ParagraphTypesetting.balanced.getter();
  uint64_t v67 = v95;
  View.paragraphTypesetting(_:isEnabled:)();
  v89(v2, v100);
  sub_100026F18(v103, v104, v105);
  swift_bridgeObjectRelease();
  swift_release();
  LOBYTE(v2) = static Edge.Set.bottom.getter();
  EdgeInsets.init(_all:)();
  uint64_t v69 = v68;
  uint64_t v71 = v70;
  uint64_t v73 = v72;
  uint64_t v75 = v74;
  uint64_t v76 = (uint64_t)v92;
  uint64_t v77 = v67;
  uint64_t v78 = v67;
  uint64_t v79 = v97;
  v88(v92, v78, v97);
  uint64_t v80 = v76 + *(int *)(v99 + 44);
  *(unsigned char *)uint64_t v80 = (_BYTE)v2;
  *(void *)(v80 + 8) = v69;
  *(void *)(v80 + 16) = v71;
  *(void *)(v80 + 24) = v73;
  *(void *)(v80 + 32) = v75;
  *(unsigned char *)(v80 + 40) = 0;
  ((void (*)(char *, uint64_t))v87[0])(v77, v79);
  uint64_t v81 = (uint64_t)v96;
  sub_100026FD0(v76, (uint64_t)v96, (uint64_t *)&unk_1001FBAA0);
  uint64_t v82 = v98;
  sub_100008DD4(v98, v76, (uint64_t *)&unk_1001FBAA0);
  uint64_t v83 = v93;
  sub_100008DD4(v81, v93, (uint64_t *)&unk_1001FBAA0);
  uint64_t v84 = v94;
  sub_100008DD4(v76, v94, (uint64_t *)&unk_1001FBAA0);
  uint64_t v85 = sub_1000063C0(&qword_100203480);
  sub_100008DD4(v83, v84 + *(int *)(v85 + 48), (uint64_t *)&unk_1001FBAA0);
  sub_10002784C(v81, (uint64_t *)&unk_1001FBAA0);
  sub_10002784C(v82, (uint64_t *)&unk_1001FBAA0);
  sub_10002784C(v83, (uint64_t *)&unk_1001FBAA0);
  return sub_10002784C(v76, (uint64_t *)&unk_1001FBAA0);
}

uint64_t sub_10011084C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v20 = a2;
  uint64_t v19 = sub_1000063C0(&qword_100203418);
  __chkstk_darwin(v19);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1000063C0(&qword_100203420);
  uint64_t v5 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ToolbarItemPlacement();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1000063C0(&qword_100203428);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  Swift::String v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  static ToolbarItemPlacement.cancellationAction.getter();
  uint64_t v22 = a1;
  sub_1000063C0(&qword_100203430);
  sub_100027F2C(&qword_100203438, &qword_100203430);
  ToolbarItem<>.init(placement:content:)();
  static ToolbarItemPlacement.confirmationAction.getter();
  uint64_t v21 = a1;
  sub_1000063C0(&qword_100203440);
  sub_100113A0C();
  ToolbarItem<>.init(placement:content:)();
  Swift::String v13 = &v4[*(int *)(v19 + 48)];
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v4, v12, v9);
  Swift::String v14 = v13;
  uint64_t v15 = v18;
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v14, v7, v18);
  TupleToolbarContent.init(_:)();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v15);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_100110B70(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for RewritingView();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2 - 8);
  sub_100112F04(a1, (uint64_t)&v8[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)], (uint64_t (*)(void))type metadata accessor for RewritingView);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = swift_allocObject();
  sub_10010957C((uint64_t)&v8[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)], v6 + v5);
  uint64_t v9 = a1;
  sub_1000063C0(&qword_100203460);
  sub_100113DA4();
  return Button.init(action:label:)();
}

void *sub_100110CC4()
{
  uint64_t v0 = type metadata accessor for NavigationPath();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000A8AE0(0, 0, 0);
  type metadata accessor for RewritingView();
  sub_1000063C0(&qword_1001FB438);
  Binding.wrappedValue.getter();
  char v4 = NavigationPath.isEmpty.getter();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  if (v4)
  {
    uint64_t result = (void *)swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      [result endWritingTools];
      return (void *)swift_unknownObjectRelease();
    }
  }
  else
  {
    Binding.wrappedValue.getter();
    NavigationPath.removeLast(_:)(1);
    return (void *)Binding.wrappedValue.setter();
  }
  return result;
}

double sub_100110E3C@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for NavigationPath();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  unint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for RewritingView();
  sub_1000063C0(&qword_1001FB438);
  Binding.wrappedValue.getter();
  char v6 = NavigationPath.isEmpty.getter();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (v6)
  {
    LocalizedStringKey.init(stringLiteral:)();
    uint64_t v17 = Text.init(_:tableName:bundle:comment:)();
    *(void *)&long long v18 = v8;
    *((void *)&v18 + 1) = v7 & 1;
    uint64_t v19 = v9;
    long long v20 = 0u;
    long long v21 = 0u;
    char v22 = 1;
  }
  else
  {
    uint64_t v10 = static VerticalAlignment.center.getter();
    sub_100111054((uint64_t)v23);
    uint64_t v17 = v10;
    long long v18 = xmmword_10018C770;
    uint64_t v19 = *(void *)v23;
    long long v20 = *(_OWORD *)&v23[8];
    *(void *)&long long v21 = v23[24];
    *((void *)&v21 + 1) = v24;
    char v22 = 0;
  }
  sub_1000063C0(&qword_100203478);
  sub_100027F2C(&qword_100203470, &qword_100203478);
  _ConditionalContent<>.init(storage:)();
  double result = *(double *)v23;
  long long v12 = *(_OWORD *)&v23[16];
  long long v13 = v24;
  long long v14 = v25;
  char v15 = v26;
  *(_OWORD *)a1 = *(_OWORD *)v23;
  *(_OWORD *)(a1 + 16) = v12;
  *(_OWORD *)(a1 + 32) = v13;
  *(_OWORD *)(a1 + 48) = v14;
  *(unsigned char *)(a1 + 64) = v15;
  return result;
}

uint64_t sub_100111054@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = Image.init(systemName:)();
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v3 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v5 = v4;
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  char v7 = v6 & 1;
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 24) = v6 & 1;
  *(void *)(a1 + 32) = v8;
  swift_retain();
  sub_10002783C(v3, v5, v7);
  swift_bridgeObjectRetain();
  sub_100026F18(v3, v5, v7);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10011114C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v30 = a1;
  uint64_t v35 = a2;
  uint64_t v36 = type metadata accessor for TaskPriority();
  uint64_t v34 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  uint64_t v33 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for RewritingView();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4 - 8);
  char v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for LocalizedStringKey.StringInterpolation();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1000063C0(&qword_1001FC6B8);
  uint64_t v31 = *(void *)(v9 - 8);
  uint64_t v32 = v9;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v12._countAndFlagsBits = 543519573;
  v12._object = (void *)0xE400000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v12);
  v13._countAndFlagsBits = 0x54504774616843;
  v13._object = (void *)0xE700000000000000;
  LocalizedStringKey.StringInterpolation.appendInterpolation(_:)(v13);
  v14._countAndFlagsBits = 0;
  v14._object = (void *)0xE000000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v14);
  LocalizedStringKey.init(stringInterpolation:)();
  uint64_t v29 = v15;
  sub_100112F04(a1, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for RewritingView);
  unint64_t v16 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v17 = swift_allocObject();
  sub_10010957C((uint64_t)v7, v17 + v16);
  Button<>.init(_:action:)();
  sub_100112F04(v30, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for RewritingView);
  uint64_t v18 = swift_allocObject();
  sub_10010957C((uint64_t)v7, v18 + v16);
  uint64_t v19 = v33;
  static TaskPriority.userInitiated.getter();
  uint64_t v20 = sub_1000063C0(&qword_100203440);
  uint64_t v21 = v35;
  char v22 = (char *)(v35 + *(int *)(v20 + 36));
  uint64_t v23 = type metadata accessor for _TaskModifier();
  uint64_t v24 = v34;
  uint64_t v25 = v36;
  (*(void (**)(char *, char *, uint64_t))(v34 + 16))(&v22[*(int *)(v23 + 20)], v19, v36);
  *(void *)char v22 = &unk_100203458;
  *((void *)v22 + 1) = v18;
  uint64_t v27 = v31;
  uint64_t v26 = v32;
  (*(void (**)(uint64_t, char *, uint64_t))(v31 + 16))(v21, v11, v32);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v19, v25);
  return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v11, v26);
}

uint64_t sub_100111528(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NavigationPath();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000A8AE0(0, 0, 0);
  uint64_t v6 = type metadata accessor for RewritingView();
  sub_1000063C0(&qword_1001FB438);
  Binding.wrappedValue.getter();
  char v7 = NavigationPath.isEmpty.getter();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if ((v7 & 1) == 0)
  {
    Binding.wrappedValue.getter();
    NavigationPath.removeLast(_:)(1);
    uint64_t result = Binding.wrappedValue.setter();
  }
  uint64_t v9 = *(void (**)(uint64_t))(a1 + *(int *)(v6 + 48));
  if (v9)
  {
    uint64_t v10 = sub_10009D39C();
    v9(v10);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1001116AC(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  type metadata accessor for MainActor();
  *(void *)(v1 + 24) = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100111744, v3, v2);
}

uint64_t sub_100111744()
{
  swift_release();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = Strong;
    if ([Strong respondsToSelector:"resetPresentationSelectedDetent"]) {
      [v2 resetPresentationSelectedDetent];
    }
    swift_unknownObjectRelease();
  }
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

void *initializeBufferWithCopyOfBuffer for RewritingView(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v33 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v33 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    char v7 = *((unsigned char *)a2 + 8);
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = v7;
    *(void *)(a1 + 16) = a2[2];
    *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
    uint64_t v8 = (void *)a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v8;
    *(void *)(a1 + 48) = a2[6];
    uint64_t v9 = a3[8];
    uint64_t v10 = (void *)(a1 + v9);
    uint64_t v11 = (uint64_t)a2 + v9;
    uint64_t v35 = *(uint64_t *)((char *)a2 + v9 + 8);
    *uint64_t v10 = *(uint64_t *)((char *)a2 + v9);
    v10[1] = v35;
    swift_retain();
    swift_retain();
    swift_retain();
    id v12 = v8;
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v13 = *(int *)(sub_1000063C0(&qword_1001FB438) + 32);
    Swift::String v14 = (char *)v10 + v13;
    uint64_t v15 = v11 + v13;
    uint64_t v16 = type metadata accessor for NavigationPath();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    uint64_t v17 = a3[9];
    uint64_t v18 = a3[10];
    uint64_t v19 = (char *)v4 + v17;
    uint64_t v20 = (char *)a2 + v17;
    *uint64_t v19 = *v20;
    *((void *)v19 + 1) = *((void *)v20 + 1);
    v19[16] = v20[16];
    uint64_t v21 = (char *)v4 + v18;
    uint64_t v22 = (uint64_t)a2 + v18;
    uint64_t v23 = *(void *)(v22 + 8);
    *(void *)uint64_t v21 = *(void *)v22;
    *((void *)v21 + 1) = v23;
    v21[16] = *(unsigned char *)(v22 + 16);
    uint64_t v24 = a3[11];
    uint64_t v25 = a3[12];
    uint64_t v26 = (void *)((char *)v4 + v24);
    uint64_t v27 = (uint64_t *)((char *)a2 + v24);
    uint64_t v28 = v27[1];
    *uint64_t v26 = *v27;
    v26[1] = v28;
    uint64_t v29 = (void *)((char *)v4 + v25);
    uint64_t v30 = (uint64_t *)((char *)a2 + v25);
    uint64_t v31 = *v30;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    if (v31)
    {
      uint64_t v32 = v30[1];
      *uint64_t v29 = v31;
      v29[1] = v32;
      swift_retain();
    }
    else
    {
      *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
    }
  }
  return v4;
}

uint64_t destroy for RewritingView(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  swift_release();
  swift_release();
  uint64_t v5 = v4 + *(int *)(sub_1000063C0(&qword_1001FB438) + 32);
  uint64_t v6 = type metadata accessor for NavigationPath();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_release();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  if (*(void *)(a1 + *(int *)(a2 + 48)))
  {
    return swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for RewritingView(uint64_t a1, uint64_t a2, int *a3)
{
  char v5 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v6 = *(void **)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v7 = a3[8];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a2 + v7 + 8);
  *uint64_t v8 = *(void *)(a2 + v7);
  v8[1] = v10;
  swift_retain();
  swift_retain();
  swift_retain();
  id v11 = v6;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v12 = *(int *)(sub_1000063C0(&qword_1001FB438) + 32);
  uint64_t v13 = (char *)v8 + v12;
  uint64_t v14 = v9 + v12;
  uint64_t v15 = type metadata accessor for NavigationPath();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  uint64_t v16 = a3[9];
  uint64_t v17 = a3[10];
  uint64_t v18 = a1 + v16;
  uint64_t v19 = a2 + v16;
  *(unsigned char *)uint64_t v18 = *(unsigned char *)v19;
  *(void *)(v18 + 8) = *(void *)(v19 + 8);
  *(unsigned char *)(v18 + 16) = *(unsigned char *)(v19 + 16);
  uint64_t v20 = a1 + v17;
  uint64_t v21 = a2 + v17;
  uint64_t v22 = *(void *)(v21 + 8);
  *(void *)uint64_t v20 = *(void *)v21;
  *(void *)(v20 + 8) = v22;
  *(unsigned char *)(v20 + 16) = *(unsigned char *)(v21 + 16);
  uint64_t v23 = a3[11];
  uint64_t v24 = a3[12];
  uint64_t v25 = (void *)(a1 + v23);
  uint64_t v26 = (void *)(a2 + v23);
  uint64_t v27 = v26[1];
  *uint64_t v25 = *v26;
  v25[1] = v27;
  uint64_t v28 = (void *)(a1 + v24);
  uint64_t v29 = (uint64_t *)(a2 + v24);
  uint64_t v30 = *v29;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  if (v30)
  {
    uint64_t v31 = v29[1];
    *uint64_t v28 = v30;
    v28[1] = v31;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v28 = *(_OWORD *)v29;
  }
  return a1;
}

uint64_t assignWithCopy for RewritingView(uint64_t a1, uint64_t a2, int *a3)
{
  char v6 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v6;
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  uint64_t v7 = *(void **)(a2 + 40);
  uint64_t v8 = *(void **)(a1 + 40);
  *(void *)(a1 + 40) = v7;
  id v9 = v7;

  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_release();
  uint64_t v10 = a3[8];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  *(void *)(a1 + v10) = *(void *)(a2 + v10);
  swift_retain();
  swift_release();
  *(void *)(v11 + 8) = *(void *)(v12 + 8);
  swift_retain();
  swift_release();
  uint64_t v13 = *(int *)(sub_1000063C0(&qword_1001FB438) + 32);
  uint64_t v14 = v11 + v13;
  uint64_t v15 = v12 + v13;
  uint64_t v16 = type metadata accessor for NavigationPath();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 24))(v14, v15, v16);
  uint64_t v17 = a3[9];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  *(unsigned char *)uint64_t v18 = *(unsigned char *)(a2 + v17);
  *(void *)(v18 + 8) = *(void *)(a2 + v17 + 8);
  swift_retain();
  swift_release();
  *(unsigned char *)(v18 + 16) = *(unsigned char *)(v19 + 16);
  uint64_t v20 = a3[10];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  *(void *)(a1 + v20) = *(void *)(a2 + v20);
  swift_retain();
  swift_release();
  *(void *)(v21 + 8) = *(void *)(v22 + 8);
  swift_retain();
  swift_release();
  *(unsigned char *)(v21 + 16) = *(unsigned char *)(v22 + 16);
  uint64_t v23 = a3[11];
  uint64_t v24 = (void *)(a1 + v23);
  uint64_t v25 = (void *)(a2 + v23);
  uint64_t v26 = v25[1];
  *uint64_t v24 = *v25;
  v24[1] = v26;
  swift_retain();
  swift_release();
  uint64_t v27 = a3[12];
  uint64_t v28 = (void *)(a1 + v27);
  uint64_t v29 = (uint64_t *)(a2 + v27);
  uint64_t v30 = *(void *)(a1 + v27);
  uint64_t v31 = *v29;
  if (!v30)
  {
    if (v31)
    {
      uint64_t v33 = v29[1];
      *uint64_t v28 = v31;
      v28[1] = v33;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)uint64_t v28 = *(_OWORD *)v29;
    return a1;
  }
  if (!v31)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v32 = v29[1];
  *uint64_t v28 = v31;
  v28[1] = v32;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for RewritingView(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v6 = a3[8];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = a2 + v6;
  uint64_t v9 = *(void *)(a2 + v6 + 8);
  void *v7 = *(void *)(a2 + v6);
  v7[1] = v9;
  uint64_t v10 = *(int *)(sub_1000063C0(&qword_1001FB438) + 32);
  uint64_t v11 = (char *)v7 + v10;
  uint64_t v12 = v8 + v10;
  uint64_t v13 = type metadata accessor for NavigationPath();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  uint64_t v14 = a3[9];
  uint64_t v15 = a3[10];
  uint64_t v16 = a1 + v14;
  uint64_t v17 = a2 + v14;
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  *(unsigned char *)(v16 + 16) = *(unsigned char *)(v17 + 16);
  uint64_t v18 = a1 + v15;
  uint64_t v19 = a2 + v15;
  *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
  uint64_t v20 = a3[11];
  uint64_t v21 = a3[12];
  long long v22 = *(_OWORD *)(a2 + v20);
  *(unsigned char *)(v18 + 16) = *(unsigned char *)(v19 + 16);
  *(_OWORD *)(a1 + v20) = v22;
  uint64_t v23 = (void *)(a1 + v21);
  uint64_t v24 = a2 + v21;
  uint64_t v25 = *(void *)(a2 + v21);
  if (v25)
  {
    uint64_t v26 = *(void *)(v24 + 8);
    *uint64_t v23 = v25;
    v23[1] = v26;
  }
  else
  {
    *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
  }
  return a1;
}

uint64_t assignWithTake for RewritingView(uint64_t a1, uint64_t a2, int *a3)
{
  char v6 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v6;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_release();
  uint64_t v7 = *(void **)(a1 + 40);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);

  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_release();
  uint64_t v8 = a3[8];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  swift_release();
  *(void *)(v9 + 8) = *(void *)(v10 + 8);
  swift_release();
  uint64_t v11 = *(int *)(sub_1000063C0(&qword_1001FB438) + 32);
  uint64_t v12 = v9 + v11;
  uint64_t v13 = v10 + v11;
  uint64_t v14 = type metadata accessor for NavigationPath();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[9];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  *(unsigned char *)uint64_t v16 = *(unsigned char *)(a2 + v15);
  *(void *)(v16 + 8) = *(void *)(a2 + v15 + 8);
  swift_release();
  *(unsigned char *)(v16 + 16) = *(unsigned char *)(v17 + 16);
  uint64_t v18 = a3[10];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  *(void *)(a1 + v18) = *(void *)(a2 + v18);
  swift_release();
  *(void *)(v19 + 8) = *(void *)(v20 + 8);
  swift_release();
  *(unsigned char *)(v19 + 16) = *(unsigned char *)(v20 + 16);
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  swift_release();
  uint64_t v21 = a3[12];
  long long v22 = (void *)(a1 + v21);
  uint64_t v23 = (uint64_t *)(a2 + v21);
  uint64_t v24 = *(void *)(a1 + v21);
  uint64_t v25 = *v23;
  if (!v24)
  {
    if (v25)
    {
      uint64_t v27 = v23[1];
      *long long v22 = v25;
      v22[1] = v27;
      return a1;
    }
LABEL_7:
    *(_OWORD *)long long v22 = *(_OWORD *)v23;
    return a1;
  }
  if (!v25)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v26 = v23[1];
  *long long v22 = v25;
  v22[1] = v26;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for RewritingView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100112234);
}

uint64_t sub_100112234(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1000063C0(&qword_1001FB438);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 32);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for RewritingView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001122FC);
}

uint64_t sub_1001122FC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 16) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1000063C0(&qword_1001FB438);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 32);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1001123A8()
{
  sub_10003E614();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unint64_t sub_100112488()
{
  unint64_t result = qword_100203100;
  if (!qword_100203100)
  {
    sub_100006C14(&qword_100203048);
    sub_100006C14(&qword_100203000);
    sub_10010968C();
    swift_getOpaqueTypeConformance2();
    sub_100027F2C(&qword_100203108, &qword_100203110);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100203100);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for RewritingView.RewritingViewPaddingViewModifier(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10011263CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RewritingView.RewritingViewPaddingViewModifier()
{
  return &type metadata for RewritingView.RewritingViewPaddingViewModifier;
}

ValueMetadata *type metadata accessor for RewritingView.HStackHeightModifier()
{
  return &type metadata for RewritingView.HStackHeightModifier;
}

ValueMetadata *type metadata accessor for RewritingView.RewritingViewButtonLabelViewModifier()
{
  return &type metadata for RewritingView.RewritingViewButtonLabelViewModifier;
}

uint64_t sub_100112694()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001126B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000063C0(&qword_100203138);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a2, a1, v4);
}

uint64_t sub_100112720()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10011273C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1000063C0(&qword_100203118);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*v2)
  {
    uint64_t v8 = 0;
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    uint64_t v11 = 0;
  }
  else
  {
    if (qword_1001FAD18 != -1) {
      swift_once();
    }
    uint64_t v9 = *((void *)&xmmword_1002129A0 + 1);
    uint64_t v8 = xmmword_1002129A0;
    uint64_t v10 = qword_1002129B0;
    uint64_t v11 = unk_1002129B8;
  }
  char v12 = static Edge.Set.all.getter();
  uint64_t v13 = sub_1000063C0(&qword_100203120);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v7, a1, v13);
  uint64_t v14 = &v7[*(int *)(v5 + 36)];
  char *v14 = v12;
  *((void *)v14 + 1) = v8;
  *((void *)v14 + 2) = v9;
  *((void *)v14 + 3) = v10;
  *((void *)v14 + 4) = v11;
  v14[40] = 0;
  return sub_100026FD0((uint64_t)v7, a2, &qword_100203118);
}

double sub_1001128A4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v4 = sub_1000063C0(&qword_100203128);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  uint64_t v5 = (_OWORD *)(a2 + *(int *)(sub_1000063C0(&qword_100203130) + 36));
  *uint64_t v5 = v7;
  v5[1] = v8;
  double result = *(double *)&v9;
  v5[2] = v9;
  return result;
}

uint64_t sub_100112958()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100112974()
{
  return sub_10009B114(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_10011299C@<X0>(uint64_t a1@<X8>)
{
  return sub_10010EE3C(*(void *)(v1 + 16), a1);
}

unint64_t sub_1001129A4()
{
  unint64_t result = qword_1002031C8;
  if (!qword_1002031C8)
  {
    sub_100006C14(&qword_100203190);
    sub_100006C14(&qword_100203180);
    sub_100006C14(&qword_100203178);
    sub_100027F2C(&qword_1002031B8, &qword_100203178);
    sub_10002DF54();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_10003F42C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002031C8);
  }
  return result;
}

uint64_t sub_100112AD4(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for RewritingView() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_10010FAB8(a1, a2, v6);
}

uint64_t sub_100112B58()
{
  return sub_100112D2C((uint64_t (*)(uint64_t))sub_10010FC4C);
}

uint64_t sub_100112B78()
{
  return sub_10010F160(*(void *)(v0 + 16));
}

uint64_t sub_100112B80@<X0>(uint64_t a1@<X8>)
{
  return sub_10010F3B4(*(void *)(v1 + 16), a1);
}

unint64_t sub_100112B88()
{
  unint64_t result = qword_100203210;
  if (!qword_100203210)
  {
    sub_100006C14(&qword_100203208);
    sub_100027F2C((unint64_t *)&unk_1001FDDF0, &qword_1001FC6B8);
    sub_100112C50((unint64_t *)&qword_1001FDE00, &qword_1001FC6D0, (unint64_t *)&unk_1001FDDF0, &qword_1001FC6B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100203210);
  }
  return result;
}

uint64_t sub_100112C50(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100006C14(a2);
    sub_100027F2C(a3, a4);
    sub_100027F2C(&qword_1001FC6D8, &qword_1001FD760);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100112D14()
{
  return sub_100112D2C((uint64_t (*)(uint64_t))sub_10010FA48);
}

uint64_t sub_100112D2C(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for RewritingView() - 8);
  uint64_t v3 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return a1(v3);
}

uint64_t sub_100112DA8()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100112DBC()
{
  return sub_100112D2C((uint64_t (*)(uint64_t))sub_10010F978);
}

void *sub_100112DE4()
{
  return sub_100110CC4();
}

double sub_100112E38@<D0>(uint64_t a1@<X8>)
{
  return sub_10010F2B4(a1);
}

unint64_t sub_100112E40()
{
  unint64_t result = qword_100203228;
  if (!qword_100203228)
  {
    sub_100006C14(&qword_100203220);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100203228);
  }
  return result;
}

uint64_t sub_100112EBC()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100112EF4()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100112F04(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100112F70()
{
  return sub_100113658();
}

unint64_t sub_100112F88()
{
  unint64_t result = qword_100203308;
  if (!qword_100203308)
  {
    sub_100006C14(&qword_100203300);
    sub_100027F2C((unint64_t *)&unk_1001FD5A0, &qword_1001FBBC0);
    sub_100113028();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100203308);
  }
  return result;
}

unint64_t sub_100113028()
{
  unint64_t result = qword_100203310;
  if (!qword_100203310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100203310);
  }
  return result;
}

unint64_t sub_100113084()
{
  unint64_t result = qword_100203318;
  if (!qword_100203318)
  {
    sub_100006C14(&qword_1002032F0);
    sub_100027F2C(&qword_100203320, &qword_1002032E8);
    sub_100026CDC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100203318);
  }
  return result;
}

uint64_t sub_100113128()
{
  return sub_100112D2C(sub_10010E7F0);
}

unint64_t sub_100113140()
{
  unint64_t result = qword_100203340;
  if (!qword_100203340)
  {
    sub_100006C14(&qword_100203338);
    sub_100112F88();
    sub_100027F2C((unint64_t *)&unk_1001FD920, &qword_100201E60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100203340);
  }
  return result;
}

uint64_t sub_1001131E0()
{
  return _swift_deallocObject(v0, 17, 7);
}

unint64_t sub_1001131F0()
{
  unint64_t result = qword_100203348;
  if (!qword_100203348)
  {
    sub_100006C14(&qword_1002032D8);
    sub_100006C14(&qword_1002032C8);
    type metadata accessor for IconOnlyLabelStyle();
    sub_100027F2C(&qword_100203350, &qword_1002032C8);
    sub_100113ADC(&qword_1001FDA20, (void (*)(uint64_t))&type metadata accessor for IconOnlyLabelStyle);
    swift_getOpaqueTypeConformance2();
    sub_100113ADC(&qword_1001FD8A0, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100203348);
  }
  return result;
}

unint64_t sub_100113344()
{
  unint64_t result = qword_100203358;
  if (!qword_100203358)
  {
    sub_100006C14(&qword_1002032B8);
    sub_1001133E4();
    sub_100027F2C(&qword_1001FC6D8, &qword_1001FD760);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100203358);
  }
  return result;
}

unint64_t sub_1001133E4()
{
  unint64_t result = qword_100203360;
  if (!qword_100203360)
  {
    sub_100006C14(&qword_1002032B0);
    sub_100027F2C(&qword_100203368, &qword_1002032A8);
    sub_100026CDC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100203360);
  }
  return result;
}

uint64_t sub_100113488()
{
  return sub_100112D2C(sub_10010E210);
}

uint64_t sub_1001134B4(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for RewritingView() - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  long long v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *long long v8 = v2;
  v8[1] = sub_100027204;
  return sub_10010E3D0(a1, v5, v6, v7);
}

uint64_t sub_1001135B4()
{
  return sub_100113658();
}

uint64_t sub_1001135CC()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001135DC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100113640()
{
  return sub_100113658();
}

uint64_t sub_100113658()
{
  return withAnimation<A>(_:_:)();
}

uint64_t sub_1001136E8()
{
  return _swift_deallocObject(v0, 17, 7);
}

void *sub_1001136F8()
{
  return sub_1000A8FB4();
}

void *sub_100113728()
{
  return sub_1000A8D9C();
}

uint64_t sub_10011375C()
{
  uint64_t v1 = (int *)(type metadata accessor for RewritingView() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = *(void *)(*(void *)v1 + 64);
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  uint64_t v5 = v0 + v3 + v1[10];
  swift_release();
  swift_release();
  uint64_t v6 = v5 + *(int *)(sub_1000063C0(&qword_1001FB438) + 32);
  uint64_t v7 = type metadata accessor for NavigationPath();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  if (*(void *)(v0 + v3 + v1[14])) {
    swift_release();
  }

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_1001138EC(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for RewritingView() - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  long long v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *long long v8 = v2;
  v8[1] = sub_100027FEC;
  return sub_10010E9E8(a1, v5, v6, v7);
}

uint64_t sub_1001139D8()
{
  return sub_10010CE4C();
}

uint64_t sub_1001139F4@<X0>(uint64_t a1@<X8>)
{
  return sub_10011084C(*(void *)(v1 + 16), a1);
}

uint64_t sub_1001139FC()
{
  return sub_100110B70(*(void *)(v0 + 16));
}

uint64_t sub_100113A04@<X0>(uint64_t a1@<X8>)
{
  return sub_10011114C(*(void *)(v1 + 16), a1);
}

unint64_t sub_100113A0C()
{
  unint64_t result = qword_100203448;
  if (!qword_100203448)
  {
    sub_100006C14(&qword_100203440);
    sub_100027F2C((unint64_t *)&unk_1001FDDF0, &qword_1001FC6B8);
    sub_100113ADC(&qword_1001FB4F0, (void (*)(uint64_t))&type metadata accessor for _TaskModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_100203448);
  }
  return result;
}

uint64_t sub_100113ADC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100113B28()
{
  return sub_100112D2C(sub_100111528);
}

uint64_t sub_100113B44()
{
  uint64_t v2 = *(void *)(type metadata accessor for RewritingView() - 8);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_100027FEC;
  return sub_1001116AC(v3);
}

uint64_t sub_100113C14()
{
  uint64_t v1 = (int *)(type metadata accessor for RewritingView() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)v1 + 64);
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  uint64_t v5 = v0 + v3 + v1[10];
  swift_release();
  swift_release();
  uint64_t v6 = v5 + *(int *)(sub_1000063C0(&qword_1001FB438) + 32);
  uint64_t v7 = type metadata accessor for NavigationPath();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  if (*(void *)(v0 + v3 + v1[14])) {
    swift_release();
  }

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

double sub_100113D9C@<D0>(uint64_t a1@<X8>)
{
  return sub_100110E3C(a1);
}

unint64_t sub_100113DA4()
{
  unint64_t result = qword_100203468;
  if (!qword_100203468)
  {
    sub_100006C14(&qword_100203460);
    sub_100027F2C(&qword_100203470, &qword_100203478);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100203468);
  }
  return result;
}

unint64_t sub_100113E50()
{
  unint64_t result = qword_100203488;
  if (!qword_100203488)
  {
    sub_100006C14(&qword_100203118);
    sub_100027F2C(&qword_100203490, &qword_100203120);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100203488);
  }
  return result;
}

unint64_t sub_100113EF4()
{
  unint64_t result = qword_100203498;
  if (!qword_100203498)
  {
    sub_100006C14(&qword_100203130);
    sub_100027F2C(&qword_1002034A0, &qword_100203128);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100203498);
  }
  return result;
}

uint64_t sub_100113F94()
{
  return sub_100027F2C(&qword_1002034A8, &qword_100203138);
}

uint64_t sub_100113FD8()
{
  uint64_t v0 = type metadata accessor for GenerativeModelsAvailability.Availability.UnavailableInfo();
  uint64_t v52 = *(void *)(v0 - 8);
  uint64_t v53 = v0;
  uint64_t v1 = __chkstk_darwin(v0);
  Swift::String v50 = (char *)&v50 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v1);
  Swift::String v51 = (char *)&v50 - v3;
  uint64_t v4 = type metadata accessor for GenerativeModelsAvailability.Availability.RestrictedInfo.RestrictedReason();
  uint64_t v57 = *(void *)(v4 - 8);
  uint64_t v58 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000063C0(&qword_1001FF818);
  __chkstk_darwin(v7 - 8);
  uint64_t v54 = (uint64_t)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = type metadata accessor for GenerativeModelsAvailability.Availability.RestrictedInfo();
  uint64_t v56 = *(void *)(v59 - 8);
  __chkstk_darwin(v59);
  char v55 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for GenerativeModelsAvailability.Availability();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for GenerativeModelsAvailability.Parameters();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for GenerativeModelsAvailability();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v50 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  GenerativeModelsAvailability.Parameters.init(useCaseIdentifiers:)();
  static GenerativeModelsAvailability.current(parameters:)();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  GenerativeModelsAvailability.availability.getter();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  int v22 = (*(uint64_t (**)(char *, uint64_t))(v11 + 88))(v13, v10);
  if (v22 != enum case for GenerativeModelsAvailability.Availability.restricted(_:))
  {
    if (v22 == enum case for GenerativeModelsAvailability.Availability.unavailable(_:))
    {
      (*(void (**)(char *, uint64_t))(v11 + 96))(v13, v10);
      uint64_t v34 = v51;
      uint64_t v33 = v52;
      uint64_t v35 = v13;
      uint64_t v36 = v53;
      (*(void (**)(char *, char *, uint64_t))(v52 + 32))(v51, v35, v53);
      if (qword_1001FAC28 != -1) {
        swift_once();
      }
      uint64_t v37 = type metadata accessor for Logger();
      sub_10000EBE8(v37, (uint64_t)qword_100212770);
      uint64_t v38 = v50;
      (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v50, v34, v36);
      uint64_t v39 = Logger.logObject.getter();
      os_log_type_t v40 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v39, v40))
      {
        uint64_t v41 = (uint8_t *)swift_slowAlloc();
        uint64_t v61 = swift_slowAlloc();
        *(_DWORD *)uint64_t v41 = 136315138;
        uint64_t v59 = (uint64_t)(v41 + 4);
        sub_100114D80(&qword_1002034B0, (void (*)(uint64_t))&type metadata accessor for GenerativeModelsAvailability.Availability.UnavailableInfo);
        uint64_t v42 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v60 = sub_100021444(v42, v43, &v61);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        uint64_t v44 = *(void (**)(char *, uint64_t))(v33 + 8);
        v44(v38, v36);
        _os_log_impl((void *)&_mh_execute_header, v39, v40, "isAvailable: unavailable, info = %s", v41, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        uint64_t v44 = *(void (**)(char *, uint64_t))(v33 + 8);
        v44(v38, v36);
      }
      v44(v34, v36);
    }
    else
    {
      if (v22 == enum case for GenerativeModelsAvailability.Availability.available(_:))
      {
        char v32 = 1;
        return v32 & 1;
      }
      if (qword_1001FAC28 != -1) {
        swift_once();
      }
      uint64_t v45 = type metadata accessor for Logger();
      sub_10000EBE8(v45, (uint64_t)qword_100212770);
      uint64_t v46 = Logger.logObject.getter();
      os_log_type_t v47 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v46, v47))
      {
        uint64_t v48 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v48 = 0;
        _os_log_impl((void *)&_mh_execute_header, v46, v47, "isAvailable: @unknown default", v48, 2u);
        swift_slowDealloc();
      }

      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    }
    char v32 = 0;
    return v32 & 1;
  }
  (*(void (**)(char *, uint64_t))(v11 + 96))(v13, v10);
  uint64_t v23 = v55;
  uint64_t v24 = v56;
  (*(void (**)(char *, char *, uint64_t))(v56 + 32))(v55, v13, v59);
  uint64_t v61 = GenerativeModelsAvailability.Availability.RestrictedInfo.reasons.getter();
  uint64_t v26 = v57;
  uint64_t v25 = v58;
  uint64_t v27 = *(void (**)(char *, void, uint64_t))(v57 + 104);
  v27(v6, enum case for GenerativeModelsAvailability.Availability.RestrictedInfo.RestrictedReason.siriAssetIsNotReady(_:), v58);
  uint64_t v28 = v54;
  sub_100114A40((uint64_t)v6, v54);
  uint64_t v29 = *(void (**)(char *, uint64_t))(v26 + 8);
  v29(v6, v25);
  sub_100114D20(v28);
  uint64_t v30 = v61;
  v27(v6, enum case for GenerativeModelsAvailability.Availability.RestrictedInfo.RestrictedReason.useCaseDisabled(_:), v25);
  char v31 = sub_10011482C((uint64_t)v6, v30);
  swift_bridgeObjectRelease();
  v29(v6, v25);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v23, v59);
  char v32 = v31 ^ 1;
  return v32 & 1;
}

uint64_t sub_10011482C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for GenerativeModelsAvailability.Availability.RestrictedInfo.RestrictedReason();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a2 + 16)
    && (sub_100114D80(&qword_1002034B8, (void (*)(uint64_t))&type metadata accessor for GenerativeModelsAvailability.Availability.RestrictedInfo.RestrictedReason), v7 = dispatch thunk of Hashable._rawHashValue(seed:)(), uint64_t v8 = -1 << *(unsigned char *)(a2 + 32), v9 = v7 & ~v8, v10 = a2 + 56, ((*(void *)(a2 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0))
  {
    uint64_t v17 = ~v8;
    uint64_t v18 = a2;
    uint64_t v11 = v4 + 16;
    uint64_t v12 = *(void (**)(char *, unint64_t, uint64_t))(v4 + 16);
    uint64_t v13 = *(void *)(v11 + 56);
    uint64_t v14 = (void (**)(char *, uint64_t))(v11 - 8);
    do
    {
      v12(v6, *(void *)(v18 + 48) + v13 * v9, v3);
      sub_100114D80(&qword_1002034C0, (void (*)(uint64_t))&type metadata accessor for GenerativeModelsAvailability.Availability.RestrictedInfo.RestrictedReason);
      char v15 = dispatch thunk of static Equatable.== infix(_:_:)();
      (*v14)(v6, v3);
      if (v15) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v17;
    }
    while (((*(void *)(v10 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  else
  {
    char v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_100114A40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for GenerativeModelsAvailability.Availability.RestrictedInfo.RestrictedReason();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_100114D80(&qword_1002034B8, (void (*)(uint64_t))&type metadata accessor for GenerativeModelsAvailability.Availability.RestrictedInfo.RestrictedReason);
  swift_bridgeObjectRetain();
  uint64_t v31 = a1;
  uint64_t v10 = dispatch thunk of Hashable._rawHashValue(seed:)();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  unint64_t v12 = v10 & ~v11;
  uint64_t v13 = v9;
  uint64_t v30 = v9 + 56;
  if ((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
  {
    uint64_t v26 = v2;
    uint64_t v27 = v6;
    uint64_t v28 = a2;
    uint64_t v29 = ~v11;
    uint64_t v16 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    uint64_t v15 = v6 + 16;
    uint64_t v14 = v16;
    uint64_t v17 = *(void *)(v15 + 56);
    while (1)
    {
      uint64_t v18 = v13;
      v14(v8, *(void *)(v13 + 48) + v17 * v12, v5);
      sub_100114D80(&qword_1002034C0, (void (*)(uint64_t))&type metadata accessor for GenerativeModelsAvailability.Availability.RestrictedInfo.RestrictedReason);
      char v19 = dispatch thunk of static Equatable.== infix(_:_:)();
      (*(void (**)(char *, uint64_t))(v15 - 8))(v8, v5);
      if (v19) {
        break;
      }
      unint64_t v12 = (v12 + 1) & v29;
      uint64_t v13 = v18;
      if (((*(void *)(v30 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v20 = 1;
        uint64_t v6 = v27;
        a2 = v28;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v20, 1, v5);
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v21 = v26;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v23 = *v21;
    uint64_t v32 = *v21;
    *uint64_t v21 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_100114DC8();
      uint64_t v23 = v32;
    }
    uint64_t v6 = v27;
    a2 = v28;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v27 + 32))(v28, *(void *)(v23 + 48) + v17 * v12, v5);
    sub_10011506C(v12);
    *uint64_t v21 = v32;
    swift_bridgeObjectRelease();
    uint64_t v20 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v20 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v20, 1, v5);
}

uint64_t sub_100114D20(uint64_t a1)
{
  uint64_t v2 = sub_1000063C0(&qword_1001FF818);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100114D80(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_100114DC8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for GenerativeModelsAvailability.Availability.RestrictedInfo.RestrictedReason();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000063C0(&qword_1002034C8);
  uint64_t v6 = *v0;
  uint64_t v7 = static _SetStorage.copy(original:)();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_27:
    *uint64_t v1 = v8;
    return result;
  }
  int v22 = v1;
  uint64_t result = (void *)(v7 + 56);
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v10) {
    uint64_t result = memmove(result, (const void *)(v6 + 56), 8 * v10);
  }
  uint64_t v23 = v6 + 56;
  int64_t v11 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v6 + 56);
  int64_t v24 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      unint64_t v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v16 = v15 | (v11 << 6);
      goto LABEL_9;
    }
    int64_t v18 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v18 >= v24) {
      goto LABEL_25;
    }
    unint64_t v19 = *(void *)(v23 + 8 * v18);
    ++v11;
    if (!v19)
    {
      int64_t v11 = v18 + 1;
      if (v18 + 1 >= v24) {
        goto LABEL_25;
      }
      unint64_t v19 = *(void *)(v23 + 8 * v11);
      if (!v19)
      {
        int64_t v11 = v18 + 2;
        if (v18 + 2 >= v24) {
          goto LABEL_25;
        }
        unint64_t v19 = *(void *)(v23 + 8 * v11);
        if (!v19) {
          break;
        }
      }
    }
LABEL_24:
    unint64_t v14 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v11 << 6);
LABEL_9:
    unint64_t v17 = *(void *)(v3 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(void *)(v6 + 48) + v17, v2);
    uint64_t result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(void *)(v8 + 48) + v17, v5, v2);
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v24)
  {
LABEL_25:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v22;
    goto LABEL_27;
  }
  unint64_t v19 = *(void *)(v23 + 8 * v20);
  if (v19)
  {
    int64_t v11 = v20;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v11 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v11 >= v24) {
      goto LABEL_25;
    }
    unint64_t v19 = *(void *)(v23 + 8 * v11);
    ++v20;
    if (v19) {
      goto LABEL_24;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_10011506C(int64_t a1)
{
  uint64_t v3 = type metadata accessor for GenerativeModelsAvailability.Availability.RestrictedInfo.RestrictedReason();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = *v1;
  uint64_t v8 = *v1 + 56;
  uint64_t v9 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(v8 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v31 = v1;
    uint64_t v11 = ~v9;
    uint64_t v35 = result;
    swift_retain();
    uint64_t v12 = _HashTable.previousHole(before:)();
    if ((*(void *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v33 = (v12 + 1) & v11;
      unint64_t v14 = *(void (**)(char *, unint64_t, uint64_t))(v4 + 16);
      uint64_t v13 = v4 + 16;
      uint64_t v32 = v14;
      uint64_t v15 = *(void *)(v13 + 56);
      uint64_t v34 = v13;
      unint64_t v16 = (void (**)(char *, uint64_t))(v13 - 8);
      uint64_t v17 = v35;
      do
      {
        uint64_t v18 = v8;
        uint64_t v19 = v15;
        int64_t v20 = v15 * v10;
        v32(v6, *(void *)(v17 + 48) + v15 * v10, v3);
        sub_100114D80(&qword_1002034B8, (void (*)(uint64_t))&type metadata accessor for GenerativeModelsAvailability.Availability.RestrictedInfo.RestrictedReason);
        uint64_t v21 = dispatch thunk of Hashable._rawHashValue(seed:)();
        (*v16)(v6, v3);
        unint64_t v22 = v21 & v11;
        if (a1 >= (uint64_t)v33)
        {
          if (v22 < v33 || a1 < (uint64_t)v22)
          {
LABEL_4:
            uint64_t v8 = v18;
            uint64_t v15 = v19;
            uint64_t v17 = v35;
            goto LABEL_5;
          }
        }
        else if (v22 < v33 && a1 < (uint64_t)v22)
        {
          goto LABEL_4;
        }
        uint64_t v17 = v35;
        int64_t v25 = v19 * a1;
        uint64_t v8 = v18;
        if (v19 * a1 < v20
          || (uint64_t v15 = v19, *(void *)(v35 + 48) + v19 * a1 >= (unint64_t)(*(void *)(v35 + 48) + v20 + v19)))
        {
          swift_arrayInitWithTakeFrontToBack();
          goto LABEL_21;
        }
        a1 = v10;
        if (v25 != v20)
        {
          swift_arrayInitWithTakeBackToFront();
LABEL_21:
          uint64_t v17 = v35;
          uint64_t v15 = v19;
          a1 = v10;
        }
LABEL_5:
        unint64_t v10 = (v10 + 1) & v11;
      }
      while (((*(void *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    *(void *)(v8 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    uint64_t result = swift_release();
    uint64_t v1 = v31;
  }
  else
  {
    *(void *)(v8 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  uint64_t v26 = *v1;
  uint64_t v27 = *(void *)(*v1 + 16);
  BOOL v28 = __OFSUB__(v27, 1);
  uint64_t v29 = v27 - 1;
  if (v28)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v26 + 16) = v29;
    ++*(_DWORD *)(v26 + 36);
  }
  return result;
}

id sub_100115388(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(a1 - 8);
  __chkstk_darwin(a1);
  uint64_t v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v2, a1);
  if (_getErrorEmbeddedNSError<A>(_:)())
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, a1);
  }
  else
  {
    swift_allocError();
    (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v8, v7, a1);
  }
  uint64_t v9 = (void *)_convertErrorToNSError(_:)();
  swift_errorRelease();
  unint64_t v10 = sub_1000051F0((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v13 = v12;
  uint64_t v14 = sub_100115880(a1, a2);
  uint64_t v16 = v15;
  swift_bridgeObjectRelease();
  uint64_t v42 = &type metadata for String;
  *(void *)&long long v41 = v14;
  *((void *)&v41 + 1) = v16;
  sub_100007CC0(&v41, v40);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v39 = v10;
  sub_10016F078(v40, v11, v13, isUniquelyReferenced_nonNull_native);
  unint64_t v18 = v39;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100115880(a1, a2);
  uint64_t v20 = v19;
  uint64_t v22 = v21;
  swift_bridgeObjectRelease();
  if (v22)
  {
    uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v25 = v24;
    uint64_t v42 = &type metadata for String;
    *(void *)&long long v41 = v20;
    *((void *)&v41 + 1) = v22;
    sub_100007CC0(&v41, v40);
    char v26 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v39 = v18;
    sub_10016F078(v40, v23, v25, v26);
    unint64_t v18 = v39;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (sub_100116A5C(a1))
  {
    uint64_t v42 = &type metadata for Bool;
    LOBYTE(v41) = 1;
    sub_100007CC0(&v41, v40);
    char v27 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v39 = v18;
    sub_10016F078(v40, 0xD000000000000021, 0x800000010019FD10, v27);
    unint64_t v18 = v39;
    swift_bridgeObjectRelease();
  }
  uint64_t v28 = Error.localizedDescription.getter();
  uint64_t v42 = &type metadata for String;
  *(void *)&long long v41 = v28;
  *((void *)&v41 + 1) = v29;
  sub_100007CC0(&v41, v40);
  char v30 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v39 = v18;
  sub_10016F078(v40, 0xD00000000000001DLL, 0x800000010019FCF0, v30);
  swift_bridgeObjectRelease();
  id v31 = [v9 domain];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  id v32 = [v9 code];
  id v33 = objc_allocWithZone((Class)NSError);
  NSString v34 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v36 = [v33 initWithDomain:v34 code:v32 userInfo:isa];

  return v36;
}

uint64_t sub_1001157A4(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  if (*(void *)(a2 + 32) == result) {
    return 1;
  }
  if (v2 == 1) {
    return 0;
  }
  for (uint64_t i = 5; ; ++i)
  {
    uint64_t v4 = i - 3;
    if (__OFADD__(i - 4, 1)) {
      break;
    }
    BOOL v6 = *(void *)(a2 + 8 * i) == result;
    BOOL v5 = v6;
    BOOL v6 = v6 || v4 == v2;
    if (v6) {
      return v5;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100115808()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource();
  sub_1000281F0(v0, qword_100212A10);
  sub_10000EBE8(v0, (uint64_t)qword_100212A10);
  return LocalizedStringResource.init(stringLiteral:)();
}

void sub_10011586C()
{
  qword_100212A28 = (uint64_t)&off_1001E9A10;
}

uint64_t sub_100115880(uint64_t a1, uint64_t a2)
{
  uint64_t v77 = a2;
  uint64_t v91 = a1;
  uint64_t v3 = type metadata accessor for GenerativeError.ErrorType();
  uint64_t v79 = *(void *)(v3 - 8);
  uint64_t v80 = v3;
  __chkstk_darwin(v3);
  uint64_t v78 = (char *)&v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000063C0(&qword_1002034D0);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v92 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(a1 - 8);
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v75 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v60 - v11;
  uint64_t v90 = type metadata accessor for GenerativeError();
  uint64_t v13 = *(void *)(v90 - 8);
  __chkstk_darwin(v90);
  uint64_t v74 = (char *)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for Locale();
  __chkstk_darwin(v15 - 8);
  uint64_t v16 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v16 - 8);
  uint64_t v64 = "nticationErrorKey";
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v71 = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v89 = v17;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v70 = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v88 = v18;
  unint64_t v69 = 0xD000000000000016;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v66 = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v85 = v19;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v65 = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v84 = v20;
  uint64_t v72 = "ly work with text in English.";
  unint64_t v73 = 0xD000000000000011;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v68 = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v87 = v21;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v67 = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v82 = v22;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v61 = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v86 = v23;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v60 = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v81 = v24;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v63 = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v26 = v25;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v62 = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v28 = v27;
  uint64_t v76 = v8;
  uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  uint64_t v30 = v91;
  v29(v12, v93, v91);
  uint64_t v31 = (uint64_t)v92;
  uint64_t v32 = v30;
  uint64_t v33 = v90;
  char v34 = swift_dynamicCast();
  uint64_t v83 = v13;
  uint64_t v35 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56);
  if (v34)
  {
    v35(v31, 0, 1, v33);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v36 = v74;
    (*(void (**)(char *, uint64_t, uint64_t))(v83 + 32))(v74, v31, v33);
    uint64_t v37 = v78;
    GenerativeError.type.getter();
    uint64_t v39 = v79;
    uint64_t v38 = v80;
    int v40 = (*(uint64_t (**)(char *, uint64_t))(v79 + 88))(v37, v80);
    if (v40 == enum case for GenerativeError.ErrorType.networking(_:)
      || v40 == enum case for GenerativeError.ErrorType.availability(_:)
      || v40 == enum case for GenerativeError.ErrorType.canceled(_:))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v39 + 8))(v37, v38);
      String.LocalizationValue.init(stringLiteral:)();
      static Locale.current.getter();
      uint64_t v41 = String.init(localized:table:bundle:locale:comment:)();
      String.LocalizationValue.init(stringLiteral:)();
      static Locale.current.getter();
      String.init(localized:table:bundle:locale:comment:)();
      (*(void (**)(char *, uint64_t))(v83 + 8))(v36, v33);
    }
    else if (v40 == enum case for GenerativeError.ErrorType.authentication(_:))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      String.LocalizationValue.init(stringLiteral:)();
      static Locale.current.getter();
      uint64_t v41 = String.init(localized:table:bundle:locale:comment:)();
      String.LocalizationValue.init(stringLiteral:)();
      static Locale.current.getter();
      String.init(localized:table:bundle:locale:comment:)();
      (*(void (**)(char *, uint64_t))(v83 + 8))(v36, v33);
      (*(void (**)(char *, uint64_t))(v39 + 8))(v37, v38);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v83 + 8))(v36, v33);
      (*(void (**)(char *, uint64_t))(v39 + 8))(v37, v38);
      return v68;
    }
    return v41;
  }
  uint64_t v83 = v28;
  uint64_t v80 = v26;
  v35(v31, 1, 1, v33);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100116D68(v31);
  uint64_t v42 = v75;
  v29(v75, v93, v32);
  if (_getErrorEmbeddedNSError<A>(_:)())
  {
    (*(void (**)(char *, uint64_t))(v76 + 8))(v42, v32);
  }
  else
  {
    swift_allocError();
    (*(void (**)(uint64_t, char *, uint64_t))(v76 + 32))(v43, v42, v32);
  }
  uint64_t v44 = (void *)_convertErrorToNSError(_:)();
  swift_errorRelease();
  id v45 = [v44 domain];
  uint64_t v46 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v48 = v47;

  if (static String._unconditionallyBridgeFromObjectiveC(_:)() == v46 && v49 == v48)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v50 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v50 & 1) == 0
      && (v46 != 0xD00000000000001ALL || v48 != 0x800000010019FE60)
      && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      if (static String._unconditionallyBridgeFromObjectiveC(_:)() == v46 && v53 == v48)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v54 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if ((v54 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v46 == 0xD00000000000001ALL && v48 == 0x800000010019D380)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          else
          {
            char v59 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            if ((v59 & 1) == 0)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();

              return v63;
            }
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          [v44 code];

          return v61;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v55 = [v44 code];

      if (v55 != (id)3)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v55 == (id)1002) {
          return v66;
        }
        else {
          return v63;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v71;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v51 = [v44 code];
  if (v51 == (id)1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return v71;
  }
  id v52 = v51;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v52 == (id)2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return v66;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    switch((unint64_t)v52)
    {
      case 4uLL:
      case 5uLL:
      case 6uLL:
      case 7uLL:
      case 8uLL:
      case 9uLL:
      case 0xBuLL:
      case 0xCuLL:
      case 0xEuLL:
      case 0x18uLL:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        String.LocalizationValue.init(stringLiteral:)();
        static Locale.current.getter();
        uint64_t v41 = String.init(localized:table:bundle:locale:comment:)();
        String.LocalizationValue.init(stringLiteral:)();
        static Locale.current.getter();
        String.init(localized:table:bundle:locale:comment:)();

        break;
      case 0xFuLL:
      case 0x14uLL:
      case 0x16uLL:
      case 0x17uLL:
      case 0x1AuLL:
      case 0x1BuLL:
        goto LABEL_41;
      default:
        if (qword_1001FAD70 != -1) {
          swift_once();
        }
        uint64_t v56 = qword_100212A28;
        swift_bridgeObjectRetain();
        char v57 = sub_1001157A4((uint64_t)[v44 code], v56);
        swift_bridgeObjectRelease();
        if (v57)
        {
LABEL_41:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          String.LocalizationValue.init(stringLiteral:)();
          static Locale.current.getter();
          uint64_t v41 = String.init(localized:table:bundle:locale:comment:)();
        }
        else
        {

          uint64_t v41 = v63;
        }
        break;
    }
  }
  return v41;
}

BOOL sub_100116A5C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v24 = type metadata accessor for GenerativeError.ErrorType();
  uint64_t v4 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000063C0(&qword_1002034D0);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(a1 - 8);
  __chkstk_darwin(v8);
  uint64_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for GenerativeError();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v2, a1);
  int v18 = swift_dynamicCast();
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  if (v18)
  {
    v19(v10, 0, 1, v14);
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v10, v14);
    GenerativeError.type.getter();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    uint64_t v20 = v24;
    BOOL v21 = (*(unsigned int (**)(char *, uint64_t))(v4 + 88))(v6, v24) == enum case for GenerativeError.ErrorType.authentication(_:);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v20);
  }
  else
  {
    v19(v10, 1, 1, v14);
    sub_100116D68((uint64_t)v10);
    return 0;
  }
  return v21;
}

uint64_t sub_100116D68(uint64_t a1)
{
  uint64_t v2 = sub_1000063C0(&qword_1002034D0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for IconWidthUpdatingModifier()
{
  return &type metadata for IconWidthUpdatingModifier;
}

uint64_t sub_100116DEC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100116E08(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for _ConditionalContent.Storage();
  __chkstk_darwin(v4);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))((char *)&v7 - v5, a1, a2);
  swift_storeEnumTagMultiPayload();
  return _ConditionalContent<>.init(storage:)();
}

uint64_t sub_100116F00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for _ConditionalContent.Storage();
  __chkstk_darwin(v5);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))((char *)&v8 - v6, a1, a3);
  swift_storeEnumTagMultiPayload();
  return _ConditionalContent<>.init(storage:)();
}

uint64_t sub_100116FF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v25 = a1;
  uint64_t v27 = a2;
  uint64_t v28 = type metadata accessor for Image.Scale();
  uint64_t v4 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DynamicTypeSize();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void (**)(char *, void, uint64_t))(v8 + 104);
  v11(v10, enum case for DynamicTypeSize.accessibility3(_:), v7);
  sub_100119458();
  uint64_t v26 = v3;
  char v12 = dispatch thunk of static Comparable.< infix(_:_:)();
  uint64_t v13 = *(void (**)(char *, uint64_t))(v8 + 8);
  v13(v10, v7);
  if ((v12 & 1) == 0) {
    return (*(uint64_t (**)(uint64_t, void, uint64_t))(v4 + 104))(v27, enum case for Image.Scale.small(_:), v28);
  }
  uint64_t v14 = v4;
  uint64_t v24 = v6;
  uint64_t v15 = v28;
  v11(v10, enum case for DynamicTypeSize.accessibility1(_:), v7);
  char v16 = dispatch thunk of static Comparable.< infix(_:_:)();
  v13(v10, v7);
  if (v16) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v27, v25, v15);
  }
  uint64_t v18 = enum case for Image.Scale.small(_:);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 104);
  uint64_t v20 = v24;
  v19((uint64_t)v24, enum case for Image.Scale.small(_:), v15);
  char v21 = static Image.Scale.== infix(_:_:)();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v20, v15);
  if (v21) {
    uint64_t v22 = v18;
  }
  else {
    uint64_t v22 = enum case for Image.Scale.medium(_:);
  }
  return v19(v27, v22, v15);
}

uint64_t sub_1001172C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v44 = a2;
  uint64_t v3 = *(char **)(a1 + 16);
  uint64_t v4 = *(char **)(a1 + 24);
  uint64_t v5 = type metadata accessor for HStack();
  uint64_t v40 = *(void *)(v5 - 8);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v39 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v37 = (char *)&v37 - v9;
  __chkstk_darwin(v8);
  uint64_t v38 = (char *)&v37 - v10;
  uint64_t v11 = type metadata accessor for VStack();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v18 = (char *)&v37 - v17;
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v37 - v19;
  uint64_t v21 = type metadata accessor for _ConditionalContent();
  uint64_t v42 = *(void *)(v21 - 8);
  uint64_t v43 = v21;
  __chkstk_darwin(v21);
  uint64_t v41 = (char *)&v37 - v22;
  if (sub_100117858())
  {
    __chkstk_darwin(*(void *)(v2 + 8));
    *(&v37 - 4) = v3;
    *(&v37 - 3) = v4;
    *(&v37 - 2) = (char *)v2;
    VStack.init(alignment:spacing:content:)();
    swift_getWitnessTable();
    uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
    v23(v20, v18, v11);
    uint64_t v24 = *(void (**)(char *, uint64_t))(v12 + 8);
    v24(v18, v11);
    v23(v15, v20, v11);
    swift_getWitnessTable();
    uint64_t v25 = v41;
    sub_100116E08((uint64_t)v15, v11);
    v24(v15, v11);
    v24(v20, v11);
  }
  else
  {
    __chkstk_darwin(*(void *)(v2 + 16));
    *(&v37 - 4) = v3;
    *(&v37 - 3) = v4;
    *(&v37 - 2) = (char *)v2;
    uint64_t v26 = v37;
    HStack.init(alignment:spacing:content:)();
    swift_getWitnessTable();
    uint64_t v27 = v40;
    uint64_t v28 = *(void (**)(char *, char *, uint64_t))(v40 + 16);
    uint64_t v29 = v38;
    v28(v38, v26, v5);
    uint64_t v30 = *(void (**)(char *, uint64_t))(v27 + 8);
    v30(v26, v5);
    uint64_t v31 = (uint64_t)v39;
    v28(v39, v29, v5);
    swift_getWitnessTable();
    uint64_t v25 = v41;
    sub_100116F00(v31, v11, v5);
    v30((char *)v31, v5);
    v30(v29, v5);
  }
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v33 = swift_getWitnessTable();
  uint64_t v45 = WitnessTable;
  uint64_t v46 = v33;
  uint64_t v34 = v43;
  swift_getWitnessTable();
  uint64_t v35 = v42;
  (*(void (**)(uint64_t, char *, uint64_t))(v42 + 16))(v44, v25, v34);
  return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v25, v34);
}

BOOL sub_100117858()
{
  uint64_t v0 = type metadata accessor for DynamicTypeSize();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100020A04((uint64_t)v3);
  DynamicTypeSize.isAccessibilitySize.getter();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  int v4 = Axis.rawValue.getter();
  return v4 == Axis.rawValue.getter();
}

uint64_t sub_10011795C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v6 = *(void *)(a2 - 8);
  __chkstk_darwin(a1);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1 + *(int *)(type metadata accessor for DynamicTypeAdjustingStack() + 44);
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v10(v8, v9, a2);
  v10(a3, (uint64_t)v8, a2);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, a2);
}

void sub_100117A64(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

void *sub_100117A74(uint64_t a1, void *(*a2)(double *__return_ptr))
{
  uint64_t result = a2(&v5);
  if ((v6 & 1) == 0)
  {
    if (*(unsigned char *)(a1 + 8))
    {
      double v4 = v5;
    }
    else
    {
      double v4 = *(double *)a1;
      if (*(double *)a1 <= v5) {
        double v4 = v5;
      }
    }
    *(double *)a1 = v4;
    *(unsigned char *)(a1 + 8) = 0;
  }
  return result;
}

uint64_t sub_100117AE8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = static Color.clear.getter();
  uint64_t result = GeometryProxy.size.getter();
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = 0;
  return result;
}

uint64_t sub_100117B2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1000063C0(&qword_100203590);
  uint64_t v6 = v5 - 8;
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v19 = *v2;
  uint64_t v9 = *((void *)v2 + 2);
  char v10 = *((unsigned char *)v2 + 24);
  uint64_t v11 = static Alignment.center.getter();
  uint64_t v13 = v12;
  uint64_t v14 = sub_1000063C0(&qword_100203598);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v8, a1, v14);
  uint64_t v15 = (uint64_t (**)@<X0>(uint64_t@<X8>))&v8[*(int *)(v6 + 44)];
  char *v15 = sub_100117AE8;
  v15[1] = 0;
  v15[2] = (uint64_t (*)@<X0>(uint64_t@<X8>))v11;
  v15[3] = v13;
  long long v20 = v19;
  *(void *)&long long v21 = v9;
  BYTE8(v21) = v10;
  sub_1000063C0(&qword_100202930);
  Binding.wrappedValue.getter();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  sub_1001197A8((uint64_t)v8, a2);
  uint64_t v16 = (_OWORD *)(a2 + *(int *)(sub_1000063C0(&qword_1002035A0) + 36));
  long long v17 = v21;
  *uint64_t v16 = v20;
  v16[1] = v17;
  v16[2] = v22;
  return sub_100119810((uint64_t)v8);
}

uint64_t sub_100117CC4()
{
  return Binding.wrappedValue.setter();
}

uint64_t sub_100117D24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *v2;
  uint64_t v6 = v2[1];
  uint64_t v7 = v2[2];
  char v8 = *((unsigned char *)v2 + 24);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v5;
  *(void *)(v9 + 24) = v6;
  *(void *)(v9 + 32) = v7;
  *(unsigned char *)(v9 + 40) = v8;
  uint64_t v10 = sub_1000063C0(&qword_1002034D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(a2, a1, v10);
  uint64_t v11 = (uint64_t (**)())(a2 + *(int *)(sub_1000063C0(qword_1002034E0) + 36));
  *uint64_t v11 = sub_100117E54;
  v11[1] = (uint64_t (*)())v9;
  swift_retain();

  return swift_retain();
}

uint64_t sub_100117E14()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 41, 7);
}

uint64_t sub_100117E54()
{
  return sub_100117CC4();
}

ValueMetadata *type metadata accessor for IconWidthPreferenceKey()
{
  return &type metadata for IconWidthPreferenceKey;
}

uint64_t sub_100117E74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 40);
}

void sub_100117E7C()
{
  swift_checkMetadataState();
  if (v0 <= 0x3F)
  {
    sub_1001192D4();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

unint64_t sub_100117F68(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  int v7 = *(_DWORD *)(v6 + 80);
  uint64_t v8 = *(void *)(v6 + 64);
  uint64_t v9 = *(void *)(type metadata accessor for DynamicTypeSize() - 8);
  int v10 = *(_DWORD *)(v9 + 80);
  uint64_t v11 = v10 & 0xF8 | 7;
  uint64_t v12 = v8 + v11;
  unint64_t v13 = (v8 + v11 + ((v7 + 41) & ~(unint64_t)v7)) & ~v11;
  if (*(void *)(v9 + 64) <= 8uLL) {
    uint64_t v14 = 8;
  }
  else {
    uint64_t v14 = *(void *)(v9 + 64);
  }
  unint64_t v15 = v14 + v13 + 1;
  int v16 = (v10 | v7) & 0x100000;
  if ((v11 | v7) != 7 || v16 != 0 || v15 > 0x18)
  {
    uint64_t v19 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v19 + (((v11 | v7) + 16) & ~(v11 | v7));
LABEL_27:
    swift_retain();
    return a1;
  }
  uint64_t v20 = ~v11;
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 8) = *(_OWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 8);
  unint64_t v21 = ((a1 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v22 = ((a2 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8;
  long long v23 = *(_OWORD *)v22;
  *(unsigned char *)(v21 + 16) = *(unsigned char *)(v22 + 16);
  *(_OWORD *)unint64_t v21 = v23;
  unint64_t v24 = (v21 + v7 + 17) & ~(unint64_t)v7;
  unint64_t v25 = (v22 + v7 + 17) & ~(unint64_t)v7;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16))(v24, v25, v5);
  uint64_t v26 = (void *)((v24 + v12) & v20);
  uint64_t v27 = (unsigned __int8 *)((v25 + v12) & v20);
  unsigned int v28 = v27[v14];
  unsigned int v29 = v28 - 2;
  if (v28 >= 2)
  {
    if (v14 <= 3) {
      uint64_t v30 = v14;
    }
    else {
      uint64_t v30 = 4;
    }
    switch(v30)
    {
      case 1:
        int v31 = *v27;
        goto LABEL_22;
      case 2:
        int v31 = *(unsigned __int16 *)v27;
        goto LABEL_22;
      case 3:
        int v31 = *(unsigned __int16 *)v27 | (*(unsigned __int8 *)(((v25 + v12) & v20) + 2) << 16);
        goto LABEL_22;
      case 4:
        int v31 = *(_DWORD *)v27;
LABEL_22:
        int v32 = (v31 | (v29 << (8 * v14))) + 2;
        unsigned int v28 = v31 + 2;
        if (v14 < 4) {
          unsigned int v28 = v32;
        }
        break;
      default:
        break;
    }
  }
  if (v28 != 1)
  {
    *uint64_t v26 = *(void *)v27;
    *((unsigned char *)v26 + v14) = 0;
    goto LABEL_27;
  }
  (*(void (**)(unint64_t))(v9 + 16))((v24 + v12) & v20);
  *((unsigned char *)v26 + v14) = 1;
  return a1;
}

uint64_t sub_100118204(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v3 = v2 + 8;
  unint64_t v4 = ((((a1 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v2 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  (*(void (**)(unint64_t))(v2 + 8))(v4);
  uint64_t v5 = *(void *)(v3 + 56);
  uint64_t v6 = *(void *)(type metadata accessor for DynamicTypeSize() - 8);
  uint64_t v7 = *(_DWORD *)(v6 + 80) & 0xF8 | 7;
  uint64_t v8 = (unsigned __int8 *)((v4 + v5 + v7) & ~v7);
  unint64_t v9 = *(void *)(v6 + 64);
  if (v9 <= 8) {
    unint64_t v9 = 8;
  }
  unsigned int v10 = v8[v9];
  unsigned int v11 = v10 - 2;
  if (v10 >= 2)
  {
    if (v9 <= 3) {
      uint64_t v12 = v9;
    }
    else {
      uint64_t v12 = 4;
    }
    switch(v12)
    {
      case 1:
        int v13 = *v8;
        goto LABEL_12;
      case 2:
        int v13 = *(unsigned __int16 *)v8;
        goto LABEL_12;
      case 3:
        int v13 = *(unsigned __int16 *)v8 | (v8[2] << 16);
        goto LABEL_12;
      case 4:
        int v13 = *(_DWORD *)v8;
LABEL_12:
        int v14 = (v13 | (v11 << (8 * v9))) + 2;
        unsigned int v10 = v13 + 2;
        if (v9 < 4) {
          unsigned int v10 = v14;
        }
        break;
      default:
        break;
    }
  }
  if (v10 == 1)
  {
    unint64_t v15 = *(uint64_t (**)(void))(v6 + 8);
    return v15();
  }
  else
  {
    return swift_release();
  }
}

unint64_t sub_1001183B4(unint64_t a1, unint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 8) = *(_OWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 8);
  unint64_t v4 = ((a1 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v5 = ((a2 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8;
  long long v6 = *(_OWORD *)v5;
  *(unsigned char *)(v4 + 16) = *(unsigned char *)(v5 + 16);
  *(_OWORD *)unint64_t v4 = v6;
  uint64_t v7 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v8 = v7 + 16;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = (v9 + 17 + v4) & ~v9;
  uint64_t v11 = (v9 + 17 + v5) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 16))(v10, v11);
  uint64_t v12 = *(void *)(v8 + 48);
  uint64_t v13 = *(void *)(type metadata accessor for DynamicTypeSize() - 8);
  uint64_t v14 = v13;
  uint64_t v15 = *(_DWORD *)(v13 + 80) & 0xF8 | 7;
  int v16 = (void *)((v12 + v15 + v10) & ~v15);
  long long v17 = (unsigned __int8 *)((v12 + v15 + v11) & ~v15);
  if (*(void *)(v13 + 64) <= 8uLL) {
    uint64_t v18 = 8;
  }
  else {
    uint64_t v18 = *(void *)(v13 + 64);
  }
  unsigned int v19 = v17[v18];
  unsigned int v20 = v19 - 2;
  if (v19 >= 2)
  {
    if (v18 <= 3) {
      uint64_t v21 = v18;
    }
    else {
      uint64_t v21 = 4;
    }
    switch(v21)
    {
      case 1:
        int v22 = *v17;
        goto LABEL_13;
      case 2:
        int v22 = *(unsigned __int16 *)v17;
        goto LABEL_13;
      case 3:
        int v22 = *(unsigned __int16 *)v17 | (v17[2] << 16);
        goto LABEL_13;
      case 4:
        int v22 = *(_DWORD *)v17;
LABEL_13:
        int v23 = (v22 | (v20 << (8 * v18))) + 2;
        unsigned int v19 = v22 + 2;
        if (v18 < 4) {
          unsigned int v19 = v23;
        }
        break;
      default:
        break;
    }
  }
  if (v19 == 1)
  {
    (*(void (**)(void *))(v14 + 16))(v16);
    char v24 = 1;
  }
  else
  {
    *int v16 = *(void *)v17;
    swift_retain();
    char v24 = 0;
  }
  *((unsigned char *)v16 + v18) = v24;
  return a1;
}

unint64_t sub_1001185A8(unint64_t a1, unint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  unint64_t v4 = a1 & 0xFFFFFFFFFFFFFFF8;
  *(void *)(v4 + 8) = *(void *)((a2 & 0xFFFFFFFFFFFFFFF8) + 8);
  *(void *)(v4 + 16) = *(void *)((a2 & 0xFFFFFFFFFFFFFFF8) + 16);
  unint64_t v5 = ((a1 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = ((a2 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8;
  long long v7 = *(_OWORD *)v6;
  *(unsigned char *)(v5 + 16) = *(unsigned char *)(v6 + 16);
  *(_OWORD *)unint64_t v5 = v7;
  uint64_t v8 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v9 = v8 + 24;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = (v10 + 17 + v5) & ~v10;
  uint64_t v12 = (v10 + 17 + v6) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 24))(v11, v12);
  uint64_t v13 = *(void *)(v9 + 40);
  uint64_t v14 = type metadata accessor for DynamicTypeSize();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(_DWORD *)(v15 + 80) & 0xF8 | 7;
  long long v17 = (unsigned __int8 *)((v13 + v16 + v11) & ~v16);
  uint64_t v18 = (unsigned __int8 *)((v13 + v16 + v12) & ~v16);
  if (v17 != v18)
  {
    uint64_t v19 = v14;
    uint64_t v20 = *(void *)(v14 - 8);
    if (*(void *)(v15 + 64) <= 8uLL) {
      uint64_t v21 = 8;
    }
    else {
      uint64_t v21 = *(void *)(v15 + 64);
    }
    unsigned int v22 = v17[v21];
    unsigned int v23 = v22 - 2;
    if (v22 >= 2)
    {
      if (v21 <= 3) {
        uint64_t v24 = v21;
      }
      else {
        uint64_t v24 = 4;
      }
      switch(v24)
      {
        case 1:
          int v25 = *v17;
          goto LABEL_14;
        case 2:
          int v25 = *(unsigned __int16 *)v17;
          goto LABEL_14;
        case 3:
          int v25 = *(unsigned __int16 *)v17 | (v17[2] << 16);
          goto LABEL_14;
        case 4:
          int v25 = *(_DWORD *)v17;
LABEL_14:
          int v26 = (v25 | (v23 << (8 * v21))) + 2;
          unsigned int v22 = v25 + 2;
          if (v21 < 4) {
            unsigned int v22 = v26;
          }
          break;
        default:
          break;
      }
    }
    if (v22 == 1) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v20 + 8))(v17, v14);
    }
    else {
      swift_release();
    }
    unsigned int v27 = v18[v21];
    unsigned int v28 = v27 - 2;
    if (v27 >= 2)
    {
      if (v21 <= 3) {
        uint64_t v29 = v21;
      }
      else {
        uint64_t v29 = 4;
      }
      switch(v29)
      {
        case 1:
          int v30 = *v18;
          goto LABEL_28;
        case 2:
          int v30 = *(unsigned __int16 *)v18;
          goto LABEL_28;
        case 3:
          int v30 = *(unsigned __int16 *)v18 | (v18[2] << 16);
          goto LABEL_28;
        case 4:
          int v30 = *(_DWORD *)v18;
LABEL_28:
          int v31 = (v30 | (v28 << (8 * v21))) + 2;
          unsigned int v27 = v30 + 2;
          if (v21 < 4) {
            unsigned int v27 = v31;
          }
          break;
        default:
          break;
      }
    }
    if (v27 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v20 + 16))(v17, v18, v19);
      v17[v21] = 1;
    }
    else
    {
      *(void *)long long v17 = *(void *)v18;
      v17[v21] = 0;
      swift_retain();
    }
  }
  return a1;
}

unint64_t sub_100118864(unint64_t a1, unint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)((a1 & 0xFFFFFFFFFFFFFFF8) + 8) = *(_OWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 8);
  unint64_t v4 = ((a1 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v5 = ((a2 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8;
  long long v6 = *(_OWORD *)v5;
  *(unsigned char *)(v4 + 16) = *(unsigned char *)(v5 + 16);
  *(_OWORD *)unint64_t v4 = v6;
  uint64_t v7 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v8 = v7 + 32;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = (v9 + 17 + v4) & ~v9;
  uint64_t v11 = (v9 + 17 + v5) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 32))(v10, v11);
  uint64_t v12 = *(void *)(v8 + 32);
  uint64_t v13 = *(void *)(type metadata accessor for DynamicTypeSize() - 8);
  uint64_t v14 = v13;
  uint64_t v15 = *(_DWORD *)(v13 + 80) & 0xF8 | 7;
  uint64_t v16 = (void *)((v12 + v15 + v10) & ~v15);
  long long v17 = (unsigned __int8 *)((v12 + v15 + v11) & ~v15);
  if (*(void *)(v13 + 64) <= 8uLL) {
    uint64_t v18 = 8;
  }
  else {
    uint64_t v18 = *(void *)(v13 + 64);
  }
  unsigned int v19 = v17[v18];
  unsigned int v20 = v19 - 2;
  if (v19 >= 2)
  {
    if (v18 <= 3) {
      uint64_t v21 = v18;
    }
    else {
      uint64_t v21 = 4;
    }
    switch(v21)
    {
      case 1:
        int v22 = *v17;
        goto LABEL_13;
      case 2:
        int v22 = *(unsigned __int16 *)v17;
        goto LABEL_13;
      case 3:
        int v22 = *(unsigned __int16 *)v17 | (v17[2] << 16);
        goto LABEL_13;
      case 4:
        int v22 = *(_DWORD *)v17;
LABEL_13:
        int v23 = (v22 | (v20 << (8 * v18))) + 2;
        unsigned int v19 = v22 + 2;
        if (v18 < 4) {
          unsigned int v19 = v23;
        }
        break;
      default:
        break;
    }
  }
  if (v19 == 1)
  {
    (*(void (**)(void *))(v14 + 32))(v16);
    char v24 = 1;
  }
  else
  {
    char v24 = 0;
    *uint64_t v16 = *(void *)v17;
  }
  *((unsigned char *)v16 + v18) = v24;
  return a1;
}

unint64_t sub_100118A54(unint64_t a1, unint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  unint64_t v4 = a1 & 0xFFFFFFFFFFFFFFF8;
  *(void *)(v4 + 8) = *(void *)((a2 & 0xFFFFFFFFFFFFFFF8) + 8);
  *(void *)(v4 + 16) = *(void *)((a2 & 0xFFFFFFFFFFFFFFF8) + 16);
  unint64_t v5 = ((a1 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = ((a2 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8;
  long long v7 = *(_OWORD *)v6;
  *(unsigned char *)(v5 + 16) = *(unsigned char *)(v6 + 16);
  *(_OWORD *)unint64_t v5 = v7;
  uint64_t v8 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v9 = v8 + 40;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = (v10 + 17 + v5) & ~v10;
  uint64_t v12 = (v10 + 17 + v6) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 40))(v11, v12);
  uint64_t v13 = *(void *)(v9 + 24);
  uint64_t v14 = type metadata accessor for DynamicTypeSize();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(_DWORD *)(v15 + 80) & 0xF8 | 7;
  long long v17 = (unsigned __int8 *)((v13 + v16 + v11) & ~v16);
  uint64_t v18 = (unsigned __int8 *)((v13 + v16 + v12) & ~v16);
  if (v17 != v18)
  {
    uint64_t v19 = v14;
    uint64_t v20 = *(void *)(v14 - 8);
    if (*(void *)(v15 + 64) <= 8uLL) {
      uint64_t v21 = 8;
    }
    else {
      uint64_t v21 = *(void *)(v15 + 64);
    }
    unsigned int v22 = v17[v21];
    unsigned int v23 = v22 - 2;
    if (v22 >= 2)
    {
      if (v21 <= 3) {
        uint64_t v24 = v21;
      }
      else {
        uint64_t v24 = 4;
      }
      switch(v24)
      {
        case 1:
          int v25 = *v17;
          goto LABEL_14;
        case 2:
          int v25 = *(unsigned __int16 *)v17;
          goto LABEL_14;
        case 3:
          int v25 = *(unsigned __int16 *)v17 | (v17[2] << 16);
          goto LABEL_14;
        case 4:
          int v25 = *(_DWORD *)v17;
LABEL_14:
          int v26 = (v25 | (v23 << (8 * v21))) + 2;
          unsigned int v22 = v25 + 2;
          if (v21 < 4) {
            unsigned int v22 = v26;
          }
          break;
        default:
          break;
      }
    }
    if (v22 == 1) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v20 + 8))(v17, v14);
    }
    else {
      swift_release();
    }
    unsigned int v27 = v18[v21];
    unsigned int v28 = v27 - 2;
    if (v27 >= 2)
    {
      if (v21 <= 3) {
        uint64_t v29 = v21;
      }
      else {
        uint64_t v29 = 4;
      }
      switch(v29)
      {
        case 1:
          int v30 = *v18;
          goto LABEL_28;
        case 2:
          int v30 = *(unsigned __int16 *)v18;
          goto LABEL_28;
        case 3:
          int v30 = *(unsigned __int16 *)v18 | (v18[2] << 16);
          goto LABEL_28;
        case 4:
          int v30 = *(_DWORD *)v18;
LABEL_28:
          int v31 = (v30 | (v28 << (8 * v21))) + 2;
          unsigned int v27 = v30 + 2;
          if (v21 < 4) {
            unsigned int v27 = v31;
          }
          break;
        default:
          break;
      }
    }
    if (v27 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v20 + 32))(v17, v18, v19);
      char v32 = 1;
    }
    else
    {
      char v32 = 0;
      *(void *)long long v17 = *(void *)v18;
    }
    v17[v21] = v32;
  }
  return a1;
}

uint64_t sub_100118D0C(unint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  if (v7 <= 0xFE) {
    unsigned int v8 = 254;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(type metadata accessor for DynamicTypeSize() - 8);
  uint64_t v10 = 8;
  if (*(void *)(v9 + 64) > 8uLL) {
    uint64_t v10 = *(void *)(v9 + 64);
  }
  uint64_t v11 = *(unsigned __int8 *)(v6 + 80);
  if (!a2) {
    return 0;
  }
  if (a2 <= v8) {
    goto LABEL_25;
  }
  uint64_t v12 = *(_DWORD *)(v9 + 80) & 0xF8 | 7;
  uint64_t v13 = v10 + ((((v11 + 41) & ~v11) + *(void *)(v6 + 64) + v12) & ~v12) + 1;
  char v14 = 8 * v13;
  if (v13 <= 3)
  {
    unsigned int v17 = ((a2 - v8 + ~(-1 << v14)) >> v14) + 1;
    if (HIWORD(v17))
    {
      int v15 = *(_DWORD *)(a1 + v13);
      if (!v15) {
        goto LABEL_25;
      }
      goto LABEL_17;
    }
    if (v17 > 0xFF)
    {
      int v15 = *(unsigned __int16 *)(a1 + v13);
      if (!*(_WORD *)(a1 + v13)) {
        goto LABEL_25;
      }
      goto LABEL_17;
    }
    if (v17 < 2)
    {
LABEL_25:
      if (v7 > 0xFE)
      {
        uint64_t v20 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v6 + 48);
        return v20(((((a1 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + v11 + 17) & ~v11, v7, v5);
      }
      else
      {
        unsigned int v19 = *(unsigned __int8 *)a1;
        if (v19 >= 2) {
          return v19 - 1;
        }
        else {
          return 0;
        }
      }
    }
  }
  int v15 = *(unsigned __int8 *)(a1 + v13);
  if (!*(unsigned char *)(a1 + v13)) {
    goto LABEL_25;
  }
LABEL_17:
  int v18 = (v15 - 1) << v14;
  if (v13 > 3) {
    int v18 = 0;
  }
  if (v13)
  {
    if (v13 > 3) {
      LODWORD(v13) = 4;
    }
    switch((int)v13)
    {
      case 2:
        LODWORD(v13) = *(unsigned __int16 *)a1;
        break;
      case 3:
        LODWORD(v13) = *(unsigned __int16 *)a1 | (*(unsigned __int8 *)(a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v13) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v13) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v8 + (v13 | v18) + 1;
}

void sub_100118F98(unint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v22 = v8;
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  if (v9 <= 0xFE) {
    unsigned int v10 = 254;
  }
  else {
    unsigned int v10 = *(_DWORD *)(v8 + 84);
  }
  uint64_t v11 = *(void *)(type metadata accessor for DynamicTypeSize() - 8);
  uint64_t v12 = 8;
  if (*(void *)(v11 + 64) > 8uLL) {
    uint64_t v12 = *(void *)(v11 + 64);
  }
  uint64_t v13 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v14 = *(_DWORD *)(v11 + 80) & 0xF8 | 7;
  size_t v15 = v12 + ((((v13 + 41) & ~v13) + *(void *)(v8 + 64) + v14) & ~v14) + 1;
  if (a3 <= v10)
  {
    int v16 = 0;
  }
  else if (v15 <= 3)
  {
    unsigned int v19 = ((a3 - v10 + ~(-1 << (8 * v15))) >> (8 * v15)) + 1;
    if (HIWORD(v19))
    {
      int v16 = 4;
    }
    else if (v19 >= 0x100)
    {
      int v16 = 2;
    }
    else
    {
      int v16 = v19 > 1;
    }
  }
  else
  {
    int v16 = 1;
  }
  if (v10 < a2)
  {
    unsigned int v17 = ~v10 + a2;
    if (v15 < 4)
    {
      int v18 = (v17 >> (8 * v15)) + 1;
      if (v15)
      {
        int v20 = v17 & ~(-1 << (8 * v15));
        bzero((void *)a1, v15);
        if (v15 == 3)
        {
          *(_WORD *)a1 = v20;
          *(unsigned char *)(a1 + 2) = BYTE2(v20);
        }
        else if (v15 == 2)
        {
          *(_WORD *)a1 = v20;
        }
        else
        {
          *(unsigned char *)a1 = v20;
        }
      }
    }
    else
    {
      bzero((void *)a1, v15);
      *(_DWORD *)a1 = v17;
      int v18 = 1;
    }
    switch(v16)
    {
      case 1:
        *(unsigned char *)(a1 + v15) = v18;
        return;
      case 2:
        *(_WORD *)(a1 + v15) = v18;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)(a1 + v15) = v18;
        return;
      default:
        return;
    }
  }
  switch(v16)
  {
    case 1:
      *(unsigned char *)(a1 + v15) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_26;
    case 2:
      *(_WORD *)(a1 + v15) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_26;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x100119294);
    case 4:
      *(_DWORD *)(a1 + v15) = 0;
      goto LABEL_25;
    default:
LABEL_25:
      if (a2)
      {
LABEL_26:
        if (v9 > 0xFE)
        {
          uint64_t v21 = *(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v22 + 56);
          v21(((((a1 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + v13 + 17) & ~v13, a2, v9, v7);
        }
        else
        {
          *(unsigned char *)a1 = a2 + 1;
        }
      }
      return;
  }
}

uint64_t type metadata accessor for DynamicTypeAdjustingStack()
{
  return sub_1001194B0();
}

void sub_1001192D4()
{
  if (!qword_1001FB680)
  {
    type metadata accessor for DynamicTypeSize();
    unint64_t v0 = type metadata accessor for Environment.Content();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1001FB680);
    }
  }
}

unint64_t sub_100119330()
{
  unint64_t result = qword_100203568;
  if (!qword_100203568)
  {
    sub_100006C14(qword_1002034E0);
    sub_100027F2C(&qword_100203570, &qword_1002034D8);
    sub_100027F2C(&qword_100203578, &qword_100203580);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100203568);
  }
  return result;
}

uint64_t sub_1001193F4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100119438@<X0>(char *a1@<X8>)
{
  return sub_10011795C(*(void *)(v1 + 32), *(void *)(v1 + 16), a1);
}

unint64_t sub_100119458()
{
  unint64_t result = qword_100203588;
  if (!qword_100203588)
  {
    type metadata accessor for DynamicTypeSize();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100203588);
  }
  return result;
}

uint64_t sub_1001194B0()
{
  return swift_getGenericMetadata();
}

uint64_t destroy for IconWidthModifier()
{
  swift_release();

  return swift_release();
}

uint64_t _s21WritingToolsUIService25IconWidthUpdatingModifierVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t _s21WritingToolsUIService25IconWidthUpdatingModifierVwca_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  uint64_t v4 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  return a1;
}

uint64_t _s21WritingToolsUIService25IconWidthUpdatingModifierVwta_0(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t _s21WritingToolsUIService25IconWidthUpdatingModifierVwet_0(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 25)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_10011966C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 25) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IconWidthModifier()
{
  return &type metadata for IconWidthModifier;
}

uint64_t sub_1001196C0()
{
  return swift_getWitnessTable();
}

uint64_t sub_10011978C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001197A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000063C0(&qword_100203590);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100119810(uint64_t a1)
{
  uint64_t v2 = sub_1000063C0(&qword_100203590);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_100119874()
{
  unint64_t result = qword_1002035A8;
  if (!qword_1002035A8)
  {
    sub_100006C14(&qword_1002035A0);
    sub_1001198F0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002035A8);
  }
  return result;
}

unint64_t sub_1001198F0()
{
  unint64_t result = qword_1002035B0;
  if (!qword_1002035B0)
  {
    sub_100006C14(&qword_100203590);
    sub_100027F2C(&qword_1002035B8, &qword_100203598);
    sub_100027F2C(&qword_1002035C0, &qword_1002035C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002035B0);
  }
  return result;
}

uint64_t sub_1001199BC()
{
  swift_getKeyPath();
  sub_10011D620(&qword_100203828, (void (*)(uint64_t))type metadata accessor for SmartReplyAnalytics);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_100119A6C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_10011D620(&qword_100203828, (void (*)(uint64_t))type metadata accessor for SmartReplyAnalytics);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v4 = *(void *)(v3 + 24);
  *a2 = *(void *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_100119B18()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_100119BFC()
{
  swift_getKeyPath();
  sub_10011D620(&qword_100203828, (void (*)(uint64_t))type metadata accessor for SmartReplyAnalytics);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_100119CAC@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_10011D620(&qword_100203828, (void (*)(uint64_t))type metadata accessor for SmartReplyAnalytics);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v4 = *(void *)(v3 + 40);
  *a2 = *(void *)(v3 + 32);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_100119D58()
{
  return swift_bridgeObjectRelease();
}

id sub_100119E3C()
{
  swift_getKeyPath();
  sub_10011D620(&qword_100203828, (void (*)(uint64_t))type metadata accessor for SmartReplyAnalytics);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v1 = *(void **)(v0 + 48);

  return v1;
}

id sub_100119EEC@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_10011D620(&qword_100203828, (void (*)(uint64_t))type metadata accessor for SmartReplyAnalytics);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v4 = *(void **)(v3 + 48);
  *a2 = v4;

  return v4;
}

void sub_100119FA4(void **a1)
{
  uint64_t v1 = *a1;
  swift_getKeyPath();
  sub_10011D620(&qword_100203828, (void (*)(uint64_t))type metadata accessor for SmartReplyAnalytics);
  id v2 = v1;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
}

uint64_t sub_10011A080()
{
  swift_getKeyPath();
  sub_10011D620(&qword_100203828, (void (*)(uint64_t))type metadata accessor for SmartReplyAnalytics);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v1 = *(void *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_10011A130@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_10011D620(&qword_100203828, (void (*)(uint64_t))type metadata accessor for SmartReplyAnalytics);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v4 = *(void *)(v3 + 64);
  *a2 = *(void *)(v3 + 56);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_10011A1DC()
{
  return swift_bridgeObjectRelease();
}

void *sub_10011A2C0()
{
  swift_getKeyPath();
  sub_10011D620(&qword_100203828, (void (*)(uint64_t))type metadata accessor for SmartReplyAnalytics);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v1 = *(void **)(v0 + 72);
  id v2 = v1;
  return v1;
}

id sub_10011A368@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_10011D620(&qword_100203828, (void (*)(uint64_t))type metadata accessor for SmartReplyAnalytics);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v4 = *(void **)(v3 + 72);
  *a2 = v4;

  return v4;
}

void sub_10011A420(void **a1)
{
  uint64_t v1 = *a1;
  swift_getKeyPath();
  sub_10011D620(&qword_100203828, (void (*)(uint64_t))type metadata accessor for SmartReplyAnalytics);
  id v2 = v1;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
}

uint64_t sub_10011A4FC()
{
  swift_getKeyPath();
  sub_10011D620(&qword_100203828, (void (*)(uint64_t))type metadata accessor for SmartReplyAnalytics);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v1 = *(void *)(v0 + 80);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_10011A5AC@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_10011D620(&qword_100203828, (void (*)(uint64_t))type metadata accessor for SmartReplyAnalytics);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v4 = *(void *)(v3 + 88);
  *a2 = *(void *)(v3 + 80);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_10011A658()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_10011A73C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  *(_OWORD *)(v3 + 16) = 0u;
  *(_OWORD *)(v3 + 32) = 0u;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(void *)(v3 + 88) = 0;
  ObservationRegistrar.init()();
  swift_bridgeObjectRelease();
  *(void *)(v3 + 32) = a1;
  *(void *)(v3 + 40) = a2;
  *(void *)(v3 + 48) = [objc_allocWithZone((Class)NSMutableOrderedSet) initWithCapacity:5];
  if (qword_1001FAC40 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_10000EBE8(v6, (uint64_t)qword_1002127B8);
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "SmartReplyAnalytics init", v9, 2u);
    swift_slowDealloc();
  }

  return v3;
}

void sub_10011A874(void *a1)
{
}

void sub_10011A888(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  if (qword_1001FAC40 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_10000EBE8(v6, (uint64_t)qword_1002127B8);
  id v7 = a1;
  swift_bridgeObjectRetain_n();
  id v8 = v7;
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    v42[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136380931;
    uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    sub_100021444(v12, v13, v42);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2085;
    uint64_t v14 = Dictionary.description.getter();
    sub_100021444(v14, v15, v42);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "reportResponseCompleted: %{private}s resultOptions: %{sensitive}s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v16 = sub_10008B8BC(a2);
  sub_10008BC70(a2);
  uint64_t KeyPath = swift_getKeyPath();
  __chkstk_darwin(KeyPath);
  v42[0] = v3;
  sub_10011D620(&qword_100203828, (void (*)(uint64_t))type metadata accessor for SmartReplyAnalytics);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  uint64_t v41 = IAChannelSmartReplies;
  swift_getKeyPath();
  v42[0] = v3;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (*(void *)(v3 + 40))
  {
    swift_bridgeObjectRetain();
    NSString v18 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v18 = 0;
  }
  sub_1000063C0(&qword_1001FB3D0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10018A730;
  int v20 = (void *)IAPayloadKeySmartRepliesFeatureModel;
  *(void *)(inited + 32) = IAPayloadKeySmartRepliesFeatureModel;
  id v21 = v20;
  NSString v22 = String._bridgeToObjectiveC()();
  unsigned int v23 = (void *)IAPayloadKeyFeedbackServiceOriginalContent;
  *(void *)(inited + 40) = v22;
  *(void *)(inited + 48) = v23;
  id v24 = v23;
  NSString v25 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  int v26 = (void *)IAPayloadKeyFeedbackServiceGeneratedContent;
  *(void *)(inited + 56) = v25;
  *(void *)(inited + 64) = v26;
  unsigned int v27 = self;
  id v28 = v26;
  swift_bridgeObjectRetain();
  NSString v29 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  *(void *)(inited + 72) = v29;
  sub_1000050E4(inited);
  type metadata accessor for IAPayloadKey(0);
  sub_1000085FC(0, &qword_1001FB3D8);
  sub_10011D620((unint64_t *)&qword_1001FB168, type metadata accessor for IAPayloadKey);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v27 sendSignal:v8 toChannel:v41 withNullableUniqueStringID:v18 withPayload:isa v16];

  swift_getKeyPath();
  v42[0] = v3;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  id v31 = *(id *)(v3 + 48);
  NSString v32 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v31 addObject:v32];

  swift_getKeyPath();
  v42[0] = v3;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (!*(void *)(v3 + 64))
  {
    uint64_t v33 = swift_getKeyPath();
    __chkstk_darwin(v33);
    v42[0] = v3;
    swift_bridgeObjectRetain();
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v34 = Logger.logObject.getter();
    uint64_t v35 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v34, (os_log_type_t)v35))
    {
      id v36 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v36 = 0;
      _os_log_impl((void *)&_mh_execute_header, v34, (os_log_type_t)v35, "reportResponseCompleted: cached base response", v36, 2u);
      swift_slowDealloc();
    }
  }
  uint64_t v37 = swift_getKeyPath();
  __chkstk_darwin(v37);
  v42[0] = v3;
  swift_bridgeObjectRetain();
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v38 = Logger.logObject.getter();
  os_log_type_t v39 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v38, v39))
  {
    uint64_t v40 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v40 = 0;
    _os_log_impl((void *)&_mh_execute_header, v38, v39, "reportResponseCompleted: cached generated content", v40, 2u);
    swift_slowDealloc();
  }
}

void sub_10011B080(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  if (qword_1001FAC40 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_10000EBE8(v6, (uint64_t)qword_1002127B8);
  id v7 = a1;
  swift_bridgeObjectRetain_n();
  id v8 = v7;
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.info.getter();
  id v32 = v8;
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    v33[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136380931;
    uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    sub_100021444(v12, v13, v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2085;
    uint64_t v14 = Dictionary.description.getter();
    sub_100021444(v14, v15, v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "reportResponseFailed: %{private}s resultOptions: %{sensitive}s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_10008B8BC(a2);
  sub_10008BC70(a2);
  uint64_t KeyPath = swift_getKeyPath();
  __chkstk_darwin(KeyPath);
  v33[0] = v3;
  sub_10011D620(&qword_100203828, (void (*)(uint64_t))type metadata accessor for SmartReplyAnalytics);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  uint64_t v31 = IAChannelSmartReplies;
  swift_getKeyPath();
  v33[0] = v3;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (*(void *)(v3 + 40))
  {
    swift_bridgeObjectRetain();
    NSString v17 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v17 = 0;
  }
  NSString v18 = self;
  sub_1000063C0(&qword_1001FB3D0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10018A730;
  int v20 = (void *)IAPayloadKeySmartRepliesFeatureModel;
  *(void *)(inited + 32) = IAPayloadKeySmartRepliesFeatureModel;
  id v21 = v20;
  NSString v22 = String._bridgeToObjectiveC()();
  unsigned int v23 = (void *)IAPayloadKeyFeedbackServiceOriginalContent;
  *(void *)(inited + 40) = v22;
  *(void *)(inited + 48) = v23;
  id v24 = v23;
  NSString v25 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  int v26 = (void *)IAPayloadKeySmartRepliesReasonForFailure;
  *(void *)(inited + 56) = v25;
  *(void *)(inited + 64) = v26;
  id v27 = v26;
  *(void *)(inited + 72) = String._bridgeToObjectiveC()();
  sub_1000050E4(inited);
  type metadata accessor for IAPayloadKey(0);
  sub_1000085FC(0, &qword_1001FB3D8);
  sub_10011D620((unint64_t *)&qword_1001FB168, type metadata accessor for IAPayloadKey);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v18 sendSignal:v32 toChannel:v31 withNullableUniqueStringID:v17 withPayload:isa];

  swift_getKeyPath();
  v33[0] = v3;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  id v29 = *(id *)(v3 + 48);
  NSString v30 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v29 addObject:v30];
}

uint64_t sub_10011B5CC(unint64_t a1)
{
  uint64_t v101 = type metadata accessor for NSFastEnumerationIterator();
  uint64_t v100 = *(void *)(v101 - 8);
  __chkstk_darwin(v101);
  uint64_t v3 = (char *)&v98 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1001FAC40 != -1) {
    goto LABEL_37;
  }
  while (1)
  {
    uint64_t v4 = type metadata accessor for Logger();
    uint64_t v5 = sub_10000EBE8(v4, (uint64_t)qword_1002127B8);
    swift_bridgeObjectRetain_n();
    uint64_t v105 = v5;
    uint64_t v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.info.getter();
    BOOL v8 = os_log_type_enabled(v6, v7);
    uint64_t v106 = (char *)a1;
    uint64_t v99 = v3;
    if (v8)
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(void *)&long long v117 = swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 136642819;
      type metadata accessor for QuestionnaireEntry();
      uint64_t v10 = Array.description.getter();
      *(void *)&long long v115 = sub_100021444(v10, v11, (uint64_t *)&v117);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "reportQuestionnaireAnswers: userFilledEntries: %{sensitive}s", v9, 0xCu);
      swift_arrayDestroy();
      a1 = (unint64_t)v106;
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    unint64_t v12 = sub_100005888((uint64_t)_swiftEmptyArrayStorage);
    if (!(a1 >> 62))
    {
      uint64_t v3 = *(char **)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v3) {
        goto LABEL_39;
      }
      goto LABEL_7;
    }
    swift_bridgeObjectRetain();
    uint64_t v3 = (char *)_CocoaArrayWrapper.endIndex.getter();
    if (!v3)
    {
LABEL_39:
      swift_bridgeObjectRelease();
      uint64_t v45 = IASignalSmartRepliesQuestionnaireAnswerModified;
      uint64_t v46 = IAChannelSmartReplies;
      swift_getKeyPath();
      uint64_t v47 = v102;
      *(void *)&long long v117 = v102;
      sub_10011D620(&qword_100203828, (void (*)(uint64_t))type metadata accessor for SmartReplyAnalytics);
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      uint64_t v48 = *(void *)(v47 + 40);
      uint64_t v109 = v46;
      if (v48)
      {
        swift_bridgeObjectRetain();
        NSString v49 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
      }
      else
      {
        NSString v49 = 0;
      }
      char v50 = self;
      sub_1000063C0(&qword_1001FB3D0);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10018A720;
      *(void *)(inited + 32) = String._bridgeToObjectiveC()();
      swift_bridgeObjectRetain();
      Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      *(void *)(inited + 40) = isa;
      sub_1000050E4(inited);
      type metadata accessor for IAPayloadKey(0);
      unint64_t v54 = v53;
      sub_1000085FC(0, &qword_1001FB3D8);
      sub_10011D620((unint64_t *)&qword_1001FB168, type metadata accessor for IAPayloadKey);
      unint64_t v108 = v54;
      Class v55 = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v50 sendSignal:v45 toChannel:v109 withNullableUniqueStringID:v49 withPayload:v55];

      swift_getKeyPath();
      *(void *)&long long v117 = v47;
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      uint64_t v56 = *(void **)(v47 + 72);
      if (v56)
      {
        id v57 = v56;
        uint64_t v58 = v99;
        uint64_t v109 = (uint64_t)v57;
        NSArray.makeIterator()();
        NSFastEnumerationIterator.next()();
        if (v118)
        {
          uint64_t v106 = (char *)&v115 + 8;
          *(void *)&long long v59 = 136643331;
          long long v104 = v59;
          do
          {
            sub_100007CC0(&v117, &v115);
            sub_1000085FC(0, &qword_100203838);
            if (swift_dynamicCast())
            {
              uint64_t v60 = (void *)v113;
              NSString v61 = String._bridgeToObjectiveC()();
              uint64_t v62 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              uint64_t v64 = v63;

              *(void *)&long long v113 = v62;
              *((void *)&v113 + 1) = v64;
              swift_bridgeObjectRetain();
              id v65 = [v60 __swift_objectForKeyedSubscript:_bridgeAnythingNonVerbatimToObjectiveC<A>(_:)()];
              swift_unknownObjectRelease();
              if (v65)
              {
                _bridgeAnyObjectToAny(_:)();
                swift_unknownObjectRelease();
              }
              else
              {
                long long v113 = 0u;
                long long v114 = 0u;
              }
              sub_10008AD8C((uint64_t)&v113, (uint64_t)&v115);
              if (v116)
              {
                if (swift_dynamicCast())
                {
                  uint64_t v67 = v111;
                  uint64_t v66 = v112;
                  swift_bridgeObjectRelease();
                  if (*(void *)(v12 + 16))
                  {
                    unint64_t v68 = sub_100007C48(v67, v66);
                    if (v69)
                    {
                      uint64_t v70 = (uint64_t *)(*(void *)(v12 + 56) + 16 * v68);
                      unint64_t v71 = v70[1];
                      uint64_t v107 = (char *)*v70;
                      swift_bridgeObjectRetain_n();
                      swift_bridgeObjectRelease();
                      id v72 = v60;
                      unint64_t v73 = Logger.logObject.getter();
                      int v74 = static os_log_type_t.info.getter();
                      if (os_log_type_enabled(v73, (os_log_type_t)v74))
                      {
                        LODWORD(v102) = v74;
                        os_log_t v103 = v73;
                        uint64_t v75 = swift_slowAlloc();
                        uint64_t v110 = swift_slowAlloc();
                        *(_DWORD *)uint64_t v75 = v104;
                        NSString v76 = String._bridgeToObjectiveC()();
                        uint64_t v77 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                        uint64_t v79 = v78;

                        *(void *)&long long v113 = v77;
                        *((void *)&v113 + 1) = v79;
                        swift_bridgeObjectRetain();
                        id v80 = [v72 __swift_objectForKeyedSubscript:_bridgeAnythingNonVerbatimToObjectiveC<A>(_:)()];
                        swift_unknownObjectRelease();
                        if (v80)
                        {
                          _bridgeAnyObjectToAny(_:)();
                          swift_unknownObjectRelease();
                        }
                        else
                        {
                          long long v113 = 0u;
                          long long v114 = 0u;
                        }
                        sub_10008AD8C((uint64_t)&v113, (uint64_t)&v115);
                        if (v116)
                        {
                          if (swift_dynamicCast())
                          {
                            uint64_t v82 = v111;
                            unint64_t v81 = v112;
                            swift_bridgeObjectRelease();
                            goto LABEL_68;
                          }
                          swift_bridgeObjectRelease();
                        }
                        else
                        {
                          swift_bridgeObjectRelease();
                          sub_100029500((uint64_t)&v115);
                        }
                        uint64_t v82 = 0;
                        unint64_t v81 = 0xE000000000000000;
LABEL_68:
                        *(void *)&long long v115 = sub_100021444(v82, v81, &v110);
                        UnsafeMutableRawBufferPointer.copyMemory(from:)();

                        swift_bridgeObjectRelease();
                        *(_WORD *)(v75 + 12) = 2085;
                        NSString v83 = String._bridgeToObjectiveC()();
                        uint64_t v84 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                        uint64_t v86 = v85;

                        *(void *)&long long v113 = v84;
                        *((void *)&v113 + 1) = v86;
                        swift_bridgeObjectRetain();
                        id v87 = [v72 __swift_objectForKeyedSubscript:_bridgeAnythingNonVerbatimToObjectiveC<A>(_:)()];
                        swift_unknownObjectRelease();
                        if (v87)
                        {
                          _bridgeAnyObjectToAny(_:)();
                          swift_unknownObjectRelease();
                        }
                        else
                        {
                          long long v113 = 0u;
                          long long v114 = 0u;
                        }
                        sub_10008AD8C((uint64_t)&v113, (uint64_t)&v115);
                        if (v116)
                        {
                          if (swift_dynamicCast())
                          {
                            uint64_t v89 = v111;
                            unint64_t v88 = v112;
                            swift_bridgeObjectRelease();
                            goto LABEL_77;
                          }
                          swift_bridgeObjectRelease();
                        }
                        else
                        {
                          swift_bridgeObjectRelease();
                          sub_100029500((uint64_t)&v115);
                        }
                        uint64_t v89 = 0;
                        unint64_t v88 = 0xE000000000000000;
LABEL_77:
                        *(void *)&long long v115 = sub_100021444(v89, v88, &v110);
                        UnsafeMutableRawBufferPointer.copyMemory(from:)();

                        swift_bridgeObjectRelease();
                        *(_WORD *)(v75 + 22) = 2085;
                        swift_bridgeObjectRetain();
                        *(void *)&long long v115 = sub_100021444((uint64_t)v107, v71, &v110);
                        UnsafeMutableRawBufferPointer.copyMemory(from:)();
                        swift_bridgeObjectRelease_n();
                        os_log_t v90 = v103;
                        _os_log_impl((void *)&_mh_execute_header, v103, (os_log_type_t)v102, "reportQuestionnaireAnswers: Updating answer for question %{sensitive}s: '%{sensitive}s' -> '%{sensitive}s'", (uint8_t *)v75, 0x20u);
                        swift_arrayDestroy();
                        swift_slowDealloc();
                        swift_slowDealloc();
                      }
                      else
                      {

                        swift_bridgeObjectRelease_n();
                      }
                      NSString v91 = String._bridgeToObjectiveC()();
                      NSString v92 = String._bridgeToObjectiveC()();
                      swift_bridgeObjectRelease();
                      *(void *)&long long v115 = v91;
                      id v93 = v91;
                      [v72 __swift_setObject:v92 forKeyedSubscript:_bridgeAnythingNonVerbatimToObjectiveC<A>(_:)()];

                      swift_unknownObjectRelease();
                      goto LABEL_46;
                    }
                  }

                  swift_bridgeObjectRelease();
                }
                else
                {
                  swift_bridgeObjectRelease();
                }
              }
              else
              {
                swift_bridgeObjectRelease();

                sub_100029500((uint64_t)&v115);
              }
            }
LABEL_46:
            NSFastEnumerationIterator.next()();
          }
          while (v118);
        }
        (*(void (**)(char *, uint64_t))(v100 + 8))(v58, v101);
      }
      else
      {
        uint64_t v94 = Logger.logObject.getter();
        os_log_type_t v95 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v94, v95))
        {
          uint64_t v96 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v96 = 0;
          _os_log_impl((void *)&_mh_execute_header, v94, v95, "reportQuestionnaireAnswers: nil cachedQuestionsOptionsAnswers - cannot update", v96, 2u);
          swift_slowDealloc();
        }
      }
      return swift_bridgeObjectRelease();
    }
LABEL_7:
    unint64_t v108 = a1 & 0xC000000000000001;
    uint64_t v14 = 4;
    *(void *)&long long v13 = 136642819;
    long long v104 = v13;
    os_log_t v103 = (os_log_t)((char *)&type metadata for Any + 8);
    uint64_t v107 = v3;
LABEL_11:
    uint64_t v16 = v14 - 4;
    if (v108) {
      break;
    }
    uint64_t v17 = *(void *)(a1 + 8 * v14);
    swift_retain();
    NSString v18 = (char *)(v14 - 3);
    if (!__OFADD__(v16, 1)) {
      goto LABEL_16;
    }
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    swift_once();
  }
  uint64_t v17 = specialized _ArrayBuffer._getElementSlowPath(_:)();
  NSString v18 = (char *)(v14 - 3);
  if (__OFADD__(v16, 1)) {
    goto LABEL_34;
  }
LABEL_16:
  id v19 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v17
                                                              + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireEntry_entry), "question"));
  if (!v19)
  {
    swift_bridgeObjectRetain_n();
    id v24 = Logger.logObject.getter();
    os_log_type_t v25 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = swift_slowAlloc();
      *(void *)&long long v117 = swift_slowAlloc();
      *(_DWORD *)uint64_t v26 = v104;
      type metadata accessor for QuestionnaireEntry();
      uint64_t v27 = Array.description.getter();
      *(void *)(v26 + 4) = sub_100021444(v27, v28, (uint64_t *)&v117);
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "reportQuestionnaireAnswers: Received nil question for filled entries: %{sensitive}s", (uint8_t *)v26, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v3 = v107;
      swift_slowDealloc();
      swift_release();
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_release();
    }
    goto LABEL_10;
  }
  int v20 = v19;
  uint64_t v3 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v22 = v21;

  swift_getKeyPath();
  *(void *)&long long v117 = v17;
  sub_10011D620(&qword_1001FD2E8, (void (*)(uint64_t))type metadata accessor for QuestionnaireEntry);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  unint64_t v23 = *(void *)(v17 + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireEntry__selectedAnswer + 8);
  if (v23)
  {
    uint64_t v109 = *(void *)(v17 + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireEntry__selectedAnswer);
    a1 = v23;
  }
  else
  {
    a1 = 0xE400000000000000;
    uint64_t v109 = 1701736270;
  }
  swift_bridgeObjectRetain();
  unint64_t v29 = v12;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)&long long v117 = v12;
  unint64_t v32 = sub_100007C48((uint64_t)v3, v22);
  uint64_t v33 = *(void *)(v12 + 16);
  BOOL v34 = (v31 & 1) == 0;
  uint64_t v35 = v33 + v34;
  if (__OFADD__(v33, v34)) {
    goto LABEL_35;
  }
  char v36 = v31;
  if (*(void *)(v29 + 24) >= v35)
  {
    if (isUniquelyReferenced_nonNull_native)
    {
      os_log_type_t v39 = (void *)v117;
      if ((v31 & 1) == 0) {
        goto LABEL_29;
      }
    }
    else
    {
      sub_1001705FC();
      os_log_type_t v39 = (void *)v117;
      if ((v36 & 1) == 0)
      {
LABEL_29:
        v39[(v32 >> 6) + 8] |= 1 << v32;
        uint64_t v40 = (char **)(v39[6] + 16 * v32);
        *uint64_t v40 = v3;
        v40[1] = (char *)v22;
        uint64_t v41 = (uint64_t *)(v39[7] + 16 * v32);
        uint64_t *v41 = v109;
        v41[1] = a1;
        uint64_t v42 = v39[2];
        BOOL v43 = __OFADD__(v42, 1);
        uint64_t v44 = v42 + 1;
        if (v43) {
          goto LABEL_36;
        }
        unint64_t v12 = (unint64_t)v39;
        v39[2] = v44;
        swift_bridgeObjectRetain();
        goto LABEL_9;
      }
    }
LABEL_8:
    unint64_t v12 = (unint64_t)v39;
    unint64_t v15 = (uint64_t *)(v39[7] + 16 * v32);
    swift_bridgeObjectRelease();
    uint64_t *v15 = v109;
    v15[1] = a1;
LABEL_9:
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    a1 = (unint64_t)v106;
    uint64_t v3 = v107;
LABEL_10:
    ++v14;
    if (v18 == v3) {
      goto LABEL_39;
    }
    goto LABEL_11;
  }
  sub_10016D7AC(v35, isUniquelyReferenced_nonNull_native);
  unint64_t v37 = sub_100007C48((uint64_t)v3, v22);
  if ((v36 & 1) == (v38 & 1))
  {
    unint64_t v32 = v37;
    os_log_type_t v39 = (void *)v117;
    if ((v36 & 1) == 0) {
      goto LABEL_29;
    }
    goto LABEL_8;
  }
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

void sub_10011C630(unint64_t *a1, _UNKNOWN **a2)
{
  uint64_t v3 = v2;
  uint64_t v79 = type metadata accessor for NSFastEnumerationIterator();
  uint64_t v6 = *(void (***)(char *, uint64_t))(v79 - 8);
  __chkstk_darwin(v79);
  BOOL v8 = (char *)&v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1001FAC40 != -1) {
LABEL_31:
  }
    swift_once();
  uint64_t v9 = type metadata accessor for Logger();
  sub_10000EBE8(v9, (uint64_t)qword_1002127B8);
  swift_bridgeObjectRetain_n();
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.info.getter();
  BOOL v12 = os_log_type_enabled(v10, v11);
  uint64_t v70 = v3;
  unint64_t v71 = a2;
  if (v12)
  {
    long long v13 = (uint8_t *)swift_slowAlloc();
    *(void *)&long long v84 = swift_slowAlloc();
    *(_DWORD *)long long v13 = 136642819;
    unint64_t v81 = v6;
    uint64_t v14 = Dictionary.description.getter();
    *(void *)&long long v83 = sub_100021444(v14, v15, (uint64_t *)&v84);
    a2 = v71;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "reportGeneratedQuestions: resultOptions: %{sensitive}s", v13, 0xCu);
    uint64_t v6 = v81;
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v16 = sub_10008B8BC((uint64_t)a1);
  uint64_t v18 = v17;
  id v19 = [a2 entries];
  if (!v19)
  {
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
    return;
  }
  int v20 = v19;
  uint64_t v21 = sub_1000085FC(0, (unint64_t *)&unk_1001FD2F0);
  unint64_t v22 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v69 = v16;
  if (v22 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v23 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  id v24 = (id *)&IASignalSmartRepliesQuestionnaireShown;
  if (v23 <= 0) {
    id v24 = (id *)&IASignalSmartRepliesQuestionnaireNotShown;
  }
  id v25 = *v24;
  sub_1000085FC(0, &qword_100203830);
  id v80 = (id)NSArray.init(arrayLiteral:)();
  id v26 = [a2 entries];
  if (!v26) {
    goto LABEL_44;
  }
  uint64_t v27 = v26;
  uint64_t v68 = v18;
  unint64_t v28 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  unint64_t v74 = v28;
  id v67 = v25;
  uint64_t v66 = v21;
  if (v28 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v3)
    {
LABEL_13:
      uint64_t v77 = sub_1000085FC(0, &qword_100203838);
      unint64_t v29 = 0;
      unint64_t v78 = v74 & 0xC000000000000001;
      uint64_t v73 = v74 & 0xFFFFFFFFFFFFFF8;
      unint64_t v72 = v74 + 32;
      uint64_t v75 = v6 + 1;
      a1 = &qword_100203840;
      a2 = NSString_ptr;
      uint64_t v76 = v3;
      while (1)
      {
        if (v78)
        {
          uint64_t v33 = (void (**)(char *, uint64_t))specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (v29 >= *(void *)(v73 + 16)) {
            goto LABEL_30;
          }
          uint64_t v33 = (void (**)(char *, uint64_t))*(id *)(v72 + 8 * v29);
        }
        uint64_t v6 = v33;
        if (__OFADD__(v29++, 1))
        {
          __break(1u);
LABEL_30:
          __break(1u);
          goto LABEL_31;
        }
        uint64_t v35 = NSDictionary.init(dictionaryLiteral:)();
        NSString v36 = String._bridgeToObjectiveC()();
        static String._unconditionallyBridgeFromObjectiveC(_:)();

        NSString v37 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        unint64_t v81 = v6;
        id v38 = [v6 question:v66];
        if (v38)
        {
          os_log_type_t v39 = v38;
          static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v6 = v40;
        }
        else
        {
          uint64_t v6 = (void (**)(char *, uint64_t))0xE000000000000000;
        }
        NSString v41 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        [v35 setObject:v41 forKeyedSubscript:v37];

        unint64_t v86 = (unint64_t)_swiftEmptyArrayStorage;
        id v42 = [v81 answerOptions];
        if (!v42) {
          break;
        }
        BOOL v43 = v42;
        NSOrderedSet.makeIterator()();

        while (1)
        {
          NSFastEnumerationIterator.next()();
          if (!v85) {
            break;
          }
          sub_100007CC0(&v84, &v83);
          sub_1000085FC(0, &qword_100203840);
          swift_dynamicCast();
          uint64_t v6 = v82;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v86 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v86 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
        }
        (*v75)(v8, v79);
        NSString v30 = String._bridgeToObjectiveC()();
        static String._unconditionallyBridgeFromObjectiveC(_:)();

        NSString v31 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        sub_1000085FC(0, &qword_100203840);
        Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v35 setObject:isa forKeyedSubscript:v31];

        [v80 addObject:v35];
        uint64_t v3 = v76;
        if (v29 == v76) {
          goto LABEL_34;
        }
      }
      __break(1u);
      goto LABEL_43;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v3) {
      goto LABEL_13;
    }
  }
LABEL_34:
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  uint64_t v44 = v70;
  *(void *)&long long v84 = v70;
  sub_10011D620(&qword_100203828, (void (*)(uint64_t))type metadata accessor for SmartReplyAnalytics);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (*(void *)(v44 + 40))
  {
    swift_bridgeObjectRetain();
    NSString v45 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v45 = 0;
  }
  uint64_t v46 = v71;
  sub_1000063C0(&qword_1001FB3D0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10018A730;
  uint64_t v48 = (void *)IAPayloadKeySmartRepliesFeatureModel;
  *(void *)(inited + 32) = IAPayloadKeySmartRepliesFeatureModel;
  id v49 = v48;
  NSString v50 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v51 = (void *)IAPayloadKeySmartRepliesNumOfQuestionsProvided;
  *(void *)(inited + 40) = v50;
  *(void *)(inited + 48) = v51;
  id v52 = v51;
  id v53 = [v46 entries];
  if (!v53) {
    goto LABEL_45;
  }
  unint64_t v54 = v53;
  uint64_t v55 = IAChannelSmartReplies;
  unint64_t v56 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v56 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v57 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v57 = *(void *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  uint64_t v58 = self;
  *(void *)(inited + 56) = [objc_allocWithZone((Class)NSNumber) initWithInteger:v57];
  NSString v59 = String._bridgeToObjectiveC()();
  id v60 = v80;
  *(void *)(inited + 64) = v59;
  *(void *)(inited + 72) = v60;
  id v61 = v60;
  sub_1000050E4(inited);
  type metadata accessor for IAPayloadKey(0);
  sub_1000085FC(0, &qword_1001FB3D8);
  sub_10011D620((unint64_t *)&qword_1001FB168, type metadata accessor for IAPayloadKey);
  Class v62 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  uint64_t v63 = v67;
  [v58 sendSignal:v67 toChannel:v55 withNullableUniqueStringID:v45 withPayload:v62];

  uint64_t KeyPath = swift_getKeyPath();
  __chkstk_darwin(KeyPath);
  *(&v66 - 2) = v44;
  *(&v66 - 1) = (uint64_t)v61;
  *(void *)&long long v84 = v44;
  id v65 = v61;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();

  swift_release();
}

void sub_10011D110(void *a1)
{
}

void sub_10011D124(void *a1, const char *a2, uint64_t *a3)
{
  uint64_t v6 = v3;
  if (qword_1001FAC40 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  sub_10000EBE8(v8, (uint64_t)qword_1002127B8);
  id v9 = a1;
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v10, v11))
  {
    BOOL v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    *(_DWORD *)BOOL v12 = 136380675;
    uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    sub_100021444(v13, v14, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, a2, v12, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v15 = *a3;
  swift_getKeyPath();
  uint64_t v17 = v6;
  sub_10011D620(&qword_100203828, (void (*)(uint64_t))type metadata accessor for SmartReplyAnalytics);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (*(void *)(v6 + 40))
  {
    swift_bridgeObjectRetain();
    NSString v16 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v16 = 0;
  }
  [self sendSignal:v9 toChannel:v15 withNullableUniqueStringID:v16 withPayload:0];
}

uint64_t sub_10011D3B4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC21WritingToolsUIService19SmartReplyAnalytics___observationRegistrar;
  uint64_t v2 = type metadata accessor for ObservationRegistrar();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_10011D484()
{
  return type metadata accessor for SmartReplyAnalytics();
}

uint64_t type metadata accessor for SmartReplyAnalytics()
{
  uint64_t result = qword_100203600;
  if (!qword_100203600) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10011D4D8()
{
  uint64_t result = type metadata accessor for ObservationRegistrar();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_10011D598()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[4];
  *(void *)(v1 + 32) = v0[3];
  *(void *)(v1 + 40) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

void sub_10011D5E0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void **)(v0 + 24);
  uint64_t v3 = *(void **)(v1 + 72);
  *(void *)(v1 + 72) = v2;
  id v4 = v2;
}

uint64_t sub_10011D620(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10011D670()
{
  return sub_10011D6C8();
}

void sub_10011D690()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void **)(v0 + 24);
  uint64_t v3 = *(void **)(v1 + 48);
  *(void *)(v1 + 48) = v2;
  id v4 = v2;
}

uint64_t sub_10011D6C8()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[4];
  *(void *)(v1 + 16) = v0[3];
  *(void *)(v1 + 24) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10011D718()
{
  return sub_10011D748();
}

uint64_t sub_10011D730()
{
  return sub_10011D788();
}

uint64_t sub_10011D748()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[4];
  *(void *)(v1 + 80) = v0[3];
  *(void *)(v1 + 88) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10011D788()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[4];
  *(void *)(v1 + 56) = v0[3];
  *(void *)(v1 + 64) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

void sub_10011D7C8()
{
}

uint64_t sub_10011D7E0()
{
  swift_getKeyPath();
  sub_100040E04();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(void *)(v0 + 16);
}

uint64_t sub_10011D854@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_100040E04();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  char v5 = *(unsigned char *)(v3 + 24);
  *(void *)a2 = *(void *)(v3 + 16);
  *(unsigned char *)(a2 + 8) = v5;
  return result;
}

uint64_t sub_10011D8D4()
{
  return swift_release();
}

void sub_10011D978(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = *(void *)(a1 + 16);
  int v5 = *(unsigned __int8 *)(a1 + 24);
  *(void *)(a1 + 16) = a2;
  *(unsigned char *)(a1 + 24) = a3 & 1;
  swift_getKeyPath();
  sub_100040E04();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (*(unsigned char *)(a1 + 24))
  {
    if (v5) {
      return;
    }
LABEL_8:
    sub_10011E9C4();
    return;
  }
  if (*(void *)(a1 + 16) == v4) {
    char v6 = v5;
  }
  else {
    char v6 = 1;
  }
  if (v6) {
    goto LABEL_8;
  }
}

uint64_t sub_10011DA30()
{
  swift_getKeyPath();
  sub_100040E04();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(unsigned __int8 *)(v0 + 25);
}

uint64_t sub_10011DAA0@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_100040E04();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + 25);
  return result;
}

uint64_t sub_10011DB18()
{
  return swift_release();
}

uint64_t sub_10011DBB8(uint64_t result, char a2)
{
  *(unsigned char *)(result + 25) = a2;
  return result;
}

uint64_t sub_10011DBC0()
{
  return swift_unknownObjectWeakLoadStrong();
}

uint64_t sub_10011DC34@<X0>(uint64_t *a1@<X8>)
{
  swift_getKeyPath();
  sub_100040E04();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  *a1 = result;
  return result;
}

void sub_10011DCB0(void **a1)
{
  uint64_t v1 = *a1;
  swift_getKeyPath();
  sub_100040E04();
  id v2 = v1;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
}

uint64_t sub_10011DD5C()
{
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_10011DD78()
{
  return swift_unknownObjectWeakLoadStrong();
}

uint64_t sub_10011DDEC@<X0>(uint64_t *a1@<X8>)
{
  swift_getKeyPath();
  sub_100040E04();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  *a1 = result;
  return result;
}

void sub_10011DE68(void **a1)
{
  uint64_t v1 = *a1;
  swift_getKeyPath();
  sub_100040E04();
  id v2 = v1;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
}

uint64_t sub_10011DF14()
{
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_10011DF30()
{
  return swift_unknownObjectWeakLoadStrong();
}

uint64_t sub_10011DFA4()
{
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_10011DFC0()
{
  return swift_unknownObjectWeakLoadStrong();
}

uint64_t sub_10011E034@<X0>(uint64_t *a1@<X8>)
{
  swift_getKeyPath();
  sub_100040E04();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  *a1 = result;
  return result;
}

void sub_10011E0B0(void **a1)
{
  uint64_t v1 = *a1;
  swift_getKeyPath();
  sub_100040E04();
  id v2 = v1;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
}

uint64_t sub_10011E15C()
{
  return swift_unknownObjectWeakAssign();
}

void *sub_10011E178()
{
  swift_getKeyPath();
  sub_100040E04();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v1 = *(void **)(v0 + 64);
  id v2 = v1;
  return v1;
}

id sub_10011E1F0@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_100040E04();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v4 = *(void **)(v3 + 64);
  *a2 = v4;

  return v4;
}

void sub_10011E278(void **a1)
{
  uint64_t v1 = *a1;
  swift_getKeyPath();
  sub_100040E04();
  id v2 = v1;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
}

void *sub_10011E324()
{
  swift_getKeyPath();
  sub_100040E04();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v1 = *(void **)(v0 + 72);
  id v2 = v1;
  return v1;
}

id sub_10011E39C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_100040E04();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v4 = *(void **)(v3 + 72);
  *a2 = v4;

  return v4;
}

void sub_10011E424(void **a1)
{
  uint64_t v1 = *a1;
  swift_getKeyPath();
  sub_100040E04();
  id v2 = v1;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
}

uint64_t sub_10011E4D0()
{
  swift_getKeyPath();
  sub_100040E04();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(unsigned __int8 *)(v0 + 81);
}

uint64_t sub_10011E540(uint64_t a1, char a2)
{
  *(unsigned char *)(a1 + 81) = a2;
  swift_getKeyPath();
  sub_100040E04();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  *(unsigned char *)(a1 + 82) = *(unsigned char *)(a1 + 81);
  return result;
}

void sub_10011E5C0()
{
  swift_getKeyPath();
  sub_100040E04();
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  swift_getKeyPath();
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  *(_WORD *)(v0 + 82) = 0;
  *(unsigned char *)(v0 + 84) = 0;
  swift_beginAccess();
  *(void *)(v0 + 88) = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void **)(v0 + 96);
  *(void *)(v0 + 96) = 0;
}

void sub_10011E6F4()
{
  uint64_t v1 = v0;
  swift_getKeyPath();
  aBlock[0] = v0;
  sub_100040E04();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = Strong;
    [Strong setText:0];
  }
  if (*(void *)(v0 + 96))
  {
    swift_getKeyPath();
    aBlock[0] = v0;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v4 = swift_unknownObjectWeakLoadStrong();
    if (v4)
    {
      int v5 = (void *)v4;
      char v6 = *(void **)(v1 + 96);
      *(void *)(v1 + 96) = 0;

      *(unsigned char *)(v1 + 84) = 1;
      *(unsigned char *)(v1 + 82) = 0;
      swift_beginAccess();
      *(void *)(v1 + 88) = _swiftEmptyArrayStorage;
      swift_bridgeObjectRelease();
      uint64_t v7 = swift_allocObject();
      swift_weakInit();
      swift_retain();
      uint64_t v8 = [v5 endOfDocument];
      aBlock[4] = sub_100121568;
      aBlock[5] = v7;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100048B2C;
      aBlock[3] = &unk_1001EF470;
      id v9 = _Block_copy(aBlock);
      swift_retain();
      swift_release();
      [v5 _insertAnimatedTextPlaceholderAtLocation:v8 numLines:v9 completion:0.0];
      _Block_release(v9);

      swift_release_n();
    }
    else
    {
      if (qword_1001FAC28 != -1) {
        swift_once();
      }
      uint64_t v10 = type metadata accessor for Logger();
      sub_10000EBE8(v10, (uint64_t)qword_100212770);
      uint64_t v8 = Logger.logObject.getter();
      os_log_type_t v11 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v8, v11))
      {
        BOOL v12 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)BOOL v12 = 0;
        _os_log_impl((void *)&_mh_execute_header, v8, v11, "ponderableTextView is nil", v12, 2u);
        swift_slowDealloc();
      }
    }
  }
}

void sub_10011E9C4()
{
  uint64_t v1 = v0;
  swift_getKeyPath();
  sub_100040E04();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  int v2 = *(unsigned __int8 *)(v0 + 25);
  if (v2 != 3)
  {
    swift_getKeyPath();
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    if ((*(unsigned char *)(v0 + 24) & 1) == 0)
    {
      uint64_t v3 = *(void *)(v0 + 16);
      swift_getKeyPath();
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        int v5 = (void *)Strong;
        if (v2 == 2)
        {
          swift_getKeyPath();
          ObservationRegistrar.access<A, B>(_:keyPath:)();
          swift_release();
          char v6 = *(void **)(v0 + 64);
          if (v6)
          {
            id v7 = v6;
            [v7 removeFromSuperview];
            uint64_t KeyPath = swift_getKeyPath();
            __chkstk_darwin(KeyPath);
            ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();

            swift_release();
          }
          swift_getKeyPath();
          ObservationRegistrar.access<A, B>(_:keyPath:)();
          swift_release();
          id v9 = *(void **)(v0 + 72);
          if (v9)
          {
            id v10 = v9;
            [v10 removeFromSuperview];
            uint64_t v11 = swift_getKeyPath();
            __chkstk_darwin(v11);
            ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();

            swift_release();
          }
          id v12 = [v5 rootViewController];
          if (v12)
          {
            uint64_t v13 = v12;
            id v14 = [v12 view];

            if (!v14)
            {
              __break(1u);
              return;
            }
            [v14 layoutSubviews];
          }
          if ((*(unsigned char *)(v1 + 80) & 1) == 0)
          {
            if (v3 == 7)
            {
              sub_100120734();
            }
            else if (v3 == 2)
            {
              sub_10011F774();
            }
          }
        }
      }
    }
  }
}

void sub_10011ECF4(void *a1)
{
  int v2 = v1;
  swift_getKeyPath();
  aBlock = v1;
  sub_100040E04();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    if (qword_1001FAC28 != -1) {
      swift_once();
    }
    uint64_t v15 = type metadata accessor for Logger();
    sub_10000EBE8(v15, (uint64_t)qword_100212770);
    int v5 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v5, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, v16, "ponderableTextView is nil", v17, 2u);
      swift_slowDealloc();
    }
    goto LABEL_30;
  }
  int v5 = Strong;
  if (a1)
  {
    uint64_t v40 = Strong;
    id v6 = a1;
    id v7 = [v6 string];
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v9 = v8;

    id v10 = v2[12];
    if (v10)
    {
      id v11 = [v10 string];
      uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      id v14 = v13;
    }
    else
    {
      uint64_t v12 = 0;
      id v14 = (void *)0xE000000000000000;
    }
    v18._countAndFlagsBits = v12;
    v18._object = v14;
    if (!String.hasPrefix(_:)(v18) || (uint64_t v19 = String.count.getter(), String.count.getter() >= v19))
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
    uint64_t v20 = String.count.getter();
    swift_bridgeObjectRelease();
    uint64_t v21 = String.count.getter();
    swift_bridgeObjectRelease();
    if (__OFSUB__(v21, v20))
    {
      __break(1u);
    }
    else
    {
      id v22 = [v6 attributedSubstringFromRange:v20, v21 - v20];
      swift_beginAccess();
      id v9 = v22;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)(((unint64_t)v2[11] & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)(((unint64_t)v2[11] & 0xFFFFFFFFFFFFFF8)
                                                                                            + 0x18) >> 1)
      {
LABEL_14:
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        swift_endAccess();

        uint64_t v23 = v2[12];
        v2[12] = a1;

LABEL_16:
        int v5 = v40;
        goto LABEL_17;
      }
    }
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    goto LABEL_14;
  }
LABEL_17:
  if (*((unsigned char *)v2 + 84)) {
    goto LABEL_30;
  }
  swift_beginAccess();
  unint64_t v24 = (unint64_t)v2[11];
  if (v24 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v36 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v36)
    {
LABEL_20:
      unint64_t v25 = swift_bridgeObjectRetain();
      id v26 = (void *)sub_10011F44C(v25);
      swift_bridgeObjectRelease();
      v2[11] = _swiftEmptyArrayStorage;
      swift_bridgeObjectRelease();
      *((unsigned char *)v2 + 84) = 1;
      if (*((unsigned char *)v2 + 83) == 1)
      {
        *((unsigned char *)v2 + 83) = 0;
        uint64_t v27 = swift_allocObject();
        swift_weakInit();
        NSString v45 = sub_10012154C;
        uint64_t v46 = v27;
        aBlock = _NSConcreteStackBlock;
        uint64_t v42 = 1107296256;
        BOOL v43 = sub_100048B2C;
        uint64_t v44 = &unk_1001EF420;
        unint64_t v28 = _Block_copy(&aBlock);
        swift_retain_n();
        swift_release();
        unsigned __int8 v29 = [v5 _replaceAnimatedTextPlaceholderWith:v26 completion:v28];
        _Block_release(v28);
        swift_release_n();
        if (v29)
        {
        }
        else
        {
          id v35 = v26;
          [v5 setAttributedText:v35];
        }
      }
      else
      {
        uint64_t v30 = swift_allocObject();
        swift_weakInit();
        swift_retain();
        id v31 = [v5 endOfDocument];
        id v32 = [v5 endOfDocument];
        id v33 = [v5 textRangeFromPosition:v31 toPosition:v32];

        [v5 setSelectedTextRange:v33];
        NSString v45 = sub_10012154C;
        uint64_t v46 = v30;
        aBlock = _NSConcreteStackBlock;
        uint64_t v42 = 1107296256;
        BOOL v43 = sub_100048B2C;
        uint64_t v44 = &unk_1001EF3F8;
        BOOL v34 = _Block_copy(&aBlock);
        swift_retain();
        swift_release();
        [v5 _insertAttributedText:v26 withAnimationStyle:1 completion:v34];
        _Block_release(v34);
        swift_release_n();
      }
      goto LABEL_30;
    }
  }
  else if (*(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_20;
  }
  swift_getKeyPath();
  aBlock = v2;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (*((unsigned char *)v2 + 81) == 1 && *((unsigned char *)v2 + 82) == 1)
  {
    [v5 frame];
    if (!CGRectIsEmpty(v47))
    {
      *((unsigned char *)v2 + 84) = 1;
      *((unsigned char *)v2 + 82) = 0;
      uint64_t v37 = swift_allocObject();
      swift_weakInit();
      swift_retain();
      id v38 = [v5 endOfDocument];
      NSString v45 = sub_100121568;
      uint64_t v46 = v37;
      aBlock = _NSConcreteStackBlock;
      uint64_t v42 = 1107296256;
      BOOL v43 = sub_100048B2C;
      uint64_t v44 = &unk_1001EF448;
      os_log_type_t v39 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      [v5 _insertAnimatedTextPlaceholderAtLocation:v38 numLines:v39 completion:0.0];
      _Block_release(v39);
      swift_release_n();

      int v5 = v38;
    }
  }
LABEL_30:
}

uint64_t sub_10011F44C(unint64_t a1)
{
  id v2 = [objc_allocWithZone((Class)NSMutableAttributedString) init];
  if (!(a1 >> 62))
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v3) {
      goto LABEL_3;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    return (uint64_t)v2;
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v3 = result;
  if (!result) {
    goto LABEL_10;
  }
LABEL_3:
  if (v3 >= 1)
  {
    for (uint64_t i = 0; i != v3; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v6 = *(id *)(a1 + 8 * i + 32);
      }
      id v7 = v6;
      [v2 appendAttributedString:v6];
    }
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

id Array<A>.joinAttributedStrings()(uint64_t a1)
{
  id v2 = [objc_allocWithZone((Class)NSMutableAttributedString) init];
  swift_bridgeObjectRetain();
  if (Array.endIndex.getter())
  {
    uint64_t v3 = 4;
    while (1)
    {
      Swift::Bool IsNativeType = Array._hoistableIsNativeTypeChecked()();
      Array._checkSubscript(_:wasNativeTypeChecked:)();
      id result = IsNativeType ? *(id *)(a1 + 8 * v3) : (id)_ArrayBuffer._getElementSlowPath(_:)();
      id v6 = result;
      uint64_t v7 = v3 - 3;
      if (__OFADD__(v3 - 4, 1)) {
        break;
      }
      [v2 appendAttributedString:result];

      ++v3;
      if (v7 == Array.endIndex.getter()) {
        goto LABEL_9;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return v2;
  }
  return result;
}

uint64_t sub_10011F654()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_100120CA4();
    return swift_release();
  }
  return result;
}

uint64_t sub_10011F6AC()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = result;
    *(_WORD *)(result + 83) = 1;
    swift_beginAccess();
    unint64_t v2 = *(void *)(v1 + 88);
    if (v2 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v3) {
        return swift_release();
      }
    }
    else if (!*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      return swift_release();
    }
    sub_10011ECF4(0);
    return swift_release();
  }
  return result;
}

void sub_10011F774()
{
  uint64_t v1 = *v0;
  swift_getKeyPath();
  aBlock = v0;
  sub_100040E04();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = (void *)Strong;
    double y = CGRectZero.origin.y;
    double width = CGRectZero.size.width;
    double height = CGRectZero.size.height;
    id v7 = [objc_allocWithZone((Class)UIVisualEffectView) initWithFrame:CGRectZero.origin.x, y, width, height];
    [v7 setTranslatesAutoresizingMaskIntoConstraints:0];
    [v7 setUserInteractionEnabled:0];
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v58 = v1;
    __chkstk_darwin(KeyPath);
    id v54 = v7;
    unint64_t v56 = v0;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();

    id v9 = [objc_allocWithZone((Class)UIVisualEffectView) initWithFrame:CGRectZero.origin.x, y, width, height];
    [v9 setTranslatesAutoresizingMaskIntoConstraints:0];
    [v9 setUserInteractionEnabled:0];
    uint64_t v10 = swift_getKeyPath();
    __chkstk_darwin(v10);
    id v11 = v9;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();

    [v3 addSubview:v11];
    [v3 addSubview:v54];
    uint64_t v57 = self;
    sub_1000063C0(&qword_1001FAFD0);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_100192550;
    id v13 = [v54 widthAnchor];
    id v14 = [v3 widthAnchor];
    id v15 = [v13 constraintEqualToAnchor:v14];

    *(void *)(v12 + 32) = v15;
    id v16 = [v54 heightAnchor];
    id v17 = [v3 heightAnchor];
    id v18 = [v16 constraintEqualToAnchor:v17 constant:200.0];

    *(void *)(v12 + 40) = v18;
    id v19 = [v54 centerXAnchor];
    id v20 = [v3 centerXAnchor];
    id v21 = [v19 constraintEqualToAnchor:v20];

    *(void *)(v12 + 48) = v21;
    id v22 = [v54 topAnchor];
    id v23 = [v3 topAnchor];
    id v24 = [v22 constraintEqualToAnchor:v23];

    *(void *)(v12 + 56) = v24;
    id v25 = [v11 widthAnchor];
    id v26 = [v3 widthAnchor];
    id v27 = [v25 constraintEqualToAnchor:v26];

    *(void *)(v12 + 64) = v27;
    id v28 = [v11 heightAnchor];
    id v29 = [v3 heightAnchor];
    id v30 = [v28 constraintEqualToAnchor:v29 constant:200.0];

    *(void *)(v12 + 72) = v30;
    id v31 = [v11 centerXAnchor];
    id v32 = [v3 centerXAnchor];
    id v33 = [v31 constraintEqualToAnchor:v32];

    *(void *)(v12 + 80) = v33;
    id v34 = [v11 topAnchor];
    id v35 = [v3 topAnchor];
    id v36 = [v34 constraintEqualToAnchor:v35];

    *(void *)(v12 + 88) = v36;
    specialized Array._endMutation()();
    sub_1000085FC(0, (unint64_t *)&qword_1001FAFD8);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v57 activateConstraints:isa];

    id v38 = self;
    uint64_t v39 = swift_allocObject();
    *(void *)(v39 + 16) = v54;
    *(void *)(v39 + 24) = v58;
    uint64_t v63 = sub_100121614;
    uint64_t v64 = (void *)v39;
    aBlock = _NSConcreteStackBlock;
    uint64_t v60 = 1107296256;
    id v61 = sub_100048B2C;
    Class v62 = &unk_1001EF1C8;
    uint64_t v40 = _Block_copy(&aBlock);
    id v41 = v54;
    swift_release();
    uint64_t v42 = (void *)swift_allocObject();
    uint64_t v42[2] = v41;
    v42[3] = v56;
    v42[4] = v58;
    uint64_t v63 = sub_10012142C;
    uint64_t v64 = v42;
    aBlock = _NSConcreteStackBlock;
    uint64_t v60 = 1107296256;
    id v61 = sub_1001205BC;
    Class v62 = &unk_1001EF218;
    BOOL v43 = _Block_copy(&aBlock);
    id v55 = v41;
    swift_retain();
    swift_release();
    [v38 animateWithDuration:v40 animations:v43 completion:0.0];
    _Block_release(v43);
    _Block_release(v40);
    aBlock = (void **)_swiftEmptyArrayStorage;
    sub_1000085FC(0, &qword_100203C18);
    id v44 = [self sharedLight];
    NSString v45 = (void *)static UIVisualEffect.intelligenceContentLight(source:activationDirection:deactivationDirection:)();

    id v46 = v45;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)(((unint64_t)aBlock & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)aBlock & 0xFFFFFFFFFFFFFF8)
                                                                                           + 0x18) >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();

    Class v47 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v11 setBackgroundEffects:v47];

    uint64_t v48 = swift_allocObject();
    *(void *)(v48 + 16) = v11;
    *(void *)(v48 + 24) = v58;
    uint64_t v63 = sub_100121438;
    uint64_t v64 = (void *)v48;
    aBlock = _NSConcreteStackBlock;
    uint64_t v60 = 1107296256;
    id v61 = sub_100048B2C;
    Class v62 = &unk_1001EF268;
    id v49 = _Block_copy(&aBlock);
    id v50 = v11;
    swift_release();
    uint64_t v51 = swift_allocObject();
    *(void *)(v51 + 16) = v50;
    *(void *)(v51 + 24) = v56;
    uint64_t v63 = sub_100121494;
    uint64_t v64 = (void *)v51;
    aBlock = _NSConcreteStackBlock;
    uint64_t v60 = 1107296256;
    id v61 = sub_1001205BC;
    Class v62 = &unk_1001EF2B8;
    id v52 = _Block_copy(&aBlock);
    id v53 = v50;
    swift_retain();
    swift_release();
    [v38 animateWithDuration:v49 animations:v52 completion:1.0];
    _Block_release(v52);
    _Block_release(v49);
  }
}

void sub_100120164(char a1, void *a2, uint64_t a3, uint64_t a4)
{
  if (a1)
  {
    id v7 = self;
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = a2;
    *(void *)(v8 + 24) = a4;
    id v18 = sub_10012149C;
    id v19 = (void *)v8;
    id v14 = _NSConcreteStackBlock;
    uint64_t v15 = 1107296256;
    id v16 = sub_100048B2C;
    id v17 = &unk_1001EF308;
    id v9 = _Block_copy(&v14);
    id v10 = a2;
    swift_release();
    id v11 = (void *)swift_allocObject();
    void v11[2] = a3;
    v11[3] = v10;
    v11[4] = a4;
    id v18 = sub_1001214E4;
    id v19 = v11;
    id v14 = _NSConcreteStackBlock;
    uint64_t v15 = 1107296256;
    id v16 = sub_1001205BC;
    id v17 = &unk_1001EF358;
    uint64_t v12 = _Block_copy(&v14);
    id v13 = v10;
    swift_retain();
    swift_release();
    [v7 animateWithDuration:v9 animations:v12 completion:0.7];
    _Block_release(v12);
    _Block_release(v9);
  }
}

void sub_100120318(void *a1)
{
  sub_100121224(1, 2, 1);
  sub_1000085FC(0, &qword_100203C18);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [a1 setBackgroundEffects:isa];
}

void sub_1001203AC(char a1, uint64_t a2, void *a3, uint64_t a4)
{
  if (a1)
  {
    *(unsigned char *)(a2 + 80) = 1;
    id v6 = self;
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = a3;
    *(void *)(v7 + 24) = a4;
    v10[4] = sub_1001214F0;
    v10[5] = v7;
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 1107296256;
    v10[2] = sub_100048B2C;
    v10[3] = &unk_1001EF3A8;
    uint64_t v8 = _Block_copy(v10);
    id v9 = a3;
    swift_release();
    [v6 animateWithDuration:v8 animations:3.0];
    _Block_release(v8);
  }
}

void sub_1001204AC(void *a1)
{
  id v2 = [self effectWithStyle:10];
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  sub_1000085FC(0, &qword_100203C18);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [a1 setBackgroundEffects:isa];
}

uint64_t sub_1001205BC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);

  return swift_release();
}

void sub_100120610(void *a1)
{
  sub_1000085FC(0, &qword_100203C18);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  [a1 setBackgroundEffects:isa];
}

uint64_t sub_10012068C(int a1, id a2)
{
  return swift_release();
}

void sub_100120734()
{
  uint64_t v1 = v0;
  id v2 = *v0;
  swift_getKeyPath();
  aBlock = v0;
  sub_100040E04();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (void *)Strong;
    id v5 = [objc_allocWithZone((Class)UIVisualEffectView) initWithFrame:CGRectZero.origin.x, CGRectZero.origin.y, CGRectZero.size.width, CGRectZero.size.height];
    [v5 setTranslatesAutoresizingMaskIntoConstraints:0];
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    id v7 = v5;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();

    [v4 addSubview:v7];
    uint64_t v8 = self;
    sub_1000063C0(&qword_1001FAFD0);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_100189610;
    id v10 = [v7 leftAnchor];
    id v11 = [v4 leftAnchor];
    id v12 = [v10 constraintEqualToAnchor:v11 constant:-15.0];

    *(void *)(v9 + 32) = v12;
    id v13 = [v7 rightAnchor];
    id v14 = [v4 rightAnchor];
    id v15 = [v13 constraintEqualToAnchor:v14 constant:15.0];

    *(void *)(v9 + 40) = v15;
    id v16 = [v7 topAnchor];
    id v17 = [v4 topAnchor];
    id v18 = [v16 constraintEqualToAnchor:v17 constant:-15.0];

    *(void *)(v9 + 48) = v18;
    id v19 = [v7 bottomAnchor];
    id v20 = [v4 bottomAnchor];
    id v21 = [v19 constraintEqualToAnchor:v20 constant:15.0];

    *(void *)(v9 + 56) = v21;
    specialized Array._endMutation()();
    sub_1000085FC(0, (unint64_t *)&qword_1001FAFD8);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v8 activateConstraints:isa];

    sub_100121224(1, 0, 1);
    sub_1000085FC(0, &qword_100203C18);
    Class v23 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v7 setBackgroundEffects:v23];

    id v24 = self;
    uint64_t v25 = swift_allocObject();
    *(void *)(v25 + 16) = v7;
    *(void *)(v25 + 24) = v2;
    id v33 = sub_100121614;
    uint64_t v34 = v25;
    aBlock = _NSConcreteStackBlock;
    uint64_t v30 = 1107296256;
    id v31 = sub_100048B2C;
    id v32 = &unk_1001EF150;
    id v26 = _Block_copy(&aBlock);
    id v27 = v7;
    swift_release();
    id v33 = sub_1001213EC;
    uint64_t v34 = (uint64_t)v1;
    aBlock = _NSConcreteStackBlock;
    uint64_t v30 = 1107296256;
    id v31 = sub_1001205BC;
    id v32 = &unk_1001EF178;
    id v28 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    [v24 animateWithDuration:v26 animations:v28 completion:3.0];
    _Block_release(v28);
    _Block_release(v26);
  }
}

uint64_t sub_100120CA4()
{
  *(unsigned char *)(v0 + 84) = 0;
  swift_getKeyPath();
  sub_100040E04();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  *(unsigned char *)(v0 + 82) = *(unsigned char *)(v0 + 81);
  swift_beginAccess();
  unint64_t v1 = *(void *)(v0 + 88);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v3)
    {
LABEL_3:
      swift_getKeyPath();
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      uint64_t result = swift_release();
      if (*(unsigned char *)(v0 + 81) != 1) {
        return result;
      }
    }
  }
  else if (!*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  return sub_10011ECF4(0);
}

id *sub_100120DC8()
{
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();

  swift_bridgeObjectRelease();
  unint64_t v1 = (char *)v0 + OBJC_IVAR____TtC21WritingToolsUIService15CommonUIManager___observationRegistrar;
  uint64_t v2 = type metadata accessor for ObservationRegistrar();
  (*(void (**)(char *, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t sub_100120E6C()
{
  sub_100120DC8();

  return swift_deallocClassInstance();
}

uint64_t sub_100120EC4()
{
  *(void *)(v0 + 16) = 0;
  *(_WORD *)(v0 + 24) = 769;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  *(void *)(v0 + 64) = 0;
  *(void *)(v0 + 72) = 0;
  *(void *)(v0 + 77) = 0;
  *(void *)(v0 + 88) = _swiftEmptyArrayStorage;
  *(void *)(v0 + 96) = 0;
  ObservationRegistrar.init()();
  return v0;
}

uint64_t sub_100120F44()
{
  return type metadata accessor for CommonUIManager();
}

uint64_t type metadata accessor for CommonUIManager()
{
  uint64_t result = qword_100203878;
  if (!qword_100203878) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100120F98()
{
  uint64_t result = type metadata accessor for ObservationRegistrar();
  if (v1 <= 0x3F) {
    return swift_updateClassMetadata2();
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for WTUIRootViewType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100121144);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WTUIRootViewType()
{
  return &type metadata for WTUIRootViewType;
}

unint64_t sub_100121180()
{
  unint64_t result = qword_100203C10;
  if (!qword_100203C10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100203C10);
  }
  return result;
}

void sub_1001211EC()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void **)(v0 + 24);
  int v3 = *(void **)(v1 + 64);
  *(void *)(v1 + 64) = v2;
  id v4 = v2;
}

void *sub_100121224(char a1, uint64_t a2, char a3)
{
  if (a1)
  {
    sub_1000085FC(0, &qword_100203C18);
    id v4 = [self sharedLight];
    uint64_t v5 = (void *)static UIVisualEffect.intelligenceContentLight(source:activationDirection:deactivationDirection:)();

    id v6 = v5;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  if (a3)
  {
    id v7 = [self effectWithStyle:10];
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_10012139C()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001213D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1001213E4()
{
  return swift_release();
}

uint64_t sub_1001213EC(uint64_t result)
{
  if (result) {
    *(unsigned char *)(v1 + 80) = 1;
  }
  return result;
}

uint64_t sub_1001213FC()
{
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_100121424()
{
  return sub_100121448(40);
}

void sub_10012142C(char a1)
{
  sub_100120164(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

void sub_100121438()
{
  sub_100120610(*(void **)(v0 + 16));
}

uint64_t sub_100121440()
{
  return sub_100121448(32);
}

uint64_t sub_100121448(uint64_t a1)
{
  swift_release();

  return _swift_deallocObject(v1, a1, 7);
}

uint64_t sub_100121494(int a1)
{
  return sub_10012068C(a1, *(id *)(v1 + 16));
}

void sub_10012149C()
{
  sub_100120318(*(void **)(v0 + 16));
}

uint64_t sub_1001214A4()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_1001214E4(char a1)
{
  sub_1001203AC(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32));
}

void sub_1001214F0()
{
  sub_1001204AC(*(void **)(v0 + 16));
}

uint64_t sub_100121514()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10012154C()
{
  return sub_10011F654();
}

uint64_t sub_100121568()
{
  return sub_10011F6AC();
}

uint64_t sub_10012159C()
{
  return swift_unknownObjectWeakAssign();
}

void sub_1001215BC()
{
  *(unsigned char *)(*(void *)(v0 + 16) + 25) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_1001215CC()
{
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_1001215F4()
{
  return swift_unknownObjectWeakAssign();
}

void sub_100121688()
{
}

uint64_t *sub_1001216A0(uint64_t *a1, uint64_t *a2, int *a3)
{
  id v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    id v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    id v7 = (void *)a2[1];
    *a1 = *a2;
    a1[1] = (uint64_t)v7;
    a1[2] = a2[2];
    uint64_t v8 = a3[7];
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    id v10 = (uint64_t *)((char *)a2 + v8);
    id v11 = v7;
    sub_1000063C0(&qword_1001FAE68);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = type metadata accessor for DismissAction();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v9, v10, v12);
    }
    else
    {
      *uint64_t v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v14 = a3[8];
    uint64_t v15 = a3[9];
    id v16 = (char *)v4 + v14;
    id v17 = (char *)a2 + v14;
    uint64_t v18 = *(void *)v17;
    LOBYTE(v17) = v17[8];
    *(void *)id v16 = v18;
    v16[8] = (char)v17;
    id v19 = (uint64_t *)((char *)v4 + v15);
    id v20 = (char *)a2 + v15;
    uint64_t v21 = *(uint64_t *)((char *)a2 + v15 + 8);
    *id v19 = *(uint64_t *)((char *)a2 + v15);
    v19[1] = v21;
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v22 = *(int *)(sub_1000063C0(&qword_1001FB438) + 32);
    Class v23 = (char *)v19 + v22;
    id v24 = &v20[v22];
    uint64_t v25 = type metadata accessor for NavigationPath();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
    uint64_t v26 = a3[10];
    uint64_t v27 = a3[11];
    id v28 = (uint64_t *)((char *)v4 + v26);
    id v29 = (uint64_t *)((char *)a2 + v26);
    uint64_t v30 = v29[1];
    *id v28 = *v29;
    v28[1] = v30;
    id v31 = (char *)v4 + v27;
    id v32 = (char *)a2 + v27;
    char *v31 = *v32;
    *((void *)v31 + 1) = *((void *)v32 + 1);
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_1001218A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  sub_1000063C0(&qword_1001FAE68);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for DismissAction();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  swift_release();
  uint64_t v6 = a1 + *(int *)(a2 + 36);
  swift_release();
  swift_release();
  uint64_t v7 = v6 + *(int *)(sub_1000063C0(&qword_1001FB438) + 32);
  uint64_t v8 = type metadata accessor for NavigationPath();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  swift_release();
  swift_release();

  return swift_release();
}

void *sub_1001219EC(void *a1, void *a2, int *a3)
{
  uint64_t v6 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  uint64_t v7 = a3[7];
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  id v10 = v6;
  sub_1000063C0(&qword_1001FAE68);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = type metadata accessor for DismissAction();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v8, v9, v11);
  }
  else
  {
    *uint64_t v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v12 = a3[8];
  uint64_t v13 = a3[9];
  uint64_t v14 = (char *)a1 + v12;
  uint64_t v15 = (char *)a2 + v12;
  uint64_t v16 = *(void *)v15;
  LOBYTE(v15) = v15[8];
  *(void *)uint64_t v14 = v16;
  v14[8] = (char)v15;
  id v17 = (void *)((char *)a1 + v13);
  uint64_t v18 = (char *)a2 + v13;
  uint64_t v19 = *(void *)((char *)a2 + v13 + 8);
  *id v17 = *(void *)((char *)a2 + v13);
  v17[1] = v19;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v20 = *(int *)(sub_1000063C0(&qword_1001FB438) + 32);
  uint64_t v21 = (char *)v17 + v20;
  uint64_t v22 = &v18[v20];
  uint64_t v23 = type metadata accessor for NavigationPath();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
  uint64_t v24 = a3[10];
  uint64_t v25 = a3[11];
  uint64_t v26 = (void *)((char *)a1 + v24);
  uint64_t v27 = (void *)((char *)a2 + v24);
  uint64_t v28 = v27[1];
  *uint64_t v26 = *v27;
  v26[1] = v28;
  id v29 = (char *)a1 + v25;
  uint64_t v30 = (char *)a2 + v25;
  *id v29 = *v30;
  *((void *)v29 + 1) = *((void *)v30 + 1);
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *sub_100121BA8(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = (void *)a1[1];
  uint64_t v7 = (void *)a2[1];
  a1[1] = v7;
  id v8 = v7;

  a1[2] = a2[2];
  if (a1 != a2)
  {
    uint64_t v9 = a3[7];
    id v10 = (void *)((char *)a1 + v9);
    uint64_t v11 = (void *)((char *)a2 + v9);
    sub_10002784C((uint64_t)a1 + v9, &qword_1001FAE68);
    sub_1000063C0(&qword_1001FAE68);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = type metadata accessor for DismissAction();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *id v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v13 = a3[8];
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = *(void *)v15;
  LOBYTE(v15) = v15[8];
  *(void *)uint64_t v14 = v16;
  v14[8] = (char)v15;
  swift_retain();
  swift_release();
  uint64_t v17 = a3[9];
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  *(void *)((char *)a1 + v17) = *(void *)((char *)a2 + v17);
  swift_retain();
  swift_release();
  *((void *)v18 + 1) = *((void *)v19 + 1);
  swift_retain();
  swift_release();
  uint64_t v20 = *(int *)(sub_1000063C0(&qword_1001FB438) + 32);
  uint64_t v21 = &v18[v20];
  uint64_t v22 = &v19[v20];
  uint64_t v23 = type metadata accessor for NavigationPath();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 24))(v21, v22, v23);
  uint64_t v24 = a3[10];
  uint64_t v25 = (char *)a1 + v24;
  uint64_t v26 = (char *)a2 + v24;
  *(void *)((char *)a1 + v24) = *(void *)((char *)a2 + v24);
  swift_retain();
  swift_release();
  *((void *)v25 + 1) = *((void *)v26 + 1);
  swift_retain();
  swift_release();
  uint64_t v27 = a3[11];
  uint64_t v28 = (char *)a1 + v27;
  id v29 = (char *)a2 + v27;
  *uint64_t v28 = *v29;
  *((void *)v28 + 1) = *((void *)v29 + 1);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_100121DD4(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v6 = a3[7];
  uint64_t v7 = (void *)(a1 + v6);
  id v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_1000063C0(&qword_1001FAE68);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for DismissAction();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  uint64_t v11 = a3[8];
  uint64_t v12 = a3[9];
  uint64_t v13 = a1 + v11;
  uint64_t v14 = a2 + v11;
  *(void *)uint64_t v13 = *(void *)v14;
  *(unsigned char *)(v13 + 8) = *(unsigned char *)(v14 + 8);
  uint64_t v15 = (void *)(a1 + v12);
  uint64_t v16 = a2 + v12;
  uint64_t v17 = *(void *)(a2 + v12);
  uint64_t v18 = *(void *)(a2 + v12 + 8);
  void *v15 = v17;
  v15[1] = v18;
  uint64_t v19 = *(int *)(sub_1000063C0(&qword_1001FB438) + 32);
  uint64_t v20 = (char *)v15 + v19;
  uint64_t v21 = v16 + v19;
  uint64_t v22 = type metadata accessor for NavigationPath();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = a3[11];
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
  *(_OWORD *)(a1 + v23) = *(_OWORD *)(a2 + v23);
  return a1;
}

void *sub_100121F54(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = (void *)a1[1];
  a1[1] = a2[1];

  a1[2] = a2[2];
  if (a1 != a2)
  {
    uint64_t v7 = a3[7];
    id v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    sub_10002784C((uint64_t)a1 + v7, &qword_1001FAE68);
    uint64_t v10 = sub_1000063C0(&qword_1001FAE68);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = type metadata accessor for DismissAction();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
    }
  }
  uint64_t v12 = a3[8];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = *(void *)v14;
  LOBYTE(v14) = v14[8];
  *(void *)uint64_t v13 = v15;
  v13[8] = (char)v14;
  swift_release();
  uint64_t v16 = a3[9];
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  *(void *)((char *)a1 + v16) = *(void *)((char *)a2 + v16);
  swift_release();
  *((void *)v17 + 1) = *((void *)v18 + 1);
  swift_release();
  uint64_t v19 = *(int *)(sub_1000063C0(&qword_1001FB438) + 32);
  uint64_t v20 = &v17[v19];
  uint64_t v21 = &v18[v19];
  uint64_t v22 = type metadata accessor for NavigationPath();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  uint64_t v23 = a3[10];
  uint64_t v24 = (char *)a1 + v23;
  uint64_t v25 = (char *)a2 + v23;
  *(void *)((char *)a1 + v23) = *(void *)((char *)a2 + v23);
  swift_release();
  *((void *)v24 + 1) = *((void *)v25 + 1);
  swift_release();
  uint64_t v26 = a3[11];
  uint64_t v27 = (char *)a1 + v26;
  uint64_t v28 = (char *)a2 + v26;
  *uint64_t v27 = *v28;
  *((void *)v27 + 1) = *((void *)v28 + 1);
  swift_release();
  return a1;
}

uint64_t sub_10012215C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100122170);
}

uint64_t sub_100122170(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000063C0(&qword_100200850);
  if (*(_DWORD *)(*(void *)(v6 - 8) + 84) == a2)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)(v6 - 8);
    uint64_t v9 = a3[7];
LABEL_5:
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    return v11(a1 + v9, a2, v7);
  }
  uint64_t v10 = sub_1000063C0(&qword_1001FB438);
  if (*(_DWORD *)(*(void *)(v10 - 8) + 84) == a2)
  {
    uint64_t v7 = v10;
    uint64_t v8 = *(void *)(v10 - 8);
    uint64_t v9 = a3[9];
    goto LABEL_5;
  }
  unint64_t v13 = *(void *)(a1 + a3[10]);
  if (v13 >= 0xFFFFFFFF) {
    LODWORD(v13) = -1;
  }
  return (v13 + 1);
}

uint64_t sub_100122288(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10012229C);
}

uint64_t sub_10012229C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_1000063C0(&qword_100200850);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[7];
  }
  else
  {
    uint64_t result = sub_1000063C0(&qword_1001FB438);
    if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
    {
      *(void *)(a1 + a4[10]) = (a2 - 1);
      return result;
    }
    uint64_t v9 = result;
    uint64_t v10 = *(void *)(result - 8);
    uint64_t v11 = a4[9];
  }
  unint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);

  return v13(a1 + v11, a2, a2, v9);
}

uint64_t type metadata accessor for QuestionnaireView(uint64_t a1)
{
  return sub_10005AFA8(a1, qword_100203C78);
}

void sub_1001223D0()
{
  sub_10012AC7C(319, (unint64_t *)&unk_1002008C0, (uint64_t (*)(uint64_t))&type metadata accessor for DismissAction, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v0 <= 0x3F)
  {
    sub_10012AC7C(319, (unint64_t *)&qword_100201800, (uint64_t (*)(uint64_t))&type metadata accessor for NavigationPath, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Binding);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_100122530()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10012254C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  *a5 = 0x4024000000000000;
  a5[2] = 5;
  uint64_t v10 = (int *)type metadata accessor for QuestionnaireView(0);
  uint64_t v11 = (void *)((char *)a5 + v10[7]);
  *uint64_t v11 = swift_getKeyPath();
  sub_1000063C0(&qword_1001FAE68);
  swift_storeEnumTagMultiPayload();
  uint64_t v12 = (char *)a5 + v10[8];
  type metadata accessor for CommonUIManager();
  sub_10012B308((unint64_t *)&qword_1001FAE20, (void (*)(uint64_t))type metadata accessor for CommonUIManager);
  *(void *)uint64_t v12 = Environment.init<A>(_:)();
  v12[8] = v13 & 1;
  uint64_t v14 = (char *)a5 + v10[11];
  State.init(wrappedValue:)();
  uint64_t v15 = v32;
  char *v14 = v31;
  *((void *)v14 + 1) = v15;
  if (qword_1001FAC38 != -1) {
    swift_once();
  }
  uint64_t v16 = type metadata accessor for Logger();
  sub_10000EBE8(v16, (uint64_t)qword_1002127A0);
  os_log_type_t v17 = static os_log_type_t.debug.getter();
  swift_unknownObjectRetain_n();
  uint64_t v18 = Logger.logObject.getter();
  if (os_log_type_enabled(v18, v17))
  {
    uint64_t v30 = a2;
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    *(_DWORD *)uint64_t v19 = 136315138;
    uint64_t v31 = v29;
    if (a1) {
      uint64_t v20 = 7562617;
    }
    else {
      uint64_t v20 = 28526;
    }
    if (a1) {
      unint64_t v21 = 0xE300000000000000;
    }
    else {
      unint64_t v21 = 0xE200000000000000;
    }
    sub_100021444(v20, v21, &v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_unknownObjectRelease_n();
    a2 = v30;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v18, v17, "Initialize QuestionnaireView with delegate: %s", v19, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_unknownObjectRelease_n();
  }
  a5[1] = a2;
  type metadata accessor for QuestionnaireModel();
  swift_allocObject();
  id v22 = a2;
  swift_unknownObjectRetain();
  id v23 = v22;
  id v24 = a3;
  sub_100046500(v23, a1, v24);
  uint64_t v25 = (void *)((char *)a5 + v10[10]);
  State.init(wrappedValue:)();

  uint64_t v26 = v31;
  uint64_t v27 = v32;
  swift_unknownObjectRelease();

  *uint64_t v25 = v26;
  v25[1] = v27;
  return sub_100026FD0(a4, (uint64_t)a5 + v10[9], &qword_1001FB438);
}

uint64_t sub_1001228D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100122924(a1, a2, a3);
}

uint64_t sub_1001228FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100122924(a1, a2, a3);
}

uint64_t sub_100122924(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TaskPriority();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_10002784C(a1, &qword_1001FF820);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_100122AC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TaskPriority();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_10002784C(a1, &qword_1001FF820);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  sub_1000063C0(&qword_1001FF248);
  return swift_task_create();
}

uint64_t sub_100122C7C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_10012B308((unint64_t *)&qword_1001FD2A0, (void (*)(uint64_t))type metadata accessor for ToolModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  *a2 = *(void *)(v3 + 112);
  return result;
}

uint64_t sub_100122D24()
{
  return swift_release();
}

uint64_t sub_100122DF0@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_10012B308((unint64_t *)&unk_1001FD2C0, (void (*)(uint64_t))type metadata accessor for QuestionnaireModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  *a2 = *(void *)(v3 + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel__entries);
  return swift_bridgeObjectRetain();
}

uint64_t sub_100122EA4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_100122F84@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_10012B308((unint64_t *)&unk_1001FD2C0, (void (*)(uint64_t))type metadata accessor for QuestionnaireModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel__hasEntries);
  return result;
}

uint64_t sub_100123034()
{
  return swift_release();
}

id sub_100123104@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_100123208(a1, &OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel__inputContextHistory, a2);
}

void sub_100123118(void **a1)
{
  unint64_t v1 = *a1;
  swift_getKeyPath();
  sub_10012B308((unint64_t *)&unk_1001FD2C0, (void (*)(uint64_t))type metadata accessor for QuestionnaireModel);
  id v2 = v1;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
}

id sub_1001231F4@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_100123208(a1, &OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel__smartReplyConfiguration, a2);
}

id sub_100123208@<X0>(uint64_t *a1@<X0>, void *a2@<X4>, void *a3@<X8>)
{
  uint64_t v5 = *a1;
  swift_getKeyPath();
  sub_10012B308((unint64_t *)&unk_1001FD2C0, (void (*)(uint64_t))type metadata accessor for QuestionnaireModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v6 = *(void **)(v5 + *a2);
  *a3 = v6;

  return v6;
}

void sub_1001232CC(void **a1)
{
  unint64_t v1 = *a1;
  swift_getKeyPath();
  sub_10012B308((unint64_t *)&unk_1001FD2C0, (void (*)(uint64_t))type metadata accessor for QuestionnaireModel);
  id v2 = v1;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
}

uint64_t sub_1001233A8@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_10012B308((unint64_t *)&unk_1001FD2C0, (void (*)(uint64_t))type metadata accessor for QuestionnaireModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  *a2 = *(void *)(v3 + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel__generationPendingContentWarning);
  return swift_retain();
}

uint64_t sub_10012345C()
{
  return swift_release();
}

uint64_t sub_10012353C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = 0x4024000000000000;
  a3[2] = 5;
  uint64_t v6 = (int *)type metadata accessor for QuestionnaireView(0);
  uint64_t v7 = (void *)((char *)a3 + v6[7]);
  uint64_t *v7 = swift_getKeyPath();
  sub_1000063C0(&qword_1001FAE68);
  swift_storeEnumTagMultiPayload();
  uint64_t v8 = (char *)a3 + v6[8];
  type metadata accessor for CommonUIManager();
  sub_10012B308((unint64_t *)&qword_1001FAE20, (void (*)(uint64_t))type metadata accessor for CommonUIManager);
  *(void *)uint64_t v8 = Environment.init<A>(_:)();
  v8[8] = v9 & 1;
  uint64_t v10 = (char *)a3 + v6[11];
  State.init(wrappedValue:)();
  *uint64_t v10 = v19;
  *((void *)v10 + 1) = v20;
  if (qword_1001FAC38 != -1) {
    swift_once();
  }
  uint64_t v11 = type metadata accessor for Logger();
  sub_10000EBE8(v11, (uint64_t)qword_1002127A0);
  os_log_type_t v12 = static os_log_type_t.debug.getter();
  char v13 = Logger.logObject.getter();
  if (os_log_type_enabled(v13, v12))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v14 = 0;
    _os_log_impl((void *)&_mh_execute_header, v13, v12, "Initialize QuestionnaireOnlyView", v14, 2u);
    swift_slowDealloc();
  }

  swift_getKeyPath();
  sub_10012B308((unint64_t *)&unk_1001FD2C0, (void (*)(uint64_t))type metadata accessor for QuestionnaireModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v15 = *(void **)(a1 + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel__smartReplyConfiguration);
  a3[1] = v15;
  uint64_t v16 = (void *)((char *)a3 + v6[10]);
  type metadata accessor for QuestionnaireModel();
  id v17 = v15;
  State.init(wrappedValue:)();
  *uint64_t v16 = a1;
  v16[1] = v20;
  return sub_100026FD0(a2, (uint64_t)a3 + v6[9], &qword_1001FB438);
}

uint64_t sub_1001237E4()
{
  uint64_t result = LocalizedStringKey.init(stringLiteral:)();
  qword_100212A30 = result;
  *(void *)algn_100212A38 = v1;
  byte_100212A40 = v2 & 1;
  qword_100212A48 = v3;
  return result;
}

uint64_t sub_100123830()
{
  uint64_t result = LocalizedStringKey.init(stringLiteral:)();
  qword_100212A50 = result;
  *(void *)algn_100212A58 = v1;
  byte_100212A60 = v2 & 1;
  qword_100212A68 = v3;
  return result;
}

uint64_t sub_10012387C()
{
  uint64_t result = LocalizedStringKey.init(stringLiteral:)();
  qword_100212A70 = result;
  *(void *)algn_100212A78 = v1;
  byte_100212A80 = v2 & 1;
  qword_100212A88 = v3;
  return result;
}

uint64_t sub_1001238B8()
{
  uint64_t result = LocalizedStringKey.init(stringLiteral:)();
  qword_100212A90 = result;
  *(void *)algn_100212A98 = v1;
  byte_100212AA0 = v2 & 1;
  qword_100212AA8 = v3;
  return result;
}

uint64_t sub_1001238F8()
{
  uint64_t result = LocalizedStringKey.init(stringLiteral:)();
  qword_100212AB0 = result;
  *(void *)algn_100212AB8 = v1;
  byte_100212AC0 = v2 & 1;
  qword_100212AC8 = v3;
  return result;
}

uint64_t sub_100123938@<X0>(uint64_t a1@<X8>)
{
  uint64_t v25 = a1;
  uint64_t v26 = type metadata accessor for CustomRow(0);
  __chkstk_darwin(v26);
  char v2 = (char *)&v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for PickerRow(0);
  __chkstk_darwin(v21);
  uint64_t v20 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1000063C0(&qword_100203F90);
  __chkstk_darwin(v22);
  uint64_t v24 = (uint64_t)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000063C0(&qword_100203F98);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_1000063C0(&qword_100203FA0);
  __chkstk_darwin(v23);
  char v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for MultichoiceRow(0);
  __chkstk_darwin(v10);
  os_log_type_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for QuestionRow(0);
  sub_1000063C0(&qword_100203EB0);
  Bindable.wrappedValue.getter();
  char v13 = sub_1001627D4();
  swift_release();
  if (v13)
  {
    if (v13 != 1)
    {
      Bindable.wrappedValue.getter();
      type metadata accessor for QuestionnaireEntry();
      sub_10012B308(&qword_1001FD2E8, (void (*)(uint64_t))type metadata accessor for QuestionnaireEntry);
      Bindable<A>.init(wrappedValue:)();
      id v17 = &v2[*(int *)(v26 + 20)];
      char v27 = 0;
      State.init(wrappedValue:)();
      uint64_t v18 = v29;
      *id v17 = v28;
      *((void *)v17 + 1) = v18;
      sub_10012B1C4((uint64_t)v2, v24, type metadata accessor for CustomRow);
      swift_storeEnumTagMultiPayload();
      sub_10012B22C();
      sub_10012B308(&qword_100203FC0, (void (*)(uint64_t))type metadata accessor for CustomRow);
      _ConditionalContent<>.init(storage:)();
      uint64_t v15 = type metadata accessor for CustomRow;
      uint64_t v16 = (uint64_t)v2;
      return sub_100128F64(v16, v15);
    }
    Bindable.wrappedValue.getter();
    type metadata accessor for QuestionnaireEntry();
    sub_10012B308(&qword_1001FD2E8, (void (*)(uint64_t))type metadata accessor for QuestionnaireEntry);
    os_log_type_t v12 = v20;
    Bindable<A>.init(wrappedValue:)();
    sub_10012B1C4((uint64_t)v12, (uint64_t)v7, type metadata accessor for PickerRow);
    swift_storeEnumTagMultiPayload();
    sub_10012B308(&qword_100203FB0, (void (*)(uint64_t))type metadata accessor for MultichoiceRow);
    sub_10012B308(&qword_100203FB8, (void (*)(uint64_t))type metadata accessor for PickerRow);
    _ConditionalContent<>.init(storage:)();
    sub_100008DD4((uint64_t)v9, v24, &qword_100203FA0);
    swift_storeEnumTagMultiPayload();
    sub_10012B22C();
    sub_10012B308(&qword_100203FC0, (void (*)(uint64_t))type metadata accessor for CustomRow);
    _ConditionalContent<>.init(storage:)();
    sub_10002784C((uint64_t)v9, &qword_100203FA0);
    uint64_t v14 = type metadata accessor for PickerRow;
  }
  else
  {
    Bindable.wrappedValue.getter();
    sub_100174F44(v28, (uint64_t)v12);
    sub_10012B1C4((uint64_t)v12, (uint64_t)v7, type metadata accessor for MultichoiceRow);
    swift_storeEnumTagMultiPayload();
    sub_10012B308(&qword_100203FB0, (void (*)(uint64_t))type metadata accessor for MultichoiceRow);
    sub_10012B308(&qword_100203FB8, (void (*)(uint64_t))type metadata accessor for PickerRow);
    _ConditionalContent<>.init(storage:)();
    sub_100008DD4((uint64_t)v9, v24, &qword_100203FA0);
    swift_storeEnumTagMultiPayload();
    sub_10012B22C();
    sub_10012B308(&qword_100203FC0, (void (*)(uint64_t))type metadata accessor for CustomRow);
    _ConditionalContent<>.init(storage:)();
    sub_10002784C((uint64_t)v9, &qword_100203FA0);
    uint64_t v14 = type metadata accessor for MultichoiceRow;
  }
  uint64_t v15 = v14;
  uint64_t v16 = (uint64_t)v12;
  return sub_100128F64(v16, v15);
}

uint64_t sub_100124034@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = static VerticalAlignment.center.getter();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  uint64_t v2 = sub_1000063C0(&qword_100203F88);
  return sub_100123938(a1 + *(int *)(v2 + 44));
}

uint64_t sub_100124080@<X0>(uint64_t a1@<X2>, char *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for QuestionnaireView(0);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  char v9 = (char *)&v23 - v8;
  char v10 = sub_10012438C();
  sub_10012B1C4(a1, (uint64_t)v9, type metadata accessor for QuestionnaireView);
  if (v10)
  {
    sub_100128F64((uint64_t)v9, type metadata accessor for QuestionnaireView);
    sub_10012B1C4(a1, (uint64_t)v7, type metadata accessor for QuestionnaireView);
LABEL_4:
    uint64_t result = sub_100128F64((uint64_t)v7, type metadata accessor for QuestionnaireView);
    goto LABEL_5;
  }
  uint64_t v11 = &v9[*(int *)(v4 + 40)];
  uint64_t v13 = *(void *)v11;
  uint64_t v12 = *((void *)v11 + 1);
  uint64_t v24 = v13;
  uint64_t v25 = v12;
  sub_1000063C0(&qword_100203D08);
  State.wrappedValue.getter();
  uint64_t v14 = v26;
  swift_getKeyPath();
  uint64_t v24 = v14;
  sub_10012B308((unint64_t *)&qword_1001FD2A0, (void (*)(uint64_t))type metadata accessor for ToolModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  char v15 = *(unsigned char *)(v14 + 88);
  swift_release();
  sub_100128F64((uint64_t)v9, type metadata accessor for QuestionnaireView);
  sub_10012B1C4(a1, (uint64_t)v7, type metadata accessor for QuestionnaireView);
  if (v15) {
    goto LABEL_4;
  }
  uint64_t v18 = &v7[*(int *)(v4 + 40)];
  uint64_t v20 = *(void *)v18;
  uint64_t v19 = *((void *)v18 + 1);
  uint64_t v24 = v20;
  uint64_t v25 = v19;
  sub_1000063C0(&qword_100203D08);
  State.wrappedValue.getter();
  uint64_t v21 = v26;
  swift_getKeyPath();
  uint64_t v24 = v21;
  sub_10012B308((unint64_t *)&unk_1001FD2C0, (void (*)(uint64_t))type metadata accessor for QuestionnaireModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v22 = *(void *)(v21 + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel__entries);
  swift_bridgeObjectRetain();
  swift_release();
  uint64_t result = sub_100128F64((uint64_t)v7, type metadata accessor for QuestionnaireView);
  if (v22)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v17 = 1;
    goto LABEL_6;
  }
LABEL_5:
  char v17 = 0;
LABEL_6:
  *a2 = v17;
  return result;
}

uint64_t sub_10012438C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for QuestionnaireView(0);
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (uint64_t *)(v0 + *(int *)(v3 + 40));
  uint64_t v8 = *v6;
  uint64_t v7 = v6[1];
  uint64_t v18 = v8;
  uint64_t v19 = v7;
  sub_1000063C0(&qword_100203D08);
  State.wrappedValue.getter();
  uint64_t v9 = v20;
  swift_getKeyPath();
  uint64_t v18 = v9;
  sub_10012B308((unint64_t *)&unk_1001FD2C0, (void (*)(uint64_t))type metadata accessor for QuestionnaireModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v10 = *(void *)(v9 + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel__generationPendingContentWarning);
  swift_release();
  sub_10012B1C4(v1, (uint64_t)v5, type metadata accessor for QuestionnaireView);
  if (v10)
  {
    uint64_t v11 = &v5[*(int *)(v2 + 40)];
    uint64_t v13 = *(void *)v11;
    uint64_t v12 = *((void *)v11 + 1);
    uint64_t v18 = v13;
    uint64_t v19 = v12;
    State.wrappedValue.getter();
    uint64_t v14 = v20;
    swift_getKeyPath();
    uint64_t v18 = v14;
    sub_10012B308((unint64_t *)&qword_1001FD2A0, (void (*)(uint64_t))type metadata accessor for ToolModel);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v15 = *(void *)(v14 + 112);
    swift_release();
    uint64_t v10 = v15 == 1;
  }
  sub_100128F64((uint64_t)v5, type metadata accessor for QuestionnaireView);
  return v10;
}

uint64_t sub_1001245B0()
{
  if (qword_1001FAC38 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_10000EBE8(v0, (uint64_t)qword_1002127A0);
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Questionnaire done", v3, 2u);
    swift_slowDealloc();
  }

  type metadata accessor for QuestionnaireView(0);
  sub_1000063C0(&qword_100203D08);
  State.wrappedValue.getter();
  sub_100048D04(1, 0, 0, 0);
  return swift_release();
}

uint64_t sub_1001246E4()
{
  if (qword_1001FAC38 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_10000EBE8(v0, (uint64_t)qword_1002127A0);
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Questionnaire cancelled, requesting revert and dismissal...", v3, 2u);
    swift_slowDealloc();
  }

  type metadata accessor for QuestionnaireView(0);
  sub_1000063C0(&qword_100203D08);
  State.wrappedValue.getter();
  sub_100048B70();
  swift_release();
  State.wrappedValue.getter();
  sub_100048D04(0, 0, 0, 0);
  return swift_release();
}

void sub_100124840()
{
  p_weak_ivar_lyt = v0;
  id v2 = [self currentTraitCollection];
  id v3 = [v2 userInterfaceIdiom];

  if (v3 != (id)1) {
    goto LABEL_33;
  }
  type metadata accessor for QuestionnaireView(0);
  sub_1000063C0(&qword_100203D08);
  State.wrappedValue.getter();
  swift_getKeyPath();
  sub_10012B308((unint64_t *)&unk_1001FD2C0, (void (*)(uint64_t))type metadata accessor for QuestionnaireModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  unint64_t v4 = *(void *)(v33 + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel__entries);
  swift_bridgeObjectRetain();
  swift_release();
  if (!v4) {
    goto LABEL_33;
  }
  if (v4 >> 62) {
    goto LABEL_29;
  }
  uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v5)
  {
LABEL_32:
    swift_bridgeObjectRelease();
LABEL_33:
    if (qword_1001FAC38 != -1) {
      swift_once();
    }
    uint64_t v28 = type metadata accessor for Logger();
    sub_10000EBE8(v28, (uint64_t)qword_1002127A0);
    uint64_t v29 = Logger.logObject.getter();
    os_log_type_t v30 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v31 = 0;
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "Skipping height for entry pickers due to no entries or not a pad idiom", v31, 2u);
      swift_slowDealloc();
    }

    return;
  }
  while (1)
  {
    uint64_t v32 = p_weak_ivar_lyt;
    sub_1001291A8(0, v5 & ~(v5 >> 63), 0);
    if (v5 < 0) {
      break;
    }
    uint64_t v6 = 0;
    p_weak_ivar_lyt = &SlotAttachmentView.weak_ivar_lyt;
    while (v5 != v6)
    {
      if ((v4 & 0xC000000000000001) != 0)
      {
        uint64_t v7 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v7 = *(void *)(v4 + 8 * v6 + 32);
        swift_retain();
      }
      id v8 = [*(id *)(v7 + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireEntry_entry) answerOptions:v32];
      if (!v8) {
        goto LABEL_39;
      }
      uint64_t v9 = v8;
      id v10 = [v8 count];
      swift_release();

      unint64_t v12 = _swiftEmptyArrayStorage[2];
      unint64_t v11 = _swiftEmptyArrayStorage[3];
      if (v12 >= v11 >> 1) {
        sub_1001291A8(v11 > 1, v12 + 1, 1);
      }
      ++v6;
      _swiftEmptyArrayStorage[2] = v12 + 1;
      _swiftEmptyArrayStorage[v12 + 4] = v10;
      if (v5 == v6) {
        goto LABEL_15;
      }
    }
    __break(1u);
LABEL_29:
    swift_bridgeObjectRetain();
    uint64_t v27 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v27) {
      goto LABEL_32;
    }
    swift_bridgeObjectRetain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v5)
    {
LABEL_15:
      swift_bridgeObjectRelease();
      unint64_t v13 = _swiftEmptyArrayStorage[2];
      if (v13)
      {
        int64_t v14 = _swiftEmptyArrayStorage[4];
        unint64_t v15 = v13 - 1;
        if (v13 != 1)
        {
          if (v13 >= 5)
          {
            unint64_t v16 = v15 & 0xFFFFFFFFFFFFFFFCLL | 1;
            int64x2_t v17 = vdupq_n_s64(v14);
            uint64_t v18 = (int64x2_t *)&_swiftEmptyArrayStorage[7];
            unint64_t v19 = v15 & 0xFFFFFFFFFFFFFFFCLL;
            int64x2_t v20 = v17;
            do
            {
              int64x2_t v17 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64(v17, v18[-1]), (int8x16_t)v17, (int8x16_t)v18[-1]);
              int64x2_t v20 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64(v20, *v18), (int8x16_t)v20, *(int8x16_t *)v18);
              v18 += 2;
              v19 -= 4;
            }
            while (v19);
            int8x16_t v21 = vbslq_s8((int8x16_t)vcgtq_s64(v17, v20), (int8x16_t)v17, (int8x16_t)v20);
            uint64_t v22 = vextq_s8(v21, v21, 8uLL).u64[0];
            int64_t v14 = (int64_t)vbsl_s8((int8x8_t)vcgtd_s64(v21.i64[0], v22), *(int8x8_t *)v21.i8, (int8x8_t)v22);
            if (v15 != (v15 & 0xFFFFFFFFFFFFFFFCLL)) {
              goto LABEL_23;
            }
          }
          else
          {
            unint64_t v16 = 1;
LABEL_23:
            unint64_t v23 = v13 - v16;
            uint64_t v24 = &_swiftEmptyArrayStorage[v16 + 4];
            do
            {
              int64_t v26 = *v24++;
              int64_t v25 = v26;
              if (v14 <= v26) {
                int64_t v14 = v25;
              }
              --v23;
            }
            while (v23);
          }
        }
      }
      swift_bridgeObjectRelease();
      return;
    }
  }
  __break(1u);
LABEL_39:
  __break(1u);
}

uint64_t sub_100124CAC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v61 = a1;
  uint64_t v60 = sub_1000063C0(&qword_1001FB438);
  __chkstk_darwin(v60);
  NSString v59 = (char *)&v46 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for NavigationBarItem.TitleDisplayMode();
  uint64_t v55 = *(void *)(v3 - 8);
  uint64_t v56 = v3;
  __chkstk_darwin(v3);
  id v54 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for QuestionnaireView(0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v52 = v5 - 8;
  uint64_t v62 = *(void *)(v6 + 64);
  __chkstk_darwin(v5 - 8);
  id v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000063C0(&qword_100203CC8);
  __chkstk_darwin(v9 - 8);
  unint64_t v11 = (uint64_t *)((char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v49 = sub_1000063C0(&qword_100203CD0);
  __chkstk_darwin(v49);
  unint64_t v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_1000063C0(&qword_100203CD8);
  uint64_t v14 = *(void *)(v53 - 8);
  __chkstk_darwin(v53);
  unint64_t v16 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1000063C0(&qword_100203CE0);
  __chkstk_darwin(v17 - 8);
  uint64_t v48 = (char *)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = sub_1000063C0(&qword_100203CE8) - 8;
  __chkstk_darwin(v58);
  uint64_t v57 = (char *)&v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  *unint64_t v11 = static Alignment.center.getter();
  v11[1] = v20;
  uint64_t v21 = sub_1000063C0(&qword_100203CF0);
  sub_10012531C(v1, (uint64_t)v11 + *(int *)(v21 + 44));
  id v50 = type metadata accessor for QuestionnaireView;
  Class v47 = v8;
  sub_10012B1C4(v1, (uint64_t)v8, type metadata accessor for QuestionnaireView);
  uint64_t v22 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v51 = v22 | 7;
  uint64_t v23 = swift_allocObject();
  sub_1001284A0((uint64_t)v8, v23 + ((v22 + 16) & ~v22));
  sub_100008DD4((uint64_t)v11, (uint64_t)v13, &qword_100203CC8);
  uint64_t v24 = (uint64_t (**)())&v13[*(int *)(v49 + 36)];
  *uint64_t v24 = sub_100128504;
  v24[1] = (uint64_t (*)())v23;
  void v24[2] = 0;
  v24[3] = 0;
  sub_10002784C((uint64_t)v11, &qword_100203CC8);
  int64_t v26 = v54;
  uint64_t v25 = v55;
  uint64_t v27 = v56;
  (*(void (**)(char *, void, uint64_t))(v55 + 104))(v54, enum case for NavigationBarItem.TitleDisplayMode.inline(_:), v56);
  sub_10012851C();
  View.navigationBarTitleDisplayMode(_:)();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v26, v27);
  sub_10002784C((uint64_t)v13, &qword_100203CD0);
  uint64_t v28 = (uint64_t)v48;
  uint64_t v29 = v53;
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v48, v16, v53);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v29);
  os_log_type_t v30 = (uint64_t *)(v1 + *(int *)(v52 + 48));
  uint64_t v32 = *v30;
  uint64_t v31 = v30[1];
  uint64_t v63 = v32;
  uint64_t v64 = v31;
  sub_1000063C0(&qword_100203D08);
  State.wrappedValue.getter();
  swift_unknownObjectWeakLoadStrong();
  swift_release();
  uint64_t v33 = (uint64_t)v59;
  Binding.projectedValue.getter();
  uint64_t v34 = (uint64_t)v47;
  sub_10012B1C4(v1, (uint64_t)v47, v50);
  type metadata accessor for MainActor();
  uint64_t v35 = static MainActor.shared.getter();
  uint64_t v36 = swift_allocObject();
  *(void *)(v36 + 16) = v35;
  *(void *)(v36 + 24) = &protocol witness table for MainActor;
  sub_1001284A0(v34, v36 + ((v22 + 32) & ~v22));
  uint64_t v37 = static MainActor.shared.getter();
  uint64_t v38 = swift_allocObject();
  *(void *)(v38 + 16) = v37;
  *(void *)(v38 + 24) = &protocol witness table for MainActor;
  Binding.init(get:set:)();
  uint64_t v39 = (uint64_t)v57;
  sub_1000EF1D8(1, 0, v33, v63, v64, v65, (uint64_t)&v57[*(int *)(v58 + 44)]);
  sub_100026FD0(v28, v39, &qword_100203CE0);
  uint64_t v40 = static Alignment.center.getter();
  uint64_t v42 = v41;
  uint64_t v43 = v61;
  sub_100008DD4(v39, v61, &qword_100203CE8);
  uint64_t v44 = v43 + *(int *)(sub_1000063C0(&qword_100203D10) + 36);
  *(_WORD *)uint64_t v44 = 1;
  *(void *)(v44 + 8) = v40;
  *(void *)(v44 + 16) = v42;
  return sub_10002784C(v39, &qword_100203CE8);
}

uint64_t sub_10012531C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v59 = a2;
  uint64_t v3 = sub_1000063C0(&qword_1001FB720);
  uint64_t v52 = *(void *)(v3 - 8);
  uint64_t v53 = v3;
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000063C0(&qword_1001FB728);
  __chkstk_darwin(v6 - 8);
  uint64_t v51 = (uint64_t)v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000063C0(&qword_100203D38);
  __chkstk_darwin(v8);
  uint64_t v10 = (void *)((char *)v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = sub_1000063C0(&qword_100203D40);
  uint64_t v56 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v55 = (char *)v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000063C0(&qword_100203D48);
  uint64_t v58 = *(void *)(v13 - 8);
  uint64_t v14 = __chkstk_darwin(v13);
  id v54 = (char *)v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v57 = (char *)v47 - v16;
  uint64_t v17 = sub_1000063C0(&qword_100203D50);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1000063C0(&qword_100203D58);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)v47 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = a1;
  if (sub_10012438C())
  {
    *(void *)uint64_t v22 = static HorizontalAlignment.center.getter();
    *((void *)v22 + 1) = 0;
    v22[16] = 1;
    uint64_t v23 = sub_1000063C0(&qword_100203DA8);
    sub_100125B50(v60, (uint64_t)&v22[*(int *)(v23 + 44)]);
    sub_100008DD4((uint64_t)v22, (uint64_t)v19, &qword_100203D58);
    swift_storeEnumTagMultiPayload();
    sub_100027F2C(&qword_100203DA0, &qword_100203D58);
    uint64_t v24 = sub_100006C14(&qword_100203D90);
    uint64_t v25 = sub_100027F2C(&qword_100203D88, &qword_100203D38);
    uint64_t v61 = v8;
    uint64_t v62 = v25;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    uint64_t v27 = sub_100027F2C(&qword_100203D98, &qword_100203D90);
    uint64_t v61 = v11;
    uint64_t v62 = v24;
    uint64_t v63 = OpaqueTypeConformance2;
    uint64_t v64 = v27;
    swift_getOpaqueTypeConformance2();
    _ConditionalContent<>.init(storage:)();
    return sub_10002784C((uint64_t)v22, &qword_100203D58);
  }
  else
  {
    v47[1] = v17;
    uint64_t v48 = v19;
    uint64_t v49 = v20;
    uint64_t v50 = v13;
    v47[0] = v11;
    *uint64_t v10 = static Alignment.center.getter();
    v10[1] = v29;
    uint64_t v30 = sub_1000063C0(&qword_100203D60);
    uint64_t v31 = (uint64_t)v10 + *(int *)(v30 + 44);
    __chkstk_darwin(v30);
    static Axis.Set.vertical.getter();
    sub_1000063C0(&qword_100203D68);
    sub_100128C4C();
    ScrollView.init(_:showsIndicators:content:)();
    uint64_t v32 = static Alignment.center.getter();
    uint64_t v33 = v51;
    double v35 = sub_10001A0E8(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, v51, 0.0, 1, 440.0, 0, v32, v34);
    (*(void (**)(char *, uint64_t, double))(v52 + 8))(v5, v53, v35);
    sub_100026FD0(v33, v31, &qword_1001FB728);
    if (qword_1001FAD78 != -1) {
      swift_once();
    }
    uint64_t v36 = sub_100027F2C(&qword_100203D88, &qword_100203D38);
    uint64_t v37 = v55;
    View.navigationTitle(_:)();
    uint64_t v38 = sub_10002784C((uint64_t)v10, &qword_100203D38);
    __chkstk_darwin(v38);
    uint64_t v39 = sub_1000063C0(&qword_100203D90);
    uint64_t v61 = v8;
    uint64_t v62 = v36;
    uint64_t v40 = swift_getOpaqueTypeConformance2();
    uint64_t v41 = sub_100027F2C(&qword_100203D98, &qword_100203D90);
    uint64_t v42 = v54;
    uint64_t v43 = v47[0];
    View.toolbar<A>(content:)();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v37, v43);
    NSString v45 = v57;
    uint64_t v44 = v58;
    uint64_t v46 = v50;
    (*(void (**)(char *, char *, uint64_t))(v58 + 32))(v57, v42, v50);
    (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v48, v45, v46);
    swift_storeEnumTagMultiPayload();
    sub_100027F2C(&qword_100203DA0, &qword_100203D58);
    uint64_t v61 = v43;
    uint64_t v62 = v39;
    uint64_t v63 = v40;
    uint64_t v64 = v41;
    swift_getOpaqueTypeConformance2();
    _ConditionalContent<>.init(storage:)();
    return (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v45, v46);
  }
}

uint64_t sub_100125B50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v41 = a2;
  uint64_t v3 = type metadata accessor for QuestionnaireView(0);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = __chkstk_darwin(v3 - 8);
  uint64_t v38 = (uint64_t)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v36 - v7;
  uint64_t v9 = type metadata accessor for LocalizedStringResource();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = type metadata accessor for QuestionnaireSafetyUI(0);
  __chkstk_darwin(v39);
  uint64_t v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1000063C0(&qword_1001FB718);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  uint64_t v18 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v40 = (uint64_t)&v36 - v19;
  if (qword_1001FAE08 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_10000EBE8(v9, (uint64_t)qword_100212BE8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v20, v9);
  sub_10012B1C4(a1, (uint64_t)v8, type metadata accessor for QuestionnaireView);
  uint64_t v21 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v36 = v12;
  uint64_t v37 = v9;
  uint64_t v22 = a1;
  uint64_t v23 = (v21 + 16) & ~v21;
  uint64_t v24 = swift_allocObject();
  sub_1001284A0((uint64_t)v8, v24 + v23);
  uint64_t v25 = v38;
  sub_10012B1C4(v22, v38, type metadata accessor for QuestionnaireView);
  uint64_t v26 = swift_allocObject();
  sub_1001284A0(v25, v26 + v23);
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v14, v36, v37);
  uint64_t v27 = v39;
  uint64_t v28 = (uint64_t (**)())&v14[*(int *)(v39 + 20)];
  *uint64_t v28 = sub_100128EBC;
  v28[1] = (uint64_t (*)())v24;
  uint64_t v29 = (uint64_t (**)())&v14[*(int *)(v27 + 24)];
  *uint64_t v29 = sub_100128F4C;
  v29[1] = (uint64_t (*)())v26;
  uint64_t v30 = static Alignment.center.getter();
  sub_10001A070(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v18, 0.0, 1, 0.0, 1, v30, v31);
  sub_100128F64((uint64_t)v14, type metadata accessor for QuestionnaireSafetyUI);
  uint64_t v32 = v40;
  sub_100026FD0((uint64_t)v18, v40, &qword_1001FB718);
  sub_100008DD4(v32, (uint64_t)v18, &qword_1001FB718);
  uint64_t v33 = v41;
  sub_100008DD4((uint64_t)v18, v41, &qword_1001FB718);
  uint64_t v34 = v33 + *(int *)(sub_1000063C0(&qword_100203DB0) + 48);
  *(void *)uint64_t v34 = 0;
  *(unsigned char *)(v34 + 8) = 1;
  sub_10002784C(v32, &qword_1001FB718);
  return sub_10002784C((uint64_t)v18, &qword_1001FB718);
}

uint64_t sub_100125F90()
{
  return swift_release();
}

uint64_t sub_100125FFC()
{
  type metadata accessor for QuestionnaireView(0);
  sub_1000063C0(&qword_100203D08);
  State.wrappedValue.getter();
  if (qword_1001FAC38 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_10000EBE8(v0, (uint64_t)qword_1002127A0);
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Ending session due to content warning cancel", v3, 2u);
    swift_slowDealloc();
  }

  sub_100048D04(0, 0, 0, 0);
  return swift_release();
}

uint64_t sub_100126134@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000063C0(&qword_100203D80);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000063C0(&qword_100203D68);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v6 = static HorizontalAlignment.center.getter();
  *((void *)v6 + 1) = 0;
  v6[16] = 1;
  uint64_t v10 = sub_1000063C0(&qword_100203DD8);
  sub_100126350(a1, (uint64_t)&v6[*(int *)(v10 + 44)]);
  sub_100124840();
  static Alignment.center.getter();
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  sub_100008DD4((uint64_t)v6, (uint64_t)v9, &qword_100203D80);
  uint64_t v11 = &v9[*(int *)(v7 + 36)];
  long long v12 = v16[6];
  *((_OWORD *)v11 + 4) = v16[5];
  *((_OWORD *)v11 + 5) = v12;
  *((_OWORD *)v11 + 6) = v16[7];
  long long v13 = v16[2];
  *(_OWORD *)uint64_t v11 = v16[1];
  *((_OWORD *)v11 + 1) = v13;
  long long v14 = v16[4];
  *((_OWORD *)v11 + 2) = v16[3];
  *((_OWORD *)v11 + 3) = v14;
  sub_10002784C((uint64_t)v6, &qword_100203D80);
  return sub_100026FD0((uint64_t)v9, a2, &qword_100203D68);
}

void sub_100126350(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v67 = a2;
  uint64_t v62 = sub_1000063C0(&qword_100203DE8);
  __chkstk_darwin(v62);
  uint64_t v57 = (char *)&v54 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_1000063C0(&qword_100203DF0);
  uint64_t v58 = *(void *)(v60 - 8);
  uint64_t v4 = __chkstk_darwin(v60);
  uint64_t v56 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v63 = (char *)&v54 - v6;
  uint64_t v65 = sub_1000063C0(&qword_100203DF8);
  __chkstk_darwin(v65);
  uint64_t v66 = (uint64_t)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_1000063C0(&qword_100203E00);
  __chkstk_darwin(v61);
  uint64_t v9 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_1000063C0(&qword_100203E08);
  __chkstk_darwin(v64);
  uint64_t v11 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(int *)(type metadata accessor for QuestionnaireView(0) + 40);
  uint64_t v59 = (char *)a1;
  long long v13 = (void *)(a1 + v12);
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  uint64_t v55 = v13;
  *(void *)id v93 = v15;
  *(void *)&v93[8] = v14;
  sub_1000063C0(&qword_100203D08);
  State.wrappedValue.getter();
  uint64_t v16 = *(void *)v91;
  swift_getKeyPath();
  *(void *)id v93 = v16;
  sub_10012B308((unint64_t *)&unk_1001FD2C0, (void (*)(uint64_t))type metadata accessor for QuestionnaireModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  LOBYTE(a1) = *(unsigned char *)(v16 + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel__hasEntries);
  swift_release();
  if ((a1 & 1) == 0)
  {
    uint64_t v34 = static HorizontalAlignment.center.getter();
    sub_100127008((uint64_t)v59, (uint64_t)v91);
    *(_OWORD *)&v93[71] = *(_OWORD *)&v91[64];
    *(_OWORD *)&v93[55] = *(_OWORD *)&v91[48];
    *(_OWORD *)&v93[119] = *(_OWORD *)&v91[112];
    *(_OWORD *)&v93[135] = *(_OWORD *)&v91[128];
    *(_OWORD *)&v93[151] = *(_OWORD *)&v91[144];
    *(void *)&v93[167] = *(void *)&v91[160];
    *(_OWORD *)&v93[87] = *(_OWORD *)&v91[80];
    *(_OWORD *)&v93[103] = *(_OWORD *)&v91[96];
    *(_OWORD *)&v93[7] = *(_OWORD *)v91;
    *(_OWORD *)&v93[23] = *(_OWORD *)&v91[16];
    *(_OWORD *)&v93[39] = *(_OWORD *)&v91[32];
    long long v35 = *(_OWORD *)&v93[96];
    *(_OWORD *)(v9 + 129) = *(_OWORD *)&v93[112];
    long long v36 = *(_OWORD *)&v93[144];
    *(_OWORD *)(v9 + 145) = *(_OWORD *)&v93[128];
    *(_OWORD *)(v9 + 161) = v36;
    *((_OWORD *)v9 + 11) = *(_OWORD *)&v93[159];
    long long v37 = *(_OWORD *)&v93[32];
    *(_OWORD *)(v9 + 65) = *(_OWORD *)&v93[48];
    long long v38 = *(_OWORD *)&v93[80];
    *(_OWORD *)(v9 + 81) = *(_OWORD *)&v93[64];
    *(_OWORD *)(v9 + 97) = v38;
    *(_OWORD *)(v9 + 113) = v35;
    long long v39 = *(_OWORD *)&v93[16];
    *(_OWORD *)(v9 + 17) = *(_OWORD *)v93;
    *(_OWORD *)(v9 + 33) = v39;
    v90[0] = 1;
    *(void *)uint64_t v9 = v34;
    *((void *)v9 + 1) = 0;
    v9[16] = 1;
    *(_OWORD *)(v9 + 49) = v37;
    swift_storeEnumTagMultiPayload();
    sub_1000063C0(&qword_100203E10);
    sub_100027F2C(&qword_100203E18, &qword_100203E10);
    sub_100027F2C(&qword_100203E20, &qword_100203DE8);
    _ConditionalContent<>.init(storage:)();
    sub_100008DD4((uint64_t)v11, v66, &qword_100203E08);
    swift_storeEnumTagMultiPayload();
    sub_1001295D0();
    _ConditionalContent<>.init(storage:)();
    sub_10002784C((uint64_t)v11, &qword_100203E08);
    return;
  }
  uint64_t v59 = v11;
  *(void *)id v93 = v15;
  *(void *)&v93[8] = v14;
  State.wrappedValue.getter();
  uint64_t v17 = *(void *)v91;
  uint64_t KeyPath = swift_getKeyPath();
  *(void *)id v93 = v17;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  unint64_t v19 = *(void *)(v17 + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel__entries);
  swift_bridgeObjectRetain();
  swift_release();
  if (!v19)
  {
    uint64_t KeyPath = v66;
    if (qword_1001FAD80 == -1)
    {
LABEL_11:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      *(void *)uint64_t KeyPath = Text.init(_:tableName:bundle:comment:)();
      *(void *)(KeyPath + 8) = v40;
      *(unsigned char *)(KeyPath + 16) = v41 & 1;
      *(void *)(KeyPath + 24) = v42;
      swift_storeEnumTagMultiPayload();
      sub_1001295D0();
      _ConditionalContent<>.init(storage:)();
      return;
    }
LABEL_19:
    swift_once();
    goto LABEL_11;
  }
  if (!(v19 >> 62))
  {
    uint64_t v20 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_5;
  }
  swift_bridgeObjectRetain();
  uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v20 < 0)
  {
    __break(1u);
    goto LABEL_19;
  }
LABEL_5:
  *(void *)NSString v91 = 0;
  *(void *)&v91[8] = v20;
  swift_getKeyPath();
  *(void *)(swift_allocObject() + 16) = v19;
  sub_1000063C0(&qword_100202ED0);
  sub_1000063C0(&qword_100203E30);
  sub_10010688C();
  sub_1001296D4();
  ForEach<>.init(_:id:content:)();
  uint64_t v21 = type metadata accessor for FeedbackFeatureFlags();
  *(void *)&v91[24] = v21;
  *(void *)&v91[32] = sub_10012B308((unint64_t *)&unk_1001FDED0, (void (*)(uint64_t))&type metadata accessor for FeedbackFeatureFlags);
  uint64_t v22 = sub_10002E148((uint64_t *)v91);
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v21 - 8) + 104))(v22, enum case for FeedbackFeatureFlags.CentralizedFeedback(_:), v21);
  LOBYTE(v21) = isFeatureEnabled(_:)();
  sub_100027DBC((uint64_t)v91);
  if ((v21 & 1) == 0
    || (id v23 = [self currentTraitCollection],
        id v24 = [v23 userInterfaceIdiom],
        v23,
        v24))
  {
    uint64_t v25 = (uint64_t)v9;
    sub_10003F824(v91);
    sub_100026FD0((uint64_t)v91, (uint64_t)v93, &qword_1001FC7A8);
LABEL_8:
    uint64_t v26 = v58;
    uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v58 + 16);
    uint64_t v28 = v56;
    uint64_t v29 = v60;
    v27(v56, v63, v60);
    sub_100026FD0((uint64_t)v93, (uint64_t)v76, &qword_1001FC7A8);
    uint64_t v30 = (uint64_t)v57;
    v27(v57, v28, v29);
    uint64_t v31 = v30 + *(int *)(sub_1000063C0(&qword_100203E50) + 48);
    sub_100026FD0((uint64_t)v76, (uint64_t)v90, &qword_1001FC7A8);
    sub_100026FD0((uint64_t)v90, v31, &qword_1001FC7A8);
    sub_100026FD0((uint64_t)v76, (uint64_t)v91, &qword_1001FC7A8);
    sub_10003F95C(v90, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10003F844);
    sub_10003F95C(v93, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10003F844);
    sub_10003F95C(v91, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10003F9D0);
    uint64_t v32 = *(void (**)(char *, uint64_t))(v26 + 8);
    v32(v28, v29);
    sub_100008DD4(v30, v25, &qword_100203DE8);
    swift_storeEnumTagMultiPayload();
    sub_1000063C0(&qword_100203E10);
    sub_100027F2C(&qword_100203E18, &qword_100203E10);
    sub_100027F2C(&qword_100203E20, &qword_100203DE8);
    uint64_t v33 = (uint64_t)v59;
    _ConditionalContent<>.init(storage:)();
    sub_10002784C(v30, &qword_100203DE8);
    sub_100008DD4(v33, v66, &qword_100203E08);
    swift_storeEnumTagMultiPayload();
    sub_1001295D0();
    _ConditionalContent<>.init(storage:)();
    sub_10003F95C(v93, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10003F9D0);
    sub_10002784C(v33, &qword_100203E08);
    v32(v63, v60);
    return;
  }
  uint64_t v43 = v55[1];
  *(void *)NSString v91 = *v55;
  *(void *)&v91[8] = v43;
  State.wrappedValue.getter();
  uint64_t v44 = *(void *)v90;
  swift_getKeyPath();
  *(void *)NSString v91 = v44;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  id v45 = *(id *)(v44 + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel__inputContextHistory);
  swift_release();
  id v46 = [v45 tiInputContextHistory];

  if (v46)
  {
    id v47 = [v46 threadIdentifier];

    if (v47)
    {
      uint64_t v48 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v50 = v49;
    }
    else
    {
      uint64_t v48 = 0;
      uint64_t v50 = 0;
    }
    uint64_t v25 = (uint64_t)v9;
    *(void *)os_log_t v90 = 0x3FF0000000000000;
    State.init(wrappedValue:)();
    uint64_t v51 = *(void *)v91;
    uint64_t v52 = *(void *)&v91[8];
    type metadata accessor for SmartReplyAnalytics();
    swift_allocObject();
    uint64_t v53 = sub_10011A73C(v48, v50);
    memset(v68, 0, sizeof(v68));
    *(void *)&long long v70 = _swiftEmptyArrayStorage;
    *((void *)&v70 + 1) = _swiftEmptyArrayStorage;
    *(void *)&long long v72 = 0;
    long long v71 = 0uLL;
    DWORD2(v72) = 65791;
    BYTE12(v72) = 0;
    long long v73 = (unint64_t)v53;
    *(void *)&long long v74 = v51;
    *((void *)&v74 + 1) = v52;
    *(_OWORD *)&v90[167] = v74;
    *(_OWORD *)&v90[151] = (unint64_t)v53;
    *(_OWORD *)&v90[135] = v72;
    *(_OWORD *)&v90[119] = 0uLL;
    *(void *)&long long v69 = 0;
    *((void *)&v69 + 1) = _swiftEmptyArrayStorage;
    memset(&v90[7], 0, 80);
    *(_OWORD *)&v90[103] = v70;
    *(_OWORD *)&v90[87] = v69;
    char v75 = 1;
    memset(v76, 0, sizeof(v76));
    uint64_t v77 = 0;
    unint64_t v78 = _swiftEmptyArrayStorage;
    uint64_t v79 = _swiftEmptyArrayStorage;
    id v80 = _swiftEmptyArrayStorage;
    uint64_t v82 = 0;
    uint64_t v83 = 0;
    uint64_t v81 = 0;
    int v84 = 65791;
    char v85 = 0;
    uint64_t v86 = v53;
    uint64_t v87 = 0;
    uint64_t v88 = v51;
    uint64_t v89 = v52;
    sub_10003FB08((uint64_t)v68);
    sub_10002E220((uint64_t)v76);
    *(_OWORD *)&v91[137] = *(_OWORD *)&v90[128];
    *(_OWORD *)&v91[153] = *(_OWORD *)&v90[144];
    *(_OWORD *)NSString v92 = *(_OWORD *)&v90[160];
    *(_OWORD *)&v91[73] = *(_OWORD *)&v90[64];
    *(_OWORD *)&v91[89] = *(_OWORD *)&v90[80];
    *(_OWORD *)&v91[105] = *(_OWORD *)&v90[96];
    *(_OWORD *)&v91[121] = *(_OWORD *)&v90[112];
    *(_OWORD *)&v91[9] = *(_OWORD *)v90;
    *(_OWORD *)&v91[25] = *(_OWORD *)&v90[16];
    *(_OWORD *)&v91[41] = *(_OWORD *)&v90[32];
    *(void *)NSString v91 = 0;
    v91[8] = 1;
    *(void *)&v92[15] = *(void *)&v90[175];
    *(_OWORD *)&v91[57] = *(_OWORD *)&v90[48];
    nullsub_1(v91);
    sub_100026FD0((uint64_t)v91, (uint64_t)v93, &qword_1001FC7A8);
    goto LABEL_8;
  }
  __break(1u);
}

double sub_100127008@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for Locale();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v5 - 8);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v6 = *(void **)(a1 + 8);
  if (v6 && (id v7 = [v6 entryPoint]) != 0)
  {
    uint64_t v8 = v7;
    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v11 = v10;
  }
  else
  {
    String.LocalizationValue.init(stringLiteral:)();
    static Locale.current.getter();
    uint64_t v9 = String.init(localized:table:bundle:locale:comment:)();
    uint64_t v11 = v12;
  }
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  *(void *)(a2 + 16) = v14;
  *(unsigned char *)(a2 + 24) = v15;
  *(void *)(a2 + 32) = v16;
  *(unsigned char *)(a2 + 40) = v17;
  *(void *)(a2 + 48) = v18;
  *(void *)(a2 + 56) = v19;
  *(_OWORD *)(a2 + 64) = xmmword_100192880;
  *(void *)(a2 + 80) = 0x4024000000000000;
  *(void *)(a2 + 88) = v9;
  *(void *)(a2 + 96) = v11;
  *(void *)(a2 + 104) = 0;
  *(unsigned char *)(a2 + 112) = 1;
  *(void *)(a2 + 120) = v20;
  *(unsigned char *)(a2 + 128) = v21;
  *(void *)(a2 + 136) = v22;
  *(unsigned char *)(a2 + 144) = v23;
  double result = *(double *)&v24;
  *(_OWORD *)(a2 + 152) = v24;
  return result;
}

uint64_t sub_10012724C@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1000063C0(&qword_100203E48);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v9 = *a1;
  uint64_t result = static HorizontalAlignment.center.getter();
  *(void *)uint64_t v8 = result;
  *((void *)v8 + 1) = 0;
  unsigned char v8[16] = 1;
  if ((a2 & 0xC000000000000001) != 0)
  {
    specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_5;
  }
  if ((v9 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v9 < *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    swift_retain();
LABEL_5:
    uint64_t v11 = &v8[*(int *)(sub_1000063C0(&qword_100203E58) + 44)];
    *(_OWORD *)uint64_t v11 = xmmword_100192890;
    *((void *)v11 + 2) = 0x403E000000000000;
    type metadata accessor for QuestionRow(0);
    type metadata accessor for QuestionnaireEntry();
    sub_10012B308(&qword_1001FD2E8, (void (*)(uint64_t))type metadata accessor for QuestionnaireEntry);
    Bindable<A>.init(wrappedValue:)();
    char v12 = static Edge.Set.bottom.getter();
    EdgeInsets.init(_all:)();
    uint64_t v14 = v13;
    uint64_t v16 = v15;
    uint64_t v18 = v17;
    uint64_t v20 = v19;
    sub_100008DD4((uint64_t)v8, a3, &qword_100203E48);
    uint64_t v21 = a3 + *(int *)(sub_1000063C0(&qword_100203E30) + 36);
    *(unsigned char *)uint64_t v21 = v12;
    *(void *)(v21 + 8) = v14;
    *(void *)(v21 + 16) = v16;
    *(void *)(v21 + 24) = v18;
    *(void *)(v21 + 32) = v20;
    *(unsigned char *)(v21 + 40) = 0;
    return sub_10002784C((uint64_t)v8, &qword_100203E48);
  }
  __break(1u);
  return result;
}

uint64_t sub_100127430@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v16[1] = a2;
  v16[0] = sub_1000063C0(&qword_100203DB8);
  __chkstk_darwin(v16[0]);
  uint64_t v4 = (char *)v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000063C0(&qword_1001FDDD8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ToolbarItemPlacement();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = sub_1000063C0(&qword_100203DC0);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  static ToolbarItemPlacement.confirmationAction.getter();
  _OWORD v16[8] = a1;
  sub_1000063C0(&qword_100203DC8);
  sub_100128FCC();
  ToolbarItem<>.init(placement:content:)();
  static ToolbarItemPlacement.cancellationAction.getter();
  v16[4] = a1;
  sub_1000063C0(&qword_1001FC6D0);
  sub_10003F498();
  ToolbarItem<>.init(placement:content:)();
  uint64_t v14 = &v4[*(int *)(v16[0] + 48)];
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v4, v13, v10);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v14, v8, v5);
  TupleToolbarContent.init(_:)();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

uint64_t sub_10012772C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for QuestionnaireView(0);
  uint64_t v5 = v4 - 8;
  uint64_t v32 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v32 + 64);
  __chkstk_darwin(v4);
  uint64_t v7 = sub_1000063C0(&qword_1001FC6B8);
  uint64_t v35 = *(void *)(v7 - 8);
  uint64_t v36 = v7;
  __chkstk_darwin(v7);
  uint64_t v34 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000063C0(&qword_1001FC6D0);
  uint64_t v37 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v33 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (uint64_t *)(a1 + *(int *)(v5 + 48));
  uint64_t v12 = v11[1];
  uint64_t v38 = *v11;
  uint64_t v39 = v12;
  sub_1000063C0(&qword_100203D08);
  State.wrappedValue.getter();
  uint64_t v13 = v40;
  swift_getKeyPath();
  uint64_t v38 = v13;
  sub_10012B308((unint64_t *)&unk_1001FD2C0, (void (*)(uint64_t))type metadata accessor for QuestionnaireModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v14 = *(void *)(v13 + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel__entries);
  swift_bridgeObjectRetain();
  swift_release();
  if (v14)
  {
    uint64_t v30 = v9;
    uint64_t v31 = a2;
    swift_bridgeObjectRelease();
    if (qword_1001FAD88 != -1) {
      swift_once();
    }
    sub_10012B1C4(a1, (uint64_t)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for QuestionnaireView);
    unint64_t v15 = (*(unsigned __int8 *)(v32 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
    uint64_t v16 = swift_allocObject();
    sub_1001284A0((uint64_t)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v16 + v15);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v17 = v34;
    Button<>.init(_:action:)();
    uint64_t v18 = v11[1];
    uint64_t v38 = *v11;
    uint64_t v39 = v18;
    State.wrappedValue.getter();
    uint64_t v19 = v40;
    swift_getKeyPath();
    uint64_t v38 = v19;
    sub_10012B308((unint64_t *)&qword_1001FD2A0, (void (*)(uint64_t))type metadata accessor for ToolModel);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    char v20 = *(unsigned char *)(v19 + 88);
    swift_release();
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v22 = swift_allocObject();
    *(unsigned char *)(v22 + 16) = v20;
    uint64_t v24 = v35;
    uint64_t v23 = v36;
    uint64_t v25 = (uint64_t)v33;
    (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v33, v17, v36);
    uint64_t v9 = v30;
    uint64_t v26 = (uint64_t *)(v25 + *(int *)(v30 + 36));
    *uint64_t v26 = KeyPath;
    v26[1] = (uint64_t)sub_10012B394;
    v26[2] = v22;
    (*(void (**)(char *, uint64_t))(v24 + 8))(v17, v23);
    a2 = v31;
    sub_100026FD0(v25, v31, &qword_1001FC6D0);
    uint64_t v27 = 0;
  }
  else
  {
    uint64_t v27 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 56))(a2, v27, 1, v9);
}

uint64_t sub_100127BF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v32 = a2;
  uint64_t v3 = type metadata accessor for QuestionnaireView(0);
  uint64_t v4 = v3 - 8;
  uint64_t v5 = *(void *)(v3 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v3);
  uint64_t v7 = sub_1000063C0(&qword_1001FC6B8);
  uint64_t v30 = *(void *)(v7 - 8);
  uint64_t v31 = v7;
  __chkstk_darwin(v7);
  uint64_t v29 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_1000063C0(&qword_1001FC6D0);
  __chkstk_darwin(v28);
  uint64_t v10 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (uint64_t *)(a1 + *(int *)(v4 + 48));
  uint64_t v12 = v11[1];
  uint64_t v33 = *v11;
  uint64_t v34 = v12;
  v27[1] = sub_1000063C0(&qword_100203D08);
  State.wrappedValue.getter();
  uint64_t v13 = v35;
  swift_getKeyPath();
  uint64_t v33 = v13;
  sub_10012B308((unint64_t *)&unk_1001FD2C0, (void (*)(uint64_t))type metadata accessor for QuestionnaireModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v14 = *(void *)(v13 + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel__entries);
  swift_bridgeObjectRetain();
  swift_release();
  if (v14)
  {
    swift_bridgeObjectRelease();
    if (qword_1001FAD90 == -1) {
      goto LABEL_5;
    }
    goto LABEL_6;
  }
  if (qword_1001FAD98 != -1) {
LABEL_6:
  }
    swift_once();
LABEL_5:
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10012B1C4(a1, (uint64_t)v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for QuestionnaireView);
  unint64_t v15 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v16 = swift_allocObject();
  sub_1001284A0((uint64_t)v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v16 + v15);
  uint64_t v17 = v29;
  Button<>.init(_:action:)();
  uint64_t v18 = v11[1];
  uint64_t v33 = *v11;
  uint64_t v34 = v18;
  State.wrappedValue.getter();
  uint64_t v19 = v35;
  swift_getKeyPath();
  uint64_t v33 = v19;
  sub_10012B308((unint64_t *)&qword_1001FD2A0, (void (*)(uint64_t))type metadata accessor for ToolModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  char v20 = *(unsigned char *)(v19 + 88);
  swift_release();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v22 = swift_allocObject();
  *(unsigned char *)(v22 + 16) = v20;
  uint64_t v24 = v30;
  uint64_t v23 = v31;
  (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v10, v17, v31);
  uint64_t v25 = (uint64_t *)&v10[*(int *)(v28 + 36)];
  *uint64_t v25 = KeyPath;
  v25[1] = (uint64_t)sub_1001290E0;
  v25[2] = v22;
  (*(void (**)(char *, uint64_t))(v24 + 8))(v17, v23);
  return sub_100026FD0((uint64_t)v10, v32, &qword_1001FC6D0);
}

uint64_t sub_10012808C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for QuestionnaireView(0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000063C0(&qword_1001FF820);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  sub_10012B1C4(a1, (uint64_t)v5, type metadata accessor for QuestionnaireView);
  type metadata accessor for MainActor();
  uint64_t v10 = static MainActor.shared.getter();
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v10;
  *(void *)(v12 + 24) = &protocol witness table for MainActor;
  sub_1001284A0((uint64_t)v5, v12 + v11);
  sub_100122924((uint64_t)v8, (uint64_t)&unk_100203D20, v12);
  return swift_release();
}

uint64_t sub_100128274(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a4;
  type metadata accessor for MainActor();
  v4[6] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[7] = v6;
  v4[8] = v5;
  return _swift_task_switch(sub_10012830C, v6, v5);
}

uint64_t sub_10012830C()
{
  if (qword_1001FAC38 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000EBE8(v1, (uint64_t)qword_1002127A0);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Questionnaire presented!", v4, 2u);
    swift_slowDealloc();
  }
  uint64_t v5 = v0[5];

  uint64_t v6 = (uint64_t *)(v5 + *(int *)(type metadata accessor for QuestionnaireView(0) + 40));
  uint64_t v8 = *v6;
  uint64_t v7 = v6[1];
  v0[2] = v8;
  v0[3] = v7;
  sub_1000063C0(&qword_100203D08);
  State.wrappedValue.getter();
  v0[9] = v0[4];
  uint64_t v9 = (void *)swift_task_alloc();
  v0[10] = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_10001EB1C;
  return sub_100046F9C();
}

uint64_t sub_1001284A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for QuestionnaireView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100128504()
{
  return sub_100128ED4(sub_10012808C);
}

unint64_t sub_10012851C()
{
  unint64_t result = qword_100203CF8;
  if (!qword_100203CF8)
  {
    sub_100006C14(&qword_100203CD0);
    sub_100027F2C(&qword_100203D00, &qword_100203CC8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100203CF8);
  }
  return result;
}

uint64_t sub_1001285C0@<X0>(char *a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for QuestionnaireView(0) - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_100124080(v4, a1);
}

uint64_t sub_100128634()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10012867C()
{
  return sub_10004549C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1001286A8()
{
  return sub_100045700(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1001286C8()
{
  uint64_t v1 = type metadata accessor for QuestionnaireView(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  swift_unknownObjectRelease();

  uint64_t v5 = v0 + v3 + *(int *)(v1 + 28);
  sub_1000063C0(&qword_1001FAE68);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for DismissAction();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = v2 | 7;
  uint64_t v8 = v3 + v4;
  swift_release();
  uint64_t v9 = v0 + v3 + *(int *)(v1 + 36);
  swift_release();
  swift_release();
  uint64_t v10 = v9 + *(int *)(sub_1000063C0(&qword_1001FB438) + 32);
  uint64_t v11 = type metadata accessor for NavigationPath();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, v8, v7);
}

uint64_t sub_100128894(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for QuestionnaireView(0) - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_100027204;
  return sub_100128274(a1, v5, v6, v7);
}

uint64_t sub_100128980(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_100128A5C;
  return v6(a1);
}

uint64_t sub_100128A5C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_100128B54()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100128B8C(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100027FEC;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_100203D28 + dword_100203D28);
  return v6(a1, v4);
}

uint64_t sub_100128C44@<X0>(uint64_t a1@<X8>)
{
  return sub_100126134(*(void *)(v1 + 16), a1);
}

unint64_t sub_100128C4C()
{
  unint64_t result = qword_100203D70;
  if (!qword_100203D70)
  {
    sub_100006C14(&qword_100203D68);
    sub_100027F2C(&qword_100203D78, &qword_100203D80);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100203D70);
  }
  return result;
}

uint64_t sub_100128CEC@<X0>(uint64_t a1@<X8>)
{
  return sub_100127430(*(void *)(v1 + 16), a1);
}

uint64_t sub_100128CF8()
{
  uint64_t v1 = type metadata accessor for QuestionnaireView(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);

  uint64_t v5 = v0 + v3 + *(int *)(v1 + 28);
  sub_1000063C0(&qword_1001FAE68);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for DismissAction();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = v2 | 7;
  uint64_t v8 = v3 + v4;
  swift_release();
  uint64_t v9 = v0 + v3 + *(int *)(v1 + 36);
  swift_release();
  swift_release();
  uint64_t v10 = v9 + *(int *)(sub_1000063C0(&qword_1001FB438) + 32);
  uint64_t v11 = type metadata accessor for NavigationPath();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, v8, v7);
}

uint64_t sub_100128EBC()
{
  return sub_100128ED4((uint64_t (*)(uint64_t))sub_100125F90);
}

uint64_t sub_100128ED4(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for QuestionnaireView(0) - 8);
  uint64_t v3 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return a1(v3);
}

uint64_t sub_100128F4C()
{
  return sub_100128ED4((uint64_t (*)(uint64_t))sub_100125FFC);
}

uint64_t sub_100128F64(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100128FC4@<X0>(uint64_t a1@<X8>)
{
  return sub_10012772C(*(void *)(v1 + 16), a1);
}

unint64_t sub_100128FCC()
{
  unint64_t result = qword_100203DD0;
  if (!qword_100203DD0)
  {
    sub_100006C14(&qword_100203DC8);
    sub_10003F498();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100203DD0);
  }
  return result;
}

uint64_t sub_100129040@<X0>(uint64_t a1@<X8>)
{
  return sub_100127BF4(*(void *)(v1 + 16), a1);
}

uint64_t sub_10012904C()
{
  return sub_100129114(sub_1001246E4);
}

uint64_t sub_100129064@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = EnvironmentValues.isEnabled.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_100129094()
{
  return EnvironmentValues.isEnabled.setter();
}

unsigned char *sub_1001290BC(unsigned char *result, char a2)
{
  *result &= a2 ^ 1;
  return result;
}

uint64_t sub_1001290D0()
{
  return _swift_deallocObject(v0, 17, 7);
}

unsigned char *sub_1001290E0(unsigned char *result)
{
  *result &= ~*(unsigned char *)(v1 + 16) & 1;
  return result;
}

uint64_t sub_1001290FC()
{
  return sub_100129114(sub_1001245B0);
}

uint64_t sub_100129114(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_100129178()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100129188(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1001292FC(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1001291A8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100129468(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1001291C8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1001297FC(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1001291E8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10012997C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_100129208(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100129AE4(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_100129228(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100129C70(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_100129248(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10012A1EC(a1, a2, a3, (void *)*v3, (uint64_t *)&unk_1001FF2A0, type metadata accessor for Attachment);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_100129284(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10012A1EC(a1, a2, a3, (void *)*v3, &qword_100203F80, (uint64_t (*)(void))&type metadata accessor for URL);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1001292C0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10012A1EC(a1, a2, a3, (void *)*v3, &qword_100203EA0, (uint64_t (*)(void))&type metadata accessor for PhotosPickerItem);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1001292FC(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1000063C0(&qword_100201018);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100129468(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1000063C0(&qword_100203DE0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

unint64_t sub_1001295D0()
{
  unint64_t result = qword_100203E28;
  if (!qword_100203E28)
  {
    sub_100006C14(&qword_100203E08);
    sub_100027F2C(&qword_100203E18, &qword_100203E10);
    sub_100027F2C(&qword_100203E20, &qword_100203DE8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100203E28);
  }
  return result;
}

uint64_t sub_100129694()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001296CC@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10012724C(a1, *(void *)(v2 + 16), a2);
}

unint64_t sub_1001296D4()
{
  unint64_t result = qword_100203E38;
  if (!qword_100203E38)
  {
    sub_100006C14(&qword_100203E30);
    sub_100027F2C(&qword_100203E40, &qword_100203E48);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100203E38);
  }
  return result;
}

id sub_100129774@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_100123208(a1, &OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel__inputContextHistory, a2);
}

void sub_1001297A0()
{
  sub_100045518(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t type metadata accessor for QuestionRow(uint64_t a1)
{
  return sub_10005AFA8(a1, (uint64_t *)&unk_100203F10);
}

uint64_t sub_1001297DC()
{
  return sub_1000454F4(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_1001297FC(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1000063C0(&qword_100203E80);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 72);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  size_t v14 = 72 * v8;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v12, v13, v14);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10012997C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1000063C0(&qword_100203EA8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  size_t v15 = 32 * v8;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[v15]) {
      memmove(v13, v14, v15);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100129AE4(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1000063C0(&qword_100203E88);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    sub_1000063C0(&qword_1001FCA20);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100129C70(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1000063C0(&qword_100203E70);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100129DDC(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1000063C0(&qword_100203E78);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 24 * v8) {
      memmove(v10 + 4, a4 + 4, 24 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 24 * v8 || v12 >= v13 + 24 * v8)
  {
    sub_1000063C0(&qword_1001FEDF8);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100129F84(char a1, int64_t a2, char a3, void *a4)
{
  return sub_100129FAC(a1, a2, a3, a4, &qword_100203FD8, &qword_1001FEFA8);
}

uint64_t sub_100129F98(char a1, int64_t a2, char a3, void *a4)
{
  return sub_100129FAC(a1, a2, a3, a4, &qword_100203E90, &qword_100203E98);
}

uint64_t sub_100129FAC(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    uint64_t v16 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_1000063C0(a5);
  uint64_t v13 = *(void *)(sub_1000063C0(a6) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = (void *)swift_allocObject();
  size_t v17 = j__malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(sub_1000063C0(a6) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = (char *)v16 + v20;
  uint64_t v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  uint64_t v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10012A1EC(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t (*a6)(void))
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    uint64_t v16 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_1000063C0(a5);
  uint64_t v13 = *(void *)(a6(0) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = (void *)swift_allocObject();
  size_t v17 = j__malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(a6(0) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = (char *)v16 + v20;
  uint64_t v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  uint64_t v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10012A434(uint64_t a1, int *a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_10012A514;
  return v5(v2 + 32);
}

uint64_t sub_10012A514()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(unsigned char **)(*v0 + 16);
  uint64_t v5 = *v0;
  swift_task_dealloc();
  *uint64_t v2 = *(unsigned char *)(v1 + 32);
  uint64_t v3 = *(uint64_t (**)(void))(v5 + 8);
  return v3();
}

uint64_t sub_10012A628(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100027FEC;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_100203E60 + dword_100203E60);
  return v6(a1, v4);
}

id sub_10012A6E4@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_100123208(a1, &OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel__smartReplyConfiguration, a2);
}

void sub_10012A710()
{
  sub_100045618(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t *sub_10012A72C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    a1[2] = a2[2];
    uint64_t v5 = *(int *)(a3 + 28);
    uint64_t v6 = (char *)a1 + v5;
    int64_t v7 = (char *)a2 + v5;
    uint64_t v8 = sub_1000063C0(&qword_100203EB0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t sub_10012A804(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 28);
  uint64_t v3 = sub_1000063C0(&qword_100203EB0);
  int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(v2, v3);
}

uint64_t sub_10012A870(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = *(int *)(a3 + 28);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_1000063C0(&qword_100203EB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

void *sub_10012A8F8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  uint64_t v4 = *(int *)(a3 + 28);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1000063C0(&qword_100203EB0);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

uint64_t sub_10012A988(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = *(int *)(a3 + 28);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_1000063C0(&qword_100203EB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t sub_10012AA10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = *(int *)(a3 + 28);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_1000063C0(&qword_100203EB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_10012AA98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10012AAAC);
}

uint64_t sub_10012AAAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 28);
  uint64_t v5 = sub_1000063C0(&qword_100203EB0);
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);

  return v6(v4, a2, v5);
}

uint64_t sub_10012AB20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10012AB34);
}

uint64_t sub_10012AB34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 28);
  uint64_t v6 = sub_1000063C0(&qword_100203EB0);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(v5, a2, a2, v6);
}

void sub_10012ABAC()
{
  sub_10012AC7C(319, (unint64_t *)&qword_100203F20, (uint64_t (*)(uint64_t))type metadata accessor for QuestionnaireEntry, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Bindable);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_10012AC7C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_10012ACE4()
{
  unint64_t result = qword_100203F58;
  if (!qword_100203F58)
  {
    sub_100006C14(&qword_100203D10);
    sub_10012AD84();
    sub_100027F2C(&qword_1001FB5E0, &qword_1001FB5E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100203F58);
  }
  return result;
}

unint64_t sub_10012AD84()
{
  unint64_t result = qword_100203F60;
  if (!qword_100203F60)
  {
    sub_100006C14(&qword_100203CE8);
    sub_10012AE30();
    sub_10012B308(&qword_1001FB910, (void (*)(uint64_t))type metadata accessor for PreferredContentSizeModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100203F60);
  }
  return result;
}

unint64_t sub_10012AE30()
{
  unint64_t result = qword_100203F68;
  if (!qword_100203F68)
  {
    sub_100006C14(&qword_100203CE0);
    sub_100006C14(&qword_100203CD0);
    sub_10012851C();
    swift_getOpaqueTypeConformance2();
    sub_1000B4BC8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100203F68);
  }
  return result;
}

uint64_t sub_10012AEE0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10012AEFC(uint64_t a1, int *a2)
{
  *(void *)(v2 + 24) = a1;
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 32) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_10012AFDC;
  return v5(v2 + 16);
}

uint64_t sub_10012AFDC()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void **)(*v0 + 24);
  uint64_t v5 = *v0;
  swift_task_dealloc();
  *uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(uint64_t (**)(void))(v5 + 8);
  return v3();
}

uint64_t sub_10012B10C(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100027204;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_100203F70 + dword_100203F70);
  return v6(a1, v4);
}

uint64_t sub_10012B1C4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_10012B22C()
{
  unint64_t result = qword_100203FA8;
  if (!qword_100203FA8)
  {
    sub_100006C14(&qword_100203FA0);
    sub_10012B308(&qword_100203FB0, (void (*)(uint64_t))type metadata accessor for MultichoiceRow);
    sub_10012B308(&qword_100203FB8, (void (*)(uint64_t))type metadata accessor for PickerRow);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100203FA8);
  }
  return result;
}

uint64_t sub_10012B308(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10012B350()
{
  return sub_100027F2C(&qword_100203FC8, &qword_100203FD0);
}

uint64_t destroy for LongAnswerView()
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for LongAnswerView(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v7 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v7;
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  uint64_t v8 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v8;
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for LongAnswerView(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_retain();
  swift_release();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  return a1;
}

__n128 initializeWithTake for LongAnswerView(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[6];
  *(_OWORD *)(a1 + 105) = *(long long *)((char *)a2 + 105);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t assignWithTake for LongAnswerView(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  swift_release();
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  swift_release();
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  return a1;
}

uint64_t getEnumTagSinglePayload for LongAnswerView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 121)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LongAnswerView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 120) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 121) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 121) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LongAnswerView()
{
  return &type metadata for LongAnswerView;
}

uint64_t sub_10012B7D8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10012B7F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000063C0(&qword_100203FE8);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v80 = (uint64_t)v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v77 = (void *)((char *)v66 - v7);
  uint64_t v8 = type metadata accessor for Divider();
  uint64_t v78 = *(void *)(v8 - 8);
  uint64_t v79 = v8;
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v76 = (char *)v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  char v75 = (char *)v66 - v11;
  uint64_t v12 = sub_1000063C0(&qword_100203FF0);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  unint64_t v15 = (char *)v66 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  size_t v17 = (char *)v66 - v16;
  uint64_t v18 = sub_1000063C0(&qword_100203FF8);
  uint64_t v19 = __chkstk_darwin(v18 - 8);
  uint64_t v21 = (char *)v66 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)v66 - v22;
  *(void *)uint64_t v23 = static VerticalAlignment.center.getter();
  *((void *)v23 + 1) = 0;
  v23[16] = 1;
  uint64_t v24 = *(int *)(sub_1000063C0(&qword_100204000) + 44);
  uint64_t v81 = v23;
  sub_10012C174(a1, &v23[v24]);
  uint64_t v25 = *(void *)a1;
  int v26 = *(unsigned __int8 *)(a1 + 8);
  uint64_t v27 = swift_retain();
  int v73 = v26;
  uint64_t v28 = sub_100020F7C(v27, v26);
  uint64_t v74 = v25;
  swift_release();
  swift_getKeyPath();
  *(void *)&long long v92 = v28;
  uint64_t v72 = sub_10012D200((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v29 = *(void *)(v28 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__attachmentManager);
  swift_retain();
  swift_release();
  swift_getKeyPath();
  *(void *)&long long v92 = v29;
  uint64_t v71 = sub_10012D200(&qword_100201970, (void (*)(uint64_t))type metadata accessor for AttachmentManager);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  uint64_t v30 = *(void *)(v29 + 16);
  swift_bridgeObjectRetain();
  swift_release();
  uint64_t v31 = *(void *)(v30 + 16);
  if (!v31)
  {
LABEL_13:
    swift_bridgeObjectRelease();
    uint64_t v44 = sub_1000063C0(&qword_100204008);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v17, 1, 1, v44);
    goto LABEL_16;
  }
  uint64_t v67 = v21;
  uint64_t v68 = v17;
  long long v69 = v15;
  uint64_t v70 = a2;
  uint64_t v83 = type metadata accessor for Attachment(0);
  uint64_t v32 = *(void *)(v83 - 8);
  uint64_t v33 = v30 + ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80));
  long long v34 = *(_OWORD *)(a1 + 64);
  long long v94 = *(_OWORD *)(a1 + 48);
  long long v95 = v34;
  long long v96 = *(_OWORD *)(a1 + 80);
  char v97 = *(unsigned char *)(a1 + 96);
  long long v35 = *(_OWORD *)(a1 + 16);
  long long v36 = *(_OWORD *)(a1 + 32);
  v66[0] = a1;
  long long v92 = v35;
  long long v93 = v36;
  uint64_t v82 = *(void *)(v32 + 72);
  v66[1] = v30;
  swift_bridgeObjectRetain();
  while (1)
  {
    uint64_t v37 = (void *)(v33 + *(int *)(v83 + 44));
    uint64_t v38 = (void *)*v37;
    uint64_t v39 = v37[1];
    long long v86 = v94;
    long long v87 = v95;
    long long v88 = v96;
    char v89 = v97;
    long long v84 = v92;
    long long v85 = v93;
    swift_bridgeObjectRetain();
    sub_1000063C0(&qword_1001FC958);
    Binding.wrappedValue.getter();
    char v41 = v90;
    uint64_t v40 = v91;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!v39)
    {
      swift_bridgeObjectRelease();
      goto LABEL_4;
    }
    if (v38 == v41 && v39 == v40) {
      break;
    }
    char v43 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v43)
    {
      swift_bridgeObjectRelease_n();
      goto LABEL_15;
    }
LABEL_4:
    v33 += v82;
    if (!--v31)
    {
      swift_bridgeObjectRelease();
      unint64_t v15 = v69;
      a2 = v70;
      uint64_t v21 = v67;
      size_t v17 = v68;
      goto LABEL_13;
    }
  }
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_15:
  uint64_t v45 = v66[0];
  id v46 = v75;
  Divider.init()();
  uint64_t v47 = static HorizontalAlignment.center.getter();
  uint64_t v48 = (uint64_t)v77;
  *uint64_t v77 = v47;
  *(void *)(v48 + 8) = 0;
  *(unsigned char *)(v48 + 16) = 1;
  sub_1000063C0(&qword_100204018);
  uint64_t v49 = swift_retain();
  uint64_t v50 = sub_100020F7C(v49, v73);
  swift_release();
  swift_getKeyPath();
  *(void *)&long long v84 = v50;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v51 = *(void *)(v50 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__attachmentManager);
  swift_retain();
  swift_release();
  swift_getKeyPath();
  *(void *)&long long v84 = v51;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  uint64_t v52 = *(void *)(v51 + 16);
  swift_bridgeObjectRetain();
  swift_release();
  sub_100107DA4(v45);
  uint64_t v53 = sub_10012CC0C(v52, v45);
  sub_100107E50(v45);
  swift_bridgeObjectRelease();
  os_log_t v90 = v53;
  sub_1000063C0(&qword_1001FF248);
  type metadata accessor for URL();
  sub_1000063C0(&qword_100204020);
  sub_100027F2C(&qword_100204028, &qword_1001FF248);
  sub_10012CF54();
  sub_10012D200(&qword_100204040, (void (*)(uint64_t))type metadata accessor for Attachment);
  ForEach<>.init(_:content:)();
  uint64_t v55 = v78;
  uint64_t v54 = v79;
  uint64_t v56 = *(void (**)(char *, char *, uint64_t))(v78 + 16);
  uint64_t v57 = v76;
  v56(v76, v46, v79);
  uint64_t v58 = v48;
  uint64_t v59 = v80;
  sub_100008DD4(v48, v80, &qword_100203FE8);
  unint64_t v15 = v69;
  v56(v69, v57, v54);
  uint64_t v60 = sub_1000063C0(&qword_100204048);
  sub_100008DD4(v59, (uint64_t)&v15[*(int *)(v60 + 48)], &qword_100203FE8);
  sub_10002784C(v58, &qword_100203FE8);
  uint64_t v61 = *(void (**)(char *, uint64_t))(v55 + 8);
  v61(v46, v54);
  sub_10002784C(v59, &qword_100203FE8);
  v61(v57, v54);
  uint64_t v62 = sub_1000063C0(&qword_100204008);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v62 - 8) + 56))(v15, 0, 1, v62);
  size_t v17 = v68;
  sub_10012D000((uint64_t)v15, (uint64_t)v68);
  a2 = v70;
  uint64_t v21 = v67;
LABEL_16:
  uint64_t v63 = (uint64_t)v81;
  sub_100008DD4((uint64_t)v81, (uint64_t)v21, &qword_100203FF8);
  sub_100008DD4((uint64_t)v17, (uint64_t)v15, &qword_100203FF0);
  sub_100008DD4((uint64_t)v21, a2, &qword_100203FF8);
  uint64_t v64 = sub_1000063C0(&qword_100204010);
  sub_100008DD4((uint64_t)v15, a2 + *(int *)(v64 + 48), &qword_100203FF0);
  sub_10002784C((uint64_t)v17, &qword_100203FF0);
  sub_10002784C(v63, &qword_100203FF8);
  sub_10002784C((uint64_t)v15, &qword_100203FF0);
  return sub_10002784C((uint64_t)v21, &qword_100203FF8);
}

uint64_t sub_10012C174@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v61 = a2;
  uint64_t v60 = sub_1000063C0(&qword_100201060);
  uint64_t v66 = *(void *)(v60 - 8);
  uint64_t v3 = __chkstk_darwin(v60);
  uint64_t v59 = &v49[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v3);
  uint64_t v65 = &v49[-v5];
  uint64_t v6 = sub_1000063C0(&qword_1001FC950);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v57 = v6;
  uint64_t v58 = v7;
  __chkstk_darwin(v6);
  uint64_t v55 = &v49[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_1000063C0(&qword_100204050);
  uint64_t v63 = *(void *)(v9 - 8);
  uint64_t v64 = v9;
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v56 = &v49[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  uint64_t v62 = &v49[-v12];
  long long v13 = *(_OWORD *)(a1 + 64);
  long long v14 = *(_OWORD *)(a1 + 32);
  long long v82 = *(_OWORD *)(a1 + 48);
  long long v83 = v13;
  long long v15 = *(_OWORD *)(a1 + 64);
  long long v84 = *(_OWORD *)(a1 + 80);
  long long v16 = *(_OWORD *)(a1 + 32);
  long long v80 = *(_OWORD *)(a1 + 16);
  long long v81 = v16;
  long long v76 = v82;
  long long v77 = v15;
  long long v78 = *(_OWORD *)(a1 + 80);
  char v85 = *(unsigned char *)(a1 + 96);
  unsigned __int8 v79 = *(unsigned char *)(a1 + 96);
  long long v74 = v80;
  long long v75 = v14;
  uint64_t v53 = sub_1000063C0(&qword_1001FC958);
  Binding.wrappedValue.getter();
  long long v17 = v67;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v73 = v17;
  long long v69 = v82;
  long long v70 = v83;
  long long v71 = v84;
  char v72 = v85;
  long long v67 = v80;
  long long v68 = v81;
  Binding.projectedValue.getter();
  long long v18 = v74;
  uint64_t v54 = v74;
  uint64_t v19 = *((void *)&v75 + 1);
  long long v52 = v75;
  uint64_t v20 = *((void *)&v76 + 1);
  uint64_t v51 = v76;
  char v21 = v77;
  uint64_t v22 = *((void *)&v77 + 1);
  long long v23 = v78;
  int v50 = v79;
  swift_getKeyPath();
  long long v74 = v18;
  *(void *)&long long v75 = v52;
  *((void *)&v75 + 1) = v19;
  *(void *)&long long v76 = v51;
  *((void *)&v76 + 1) = v20;
  LOBYTE(v77) = v21;
  *((void *)&v77 + 1) = v22;
  long long v78 = v23;
  unsigned __int8 v79 = v50;
  Binding.subscript.getter();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  sub_10002DF54();
  uint64_t v24 = v55;
  TextField<>.init<A>(_:text:axis:)();
  sub_100027F2C(&qword_100204058, &qword_1001FC950);
  int v26 = v56;
  uint64_t v25 = v57;
  View.lineLimit(_:)();
  (*(void (**)(unsigned char *, uint64_t))(v58 + 8))(v24, v25);
  uint64_t v28 = v62;
  uint64_t v27 = v63;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v63 + 32))(v62, v26, v64);
  uint64_t v29 = (_OWORD *)swift_allocObject();
  long long v30 = *(_OWORD *)(a1 + 80);
  v29[5] = *(_OWORD *)(a1 + 64);
  v29[6] = v30;
  v29[7] = *(_OWORD *)(a1 + 96);
  *(_OWORD *)((char *)v29 + 121) = *(_OWORD *)(a1 + 105);
  long long v31 = *(_OWORD *)(a1 + 16);
  v29[1] = *(_OWORD *)a1;
  v29[2] = v31;
  long long v32 = *(_OWORD *)(a1 + 48);
  v29[3] = *(_OWORD *)(a1 + 32);
  v29[4] = v32;
  sub_100107DA4(a1);
  sub_1000063C0(&qword_1001FBE40);
  uint64_t v33 = sub_100006C14(&qword_1001FBBC0);
  uint64_t v34 = type metadata accessor for IconOnlyLabelStyle();
  uint64_t v35 = sub_100027F2C((unint64_t *)&unk_1001FD5A0, &qword_1001FBBC0);
  uint64_t v36 = sub_10012D200(&qword_1001FDA20, (void (*)(uint64_t))&type metadata accessor for IconOnlyLabelStyle);
  *(void *)&long long v74 = v33;
  *((void *)&v74 + 1) = v34;
  *(void *)&long long v75 = v35;
  *((void *)&v75 + 1) = v36;
  swift_getOpaqueTypeConformance2();
  uint64_t v37 = v65;
  Button.init(action:label:)();
  uint64_t v38 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v27 + 16);
  uint64_t v39 = v64;
  v38(v26, v28, v64);
  uint64_t v40 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v66 + 16);
  char v41 = v59;
  uint64_t v42 = v37;
  uint64_t v43 = v60;
  v40(v59, v42, v60);
  uint64_t v44 = v61;
  v38(v61, v26, v39);
  uint64_t v45 = sub_1000063C0(&qword_100204060);
  v40(&v44[*(int *)(v45 + 48)], v41, v43);
  id v46 = *(void (**)(unsigned char *, uint64_t))(v66 + 8);
  v46(v65, v43);
  uint64_t v47 = *(void (**)(unsigned char *, uint64_t))(v63 + 8);
  v47(v62, v39);
  v46(v41, v43);
  return ((uint64_t (*)(unsigned char *, uint64_t))v47)(v26, v39);
}

uint64_t sub_10012C7D8()
{
  uint64_t v0 = type metadata accessor for IconOnlyLabelStyle();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000063C0(&qword_1001FBBC0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  LocalizedStringKey.init(stringLiteral:)();
  Label<>.init(_:systemImage:)();
  IconOnlyLabelStyle.init()();
  sub_100027F2C((unint64_t *)&unk_1001FD5A0, &qword_1001FBBC0);
  sub_10012D200(&qword_1001FDA20, (void (*)(uint64_t))&type metadata accessor for IconOnlyLabelStyle);
  View.labelStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_10012CA00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for FileView(0);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10012D068(a1, (uint64_t)&v7[*(int *)(v5 + 28)], type metadata accessor for Attachment);
  type metadata accessor for CompositionModel(0);
  sub_10012D200((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  *(void *)uint64_t v7 = Environment.init<A>(_:)();
  v7[8] = v8 & 1;
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  sub_10012D068((uint64_t)v7, a2, type metadata accessor for FileView);
  uint64_t v9 = (_OWORD *)(a2 + *(int *)(sub_1000063C0(&qword_100204020) + 36));
  long long v10 = v12[1];
  *uint64_t v9 = v12[0];
  v9[1] = v10;
  v9[2] = v12[2];
  return sub_10012D0D0((uint64_t)v7, type metadata accessor for FileView);
}

uint64_t sub_10012CB80@<X0>(uint64_t a1@<X8>)
{
  long long v3 = v1[5];
  v8[4] = v1[4];
  v8[5] = v3;
  v9[0] = v1[6];
  *(_OWORD *)((char *)v9 + 9) = *(_OWORD *)((char *)v1 + 105);
  long long v4 = v1[1];
  v8[0] = *v1;
  v8[1] = v4;
  long long v5 = v1[3];
  v8[2] = v1[2];
  v8[3] = v5;
  *(void *)a1 = static HorizontalAlignment.center.getter();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  uint64_t v6 = sub_1000063C0(&qword_100203FE0);
  return sub_10012B7F4((uint64_t)v8, a1 + *(int *)(v6 + 44));
}

void *sub_10012CC0C(uint64_t a1, uint64_t a2)
{
  uint64_t v35 = type metadata accessor for Attachment(0);
  uint64_t v5 = __chkstk_darwin(v35);
  uint64_t v32 = (uint64_t)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)v29 - v8;
  __n128 result = _swiftEmptyArrayStorage;
  uint64_t v44 = _swiftEmptyArrayStorage;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11)
  {
    v29[1] = v2;
    uint64_t v12 = *(void *)(v7 + 72);
    unint64_t v30 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    uint64_t v13 = a1 + v30;
    long long v14 = (long long *)(a2 + 16);
    long long v31 = _swiftEmptyArrayStorage;
    uint64_t v34 = (char *)v29 - v8;
    uint64_t v33 = v12;
    while (1)
    {
      sub_10012D068(v13, (uint64_t)v9, type metadata accessor for Attachment);
      long long v16 = &v9[*(int *)(v35 + 44)];
      uint64_t v17 = *(void *)v16;
      uint64_t v18 = *((void *)v16 + 1);
      long long v19 = v14[3];
      long long v38 = v14[2];
      long long v39 = v19;
      long long v40 = v14[4];
      char v41 = *((unsigned char *)v14 + 80);
      long long v20 = v14[1];
      long long v36 = *v14;
      long long v37 = v20;
      swift_bridgeObjectRetain();
      sub_1000063C0(&qword_1001FC958);
      Binding.wrappedValue.getter();
      uint64_t v22 = v42;
      uint64_t v21 = v43;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v18)
      {
        if (v17 == v22 && v18 == v21)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v9 = v34;
          uint64_t v15 = v33;
LABEL_14:
          sub_100035B34((uint64_t)v9, v32);
          uint64_t v25 = v31;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            sub_100129248(0, v25[2] + 1, 1);
          }
          int v26 = v44;
          unint64_t v28 = v44[2];
          unint64_t v27 = v44[3];
          if (v28 >= v27 >> 1)
          {
            sub_100129248(v27 > 1, v28 + 1, 1);
            int v26 = v44;
          }
          v26[2] = v28 + 1;
          long long v31 = v26;
          sub_100035B34(v32, (uint64_t)v26 + v30 + v28 * v15);
          goto LABEL_5;
        }
        char v24 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v9 = v34;
        uint64_t v15 = v33;
        if (v24) {
          goto LABEL_14;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v9 = v34;
        uint64_t v15 = v33;
      }
      sub_10012D0D0((uint64_t)v9, type metadata accessor for Attachment);
LABEL_5:
      v13 += v15;
      if (!--v11) {
        return v44;
      }
    }
  }
  return result;
}

unint64_t sub_10012CF54()
{
  unint64_t result = qword_100204030;
  if (!qword_100204030)
  {
    sub_100006C14(&qword_100204020);
    sub_10012D200(&qword_100204038, (void (*)(uint64_t))type metadata accessor for FileView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100204030);
  }
  return result;
}

uint64_t sub_10012D000(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000063C0(&qword_100203FF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10012D068(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10012D0D0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10012D130()
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 137, 7);
}

uint64_t sub_10012D1A8()
{
  return Binding.wrappedValue.setter();
}

uint64_t sub_10012D200(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10012D248()
{
  return sub_100027F2C(&qword_100204068, &qword_100204070);
}

id sub_10012D284()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000063C0(&qword_100204150);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v17[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_1000063C0(&qword_1002049C0);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  long long v10 = &v17[-v9];
  type metadata accessor for SlotAttachmentView(0);
  id v11 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v12 = type metadata accessor for FileView(0);
  sub_10012D068(v1 + *(int *)(v12 + 20), (uint64_t)v10, type metadata accessor for Attachment);
  uint64_t v13 = type metadata accessor for Attachment(0);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v10, 0, 1, v13);
  uint64_t v14 = (uint64_t)v11 + OBJC_IVAR____TtC21WritingToolsUIService18SlotAttachmentView_attachment;
  swift_beginAccess();
  sub_100008DD4(v14, (uint64_t)v8, &qword_1002049C0);
  swift_beginAccess();
  sub_100094220((uint64_t)v10, v14);
  swift_endAccess();
  sub_10012D878((uint64_t)v8);
  sub_10002784C((uint64_t)v10, &qword_1002049C0);
  sub_10002784C((uint64_t)v8, &qword_1002049C0);
  sub_10012D068(v1, (uint64_t)v4, type metadata accessor for FileView);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v4, 0, 1, v12);
  uint64_t v15 = (uint64_t)v11 + OBJC_IVAR____TtC21WritingToolsUIService18SlotAttachmentView_slotFileView;
  swift_beginAccess();
  sub_10012FDE8((uint64_t)v4, v15);
  swift_endAccess();
  return v11;
}

uint64_t sub_10012D514(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10012FE50(&qword_100204158, (void (*)(uint64_t))type metadata accessor for FileView);

  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_10012D5A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10012FE50(&qword_100204158, (void (*)(uint64_t))type metadata accessor for FileView);

  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_10012D63C()
{
}

char *sub_10012D694(double a1, double a2, double a3, double a4)
{
  ObjectType = (objc_class *)swift_getObjectType();
  long long v10 = &v4[OBJC_IVAR____TtC21WritingToolsUIService18SlotAttachmentView_slotFileView];
  uint64_t v11 = type metadata accessor for FileView(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  *(void *)&v4[OBJC_IVAR____TtC21WritingToolsUIService18SlotAttachmentView_linkView] = 0;
  uint64_t v12 = self;
  uint64_t v13 = v4;
  uint64_t result = (char *)[v12 roundButtonWithStyle:0];
  if (result)
  {
    *(void *)&v13[OBJC_IVAR____TtC21WritingToolsUIService18SlotAttachmentView_closeButton] = result;
    uint64_t v15 = &v13[OBJC_IVAR____TtC21WritingToolsUIService18SlotAttachmentView_attachment];
    uint64_t v16 = type metadata accessor for Attachment(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);

    v18.receiver = v13;
    v18.super_class = ObjectType;
    uint64_t v17 = (char *)[v18 initWithFrame:a1, a2, a3, a4];
    [*(id *)&v17[OBJC_IVAR____TtC21WritingToolsUIService18SlotAttachmentView_closeButton] addTarget:v17 action:"didTapCloseButton" forControlEvents:64];
    return v17;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10012D878(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1000063C0(&qword_1001FC4F0);
  __chkstk_darwin(v4 - 8);
  uint64_t v50 = (uint64_t)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (int *)type metadata accessor for Attachment(0);
  uint64_t v7 = *((void *)v6 - 1);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v51 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v50 - v10;
  uint64_t v12 = sub_1000063C0(&qword_1002049C0);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v15 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v50 - v16;
  uint64_t v18 = sub_1000063C0(&qword_1001FC4F8);
  uint64_t v19 = v18 - 8;
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v50 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v52 = v2;
  uint64_t v22 = (uint64_t)&v2[OBJC_IVAR____TtC21WritingToolsUIService18SlotAttachmentView_attachment];
  swift_beginAccess();
  uint64_t v23 = (uint64_t)&v21[*(int *)(v19 + 56)];
  sub_100008DD4(v22, (uint64_t)v21, &qword_1002049C0);
  sub_100008DD4(a1, v23, &qword_1002049C0);
  char v24 = *(unsigned int (**)(uint64_t, uint64_t, int *))(v7 + 48);
  if (v24((uint64_t)v21, 1, v6) == 1)
  {
    if (v24(v23, 1, v6) == 1)
    {
      uint64_t v25 = (uint64_t)v21;
      return sub_10002784C(v25, &qword_1002049C0);
    }
  }
  else
  {
    sub_100008DD4((uint64_t)v21, (uint64_t)v17, &qword_1002049C0);
    if (v24(v23, 1, v6) != 1)
    {
      sub_100035B34(v23, (uint64_t)v11);
      char v30 = sub_1001446E0((uint64_t)v17, (uint64_t)v11);
      sub_10012FE98((uint64_t)v11, type metadata accessor for Attachment);
      sub_10012FE98((uint64_t)v17, type metadata accessor for Attachment);
      uint64_t result = sub_10002784C((uint64_t)v21, &qword_1002049C0);
      if (v30) {
        return result;
      }
      goto LABEL_7;
    }
    sub_10012FE98((uint64_t)v17, type metadata accessor for Attachment);
  }
  sub_10002784C((uint64_t)v21, &qword_1001FC4F8);
LABEL_7:
  uint64_t v26 = OBJC_IVAR____TtC21WritingToolsUIService18SlotAttachmentView_linkView;
  unint64_t v27 = v52;
  unint64_t v28 = *(void **)&v52[OBJC_IVAR____TtC21WritingToolsUIService18SlotAttachmentView_linkView];
  if (v28)
  {
    [v28 removeFromSuperview];
    uint64_t v29 = *(void **)&v27[v26];
  }
  else
  {
    uint64_t v29 = 0;
  }
  uint64_t v32 = (uint64_t)v51;
  *(void *)&v27[v26] = 0;

  sub_100008DD4(v22, (uint64_t)v15, &qword_1002049C0);
  if (v24((uint64_t)v15, 1, v6) == 1)
  {
    uint64_t v25 = (uint64_t)v15;
    return sub_10002784C(v25, &qword_1002049C0);
  }
  sub_100035B34((uint64_t)v15, v32);
  id v33 = [objc_allocWithZone((Class)LPLinkMetadata) init];
  id v34 = [objc_allocWithZone((Class)LPFileMetadata) init];
  swift_bridgeObjectRetain();
  NSString v35 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v34 setName:v35];

  uint64_t v36 = v50;
  sub_100008DD4(v32 + v6[6], v50, &qword_1001FC4F0);
  uint64_t v37 = type metadata accessor for UTType();
  uint64_t v38 = *(void *)(v37 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37) == 1)
  {
    sub_10002784C(v36, &qword_1001FC4F0);
    NSString v39 = 0;
  }
  else
  {
    UTType.identifier.getter();
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v36, v37);
    NSString v39 = String._bridgeToObjectiveC()();
    unint64_t v27 = v52;
    swift_bridgeObjectRelease();
  }
  [v34 setType:v39];

  uint64_t v40 = v32 + v6[7];
  if ((*(unsigned char *)(v40 + 8) & 1) == 0)
  {
    if ((*(void *)v40 & 0x8000000000000000) != 0)
    {
      uint64_t result = _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
      return result;
    }
    [v34 setSize:];
  }
  char v41 = *(void **)(v32 + v6[9]);
  if (v41)
  {
    id v42 = objc_allocWithZone((Class)UIImage);
    id v43 = v41;
    id v44 = [v42 initWithCGImage:v43];
    id v45 = [objc_allocWithZone((Class)LPImage) initWithPlatformImage:v44];

    [v34 setThumbnail:v45];
  }
  id v46 = [objc_allocWithZone((Class)LPSharedObjectMetadata) init];
  [v46 setSpecialization:v34];
  [v33 setSpecialization:v46];
  id v47 = [objc_allocWithZone((Class)LPLinkView) initWithMetadata:v33];
  [v47 _setBytesLoaded:[v34 size]];
  [v47 _setDisableTapGesture:1];
  [v47 _setDisableHighlightGesture:1];
  id v48 = [self clearColor];
  [v47 _setOverrideBackgroundColor:v48];

  [v47 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v27 addSubview:v47];
  [v27 addSubview:*(void *)&v27[OBJC_IVAR____TtC21WritingToolsUIService18SlotAttachmentView_closeButton]];
  id v49 = v47;
  [v27 bounds];
  [v49 setBounds:];

  return sub_10012FE98(v32, type metadata accessor for Attachment);
}

void sub_10012E02C()
{
  uint64_t v1 = type metadata accessor for FileView(0);
  uint64_t v28 = *(void *)(v1 - 8);
  uint64_t v29 = v1;
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Attachment(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000063C0((uint64_t *)&unk_100201520);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for URL();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = v0 + OBJC_IVAR____TtC21WritingToolsUIService18SlotAttachmentView_attachment;
  swift_beginAccess();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v15, 1, v4))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
  }
  else
  {
    unint64_t v27 = v3;
    sub_10012D068(v15, (uint64_t)v7, type metadata accessor for Attachment);
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v10, v7, v11);
    sub_10012FE98((uint64_t)v7, type metadata accessor for Attachment);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) != 1)
    {
      uint64_t v20 = (uint64_t)v14;
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
      uint64_t v21 = v0 + OBJC_IVAR____TtC21WritingToolsUIService18SlotAttachmentView_slotFileView;
      swift_beginAccess();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v21, 1, v29))
      {
        (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
        swift_endAccess();
      }
      else
      {
        uint64_t v22 = (uint64_t)v27;
        sub_10012D068(v21, (uint64_t)v27, type metadata accessor for FileView);
        swift_endAccess();
        char v23 = *(unsigned char *)(v22 + 8);
        uint64_t v24 = swift_retain();
        uint64_t v25 = sub_100020F7C(v24, v23);
        swift_release();
        sub_10012FE98(v22, type metadata accessor for FileView);
        swift_getKeyPath();
        uint64_t v30 = v25;
        sub_10012FE50((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
        ObservationRegistrar.access<A, B>(_:keyPath:)();
        swift_release();
        swift_retain();
        swift_release();
        sub_10013BC50(v20);
        swift_release();
        (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v20, v11);
      }
      return;
    }
  }
  sub_10002784C((uint64_t)v10, (uint64_t *)&unk_100201520);
  if (qword_1001FAC28 != -1) {
    swift_once();
  }
  uint64_t v16 = type metadata accessor for Logger();
  sub_10000EBE8(v16, (uint64_t)qword_100212770);
  uint64_t v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v19 = 0;
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "Deleting attachment failed as attachment is nil", v19, 2u);
    swift_slowDealloc();
  }
}

uint64_t sub_10012E6FC()
{
  return type metadata accessor for SlotAttachmentView(0);
}

uint64_t type metadata accessor for SlotAttachmentView(uint64_t a1)
{
  return sub_10005AFA8(a1, (uint64_t *)&unk_1002040A0);
}

void sub_10012E724()
{
  sub_10012E85C(319, &qword_1002040B0, (void (*)(uint64_t))type metadata accessor for FileView);
  if (v0 <= 0x3F)
  {
    sub_10012E85C(319, (unint64_t *)&qword_1001FC4E8, (void (*)(uint64_t))type metadata accessor for Attachment);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t type metadata accessor for FileView(uint64_t a1)
{
  return sub_10005AFA8(a1, qword_100204118);
}

void sub_10012E85C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void *sub_10012E8B0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v22 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v22 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    char v5 = *((unsigned char *)a2 + 8);
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = v5;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = a1 + v6;
    uint64_t v8 = (uint64_t)a2 + v6;
    uint64_t v9 = type metadata accessor for URL();
    uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_retain();
    v10(v7, v8, v9);
    uint64_t v11 = (int *)type metadata accessor for Attachment(0);
    uint64_t v12 = v11[5];
    uint64_t v13 = (void *)(v7 + v12);
    uint64_t v14 = (void *)(v8 + v12);
    uint64_t v15 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v15;
    uint64_t v16 = v11[6];
    __dst = (void *)(v7 + v16);
    uint64_t v17 = (const void *)(v8 + v16);
    uint64_t v18 = type metadata accessor for UTType();
    uint64_t v19 = *(void *)(v18 - 8);
    uint64_t v20 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v19 + 48);
    swift_bridgeObjectRetain();
    if (v20(v17, 1, v18))
    {
      uint64_t v21 = sub_1000063C0(&qword_1001FC4F0);
      memcpy(__dst, v17, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v19 + 16))(__dst, v17, v18);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(__dst, 0, 1, v18);
    }
    uint64_t v23 = v11[7];
    uint64_t v24 = v7 + v23;
    uint64_t v25 = v8 + v23;
    *(void *)uint64_t v24 = *(void *)v25;
    *(unsigned char *)(v24 + 8) = *(unsigned char *)(v25 + 8);
    uint64_t v26 = v11[8];
    unint64_t v27 = (void *)(v7 + v26);
    uint64_t v28 = (void *)(v8 + v26);
    uint64_t v29 = v28[1];
    *unint64_t v27 = *v28;
    v27[1] = v29;
    uint64_t v30 = v11[9];
    long long v31 = *(void **)(v8 + v30);
    *(void *)(v7 + v30) = v31;
    uint64_t v32 = v11[10];
    id v33 = (void *)(v7 + v32);
    id v34 = (const void *)(v8 + v32);
    swift_bridgeObjectRetain();
    id v35 = v31;
    uint64_t v36 = sub_1000063C0(&qword_1002040B8);
    uint64_t v37 = *(void *)(v36 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v37 + 48))(v34, 1, v36))
    {
      uint64_t v38 = type metadata accessor for Attachment.UploadState(0);
      memcpy(v33, v34, *(void *)(*(void *)(v38 - 8) + 64));
    }
    else
    {
      uint64_t v39 = type metadata accessor for DocumentResourceIdentifier();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v39 - 8) + 16))(v33, v34, v39);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v37 + 56))(v33, 0, 1, v36);
    }
    uint64_t v40 = v11[11];
    char v41 = (void *)(v7 + v40);
    id v42 = (void *)(v8 + v40);
    uint64_t v43 = v42[1];
    void *v41 = *v42;
    v41[1] = v43;
    swift_bridgeObjectRetain();
  }
  return v3;
}

uint64_t sub_10012EC08(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = (int *)type metadata accessor for Attachment(0);
  swift_bridgeObjectRelease();
  uint64_t v7 = v4 + v6[6];
  uint64_t v8 = type metadata accessor for UTType();
  uint64_t v9 = *(void *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }
  swift_bridgeObjectRelease();

  uint64_t v10 = v4 + v6[10];
  uint64_t v11 = sub_1000063C0(&qword_1002040B8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 1, v11))
  {
    uint64_t v12 = type metadata accessor for DocumentResourceIdentifier();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v10, v12);
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_10012EDD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = type metadata accessor for URL();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);
  swift_retain();
  v8(v5, v6, v7);
  uint64_t v9 = (int *)type metadata accessor for Attachment(0);
  uint64_t v10 = v9[5];
  uint64_t v11 = (void *)(v5 + v10);
  uint64_t v12 = (void *)(v6 + v10);
  uint64_t v13 = v12[1];
  *uint64_t v11 = *v12;
  v11[1] = v13;
  uint64_t v14 = v9[6];
  uint64_t v15 = (void *)(v5 + v14);
  uint64_t v16 = (const void *)(v6 + v14);
  uint64_t v17 = type metadata accessor for UTType();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48);
  swift_bridgeObjectRetain();
  if (v19(v16, 1, v17))
  {
    uint64_t v20 = sub_1000063C0(&qword_1001FC4F0);
    memcpy(v15, v16, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v18 + 16))(v15, v16, v17);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  uint64_t v21 = v9[7];
  uint64_t v22 = v5 + v21;
  uint64_t v23 = v6 + v21;
  *(void *)uint64_t v22 = *(void *)v23;
  *(unsigned char *)(v22 + 8) = *(unsigned char *)(v23 + 8);
  uint64_t v24 = v9[8];
  uint64_t v25 = (void *)(v5 + v24);
  uint64_t v26 = (void *)(v6 + v24);
  uint64_t v27 = v26[1];
  *uint64_t v25 = *v26;
  v25[1] = v27;
  uint64_t v28 = v9[9];
  uint64_t v29 = *(void **)(v6 + v28);
  *(void *)(v5 + v28) = v29;
  uint64_t v30 = v9[10];
  long long v31 = (void *)(v5 + v30);
  uint64_t v32 = (const void *)(v6 + v30);
  swift_bridgeObjectRetain();
  id v33 = v29;
  uint64_t v34 = sub_1000063C0(&qword_1002040B8);
  uint64_t v35 = *(void *)(v34 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v35 + 48))(v32, 1, v34))
  {
    uint64_t v36 = type metadata accessor for Attachment.UploadState(0);
    memcpy(v31, v32, *(void *)(*(void *)(v36 - 8) + 64));
  }
  else
  {
    uint64_t v37 = type metadata accessor for DocumentResourceIdentifier();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v37 - 8) + 16))(v31, v32, v37);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v35 + 56))(v31, 0, 1, v34);
  }
  uint64_t v38 = v9[11];
  uint64_t v39 = (void *)(v5 + v38);
  uint64_t v40 = (void *)(v6 + v38);
  uint64_t v41 = v40[1];
  *uint64_t v39 = *v40;
  v39[1] = v41;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_10012F0D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v6;
  swift_retain();
  swift_release();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v50 = a1;
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = (int *)type metadata accessor for Attachment(0);
  uint64_t v12 = v11[5];
  uint64_t v13 = (void *)(v8 + v12);
  uint64_t v14 = (void *)(v9 + v12);
  *uint64_t v13 = *v14;
  v13[1] = v14[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = v11[6];
  uint64_t v16 = (void *)(v8 + v15);
  uint64_t v17 = (void *)(v9 + v15);
  uint64_t v18 = type metadata accessor for UTType();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v19 + 48);
  int v21 = v20(v16, 1, v18);
  int v22 = v20(v17, 1, v18);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(void *, void *, uint64_t))(v19 + 16))(v16, v17, v18);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v22)
  {
    (*(void (**)(void *, uint64_t))(v19 + 8))(v16, v18);
LABEL_6:
    uint64_t v23 = sub_1000063C0(&qword_1001FC4F0);
    memcpy(v16, v17, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v19 + 24))(v16, v17, v18);
LABEL_7:
  uint64_t v24 = v11[7];
  uint64_t v25 = v8 + v24;
  uint64_t v26 = (uint64_t *)(v9 + v24);
  uint64_t v27 = *v26;
  *(unsigned char *)(v25 + 8) = *((unsigned char *)v26 + 8);
  *(void *)uint64_t v25 = v27;
  uint64_t v28 = v11[8];
  uint64_t v29 = (void *)(v8 + v28);
  uint64_t v30 = (void *)(v9 + v28);
  *uint64_t v29 = *v30;
  v29[1] = v30[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v31 = v11[9];
  uint64_t v32 = *(void **)(v8 + v31);
  id v33 = *(void **)(v9 + v31);
  *(void *)(v8 + v31) = v33;
  id v34 = v33;

  uint64_t v35 = v11[10];
  uint64_t v36 = (void *)(v8 + v35);
  uint64_t v37 = (void *)(v9 + v35);
  uint64_t v38 = sub_1000063C0(&qword_1002040B8);
  uint64_t v39 = *(void *)(v38 - 8);
  uint64_t v40 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v39 + 48);
  int v41 = v40(v36, 1, v38);
  int v42 = v40(v37, 1, v38);
  if (!v41)
  {
    if (!v42)
    {
      uint64_t v49 = type metadata accessor for DocumentResourceIdentifier();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v49 - 8) + 24))(v36, v37, v49);
      goto LABEL_13;
    }
    sub_10002784C((uint64_t)v36, &qword_1002040B8);
    goto LABEL_12;
  }
  if (v42)
  {
LABEL_12:
    uint64_t v44 = type metadata accessor for Attachment.UploadState(0);
    memcpy(v36, v37, *(void *)(*(void *)(v44 - 8) + 64));
    goto LABEL_13;
  }
  uint64_t v43 = type metadata accessor for DocumentResourceIdentifier();
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v43 - 8) + 16))(v36, v37, v43);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
LABEL_13:
  uint64_t v45 = v11[11];
  id v46 = (void *)(v8 + v45);
  id v47 = (void *)(v9 + v45);
  *id v46 = *v47;
  v46[1] = v47[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v50;
}

uint64_t sub_10012F4F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  uint64_t v8 = (int *)type metadata accessor for Attachment(0);
  *(_OWORD *)(v5 + v8[5]) = *(_OWORD *)(v6 + v8[5]);
  uint64_t v9 = v8[6];
  uint64_t v10 = (void *)(v5 + v9);
  uint64_t v11 = (const void *)(v6 + v9);
  uint64_t v12 = type metadata accessor for UTType();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    uint64_t v14 = sub_1000063C0(&qword_1001FC4F0);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 32))(v10, v11, v12);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  uint64_t v15 = v8[7];
  uint64_t v16 = v5 + v15;
  uint64_t v17 = v6 + v15;
  *(void *)uint64_t v16 = *(void *)v17;
  *(unsigned char *)(v16 + 8) = *(unsigned char *)(v17 + 8);
  *(_OWORD *)(v5 + v8[8]) = *(_OWORD *)(v6 + v8[8]);
  *(void *)(v5 + v8[9]) = *(void *)(v6 + v8[9]);
  uint64_t v18 = v8[10];
  uint64_t v19 = (void *)(v5 + v18);
  uint64_t v20 = (const void *)(v6 + v18);
  uint64_t v21 = sub_1000063C0(&qword_1002040B8);
  uint64_t v22 = *(void *)(v21 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
  {
    uint64_t v23 = type metadata accessor for Attachment.UploadState(0);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    uint64_t v24 = type metadata accessor for DocumentResourceIdentifier();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v24 - 8) + 32))(v19, v20, v24);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  }
  *(_OWORD *)(v5 + v8[11]) = *(_OWORD *)(v6 + v8[11]);
  return a1;
}

uint64_t sub_10012F7B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v6;
  swift_release();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v53 = a1;
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = (int *)type metadata accessor for Attachment(0);
  uint64_t v12 = v11[5];
  uint64_t v13 = (void *)(v8 + v12);
  uint64_t v14 = (uint64_t *)(v9 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = v11[6];
  uint64_t v18 = (void *)(v8 + v17);
  uint64_t v19 = (void *)(v9 + v17);
  uint64_t v20 = type metadata accessor for UTType();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v21 + 48);
  int v23 = v22(v18, 1, v20);
  int v24 = v22(v19, 1, v20);
  if (v23)
  {
    if (!v24)
    {
      (*(void (**)(void *, void *, uint64_t))(v21 + 32))(v18, v19, v20);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v24)
  {
    (*(void (**)(void *, uint64_t))(v21 + 8))(v18, v20);
LABEL_6:
    uint64_t v25 = sub_1000063C0(&qword_1001FC4F0);
    memcpy(v18, v19, *(void *)(*(void *)(v25 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v21 + 40))(v18, v19, v20);
LABEL_7:
  uint64_t v26 = v11[7];
  uint64_t v27 = v8 + v26;
  uint64_t v28 = v9 + v26;
  *(void *)uint64_t v27 = *(void *)v28;
  *(unsigned char *)(v27 + 8) = *(unsigned char *)(v28 + 8);
  uint64_t v29 = v11[8];
  uint64_t v30 = (void *)(v8 + v29);
  uint64_t v31 = (uint64_t *)(v9 + v29);
  uint64_t v33 = *v31;
  uint64_t v32 = v31[1];
  *uint64_t v30 = v33;
  v30[1] = v32;
  swift_bridgeObjectRelease();
  uint64_t v34 = v11[9];
  uint64_t v35 = *(void **)(v8 + v34);
  *(void *)(v8 + v34) = *(void *)(v9 + v34);

  uint64_t v36 = v11[10];
  uint64_t v37 = (void *)(v8 + v36);
  uint64_t v38 = (void *)(v9 + v36);
  uint64_t v39 = sub_1000063C0(&qword_1002040B8);
  uint64_t v40 = *(void *)(v39 - 8);
  int v41 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v40 + 48);
  int v42 = v41(v37, 1, v39);
  int v43 = v41(v38, 1, v39);
  if (!v42)
  {
    if (!v43)
    {
      uint64_t v52 = type metadata accessor for DocumentResourceIdentifier();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v52 - 8) + 40))(v37, v38, v52);
      goto LABEL_13;
    }
    sub_10002784C((uint64_t)v37, &qword_1002040B8);
    goto LABEL_12;
  }
  if (v43)
  {
LABEL_12:
    uint64_t v45 = type metadata accessor for Attachment.UploadState(0);
    memcpy(v37, v38, *(void *)(*(void *)(v45 - 8) + 64));
    goto LABEL_13;
  }
  uint64_t v44 = type metadata accessor for DocumentResourceIdentifier();
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v44 - 8) + 32))(v37, v38, v44);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
LABEL_13:
  uint64_t v46 = v11[11];
  id v47 = (void *)(v8 + v46);
  id v48 = (uint64_t *)(v9 + v46);
  uint64_t v50 = *v48;
  uint64_t v49 = v48[1];
  void *v47 = v50;
  v47[1] = v49;
  swift_bridgeObjectRelease();
  return v53;
}

uint64_t sub_10012FB94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10012FBA8);
}

uint64_t sub_10012FBA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 8);
    if (v4 > 1) {
      return (v4 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = type metadata accessor for Attachment(0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_10012FC50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10012FC64);
}

uint64_t sub_10012FC64(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 254)
  {
    *(unsigned char *)(result + 8) = -(char)a2;
  }
  else
  {
    uint64_t v7 = type metadata accessor for Attachment(0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_10012FD08()
{
  uint64_t result = type metadata accessor for Attachment(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10012FDA0()
{
  return sub_10012FE50(&qword_100204038, (void (*)(uint64_t))type metadata accessor for FileView);
}

uint64_t sub_10012FDE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000063C0(&qword_100204150);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10012FE50(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10012FE98(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_10012FF00()
{
  unint64_t v1 = &v0[OBJC_IVAR____TtC21WritingToolsUIService18SlotAttachmentView_slotFileView];
  uint64_t v2 = type metadata accessor for FileView(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  *(void *)&v0[OBJC_IVAR____TtC21WritingToolsUIService18SlotAttachmentView_linkView] = 0;
  id v3 = [self roundButtonWithStyle:0];
  if (!v3) {
    __break(1u);
  }
  *(void *)&v0[OBJC_IVAR____TtC21WritingToolsUIService18SlotAttachmentView_closeButton] = v3;
  uint64_t v4 = &v0[OBJC_IVAR____TtC21WritingToolsUIService18SlotAttachmentView_attachment];
  uint64_t v5 = type metadata accessor for Attachment(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_100130040@<X0>(uint64_t (*a1)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v87 = a3;
  long long v86 = a2;
  char v85 = a1;
  uint64_t v91 = a4;
  uint64_t v7 = sub_1000063C0(&qword_100204180);
  __chkstk_darwin(v7 - 8);
  long long v78 = (uint64_t *)((char *)&v75 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v89 = sub_1000063C0(&qword_100204188) - 8;
  uint64_t v9 = __chkstk_darwin(v89);
  uint64_t v88 = (uint64_t)&v75 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v90 = (uint64_t)&v75 - v11;
  uint64_t v12 = sub_1000063C0(&qword_1001FBA90);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v75 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1000063C0(&qword_100204190);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v75 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1000063C0(&qword_100204198);
  uint64_t v19 = v18 - 8;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v75 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  int v24 = (char *)&v75 - v23;
  uint64_t v84 = (uint64_t)&v75 - v23;
  *(void *)uint64_t v17 = static VerticalAlignment.center.getter();
  *((void *)v17 + 1) = 0;
  v17[16] = 1;
  uint64_t v25 = sub_1000063C0(&qword_1002041A0);
  sub_1001307F0((uint64_t)a1, (uint64_t)a2, a3, (uint64_t)&v17[*(int *)(v25 + 44)]);
  uint64_t v26 = static Color.blue.getter();
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
  double v27 = v93;
  uint64_t v28 = v95;
  uint64_t v29 = v96;
  uint64_t v30 = v97;
  swift_retain();
  uint64_t v31 = static Alignment.center.getter();
  uint64_t v33 = v32;
  sub_100008DD4((uint64_t)v17, (uint64_t)v22, &qword_100204190);
  swift_release();
  uint64_t v34 = &v22[*(int *)(v19 + 44)];
  long long v92 = v22;
  *(double *)uint64_t v34 = v27 * 0.5;
  *((double *)v34 + 1) = v27;
  *((void *)v34 + 2) = v94;
  *((void *)v34 + 3) = v28;
  *((void *)v34 + 4) = v29;
  *((void *)v34 + 5) = v30;
  *((void *)v34 + 6) = v26;
  *((_WORD *)v34 + 28) = 256;
  *((void *)v34 + 8) = v31;
  *((void *)v34 + 9) = v33;
  sub_10002784C((uint64_t)v17, &qword_100204190);
  sub_100026FD0((uint64_t)v22, (uint64_t)v24, &qword_100204198);
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v35 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v37 = v36;
  LOBYTE(v29) = v38 & 1;
  uint64_t v39 = Text.bold()();
  uint64_t v41 = v40;
  LOBYTE(v26) = v42 & 1;
  sub_100026F18(v35, v37, v29);
  swift_bridgeObjectRelease();
  uint64_t v43 = type metadata accessor for Font.Design();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v14, 1, 1, v43);
  static Font.system(size:weight:design:)();
  sub_10002784C((uint64_t)v14, &qword_1001FBA90);
  uint64_t v83 = Text.font(_:)();
  uint64_t v81 = v44;
  LOBYTE(v29) = v45;
  uint64_t v82 = v46;
  swift_release();
  int v80 = v29 & 1;
  sub_100026F18(v39, v41, v26);
  swift_bridgeObjectRelease();
  uint64_t v79 = static Color.blue.getter();
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
  double v47 = v98;
  uint64_t v48 = v100;
  uint64_t v49 = v101;
  uint64_t v50 = v102;
  uint64_t v77 = static Alignment.center.getter();
  uint64_t v76 = v51;
  uint64_t v52 = static VerticalAlignment.center.getter();
  uint64_t v53 = (uint64_t)v78;
  uint64_t *v78 = v52;
  *(void *)(v53 + 8) = 0;
  *(unsigned char *)(v53 + 16) = 1;
  uint64_t v54 = sub_1000063C0(&qword_1002041A8);
  sub_100131304(v85, v86, v87, (_OWORD *)(v53 + *(int *)(v54 + 44)));
  uint64_t v55 = static Color.blue.getter();
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
  double v56 = v103;
  uint64_t v57 = v105;
  uint64_t v58 = v106;
  uint64_t v59 = v107;
  swift_retain();
  uint64_t v60 = static Alignment.center.getter();
  uint64_t v62 = v61;
  uint64_t v63 = v88;
  sub_100008DD4(v53, v88, &qword_100204180);
  swift_release();
  uint64_t v64 = v63 + *(int *)(v89 + 44);
  *(double *)uint64_t v64 = v56 * 0.5;
  *(double *)(v64 + 8) = v56;
  *(void *)(v64 + 16) = v104;
  *(void *)(v64 + 24) = v57;
  *(void *)(v64 + 32) = v58;
  *(void *)(v64 + 40) = v59;
  *(void *)(v64 + 48) = v55;
  *(_WORD *)(v64 + 56) = 256;
  *(void *)(v64 + 64) = v60;
  *(void *)(v64 + 72) = v62;
  sub_10002784C(v53, &qword_100204180);
  uint64_t v65 = v90;
  sub_100026FD0(v63, v90, &qword_100204188);
  uint64_t v66 = v84;
  uint64_t v67 = (uint64_t)v92;
  sub_100008DD4(v84, (uint64_t)v92, &qword_100204198);
  sub_100008DD4(v65, v63, &qword_100204188);
  uint64_t v68 = v91;
  sub_100008DD4(v67, v91, &qword_100204198);
  uint64_t v69 = sub_1000063C0(&qword_1002041B0);
  uint64_t v70 = v68 + *(int *)(v69 + 48);
  uint64_t v71 = v83;
  uint64_t v72 = v81;
  *(void *)uint64_t v70 = v83;
  *(void *)(v70 + 8) = v72;
  LOBYTE(v39) = v80;
  *(unsigned char *)(v70 + 16) = v80;
  *(void *)(v70 + 24) = v82;
  *(double *)(v70 + 32) = v47 * 0.5;
  *(double *)(v70 + 40) = v47;
  *(void *)(v70 + 48) = v99;
  *(void *)(v70 + 56) = v48;
  *(void *)(v70 + 64) = v49;
  *(void *)(v70 + 72) = v50;
  *(void *)(v70 + 80) = v79;
  *(_WORD *)(v70 + 88) = 256;
  uint64_t v73 = v76;
  *(void *)(v70 + 96) = v77;
  *(void *)(v70 + 104) = v73;
  sub_100008DD4(v63, v68 + *(int *)(v69 + 64), &qword_100204188);
  sub_10002783C(v71, v72, v39);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_10002784C(v65, &qword_100204188);
  sub_10002784C(v66, &qword_100204198);
  sub_10002784C(v63, &qword_100204188);
  sub_100026F18(v71, v72, v39);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_10002784C((uint64_t)v92, &qword_100204198);
}

void sub_1001307F0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  long long v86 = (char *)a3;
  uint64_t v82 = a4;
  uint64_t v6 = sub_1000063C0(&qword_1001FBDE0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v92 = v6;
  uint64_t v93 = v7;
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v79 = (char *)&v78 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  long long v78 = (char *)&v78 - v10;
  uint64_t v11 = sub_1000063C0(&qword_1001FBDE8);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v81 = (char *)&v78 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v91 = (char *)&v78 - v14;
  uint64_t v15 = type metadata accessor for Divider();
  uint64_t v89 = *(void *)(v15 - 8);
  unint64_t v90 = v15;
  __chkstk_darwin(v15);
  uint64_t v87 = (char *)&v78 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = sub_1000063C0(&qword_1001FBD88) - 8;
  uint64_t v17 = __chkstk_darwin(v88);
  uint64_t v95 = (char *)&v78 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v94 = (char *)&v78 - v19;
  uint64_t v20 = sub_1000063C0(&qword_1001FBD70);
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v83 = v20;
  uint64_t v84 = v21;
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v78 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v85 = (char *)sub_1000063C0(&qword_1001FBD78);
  uint64_t v24 = *((void *)v85 - 1);
  __chkstk_darwin(v85);
  uint64_t v26 = (char *)&v78 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_1000063C0(&qword_100204210);
  uint64_t v28 = v27 - 8;
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v31 = (char *)&v78 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  uint64_t v33 = (char *)&v78 - v32;
  uint64_t v34 = (void *)swift_allocObject();
  v34[2] = a1;
  v34[3] = a2;
  v34[4] = v86;
  *((void *)&v80 + 1) = a2;
  swift_retain();
  swift_retain();
  *(void *)&long long v80 = a1;
  swift_retain();
  sub_1000063C0(&qword_1001FBDA0);
  sub_10002DED0();
  Button.init(action:label:)();
  LOWORD(v108) = 256;
  sub_100027F2C(&qword_1001FBDB0, &qword_1001FBD70);
  unint64_t v35 = sub_10002DE2C();
  uint64_t v36 = v83;
  View.buttonStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v84 + 8))(v23, v36);
  static Alignment.leading.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v37 = (uint64_t)v85;
  (*(void (**)(char *, char *, char *))(v24 + 16))(v31, v26, v85);
  char v38 = &v31[*(int *)(v28 + 44)];
  long long v39 = v122;
  *(_OWORD *)char v38 = v121;
  *((_OWORD *)v38 + 1) = v39;
  *((_OWORD *)v38 + 2) = v123;
  uint64_t v40 = v26;
  uint64_t v41 = (uint64_t)v94;
  uint64_t v42 = (uint64_t)v95;
  (*(void (**)(char *, uint64_t))(v24 + 8))(v40, v37);
  char v85 = v33;
  long long v86 = v31;
  sub_100026FD0((uint64_t)v31, (uint64_t)v33, &qword_100204210);
  uint64_t v43 = v87;
  Divider.init()();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v45 = v89;
  unint64_t v44 = v90;
  (*(void (**)(uint64_t, char *, unint64_t))(v89 + 16))(v42, v43, v90);
  uint64_t v46 = (_OWORD *)(v42 + *(int *)(v88 + 44));
  long long v47 = v125;
  *uint64_t v46 = v124;
  v46[1] = v47;
  void v46[2] = v126;
  (*(void (**)(char *, unint64_t))(v45 + 8))(v43, v44);
  sub_100026FD0(v42, v41, &qword_1001FBD88);
  uint64_t v48 = type metadata accessor for FeedbackFeatureFlags();
  *((void *)&v109 + 1) = v48;
  *(void *)&long long v110 = sub_100133878((unint64_t *)&unk_1001FDED0, (void (*)(uint64_t))&type metadata accessor for FeedbackFeatureFlags);
  uint64_t v49 = sub_10002E148((uint64_t *)&v108);
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v48 - 8) + 104))(v49, enum case for FeedbackFeatureFlags.CentralizedFeedback(_:), v48);
  LOBYTE(v48) = isFeatureEnabled(_:)();
  sub_100027DBC((uint64_t)&v108);
  if ((v48 & 1) == 0)
  {
    uint64_t v65 = (uint64_t)v91;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v93 + 56))(v91, 1, 1, v92);
LABEL_10:
    uint64_t v71 = (uint64_t)v81;
    uint64_t v72 = v82;
    uint64_t v73 = (uint64_t)v85;
    uint64_t v74 = (uint64_t)v86;
    sub_100008DD4((uint64_t)v85, (uint64_t)v86, &qword_100204210);
    sub_100008DD4(v41, v42, &qword_1001FBD88);
    sub_100008DD4(v65, v71, &qword_1001FBDE8);
    sub_100008DD4(v74, v72, &qword_100204210);
    uint64_t v75 = v41;
    uint64_t v76 = v71;
    uint64_t v77 = sub_1000063C0(&qword_100204218);
    sub_100008DD4(v42, v72 + *(int *)(v77 + 48), &qword_1001FBD88);
    sub_100008DD4(v76, v72 + *(int *)(v77 + 64), &qword_1001FBDE8);
    sub_10002784C(v65, &qword_1001FBDE8);
    sub_10002784C(v75, &qword_1001FBD88);
    sub_10002784C(v73, &qword_100204210);
    sub_10002784C(v76, &qword_1001FBDE8);
    sub_10002784C(v42, &qword_1001FBD88);
    sub_10002784C(v74, &qword_100204210);
    return;
  }
  unint64_t v90 = v35;
  uint64_t v50 = v80;
  long long v108 = v80;
  uint64_t v51 = *((void *)&v80 + 1);
  sub_1000063C0(&qword_100203D08);
  State.wrappedValue.getter();
  uint64_t v52 = v97;
  swift_getKeyPath();
  *(void *)&long long v108 = v52;
  sub_100133878((unint64_t *)&unk_1001FD2C0, (void (*)(uint64_t))type metadata accessor for QuestionnaireModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  id v53 = *(id *)(v52 + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel__smartReplyConfiguration);
  swift_release();
  id v54 = [v53 baseResponse];

  if (v54) {
  *(void *)&long long v108 = v50;
  }
  *((void *)&v108 + 1) = v51;
  State.wrappedValue.getter();
  uint64_t v55 = v97;
  swift_getKeyPath();
  *(void *)&long long v108 = v55;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  id v56 = *(id *)(v55 + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel__inputContextHistory);
  swift_release();
  id v57 = [v56 tiInputContextHistory];

  uint64_t v59 = v91;
  uint64_t v58 = v92;
  uint64_t v60 = v93;
  if (v57)
  {
    id v61 = [v57 threadIdentifier];

    if (v61)
    {
      uint64_t v62 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v64 = v63;
    }
    else
    {
      uint64_t v62 = 0;
      uint64_t v64 = 0;
    }
    *(void *)&long long v97 = 0x3FF0000000000000;
    State.init(wrappedValue:)();
    long long v66 = v108;
    type metadata accessor for SmartReplyAnalytics();
    swift_allocObject();
    uint64_t v67 = sub_10011A73C(v62, v64);
    long long v109 = 0u;
    long long v110 = 0u;
    long long v111 = 0u;
    long long v112 = 0u;
    *(void *)&long long v113 = 0;
    *((void *)&v113 + 1) = _swiftEmptyArrayStorage;
    *(void *)&long long v114 = _swiftEmptyArrayStorage;
    *((void *)&v114 + 1) = _swiftEmptyArrayStorage;
    uint64_t v116 = 0;
    *(void *)&long long v117 = 0;
    uint64_t v115 = 0;
    BYTE8(v117) = -1;
    BYTE9(v117) = v54 == 0;
    WORD5(v117) = 0;
    BYTE12(v117) = 0;
    uint64_t v118 = v67;
    uint64_t v119 = 0;
    long long v120 = v66;
    long long v105 = v117;
    long long v106 = (unint64_t)v67;
    long long v107 = v66;
    long long v108 = 0u;
    long long v103 = v114;
    long long v104 = 0u;
    long long v101 = 0u;
    long long v102 = v113;
    long long v97 = 0u;
    long long v98 = 0u;
    long long v99 = 0u;
    long long v100 = 0u;
    __int16 v96 = 0;
    sub_10002E1CC();
    uint64_t v68 = v79;
    View.buttonStyle<A>(_:)();
    sub_10002E220((uint64_t)&v108);
    uint64_t v69 = *(void (**)(char *, char *, uint64_t))(v60 + 32);
    uint64_t v70 = v78;
    v69(v78, v68, v58);
    v69(v59, v70, v58);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v60 + 56))(v59, 0, 1, v58);
    uint64_t v41 = (uint64_t)v94;
    uint64_t v42 = (uint64_t)v95;
    uint64_t v65 = (uint64_t)v59;
    goto LABEL_10;
  }
  __break(1u);
}

uint64_t sub_100131304@<X0>(uint64_t (*a1)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)@<X0>, void *a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  uint64_t v69 = a4;
  uint64_t v7 = sub_1000063C0(&qword_1001FBD70);
  uint64_t v8 = *(uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t@<X8>))(v7 - 8);
  uint64_t v73 = v7;
  uint64_t v74 = v8;
  __chkstk_darwin(v7);
  uint64_t v70 = (char *)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = sub_1000063C0(&qword_1001FBD78);
  uint64_t v78 = *(void *)(v72 - 8);
  uint64_t v10 = __chkstk_darwin(v72);
  uint64_t v76 = (char *)&v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v77 = (char *)&v66 - v12;
  uint64_t v13 = type metadata accessor for Divider();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v66 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1000063C0(&qword_1001FBD88);
  uint64_t v18 = v17 - 8;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v66 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v85 = (uint64_t)&v66 - v22;
  uint64_t v23 = (void *)swift_allocObject();
  uint64_t v71 = v23;
  v23[2] = a1;
  v23[3] = a2;
  uint64_t v68 = a2;
  v23[4] = a3;
  v23[5] = 0x4042000000000000;
  swift_retain();
  swift_retain();
  swift_retain();
  static Alignment.trailing.getter();
  _FrameLayout.init(width:height:alignment:)();
  char v24 = v87;
  uint64_t v79 = v86;
  uint64_t v80 = v88;
  LOBYTE(a2) = v89;
  uint64_t v83 = v91;
  uint64_t v84 = v90;
  int v81 = static Edge.Set.trailing.getter();
  EdgeInsets.init(_all:)();
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  int v82 = static Edge.Set.top.getter();
  EdgeInsets.init(_all:)();
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  uint64_t v38 = v37;
  uint64_t v40 = v39;
  char v103 = v24;
  unsigned __int8 v101 = a2;
  unsigned __int8 v98 = 0;
  unsigned __int8 v95 = 0;
  Divider.init()();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v21, v16, v13);
  uint64_t v41 = &v21[*(int *)(v18 + 44)];
  uint64_t v75 = v21;
  long long v42 = v93;
  *(_OWORD *)uint64_t v41 = v92;
  *((_OWORD *)v41 + 1) = v42;
  *((_OWORD *)v41 + 2) = v94;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  sub_100026FD0((uint64_t)v21, v85, &qword_1001FBD88);
  uint64_t v43 = (void *)swift_allocObject();
  unint64_t v44 = v68;
  v43[2] = a1;
  v43[3] = v44;
  v43[4] = a3;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1000063C0(&qword_1001FBDA0);
  sub_10002DED0();
  uint64_t v45 = v70;
  Button.init(action:label:)();
  long long v113 = a1;
  long long v114 = v44;
  sub_1000063C0(&qword_100203D08);
  State.wrappedValue.getter();
  uint64_t v46 = v104;
  swift_getKeyPath();
  long long v113 = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v46;
  sub_100133878((unint64_t *)&qword_1001FD2A0, (void (*)(uint64_t))type metadata accessor for ToolModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  LOBYTE(a2) = *(unsigned char *)(v46 + 88);
  swift_release();
  LOBYTE(v113) = (_BYTE)a2;
  BYTE1(v113) = 1;
  sub_100027F2C(&qword_1001FBDB0, &qword_1001FBD70);
  sub_10002DE2C();
  long long v47 = v76;
  uint64_t v48 = v73;
  View.buttonStyle<A>(_:)();
  (*((void (**)(char *, uint64_t))v74 + 1))(v45, v48);
  uint64_t v50 = v77;
  uint64_t v49 = v78;
  uint64_t v51 = v72;
  (*(void (**)(char *, char *, uint64_t))(v78 + 32))(v77, v47, v72);
  LOBYTE(a1) = v103;
  LOBYTE(v21) = v101;
  LODWORD(v70) = v101;
  LOBYTE(a3) = v98;
  LODWORD(v73) = v98;
  LOBYTE(v14) = v95;
  LODWORD(v68) = v95;
  sub_100008DD4(v85, (uint64_t)v75, &qword_1001FBD88);
  uint64_t v67 = *(void (**)(char *, char *, uint64_t))(v49 + 16);
  v67(v47, v50, v51);
  uint64_t v74 = sub_1001331D0;
  uint64_t v52 = v71;
  *(void *)&long long v104 = sub_1001331D0;
  *((void *)&v104 + 1) = v71;
  *(void *)&long long v105 = v79;
  BYTE8(v105) = (_BYTE)a1;
  *(_DWORD *)((char *)&v105 + 9) = *(_DWORD *)v102;
  HIDWORD(v105) = *(_DWORD *)&v102[3];
  *(void *)&long long v106 = v80;
  BYTE8(v106) = (_BYTE)v21;
  *(_DWORD *)((char *)&v106 + 9) = *(_DWORD *)v100;
  HIDWORD(v106) = *(_DWORD *)&v100[3];
  *(void *)&long long v107 = v84;
  *((void *)&v107 + 1) = v83;
  LOBYTE(v108) = v81;
  DWORD1(v108) = *(_DWORD *)&v99[3];
  *(_DWORD *)((char *)&v108 + 1) = *(_DWORD *)v99;
  *((void *)&v108 + 1) = v26;
  *(void *)&long long v109 = v28;
  *((void *)&v109 + 1) = v30;
  *(void *)&long long v110 = v32;
  BYTE8(v110) = a3;
  *(_DWORD *)((char *)&v110 + 9) = *(_DWORD *)v97;
  HIDWORD(v110) = *(_DWORD *)&v97[3];
  LOBYTE(v111) = v82;
  *(_DWORD *)((char *)&v111 + 1) = *(_DWORD *)v96;
  DWORD1(v111) = *(_DWORD *)&v96[3];
  *((void *)&v111 + 1) = v34;
  *(void *)&v112[0] = v36;
  *((void *)&v112[0] + 1) = v38;
  *(void *)&v112[1] = v40;
  BYTE8(v112[1]) = v14;
  long long v53 = v105;
  id v54 = v69;
  *uint64_t v69 = v104;
  v54[1] = v53;
  long long v55 = v109;
  v54[4] = v108;
  v54[5] = v55;
  long long v56 = v107;
  v54[2] = v106;
  v54[3] = v56;
  long long v57 = v110;
  long long v58 = v111;
  long long v59 = v112[0];
  *(_OWORD *)((char *)v54 + 137) = *(_OWORD *)((char *)v112 + 9);
  v54[7] = v58;
  v54[8] = v59;
  v54[6] = v57;
  uint64_t v60 = (char *)v54;
  uint64_t v61 = sub_1000063C0(&qword_1002041B8);
  uint64_t v62 = (uint64_t)v75;
  sub_100008DD4((uint64_t)v75, (uint64_t)&v60[*(int *)(v61 + 48)], &qword_1001FBD88);
  uint64_t v63 = v76;
  v67(&v60[*(int *)(v61 + 64)], v76, v51);
  sub_100133230((uint64_t)&v104);
  uint64_t v64 = *(void (**)(char *, uint64_t))(v78 + 8);
  swift_retain();
  v64(v77, v51);
  sub_10002784C(v85, &qword_1001FBD88);
  swift_release();
  v64(v63, v51);
  sub_10002784C(v62, &qword_1001FBD88);
  long long v113 = v74;
  long long v114 = v52;
  uint64_t v115 = v79;
  char v116 = (char)a1;
  *(_DWORD *)long long v117 = *(_DWORD *)v102;
  *(_DWORD *)&v117[3] = *(_DWORD *)&v102[3];
  uint64_t v118 = v80;
  char v119 = (char)v70;
  *(_DWORD *)long long v120 = *(_DWORD *)v100;
  *(_DWORD *)&v120[3] = *(_DWORD *)&v100[3];
  uint64_t v121 = v84;
  uint64_t v122 = v83;
  char v123 = v81;
  *(_DWORD *)&v124[3] = *(_DWORD *)&v99[3];
  *(_DWORD *)long long v124 = *(_DWORD *)v99;
  uint64_t v125 = v26;
  uint64_t v126 = v28;
  uint64_t v127 = v30;
  uint64_t v128 = v32;
  char v129 = v73;
  *(_DWORD *)char v130 = *(_DWORD *)v97;
  *(_DWORD *)&v130[3] = *(_DWORD *)&v97[3];
  char v131 = v82;
  *(_DWORD *)uint64_t v132 = *(_DWORD *)v96;
  *(_DWORD *)&v132[3] = *(_DWORD *)&v96[3];
  uint64_t v133 = v34;
  uint64_t v134 = v36;
  uint64_t v135 = v38;
  uint64_t v136 = v40;
  char v137 = (char)v68;
  return sub_1000EE530((uint64_t)&v113);
}

uint64_t sub_100131C08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v45 = a4;
  uint64_t v51 = a1;
  uint64_t v52 = a5;
  uint64_t v50 = type metadata accessor for GeometryProxy();
  uint64_t v43 = *(void *)(v50 - 8);
  uint64_t v48 = *(void *)(v43 + 64);
  __chkstk_darwin(v50);
  uint64_t v46 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = type metadata accessor for InputDashboardQuestionnaireButtonStyle(0);
  __chkstk_darwin(v44);
  uint64_t v10 = (uint64_t *)((char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = sub_1000063C0(&qword_1002041C0);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1000063C0(&qword_1002041C8);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_1000063C0(&qword_1002041D0);
  uint64_t v49 = *(void *)(v47 - 8);
  __chkstk_darwin(v47);
  long long v53 = (char *)&v40 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = a2;
  uint64_t v54 = a2;
  uint64_t v55 = a3;
  uint64_t v56 = a4;
  sub_1000063C0(&qword_1002041D8);
  sub_100133270();
  Button.init(action:label:)();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v17, v14, v11);
  uint64_t v19 = *(int *)(v15 + 36);
  uint64_t v41 = v15;
  uint64_t v20 = &v17[v19];
  long long v21 = v63;
  *(_OWORD *)uint64_t v20 = v62;
  *((_OWORD *)v20 + 1) = v21;
  *((_OWORD *)v20 + 2) = v64;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  uint64_t v57 = a2;
  uint64_t v58 = a3;
  uint64_t v22 = a3;
  sub_1000063C0(&qword_100203D08);
  State.wrappedValue.getter();
  uint64_t v23 = v61;
  swift_getKeyPath();
  uint64_t v57 = v23;
  sub_100133878((unint64_t *)&unk_1001FD2C0, (void (*)(uint64_t))type metadata accessor for QuestionnaireModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  LOBYTE(v11) = *(unsigned char *)(v23 + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel__hasEntries);
  swift_release();
  *uint64_t v10 = swift_getKeyPath();
  sub_1000063C0((uint64_t *)&unk_1001FB730);
  swift_storeEnumTagMultiPayload();
  uint64_t v24 = v44;
  *((unsigned char *)v10 + *(int *)(v44 + 20)) = (v11 & 1) == 0;
  unint64_t v40 = sub_10013339C();
  uint64_t v25 = sub_100133878(&qword_100204208, (void (*)(uint64_t))type metadata accessor for InputDashboardQuestionnaireButtonStyle);
  View.buttonStyle<A>(_:)();
  sub_10013343C((uint64_t)v10);
  sub_10002784C((uint64_t)v17, &qword_1002041C8);
  uint64_t v26 = v42;
  uint64_t v57 = v42;
  uint64_t v58 = v22;
  uint64_t v27 = v22;
  State.wrappedValue.getter();
  uint64_t v28 = v61;
  swift_getKeyPath();
  uint64_t v57 = v28;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  LOBYTE(v11) = *(unsigned char *)(v28 + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireModel__hasEntries);
  swift_release();
  LOBYTE(v61) = v11;
  uint64_t v29 = v43;
  uint64_t v30 = v46;
  uint64_t v31 = v50;
  (*(void (**)(char *, uint64_t, uint64_t))(v43 + 16))(v46, v51, v50);
  uint64_t v32 = v29;
  unint64_t v33 = (*(unsigned __int8 *)(v29 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  unint64_t v34 = (v48 + v33 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v35 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v32 + 32))(v35 + v33, v30, v31);
  uint64_t v36 = (void *)(v35 + v34);
  *uint64_t v36 = v26;
  v36[1] = v27;
  _OWORD v36[2] = v45;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v57 = v41;
  uint64_t v58 = v24;
  unint64_t v59 = v40;
  uint64_t v60 = v25;
  swift_getOpaqueTypeConformance2();
  uint64_t v37 = v53;
  uint64_t v38 = v47;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v37, v38);
}

double sub_1001322E4@<D0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000063C0(&qword_1001FBA90);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Font.Design();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  swift_retain();
  uint64_t v8 = static Font.system(size:weight:design:)();
  sub_10002784C((uint64_t)v6, &qword_1001FBA90);
  uint64_t KeyPath = swift_getKeyPath();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v10 = v15;
  char v11 = v16;
  uint64_t v12 = v17;
  char v13 = v18;
  *(void *)a2 = a1;
  *(void *)(a2 + 8) = KeyPath;
  *(void *)(a2 + 16) = v8;
  *(void *)(a2 + 24) = v10;
  *(unsigned char *)(a2 + 32) = v11;
  *(void *)(a2 + 40) = v12;
  *(unsigned char *)(a2 + 48) = v13;
  double result = *(double *)&v19;
  *(_OWORD *)(a2 + 56) = v19;
  return result;
}

uint64_t sub_100132438(unsigned char *a1, unsigned char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = type metadata accessor for GlobalCoordinateSpace();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t result = __chkstk_darwin(v9);
  char v13 = &v24[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if ((*a1 & 1) == 0)
  {
    if (*a2)
    {
      static CoordinateSpaceProtocol<>.global.getter();
      GeometryProxy.frame<A>(in:)();
      uint64_t v15 = v14;
      uint64_t v17 = v16;
      uint64_t v19 = v18;
      uint64_t v21 = v20;
      (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v13, v9);
      uint64_t v26 = a4;
      uint64_t v27 = a5;
      sub_1000063C0(&qword_100203D08);
      State.wrappedValue.getter();
      uint64_t v22 = v25;
      uint64_t v26 = v15;
      uint64_t v27 = v17;
      uint64_t v28 = v19;
      uint64_t v29 = v21;
      char v30 = 0;
      uint64_t KeyPath = swift_getKeyPath();
      __chkstk_darwin(KeyPath);
      *(void *)&v24[-16] = v22;
      *(void *)&v24[-8] = &v26;
      uint64_t v25 = v22;
      sub_100133878((unint64_t *)&unk_1001FD2C0, (void (*)(uint64_t))type metadata accessor for QuestionnaireModel);
      ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
      swift_release();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_10013265C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, void (*a6)(void))
{
  sub_1000063C0(&qword_100203D08);
  State.wrappedValue.getter();
  char v11 = (void *)swift_allocObject();
  void v11[2] = a1;
  v11[3] = a2;
  v11[4] = a3;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100048D04(a5, 0, a6, (uint64_t)v11);
  swift_release();
  return swift_release();
}

uint64_t sub_100132728()
{
  sub_1000063C0(&qword_100203D08);
  State.wrappedValue.getter();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  uint64_t result = swift_release();
  if (Strong)
  {
    [Strong endWritingTools];
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_10013279C(uint64_t a1, uint64_t a2)
{
  v2[5] = a1;
  v2[6] = a2;
  type metadata accessor for MainActor();
  v2[7] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[8] = v4;
  v2[9] = v3;
  return _swift_task_switch(sub_100132834, v4, v3);
}

uint64_t sub_100132834()
{
  uint64_t v1 = v0[6];
  v0[2] = v0[5];
  v0[3] = v1;
  sub_1000063C0(&qword_100203D08);
  State.wrappedValue.getter();
  v0[10] = v0[4];
  uint64_t v2 = (void *)swift_task_alloc();
  v0[11] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1001328F0;
  return sub_100046F9C();
}

uint64_t sub_1001328F0()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 72);
  uint64_t v3 = *(void *)(v1 + 64);
  return _swift_task_switch(sub_10006F87C, v3, v2);
}

uint64_t sub_100132A34@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for TaskPriority();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000063C0(&qword_100204160);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v1;
  char v11 = *(void **)(v1 + 8);
  uint64_t v12 = *(void *)(v1 + 16);
  sub_100130040(v10, v11, v12, (uint64_t)v9);
  char v13 = (void *)swift_allocObject();
  v13[2] = v10;
  v13[3] = v11;
  v13[4] = v12;
  swift_retain();
  swift_retain();
  swift_retain();
  static TaskPriority.userInitiated.getter();
  uint64_t v14 = (char *)(a1 + *(int *)(sub_1000063C0(&qword_100204178) + 36));
  uint64_t v15 = type metadata accessor for _TaskModifier();
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(&v14[*(int *)(v15 + 20)], v6, v3);
  *(void *)uint64_t v14 = &unk_100204170;
  *((void *)v14 + 1) = v13;
  sub_100008DD4((uint64_t)v9, a1, &qword_100204160);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return sub_10002784C((uint64_t)v9, &qword_100204160);
}

uint64_t sub_100132C20(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, void *a7, void *a8)
{
  uint64_t v16 = sub_1000063C0((uint64_t *)&unk_1001FB400);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000ED74(a1, a2, a3, a4);
  Image.init(systemName:)();
  uint64_t v19 = type metadata accessor for UUID();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48);
  if (v21(a6, 1, v19) == 1) {
    goto LABEL_9;
  }
  if (qword_1001FAC80 != -1) {
    swift_once();
  }
  sub_100008DD4(a6, (uint64_t)v18, (uint64_t *)&unk_1001FB400);
  uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t))v21)(v18, 1, v19);
  if (result != 1)
  {
    swift_beginAccess();
    uint64_t v23 = qword_100212838;
    if (*(void *)(qword_100212838 + 16))
    {
      unint64_t v24 = sub_100007B70((uint64_t)v18);
      if (v25)
      {
        uint64_t v26 = *(void *)(*(void *)(v23 + 56) + 8 * v24);
        swift_endAccess();
        uint64_t v27 = *(void (**)(char *, uint64_t))(v20 + 8);
        swift_retain();
        v27(v18, v19);
        swift_retain();
LABEL_10:
        v30[3] = v26;
        type metadata accessor for QuestionnaireModel();
        State.init(wrappedValue:)();
        swift_release();
        swift_unknownObjectRelease();

        uint64_t v29 = v30[0];
        sub_10002784C(a6, (uint64_t *)&unk_1001FB400);
        return v29;
      }
    }
    swift_endAccess();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v18, v19);
LABEL_9:
    type metadata accessor for QuestionnaireModel();
    swift_allocObject();
    swift_unknownObjectRetain();
    sub_100046500(a8, a5, a7);
    uint64_t v26 = v28;
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

uint64_t destroy for SmartReplyInputDashboardView()
{
  swift_release();
  swift_release();

  return swift_release();
}

void *_s21WritingToolsUIService28SmartReplyInputDashboardViewVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for SmartReplyInputDashboardView(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for ResponseContent(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for SmartReplyInputDashboardView(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for SmartReplyInputDashboardView(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SmartReplyInputDashboardView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SmartReplyInputDashboardView()
{
  return &type metadata for SmartReplyInputDashboardView;
}

uint64_t sub_1001330FC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100133118()
{
  return sub_100133690(40);
}

uint64_t sub_100133120()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_100027204;
  return sub_10013279C(v2, v3);
}

uint64_t sub_1001331C8()
{
  return sub_100133690(48);
}

uint64_t sub_1001331D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100131C08(a1, v2[2], v2[3], v2[4], a2);
}

uint64_t sub_1001331E0()
{
  return sub_100133690(40);
}

uint64_t sub_1001331E8()
{
  return sub_10013265C(v0[2], v0[3], v0[4], (uint64_t)&unk_1001EF880, 1, (void (*)(void))sub_1001338C0);
}

uint64_t sub_100133230(uint64_t a1)
{
  return a1;
}

uint64_t sub_10013325C()
{
  return sub_100133690(40);
}

double sub_100133264@<D0>(uint64_t a1@<X8>)
{
  return sub_1001322E4(*(void *)(v1 + 32), a1);
}

unint64_t sub_100133270()
{
  unint64_t result = qword_1002041E0;
  if (!qword_1002041E0)
  {
    sub_100006C14(&qword_1002041D8);
    sub_1001332EC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002041E0);
  }
  return result;
}

unint64_t sub_1001332EC()
{
  unint64_t result = qword_1002041E8;
  if (!qword_1002041E8)
  {
    sub_100006C14(&qword_1002041F0);
    sub_100027F2C((unint64_t *)&unk_1002025D0, &qword_1001FDAC0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002041E8);
  }
  return result;
}

unint64_t sub_10013339C()
{
  unint64_t result = qword_1002041F8;
  if (!qword_1002041F8)
  {
    sub_100006C14(&qword_1002041C8);
    sub_100027F2C(&qword_100204200, &qword_1002041C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002041F8);
  }
  return result;
}

uint64_t sub_10013343C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for InputDashboardQuestionnaireButtonStyle(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100133498()
{
  uint64_t v1 = type metadata accessor for GeometryProxy();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 24;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_100133550(unsigned char *a1, unsigned char *a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for GeometryProxy() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = v2 + v6;
  uint64_t v8 = (uint64_t *)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v9 = *v8;
  uint64_t v10 = v8[1];

  return sub_100132438(a1, a2, v7, v9, v10);
}

void *sub_10013360C()
{
  return sub_100045BE4(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_100133630()
{
  return sub_100133690(40);
}

uint64_t sub_100133638()
{
  return sub_10013265C(v0[2], v0[3], v0[4], (uint64_t)&unk_1001EF8F8, 0, (void (*)(void))sub_1001336E4);
}

uint64_t sub_100133688()
{
  return sub_100133690(40);
}

uint64_t sub_100133690(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v1, a1, 7);
}

uint64_t sub_1001336E4()
{
  return sub_100132728();
}

unint64_t sub_100133708()
{
  unint64_t result = qword_100204220;
  if (!qword_100204220)
  {
    sub_100006C14(&qword_100204178);
    sub_1001337B4();
    sub_100133878(&qword_1001FB4F0, (void (*)(uint64_t))&type metadata accessor for _TaskModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100204220);
  }
  return result;
}

unint64_t sub_1001337B4()
{
  unint64_t result = qword_100204228;
  if (!qword_100204228)
  {
    sub_100006C14(&qword_100204160);
    sub_100027F2C(&qword_1001FBE60, &qword_1001FBE68);
    sub_100027F2C(&qword_100204230, &qword_100204238);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100204228);
  }
  return result;
}

uint64_t sub_100133878(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void destroy for ProofreadingSuggestionView(uint64_t a1)
{
  swift_release();
  swift_release();

  uint64_t v2 = *(void **)(a1 + 24);
}

void *initializeWithCopy for ProofreadingSuggestionView(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = (void *)a2[2];
  uint64_t v5 = (void *)a2[3];
  a1[2] = v4;
  a1[3] = v5;
  swift_retain();
  swift_retain();
  id v6 = v4;
  id v7 = v5;
  return a1;
}

void *assignWithCopy for ProofreadingSuggestionView(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  uint64_t v4 = (void *)a2[2];
  uint64_t v5 = (void *)a1[2];
  a1[2] = v4;
  id v6 = v4;

  id v7 = (void *)a2[3];
  uint64_t v8 = (void *)a1[3];
  a1[3] = v7;
  id v9 = v7;

  return a1;
}

uint64_t assignWithTake for ProofreadingSuggestionView(uint64_t a1, _OWORD *a2)
{
  swift_release();
  *(_OWORD *)a1 = *a2;
  swift_release();

  uint64_t v4 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = a2[1];

  return a1;
}

ValueMetadata *type metadata accessor for ProofreadingSuggestionView()
{
  return &type metadata for ProofreadingSuggestionView;
}

uint64_t sub_100133A50()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100133A6C(id *a1)
{
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = [*a1 uuid];
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  char v7 = static UUID.== infix(_:_:)();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v7 & 1;
}

void *sub_100133B78(uint64_t (*a1)(id *), uint64_t a2, unint64_t a3)
{
  if (a3 >> 62) {
    goto LABEL_16;
  }
  uint64_t v6 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v6; uint64_t v6 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v7 = 4;
    while (1)
    {
      id v8 = (a3 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(a3 + 8 * v7);
      uint64_t v9 = v8;
      uint64_t v10 = v7 - 3;
      if (__OFADD__(v7 - 4, 1)) {
        break;
      }
      id v13 = v8;
      char v11 = a1(&v13);
      if (v3)
      {
        swift_bridgeObjectRelease();

        return v9;
      }
      if (v11)
      {
        swift_bridgeObjectRelease();
        return v9;
      }

      ++v7;
      if (v10 == v6) {
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
  }
LABEL_11:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_100133CA0@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = sub_1000063C0(&qword_100204250);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000063C0(&qword_100204258);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1000063C0(&qword_100204260);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = static HorizontalAlignment.leading.getter();
  if (qword_1001FADA0 != -1) {
    swift_once();
  }
  uint64_t v20 = qword_100204240;
  *(void *)uint64_t v12 = v19;
  *((void *)v12 + 1) = v20;
  v12[16] = 0;
  uint64_t v21 = sub_1000063C0(&qword_100204268);
  sub_100133F0C(a1, a2, a3, a4, (uint64_t)&v12[*(int *)(v21 + 44)]);
  sub_100008DD4((uint64_t)v12, (uint64_t)v15, &qword_100204250);
  sub_10002784C((uint64_t)v12, &qword_100204250);
  sub_100008DD4((uint64_t)v15, (uint64_t)v18, &qword_100204258);
  sub_10002784C((uint64_t)v15, &qword_100204258);
  uint64_t v22 = (void *)swift_allocObject();
  void v22[2] = a1;
  v22[3] = a2;
  v22[4] = a3;
  v22[5] = a4;
  sub_100008DD4((uint64_t)v18, a5, &qword_100204260);
  uint64_t v23 = (void *)(a5 + *(int *)(sub_1000063C0(&qword_100204270) + 36));
  *uint64_t v23 = 0;
  v23[1] = 0;
  v23[2] = sub_100135164;
  v23[3] = v22;
  swift_retain();
  id v24 = a3;
  id v25 = a4;
  swift_retain();
  return sub_10002784C((uint64_t)v18, &qword_100204260);
}

uint64_t sub_100133F0C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  long long v62 = a4;
  id v65 = a2;
  uint64_t v66 = a5;
  uint64_t v64 = type metadata accessor for Divider();
  uint64_t v7 = *(void *)(v64 - 8);
  __chkstk_darwin(v64);
  uint64_t v9 = (char *)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = sub_1000063C0(&qword_100201C10);
  uint64_t v10 = __chkstk_darwin(v63);
  uint64_t v12 = (char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v61 - v13;
  uint64_t v15 = sub_1000063C0(&qword_100204278);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v61 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1000063C0(&qword_100204280);
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v61 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v61 - v22;
  *(void *)uint64_t v17 = static VerticalAlignment.center.getter();
  *((void *)v17 + 1) = 0;
  v17[16] = 1;
  uint64_t v24 = (uint64_t)&v17[*(int *)(sub_1000063C0(&qword_100204288) + 44)];
  uint64_t v25 = (uint64_t)v65;
  id v65 = a3;
  sub_1001343D4(a1, v25, a3, v62, v24);
  char v26 = static Edge.Set.leading.getter();
  if (qword_1001FADA8 != -1) {
    swift_once();
  }
  EdgeInsets.init(_all:)();
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  sub_100008DD4((uint64_t)v17, (uint64_t)v21, &qword_100204278);
  uint64_t v35 = &v21[*(int *)(v18 + 36)];
  *uint64_t v35 = v26;
  *((void *)v35 + 1) = v28;
  *((void *)v35 + 2) = v30;
  *((void *)v35 + 3) = v32;
  *((void *)v35 + 4) = v34;
  v35[40] = 0;
  sub_10002784C((uint64_t)v17, &qword_100204278);
  sub_100026FD0((uint64_t)v21, (uint64_t)v23, &qword_100204280);
  Divider.init()();
  char v36 = static Edge.Set.horizontal.getter();
  EdgeInsets.init(_all:)();
  uint64_t v38 = v37;
  uint64_t v40 = v39;
  uint64_t v42 = v41;
  uint64_t v44 = v43;
  uint64_t v45 = v64;
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v12, v9, v64);
  uint64_t v46 = &v12[*(int *)(v63 + 36)];
  *uint64_t v46 = v36;
  *((void *)v46 + 1) = v38;
  *((void *)v46 + 2) = v40;
  *((void *)v46 + 3) = v42;
  *((void *)v46 + 4) = v44;
  v46[40] = 0;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v45);
  sub_100026FD0((uint64_t)v12, (uint64_t)v14, &qword_100201C10);
  id v47 = v65;
  id v48 = [v65 suggestionCategory];
  uint64_t v49 = (uint64_t)v12;
  if (v48)
  {
    uint64_t v50 = v48;
    uint64_t v64 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v52 = v51;
  }
  else
  {
    uint64_t v64 = 0;
    unint64_t v52 = 0xE000000000000000;
  }
  id v53 = [v47 suggestionShortDescription];
  if (v53)
  {
    uint64_t v54 = v53;
    id v65 = (id)static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v56 = v55;
  }
  else
  {
    id v65 = 0;
    unint64_t v56 = 0xE000000000000000;
  }
  sub_100008DD4((uint64_t)v23, (uint64_t)v21, &qword_100204280);
  sub_100008DD4((uint64_t)v14, v49, &qword_100201C10);
  uint64_t v57 = v66;
  sub_100008DD4((uint64_t)v21, v66, &qword_100204280);
  uint64_t v58 = sub_1000063C0(&qword_100204290);
  sub_100008DD4(v49, v57 + *(int *)(v58 + 48), &qword_100201C10);
  unint64_t v59 = (uint64_t *)(v57 + *(int *)(v58 + 64));
  *unint64_t v59 = v64;
  v59[1] = v52;
  void v59[2] = (uint64_t)v65;
  v59[3] = v56;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10002784C((uint64_t)v14, &qword_100201C10);
  sub_10002784C((uint64_t)v23, &qword_100204280);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10002784C(v49, &qword_100201C10);
  return sub_10002784C((uint64_t)v21, &qword_100204280);
}

uint64_t sub_1001343D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v44 = a2;
  uint64_t v9 = sub_1000063C0(&qword_1001FC7F0);
  uint64_t v48 = *(void *)(v9 - 8);
  uint64_t v49 = v9;
  __chkstk_darwin(v9);
  uint64_t v46 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000063C0(&qword_100204298);
  __chkstk_darwin(v11 - 8);
  uint64_t v45 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000063C0(&qword_1002042A0);
  uint64_t v14 = v13 - 8;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v47 = (uint64_t)&v42 - v18;
  id v19 = [a4 attributedText];
  id v20 = [a3 originalRange];
  id v22 = [v19 attributedSubstringFromRange:v20, v21];

  id v23 = [v22 string];
  uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v26 = v25;

  uint64_t v50 = v24;
  uint64_t v51 = v26;
  sub_10002DF54();
  uint64_t v27 = Text.init<A>(_:)();
  uint64_t v29 = v28;
  uint64_t v43 = v30;
  LOBYTE(v23) = v31 & 1;
  uint64_t v32 = (void *)swift_allocObject();
  v32[2] = a1;
  _OWORD v32[3] = v44;
  unsigned char v32[4] = a3;
  v32[5] = a4;
  swift_retain();
  id v33 = a3;
  id v34 = a4;
  swift_retain();
  sub_1000063C0(&qword_1001FC828);
  sub_100027F2C(&qword_1001FC830, &qword_1001FC828);
  uint64_t v35 = v46;
  Button.init(action:label:)();
  uint64_t v37 = v48;
  uint64_t v36 = v49;
  uint64_t v38 = (uint64_t)v45;
  (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v45, v35, v49);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v35, v36);
  sub_100008DD4(v38, (uint64_t)v17, &qword_100204298);
  *(void *)&v17[*(int *)(v14 + 44)] = 0x3FE3333333333333;
  sub_10002784C(v38, &qword_100204298);
  uint64_t v39 = v47;
  sub_100026FD0((uint64_t)v17, v47, &qword_1002042A0);
  sub_100008DD4(v39, (uint64_t)v17, &qword_1002042A0);
  *(void *)a5 = v27;
  *(void *)(a5 + 8) = v29;
  *(unsigned char *)(a5 + 16) = (_BYTE)v23;
  *(void *)(a5 + 24) = v43;
  *(void *)(a5 + 32) = 0x3FE0000000000000;
  *(void *)(a5 + 40) = 0;
  *(unsigned char *)(a5 + 48) = 1;
  uint64_t v40 = sub_1000063C0(&qword_1002042A8);
  sub_100008DD4((uint64_t)v17, a5 + *(int *)(v40 + 64), &qword_1002042A0);
  sub_10002783C(v27, v29, (char)v23);
  swift_bridgeObjectRetain();
  sub_10002784C(v39, &qword_1002042A0);
  sub_10002784C((uint64_t)v17, &qword_1002042A0);
  sub_100026F18(v27, v29, (char)v23);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001347F8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[1] = a1;
  void v12[2] = a2;
  sub_1000063C0(&qword_1001FB850);
  State.wrappedValue.getter();
  id v10 = [a3 uuid];
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  sub_1001696B4(3, (uint64_t)v9);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_100134924@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1000063C0(&qword_1001FBA90);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = Image.init(systemName:)();
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v5 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v7 = v6;
  char v9 = v8 & 1;
  uint64_t v10 = type metadata accessor for Font.Design();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v4, 1, 1, v10);
  static Font.system(size:weight:design:)();
  sub_10002784C((uint64_t)v4, &qword_1001FBA90);
  uint64_t v11 = Text.font(_:)();
  uint64_t v13 = v12;
  char v15 = v14;
  uint64_t v17 = v16;
  swift_release();
  sub_100026F18(v5, v7, v9);
  swift_bridgeObjectRelease();
  *(void *)a1 = v19;
  *(void *)(a1 + 8) = v11;
  *(void *)(a1 + 16) = v13;
  *(unsigned char *)(a1 + 24) = v15 & 1;
  *(void *)(a1 + 32) = v17;
  swift_retain();
  sub_10002783C(v11, v13, v15 & 1);
  swift_bridgeObjectRetain();
  sub_100026F18(v11, v13, v15 & 1);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100134B38(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  char v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a1;
  uint64_t v15 = a2;
  sub_1000063C0(&qword_1001FB850);
  State.wrappedValue.getter();
  uint64_t v10 = sub_1001694F0(a3);
  uint64_t result = swift_release();
  if (v10 == 1)
  {
    uint64_t v14 = a1;
    uint64_t v15 = a2;
    State.wrappedValue.getter();
    id v12 = [a3 uuid];
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    sub_1001696B4(0, (uint64_t)v9);
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  return result;
}

uint64_t sub_100134CAC@<X0>(uint64_t a1@<X8>)
{
  return sub_100133CA0(*(void *)v1, *(void **)(v1 + 8), *(void **)(v1 + 16), *(void **)(v1 + 24), a1);
}

uint64_t sub_100134CB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v61 = a3;
  uint64_t v62 = a4;
  uint64_t v8 = sub_1000063C0(&qword_1001FBA90);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = a1;
  uint64_t v65 = a2;
  unint64_t v57 = sub_10002DF54();
  swift_bridgeObjectRetain();
  uint64_t v11 = Text.init<A>(_:)();
  uint64_t v13 = v12;
  char v15 = v14 & 1;
  uint64_t v16 = Text.bold()();
  uint64_t v18 = v17;
  LOBYTE(a1) = v19 & 1;
  sub_100026F18(v11, v13, v15);
  swift_bridgeObjectRelease();
  uint64_t v20 = type metadata accessor for Font.Design();
  unint64_t v55 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56);
  v55(v10, 1, 1, v20);
  static Font.system(size:weight:design:)();
  sub_10002784C((uint64_t)v10, &qword_1001FBA90);
  uint64_t v21 = Text.font(_:)();
  uint64_t v58 = v22;
  uint64_t v59 = v21;
  char v24 = v23;
  uint64_t v60 = v25;
  swift_release();
  v24 &= 1u;
  sub_100026F18(v16, v18, a1);
  swift_bridgeObjectRelease();
  int v56 = static Edge.Set.top.getter();
  EdgeInsets.init(_all:)();
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  uint64_t v64 = v61;
  uint64_t v65 = v62;
  swift_bridgeObjectRetain();
  uint64_t v34 = Text.init<A>(_:)();
  uint64_t v36 = v35;
  uint64_t v38 = v37;
  char v40 = v39 & 1;
  v55(v10, 1, 1, v20);
  uint64_t v41 = static Font.system(size:weight:design:)();
  sub_10002784C((uint64_t)v10, &qword_1001FBA90);
  uint64_t KeyPath = swift_getKeyPath();
  LOBYTE(a1) = static Edge.Set.top.getter();
  EdgeInsets.init(_all:)();
  char v63 = v24;
  char v74 = v24;
  char v72 = 0;
  char v70 = v40;
  char v66 = 0;
  *(_DWORD *)(a5 + 17) = v64;
  *(_DWORD *)(a5 + 20) = *(_DWORD *)((char *)&v64 + 3);
  *(_DWORD *)(a5 + 33) = *(_DWORD *)v73;
  *(_DWORD *)(a5 + 36) = *(_DWORD *)&v73[3];
  *(_DWORD *)(a5 + 73) = *(_DWORD *)v71;
  *(_DWORD *)(a5 + 76) = *(_DWORD *)&v71[3];
  int v43 = *(_DWORD *)v69;
  *(_DWORD *)(a5 + 100) = *(_DWORD *)&v69[3];
  *(_DWORD *)(a5 + 97) = v43;
  int v44 = *(_DWORD *)&v67[7];
  *(_WORD *)(a5 + 118) = v68;
  *(_DWORD *)(a5 + 114) = v44;
  int v45 = *(_DWORD *)v67;
  *(_DWORD *)(a5 + 140) = *(_DWORD *)&v67[3];
  *(_DWORD *)(a5 + 137) = v45;
  LOBYTE(v45) = v66;
  uint64_t v47 = v58;
  uint64_t v46 = v59;
  *(void *)a5 = v59;
  *(void *)(a5 + 8) = v47;
  *(unsigned char *)(a5 + 16) = v24;
  *(void *)(a5 + 24) = v60;
  *(unsigned char *)(a5 + 32) = v56;
  *(void *)(a5 + 40) = v27;
  *(void *)(a5 + 48) = v29;
  *(void *)(a5 + 56) = v31;
  *(void *)(a5 + 64) = v33;
  *(unsigned char *)(a5 + 72) = 0;
  *(void *)(a5 + 80) = v34;
  *(void *)(a5 + 88) = v36;
  *(unsigned char *)(a5 + 96) = v40;
  *(void *)(a5 + 104) = v38;
  *(_WORD *)(a5 + 112) = 256;
  *(void *)(a5 + 120) = KeyPath;
  *(void *)(a5 + 128) = v41;
  *(unsigned char *)(a5 + 136) = a1;
  *(void *)(a5 + 144) = v48;
  *(void *)(a5 + 152) = v49;
  *(void *)(a5 + 160) = v50;
  *(void *)(a5 + 168) = v51;
  *(unsigned char *)(a5 + 176) = v45;
  uint64_t v52 = v46;
  uint64_t v53 = v47;
  sub_10002783C(v46, v47, v24);
  swift_bridgeObjectRetain();
  sub_10002783C(v34, v36, v40);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_100026F18(v34, v36, v40);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_100026F18(v52, v53, v63);
  return swift_bridgeObjectRelease();
}

uint64_t sub_10013509C@<X0>(uint64_t a1@<X8>)
{
  sub_100134CB8(*v1, v1[1], v1[2], v1[3], (uint64_t)v14);
  char v3 = static Edge.Set.leading.getter();
  uint64_t result = EdgeInsets.init(_all:)();
  long long v5 = v14[9];
  *(_OWORD *)(a1 + 128) = v14[8];
  *(_OWORD *)(a1 + 144) = v5;
  *(_OWORD *)(a1 + 160) = v14[10];
  *(void *)(a1 + 176) = v15;
  long long v6 = v14[5];
  *(_OWORD *)(a1 + 64) = v14[4];
  *(_OWORD *)(a1 + 80) = v6;
  long long v7 = v14[7];
  *(_OWORD *)(a1 + 96) = v14[6];
  *(_OWORD *)(a1 + 112) = v7;
  long long v8 = v14[1];
  *(_OWORD *)a1 = v14[0];
  *(_OWORD *)(a1 + 16) = v8;
  long long v9 = v14[3];
  *(_OWORD *)(a1 + 32) = v14[2];
  *(_OWORD *)(a1 + 48) = v9;
  *(unsigned char *)(a1 + 184) = v3;
  *(void *)(a1 + 192) = v10;
  *(void *)(a1 + 200) = v11;
  *(void *)(a1 + 208) = v12;
  *(void *)(a1 + 216) = v13;
  *(unsigned char *)(a1 + 224) = 0;
  return result;
}

void sub_100135150()
{
  qword_100204240 = 0x4020000000000000;
}

uint64_t sub_100135164()
{
  return sub_100134B38(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32));
}

void sub_100135170()
{
  qword_100204248 = 0x4000000000000000;
}

uint64_t sub_100135180@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000063C0(&qword_1001FBA90);
  __chkstk_darwin(v4 - 8);
  long long v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000063C0(&qword_100204338);
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Font.Design();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v6, 1, 1, v11);
  uint64_t v12 = static Font.system(size:weight:design:)();
  sub_10002784C((uint64_t)v6, &qword_1001FBA90);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v14 = sub_1000063C0(&qword_100204340);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v10, a1, v14);
  uint64_t v15 = (uint64_t *)&v10[*(int *)(v8 + 44)];
  uint64_t *v15 = KeyPath;
  v15[1] = v12;
  LODWORD(a1) = static HierarchicalShapeStyle.secondary.getter();
  sub_100008DD4((uint64_t)v10, a2, &qword_100204338);
  *(_DWORD *)(a2 + *(int *)(sub_1000063C0(&qword_100204348) + 36)) = a1;
  return sub_10002784C((uint64_t)v10, &qword_100204338);
}

uint64_t sub_100135354@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v71 = a1;
  uint64_t v75 = a2;
  uint64_t v2 = type metadata accessor for RoundedRectangle();
  uint64_t v3 = v2 - 8;
  __chkstk_darwin(v2);
  uint64_t v5 = (_OWORD *)((char *)&v70 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v74 = sub_1000063C0(&qword_100202510);
  __chkstk_darwin(v74);
  uint64_t v7 = (char *)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000063C0(&qword_100204308);
  uint64_t v9 = v8 - 8;
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000063C0(&qword_100204310);
  uint64_t v13 = v12 - 8;
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v70 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = sub_1000063C0(&qword_100204318);
  __chkstk_darwin(v72);
  uint64_t v17 = (char *)&v70 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = sub_1000063C0(&qword_100204320);
  __chkstk_darwin(v73);
  char v19 = (char *)&v70 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v20 = static Edge.Set.horizontal.getter();
  EdgeInsets.init(_all:)();
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  uint64_t v29 = sub_1000063C0(&qword_100204328);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 16))(v11, v71, v29);
  uint64_t v30 = &v11[*(int *)(v9 + 44)];
  *uint64_t v30 = v20;
  *((void *)v30 + 1) = v22;
  *((void *)v30 + 2) = v24;
  *((void *)v30 + 3) = v26;
  *((void *)v30 + 4) = v28;
  v30[40] = 0;
  char v31 = static Edge.Set.vertical.getter();
  EdgeInsets.init(_all:)();
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  uint64_t v37 = v36;
  uint64_t v39 = v38;
  sub_100008DD4((uint64_t)v11, (uint64_t)v15, &qword_100204308);
  char v40 = &v15[*(int *)(v13 + 44)];
  *char v40 = v31;
  *((void *)v40 + 1) = v33;
  *((void *)v40 + 2) = v35;
  *((void *)v40 + 3) = v37;
  *((void *)v40 + 4) = v39;
  v40[40] = 0;
  sub_10002784C((uint64_t)v11, &qword_100204308);
  uint64_t v41 = (char *)v5 + *(int *)(v3 + 28);
  uint64_t v42 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v43 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v43 - 8) + 104))(v41, v42, v43);
  __asm { FMOV            V0.2D, #14.0 }
  *uint64_t v5 = _Q0;
  if (qword_1001FAD50 != -1) {
    swift_once();
  }
  uint64_t v49 = qword_1002129F8;
  sub_1000BE9E4((uint64_t)v5, (uint64_t)v7);
  uint64_t v50 = v74;
  *(void *)&v7[*(int *)(v74 + 52)] = v49;
  *(_WORD *)&v7[*(int *)(v50 + 56)] = 256;
  swift_retain();
  sub_1000BEA48((uint64_t)v5);
  uint64_t v51 = static Alignment.center.getter();
  uint64_t v53 = v52;
  uint64_t v54 = (uint64_t)&v17[*(int *)(v72 + 36)];
  sub_100008DD4((uint64_t)v7, v54, &qword_100202510);
  unint64_t v55 = (uint64_t *)(v54 + *(int *)(sub_1000063C0(&qword_1001FC7C0) + 36));
  *unint64_t v55 = v51;
  v55[1] = v53;
  sub_100008DD4((uint64_t)v15, (uint64_t)v17, &qword_100204310);
  sub_10002784C((uint64_t)v7, &qword_100202510);
  sub_10002784C((uint64_t)v15, &qword_100204310);
  uint64_t v56 = static Color.accentColor.getter();
  uint64_t KeyPath = swift_getKeyPath();
  sub_100008DD4((uint64_t)v17, (uint64_t)v19, &qword_100204318);
  uint64_t v58 = (uint64_t *)&v19[*(int *)(v73 + 36)];
  *uint64_t v58 = KeyPath;
  v58[1] = v56;
  sub_10002784C((uint64_t)v17, &qword_100204318);
  LOBYTE(v56) = static Edge.Set.vertical.getter();
  EdgeInsets.init(_all:)();
  uint64_t v60 = v59;
  uint64_t v62 = v61;
  uint64_t v64 = v63;
  uint64_t v66 = v65;
  uint64_t v67 = v75;
  sub_100008DD4((uint64_t)v19, v75, &qword_100204320);
  uint64_t v68 = v67 + *(int *)(sub_1000063C0(&qword_100204330) + 36);
  *(unsigned char *)uint64_t v68 = v56;
  *(void *)(v68 + 8) = v60;
  *(void *)(v68 + 16) = v62;
  *(void *)(v68 + 24) = v64;
  *(void *)(v68 + 32) = v66;
  *(unsigned char *)(v68 + 40) = 0;
  return sub_10002784C((uint64_t)v19, &qword_100204320);
}

uint64_t sub_10013584C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000063C0(&qword_100204300);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a2, a1, v4);
}

uint64_t sub_1001358BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000063C0(&qword_1002042E0);
  uint64_t v5 = v4 - 8;
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000063C0(&qword_1002042E8);
  uint64_t v9 = v8 - 8;
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v12 = static Edge.Set.horizontal.getter();
  EdgeInsets.init(_all:)();
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  uint64_t v20 = v19;
  uint64_t v21 = sub_1000063C0(&qword_1002042F0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(v7, a1, v21);
  uint64_t v22 = &v7[*(int *)(v5 + 44)];
  *uint64_t v22 = v12;
  *((void *)v22 + 1) = v14;
  *((void *)v22 + 2) = v16;
  *((void *)v22 + 3) = v18;
  *((void *)v22 + 4) = v20;
  v22[40] = 0;
  LOBYTE(a1) = static Edge.Set.top.getter();
  EdgeInsets.init(_all:)();
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  sub_100008DD4((uint64_t)v7, (uint64_t)v11, &qword_1002042E0);
  char v31 = &v11[*(int *)(v9 + 44)];
  char *v31 = a1;
  *((void *)v31 + 1) = v24;
  *((void *)v31 + 2) = v26;
  *((void *)v31 + 3) = v28;
  *((void *)v31 + 4) = v30;
  v31[40] = 0;
  sub_10002784C((uint64_t)v7, &qword_1002042E0);
  char v32 = static Edge.Set.bottom.getter();
  EdgeInsets.init(_all:)();
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  uint64_t v38 = v37;
  uint64_t v40 = v39;
  sub_100008DD4((uint64_t)v11, a2, &qword_1002042E8);
  uint64_t v41 = a2 + *(int *)(sub_1000063C0(&qword_1002042F8) + 36);
  *(unsigned char *)uint64_t v41 = v32;
  *(void *)(v41 + 8) = v34;
  *(void *)(v41 + 16) = v36;
  *(void *)(v41 + 24) = v38;
  *(void *)(v41 + 32) = v40;
  *(unsigned char *)(v41 + 40) = 0;
  return sub_10002784C((uint64_t)v11, &qword_1002042E8);
}

uint64_t sub_100135AE8()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100135B38()
{
  return sub_1001347F8(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_100135B44(uint64_t a1, void *a2, char *a3, char *a4)
{
  uint64_t v30 = a4;
  char v31 = a3;
  id v29 = a2;
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1001FADF0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v9 = qword_100212BA0;
  if (!*(void *)(qword_100212BA0 + 16)) {
    goto LABEL_10;
  }
  unint64_t v10 = sub_100007B70(a1);
  if ((v11 & 1) == 0) {
    goto LABEL_10;
  }
  uint64_t v12 = *(void *)(*(void *)(v9 + 56) + 8 * v10);
  swift_endAccess();
  swift_getKeyPath();
  uint64_t v35 = v12;
  sub_100135ED4();
  swift_retain();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v13 = (unint64_t *)(v12 + OBJC_IVAR____TtC21WritingToolsUIService17ProofreadingModel__suggestions);
  uint64_t v14 = swift_beginAccess();
  unint64_t v15 = *v13;
  __chkstk_darwin(v14);
  *(&v28 - 2) = (uint64_t)v31;
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_100133B78(sub_100135F2C, (uint64_t)(&v28 - 4), v15);
  swift_bridgeObjectRelease();
  if (!v16)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  id v17 = [v16 uuid];
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  swift_getKeyPath();
  uint64_t v34 = v12;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v18 = (uint64_t *)(v12 + OBJC_IVAR____TtC21WritingToolsUIService17ProofreadingModel__suggestionContextMapping);
  swift_beginAccess();
  uint64_t v19 = *v18;
  if (!*(void *)(v19 + 16))
  {
    __break(1u);
LABEL_10:
    swift_endAccess();
    __break(1u);
    goto LABEL_11;
  }
  swift_bridgeObjectRetain();
  unint64_t v20 = sub_100007B70((uint64_t)v8);
  if (v21)
  {
    id v22 = *(id *)(*(void *)(v19 + 56) + 8 * v20);
    swift_bridgeObjectRelease();
    uint64_t v23 = *(void (**)(char *, uint64_t))(v6 + 8);
    v23(v8, v5);
    uint64_t v32 = v12;
    type metadata accessor for ProofreadingModel();
    id v24 = v22;
    id v25 = v16;
    State.init(wrappedValue:)();

    uint64_t v26 = v33;
    v23(v30, v5);
    v23((char *)a1, v5);
    v23(v31, v5);
    return v26;
  }
LABEL_12:
  uint64_t result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

unint64_t sub_100135ED4()
{
  unint64_t result = qword_1001FBD30;
  if (!qword_1001FBD30)
  {
    type metadata accessor for ProofreadingModel();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FBD30);
  }
  return result;
}

uint64_t sub_100135F2C(id *a1)
{
  return sub_100133A6C(a1) & 1;
}

ValueMetadata *type metadata accessor for ProofreadingSuggestionView.SuggestionViewPaddingModifier()
{
  return &type metadata for ProofreadingSuggestionView.SuggestionViewPaddingModifier;
}

ValueMetadata *type metadata accessor for ProofreadingSuggestionView.SuggestionViewWidthModifier()
{
  return &type metadata for ProofreadingSuggestionView.SuggestionViewWidthModifier;
}

ValueMetadata *type metadata accessor for ProofreadingSuggestionView.ProofreadingSuggestionCategoryAndDescriptionView()
{
  return &type metadata for ProofreadingSuggestionView.ProofreadingSuggestionCategoryAndDescriptionView;
}

ValueMetadata *type metadata accessor for ProofreadingSuggestionView.SuggestionOriginalButtonModifier()
{
  return &type metadata for ProofreadingSuggestionView.SuggestionOriginalButtonModifier;
}

ValueMetadata *type metadata accessor for ProofreadingSuggestionView.SuggestionOriginalSuggestionTitleModifier()
{
  return &type metadata for ProofreadingSuggestionView.SuggestionOriginalSuggestionTitleModifier;
}

uint64_t sub_100135FA4()
{
  return sub_10013628C(&qword_1002042B0, &qword_100204270, (void (*)(void))sub_100135FE8);
}

unint64_t sub_100135FE8()
{
  unint64_t result = qword_1002042B8;
  if (!qword_1002042B8)
  {
    sub_100006C14(&qword_100204260);
    sub_100136064();
    sub_100136158();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002042B8);
  }
  return result;
}

unint64_t sub_100136064()
{
  unint64_t result = qword_1002042C0;
  if (!qword_1002042C0)
  {
    sub_100006C14(&qword_100204258);
    sub_100027F2C(&qword_1002042C8, &qword_100204250);
    sub_100136104();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002042C0);
  }
  return result;
}

unint64_t sub_100136104()
{
  unint64_t result = qword_1002042D0;
  if (!qword_1002042D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002042D0);
  }
  return result;
}

unint64_t sub_100136158()
{
  unint64_t result = qword_1002042D8;
  if (!qword_1002042D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002042D8);
  }
  return result;
}

uint64_t sub_1001361AC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001361C8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001361E4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100136200()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10013621C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100136248()
{
  return sub_10013628C(&qword_100204350, &qword_1002042F8, (void (*)(void))sub_100136308);
}

uint64_t sub_10013628C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100006C14(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100136308()
{
  unint64_t result = qword_100204358;
  if (!qword_100204358)
  {
    sub_100006C14(&qword_1002042E8);
    sub_1001363A4(&qword_100204360, &qword_1002042E0, &qword_100204368, &qword_1002042F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100204358);
  }
  return result;
}

uint64_t sub_1001363A4(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100006C14(a2);
    sub_100027F2C(a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100136440()
{
  return sub_100027F2C(&qword_100204370, &qword_100204300);
}

uint64_t sub_10013647C()
{
  return sub_10013628C(&qword_100204378, &qword_100204380, (void (*)(void))sub_1001364C0);
}

unint64_t sub_1001364C0()
{
  unint64_t result = qword_100204388;
  if (!qword_100204388)
  {
    sub_100006C14(&qword_100204390);
    sub_100027F2C(&qword_100204398, &qword_1002043A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100204388);
  }
  return result;
}

uint64_t sub_100136558()
{
  return sub_10013628C(&qword_1002043A8, &qword_100204330, (void (*)(void))sub_10013659C);
}

unint64_t sub_10013659C()
{
  unint64_t result = qword_1002043B0;
  if (!qword_1002043B0)
  {
    sub_100006C14(&qword_100204320);
    sub_10013663C();
    sub_100027F2C((unint64_t *)&unk_1002024E0, &qword_1001FC9D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002043B0);
  }
  return result;
}

unint64_t sub_10013663C()
{
  unint64_t result = qword_1002043B8;
  if (!qword_1002043B8)
  {
    sub_100006C14(&qword_100204318);
    sub_1001366DC();
    sub_100027F2C(&qword_100200E60, &qword_1001FC7C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002043B8);
  }
  return result;
}

unint64_t sub_1001366DC()
{
  unint64_t result = qword_1002043C0;
  if (!qword_1002043C0)
  {
    sub_100006C14(&qword_100204310);
    sub_1001363A4(&qword_1002043C8, &qword_100204308, &qword_1002043D0, &qword_100204328);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002043C0);
  }
  return result;
}

unint64_t sub_10013677C()
{
  unint64_t result = qword_1002043D8;
  if (!qword_1002043D8)
  {
    sub_100006C14(&qword_100204348);
    sub_10013681C();
    sub_100027F2C(&qword_1001FC768, &qword_1001FC770);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002043D8);
  }
  return result;
}

unint64_t sub_10013681C()
{
  unint64_t result = qword_1002043E0;
  if (!qword_1002043E0)
  {
    sub_100006C14(&qword_100204338);
    sub_100027F2C(&qword_1002043E8, &qword_100204340);
    sub_100027F2C((unint64_t *)&unk_1002025D0, &qword_1001FDAC0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002043E0);
  }
  return result;
}

uint64_t sub_1001368E0()
{
  swift_getKeyPath();
  sub_100136E50();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(void *)(v0 + 16);
}

uint64_t sub_100136954(uint64_t result, uint64_t a2, char a3)
{
  *(void *)(result + 16) = a2;
  *(unsigned char *)(result + 24) = a3 & 1;
  return result;
}

uint64_t sub_100136964()
{
  swift_getKeyPath();
  sub_100136E50();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(void *)(v0 + 32);
}

uint64_t sub_1001369D8(uint64_t result, uint64_t a2, char a3)
{
  *(void *)(result + 32) = a2;
  *(unsigned char *)(result + 40) = a3 & 1;
  return result;
}

uint64_t sub_1001369E8()
{
  swift_getKeyPath();
  sub_100136E50();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(unsigned __int8 *)(v0 + 41);
}

uint64_t sub_100136A58@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_100136E50();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + 41);
  return result;
}

uint64_t sub_100136AD0()
{
  return swift_release();
}

uint64_t sub_100136B70(uint64_t result, char a2)
{
  *(unsigned char *)(result + 41) = a2;
  return result;
}

BOOL sub_100136B78()
{
  swift_getKeyPath();
  sub_100136E50();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if ((*(unsigned char *)(v0 + 40) & 1) == 0 && !*(void *)(v0 + 32)) {
    return 1;
  }
  swift_getKeyPath();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return (*(unsigned char *)(v0 + 24) & 1) == 0 && *(void *)(v0 + 16) == 1;
}

uint64_t PresentationModel.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC21WritingToolsUIService17PresentationModel___observationRegistrar;
  uint64_t v2 = type metadata accessor for ObservationRegistrar();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t PresentationModel.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC21WritingToolsUIService17PresentationModel___observationRegistrar;
  uint64_t v2 = type metadata accessor for ObservationRegistrar();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_100136D4C()
{
  return type metadata accessor for PresentationModel();
}

uint64_t type metadata accessor for PresentationModel()
{
  uint64_t result = qword_100204420;
  if (!qword_100204420) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100136DA0()
{
  uint64_t result = type metadata accessor for ObservationRegistrar();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

unint64_t sub_100136E50()
{
  unint64_t result = qword_1001FB410;
  if (!qword_1001FB410)
  {
    type metadata accessor for PresentationModel();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001FB410);
  }
  return result;
}

void sub_100136EB8()
{
  *(unsigned char *)(*(void *)(v0 + 16) + 41) = *(unsigned char *)(v0 + 24);
}

void sub_100136EC8()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  unint64_t v55 = (char *)v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v63 = (char *)v49 - v5;
  uint64_t v6 = sub_1000063C0((uint64_t *)&unk_100201520);
  __chkstk_darwin(v6 - 8);
  uint64_t v56 = (char *)v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  uint64_t v67 = v0;
  sub_100142DF8(&qword_100201970, (void (*)(uint64_t))type metadata accessor for AttachmentManager);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  uint64_t v8 = *(void *)(v0[2] + 16);
  if (v8)
  {
    unint64_t v9 = v8 - 1;
    do
      sub_100139FA4(v9--);
    while (v9 != -1);
  }
  swift_getKeyPath();
  uint64_t v66 = v0;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v66 = v0;
  swift_getKeyPath();
  ObservationRegistrar.willSet<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  v0[8] = &_swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  id v65 = v0;
  swift_getKeyPath();
  ObservationRegistrar.didSet<A, B>(_:keyPath:)();
  swift_release();
  id v62 = self;
  id v10 = [v62 defaultManager];
  if (qword_1001FADB8 != -1) {
    swift_once();
  }
  sub_10000EBE8(v1, (uint64_t)qword_100212AF8);
  URL._bridgeToObjectiveC()(v11);
  uint64_t v13 = v12;
  id v65 = 0;
  id v14 = [v10 contentsOfDirectoryAtURL:v12 includingPropertiesForKeys:0 options:0 error:&v65];

  id v15 = v65;
  uint64_t v16 = v56;
  id v17 = v63;
  if (v14)
  {
    uint64_t v18 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v20 = *(void *)(v18 + 16);
    if (v20)
    {
      uint64_t v64 = *(void (**)(char *, unint64_t, uint64_t))(v2 + 16);
      unint64_t v21 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
      v49[2] = v18;
      unint64_t v22 = v18 + v21;
      uint64_t v59 = *(void *)(v2 + 72);
      uint64_t v60 = (unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48);
      unint64_t v57 = (void (**)(char *, uint64_t))(v2 + 8);
      uint64_t v58 = (void (**)(char *, char *, uint64_t))(v2 + 32);
      uint64_t v61 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56);
      v49[1] = (v2 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
      *(void *)&long long v19 = 136643075;
      long long v50 = v19;
      v49[3] = (char *)&type metadata for Any + 8;
      uint64_t v54 = v1;
      uint64_t v51 = v2 + 16;
      v64(v16, v18 + v21, v1);
      while (1)
      {
        id v25 = *v61;
        (*v61)(v16, 0, 1, v1);
        if ((*v60)(v16, 1, v1) == 1) {
          break;
        }
        (*v58)(v17, v16, v1);
        id v26 = [v62 defaultManager];
        URL._bridgeToObjectiveC()(v27);
        id v29 = v28;
        id v65 = 0;
        unsigned int v30 = [v26 removeItemAtURL:v28 error:&v65];

        if (v30)
        {
          uint64_t v23 = *v57;
          id v24 = v65;
          v23(v17, v1);
        }
        else
        {
          id v31 = v65;
          _convertNSErrorToError(_:)();

          swift_willThrow();
          if (qword_1001FAC28 != -1) {
            swift_once();
          }
          uint64_t v32 = type metadata accessor for Logger();
          sub_10000EBE8(v32, (uint64_t)qword_100212770);
          uint64_t v33 = v55;
          v64(v55, (unint64_t)v63, v1);
          swift_errorRetain();
          swift_errorRetain();
          uint64_t v34 = Logger.logObject.getter();
          os_log_type_t v35 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v34, v35))
          {
            uint64_t v36 = swift_slowAlloc();
            uint64_t v52 = (void *)swift_slowAlloc();
            uint64_t v37 = v33;
            uint64_t v53 = (void *)swift_slowAlloc();
            id v65 = v53;
            *(_DWORD *)uint64_t v36 = v50;
            Swift::String v38 = URL.path(percentEncoded:)(1);
            *(void *)(v36 + 4) = sub_100021444(v38._countAndFlagsBits, (unint64_t)v38._object, (uint64_t *)&v65);
            swift_bridgeObjectRelease();
            uint64_t v39 = *v57;
            (*v57)(v37, v54);
            *(_WORD *)(v36 + 12) = 2112;
            swift_errorRetain();
            uint64_t v40 = _swift_stdlib_bridgeErrorToNSError();
            *(void *)(v36 + 14) = v40;
            *uint64_t v52 = v40;
            swift_errorRelease();
            swift_errorRelease();
            _os_log_impl((void *)&_mh_execute_header, v34, v35, "failed to remove file at %{sensitive}s: %@", (uint8_t *)v36, 0x16u);
            sub_1000063C0(&qword_1001FED90);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_arrayDestroy();
            swift_slowDealloc();
            uint64_t v1 = v54;
            swift_slowDealloc();

            swift_errorRelease();
            id v17 = v63;
            v39(v63, v1);
          }
          else
          {

            swift_errorRelease();
            swift_errorRelease();
            uint64_t v41 = *v57;
            (*v57)(v33, v1);
            swift_errorRelease();
            id v17 = v63;
            v41(v63, v1);
          }
          uint64_t v16 = v56;
        }
        v22 += v59;
        if (!--v20)
        {
          v25(v16, 1, 1, v1);
          break;
        }
        v64(v16, v22, v1);
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56))(v16, 1, 1, v1);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v42 = v15;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    if (qword_1001FAC28 != -1) {
      swift_once();
    }
    uint64_t v43 = type metadata accessor for Logger();
    sub_10000EBE8(v43, (uint64_t)qword_100212770);
    swift_errorRetain();
    int v44 = Logger.logObject.getter();
    os_log_type_t v45 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v44, v45))
    {
      uint64_t v46 = (uint8_t *)swift_slowAlloc();
      uint64_t v47 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v46 = 138412290;
      swift_errorRetain();
      uint64_t v48 = (void *)_swift_stdlib_bridgeErrorToNSError();
      id v65 = v48;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v47 = v48;
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v44, v45, "failed to enumerate attachments tmp directory: %@", v46, 0xCu);
      sub_1000063C0(&qword_1001FED90);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }
  }
}

uint64_t sub_100137850(uint64_t a1)
{
  v2[32] = a1;
  v2[33] = v1;
  uint64_t v3 = type metadata accessor for DocumentRegistration.Progress();
  v2[34] = v3;
  v2[35] = *(void *)(v3 - 8);
  v2[36] = swift_task_alloc();
  v2[37] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for DocumentRegistration.Status();
  v2[38] = v4;
  v2[39] = *(void *)(v4 - 8);
  v2[40] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for DocumentRegistration();
  v2[41] = v5;
  v2[42] = *(void *)(v5 - 8);
  v2[43] = swift_task_alloc();
  sub_1000063C0(&qword_1002047F8);
  v2[44] = swift_task_alloc();
  uint64_t v6 = sub_1000063C0(&qword_100204800);
  v2[45] = v6;
  v2[46] = *(void *)(v6 - 8);
  v2[47] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for URL();
  v2[48] = v7;
  v2[49] = *(void *)(v7 - 8);
  v2[50] = swift_task_alloc();
  v2[51] = swift_task_alloc();
  v2[52] = swift_task_alloc();
  uint64_t v8 = sub_1000063C0(&qword_100204808);
  v2[53] = v8;
  v2[54] = *(void *)(v8 - 8);
  v2[55] = swift_task_alloc();
  v2[56] = swift_task_alloc();
  sub_1000063C0(&qword_100204810);
  v2[57] = swift_task_alloc();
  type metadata accessor for Attachment.UploadState(0);
  v2[58] = swift_task_alloc();
  v2[59] = swift_task_alloc();
  sub_1000063C0(&qword_100204818);
  v2[60] = swift_task_alloc();
  v2[61] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for DocumentResourceIdentifier();
  v2[62] = v9;
  v2[63] = *(void *)(v9 - 8);
  v2[64] = swift_task_alloc();
  v2[65] = swift_task_alloc();
  v2[66] = swift_task_alloc();
  v2[67] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for Attachment(0);
  v2[68] = v10;
  v2[69] = *(void *)(v10 - 8);
  v2[70] = swift_task_alloc();
  v2[71] = type metadata accessor for MainActor();
  v2[72] = static MainActor.shared.getter();
  uint64_t v12 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[73] = v12;
  v2[74] = v11;
  return _swift_task_switch(sub_100137D18, v12, v11);
}

uint64_t sub_100137D18()
{
  uint64_t v87 = v0;
  if (qword_1001FAC28 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  *(void *)(v0 + 600) = sub_10000EBE8(v1, (uint64_t)qword_100212770);
  swift_retain_n();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  uint64_t v4 = &unk_100204000;
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v5 = *(void *)(v0 + 264);
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v86 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315138;
    swift_getKeyPath();
    *(void *)(v0 + 232) = v5;
    sub_100142DF8(&qword_100201970, (void (*)(uint64_t))type metadata accessor for AttachmentManager);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    swift_beginAccess();
    swift_bridgeObjectRetain();
    uint64_t v7 = Array.description.getter();
    unint64_t v9 = v8;
    uint64_t v4 = (void *)&unk_100204000;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 248) = sub_100021444(v7, v9, &v86);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "unregistering attachments: %s", v6, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_release_n();
  }

  uint64_t v10 = *(void *)(v0 + 264);
  swift_getKeyPath();
  *(void *)(v0 + 608) = v4[175];
  *(void *)(v0 + 240) = v10;
  *(void *)(v0 + 616) = sub_100142DF8(&qword_100201970, (void (*)(uint64_t))type metadata accessor for AttachmentManager);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v80 = (void *)(v10 + 64);
  swift_beginAccess();
  uint64_t v11 = *(void *)(v10 + 64);
  uint64_t v12 = *(void *)(v11 + 16);
  uint64_t v13 = _swiftEmptyArrayStorage;
  if (v12)
  {
    uint64_t v14 = *(void *)(v0 + 552);
    uint64_t v85 = *(void *)(v0 + 544);
    uint64_t v15 = *(void *)(v0 + 504);
    uint64_t v16 = v11 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
    id v17 = (void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32);
    uint64_t v83 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56);
    uint64_t v84 = *(void *)(v14 + 72);
    uint64_t v81 = v15;
    int v82 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
    swift_bridgeObjectRetain();
    uint64_t v18 = (uint64_t *)&unk_100204818;
    do
    {
      long long v19 = v18;
      uint64_t v20 = *(void *)(v0 + 560);
      uint64_t v21 = *(void *)(v0 + 472);
      sub_100146C54(v16, v20, type metadata accessor for Attachment);
      sub_100146C54(v20 + *(int *)(v85 + 40), v21, type metadata accessor for Attachment.UploadState);
      uint64_t v22 = sub_1000063C0(&qword_1002040B8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 48))(v21, 1, v22) == 1)
      {
        sub_100146CBC(*(void *)(v0 + 472), type metadata accessor for Attachment.UploadState);
        uint64_t v23 = 1;
      }
      else
      {
        uint64_t v24 = *(void *)(v0 + 528);
        uint64_t v25 = *(void *)(v0 + 496);
        uint64_t v26 = *(void *)(v0 + 480);
        uint64_t v27 = *v17;
        (*v17)(v24, *(void *)(v0 + 472), v25);
        v27(v26, v24, v25);
        uint64_t v23 = 0;
      }
      uint64_t v28 = *(void *)(v0 + 560);
      uint64_t v30 = *(void *)(v0 + 488);
      uint64_t v29 = *(void *)(v0 + 496);
      uint64_t v31 = *(void *)(v0 + 480);
      (*v83)(v31, v23, 1, v29);
      uint64_t v32 = v31;
      uint64_t v18 = v19;
      sub_100026FD0(v32, v30, v19);
      sub_100146CBC(v28, type metadata accessor for Attachment);
      if ((*v82)(v30, 1, v29) == 1)
      {
        sub_10002784C(*(void *)(v0 + 488), v19);
      }
      else
      {
        uint64_t v33 = *(void *)(v0 + 536);
        uint64_t v34 = *(void *)(v0 + 520);
        uint64_t v35 = *(void *)(v0 + 496);
        uint64_t v36 = *v17;
        (*v17)(v33, *(void *)(v0 + 488), v35);
        v36(v34, v33, v35);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v13 = (void *)sub_100143BC8(0, v13[2] + 1, 1, (unint64_t)v13, &qword_100204830, (uint64_t (*)(void))&type metadata accessor for DocumentResourceIdentifier, (uint64_t (*)(void))&type metadata accessor for DocumentResourceIdentifier);
        }
        unint64_t v38 = v13[2];
        unint64_t v37 = v13[3];
        uint64_t v18 = v19;
        if (v38 >= v37 >> 1) {
          uint64_t v13 = (void *)sub_100143BC8(v37 > 1, v38 + 1, 1, (unint64_t)v13, &qword_100204830, (uint64_t (*)(void))&type metadata accessor for DocumentResourceIdentifier, (uint64_t (*)(void))&type metadata accessor for DocumentResourceIdentifier);
        }
        uint64_t v39 = *(void *)(v0 + 520);
        uint64_t v40 = *(void *)(v0 + 496);
        v13[2] = v38 + 1;
        v36((uint64_t)v13+ ((*(unsigned __int8 *)(v81 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80))+ *(void *)(v81 + 72) * v38, v39, v40);
      }
      v16 += v84;
      --v12;
    }
    while (v12);
    swift_bridgeObjectRelease();
  }
  GenerativeExperiencesSession.unregister(documents:)((Swift::OpaquePointer)v13);
  if (!v41)
  {
    uint64_t v43 = *(void *)(v0 + 264);
    swift_bridgeObjectRelease();
    swift_getKeyPath();
    *(void *)(v0 + 208) = v43;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    *(void *)(v0 + 168) = v43;
    swift_getKeyPath();
    ObservationRegistrar.willSet<A, B>(_:keyPath:)();
    swift_release();
    *uint64_t v80 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 160) = v43;
    swift_getKeyPath();
    ObservationRegistrar.didSet<A, B>(_:keyPath:)();
    swift_release();
    swift_getKeyPath();
    *(void *)(v0 + 152) = v43;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    swift_beginAccess();
    uint64_t v44 = *(void *)(*(void *)(v43 + 16) + 16);
    swift_retain();
    uint64_t v45 = sub_1001451E0(0, v44, v43);
    swift_release();
    if (!*(void *)(v45 + 16))
    {
      swift_release();
      swift_bridgeObjectRelease();
LABEL_29:
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v42 = *(uint64_t (**)(void))(v0 + 8);
      goto LABEL_30;
    }
    swift_bridgeObjectRetain();
    uint64_t v46 = Logger.logObject.getter();
    os_log_type_t v47 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v46, v47))
    {
      uint64_t v48 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v48 = 134217984;
      *(void *)(v0 + 224) = *(void *)(v45 + 16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v46, v47, "Attaching %ld attachment(s)", v48, 0xCu);
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease();
    }

    uint64_t v49 = *(char **)(v0 + 456);
    uint64_t v50 = *(void *)(v0 + 264);
    swift_retain();
    sub_1001459E4(v45, v50);
    swift_release();
    uint64_t v51 = GenerativeExperiencesSession.register(documents:)();
    swift_bridgeObjectRelease();
    *(void *)(v0 + 16) = v51;
    *(void *)(v0 + 24) = 0;
    *(void *)(v0 + 32) = v45;
    *(void *)(v0 + 40) = 0;
    *(unsigned char *)(v0 + 48) = 0;
    sub_10013AB48(v49);
    uint64_t v52 = sub_1000063C0(&qword_100204820);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v52 - 8) + 48))(v49, 1, v52) == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_29;
    }
    uint64_t v54 = *(void (**)(uint64_t))(*(void *)(v0 + 432) + 32);
    *(void *)(v0 + 624) = v54;
    *(_DWORD *)(v0 + 52) = enum case for DocumentRegistration.Status.registering(_:);
    *(_DWORD *)(v0 + 688) = enum case for DocumentRegistration.Status.finished(_:);
    uint64_t v55 = *(void *)(v0 + 448);
    uint64_t v56 = *(void *)(v0 + 264);
    unint64_t v57 = *(void *)(*(void *)(v0 + 456) + *(int *)(v52 + 48));
    *(void *)(v0 + 632) = v57;
    v54(v55);
    swift_getKeyPath();
    *(void *)(v0 + 176) = v56;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    uint64_t v58 = swift_release();
    if ((v57 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      uint64_t v64 = *(void *)(v56 + 16);
      if (v57 < *(void *)(v64 + 16))
      {
        uint64_t v65 = *(void *)(v0 + 552);
        uint64_t v67 = *(void *)(v0 + 440);
        uint64_t v66 = *(void *)(v0 + 448);
        uint64_t v68 = *(void *)(v0 + 424);
        uint64_t v69 = *(void *)(v0 + 432);
        uint64_t v70 = *(void *)(v0 + 416);
        uint64_t v71 = *(void *)(v0 + 384);
        uint64_t v72 = *(void *)(v0 + 392);
        int v73 = *(_DWORD *)(v65 + 80);
        *(_DWORD *)(v0 + 692) = v73;
        uint64_t v74 = *(void *)(v65 + 72);
        *(void *)(v0 + 640) = v74;
        unint64_t v75 = v64 + ((v73 + 32) & ~(unint64_t)v73) + v74 * v57;
        uint64_t v76 = *(void (**)(uint64_t, unint64_t, uint64_t))(v72 + 16);
        *(void *)(v0 + 648) = v76;
        *(void *)(v0 + 656) = (v72 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
        v76(v70, v75, v71);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v69 + 16))(v67, v66, v68);
        *(void *)(v0 + 664) = swift_getOpaqueTypeConformance2();
        dispatch thunk of AsyncSequence.makeAsyncIterator()();
        uint64_t v77 = static MainActor.shared.getter();
        *(void *)(v0 + 672) = v77;
        uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
        uint64_t v79 = (void *)swift_task_alloc();
        *(void *)(v0 + 680) = v79;
        *uint64_t v79 = v0;
        v79[1] = sub_100138AD8;
        uint64_t v58 = *(void *)(v0 + 352);
        uint64_t v62 = *(void *)(v0 + 360);
        uint64_t v60 = &protocol witness table for MainActor;
        uint64_t v59 = v77;
        uint64_t v61 = v0 + 184;
        uint64_t v63 = AssociatedConformanceWitness;
        return __sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v58, v59, v60, v61, v62, v63);
      }
    }
    __break(1u);
    return __sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v58, v59, v60, v61, v62, v63);
  }
  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v42 = *(uint64_t (**)(void))(v0 + 8);
LABEL_30:
  return v42();
}

uint64_t sub_100138AD8()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v3 = *(void *)(v2 + 592);
    uint64_t v4 = *(void *)(v2 + 584);
    uint64_t v5 = sub_100139794;
  }
  else
  {
    swift_release();
    uint64_t v3 = *(void *)(v2 + 592);
    uint64_t v4 = *(void *)(v2 + 584);
    uint64_t v5 = sub_100138C2C;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100138C2C()
{
  uint64_t v108 = v0;
  uint64_t v2 = *(void *)(v0 + 352);
  uint64_t v3 = *(void *)(v0 + 328);
  uint64_t v4 = *(void *)(v0 + 336);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) != 1)
  {
    int v15 = *(_DWORD *)(v0 + 52);
    uint64_t v17 = *(void *)(v0 + 312);
    uint64_t v16 = *(void *)(v0 + 320);
    uint64_t v18 = *(void *)(v0 + 304);
    (*(void (**)(void, uint64_t, uint64_t))(v4 + 32))(*(void *)(v0 + 344), v2, v3);
    DocumentRegistration.status.getter();
    int v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 88))(v16, v18);
    if (v19 == v15)
    {
      uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 648);
      uint64_t v22 = *(void *)(v0 + 408);
      uint64_t v21 = *(void *)(v0 + 416);
      uint64_t v23 = *(void *)(v0 + 384);
      uint64_t v24 = *(void *)(v0 + 320);
      uint64_t v25 = *(void *)(v0 + 296);
      uint64_t v26 = *(void *)(v0 + 280);
      uint64_t v27 = *(void *)(v0 + 288);
      uint64_t v28 = *(void *)(v0 + 272);
      (*(void (**)(uint64_t, void))(*(void *)(v0 + 312) + 96))(v24, *(void *)(v0 + 304));
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 32))(v25, v24, v28);
      v20(v22, v21, v23);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 16))(v27, v25, v28);
      uint64_t v29 = Logger.logObject.getter();
      os_log_type_t type = static os_log_type_t.default.getter();
      BOOL v30 = os_log_type_enabled(v29, type);
      uint64_t v31 = *(void *)(v0 + 408);
      uint64_t v33 = *(void *)(v0 + 384);
      uint64_t v32 = *(void *)(v0 + 392);
      uint64_t v35 = *(void *)(v0 + 336);
      uint64_t v34 = *(void *)(v0 + 344);
      uint64_t v36 = *(void *)(v0 + 328);
      uint64_t v37 = *(void *)(v0 + 288);
      uint64_t v38 = *(void *)(v0 + 280);
      uint64_t v104 = *(void *)(v0 + 272);
      uint64_t v106 = *(void *)(v0 + 296);
      if (v30)
      {
        uint64_t v101 = *(void *)(v0 + 328);
        uint64_t v39 = swift_slowAlloc();
        uint64_t v107 = swift_slowAlloc();
        *(_DWORD *)uint64_t v39 = 136643075;
        sub_100142DF8(&qword_100204828, (void (*)(uint64_t))&type metadata accessor for URL);
        uint64_t v40 = dispatch thunk of CustomStringConvertible.description.getter();
        *(void *)(v39 + 4) = sub_100021444(v40, v41, &v107);
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v31, v33);
        *(_WORD *)(v39 + 12) = 2048;
        DocumentRegistration.Progress.progress.getter();
        *(double *)(v39 + 14) = v42;
        uint64_t v43 = *(void (**)(uint64_t, uint64_t))(v38 + 8);
        v43(v37, v104);
        _os_log_impl((void *)&_mh_execute_header, v29, type, "Attachment uploading %{sensitive}s - Progress: %f %%", (uint8_t *)v39, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        v43(v106, v104);
        (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v34, v101);
      }
      else
      {

        uint64_t v78 = *(void (**)(uint64_t, uint64_t))(v38 + 8);
        v78(v37, v104);
        (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v31, v33);
        v78(v106, v104);
        (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v34, v36);
      }
      goto LABEL_21;
    }
    if (v19 != *(_DWORD *)(v0 + 688))
    {
      uint64_t v79 = *(void *)(v0 + 320);
      uint64_t v80 = *(void *)(v0 + 304);
      uint64_t v81 = *(void *)(v0 + 312);
      (*(void (**)(void, void))(*(void *)(v0 + 336) + 8))(*(void *)(v0 + 344), *(void *)(v0 + 328));
      (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v79, v80);
      goto LABEL_21;
    }
    uint64_t v61 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 648);
    uint64_t v62 = *(void *)(v0 + 504);
    uint64_t v63 = *(void *)(v0 + 512);
    uint64_t v64 = *(void *)(v0 + 496);
    uint64_t v65 = *(void *)(v0 + 416);
    uint64_t v66 = *(void *)(v0 + 400);
    uint64_t v67 = *(void *)(v0 + 384);
    uint64_t v68 = *(void *)(v0 + 320);
    (*(void (**)(uint64_t, void))(*(void *)(v0 + 312) + 96))(v68, *(void *)(v0 + 304));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v62 + 32))(v63, v68, v64);
    v61(v66, v65, v67);
    uint64_t v69 = Logger.logObject.getter();
    os_log_type_t v70 = static os_log_type_t.default.getter();
    BOOL v71 = os_log_type_enabled(v69, v70);
    uint64_t v72 = *(void *)(v0 + 400);
    uint64_t v73 = *(void *)(v0 + 384);
    uint64_t v74 = (void (**)(uint64_t, uint64_t))(*(void *)(v0 + 392) + 8);
    if (v71)
    {
      uint64_t v75 = swift_slowAlloc();
      uint64_t v107 = swift_slowAlloc();
      *(_DWORD *)uint64_t v75 = 136642819;
      sub_100142DF8(&qword_100204828, (void (*)(uint64_t))&type metadata accessor for URL);
      uint64_t v76 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)(v75 + 4) = sub_100021444(v76, v77, &v107);
      swift_bridgeObjectRelease();
      (*v74)(v72, v73);
      _os_log_impl((void *)&_mh_execute_header, v69, v70, "Attachment upload complete %{sensitive}s", (uint8_t *)v75, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*v74)(*(void *)(v0 + 400), *(void *)(v0 + 384));
    }

    uint64_t v82 = *(void *)(v0 + 464);
    uint64_t v83 = *(void *)(v0 + 264);
    (*(void (**)(uint64_t, void, void))(*(void *)(v0 + 504) + 16))(v82, *(void *)(v0 + 512), *(void *)(v0 + 496));
    uint64_t v84 = sub_1000063C0(&qword_1002040B8);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v84 - 8) + 56))(v82, 0, 1, v84);
    swift_getKeyPath();
    *(void *)(v0 + 192) = v83;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    *(void *)(v0 + 200) = v83;
    swift_getKeyPath();
    ObservationRegistrar.willSet<A, B>(_:keyPath:)();
    swift_release();
    swift_beginAccess();
    unint64_t v1 = *(void *)(v83 + 16);
    uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v83 + 16) = v1;
    if (isUniquelyReferenced_nonNull_native)
    {
LABEL_19:
      uint64_t v91 = *(void *)(v0 + 632);
      if (v91 >= *(void *)(v1 + 16))
      {
        __break(1u);
        return __sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(isUniquelyReferenced_nonNull_native, v86, v87, v88, v89, v90);
      }
      uint64_t v93 = *(void *)(v0 + 504);
      uint64_t v92 = *(void *)(v0 + 512);
      uint64_t v94 = *(void *)(v0 + 496);
      uint64_t v95 = *(void *)(v0 + 336);
      *(void *)typea = *(void *)(v0 + 328);
      uint64_t v105 = *(void *)(v0 + 344);
      uint64_t v96 = *(void *)(v0 + 264);
      sub_100146DCC(*(void *)(v0 + 464), v1+ ((*(unsigned __int8 *)(v0 + 692) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 692))+ *(void *)(v0 + 640) * v91+ *(int *)(*(void *)(v0 + 544) + 40));
      swift_endAccess();
      *(void *)(v0 + 216) = v96;
      swift_getKeyPath();
      ObservationRegistrar.didSet<A, B>(_:keyPath:)();
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v93 + 8))(v92, v94);
      (*(void (**)(uint64_t, os_log_type_t *))(v95 + 8))(v105, *(os_log_type_t **)typea);
LABEL_21:
      uint64_t v97 = static MainActor.shared.getter();
      *(void *)(v0 + 672) = v97;
      uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      long long v99 = (void *)swift_task_alloc();
      *(void *)(v0 + 680) = v99;
      *long long v99 = v0;
      v99[1] = sub_100138AD8;
      uint64_t isUniquelyReferenced_nonNull_native = *(void *)(v0 + 352);
      uint64_t v89 = *(void *)(v0 + 360);
      uint64_t v87 = &protocol witness table for MainActor;
      uint64_t v86 = v97;
      uint64_t v88 = v0 + 184;
      uint64_t v90 = AssociatedConformanceWitness;
      return __sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(isUniquelyReferenced_nonNull_native, v86, v87, v88, v89, v90);
    }
LABEL_26:
    uint64_t v100 = *(void *)(v0 + 264);
    uint64_t isUniquelyReferenced_nonNull_native = sub_1001440B8(v1);
    unint64_t v1 = isUniquelyReferenced_nonNull_native;
    *(void *)(v100 + 16) = isUniquelyReferenced_nonNull_native;
    goto LABEL_19;
  }
  uint64_t v6 = *(void *)(v0 + 448);
  uint64_t v5 = *(char **)(v0 + 456);
  uint64_t v7 = *(void *)(v0 + 424);
  uint64_t v8 = *(void *)(v0 + 432);
  uint64_t v9 = *(void *)(v0 + 416);
  uint64_t v10 = *(void *)(v0 + 384);
  uint64_t v11 = *(void *)(v0 + 392);
  (*(void (**)(void, void))(*(void *)(v0 + 368) + 8))(*(void *)(v0 + 376), *(void *)(v0 + 360));
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  sub_10013AB48(v5);
  uint64_t v12 = sub_1000063C0(&qword_100204820);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v5, 1, v12) != 1)
  {
    uint64_t v44 = *(void (**)(uint64_t))(v0 + 624);
    uint64_t v45 = *(void *)(v0 + 448);
    uint64_t v46 = *(void *)(v0 + 264);
    unint64_t v47 = *(void *)(*(void *)(v0 + 456) + *(int *)(v12 + 48));
    *(void *)(v0 + 632) = v47;
    v44(v45);
    swift_getKeyPath();
    *(void *)(v0 + 176) = v46;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    if ((v47 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      uint64_t v48 = *(void *)(v46 + 16);
      if (v47 < *(void *)(v48 + 16))
      {
        uint64_t v49 = *(void *)(v0 + 552);
        uint64_t v50 = *(void *)(v0 + 440);
        uint64_t v51 = *(void *)(v0 + 448);
        uint64_t v52 = *(void *)(v0 + 424);
        uint64_t v53 = *(void *)(v0 + 432);
        uint64_t v54 = *(void *)(v0 + 416);
        uint64_t v55 = *(void *)(v0 + 384);
        uint64_t v56 = *(void *)(v0 + 392);
        int v57 = *(_DWORD *)(v49 + 80);
        *(_DWORD *)(v0 + 692) = v57;
        uint64_t v58 = *(void *)(v49 + 72);
        *(void *)(v0 + 640) = v58;
        unint64_t v59 = v48 + ((v57 + 32) & ~(unint64_t)v57) + v58 * v47;
        uint64_t v60 = *(void (**)(uint64_t, unint64_t, uint64_t))(v56 + 16);
        *(void *)(v0 + 648) = v60;
        *(void *)(v0 + 656) = (v56 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
        v60(v54, v59, v55);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v53 + 16))(v50, v51, v52);
        *(void *)(v0 + 664) = swift_getOpaqueTypeConformance2();
        dispatch thunk of AsyncSequence.makeAsyncIterator()();
        goto LABEL_21;
      }
    }
    __break(1u);
    goto LABEL_26;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
  return v13();
}

uint64_t sub_100139794()
{
  uint64_t v1 = v0[56];
  uint64_t v2 = v0[53];
  uint64_t v3 = v0[54];
  uint64_t v4 = v0[52];
  uint64_t v5 = v0[48];
  uint64_t v6 = v0[49];
  uint64_t v8 = v0[46];
  uint64_t v7 = v0[47];
  uint64_t v9 = v0[45];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_100139984()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_100139A3C()
{
  uint64_t v1 = v0;
  uint64_t v31 = type metadata accessor for DocumentResourceIdentifier();
  uint64_t v2 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v28 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_1000063C0(&qword_1002047B8);
  __chkstk_darwin(v32);
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Attachment.UploadState(0);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v27 - v11;
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v27 - v13;
  swift_getKeyPath();
  uint64_t v15 = v0 + OBJC_IVAR____TtC21WritingToolsUIService17AttachmentManager___observationRegistrar;
  uint64_t v36 = v1;
  uint64_t v33 = sub_100142DF8(&qword_100201970, (void (*)(uint64_t))type metadata accessor for AttachmentManager);
  uint64_t v34 = v15;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t result = swift_beginAccess();
  int64_t v17 = *(void *)(*(void *)(v1 + 16) + 16);
  if (v17)
  {
    uint64_t v27 = (void (**)(char *, uint64_t, uint64_t))(v2 + 32);
    BOOL v30 = (void (**)(char *, uint64_t))(v2 + 8);
    do
    {
      while (1)
      {
        swift_getKeyPath();
        uint64_t v35 = v1;
        ObservationRegistrar.access<A, B>(_:keyPath:)();
        uint64_t result = swift_release();
        uint64_t v18 = *(void *)(v1 + 16);
        if (v17 > *(void *)(v18 + 16))
        {
          __break(1u);
          return result;
        }
        --v17;
        uint64_t v19 = type metadata accessor for Attachment(0);
        sub_100146C54(v18+ ((*(unsigned __int8 *)(*(void *)(v19 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v19 - 8) + 80))+ *(void *)(*(void *)(v19 - 8) + 72) * v17+ *(int *)(v19 + 40), (uint64_t)v14, type metadata accessor for Attachment.UploadState);
        uint64_t v20 = sub_1000063C0(&qword_1002040B8);
        uint64_t v21 = *(void *)(v20 - 8);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v12, 1, 1, v20);
        uint64_t v22 = (uint64_t)&v5[*(int *)(v32 + 48)];
        sub_100146C54((uint64_t)v14, (uint64_t)v5, type metadata accessor for Attachment.UploadState);
        sub_100146C54((uint64_t)v12, v22, type metadata accessor for Attachment.UploadState);
        uint64_t v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
        if (v23(v5, 1, v20) != 1) {
          break;
        }
        if (v23((char *)v22, 1, v20) != 1) {
          goto LABEL_10;
        }
LABEL_3:
        sub_100146CBC((uint64_t)v5, type metadata accessor for Attachment.UploadState);
        sub_100146CBC((uint64_t)v12, type metadata accessor for Attachment.UploadState);
        sub_100146CBC((uint64_t)v14, type metadata accessor for Attachment.UploadState);
        uint64_t result = sub_100139FA4(v17);
        if (!v17) {
          return result;
        }
      }
      sub_100146C54((uint64_t)v5, (uint64_t)v9, type metadata accessor for Attachment.UploadState);
      if (v23((char *)v22, 1, v20) != 1)
      {
        uint64_t v24 = v28;
        uint64_t v25 = v31;
        (*v27)(v28, v22, v31);
        int v29 = static DocumentResourceIdentifier.== infix(_:_:)();
        uint64_t v26 = *v30;
        (*v30)(v24, v25);
        v26(v9, v25);
        if ((v29 & 1) == 0)
        {
          sub_100146CBC((uint64_t)v5, type metadata accessor for Attachment.UploadState);
          goto LABEL_11;
        }
        goto LABEL_3;
      }
      (*v30)(v9, v31);
LABEL_10:
      sub_10002784C((uint64_t)v5, &qword_1002047B8);
LABEL_11:
      sub_100146CBC((uint64_t)v12, type metadata accessor for Attachment.UploadState);
      uint64_t result = sub_100146CBC((uint64_t)v14, type metadata accessor for Attachment.UploadState);
    }
    while (v17);
  }
  return result;
}

uint64_t sub_100139FA4(unint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v73 = (int *)type metadata accessor for Attachment(0);
  uint64_t v4 = *((void *)v73 - 1);
  uint64_t v5 = __chkstk_darwin(v73);
  uint64_t v71 = (uint64_t)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v74 = (uint64_t)&v62 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v62 - v10;
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v14 = (char *)&v62 - v13;
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v62 - v15;
  swift_getKeyPath();
  int64_t v17 = (char *)v1 + OBJC_IVAR____TtC21WritingToolsUIService17AttachmentManager___observationRegistrar;
  v77[0] = v2;
  uint64_t v18 = sub_100142DF8(&qword_100201970, (void (*)(uint64_t))type metadata accessor for AttachmentManager);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t result = swift_beginAccess();
  if (*(void *)(v2[2] + 16) <= (int64_t)a1) {
    return result;
  }
  swift_getKeyPath();
  v77[0] = v2;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v20 = v2[2];
    if (*(void *)(v20 + 16) > a1)
    {
      uint64_t v68 = v2 + 2;
      uint64_t v69 = v11;
      uint64_t v67 = (uint64_t)v17;
      unint64_t v66 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
      uint64_t v65 = *(void *)(v4 + 72);
      sub_100146C54(v20 + v66 + v65 * a1, (uint64_t)v16, type metadata accessor for Attachment);
      if (qword_1001FAC28 == -1) {
        goto LABEL_5;
      }
      goto LABEL_28;
    }
  }
  __break(1u);
LABEL_28:
  swift_once();
LABEL_5:
  uint64_t v21 = type metadata accessor for Logger();
  uint64_t v22 = sub_10000EBE8(v21, (uint64_t)qword_100212770);
  sub_100146C54((uint64_t)v16, (uint64_t)v14, type metadata accessor for Attachment);
  uint64_t v23 = Logger.logObject.getter();
  os_log_type_t v24 = static os_log_type_t.debug.getter();
  BOOL v25 = os_log_type_enabled(v23, v24);
  uint64_t v72 = v18;
  unint64_t v70 = a1;
  os_log_t v64 = v22;
  if (v25)
  {
    uint64_t v26 = (uint8_t *)swift_slowAlloc();
    v77[0] = (id)swift_slowAlloc();
    *(_DWORD *)uint64_t v26 = 136642819;
    uint64_t v63 = v2;
    uint64_t v27 = sub_10013E908();
    v75[0] = sub_100021444(v27, v28, (uint64_t *)v77);
    uint64_t v2 = v63;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100146CBC((uint64_t)v14, type metadata accessor for Attachment);
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "removing attachment: %{sensitive}s", v26, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_100146CBC((uint64_t)v14, type metadata accessor for Attachment);
  }

  int v29 = v73;
  BOOL v30 = (uint64_t *)&v16[v73[5]];
  unint64_t v31 = v30[1];
  if (!v31)
  {
    URL.stopAccessingSecurityScopedResource()();
    swift_getKeyPath();
    v75[0] = v2;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    swift_beginAccess();
    sub_100008DD4((uint64_t)(v2 + 3), (uint64_t)v77, (uint64_t *)&unk_100201530);
    if (v78)
    {
      sub_1000251D0((uint64_t)v77, (uint64_t)v75);
      sub_10002784C((uint64_t)v77, (uint64_t *)&unk_100201530);
      sub_100044740(v75, v76);
      uint64_t v43 = (uint64_t *)&v16[v29[11]];
      uint64_t v45 = *v43;
      unint64_t v44 = v43[1];
      swift_bridgeObjectRetain();
      sub_10000A8C8(0, 1, 0, 1, 0, 1, 1, 0, v45, v44);
      goto LABEL_14;
    }
LABEL_17:
    sub_10002784C((uint64_t)v77, (uint64_t *)&unk_100201530);
    goto LABEL_20;
  }
  uint64_t v32 = *v30;
  uint64_t v33 = self;
  swift_bridgeObjectRetain();
  id v34 = [v33 defaultManager];
  URL._bridgeToObjectiveC()(v35);
  uint64_t v37 = v36;
  v77[0] = 0;
  unsigned __int8 v38 = [v34 removeItemAtURL:v36 error:v77];

  if ((v38 & 1) == 0)
  {
    id v46 = v77[0];
    uint64_t v47 = _convertNSErrorToError(_:)();

    swift_willThrow();
    uint64_t v48 = v71;
    sub_100146C54((uint64_t)v16, v71, type metadata accessor for Attachment);
    swift_bridgeObjectRetain();
    uint64_t v49 = Logger.logObject.getter();
    os_log_type_t v50 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v49, v50))
    {
      uint64_t v51 = v32;
      uint64_t v52 = swift_slowAlloc();
      uint64_t v73 = (int *)swift_slowAlloc();
      v77[0] = v73;
      *(_DWORD *)uint64_t v52 = 136315395;
      os_log_t v64 = v49;
      swift_bridgeObjectRetain();
      v75[0] = sub_100021444(v51, v31, (uint64_t *)v77);
      uint64_t v67 = v47;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v52 + 12) = 2085;
      Swift::String v53 = URL.path(percentEncoded:)(1);
      v75[0] = sub_100021444(v53._countAndFlagsBits, (unint64_t)v53._object, (uint64_t *)v77);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100146CBC(v48, type metadata accessor for Attachment);
      uint64_t v49 = v64;
      _os_log_impl((void *)&_mh_execute_header, v64, v50, "failed to remove photo %s at %{sensitive}s", (uint8_t *)v52, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
      sub_100146CBC(v48, type metadata accessor for Attachment);
    }
    swift_errorRelease();

    goto LABEL_20;
  }
  id v39 = v77[0];
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  v75[0] = v2;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  sub_100008DD4((uint64_t)(v2 + 3), (uint64_t)v77, (uint64_t *)&unk_100201530);
  if (!v78) {
    goto LABEL_17;
  }
  sub_1000251D0((uint64_t)v77, (uint64_t)v75);
  sub_10002784C((uint64_t)v77, (uint64_t *)&unk_100201530);
  sub_100044740(v75, v76);
  uint64_t v40 = (uint64_t *)&v16[v29[11]];
  uint64_t v42 = *v40;
  unint64_t v41 = v40[1];
  swift_bridgeObjectRetain();
  sub_10000A8C8(0, 1, 0, 1, 1, 0, 0, 1, v42, v41);
LABEL_14:
  swift_bridgeObjectRelease();
  sub_100027DBC((uint64_t)v75);
LABEL_20:
  unint64_t v54 = v66;
  uint64_t v55 = v65;
  swift_getKeyPath();
  v77[0] = v2;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  v77[0] = v2;
  swift_getKeyPath();
  ObservationRegistrar.willSet<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  uint64_t v56 = (uint64_t)v69;
  sub_10013F7A8(v70, (uint64_t)v69);
  sub_100146CBC(v56, type metadata accessor for Attachment);
  swift_endAccess();
  v77[0] = v2;
  swift_getKeyPath();
  ObservationRegistrar.didSet<A, B>(_:keyPath:)();
  swift_release();
  sub_100146C54((uint64_t)v16, v74, type metadata accessor for Attachment);
  swift_getKeyPath();
  v77[0] = v2;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  v77[0] = v2;
  swift_getKeyPath();
  ObservationRegistrar.willSet<A, B>(_:keyPath:)();
  swift_release();
  int v57 = v2 + 8;
  swift_beginAccess();
  unint64_t v58 = v2[8];
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v2[8] = v58;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    unint64_t v58 = sub_100143BC8(0, *(void *)(v58 + 16) + 1, 1, v58, (uint64_t *)&unk_1001FF2A0, type metadata accessor for Attachment, type metadata accessor for Attachment);
    *int v57 = v58;
  }
  unint64_t v61 = *(void *)(v58 + 16);
  unint64_t v60 = *(void *)(v58 + 24);
  if (v61 >= v60 >> 1)
  {
    unint64_t v58 = sub_100143BC8(v60 > 1, v61 + 1, 1, v58, (uint64_t *)&unk_1001FF2A0, type metadata accessor for Attachment, type metadata accessor for Attachment);
    *int v57 = v58;
  }
  *(void *)(v58 + 16) = v61 + 1;
  sub_100035B34(v74, v58 + v54 + v61 * v55);
  swift_endAccess();
  v77[0] = v2;
  swift_getKeyPath();
  ObservationRegistrar.didSet<A, B>(_:keyPath:)();
  swift_release();
  return sub_100146CBC((uint64_t)v16, type metadata accessor for Attachment);
}

uint64_t sub_10013AB48@<X0>(char *a1@<X8>)
{
  uint64_t v3 = sub_1000063C0(&qword_100204808);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v27 - v8;
  if (*(unsigned char *)(v1 + 32) != 1)
  {
    unint64_t v14 = *(void *)v1;
    unint64_t v13 = *(void *)(v1 + 8);
    if ((_swift_isClassOrObjCExistentialType() & 1) != 0 && v14 >> 62)
    {
      uint64_t v27 = v4;
      swift_bridgeObjectRetain();
      uint64_t v25 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      uint64_t v26 = v25;
      uint64_t v4 = v27;
      if (v13 == v26) {
        goto LABEL_19;
      }
    }
    else
    {
      char isClassOrObjCExistentialType = _swift_isClassOrObjCExistentialType();
      uint64_t v16 = v14 & 0xFFFFFFFFFFFFFF8;
      if ((isClassOrObjCExistentialType & 1) == 0) {
        uint64_t v16 = v14;
      }
      if (v13 == *(void *)(v16 + 16)) {
        goto LABEL_19;
      }
    }
    if (_swift_isClassOrObjCExistentialType())
    {
      sub_100142EA4(v13, (v14 & 0xC000000000000001) == 0, v14);
      if ((v14 & 0xC000000000000001) != 0)
      {
        uint64_t result = sub_100142F04(v13, v14);
        if (v5 != 8) {
          goto LABEL_27;
        }
        uint64_t v28 = result;
        (*(void (**)(char *, uint64_t *, uint64_t))(v4 + 16))(v7, &v28, v3);
        uint64_t result = swift_unknownObjectRelease();
LABEL_16:
        if (__OFADD__(v13, 1))
        {
          __break(1u);
        }
        else
        {
          *(void *)(v1 + 8) = v13 + 1;
          int64_t v17 = *(uint64_t (**)(char *, char *, uint64_t))(v4 + 32);
          uint64_t result = v17(v9, v7, v3);
          uint64_t v19 = *(void *)(v1 + 16);
          unint64_t v18 = *(void *)(v1 + 24);
          unint64_t v20 = *(void *)(v19 + 16);
          if (v18 == v20)
          {
            (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
LABEL_19:
            *(unsigned char *)(v1 + 32) = 1;
            uint64_t v21 = sub_1000063C0(&qword_100204820);
            return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(a1, 1, 1, v21);
          }
          if (v18 < v20)
          {
            uint64_t v22 = *(void *)(v19 + 8 * v18 + 32);
            *(void *)(v1 + 24) = v18 + 1;
            uint64_t v23 = sub_1000063C0(&qword_100204820);
            uint64_t v24 = *(int *)(v23 + 48);
            v17(a1, v9, v3);
            *(void *)&a1[v24] = v22;
            return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(a1, 0, 1, v23);
          }
        }
        __break(1u);
LABEL_27:
        __break(1u);
        return result;
      }
    }
    else
    {
      sub_100142EA4(v13, 1, v14);
    }
    uint64_t result = (*(uint64_t (**)(char *, unint64_t, uint64_t))(v4 + 16))(v7, v14+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v13, v3);
    goto LABEL_16;
  }
  uint64_t v10 = sub_1000063C0(&qword_100204820);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);

  return v11((uint64_t)a1, 1, 1, v10);
}

uint64_t sub_10013AEFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[33] = a3;
  v4[34] = v3;
  v4[31] = a1;
  v4[32] = a2;
  uint64_t v5 = type metadata accessor for URL();
  v4[35] = v5;
  v4[36] = *(void *)(v5 - 8);
  v4[37] = swift_task_alloc();
  v4[38] = swift_task_alloc();
  v4[39] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for Attachment(0);
  v4[40] = v6;
  v4[41] = *(void *)(v6 - 8);
  v4[42] = swift_task_alloc();
  v4[43] = type metadata accessor for MainActor();
  v4[44] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[45] = v8;
  v4[46] = v7;
  return _swift_task_switch(sub_10013B070, v8, v7);
}

uint64_t sub_10013B070()
{
  uint64_t v50 = v0;
  if (qword_1001FAC28 != -1) {
    goto LABEL_28;
  }
  while (1)
  {
    uint64_t v1 = type metadata accessor for Logger();
    sub_10000EBE8(v1, (uint64_t)qword_100212770);
    swift_bridgeObjectRetain_n();
    uint64_t v2 = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.default.getter();
    uint64_t v46 = v0;
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      uint64_t v5 = swift_slowAlloc();
      *(_DWORD *)uint64_t v4 = 136642819;
      v49[0] = v5;
      swift_bridgeObjectRetain();
      uint64_t v6 = Array.description.getter();
      unint64_t v8 = v7;
      swift_bridgeObjectRelease();
      *(void *)(v0 + 240) = sub_100021444(v6, v8, v49);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v2, v3, "adding files: %{sensitive}s", v4, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    uint64_t v9 = *(void *)(v0 + 272);
    uint64_t v10 = *(void *)(v0 + 248);
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v11 = sub_10014651C(v10, v9);
    swift_release();
    int64_t v12 = *(void *)(v11 + 16);
    if (v12)
    {
      uint64_t v45 = *(void *)(v0 + 328);
      uint64_t v13 = *(void *)(v0 + 288);
      v49[0] = (uint64_t)_swiftEmptyArrayStorage;
      sub_100129248(0, v12, 0);
      unint64_t v14 = *(void (**)(unint64_t, unint64_t, uint64_t))(v13 + 16);
      v13 += 16;
      unint64_t v15 = v11 + ((*(unsigned __int8 *)(v13 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 64));
      uint64_t v43 = *(void *)(v13 + 56);
      unint64_t v44 = v14;
      uint64_t v42 = (void (**)(uint64_t, uint64_t))(v13 - 8);
      uint64_t v16 = (void *)v49[0];
      do
      {
        uint64_t v47 = *(void *)(v0 + 336);
        int64_t v48 = v12;
        uint64_t v18 = *(void *)(v0 + 304);
        unint64_t v17 = *(void *)(v0 + 312);
        uint64_t v19 = *(void *)(v0 + 296);
        uint64_t v20 = *(void *)(v0 + 280);
        v44(v17, v15, v20);
        v44(v18, v17, v20);
        URL.deletingPathExtension()();
        uint64_t v21 = URL.lastPathComponent.getter();
        uint64_t v23 = v22;
        uint64_t v24 = *v42;
        (*v42)(v19, v20);
        sub_10013C5FC(v18, 0, 0, v21, v23, v47);
        v24(v17, v20);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_100129248(0, v16[2] + 1, 1);
          uint64_t v16 = (void *)v49[0];
        }
        unint64_t v26 = v16[2];
        unint64_t v25 = v16[3];
        uint64_t v0 = v46;
        if (v26 >= v25 >> 1)
        {
          sub_100129248(v25 > 1, v26 + 1, 1);
          uint64_t v16 = (void *)v49[0];
        }
        uint64_t v27 = *(void *)(v46 + 336);
        v16[2] = v26 + 1;
        sub_100035B34(v27, (uint64_t)v16+ ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80))+ *(void *)(v45 + 72) * v26);
        v15 += v43;
        int64_t v12 = v48 - 1;
      }
      while (v48 != 1);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v16 = _swiftEmptyArrayStorage;
    }
    uint64_t v28 = *(void *)(v0 + 264);
    *(void *)(v0 + 192) = v16;
    if (!v28) {
      break;
    }
    uint64_t v29 = v16[2];
    if (!v29) {
      break;
    }
    unint64_t v30 = 0;
    uint64_t v32 = *(void *)(v0 + 320);
    uint64_t v31 = *(void *)(v0 + 328);
    while (1)
    {
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v16 = (void *)sub_1001440B8((unint64_t)v16);
      }
      if (v30 >= v16[2]) {
        break;
      }
      *(_OWORD *)((char *)v16
                + ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80))
                + *(void *)(v31 + 72) * v30
                + *(int *)(v32 + 44)) = *(_OWORD *)(v0 + 256);
      swift_bridgeObjectRelease();
      if (v29 == ++v30)
      {
        *(void *)(v0 + 192) = v16;
        goto LABEL_22;
      }
    }
    __break(1u);
LABEL_28:
    swift_once();
  }
LABEL_22:
  uint64_t v33 = Logger.logObject.getter();
  os_log_type_t v34 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v33, v34))
  {
    uint64_t v35 = (uint8_t *)swift_slowAlloc();
    v49[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v35 = 136642819;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    uint64_t v36 = Array.description.getter();
    unint64_t v38 = v37;
    swift_bridgeObjectRelease();
    *(void *)(v46 + 232) = sub_100021444(v36, v38, v49);
    uint64_t v0 = v46;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v33, v34, "deduped files: %{sensitive}s", v35, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  swift_beginAccess();
  *(void *)(v0 + 376) = static MainActor.shared.getter();
  uint64_t v40 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v0 + 384) = v40;
  *(void *)(v0 + 392) = v39;
  return _swift_task_switch(sub_10013B6BC, v40, v39);
}

uint64_t sub_10013B6BC()
{
  sub_1000063C0(&qword_100204890);
  v0[50] = static MainActor.shared.getter();
  uint64_t v1 = swift_task_alloc();
  v0[51] = v1;
  *(void *)(v1 + 16) = v0 + 24;
  uint64_t v2 = (void *)swift_task_alloc();
  v0[52] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_10013B7CC;
  return withTaskGroup<A, B>(of:returning:isolation:body:)();
}

uint64_t sub_10013B7CC()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 392);
  uint64_t v3 = *(void *)(v1 + 384);
  return _swift_task_switch(sub_10013B92C, v3, v2);
}

uint64_t sub_10013B92C()
{
  swift_release();
  swift_endAccess();
  uint64_t v1 = *(void *)(v0 + 360);
  uint64_t v2 = *(void *)(v0 + 368);
  return _swift_task_switch(sub_10013B99C, v1, v2);
}

uint64_t sub_10013B99C()
{
  uint64_t v1 = v0[34];
  swift_release();
  uint64_t v2 = v0[24];
  swift_getKeyPath();
  v0[28] = v1;
  sub_100142DF8(&qword_100201970, (void (*)(uint64_t))type metadata accessor for AttachmentManager);
  swift_bridgeObjectRetain();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  v0[27] = v1;
  swift_getKeyPath();
  ObservationRegistrar.willSet<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  sub_1001635B4(v2);
  swift_endAccess();
  v0[26] = v1;
  swift_getKeyPath();
  ObservationRegistrar.didSet<A, B>(_:keyPath:)();
  swift_release();
  swift_getKeyPath();
  v0[25] = v1;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  sub_100008DD4(v1 + 24, (uint64_t)(v0 + 2), (uint64_t *)&unk_100201530);
  if (v0[5])
  {
    uint64_t v4 = v0[32];
    unint64_t v3 = v0[33];
    sub_1000251D0((uint64_t)(v0 + 2), (uint64_t)(v0 + 7));
    sub_10002784C((uint64_t)(v0 + 2), (uint64_t *)&unk_100201530);
    sub_100044740(v0 + 7, v0[10]);
    sub_10000A8C8(0, 1, *(void *)(v0[24] + 16), 0, 0, 1, 0, 1, v4, v3);
    sub_100027DBC((uint64_t)(v0 + 7));
  }
  else
  {
    sub_10002784C((uint64_t)(v0 + 2), (uint64_t *)&unk_100201530);
  }
  uint64_t v5 = v0[24];
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(uint64_t))v0[1];
  return v6(v5);
}

void sub_10013BC50(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  uint64_t v20 = v1;
  sub_100142DF8(&qword_100201970, (void (*)(uint64_t))type metadata accessor for AttachmentManager);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v8 = *(void *)(v7 + 16);
  if (v8)
  {
    uint64_t v9 = *(void *)(type metadata accessor for Attachment(0) - 8);
    uint64_t v10 = v7 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    swift_bridgeObjectRetain();
    unint64_t v12 = 0;
    while ((static URL.== infix(_:_:)() & 1) == 0)
    {
      ++v12;
      v10 += v11;
      if (v8 == v12)
      {
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease();
    sub_100139FA4(v12);
  }
  else
  {
LABEL_6:
    if (qword_1001FAC28 != -1) {
      swift_once();
    }
    uint64_t v13 = type metadata accessor for Logger();
    sub_10000EBE8(v13, (uint64_t)qword_100212770);
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
    unint64_t v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      *(_DWORD *)uint64_t v16 = 136642819;
      Swift::String v17 = URL.path(percentEncoded:)(1);
      v18[1] = sub_100021444(v17._countAndFlagsBits, (unint64_t)v17._object, &v19);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "no attachment with ID %{sensitive}s to remove", v16, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    }
  }
}

void sub_10013BFD8()
{
  qword_100212AF0 = 0x4000000000000000;
}

Swift::Int sub_10013BFE8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DocumentResourceIdentifier();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Attachment.UploadState(0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  Hasher.init(_seed:)();
  sub_100146C54(v1, (uint64_t)v8, type metadata accessor for Attachment.UploadState);
  uint64_t v9 = sub_1000063C0(&qword_1002040B8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    Hasher._combine(_:)(1uLL);
    sub_100142DF8(&qword_1002047C0, (void (*)(uint64_t))&type metadata accessor for DocumentResourceIdentifier);
    dispatch thunk of Hashable.hash(into:)();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return Hasher._finalize()();
}

void sub_10013C1FC()
{
  uint64_t v1 = type metadata accessor for DocumentResourceIdentifier();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100146C54(v0, (uint64_t)v7, type metadata accessor for Attachment.UploadState);
  uint64_t v8 = sub_1000063C0(&qword_1002040B8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v5, v7, v1);
    Hasher._combine(_:)(1uLL);
    sub_100142DF8(&qword_1002047C0, (void (*)(uint64_t))&type metadata accessor for DocumentResourceIdentifier);
    dispatch thunk of Hashable.hash(into:)();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  }
}

Swift::Int sub_10013C3E8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DocumentResourceIdentifier();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  Hasher.init(_seed:)();
  sub_100146C54(v1, (uint64_t)v8, type metadata accessor for Attachment.UploadState);
  uint64_t v9 = sub_1000063C0(&qword_1002040B8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v6, v8, v2);
    Hasher._combine(_:)(1uLL);
    sub_100142DF8(&qword_1002047C0, (void (*)(uint64_t))&type metadata accessor for DocumentResourceIdentifier);
    dispatch thunk of Hashable.hash(into:)();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  return Hasher._finalize()();
}

uint64_t sub_10013C5FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v51 = a4;
  uint64_t v52 = a5;
  uint64_t v50 = a3;
  uint64_t v56 = type metadata accessor for URL();
  uint64_t v9 = *(void *)(v56 - 8);
  __chkstk_darwin(v56);
  uint64_t v46 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000063C0(&qword_1001FC4F0);
  __chkstk_darwin(v11 - 8);
  uint64_t v45 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = type metadata accessor for URLResourceValues();
  uint64_t v43 = *(void *)(v44 - 8);
  __chkstk_darwin(v44);
  unint64_t v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_log_type_t v15 = (int *)type metadata accessor for Attachment(0);
  uint64_t v16 = a6 + v15[6];
  uint64_t v17 = type metadata accessor for UTType();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(void (**)(void, void, void))(v18 + 56);
  uint64_t v54 = v16;
  int64_t v48 = v19;
  uint64_t v49 = v17;
  uint64_t v47 = v18 + 56;
  v19(v16, 1, 1);
  uint64_t v20 = a6 + v15[7];
  *(void *)uint64_t v20 = 0;
  Swift::String v53 = (uint64_t *)v20;
  *(unsigned char *)(v20 + 8) = 1;
  *(void *)(a6 + v15[9]) = 0;
  uint64_t v21 = a6 + v15[10];
  uint64_t v22 = sub_1000063C0(&qword_1002040B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v21, 1, 1, v22);
  uint64_t v23 = v15[11];
  uint64_t v55 = a6;
  uint64_t v24 = (NSURL *)(a6 + v23);
  v24->super.Class isa = 0;
  v24->_urlString = 0;
  URL._bridgeToObjectiveC()(v24);
  unint64_t v26 = v25;
  uint64_t v27 = (void *)_CFURLCopySecurityScopeFromFileURL();

  if (v27)
  {

    URL.startAccessingSecurityScopedResource()();
  }
  uint64_t v28 = v55;
  uint64_t v29 = v56;
  uint64_t v30 = a1;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v55, a1, v56);
  uint64_t v31 = (void *)(v28 + v15[5]);
  uint64_t v32 = v50;
  void *v31 = a2;
  v31[1] = v32;
  sub_1000063C0(&qword_100204790);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10018A740;
  *(void *)(inited + 32) = NSURLFileSizeKey;
  *(void *)(inited + 40) = NSURLContentTypeKey;
  os_log_type_t v34 = NSURLFileSizeKey;
  uint64_t v35 = NSURLContentTypeKey;
  sub_1001469B4(inited);
  swift_setDeallocating();
  type metadata accessor for URLResourceKey(0);
  swift_arrayDestroy();
  URL.resourceValues(forKeys:)();
  swift_bridgeObjectRelease();
  uint64_t v36 = URLResourceValues.fileSize.getter();
  unint64_t v37 = v53;
  *Swift::String v53 = v36;
  *((unsigned char *)v37 + 8) = v38 & 1;
  uint64_t v39 = (uint64_t)v45;
  URLResourceValues.contentType.getter();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v30, v29);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v14, v44);
  uint64_t result = sub_100146BE4(v39, v54);
  unint64_t v41 = (void *)(v55 + v15[8]);
  uint64_t v42 = v52;
  void *v41 = v51;
  v41[1] = v42;
  return result;
}

size_t sub_10013CCE8()
{
  uint64_t v0 = type metadata accessor for Data.Deallocator();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  URL.path.getter();
  String.utf8CString.getter();
  swift_bridgeObjectRelease();
  uint64_t v4 = (const char *)sandbox_extension_issue_file();
  swift_release();
  if (v4)
  {
    size_t result = strlen(v4);
    uint64_t v6 = result + 1;
    if (__OFADD__(result, 1))
    {
      __break(1u);
    }
    else
    {
      (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for Data.Deallocator.free(_:), v0);
      Data.Deallocator._deallocator.getter();
      if (v6)
      {
        type metadata accessor for __DataStorage();
        swift_allocObject();
        swift_retain();
        uint64_t v7 = __DataStorage.init(bytes:length:copy:deallocator:offset:)();
        uint64_t v8 = sub_1001458FC(v7, v6);
        unint64_t v10 = v9;
        swift_release();
      }
      else
      {
        uint64_t v12 = (void (*)(const char *, void))Data.Deallocator._deallocator.getter();
        v12(v4, 0);
        swift_release();
        swift_release();
        uint64_t v8 = 0;
        unint64_t v10 = 0xC000000000000000;
      }
      (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
      URL._bridgeToObjectiveC()(v13);
      os_log_type_t v15 = v14;
      Class isa = Data._bridgeToObjectiveC()().super.isa;
      _CFURLAttachSecurityScopeToFileURL();

      return sub_1000446E8(v8, v10);
    }
  }
  else
  {
    sub_100146E30();
    swift_allocError();
    *uint64_t v11 = 0xD000000000000019;
    v11[1] = 0x80000001001A06A0;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_10013CF7C()
{
  *(void *)(v1 + 128) = v0;
  return _swift_task_switch(sub_10013CF9C, 0, 0);
}

uint64_t sub_10013CF9C()
{
  if (qword_1001FADB0 != -1) {
    swift_once();
  }
  double v1 = *(double *)&qword_100212AF0;
  id v2 = objc_allocWithZone((Class)QLThumbnailGenerationRequest);
  URL._bridgeToObjectiveC()(v3);
  uint64_t v5 = v4;
  id v6 = [v2 initWithFileAtURL:v4 size:-1 scale:100.0 representationTypes:v1];
  v0[17] = v6;

  [v6 setIconMode:1];
  id v7 = [self sharedGenerator];
  v0[18] = v7;
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_10013D16C;
  uint64_t v8 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_10013D538;
  v0[13] = &unk_1001EFB70;
  v0[14] = v8;
  [v7 generateBestRepresentationForRequest:v6 completionHandler:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_10013D16C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 152) = v1;
  if (v1) {
    id v2 = sub_10013D310;
  }
  else {
    id v2 = sub_10013D27C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10013D27C()
{
  id v2 = (void *)v0[17];
  uint64_t v1 = (void *)v0[18];
  uint64_t v3 = (void *)v0[15];
  id v4 = [v3 CGImage];

  uint64_t v5 = (uint64_t (*)(id))v0[1];
  return v5(v4);
}

uint64_t sub_10013D310()
{
  uint64_t v1 = *(void **)(v0 + 144);
  swift_willThrow();

  if (qword_1001FAC28 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000EBE8(v2, (uint64_t)qword_100212770);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v10 = *(void **)(v0 + 136);
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    id v6 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 138412290;
    swift_errorRetain();
    uint64_t v7 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 80) = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *id v6 = v7;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "failed to generate thumbnail: %@", v5, 0xCu);
    sub_1000063C0(&qword_1001FED90);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8(0);
}

uint64_t sub_10013D538(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    sub_1000063C0(&qword_1001FEE40);
    uint64_t v5 = swift_allocError();
    *id v6 = a3;
    id v7 = a3;
    return _swift_continuation_throwingResumeWithError(v3, v5);
  }
  else
  {
    if (a2)
    {
      **(void **)(*(void *)(v3 + 64) + 40) = a2;
      id v8 = a2;
      a1 = v3;
    }
    else
    {
      __break(1u);
    }
    return _swift_continuation_throwingResume(a1);
  }
}

void sub_10013D5F8()
{
  if (*(void *)(v0 + *(int *)(type metadata accessor for Attachment(0) + 20) + 8))
  {
    uint64_t v1 = Data.init(contentsOf:options:)();
    unint64_t v3 = v2;
    id v4 = objc_allocWithZone((Class)UIImage);
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    id v6 = [v4 initWithData:isa];
    sub_1000446E8(v1, v3);

    if (v6)
    {
      os_log_t oslog = (os_log_t)v6;
      id v7 = sub_100066078(0, 1, 0, 1);

      id v8 = UIImageJPEGRepresentation(v7, 0.75);
      if (v8)
      {
        unint64_t v9 = v8;
        uint64_t v10 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v12 = v11;

        Data.write(to:options:)();
        sub_1000446E8(v10, v12);
        return;
      }
    }
    else
    {
      if (qword_1001FAC28 != -1) {
        swift_once();
      }
      uint64_t v13 = type metadata accessor for Logger();
      sub_10000EBE8(v13, (uint64_t)qword_100212770);
      os_log_t oslog = (os_log_t)Logger.logObject.getter();
      os_log_type_t v14 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(oslog, v14))
      {
        os_log_type_t v15 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)os_log_type_t v15 = 0;
        _os_log_impl((void *)&_mh_execute_header, oslog, v14, "Failed to resize image.", v15, 2u);
        swift_slowDealloc();
      }
    }
  }
}

void sub_10013D9F0()
{
  uint64_t v1 = type metadata accessor for DocumentResourceIdentifier();
  uint64_t v23 = *(void *)(v1 - 8);
  uint64_t v24 = v1;
  __chkstk_darwin(v1);
  uint64_t v22 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for Attachment.UploadState(0);
  __chkstk_darwin(v3 - 8);
  unint64_t v25 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for UTType();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000063C0(&qword_1001FC4F0);
  __chkstk_darwin(v9 - 8);
  unint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for URL();
  sub_100142DF8(&qword_100204778, (void (*)(uint64_t))&type metadata accessor for URL);
  dispatch thunk of Hashable.hash(into:)();
  unint64_t v12 = (int *)type metadata accessor for Attachment(0);
  if (*(void *)(v0 + v12[5] + 8))
  {
    Hasher._combine(_:)(1uLL);
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  sub_100008DD4(v0 + v12[6], (uint64_t)v11, &qword_1001FC4F0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v5) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v11, v5);
    Hasher._combine(_:)(1u);
    sub_100142DF8(&qword_1002047C8, (void (*)(uint64_t))&type metadata accessor for UTType);
    dispatch thunk of Hashable.hash(into:)();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  uint64_t v13 = (uint64_t)v25;
  uint64_t v14 = v0 + v12[7];
  if (*(unsigned char *)(v14 + 8) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    Swift::UInt v15 = *(void *)v14;
    Hasher._combine(_:)(1u);
    Hasher._combine(_:)(v15);
  }
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void **)(v0 + v12[9]);
  if (v16)
  {
    Hasher._combine(_:)(1u);
    type metadata accessor for CGImage(0);
    sub_100142DF8(&qword_1002047A8, type metadata accessor for CGImage);
    id v17 = v16;
    _CFObject.hash(into:)();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  sub_100146C54(v0 + v12[10], v13, type metadata accessor for Attachment.UploadState);
  uint64_t v18 = sub_1000063C0(&qword_1002040B8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48))(v13, 1, v18) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    uint64_t v20 = v22;
    uint64_t v19 = v23;
    uint64_t v21 = v24;
    (*(void (**)(char *, uint64_t, uint64_t))(v23 + 32))(v22, v13, v24);
    Hasher._combine(_:)(1uLL);
    sub_100142DF8(&qword_1002047C0, (void (*)(uint64_t))&type metadata accessor for DocumentResourceIdentifier);
    dispatch thunk of Hashable.hash(into:)();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v20, v21);
  }
  if (*(void *)(v0 + v12[11] + 8))
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
}

uint64_t sub_10013DF9C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

Swift::Int sub_10013E008()
{
  return Hasher._finalize()();
}

Swift::Int sub_10013E04C()
{
  return Hasher._finalize()();
}

uint64_t sub_10013E088(void *a1, void *a2)
{
  uint64_t v3 = a1[1];
  uint64_t v4 = a2[1];
  if (!v3) {
    return v4 == 0;
  }
  if (!v4) {
    return 0;
  }
  if (*a1 == *a2 && v3 == v4) {
    return 1;
  }
  else {
    return _stringCompareWithSmolCheck(_:_:expecting:)();
  }
}

Swift::Int sub_10013E0D4()
{
  uint64_t v1 = *(void *)(v0 + 8);
  Hasher.init(_seed:)();
  if (v1)
  {
    Hasher._combine(_:)(1uLL);
    String.hash(into:)();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  return Hasher._finalize()();
}

void sub_10013E144()
{
  if (*(void *)(v0 + 8))
  {
    Hasher._combine(_:)(1uLL);
    String.hash(into:)();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
}

Swift::Int sub_10013E1BC()
{
  uint64_t v1 = *(void *)(v0 + 8);
  Hasher.init(_seed:)();
  if (v1)
  {
    Hasher._combine(_:)(1uLL);
    String.hash(into:)();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  return Hasher._finalize()();
}

uint64_t sub_10013E228(uint64_t a1, uint64_t a2)
{
  v2[5] = a1;
  v2[6] = a2;
  uint64_t v3 = type metadata accessor for URL.DirectoryHint();
  v2[7] = v3;
  v2[8] = *(void *)(v3 - 8);
  v2[9] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for UUID();
  v2[10] = v4;
  v2[11] = *(void *)(v4 - 8);
  v2[12] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for URL();
  v2[13] = v5;
  v2[14] = *(void *)(v5 - 8);
  v2[15] = swift_task_alloc();
  v2[16] = swift_task_alloc();
  v2[17] = swift_task_alloc();
  return _swift_task_switch(sub_10013E3E8, 0, 0);
}

uint64_t sub_10013E3E8()
{
  uint64_t v2 = *(void *)(v0 + 128);
  uint64_t v1 = *(void *)(v0 + 136);
  uint64_t v3 = *(void *)(v0 + 104);
  uint64_t v4 = *(void *)(v0 + 112);
  ReceivedTransferredFile.file.getter();
  URL.deletingPathExtension()();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v5(v2, v3);
  uint64_t v35 = URL.lastPathComponent.getter();
  uint64_t v38 = v6;
  v5(v1, v3);
  ReceivedTransferredFile.file.getter();
  URL.pathExtension.getter();
  uint64_t v39 = v5;
  v5(v1, v3);
  if (qword_1001FADB8 != -1) {
    swift_once();
  }
  uint64_t v7 = *(void *)(v0 + 128);
  uint64_t v8 = *(void *)(v0 + 136);
  uint64_t v9 = *(void *)(v0 + 112);
  uint64_t v10 = *(void *)(v0 + 96);
  uint64_t v11 = *(void *)(v0 + 104);
  uint64_t v12 = *(void *)(v0 + 88);
  uint64_t v36 = *(void *)(v0 + 80);
  uint64_t v13 = *(void *)(v0 + 64);
  uint64_t v14 = *(void *)(v0 + 72);
  uint64_t v37 = *(void *)(v0 + 56);
  uint64_t v15 = sub_10000EBE8(v11, (uint64_t)qword_100212AF8);
  os_log_type_t v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
  v34(v7, v15, v11);
  UUID.init()();
  uint64_t v16 = UUID.uuidString.getter();
  uint64_t v18 = v17;
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v36);
  *(void *)(v0 + 16) = v16;
  *(void *)(v0 + 24) = v18;
  (*(void (**)(uint64_t, void, uint64_t))(v13 + 104))(v14, enum case for URL.DirectoryHint.inferFromPath(_:), v37);
  sub_10002DF54();
  URL.appending<A>(path:directoryHint:)();
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v14, v37);
  swift_bridgeObjectRelease();
  v39(v7, v11);
  URL.appendingPathExtension(_:)();
  swift_bridgeObjectRelease();
  v39(v8, v11);
  id v19 = [self defaultManager];
  ReceivedTransferredFile.file.getter();
  URL._bridgeToObjectiveC()(v20);
  uint64_t v22 = v21;
  v39(v8, v11);
  URL._bridgeToObjectiveC()(v23);
  unint64_t v25 = v24;
  *(void *)(v0 + 32) = 0;
  LODWORD(v11) = [v19 moveItemAtURL:v22 toURL:v24 error:v0 + 32];

  id v26 = *(id *)(v0 + 32);
  uint64_t v27 = *(void *)(v0 + 136);
  uint64_t v28 = *(void *)(v0 + 120);
  uint64_t v29 = *(void *)(v0 + 104);
  if (v11)
  {
    uint64_t v30 = *(void *)(v0 + 40);
    v34(*(void *)(v0 + 136), *(void *)(v0 + 120), *(void *)(v0 + 104));
    sub_10013C5FC(v27, 0, 0xE000000000000000, v35, v38, v30);
  }
  else
  {
    uint64_t v32 = v26;
    swift_bridgeObjectRelease();
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }
  v39(v28, v29);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v31 = *(uint64_t (**)(void))(v0 + 8);
  return v31();
}

uint64_t sub_10013E858()
{
  uint64_t v0 = type metadata accessor for UTType();
  __chkstk_darwin(v0 - 8);
  static UTType.data.getter();
  return FileRepresentation.init(importedContentType:shouldAttemptToOpenInPlace:importing:)();
}

uint64_t sub_10013E908()
{
  uint64_t v1 = sub_1000063C0(&qword_1001FC4F0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = 0;
  unint64_t v22 = 0xE000000000000000;
  _StringGuts.grow(_:)(58);
  v4._object = (void *)0x80000001001A04E0;
  v4._countAndFlagsBits = 0xD000000000000011;
  String.append(_:)(v4);
  uint64_t v5 = (int *)type metadata accessor for Attachment(0);
  long long v20 = *(_OWORD *)(v0 + v5[5]);
  _print_unlocked<A, B>(_:_:)();
  v6._countAndFlagsBits = 0x657079547475202CLL;
  v6._object = (void *)0xEA0000000000203ALL;
  String.append(_:)(v6);
  sub_100008DD4(v0 + v5[6], (uint64_t)v3, &qword_1001FC4F0);
  uint64_t v7 = type metadata accessor for UTType();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v3, 1, v7) == 1)
  {
    sub_10002784C((uint64_t)v3, &qword_1001FC4F0);
    uint64_t v9 = (void *)0xE300000000000000;
    uint64_t v10 = 7104878;
  }
  else
  {
    uint64_t v10 = UTType.identifier.getter();
    uint64_t v9 = v11;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v3, v7);
  }
  v12._countAndFlagsBits = v10;
  v12._object = v9;
  String.append(_:)(v12);
  swift_bridgeObjectRelease();
  v13._countAndFlagsBits = 0x203A657A6973202CLL;
  v13._object = (void *)0xE800000000000000;
  String.append(_:)(v13);
  uint64_t v14 = (uint64_t *)(v0 + v5[7]);
  uint64_t v15 = *v14;
  LOBYTE(v14) = *((unsigned char *)v14 + 8);
  *(void *)&long long v20 = v15;
  BYTE8(v20) = (_BYTE)v14;
  sub_1000063C0(&qword_100202630);
  v16._countAndFlagsBits = String.init<A>(describing:)();
  String.append(_:)(v16);
  swift_bridgeObjectRelease();
  v17._countAndFlagsBits = 0x6F6C70557369202CLL;
  v17._object = (void *)0xEE00203A64656461;
  String.append(_:)(v17);
  type metadata accessor for Attachment.UploadState(0);
  _print_unlocked<A, B>(_:_:)();
  v18._countAndFlagsBits = 41;
  v18._object = (void *)0xE100000000000000;
  String.append(_:)(v18);
  return v21;
}

id sub_10013EBB8()
{
  uint64_t v0 = type metadata accessor for URL();
  sub_1000281F0(v0, qword_100212AF8);
  uint64_t v1 = sub_10000EBE8(v0, (uint64_t)qword_100212AF8);
  return sub_10013EC04(v1);
}

id sub_10013EC04@<X0>(uint64_t a1@<X8>)
{
  uint64_t v27 = a1;
  uint64_t v1 = type metadata accessor for URL.DirectoryHint();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  Swift::String v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v25 - v10;
  Swift::String v12 = self;
  id v13 = [v12 defaultManager];
  id v14 = [v13 temporaryDirectory];

  static URL._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v29 = (void *)0xD000000000000016;
  unint64_t v30 = 0x800000010019BF00;
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, enum case for URL.DirectoryHint.inferFromPath(_:), v1);
  sub_10002DF54();
  URL.appending<A>(path:directoryHint:)();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void (**)(char *, uint64_t))(v6 + 8);
  v15(v9, v5);
  id v16 = [v12 defaultManager];
  URL._bridgeToObjectiveC()(v17);
  id v19 = v18;
  uint64_t v29 = 0;
  LODWORD(v4) = [v16 createDirectoryAtURL:v18 withIntermediateDirectories:1 attributes:0 error:&v29];

  id v26 = v29;
  if (v4)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v27, v11, v5);
    id v20 = v26;
    return v20;
  }
  else
  {
    id v22 = v26;
    uint64_t v23 = _convertNSErrorToError(_:)();

    swift_willThrow();
    v15(v11, v5);
    uint64_t v29 = 0;
    unint64_t v30 = 0xE000000000000000;
    _StringGuts.grow(_:)(31);
    v24._countAndFlagsBits = 0xD00000000000001DLL;
    v24._object = (void *)0x80000001001A04C0;
    String.append(_:)(v24);
    uint64_t v28 = v23;
    sub_1000063C0(&qword_1001FEE40);
    _print_unlocked<A, B>(_:_:)();
    id result = (id)_assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

uint64_t sub_10013EFF4@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_100142DF8(&qword_100201970, (void (*)(uint64_t))type metadata accessor for AttachmentManager);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  *a2 = *(void *)(v3 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t sub_10013F0B4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_10013F194(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 16) = a2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10013F1FC@<X0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  sub_100142DF8(&qword_100201970, (void (*)(uint64_t))type metadata accessor for AttachmentManager);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  return sub_100008DD4(v1 + 24, a1, (uint64_t *)&unk_100201530);
}

uint64_t sub_10013F2C8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_100142DF8(&qword_100201970, (void (*)(uint64_t))type metadata accessor for AttachmentManager);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  return sub_100008DD4(v3 + 24, a2, (uint64_t *)&unk_100201530);
}

uint64_t sub_10013F394(uint64_t a1)
{
  sub_100008DD4(a1, (uint64_t)v2, (uint64_t *)&unk_100201530);
  swift_getKeyPath();
  sub_100142DF8(&qword_100201970, (void (*)(uint64_t))type metadata accessor for AttachmentManager);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  return sub_10002784C((uint64_t)v2, (uint64_t *)&unk_100201530);
}

uint64_t sub_10013F484(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + 24;
  swift_beginAccess();
  sub_100146D2C(a2, v3);
  return swift_endAccess();
}

uint64_t sub_10013F4E8()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_10013F5A0@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_100142DF8(&qword_100201970, (void (*)(uint64_t))type metadata accessor for AttachmentManager);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  *a2 = *(void *)(v3 + 64);
  return swift_bridgeObjectRetain();
}

uint64_t sub_10013F660()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_10013F740(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 64) = a2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10013F7A8@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v5 = sub_1001440B8(v5);
  }
  unint64_t v6 = *(void *)(v5 + 16);
  if (v6 <= a1)
  {
    __break(1u);
    goto LABEL_15;
  }
  unint64_t v7 = v6 - 1;
  uint64_t v8 = *(void *)(type metadata accessor for Attachment(0) - 8);
  uint64_t v9 = *(void *)(v8 + 72);
  unint64_t v10 = v5 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)) + v9 * a1;
  uint64_t result = sub_100035B34(v10, a2);
  if ((uint64_t)(v7 - a1) < 0)
  {
LABEL_15:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  if (v9 > 0 || v10 >= v10 + v9 + v9 * (v7 - a1))
  {
    uint64_t result = swift_arrayInitWithTakeFrontToBack();
  }
  else if (v9)
  {
    uint64_t result = swift_arrayInitWithTakeBackToFront();
  }
  *(void *)(v5 + 16) = v7;
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_10013F91C@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v31 = a3;
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v30 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  unint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Attachment(0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8 - 8);
  Swift::String v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  id v14 = (char *)&v29 - v13;
  unint64_t v15 = *a1;
  swift_getKeyPath();
  uint64_t v34 = a2;
  sub_100142DF8(&qword_100201970, (void (*)(uint64_t))type metadata accessor for AttachmentManager);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  if ((v15 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v16 = *(void *)(a2 + 16);
  if (v15 >= *(void *)(v16 + 16))
  {
LABEL_11:
    __break(1u);
LABEL_12:
    swift_once();
    goto LABEL_5;
  }
  sub_100146C54(v16+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * v15, (uint64_t)v14, type metadata accessor for Attachment);
  uint64_t v17 = v32;
  sub_10013CCE8();
  if (!v17)
  {
    (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v7, v14, v5);
    uint64_t v25 = v31;
    DocumentResource.init(url:)();
    sub_100146CBC((uint64_t)v14, type metadata accessor for Attachment);
    uint64_t v26 = type metadata accessor for DocumentResource();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v25, 0, 1, v26);
  }
  if (qword_1001FAC28 != -1) {
    goto LABEL_12;
  }
LABEL_5:
  uint64_t v18 = type metadata accessor for Logger();
  sub_10000EBE8(v18, (uint64_t)qword_100212770);
  sub_100146C54((uint64_t)v14, (uint64_t)v12, type metadata accessor for Attachment);
  swift_errorRetain();
  swift_errorRetain();
  id v19 = Logger.logObject.getter();
  os_log_type_t v20 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = swift_slowAlloc();
    uint64_t v30 = swift_slowAlloc();
    uint64_t v32 = swift_slowAlloc();
    uint64_t v35 = v32;
    *(_DWORD *)uint64_t v21 = 136643075;
    uint64_t v22 = sub_10013E908();
    uint64_t v33 = sub_100021444(v22, v23, &v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100146CBC((uint64_t)v12, type metadata accessor for Attachment);
    *(_WORD *)(v21 + 12) = 2112;
    swift_errorRetain();
    uint64_t v24 = _swift_stdlib_bridgeErrorToNSError();
    uint64_t v33 = v24;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(void *)uint64_t v30 = v24;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "failed to extend sandbox extension to %{sensitive}s: %@", (uint8_t *)v21, 0x16u);
    sub_1000063C0(&qword_1001FED90);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
    sub_100146CBC((uint64_t)v12, type metadata accessor for Attachment);
  }
  swift_errorRelease();
  sub_100146CBC((uint64_t)v14, type metadata accessor for Attachment);
  uint64_t v28 = type metadata accessor for DocumentResource();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v31, 1, 1, v28);
}

uint64_t sub_10013FEA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[11] = a2;
  v3[12] = a3;
  uint64_t v4 = type metadata accessor for Attachment(0);
  v3[13] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[14] = v5;
  v3[15] = *(void *)(v5 + 64);
  v3[16] = swift_task_alloc();
  sub_1000063C0(&qword_1001FF820);
  v3[17] = swift_task_alloc();
  v3[18] = swift_task_alloc();
  uint64_t v6 = sub_1000063C0(&qword_100204888);
  v3[19] = v6;
  v3[20] = *(void *)(v6 - 8);
  v3[21] = swift_task_alloc();
  uint64_t v7 = sub_1000063C0(&qword_100201020);
  v3[22] = v7;
  v3[23] = *(void *)(v7 - 8);
  v3[24] = swift_task_alloc();
  sub_1000063C0(&qword_100201028);
  v3[25] = swift_task_alloc();
  v3[26] = swift_task_alloc();
  v3[27] = type metadata accessor for MainActor();
  v3[28] = static MainActor.shared.getter();
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
  v3[29] = v9;
  v3[30] = v8;
  return _swift_task_switch(sub_1001400E8, v9, v8);
}

uint64_t sub_1001400E8()
{
  uint64_t v2 = *(void *)(v1 + 184);
  uint64_t v41 = *(void *)(v1 + 176);
  uint64_t v40 = *(void *)(v1 + 112);
  unint64_t v3 = *(void *)(**(void **)(v1 + 96) + 16);
  uint64_t v39 = (void (**)(void, void, void, void))(v2 + 56);
  uint64_t v38 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  uint64_t v36 = **(void **)(v1 + 96);
  swift_bridgeObjectRetain();
  unint64_t v4 = 0;
  unint64_t v37 = v3;
  while (1)
  {
    if (v4 == v3)
    {
      (*v39)(*(void *)(v1 + 200), 1, 1, *(void *)(v1 + 176));
      unint64_t v5 = v3;
    }
    else
    {
      if (v4 >= *(void *)(v36 + 16))
      {
        __break(1u);
        goto LABEL_21;
      }
      uint64_t v6 = *(unint64_t **)(v1 + 200);
      uint64_t v7 = *(void *)(v1 + 176);
      unint64_t v5 = v4 + 1;
      uint64_t v8 = *(void *)(v1 + 192) + *(int *)(v41 + 48);
      sub_100146C54(v36+ ((*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80))+ *(void *)(v40 + 72) * v4, v8, type metadata accessor for Attachment);
      uint64_t v9 = (uint64_t)v6 + *(int *)(v41 + 48);
      *uint64_t v6 = v4;
      sub_100035B34(v8, v9);
      (*v39)(v6, 0, 1, v7);
    }
    uint64_t v10 = *(void *)(v1 + 208);
    uint64_t v11 = *(void *)(v1 + 176);
    sub_100026FD0(*(void *)(v1 + 200), v10, &qword_100201028);
    if ((*v38)(v10, 1, v11) == 1) {
      break;
    }
    unint64_t v42 = v5;
    Swift::String v12 = *(uint64_t **)(v1 + 208);
    uint64_t v13 = *(void *)(v1 + 136);
    uint64_t v14 = *(void *)(v1 + 144);
    uint64_t v15 = *(void *)(v1 + 128);
    uint64_t v16 = *v12;
    uint64_t v17 = (uint64_t)v12 + *(int *)(v41 + 48);
    uint64_t v18 = type metadata accessor for TaskPriority();
    uint64_t v19 = *(void *)(v18 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 56))(v14, 1, 1, v18);
    sub_100035B34(v17, v15);
    unint64_t v20 = (*(unsigned __int8 *)(v40 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
    uint64_t v21 = (void *)swift_allocObject();
    void v21[2] = 0;
    v21[3] = 0;
    v21[4] = v16;
    sub_100035B34(v15, (uint64_t)v21 + v20);
    sub_100008DD4(v14, v13, &qword_1001FF820);
    int v22 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v13, 1, v18);
    uint64_t v23 = *(void *)(v1 + 136);
    if (v22 == 1)
    {
      sub_10002784C(*(void *)(v1 + 136), &qword_1001FF820);
    }
    else
    {
      TaskPriority.rawValue.getter();
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v23, v18);
    }
    unint64_t v3 = v37;
    if (v21[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v24 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v26 = v25;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v24 = 0;
      uint64_t v26 = 0;
    }
    uint64_t v27 = **(void **)(v1 + 88);
    uint64_t v28 = swift_allocObject();
    *(void *)(v28 + 16) = &unk_1002048A0;
    *(void *)(v28 + 24) = v21;
    sub_1000063C0(&qword_100204890);
    uint64_t v29 = v26 | v24;
    if (v26 | v24)
    {
      uint64_t v29 = v1 + 16;
      *(void *)(v1 + 16) = 0;
      *(void *)(v1 + 24) = 0;
      *(void *)(v1 + 32) = v24;
      *(void *)(v1 + 40) = v26;
    }
    uint64_t v0 = *(void *)(v1 + 144);
    *(void *)(v1 + 48) = 1;
    *(void *)(v1 + 56) = v29;
    *(void *)(v1 + 64) = v27;
    swift_task_create();
    swift_release();
    sub_10002784C(v0, &qword_1001FF820);
    unint64_t v4 = v42;
  }
  uint64_t v30 = *(uint64_t **)(v1 + 96);
  swift_bridgeObjectRelease();
  sub_1000063C0(&qword_100204890);
  TaskGroup.makeAsyncIterator()();
  uint64_t v0 = *v30;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v30 = v0;
  if (isUniquelyReferenced_nonNull_native) {
    goto LABEL_17;
  }
LABEL_21:
  uint64_t v0 = sub_1001440B8(v0);
LABEL_17:
  **(void **)(v1 + 96) = v0;
  uint64_t v32 = static MainActor.shared.getter();
  *(void *)(v1 + 248) = v32;
  uint64_t v33 = (void *)swift_task_alloc();
  *(void *)(v1 + 256) = v33;
  *uint64_t v33 = v1;
  v33[1] = sub_1001405B4;
  uint64_t v34 = *(void *)(v1 + 152);
  return TaskGroup.Iterator.next(isolation:)(v1 + 72, v32, &protocol witness table for MainActor, v34);
}

uint64_t sub_1001405B4()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 240);
  uint64_t v3 = *(void *)(v1 + 232);
  return _swift_task_switch(sub_1001406F8, v3, v2);
}

uint64_t sub_1001406F8()
{
  unint64_t v1 = v0[9];
  uint64_t v2 = (void *)v0[10];
  if (v2 != (void *)1)
  {
    uint64_t v5 = (unint64_t *)v0[12];
    unint64_t v6 = *v5;
    id v7 = v2;
    uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v5 = v6;
    if (isUniquelyReferenced_nonNull_native)
    {
      if ((v1 & 0x8000000000000000) == 0) {
        goto LABEL_7;
      }
    }
    else
    {
      uint64_t v17 = (uint64_t *)v0[12];
      uint64_t isUniquelyReferenced_nonNull_native = sub_1001440B8(v6);
      unint64_t v6 = isUniquelyReferenced_nonNull_native;
      *uint64_t v17 = isUniquelyReferenced_nonNull_native;
      if ((v1 & 0x8000000000000000) == 0)
      {
LABEL_7:
        if (v1 < *(void *)(v6 + 16))
        {
          unint64_t v12 = v6
              + ((*(unsigned __int8 *)(v0[14] + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0[14] + 80))
              + *(void *)(v0[14] + 72) * v1;
          uint64_t v13 = *(int *)(v0[13] + 36);
          uint64_t v14 = *(void **)(v12 + v13);
          *(void *)(v12 + v13) = v2;

          sub_100146E84(v1, (uint64_t)v2);
          uint64_t v15 = static MainActor.shared.getter();
          v0[31] = v15;
          uint64_t v16 = (void *)swift_task_alloc();
          v0[32] = v16;
          *uint64_t v16 = v0;
          v16[1] = sub_1001405B4;
          uint64_t v11 = v0[19];
          uint64_t v10 = &protocol witness table for MainActor;
          uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)(v0 + 9);
          uint64_t v9 = v15;
          return TaskGroup.Iterator.next(isolation:)(isUniquelyReferenced_nonNull_native, v9, v10, v11);
        }
LABEL_13:
        __break(1u);
        return TaskGroup.Iterator.next(isolation:)(isUniquelyReferenced_nonNull_native, v9, v10, v11);
      }
    }
    __break(1u);
    goto LABEL_13;
  }
  (*(void (**)(void, void))(v0[20] + 8))(v0[21], v0[19]);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_100140908(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[3] = a4;
  v5[4] = a5;
  v5[2] = a1;
  return _swift_task_switch(sub_10014092C, 0, 0);
}

uint64_t sub_10014092C()
{
  **(void **)(v0 + 16) = *(void *)(v0 + 24);
  unint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v1;
  *unint64_t v1 = v0;
  v1[1] = sub_1001409E0;
  v1[16] = *(void *)(v0 + 32);
  return _swift_task_switch(sub_10013CF9C, 0, 0);
}

uint64_t sub_1001409E0(uint64_t a1)
{
  *(void *)(*(void *)v1 + 48) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100140AE0, 0, 0);
}

uint64_t sub_100140AE0()
{
  *(void *)(*(void *)(v0 + 16) + 8) = *(void *)(v0 + 48);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100140B00()
{
  swift_bridgeObjectRelease();
  sub_10002784C(v0 + 24, (uint64_t *)&unk_100201530);
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC21WritingToolsUIService17AttachmentManager___observationRegistrar;
  uint64_t v2 = type metadata accessor for ObservationRegistrar();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_100140BC0()
{
  return type metadata accessor for AttachmentManager(0);
}

uint64_t type metadata accessor for AttachmentManager(uint64_t a1)
{
  return sub_10005AFA8(a1, qword_1002045A8);
}

uint64_t sub_100140BE8()
{
  uint64_t result = type metadata accessor for ObservationRegistrar();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t *sub_100140C94(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = sub_1000063C0(&qword_1002040B8);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v10 = type metadata accessor for DocumentResourceIdentifier();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_100140E00(uint64_t a1)
{
  uint64_t v2 = sub_1000063C0(&qword_1002040B8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 1, v2);
  if (!result)
  {
    uint64_t v4 = type metadata accessor for DocumentResourceIdentifier();
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
    return v5(a1, v4);
  }
  return result;
}

void *sub_100140EB4(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1000063C0(&qword_1002040B8);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v8 = type metadata accessor for DocumentResourceIdentifier();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *sub_100140FE4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1000063C0(&qword_1002040B8);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v13 = type metadata accessor for DocumentResourceIdentifier();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 24))(a1, a2, v13);
      return a1;
    }
    sub_10002784C((uint64_t)a1, &qword_1002040B8);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v11 = type metadata accessor for DocumentResourceIdentifier();
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

void *sub_100141190(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1000063C0(&qword_1002040B8);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v8 = type metadata accessor for DocumentResourceIdentifier();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *sub_1001412C0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1000063C0(&qword_1002040B8);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v13 = type metadata accessor for DocumentResourceIdentifier();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 40))(a1, a2, v13);
      return a1;
    }
    sub_10002784C((uint64_t)a1, &qword_1002040B8);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v11 = type metadata accessor for DocumentResourceIdentifier();
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

uint64_t sub_10014146C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100141480);
}

uint64_t sub_100141480(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000063C0(&qword_1002040B8);
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2) {
    return v5 - 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_1001414F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100141504);
}

uint64_t sub_100141504(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 1);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = sub_1000063C0(&qword_1002040B8);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(a1, v5, a3, v6);
}

uint64_t sub_100141588(uint64_t a1)
{
  uint64_t v2 = sub_1000063C0(&qword_1002040B8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);

  return v3(a1, 1, v2);
}

uint64_t sub_1001415F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000063C0(&qword_1002040B8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, 1, v4);
}

uint64_t type metadata accessor for Attachment.UploadState(uint64_t a1)
{
  return sub_10005AFA8(a1, (uint64_t *)&unk_1002046B8);
}

uint64_t sub_100141688()
{
  uint64_t result = type metadata accessor for DocumentResourceIdentifier();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t *sub_100141700(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for URL();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    int v10 = (uint64_t *)((char *)a1 + v8);
    uint64_t v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *int v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = (char *)a1 + v9;
    uint64_t v14 = (char *)a2 + v9;
    uint64_t v15 = type metadata accessor for UTType();
    uint64_t v16 = *(void *)(v15 - 8);
    uint64_t v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
    swift_bridgeObjectRetain();
    if (v17(v14, 1, v15))
    {
      uint64_t v18 = sub_1000063C0(&qword_1001FC4F0);
      memcpy(v13, v14, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    uint64_t v20 = a3[7];
    uint64_t v21 = a3[8];
    int v22 = (char *)a1 + v20;
    uint64_t v23 = (char *)a2 + v20;
    *(void *)int v22 = *(void *)v23;
    v22[8] = v23[8];
    uint64_t v24 = (uint64_t *)((char *)a1 + v21);
    uint64_t v25 = (uint64_t *)((char *)a2 + v21);
    uint64_t v26 = v25[1];
    *uint64_t v24 = *v25;
    v24[1] = v26;
    uint64_t v27 = a3[9];
    uint64_t v28 = a3[10];
    uint64_t v29 = *(void **)((char *)a2 + v27);
    *(uint64_t *)((char *)a1 + v27) = (uint64_t)v29;
    uint64_t v30 = (char *)a1 + v28;
    uint64_t v31 = (char *)a2 + v28;
    swift_bridgeObjectRetain();
    id v32 = v29;
    uint64_t v33 = sub_1000063C0(&qword_1002040B8);
    uint64_t v34 = *(void *)(v33 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v31, 1, v33))
    {
      uint64_t v35 = type metadata accessor for Attachment.UploadState(0);
      memcpy(v30, v31, *(void *)(*(void *)(v35 - 8) + 64));
    }
    else
    {
      uint64_t v36 = type metadata accessor for DocumentResourceIdentifier();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16))(v30, v31, v36);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v30, 0, 1, v33);
    }
    uint64_t v37 = a3[11];
    uint64_t v38 = (uint64_t *)((char *)a1 + v37);
    uint64_t v39 = (uint64_t *)((char *)a2 + v37);
    uint64_t v40 = v39[1];
    *uint64_t v38 = *v39;
    v38[1] = v40;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_100141A10(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + a2[6];
  uint64_t v6 = type metadata accessor for UTType();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  swift_bridgeObjectRelease();

  uint64_t v8 = a1 + a2[10];
  uint64_t v9 = sub_1000063C0(&qword_1002040B8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9))
  {
    uint64_t v10 = type metadata accessor for DocumentResourceIdentifier();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v8, v10);
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_100141BC4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = (void *)(a1 + v8);
  uint64_t v13 = (const void *)(a2 + v8);
  uint64_t v14 = type metadata accessor for UTType();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48);
  swift_bridgeObjectRetain();
  if (v16(v13, 1, v14))
  {
    uint64_t v17 = sub_1000063C0(&qword_1001FC4F0);
    memcpy(v12, v13, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 16))(v12, v13, v14);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  uint64_t v18 = a3[7];
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v18;
  uint64_t v21 = a2 + v18;
  *(void *)uint64_t v20 = *(void *)v21;
  *(unsigned char *)(v20 + 8) = *(unsigned char *)(v21 + 8);
  int v22 = (void *)(a1 + v19);
  uint64_t v23 = (void *)(a2 + v19);
  uint64_t v24 = v23[1];
  *int v22 = *v23;
  v22[1] = v24;
  uint64_t v25 = a3[9];
  uint64_t v26 = a3[10];
  uint64_t v27 = *(void **)(a2 + v25);
  *(void *)(a1 + v25) = v27;
  uint64_t v28 = (void *)(a1 + v26);
  uint64_t v29 = (const void *)(a2 + v26);
  swift_bridgeObjectRetain();
  id v30 = v27;
  uint64_t v31 = sub_1000063C0(&qword_1002040B8);
  uint64_t v32 = *(void *)(v31 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v32 + 48))(v29, 1, v31))
  {
    uint64_t v33 = type metadata accessor for Attachment.UploadState(0);
    memcpy(v28, v29, *(void *)(*(void *)(v33 - 8) + 64));
  }
  else
  {
    uint64_t v34 = type metadata accessor for DocumentResourceIdentifier();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v34 - 8) + 16))(v28, v29, v34);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v32 + 56))(v28, 0, 1, v31);
  }
  uint64_t v35 = a3[11];
  uint64_t v36 = (void *)(a1 + v35);
  uint64_t v37 = (void *)(a2 + v35);
  uint64_t v38 = v37[1];
  *uint64_t v36 = *v37;
  v36[1] = v38;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100141E84(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  uint64_t v13 = type metadata accessor for UTType();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    (*(void (**)(void *, uint64_t))(v14 + 8))(v11, v13);
LABEL_6:
    uint64_t v18 = sub_1000063C0(&qword_1001FC4F0);
    memcpy(v11, v12, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v14 + 24))(v11, v12, v13);
LABEL_7:
  uint64_t v19 = a3[7];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = (uint64_t *)(a2 + v19);
  uint64_t v22 = *v21;
  *(unsigned char *)(v20 + 8) = *((unsigned char *)v21 + 8);
  *(void *)uint64_t v20 = v22;
  uint64_t v23 = a3[8];
  uint64_t v24 = (void *)(a1 + v23);
  uint64_t v25 = (void *)(a2 + v23);
  *uint64_t v24 = *v25;
  v24[1] = v25[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v26 = a3[9];
  uint64_t v27 = *(void **)(a1 + v26);
  uint64_t v28 = *(void **)(a2 + v26);
  *(void *)(a1 + v26) = v28;
  id v29 = v28;

  uint64_t v30 = a3[10];
  uint64_t v31 = (void *)(a1 + v30);
  uint64_t v32 = (void *)(a2 + v30);
  uint64_t v33 = sub_1000063C0(&qword_1002040B8);
  uint64_t v34 = *(void *)(v33 - 8);
  uint64_t v35 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v34 + 48);
  int v36 = v35(v31, 1, v33);
  int v37 = v35(v32, 1, v33);
  if (!v36)
  {
    if (!v37)
    {
      uint64_t v44 = type metadata accessor for DocumentResourceIdentifier();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v44 - 8) + 24))(v31, v32, v44);
      goto LABEL_13;
    }
    sub_10002784C((uint64_t)v31, &qword_1002040B8);
    goto LABEL_12;
  }
  if (v37)
  {
LABEL_12:
    uint64_t v39 = type metadata accessor for Attachment.UploadState(0);
    memcpy(v31, v32, *(void *)(*(void *)(v39 - 8) + 64));
    goto LABEL_13;
  }
  uint64_t v38 = type metadata accessor for DocumentResourceIdentifier();
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v38 - 8) + 16))(v31, v32, v38);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
LABEL_13:
  uint64_t v40 = a3[11];
  uint64_t v41 = (void *)(a1 + v40);
  unint64_t v42 = (void *)(a2 + v40);
  void *v41 = *v42;
  v41[1] = v42[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100142260(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for UTType();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = sub_1000063C0(&qword_1001FC4F0);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = a1 + v13;
  uint64_t v16 = a2 + v13;
  *(void *)uint64_t v15 = *(void *)v16;
  *(unsigned char *)(v15 + 8) = *(unsigned char *)(v16 + 8);
  *(_OWORD *)(a1 + v14) = *(_OWORD *)(a2 + v14);
  uint64_t v17 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (const void *)(a2 + v17);
  uint64_t v20 = sub_1000063C0(&qword_1002040B8);
  uint64_t v21 = *(void *)(v20 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
  {
    uint64_t v22 = type metadata accessor for Attachment.UploadState(0);
    memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    uint64_t v23 = type metadata accessor for DocumentResourceIdentifier();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v23 - 8) + 32))(v18, v19, v23);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  }
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  return a1;
}

uint64_t sub_1001424EC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  uint64_t v15 = type metadata accessor for UTType();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17(v14, 1, v15);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v16 + 32))(v13, v14, v15);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v19)
  {
    (*(void (**)(void *, uint64_t))(v16 + 8))(v13, v15);
LABEL_6:
    uint64_t v20 = sub_1000063C0(&qword_1001FC4F0);
    memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v16 + 40))(v13, v14, v15);
LABEL_7:
  uint64_t v21 = a3[7];
  uint64_t v22 = a3[8];
  uint64_t v23 = a1 + v21;
  uint64_t v24 = a2 + v21;
  *(void *)uint64_t v23 = *(void *)v24;
  *(unsigned char *)(v23 + 8) = *(unsigned char *)(v24 + 8);
  uint64_t v25 = (void *)(a1 + v22);
  uint64_t v26 = (uint64_t *)(a2 + v22);
  uint64_t v28 = *v26;
  uint64_t v27 = v26[1];
  *uint64_t v25 = v28;
  v25[1] = v27;
  swift_bridgeObjectRelease();
  uint64_t v29 = a3[9];
  uint64_t v30 = *(void **)(a1 + v29);
  *(void *)(a1 + v29) = *(void *)(a2 + v29);

  uint64_t v31 = a3[10];
  uint64_t v32 = (void *)(a1 + v31);
  uint64_t v33 = (void *)(a2 + v31);
  uint64_t v34 = sub_1000063C0(&qword_1002040B8);
  uint64_t v35 = *(void *)(v34 - 8);
  int v36 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v35 + 48);
  int v37 = v36(v32, 1, v34);
  int v38 = v36(v33, 1, v34);
  if (!v37)
  {
    if (!v38)
    {
      uint64_t v47 = type metadata accessor for DocumentResourceIdentifier();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v47 - 8) + 40))(v32, v33, v47);
      goto LABEL_13;
    }
    sub_10002784C((uint64_t)v32, &qword_1002040B8);
    goto LABEL_12;
  }
  if (v38)
  {
LABEL_12:
    uint64_t v40 = type metadata accessor for Attachment.UploadState(0);
    memcpy(v32, v33, *(void *)(*(void *)(v40 - 8) + 64));
    goto LABEL_13;
  }
  uint64_t v39 = type metadata accessor for DocumentResourceIdentifier();
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v39 - 8) + 32))(v32, v33, v39);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
LABEL_13:
  uint64_t v41 = a3[11];
  unint64_t v42 = (void *)(a1 + v41);
  uint64_t v43 = (uint64_t *)(a2 + v41);
  uint64_t v45 = *v43;
  uint64_t v44 = v43[1];
  void *v42 = v45;
  v42[1] = v44;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100142890(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001428A4);
}

uint64_t sub_1001428A4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_1000063C0(&qword_1001FC4F0);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + a3[6];
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v14 = *(void *)(a1 + a3[8] + 8);
    if (v14 >= 0xFFFFFFFF) {
      LODWORD(v14) = -1;
    }
    return (v14 + 1);
  }
  else
  {
    uint64_t v15 = type metadata accessor for Attachment.UploadState(0);
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
    uint64_t v17 = v15;
    uint64_t v18 = a1 + a3[10];
    return v16(v18, a2, v17);
  }
}

uint64_t sub_100142A2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100142A40);
}

uint64_t sub_100142A40(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t result = sub_1000063C0(&qword_1001FC4F0);
  uint64_t v14 = *(void *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v12 = a1 + a4[6];
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[8] + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v15 = type metadata accessor for Attachment.UploadState(0);
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
    uint64_t v17 = v15;
    uint64_t v18 = a1 + a4[10];
    return v16(v18, a2, a2, v17);
  }
  return result;
}

uint64_t type metadata accessor for Attachment(uint64_t a1)
{
  return sub_10005AFA8(a1, (uint64_t *)&unk_100204720);
}

void sub_100142BE8()
{
  type metadata accessor for URL();
  if (v0 <= 0x3F)
  {
    sub_100142D10();
    if (v1 <= 0x3F)
    {
      type metadata accessor for Attachment.UploadState(319);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_100142D10()
{
  if (!qword_100204730)
  {
    type metadata accessor for UTType();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100204730);
    }
  }
}

uint64_t sub_100142D68()
{
  return sub_100142DF8((unint64_t *)&qword_1001FF258, (void (*)(uint64_t))type metadata accessor for Attachment);
}

uint64_t sub_100142DB0()
{
  return sub_100142DF8(&qword_100204778, (void (*)(uint64_t))&type metadata accessor for URL);
}

uint64_t sub_100142DF8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100142E40()
{
  return sub_100142DF8(&qword_100204780, (void (*)(uint64_t))type metadata accessor for Attachment.UploadState);
}

uint64_t sub_100142E88()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100142EA4(uint64_t result, char a2, uint64_t a3)
{
  if ((a2 & 1) == 0) {
    return result;
  }
  unint64_t v4 = result;
  sub_1000063C0(&qword_100204808);
  uint64_t result = _swift_isClassOrObjCExistentialType();
  if ((v4 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  uint64_t v5 = a3 & 0xFFFFFFFFFFFFFF8;
  if ((result & 1) == 0) {
    uint64_t v5 = a3;
  }
  if (*(void *)(v5 + 16) <= v4) {
    goto LABEL_8;
  }
  return result;
}

uint64_t sub_100142F04(unint64_t a1, unint64_t a2)
{
  uint64_t v4 = sub_1000063C0(&qword_100204808);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v21 - v9;
  if ((_swift_isClassOrObjCExistentialType() & 1) != 0 && a2 >> 62)
  {
    uint64_t v11 = _CocoaArrayWrapper.subscript.getter();
    uint64_t v21 = v11;
    swift_unknownObjectRetain();
    if (swift_dynamicCast())
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
      return v11;
    }
    goto LABEL_15;
  }
  char isClassOrObjCExistentialType = _swift_isClassOrObjCExistentialType();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_14:
    __break(1u);
LABEL_15:
    uint64_t v21 = 0;
    unint64_t v22 = 0xE000000000000000;
    _StringGuts.grow(_:)(85);
    unint64_t v15 = 0xD000000000000046;
    uint64_t v16 = "NSArray element failed to match the Swift Array Element type\nExpected ";
    goto LABEL_17;
  }
  if (isClassOrObjCExistentialType) {
    uint64_t v13 = a2 & 0xFFFFFFFFFFFFFF8;
  }
  else {
    uint64_t v13 = a2;
  }
  if (*(void *)(v13 + 16) <= a1) {
    goto LABEL_14;
  }
  uint64_t v11 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 8 * a1 + 0x20);
  uint64_t v21 = v11;
  swift_unknownObjectRetain_n();
  if (swift_dynamicCast())
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    return v11;
  }
  uint64_t v21 = 0;
  unint64_t v22 = 0xE000000000000000;
  _StringGuts.grow(_:)(82);
  unint64_t v15 = 0xD000000000000043;
  uint64_t v16 = "Down-casted Array element failed to match the target type\nExpected ";
LABEL_17:
  unint64_t v17 = (unint64_t)(v16 - 32) | 0x8000000000000000;
  String.append(_:)(*(Swift::String *)&v15);
  v18._object = (void *)0x80000001001A05F0;
  v18._countAndFlagsBits = 0xD000000000000057;
  String.append(_:)(v18);
  v19._countAndFlagsBits = 0x756F662074756220;
  v19._object = (void *)0xEB0000000020646ELL;
  String.append(_:)(v19);
  swift_getObjectType();
  swift_unknownObjectRelease();
  v20._countAndFlagsBits = _typeName(_:qualified:)();
  String.append(_:)(v20);
  swift_bridgeObjectRelease();
  uint64_t result = _assertionFailure(_:_:flags:)();
  __break(1u);
  return result;
}

void *sub_1001431C8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1000063C0(&qword_100204878);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_100144C88(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1001432D8(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1001436FC(a1, a2, a3, a4, &qword_100204870, (void (*)(void, int64_t, void *, void *))sub_100144D94);
}

uint64_t sub_1001432F8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100143BC8(a1, a2, a3, a4, (uint64_t *)&unk_1001FF2A0, type metadata accessor for Attachment, type metadata accessor for Attachment);
}

void *sub_10014332C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1000063C0(&qword_100203E80);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 72);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[9 * v8 + 4]) {
          memmove(v12, a4 + 4, 72 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_100146330(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_100143454(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100143BC8(a1, a2, a3, a4, &qword_100204868, (uint64_t (*)(void))type metadata accessor for PromptExampleBuilder.ExampleMessage, (uint64_t (*)(void))type metadata accessor for PromptExampleBuilder.ExampleMessage);
}

void *sub_100143488(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1000063C0(&qword_100204860);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_100144FF8(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_100143598(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100143BC8(a1, a2, a3, a4, &qword_100204848, (uint64_t (*)(void))&type metadata accessor for PromptCompletion.ImageContent, (uint64_t (*)(void))&type metadata accessor for PromptCompletion.ImageContent);
}

void *sub_1001435CC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1000063C0(&qword_100201018);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1001450EC(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1001436DC(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1001436FC(a1, a2, a3, a4, &qword_100203DE0, (void (*)(void, int64_t, void *, void *))sub_100145E1C);
}

void *sub_1001436FC(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, void (*a6)(void, int64_t, void *, void *))
{
  char v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v10 = a2;
    goto LABEL_8;
  }
  unint64_t v9 = a4[3];
  int64_t v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v10 = a2;
    }
LABEL_8:
    int64_t v11 = a4[2];
    if (v10 <= v11) {
      int64_t v12 = a4[2];
    }
    else {
      int64_t v12 = v10;
    }
    if (v12)
    {
      sub_1000063C0(a5);
      uint64_t v13 = (void *)swift_allocObject();
      int64_t v14 = j__malloc_size(v13);
      uint64_t v15 = v14 - 32;
      if (v14 < 32) {
        uint64_t v15 = v14 - 25;
      }
      v13[2] = v11;
      v13[3] = 2 * (v15 >> 3);
      uint64_t v16 = v13 + 4;
      if (v8) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v13 = _swiftEmptyArrayStorage;
      uint64_t v16 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v13 != a4 || v16 >= &a4[v11 + 4]) {
          memmove(v16, a4 + 4, 8 * v11);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    a6(0, v11, v16, a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

uint64_t sub_100143818(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100143BC8(a1, a2, a3, a4, &qword_100204858, (uint64_t (*)(void))type metadata accessor for RestoreWhiteSpaceLocation, (uint64_t (*)(void))type metadata accessor for RestoreWhiteSpaceLocation);
}

void *sub_10014384C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1000063C0(&qword_100203E70);
      int64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      int64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_100145D28(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_10014395C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1000063C0(&qword_100203E78);
      int64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      int64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_100146220(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_100143A84(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1000063C0(&qword_100204850);
      int64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 + 31;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 6);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      int64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[8 * v8 + 4]) {
          memmove(v13, a4 + 4, v8 << 6);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_100146428(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_100143B94(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100143BC8(a1, a2, a3, a4, &qword_1002047D0, (uint64_t (*)(void))&type metadata accessor for FBKSInteraction.AnnotatedContent, (uint64_t (*)(void))&type metadata accessor for FBKSInteraction.AnnotatedContent);
}

uint64_t sub_100143BC8(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    Swift::String v18 = &_swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_1000063C0(a5);
  uint64_t v15 = *(void *)(a6(0) - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  Swift::String v18 = (void *)swift_allocObject();
  size_t v19 = j__malloc_size(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  void v18[2] = v13;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  uint64_t v21 = *(void *)(a6(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (unint64_t)v18 + v22;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(void *)(v21 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_100144E9C(0, v13, v23, a4, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

uint64_t sub_100143E48(char a1, int64_t a2, char a3, unint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_1000063C0(&qword_100203E90);
  uint64_t v10 = *(void *)(sub_1000063C0(&qword_100203E98) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t v14 = j__malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (BOOL v15 = v11 == -1) : (BOOL v15 = 0), v15))
  {
LABEL_29:
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(sub_1000063C0(&qword_100203E98) - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v18 = (unint64_t)v13 + v17;
  if (a1)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(void *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1001472B4(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

uint64_t sub_1001440B8(unint64_t a1)
{
  return sub_100143BC8(0, *(void *)(a1 + 16), 0, a1, (uint64_t *)&unk_1001FF2A0, type metadata accessor for Attachment, type metadata accessor for Attachment);
}

void *sub_100144114(void *a1)
{
  return sub_1001436FC(0, a1[2], 0, a1, &qword_100203DE0, (void (*)(void, int64_t, void *, void *))sub_100145E1C);
}

void *sub_100144158(void *a1)
{
  return sub_10014332C(0, a1[2], 0, a1);
}

uint64_t sub_10014416C(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }

  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t sub_1001441E8(uint64_t a1, int *a2)
{
  *(void *)(v2 + 32) = a1;
  char v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 40) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_1001442C8;
  return v5(v2 + 16);
}

uint64_t sub_1001442C8()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(_OWORD **)(*v0 + 32);
  uint64_t v5 = *v0;
  swift_task_dealloc();
  *uint64_t v2 = *(_OWORD *)(v1 + 16);
  uint64_t v3 = *(uint64_t (**)(void))(v5 + 8);
  return v3();
}

uint64_t sub_1001443DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DocumentResourceIdentifier();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Attachment.UploadState(0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000063C0(&qword_1002047B8);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  size_t v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (uint64_t)&v14[*(int *)(v12 + 56)];
  sub_100146C54(a1, (uint64_t)v14, type metadata accessor for Attachment.UploadState);
  sub_100146C54(a2, v15, type metadata accessor for Attachment.UploadState);
  uint64_t v16 = sub_1000063C0(&qword_1002040B8);
  unint64_t v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48);
  if (v17((uint64_t)v14, 1, v16) != 1)
  {
    sub_100146C54((uint64_t)v14, (uint64_t)v10, type metadata accessor for Attachment.UploadState);
    if (v17(v15, 1, v16) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v15, v4);
      char v18 = static DocumentResourceIdentifier.== infix(_:_:)();
      size_t v19 = *(void (**)(char *, uint64_t))(v5 + 8);
      v19(v7, v4);
      v19(v10, v4);
      sub_100146CBC((uint64_t)v14, type metadata accessor for Attachment.UploadState);
      return v18 & 1;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    goto LABEL_6;
  }
  if (v17(v15, 1, v16) != 1)
  {
LABEL_6:
    sub_10002784C((uint64_t)v14, &qword_1002047B8);
    char v18 = 0;
    return v18 & 1;
  }
  sub_100146CBC((uint64_t)v14, type metadata accessor for Attachment.UploadState);
  char v18 = 1;
  return v18 & 1;
}

uint64_t sub_1001446E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UTType();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000063C0(&qword_1002047A0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000063C0(&qword_1001FC4F0);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  size_t v14 = (char *)&v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v12);
  unint64_t v17 = (char *)&v61 - v16;
  __chkstk_darwin(v15);
  size_t v19 = (char *)&v61 - v18;
  if ((static URL.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  uint64_t v64 = v5;
  uint64_t v20 = type metadata accessor for Attachment(0);
  uint64_t v21 = *(int *)(v20 + 20);
  unint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = *(void *)(a1 + v21 + 8);
  uint64_t v24 = (void *)(a2 + v21);
  uint64_t v25 = v24[1];
  if (!v23)
  {
    if (v25) {
      return 0;
    }
    goto LABEL_11;
  }
  if (!v25) {
    return 0;
  }
  BOOL v26 = *v22 == *v24 && v23 == v25;
  if (v26 || (v27 = _stringCompareWithSmolCheck(_:_:expecting:)(), uint64_t result = 0, (v27 & 1) != 0))
  {
LABEL_11:
    uint64_t v29 = *(int *)(v20 + 24);
    uint64_t v61 = a1;
    sub_100008DD4(a1 + v29, (uint64_t)v19, &qword_1001FC4F0);
    uint64_t v62 = a2;
    uint64_t v63 = (int *)v20;
    sub_100008DD4(a2 + *(int *)(v20 + 24), (uint64_t)v17, &qword_1001FC4F0);
    uint64_t v30 = (uint64_t)&v10[*(int *)(v8 + 48)];
    sub_100008DD4((uint64_t)v19, (uint64_t)v10, &qword_1001FC4F0);
    sub_100008DD4((uint64_t)v17, v30, &qword_1001FC4F0);
    uint64_t v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v64 + 48);
    if (v31((uint64_t)v10, 1, v4) == 1)
    {
      sub_10002784C((uint64_t)v17, &qword_1001FC4F0);
      sub_10002784C((uint64_t)v19, &qword_1001FC4F0);
      if (v31(v30, 1, v4) == 1)
      {
        sub_10002784C((uint64_t)v10, &qword_1001FC4F0);
LABEL_20:
        uint64_t v35 = v62;
        int v36 = v63;
        uint64_t v37 = v63[7];
        uint64_t v38 = v61;
        uint64_t v39 = (void *)(v61 + v37);
        char v40 = *(unsigned char *)(v61 + v37 + 8);
        uint64_t v41 = (void *)(v62 + v37);
        int v42 = *(unsigned __int8 *)(v62 + v37 + 8);
        if (v40)
        {
          if (!v42) {
            return 0;
          }
        }
        else
        {
          if (*v39 != *v41) {
            LOBYTE(v42) = 1;
          }
          if (v42) {
            return 0;
          }
        }
        uint64_t v43 = v63[8];
        uint64_t v44 = *(void *)(v61 + v43);
        uint64_t v45 = *(void *)(v61 + v43 + 8);
        uint64_t v46 = (void *)(v62 + v43);
        if (v44 != *v46 || v45 != v46[1])
        {
          char v47 = _stringCompareWithSmolCheck(_:_:expecting:)();
          uint64_t result = 0;
          if ((v47 & 1) == 0) {
            return result;
          }
        }
        uint64_t v48 = v36[9];
        uint64_t v49 = v35;
        uint64_t v50 = *(void **)(v38 + v48);
        uint64_t v51 = *(void **)(v49 + v48);
        if (v50)
        {
          if (!v51) {
            return 0;
          }
          type metadata accessor for CGImage(0);
          sub_100142DF8(&qword_1002047A8, type metadata accessor for CGImage);
          id v52 = v51;
          id v53 = v50;
          int v36 = v63;
          char v54 = static _CFObject.== infix(_:_:)();

          if ((v54 & 1) == 0) {
            return 0;
          }
        }
        else if (v51)
        {
          return 0;
        }
        uint64_t v55 = v62;
        if (sub_1001443DC(v38 + v36[10], v62 + v36[10]))
        {
          uint64_t v56 = v36[11];
          int v57 = (void *)(v38 + v56);
          uint64_t v58 = *(void *)(v38 + v56 + 8);
          unint64_t v59 = (void *)(v55 + v56);
          uint64_t v60 = v59[1];
          if (v58)
          {
            if (v60 && (*v57 == *v59 && v58 == v60 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)) {
              return 1;
            }
          }
          else if (!v60)
          {
            return 1;
          }
        }
        return 0;
      }
    }
    else
    {
      sub_100008DD4((uint64_t)v10, (uint64_t)v14, &qword_1001FC4F0);
      if (v31(v30, 1, v4) != 1)
      {
        uint64_t v32 = v64;
        (*(void (**)(char *, uint64_t, uint64_t))(v64 + 32))(v7, v30, v4);
        sub_100142DF8(&qword_1002047B0, (void (*)(uint64_t))&type metadata accessor for UTType);
        char v33 = dispatch thunk of static Equatable.== infix(_:_:)();
        uint64_t v34 = *(void (**)(char *, uint64_t))(v32 + 8);
        v34(v7, v4);
        sub_10002784C((uint64_t)v17, &qword_1001FC4F0);
        sub_10002784C((uint64_t)v19, &qword_1001FC4F0);
        v34(v14, v4);
        sub_10002784C((uint64_t)v10, &qword_1001FC4F0);
        if ((v33 & 1) == 0) {
          return 0;
        }
        goto LABEL_20;
      }
      sub_10002784C((uint64_t)v17, &qword_1001FC4F0);
      sub_10002784C((uint64_t)v19, &qword_1001FC4F0);
      (*(void (**)(char *, uint64_t))(v64 + 8))(v14, v4);
    }
    sub_10002784C((uint64_t)v10, &qword_1002047A0);
    return 0;
  }
  return result;
}

uint64_t sub_100144C88(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      sub_1000063C0(&qword_1001FB3E8);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100144D94(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      type metadata accessor for IAPayloadValue(0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100144E9C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100144FF8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001450EC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001451E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v49 = type metadata accessor for DocumentResourceIdentifier();
  uint64_t v6 = *(void *)(v49 - 8);
  __chkstk_darwin(v49);
  char v47 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_1000063C0(&qword_1002047B8);
  __chkstk_darwin(v55);
  uint64_t v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Attachment.UploadState(0);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v56 = (uint64_t)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v58 = (uint64_t)&v43 - v14;
  __chkstk_darwin(v13);
  uint64_t v57 = (uint64_t)&v43 - v15;
  uint64_t v16 = OBJC_IVAR____TtC21WritingToolsUIService17AttachmentManager___observationRegistrar;
  uint64_t result = swift_beginAccess();
  if (a1 == a2) {
    return (uint64_t)_swiftEmptyArrayStorage;
  }
  if (a2 >= a1)
  {
    uint64_t v52 = a3 + v16;
    uint64_t v46 = (void (**)(char *, uint64_t, uint64_t))(v6 + 32);
    uint64_t v48 = (void (**)(uint64_t, uint64_t))(v6 + 8);
    uint64_t v45 = _swiftEmptyArrayStorage;
    uint64_t v44 = a2 - 1;
    uint64_t v18 = a1;
    uint64_t v50 = a2;
    uint64_t v51 = a1;
    while (1)
    {
      if (v18 <= a2) {
        uint64_t v19 = a2;
      }
      else {
        uint64_t v19 = v18;
      }
      uint64_t v53 = v18;
      uint64_t v54 = v19;
      unint64_t v20 = v18;
      while (1)
      {
        if (v18 < a1)
        {
          __break(1u);
LABEL_29:
          __break(1u);
LABEL_30:
          __break(1u);
LABEL_31:
          __break(1u);
          goto LABEL_32;
        }
        if (v54 == v20) {
          goto LABEL_29;
        }
        swift_getKeyPath();
        uint64_t v59 = a3;
        sub_100142DF8(&qword_100201970, (void (*)(uint64_t))type metadata accessor for AttachmentManager);
        ObservationRegistrar.access<A, B>(_:keyPath:)();
        uint64_t result = swift_release();
        if (v18 < 0) {
          goto LABEL_30;
        }
        uint64_t v23 = *(void *)(a3 + 16);
        if (v20 >= *(void *)(v23 + 16)) {
          goto LABEL_31;
        }
        uint64_t v24 = a3;
        uint64_t v25 = type metadata accessor for Attachment(0);
        uint64_t v26 = (uint64_t)v9;
        uint64_t v27 = v57;
        sub_100146C54(v23+ ((*(unsigned __int8 *)(*(void *)(v25 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v25 - 8) + 80))+ *(void *)(*(void *)(v25 - 8) + 72) * v20+ *(int *)(v25 + 40), v57, type metadata accessor for Attachment.UploadState);
        uint64_t v28 = sub_1000063C0(&qword_1002040B8);
        uint64_t v29 = *(void *)(v28 - 8);
        uint64_t v30 = v58;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 56))(v58, 1, 1, v28);
        uint64_t v31 = v26 + *(int *)(v55 + 48);
        uint64_t v32 = v27;
        uint64_t v9 = (char *)v26;
        sub_100146C54(v32, v26, type metadata accessor for Attachment.UploadState);
        sub_100146C54(v30, v31, type metadata accessor for Attachment.UploadState);
        char v33 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v29 + 48);
        if (v33(v26, 1, v28) == 1)
        {
          int v21 = v33(v31, 1, v28);
          a3 = v24;
          uint64_t v18 = v53;
          if (v21 == 1) {
            goto LABEL_22;
          }
          goto LABEL_11;
        }
        uint64_t v34 = v56;
        sub_100146C54(v26, v56, type metadata accessor for Attachment.UploadState);
        if (v33(v31, 1, v28) != 1) {
          break;
        }
        (*v48)(v34, v49);
        a3 = v24;
        uint64_t v18 = v53;
LABEL_11:
        sub_10002784C(v26, &qword_1002047B8);
LABEL_12:
        uint64_t v22 = v50;
        ++v20;
        sub_100146CBC(v58, type metadata accessor for Attachment.UploadState);
        uint64_t result = sub_100146CBC(v57, type metadata accessor for Attachment.UploadState);
        a1 = v51;
        if (v22 == v20) {
          return (uint64_t)v45;
        }
      }
      uint64_t v35 = v47;
      uint64_t v36 = v49;
      (*v46)(v47, v31, v49);
      char v37 = static DocumentResourceIdentifier.== infix(_:_:)();
      uint64_t v38 = *v48;
      uint64_t v39 = v35;
      uint64_t v9 = (char *)v26;
      (*v48)((uint64_t)v39, v36);
      v38(v56, v36);
      a3 = v24;
      uint64_t v18 = v53;
      if ((v37 & 1) == 0)
      {
        sub_100146CBC(v26, type metadata accessor for Attachment.UploadState);
        goto LABEL_12;
      }
LABEL_22:
      sub_100146CBC((uint64_t)v9, type metadata accessor for Attachment.UploadState);
      sub_100146CBC(v58, type metadata accessor for Attachment.UploadState);
      sub_100146CBC(v57, type metadata accessor for Attachment.UploadState);
      char v40 = v45;
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v60 = v40;
      a2 = v50;
      if ((result & 1) == 0)
      {
        uint64_t result = sub_1001291A8(0, v40[2] + 1, 1);
        char v40 = v60;
      }
      a1 = v51;
      unint64_t v42 = v40[2];
      unint64_t v41 = v40[3];
      if (v42 >= v41 >> 1)
      {
        uint64_t result = sub_1001291A8(v41 > 1, v42 + 1, 1);
        char v40 = v60;
      }
      uint64_t v18 = v20 + 1;
      _OWORD v40[2] = v42 + 1;
      uint64_t v45 = v40;
      v40[v42 + 4] = v20;
      if (v44 == v20) {
        return (uint64_t)v45;
      }
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_100145838(unsigned char *__src, unsigned char *a2)
{
  if (__src) {
    unint64_t v2 = a2 - __src;
  }
  else {
    unint64_t v2 = 0;
  }
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF) {
    goto LABEL_11;
  }
  memset(__dst, 0, sizeof(__dst));
  char v5 = v2;
  if (__src && a2 != __src) {
    memcpy(__dst, __src, a2 - __src);
  }
  return *(void *)__dst;
}

uint64_t sub_1001458FC(uint64_t result, uint64_t a2)
{
  if (!a2)
  {
    swift_release();
    return 0;
  }
  if (a2 > 14)
  {
    if ((unint64_t)a2 < 0x7FFFFFFF) {
      return a2 << 32;
    }
    type metadata accessor for Data.RangeReference();
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = 0;
    *(void *)(v3 + 24) = a2;
    return v3;
  }
  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v4 = (unsigned char *)__DataStorage._bytes.getter();
    if (!v4)
    {
LABEL_10:
      uint64_t v5 = __DataStorage._length.getter();
      if (v5 >= a2) {
        uint64_t v6 = a2;
      }
      else {
        uint64_t v6 = v5;
      }
      uint64_t v7 = &v4[v6];
      if (v4) {
        uint64_t v8 = v7;
      }
      else {
        uint64_t v8 = 0;
      }
      uint64_t v3 = sub_100145838(v4, v8);
      swift_release();
      return v3;
    }
    uint64_t result = __DataStorage._offset.getter();
    if (!__OFSUB__(0, result))
    {
      v4 -= result;
      goto LABEL_10;
    }
  }
  __break(1u);
  return result;
}

void *sub_1001459E4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1000063C0(&qword_100204838);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DocumentResource();
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v28 = (char *)&v23 - v13;
  uint64_t v30 = *(void *)(a1 + 16);
  if (!v30) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v29 = (unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  uint64_t v25 = v12;
  uint64_t v14 = (void (**)(char *, char *, uint64_t))(v12 + 32);
  swift_bridgeObjectRetain();
  uint64_t v15 = 0;
  uint64_t v16 = _swiftEmptyArrayStorage;
  uint64_t v26 = a2;
  uint64_t v27 = a1;
  uint64_t v24 = v11;
  do
  {
    unint64_t v31 = *(void *)(a1 + 8 * v15 + 32);
    sub_10013F91C(&v31, a2, (uint64_t)v7);
    if (v2)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v16;
    }
    if ((*v29)(v7, 1, v8) == 1)
    {
      sub_10002784C((uint64_t)v7, &qword_100204838);
    }
    else
    {
      unint64_t v17 = *v14;
      uint64_t v18 = v28;
      (*v14)(v28, v7, v8);
      v17(v11, v18, v8);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v16 = (void *)sub_100143BC8(0, v16[2] + 1, 1, (unint64_t)v16, &qword_100204840, (uint64_t (*)(void))&type metadata accessor for DocumentResource, (uint64_t (*)(void))&type metadata accessor for DocumentResource);
      }
      unint64_t v20 = v16[2];
      unint64_t v19 = v16[3];
      if (v20 >= v19 >> 1) {
        uint64_t v16 = (void *)sub_100143BC8(v19 > 1, v20 + 1, 1, (unint64_t)v16, &qword_100204840, (uint64_t (*)(void))&type metadata accessor for DocumentResource, (uint64_t (*)(void))&type metadata accessor for DocumentResource);
      }
      v16[2] = v20 + 1;
      unint64_t v21 = (unint64_t)v16
          + ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80))
          + *(void *)(v25 + 72) * v20;
      uint64_t v11 = v24;
      v17((char *)v21, v24, v8);
      a2 = v26;
      a1 = v27;
    }
    ++v15;
  }
  while (v30 != v15);
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_100145D28(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

char *sub_100145E1C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 8 * a1 + 32);
    size_t v6 = 8 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void *sub_100145F08(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PresentationDetent();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  size_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  char v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    sub_1000063C0(&qword_1002047D8);
    uint64_t v9 = static _SetStorage.allocate(capacity:)();
    uint64_t v10 = 0;
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    uint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    unint64_t v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_100142DF8(&qword_1002047E0, (void (*)(uint64_t))&type metadata accessor for PresentationDetent);
      uint64_t v16 = dispatch thunk of Hashable._rawHashValue(seed:)();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v6, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_100142DF8(&qword_1002047E8, (void (*)(uint64_t))&type metadata accessor for PresentationDetent);
          char v23 = dispatch thunk of static Equatable.== infix(_:_:)();
          uint64_t v24 = *v15;
          (*v15)(v6, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        uint64_t v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        uint64_t result = (void *)(*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return (void *)v9;
      }
    }
  }
  return &_swiftEmptySetSingleton;
}

uint64_t sub_100146220(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      sub_1000063C0(&qword_1001FEDF8);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100146330(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 72 * a1 + 32;
    unint64_t v6 = a3 + 72 * v4;
    if (v5 >= v6 || v5 + 72 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100146428(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + (a1 << 6) + 32;
    unint64_t v6 = a3 + (v4 << 6);
    if (v5 >= v6 || v5 + (v4 << 6) <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10014651C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1000063C0((uint64_t *)&unk_100201520);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v44 = (char *)v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v32 - v12;
  uint64_t v48 = _swiftEmptyArrayStorage;
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = OBJC_IVAR____TtC21WritingToolsUIService17AttachmentManager___observationRegistrar;
  uint64_t result = swift_beginAccess();
  uint64_t v43 = v14;
  if (v14)
  {
    unint64_t v17 = 0;
    uint64_t v37 = a2;
    uint64_t v38 = v7;
    uint64_t v35 = a2 + v15;
    uint64_t v36 = v9;
    uint64_t v39 = a1;
    uint64_t v40 = v9 + 48;
    uint64_t v45 = v8;
    uint64_t v46 = (void (**)(char *, char *, uint64_t))(v9 + 32);
    v32[2] = v2;
    uint64_t v33 = (uint64_t (**)(char *, uint64_t))(v9 + 8);
    uint64_t v41 = v9 + 56;
    uint64_t v42 = v9 + 16;
    v32[1] = (v9 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v18 = v9;
    while (v17 < *(void *)(a1 + 16))
    {
      unint64_t v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
      uint64_t v20 = *(void *)(v18 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v18 + 16))(v7, a1 + v19 + v20 * v17, v8);
      uint64_t v34 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
      v34(v7, 0, 1, v8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v7, 1, v8) == 1) {
        goto LABEL_20;
      }
      uint64_t v21 = *v46;
      (*v46)(v13, v7, v8);
      swift_getKeyPath();
      uint64_t v22 = v37;
      uint64_t v47 = v37;
      sub_100142DF8(&qword_100201970, (void (*)(uint64_t))type metadata accessor for AttachmentManager);
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      uint64_t v23 = *(void *)(v22 + 16);
      uint64_t v24 = *(void *)(v23 + 16);
      if (v24)
      {
        uint64_t v25 = *(void *)(type metadata accessor for Attachment(0) - 8);
        uint64_t v26 = v23 + ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80));
        uint64_t v27 = *(void *)(v25 + 72);
        swift_bridgeObjectRetain();
        do
        {
          if (static URL.== infix(_:_:)())
          {
            swift_bridgeObjectRelease();
            uint64_t v8 = v45;
            uint64_t result = (*v33)(v13, v45);
            uint64_t v7 = v38;
            goto LABEL_4;
          }
          v26 += v27;
          --v24;
        }
        while (v24);
        swift_bridgeObjectRelease();
      }
      v21(v44, v13, v45);
      BOOL v28 = v48;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100129284(0, v28[2] + 1, 1);
        BOOL v28 = v48;
      }
      uint64_t v7 = v38;
      unint64_t v30 = v28[2];
      unint64_t v29 = v28[3];
      if (v30 >= v29 >> 1)
      {
        sub_100129284(v29 > 1, v30 + 1, 1);
        BOOL v28 = v48;
      }
      void v28[2] = v30 + 1;
      unint64_t v31 = (unint64_t)v28 + v19 + v30 * v20;
      uint64_t v8 = v45;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v21)(v31, v44, v45);
      uint64_t v48 = v28;
LABEL_4:
      ++v17;
      a1 = v39;
      uint64_t v18 = v36;
      if (v17 == v43)
      {
        v34(v7, 1, 1, v8);
        goto LABEL_20;
      }
    }
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
LABEL_20:
    swift_bridgeObjectRelease();
    sub_10002784C((uint64_t)v7, (uint64_t *)&unk_100201520);
    return (uint64_t)v48;
  }
  return result;
}

void *sub_1001469B4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_1000063C0(&qword_100204798);
    uint64_t v3 = static _SetStorage.allocate(capacity:)();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v31 = v1;
    uint64_t v32 = a1 + 32;
    while (1)
    {
      uint64_t v6 = *(void **)(v32 + 8 * v4);
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      Hasher.init(_seed:)();
      id v7 = v6;
      String.hash(into:)();
      Swift::Int v8 = Hasher._finalize()();
      uint64_t result = (void *)swift_bridgeObjectRelease();
      uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v11 = v8 & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v17 = v16;
        if (v15 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v17 == v18)
        {
LABEL_3:
          swift_bridgeObjectRelease_n();
LABEL_4:

          goto LABEL_5;
        }
        char v20 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        uint64_t result = (void *)swift_bridgeObjectRelease();
        if (v20) {
          goto LABEL_4;
        }
        uint64_t v21 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v21;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0) {
            break;
          }
          uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v24 = v23;
          if (v22 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v24 == v25) {
            goto LABEL_3;
          }
          char v27 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          uint64_t result = (void *)swift_bridgeObjectRelease();
          if (v27) {
            goto LABEL_4;
          }
        }
      }
      *(void *)(v5 + 8 * v12) = v14 | v13;
      *(void *)(*(void *)(v3 + 48) + 8 * v11) = v7;
      uint64_t v28 = *(void *)(v3 + 16);
      BOOL v29 = __OFADD__(v28, 1);
      uint64_t v30 = v28 + 1;
      if (v29)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v30;
LABEL_5:
      if (++v4 == v31) {
        return (void *)v3;
      }
    }
  }
  return &_swiftEmptySetSingleton;
}

uint64_t sub_100146BE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000063C0(&qword_1001FC4F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100146C54(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100146CBC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100146D2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000063C0((uint64_t *)&unk_100201530);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_100146D94()
{
  return sub_10013F740(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_100146DB0()
{
  return sub_10013F194(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_100146DCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Attachment.UploadState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_100146E30()
{
  unint64_t result = qword_1002049D0;
  if (!qword_1002049D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002049D0);
  }
  return result;
}

uint64_t sub_100146E84(uint64_t a1, uint64_t a2)
{
  if (a2 != 1) {
    return _objc_release_x1();
  }
  return result;
}

uint64_t sub_100146E94()
{
  uint64_t v1 = (int *)type metadata accessor for Attachment(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  swift_unknownObjectRelease();
  uint64_t v5 = v0 + v3;
  uint64_t v6 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
  swift_bridgeObjectRelease();
  uint64_t v7 = v0 + v3 + v1[6];
  uint64_t v8 = type metadata accessor for UTType();
  uint64_t v9 = *(void *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }
  swift_bridgeObjectRelease();

  uint64_t v10 = v5 + v1[10];
  uint64_t v11 = sub_1000063C0(&qword_1002040B8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 1, v11))
  {
    uint64_t v12 = type metadata accessor for DocumentResourceIdentifier();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v10, v12);
  }
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_1001470D0(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for Attachment(0) - 8);
  uint64_t v5 = *(void *)(v1 + 32);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  void *v7 = v2;
  v7[3] = v5;
  _OWORD v7[4] = v6;
  v7[1] = sub_100027204;
  v7[2] = a1;
  return _swift_task_switch(sub_10014092C, 0, 0);
}

uint64_t sub_1001471C4()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001471FC(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100027204;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1002048A8 + dword_1002048A8);
  return v6(a1, v4);
}

uint64_t sub_1001472B4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = *(void *)(sub_1000063C0(&qword_100203E98) - 8);
    uint64_t v9 = a4 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v10 = *(void *)(v8 + 72);
    unint64_t v11 = v9 + v10 * a1;
    unint64_t v12 = a3 + v10 * v4;
    if (v11 >= v12 || v11 + v10 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v12;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

ValueMetadata *type metadata accessor for AttachmentError()
{
  return &type metadata for AttachmentError;
}

ValueMetadata *type metadata accessor for AttachmentType()
{
  return &type metadata for AttachmentType;
}

unint64_t sub_100147438()
{
  unint64_t result = qword_1002048C0;
  if (!qword_1002048C0)
  {
    sub_100006C14(&qword_1002048C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002048C0);
  }
  return result;
}

unint64_t sub_100147498()
{
  unint64_t result = qword_1002048D0;
  if (!qword_1002048D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1002048D0);
  }
  return result;
}

void *sub_1001474F8(uint64_t a1)
{
  uint64_t v26 = sub_1000063C0(&qword_100203E98);
  uint64_t v3 = *(void *)(v26 - 8);
  uint64_t v4 = __chkstk_darwin(v26);
  uint64_t v6 = (void *)((char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v4);
  uint64_t v8 = (void *)((char *)v24 - v7);
  uint64_t v9 = type metadata accessor for Attachment(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9 - 8);
  unint64_t v12 = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v13 = *(void *)(a1 + 16);
  uint64_t v14 = _swiftEmptyArrayStorage;
  if (v13)
  {
    v24[1] = v1;
    char v27 = _swiftEmptyArrayStorage;
    sub_100129248(0, v13, 0);
    uint64_t v15 = (uint64_t *)(a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)));
    uint64_t v25 = *(void *)(v3 + 72);
    do
    {
      uint64_t v16 = v26;
      uint64_t v17 = *(int *)(v26 + 48);
      uint64_t v18 = (uint64_t)v8 + v17;
      uint64_t v19 = *v15;
      *uint64_t v8 = *v15;
      sub_1000941BC((uint64_t)v15 + v17, (uint64_t)v8 + v17);
      uint64_t v20 = (uint64_t)v6 + *(int *)(v16 + 48);
      *uint64_t v6 = v19;
      sub_100035B34(v18, v20);
      sub_1000941BC(v20, (uint64_t)v12);
      sub_10002784C((uint64_t)v6, &qword_100203E98);
      uint64_t v14 = v27;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100129248(0, v14[2] + 1, 1);
        uint64_t v14 = v27;
      }
      unint64_t v22 = v14[2];
      unint64_t v21 = v14[3];
      if (v22 >= v21 >> 1)
      {
        sub_100129248(v21 > 1, v22 + 1, 1);
        uint64_t v14 = v27;
      }
      uint64_t v15 = (uint64_t *)((char *)v15 + v25);
      v14[2] = v22 + 1;
      sub_100035B34((uint64_t)v12, (uint64_t)v14+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(void *)(v10 + 72) * v22);
      --v13;
    }
    while (v13);
  }
  return v14;
}

uint64_t sub_100147788(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[36] = a3;
  v4[37] = v3;
  v4[34] = a1;
  v4[35] = a2;
  v4[38] = type metadata accessor for MainActor();
  v4[39] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[40] = v6;
  v4[41] = v5;
  return _swift_task_switch(sub_100147828, v6, v5);
}

uint64_t sub_100147828()
{
  if (qword_1001FAC28 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  *(void *)(v0 + 336) = sub_10000EBE8(v1, (uint64_t)qword_100212770);
  swift_bridgeObjectRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  BOOL v4 = os_log_type_enabled(v2, v3);
  uint64_t v5 = *(void *)(v0 + 272);
  if (v4)
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 134217984;
    *(void *)(v0 + 264) = *(void *)(v5 + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "adding photos: %ld", v6, 0xCu);
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  uint64_t v7 = *(void *)(v0 + 296);
  uint64_t v8 = *(void *)(v0 + 272);
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v9 = sub_10014C100(v8, v7);
  *(void *)(v0 + 344) = v9;
  *(void *)(v0 + 352) = 0;
  swift_release();
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    unint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)unint64_t v12 = 134217984;
    *(void *)(v0 + 256) = *(void *)(v9 + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "deduped photos: %ld", v12, 0xCu);
    swift_slowDealloc();
  }
  long long v20 = *(_OWORD *)(v0 + 280);
  uint64_t v13 = *(void *)(v0 + 272);

  uint64_t v14 = sub_1000063C0(&qword_100204928);
  uint64_t v15 = static MainActor.shared.getter();
  *(void *)(v0 + 360) = v15;
  uint64_t v16 = swift_task_alloc();
  *(void *)(v0 + 368) = v16;
  *(void *)(v16 + 16) = v9;
  *(_OWORD *)(v16 + 24) = v20;
  *(void *)(v16 + 40) = v13;
  uint64_t v17 = sub_1000063C0((uint64_t *)&unk_100204940);
  uint64_t v18 = (void *)swift_task_alloc();
  *(void *)(v0 + 376) = v18;
  void *v18 = v0;
  v18[1] = sub_100147B54;
  return withTaskGroup<A, B>(of:returning:isolation:body:)(v0 + 208, v14, v17, v15, &protocol witness table for MainActor, &unk_100204938, v16, v14);
}

uint64_t sub_100147B54()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 328);
  uint64_t v3 = *(void *)(v1 + 320);
  return _swift_task_switch(sub_100147CD8, v3, v2);
}

uint64_t sub_100147CD8()
{
  uint64_t v13 = v0;
  uint64_t v1 = *(void *)(v0 + 352);
  v12[0] = *(void **)(v0 + 208);
  swift_bridgeObjectRetain();
  sub_10014ACB0(v12);
  if (v1)
  {
    return swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = sub_1001474F8((uint64_t)v12[0]);
    swift_release();
    *(void *)(v0 + 240) = v3;
    BOOL v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      v12[0] = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v6 = 136642819;
      swift_beginAccess();
      type metadata accessor for Attachment(0);
      swift_bridgeObjectRetain();
      uint64_t v7 = Array.description.getter();
      unint64_t v9 = v8;
      swift_bridgeObjectRelease();
      *(void *)(v0 + 248) = sub_100021444(v7, v9, (uint64_t *)v12);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "deduped photos: %{sensitive}s", v6, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    swift_beginAccess();
    *(void *)(v0 + 384) = static MainActor.shared.getter();
    uint64_t v11 = dispatch thunk of Actor.unownedExecutor.getter();
    *(void *)(v0 + 392) = v11;
    *(void *)(v0 + 400) = v10;
    return _swift_task_switch(sub_100147F5C, v11, v10);
  }
}

uint64_t sub_100147F5C()
{
  sub_1000063C0(&qword_100204890);
  v0[51] = static MainActor.shared.getter();
  uint64_t v1 = swift_task_alloc();
  v0[52] = v1;
  *(void *)(v1 + 16) = v0 + 30;
  uint64_t v2 = (void *)swift_task_alloc();
  v0[53] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_10014806C;
  return withTaskGroup<A, B>(of:returning:isolation:body:)();
}

uint64_t sub_10014806C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 400);
  uint64_t v3 = *(void *)(v1 + 392);
  return _swift_task_switch(sub_1001481CC, v3, v2);
}

uint64_t sub_1001481CC()
{
  swift_release();
  swift_endAccess();
  uint64_t v1 = *(void *)(v0 + 320);
  uint64_t v2 = *(void *)(v0 + 328);
  return _swift_task_switch(sub_10014823C, v1, v2);
}

uint64_t sub_10014823C()
{
  uint64_t v1 = v0[37];
  swift_release();
  uint64_t v2 = v0[30];
  swift_getKeyPath();
  v0[28] = v1;
  sub_10014CB0C(&qword_100201970, (void (*)(uint64_t))type metadata accessor for AttachmentManager);
  swift_bridgeObjectRetain();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  v0[24] = v1;
  swift_getKeyPath();
  ObservationRegistrar.willSet<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  sub_1001635B4(v2);
  swift_endAccess();
  v0[25] = v1;
  swift_getKeyPath();
  ObservationRegistrar.didSet<A, B>(_:keyPath:)();
  swift_release();
  swift_getKeyPath();
  v0[27] = v1;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  sub_100008DD4(v1 + 24, (uint64_t)(v0 + 2), (uint64_t *)&unk_100201530);
  if (v0[5])
  {
    uint64_t v4 = v0[35];
    unint64_t v3 = v0[36];
    sub_1000251D0((uint64_t)(v0 + 2), (uint64_t)(v0 + 7));
    sub_10002784C((uint64_t)(v0 + 2), (uint64_t *)&unk_100201530);
    sub_100044740(v0 + 7, v0[10]);
    sub_10000A8C8(*(void *)(v0[30] + 16), 0, 0, 1, 0, 1, 0, 1, v4, v3);
    sub_100027DBC((uint64_t)(v0 + 7));
  }
  else
  {
    sub_10002784C((uint64_t)(v0 + 2), (uint64_t *)&unk_100201530);
  }
  swift_bridgeObjectRelease();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_1001484D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[13] = a4;
  v5[14] = a5;
  v5[11] = a2;
  v5[12] = a3;
  v5[10] = a1;
  uint64_t v6 = sub_1000063C0(&qword_100203E98);
  v5[15] = v6;
  v5[16] = *(void *)(v6 - 8);
  v5[17] = swift_task_alloc();
  type metadata accessor for Attachment(0);
  v5[18] = swift_task_alloc();
  v5[19] = sub_1000063C0(&qword_100204968);
  v5[20] = swift_task_alloc();
  sub_1000063C0(&qword_100204970);
  v5[21] = swift_task_alloc();
  uint64_t v7 = sub_1000063C0(&qword_100204978);
  v5[22] = v7;
  v5[23] = *(void *)(v7 - 8);
  v5[24] = swift_task_alloc();
  sub_1000063C0(&qword_1001FF820);
  v5[25] = swift_task_alloc();
  v5[26] = swift_task_alloc();
  uint64_t v8 = sub_1000063C0(&qword_100204980);
  v5[27] = v8;
  v5[28] = *(void *)(v8 - 8);
  v5[29] = swift_task_alloc();
  sub_1000063C0(&qword_100204988);
  v5[30] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for PhotosPickerItem();
  v5[31] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v5[32] = v10;
  v5[33] = *(void *)(v10 + 64);
  v5[34] = swift_task_alloc();
  v5[35] = swift_task_alloc();
  sub_1000063C0((uint64_t *)&unk_100204990);
  v5[36] = swift_task_alloc();
  v5[37] = swift_task_alloc();
  v5[38] = type metadata accessor for MainActor();
  v5[39] = static MainActor.shared.getter();
  uint64_t v12 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[40] = v12;
  v5[41] = v11;
  return _swift_task_switch(sub_100148848, v12, v11);
}

uint64_t sub_100148848()
{
  uint64_t v1 = *(void *)(v0 + 256);
  uint64_t v3 = *(void *)(v0 + 216);
  uint64_t v2 = *(void *)(v0 + 224);
  uint64_t v60 = (void (**)(void, uint64_t, uint64_t, void))(v1 + 56);
  uint64_t v61 = v1;
  unint64_t v4 = *(void *)(*(void *)(v0 + 88) + 16);
  uint64_t v5 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 32);
  uint64_t v58 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  uint64_t v59 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56);
  uint64_t v55 = *(void *)(v0 + 264) + 7;
  uint64_t v6 = swift_bridgeObjectRetain();
  uint64_t v54 = 0;
  unint64_t v10 = 0;
  uint64_t v57 = v3;
  unint64_t v56 = v4;
  while (1)
  {
    if (v10 == v4)
    {
      (*v60)(*(void *)(v0 + 240), 1, 1, *(void *)(v0 + 248));
      unint64_t v12 = v4;
LABEL_7:
      uint64_t v15 = *(void *)(v0 + 288);
      uint64_t v16 = *(void *)(v0 + 216);
      sub_10002784C(*(void *)(v0 + 240), &qword_100204988);
      (*v59)(v15, 1, 1, v16);
      goto LABEL_10;
    }
    if (v10 >= v4)
    {
      __break(1u);
LABEL_23:
      __break(1u);
      return TaskGroup.Iterator.next(isolation:)(v6, v7, v8, v9);
    }
    uint64_t v13 = *(void *)(v0 + 240);
    uint64_t v14 = *(void *)(v0 + 248);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v61 + 16))(v13, *(void *)(v0 + 88)+ ((*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80))+ *(void *)(v61 + 72) * v10, v14);
    unint64_t v12 = v10 + 1;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v61 + 56))(v13, 0, 1, v14);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v61 + 48))(v13, 1, v14) == 1) {
      goto LABEL_7;
    }
    uint64_t v17 = *(void *)(v0 + 280);
    uint64_t v18 = *(void *)(v0 + 248);
    uint64_t v19 = *(void *)(v0 + 232);
    long long v20 = *v5;
    (*v5)(v17, *(void *)(v0 + 240), v18);
    uint64_t v21 = (char *)(v19 + *(int *)(v3 + 48));
    uint64_t v6 = v20((uint64_t)v21, v17, v18);
    if (__OFADD__(v54, 1)) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void **)(v0 + 288);
    uint64_t v23 = *(void *)(v0 + 248);
    uint64_t v24 = *(void *)(v0 + 216);
    uint64_t v25 = (char *)v22 + *(int *)(v3 + 48);
    *unint64_t v22 = v54;
    v20((uint64_t)v25, (uint64_t)v21, v23);
    (*v59)((uint64_t)v22, 0, 1, v24);
    ++v54;
LABEL_10:
    uint64_t v26 = *(void *)(v0 + 296);
    uint64_t v27 = *(void *)(v0 + 216);
    sub_100026FD0(*(void *)(v0 + 288), v26, (uint64_t *)&unk_100204990);
    if ((*v58)(v26, 1, v27) == 1) {
      break;
    }
    unint64_t v62 = v12;
    uint64_t v28 = *(uint64_t **)(v0 + 296);
    BOOL v29 = *(char **)(v0 + 272);
    uint64_t v30 = *(void *)(v0 + 248);
    uint64_t v63 = v30;
    uint64_t v64 = v29;
    uint64_t v31 = *(void *)(v0 + 208);
    uint64_t v67 = *(void *)(v0 + 104);
    uint64_t v68 = *(void *)(v0 + 200);
    uint64_t v66 = *(void *)(v0 + 96);
    uint64_t v65 = *v28;
    uint64_t v32 = (char *)v28 + *(int *)(v3 + 48);
    uint64_t v33 = type metadata accessor for TaskPriority();
    uint64_t v34 = *(void *)(v33 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 56))(v31, 1, 1, v33);
    uint64_t v35 = *(void (**)(char *, char *, uint64_t))(v61 + 32);
    v35(v29, v32, v30);
    swift_bridgeObjectRetain();
    uint64_t v36 = static MainActor.shared.getter();
    uint64_t v37 = v5;
    unint64_t v38 = (*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80);
    unint64_t v39 = (v55 + v38) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v40 = swift_allocObject();
    *(void *)(v40 + 16) = v36;
    *(void *)(v40 + 24) = &protocol witness table for MainActor;
    unint64_t v41 = v40 + v38;
    uint64_t v5 = v37;
    v35((char *)v41, v64, v63);
    *(void *)(v40 + v39) = v65;
    uint64_t v42 = (void *)(v40 + ((v39 + 15) & 0xFFFFFFFFFFFFFFF8));
    void *v42 = v66;
    v42[1] = v67;
    sub_100008DD4(v31, v68, &qword_1001FF820);
    int v43 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(v68, 1, v33);
    uint64_t v44 = *(void *)(v0 + 200);
    if (v43 == 1)
    {
      sub_10002784C(*(void *)(v0 + 200), &qword_1001FF820);
    }
    else
    {
      TaskPriority.rawValue.getter();
      (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v44, v33);
    }
    unint64_t v4 = v56;
    if (*(void *)(v40 + 16))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v45 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v47 = v46;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v45 = 0;
      uint64_t v47 = 0;
    }
    uint64_t v48 = **(void **)(v0 + 80);
    uint64_t v49 = swift_allocObject();
    *(void *)(v49 + 16) = &unk_1002049A8;
    *(void *)(v49 + 24) = v40;
    sub_1000063C0(&qword_100204928);
    uint64_t v50 = v47 | v45;
    if (v47 | v45)
    {
      uint64_t v50 = v0 + 16;
      *(void *)(v0 + 16) = 0;
      *(void *)(v0 + 24) = 0;
      *(void *)(v0 + 32) = v45;
      *(void *)(v0 + 40) = v47;
    }
    unint64_t v10 = v62;
    uint64_t v11 = *(void *)(v0 + 208);
    *(void *)(v0 + 48) = 1;
    *(void *)(v0 + 56) = v50;
    *(void *)(v0 + 64) = v48;
    swift_task_create();
    swift_release();
    uint64_t v6 = sub_10002784C(v11, &qword_1001FF820);
    uint64_t v3 = v57;
  }
  swift_bridgeObjectRelease();
  *(void *)(v0 + 336) = sub_1000063C0(&qword_100204928);
  TaskGroup.makeAsyncIterator()();
  *(void *)(v0 + 344) = _swiftEmptyArrayStorage;
  uint64_t v51 = static MainActor.shared.getter();
  *(void *)(v0 + 352) = v51;
  uint64_t v52 = (void *)swift_task_alloc();
  *(void *)(v0 + 360) = v52;
  *uint64_t v52 = v0;
  v52[1] = sub_100148E74;
  uint64_t v6 = *(void *)(v0 + 168);
  uint64_t v9 = *(void *)(v0 + 176);
  uint64_t v8 = &protocol witness table for MainActor;
  uint64_t v7 = v51;
  return TaskGroup.Iterator.next(isolation:)(v6, v7, v8, v9);
}

uint64_t sub_100148E74()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 328);
  uint64_t v3 = *(void *)(v1 + 320);
  return _swift_task_switch(sub_100148FB8, v3, v2);
}

uint64_t sub_100148FB8()
{
  uint64_t v1 = v0[42];
  uint64_t v2 = (unint64_t *)v0[21];
  if ((*(unsigned int (**)(unint64_t *, uint64_t, uint64_t))(*(void *)(v1 - 8) + 48))(v2, 1, v1) != 1)
  {
    unint64_t v6 = *v2;
    sub_100026FD0((uint64_t)v2 + *(int *)(v1 + 48), v0[20], &qword_100204968);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      uint64_t v21 = (unint64_t *)v0[17];
      uint64_t v20 = v0[18];
      uint64_t v22 = v0[15];
      sub_100035B34(v0[20], v20);
      uint64_t v23 = (uint64_t)v21 + *(int *)(v22 + 48);
      *uint64_t v21 = v6;
      sub_1000941BC(v20, v23);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v25 = v0[43];
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        unint64_t v25 = sub_100143E48(0, *(void *)(v25 + 16) + 1, 1, v0[43]);
      }
      unint64_t v27 = *(void *)(v25 + 16);
      unint64_t v26 = *(void *)(v25 + 24);
      if (v27 >= v26 >> 1) {
        unint64_t v25 = sub_100143E48(v26 > 1, v27 + 1, 1, v25);
      }
      uint64_t v28 = v0[17];
      uint64_t v29 = v0[18];
      uint64_t v30 = v0[16];
      *(void *)(v25 + 16) = v27 + 1;
      sub_100026FD0(v28, v25+ ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80))+ *(void *)(v30 + 72) * v27, &qword_100203E98);
      sub_100035B98(v29);
      v0[43] = v25;
      goto LABEL_21;
    }
    if (qword_1001FAC28 != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for Logger();
    sub_10000EBE8(v7, (uint64_t)qword_100212770);
    swift_bridgeObjectRetain();
    swift_errorRetain();
    swift_bridgeObjectRetain();
    swift_errorRetain();
    uint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = swift_slowAlloc();
      uint64_t v11 = (void *)swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      v0[9] = v12;
      *(_DWORD *)uint64_t v10 = 136643075;
      if ((v6 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v6 < *(void *)(v0[14] + 16))
      {
        uint64_t v16 = PhotosPickerItem.itemIdentifier.getter();
        if (v17)
        {
          unint64_t v18 = v17;
        }
        else
        {
          uint64_t v16 = 7104878;
          unint64_t v18 = 0xE300000000000000;
        }
        *(void *)(v10 + 4) = sub_100021444(v16, v18, v0 + 9);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v10 + 12) = 2112;
        swift_errorRetain();
        uint64_t v19 = _swift_stdlib_bridgeErrorToNSError();
        *(void *)(v10 + 14) = v19;
        *uint64_t v11 = v19;
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v8, v9, "failed to load photo %{sensitive}s: %@", (uint8_t *)v10, 0x16u);
        sub_1000063C0(&qword_1001FED90);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        swift_errorRelease();
LABEL_21:
        uint64_t v31 = static MainActor.shared.getter();
        v0[44] = v31;
        uint64_t v32 = (void *)swift_task_alloc();
        v0[45] = v32;
        *uint64_t v32 = v0;
        v32[1] = sub_100148E74;
        uint64_t v12 = v0[21];
        uint64_t v15 = v0[22];
        uint64_t v14 = &protocol witness table for MainActor;
        uint64_t v13 = v31;
        return TaskGroup.Iterator.next(isolation:)(v12, v13, v14, v15);
      }
      __break(1u);
      return TaskGroup.Iterator.next(isolation:)(v12, v13, v14, v15);
    }
    swift_errorRelease();
    swift_bridgeObjectRelease_n();
    swift_errorRelease();
    swift_errorRelease();

    goto LABEL_21;
  }
  (*(void (**)(void, void))(v0[23] + 8))(v0[24], v0[22]);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v4 = v0[43];
  return v3(v4);
}

uint64_t sub_10014951C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[5] = a6;
  v7[6] = a7;
  v7[3] = a4;
  _OWORD v7[4] = a5;
  v7[2] = a1;
  sub_1000063C0(&qword_1002049C0);
  uint64_t v8 = swift_task_alloc();
  v7[7] = v8;
  uint64_t v9 = type metadata accessor for Attachment(0);
  v7[8] = v9;
  v7[9] = *(void *)(v9 - 8);
  v7[10] = swift_task_alloc();
  v7[11] = type metadata accessor for MainActor();
  v7[12] = static MainActor.shared.getter();
  uint64_t v10 = (void *)swift_task_alloc();
  v7[13] = v10;
  uint64_t v11 = sub_10014CB0C(&qword_1002049C8, (void (*)(uint64_t))type metadata accessor for Attachment);
  *uint64_t v10 = v7;
  v10[1] = sub_1001496C0;
  return PhotosPickerItem.loadTransferable<A>(type:)(v8, v9, v9, v11);
}

uint64_t sub_1001496C0()
{
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  if (v0) {
    uint64_t v4 = sub_100149A24;
  }
  else {
    uint64_t v4 = sub_10014981C;
  }
  return _swift_task_switch(v4, v3, v2);
}

uint64_t sub_10014981C()
{
  uint64_t v1 = v0[8];
  uint64_t v2 = v0[9];
  uint64_t v3 = v0[7];
  swift_release();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    uint64_t v4 = v0[4];
    uint64_t v5 = (void *)v0[2];
    sub_10002784C(v0[7], &qword_1002049C0);
    uint64_t v6 = (void *)((char *)v5 + *(int *)(sub_1000063C0(&qword_100204928) + 48));
    *uint64_t v5 = v4;
    sub_100146E30();
    uint64_t v7 = swift_allocError();
    *uint64_t v8 = 0xD000000000000015;
    v8[1] = 0x80000001001A06F0;
    *uint64_t v6 = v7;
    sub_1000063C0(&qword_100204968);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    sub_100035B34(v0[7], v0[10]);
    sub_10013D5F8();
    uint64_t result = PhotosPickerItem.itemIdentifier.getter();
    if (!v10)
    {
      __break(1u);
      return result;
    }
    uint64_t v11 = result;
    uint64_t v12 = v10;
    uint64_t v13 = v0[6];
    uint64_t v14 = (uint64_t *)(v0[10] + *(int *)(v0[8] + 20));
    swift_bridgeObjectRelease();
    uint64_t *v14 = v11;
    v14[1] = v12;
    if (v13)
    {
      uint64_t v16 = v0[5];
      uint64_t v15 = v0[6];
      unint64_t v17 = (void *)(v0[10] + *(int *)(v0[8] + 44));
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *unint64_t v17 = v16;
      v17[1] = v15;
    }
    uint64_t v18 = v0[10];
    uint64_t v19 = v0[4];
    uint64_t v20 = (void *)v0[2];
    uint64_t v21 = (uint64_t)v20 + *(int *)(sub_1000063C0(&qword_100204928) + 48);
    *uint64_t v20 = v19;
    sub_1000941BC(v18, v21);
    sub_1000063C0(&qword_100204968);
    swift_storeEnumTagMultiPayload();
    sub_100035B98(v18);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v22 = (uint64_t (*)(void))v0[1];
  return v22();
}

uint64_t sub_100149A24()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[4];
  uint64_t v3 = (void *)v0[2];
  swift_release();
  uint64_t v4 = (void *)((char *)v3 + *(int *)(sub_1000063C0(&qword_100204928) + 48));
  *uint64_t v3 = v2;
  *uint64_t v4 = v1;
  sub_1000063C0(&qword_100204968);
  swift_storeEnumTagMultiPayload();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t property wrapper backing initializer of FormSheetPhotoPickerView.selectedImages()
{
  sub_1000063C0((uint64_t *)&unk_1002048E0);
  State.init(wrappedValue:)();
  return v1;
}

uint64_t FormSheetPhotoPickerView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v31 = a1;
  uint64_t v2 = type metadata accessor for PhotosPickerItem.EncodingDisambiguationPolicy();
  uint64_t v27 = *(void *)(v2 - 8);
  uint64_t v28 = v2;
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for PhotosPickerSelectionBehavior();
  uint64_t v25 = *(void *)(v5 - 8);
  uint64_t v26 = v5;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000063C0(&qword_100202F28);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000063C0((uint64_t *)&unk_1002048F0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v29 = v11;
  uint64_t v30 = v12;
  __chkstk_darwin(v11);
  uint64_t v23 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v39 = *(_OWORD *)(v1 + 16);
  long long v36 = *(_OWORD *)(v1 + 16);
  uint64_t v24 = sub_1000063C0(&qword_1001FB5A8);
  State.projectedValue.getter();
  uint64_t v21 = v34;
  int v22 = v35;
  long long v36 = *(_OWORD *)(v1 + 32);
  uint64_t v38 = v36;
  sub_100026FD0((uint64_t)&v36 + 8, (uint64_t)v37, &qword_100204900);
  long long v33 = v36;
  sub_1000063C0(&qword_100201FC0);
  State.projectedValue.getter();
  static PHPickerFilter.images.getter();
  uint64_t v14 = type metadata accessor for PHPickerFilter();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v10, 0, 1, v14);
  id v15 = [self sharedPhotoLibrary];
  static PhotosPickerSelectionBehavior.default.getter();
  static PhotosPickerItem.EncodingDisambiguationPolicy.automatic.getter();
  View.photosPicker(isPresented:selection:maxSelectionCount:selectionBehavior:matching:preferredItemEncoding:photoLibrary:)();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v4, v28);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v7, v26);
  sub_10002784C((uint64_t)v10, &qword_100202F28);
  long long v34 = v39;
  State.wrappedValue.getter();
  char v32 = v33;
  *(void *)&long long v33 = *(void *)v1;
  BYTE8(v33) = *(unsigned char *)(v1 + 8);
  uint64_t v16 = (_OWORD *)swift_allocObject();
  long long v17 = *(_OWORD *)(v1 + 16);
  v16[1] = *(_OWORD *)v1;
  v16[2] = v17;
  v16[3] = *(_OWORD *)(v1 + 32);
  sub_10005CF60((uint64_t)&v33);
  sub_100133230((uint64_t)&v39);
  sub_1001065E8((uint64_t)&v38);
  sub_10005CF60((uint64_t)v37);
  *(void *)&long long v34 = &type metadata for EmptyView;
  *((void *)&v34 + 1) = &protocol witness table for EmptyView;
  swift_getOpaqueTypeConformance2();
  uint64_t v18 = v29;
  uint64_t v19 = v23;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v19, v18);
}

uint64_t sub_10014A01C(uint64_t a1, unsigned char *a2, uint64_t *a3)
{
  uint64_t v5 = sub_1000063C0(&qword_1001FF820);
  uint64_t result = __chkstk_darwin(v5 - 8);
  uint64_t v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 16];
  if ((*a2 & 1) == 0)
  {
    uint64_t v9 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
    type metadata accessor for MainActor();
    uint64_t v18 = *a3;
    char v19 = *((unsigned char *)a3 + 8);
    long long v10 = *((_OWORD *)a3 + 2);
    long long v17 = *((_OWORD *)a3 + 1);
    long long v14 = v10;
    uint64_t v16 = v10;
    sub_100026FD0((uint64_t)&v14 + 8, (uint64_t)v15, &qword_100204900);
    sub_10005CF60((uint64_t)&v18);
    sub_100133230((uint64_t)&v17);
    sub_1001065E8((uint64_t)&v16);
    sub_10005CF60((uint64_t)v15);
    uint64_t v11 = static MainActor.shared.getter();
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = v11;
    *(void *)(v12 + 24) = &protocol witness table for MainActor;
    long long v13 = *((_OWORD *)a3 + 1);
    *(_OWORD *)(v12 + 32) = *(_OWORD *)a3;
    *(_OWORD *)(v12 + 48) = v13;
    *(_OWORD *)(v12 + 64) = *((_OWORD *)a3 + 2);
    sub_1001228D0((uint64_t)v8, (uint64_t)&unk_100204910, v12);
    return swift_release();
  }
  return result;
}

uint64_t sub_10014A1A4()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_10014A1F4(uint64_t a1, unsigned char *a2)
{
  return sub_10014A01C(a1, a2, (uint64_t *)(v2 + 16));
}

uint64_t sub_10014A1FC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10014A218(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[10] = a4;
  type metadata accessor for MainActor();
  v4[11] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[12] = v6;
  v4[13] = v5;
  return _swift_task_switch(sub_10014A2B0, v6, v5);
}

uint64_t sub_10014A2B0()
{
  uint64_t v1 = *(void *)(v0 + 80);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v1 + 32);
  sub_1000063C0(&qword_100201FC0);
  State.wrappedValue.getter();
  uint64_t v2 = *(void *)(*(void *)(v0 + 48) + 16);
  swift_bridgeObjectRelease();
  uint64_t v3 = *(void *)(v0 + 80);
  if (v2)
  {
    *(void *)(v0 + 112) = *(void *)v3;
    char v4 = *(unsigned char *)(v3 + 8);
    *(unsigned char *)(v0 + 144) = v4;
    uint64_t v5 = swift_retain();
    uint64_t v6 = sub_100020F7C(v5, v4);
    swift_release();
    swift_getKeyPath();
    *(void *)(v0 + 56) = v6;
    sub_10014CB0C((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    *(void *)(v0 + 120) = *(void *)(v6 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__attachmentManager);
    swift_retain();
    swift_release();
    *(_OWORD *)(v0 + 32) = *(_OWORD *)(v1 + 32);
    State.wrappedValue.getter();
    uint64_t v7 = *(void *)(v0 + 64);
    *(void *)(v0 + 128) = v7;
    id v15 = (char *)&dword_100204920 + dword_100204920;
    uint64_t v8 = (void *)swift_task_alloc();
    *(void *)(v0 + 136) = v8;
    *uint64_t v8 = v0;
    v8[1] = sub_10014A5D0;
    return ((uint64_t (*)(uint64_t, void, void))v15)(v7, 0, 0);
  }
  else
  {
    swift_release();
    char v10 = *(unsigned char *)(v3 + 8);
    uint64_t v11 = swift_retain();
    uint64_t v12 = sub_100020F7C(v11, v10);
    swift_release();
    swift_getKeyPath();
    *(void *)(v0 + 72) = v12;
    sub_10014CB0C((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    swift_release();
    if (Strong)
    {
      if ([Strong respondsToSelector:"photosPickerSessionDismissed"]) {
        [Strong photosPickerSessionDismissed];
      }
      swift_unknownObjectRelease();
    }
    long long v14 = *(uint64_t (**)(void))(v0 + 8);
    return v14();
  }
}

uint64_t sub_10014A5D0()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 104);
  uint64_t v3 = *(void *)(v1 + 96);
  return _swift_task_switch(sub_10014A730, v3, v2);
}

uint64_t sub_10014A730()
{
  swift_release();
  char v1 = *(unsigned char *)(v0 + 144);
  uint64_t v2 = swift_retain();
  uint64_t v3 = sub_100020F7C(v2, v1);
  swift_release();
  swift_getKeyPath();
  *(void *)(v0 + 72) = v3;
  sub_10014CB0C((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  swift_release();
  if (Strong)
  {
    if ([Strong respondsToSelector:"photosPickerSessionDismissed"]) {
      [Strong photosPickerSessionDismissed];
    }
    swift_unknownObjectRelease();
  }
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t destroy for FormSheetPhotoPickerView()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t initializeWithCopy for FormSheetPhotoPickerView(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for FormSheetPhotoPickerView(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for CompositionPrompts.InitialPaddedUserPrompt(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for FormSheetPhotoPickerView(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_release();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for FormSheetPhotoPickerView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FormSheetPhotoPickerView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormSheetPhotoPickerView()
{
  return &type metadata for FormSheetPhotoPickerView;
}

uint64_t sub_10014AB04()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10014ABA4()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 80, 7);
}

uint64_t sub_10014ABFC(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_100027FEC;
  return sub_10014A218(a1, v4, v5, v1 + 32);
}

Swift::Int sub_10014ACB0(void **a1)
{
  uint64_t v2 = *(void *)(sub_1000063C0(&qword_100203E98) - 8);
  long long v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    long long v3 = (void *)sub_1001736FC(v3);
  }
  uint64_t v4 = v3[2];
  v6[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  Swift::Int result = sub_10014AD6C(v6);
  *a1 = v3;
  return result;
}

Swift::Int sub_10014AD6C(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v134 = sub_1000063C0(&qword_100203E98);
  uint64_t v4 = *(void *)(v134 - 8);
  uint64_t v5 = __chkstk_darwin(v134);
  uint64_t v7 = (char *)&v124 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v140 = (uint64_t)&v124 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  char v137 = (uint64_t *)((char *)&v124 - v11);
  __chkstk_darwin(v10);
  uint64_t v136 = (uint64_t *)((char *)&v124 - v12);
  Swift::Int v13 = a1[1];
  Swift::Int result = _minimumMergeRunLength(_:)(v13);
  if (result >= v13)
  {
    if (v13 < 0) {
      goto LABEL_142;
    }
    if (v13) {
      return sub_10014B7D8(0, v13, 1, a1);
    }
    return result;
  }
  if (v13 >= 0) {
    uint64_t v15 = v13;
  }
  else {
    uint64_t v15 = v13 + 1;
  }
  if (v13 < -1) {
    goto LABEL_150;
  }
  uint64_t v133 = v4;
  Swift::Int v126 = result;
  if (v13 < 2)
  {
    char v19 = (char *)_swiftEmptyArrayStorage;
    unint64_t v132 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v125 = _swiftEmptyArrayStorage;
    if (v13 != 1)
    {
      unint64_t v21 = _swiftEmptyArrayStorage[2];
LABEL_108:
      if (v21 >= 2)
      {
        uint64_t v118 = *a1;
        do
        {
          unint64_t v119 = v21 - 2;
          if (v21 < 2) {
            goto LABEL_137;
          }
          if (!v118) {
            goto LABEL_149;
          }
          uint64_t v120 = *(void *)&v19[16 * v119 + 32];
          uint64_t v121 = *(void *)&v19[16 * v21 + 24];
          sub_10014BA68(v118 + *(void *)(v133 + 72) * v120, v118 + *(void *)(v133 + 72) * *(void *)&v19[16 * v21 + 16], v118 + *(void *)(v133 + 72) * v121, v132);
          if (v2) {
            break;
          }
          if (v121 < v120) {
            goto LABEL_138;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            char v19 = sub_10017260C((uint64_t)v19);
          }
          if (v119 >= *((void *)v19 + 2)) {
            goto LABEL_139;
          }
          uint64_t v122 = &v19[16 * v119 + 32];
          *(void *)uint64_t v122 = v120;
          *((void *)v122 + 1) = v121;
          unint64_t v123 = *((void *)v19 + 2);
          if (v21 > v123) {
            goto LABEL_140;
          }
          memmove(&v19[16 * v21 + 16], &v19[16 * v21 + 32], 16 * (v123 - v21));
          *((void *)v19 + 2) = v123 - 1;
          unint64_t v21 = v123 - 1;
        }
        while (v123 > 2);
      }
LABEL_119:
      swift_bridgeObjectRelease();
      v125[2] = 0;
      return swift_bridgeObjectRelease();
    }
    char v130 = v7;
  }
  else
  {
    char v130 = v7;
    uint64_t v16 = v15 >> 1;
    uint64_t v17 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)(v17 + 16) = v16;
    uint64_t v18 = *(unsigned __int8 *)(v4 + 80);
    uint64_t v125 = (void *)v17;
    unint64_t v132 = v17 + ((v18 + 32) & ~v18);
  }
  Swift::Int v20 = 0;
  char v19 = (char *)_swiftEmptyArrayStorage;
  uint64_t v138 = a1;
  while (1)
  {
    uint64_t v128 = v19;
    Swift::Int v22 = v20;
    Swift::Int v23 = v20 + 1;
    Swift::Int v131 = v20;
    if (v20 + 1 >= v13)
    {
      uint64_t v39 = v20 + 1;
      char v19 = v128;
      goto LABEL_59;
    }
    uint64_t v24 = *a1;
    uint64_t v25 = *(void *)(v133 + 72);
    uint64_t v26 = v136;
    sub_100008DD4(*a1 + v25 * v23, (uint64_t)v136, &qword_100203E98);
    Swift::Int v141 = v13;
    uint64_t v27 = v137;
    sub_100008DD4(v24 + v25 * v22, (uint64_t)v137, &qword_100203E98);
    uint64_t v28 = *v26;
    uint64_t v135 = *v27;
    uint64_t v29 = (uint64_t)v27;
    Swift::Int v30 = v141;
    sub_10002784C(v29, &qword_100203E98);
    sub_10002784C((uint64_t)v26, &qword_100203E98);
    uint64_t v129 = v24;
    uint64_t v142 = v25;
    Swift::Int v139 = v22 + 2;
    if (v22 + 2 >= v30)
    {
      uint64_t v34 = v28;
    }
    else
    {
      uint64_t v127 = v2;
      uint64_t v31 = v25 * v23;
      uint64_t v32 = v24;
      uint64_t v33 = v25 * (v22 + 2);
      uint64_t v34 = v28;
      while (1)
      {
        uint64_t v35 = v136;
        int v36 = v34 < v135;
        sub_100008DD4(v32 + v33, (uint64_t)v136, &qword_100203E98);
        uint64_t v37 = v137;
        sub_100008DD4(v32 + v31, (uint64_t)v137, &qword_100203E98);
        int v38 = *v35 >= *v37;
        sub_10002784C((uint64_t)v37, &qword_100203E98);
        sub_10002784C((uint64_t)v35, &qword_100203E98);
        if (v36 == v38) {
          break;
        }
        v32 += v142;
        if (v141 == ++v139)
        {
          Swift::Int v30 = v141;
          Swift::Int v139 = v141;
          a1 = v138;
          uint64_t v2 = v127;
          Swift::Int v22 = v131;
          goto LABEL_25;
        }
      }
      a1 = v138;
      uint64_t v2 = v127;
      Swift::Int v22 = v131;
      Swift::Int v30 = v141;
    }
LABEL_25:
    char v19 = v128;
    if (v34 >= v135) {
      break;
    }
    uint64_t v39 = v139;
    if (v139 < v22) {
      goto LABEL_143;
    }
    if (v22 >= v139) {
      goto LABEL_39;
    }
    uint64_t v127 = v2;
    uint64_t v40 = 0;
    uint64_t v41 = v142;
    uint64_t v42 = v142 * (v139 - 1);
    Swift::Int v43 = v22;
    uint64_t v44 = v139 * v142;
    Swift::Int v45 = v43;
    uint64_t v46 = v43 * v142;
    uint64_t v47 = v129;
    do
    {
      if (v45 != v39 + v40 - 1)
      {
        if (!v47) {
          goto LABEL_148;
        }
        unint64_t v48 = v47 + v46;
        uint64_t v49 = v47;
        uint64_t v50 = v47 + v42;
        sub_100026FD0(v47 + v46, (uint64_t)v130, &qword_100203E98);
        if (v46 < v42 || v48 >= v49 + v44)
        {
          swift_arrayInitWithTakeFrontToBack();
          uint64_t v41 = v142;
        }
        else
        {
          uint64_t v41 = v142;
          if (v46 != v42) {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        sub_100026FD0((uint64_t)v130, v50, &qword_100203E98);
        uint64_t v39 = v139;
        uint64_t v47 = v129;
      }
      ++v45;
      --v40;
      v42 -= v41;
      v44 -= v41;
      v46 += v41;
    }
    while (v45 < v39 + v40);
    uint64_t v2 = v127;
    char v19 = v128;
    Swift::Int v22 = v131;
    Swift::Int v30 = v141;
    if (v39 < v141) {
      goto LABEL_40;
    }
LABEL_59:
    if (v39 < v22) {
      goto LABEL_136;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    Swift::Int v139 = v39;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      char v19 = sub_10017222C(0, *((void *)v19 + 2) + 1, 1, v19);
    }
    unint64_t v67 = *((void *)v19 + 2);
    unint64_t v66 = *((void *)v19 + 3);
    unint64_t v21 = v67 + 1;
    if (v67 >= v66 >> 1) {
      char v19 = sub_10017222C((char *)(v66 > 1), v67 + 1, 1, v19);
    }
    uint64_t v68 = v2;
    *((void *)v19 + 2) = v21;
    uint64_t v69 = v19 + 32;
    unint64_t v70 = &v19[16 * v67 + 32];
    Swift::Int v71 = v139;
    *(void *)unint64_t v70 = v131;
    *((void *)v70 + 1) = v71;
    if (v67)
    {
      while (1)
      {
        unint64_t v72 = v21 - 1;
        if (v21 >= 4)
        {
          unint64_t v77 = &v69[16 * v21];
          uint64_t v78 = *((void *)v77 - 8);
          uint64_t v79 = *((void *)v77 - 7);
          BOOL v83 = __OFSUB__(v79, v78);
          uint64_t v80 = v79 - v78;
          if (v83) {
            goto LABEL_125;
          }
          uint64_t v82 = *((void *)v77 - 6);
          uint64_t v81 = *((void *)v77 - 5);
          BOOL v83 = __OFSUB__(v81, v82);
          uint64_t v75 = v81 - v82;
          char v76 = v83;
          if (v83) {
            goto LABEL_126;
          }
          unint64_t v84 = v21 - 2;
          uint64_t v85 = &v69[16 * v21 - 32];
          uint64_t v87 = *(void *)v85;
          uint64_t v86 = *((void *)v85 + 1);
          BOOL v83 = __OFSUB__(v86, v87);
          uint64_t v88 = v86 - v87;
          if (v83) {
            goto LABEL_128;
          }
          BOOL v83 = __OFADD__(v75, v88);
          uint64_t v89 = v75 + v88;
          if (v83) {
            goto LABEL_131;
          }
          if (v89 >= v80)
          {
            uint64_t v107 = &v69[16 * v72];
            uint64_t v109 = *(void *)v107;
            uint64_t v108 = *((void *)v107 + 1);
            BOOL v83 = __OFSUB__(v108, v109);
            uint64_t v110 = v108 - v109;
            if (v83) {
              goto LABEL_135;
            }
            BOOL v100 = v75 < v110;
            goto LABEL_96;
          }
        }
        else
        {
          if (v21 != 3)
          {
            uint64_t v101 = *((void *)v19 + 4);
            uint64_t v102 = *((void *)v19 + 5);
            BOOL v83 = __OFSUB__(v102, v101);
            uint64_t v94 = v102 - v101;
            char v95 = v83;
            goto LABEL_90;
          }
          uint64_t v74 = *((void *)v19 + 4);
          uint64_t v73 = *((void *)v19 + 5);
          BOOL v83 = __OFSUB__(v73, v74);
          uint64_t v75 = v73 - v74;
          char v76 = v83;
        }
        if (v76) {
          goto LABEL_127;
        }
        unint64_t v84 = v21 - 2;
        uint64_t v90 = &v69[16 * v21 - 32];
        uint64_t v92 = *(void *)v90;
        uint64_t v91 = *((void *)v90 + 1);
        BOOL v93 = __OFSUB__(v91, v92);
        uint64_t v94 = v91 - v92;
        char v95 = v93;
        if (v93) {
          goto LABEL_130;
        }
        uint64_t v96 = &v69[16 * v72];
        uint64_t v98 = *(void *)v96;
        uint64_t v97 = *((void *)v96 + 1);
        BOOL v83 = __OFSUB__(v97, v98);
        uint64_t v99 = v97 - v98;
        if (v83) {
          goto LABEL_133;
        }
        if (__OFADD__(v94, v99)) {
          goto LABEL_134;
        }
        if (v94 + v99 >= v75)
        {
          BOOL v100 = v75 < v99;
LABEL_96:
          if (v100) {
            unint64_t v72 = v84;
          }
          goto LABEL_98;
        }
LABEL_90:
        if (v95) {
          goto LABEL_129;
        }
        char v103 = &v69[16 * v72];
        uint64_t v105 = *(void *)v103;
        uint64_t v104 = *((void *)v103 + 1);
        BOOL v83 = __OFSUB__(v104, v105);
        uint64_t v106 = v104 - v105;
        if (v83) {
          goto LABEL_132;
        }
        if (v106 < v94) {
          goto LABEL_15;
        }
LABEL_98:
        unint64_t v111 = v72 - 1;
        if (v72 - 1 >= v21)
        {
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
          goto LABEL_145;
        }
        uint64_t v112 = *a1;
        if (!*a1) {
          goto LABEL_147;
        }
        long long v113 = &v69[16 * v111];
        uint64_t v114 = *(void *)v113;
        uint64_t v115 = &v69[16 * v72];
        uint64_t v116 = *((void *)v115 + 1);
        sub_10014BA68(v112 + *(void *)(v133 + 72) * *(void *)v113, v112 + *(void *)(v133 + 72) * *(void *)v115, v112 + *(void *)(v133 + 72) * v116, v132);
        if (v68) {
          goto LABEL_119;
        }
        if (v116 < v114) {
          goto LABEL_122;
        }
        if (v72 > *((void *)v19 + 2)) {
          goto LABEL_123;
        }
        *(void *)long long v113 = v114;
        *(void *)&v69[16 * v111 + 8] = v116;
        unint64_t v117 = *((void *)v19 + 2);
        if (v72 >= v117) {
          goto LABEL_124;
        }
        unint64_t v21 = v117 - 1;
        memmove(&v69[16 * v72], v115 + 16, 16 * (v117 - 1 - v72));
        *((void *)v19 + 2) = v117 - 1;
        a1 = v138;
        if (v117 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v21 = 1;
LABEL_15:
    Swift::Int v20 = v139;
    uint64_t v2 = v68;
    Swift::Int v13 = a1[1];
    if (v139 >= v13) {
      goto LABEL_108;
    }
  }
  uint64_t v39 = v139;
LABEL_39:
  if (v39 >= v30) {
    goto LABEL_59;
  }
LABEL_40:
  if (__OFSUB__(v39, v22)) {
    goto LABEL_141;
  }
  if (v39 - v22 >= v126) {
    goto LABEL_59;
  }
  if (__OFADD__(v22, v126)) {
    goto LABEL_144;
  }
  if (v22 + v126 >= v30) {
    uint64_t v51 = v30;
  }
  else {
    uint64_t v51 = v22 + v126;
  }
  if (v51 >= v22)
  {
    if (v39 != v51)
    {
      uint64_t v127 = v2;
      uint64_t v52 = *(void *)(v133 + 72);
      uint64_t v142 = v52 * (v39 - 1);
      uint64_t v135 = v52;
      uint64_t v53 = v39 * v52;
      uint64_t v129 = v51;
      do
      {
        uint64_t v55 = 0;
        Swift::Int v56 = v131;
        Swift::Int v139 = v39;
        while (1)
        {
          uint64_t v57 = *a1;
          uint64_t v58 = v53;
          uint64_t v59 = v53 + v55 + *a1;
          uint64_t v60 = v136;
          sub_100008DD4(v59, (uint64_t)v136, &qword_100203E98);
          uint64_t v61 = v137;
          sub_100008DD4(v142 + v55 + v57, (uint64_t)v137, &qword_100203E98);
          Swift::Int v141 = *v60;
          Swift::Int v62 = *v61;
          sub_10002784C((uint64_t)v61, &qword_100203E98);
          sub_10002784C((uint64_t)v60, &qword_100203E98);
          if (v141 >= v62) {
            break;
          }
          uint64_t v63 = *a1;
          if (!*a1) {
            goto LABEL_146;
          }
          uint64_t v53 = v58;
          uint64_t v64 = v63 + v142 + v55;
          sub_100026FD0(v63 + v58 + v55, v140, &qword_100203E98);
          swift_arrayInitWithTakeFrontToBack();
          sub_100026FD0(v140, v64, &qword_100203E98);
          v55 -= v135;
          ++v56;
          a1 = v138;
          Swift::Int v54 = v139;
          if (v139 == v56) {
            goto LABEL_50;
          }
        }
        Swift::Int v54 = v139;
        uint64_t v53 = v58;
LABEL_50:
        uint64_t v39 = v54 + 1;
        v142 += v135;
        v53 += v135;
      }
      while (v39 != v129);
      uint64_t v39 = v129;
      uint64_t v2 = v127;
      char v19 = v128;
      Swift::Int v22 = v131;
    }
    goto LABEL_59;
  }
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  Swift::Int result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10014B7D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v36 = a1;
  uint64_t v37 = sub_1000063C0(&qword_100203E98);
  uint64_t v7 = __chkstk_darwin(v37);
  uint64_t v43 = (uint64_t)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v39 = (uint64_t *)((char *)&v34 - v10);
  uint64_t result = __chkstk_darwin(v9);
  int v38 = (uint64_t *)((char *)&v34 - v13);
  uint64_t v42 = a3;
  uint64_t v35 = a2;
  if (a3 != a2)
  {
    uint64_t v14 = *(void *)(v12 + 72);
    uint64_t v15 = v14 * (v42 - 1);
    uint64_t v40 = v14;
    uint64_t v16 = v14 * v42;
    uint64_t v17 = &qword_100203E98;
    Swift::Int v45 = a4;
LABEL_5:
    uint64_t v18 = 0;
    uint64_t v19 = v36;
    uint64_t v41 = v16;
    while (1)
    {
      uint64_t v21 = *v45;
      uint64_t v22 = v16 + v18 + *v45;
      Swift::Int v23 = v38;
      sub_100008DD4(v22, (uint64_t)v38, v17);
      uint64_t v24 = v15 + v18 + v21;
      uint64_t v25 = v15;
      uint64_t v26 = v39;
      sub_100008DD4(v24, (uint64_t)v39, v17);
      uint64_t v44 = *v23;
      uint64_t v27 = v17;
      uint64_t v28 = *v26;
      uint64_t v29 = (uint64_t)v26;
      uint64_t v15 = v25;
      sub_10002784C(v29, v27);
      uint64_t v30 = (uint64_t)v23;
      uint64_t v16 = v41;
      uint64_t result = sub_10002784C(v30, v27);
      BOOL v31 = v44 < v28;
      uint64_t v17 = v27;
      if (!v31)
      {
LABEL_4:
        uint64_t v15 = v25 + v40;
        v16 += v40;
        if (++v42 == v35) {
          return result;
        }
        goto LABEL_5;
      }
      uint64_t v32 = *v45;
      if (!*v45) {
        break;
      }
      uint64_t v33 = v32 + v25 + v18;
      sub_100026FD0(v32 + v16 + v18, v43, v27);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t v20 = v33;
      uint64_t v17 = v27;
      uint64_t result = sub_100026FD0(v43, v20, v27);
      v18 -= v40;
      if (v42 == ++v19) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_10014BA68(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v48 = sub_1000063C0(&qword_100203E98);
  uint64_t v8 = __chkstk_darwin(v48);
  uint64_t v50 = (uint64_t *)((char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v8);
  uint64_t v11 = (uint64_t *)((char *)&v45 - v10);
  uint64_t v13 = *(void *)(v12 + 72);
  if (!v13)
  {
    __break(1u);
LABEL_70:
    __break(1u);
LABEL_71:
    __break(1u);
    goto LABEL_72;
  }
  if (a2 - a1 == 0x8000000000000000 && v13 == -1) {
    goto LABEL_70;
  }
  int64_t v14 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v13 == -1) {
    goto LABEL_71;
  }
  uint64_t v15 = (uint64_t)(a2 - a1) / v13;
  unint64_t v53 = a1;
  unint64_t v52 = a4;
  uint64_t v16 = v14 / v13;
  if (v15 >= v14 / v13)
  {
    if ((v16 & 0x8000000000000000) == 0)
    {
      uint64_t v18 = v16 * v13;
      if (a4 < a2 || a2 + v18 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v29 = a4 + v18;
      unint64_t v51 = a4 + v18;
      unint64_t v53 = a2;
      if (v18 >= 1 && a1 < a2)
      {
        uint64_t v31 = -v13;
        unint64_t v46 = a1;
        unint64_t v47 = a4;
        do
        {
          unint64_t v49 = a3 + v31;
          sub_100008DD4(v29 + v31, (uint64_t)v11, &qword_100203E98);
          unint64_t v32 = a2 + v31;
          unint64_t v33 = a3;
          uint64_t v34 = v11;
          uint64_t v35 = v50;
          sub_100008DD4(a2 + v31, (uint64_t)v50, &qword_100203E98);
          uint64_t v36 = *v34;
          uint64_t v37 = *v35;
          uint64_t v38 = (uint64_t)v35;
          uint64_t v11 = v34;
          sub_10002784C(v38, &qword_100203E98);
          sub_10002784C((uint64_t)v34, &qword_100203E98);
          if (v36 >= v37)
          {
            unint64_t v42 = v51;
            v51 += v31;
            a3 = v49;
            if (v33 < v42 || v49 >= v42)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v33 != v42)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            unint64_t v32 = a2;
            unint64_t v41 = v46;
            unint64_t v40 = v47;
          }
          else
          {
            a3 = v49;
            if (v33 < a2 || v49 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v41 = v46;
              unint64_t v40 = v47;
            }
            else
            {
              BOOL v39 = v33 == a2;
              unint64_t v41 = v46;
              unint64_t v40 = v47;
              if (!v39) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            v53 += v31;
          }
          unint64_t v29 = v51;
          if (v51 <= v40) {
            break;
          }
          a2 = v32;
        }
        while (v32 > v41);
      }
      goto LABEL_68;
    }
  }
  else if ((v15 & 0x8000000000000000) == 0)
  {
    uint64_t v17 = v15 * v13;
    if (a4 < a1 || a1 + v17 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v49 = a4 + v17;
    unint64_t v51 = a4 + v17;
    if (v17 >= 1 && a2 < a3)
    {
      do
      {
        sub_100008DD4(a2, (uint64_t)v11, &qword_100203E98);
        uint64_t v20 = a4;
        uint64_t v21 = v50;
        sub_100008DD4(v20, (uint64_t)v50, &qword_100203E98);
        uint64_t v22 = *v11;
        uint64_t v23 = *v21;
        sub_10002784C((uint64_t)v21, &qword_100203E98);
        sub_10002784C((uint64_t)v11, &qword_100203E98);
        unint64_t v24 = v53;
        if (v22 >= v23)
        {
          unint64_t v27 = v52 + v13;
          if (v53 < v52 || v53 >= v27)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v53 != v52)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          unint64_t v52 = v27;
          unint64_t v25 = a2;
        }
        else
        {
          unint64_t v25 = a2 + v13;
          if (v53 < a2 || v53 >= v25)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v53 == a2)
          {
            unint64_t v24 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        unint64_t v53 = v24 + v13;
        a4 = v52;
        if (v52 >= v49) {
          break;
        }
        a2 = v25;
      }
      while (v25 < a3);
    }
LABEL_68:
    sub_100172404(&v53, &v52, (uint64_t *)&v51);
    return 1;
  }
LABEL_72:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10014BF28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 16) = a1;
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v6 + 24) = v12;
  void *v12 = v6;
  v12[1] = sub_10014BFF0;
  return sub_1001484D0(a2, a3, a4, a5, a6);
}

uint64_t sub_10014BFF0(uint64_t a1)
{
  long long v3 = *(void **)(*v1 + 16);
  uint64_t v6 = *v1;
  swift_task_dealloc();
  *long long v3 = a1;
  uint64_t v4 = *(uint64_t (**)(void))(v6 + 8);
  return v4();
}

uint64_t sub_10014C100(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1000063C0(&qword_100204988);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for PhotosPickerItem();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v50 = (char *)v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  Swift::Int v54 = (char *)v36 - v12;
  Swift::Int v56 = _swiftEmptyArrayStorage;
  uint64_t v13 = *(void *)(a1 + 16);
  uint64_t v14 = OBJC_IVAR____TtC21WritingToolsUIService17AttachmentManager___observationRegistrar;
  uint64_t result = swift_beginAccess();
  uint64_t v49 = v13;
  if (v13)
  {
    _OWORD v36[2] = v2;
    unint64_t v16 = 0;
    uint64_t v45 = a2 + v14;
    uint64_t v48 = v9 + 16;
    uint64_t v46 = v9 + 48;
    unint64_t v53 = (void (**)(char *, char *, uint64_t))(v9 + 32);
    uint64_t v37 = (uint64_t (**)(char *, uint64_t))(v9 + 8);
    uint64_t v47 = v9 + 56;
    v36[1] = (v9 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v42 = v8;
    uint64_t v43 = a1;
    uint64_t v38 = a2;
    BOOL v39 = v7;
    uint64_t v44 = v9;
    while (v16 < *(void *)(a1 + 16))
    {
      unint64_t v17 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      uint64_t v18 = *(void *)(v9 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v7, a1 + v17 + v18 * v16, v8);
      unint64_t v41 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      v41(v7, 0, 1, v8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1) {
        goto LABEL_28;
      }
      unint64_t v51 = v17;
      uint64_t v52 = v18;
      uint64_t v19 = *v53;
      (*v53)(v54, v7, v8);
      swift_getKeyPath();
      uint64_t v55 = a2;
      sub_10014CB0C(&qword_100201970, (void (*)(uint64_t))type metadata accessor for AttachmentManager);
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      uint64_t v20 = *(void *)(a2 + 16);
      uint64_t v21 = *(void *)(v20 + 16);
      if (v21)
      {
        unint64_t v40 = v19;
        uint64_t v22 = type metadata accessor for Attachment(0);
        uint64_t v23 = v20
            + ((*(unsigned __int8 *)(*(void *)(v22 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v22 - 8) + 80));
        uint64_t v24 = *(void *)(*(void *)(v22 - 8) + 72);
        swift_bridgeObjectRetain();
        do
        {
          unint64_t v25 = (uint64_t *)(v23 + *(int *)(v22 + 20));
          uint64_t v26 = v25[1];
          if (v26)
          {
            uint64_t v27 = *v25;
            uint64_t result = PhotosPickerItem.itemIdentifier.getter();
            if (!v28) {
              goto LABEL_30;
            }
            if (v27 == result && v26 == v28)
            {
              swift_bridgeObjectRelease();
LABEL_4:
              swift_bridgeObjectRelease();
              uint64_t v8 = v42;
              uint64_t result = (*v37)(v54, v42);
              a1 = v43;
              a2 = v38;
              uint64_t v7 = v39;
              goto LABEL_5;
            }
            char v30 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            if (v30) {
              goto LABEL_4;
            }
          }
          v23 += v24;
          --v21;
        }
        while (v21);
        swift_bridgeObjectRelease();
        a2 = v38;
        uint64_t v7 = v39;
        uint64_t v19 = v40;
      }
      uint64_t v8 = v42;
      v19(v50, v54, v42);
      uint64_t v31 = v56;
      unint64_t v32 = v19;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1001292C0(0, v31[2] + 1, 1);
        uint64_t v31 = v56;
      }
      uint64_t v33 = v52;
      unint64_t v35 = v31[2];
      unint64_t v34 = v31[3];
      if (v35 >= v34 >> 1)
      {
        sub_1001292C0(v34 > 1, v35 + 1, 1);
        uint64_t v33 = v52;
        uint64_t v31 = v56;
      }
      v31[2] = v35 + 1;
      uint64_t result = ((uint64_t (*)(char *, char *, uint64_t))v32)((char *)v31 + v51 + v35 * v33, v50, v8);
      Swift::Int v56 = v31;
      a1 = v43;
LABEL_5:
      ++v16;
      uint64_t v9 = v44;
      if (v16 == v49)
      {
        v41(v7, 1, 1, v8);
        goto LABEL_28;
      }
    }
    __break(1u);
LABEL_30:
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    sub_10002784C((uint64_t)v7, &qword_100204988);
    return (uint64_t)v56;
  }
  return result;
}

uint64_t sub_10014C648(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v9 = v2[4];
  uint64_t v8 = v2[5];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v10;
  *uint64_t v10 = v3;
  v10[1] = sub_100027FEC;
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_100204930
                                                                                     + dword_100204930);
  return v11(a1, a2, v6, v7, v9, v8);
}

uint64_t sub_10014C724(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = sub_100027204;
  return sub_10013FEA8(a1, a2, v6);
}

uint64_t sub_10014C7E4()
{
  uint64_t v1 = type metadata accessor for PhotosPickerItem();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_10014C8D8(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for PhotosPickerItem() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v8 = *(void *)(v1 + 24);
  uint64_t v9 = *(void *)(v1 + v6);
  uint64_t v10 = v1 + v5;
  uint64_t v11 = (uint64_t *)(v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v12 = *v11;
  uint64_t v13 = v11[1];
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v14;
  void *v14 = v2;
  v14[1] = sub_100027FEC;
  return sub_10014951C(a1, v7, v8, v10, v9, v12, v13);
}

uint64_t sub_10014CA1C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10014CA54(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *unint64_t v5 = v2;
  v5[1] = sub_100027204;
  unint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1002049B0 + dword_1002049B0);
  return v6(a1, v4);
}

uint64_t sub_10014CB0C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for PhotoAnswerView()
{
  return &type metadata for PhotoAnswerView;
}

uint64_t sub_10014CB64()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10014CB80@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v91 = a2;
  uint64_t v3 = sub_1000063C0(&qword_1002049E8);
  uint64_t v80 = *(void *)(v3 - 8);
  uint64_t v81 = v3;
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v85 = (char *)v77 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  unint64_t v84 = (char *)v77 - v6;
  uint64_t v7 = type metadata accessor for Divider();
  uint64_t v78 = *(void *)(v7 - 8);
  uint64_t v79 = v7;
  uint64_t v8 = __chkstk_darwin(v7);
  BOOL v83 = (char *)v77 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v82 = (char *)v77 - v10;
  uint64_t v11 = sub_1000063C0(&qword_1002049F0);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v90 = (char *)v77 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v89 = (uint64_t)v77 - v14;
  uint64_t v93 = sub_1000063C0(&qword_1001FC850);
  uint64_t v15 = *(void *)(v93 - 8);
  __chkstk_darwin(v93);
  unint64_t v17 = (char *)v77 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1000063C0(&qword_1002049F8);
  uint64_t v92 = *(void *)(v18 - 8);
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v21 = (char *)v77 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)v77 - v22;
  uint64_t v24 = (_OWORD *)swift_allocObject();
  long long v25 = *(_OWORD *)(a1 + 80);
  v24[5] = *(_OWORD *)(a1 + 64);
  v24[6] = v25;
  v24[7] = *(_OWORD *)(a1 + 96);
  *(_OWORD *)((char *)v24 + 121) = *(_OWORD *)(a1 + 105);
  long long v26 = *(_OWORD *)(a1 + 16);
  v24[1] = *(_OWORD *)a1;
  void v24[2] = v26;
  long long v27 = *(_OWORD *)(a1 + 48);
  v24[3] = *(_OWORD *)(a1 + 32);
  v24[4] = v27;
  sub_100107DA4(a1);
  sub_1000063C0(&qword_1001FBBC0);
  sub_100027F2C((unint64_t *)&unk_1001FD5A0, &qword_1001FBBC0);
  Button.init(action:label:)();
  LOBYTE(v102) = static Edge.Set.all.getter();
  *((void *)&v102 + 1) = 0;
  LOBYTE(v103) = 0;
  sub_100027F2C(&qword_1001FC880, &qword_1001FC850);
  sub_10014DB50();
  uint64_t v28 = v93;
  View.labelStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v28);
  uint64_t v29 = a1;
  char v30 = *(void (**)(char *, char *, uint64_t))(v92 + 32);
  uint64_t v86 = v23;
  uint64_t v87 = v21;
  uint64_t v88 = v18;
  v30(v23, v21, v18);
  char v31 = *(unsigned char *)(a1 + 8);
  uint64_t v32 = swift_retain();
  uint64_t v33 = sub_100020F7C(v32, v31);
  swift_release();
  swift_getKeyPath();
  *(void *)&long long v102 = v33;
  sub_10014E0E0((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v34 = *(void *)(v33 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__attachmentManager);
  swift_retain();
  swift_release();
  swift_getKeyPath();
  *(void *)&long long v102 = v34;
  sub_10014E0E0(&qword_100201970, (void (*)(uint64_t))type metadata accessor for AttachmentManager);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  uint64_t v35 = *(void *)(v34 + 16);
  swift_bridgeObjectRetain();
  swift_release();
  uint64_t v36 = *(void *)(v35 + 16);
  if (!v36)
  {
LABEL_13:
    swift_bridgeObjectRelease();
    uint64_t v50 = sub_1000063C0(&qword_100204A08);
    uint64_t v51 = v89;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v89, 1, 1, v50);
    uint64_t v52 = (uint64_t)v90;
    goto LABEL_16;
  }
  uint64_t v93 = type metadata accessor for Attachment(0);
  uint64_t v37 = *(void *)(v93 - 8);
  uint64_t v38 = v35 + ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80));
  long long v39 = *(_OWORD *)(v29 + 64);
  long long v104 = *(_OWORD *)(v29 + 48);
  long long v105 = v39;
  long long v106 = *(_OWORD *)(v29 + 80);
  char v107 = *(unsigned char *)(v29 + 96);
  long long v40 = *(_OWORD *)(v29 + 16);
  long long v41 = *(_OWORD *)(v29 + 32);
  v77[0] = v29;
  long long v102 = v40;
  long long v103 = v41;
  uint64_t v42 = *(void *)(v37 + 72);
  v77[1] = v35;
  swift_bridgeObjectRetain();
  while (1)
  {
    uint64_t v43 = (uint64_t *)(v38 + *(int *)(v93 + 44));
    uint64_t v45 = *v43;
    uint64_t v44 = v43[1];
    long long v96 = v104;
    long long v97 = v105;
    long long v98 = v106;
    char v99 = v107;
    long long v94 = v102;
    long long v95 = v103;
    swift_bridgeObjectRetain();
    sub_1000063C0(&qword_1001FC958);
    Binding.wrappedValue.getter();
    uint64_t v47 = v100;
    uint64_t v46 = v101;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!v44)
    {
      swift_bridgeObjectRelease();
      goto LABEL_4;
    }
    if (v45 == v47 && v44 == v46) {
      break;
    }
    char v49 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v49)
    {
      swift_bridgeObjectRelease_n();
      goto LABEL_15;
    }
LABEL_4:
    v38 += v42;
    if (!--v36)
    {
      swift_bridgeObjectRelease();
      goto LABEL_13;
    }
  }
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_15:
  unint64_t v53 = v82;
  Divider.init()();
  uint64_t v54 = static Axis.Set.horizontal.getter();
  __chkstk_darwin(v54);
  v77[-2] = v77[0];
  sub_1000063C0(&qword_100204A18);
  sub_100027F2C(&qword_100204A20, &qword_100204A18);
  uint64_t v55 = v84;
  ScrollView.init(_:showsIndicators:content:)();
  uint64_t v56 = v78;
  uint64_t v57 = v79;
  uint64_t v58 = *(void (**)(char *, char *, uint64_t))(v78 + 16);
  uint64_t v59 = v83;
  v58(v83, v53, v79);
  uint64_t v60 = v80;
  uint64_t v93 = *(void *)(v80 + 16);
  uint64_t v61 = v55;
  uint64_t v62 = v81;
  ((void (*)(char *, char *, uint64_t))v93)(v85, v61, v81);
  uint64_t v52 = (uint64_t)v90;
  v58(v90, v59, v57);
  uint64_t v63 = sub_1000063C0(&qword_100204A28);
  uint64_t v64 = v85;
  ((void (*)(uint64_t, char *, uint64_t))v93)(v52 + *(int *)(v63 + 48), v85, v62);
  uint64_t v65 = *(void (**)(char *, uint64_t))(v60 + 8);
  v65(v84, v62);
  unint64_t v66 = *(void (**)(char *, uint64_t))(v56 + 8);
  v66(v82, v57);
  v65(v64, v62);
  v66(v83, v57);
  uint64_t v67 = sub_1000063C0(&qword_100204A08);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v67 - 8) + 56))(v52, 0, 1, v67);
  uint64_t v51 = v89;
  sub_10014DC84(v52, v89);
LABEL_16:
  uint64_t v68 = v92;
  uint64_t v69 = *(void (**)(char *, char *, uint64_t))(v92 + 16);
  Swift::Int v71 = v86;
  unint64_t v70 = v87;
  uint64_t v72 = v88;
  v69(v87, v86, v88);
  sub_10014DBB4(v51, v52);
  uint64_t v73 = v91;
  v69(v91, v70, v72);
  uint64_t v74 = sub_1000063C0(&qword_100204A10);
  sub_10014DBB4(v52, (uint64_t)&v73[*(int *)(v74 + 48)]);
  sub_10014DC1C(v51);
  uint64_t v75 = *(void (**)(char *, uint64_t))(v68 + 8);
  v75(v71, v72);
  sub_10014DC1C(v52);
  return ((uint64_t (*)(char *, uint64_t))v75)(v70, v72);
}

uint64_t sub_10014D5D4()
{
  LocalizedStringKey.init(stringLiteral:)();

  return Label<>.init(_:systemImage:)();
}

uint64_t sub_10014D63C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = static VerticalAlignment.center.getter();
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 1;
  sub_1000063C0(&qword_100204A30);
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t v5 = swift_retain();
  uint64_t v6 = sub_100020F7C(v5, v4);
  swift_release();
  swift_getKeyPath();
  sub_10014E0E0((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v7 = *(void *)(v6 + OBJC_IVAR____TtC21WritingToolsUIService16CompositionModel__attachmentManager);
  swift_retain();
  swift_release();
  swift_getKeyPath();
  sub_10014E0E0(&qword_100201970, (void (*)(uint64_t))type metadata accessor for AttachmentManager);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  uint64_t v8 = *(void *)(v7 + 16);
  swift_bridgeObjectRetain();
  swift_release();
  sub_100107DA4(a1);
  sub_10014DCEC(v8, a1);
  sub_100107E50(a1);
  swift_bridgeObjectRelease();
  sub_1000063C0(&qword_1001FF248);
  type metadata accessor for URL();
  sub_1000063C0(&qword_100204A38);
  sub_100027F2C(&qword_100204028, &qword_1001FF248);
  sub_10014E034();
  sub_10014E0E0(&qword_100204040, (void (*)(uint64_t))type metadata accessor for Attachment);
  return ForEach<>.init(_:content:)();
}

uint64_t sub_10014D8DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for PhotoAttachmentView();
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10014E128(a1, (uint64_t)&v7[*(int *)(v5 + 28)], type metadata accessor for Attachment);
  type metadata accessor for CompositionModel(0);
  sub_10014E0E0((unint64_t *)&qword_1001FAE70, (void (*)(uint64_t))type metadata accessor for CompositionModel);
  *(void *)uint64_t v7 = Environment.init<A>(_:)();
  v7[8] = v8 & 1;
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  sub_10014E128((uint64_t)v7, a2, (uint64_t (*)(void))type metadata accessor for PhotoAttachmentView);
  uint64_t v9 = (_OWORD *)(a2 + *(int *)(sub_1000063C0(&qword_100204A38) + 36));
  long long v10 = v12[1];
  *uint64_t v9 = v12[0];
  v9[1] = v10;
  _OWORD v9[2] = v12[2];
  return sub_10014E190((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for PhotoAttachmentView);
}

uint64_t sub_10014DA5C@<X0>(uint64_t a1@<X8>)
{
  long long v3 = v1[5];
  v8[4] = v1[4];
  v8[5] = v3;
  v9[0] = v1[6];
  *(_OWORD *)((char *)v9 + 9) = *(_OWORD *)((char *)v1 + 105);
  long long v4 = v1[1];
  v8[0] = *v1;
  v8[1] = v4;
  long long v5 = v1[3];
  v8[2] = v1[2];
  v8[3] = v5;
  *(void *)a1 = static HorizontalAlignment.center.getter();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  uint64_t v6 = sub_1000063C0(&qword_1002049E0);
  return sub_10014CB80((uint64_t)v8, (char *)(a1 + *(int *)(v6 + 44)));
}

uint64_t sub_10014DAD8()
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 137, 7);
}

unint64_t sub_10014DB50()
{
  unint64_t result = qword_100204A00;
  if (!qword_100204A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100204A00);
  }
  return result;
}

uint64_t sub_10014DBB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000063C0(&qword_1002049F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10014DC1C(uint64_t a1)
{
  uint64_t v2 = sub_1000063C0(&qword_1002049F0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10014DC7C@<X0>(uint64_t a1@<X8>)
{
  return sub_10014D63C(*(void *)(v1 + 16), a1);
}

uint64_t sub_10014DC84(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000063C0(&qword_1002049F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void *sub_10014DCEC(uint64_t a1, uint64_t a2)
{
  uint64_t v35 = type metadata accessor for Attachment(0);
  uint64_t v5 = __chkstk_darwin(v35);
  uint64_t v32 = (uint64_t)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)v29 - v8;
  unint64_t result = _swiftEmptyArrayStorage;
  uint64_t v44 = _swiftEmptyArrayStorage;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11)
  {
    v29[1] = v2;
    uint64_t v12 = *(void *)(v7 + 72);
    unint64_t v30 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    uint64_t v13 = a1 + v30;
    uint64_t v14 = (long long *)(a2 + 16);
    char v31 = _swiftEmptyArrayStorage;
    uint64_t v34 = (char *)v29 - v8;
    uint64_t v33 = v12;
    while (1)
    {
      sub_10014E128(v13, (uint64_t)v9, type metadata accessor for Attachment);
      uint64_t v16 = &v9[*(int *)(v35 + 44)];
      uint64_t v17 = *(void *)v16;
      uint64_t v18 = *((void *)v16 + 1);
      long long v19 = v14[3];
      long long v38 = v14[2];
      long long v39 = v19;
      long long v40 = v14[4];
      char v41 = *((unsigned char *)v14 + 80);
      long long v20 = v14[1];
      long long v36 = *v14;
      long long v37 = v20;
      swift_bridgeObjectRetain();
      sub_1000063C0(&qword_1001FC958);
      Binding.wrappedValue.getter();
      uint64_t v22 = v42;
      uint64_t v21 = v43;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v18)
      {
        if (v17 == v22 && v18 == v21)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v9 = v34;
          uint64_t v15 = v33;
LABEL_14:
          sub_100035B34((uint64_t)v9, v32);
          long long v25 = v31;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            sub_100129248(0, v25[2] + 1, 1);
          }
          long long v26 = v44;
          unint64_t v28 = v44[2];
          unint64_t v27 = v44[3];
          if (v28 >= v27 >> 1)
          {
            sub_100129248(v27 > 1, v28 + 1, 1);
            long long v26 = v44;
          }
          v26[2] = v28 + 1;
          char v31 = v26;
          sub_100035B34(v32, (uint64_t)v26 + v30 + v28 * v15);
          goto LABEL_5;
        }
        char v24 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v9 = v34;
        uint64_t v15 = v33;
        if (v24) {
          goto LABEL_14;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v9 = v34;
        uint64_t v15 = v33;
      }
      sub_10014E190((uint64_t)v9, type metadata accessor for Attachment);
LABEL_5:
      v13 += v15;
      if (!--v11) {
        return v44;
      }
    }
  }
  return result;
}

unint64_t sub_10014E034()
{
  unint64_t result = qword_100204A40;
  if (!qword_100204A40)
  {
    sub_100006C14(&qword_100204A38);
    sub_10014E0E0(&qword_100204A48, (void (*)(uint64_t))type metadata accessor for PhotoAttachmentView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100204A40);
  }
  return result;
}

uint64_t sub_10014E0E0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10014E128(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10014E190(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10014E1F0()
{
  return sub_100027F2C(&qword_100204A50, &qword_100204A58);
}

void sub_10014E22C(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PhotoAttachmentView() + 20);
  uint64_t v4 = *(void **)(v3 + *(int *)(type metadata accessor for Attachment(0) + 36));
  if (v4)
  {
    id v5 = objc_allocWithZone((Class)UIImage);
    id v6 = v4;
    id v7 = [v5 initWithCGImage:v6];
    uint64_t v4 = (void *)static Alignment.center.getter();
    uint64_t v9 = v8;
    sub_10014E324(v7, v1, (uint64_t)v15);

    uint64_t v10 = v15[0];
    uint64_t v11 = v15[1];
    long long v12 = v18;
    uint64_t v13 = 256;
    if (!v17) {
      uint64_t v13 = 0;
    }
    uint64_t v14 = v13 | v16;
  }
  else
  {
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    uint64_t v14 = 0;
    long long v12 = 0uLL;
  }
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v9;
  *(void *)(a1 + 16) = v10;
  *(void *)(a1 + 24) = v11;
  *(void *)(a1 + 32) = v14;
  *(_OWORD *)(a1 + 40) = v12;
}

uint64_t sub_10014E324@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for PhotoAttachmentView();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6 - 8);
  uint64_t v9 = type metadata accessor for Image.ResizingMode();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  long long v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = a1;
  Image.init(uiImage:)();
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, enum case for Image.ResizingMode.stretch(_:), v9);
  uint64_t v14 = Image.resizable(capInsets:resizingMode:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  sub_10014F680(a2, (uint64_t)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v15 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v16 = swift_allocObject();
  sub_10014F930((uint64_t)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v16 + v15);
  *(void *)a3 = v14;
  *(void *)(a3 + 8) = 0;
  *(_WORD *)(a3 + 16) = 1;
  *(void *)(a3 + 24) = sub_10014F994;
  *(void *)(a3 + 32) = v16;
  swift_retain();
  sub_10004EF18((uint64_t)sub_10014F994);
  sub_10014EBA8((uint64_t)sub_10014F994);
  return swift_release();
}

uint64_t sub_10014E554(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t v3 = swift_retain();
  sub_100020F7C(v3, v2);
  swift_release();
  swift_getKeyPath();
  sub_10009AE54();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_retain();
  swift_release();
  uint64_t v4 = type metadata accessor for PhotoAttachmentView();
  sub_10013BC50(a1 + *(int *)(v4 + 20));
  return swift_release();
}

char *sub_10014E620()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  type metadata accessor for PlatformCloseButton();
  uint64_t v3 = (char *)[objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v4 = (uint64_t *)&v3[OBJC_IVAR____TtC21WritingToolsUIService19PlatformCloseButton_perform];
  uint64_t v5 = *(void *)&v3[OBJC_IVAR____TtC21WritingToolsUIService19PlatformCloseButton_perform];
  *uint64_t v4 = v1;
  v4[1] = v2;
  sub_10004EF18(v1);
  sub_10014EBA8(v5);
  return v3;
}

uint64_t sub_10014E69C(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v2 = v1[1];
  uint64_t v4 = (uint64_t *)(a1 + OBJC_IVAR____TtC21WritingToolsUIService19PlatformCloseButton_perform);
  uint64_t v5 = *(void *)(a1 + OBJC_IVAR____TtC21WritingToolsUIService19PlatformCloseButton_perform);
  *uint64_t v4 = *v1;
  v4[1] = v2;
  sub_10004EF18(v3);

  return sub_10014EBA8(v5);
}

uint64_t sub_10014E6F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_10014FD24();

  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_10014E754(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_10014FD24();

  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_10014E7B8()
{
}

char *sub_10014E7E0(double a1, double a2, double a3, double a4)
{
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v10 = &v4[OBJC_IVAR____TtC21WritingToolsUIService19PlatformCloseButton_perform];
  *(void *)uint64_t v10 = 0;
  *((void *)v10 + 1) = 0;
  uint64_t v11 = self;
  long long v12 = v4;
  uint64_t result = (char *)[v11 roundButtonWithStyle:0];
  if (result)
  {
    *(void *)&v12[OBJC_IVAR____TtC21WritingToolsUIService19PlatformCloseButton_closeButton] = result;

    v17.receiver = v12;
    v17.super_class = ObjectType;
    uint64_t v14 = (char *)[super initWithFrame:a1, a2, a3, a4];
    unint64_t v15 = *(void **)&v14[OBJC_IVAR____TtC21WritingToolsUIService19PlatformCloseButton_closeButton];
    uint64_t v16 = v14;
    [v15 addTarget:v16 action:"didTapCloseButton" forControlEvents:64];
    [v16 addSubview:v15];

    return v16;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for PlatformCloseButton()
{
  return self;
}

uint64_t sub_10014EBA8(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t sub_10014EBB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v6;
  swift_retain();
  swift_release();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v50 = a1;
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = (int *)type metadata accessor for Attachment(0);
  uint64_t v12 = v11[5];
  id v13 = (void *)(v8 + v12);
  uint64_t v14 = (void *)(v9 + v12);
  *id v13 = *v14;
  v13[1] = v14[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = v11[6];
  uint64_t v16 = (void *)(v8 + v15);
  objc_super v17 = (void *)(v9 + v15);
  uint64_t v18 = type metadata accessor for UTType();
  uint64_t v19 = *(void *)(v18 - 8);
  long long v20 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v19 + 48);
  int v21 = v20(v16, 1, v18);
  int v22 = v20(v17, 1, v18);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(void *, void *, uint64_t))(v19 + 16))(v16, v17, v18);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v22)
  {
    (*(void (**)(void *, uint64_t))(v19 + 8))(v16, v18);
LABEL_6:
    uint64_t v23 = sub_1000063C0(&qword_1001FC4F0);
    memcpy(v16, v17, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v19 + 24))(v16, v17, v18);
LABEL_7:
  uint64_t v24 = v11[7];
  uint64_t v25 = v8 + v24;
  long long v26 = (uint64_t *)(v9 + v24);
  uint64_t v27 = *v26;
  *(unsigned char *)(v25 + 8) = *((unsigned char *)v26 + 8);
  *(void *)uint64_t v25 = v27;
  uint64_t v28 = v11[8];
  uint64_t v29 = (void *)(v8 + v28);
  unint64_t v30 = (void *)(v9 + v28);
  *uint64_t v29 = *v30;
  v29[1] = v30[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v31 = v11[9];
  uint64_t v32 = *(void **)(v8 + v31);
  uint64_t v33 = *(void **)(v9 + v31);
  *(void *)(v8 + v31) = v33;
  id v34 = v33;

  uint64_t v35 = v11[10];
  long long v36 = (void *)(v8 + v35);
  long long v37 = (void *)(v9 + v35);
  uint64_t v38 = sub_1000063C0(&qword_1002040B8);
  uint64_t v39 = *(void *)(v38 - 8);
  long long v40 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v39 + 48);
  int v41 = v40(v36, 1, v38);
  int v42 = v40(v37, 1, v38);
  if (!v41)
  {
    if (!v42)
    {
      uint64_t v49 = type metadata accessor for DocumentResourceIdentifier();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v49 - 8) + 24))(v36, v37, v49);
      goto LABEL_13;
    }
    sub_10014EFD0((uint64_t)v36);
    goto LABEL_12;
  }
  if (v42)
  {
LABEL_12:
    uint64_t v44 = type metadata accessor for Attachment.UploadState(0);
    memcpy(v36, v37, *(void *)(*(void *)(v44 - 8) + 64));
    goto LABEL_13;
  }
  uint64_t v43 = type metadata accessor for DocumentResourceIdentifier();
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v43 - 8) + 16))(v36, v37, v43);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
LABEL_13:
  uint64_t v45 = v11[11];
  uint64_t v46 = (void *)(v8 + v45);
  uint64_t v47 = (void *)(v9 + v45);
  *uint64_t v46 = *v47;
  v46[1] = v47[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v50;
}

uint64_t sub_10014EFD0(uint64_t a1)
{
  uint64_t v2 = sub_1000063C0(&qword_1002040B8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10014F030(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v6;
  swift_release();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v53 = a1;
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = (int *)type metadata accessor for Attachment(0);
  uint64_t v12 = v11[5];
  id v13 = (void *)(v8 + v12);
  uint64_t v14 = (uint64_t *)(v9 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *id v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = v11[6];
  uint64_t v18 = (void *)(v8 + v17);
  uint64_t v19 = (void *)(v9 + v17);
  uint64_t v20 = type metadata accessor for UTType();
  uint64_t v21 = *(void *)(v20 - 8);
  int v22 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v21 + 48);
  int v23 = v22(v18, 1, v20);
  int v24 = v22(v19, 1, v20);
  if (v23)
  {
    if (!v24)
    {
      (*(void (**)(void *, void *, uint64_t))(v21 + 32))(v18, v19, v20);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v24)
  {
    (*(void (**)(void *, uint64_t))(v21 + 8))(v18, v20);
LABEL_6:
    uint64_t v25 = sub_1000063C0(&qword_1001FC4F0);
    memcpy(v18, v19, *(void *)(*(void *)(v25 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v21 + 40))(v18, v19, v20);
LABEL_7:
  uint64_t v26 = v11[7];
  uint64_t v27 = v8 + v26;
  uint64_t v28 = v9 + v26;
  *(void *)uint64_t v27 = *(void *)v28;
  *(unsigned char *)(v27 + 8) = *(unsigned char *)(v28 + 8);
  uint64_t v29 = v11[8];
  unint64_t v30 = (void *)(v8 + v29);
  uint64_t v31 = (uint64_t *)(v9 + v29);
  uint64_t v33 = *v31;
  uint64_t v32 = v31[1];
  *unint64_t v30 = v33;
  v30[1] = v32;
  swift_bridgeObjectRelease();
  uint64_t v34 = v11[9];
  uint64_t v35 = *(void **)(v8 + v34);
  *(void *)(v8 + v34) = *(void *)(v9 + v34);

  uint64_t v36 = v11[10];
  long long v37 = (void *)(v8 + v36);
  uint64_t v38 = (void *)(v9 + v36);
  uint64_t v39 = sub_1000063C0(&qword_1002040B8);
  uint64_t v40 = *(void *)(v39 - 8);
  int v41 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v40 + 48);
  int v42 = v41(v37, 1, v39);
  int v43 = v41(v38, 1, v39);
  if (!v42)
  {
    if (!v43)
    {
      uint64_t v52 = type metadata accessor for DocumentResourceIdentifier();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v52 - 8) + 40))(v37, v38, v52);
      goto LABEL_13;
    }
    sub_10014EFD0((uint64_t)v37);
    goto LABEL_12;
  }
  if (v43)
  {
LABEL_12:
    uint64_t v45 = type metadata accessor for Attachment.UploadState(0);
    memcpy(v37, v38, *(void *)(*(void *)(v45 - 8) + 64));
    goto LABEL_13;
  }
  uint64_t v44 = type metadata accessor for DocumentResourceIdentifier();
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v44 - 8) + 32))(v37, v38, v44);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
LABEL_13:
  uint64_t v46 = v11[11];
  uint64_t v47 = (void *)(v8 + v46);
  uint64_t v48 = (uint64_t *)(v9 + v46);
  uint64_t v50 = *v48;
  uint64_t v49 = v48[1];
  void *v47 = v50;
  v47[1] = v49;
  swift_bridgeObjectRelease();
  return v53;
}

uint64_t sub_10014F40C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10014F420);
}

uint64_t sub_10014F420(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 8);
    if (v4 > 1) {
      return (v4 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = type metadata accessor for Attachment(0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_10014F4C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10014F4DC);
}

uint64_t sub_10014F4DC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 254)
  {
    *(unsigned char *)(result + 8) = -(char)a2;
  }
  else
  {
    uint64_t v7 = type metadata accessor for Attachment(0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for PhotoAttachmentView()
{
  uint64_t result = qword_100204AF0;
  if (!qword_100204AF0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10014F5CC()
{
  uint64_t result = type metadata accessor for Attachment(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10014F664()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10014F680(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PhotoAttachmentView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10014F6E4()
{
  unint64_t v1 = (int *)(type metadata accessor for PhotoAttachmentView() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)v1 + 64);
  swift_release();
  uint64_t v5 = v0 + v3 + v1[7];
  uint64_t v6 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = (int *)type metadata accessor for Attachment(0);
  swift_bridgeObjectRelease();
  uint64_t v8 = v5 + v7[6];
  uint64_t v9 = type metadata accessor for UTType();
  uint64_t v10 = *(void *)(v9 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  swift_bridgeObjectRelease();

  uint64_t v11 = v5 + v7[10];
  uint64_t v12 = sub_1000063C0(&qword_1002040B8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v11, 1, v12))
  {
    uint64_t v13 = type metadata accessor for DocumentResourceIdentifier();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v11, v13);
  }
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_10014F930(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PhotoAttachmentView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10014F994()
{
  uint64_t v1 = *(void *)(type metadata accessor for PhotoAttachmentView() - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_10014E554(v2);
}

void *destroy for CloseButton(void *result)
{
  if (*result) {
    return (void *)swift_release();
  }
  return result;
}

void *_s21WritingToolsUIService11CloseButtonVwCP_0(void *a1, void *a2)
{
  if (*a2)
  {
    uint64_t v3 = a2[1];
    *a1 = *a2;
    a1[1] = v3;
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  return a1;
}

void *assignWithCopy for CloseButton(void *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  if (!*a1)
  {
    if (v4)
    {
      uint64_t v6 = a2[1];
      *a1 = v4;
      a1[1] = v6;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v5 = a2[1];
  *a1 = v4;
  a1[1] = v5;
  swift_retain();
  swift_release();
  return a1;
}

void *assignWithTake for CloseButton(void *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  if (!*a1)
  {
    if (v4)
    {
      uint64_t v6 = a2[1];
      *a1 = v4;
      a1[1] = v6;
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v5 = a2[1];
  *a1 = v4;
  a1[1] = v5;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for CloseButton(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CloseButton(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CloseButton()
{
  return &type metadata for CloseButton;
}

unint64_t sub_10014FBFC()
{
  unint64_t result = qword_100204B28;
  if (!qword_100204B28)
  {
    sub_100006C14(&qword_100204B30);
    sub_10014FC70();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100204B28);
  }
  return result;
}

unint64_t sub_10014FC70()
{
  unint64_t result = qword_100204B38;
  if (!qword_100204B38)
  {
    sub_100006C14(&qword_100204B40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100204B38);
  }
  return result;
}

unint64_t sub_10014FCD0()
{
  unint64_t result = qword_100204B48;
  if (!qword_100204B48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100204B48);
  }
  return result;
}

unint64_t sub_10014FD24()
{
  unint64_t result = qword_100204B50;
  if (!qword_100204B50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100204B50);
  }
  return result;
}

uint64_t type metadata accessor for ContactPickerView.Coordinator()
{
  return self;
}

id sub_10014FE58()
{
  id v0 = [objc_allocWithZone((Class)CNContactPickerViewController) initWithNibName:0 bundle:0];
  sub_1000063C0(&qword_100204BF8);
  UIViewControllerRepresentableContext.coordinator.getter();
  [v0 setDelegate:v2];

  return v0;
}

id sub_10014FED8@<X0>(void *a1@<X8>)
{
  uint64_t v4 = *v1;
  uint64_t v3 = v1[1];
  uint64_t v5 = (objc_class *)type metadata accessor for ContactPickerView.Coordinator();
  uint64_t v6 = (char *)objc_allocWithZone(v5);
  uint64_t v7 = &v6[OBJC_IVAR____TtCV21WritingToolsUIService17ContactPickerView11Coordinator_onSelectContact];
  *(void *)uint64_t v7 = v4;
  *((void *)v7 + 1) = v3;
  v9.receiver = v6;
  v9.super_class = v5;
  swift_retain();
  id result = [super init];
  *a1 = result;
  return result;
}

uint64_t sub_10014FF4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1001502C8();

  return static UIViewControllerRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_10014FFB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1001502C8();

  return static UIViewControllerRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_100150014()
{
}

uint64_t sub_10015003C(void *a1)
{
  uint64_t v2 = v1;
  if (qword_1001FAC30 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_10000EBE8(v4, (uint64_t)qword_100212788);
  id v5 = a1;
  unint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    objc_super v9 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 138739971;
    id v10 = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *objc_super v9 = v5;

    _os_log_impl((void *)&_mh_execute_header, v6, v7, "contact picker picked contact: %{sensitive}@", v8, 0xCu);
    sub_1000063C0(&qword_1001FED90);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v11 = *(void (**)(id))(v2
                                  + OBJC_IVAR____TtCV21WritingToolsUIService17ContactPickerView11Coordinator_onSelectContact);
  swift_retain();
  v11(v5);
  return swift_release();
}

void *initializeBufferWithCopyOfBuffer for ContactPickerView(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

uint64_t destroy for ContactPickerView()
{
  return swift_release();
}

void *assignWithCopy for ContactPickerView(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for ContactPickerView(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for ContactPickerView()
{
  return &type metadata for ContactPickerView;
}

unint64_t sub_1001502C8()
{
  unint64_t result = qword_100204BF0;
  if (!qword_100204BF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100204BF0);
  }
  return result;
}

uint64_t sub_100150320()
{
  _StringGuts.grow(_:)(411);
  v0._countAndFlagsBits = 0xD0000000000000DDLL;
  v0._object = (void *)0x80000001001A0920;
  String.append(_:)(v0);
  _print_unlocked<A, B>(_:_:)();
  v1._countAndFlagsBits = 0xD000000000000080;
  v1._object = (void *)0x80000001001A0A00;
  String.append(_:)(v1);
  _print_unlocked<A, B>(_:_:)();
  v2._object = (void *)0x80000001001A0A90;
  v2._countAndFlagsBits = 0xD000000000000036;
  String.append(_:)(v2);
  _print_unlocked<A, B>(_:_:)();
  v3._countAndFlagsBits = 11815;
  v3._object = (void *)0xE200000000000000;
  String.append(_:)(v3);
  return 0;
}

uint64_t sub_100150458()
{
  uint64_t v0 = type metadata accessor for Schema();
  sub_1000281F0(v0, qword_100212B10);
  sub_10000EBE8(v0, (uint64_t)qword_100212B10);
  sub_1000063C0(&qword_1001FF080);
  type metadata accessor for Schema.Field();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_10018A740;
  Schema.Field.init<A>(name:description:type:)();
  sub_1000063C0(&qword_1001FBE30);
  sub_100154C30(&qword_100204D48);
  Schema.Field.init<A>(name:description:type:)();
  return Schema.init(fields:)();
}

uint64_t sub_10015060C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v11[0] = a4;
  uint64_t v6 = sub_1000063C0(&qword_100204D98);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  objc_super v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100044740(a1, a1[3]);
  sub_10015404C();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  char v13 = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v4)
  {
    v11[1] = v11[0];
    char v12 = 1;
    sub_1000063C0(&qword_1001FBE30);
    sub_100154C30(&qword_100204DA0);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1001507D0()
{
  if (*v0) {
    return 0x656D656E69666572;
  }
  else {
    return 2036625250;
  }
}

uint64_t sub_10015080C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100152EC0(a1, a2);
  *a3 = result;
  return result;
}

void sub_100150834(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_100150840(uint64_t a1)
{
  unint64_t v2 = sub_10015404C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10015087C(uint64_t a1)
{
  unint64_t v2 = sub_10015404C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1001508B8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_100152FBC(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t sub_1001508E8(void *a1)
{
  return sub_10015060C(a1, *v1, v1[1], v1[2]);
}

uint64_t sub_100150908@<X0>(uint64_t a1@<X8>)
{
  return sub_100091168(&qword_1001FADC0, (uint64_t)qword_100212B10, a1);
}

uint64_t sub_10015092C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_100152D10(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t sub_10015095C()
{
  swift_getKeyPath();
  sub_100153394();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1001509DC@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_100153394();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v4 = *(void *)(v3 + 24);
  *a2 = *(void *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_100150A58()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_100150B0C()
{
  swift_getKeyPath();
  sub_100153394();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_100150B8C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_100153394();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v4 = *(void *)(v3 + 40);
  *a2 = *(void *)(v3 + 32);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_100150C08()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_100150CBC()
{
  swift_getKeyPath();
  sub_100153394();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_100150D3C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_100153394();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v4 = *(void *)(v3 + 56);
  *a2 = *(void *)(v3 + 48);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_100150DB8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_100150E6C()
{
  swift_getKeyPath();
  sub_100153394();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v1 = *(void *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_100150EEC@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_100153394();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v4 = *(void *)(v3 + 72);
  *a2 = *(void *)(v3 + 64);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_100150F68()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_10015101C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[6] = a4;
  v5[7] = v4;
  v5[4] = a2;
  v5[5] = a3;
  v5[3] = a1;
  return _swift_task_switch(sub_100151044, 0, 0);
}

uint64_t sub_100151044()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = v0[4];
  uint64_t v8 = v0[5];
  uint64_t v9 = v0[6];
  uint64_t v3 = v0[3];
  swift_getKeyPath();
  uint64_t v4 = (void *)swift_task_alloc();
  v4[2] = v1;
  v4[3] = v3;
  v4[4] = v2;
  v0[2] = v1;
  sub_100153394();
  swift_bridgeObjectRetain();
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_bridgeObjectRelease();
  swift_release();
  swift_task_dealloc();
  swift_getKeyPath();
  uint64_t v5 = (void *)swift_task_alloc();
  v5[2] = v1;
  v5[3] = v8;
  v5[4] = v9;
  v0[2] = v1;
  swift_bridgeObjectRetain();
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_bridgeObjectRelease();
  swift_release();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_1001511E8()
{
  uint64_t v0 = type metadata accessor for Schema();
  sub_1000281F0(v0, qword_100212B28);
  sub_10000EBE8(v0, (uint64_t)qword_100212B28);
  sub_1000063C0(&qword_1001FF080);
  type metadata accessor for Schema.Field();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_10018A740;
  Schema.Field.init<A>(name:description:type:)();
  Schema.Field.init<A>(name:description:type:)();
  return Schema.init(fields:)();
}

uint64_t sub_100151360(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v12[0] = a4;
  v12[1] = a5;
  uint64_t v7 = sub_1000063C0(&qword_100204DB8);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100044740(a1, a1[3]);
  sub_100154D58();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  char v14 = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v5)
  {
    char v13 = 1;
    KeyedEncodingContainer.encode(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1001514D4()
{
  if (*v0) {
    return 0x74706D6F7270;
  }
  else {
    return 0x656C746974;
  }
}

uint64_t sub_100151508@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100153544(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100151530(uint64_t a1)
{
  unint64_t v2 = sub_100154D58();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10015156C(uint64_t a1)
{
  unint64_t v2 = sub_100154D58();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1001515A8(void *a1)
{
  return sub_100151360(a1, *v1, v1[1], v1[2], v1[3]);
}

uint64_t sub_1001515C8@<X0>(uint64_t a1@<X8>)
{
  return sub_100091168(&qword_1001FADC8, (uint64_t)qword_100212B28, a1);
}

uint64_t sub_1001515EC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_100153204(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_10015161C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC21WritingToolsUIService11SummaryTool___observationRegistrar;
  uint64_t v2 = type metadata accessor for ObservationRegistrar();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_1001516DC()
{
  return type metadata accessor for SummaryTool();
}

uint64_t type metadata accessor for SummaryTool()
{
  uint64_t result = qword_100204C30;
  if (!qword_100204C30) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100151730()
{
  uint64_t result = type metadata accessor for ObservationRegistrar();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1001517D0()
{
  uint64_t v1 = *v0;
  swift_getKeyPath();
  sub_100153394();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 16);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_100151850()
{
  uint64_t v1 = *v0;
  swift_getKeyPath();
  sub_100153394();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 32);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1001518D0(uint64_t a1, long long *a2)
{
  long long v9 = *a2;
  uint64_t v4 = *((void *)a2 + 2);
  uint64_t v5 = *((void *)a2 + 3);
  uint64_t v6 = *v2;
  uint64_t v7 = swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *(void *)uint64_t v7 = v3;
  *(void *)(v7 + 8) = sub_100027204;
  *(void *)(v7 + 48) = v5;
  *(void *)(v7 + 56) = v6;
  *(void *)(v7 + 40) = v4;
  *(_OWORD *)(v7 + 24) = v9;
  return _swift_task_switch(sub_100151044, 0, 0);
}

uint64_t sub_10015199C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_100066548(*a1, *a2);
}

Swift::Int sub_1001519A8()
{
  return Hasher._finalize()();
}

uint64_t sub_100151A4C()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100151ADC()
{
  return Hasher._finalize()();
}

unint64_t sub_100151B7C@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_100153628(*a1);
  *a2 = result;
  return result;
}

void sub_100151BAC(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE900000000000074;
  unint64_t v4 = 0xE800000000000000;
  uint64_t v5 = 0x74786554676E6F6CLL;
  if (v2 != 1)
  {
    uint64_t v5 = 0x6F746F6870;
    unint64_t v4 = 0xE500000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x78655474726F6873;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

void sub_100151C0C(void *a1@<X8>)
{
  *a1 = &off_1001EA740;
}

uint64_t sub_100151C1C()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_100151C7C()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_100151CCC()
{
  uint64_t v0 = type metadata accessor for Schema();
  sub_1000281F0(v0, qword_100212B40);
  sub_10000EBE8(v0, (uint64_t)qword_100212B40);
  sub_1000063C0(&qword_1001FF080);
  type metadata accessor for Schema.Field();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_10018A730;
  Schema.Field.init<A>(name:type:)();
  Schema.Field.init<A>(name:type:)();
  sub_100153894();
  Schema.Field.init<A>(name:type:)();
  return Schema.init(fields:)();
}

uint64_t sub_100151E50(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1000063C0(&qword_100204DE0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100044740(a1, a1[3]);
  sub_100154DAC();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v10[15] = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v2)
  {
    v10[14] = 1;
    KeyedEncodingContainer.encode(_:forKey:)();
    v10[13] = *(unsigned char *)(v3 + 32);
    v10[12] = 2;
    sub_100154E54();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_100151FF0()
{
  uint64_t v1 = 0x7972657571;
  if (*v0 != 1) {
    uint64_t v1 = 0x6570795461746164;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 1701667182;
  }
}

uint64_t sub_100152040@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1001540A0(a1, a2);
  *a3 = result;
  return result;
}

void sub_100152068(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_100152074(uint64_t a1)
{
  unint64_t v2 = sub_100154DAC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001520B0(uint64_t a1)
{
  unint64_t v2 = sub_100154DAC();

  return CodingKey.debugDescription.getter(a1, v2);
}

double sub_1001520EC@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1001541E0(a1, (uint64_t)v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(unsigned char *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_100152134(void *a1)
{
  return sub_100151E50(a1);
}

uint64_t sub_10015214C()
{
  uint64_t v0 = type metadata accessor for JSONEncoder.OutputFormatting();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = type metadata accessor for JSONEncoder.DateEncodingStrategy();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  unint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for JSONEncoder();
  swift_allocObject();
  uint64_t v5 = JSONEncoder.init()();
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, enum case for JSONEncoder.DateEncodingStrategy.iso8601(_:), v1);
  dispatch thunk of JSONEncoder.dateEncodingStrategy.setter();
  static JSONEncoder.OutputFormatting.prettyPrinted.getter();
  uint64_t result = dispatch thunk of JSONEncoder.outputFormatting.setter();
  qword_100212B58 = v5;
  return result;
}

uint64_t sub_10015229C()
{
  uint64_t v0 = type metadata accessor for Schema();
  sub_1000281F0(v0, qword_100212B60);
  sub_10000EBE8(v0, (uint64_t)qword_100212B60);
  sub_1000063C0(&qword_1001FF080);
  type metadata accessor for Schema.Field();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_10018A720;
  sub_1000063C0(&qword_100204D80);
  sub_100154C94(&qword_100204DA8, (void (*)(void))sub_100154D04);
  Schema.Field.init<A>(name:description:type:)();
  return Schema.init(fields:)();
}

uint64_t sub_100152410(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_1000063C0(&qword_100204D70);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100044740(a1, a1[3]);
  sub_100154B88();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v9[1] = a2;
  sub_1000063C0(&qword_100204D80);
  sub_100154C94(&qword_100204D88, (void (*)(void))sub_100154BDC);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

Swift::Int sub_100152590()
{
  return Hasher._finalize()();
}

void sub_1001525D4()
{
}

Swift::Int sub_1001525FC()
{
  return Hasher._finalize()();
}

uint64_t sub_10015263C()
{
  return 0x6574736575716572;
}

uint64_t sub_100152660@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6574736575716572 && a2 == 0xED00006F666E4964)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

void sub_10015271C(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_100152728(uint64_t a1)
{
  unint64_t v2 = sub_100154B88();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100152764(uint64_t a1)
{
  unint64_t v2 = sub_100154B88();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1001527A0(void *a1)
{
  return sub_100152410(a1, *v1);
}

uint64_t sub_1001527BC@<X0>(uint64_t a1@<X8>)
{
  return sub_100091168(&qword_1001FADE0, (uint64_t)qword_100212B60, a1);
}

uint64_t sub_1001527E0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  sub_1000063C0(&qword_100204D80);
  sub_100154C94(&qword_100204DA8, (void (*)(void))sub_100154D04);
  GeneratedValues.extract<A>(field:)();
  uint64_t v5 = type metadata accessor for GeneratedValues();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  if (!v2) {
    *a2 = v7;
  }
  return result;
}

uint64_t sub_100152914()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_100152944(uint64_t a1, uint64_t *a2)
{
  *(void *)(v3 + 16) = a1;
  uint64_t v4 = *a2;
  uint64_t v5 = *(int **)(v2 + 32);
  uint64_t v8 = (uint64_t (*)(uint64_t, int *))((char *)&dword_100204D68 + dword_100204D68);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 24) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_100152A04;
  return v8(v4, v5);
}

uint64_t sub_100152A04(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  uint64_t v7 = *v3;
  swift_task_dealloc();
  if (!v2)
  {
    uint64_t v8 = *(void **)(v6 + 16);
    *uint64_t v8 = a1;
    v8[1] = a2;
  }
  uint64_t v9 = *(uint64_t (**)(void))(v7 + 8);
  return v9();
}

uint64_t sub_100152B20(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_10015349C();
  unint64_t v5 = sub_1001534F0();

  return static CaseIterable<>.schema.getter(a1, a2, v4, v5);
}

uint64_t sub_100152B88()
{
  return CaseIterable<>.init(from:)();
}

uint64_t sub_100152BF4@<X0>(uint64_t a1@<X8>)
{
  return sub_100091168(&qword_1001FADD0, (uint64_t)qword_100212B40, a1);
}

double sub_100152C18@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_100153674(a1, (uint64_t)v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(unsigned char *)(a2 + 32) = v7;
  }
  return result;
}

unint64_t sub_100152C64()
{
  unint64_t result = qword_100204CD8;
  if (!qword_100204CD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100204CD8);
  }
  return result;
}

unint64_t sub_100152CBC()
{
  unint64_t result = qword_100204CE8;
  if (!qword_100204CE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_100204CE8);
  }
  return result;
}

uint64_t sub_100152D10(uint64_t a1)
{
  GeneratedValues.extract<A>(field:)();
  if (v1)
  {
    uint64_t v4 = type metadata accessor for GeneratedValues();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    uint64_t v2 = v7;
    swift_bridgeObjectRetain();
    sub_1000063C0(&qword_1001FBE30);
    sub_100154C30(&qword_100204D48);
    GeneratedValues.extract<A>(field:)();
    uint64_t v6 = type metadata accessor for GeneratedValues();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
    swift_bridgeObjectRelease();
  }
  return v2;
}

uint64_t sub_100152EC0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 2036625250 && a2 == 0xE400000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656D656E69666572 && a2 == 0xEB0000000073746ELL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_100152FBC(void *a1)
{
  uint64_t v3 = sub_1000063C0(&qword_100204D50);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = a1[4];
  sub_100044740(a1, a1[3]);
  sub_10015404C();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1)
  {
    sub_100027DBC((uint64_t)a1);
  }
  else
  {
    v9[31] = 0;
    uint64_t v7 = KeyedDecodingContainer.decode(_:forKey:)();
    sub_1000063C0(&qword_1001FBE30);
    v9[15] = 1;
    sub_100154C30(&qword_100204D60);
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRetain();
    sub_100027DBC((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7;
}

uint64_t sub_100153204(uint64_t a1)
{
  GeneratedValues.extract<A>(field:)();
  if (v1)
  {
    uint64_t v4 = type metadata accessor for GeneratedValues();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    uint64_t v2 = v7;
    swift_bridgeObjectRetain();
    GeneratedValues.extract<A>(field:)();
    uint64_t v6 = type metadata accessor for GeneratedValues();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
    swift_bridgeObjectRelease();
  }
  return v2;
}

uint64_t sub_10015337C()
{
  return sub_10015344C();
}

unint64_t sub_100153394()
{
  unint64_t result = qword_100204CF8;
  if (!qword_100204CF8)
  {
    type metadata accessor for SummaryTool();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100204CF8);
  }
  return result;
}

uint64_t sub_1001533F4()
{
  return sub_10015340C();
}

uint64_t sub_10015340C()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[4];
  *(void *)(v1 + 64) = v0[3];
  *(void *)(v1 + 72) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10015344C()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[4];
  *(void *)(v1 + 48) = v0[3];
  *(void *)(v1 + 56) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

unint64_t sub_10015349C()
{
  unint64_t result = qword_100204D00;
  if (!qword_100204D00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100204D00);
  }
  return result;
}

unint64_t sub_1001534F0()
{
  unint64_t result = qword_100204D08;
  if (!qword_100204D08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100204D08);
  }
  return result;
}

uint64_t sub_100153544(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74706D6F7270 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t sub_100153628(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1001EA6D8, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 3) {
    return 3;
  }
  else {
    return v3;
  }
}

uint64_t sub_100153674@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  GeneratedValues.extract<A>(field:)();
  if (v2)
  {
    uint64_t v5 = type metadata accessor for GeneratedValues();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  }
  else
  {
    swift_bridgeObjectRetain();
    GeneratedValues.extract<A>(field:)();
    sub_100153894();
    swift_bridgeObjectRetain();
    GeneratedValues.extract<A>(field:)();
    uint64_t v7 = type metadata accessor for GeneratedValues();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(a1, v7);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)a2 = v8;
    *(void *)(a2 + 8) = v9;
    *(void *)(a2 + 16) = v8;
    *(void *)(a2 + 24) = v9;
    *(unsigned char *)(a2 + 32) = v8;
  }
  return result;
}

unint64_t sub_100153894()
{
  unint64_t result = qword_100204D10;
  if (!qword_100204D10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100204D10);
  }
  return result;
}

ValueMetadata *type metadata accessor for RequestUserInfoTool.Arguments()
{
  return &type metadata for RequestUserInfoTool.Arguments;
}

uint64_t destroy for RequestUserInfoTool()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t initializeWithCopy for RequestUserInfoTool(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *assignWithCopy for RequestUserInfoTool(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[5];
  a1[4] = a2[4];
  a1[5] = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for RequestUserInfoTool(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = v5;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for CompositionPrompts.InitialPaddedUserPrompt(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CompositionPrompts.InitialPaddedUserPrompt(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RequestUserInfoTool()
{
  return &type metadata for RequestUserInfoTool;
}

uint64_t destroy for ResponseContent()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s21WritingToolsUIService15ResponseContentVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ResponseContent(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ResponseContent(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ResponseContent(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ResponseContent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ResponseContent()
{
  return &type metadata for ResponseContent;
}

ValueMetadata *type metadata accessor for SummaryTool.Arguments()
{
  return &type metadata for SummaryTool.Arguments;
}

uint64_t initializeWithCopy for RequestedInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for RequestedInfo(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

__n128 initializeWithTake for RequestedInfo(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for RequestedInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for RequestedInfo(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 33)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RequestedInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 33) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RequestedInfo()
{
  return &type metadata for RequestedInfo;
}

ValueMetadata *type metadata accessor for RequestedInfo.DataType()
{
  return &type metadata for RequestedInfo.DataType;
}

unint64_t sub_100153EE8()
{
  unint64_t result = qword_100204D18;
  if (!qword_100204D18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100204D18);
  }
  return result;
}

unint64_t sub_100153F40()
{
  unint64_t result = qword_100204D20;
  if (!qword_100204D20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100204D20);
  }
  return result;
}

unint64_t sub_100153F98()
{
  unint64_t result = qword_100204D28;
  if (!qword_100204D28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100204D28);
  }
  return result;
}

unint64_t sub_100153FF0()
{
  unint64_t result = qword_100204D38;
  if (!qword_100204D38)
  {
    sub_100006C14(&qword_100204D40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100204D38);
  }
  return result;
}

unint64_t sub_10015404C()
{
  unint64_t result = qword_100204D58;
  if (!qword_100204D58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100204D58);
  }
  return result;
}

uint64_t sub_1001540A0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7972657571 && a2 == 0xE500000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6570795461746164 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1001541E0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1000063C0(&qword_100204DC8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100044740(a1, a1[3]);
  sub_100154DAC();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return sub_100027DBC((uint64_t)a1);
  }
  char v24 = 0;
  uint64_t v9 = KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v11 = v10;
  uint64_t v20 = v9;
  char v23 = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v14 = v13;
  uint64_t v18 = v12;
  char v21 = 2;
  sub_100154E00();
  swift_bridgeObjectRetain();
  uint64_t v19 = v14;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  LOBYTE(v14) = v22;
  sub_100027DBC((uint64_t)a1);
  uint64_t v15 = v19;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v20;
  *(void *)(a2 + 8) = v11;
  *(void *)(a2 + 16) = v18;
  *(void *)(a2 + 24) = v15;
  *(unsigned char *)(a2 + 32) = v14;
  return result;
}

uint64_t sub_100154480(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 136) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_100154588;
  return v6(a1);
}

uint64_t sub_100154588(uint64_t a1)
{
  long long v3 = (void *)*v2;
  v3[18] = a1;
  v3[19] = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = (uint64_t (*)(void))v3[1];
    return v4();
  }
  else
  {
    return _swift_task_switch(sub_100154700, 0, 0);
  }
}

uint64_t sub_100154700()
{
  if (qword_1001FADD8 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 152);
  *(void *)(v0 + 128) = *(void *)(v0 + 144);
  sub_1000445DC();
  uint64_t v2 = dispatch thunk of JSONEncoder.encode<A>(_:)();
  unint64_t v4 = v3;
  swift_bridgeObjectRelease();
  if (v1)
  {
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
  else
  {
    switch(v4 >> 62)
    {
      case 1uLL:
        uint64_t v16 = (void *)(v0 + 56);
        if (v2 >> 32 < (int)v2) {
          __break(1u);
        }
        sub_100044630(v2, v4);
        swift_retain();
        uint64_t v7 = sub_100084E0C((int)v2, v2 >> 32, v4 & 0x3FFFFFFFFFFFFFFFLL, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_100085078);
        uint64_t v9 = v8;
        sub_1000446E8(v2, v4);
        goto LABEL_11;
      case 2uLL:
        uint64_t v16 = (void *)(v0 + 56);
        uint64_t v10 = *(void *)(v2 + 16);
        uint64_t v11 = *(void *)(v2 + 24);
        sub_100044630(v2, v4);
        swift_retain();
        swift_retain();
        uint64_t v7 = sub_100084E0C(v10, v11, v4 & 0x3FFFFFFFFFFFFFFFLL, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_100085078);
        uint64_t v9 = v12;
        swift_release();
        swift_release();
LABEL_11:
        if (v9) {
          goto LABEL_19;
        }
        *(void *)(v0 + 96) = v2;
        *(void *)(v0 + 104) = v4;
        sub_100044630(v2, v4);
        sub_1000063C0(&qword_1001FCA58);
        if (swift_dynamicCast())
        {
          sub_1000085E4((long long *)(v0 + 16), (uint64_t)v16);
          sub_100044740(v16, *(void *)(v0 + 80));
          if (dispatch thunk of _HasContiguousBytes._providesContiguousBytesNoCopy.getter())
          {
            sub_100044740(v16, *(void *)(v0 + 80));
            dispatch thunk of _HasContiguousBytes.withUnsafeBytes<A>(_:)();
            sub_1000446E8(v2, v4);
            uint64_t v7 = *(void *)(v0 + 112);
            uint64_t v9 = *(void *)(v0 + 120);
            sub_100027DBC((uint64_t)v16);
            goto LABEL_20;
          }
          sub_100027DBC((uint64_t)v16);
        }
        else
        {
          *(void *)(v0 + 48) = 0;
          *(_OWORD *)(v0 + 16) = 0u;
          *(_OWORD *)(v0 + 32) = 0u;
          sub_100044688(v0 + 16);
        }
        uint64_t v13 = sub_10008432C(v2, v4);
LABEL_18:
        uint64_t v7 = v13;
        uint64_t v9 = v14;
LABEL_19:
        sub_1000446E8(v2, v4);
LABEL_20:
        sub_1000446E8(v2, v4);
        uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
        uint64_t result = v15(v7, v9);
        break;
      case 3uLL:
        *(void *)(v0 + 166) = 0;
        *(void *)(v0 + 160) = 0;
        goto LABEL_17;
      default:
        *(void *)(v0 + 174) = v2;
        *(_WORD *)(v0 + 182) = v4;
        *(unsigned char *)(v0 + 184) = BYTE2(v4);
        *(unsigned char *)(v0 + 185) = BYTE3(v4);
        *(unsigned char *)(v0 + 186) = BYTE4(v4);
        *(unsigned char *)(v0 + 187) = BYTE5(v4);
LABEL_17:
        uint64_t v13 = static String._fromUTF8Repairing(_:)();
        goto LABEL_18;
    }
  }
  return result;
}

unint64_t sub_100154B88()
{
  unint64_t result = qword_100204D78;
  if (!qword_100204D78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100204D78);
  }
  return result;
}

unint64_t sub_100154BDC()
{
  unint64_t result = qword_100204D90;
  if (!qword_100204D90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100204D90);
  }
  return result;
}

uint64_t sub_100154C30(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100006C14(&qword_1001FBE30);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100154C94(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100006C14(&qword_100204D80);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100154D04()
{
  unint64_t result = qword_100204DB0;
  if (!qword_100204DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100204DB0);
  }
  return result;
}

unint64_t sub_100154D58()
{
  unint64_t result = qword_100204DC0;
  if (!qword_100204DC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100204DC0);
  }
  return result;
}

unint64_t sub_100154DAC()
{
  unint64_t result = qword_100204DD0;
  if (!qword_100204DD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100204DD0);
  }
  return result;
}

unint64_t sub_100154E00()
{
  unint64_t result = qword_100204DD8;
  if (!qword_100204DD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100204DD8);
  }
  return result;
}

unint64_t sub_100154E54()
{
  unint64_t result = qword_100204DE8;
  if (!qword_100204DE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100204DE8);
  }
  return result;
}

unsigned char *_s21WritingToolsUIService13RequestedInfoV8DataTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100154F74);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RequestedInfo.CodingKeys()
{
  return &type metadata for RequestedInfo.CodingKeys;
}

ValueMetadata *type metadata accessor for SummaryTool.Arguments.CodingKeys()
{
  return &type metadata for SummaryTool.Arguments.CodingKeys;
}

uint64_t getEnumTagSinglePayload for RequestUserInfoTool.Arguments.CodingKeys(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *storeEnumTagSinglePayload for RequestUserInfoTool.Arguments.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1001550B4);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for RequestUserInfoTool.Arguments.CodingKeys()
{
  return &type metadata for RequestUserInfoTool.Arguments.CodingKeys;
}

unsigned char *_s21WritingToolsUIService11SummaryToolC9ArgumentsV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001551B8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ResponseContent.CodingKeys()
{
  return &type metadata for ResponseContent.CodingKeys;
}

unint64_t sub_1001551F4()
{
  unint64_t result = qword_100204DF0;
  if (!qword_100204DF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100204DF0);
  }
  return result;
}

unint64_t sub_10015524C()
{
  unint64_t result = qword_100204DF8;
  if (!qword_100204DF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100204DF8);
  }
  return result;
}

unint64_t sub_1001552A4()
{
  unint64_t result = qword_100204E00;
  if (!qword_100204E00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100204E00);
  }
  return result;
}

unint64_t sub_1001552FC()
{
  unint64_t result = qword_100204E08;
  if (!qword_100204E08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100204E08);
  }
  return result;
}

unint64_t sub_100155354()
{
  unint64_t result = qword_100204E10;
  if (!qword_100204E10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100204E10);
  }
  return result;
}

unint64_t sub_1001553AC()
{
  unint64_t result = qword_100204E18;
  if (!qword_100204E18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100204E18);
  }
  return result;
}

unint64_t sub_100155404()
{
  unint64_t result = qword_100204E20;
  if (!qword_100204E20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100204E20);
  }
  return result;
}

unint64_t sub_10015545C()
{
  unint64_t result = qword_100204E28;
  if (!qword_100204E28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100204E28);
  }
  return result;
}

unint64_t sub_1001554B4()
{
  unint64_t result = qword_100204E30;
  if (!qword_100204E30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100204E30);
  }
  return result;
}

unint64_t sub_10015550C()
{
  unint64_t result = qword_100204E38;
  if (!qword_100204E38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100204E38);
  }
  return result;
}

unint64_t sub_100155564()
{
  unint64_t result = qword_100204E40;
  if (!qword_100204E40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100204E40);
  }
  return result;
}

unint64_t sub_1001555BC()
{
  unint64_t result = qword_100204E48;
  if (!qword_100204E48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100204E48);
  }
  return result;
}

uint64_t destroy for OpenEndedAdjustmentView()
{
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for OpenEndedAdjustmentView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for OpenEndedAdjustmentView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for OpenEndedAdjustmentView(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for OpenEndedAdjustmentView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for OpenEndedAdjustmentView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OpenEndedAdjustmentView()
{
  return &type metadata for OpenEndedAdjustmentView;
}

uint64_t destroy for OpenEndedAdjustmentViewContainer()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for OpenEndedAdjustmentViewContainer(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for OpenEndedAdjustmentViewContainer(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_retain();
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for OpenEndedAdjustmentViewContainer(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for OpenEndedAdjustmentViewContainer()
{
  return &type metadata for OpenEndedAdjustmentViewContainer;
}

uint64_t sub_100155A0C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100155A28@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1000063C0(&qword_100204E70);
  __chkstk_darwin(v4 - 8);
  unsigned int v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000063C0(&qword_100204E78);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)unsigned int v6 = static VerticalAlignment.center.getter();
  *((void *)v6 + 1) = 0;
  v6[16] = 1;
  uint64_t v10 = sub_1000063C0(&qword_100204E80);
  sub_100155BE4(v2, (uint64_t)&v6[*(int *)(v10 + 44)]);
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = 0;
  uint64_t v14 = 0;
  if (*(unsigned char *)(v2 + 17))
  {
    if (qword_1001FAD10 != -1) {
      swift_once();
    }
    uint64_t v12 = *((void *)&xmmword_100212980 + 1);
    uint64_t v11 = xmmword_100212980;
    uint64_t v13 = qword_100212990;
    uint64_t v14 = unk_100212998;
  }
  char v15 = static Edge.Set.all.getter();
  sub_100008DD4((uint64_t)v6, (uint64_t)v9, &qword_100204E70);
  uint64_t v16 = &v9[*(int *)(v7 + 36)];
  *uint64_t v16 = v15;
  *((void *)v16 + 1) = v11;
  *((void *)v16 + 2) = v12;
  *((void *)v16 + 3) = v13;
  *((void *)v16 + 4) = v14;
  v16[40] = 0;
  sub_10002784C((uint64_t)v6, &qword_100204E70);
  return sub_100026FD0((uint64_t)v9, a1, &qword_100204E78);
}

uint64_t sub_100155BE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000063C0(&qword_100204E88);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v22 - v8;
  uint64_t v10 = sub_1000063C0(&qword_100201EE0);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  char v15 = (char *)&v22 - v14;
  if (*(unsigned char *)(a1 + 17))
  {
    *(void *)char v15 = static HorizontalAlignment.center.getter();
    *((void *)v15 + 1) = 0;
    v15[16] = 1;
    uint64_t v17 = sub_1000063C0((uint64_t *)&unk_100201F00);
    sub_100155E60((uint64_t *)a1, (uint64_t)&v15[*(int *)(v17 + 44)]);
    uint64_t v18 = sub_1000063C0(&qword_100201EE8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v15, 0, 1, v18);
  }
  else
  {
    uint64_t v16 = sub_1000063C0(&qword_100201EE8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
  }
  *(void *)uint64_t v9 = static HorizontalAlignment.center.getter();
  *((void *)v9 + 1) = 0;
  v9[16] = 1;
  uint64_t v19 = sub_1000063C0(&qword_100204E90);
  sub_1001565A0((long long *)a1, &v9[*(int *)(v19 + 44)]);
  sub_100008DD4((uint64_t)v15, (uint64_t)v13, &qword_100201EE0);
  sub_100008DD4((uint64_t)v9, (uint64_t)v7, &qword_100204E88);
  sub_100008DD4((uint64_t)v13, a2, &qword_100201EE0);
  uint64_t v20 = sub_1000063C0(&qword_100204E98);
  sub_100008DD4((uint64_t)v7, a2 + *(int *)(v20 + 48), &qword_100204E88);
  sub_10002784C((uint64_t)v9, &qword_100204E88);
  sub_10002784C((uint64_t)v15, &qword_100201EE0);
  sub_10002784C((uint64_t)v7, &qword_100204E88);
  return sub_10002784C((uint64_t)v13, &qword_100201EE0);
}

uint64_t sub_100155E60@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000063C0(&qword_1001FF8A8);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  uint64_t v10 = &v17[-v9];
  uint64_t v18 = *a1;
  sub_100026FD0((uint64_t)(a1 + 5), (uint64_t)v17, &qword_100204EA0);
  uint64_t v11 = (_OWORD *)swift_allocObject();
  long long v12 = *((_OWORD *)a1 + 1);
  v11[1] = *(_OWORD *)a1;
  void v11[2] = v12;
  v11[3] = *((_OWORD *)a1 + 2);
  sub_10005CF60((uint64_t)&v18);
  swift_retain();
  swift_retain();
  sub_10005CF60((uint64_t)v17);
  sub_1000063C0((uint64_t *)&unk_100201F10);
  sub_100099430();
  Button.init(action:label:)();
  uint64_t v13 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v5 + 16);
  v13(v8, v10, v4);
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  uint64_t v14 = sub_1000063C0(&qword_100201F70);
  v13((unsigned char *)(a2 + *(int *)(v14 + 48)), v8, v4);
  char v15 = *(void (**)(unsigned char *, uint64_t))(v5 + 8);
  v15(v10, v4);
  return ((uint64_t (*)(unsigned char *, uint64_t))v15)(v8, v4);
}

void sub_100156084(uint64_t *a1)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  char v4 = *((unsigned char *)a1 + 16);
  uint64_t v5 = *a1;
  uint64_t v6 = v2;
  char v7 = v4;
  sub_1000063C0(&qword_1001FC910);
  FocusState.Binding.wrappedValue.getter();
  if (v9 == 1)
  {
    uint64_t v9 = v3;
    sub_10005CF60((uint64_t)&v9);
    swift_retain();
    FocusState.Binding.wrappedValue.getter();
    uint64_t v5 = v3;
    uint64_t v6 = v2;
    char v7 = v4;
    FocusState.Binding.wrappedValue.setter();
    sub_10005CF8C((uint64_t)&v9);
    swift_release();
  }
  sub_100026FD0((uint64_t)(a1 + 5), (uint64_t)v8, &qword_100204EA0);
  sub_100026FD0((uint64_t)v8, (uint64_t)&v5, &qword_100204EA0);
  if (v5)
  {
    if (qword_1001FAB70 != -1) {
      swift_once();
    }
    sub_100009ADC((void *)qword_1002126B0);
  }
}

uint64_t sub_1001561C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v41 = a1;
  uint64_t v1 = sub_1000063C0(&qword_1001FF8D0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v38 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = type metadata accessor for TintShapeStyle();
  uint64_t v4 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  uint64_t v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000063C0(&qword_1001FF8C8);
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7);
  uint64_t v10 = (uint64_t *)((char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = sub_1000063C0(&qword_1001FF8C0);
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_1000063C0(&qword_1001FF8B8) - 8;
  __chkstk_darwin(v40);
  uint64_t v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = Image.init(systemName:)();
  TintShapeStyle.init()();
  uint64_t v18 = v39;
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v3, v6, v39);
  sub_100008DD4((uint64_t)v3, (uint64_t)v10 + *(int *)(v8 + 44), &qword_1001FF8D0);
  *uint64_t v10 = v17;
  swift_retain();
  sub_10002784C((uint64_t)v3, &qword_1001FF8D0);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v18);
  swift_release();
  uint64_t v19 = static Font.title.getter();
  uint64_t KeyPath = swift_getKeyPath();
  sub_100008DD4((uint64_t)v10, (uint64_t)v14, &qword_1001FF8C8);
  char v21 = (uint64_t *)&v14[*(int *)(v12 + 44)];
  *char v21 = KeyPath;
  v21[1] = v19;
  sub_10002784C((uint64_t)v10, &qword_1001FF8C8);
  LOBYTE(v19) = static Edge.Set.all.getter();
  EdgeInsets.init(_all:)();
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  sub_100008DD4((uint64_t)v14, (uint64_t)v16, &qword_1001FF8C0);
  unint64_t v30 = &v16[*(int *)(v40 + 44)];
  *unint64_t v30 = v19;
  *((void *)v30 + 1) = v23;
  *((void *)v30 + 2) = v25;
  *((void *)v30 + 3) = v27;
  *((void *)v30 + 4) = v29;
  v30[40] = 0;
  sub_10002784C((uint64_t)v14, &qword_1001FF8C0);
  if (qword_1001FAD28 != -1) {
    swift_once();
  }
  uint64_t v31 = qword_1002129D0;
  swift_retain();
  uint64_t v32 = static Alignment.center.getter();
  uint64_t v34 = v33;
  uint64_t v35 = v41;
  sub_100008DD4((uint64_t)v16, v41, &qword_1001FF8B8);
  uint64_t v36 = v35 + *(int *)(sub_1000063C0((uint64_t *)&unk_100201F10) + 36);
  *(void *)uint64_t v36 = v31;
  *(_WORD *)(v36 + 8) = 256;
  *(void *)(v36 + 16) = v32;
  *(void *)(v36 + 24) = v34;
  return sub_10002784C((uint64_t)v16, &qword_1001FF8B8);
}

uint64_t sub_1001565A0@<X0>(long long *a1@<X0>, void *a2@<X8>)
{
  uint64_t v41 = a2;
  uint64_t v36 = type metadata accessor for CommonUIBlendModifier(0) - 8;
  __chkstk_darwin(v36);
  uint64_t v33 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000063C0(&qword_100204EA8);
  uint64_t v37 = *(void *)(v4 - 8);
  uint64_t v38 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_1000063C0(&qword_100204EB0);
  __chkstk_darwin(v34);
  uint64_t v31 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000063C0(&qword_100204EB8);
  uint64_t v39 = *(void *)(v8 - 8);
  uint64_t v40 = v8;
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v32 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v35 = (char *)&v30 - v11;
  long long v46 = *a1;
  char v47 = *((unsigned char *)a1 + 16);
  sub_1000063C0(&qword_1001FC910);
  FocusState.Binding.projectedValue.getter();
  uint64_t v12 = *((void *)a1 + 4);
  uint64_t v44 = *((void *)a1 + 3);
  uint64_t v45 = v12;
  long long v42 = *a1;
  char v43 = *((unsigned char *)a1 + 16);
  swift_retain();
  FocusState.Binding.projectedValue.getter();
  sub_100156C5C();
  View.focused(_:)();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  long long v46 = *a1;
  char v47 = *((unsigned char *)a1 + 16);
  FocusState.Binding.projectedValue.getter();
  FocusState.Binding.wrappedValue.getter();
  swift_release();
  swift_release();
  uint64_t v13 = (uint64_t)v33;
  *uint64_t v33 = v46;
  uint64_t v14 = (uint64_t *)(v13 + *(int *)(v36 + 28));
  uint64_t *v14 = swift_getKeyPath();
  sub_1000063C0((uint64_t *)&unk_1001FB730);
  swift_storeEnumTagMultiPayload();
  uint64_t v16 = v37;
  uint64_t v15 = v38;
  uint64_t v17 = (uint64_t)v31;
  (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v31, v6, v38);
  sub_1001576E0(v13, v17 + *(int *)(v34 + 36));
  (*(void (**)(char *, uint64_t))(v16 + 8))(v6, v15);
  type metadata accessor for IntelligenceUI.PromptEntryView();
  sub_100157744();
  uint64_t v18 = v32;
  View.representablePreferredFocusableView<A>(_:resolver:)();
  sub_10002784C(v17, &qword_100204EB0);
  uint64_t v19 = v39;
  uint64_t v20 = v40;
  char v21 = v35;
  (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v35, v18, v40);
  uint64_t v22 = v19;
  uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v19 + 16);
  uint64_t v24 = v20;
  v23(v18, v21, v20);
  uint64_t v25 = v41;
  void *v41 = 0;
  *((unsigned char *)v25 + 8) = 1;
  uint64_t v26 = (char *)v25;
  uint64_t v27 = sub_1000063C0(&qword_100204ED0);
  v23(&v26[*(int *)(v27 + 48)], v18, v24);
  uint64_t v28 = *(void (**)(char *, uint64_t))(v22 + 8);
  v28(v21, v24);
  return ((uint64_t (*)(char *, uint64_t))v28)(v18, v24);
}

uint64_t sub_100156A70@<X0>(uint64_t a1@<X8>)
{
  return sub_100155A28(a1);
}

void sub_100156AB0(uint64_t a1, uint64_t a2)
{
  sub_100156CB0(a1, a2, *(void *)v2, *(void *)(v2 + 8), *(unsigned __int8 *)(v2 + 16));
}

id sub_100156ABC@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  char v5 = *((unsigned char *)v1 + 16);
  uint64_t v7 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v8 = (objc_class *)type metadata accessor for OpenEndedAdjustmentViewCoordinator();
  uint64_t v9 = (char *)objc_allocWithZone(v8);
  uint64_t v10 = &v9[OBJC_IVAR____TtC21WritingToolsUIService34OpenEndedAdjustmentViewCoordinator_owner];
  *(void *)uint64_t v10 = v3;
  *((void *)v10 + 1) = v4;
  unsigned char v10[16] = v5;
  *((void *)v10 + 3) = v7;
  *((void *)v10 + 4) = v6;
  v12.receiver = v9;
  v12.super_class = v8;
  swift_retain();
  swift_retain();
  swift_retain();
  id result = [super init];
  *a1 = result;
  return result;
}

uint64_t sub_100156B68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_100157624();

  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_100156BCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_100157624();

  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_100156C30()
{
}

unint64_t sub_100156C5C()
{
  unint64_t result = qword_100204E50;
  if (!qword_100204E50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100204E50);
  }
  return result;
}

void sub_100156CB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  LODWORD(v54) = a5;
  uint64_t v52 = a3;
  uint64_t v53 = a4;
  uint64_t v5 = sub_1000063C0(&qword_100201928);
  __chkstk_darwin(v5 - 8);
  uint64_t v48 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for UIButton.Configuration();
  uint64_t v50 = *(void *)(v7 - 8);
  uint64_t v51 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = type metadata accessor for IntelligenceUI.PromptEntryView.PlaceholderConfiguration();
  uint64_t v49 = *(void *)(v55 - 8);
  uint64_t v10 = __chkstk_darwin(v55);
  long long v46 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  char v47 = (char *)&v45 - v12;
  uint64_t v13 = type metadata accessor for UIPromptBackgroundView.FillStyle();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (uint64_t *)((char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = type metadata accessor for UIPromptBackgroundView.Configuration();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = __chkstk_darwin(v17);
  char v21 = (char *)&v45 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v45 - v22;
  uint64_t v24 = (void *)IntelligenceUI.PromptEntryView.trailingButton.getter();
  [v24 setNeedsUpdateConfiguration];

  uint64_t v25 = (void *)IntelligenceUI.PromptEntryView.textView.getter();
  [v25 setSelectable:1];

  uint64_t v26 = (void *)IntelligenceUI.PromptEntryView.textView.getter();
  [v26 setEditable:1];

  dispatch thunk of IntelligenceUI.PromptEntryView.accessoryView.setter();
  uint64_t v56 = v52;
  uint64_t v57 = v53;
  char v58 = v54;
  sub_1000063C0(&qword_1001FC910);
  FocusState.Binding.wrappedValue.getter();
  if (v59 == 1)
  {
    uint64_t v27 = dispatch thunk of IntelligenceUI.PromptEntryView.backgroundView.getter();
    dispatch thunk of UIPromptBackgroundView.configuration.getter();

    static UIPromptBackgroundView.Configuration.intelligent.getter();
    sub_10015781C((unint64_t *)&unk_100201950, (void (*)(uint64_t))&type metadata accessor for UIPromptBackgroundView.Configuration);
    LOBYTE(v27) = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t v28 = *(void (**)(char *, uint64_t))(v18 + 8);
    v28(v21, v17);
    v28(v23, v17);
    if ((v27 & 1) == 0)
    {
      uint64_t v29 = (void *)dispatch thunk of IntelligenceUI.PromptEntryView.backgroundView.getter();
      static UIPromptBackgroundView.Configuration.intelligent.getter();
      dispatch thunk of UIPromptBackgroundView.configuration.setter();
    }
  }
  else
  {
    uint64_t v54 = v18;
    static UIPromptBackgroundView.Configuration.default.getter();
    sub_1001573C8();
    if (qword_1001FAD58 != -1) {
      swift_once();
    }
    swift_retain();
    *uint64_t v16 = UIColor.init(_:)();
    (*(void (**)(uint64_t *, void, uint64_t))(v14 + 104))(v16, enum case for UIPromptBackgroundView.FillStyle.solid(_:), v13);
    UIPromptBackgroundView.Configuration.fillStyle.setter();
    UIPromptBackgroundView.Configuration.shadowRadius.setter();
    uint64_t v30 = self;
    id v31 = [v30 clearColor];
    UIPromptBackgroundView.Configuration.shadowColor.setter();
    uint64_t v32 = (void *)dispatch thunk of IntelligenceUI.PromptEntryView.backgroundView.getter();
    uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v54 + 16);
    uint64_t v53 = v17;
    v33(v21, v23, v17);
    dispatch thunk of UIPromptBackgroundView.configuration.setter();

    if (qword_1001FAD40 != -1) {
      swift_once();
    }
    swift_retain();
    UIColor.init(_:)();
    uint64_t v34 = v47;
    IntelligenceUI.PromptEntryView.PlaceholderConfiguration.init(textColor:)();
    uint64_t v35 = v49;
    (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v46, v34, v55);
    dispatch thunk of IntelligenceUI.PromptEntryView.placeholderConfiguration.setter();
    static UIButton.Configuration.borderless()();
    id v36 = [self configurationWithTextStyle:UIFontTextStyleTitle2];
    UIButton.Configuration.preferredSymbolConfigurationForImage.setter();
    NSString v37 = String._bridgeToObjectiveC()();
    id v38 = [self _systemImageNamed:v37];

    UIButton.Configuration.image.setter();
    id v39 = [v30 secondaryLabelColor];
    UIButton.Configuration.baseForegroundColor.setter();
    uint64_t v40 = (void *)IntelligenceUI.PromptEntryView.leadingButton.getter();
    uint64_t v42 = v50;
    uint64_t v41 = v51;
    char v43 = v48;
    (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v48, v9, v51);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v42 + 56))(v43, 0, 1, v41);
    UIButton.configuration.setter();

    uint64_t v44 = (void *)IntelligenceUI.PromptEntryView.textView.getter();
    [v44 setKeyboardAppearance:13];

    (*(void (**)(char *, uint64_t))(v42 + 8))(v9, v41);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v34, v55);
    (*(void (**)(char *, uint64_t))(v54 + 8))(v23, v53);
  }
}

unint64_t sub_1001573C8()
{
  unint64_t result = qword_100201930;
  if (!qword_100201930)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100201930);
  }
  return result;
}

id sub_100157408()
{
  uint64_t v0 = type metadata accessor for Locale();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v1 - 8);
  type metadata accessor for IntelligenceUI.PromptEntryView();
  id v2 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  String.init(localized:table:bundle:locale:comment:)();
  dispatch thunk of IntelligenceUI.PromptEntryView.placeholder.setter();
  dispatch thunk of IntelligenceUI.PromptEntryView.isLeadingButtonVisible.setter();
  uint64_t v3 = (void *)IntelligenceUI.PromptEntryView.leadingButton.getter();
  [v3 setConfigurationUpdateHandler:0];

  dispatch thunk of IntelligenceUI.PromptEntryView.isLeadingButtonConfiguredAsToggle.setter();
  dispatch thunk of IntelligenceUI.PromptEntryView.trailingButtonActivatesDictationWhenEmpty.setter();
  sub_1000063C0(&qword_100201978);
  sub_100027F2C(&qword_100201980, &qword_100201978);
  dispatch thunk of IntelligenceUI.PromptEntryView.visibleLineLimit.setter();
  sub_1000063C0(&qword_100204E58);
  UIViewRepresentableContext.coordinator.getter();
  sub_10015781C(&qword_100204E60, (void (*)(uint64_t))type metadata accessor for OpenEndedAdjustmentViewCoordinator);
  dispatch thunk of IntelligenceUI.PromptEntryView.delegate.setter();
  return v2;
}

unint64_t sub_100157624()
{
  unint64_t result = qword_100204E68;
  if (!qword_100204E68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100204E68);
  }
  return result;
}

uint64_t sub_100157678()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 64, 7);
}

void sub_1001576C8()
{
  sub_100156084((uint64_t *)(v0 + 16));
}

uint64_t sub_1001576E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CommonUIBlendModifier(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_100157744()
{
  unint64_t result = qword_100204EC0;
  if (!qword_100204EC0)
  {
    sub_100006C14(&qword_100204EB0);
    sub_100156C5C();
    swift_getOpaqueTypeConformance2();
    sub_10015781C(&qword_100204EC8, (void (*)(uint64_t))type metadata accessor for CommonUIBlendModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100204EC0);
  }
  return result;
}

uint64_t sub_10015781C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100157868()
{
  unint64_t result = qword_100204ED8;
  if (!qword_100204ED8)
  {
    sub_100006C14(&qword_100204E78);
    sub_100027F2C((unint64_t *)&unk_100204EE0, &qword_100204E70);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100204ED8);
  }
  return result;
}

uint64_t (*sub_100157908())(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  sub_100025298();
  EnvironmentValues.subscript.getter();
  *(_OWORD *)(swift_allocObject() + 16) = v1;
  return sub_1001579AC;
}

uint64_t sub_100157974()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001579AC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = *(uint64_t (**)(void *))(v4 + 16);
  v7[0] = a1;
  v7[1] = a2;
  v7[2] = a3;
  char v8 = a4;
  return v5(v7);
}

ValueMetadata *_s27__Key_navigationDestinationVMa()
{
  return &_s27__Key_navigationDestinationVN;
}

void sub_1001579FC(void *a1@<X8>)
{
  *a1 = nullsub_1;
  a1[1] = 0;
}

ValueMetadata *type metadata accessor for CompositionEnablementView()
{
  return &type metadata for CompositionEnablementView;
}

uint64_t sub_100157A28()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100157A44@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v44 = a3;
  char v4 = a2 & 1;
  uint64_t v5 = sub_1000063C0(&qword_100204EF0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000063C0(&qword_100204EF8);
  uint64_t v9 = v8 - 8;
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000063C0(&qword_100204F00);
  uint64_t v13 = v12 - 8;
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1000063C0(&qword_100204F08);
  uint64_t v17 = v16 - 8;
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v7 = static HorizontalAlignment.center.getter();
  *((void *)v7 + 1) = 0x403E000000000000;
  unsigned char v7[16] = 0;
  uint64_t v20 = sub_1000063C0((uint64_t *)&unk_100204F10);
  sub_100157D64(a1, v4, (uint64_t)&v7[*(int *)(v20 + 44)]);
  static Alignment.center.getter();
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  sub_100008DD4((uint64_t)v7, (uint64_t)v11, &qword_100204EF0);
  char v21 = &v11[*(int *)(v9 + 44)];
  long long v22 = v50;
  *((_OWORD *)v21 + 4) = v49;
  *((_OWORD *)v21 + 5) = v22;
  *((_OWORD *)v21 + 6) = v51;
  long long v23 = v46;
  *(_OWORD *)char v21 = v45;
  *((_OWORD *)v21 + 1) = v23;
  long long v24 = v48;
  *((_OWORD *)v21 + 2) = v47;
  *((_OWORD *)v21 + 3) = v24;
  sub_10002784C((uint64_t)v7, &qword_100204EF0);
  LOBYTE(v9) = static Edge.Set.horizontal.getter();
  EdgeInsets.init(_all:)();
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  sub_100008DD4((uint64_t)v11, (uint64_t)v15, &qword_100204EF8);
  uint64_t v33 = &v15[*(int *)(v13 + 44)];
  *uint64_t v33 = v9;
  *((void *)v33 + 1) = v26;
  *((void *)v33 + 2) = v28;
  *((void *)v33 + 3) = v30;
  *((void *)v33 + 4) = v32;
  v33[40] = 0;
  sub_10002784C((uint64_t)v11, &qword_100204EF8);
  LOBYTE(v9) = static Edge.Set.vertical.getter();
  EdgeInsets.init(_all:)();
  uint64_t v35 = v34;
  uint64_t v37 = v36;
  uint64_t v39 = v38;
  uint64_t v41 = v40;
  sub_100008DD4((uint64_t)v15, (uint64_t)v19, &qword_100204F00);
  uint64_t v42 = &v19[*(int *)(v17 + 44)];
  char *v42 = v9;
  *((void *)v42 + 1) = v35;
  *((void *)v42 + 2) = v37;
  *((void *)v42 + 3) = v39;
  *((void *)v42 + 4) = v41;
  v42[40] = 0;
  sub_10002784C((uint64_t)v15, &qword_100204F00);
  return sub_1001583F0((uint64_t)v19, v44);
}

uint64_t sub_100157D64@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1000063C0(&qword_1001FC6B8);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v39 = v6;
  uint64_t v40 = v7;
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000063C0((uint64_t *)&unk_100204F20);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v42 = (char *)&v35 - v15;
  uint64_t v16 = type metadata accessor for LocalizedStringKey.StringInterpolation();
  __chkstk_darwin(v16 - 8);
  LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v17._countAndFlagsBits = 0x20656C62616E45;
  v17._object = (void *)0xE700000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v17);
  v18._countAndFlagsBits = 0x54504774616843;
  v18._object = (void *)0xE700000000000000;
  LocalizedStringKey.StringInterpolation.appendInterpolation(_:)(v18);
  v19._object = (void *)0x80000001001A0D40;
  v19._countAndFlagsBits = 0xD000000000000025;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v19);
  LocalizedStringKey.init(stringInterpolation:)();
  uint64_t v20 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v37 = v21;
  uint64_t v38 = v20;
  char v23 = v22;
  uint64_t v43 = v24;
  uint64_t KeyPath = swift_getKeyPath();
  if (qword_1001FAD38 != -1) {
    swift_once();
  }
  uint64_t v36 = qword_1002129E0;
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = a1;
  *(unsigned char *)(v25 + 24) = a2 & 1;
  swift_retain();
  swift_retain();
  Button.init(action:label:)();
  char v44 = 0;
  sub_100027F2C((unint64_t *)&unk_1001FDDF0, &qword_1001FC6B8);
  sub_1001584A4();
  uint64_t v26 = v39;
  View.buttonStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v9, v26);
  uint64_t v27 = v42;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v42, v14, v10);
  uint64_t v28 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  v28(v14, v27, v10);
  uint64_t v29 = v37;
  uint64_t v30 = v38;
  *(void *)a3 = v38;
  *(void *)(a3 + 8) = v29;
  *(unsigned char *)(a3 + 16) = v23 & 1;
  uint64_t v31 = KeyPath;
  *(void *)(a3 + 24) = v43;
  *(void *)(a3 + 32) = v31;
  *(unsigned char *)(a3 + 40) = 1;
  *(void *)(a3 + 48) = v36;
  uint64_t v32 = sub_1000063C0((uint64_t *)&unk_100204F38);
  v28((char *)(a3 + *(int *)(v32 + 48)), v14, v10);
  sub_10002783C(v30, v29, v23 & 1);
  uint64_t v33 = *(void (**)(char *, uint64_t))(v11 + 8);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  v33(v42, v10);
  v33(v14, v10);
  sub_100026F18(v30, v29, v23 & 1);
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100158208(uint64_t a1, char a2)
{
  char v2 = a2 & 1;
  uint64_t v3 = swift_retain();
  sub_100020F7C(v3, v2);
  swift_release();
  swift_getKeyPath();
  sub_10009AE54();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return swift_release();
  }
  uint64_t v5 = Strong;
  if ([Strong respondsToSelector:"enrollmentBegan"]) {
    [v5 enrollmentBegan];
  }
  swift_release();
  return swift_unknownObjectRelease();
}

uint64_t sub_1001582E8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for LocalizedStringKey.StringInterpolation();
  __chkstk_darwin(v2 - 8);
  LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v3._countAndFlagsBits = 0x20705520746553;
  v3._object = (void *)0xE700000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v3);
  v4._countAndFlagsBits = 0x54504774616843;
  v4._object = (void *)0xE700000000000000;
  LocalizedStringKey.StringInterpolation.appendInterpolation(_:)(v4);
  v5._countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v5);
  LocalizedStringKey.init(stringInterpolation:)();
  uint64_t result = Text.init(_:tableName:bundle:comment:)();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v7;
  *(unsigned char *)(a1 + 16) = v8 & 1;
  *(void *)(a1 + 24) = v9;
  return result;
}

uint64_t sub_1001583E4@<X0>(uint64_t a1@<X8>)
{
  return sub_100157A44(*(void *)v1, *(unsigned char *)(v1 + 8), a1);
}

uint64_t sub_1001583F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000063C0(&qword_100204F08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100158460()
{
  swift_release();

  return _swift_deallocObject(v0, 25, 7);
}

uint64_t sub_100158498()
{
  return sub_100158208(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

unint64_t sub_1001584A4()
{
  unint64_t result = qword_100204F30;
  if (!qword_100204F30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100204F30);
  }
  return result;
}

uint64_t sub_100158500()
{
  return sub_100158564(&qword_100204F48, &qword_100204F08, (void (*)(void))sub_10015853C);
}

uint64_t sub_10015853C()
{
  return sub_100158564(&qword_100204F50, &qword_100204F00, (void (*)(void))sub_1001585E4);
}

uint64_t sub_100158564(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100006C14(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1001585E4()
{
  unint64_t result = qword_100204F58;
  if (!qword_100204F58)
  {
    sub_100006C14(&qword_100204EF8);
    sub_100027F2C((unint64_t *)&unk_100204F60, &qword_100204EF0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100204F58);
  }
  return result;
}

uint64_t destroy for RewritingInputDashboardView(uint64_t a1)
{
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  if (*(void *)(a1 + 32))
  {
    return swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for RewritingInputDashboardView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v6 = (_OWORD *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 32);
  swift_retain();
  swift_retain();
  swift_retain();
  if (v5)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    *(void *)(a1 + 32) = v5;
    *(void *)(a1 + 40) = v7;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 32) = *v6;
  }
  return a1;
}

uint64_t assignWithCopy for RewritingInputDashboardView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  uint64_t v4 = *(void *)(a2 + 32);
  if (!*(void *)(a1 + 32))
  {
    if (v4)
    {
      uint64_t v6 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = v4;
      *(void *)(a1 + 40) = v6;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for RewritingInputDashboardView(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  uint64_t v4 = *(void *)(a2 + 32);
  if (!*(void *)(a1 + 32))
  {
    if (v4)
    {
      uint64_t v6 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = v4;
      *(void *)(a1 + 40) = v6;
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for RewritingInputDashboardView(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RewritingInputDashboardView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RewritingInputDashboardView()
{
  return &type metadata for RewritingInputDashboardView;
}

uint64_t sub_100158998()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001589B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v33 = a1;
  uint64_t v30 = type metadata accessor for TaskPriority();
  uint64_t v3 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000063C0(&qword_100204F70);
  __chkstk_darwin(v6 - 8);
  char v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000063C0(&qword_1001FBC48);
  uint64_t v10 = v9 - 8;
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_1000063C0(&qword_1001FBC50);
  __chkstk_darwin(v32);
  uint64_t v29 = (uint64_t)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100158E38((long long *)v2, (uint64_t)v8);
  long long v37 = *(_OWORD *)v2;
  uint64_t v31 = v37;
  sub_100026FD0((uint64_t)&v37 + 8, (uint64_t)v38, &qword_100204F80);
  long long v36 = *(_OWORD *)(v2 + 16);
  uint64_t v14 = *(void *)(v2 + 32);
  uint64_t v15 = (_OWORD *)swift_allocObject();
  long long v16 = *(_OWORD *)(v2 + 16);
  v15[1] = *(_OWORD *)v2;
  void v15[2] = v16;
  v15[3] = *(_OWORD *)(v2 + 32);
  swift_retain();
  sub_10005CF60((uint64_t)v38);
  sub_100133230((uint64_t)&v36);
  uint64_t v17 = v14;
  sub_10004EF18(v14);
  static TaskPriority.userInitiated.getter();
  Swift::String v18 = &v12[*(int *)(v10 + 44)];
  uint64_t v19 = type metadata accessor for _TaskModifier();
  uint64_t v20 = v30;
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(&v18[*(int *)(v19 + 20)], v5, v30);
  *(void *)Swift::String v18 = &unk_100204F88;
  *((void *)v18 + 1) = v15;
  sub_100008DD4((uint64_t)v8, (uint64_t)v12, &qword_100204F70);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v20);
  sub_10002784C((uint64_t)v8, &qword_100204F70);
  uint64_t v21 = static Alignment.center.getter();
  uint64_t v22 = v29;
  sub_10001A144(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, v29, 0.0, 1, INFINITY, 0, v21, v23);
  sub_10002784C((uint64_t)v12, &qword_1001FBC48);
  long long v34 = v37;
  sub_1000063C0(&qword_100200808);
  State.wrappedValue.getter();
  uint64_t v24 = v35;
  swift_getKeyPath();
  *(void *)&long long v34 = v24;
  sub_10015D65C((unint64_t *)&unk_100201540, (void (*)(uint64_t))type metadata accessor for RewritingModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  LOBYTE(v12) = *(unsigned char *)(v24 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__state);
  swift_release();
  LOBYTE(v34) = (_BYTE)v12;
  uint64_t v25 = (_OWORD *)swift_allocObject();
  long long v26 = *(_OWORD *)(v2 + 16);
  v25[1] = *(_OWORD *)v2;
  v25[2] = v26;
  void v25[3] = *(_OWORD *)(v2 + 32);
  swift_retain();
  sub_10005CF60((uint64_t)v38);
  sub_100133230((uint64_t)&v36);
  sub_10004EF18(v17);
  sub_10015D19C();
  sub_1000A9844();
  View.onChange<A>(of:initial:_:)();
  swift_release();
  return sub_10002784C(v22, &qword_1001FBC50);
}

uint64_t sub_100158E38@<X0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v97 = a2;
  uint64_t v3 = sub_1000063C0(&qword_100204FB8);
  __chkstk_darwin(v3 - 8);
  long long v94 = (uint64_t *)((char *)&v84 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v93 = sub_1000063C0(&qword_100204FC0);
  uint64_t v5 = __chkstk_darwin(v93);
  uint64_t v98 = (uint64_t)&v84 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v96 = (uint64_t)&v84 - v7;
  uint64_t v8 = sub_1000063C0(&qword_1001FBA90);
  __chkstk_darwin(v8 - 8);
  uint64_t v92 = (char *)&v84 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000063C0(&qword_100204FC8);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v84 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000063C0(&qword_100204FD0);
  uint64_t v14 = v13 - 8;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v84 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v84 - v18;
  *(void *)uint64_t v12 = static VerticalAlignment.center.getter();
  *((void *)v12 + 1) = 0;
  v12[16] = 1;
  uint64_t v20 = sub_1000063C0(&qword_100204FD8);
  sub_100159698(a1, &v12[*(int *)(v20 + 44)]);
  uint64_t v21 = static Color.blue.getter();
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
  double v22 = v100;
  uint64_t v23 = v102;
  uint64_t v24 = v103;
  uint64_t v25 = v104;
  double v26 = v100 * 0.5;
  swift_retain();
  uint64_t v27 = static Alignment.center.getter();
  uint64_t v29 = v28;
  sub_100008DD4((uint64_t)v12, (uint64_t)v17, &qword_100204FC8);
  swift_release();
  uint64_t v30 = &v17[*(int *)(v14 + 44)];
  *(double *)uint64_t v30 = v26;
  *((double *)v30 + 1) = v22;
  *((void *)v30 + 2) = v101;
  *((void *)v30 + 3) = v23;
  *((void *)v30 + 4) = v24;
  *((void *)v30 + 5) = v25;
  *((void *)v30 + 6) = v21;
  *((_WORD *)v30 + 28) = 256;
  *((void *)v30 + 8) = v27;
  *((void *)v30 + 9) = v29;
  sub_10002784C((uint64_t)v12, &qword_100204FC8);
  long long v95 = v17;
  uint64_t v31 = (uint64_t)v17;
  uint64_t v32 = (uint64_t)a1;
  char v99 = v19;
  sub_100026FD0(v31, (uint64_t)v19, &qword_100204FD0);
  long long v110 = *a1;
  sub_1000063C0(&qword_100200808);
  State.wrappedValue.getter();
  double v33 = v105;
  swift_getKeyPath();
  *(double *)&long long v110 = v33;
  sub_10015D65C((unint64_t *)&qword_1001FD2A0, (void (*)(uint64_t))type metadata accessor for ToolModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v34 = *(void *)(*(void *)&v33 + 48);
  uint64_t v35 = *(void *)(*(void *)&v33 + 56);
  uint64_t v36 = *(void *)(*(void *)&v33 + 64);
  int v37 = *(unsigned __int8 *)(*(void *)&v33 + 72);
  sub_1000272F8(v34, v35, v36, *(unsigned char *)(*(void *)&v33 + 72));
  uint64_t result = swift_release();
  if (v37 == 255)
  {
    __break(1u);
  }
  else
  {
    uint64_t v39 = sub_1000D5160();
    uint64_t v41 = v40;
    sub_100024DB4(v34, v35, v36, v37);
    *(void *)&long long v110 = v39;
    *((void *)&v110 + 1) = v41;
    sub_10002DF54();
    uint64_t v42 = Text.init<A>(_:)();
    uint64_t v44 = v43;
    char v46 = v45 & 1;
    uint64_t v47 = Text.bold()();
    uint64_t v49 = v48;
    char v51 = v50 & 1;
    sub_100026F18(v42, v44, v46);
    swift_bridgeObjectRelease();
    uint64_t v52 = type metadata accessor for Font.Design();
    uint64_t v53 = (uint64_t)v92;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56))(v92, 1, 1, v52);
    static Font.system(size:weight:design:)();
    sub_10002784C(v53, &qword_1001FBA90);
    uint64_t v91 = Text.font(_:)();
    uint64_t v90 = v54;
    char v56 = v55;
    uint64_t v92 = v57;
    swift_release();
    int v89 = v56 & 1;
    sub_100026F18(v47, v49, v51);
    swift_bridgeObjectRelease();
    uint64_t v88 = static Color.blue.getter();
    StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
    double v58 = v105;
    uint64_t v59 = v107;
    uint64_t v87 = v108;
    uint64_t v60 = v109;
    uint64_t v86 = static Alignment.center.getter();
    uint64_t v85 = v61;
    uint64_t v62 = static VerticalAlignment.center.getter();
    uint64_t v63 = (uint64_t)v94;
    *long long v94 = v62;
    *(void *)(v63 + 8) = 0;
    *(unsigned char *)(v63 + 16) = 1;
    uint64_t v64 = sub_1000063C0(&qword_100204FE0);
    sub_10015AEFC(v32, v63 + *(int *)(v64 + 44));
    uint64_t v65 = static Color.blue.getter();
    StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
    *(void *)&double v66 = v110;
    uint64_t v67 = v111;
    uint64_t v68 = v112;
    uint64_t v69 = v113;
    swift_retain();
    uint64_t v70 = static Alignment.center.getter();
    uint64_t v72 = v71;
    uint64_t v73 = v98;
    sub_100008DD4(v63, v98, &qword_100204FB8);
    swift_release();
    uint64_t v74 = v73 + *(int *)(v93 + 36);
    *(double *)uint64_t v74 = v66 * 0.5;
    *(_OWORD *)(v74 + 8) = __PAIR128__(*((unint64_t *)&v110 + 1), *(unint64_t *)&v66);
    *(void *)(v74 + 24) = v67;
    *(void *)(v74 + 32) = v68;
    *(void *)(v74 + 40) = v69;
    *(void *)(v74 + 48) = v65;
    *(_WORD *)(v74 + 56) = 256;
    *(void *)(v74 + 64) = v70;
    *(void *)(v74 + 72) = v72;
    sub_10002784C(v63, &qword_100204FB8);
    uint64_t v75 = v96;
    sub_100026FD0(v73, v96, &qword_100204FC0);
    uint64_t v76 = (uint64_t)v95;
    sub_100008DD4((uint64_t)v99, (uint64_t)v95, &qword_100204FD0);
    sub_100008DD4(v75, v73, &qword_100204FC0);
    uint64_t v77 = v97;
    sub_100008DD4(v76, v97, &qword_100204FD0);
    uint64_t v78 = sub_1000063C0(&qword_100204FE8);
    uint64_t v79 = v77 + *(int *)(v78 + 48);
    uint64_t v80 = v91;
    uint64_t v81 = v90;
    *(void *)uint64_t v79 = v91;
    *(void *)(v79 + 8) = v81;
    char v82 = v89;
    *(unsigned char *)(v79 + 16) = v89;
    *(void *)(v79 + 24) = v92;
    *(double *)(v79 + 32) = v58 * 0.5;
    *(double *)(v79 + 40) = v58;
    *(void *)(v79 + 48) = v106;
    *(void *)(v79 + 56) = v59;
    *(void *)(v79 + 64) = v87;
    *(void *)(v79 + 72) = v60;
    *(void *)(v79 + 80) = v88;
    *(_WORD *)(v79 + 88) = 256;
    uint64_t v83 = v85;
    *(void *)(v79 + 96) = v86;
    *(void *)(v79 + 104) = v83;
    sub_100008DD4(v73, v77 + *(int *)(v78 + 64), &qword_100204FC0);
    sub_10002783C(v80, v81, v82);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_10002784C(v75, &qword_100204FC0);
    sub_10002784C((uint64_t)v99, &qword_100204FD0);
    sub_10002784C(v73, &qword_100204FC0);
    sub_100026F18(v80, v81, v82);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return sub_10002784C(v76, &qword_100204FD0);
  }
  return result;
}

uint64_t sub_100159698@<X0>(long long *a1@<X0>, char *a2@<X8>)
{
  uint64_t v71 = a2;
  uint64_t v68 = sub_1000063C0(&qword_100205068);
  uint64_t v67 = *(void *)(v68 - 8);
  __chkstk_darwin(v68);
  uint64_t v63 = (char *)&v59 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_1000063C0(&qword_100205070);
  uint64_t v4 = __chkstk_darwin(v66);
  uint64_t v70 = (uint64_t)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v65 = (char *)&v59 - v7;
  __chkstk_darwin(v6);
  uint64_t v69 = (uint64_t)&v59 - v8;
  uint64_t v64 = (char *)type metadata accessor for Divider();
  uint64_t v62 = *((void *)v64 - 1);
  __chkstk_darwin(v64);
  uint64_t v59 = (char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_1000063C0(&qword_1001FBD88) - 8;
  uint64_t v10 = __chkstk_darwin(v61);
  uint64_t v12 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v60 = (char *)&v59 - v13;
  uint64_t v72 = sub_1000063C0(&qword_1001FBD70);
  uint64_t v14 = *(void *)(v72 - 8);
  __chkstk_darwin(v72);
  uint64_t v16 = (char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1000063C0(&qword_1001FBD78);
  uint64_t v73 = *(void *)(v17 - 8);
  uint64_t v74 = v17;
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v59 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  double v22 = (char *)&v59 - v21;
  long long v82 = *a1;
  sub_100026FD0((uint64_t)&v82 + 8, (uint64_t)v83, &qword_100204F80);
  long long v81 = a1[1];
  uint64_t v23 = *((void *)a1 + 4);
  uint64_t v24 = (_OWORD *)swift_allocObject();
  long long v25 = a1[1];
  v24[1] = *a1;
  void v24[2] = v25;
  v24[3] = a1[2];
  swift_retain();
  sub_10005CF60((uint64_t)v83);
  sub_100133230((uint64_t)&v81);
  sub_10004EF18(v23);
  sub_1000063C0(&qword_1001FBDA0);
  sub_10002DED0();
  Button.init(action:label:)();
  LOWORD(v78) = 0;
  sub_100027F2C(&qword_1001FBDB0, &qword_1001FBD70);
  sub_10002DE2C();
  uint64_t v26 = v72;
  View.buttonStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v26);
  uint64_t v27 = v63;
  uint64_t v28 = *(void (**)(char *, char *, uint64_t))(v73 + 32);
  uint64_t v72 = (uint64_t)v22;
  uint64_t v29 = v20;
  v28(v22, v20, v74);
  uint64_t v30 = v59;
  Divider.init()();
  static Alignment.center.getter();
  BOOL v31 = 1;
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v32 = v62;
  uint64_t v33 = (uint64_t)v64;
  (*(void (**)(char *, char *, char *))(v62 + 16))(v12, v30, v64);
  uint64_t v34 = (uint64_t)v60;
  uint64_t v35 = &v12[*(int *)(v61 + 44)];
  long long v36 = v79;
  *(_OWORD *)uint64_t v35 = v78;
  *((_OWORD *)v35 + 1) = v36;
  *((_OWORD *)v35 + 2) = v80;
  (*(void (**)(char *, uint64_t))(v32 + 8))(v30, v33);
  uint64_t v64 = v12;
  uint64_t v37 = v34;
  sub_100026FD0((uint64_t)v12, v34, &qword_1001FBD88);
  uint64_t v75 = a1;
  sub_1000063C0(&qword_100205078);
  sub_100027F2C(&qword_100205080, &qword_100205078);
  Section<>.init(content:)();
  long long v76 = v82;
  sub_1000063C0(&qword_100200808);
  State.wrappedValue.getter();
  uint64_t v38 = v77;
  swift_getKeyPath();
  *(void *)&long long v76 = v38;
  sub_10015D65C((unint64_t *)&qword_1001FD2A0, (void (*)(uint64_t))type metadata accessor for ToolModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  LOBYTE(v33) = *(unsigned char *)(v38 + 88);
  swift_release();
  if ((v33 & 1) == 0)
  {
    long long v76 = v82;
    State.wrappedValue.getter();
    uint64_t v39 = v77;
    swift_getKeyPath();
    *(void *)&long long v76 = v39;
    sub_10015D65C((unint64_t *)&unk_100201540, (void (*)(uint64_t))type metadata accessor for RewritingModel);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v40 = *(void *)(v39 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__session);
    swift_release();
    BOOL v31 = v40 == 0;
  }
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v42 = swift_allocObject();
  *(unsigned char *)(v42 + 16) = v31;
  uint64_t v43 = v67;
  uint64_t v44 = (uint64_t)v65;
  uint64_t v45 = v68;
  (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v65, v27, v68);
  char v46 = (uint64_t *)(v44 + *(int *)(v66 + 36));
  *char v46 = KeyPath;
  v46[1] = (uint64_t)sub_100040414;
  void v46[2] = v42;
  (*(void (**)(char *, uint64_t))(v43 + 8))(v27, v45);
  uint64_t v47 = v69;
  sub_100026FD0(v44, v69, &qword_100205070);
  uint64_t v48 = v73;
  uint64_t v49 = *(void (**)(char *, uint64_t, uint64_t))(v73 + 16);
  char v50 = v29;
  char v51 = v29;
  uint64_t v52 = v74;
  v49(v51, v72, v74);
  uint64_t v53 = (uint64_t)v64;
  sub_100008DD4(v37, (uint64_t)v64, &qword_1001FBD88);
  uint64_t v54 = v70;
  sub_100008DD4(v47, v70, &qword_100205070);
  char v55 = v71;
  v49(v71, (uint64_t)v50, v52);
  uint64_t v56 = sub_1000063C0(&qword_100205088);
  sub_100008DD4(v53, (uint64_t)&v55[*(int *)(v56 + 48)], &qword_1001FBD88);
  sub_100008DD4(v54, (uint64_t)&v55[*(int *)(v56 + 64)], &qword_100205070);
  sub_10002784C(v47, &qword_100205070);
  sub_10002784C(v37, &qword_1001FBD88);
  uint64_t v57 = *(void (**)(uint64_t, uint64_t))(v48 + 8);
  v57(v72, v52);
  sub_10002784C(v54, &qword_100205070);
  sub_10002784C(v53, &qword_1001FBD88);
  return ((uint64_t (*)(char *, uint64_t))v57)(v50, v52);
}

uint64_t sub_10015A01C@<X0>(long long *a1@<X0>, void (**a2)(char *, char *)@<X8>)
{
  uint64_t v93 = a2;
  uint64_t v3 = sub_1000063C0(&qword_1001FBDE0);
  uint64_t v90 = *(void *)(v3 - 8);
  uint64_t v91 = v3;
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v84 = (char *)&v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v83 = (char *)&v73 - v6;
  uint64_t v7 = sub_1000063C0(&qword_1001FBDE8);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v92 = (uint64_t)&v73 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  int v89 = (char *)&v73 - v10;
  uint64_t v11 = type metadata accessor for ButtonToggleStyle();
  uint64_t v12 = *(char **)(v11 - 8);
  uint64_t v87 = (char *)v11;
  uint64_t v88 = (void (**)(char *, char *))v12;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1000063C0(&qword_1001FBDF0);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v85 = v15;
  uint64_t v86 = v16;
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v73 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1000063C0(&qword_1001FBDF8);
  uint64_t v94 = *(void *)(v19 - 8);
  uint64_t v95 = v19;
  uint64_t v20 = __chkstk_darwin(v19);
  double v22 = (void (**)(char *, char *))((char *)&v73 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v20);
  uint64_t v24 = (char *)&v73 - v23;
  long long v121 = *a1;
  long long v97 = *a1;
  uint64_t v82 = sub_1000063C0(&qword_100200808);
  State.projectedValue.getter();
  long long v25 = v108;
  uint64_t v26 = v109;
  swift_getKeyPath();
  long long v108 = v25;
  *(void *)&long long v109 = v26;
  sub_1000063C0(&qword_100205090);
  Binding.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1000063C0(&qword_1001FBE08);
  sub_10002E024();
  Toggle.init(isOn:label:)();
  ButtonToggleStyle.init()();
  sub_100027F2C(&qword_1001FBE18, &qword_1001FBDF0);
  sub_10015D65C(&qword_1001FBE20, (void (*)(uint64_t))&type metadata accessor for ButtonToggleStyle);
  uint64_t v27 = v85;
  uint64_t v28 = v87;
  View.toggleStyle<A>(_:)();
  v88[1](v14, v28);
  (*(void (**)(char *, uint64_t))(v86 + 8))(v18, v27);
  uint64_t v29 = *(void (**)(char *, void (**)(char *, char *), uint64_t))(v94 + 32);
  uint64_t v87 = v24;
  uint64_t v88 = v22;
  v29(v24, v22, v95);
  uint64_t v30 = type metadata accessor for FeedbackFeatureFlags();
  *((void *)&v109 + 1) = v30;
  uint64_t v110 = sub_10015D65C((unint64_t *)&unk_1001FDED0, (void (*)(uint64_t))&type metadata accessor for FeedbackFeatureFlags);
  BOOL v31 = sub_10002E148((uint64_t *)&v108);
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v30 - 8) + 104))(v31, enum case for FeedbackFeatureFlags.CentralizedFeedback(_:), v30);
  LOBYTE(v30) = isFeatureEnabled(_:)();
  sub_100027DBC((uint64_t)&v108);
  if (v30)
  {
    long long v108 = v121;
    State.wrappedValue.getter();
    uint64_t v32 = v97;
    swift_getKeyPath();
    *(void *)&long long v108 = v32;
    uint64_t v33 = sub_10015D65C((unint64_t *)&qword_1001FD2A0, (void (*)(uint64_t))type metadata accessor for ToolModel);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v34 = *(void *)(v32 + 48);
    uint64_t v35 = *(void *)(v32 + 64);
    int v36 = *(unsigned __int8 *)(v32 + 72);
    uint64_t v85 = *(void *)(v32 + 56);
    uint64_t v86 = v34;
    uint64_t v81 = v35;
    int v80 = v36;
    sub_1000272F8(v34, v85, v35, v36);
    swift_release();
    long long v108 = v121;
    State.wrappedValue.getter();
    uint64_t v37 = v97;
    swift_getKeyPath();
    *(void *)&long long v108 = v37;
    uint64_t v73 = v33;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v38 = *(void *)(v37 + 40);
    uint64_t v78 = *(void *)(v37 + 32);
    uint64_t v79 = v38;
    swift_bridgeObjectRetain();
    swift_release();
    long long v108 = v121;
    State.wrappedValue.getter();
    uint64_t v39 = v97;
    swift_getKeyPath();
    *(void *)&long long v108 = v39;
    sub_10015D65C((unint64_t *)&unk_100201540, (void (*)(uint64_t))type metadata accessor for RewritingModel);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v40 = *(void *)(v39 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__inputStringForFeedback + 8);
    uint64_t v76 = *(void *)(v39 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__inputStringForFeedback);
    uint64_t v77 = v40;
    swift_bridgeObjectRetain();
    swift_release();
    long long v108 = v121;
    State.wrappedValue.getter();
    uint64_t v41 = v97;
    swift_getKeyPath();
    *(void *)&long long v108 = v41;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v42 = *(void **)(v41 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__resultAttributedString);
    if (v42)
    {
      id v43 = v42;
      id v44 = [v43 string];
      uint64_t v45 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v74 = v46;
      uint64_t v75 = v45;
      swift_release();
    }
    else
    {
      swift_release();
      unint64_t v74 = 0xE000000000000000;
      uint64_t v75 = 0;
    }
    long long v108 = v121;
    State.wrappedValue.getter();
    uint64_t v48 = v97;
    swift_getKeyPath();
    *(void *)&long long v108 = v48;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v50 = *(void *)(v48 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__modelInfoString);
    uint64_t v49 = *(void *)(v48 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__modelInfoString + 8);
    swift_bridgeObjectRetain();
    swift_release();
    long long v108 = v121;
    State.wrappedValue.getter();
    uint64_t v51 = v97;
    swift_getKeyPath();
    *(void *)&long long v108 = v51;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v52 = *(void *)(v51 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__session);
    swift_release();
    if (v52)
    {
      long long v108 = v121;
      State.wrappedValue.getter();
      uint64_t v53 = v97;
      swift_getKeyPath();
      *(void *)&long long v108 = v53;
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      char v54 = *(unsigned char *)(v53 + 88);
      swift_release();
    }
    else
    {
      char v54 = 1;
    }
    uint64_t v56 = v90;
    uint64_t v55 = v91;
    uint64_t v57 = v89;
    *(void *)&long long v97 = 0x3FF0000000000000;
    State.init(wrappedValue:)();
    long long v58 = v108;
    *(void *)&long long v108 = 0;
    *((void *)&v108 + 1) = v78;
    *(void *)&long long v109 = v79;
    *((void *)&v109 + 1) = v76;
    uint64_t v110 = v77;
    uint64_t v111 = 0;
    *(void *)&long long v112 = 0;
    *((void *)&v112 + 1) = v75;
    *(void *)&long long v113 = v74;
    *((void *)&v113 + 1) = v50;
    *(void *)&long long v114 = v49;
    *((void *)&v114 + 1) = _swiftEmptyArrayStorage;
    *(void *)&long long v115 = _swiftEmptyArrayStorage;
    *((void *)&v115 + 1) = _swiftEmptyArrayStorage;
    *(void *)&long long v116 = v86;
    *((void *)&v116 + 1) = v85;
    *(void *)&long long v117 = v81;
    BYTE8(v117) = v80;
    BYTE9(v117) = v54;
    WORD5(v117) = 0;
    BYTE12(v117) = 0;
    uint64_t v118 = 0;
    uint64_t v119 = 0;
    long long v120 = v58;
    long long v105 = v117;
    long long v106 = 0u;
    long long v107 = v58;
    long long v101 = v113;
    long long v102 = v114;
    long long v103 = v115;
    long long v104 = v116;
    long long v97 = v108;
    long long v98 = v109;
    long long v99 = (unint64_t)v77;
    long long v100 = v112;
    __int16 v96 = 0;
    sub_10002E1CC();
    sub_10002DE2C();
    uint64_t v59 = v84;
    View.buttonStyle<A>(_:)();
    sub_10002E220((uint64_t)&v108);
    uint64_t v60 = *(void (**)(char *, char *, uint64_t))(v56 + 32);
    uint64_t v61 = v83;
    v60(v83, v59, v55);
    uint64_t v47 = (uint64_t)v57;
    v60(v57, v61, v55);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v56 + 56))(v57, 0, 1, v55);
  }
  else
  {
    uint64_t v47 = (uint64_t)v89;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v90 + 56))(v89, 1, 1, v91);
  }
  uint64_t v63 = v94;
  uint64_t v62 = v95;
  uint64_t v64 = *(void (**)(void (**)(char *, char *), char *, uint64_t))(v94 + 16);
  uint64_t v65 = v87;
  uint64_t v66 = v88;
  v64(v88, v87, v95);
  uint64_t v67 = v92;
  sub_100008DD4(v47, v92, &qword_1001FBDE8);
  uint64_t v68 = v47;
  uint64_t v69 = v93;
  v64(v93, (char *)v66, v62);
  uint64_t v70 = sub_1000063C0(&qword_1001FBE28);
  sub_100008DD4(v67, (uint64_t)v69 + *(int *)(v70 + 48), &qword_1001FBDE8);
  sub_10002784C(v68, &qword_1001FBDE8);
  uint64_t v71 = *(void (**)(char *, uint64_t))(v63 + 8);
  v71(v65, v62);
  sub_10002784C(v67, &qword_1001FBDE8);
  return ((uint64_t (*)(void, uint64_t))v71)(v66, v62);
}

uint64_t sub_10015AB84@<X0>(uint64_t a1@<X8>)
{
  uint64_t v25 = a1;
  uint64_t v1 = type metadata accessor for IconOnlyLabelStyle();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000063C0(&qword_1001FBBC0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000063C0(&qword_1001FBE40);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  Label.init(title:icon:)();
  IconOnlyLabelStyle.init()();
  sub_100027F2C((unint64_t *)&unk_1001FD5A0, &qword_1001FBBC0);
  sub_10015D65C(&qword_1001FDA20, (void (*)(uint64_t))&type metadata accessor for IconOnlyLabelStyle);
  View.labelStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  LOBYTE(v8) = static Edge.Set.horizontal.getter();
  EdgeInsets.init(_all:)();
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  uint64_t v20 = v19;
  uint64_t v21 = v25;
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 16))(v25, v12, v9);
  uint64_t v22 = v21 + *(int *)(sub_1000063C0(&qword_1001FBE08) + 36);
  *(unsigned char *)uint64_t v22 = (_BYTE)v8;
  *(void *)(v22 + 8) = v14;
  *(void *)(v22 + 16) = v16;
  *(void *)(v22 + 24) = v18;
  *(void *)(v22 + 32) = v20;
  *(unsigned char *)(v22 + 40) = 0;
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_10015AED8@<X0>(uint64_t a1@<X8>)
{
  return sub_10003DAF8(a1);
}

uint64_t sub_10015AEFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v99 = a2;
  uint64_t v95 = sub_1000063C0(&qword_1001FBD70);
  uint64_t v93 = *(void *)(v95 - 8);
  __chkstk_darwin(v95);
  uint64_t v92 = (char *)&v79 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = sub_1000063C0(&qword_1001FBD78);
  uint64_t v97 = *(void *)(v98 - 8);
  uint64_t v4 = __chkstk_darwin(v98);
  __int16 v96 = (char *)&v79 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v94 = (char *)&v79 - v6;
  uint64_t v90 = type metadata accessor for Divider();
  uint64_t v89 = *(void *)(v90 - 8);
  __chkstk_darwin(v90);
  uint64_t v88 = (char *)&v79 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = sub_1000063C0(&qword_1001FBD88);
  uint64_t v8 = __chkstk_darwin(v87);
  uint64_t v102 = (uint64_t)&v79 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v103 = (uint64_t)&v79 - v10;
  uint64_t v84 = type metadata accessor for IconOnlyLabelStyle();
  uint64_t v83 = *(void *)(v84 - 8);
  __chkstk_darwin(v84);
  uint64_t v12 = (char *)&v79 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = sub_1000063C0(&qword_100204FF0);
  __chkstk_darwin(v80);
  uint64_t v14 = (char *)&v79 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1000063C0(&qword_100204FF8);
  uint64_t v85 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v79 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = sub_1000063C0(&qword_100205000);
  __chkstk_darwin(v81);
  uint64_t v19 = (char *)&v79 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = sub_1000063C0(&qword_100205008);
  uint64_t v20 = *(void *)(v86 - 8);
  __chkstk_darwin(v86);
  uint64_t v82 = (uint64_t)&v79 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1000063C0(&qword_100205010);
  uint64_t v23 = __chkstk_darwin(v22 - 8);
  uint64_t v91 = (uint64_t)&v79 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v104 = (uint64_t)&v79 - v25;
  long long v111 = *(_OWORD *)a1;
  long long v107 = *(_OWORD *)a1;
  uint64_t v100 = sub_1000063C0(&qword_100200808);
  State.wrappedValue.getter();
  uint64_t v26 = v110;
  swift_getKeyPath();
  *(void *)&long long v107 = v26;
  uint64_t v101 = sub_10015D65C((unint64_t *)&qword_1001FD2A0, (void (*)(uint64_t))type metadata accessor for ToolModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  if (!*(unsigned char *)(v26 + 72))
  {
    if (*(unsigned __int8 *)(v26 + 48) - 2 < 4 || !*(unsigned char *)(v26 + 48))
    {
      uint64_t v79 = v15;
      swift_release();
      long long v107 = v111;
      State.wrappedValue.getter();
      uint64_t v31 = v110;
      swift_getKeyPath();
      *(void *)&long long v107 = v31;
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      char v32 = *(unsigned char *)(v31 + 88);
      swift_release();
      if (v32)
      {
        char v33 = 1;
      }
      else
      {
        long long v107 = v111;
        State.wrappedValue.getter();
        uint64_t v34 = v110;
        swift_getKeyPath();
        *(void *)&long long v107 = v34;
        sub_10015D65C((unint64_t *)&unk_100201540, (void (*)(uint64_t))type metadata accessor for RewritingModel);
        ObservationRegistrar.access<A, B>(_:keyPath:)();
        swift_release();
        char v33 = *(unsigned char *)(v34 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__showingOriginal);
        swift_release();
      }
      *(void *)uint64_t v14 = static VerticalAlignment.center.getter();
      *((void *)v14 + 1) = 0x4030000000000000;
      v14[16] = 0;
      uint64_t v35 = sub_1000063C0(&qword_100205020);
      sub_10015BC74(a1, v33, (uint64_t)&v14[*(int *)(v35 + 44)]);
      IconOnlyLabelStyle.init()();
      sub_100027F2C(&qword_100205028, &qword_100204FF0);
      sub_10015D65C(&qword_1001FDA20, (void (*)(uint64_t))&type metadata accessor for IconOnlyLabelStyle);
      uint64_t v36 = v84;
      View.labelStyle<A>(_:)();
      (*(void (**)(char *, uint64_t))(v83 + 8))(v12, v36);
      sub_10002784C((uint64_t)v14, &qword_100204FF0);
      uint64_t KeyPath = swift_getKeyPath();
      uint64_t v38 = swift_allocObject();
      *(unsigned char *)(v38 + 16) = v33;
      uint64_t v39 = v85;
      uint64_t v40 = v79;
      (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v19, v17, v79);
      uint64_t v41 = (uint64_t *)&v19[*(int *)(v81 + 36)];
      uint64_t *v41 = KeyPath;
      v41[1] = (uint64_t)sub_100026D50;
      void v41[2] = v38;
      (*(void (**)(char *, uint64_t))(v39 + 8))(v17, v40);
      char v42 = static Edge.Set.trailing.getter();
      EdgeInsets.init(_all:)();
      uint64_t v44 = v43;
      uint64_t v46 = v45;
      uint64_t v48 = v47;
      uint64_t v50 = v49;
      uint64_t v51 = v82;
      sub_100008DD4((uint64_t)v19, v82, &qword_100205000);
      uint64_t v30 = v86;
      uint64_t v52 = v51 + *(int *)(v86 + 36);
      *(unsigned char *)uint64_t v52 = v42;
      *(void *)(v52 + 8) = v44;
      *(void *)(v52 + 16) = v46;
      *(void *)(v52 + 24) = v48;
      *(void *)(v52 + 32) = v50;
      *(unsigned char *)(v52 + 40) = 0;
      sub_10002784C((uint64_t)v19, &qword_100205000);
      uint64_t v29 = v104;
      sub_100026FD0(v51, v104, &qword_100205008);
      uint64_t v28 = 0;
      goto LABEL_10;
    }
LABEL_3:
    swift_release();
    uint64_t v28 = 1;
    uint64_t v29 = v104;
    uint64_t v30 = v86;
LABEL_10:
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56))(v29, v28, 1, v30);
    sub_100026FD0((uint64_t)&v111 + 8, (uint64_t)v112, &qword_100204F80);
    uint64_t v53 = v88;
    Divider.init()();
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    uint64_t v54 = v89;
    uint64_t v55 = v102;
    uint64_t v56 = v90;
    (*(void (**)(uint64_t, char *, uint64_t))(v89 + 16))(v102, v53, v90);
    uint64_t v57 = (_OWORD *)(v55 + *(int *)(v87 + 36));
    long long v58 = v108;
    *uint64_t v57 = v107;
    v57[1] = v58;
    _OWORD v57[2] = v109;
    (*(void (**)(char *, uint64_t))(v54 + 8))(v53, v56);
    uint64_t v59 = v55;
    uint64_t v60 = v103;
    sub_100026FD0(v59, v103, &qword_1001FBD88);
    long long v110 = *(_OWORD *)(a1 + 16);
    uint64_t v61 = *(void *)(a1 + 32);
    uint64_t v62 = (_OWORD *)swift_allocObject();
    long long v63 = *(_OWORD *)(a1 + 16);
    v62[1] = *(_OWORD *)a1;
    v62[2] = v63;
    v62[3] = *(_OWORD *)(a1 + 32);
    swift_retain();
    sub_10005CF60((uint64_t)v112);
    sub_100133230((uint64_t)&v110);
    sub_10004EF18(v61);
    sub_1000063C0(&qword_1001FBDA0);
    sub_10002DED0();
    uint64_t v64 = v92;
    Button.init(action:label:)();
    long long v105 = v111;
    State.wrappedValue.getter();
    uint64_t v65 = v106;
    swift_getKeyPath();
    *(void *)&long long v105 = v65;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    unsigned __int8 v66 = *(unsigned char *)(v65 + 88);
    swift_release();
    LOWORD(v105) = v66;
    sub_100027F2C(&qword_1001FBDB0, &qword_1001FBD70);
    sub_10002DE2C();
    uint64_t v67 = v96;
    uint64_t v68 = v95;
    View.buttonStyle<A>(_:)();
    (*(void (**)(char *, uint64_t))(v93 + 8))(v64, v68);
    uint64_t v69 = v97;
    uint64_t v70 = v94;
    uint64_t v71 = v98;
    (*(void (**)(char *, char *, uint64_t))(v97 + 32))(v94, v67, v98);
    uint64_t v72 = v91;
    sub_100008DD4(v104, v91, &qword_100205010);
    uint64_t v73 = v60;
    uint64_t v74 = v102;
    sub_100008DD4(v73, v102, &qword_1001FBD88);
    uint64_t v75 = *(void (**)(char *, char *, uint64_t))(v69 + 16);
    v75(v67, v70, v71);
    uint64_t v76 = v99;
    sub_100008DD4(v72, v99, &qword_100205010);
    uint64_t v77 = sub_1000063C0(&qword_100205018);
    sub_100008DD4(v74, v76 + *(int *)(v77 + 48), &qword_1001FBD88);
    v75((char *)(v76 + *(int *)(v77 + 64)), v67, v71);
    uint64_t v78 = *(void (**)(char *, uint64_t))(v69 + 8);
    v78(v70, v71);
    sub_10002784C(v103, &qword_1001FBD88);
    sub_10002784C(v104, &qword_100205010);
    v78(v67, v71);
    sub_10002784C(v74, &qword_1001FBD88);
    return sub_10002784C(v72, &qword_100205010);
  }
  if (*(unsigned __int8 *)(v26 + 72) != 255) {
    goto LABEL_3;
  }
  __break(1u);
  return result;
}

uint64_t sub_10015BC74@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v30 = a3;
  uint64_t v5 = sub_1000063C0(&qword_1001FC850);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v29 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v29 - v9;
  uint64_t v11 = sub_1000063C0(&qword_100205030);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v29 - v15;
  long long v33 = *(_OWORD *)(a1 + 16);
  long long v31 = *(_OWORD *)(a1 + 16);
  sub_1000063C0(&qword_1001FB5A8);
  State.wrappedValue.getter();
  if (v32[0] == 1)
  {
    *(void *)uint64_t v16 = static VerticalAlignment.center.getter();
    *((void *)v16 + 1) = 0x4020000000000000;
    v16[16] = 0;
    uint64_t v17 = sub_1000063C0(&qword_100205048);
    sub_10015C054(a2 & 1, (long long *)a1, (uint64_t)&v16[*(int *)(v17 + 44)]);
    uint64_t v18 = sub_1000063C0(&qword_100205038);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v16, 0, 1, v18);
  }
  else
  {
    uint64_t v19 = sub_1000063C0(&qword_100205038);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v16, 1, 1, v19);
  }
  long long v31 = *(_OWORD *)a1;
  sub_100026FD0((uint64_t)&v31 + 8, (uint64_t)v32, &qword_100204F80);
  uint64_t v20 = *(void *)(a1 + 32);
  uint64_t v21 = (_OWORD *)swift_allocObject();
  long long v22 = *(_OWORD *)(a1 + 16);
  v21[1] = *(_OWORD *)a1;
  void v21[2] = v22;
  v21[3] = *(_OWORD *)(a1 + 32);
  swift_retain();
  sub_10005CF60((uint64_t)v32);
  sub_100133230((uint64_t)&v33);
  sub_10004EF18(v20);
  sub_1000063C0(&qword_1001FBBC0);
  sub_100027F2C((unint64_t *)&unk_1001FD5A0, &qword_1001FBBC0);
  Button.init(action:label:)();
  sub_100008DD4((uint64_t)v16, (uint64_t)v14, &qword_100205030);
  uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
  uint64_t v24 = v29;
  v23(v29, v10, v5);
  uint64_t v25 = v30;
  sub_100008DD4((uint64_t)v14, v30, &qword_100205030);
  uint64_t v26 = sub_1000063C0(&qword_100205040);
  v23((char *)(v25 + *(int *)(v26 + 48)), v24, v5);
  uint64_t v27 = *(void (**)(char *, uint64_t))(v6 + 8);
  v27(v10, v5);
  sub_10002784C((uint64_t)v16, &qword_100205030);
  v27(v24, v5);
  return sub_10002784C((uint64_t)v14, &qword_100205030);
}

uint64_t sub_10015C054@<X0>(char a1@<W0>, long long *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v51 = a3;
  uint64_t v43 = sub_1000063C0(&qword_1001FC850);
  uint64_t v48 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  uint64_t v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_1000063C0(&qword_1002033A8);
  uint64_t v7 = __chkstk_darwin(v52);
  uint64_t v50 = (uint64_t)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v49 = (char *)&v40 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v40 - v12;
  __chkstk_darwin(v11);
  uint64_t v53 = (uint64_t)&v40 - v14;
  if (a1)
  {
    BOOL v47 = 1;
    BOOL v15 = 1;
  }
  else
  {
    long long v55 = *a2;
    sub_1000063C0(&qword_100200808);
    State.wrappedValue.getter();
    uint64_t v16 = v54;
    swift_getKeyPath();
    *(void *)&long long v55 = v16;
    sub_10015D65C((unint64_t *)&unk_100201540, (void (*)(uint64_t))type metadata accessor for RewritingModel);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v17 = *(void *)(v16 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__undoCount);
    swift_release();
    long long v55 = *a2;
    State.wrappedValue.getter();
    uint64_t v18 = v54;
    swift_getKeyPath();
    *(void *)&long long v55 = v18;
    BOOL v15 = v17 == 0;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v19 = *(void *)(v18 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__redoCount);
    swift_release();
    BOOL v47 = v19 == 0;
  }
  long long v55 = *a2;
  uint64_t v46 = v55;
  sub_100026FD0((uint64_t)&v55 + 8, (uint64_t)v56, &qword_100204F80);
  long long v54 = a2[1];
  uint64_t v20 = *((void *)a2 + 4);
  uint64_t v44 = *((void *)a2 + 5);
  uint64_t v45 = v20;
  uint64_t v21 = (_OWORD *)swift_allocObject();
  long long v22 = a2[1];
  v21[1] = *a2;
  void v21[2] = v22;
  v21[3] = a2[2];
  swift_retain();
  sub_10005CF60((uint64_t)v56);
  sub_100133230((uint64_t)&v54);
  sub_10004EF18(v20);
  uint64_t v42 = sub_1000063C0(&qword_1001FBBC0);
  sub_100027F2C((unint64_t *)&unk_1001FD5A0, &qword_1001FBBC0);
  uint64_t v23 = v6;
  Button.init(action:label:)();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v25 = swift_allocObject();
  *(unsigned char *)(v25 + 16) = v15;
  uint64_t v26 = v48;
  uint64_t v41 = *(void (**)(char *, char *, uint64_t))(v48 + 16);
  uint64_t v27 = v43;
  v41(v13, v23, v43);
  uint64_t v28 = (uint64_t *)&v13[*(int *)(v52 + 36)];
  *uint64_t v28 = KeyPath;
  v28[1] = (uint64_t)sub_100040414;
  void v28[2] = v25;
  uint64_t v48 = *(void *)(v26 + 8);
  ((void (*)(char *, uint64_t))v48)(v23, v27);
  sub_100026FD0((uint64_t)v13, v53, &qword_1002033A8);
  uint64_t v29 = (_OWORD *)swift_allocObject();
  long long v30 = a2[1];
  v29[1] = *a2;
  void v29[2] = v30;
  v29[3] = a2[2];
  swift_retain();
  sub_10005CF60((uint64_t)v56);
  sub_100133230((uint64_t)&v54);
  sub_10004EF18(v45);
  Button.init(action:label:)();
  uint64_t v31 = swift_getKeyPath();
  uint64_t v32 = swift_allocObject();
  *(unsigned char *)(v32 + 16) = v47;
  uint64_t v33 = (uint64_t)v49;
  v41(v49, v23, v27);
  uint64_t v34 = (uint64_t *)(v33 + *(int *)(v52 + 36));
  *uint64_t v34 = v31;
  v34[1] = (uint64_t)sub_100040414;
  v34[2] = v32;
  ((void (*)(char *, uint64_t))v48)(v23, v27);
  sub_100026FD0(v33, (uint64_t)v13, &qword_1002033A8);
  uint64_t v35 = v53;
  sub_100008DD4(v53, v33, &qword_1002033A8);
  uint64_t v36 = v50;
  sub_100008DD4((uint64_t)v13, v50, &qword_1002033A8);
  uint64_t v37 = v51;
  sub_100008DD4(v33, v51, &qword_1002033A8);
  uint64_t v38 = sub_1000063C0(&qword_100205050);
  sub_100008DD4(v36, v37 + *(int *)(v38 + 48), &qword_1002033A8);
  sub_10002784C((uint64_t)v13, &qword_1002033A8);
  sub_10002784C(v35, &qword_1002033A8);
  sub_10002784C(v36, &qword_1002033A8);
  return sub_10002784C(v33, &qword_1002033A8);
}

uint64_t sub_10015C688(uint64_t a1, void (*a2)(uint64_t))
{
  sub_1000063C0(&qword_100200808);
  uint64_t v3 = State.wrappedValue.getter();
  a2(v3);
  return swift_release();
}

uint64_t sub_10015C6E4(long long *a1)
{
  uint64_t v2 = sub_1000063C0(&qword_1001FF820);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v12[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  long long v13 = a1[1];
  long long v11 = a1[1];
  v12[0] = 1;
  sub_1000063C0(&qword_1001FB5A8);
  State.wrappedValue.setter();
  uint64_t v5 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  type metadata accessor for MainActor();
  long long v11 = *a1;
  sub_100026FD0((uint64_t)&v11 + 8, (uint64_t)v12, &qword_100204F80);
  uint64_t v6 = *((void *)a1 + 4);
  swift_retain();
  sub_10005CF60((uint64_t)v12);
  sub_100133230((uint64_t)&v13);
  sub_10004EF18(v6);
  uint64_t v7 = static MainActor.shared.getter();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v7;
  *(void *)(v8 + 24) = &protocol witness table for MainActor;
  long long v9 = a1[1];
  *(_OWORD *)(v8 + 32) = *a1;
  *(_OWORD *)(v8 + 48) = v9;
  *(_OWORD *)(v8 + 64) = a1[2];
  sub_1001228D0((uint64_t)v4, (uint64_t)&unk_100205060, v8);
  return swift_release();
}

uint64_t sub_10015C88C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a4;
  type metadata accessor for MainActor();
  v4[6] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[7] = v6;
  v4[8] = v5;
  return _swift_task_switch(sub_10015C924, v6, v5);
}

uint64_t sub_10015C924()
{
  *(_OWORD *)(v0 + 16) = *(_OWORD *)*(void *)(v0 + 40);
  sub_1000063C0(&qword_100200808);
  State.wrappedValue.getter();
  *(void *)(v0 + 72) = *(void *)(v0 + 32);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10001EB1C;
  return sub_10009E5D4(0, 0);
}

uint64_t sub_10015C9E8()
{
  return Label.init(title:icon:)();
}

uint64_t sub_10015CA3C(long long *a1, char a2)
{
  sub_1000063C0(&qword_100200808);
  State.wrappedValue.getter();
  sub_1000A8AE0(a2, 0, 0);
  swift_release();
  long long v6 = *a1;
  State.wrappedValue.getter();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  uint64_t result = swift_release();
  if (Strong)
  {
    [Strong endWritingTools:v6];
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_10015CB00(uint64_t a1)
{
  v1[5] = a1;
  type metadata accessor for MainActor();
  v1[6] = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[7] = v3;
  v1[8] = v2;
  return _swift_task_switch(sub_10015CB98, v3, v2);
}

uint64_t sub_10015CB98()
{
  *(_OWORD *)(v0 + 16) = *(_OWORD *)*(void *)(v0 + 40);
  sub_1000063C0(&qword_100200808);
  State.wrappedValue.getter();
  *(void *)(v0 + 72) = *(void *)(v0 + 32);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1000136C0;
  return sub_10009E5D4(1, 0);
}

unsigned char *sub_10015CC5C(unsigned char *result, unsigned char *a2, long long *a3)
{
  if ((*result & 1) == 0)
  {
    if (*a2)
    {
      long long v18 = *a3;
      long long v12 = *a3;
      sub_1000063C0(&qword_100200808);
      State.wrappedValue.getter();
      uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
      uint64_t result = (unsigned char *)swift_release();
      if (Strong)
      {
        if (objc_msgSend(Strong, "respondsToSelector:", "showAlertWithTitle:message:buttonTitle:buttonAction:", v12))
        {
          sub_100026FD0((uint64_t)&v18 + 8, (uint64_t)v19, &qword_100204F80);
          *(void *)&long long v12 = 0;
          *((void *)&v12 + 1) = 0xE000000000000000;
          _StringGuts.grow(_:)(44);
          swift_bridgeObjectRelease();
          long long v17 = a3[1];
          uint64_t v5 = *((void *)a3 + 4);
          long long v6 = (_OWORD *)swift_allocObject();
          long long v7 = a3[1];
          v6[1] = *a3;
          _OWORD v6[2] = v7;
          v6[3] = a3[2];
          swift_retain();
          sub_10005CF60((uint64_t)v19);
          sub_100133230((uint64_t)&v17);
          sub_10004EF18(v5);
          NSString v8 = String._bridgeToObjectiveC()();
          NSString v9 = String._bridgeToObjectiveC()();
          NSString v10 = String._bridgeToObjectiveC()();
          BOOL v15 = sub_10015D38C;
          uint64_t v16 = v6;
          *(void *)&long long v12 = _NSConcreteStackBlock;
          *((void *)&v12 + 1) = 1107296256;
          long long v13 = sub_100048B2C;
          uint64_t v14 = &unk_1001F07C0;
          long long v11 = _Block_copy(&v12);
          swift_retain();
          [Strong showAlertWithTitle:v8 message:v9 buttonTitle:v10 buttonAction:v11];
          _Block_release(v11);

          swift_release();
          swift_unknownObjectRelease();
          return (unsigned char *)swift_release();
        }
        else
        {
          return (unsigned char *)swift_unknownObjectRelease();
        }
      }
    }
  }
  return result;
}

uint64_t sub_10015CEC8(uint64_t a1)
{
  sub_1000063C0(&qword_100200808);
  State.wrappedValue.getter();
  swift_getKeyPath();
  sub_10015D65C((unint64_t *)&unk_100201540, (void (*)(uint64_t))type metadata accessor for RewritingModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (*(void *)(v8 + OBJC_IVAR____TtC21WritingToolsUIService14RewritingModel__task))
  {
    swift_retain();
    Task.cancel()();
    swift_release();
  }
  uint64_t KeyPath = swift_getKeyPath();
  __chkstk_darwin(KeyPath);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  uint64_t result = swift_release();
  uint64_t v4 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  if (v4)
  {
    State.wrappedValue.getter();
    uint64_t v5 = sub_10009D39C();
    uint64_t v7 = v6;
    swift_release();
    v4(v5, v7);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10015D0B4@<X0>(uint64_t a1@<X8>)
{
  return sub_1001589B4(a1);
}

uint64_t sub_10015D0F4()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_100027FEC;
  return sub_10015CB00(v0 + 16);
}

unsigned char *sub_10015D194(unsigned char *a1, unsigned char *a2)
{
  return sub_10015CC5C(a1, a2, (long long *)(v2 + 16));
}

unint64_t sub_10015D19C()
{
  unint64_t result = qword_100204F90;
  if (!qword_100204F90)
  {
    sub_100006C14(&qword_1001FBC50);
    sub_10015D218();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100204F90);
  }
  return result;
}

unint64_t sub_10015D218()
{
  unint64_t result = qword_100204F98;
  if (!qword_100204F98)
  {
    sub_100006C14(&qword_1001FBC48);
    sub_10015D2C4();
    sub_10015D65C(&qword_1001FB4F0, (void (*)(uint64_t))&type metadata accessor for _TaskModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100204F98);
  }
  return result;
}

unint64_t sub_10015D2C4()
{
  unint64_t result = qword_100204FA0;
  if (!qword_100204FA0)
  {
    sub_100006C14(&qword_100204F70);
    sub_100027F2C(&qword_1001FBE60, &qword_1001FBE68);
    sub_100027F2C(&qword_100204FA8, &qword_100204FB0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100204FA0);
  }
  return result;
}

uint64_t sub_10015D38C()
{
  return sub_10015CEC8(v0 + 16);
}

uint64_t sub_10015D394(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10015D3A4()
{
  return swift_release();
}

uint64_t sub_10015D3C8()
{
  return sub_10015CA3C((long long *)(v0 + 16), 2);
}

uint64_t sub_10015D400()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_10015D414()
{
  return sub_10015C6E4((long long *)(v0 + 16));
}

uint64_t sub_10015D430()
{
  return sub_10015C688(v0 + 16, (void (*)(uint64_t))sub_1000A8D9C);
}

uint64_t sub_10015D460()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_10015D474()
{
  return sub_10015C688(v0 + 16, (void (*)(uint64_t))sub_1000A8FB4);
}

uint64_t sub_10015D4A4()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_10015D4B4()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  if (*(void *)(v0 + 64)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 80, 7);
}

uint64_t sub_10015D514(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_100027204;
  return sub_10015C88C(a1, v4, v5, v1 + 32);
}

uint64_t sub_10015D5CC()
{
  swift_release();
  swift_release();
  swift_release();
  if (*(void *)(v0 + 48)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_10015D624()
{
  return sub_10015CA3C((long long *)(v0 + 16), 0);
}

uint64_t sub_10015D644@<X0>(void (**a1)(char *, char *)@<X8>)
{
  return sub_10015A01C(*(long long **)(v1 + 16), a1);
}

uint64_t sub_10015D64C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_10015D65C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10015D6C4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10015D734(char a1)
{
  uint64_t v11 = sub_10015E070(a1);
  swift_bridgeObjectRetain();
  v2._countAndFlagsBits = 2570;
  v2._object = (void *)0xE200000000000000;
  String.append(_:)(v2);
  swift_bridgeObjectRelease();
  if (qword_1001FADE8 != -1) {
    swift_once();
  }
  Swift::String v10 = (Swift::String)xmmword_100212B78;
  swift_bridgeObjectRetain();
  v3._countAndFlagsBits = 2570;
  v3._object = (void *)0xE200000000000000;
  String.append(_:)(v3);
  String.append(_:)(v10);
  swift_bridgeObjectRelease();
  uint64_t v4 = sub_10015E694(a1);
  sub_1001616F0(v4);
  swift_bridgeObjectRelease();
  sub_1000063C0(&qword_1001FBE30);
  sub_100027F2C(&qword_1001FEDF0, &qword_1001FBE30);
  uint64_t v5 = BidirectionalCollection<>.joined(separator:)();
  uint64_t v7 = v6;
  swift_bridgeObjectRelease();
  v8._countAndFlagsBits = v5;
  v8._object = v7;
  String.append(_:)(v8);
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_10015D8A8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for JSONEncoder.OutputFormatting();
  __chkstk_darwin(v2);
  type metadata accessor for JSONEncoder();
  swift_allocObject();
  JSONEncoder.init()();
  sub_1000063C0(&qword_1001FCA38);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_10018A740;
  static JSONEncoder.OutputFormatting.prettyPrinted.getter();
  static JSONEncoder.OutputFormatting.sortedKeys.getter();
  *(void *)&long long v22 = v3;
  sub_1001617FC((unint64_t *)&qword_1001FCA40, (void (*)(uint64_t))&type metadata accessor for JSONEncoder.OutputFormatting);
  sub_1000063C0(&qword_1001FCA48);
  sub_100027F2C(&qword_1001FCA50, &qword_1001FCA48);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  dispatch thunk of JSONEncoder.outputFormatting.setter();
  long long v4 = v1[1];
  long long v22 = *v1;
  long long v23 = v4;
  long long v24 = v1[2];
  sub_100089180();
  uint64_t v5 = dispatch thunk of JSONEncoder.encode<A>(_:)();
  unint64_t v7 = v6;
  uint64_t v8 = v5;
  switch(v6 >> 62)
  {
    case 1uLL:
      if (v5 >> 32 < (int)v5) {
        __break(1u);
      }
      sub_100044630(v5, v6);
      swift_retain();
      uint64_t v11 = sub_100084E0C((int)v8, v8 >> 32, v7 & 0x3FFFFFFFFFFFFFFFLL, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_100085078);
      uint64_t v16 = v15;
      sub_1000446E8(v8, v7);
      if (v16) {
        goto LABEL_16;
      }
      goto LABEL_9;
    case 2uLL:
      uint64_t v9 = *(void *)(v5 + 16);
      uint64_t v10 = *(void *)(v5 + 24);
      sub_100044630(v5, v6);
      swift_retain();
      swift_retain();
      uint64_t v11 = sub_100084E0C(v9, v10, v7 & 0x3FFFFFFFFFFFFFFFLL, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_100085078);
      uint64_t v13 = v12;
      swift_release();
      swift_release();
      if (v13) {
        goto LABEL_16;
      }
LABEL_9:
      uint64_t v20 = v8;
      unint64_t v21 = v7;
      sub_100044630(v8, v7);
      sub_1000063C0(&qword_1001FCA58);
      if (swift_dynamicCast())
      {
        sub_1000085E4(v18, (uint64_t)&v22);
        sub_100044740(&v22, *((uint64_t *)&v23 + 1));
        if (dispatch thunk of _HasContiguousBytes._providesContiguousBytesNoCopy.getter())
        {
          sub_100044740(&v22, *((uint64_t *)&v23 + 1));
          dispatch thunk of _HasContiguousBytes.withUnsafeBytes<A>(_:)();
          sub_1000446E8(v8, v7);
          uint64_t v11 = *(void *)&v18[0];
          sub_100027DBC((uint64_t)&v22);
          goto LABEL_17;
        }
        sub_100027DBC((uint64_t)&v22);
      }
      else
      {
        uint64_t v19 = 0;
        memset(v18, 0, sizeof(v18));
        sub_100044688((uint64_t)v18);
      }
      uint64_t v14 = sub_10008432C(v8, v7);
LABEL_15:
      uint64_t v11 = v14;
LABEL_16:
      sub_1000446E8(v8, v7);
LABEL_17:
      sub_1000446E8(v8, v7);
      swift_release();
      return v11;
    case 3uLL:
      *(void *)((char *)&v22 + 6) = 0;
      *(void *)&long long v22 = 0;
      goto LABEL_6;
    default:
      *(void *)&long long v22 = v5;
      WORD4(v22) = v6;
      BYTE10(v22) = BYTE2(v6);
      BYTE11(v22) = BYTE3(v6);
      BYTE12(v22) = BYTE4(v6);
      BYTE13(v22) = BYTE5(v6);
LABEL_6:
      uint64_t v14 = static String._fromUTF8Repairing(_:)();
      goto LABEL_15;
  }
}

uint64_t sub_10015DDC0(void *a1)
{
  uint64_t v3 = sub_1000063C0(&qword_1002050B8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100044740(a1, a1[3]);
  sub_1001619D8();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v8[15] = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v1)
  {
    v8[14] = 1;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    v8[13] = 2;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_10015DF48()
{
  uint64_t v1 = 0x6C616E696769726FLL;
  if (*v0 != 1) {
    uint64_t v1 = 0x646E756F72727573;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x74706D6F7270;
  }
}

uint64_t sub_10015DFB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100161C48(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10015DFDC(uint64_t a1)
{
  unint64_t v2 = sub_1001619D8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10015E018(uint64_t a1)
{
  unint64_t v2 = sub_1001619D8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10015E054(void *a1)
{
  return sub_10015DDC0(a1);
}

uint64_t sub_10015E070(char a1)
{
  _StringGuts.grow(_:)(4670);
  v2._countAndFlagsBits = 0xD000000000000145;
  v2._object = (void *)0x80000001001A1610;
  String.append(_:)(v2);
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v3 = 0xD0000000000000F3;
    }
    else {
      unint64_t v3 = 0xD000000000000061;
    }
    if (a1 == 1) {
      unint64_t v4 = 0x80000001001A28E0;
    }
    else {
      unint64_t v4 = 0x80000001001A1760;
    }
  }
  else
  {
    unint64_t v3 = 0xD000000000000096;
    unint64_t v4 = 0x80000001001A29E0;
  }
  unint64_t v5 = v4;
  String.append(_:)(*(Swift::String *)&v3);
  swift_bridgeObjectRelease();
  v6._countAndFlagsBits = 0xD00000000000027DLL;
  v6._object = (void *)0x80000001001A17D0;
  String.append(_:)(v6);
  v7._countAndFlagsBits = 0xD000000000000013;
  v7._object = (void *)0x800000010019D9C0;
  String.append(_:)(v7);
  v8._countAndFlagsBits = 0xD000000000000747;
  v8._object = (void *)0x80000001001A1A50;
  String.append(_:)(v8);
  v9._countAndFlagsBits = 0xD000000000000013;
  v9._object = (void *)0x800000010019D9C0;
  String.append(_:)(v9);
  v10._countAndFlagsBits = 0xD0000000000004D1;
  v10._object = (void *)0x80000001001A21A0;
  String.append(_:)(v10);
  v11._countAndFlagsBits = 0xD000000000000013;
  v11._object = (void *)0x800000010019D9C0;
  String.append(_:)(v11);
  v12._countAndFlagsBits = 0xD00000000000025CLL;
  v12._object = (void *)0x80000001001A2680;
  String.append(_:)(v12);
  return 0;
}

uint64_t sub_10015E208()
{
  long long v24 = _swiftEmptyArrayStorage;
  sub_100129188(0, 3, 0);
  uint64_t v0 = _swiftEmptyArrayStorage;
  unsigned __int8 v21 = 0;
  sub_10015E424(&v21, &v22);
  unint64_t v1 = v22;
  unint64_t v2 = v23;
  unint64_t v4 = _swiftEmptyArrayStorage[2];
  unint64_t v3 = _swiftEmptyArrayStorage[3];
  if (v4 >= v3 >> 1)
  {
    sub_100129188(v3 > 1, v4 + 1, 1);
    uint64_t v0 = v24;
  }
  v0[2] = v4 + 1;
  unint64_t v5 = &v0[2 * v4];
  v5[4] = v1;
  v5[5] = v2;
  unsigned __int8 v21 = 1;
  sub_10015E424(&v21, &v22);
  unint64_t v6 = v22;
  unint64_t v7 = v23;
  long long v24 = v0;
  unint64_t v9 = v0[2];
  unint64_t v8 = v0[3];
  if (v9 >= v8 >> 1)
  {
    sub_100129188(v8 > 1, v9 + 1, 1);
    uint64_t v0 = v24;
  }
  v0[2] = v9 + 1;
  Swift::String v10 = &v0[2 * v9];
  v10[4] = v6;
  v10[5] = v7;
  unsigned __int8 v21 = 2;
  sub_10015E424(&v21, &v22);
  unint64_t v11 = v22;
  unint64_t v12 = v23;
  long long v24 = v0;
  unint64_t v14 = v0[2];
  unint64_t v13 = v0[3];
  if (v14 >= v13 >> 1)
  {
    sub_100129188(v13 > 1, v14 + 1, 1);
    uint64_t v0 = v24;
  }
  v0[2] = v14 + 1;
  uint64_t v15 = &v0[2 * v14];
  v15[4] = v11;
  v15[5] = v12;
  unint64_t v22 = (unint64_t)v0;
  sub_1000063C0(&qword_1001FBE30);
  sub_100027F2C(&qword_1001FEDF0, &qword_1001FBE30);
  uint64_t v16 = BidirectionalCollection<>.joined(separator:)();
  long long v18 = v17;
  swift_release();
  unint64_t v22 = 0xD000000000000024;
  unint64_t v23 = 0x80000001001A15E0;
  v19._countAndFlagsBits = v16;
  v19._object = v18;
  String.append(_:)(v19);
  uint64_t result = swift_bridgeObjectRelease();
  qword_100212B78 = v22;
  unk_100212B80 = v23;
  return result;
}

uint64_t sub_10015E424@<X0>(unsigned __int8 *a1@<X0>, void *a2@<X8>)
{
  int v3 = *a1;
  if (v3 == 2)
  {
    v6._countAndFlagsBits = 0x6F746F6870;
    v6._object = (void *)0xE500000000000000;
    String.append(_:)(v6);
    unint64_t v5 = &off_1001E9B40;
  }
  else if (v3 == 1)
  {
    v4._countAndFlagsBits = 0x74786554676E6F6CLL;
    v4._object = (void *)0xE800000000000000;
    String.append(_:)(v4);
    unint64_t v5 = &off_1001E9AF0;
  }
  else
  {
    v7._countAndFlagsBits = 0x78655474726F6873;
    v7._object = (void *)0xE900000000000074;
    String.append(_:)(v7);
    unint64_t v5 = &off_1001E9AA0;
  }
  swift_bridgeObjectRelease();
  v8._countAndFlagsBits = 8250;
  v8._object = (void *)0xE200000000000000;
  String.append(_:)(v8);
  int64_t v9 = (int64_t)v5[2];
  if (v9)
  {
    swift_bridgeObjectRetain();
    sub_100129188(0, v9, 0);
    Swift::String v10 = (void **)(v5 + 5);
    do
    {
      uint64_t v11 = (uint64_t)*(v10 - 1);
      unint64_t v12 = *v10;
      swift_bridgeObjectRetain();
      v13._countAndFlagsBits = v11;
      v13._object = v12;
      String.append(_:)(v13);
      v14._countAndFlagsBits = 34;
      v14._object = (void *)0xE100000000000000;
      String.append(_:)(v14);
      swift_bridgeObjectRelease();
      unint64_t v16 = _swiftEmptyArrayStorage[2];
      unint64_t v15 = _swiftEmptyArrayStorage[3];
      if (v16 >= v15 >> 1) {
        sub_100129188(v15 > 1, v16 + 1, 1);
      }
      v10 += 2;
      _swiftEmptyArrayStorage[2] = v16 + 1;
      long long v17 = &_swiftEmptyArrayStorage[2 * v16];
      v17[4] = 34;
      v17[5] = 0xE100000000000000;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease();
  }
  sub_1000063C0(&qword_1001FBE30);
  sub_100027F2C(&qword_1001FEDF0, &qword_1001FBE30);
  uint64_t v18 = BidirectionalCollection<>.joined(separator:)();
  uint64_t v20 = v19;
  swift_bridgeObjectRelease();
  v21._countAndFlagsBits = v18;
  v21._object = v20;
  String.append(_:)(v21);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = 8237;
  a2[1] = v23;
  return result;
}

uint64_t sub_10015E694(char a1)
{
  uint64_t v2 = sub_1000063C0(&qword_100205098);
  __chkstk_darwin(v2 - 8);
  v330 = (char *)&v290 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000063C0(&qword_1002050A0);
  __chkstk_darwin(v4 - 8);
  v328 = (char *)&v290 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v329 = type metadata accessor for DateComponents();
  uint64_t v6 = *(void *)(v329 - 8);
  __chkstk_darwin(v329);
  id v327 = (char *)&v290 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v326 = type metadata accessor for Calendar();
  uint64_t v332 = *(void *)(v326 - 8);
  __chkstk_darwin(v326);
  long long v325 = (char *)&v290 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000063C0(&qword_1002050A8);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v312 = (char *)&v290 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v314 = (uint64_t)&v290 - v12;
  uint64_t v340 = type metadata accessor for PromptExampleBuilder.ExampleMessage();
  uint64_t v13 = __chkstk_darwin(v340);
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v320 = (uint64_t)&v290 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v319 = (uint64_t)&v290 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v318 = (uint64_t)&v290 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v22 = __chkstk_darwin(v21);
  uint64_t v317 = (uint64_t)&v290 - v23;
  __chkstk_darwin(v22);
  uint64_t v25 = __chkstk_darwin((char *)&v290 - v24);
  uint64_t v26 = __chkstk_darwin(v25);
  uint64_t v309 = (char *)&v290 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  char v308 = (char *)&v290 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  unint64_t v324 = (unint64_t)&v290 - v31;
  uint64_t v32 = __chkstk_darwin(v30);
  unint64_t v323 = (unint64_t)&v290 - v33;
  uint64_t v34 = __chkstk_darwin(v32);
  unint64_t v322 = (unint64_t)&v290 - v35;
  uint64_t v36 = __chkstk_darwin(v34);
  uint64_t v321 = (uint64_t)&v290 - v37;
  uint64_t v38 = __chkstk_darwin(v36);
  uint64_t v39 = __chkstk_darwin(v38);
  uint64_t v315 = (char *)&v290 - v40;
  uint64_t v41 = __chkstk_darwin(v39);
  uint64_t v335 = (uint64_t)&v290 - v42;
  uint64_t v43 = __chkstk_darwin(v41);
  uint64_t v331 = (uint64_t)&v290 - v44;
  uint64_t v45 = __chkstk_darwin(v43);
  v337 = (char *)&v290 - v46;
  uint64_t v47 = __chkstk_darwin(v45);
  uint64_t v49 = (char *)&v290 - v48;
  uint64_t v50 = __chkstk_darwin(v47);
  uint64_t v52 = (char *)&v290 - v51;
  uint64_t v53 = __chkstk_darwin(v50);
  long long v55 = (char *)&v290 - v54;
  uint64_t v56 = __chkstk_darwin(v53);
  long long v58 = (char *)&v290 - v57;
  uint64_t v59 = __chkstk_darwin(v56);
  uint64_t v62 = (char *)&v290 - v61;
  uint64_t v307 = v63;
  uint64_t v306 = v64;
  uint64_t v305 = v65;
  uint64_t v333 = v6;
  uint64_t v311 = v59;
  uint64_t v310 = v66;
  uint64_t v313 = v67;
  if (a1)
  {
    uint64_t v68 = v60;
    uint64_t v69 = enum case for ChatMessageRole.user(_:);
    if (a1 == 1)
    {
      uint64_t v70 = type metadata accessor for ChatMessageRole();
      uint64_t v71 = *(void (**)(char *, uint64_t))(*(void *)(v70 - 8) + 104);
      uint64_t v339 = v70;
      v71(v52, v69);
      uint64_t v72 = &v52[*(int *)(v340 + 20)];
      *(void *)uint64_t v72 = 0xD00000000000001CLL;
      *((void *)v72 + 1) = 0x80000001001A0E00;
      *((void *)v72 + 2) = 0xD000000000000033;
      *((void *)v72 + 3) = 0x80000001001A0E20;
      *((void *)v72 + 4) = 0xD000000000000055;
      *((void *)v72 + 5) = 0x80000001001A0E60;
      v72[48] = 1;
      unint64_t v73 = sub_100143454(0, 1, 1, (unint64_t)_swiftEmptyArrayStorage);
      unint64_t v75 = *(void *)(v73 + 16);
      unint64_t v74 = *(void *)(v73 + 24);
      if (v75 >= v74 >> 1) {
        unint64_t v73 = sub_100143454(v74 > 1, v75 + 1, 1, v73);
      }
      uint64_t v76 = (uint64_t)v337;
      *(void *)(v73 + 16) = v75 + 1;
      uint64_t v334 = *(unsigned __int8 *)(v68 + 80);
      uint64_t v338 = *(void *)(v68 + 72);
      sub_10004482C((uint64_t)v52, v73 + ((v334 + 32) & ~v334) + v338 * v75);
      uint64_t v77 = sub_100143488(0, 1, 1, _swiftEmptyArrayStorage);
      unint64_t v79 = v77[2];
      unint64_t v78 = v77[3];
      unint64_t v80 = v79 + 1;
      if (v79 >= v78 >> 1) {
        uint64_t v77 = sub_100143488((void *)(v78 > 1), v79 + 1, 1, v77);
      }
    }
    else
    {
      uint64_t v95 = type metadata accessor for ChatMessageRole();
      __int16 v96 = *(void (**)(char *, uint64_t))(*(void *)(v95 - 8) + 104);
      uint64_t v339 = v95;
      v96(v55, v69);
      uint64_t v97 = &v55[*(int *)(v340 + 20)];
      *(void *)uint64_t v97 = 0xD00000000000001CLL;
      *((void *)v97 + 1) = 0x80000001001A0E00;
      *((void *)v97 + 2) = 0;
      *((void *)v97 + 3) = 0;
      *((void *)v97 + 4) = 0xD000000000000055;
      *((void *)v97 + 5) = 0x80000001001A0E60;
      v97[48] = 1;
      unint64_t v73 = sub_100143454(0, 1, 1, (unint64_t)_swiftEmptyArrayStorage);
      unint64_t v99 = *(void *)(v73 + 16);
      unint64_t v98 = *(void *)(v73 + 24);
      if (v99 >= v98 >> 1) {
        unint64_t v73 = sub_100143454(v98 > 1, v99 + 1, 1, v73);
      }
      *(void *)(v73 + 16) = v99 + 1;
      uint64_t v334 = *(unsigned __int8 *)(v68 + 80);
      uint64_t v338 = *(void *)(v68 + 72);
      sub_10004482C((uint64_t)v55, v73 + ((v334 + 32) & ~v334) + v338 * v99);
      uint64_t v77 = sub_100143488(0, 1, 1, _swiftEmptyArrayStorage);
      unint64_t v79 = v77[2];
      unint64_t v100 = v77[3];
      unint64_t v80 = v79 + 1;
      if (v79 >= v100 >> 1) {
        uint64_t v77 = sub_100143488((void *)(v100 > 1), v79 + 1, 1, v77);
      }
      uint64_t v76 = (uint64_t)v337;
    }
  }
  else
  {
    uint64_t v338 = v60;
    unint64_t v81 = sub_100043BD4(0xD000000000000028, 0x80000001001A1520, 0, 0, 0, 0, (unint64_t)_swiftEmptyArrayStorage);
    uint64_t v82 = enum case for ChatMessageRole.assistant(_:);
    uint64_t v83 = type metadata accessor for ChatMessageRole();
    uint64_t v84 = *(void (**)(char *, uint64_t))(*(void *)(v83 - 8) + 104);
    unsigned int v336 = v82;
    uint64_t v339 = v83;
    v84(v62, v82);
    uint64_t v85 = &v62[*(int *)(v340 + 20)];
    *(void *)uint64_t v85 = 0x1000000000000014;
    *((void *)v85 + 1) = 0x80000001001A1550;
    *((void *)v85 + 2) = &off_1001E9BB8;
    *((void *)v85 + 3) = 0;
    *((void *)v85 + 4) = 0;
    *((void *)v85 + 5) = 0;
    v85[48] = 2;
    swift_bridgeObjectRetain();
    unint64_t v86 = v81;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v86 = sub_100143454(0, *(void *)(v81 + 16) + 1, 1, v81);
    }
    unint64_t v88 = *(void *)(v86 + 16);
    unint64_t v87 = *(void *)(v86 + 24);
    if (v88 >= v87 >> 1) {
      unint64_t v86 = sub_100143454(v87 > 1, v88 + 1, 1, v86);
    }
    *(void *)(v86 + 16) = v88 + 1;
    uint64_t v334 = *(unsigned __int8 *)(v338 + 80);
    uint64_t v89 = (v334 + 32) & ~v334;
    uint64_t v338 = *(void *)(v338 + 72);
    sub_10004482C((uint64_t)v62, v86 + v89 + v338 * v88);
    swift_bridgeObjectRelease();
    unint64_t v90 = sub_100043BD4(0xD00000000000002DLL, 0x80000001001A1570, 0, 0, 0, 0, v86);
    swift_bridgeObjectRelease();
    ((void (*)(char *, void, uint64_t))v84)(v58, v336, v339);
    uint64_t v91 = &v58[*(int *)(v340 + 20)];
    *(void *)uint64_t v91 = 0xD000000000000032;
    *((void *)v91 + 1) = 0x80000001001A15A0;
    *((void *)v91 + 2) = &off_1001E9C08;
    *((void *)v91 + 3) = 0;
    *((void *)v91 + 4) = 0;
    *((void *)v91 + 5) = 0;
    v91[48] = 2;
    swift_bridgeObjectRetain();
    unint64_t v73 = v90;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v73 = sub_100143454(0, *(void *)(v90 + 16) + 1, 1, v90);
    }
    unint64_t v93 = *(void *)(v73 + 16);
    unint64_t v92 = *(void *)(v73 + 24);
    uint64_t v76 = (uint64_t)v337;
    if (v93 >= v92 >> 1) {
      unint64_t v73 = sub_100143454(v92 > 1, v93 + 1, 1, v73);
    }
    *(void *)(v73 + 16) = v93 + 1;
    sub_10004482C((uint64_t)v58, v73 + v89 + v93 * v338);
    swift_bridgeObjectRelease();
    uint64_t v77 = sub_100143488(0, 1, 1, _swiftEmptyArrayStorage);
    unint64_t v79 = v77[2];
    unint64_t v94 = v77[3];
    unint64_t v80 = v79 + 1;
    if (v79 >= v94 >> 1) {
      uint64_t v77 = sub_100143488((void *)(v94 > 1), v79 + 1, 1, v77);
    }
  }
  void v77[2] = v80;
  v77[v79 + 4] = v73;
  unint64_t v101 = sub_100043BD4(0x2061206574697257, 0xEC0000006D656F70, 0, 0, 0, 0, (unint64_t)_swiftEmptyArrayStorage);
  uint64_t v102 = enum case for ChatMessageRole.assistant(_:);
  type metadata accessor for ChatMessageRole();
  uint64_t v103 = *(void *)(v339 - 8);
  uint64_t v104 = *(char **)(v103 + 104);
  uint64_t v105 = v103 + 104;
  unsigned int v336 = v102;
  v337 = v104;
  ((void (*)(char *, uint64_t))v104)(v49, v102);
  uint64_t v106 = &v49[*(int *)(v340 + 20)];
  *(_OWORD *)uint64_t v106 = xmmword_100194BB0;
  *((void *)v106 + 2) = &off_1001E9C58;
  *((void *)v106 + 3) = 0;
  *((void *)v106 + 4) = 0;
  *((void *)v106 + 5) = 0;
  v106[48] = 2;
  swift_bridgeObjectRetain();
  unint64_t v107 = v101;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v107 = sub_100143454(0, *(void *)(v101 + 16) + 1, 1, v101);
  }
  unint64_t v109 = *(void *)(v107 + 16);
  unint64_t v108 = *(void *)(v107 + 24);
  if (v109 >= v108 >> 1) {
    unint64_t v107 = sub_100143454(v108 > 1, v109 + 1, 1, v107);
  }
  *(void *)(v107 + 16) = v109 + 1;
  unint64_t v110 = (v334 + 32) & ~(unint64_t)v334;
  sub_10004482C((uint64_t)v49, v107 + v110 + v338 * v109);
  swift_bridgeObjectRelease();
  unint64_t v111 = sub_100043BD4(0xD000000000000019, 0x80000001001A0EC0, 0, 0, 0, 0, (unint64_t)_swiftEmptyArrayStorage);
  ((void (*)(uint64_t, void, uint64_t))v337)(v76, v336, v339);
  uint64_t v112 = v76 + *(int *)(v340 + 20);
  *(void *)uint64_t v112 = &off_1001E9CA8;
  *(void *)(v112 + 8) = 0;
  *(void *)(v112 + 16) = 0;
  *(void *)(v112 + 24) = 1;
  *(void *)(v112 + 32) = 0;
  *(void *)(v112 + 40) = 0;
  *(unsigned char *)(v112 + 48) = 2;
  swift_bridgeObjectRetain();
  unint64_t v113 = v111;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v113 = sub_100143454(0, *(void *)(v111 + 16) + 1, 1, v111);
  }
  unint64_t v115 = *(void *)(v113 + 16);
  unint64_t v114 = *(void *)(v113 + 24);
  if (v115 >= v114 >> 1) {
    unint64_t v113 = sub_100143454(v114 > 1, v115 + 1, 1, v113);
  }
  *(void *)(v113 + 16) = v115 + 1;
  sub_10004482C(v76, v113 + v110 + v115 * v338);
  swift_bridgeObjectRelease();
  unint64_t v341 = sub_100005730((uint64_t)_swiftEmptyArrayStorage);
  swift_bridgeObjectRetain();
  sub_100081740(0x73616D6F6854, 0xE600000000000000, 0x656D616E20796DLL, 0xE700000000000000);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v316 = 0xD000000000000010;
  sub_100081740(0x796C6C6153, 0xE500000000000000, 0xD000000000000010, 0x800000010019B8E0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_100081740(0xD000000000000015, 0x80000001001A0EE0, 0x6E6F73616572, 0xE600000000000000);
  swift_bridgeObjectRelease();
  unint64_t v116 = v341;
  uint64_t v117 = v331;
  LODWORD(v334) = enum case for ChatMessageRole.user(_:);
  ((void (*)(uint64_t))v337)(v331);
  uint64_t v118 = v117 + *(int *)(v340 + 20);
  *(void *)uint64_t v118 = v116;
  *(void *)(v118 + 8) = 0;
  *(void *)(v118 + 16) = 0;
  *(void *)(v118 + 24) = 2;
  *(void *)(v118 + 32) = 0;
  *(void *)(v118 + 40) = 0;
  *(unsigned char *)(v118 + 48) = 2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v119 = v113;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v119 = sub_100143454(0, *(void *)(v113 + 16) + 1, 1, v113);
  }
  unint64_t v121 = *(void *)(v119 + 16);
  unint64_t v120 = *(void *)(v119 + 24);
  if (v121 >= v120 >> 1) {
    unint64_t v119 = sub_100143454(v120 > 1, v121 + 1, 1, v119);
  }
  *(void *)(v119 + 16) = v121 + 1;
  sub_10004482C(v331, v119 + v110 + v121 * v338);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v122 = v335;
  ((void (*)(uint64_t, void, uint64_t))v337)(v335, v336, v339);
  uint64_t v123 = v122 + *(int *)(v340 + 20);
  *(void *)uint64_t v123 = 0xD000000000000034;
  *(void *)(v123 + 8) = 0x80000001001A0F00;
  *(void *)(v123 + 16) = &off_1001E9D40;
  *(void *)(v123 + 24) = 0;
  *(void *)(v123 + 32) = 0;
  *(void *)(v123 + 40) = 0;
  *(unsigned char *)(v123 + 48) = 2;
  swift_bridgeObjectRetain();
  unint64_t v124 = v119;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v124 = sub_100143454(0, *(void *)(v119 + 16) + 1, 1, v119);
  }
  unint64_t v126 = *(void *)(v124 + 16);
  unint64_t v125 = *(void *)(v124 + 24);
  if (v126 >= v125 >> 1) {
    unint64_t v124 = sub_100143454(v125 > 1, v126 + 1, 1, v124);
  }
  *(void *)(v124 + 16) = v126 + 1;
  sub_10004482C(v335, v124 + v110 + v126 * v338);
  swift_bridgeObjectRelease();
  uint64_t v331 = (uint64_t)"compose_selectedAndAllText";
  unint64_t v127 = sub_100043BD4(0xD00000000000001ALL, 0x800000010019DAD0, 0, 0, 0, 0, v124);
  swift_bridgeObjectRelease();
  uint64_t v128 = (uint64_t)v315;
  ((void (*)(char *, void, uint64_t))v337)(v315, v336, v339);
  uint64_t v129 = v128 + *(int *)(v340 + 20);
  *(void *)uint64_t v129 = 0xD000000000000034;
  *(void *)(v129 + 8) = 0x80000001001A0F00;
  *(void *)(v129 + 16) = &off_1001E9D90;
  *(void *)(v129 + 24) = 0;
  *(void *)(v129 + 32) = 0;
  *(void *)(v129 + 40) = 0;
  *(unsigned char *)(v129 + 48) = 2;
  swift_bridgeObjectRetain();
  unint64_t v130 = v127;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v130 = sub_100143454(0, *(void *)(v127 + 16) + 1, 1, v127);
  }
  unint64_t v132 = *(void *)(v130 + 16);
  unint64_t v131 = *(void *)(v130 + 24);
  if (v132 >= v131 >> 1) {
    unint64_t v130 = sub_100143454(v131 > 1, v132 + 1, 1, v130);
  }
  *(void *)(v130 + 16) = v132 + 1;
  sub_10004482C(v128, v130 + v110 + v132 * v338);
  swift_bridgeObjectRelease();
  int64_t v133 = v77[2];
  int64_t v134 = v133 + 2;
  if (__OFADD__(v133, 2))
  {
    __break(1u);
  }
  else if (v134 <= v77[3] >> 1)
  {
    goto LABEL_45;
  }
  if (v133 <= v134) {
    int64_t v288 = v133 + 2;
  }
  else {
    int64_t v288 = v133;
  }
  uint64_t v77 = sub_100143488((void *)1, v288, 1, v77);
LABEL_45:
  unint64_t v136 = v77[2];
  unint64_t v135 = v77[3];
  unint64_t v137 = v136 + 1;
  swift_bridgeObjectRetain();
  if (v136 >= v135 >> 1) {
    uint64_t v77 = sub_100143488((void *)(v135 > 1), v136 + 1, 1, v77);
  }
  void v77[2] = v137;
  v77[v136 + 4] = v107;
  unint64_t v138 = v77[3];
  int64_t v139 = v136 + 2;
  swift_bridgeObjectRetain();
  uint64_t v335 = v105;
  if (v139 > (uint64_t)(v138 >> 1)) {
    uint64_t v77 = sub_100143488((void *)(v138 > 1), v139, 1, v77);
  }
  void v77[2] = v139;
  v77[v137 + 4] = v130;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v343 = xmmword_100194BC0;
  unint64_t v140 = sub_100043BD4(0xD000000000000038, 0x80000001001A0F40, 0, 0, 0, 0, (unint64_t)_swiftEmptyArrayStorage);
  uint64_t v141 = v313;
  ((void (*)(uint64_t, void, uint64_t))v337)(v313, v336, v339);
  uint64_t v142 = v141 + *(int *)(v340 + 20);
  *(void *)uint64_t v142 = &off_1001E9DE0;
  *(void *)(v142 + 8) = 0;
  *(void *)(v142 + 16) = 0;
  *(void *)(v142 + 24) = 1;
  *(void *)(v142 + 32) = 0;
  *(void *)(v142 + 40) = 0;
  *(unsigned char *)(v142 + 48) = 2;
  swift_bridgeObjectRetain();
  unint64_t v143 = v140;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v143 = sub_100143454(0, *(void *)(v140 + 16) + 1, 1, v140);
  }
  unint64_t v145 = *(void *)(v143 + 16);
  unint64_t v144 = *(void *)(v143 + 24);
  if (v145 >= v144 >> 1) {
    unint64_t v143 = sub_100143454(v144 > 1, v145 + 1, 1, v143);
  }
  *(void *)(v143 + 16) = v145 + 1;
  uint64_t v315 = (char *)v110;
  sub_10004482C(v141, v143 + v110 + v145 * v338);
  swift_bridgeObjectRelease();
  unint64_t v341 = sub_100005730((uint64_t)_swiftEmptyArrayStorage);
  swift_bridgeObjectRetain();
  sub_100081740(0x6D5320796C6C6153, 0xEB00000000687469, 0xD000000000000015, 0x800000010019B950);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v298 = 0xD000000000000012;
  sub_100081740(0x6D5320796D6D6F54, 0xEB00000000687469, 0xD000000000000012, 0x800000010019B9A0);
  swift_bridgeObjectRelease();
  unint64_t v146 = v341;
  unint64_t v341 = 0;
  unint64_t v342 = 0xE000000000000000;
  _StringGuts.grow(_:)(30);
  uint64_t v147 = v325;
  static Calendar.current.getter();
  uint64_t v148 = v332;
  uint64_t v149 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v332 + 56);
  uint64_t v150 = v326;
  uint64_t v313 = v332 + 56;
  uint64_t v304 = v149;
  v149(v328, 1, 1, v326);
  uint64_t v151 = type metadata accessor for TimeZone();
  uint64_t v152 = *(void *)(v151 - 8);
  uint64_t v153 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v152 + 56);
  uint64_t v303 = v151;
  uint64_t v302 = v153;
  uint64_t v301 = v152 + 56;
  ((void (*)(char *, uint64_t, uint64_t))v153)(v330, 1, 1);
  uint64_t v154 = v327;
  DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)();
  uint64_t v155 = v314;
  Calendar.date(from:)();
  uint64_t v156 = *(void (**)(char *, uint64_t))(v333 + 8);
  v333 += 8;
  v156(v154, v329);
  int v157 = *(void (**)(char *, uint64_t))(v148 + 8);
  uint64_t v332 = v148 + 8;
  v157(v147, v150);
  uint64_t v158 = type metadata accessor for Date();
  uint64_t v159 = *(void *)(v158 - 8);
  uint64_t v160 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v159 + 48);
  uint64_t v300 = v159 + 48;
  v299 = v160;
  uint64_t result = v160((char *)v155, 1, v158);
  if (result == 1)
  {
    __break(1u);
LABEL_141:
    __break(1u);
    return result;
  }
  uint64_t v295 = v157;
  uint64_t v296 = v156;
  uint64_t v292 = sub_1001617FC(&qword_1002050B0, (void (*)(uint64_t))&type metadata accessor for Date);
  v162._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v162);
  swift_bridgeObjectRelease();
  BOOL v163 = *(void (**)(char *, uint64_t))(v159 + 8);
  uint64_t v297 = v158;
  uint64_t v293 = v159 + 8;
  uint64_t v291 = v163;
  v163((char *)v155, v158);
  v164._countAndFlagsBits = 0xD00000000000001CLL;
  v164._object = (void *)0x80000001001A0F80;
  String.append(_:)(v164);
  uint64_t v166 = v341;
  uint64_t v165 = v342;
  unint64_t v341 = v146;
  swift_bridgeObjectRetain();
  sub_100081740(v166, v165, 0xD00000000000001ALL, 0x800000010019B9E0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  unint64_t v294 = (unint64_t)"s my son's birthday party?";
  uint64_t v314 = 0xD000000000000011;
  sub_100081740(0x6E616874616E6F4ALL, 0xEE006874696D5320, 0xD000000000000011, 0x800000010019BA30);
  swift_bridgeObjectRelease();
  unint64_t v167 = v341;
  uint64_t v168 = v321;
  ((void (*)(uint64_t, void, uint64_t))v337)(v321, v334, v339);
  uint64_t v169 = v168 + *(int *)(v340 + 20);
  *(void *)uint64_t v169 = v167;
  *(void *)(v169 + 8) = 0;
  *(void *)(v169 + 16) = 0;
  *(void *)(v169 + 24) = 2;
  *(void *)(v169 + 32) = 0;
  *(void *)(v169 + 40) = 0;
  *(unsigned char *)(v169 + 48) = 2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v171 = v143;
  uint64_t v172 = (uint64_t)v309;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    unint64_t v171 = sub_100143454(0, *(void *)(v143 + 16) + 1, 1, v143);
  }
  unint64_t v174 = *(void *)(v171 + 16);
  unint64_t v173 = *(void *)(v171 + 24);
  uint64_t v175 = v315;
  if (v174 >= v173 >> 1) {
    unint64_t v171 = sub_100143454(v173 > 1, v174 + 1, 1, v171);
  }
  *(void *)(v171 + 16) = v174 + 1;
  sub_10004482C(v321, (uint64_t)&v175[v171 + v174 * v338]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v176 = v322;
  ((void (*)(unint64_t, void, uint64_t))v337)(v322, v336, v339);
  uint64_t v177 = v176 + *(int *)(v340 + 20);
  *(void *)uint64_t v177 = 0xD0000000000000BFLL;
  *(void *)(v177 + 8) = 0x80000001001A0FA0;
  *(void *)(v177 + 16) = &off_1001E9EA0;
  *(void *)(v177 + 24) = 0;
  *(void *)(v177 + 32) = 0;
  *(void *)(v177 + 40) = 0;
  *(unsigned char *)(v177 + 48) = 2;
  swift_bridgeObjectRetain();
  unint64_t v178 = v171;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v178 = sub_100143454(0, *(void *)(v171 + 16) + 1, 1, v171);
  }
  unint64_t v180 = *(void *)(v178 + 16);
  unint64_t v179 = *(void *)(v178 + 24);
  if (v180 >= v179 >> 1) {
    unint64_t v178 = sub_100143454(v179 > 1, v180 + 1, 1, v178);
  }
  *(void *)(v178 + 16) = v180 + 1;
  sub_10004482C(v322, (uint64_t)&v175[v178 + v180 * v338]);
  swift_bridgeObjectRelease();
  unint64_t v181 = sub_100043BD4(0xD00000000000001ALL, v331 | 0x8000000000000000, 0, 0, 0, 0, v178);
  swift_bridgeObjectRelease();
  uint64_t v182 = v323;
  ((void (*)(unint64_t, void, uint64_t))v337)(v323, v336, v339);
  uint64_t v183 = v182 + *(int *)(v340 + 20);
  *(void *)uint64_t v183 = 0xD0000000000000BFLL;
  *(void *)(v183 + 8) = 0x80000001001A0FA0;
  *(void *)(v183 + 16) = &off_1001E9EF0;
  *(void *)(v183 + 24) = 0;
  *(void *)(v183 + 32) = 0;
  *(void *)(v183 + 40) = 0;
  *(unsigned char *)(v183 + 48) = 2;
  swift_bridgeObjectRetain();
  unint64_t v184 = v181;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v184 = sub_100143454(0, *(void *)(v181 + 16) + 1, 1, v181);
  }
  unint64_t v186 = *(void *)(v184 + 16);
  unint64_t v185 = *(void *)(v184 + 24);
  uint64_t v187 = (uint64_t)v308;
  uint64_t v188 = v334;
  if (v186 >= v185 >> 1) {
    unint64_t v184 = sub_100143454(v185 > 1, v186 + 1, 1, v184);
  }
  *(void *)(v184 + 16) = v186 + 1;
  sub_10004482C(v323, (uint64_t)&v175[v184 + v186 * v338]);
  swift_bridgeObjectRelease();
  unint64_t v323 = v184;
  unint64_t v344 = v184;
  unint64_t v189 = sub_100043BD4(0xD000000000000036, 0x80000001001A1060, 0, 0, 0, 0, (unint64_t)_swiftEmptyArrayStorage);
  uint64_t v190 = v324;
  ((void (*)(unint64_t, void, uint64_t))v337)(v324, v336, v339);
  uint64_t v191 = v190 + *(int *)(v340 + 20);
  *(void *)uint64_t v191 = &off_1001E9F40;
  *(void *)(v191 + 8) = 0;
  *(void *)(v191 + 16) = 0;
  *(void *)(v191 + 24) = 1;
  *(void *)(v191 + 32) = 0;
  *(void *)(v191 + 40) = 0;
  *(unsigned char *)(v191 + 48) = 2;
  swift_bridgeObjectRetain();
  unint64_t v192 = v189;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v192 = sub_100143454(0, *(void *)(v189 + 16) + 1, 1, v189);
  }
  unint64_t v194 = *(void *)(v192 + 16);
  unint64_t v193 = *(void *)(v192 + 24);
  if (v194 >= v193 >> 1) {
    unint64_t v192 = sub_100143454(v193 > 1, v194 + 1, 1, v192);
  }
  *(void *)(v192 + 16) = v194 + 1;
  sub_10004482C(v324, (uint64_t)&v175[v192 + v194 * v338]);
  swift_bridgeObjectRelease();
  unint64_t v341 = sub_100005730((uint64_t)_swiftEmptyArrayStorage);
  swift_bridgeObjectRetain();
  sub_100081740(0xD000000000000020, 0x80000001001A10A0, 0xD000000000000016, 0x800000010019BA70);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_100081740(0x6E656C6C65637865, 0xE900000000000074, v298, 0x800000010019BAC0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_100081740(0x2064656C6C697247, 0xEE006E6F6D6C6173, 0x4F20736568736944, 0xEE00646572656472);
  swift_bridgeObjectRelease();
  unint64_t v195 = v341;
  ((void (*)(uint64_t, uint64_t, uint64_t))v337)(v187, v188, v339);
  uint64_t v196 = v187 + *(int *)(v340 + 20);
  *(void *)uint64_t v196 = v195;
  *(void *)(v196 + 8) = 0;
  *(void *)(v196 + 16) = 0;
  *(void *)(v196 + 24) = 2;
  *(void *)(v196 + 32) = 0;
  *(void *)(v196 + 40) = 0;
  *(unsigned char *)(v196 + 48) = 2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v197 = v192;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v197 = sub_100143454(0, *(void *)(v192 + 16) + 1, 1, v192);
  }
  unint64_t v199 = *(void *)(v197 + 16);
  unint64_t v198 = *(void *)(v197 + 24);
  if (v199 >= v198 >> 1) {
    unint64_t v197 = sub_100143454(v198 > 1, v199 + 1, 1, v197);
  }
  *(void *)(v197 + 16) = v199 + 1;
  sub_10004482C(v187, (uint64_t)&v175[v197 + v199 * v338]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v324 = v197;
  unint64_t v345 = v197;
  unint64_t v200 = sub_100043BD4(0xD000000000000031, 0x80000001001A10D0, 0, 0, 0, 0, (unint64_t)_swiftEmptyArrayStorage);
  ((void (*)(uint64_t, void, uint64_t))v337)(v172, v336, v339);
  uint64_t v201 = v172 + *(int *)(v340 + 20);
  *(void *)uint64_t v201 = &off_1001E9FD8;
  *(void *)(v201 + 8) = 0;
  *(void *)(v201 + 16) = 0;
  *(void *)(v201 + 24) = 1;
  *(void *)(v201 + 32) = 0;
  *(void *)(v201 + 40) = 0;
  *(unsigned char *)(v201 + 48) = 2;
  swift_bridgeObjectRetain();
  unint64_t v202 = v200;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v202 = sub_100143454(0, *(void *)(v200 + 16) + 1, 1, v200);
  }
  unint64_t v204 = *(void *)(v202 + 16);
  unint64_t v203 = *(void *)(v202 + 24);
  if (v204 >= v203 >> 1) {
    unint64_t v202 = sub_100143454(v203 > 1, v204 + 1, 1, v202);
  }
  *(void *)(v202 + 16) = v204 + 1;
  sub_10004482C(v172, (uint64_t)&v175[v202 + v204 * v338]);
  swift_bridgeObjectRelease();
  unint64_t v341 = sub_100005730((uint64_t)_swiftEmptyArrayStorage);
  swift_bridgeObjectRetain();
  sub_100081740(0x3220656E7544, 0xE600000000000000, 0x7645206569766F4DLL, 0xEB00000000746E65);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_100081740(53, 0xE100000000000000, 0xD000000000000015, 0x800000010019BC50);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_100081740(0xD00000000000002FLL, 0x80000001001A1110, 0x657469726F766146, 0xEE00737472615020);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_100081740(0xD00000000000002ELL, 0x80000001001A1140, v314, 0x800000010019BBE0);
  swift_bridgeObjectRelease();
  unint64_t v205 = v341;
  uint64_t v206 = v310;
  ((void (*)(uint64_t, uint64_t, uint64_t))v337)(v310, v188, v339);
  uint64_t v207 = v206 + *(int *)(v340 + 20);
  *(void *)uint64_t v207 = v205;
  *(void *)(v207 + 8) = 0;
  *(void *)(v207 + 16) = 0;
  *(void *)(v207 + 24) = 2;
  *(void *)(v207 + 32) = 0;
  *(void *)(v207 + 40) = 0;
  *(unsigned char *)(v207 + 48) = 2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v208 = v202;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v208 = sub_100143454(0, *(void *)(v202 + 16) + 1, 1, v202);
  }
  unint64_t v210 = *(void *)(v208 + 16);
  unint64_t v209 = *(void *)(v208 + 24);
  uint64_t v211 = v311;
  if (v210 >= v209 >> 1) {
    unint64_t v208 = sub_100143454(v209 > 1, v210 + 1, 1, v208);
  }
  *(void *)(v208 + 16) = v210 + 1;
  sub_10004482C(v206, (uint64_t)&v175[v208 + v210 * v338]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v346 = v208;
  unint64_t v212 = sub_100043BD4(0xD000000000000043, 0x80000001001A1170, 0, 0, 0, 0, (unint64_t)_swiftEmptyArrayStorage);
  ((void (*)(uint64_t, void, uint64_t))v337)(v211, v336, v339);
  uint64_t v213 = v211 + *(int *)(v340 + 20);
  *(void *)uint64_t v213 = &off_1001EA098;
  *(void *)(v213 + 8) = 0;
  *(void *)(v213 + 16) = 0;
  *(void *)(v213 + 24) = 1;
  *(void *)(v213 + 32) = 0;
  *(void *)(v213 + 40) = 0;
  *(unsigned char *)(v213 + 48) = 2;
  swift_bridgeObjectRetain();
  unint64_t v214 = v212;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v214 = sub_100143454(0, *(void *)(v212 + 16) + 1, 1, v212);
  }
  unint64_t v216 = *(void *)(v214 + 16);
  unint64_t v215 = *(void *)(v214 + 24);
  unint64_t v322 = v208;
  if (v216 >= v215 >> 1) {
    unint64_t v214 = sub_100143454(v215 > 1, v216 + 1, 1, v214);
  }
  *(void *)(v214 + 16) = v216 + 1;
  sub_10004482C(v211, (uint64_t)&v175[v214 + v216 * v338]);
  swift_bridgeObjectRelease();
  unint64_t v217 = sub_100005730((uint64_t)_swiftEmptyArrayStorage);
  unint64_t v341 = 0;
  unint64_t v342 = 0xE000000000000000;
  long long v218 = v325;
  static Calendar.current.getter();
  uint64_t v219 = v326;
  v304(v328, 1, 1, v326);
  v302(v330, 1, 1, v303);
  long long v220 = v327;
  DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)();
  long long v221 = v312;
  Calendar.date(from:)();
  v296(v220, v329);
  v295(v218, v219);
  uint64_t v222 = v297;
  uint64_t result = v299(v221, 1, v297);
  if (result == 1) {
    goto LABEL_141;
  }
  v223._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v223);
  swift_bridgeObjectRelease();
  v291(v221, v222);
  uint64_t v224 = v341;
  uint64_t v225 = v342;
  unint64_t v341 = v217;
  swift_bridgeObjectRetain();
  sub_100081740(v224, v225, 0x67616C4620786953, 0xEF746E6576452073);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_100081740(3748388, 0xE300000000000000, 0x502074656B636954, 0xEC00000065636972);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_100081740(0xD000000000000015, 0x80000001001A11C0, 0x657469726F766146, 0xEE00736564695220);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_100081740(57, 0xE100000000000000, v316, 0x800000010019BD40);
  swift_bridgeObjectRelease();
  unint64_t v226 = v341;
  uint64_t v227 = v317;
  uint64_t v228 = v334;
  ((void (*)(uint64_t, void, uint64_t))v337)(v317, v334, v339);
  uint64_t v229 = v227 + *(int *)(v340 + 20);
  *(void *)uint64_t v229 = v226;
  *(void *)(v229 + 8) = 0;
  *(void *)(v229 + 16) = 0;
  *(void *)(v229 + 24) = 2;
  *(void *)(v229 + 32) = 0;
  *(void *)(v229 + 40) = 0;
  *(unsigned char *)(v229 + 48) = 2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v230 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v231 = v214;
  uint64_t v232 = v305;
  if ((v230 & 1) == 0) {
    unint64_t v231 = sub_100143454(0, *(void *)(v214 + 16) + 1, 1, v214);
  }
  unint64_t v234 = *(void *)(v231 + 16);
  unint64_t v233 = *(void *)(v231 + 24);
  int v235 = v315;
  if (v234 >= v233 >> 1) {
    unint64_t v231 = sub_100143454(v233 > 1, v234 + 1, 1, v231);
  }
  *(void *)(v231 + 16) = v234 + 1;
  sub_10004482C(v317, (uint64_t)&v235[v231 + v234 * v338]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v347 = v231;
  unint64_t v236 = sub_100043BD4(0xD000000000000029, 0x80000001001A11E0, 0, 0, 0, 0, (unint64_t)_swiftEmptyArrayStorage);
  ((void (*)(uint64_t, void, uint64_t))v337)(v232, v336, v339);
  uint64_t v237 = v232 + *(int *)(v340 + 20);
  *(void *)uint64_t v237 = &off_1001EA158;
  *(void *)(v237 + 8) = 0;
  *(void *)(v237 + 16) = 0;
  *(void *)(v237 + 24) = 1;
  *(void *)(v237 + 32) = 0;
  *(void *)(v237 + 40) = 0;
  *(unsigned char *)(v237 + 48) = 2;
  swift_bridgeObjectRetain();
  unint64_t v238 = v236;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v238 = sub_100143454(0, *(void *)(v236 + 16) + 1, 1, v236);
  }
  unint64_t v240 = *(void *)(v238 + 16);
  unint64_t v239 = *(void *)(v238 + 24);
  if (v240 >= v239 >> 1) {
    unint64_t v238 = sub_100143454(v239 > 1, v240 + 1, 1, v238);
  }
  *(void *)(v238 + 16) = v240 + 1;
  sub_10004482C(v232, (uint64_t)&v235[v238 + v240 * v338]);
  swift_bridgeObjectRelease();
  unint64_t v341 = sub_100005730((uint64_t)_swiftEmptyArrayStorage);
  swift_bridgeObjectRetain();
  sub_100081740(0xD0000000000001BELL, 0x80000001001A1210, 0x20676E697465654DLL, 0xED00007365746F4ELL);
  swift_bridgeObjectRelease();
  unint64_t v241 = v341;
  uint64_t v242 = v318;
  ((void (*)(uint64_t, uint64_t, uint64_t))v337)(v318, v228, v339);
  uint64_t v243 = v242 + *(int *)(v340 + 20);
  *(void *)uint64_t v243 = v241;
  *(void *)(v243 + 8) = 0;
  *(void *)(v243 + 16) = 0;
  *(void *)(v243 + 24) = 2;
  *(void *)(v243 + 32) = 0;
  *(void *)(v243 + 40) = 0;
  *(unsigned char *)(v243 + 48) = 2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v244 = v238;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v244 = sub_100143454(0, *(void *)(v238 + 16) + 1, 1, v238);
  }
  unint64_t v246 = *(void *)(v244 + 16);
  unint64_t v245 = *(void *)(v244 + 24);
  if (v246 >= v245 >> 1) {
    unint64_t v244 = sub_100143454(v245 > 1, v246 + 1, 1, v244);
  }
  *(void *)(v244 + 16) = v246 + 1;
  sub_10004482C(v318, (uint64_t)&v235[v244 + v246 * v338]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v247 = v319;
  ((void (*)(uint64_t, void, uint64_t))v337)(v319, v336, v339);
  uint64_t v248 = v247 + *(int *)(v340 + 20);
  *(void *)uint64_t v248 = 0xD000000000000049;
  *(void *)(v248 + 8) = 0x80000001001A13D0;
  *(void *)(v248 + 16) = &off_1001EA1A0;
  *(void *)(v248 + 24) = 0;
  *(void *)(v248 + 32) = 0;
  *(void *)(v248 + 40) = 0;
  *(unsigned char *)(v248 + 48) = 2;
  swift_bridgeObjectRetain();
  unint64_t v249 = v244;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v249 = sub_100143454(0, *(void *)(v244 + 16) + 1, 1, v244);
  }
  unint64_t v251 = *(void *)(v249 + 16);
  unint64_t v250 = *(void *)(v249 + 24);
  if (v251 >= v250 >> 1) {
    unint64_t v249 = sub_100143454(v250 > 1, v251 + 1, 1, v249);
  }
  *(void *)(v249 + 16) = v251 + 1;
  sub_10004482C(v319, (uint64_t)&v235[v249 + v251 * v338]);
  swift_bridgeObjectRelease();
  unint64_t v252 = sub_100043BD4(0xD00000000000001ALL, v331 | 0x8000000000000000, 0, 0, 0, 0, v249);
  swift_bridgeObjectRelease();
  uint64_t v253 = v320;
  ((void (*)(uint64_t, void, uint64_t))v337)(v320, v336, v339);
  uint64_t v254 = v253 + *(int *)(v340 + 20);
  *(void *)uint64_t v254 = 0xD000000000000049;
  *(void *)(v254 + 8) = 0x80000001001A13D0;
  *(void *)(v254 + 16) = &off_1001EA1F0;
  *(void *)(v254 + 24) = 0;
  *(void *)(v254 + 32) = 0;
  *(void *)(v254 + 40) = 0;
  *(unsigned char *)(v254 + 48) = 2;
  swift_bridgeObjectRetain();
  unint64_t v255 = v252;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v255 = sub_100143454(0, *(void *)(v252 + 16) + 1, 1, v252);
  }
  unint64_t v257 = *(void *)(v255 + 16);
  unint64_t v256 = *(void *)(v255 + 24);
  if (v257 >= v256 >> 1) {
    unint64_t v255 = sub_100143454(v256 > 1, v257 + 1, 1, v255);
  }
  *(void *)(v255 + 16) = v257 + 1;
  sub_10004482C(v320, (uint64_t)&v235[v255 + v257 * v338]);
  swift_bridgeObjectRelease();
  unint64_t v348 = v255;
  unint64_t v258 = sub_100043BD4(0xD00000000000002BLL, 0x80000001001A1420, 0, 0, 0, 0, (unint64_t)_swiftEmptyArrayStorage);
  uint64_t v259 = v306;
  ((void (*)(uint64_t, void, uint64_t))v337)(v306, v336, v339);
  uint64_t v260 = v259 + *(int *)(v340 + 20);
  *(void *)uint64_t v260 = &off_1001EA240;
  *(void *)(v260 + 8) = 0;
  *(void *)(v260 + 16) = 0;
  *(void *)(v260 + 24) = 1;
  *(void *)(v260 + 32) = 0;
  *(void *)(v260 + 40) = 0;
  *(unsigned char *)(v260 + 48) = 2;
  swift_bridgeObjectRetain();
  unint64_t v261 = v258;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v261 = sub_100143454(0, *(void *)(v258 + 16) + 1, 1, v258);
  }
  unint64_t v263 = *(void *)(v261 + 16);
  unint64_t v262 = *(void *)(v261 + 24);
  if (v263 >= v262 >> 1) {
    unint64_t v261 = sub_100143454(v262 > 1, v263 + 1, 1, v261);
  }
  *(void *)(v261 + 16) = v263 + 1;
  sub_10004482C(v259, (uint64_t)&v235[v261 + v263 * v338]);
  swift_bridgeObjectRelease();
  unint64_t v341 = sub_100005730((uint64_t)_swiftEmptyArrayStorage);
  swift_bridgeObjectRetain();
  sub_100081740(0xD000000000000025, 0x80000001001A1450, 0xD000000000000013, 0x800000010019BDB0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_100081740(0xD000000000000022, 0x80000001001A1480, v314, v294 | 0x8000000000000000);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_100081740(0xD000000000000026, 0x80000001001A14B0, 0xD000000000000015, 0x800000010019BE20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_100081740(0xD000000000000037, 0x80000001001A14E0, v316, 0x800000010019BE80);
  swift_bridgeObjectRelease();
  unint64_t v264 = v341;
  uint64_t v265 = v307;
  ((void (*)(uint64_t, void, uint64_t))v337)(v307, v334, v339);
  uint64_t v266 = v265 + *(int *)(v340 + 20);
  *(void *)uint64_t v266 = v264;
  *(void *)(v266 + 8) = 0;
  *(void *)(v266 + 16) = 0;
  *(void *)(v266 + 24) = 2;
  *(void *)(v266 + 32) = 0;
  *(void *)(v266 + 40) = 0;
  *(unsigned char *)(v266 + 48) = 2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v267 = v261;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v267 = sub_100143454(0, *(void *)(v261 + 16) + 1, 1, v261);
  }
  unint64_t v269 = *(void *)(v267 + 16);
  unint64_t v268 = *(void *)(v267 + 24);
  if (v269 >= v268 >> 1) {
    unint64_t v267 = sub_100143454(v268 > 1, v269 + 1, 1, v267);
  }
  *(void *)(v267 + 16) = v269 + 1;
  sub_10004482C(v265, (uint64_t)&v235[v267 + v269 * v338]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v349 = v267;
  int64_t v270 = v77[2];
  int64_t v271 = v270 + 6;
  if (__OFADD__(v270, 6))
  {
    __break(1u);
    goto LABEL_136;
  }
  if (v271 > v77[3] >> 1)
  {
LABEL_136:
    if (v270 <= v271) {
      int64_t v289 = v270 + 6;
    }
    else {
      int64_t v289 = v270;
    }
    uint64_t v77 = sub_100143488((void *)1, v289, 1, v77);
  }
  uint64_t v272 = v323;
  uint64_t v273 = v322;
  unint64_t v274 = v77[2];
  unint64_t v275 = v77[3];
  unint64_t v276 = v274 + 1;
  swift_bridgeObjectRetain();
  if (v274 >= v275 >> 1) {
    uint64_t v77 = sub_100143488((void *)(v275 > 1), v274 + 1, 1, v77);
  }
  void v77[2] = v276;
  v77[v274 + 4] = v272;
  unint64_t v277 = v77[3];
  int64_t v278 = v274 + 2;
  swift_bridgeObjectRetain();
  if (v278 > (uint64_t)(v277 >> 1)) {
    uint64_t v77 = sub_100143488((void *)(v277 > 1), v278, 1, v77);
  }
  void v77[2] = v278;
  v77[v276 + 4] = v324;
  unint64_t v279 = v77[2];
  unint64_t v280 = v77[3];
  unint64_t v281 = v279 + 1;
  swift_bridgeObjectRetain();
  if (v279 >= v280 >> 1) {
    uint64_t v77 = sub_100143488((void *)(v280 > 1), v279 + 1, 1, v77);
  }
  void v77[2] = v281;
  v77[v279 + 4] = v273;
  unint64_t v282 = v77[3];
  swift_bridgeObjectRetain();
  if ((uint64_t)(v279 + 2) > (uint64_t)(v282 >> 1)) {
    uint64_t v77 = sub_100143488((void *)(v282 > 1), v279 + 2, 1, v77);
  }
  void v77[2] = v279 + 2;
  v77[v281 + 4] = v231;
  unint64_t v283 = v77[2];
  unint64_t v284 = v77[3];
  unint64_t v285 = v283 + 1;
  swift_bridgeObjectRetain();
  if (v283 >= v284 >> 1) {
    uint64_t v77 = sub_100143488((void *)(v284 > 1), v283 + 1, 1, v77);
  }
  void v77[2] = v285;
  v77[v283 + 4] = v255;
  unint64_t v286 = v77[3];
  int64_t v287 = v283 + 2;
  swift_bridgeObjectRetain();
  if (v287 > (uint64_t)(v286 >> 1)) {
    uint64_t v77 = sub_100143488((void *)(v286 > 1), v287, 1, v77);
  }
  void v77[2] = v287;
  v77[v285 + 4] = v267;
  swift_arrayDestroy();
  return (uint64_t)v77;
}

void *sub_1001616F0(uint64_t a1)
{
  sub_100129188(0, 0, 0);
  uint64_t v2 = *(void **)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v2)
  {
    uint64_t v3 = 0;
    do
    {
      uint64_t v4 = (void *)((char *)v3 + 1);
      uint64_t v5 = *(void *)(a1 + 32 + 8 * (void)v3);
      swift_bridgeObjectRetain();
      uint64_t v6 = sub_100043E80(v4, v5);
      uint64_t v8 = v7;
      swift_bridgeObjectRelease();
      unint64_t v10 = _swiftEmptyArrayStorage[2];
      unint64_t v9 = _swiftEmptyArrayStorage[3];
      if (v10 >= v9 >> 1) {
        sub_100129188(v9 > 1, v10 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v10 + 1;
      uint64_t v11 = &_swiftEmptyArrayStorage[2 * v10];
      v11[4] = v6;
      v11[5] = v8;
      uint64_t v3 = v4;
    }
    while (v2 != v4);
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

uint64_t sub_1001617FC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t destroy for CompositionPrompts.InitialPaddedUserPrompt()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for CompositionPrompts.InitialPaddedUserPrompt(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for CompositionPrompts.InitialPaddedUserPrompt(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for CompositionPrompts.InitialPaddedUserPrompt(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for CompositionPrompts.InitialPaddedUserPrompt()
{
  return &type metadata for CompositionPrompts.InitialPaddedUserPrompt;
}

unint64_t sub_1001619D8()
{
  unint64_t result = qword_1002050C0;
  if (!qword_1002050C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002050C0);
  }
  return result;
}

ValueMetadata *type metadata accessor for CompositionPrompts()
{
  return &type metadata for CompositionPrompts;
}

unsigned char *storeEnumTagSinglePayload for CompositionPrompts.InitialPaddedUserPrompt.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100161B08);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CompositionPrompts.InitialPaddedUserPrompt.CodingKeys()
{
  return &type metadata for CompositionPrompts.InitialPaddedUserPrompt.CodingKeys;
}

unint64_t sub_100161B44()
{
  unint64_t result = qword_1002050C8;
  if (!qword_1002050C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002050C8);
  }
  return result;
}

unint64_t sub_100161B9C()
{
  unint64_t result = qword_1002050D0;
  if (!qword_1002050D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002050D0);
  }
  return result;
}

unint64_t sub_100161BF4()
{
  unint64_t result = qword_1002050D8;
  if (!qword_1002050D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002050D8);
  }
  return result;
}

uint64_t sub_100161C48(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x74706D6F7270 && a2 == 0xE600000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C616E696769726FLL && a2 == 0xEC00000074786554 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x646E756F72727573 && a2 == 0xEF74786554676E69)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

unint64_t sub_100161DD8()
{
  unint64_t result = qword_1002050E0;
  if (!qword_1002050E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002050E0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for QuestionnaireAnswerFormat(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100161EF8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for QuestionnaireAnswerFormat()
{
  return &type metadata for QuestionnaireAnswerFormat;
}

uint64_t sub_100161F30()
{
  swift_getKeyPath();
  sub_100162DD0(&qword_1001FD2E8, (void (*)(uint64_t))type metadata accessor for QuestionnaireEntry);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireEntry__selectedAnswer);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_100161FEC@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_100162DD0(&qword_1001FD2E8, (void (*)(uint64_t))type metadata accessor for QuestionnaireEntry);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v4 = *(void *)(v3 + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireEntry__selectedAnswer + 8);
  *a2 = *(void *)(v3 + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireEntry__selectedAnswer);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1001620A4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_100162188(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = (void *)(a1 + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireEntry__selectedAnswer);
  *uint64_t v3 = a2;
  v3[1] = a3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001621D0()
{
  swift_getKeyPath();
  sub_100162DD0(&qword_1001FD2E8, (void (*)(uint64_t))type metadata accessor for QuestionnaireEntry);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireEntry__userCreatedAnswer);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_10016228C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_100162DD0(&qword_1001FD2E8, (void (*)(uint64_t))type metadata accessor for QuestionnaireEntry);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v4 = *(void *)(v3 + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireEntry__userCreatedAnswer + 8);
  *a2 = *(void *)(v3 + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireEntry__userCreatedAnswer);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_100162344()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_100162428(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = (void *)(a1 + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireEntry__userCreatedAnswer);
  *uint64_t v3 = a2;
  v3[1] = a3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  sub_100162DD0(&qword_1001FD2E8, (void (*)(uint64_t))type metadata accessor for QuestionnaireEntry);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100162578()
{
  swift_getKeyPath();
  sub_100162DD0(&qword_1001FD2E8, (void (*)(uint64_t))type metadata accessor for QuestionnaireEntry);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(void *)(v0 + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireEntry__selectedIndex);
}

uint64_t sub_100162628@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_100162DD0(&qword_1001FD2E8, (void (*)(uint64_t))type metadata accessor for QuestionnaireEntry);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  char v5 = *(unsigned char *)(v3 + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireEntry__selectedIndex + 8);
  *(void *)a2 = *(void *)(v3 + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireEntry__selectedIndex);
  *(unsigned char *)(a2 + 8) = v5;
  return result;
}

uint64_t sub_1001626E4()
{
  return swift_release();
}

uint64_t sub_1001627B8(uint64_t result, uint64_t a2, char a3)
{
  uint64_t v3 = result + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireEntry__selectedIndex;
  *(void *)uint64_t v3 = a2;
  *(unsigned char *)(v3 + 8) = a3 & 1;
  return result;
}

uint64_t sub_1001627D4()
{
  uint64_t v1 = type metadata accessor for NSFastEnumerationIterator();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v5 = *(void **)(v0 + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireEntry_entry);
  uint64_t result = (uint64_t)[v5 answerOptions];
  if (!result)
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v7 = (void *)result;
  id v8 = [(id)result count];

  if (!v8) {
    return 2;
  }
  uint64_t result = (uint64_t)[v5 answerOptions];
  if (!result) {
    goto LABEL_21;
  }
  unint64_t v9 = (void *)result;
  uint64_t v10 = (uint64_t)[(id)result count];

  if (v10 > 3) {
    return 1;
  }
  uint64_t result = (uint64_t)[v5 answerOptions];
  if (result)
  {
    uint64_t v11 = (void *)result;
    NSOrderedSet.makeIterator()();

    while (1)
    {
      NSFastEnumerationIterator.next()();
      if (!v20)
      {
        (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
        return 0;
      }
      sub_100007CC0(&v19, &v18);
      if (!swift_dynamicCast()) {
        break;
      }
      uint64_t v12 = String.count.getter();
      swift_bridgeObjectRelease();
      if (v12 >= 11) {
        goto LABEL_18;
      }
    }
    if (qword_1001FAC38 != -1) {
      swift_once();
    }
    uint64_t v13 = type metadata accessor for Logger();
    sub_10000EBE8(v13, (uint64_t)qword_1002127A0);
    uint64_t v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Unexpected answer format", v16, 2u);
      swift_slowDealloc();
    }

LABEL_18:
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    return 1;
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_100162AA0()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireEntry_id;
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v3 = v0 + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireEntry___observationRegistrar;
  uint64_t v4 = type metadata accessor for ObservationRegistrar();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  return swift_deallocClassInstance();
}

uint64_t sub_100162BBC()
{
  return type metadata accessor for QuestionnaireEntry();
}

uint64_t type metadata accessor for QuestionnaireEntry()
{
  uint64_t result = qword_100205130;
  if (!qword_100205130) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100162C10()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for ObservationRegistrar();
    if (v2 <= 0x3F) {
      return swift_updateClassMetadata2();
    }
  }
  return result;
}

uint64_t sub_100162D08()
{
  return sub_100162DD0(&qword_1001FAF58, (void (*)(uint64_t))&type metadata accessor for UUID);
}

uint64_t sub_100162D50@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireEntry_id;
  uint64_t v4 = type metadata accessor for UUID();
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_100162DD0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_100162E18()
{
  char v1 = *(unsigned char *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 16) + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireEntry__selectedIndex;
  *(void *)uint64_t v2 = *(void *)(v0 + 24);
  *(unsigned char *)(v2 + 8) = v1;
}

uint64_t sub_100162E40()
{
  return sub_100162428(v0[2], v0[3], v0[4]);
}

uint64_t sub_100162E68()
{
  return sub_100162E80();
}

uint64_t sub_100162E80()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = (void *)(v0[2] + OBJC_IVAR____TtC21WritingToolsUIService18QuestionnaireEntry__selectedAnswer);
  *uint64_t v2 = v0[3];
  v2[1] = v1;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100162ECC@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_100174B54((unint64_t *)&qword_1001FBD30, (void (*)(uint64_t))type metadata accessor for ProofreadingModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + OBJC_IVAR____TtC21WritingToolsUIService17ProofreadingModel__showingOriginal);
  return result;
}

uint64_t sub_100162F7C()
{
  return swift_release();
}

id sub_10016304C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_100174B54((unint64_t *)&qword_1001FD2A0, (void (*)(uint64_t))type metadata accessor for ToolModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v4 = *(void **)(v3 + 24);
  *a2 = v4;

  return v4;
}

void sub_100163104(void **a1)
{
  uint64_t v1 = *a1;
  swift_getKeyPath();
  sub_100174B54((unint64_t *)&qword_1001FD2A0, (void (*)(uint64_t))type metadata accessor for ToolModel);
  id v2 = v1;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
}

uint64_t sub_1001631E0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_100174B54((unint64_t *)&qword_1001FD2A0, (void (*)(uint64_t))type metadata accessor for ToolModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v4 = *(void *)(v3 + 48);
  uint64_t v5 = *(void *)(v3 + 56);
  uint64_t v6 = *(void *)(v3 + 64);
  *(void *)a2 = v4;
  *(void *)(a2 + 8) = v5;
  *(void *)(a2 + 16) = v6;
  char v7 = *(unsigned char *)(v3 + 72);
  *(unsigned char *)(a2 + 24) = v7;
  return sub_1000272F8(v4, v5, v6, v7);
}

uint64_t sub_10016329C(uint64_t a1)
{
  uint64_t v1 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  char v4 = *(unsigned char *)(a1 + 24);
  swift_getKeyPath();
  sub_1000272F8(v1, v2, v3, v4);
  sub_100174B54((unint64_t *)&qword_1001FD2A0, (void (*)(uint64_t))type metadata accessor for ToolModel);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  sub_100024DB4(v1, v2, v3, v4);
  return swift_release();
}

uint64_t sub_1001633B0@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_100174B54((unint64_t *)&qword_1001FD2A0, (void (*)(uint64_t))type metadata accessor for ToolModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  *a2 = *(void *)(v3 + 80);
  return swift_bridgeObjectRetain();
}

uint64_t sub_10016345C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_10016353C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  sub_1000085FC(0, &qword_1001FD300);
  **(void **)(*(void *)(v1 + 64) + 40) = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  return _swift_continuation_resume(v1);
}

uint64_t sub_1001635B4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(void *)(v3 + 24) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v22 = v4 + v2;
  }
  else {
    int64_t v22 = v4;
  }
  unint64_t v3 = sub_1001432F8(isUniquelyReferenced_nonNull_native, v22, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = *(void *)(v3 + 16);
  uint64_t v9 = (*(void *)(v3 + 24) >> 1) - v8;
  uint64_t v10 = *(void *)(type metadata accessor for Attachment(0) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  if (v9 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v13 = v3 + v12 + v11 * v8;
  unint64_t v14 = a1 + v12;
  uint64_t v15 = v11 * v2;
  unint64_t v16 = v13 + v15;
  unint64_t v17 = v14 + v15;
  if (v14 < v16 && v13 < v17) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }
  uint64_t v19 = *(void *)(v3 + 16);
  BOOL v20 = __OFADD__(v19, v2);
  uint64_t v21 = v19 + v2;
  if (!v20)
  {
    *(void *)(v3 + 16) = v21;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100163758(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!((unint64_t)*v1 >> 62))
  {
    uint64_t v4 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v5 = v4 + v3;
    if (!__OFADD__(v4, v3)) {
      goto LABEL_5;
    }
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  uint64_t v5 = v15 + v3;
  if (__OFADD__(v15, v3)) {
    goto LABEL_21;
  }
LABEL_5:
  unint64_t v6 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v1 = v6;
  if (isUniquelyReferenced_nonNull_bridgeObject)
  {
    if ((v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
    {
      uint64_t v8 = v6 & 0xFFFFFFFFFFFFFF8;
      if (v5 <= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        goto LABEL_11;
      }
    }
  }
  if (v6 >> 62) {
    goto LABEL_23;
  }
  while (1)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    swift_bridgeObjectRelease();
    *uint64_t v1 = v9;
    uint64_t v8 = v9 & 0xFFFFFFFFFFFFFF8;
LABEL_11:
    uint64_t result = sub_100172620(v8 + 8 * *(void *)(v8 + 16) + 32, (*(void *)(v8 + 24) >> 1) - *(void *)(v8 + 16), a1);
    if (v11 >= v3) {
      break;
    }
LABEL_22:
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  if (v11 >= 1)
  {
    uint64_t v12 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v13 = __OFADD__(v12, v11);
    uint64_t v14 = v12 + v11;
    if (v13)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
  }
  swift_bridgeObjectRelease();

  return specialized Array._endMutation()();
}

unint64_t sub_100163924()
{
  unint64_t result = sub_1000050D0((uint64_t)_swiftEmptyArrayStorage);
  qword_100212BA0 = result;
  return result;
}

void sub_10016394C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  char v7 = (char *)v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  uint64_t v39 = v1;
  sub_100174B54((unint64_t *)&qword_1001FBD30, (void (*)(uint64_t))type metadata accessor for ProofreadingModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v37 = OBJC_IVAR____TtC21WritingToolsUIService17ProofreadingModel__session;
  uint64_t v8 = *(void **)(v1 + OBJC_IVAR____TtC21WritingToolsUIService17ProofreadingModel__session);
  if (v8)
  {
    if (a1)
    {
      sub_1000085FC(0, &qword_100200180);
      id v9 = a1;
      id v10 = v8;
      char v11 = static NSObject.== infix(_:_:)();

      if (v11) {
        return;
      }
    }
  }
  else if (!a1)
  {
    return;
  }
  v33[0] = a1;
  uint64_t v34 = v7;
  uint64_t v35 = v5;
  uint64_t v36 = v4;
  uint64_t KeyPath = swift_getKeyPath();
  __chkstk_darwin(KeyPath);
  v33[-2] = v2;
  v33[-1] = 0;
  uint64_t v33[2] = v2 + OBJC_IVAR____TtC21WritingToolsUIService9ToolModel___observationRegistrar;
  uint64_t v39 = v2;
  v33[1] = sub_100174B54((unint64_t *)&qword_1001FD2A0, (void (*)(uint64_t))type metadata accessor for ToolModel);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  uint64_t v13 = swift_getKeyPath();
  __chkstk_darwin(v13);
  v33[-2] = v2;
  v33[-1] = _swiftEmptyArrayStorage;
  uint64_t v39 = v2;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  unint64_t v14 = sub_100005DF4((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v15 = swift_getKeyPath();
  __chkstk_darwin(v15);
  v33[-2] = v2;
  v33[-1] = v14;
  uint64_t v39 = v2;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v16 = swift_getKeyPath();
  __chkstk_darwin(v16);
  v33[-2] = v2;
  v33[-1] = 0;
  uint64_t v39 = v2;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  unint64_t v17 = sub_100005E08((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v18 = swift_getKeyPath();
  __chkstk_darwin(v18);
  v33[-2] = v2;
  v33[-1] = v17;
  uint64_t v39 = v2;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_bridgeObjectRelease();
  swift_release();
  sub_10002FAC0(0);
  uint64_t v19 = swift_getKeyPath();
  __chkstk_darwin(v19);
  v33[-2] = v2;
  v33[-1] = 0;
  uint64_t v39 = v2;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  uint64_t v20 = swift_getKeyPath();
  __chkstk_darwin(v20);
  v33[-2] = v2;
  LOBYTE(v33[-1]) = 0;
  uint64_t v39 = v2;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  swift_getKeyPath();
  uint64_t v39 = v2;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v21 = v37;
  if (*(void *)(v2 + v37))
  {
    uint64_t v23 = v35;
    uint64_t v22 = v36;
    uint64_t v24 = (uint64_t)v34;
    if (qword_1001FADF0 != -1) {
      swift_once();
    }
    swift_getKeyPath();
    uint64_t v39 = v2;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v25 = *(void **)(v2 + v21);
    if (v25)
    {
      id v26 = [v25 uuid];
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      swift_beginAccess();
      swift_retain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v38 = qword_100212BA0;
      qword_100212BA0 = 0x8000000000000000;
      sub_10016F9F8(v2, v24, isUniquelyReferenced_nonNull_native);
      qword_100212BA0 = v38;
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v24, v22);
      swift_endAccess();
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    uint64_t v29 = v35;
    uint64_t v28 = v36;
    uint64_t v30 = (uint64_t)v34;
    uint64_t v31 = (void *)v33[0];
    if (v33[0])
    {
      if (qword_1001FADF0 != -1) {
        swift_once();
      }
      id v32 = [v31 uuid];
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      swift_beginAccess();
      sub_10016C510(v30);
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v30, v28);
      swift_endAccess();
      swift_release();
    }
  }
}

void *sub_1001640B8()
{
  return sub_1001646BC((uint64_t)&unk_100194F80, &OBJC_IVAR____TtC21WritingToolsUIService17ProofreadingModel__session);
}

id sub_1001640CC@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_100164764(a1, &OBJC_IVAR____TtC21WritingToolsUIService17ProofreadingModel__session, a2);
}

uint64_t sub_1001640E0(void **a1)
{
  uint64_t v1 = *a1;
  swift_getKeyPath();
  sub_100174B54((unint64_t *)&qword_1001FBD30, (void (*)(uint64_t))type metadata accessor for ProofreadingModel);
  id v2 = v1;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();

  return swift_release();
}

void sub_1001641BC(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + OBJC_IVAR____TtC21WritingToolsUIService17ProofreadingModel__session);
  *(void *)(a1 + OBJC_IVAR____TtC21WritingToolsUIService17ProofreadingModel__session) = a2;
  id v3 = a2;
  sub_10016394C(v2);
}

uint64_t sub_100164218()
{
  return sub_100164D94();
}

uint64_t sub_10016422C()
{
  return swift_release();
}

uint64_t sub_10016430C()
{
  return sub_100164428();
}

uint64_t sub_100164320@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1001644F8(a1, &OBJC_IVAR____TtC21WritingToolsUIService17ProofreadingModel__suggestions, a2);
}

uint64_t sub_100164334()
{
  return swift_release();
}

uint64_t sub_100164414()
{
  return sub_100164428();
}

uint64_t sub_100164428()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1001644E4@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1001644F8(a1, &OBJC_IVAR____TtC21WritingToolsUIService17ProofreadingModel__suggestionContextMapping, a2);
}

uint64_t sub_1001644F8@<X0>(uint64_t *a1@<X0>, void *a2@<X4>, void *a3@<X8>)
{
  uint64_t v5 = *a1;
  swift_getKeyPath();
  sub_100174B54((unint64_t *)&qword_1001FBD30, (void (*)(uint64_t))type metadata accessor for ProofreadingModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v6 = (void *)(v5 + *a2);
  swift_beginAccess();
  *a3 = *v6;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1001645C8()
{
  return swift_release();
}

void *sub_1001646A8()
{
  return sub_1001646BC((uint64_t)&unk_100195048, &OBJC_IVAR____TtC21WritingToolsUIService17ProofreadingModel__expandedSuggestion);
}

void *sub_1001646BC(uint64_t a1, void *a2)
{
  swift_getKeyPath();
  sub_100174B54((unint64_t *)&qword_1001FBD30, (void (*)(uint64_t))type metadata accessor for ProofreadingModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v4 = *(void **)(v2 + *a2);
  id v5 = v4;
  return v4;
}

id sub_100164764@<X0>(uint64_t *a1@<X0>, void *a2@<X4>, void *a3@<X8>)
{
  uint64_t v5 = *a1;
  swift_getKeyPath();
  sub_100174B54((unint64_t *)&qword_1001FBD30, (void (*)(uint64_t))type metadata accessor for ProofreadingModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v6 = *(void **)(v5 + *a2);
  *a3 = v6;

  return v6;
}

uint64_t sub_100164828(void **a1)
{
  uint64_t v1 = *a1;
  swift_getKeyPath();
  sub_100174B54((unint64_t *)&qword_1001FBD30, (void (*)(uint64_t))type metadata accessor for ProofreadingModel);
  id v2 = v1;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();

  return swift_release();
}

uint64_t sub_100164904()
{
  return sub_100164428();
}

uint64_t sub_100164918()
{
  return swift_release();
}

uint64_t sub_1001649F8()
{
  return sub_100164B18((uint64_t)&unk_1001951D8, &OBJC_IVAR____TtC21WritingToolsUIService17ProofreadingModel__modelInfoString);
}

uint64_t sub_100164A0C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_100164BE0(a1, &OBJC_IVAR____TtC21WritingToolsUIService17ProofreadingModel__modelInfoString, a2);
}

uint64_t sub_100164A20()
{
  return swift_release();
}

uint64_t sub_100164B04()
{
  return sub_100164B18((uint64_t)&unk_100195200, &OBJC_IVAR____TtC21WritingToolsUIService17ProofreadingModel__inputStringForFeedback);
}

uint64_t sub_100164B18(uint64_t a1, void *a2)
{
  swift_getKeyPath();
  sub_100174B54((unint64_t *)&qword_1001FBD30, (void (*)(uint64_t))type metadata accessor for ProofreadingModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v4 = *(void *)(v2 + *a2);
  swift_bridgeObjectRetain();
  return v4;
}

uint64_t sub_100164BCC@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_100164BE0(a1, &OBJC_IVAR____TtC21WritingToolsUIService17ProofreadingModel__inputStringForFeedback, a2);
}

uint64_t sub_100164BE0@<X0>(uint64_t *a1@<X0>, void *a2@<X4>, void *a3@<X8>)
{
  uint64_t v5 = *a1;
  swift_getKeyPath();
  sub_100174B54((unint64_t *)&qword_1001FBD30, (void (*)(uint64_t))type metadata accessor for ProofreadingModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v6 = (void *)(v5 + *a2);
  uint64_t v7 = v6[1];
  *a3 = *v6;
  a3[1] = v7;
  return swift_bridgeObjectRetain();
}

uint64_t sub_100164C9C()
{
  return swift_release();
}

uint64_t sub_100164D80()
{
  return sub_100164D94();
}

uint64_t sub_100164D94()
{
  return swift_retain();
}

uint64_t sub_100164E38@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_100164E4C(a1, &OBJC_IVAR____TtC21WritingToolsUIService17ProofreadingModel__analyticsInstance, a2);
}

uint64_t sub_100164E4C@<X0>(uint64_t *a1@<X0>, void *a2@<X4>, void *a3@<X8>)
{
  uint64_t v5 = *a1;
  swift_getKeyPath();
  sub_100174B54((unint64_t *)&qword_1001FBD30, (void (*)(uint64_t))type metadata accessor for ProofreadingModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  *a3 = *(void *)(v5 + *a2);
  return swift_retain();
}

uint64_t sub_100164F04()
{
  return swift_release();
}

uint64_t sub_100164FE4(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + OBJC_IVAR____TtC21WritingToolsUIService17ProofreadingModel__analyticsInstance) = a2;
  swift_retain();
  return swift_release();
}

uint64_t sub_100165028()
{
  swift_getKeyPath();
  sub_100174B54((unint64_t *)&qword_1001FBD30, (void (*)(uint64_t))type metadata accessor for ProofreadingModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC21WritingToolsUIService17ProofreadingModel__showingOriginal);
}

void sub_1001650D0(uint64_t a1, char a2)
{
  uint64_t v3 = OBJC_IVAR____TtC21WritingToolsUIService17ProofreadingModel__showingOriginal;
  *(unsigned char *)(a1 + OBJC_IVAR____TtC21WritingToolsUIService17ProofreadingModel__showingOriginal) = a2;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = (void *)Strong;
    swift_getKeyPath();
    sub_100174B54((unint64_t *)&qword_1001FBD30, (void (*)(uint64_t))type metadata accessor for ProofreadingModel);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v6 = *(void **)(a1 + OBJC_IVAR____TtC21WritingToolsUIService17ProofreadingModel__session);
    if (v6)
    {
      swift_getKeyPath();
      id v7 = v6;
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      if (*(unsigned char *)(a1 + v3)) {
        uint64_t v8 = 1;
      }
      else {
        uint64_t v8 = 2;
      }
      [v5 writingToolsSession:v7 didReceiveAction:v8];
      swift_unknownObjectRelease();
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_10016521C()
{
  swift_getKeyPath();
  sub_100174B54((unint64_t *)&qword_1001FD2A0, (void (*)(uint64_t))type metadata accessor for ToolModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (*(unsigned char *)(v0 + 88)) {
    return 1;
  }
  swift_getKeyPath();
  sub_100174B54((unint64_t *)&qword_1001FBD30, (void (*)(uint64_t))type metadata accessor for ProofreadingModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC21WritingToolsUIService17ProofreadingModel__showingOriginal)) {
    return 1;
  }
  swift_getKeyPath();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  swift_retain();
  unint64_t v1 = swift_bridgeObjectRetain();
  unint64_t v2 = (unint64_t)sub_100173A9C(v1, v0);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v3 = v2 >> 62 ? _CocoaArrayWrapper.endIndex.getter() : *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRelease();
  if (!v3) {
    return 1;
  }
  swift_getKeyPath();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_retain();
  unint64_t v4 = swift_bridgeObjectRetain();
  unint64_t v5 = (unint64_t)sub_100173A9C(v4, v0);
  swift_release();
  swift_bridgeObjectRelease();
  if (v5 >> 62) {
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
  }
  else {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v6 != 1) {
    return 0;
  }
  swift_getKeyPath();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_retain();
  unint64_t v7 = swift_bridgeObjectRetain();
  unint64_t v8 = (unint64_t)sub_100173A9C(v7, v0);
  swift_release();
  swift_bridgeObjectRelease();
  if (!(v8 >> 62))
  {
    uint64_t result = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (result) {
      goto LABEL_11;
    }
LABEL_21:
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_22;
  }
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  if (!result) {
    goto LABEL_21;
  }
LABEL_11:
  if ((v8 & 0xC000000000000001) != 0)
  {
LABEL_22:
    id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_14;
  }
  if (*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v10 = *(id *)(v8 + 32);
LABEL_14:
    char v11 = v10;
    swift_bridgeObjectRelease();
    uint64_t v12 = sub_1001694F0(v11);

    return v12 == 1;
  }
  __break(1u);
  return result;
}

uint64_t sub_100165590@<X0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  sub_100174B54((unint64_t *)&qword_1001FBD30, (void (*)(uint64_t))type metadata accessor for ProofreadingModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v3 = v1 + OBJC_IVAR____TtC21WritingToolsUIService17ProofreadingModel__mostRecentlyReviewedSuggestionUUID;
  swift_beginAccess();
  return sub_10000EC20(v3, a1);
}

uint64_t sub_10016565C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_100174B54((unint64_t *)&qword_1001FBD30, (void (*)(uint64_t))type metadata accessor for ProofreadingModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v4 = v3 + OBJC_IVAR____TtC21WritingToolsUIService17ProofreadingModel__mostRecentlyReviewedSuggestionUUID;
  swift_beginAccess();
  return sub_10000EC20(v4, a2);
}

uint64_t sub_100165728(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = sub_1000063C0((uint64_t *)&unk_1001FB400);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10000EC20(a1, (uint64_t)v6);
  uint64_t v7 = *a2;
  swift_getKeyPath();
  uint64_t v10 = v7;
  char v11 = v6;
  uint64_t v12 = v7;
  sub_100174B54((unint64_t *)&qword_1001FBD30, (void (*)(uint64_t))type metadata accessor for ProofreadingModel);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  return sub_10002784C((uint64_t)v6, (uint64_t *)&unk_1001FB400);
}

uint64_t sub_100165864(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + OBJC_IVAR____TtC21WritingToolsUIService17ProofreadingModel__mostRecentlyReviewedSuggestionUUID;
  swift_beginAccess();
  sub_100174BB8(a2, v3);
  return swift_endAccess();
}

uint64_t sub_1001658D0(char a1)
{
  uint64_t v2 = v1;
  swift_getKeyPath();
  sub_100174B54((unint64_t *)&qword_1001FD2A0, (void (*)(uint64_t))type metadata accessor for ToolModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  if (*(unsigned char *)(v1 + 88) & 1) == 0 && (a1)
  {
    _StringGuts.grow(_:)(38);
    swift_bridgeObjectRelease();
    swift_getKeyPath();
    sub_100174B54((unint64_t *)&qword_1001FBD30, (void (*)(uint64_t))type metadata accessor for ProofreadingModel);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v5 = (void *)(v1 + OBJC_IVAR____TtC21WritingToolsUIService17ProofreadingModel__suggestions);
    swift_beginAccess();
    if (*v5 >> 62)
    {
      swift_bridgeObjectRetain();
      _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    v6._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v6);
    swift_bridgeObjectRelease();
    uint64_t v8 = 0xD000000000000024;
    unint64_t v7 = 0x80000001001A2BE0;
    swift_getKeyPath();
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v9 = *(void *)(v2 + 96);
    if (v9)
    {
      swift_errorRetain();
      swift_bridgeObjectRelease();
      swift_getErrorValue();
      v10._countAndFlagsBits = Error.localizedDescription.getter();
      String.append(_:)(v10);
      swift_bridgeObjectRelease();
      uint64_t v8 = 0xD000000000000011;
      unint64_t v7 = 0x800000010019EA10;
      swift_getKeyPath();
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      if (*(void *)(v2 + OBJC_IVAR____TtC21WritingToolsUIService17ProofreadingModel__analyticsInstance))
      {
        swift_getKeyPath();
        swift_errorRetain();
        swift_retain();
        ObservationRegistrar.access<A, B>(_:keyPath:)();
        uint64_t result = swift_release();
        int v11 = *(unsigned __int8 *)(v2 + 72);
        if (v11 == 255)
        {
          __break(1u);
          return result;
        }
        uint64_t v13 = *(void *)(v2 + 56);
        uint64_t v12 = *(void *)(v2 + 64);
        uint64_t v14 = *(void *)(v2 + 48);
        sub_10000ED40(v14, v13, v12, v11);
        sub_10000DC14(v9, v14, v13, v12, v11);
        swift_errorRelease();
        sub_100024DB4(v14, v13, v12, v11);
        swift_errorRelease();
        swift_release();
      }
      else
      {
        swift_errorRelease();
      }
    }
    sub_100065C00((uint64_t)"ProofreadGeneration", 19, 2, v8, v7);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100165C94()
{
  v1[41] = v0;
  sub_1000063C0(&qword_1001FF820);
  v1[42] = swift_task_alloc();
  sub_1000063C0(&qword_1002001E8);
  v1[43] = swift_task_alloc();
  v1[44] = type metadata accessor for MainActor();
  v1[45] = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[46] = v3;
  v1[47] = v2;
  return _swift_task_switch(sub_100165D90, v3, v2);
}

uint64_t sub_100165D90()
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  v0[48] = Strong;
  if (!Strong)
  {
LABEL_4:
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
  uint64_t v2 = (void *)Strong;
  uint64_t v3 = v0[41];
  swift_getKeyPath();
  v0[49] = OBJC_IVAR____TtC21WritingToolsUIService17ProofreadingModel___observationRegistrar;
  v0[37] = v3;
  v0[50] = sub_100174B54((unint64_t *)&qword_1001FBD30, (void (*)(uint64_t))type metadata accessor for ProofreadingModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v4 = OBJC_IVAR____TtC21WritingToolsUIService17ProofreadingModel__session;
  v0[51] = OBJC_IVAR____TtC21WritingToolsUIService17ProofreadingModel__session;
  if (*(void *)(v3 + v4))
  {
    swift_unknownObjectRelease();
    goto LABEL_4;
  }
  uint64_t v7 = v0[41];
  id v8 = [objc_allocWithZone((Class)WTSession) initWithType:1 textViewDelegate:0];
  swift_getKeyPath();
  uint64_t v9 = swift_task_alloc();
  *(void *)(v9 + 16) = v7;
  *(void *)(v9 + 24) = v8;
  v0[27] = v7;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  v0[52] = 0;
  swift_release();

  swift_task_dealloc();
  swift_getKeyPath();
  v0[25] = v7;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t v10 = swift_release();
  int v11 = *(void **)(v3 + v4);
  v0[53] = v11;
  if (v11)
  {
    v0[2] = v0;
    v0[7] = v0 + 26;
    v0[3] = sub_1001660AC;
    uint64_t v12 = swift_continuation_init();
    v0[20] = _NSConcreteStackBlock;
    v0[21] = 0x40000000;
    v0[22] = sub_10016353C;
    v0[23] = &unk_1001F0B40;
    v0[24] = v12;
    [v2 willBeginWritingToolsSession:v11 requestContexts:v0 + 20];
    uint64_t v10 = (uint64_t)(v0 + 2);
  }
  else
  {
    __break(1u);
  }
  return _swift_continuation_await(v10);
}

uint64_t sub_1001660AC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 376);
  uint64_t v2 = *(void *)(*(void *)v0 + 368);
  return _swift_task_switch(sub_1001661B4, v2, v1);
}

uint64_t sub_1001661B4()
{
  uint64_t v2 = v0[52];
  uint64_t v1 = (void *)v0[53];
  uint64_t v3 = v0[41];
  swift_release();
  uint64_t v4 = v0[26];
  swift_getKeyPath();
  uint64_t v5 = swift_task_alloc();
  *(void *)(v5 + 16) = v3;
  *(void *)(v5 + 24) = v4;
  v0[28] = v3;
  sub_100174B54((unint64_t *)&qword_1001FD2A0, (void (*)(uint64_t))type metadata accessor for ToolModel);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();

  swift_getKeyPath();
  uint64_t v83 = v0;
  v0[29] = v3;
  Swift::String v6 = v0 + 29;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  uint64_t v81 = v3;
  unint64_t v8 = *(void *)(v3 + 80);
  if (!v8)
  {
    __break(1u);
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  if (v8 >> 62)
  {
LABEL_34:
    swift_bridgeObjectRetain();
    uint64_t v46 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v46)
    {
LABEL_4:
      uint64_t v9 = v83[41];
      swift_getKeyPath();
      v83[30] = v9;
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      uint64_t result = swift_release();
      unint64_t v10 = *(void *)(v81 + 80);
      if (v10)
      {
        if (v10 >> 62)
        {
          swift_bridgeObjectRetain_n();
          uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
          if (v11)
          {
LABEL_7:
            uint64_t v12 = 0;
            unint64_t v78 = v6 + 5;
            unint64_t v80 = v10 & 0xC000000000000001;
            unint64_t v79 = v10;
            while (1)
            {
              if (v80) {
                uint64_t v13 = (uint64_t *)specialized _ArrayBuffer._getElementSlowPath(_:)();
              }
              else {
                uint64_t v13 = (uint64_t *)*(id *)(v10 + 8 * v12 + 32);
              }
              Swift::String v6 = v13;
              if (__OFADD__(v12, 1))
              {
                __break(1u);
                goto LABEL_34;
              }
              uint64_t v14 = v83[41];
              swift_getKeyPath();
              v83[31] = v14;
              swift_bridgeObjectRetain();
              ObservationRegistrar.access<A, B>(_:keyPath:)();
              swift_release();
              uint64_t v15 = *(void *)(v81 + 80);
              if (!v15)
              {
                swift_bridgeObjectRelease();
LABEL_18:
                swift_bridgeObjectRelease_n();
                if (qword_1001FAC28 != -1) {
                  swift_once();
                }
                uint64_t v26 = type metadata accessor for Logger();
                sub_10000EBE8(v26, (uint64_t)qword_100212770);
                uint64_t v27 = Logger.logObject.getter();
                os_log_type_t v28 = static os_log_type_t.default.getter();
                if (os_log_type_enabled(v27, v28))
                {
                  uint64_t v29 = (uint8_t *)swift_slowAlloc();
                  *(_WORD *)uint64_t v29 = 0;
                  _os_log_impl((void *)&_mh_execute_header, v27, v28, "contexts changed while getting actual context range for proofread - stopping", v29, 2u);
                  swift_slowDealloc();
                  swift_unknownObjectRelease();
                }
                else
                {

                  swift_unknownObjectRelease();
                }

                goto LABEL_48;
              }
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              unsigned __int8 v16 = sub_10016BFA8(v10, v15);
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease();
              if ((v16 & 1) == 0) {
                goto LABEL_18;
              }
              uint64_t v82 = v12 + 1;
              uint64_t v17 = v11;
              uint64_t v18 = v83[43];
              id v19 = [objc_allocWithZone((Class)type metadata accessor for TextCompositionClient()) init];
              id v20 = [v6 attributedText];
              [v6 range];
              uint64_t v21 = type metadata accessor for TextCompositionClient.RewritingType();
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v18, 1, 1, v21);
              uint64_t v23 = dispatch thunk of TextCompositionClient.actualRangeForRewritingOrReview(of:range:rewritingType:options:)();
              uint64_t v24 = v83[43];
              if (v2) {
                break;
              }
              uint64_t v25 = v22;
              sub_10002784C(v24, &qword_1002001E8);

              [v6 setRange:v23, v25];
              ++v12;
              uint64_t v11 = v17;
              unint64_t v10 = v79;
              if (v82 == v17) {
                goto LABEL_45;
              }
            }
            sub_10002784C(v24, &qword_1002001E8);
            swift_bridgeObjectRelease();

            swift_errorRetain();
            sub_10002FAC0(v2);
            swift_errorRelease();
            if (qword_1001FAC28 != -1) {
              swift_once();
            }
            uint64_t v30 = type metadata accessor for Logger();
            sub_10000EBE8(v30, (uint64_t)qword_100212770);
            swift_errorRetain();
            swift_errorRetain();
            uint64_t v31 = Logger.logObject.getter();
            os_log_type_t v32 = static os_log_type_t.error.getter();
            if (os_log_type_enabled(v31, v32))
            {
              uint64_t v33 = (uint8_t *)swift_slowAlloc();
              uint64_t v34 = (void *)swift_slowAlloc();
              *(_DWORD *)uint64_t v33 = 138412290;
              swift_errorRetain();
              uint64_t v35 = _swift_stdlib_bridgeErrorToNSError();
              uint64_t *v78 = v35;
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              *uint64_t v34 = v35;
              swift_errorRelease();
              swift_errorRelease();
              _os_log_impl((void *)&_mh_execute_header, v31, v32, "Error occurred when getting actual range: %@", v33, 0xCu);
              sub_1000063C0(&qword_1001FED90);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {
              swift_errorRelease();
              swift_errorRelease();
            }
            uint64_t v36 = v83[41];

            swift_getKeyPath();
            v83[32] = v36;
            ObservationRegistrar.access<A, B>(_:keyPath:)();
            swift_release();
            if (!*(void *)(v36 + OBJC_IVAR____TtC21WritingToolsUIService17ProofreadingModel__analyticsInstance))
            {

              swift_bridgeObjectRelease();
              swift_errorRelease();
              swift_unknownObjectRelease();
              goto LABEL_48;
            }
            uint64_t v37 = v83[41];
            swift_getKeyPath();
            v83[33] = v37;
            swift_errorRetain();
            swift_retain();
            ObservationRegistrar.access<A, B>(_:keyPath:)();
            uint64_t result = swift_release();
            int v38 = *(unsigned __int8 *)(v37 + 72);
            if (v38 == 255) {
              goto LABEL_54;
            }
            uint64_t v39 = (void *)v83[41];
            uint64_t v41 = v39[7];
            uint64_t v40 = v39[8];
            uint64_t v42 = v39[6];
            sub_10000ED40(v42, v41, v40, v38);
            swift_bridgeObjectRelease();
            sub_10000DC14(v2, v42, v41, v40, v38);

            swift_errorRelease();
            swift_unknownObjectRelease();
            uint64_t v43 = v42;
            uint64_t v44 = v41;
            uint64_t v45 = v40;
            goto LABEL_42;
          }
        }
        else
        {
          uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain_n();
          if (v11) {
            goto LABEL_7;
          }
        }
LABEL_45:
        uint64_t v64 = v83[51];
        uint64_t v65 = v83[41];
        swift_bridgeObjectRelease();
        swift_getKeyPath();
        v83[35] = v65;
        ObservationRegistrar.access<A, B>(_:keyPath:)();
        swift_release();
        uint64_t v66 = *(void **)(v65 + v64);
        if (v66)
        {
          uint64_t v67 = (void *)v83[48];
          sub_1000085FC(0, &qword_1001FD300);
          id v68 = v66;
          Class isa = Array._bridgeToObjectiveC()().super.isa;
          [v67 didBeginWritingToolsSession:v68 contexts:isa];
        }
        uint64_t v70 = v83[41];
        uint64_t v71 = v83[42];
        uint64_t v72 = type metadata accessor for TaskPriority();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v72 - 8) + 56))(v71, 1, 1, v72);
        swift_retain();
        uint64_t v73 = static MainActor.shared.getter();
        unint64_t v74 = (void *)swift_allocObject();
        v74[2] = v73;
        v74[3] = &protocol witness table for MainActor;
        v74[4] = v10;
        v74[5] = v70;
        uint64_t v75 = sub_1001228D0(v71, (uint64_t)&unk_1002059B8, (uint64_t)v74);
        swift_getKeyPath();
        uint64_t v76 = swift_task_alloc();
        *(void *)(v76 + 16) = v70;
        *(void *)(v76 + 24) = v75;
        v83[36] = v70;
        ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
        swift_unknownObjectRelease();
        swift_release();
        swift_release();
        swift_task_dealloc();
        goto LABEL_48;
      }
      goto LABEL_52;
    }
  }
  else if (*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_4;
  }
  if (qword_1001FAC28 != -1) {
    swift_once();
  }
  uint64_t v47 = type metadata accessor for Logger();
  sub_10000EBE8(v47, (uint64_t)qword_100212770);
  uint64_t v48 = Logger.logObject.getter();
  os_log_type_t v49 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v48, v49))
  {
    uint64_t v50 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v50 = 0;
    _os_log_impl((void *)&_mh_execute_header, v48, v49, "Error in proofreading: Unable to retrieve text from selection", v50, 2u);
    swift_slowDealloc();
  }
  uint64_t v51 = v83[41];

  sub_1000063C0(&qword_1001FD2D8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10018A720;
  *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 40) = v53;
  *(void *)(inited + 72) = &type metadata for String;
  *(void *)(inited + 48) = 0xD000000000000026;
  *(void *)(inited + 56) = 0x800000010019EB10;
  sub_1000051F0(inited);
  id v54 = objc_allocWithZone((Class)NSError);
  NSString v55 = String._bridgeToObjectiveC()();
  Class v56 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v57 = [v54 initWithDomain:v55 code:1 userInfo:v56];

  sub_10002FAC0((uint64_t)v57);
  swift_getKeyPath();
  v83[38] = v51;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (!*(void *)(v51 + OBJC_IVAR____TtC21WritingToolsUIService17ProofreadingModel__analyticsInstance))
  {
    swift_unknownObjectRelease();
    goto LABEL_48;
  }
  uint64_t v58 = v83[41];
  swift_getKeyPath();
  v83[39] = v58;
  swift_retain();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v59 = *(void *)(v58 + 96);
  swift_getKeyPath();
  v83[40] = v58;
  swift_errorRetain();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  int v38 = *(unsigned __int8 *)(v58 + 72);
  if (v38 != 255)
  {
    uint64_t v60 = (void *)v83[41];
    uint64_t v62 = v60[7];
    uint64_t v61 = v60[8];
    uint64_t v63 = v60[6];
    sub_10000ED40(v63, v62, v61, v38);
    sub_10000DC14(v59, v63, v62, v61, v38);
    swift_unknownObjectRelease();
    uint64_t v43 = v63;
    uint64_t v44 = v62;
    uint64_t v45 = v61;
LABEL_42:
    sub_100024DB4(v43, v44, v45, v38);
    swift_errorRelease();
    swift_release();
LABEL_48:
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v77 = (uint64_t (*)(void))v83[1];
    return v77();
  }
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
  return result;
}

uint64_t sub_100166F1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[6] = a4;
  v5[7] = a5;
  type metadata accessor for MainActor();
  v5[8] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[9] = v7;
  v5[10] = v6;
  return _swift_task_switch(sub_100166FB4, v7, v6);
}

uint64_t sub_100166FB4()
{
  uint64_t v1 = v0[7];
  swift_getKeyPath();
  v0[2] = v1;
  v0[11] = OBJC_IVAR____TtC21WritingToolsUIService9ToolModel___observationRegistrar;
  v0[12] = sub_100174B54((unint64_t *)&qword_1001FD2A0, (void (*)(uint64_t))type metadata accessor for ToolModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 80);
  if (!v2
    || (unint64_t v3 = v0[6],
        swift_bridgeObjectRetain(),
        swift_bridgeObjectRetain(),
        unsigned __int8 v4 = sub_10016BFA8(v3, v2),
        swift_bridgeObjectRelease(),
        swift_bridgeObjectRelease(),
        (v4 & 1) == 0))
  {
    swift_release();
    if (qword_1001FAC28 != -1) {
      swift_once();
    }
    uint64_t v12 = type metadata accessor for Logger();
    sub_10000EBE8(v12, (uint64_t)qword_100212770);
    uint64_t v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "contexts changed while attemping to run proofread in contexts - stopping", v15, 2u);
      swift_slowDealloc();
    }

    goto LABEL_20;
  }
  unint64_t v6 = v0[6];
  uint64_t v5 = v0[7];
  swift_getKeyPath();
  uint64_t v7 = swift_task_alloc();
  *(void *)(v7 + 16) = v5;
  *(unsigned char *)(v7 + 24) = 1;
  v0[3] = v5;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  v0[13] = 0;
  swift_release();
  swift_task_dealloc();
  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
    v0[14] = v19;
    if (v19) {
      goto LABEL_5;
    }
  }
  else
  {
    uint64_t v8 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    v0[14] = v8;
    if (v8)
    {
LABEL_5:
      uint64_t v9 = v0[6];
      uint64_t v10 = OBJC_IVAR____TtC21WritingToolsUIService17ProofreadingModel__session;
      v0[15] = OBJC_IVAR____TtC21WritingToolsUIService17ProofreadingModel___observationRegistrar;
      v0[16] = v10;
      if ((v9 & 0xC000000000000001) != 0)
      {
        id v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v10 = v0[16];
      }
      else
      {
        id v11 = *(id *)(v9 + 32);
      }
      v0[17] = v11;
      v0[18] = 1;
      uint64_t v16 = v0[7];
      swift_getKeyPath();
      v0[4] = v16;
      sub_100174B54((unint64_t *)&qword_1001FBD30, (void (*)(uint64_t))type metadata accessor for ProofreadingModel);
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      if (*(void *)(v16 + v10))
      {
        uint64_t v17 = (void *)swift_task_alloc();
        v0[19] = v17;
        *uint64_t v17 = v0;
        v17[1] = sub_10016743C;
        return sub_1001677CC((uint64_t)v11);
      }
    }
  }
  swift_release();
  uint64_t v20 = v0[7];
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  uint64_t v21 = swift_task_alloc();
  *(void *)(v21 + 16) = v20;
  *(unsigned char *)(v21 + 24) = 0;
  v0[5] = v20;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  swift_task_dealloc();
LABEL_20:
  uint64_t v22 = (uint64_t (*)(void))v0[1];
  return v22();
}

uint64_t sub_10016743C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 72);
  return _swift_task_switch(sub_10016755C, v3, v2);
}

id sub_10016755C()
{
  uint64_t v1 = (void *)v0[17];
  char v2 = static Task<>.isCancelled.getter();

  if (v2)
  {
    swift_release();
    swift_bridgeObjectRelease();
LABEL_14:
    uint64_t v12 = (uint64_t (*)(void))v0[1];
    return (id)v12();
  }
  uint64_t v3 = v0[18];
  if (v3 == v0[14])
  {
LABEL_13:
    swift_release();
    uint64_t v10 = v0[7];
    swift_bridgeObjectRelease();
    swift_getKeyPath();
    uint64_t v11 = swift_task_alloc();
    *(void *)(v11 + 16) = v10;
    *(unsigned char *)(v11 + 24) = 0;
    v0[5] = v10;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    swift_task_dealloc();
    goto LABEL_14;
  }
  uint64_t v4 = v0[6];
  if ((v4 & 0xC000000000000001) != 0) {
    id result = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else {
    id result = *(id *)(v4 + 8 * v3 + 32);
  }
  unint64_t v6 = result;
  v0[17] = result;
  v0[18] = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
    return result;
  }
  uint64_t v7 = v0[16];
  uint64_t v8 = v0[7];
  swift_getKeyPath();
  v0[4] = v8;
  sub_100174B54((unint64_t *)&qword_1001FBD30, (void (*)(uint64_t))type metadata accessor for ProofreadingModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (!*(void *)(v8 + v7))
  {

    goto LABEL_13;
  }
  uint64_t v9 = (void *)swift_task_alloc();
  v0[19] = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_10016743C;
  return (id)sub_1001677CC((uint64_t)v6);
}

uint64_t sub_1001677CC(uint64_t a1)
{
  v2[83] = v1;
  v2[82] = a1;
  uint64_t v3 = type metadata accessor for UUID();
  v2[84] = v3;
  v2[85] = *(void *)(v3 - 8);
  v2[86] = swift_task_alloc();
  uint64_t v4 = sub_1000063C0(&qword_100205970);
  v2[87] = v4;
  v2[88] = *(void *)(v4 - 8);
  v2[89] = swift_task_alloc();
  uint64_t v5 = sub_1000063C0(&qword_100205978);
  v2[90] = v5;
  v2[91] = *(void *)(v5 - 8);
  v2[92] = swift_task_alloc();
  v2[93] = type metadata accessor for MainActor();
  v2[94] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[95] = v7;
  v2[96] = v6;
  return _swift_task_switch(sub_10016798C, v7, v6);
}

uint64_t sub_10016798C()
{
  uint64_t v1 = v0[83];
  swift_getKeyPath();
  v0[97] = OBJC_IVAR____TtC21WritingToolsUIService17ProofreadingModel___observationRegistrar;
  v0[80] = v1;
  v0[98] = sub_100174B54((unint64_t *)&qword_1001FBD30, (void (*)(uint64_t))type metadata accessor for ProofreadingModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v2 = OBJC_IVAR____TtC21WritingToolsUIService17ProofreadingModel__analyticsInstance;
  v0[99] = OBJC_IVAR____TtC21WritingToolsUIService17ProofreadingModel__analyticsInstance;
  if (*(void *)(v1 + v2))
  {
    uint64_t v3 = v0[83];
    swift_getKeyPath();
    v0[79] = v3;
    sub_100174B54((unint64_t *)&qword_1001FD2A0, (void (*)(uint64_t))type metadata accessor for ToolModel);
    swift_retain();
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    uint64_t v4 = (void *)swift_release();
    int v9 = *(unsigned __int8 *)(v3 + 72);
    if (v9 == 255)
    {
LABEL_9:
      __break(1u);
      return __sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v4, v5, v6, v7, v8);
    }
    uint64_t v10 = (void *)v0[83];
    uint64_t v12 = v10[7];
    uint64_t v11 = v10[8];
    uint64_t v13 = v10[6];
    sub_10000ED40(v13, v12, v11, v9);
    sub_10000BFB0(v13, v12, v11, v9, 0, 0, 0, 0, 2);
    sub_100024DB4(v13, v12, v11, v9);
    swift_release();
  }
  uint64_t v14 = v0[83];
  uint64_t v15 = (void *)v0[82];
  uint64_t v16 = (objc_class *)type metadata accessor for TextCompositionClient();
  v0[100] = v16;
  id v17 = [objc_allocWithZone(v16) init];
  id v18 = [v15 attributedText];
  [v15 range];
  sub_1000063C0(&qword_1001FD2D8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10018A720;
  *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 40) = v20;
  swift_getKeyPath();
  v0[101] = OBJC_IVAR____TtC21WritingToolsUIService9ToolModel___observationRegistrar;
  v0[78] = v14;
  v0[102] = sub_100174B54((unint64_t *)&qword_1001FD2A0, (void (*)(uint64_t))type metadata accessor for ToolModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v4 = *(void **)(v14 + 24);
  if (!v4)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v21 = v0[89];
  uint64_t v22 = v0[88];
  uint64_t v23 = v0[87];
  unsigned int v24 = [v4 pid];
  *(void *)(inited + 72) = &type metadata for Int32;
  *(_DWORD *)(inited + 48) = v24;
  sub_1000051F0(inited);
  dispatch thunk of TextCompositionClient.streamForReview(of:range:options:)();

  swift_bridgeObjectRelease();
  AsyncThrowingStream.makeAsyncIterator()();
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
  v0[103] = OBJC_IVAR____TtC21WritingToolsUIService17ProofreadingModel__session;
  v0[104] = OBJC_IVAR____TtC21WritingToolsUIService17ProofreadingModel__suggestionContextMapping;
  v0[105] = OBJC_IVAR____TtC21WritingToolsUIService17ProofreadingModel__suggestions;
  uint64_t v25 = static MainActor.shared.getter();
  v0[106] = v25;
  uint64_t v26 = (void *)swift_task_alloc();
  v0[107] = v26;
  *uint64_t v26 = v0;
  v26[1] = sub_100167DCC;
  uint64_t v7 = v0[90];
  uint64_t v6 = &protocol witness table for MainActor;
  uint64_t v4 = v0 + 24;
  uint64_t v5 = v25;
  uint64_t v8 = v0 + 77;
  return __sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v4, v5, v6, v7, v8);
}

uint64_t sub_100167DCC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 864) = v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v3 = *(void *)(v2 + 768);
  uint64_t v4 = *(void *)(v2 + 760);
  if (v0) {
    uint64_t v5 = sub_1001690F4;
  }
  else {
    uint64_t v5 = sub_100167EF8;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100167EF8()
{
  unint64_t v1 = *(void *)(v0 + 192);
  if (!v1)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 728) + 8))(*(void *)(v0 + 736), *(void *)(v0 + 720));
    goto LABEL_5;
  }
  uint64_t v2 = *(void *)(v0 + 200);
  uint64_t v3 = *(void *)(v0 + 208);
  uint64_t v4 = *(void *)(v0 + 216);
  if (static Task<>.isCancelled.getter())
  {
    (*(void (**)(void, void))(*(void *)(v0 + 728) + 8))(*(void *)(v0 + 736), *(void *)(v0 + 720));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_5:
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
  uint64_t v125 = v2;
  uint64_t v129 = v0 + 192;
  uint64_t v7 = (_OWORD *)(v0 + 224);
  uint64_t v8 = static TextCompositionClient.textCompositionClientFinishedKey.getter();
  if (*(void *)(v4 + 16) && (unint64_t v10 = sub_100007C48(v8, v9), (v11 & 1) != 0))
  {
    sub_100027E0C(*(void *)(v4 + 56) + 32 * v10, (uint64_t)v7);
  }
  else
  {
    _OWORD *v7 = 0u;
    *(_OWORD *)(v0 + 240) = 0u;
  }
  unint64_t v131 = v1;
  uint64_t v124 = v3;
  uint64_t v126 = v4;
  uint64_t v12 = swift_bridgeObjectRelease();
  if (!*(void *)(v0 + 248))
  {
    __break(1u);
    goto LABEL_140;
  }
  uint64_t v17 = *(void *)(v0 + 664);
  sub_100007CC0(v7, (_OWORD *)(v0 + 288));
  swift_dynamicCast();
  unsigned int v123 = *(unsigned __int8 *)(v0 + 872);
  *(void *)(v0 + 568) = _swiftEmptyArrayStorage;
  uint64_t v18 = sub_10008B8BC(v4);
  uint64_t v20 = v19;
  swift_getKeyPath();
  uint64_t v21 = (void *)swift_task_alloc();
  void v21[2] = v17;
  v21[3] = v18;
  v21[4] = v20;
  *(void *)(v0 + 552) = v17;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v22 = sub_10008BC70(v4);
  uint64_t v24 = v23;
  swift_getKeyPath();
  uint64_t v25 = (void *)swift_task_alloc();
  v25[2] = v17;
  void v25[3] = v22;
  v25[4] = v24;
  unint64_t v137 = (void *)v0;
  *(void *)(v0 + 512) = v17;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t KeyPath = v131;
  unint64_t v27 = v131 & 0xFFFFFFFFFFFFFF8;
  if (v131 >> 62) {
    goto LABEL_137;
  }
  uint64_t v28 = *(void *)((v131 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    int64_t v134 = (uint64_t *)(v129 + 376);
    uint64_t v29 = v137;
    if (v28)
    {
      unint64_t v30 = 0;
      unint64_t v144 = (_OWORD *)(v129 + 64);
      unint64_t v133 = KeyPath & 0xC000000000000001;
      uint64_t v130 = KeyPath + 32;
      uint64_t v127 = v28;
      unint64_t v128 = v27;
      do
      {
        if (v133)
        {
          id v32 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          BOOL v33 = __OFADD__(v30++, 1);
          if (v33) {
            goto LABEL_131;
          }
        }
        else
        {
          if (v30 >= *(void *)(v27 + 16)) {
            goto LABEL_135;
          }
          id v32 = *(id *)(v130 + 8 * v30);
          BOOL v33 = __OFADD__(v30++, 1);
          if (v33)
          {
LABEL_131:
            __break(1u);
LABEL_132:
            __break(1u);
LABEL_133:
            __break(1u);
            goto LABEL_134;
          }
        }
        uint64_t v31 = v32;
        if ([v32 resultType] == (id)4)
        {
          id v34 = [v31 grammarDetails];
          if (v34)
          {
            uint64_t v35 = v34;
            id v135 = v31;
            unint64_t v132 = v30;
            sub_1000063C0(&qword_100205980);
            uint64_t v36 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

            uint64_t v37 = *(void *)(v36 + 16);
            if (v37)
            {
              uint64_t v38 = v36 + 32;
              do
              {
                uint64_t v39 = *(void *)v38;
                uint64_t v40 = *(void *)(*(void *)v38 + 16);
                swift_bridgeObjectRetain();
                if (v40 && (unint64_t v41 = sub_100007C48(0x616D6D617247534ELL, 0xEE0065676E615272), (v42 & 1) != 0))
                {
                  sub_100027E0C(*(void *)(v39 + 56) + 32 * v41, v129 - 96);
                  sub_1000085FC(0, &qword_100205990);
                  if (swift_dynamicCast()) {
                    uint64_t v43 = *(void **)(v129 + 384);
                  }
                  else {
                    uint64_t v43 = 0;
                  }
                  if (!*(void *)(v39 + 16))
                  {
LABEL_46:
                    unint64_t v46 = 0;
                    if (!*(void *)(v39 + 16)) {
                      goto LABEL_53;
                    }
                    goto LABEL_47;
                  }
                }
                else
                {
                  uint64_t v43 = 0;
                  if (!*(void *)(v39 + 16)) {
                    goto LABEL_46;
                  }
                }
                unint64_t v44 = sub_100007C48(0xD000000000000014, 0x80000001001A2C10);
                if ((v45 & 1) == 0) {
                  goto LABEL_46;
                }
                sub_100027E0C(*(void *)(v39 + 56) + 32 * v44, v129 - 32);
                sub_1000063C0(&qword_100205988);
                if (swift_dynamicCast()) {
                  unint64_t v46 = *(void *)(v129 + 456);
                }
                else {
                  unint64_t v46 = 0;
                }
                if (!*(void *)(v39 + 16))
                {
LABEL_53:
                  uint64_t KeyPath = 0;
                  if (!*(void *)(v39 + 16)) {
                    goto LABEL_60;
                  }
                  goto LABEL_54;
                }
LABEL_47:
                unint64_t v47 = sub_100007C48(0xD000000000000015, 0x80000001001A2C30);
                if ((v48 & 1) == 0) {
                  goto LABEL_53;
                }
                sub_100027E0C(*(void *)(v39 + 56) + 32 * v47, v129 + 128);
                if (swift_dynamicCast()) {
                  uint64_t KeyPath = v29[57];
                }
                else {
                  uint64_t KeyPath = 0;
                }
                if (!*(void *)(v39 + 16))
                {
LABEL_60:
                  uint64_t v51 = 0;
                  if (!*(void *)(v39 + 16)) {
                    goto LABEL_63;
                  }
                  goto LABEL_61;
                }
LABEL_54:
                unint64_t v49 = sub_100007C48(0xD00000000000001DLL, 0x80000001001A2C50);
                if ((v50 & 1) == 0) {
                  goto LABEL_60;
                }
                sub_100027E0C(*(void *)(v39 + 56) + 32 * v49, v129 - 64);
                if (swift_dynamicCast()) {
                  uint64_t v51 = v29[55];
                }
                else {
                  uint64_t v51 = 0;
                }
                if (!*(void *)(v39 + 16)) {
                  goto LABEL_63;
                }
LABEL_61:
                unint64_t v52 = sub_100007C48(0xD000000000000018, 0x80000001001A2C70);
                if (v53)
                {
                  sub_100027E0C(*(void *)(v39 + 56) + 32 * v52, (uint64_t)v144);
                  goto LABEL_64;
                }
LABEL_63:
                *unint64_t v144 = 0u;
                *(_OWORD *)(v129 + 80) = 0u;
LABEL_64:
                swift_bridgeObjectRelease();
                if (v29[35])
                {
                  if (swift_dynamicCast()) {
                    uint64_t v54 = v29[53];
                  }
                  else {
                    uint64_t v54 = 0;
                  }
                  if (!v43)
                  {
LABEL_29:
                    swift_bridgeObjectRelease();
                    goto LABEL_30;
                  }
                }
                else
                {
                  sub_10002784C((uint64_t)v144, &qword_1001FD2E0);
                  uint64_t v54 = 0;
                  if (!v43) {
                    goto LABEL_29;
                  }
                }
                if (v46)
                {
                  if (v46 >> 62)
                  {
                    id v65 = v43;
                    swift_bridgeObjectRetain();
                    unint64_t v27 = _CocoaArrayWrapper.endIndex.getter();
                    swift_bridgeObjectRelease();
                    if (!v27)
                    {
LABEL_92:

                      swift_bridgeObjectRelease();
                      goto LABEL_30;
                    }
                  }
                  else
                  {
                    unint64_t v27 = *(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10);
                    id v55 = v43;
                    if (!v27) {
                      goto LABEL_92;
                    }
                  }
                  if ((v46 & 0xC000000000000001) != 0)
                  {
                    uint64_t v56 = specialized _ArrayBuffer._getElementSlowPath(_:)();
                  }
                  else
                  {
                    if (!*(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10))
                    {
                      __break(1u);
                      goto LABEL_131;
                    }
                    uint64_t v56 = *(void *)(v46 + 32);
                    swift_unknownObjectRetain();
                  }
                  swift_bridgeObjectRelease();
                  *(void *)(v129 + 416) = v56;
                  if (swift_dynamicCast())
                  {
                    unint64_t v27 = v29[51];
                    id v57 = [v43 rangeValue];
                    uint64_t v59 = v58;
                    uint64_t v60 = (char *)[v135 range];
                    BOOL v33 = __OFADD__(v57, v60);
                    uint64_t v61 = &v60[(void)v57];
                    if (v33) {
                      goto LABEL_132;
                    }
                    NSString v62 = String._bridgeToObjectiveC()();
                    swift_bridgeObjectRelease();
                    if (KeyPath)
                    {
                      NSString v142 = String._bridgeToObjectiveC()();
                      swift_bridgeObjectRelease();
                      if (v51) {
                        goto LABEL_81;
                      }
LABEL_86:
                      NSString v63 = 0;
                      if (!v54) {
                        goto LABEL_87;
                      }
LABEL_82:
                      NSString v64 = String._bridgeToObjectiveC()();
                      swift_bridgeObjectRelease();
                    }
                    else
                    {
                      NSString v142 = 0;
                      if (!v51) {
                        goto LABEL_86;
                      }
LABEL_81:
                      NSString v63 = String._bridgeToObjectiveC()();
                      swift_bridgeObjectRelease();
                      if (v54) {
                        goto LABEL_82;
                      }
LABEL_87:
                      NSString v64 = 0;
                    }
                    [objc_allocWithZone((Class)WTTextSuggestion) initWithOriginalRange:v61 replacement:v59 suggestionCategory:v62 suggestionShortDescription:v142 suggestionDescription:v63];

                    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
                    if (*(void *)((*v134 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v134 & 0xFFFFFFFFFFFFFF8)
                                                                                        + 0x18) >> 1)
                      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
                    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
                    specialized Array._endMutation()();

                    uint64_t v29 = v137;
                    goto LABEL_31;
                  }
                }
                else
                {
                }
LABEL_30:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
LABEL_31:
                v38 += 8;
                --v37;
              }
              while (v37);
            }
            swift_bridgeObjectRelease();
            uint64_t KeyPath = v131;
            unint64_t v30 = v132;
            uint64_t v28 = v127;
            unint64_t v27 = v128;
            uint64_t v31 = v135;
          }
        }
      }
      while (v30 != v28);
    }
    uint64_t v66 = v29[103];
    uint64_t v67 = v29[83];
    swift_bridgeObjectRelease();
    sub_100169468(v134);
    uint64_t KeyPath = swift_getKeyPath();
    v29[58] = v67;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    unint64_t v27 = *(void *)(v67 + v66);
    if (!v27) {
      goto LABEL_120;
    }
    unint64_t v68 = *v134;
    if ((unint64_t)*v134 >> 62)
    {
      swift_bridgeObjectRetain_n();
      id v122 = (id)v27;
      uint64_t v69 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v69 = *(void *)((v68 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      id v70 = (id)v27;
    }
    unint64_t v136 = (void *)v27;
    if (!v69) {
      break;
    }
    uint64_t v71 = 0;
    unint64_t v139 = v68;
    unint64_t v140 = v68 & 0xC000000000000001;
    uint64_t v138 = v69;
    while (1)
    {
      if (v140)
      {
        id v79 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v80 = v71 + 1;
        if (__OFADD__(v71, 1)) {
          goto LABEL_133;
        }
      }
      else
      {
        id v79 = *(id *)(v68 + 8 * v71 + 32);
        uint64_t v80 = v71 + 1;
        if (__OFADD__(v71, 1)) {
          goto LABEL_133;
        }
      }
      uint64_t v141 = v80;
      unint64_t v143 = v79;
      uint64_t v81 = v137[86];
      uint64_t v82 = v137[83];
      uint64_t v83 = (void *)v137[82];
      uint64_t v84 = (uint64_t *)(v82 + v137[104]);
      id v85 = [v79 uuid];
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      swift_getKeyPath();
      v137[62] = v82;
      id v86 = v83;
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      v137[63] = v82;
      uint64_t KeyPath = swift_getKeyPath();
      ObservationRegistrar.willSet<A, B>(_:keyPath:)();
      swift_release();
      swift_beginAccess();
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v88 = *v84;
      v137[65] = *v84;
      *uint64_t v84 = 0x8000000000000000;
      unint64_t v27 = sub_100007B70(v81);
      uint64_t v90 = *(void *)(v88 + 16);
      BOOL v91 = (v89 & 1) == 0;
      uint64_t v92 = v90 + v91;
      if (__OFADD__(v90, v91)) {
        break;
      }
      char v93 = v89;
      if (*(void *)(v88 + 24) >= v92)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_100171108(&qword_1001FAFF8);
        }
      }
      else
      {
        uint64_t KeyPath = (uint64_t)v137;
        uint64_t v94 = v137[86];
        sub_10016E608(v92, isUniquelyReferenced_nonNull_native, &qword_1001FAFF8);
        unint64_t v95 = sub_100007B70(v94);
        if ((v93 & 1) != (v96 & 1))
        {
          return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
        }
        unint64_t v27 = v95;
      }
      uint64_t v97 = *(void **)(v129 + 328);
      if (v93)
      {
        uint64_t v72 = v137;
        uint64_t v73 = v137[82];
        uint64_t v74 = v97[7];
        uint64_t v75 = 8 * v27;

        *(void *)(v74 + v75) = v73;
      }
      else
      {
        uint64_t v98 = v137[86];
        uint64_t v99 = v137[85];
        uint64_t v100 = v137[84];
        uint64_t v101 = v137[82];
        v97[(v27 >> 6) + 8] |= 1 << v27;
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v99 + 16))(v97[6] + *(void *)(v99 + 72) * v27, v98, v100);
        *(void *)(v97[7] + 8 * v27) = v101;
        uint64_t v102 = v97[2];
        BOOL v33 = __OFADD__(v102, 1);
        uint64_t v103 = v102 + 1;
        if (v33) {
          goto LABEL_136;
        }
        v97[2] = v103;
        uint64_t v72 = v137;
      }
      uint64_t v76 = v72[86];
      uint64_t v77 = v72[85];
      uint64_t KeyPath = v72[84];
      uint64_t v78 = v72[83];
      *(void *)(v78 + v72[104]) = v97;
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v76, KeyPath);
      swift_endAccess();
      v72[66] = v78;
      unint64_t v27 = swift_getKeyPath();
      ObservationRegistrar.didSet<A, B>(_:keyPath:)();

      swift_release();
      ++v71;
      unint64_t v68 = v139;
      if (v141 == v138)
      {
        swift_bridgeObjectRelease();
        unint64_t v68 = *v134;
        goto LABEL_117;
      }
    }
LABEL_134:
    __break(1u);
LABEL_135:
    __break(1u);
LABEL_136:
    __break(1u);
LABEL_137:
    swift_bridgeObjectRetain();
    uint64_t v28 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
LABEL_117:
  uint64_t v29 = v137;
  uint64_t v104 = v137[83];
  swift_getKeyPath();
  v137[67] = v104;
  swift_bridgeObjectRetain();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  v137[68] = v104;
  swift_getKeyPath();
  ObservationRegistrar.willSet<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  sub_100163758(v68);
  swift_endAccess();
  v137[70] = v104;
  swift_getKeyPath();
  ObservationRegistrar.didSet<A, B>(_:keyPath:)();
  swift_release();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v106 = (void *)Strong;
    uint64_t v107 = v137[82];
    sub_1000085FC(0, (unint64_t *)&qword_100201570);
    swift_bridgeObjectRetain();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v106 proofreadingSession:v136 didReceiveSuggestions:isa v125 processedRange:v124 inContext:v107 finished:v123];

    swift_unknownObjectRelease();
  }
  else
  {
  }
LABEL_120:
  uint64_t v109 = v129;
  uint64_t v110 = v29[99];
  uint64_t v111 = v29[83];
  swift_getKeyPath();
  v29[59] = v111;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (!*(void *)(v111 + v110))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_124;
  }
  uint64_t v112 = v29[83];
  swift_getKeyPath();
  v29[60] = v112;
  swift_retain();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t v12 = swift_release();
  int v113 = *(unsigned __int8 *)(v112 + 72);
  if (v113 == 255)
  {
LABEL_140:
    __break(1u);
    return __sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v12, v13, v14, v15, v16);
  }
  uint64_t v114 = v29[83];
  uint64_t v116 = *(void *)(v114 + 56);
  uint64_t v115 = *(void *)(v114 + 64);
  uint64_t v117 = *(void *)(v114 + 48);
  sub_10000ED40(v117, v116, v115, v113);
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  v137[61] = v114;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  sub_10000D10C(v126, v117, v116, v115, v113, *(void **)(v114 + 112));
  swift_bridgeObjectRelease();
  uint64_t v118 = v117;
  uint64_t v29 = v137;
  uint64_t v119 = v116;
  uint64_t v109 = v129;
  sub_100024DB4(v118, v119, v115, v113);
  swift_release();
LABEL_124:
  uint64_t v120 = static MainActor.shared.getter();
  v29[106] = v120;
  unint64_t v121 = (void *)swift_task_alloc();
  v29[107] = v121;
  void *v121 = v29;
  v121[1] = sub_100167DCC;
  uint64_t v15 = v29[90];
  uint64_t v14 = &protocol witness table for MainActor;
  uint64_t v12 = v109;
  uint64_t v13 = v120;
  uint64_t v16 = v29 + 77;
  return __sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v12, v13, v14, v15, v16);
}

uint64_t sub_1001690F4()
{
  uint64_t v1 = v0[99];
  uint64_t v2 = v0[92];
  uint64_t v3 = v0[91];
  uint64_t v4 = v0[90];
  uint64_t v5 = v0[83];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  uint64_t v6 = v0[77];
  swift_errorRetain();
  sub_10002FAC0(v6);
  swift_errorRelease();
  swift_getKeyPath();
  v0[75] = v5;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (*(void *)(v5 + v1))
  {
    uint64_t v7 = v0[83];
    swift_getKeyPath();
    v0[74] = v7;
    swift_errorRetain();
    swift_retain();
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    uint64_t result = swift_release();
    int v9 = *(unsigned __int8 *)(v7 + 72);
    if (v9 == 255)
    {
      __break(1u);
      return result;
    }
    unint64_t v10 = (void *)v0[83];
    uint64_t v12 = v10[7];
    uint64_t v11 = v10[8];
    uint64_t v13 = v10[6];
    sub_10000ED40(v13, v12, v11, v9);
    sub_10000DC14(v6, v13, v12, v11, v9);
    sub_100024DB4(v13, v12, v11, v9);
    swift_errorRelease();
    swift_release();
  }
  if (qword_1001FAC28 != -1) {
    swift_once();
  }
  uint64_t v14 = type metadata accessor for Logger();
  sub_10000EBE8(v14, (uint64_t)qword_100212770);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    uint64_t v18 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v17 = 138412290;
    swift_errorRetain();
    uint64_t v19 = _swift_stdlib_bridgeErrorToNSError();
    v0[73] = v19;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v18 = v19;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "Error occurred in proofreading: %@", v17, 0xCu);
    sub_1000063C0(&qword_1001FED90);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v20 = (uint64_t (*)(void))v0[1];
  return v20();
}

uint64_t sub_100169468(uint64_t *a1)
{
  uint64_t v2 = *a1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *a1 = v2;
  if (!isUniquelyReferenced_nonNull_bridgeObject || v2 < 0 || (v2 & 0x4000000000000000) != 0)
  {
    uint64_t v2 = sub_100144110(v2);
    *a1 = v2;
  }
  uint64_t v4 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v6[0] = (v2 & 0xFFFFFFFFFFFFFF8) + 32;
  v6[1] = v4;
  sub_1001716A4(v6);
  return specialized Array._endMutation()();
}

uint64_t sub_1001694F0(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = [a1 uuid];
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  swift_getKeyPath();
  v15[1] = v2;
  sub_100174B54((unint64_t *)&qword_1001FBD30, (void (*)(uint64_t))type metadata accessor for ProofreadingModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  int v9 = (uint64_t *)(v2 + OBJC_IVAR____TtC21WritingToolsUIService17ProofreadingModel__suggestionStates);
  swift_beginAccess();
  uint64_t v10 = *v9;
  if (*(void *)(v10 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v11 = sub_100007B70((uint64_t)v7);
    if (v12) {
      uint64_t v13 = *(void *)(*(void *)(v10 + 56) + 8 * v11);
    }
    else {
      uint64_t v13 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v13 = 0;
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v13;
}

void sub_1001696B4(uint64_t a1, uint64_t a2)
{
  int64_t v3 = v2;
  uint64_t v6 = sub_1000063C0((uint64_t *)&unk_1001FB400);
  __chkstk_darwin(v6 - 8);
  uint64_t v81 = (char *)&v78 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v91 = *(void *)(v8 - 8);
  uint64_t v92 = v8;
  uint64_t v9 = __chkstk_darwin(v8);
  unint64_t v11 = (char *)&v78 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v78 - v12;
  uint64_t v14 = sub_1000063C0(&qword_100205960);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  uint64_t v17 = (char *)&v78 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v78 - v18;
  swift_getKeyPath();
  uint64_t v20 = v2 + OBJC_IVAR____TtC21WritingToolsUIService17ProofreadingModel___observationRegistrar;
  uint64_t v95 = v3;
  uint64_t v21 = sub_100174B54((unint64_t *)&qword_1001FBD30, (void (*)(uint64_t))type metadata accessor for ProofreadingModel);
  uint64_t v86 = v20;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  int64_t v90 = v3;
  uint64_t v22 = (uint64_t *)(v3 + OBJC_IVAR____TtC21WritingToolsUIService17ProofreadingModel__suggestionStates);
  swift_beginAccess();
  uint64_t v83 = v22;
  uint64_t v23 = *v22;
  if (*(void *)(v23 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v24 = sub_100007B70(a2);
    if (v25)
    {
      uint64_t v26 = a2;
      uint64_t v27 = *(void *)(*(void *)(v23 + 56) + 8 * v24);
      swift_bridgeObjectRelease();
      BOOL v28 = v27 == a1;
      a2 = v26;
      if (v28) {
        return;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v29 = v92;
  uint64_t v82 = a1;
  uint64_t v84 = a2;
  if (a1 == 1)
  {
    id v79 = v11;
    swift_getKeyPath();
    int64_t v94 = v90;
    uint64_t v80 = v21;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v30 = *v83;
    uint64_t v31 = *(void *)(*v83 + 64);
    uint64_t v85 = *v83 + 64;
    uint64_t v32 = 1 << *(unsigned char *)(v30 + 32);
    uint64_t v33 = -1;
    if (v32 < 64) {
      uint64_t v33 = ~(-1 << v32);
    }
    unint64_t v34 = v33 & v31;
    int64_t v87 = (unint64_t)(v32 + 63) >> 6;
    uint64_t v88 = (void (*)(char *, uint64_t, uint64_t))(v91 + 16);
    uint64_t v35 = (void (**)(char *, char *, uint64_t))(v91 + 32);
    uint64_t v36 = (void (**)(char *, uint64_t))(v91 + 8);
    int64_t v78 = v87 - 1;
    uint64_t v89 = v30;
    swift_bridgeObjectRetain();
    int64_t v37 = 0;
    while (!v34)
    {
      int64_t v43 = v37 + 1;
      if (__OFADD__(v37, 1))
      {
        __break(1u);
        goto LABEL_53;
      }
      if (v43 < v87)
      {
        unint64_t v44 = *(void *)(v85 + 8 * v43);
        if (v44) {
          goto LABEL_18;
        }
        int64_t v45 = v37 + 2;
        ++v37;
        if (v43 + 1 < v87)
        {
          unint64_t v44 = *(void *)(v85 + 8 * v45);
          if (v44) {
            goto LABEL_21;
          }
          int64_t v37 = v43 + 1;
          if (v43 + 2 < v87)
          {
            unint64_t v44 = *(void *)(v85 + 8 * (v43 + 2));
            if (v44)
            {
              v43 += 2;
              goto LABEL_18;
            }
            int64_t v45 = v43 + 3;
            int64_t v37 = v43 + 2;
            if (v43 + 3 < v87)
            {
              unint64_t v44 = *(void *)(v85 + 8 * v45);
              if (!v44)
              {
                while (1)
                {
                  int64_t v43 = v45 + 1;
                  if (__OFADD__(v45, 1)) {
                    break;
                  }
                  if (v43 >= v87)
                  {
                    int64_t v37 = v78;
                    goto LABEL_32;
                  }
                  unint64_t v44 = *(void *)(v85 + 8 * v43);
                  ++v45;
                  if (v44) {
                    goto LABEL_18;
                  }
                }
LABEL_54:
                __break(1u);
                goto LABEL_55;
              }
LABEL_21:
              int64_t v43 = v45;
LABEL_18:
              unint64_t v34 = (v44 - 1) & v44;
              unint64_t v39 = __clz(__rbit64(v44)) + (v43 << 6);
              int64_t v37 = v43;
LABEL_14:
              uint64_t v40 = v89;
              (*(void (**)(char *, unint64_t, uint64_t))(v91 + 16))(v17, *(void *)(v89 + 48) + *(void *)(v91 + 72) * v39, v29);
              uint64_t v41 = *(void *)(v40 + 56);
              uint64_t v42 = sub_1000063C0(&qword_100205968);
              *(void *)&v17[*(int *)(v42 + 48)] = *(void *)(v41 + 8 * v39);
              (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v17, 0, 1, v42);
              goto LABEL_33;
            }
          }
        }
      }
LABEL_32:
      uint64_t v46 = sub_1000063C0(&qword_100205968);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v17, 1, 1, v46);
      unint64_t v34 = 0;
LABEL_33:
      sub_100026FD0((uint64_t)v17, (uint64_t)v19, &qword_100205960);
      uint64_t v47 = sub_1000063C0(&qword_100205968);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v47 - 8) + 48))(v19, 1, v47) == 1)
      {
        swift_release();
        a2 = v84;
        uint64_t v29 = v92;
        unint64_t v11 = v79;
        goto LABEL_37;
      }
      uint64_t v48 = *(void *)&v19[*(int *)(v47 + 48)];
      uint64_t v29 = v92;
      (*v35)(v13, v19, v92);
      if (v48 == 1) {
        sub_1001696B4(0, v13);
      }
      (*v36)(v13, v29);
    }
    unint64_t v38 = __clz(__rbit64(v34));
    v34 &= v34 - 1;
    unint64_t v39 = v38 | (v37 << 6);
    goto LABEL_14;
  }
LABEL_37:
  swift_getKeyPath();
  int64_t v94 = v90;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v49 = *v83;
  if (!*(void *)(*v83 + 16)) {
    goto LABEL_41;
  }
  swift_bridgeObjectRetain();
  unint64_t v50 = sub_100007B70(a2);
  if ((v51 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_41:
    LODWORD(v89) = 0;
    goto LABEL_42;
  }
  uint64_t v52 = *(void *)(*(void *)(v49 + 56) + 8 * v50);
  swift_bridgeObjectRelease();
  LODWORD(v89) = v52 == 1;
LABEL_42:
  uint64_t v53 = v91;
  uint64_t v88 = *(void (**)(char *, uint64_t, uint64_t))(v91 + 16);
  v88(v11, v84, v29);
  swift_getKeyPath();
  uint64_t v54 = v29;
  int64_t v55 = v90;
  int64_t v94 = v90;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  int64_t v94 = v55;
  swift_getKeyPath();
  ObservationRegistrar.willSet<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v56 = v83;
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v93 = *v56;
  uint64_t *v56 = 0x8000000000000000;
  uint64_t v58 = v82;
  sub_10016F330(v82, (uint64_t)v11, isUniquelyReferenced_nonNull_native);
  uint64_t *v56 = v93;
  swift_bridgeObjectRelease();
  uint64_t v59 = *(void (**)(char *, uint64_t))(v53 + 8);
  uint64_t v60 = v58;
  v59(v11, v54);
  swift_endAccess();
  int64_t v94 = v55;
  swift_getKeyPath();
  ObservationRegistrar.didSet<A, B>(_:keyPath:)();
  swift_release();
  if (v89 && (v58 == 3 || !v58))
  {
    uint64_t v61 = (uint64_t)v81;
    uint64_t v62 = v92;
    v88(v81, v84, v92);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v91 + 56))(v61, 0, 1, v62);
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    int64_t v64 = v90;
    *(&v78 - 2) = v90;
    *(&v78 - 1) = v61;
    int64_t v94 = v64;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    sub_10002784C(v61, (uint64_t *)&unk_1001FB400);
  }
  swift_getKeyPath();
  int64_t v65 = v90;
  int64_t v94 = v90;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v66 = *(void **)(v65 + OBJC_IVAR____TtC21WritingToolsUIService17ProofreadingModel__session);
  uint64_t v67 = v84;
  if (v66)
  {
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v69 = (void *)Strong;
      id v70 = v66;
      v71.super.Class isa = UUID._bridgeToObjectiveC()().super.isa;
      swift_getKeyPath();
      int64_t v72 = v90;
      int64_t v94 = v90;
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      uint64_t v73 = (uint64_t *)(v72 + OBJC_IVAR____TtC21WritingToolsUIService17ProofreadingModel__suggestionContextMapping);
      swift_beginAccess();
      uint64_t v74 = *v73;
      if (!*(void *)(v74 + 16))
      {
LABEL_53:
        __break(1u);
        goto LABEL_54;
      }
      swift_bridgeObjectRetain();
      unint64_t v75 = sub_100007B70(v67);
      if (v76)
      {
        id v77 = *(id *)(*(void *)(v74 + 56) + 8 * v75);
        swift_bridgeObjectRelease();
        [v69 proofreadingSession:v70 didUpdateState:v60 forSuggestionWithUUID:v71.super.isa inContext:v77];

        swift_unknownObjectRelease();
      }
      else
      {
LABEL_55:
        swift_bridgeObjectRelease();
        __break(1u);
      }
    }
  }
}

uint64_t sub_10016A09C(char a1, uint64_t a2, void (*a3)(uint64_t))
{
  swift_getKeyPath();
  sub_100174B54((unint64_t *)&qword_1001FBD30, (void (*)(uint64_t))type metadata accessor for ProofreadingModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  uint64_t v8 = *(void **)(v3 + OBJC_IVAR____TtC21WritingToolsUIService17ProofreadingModel__session);
  if (v8 && (uint64_t result = swift_unknownObjectWeakLoadStrong()) != 0)
  {
    uint64_t v15 = (void *)result;
    swift_getKeyPath();
    id v9 = v8;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    if (*(void *)(v3 + OBJC_IVAR____TtC21WritingToolsUIService17ProofreadingModel__task))
    {
      swift_retain();
      Task.cancel()();
      swift_release();
    }
    if (a2)
    {
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        unint64_t v11 = (void *)Strong;
        swift_errorRetain();
        uint64_t v12 = (void *)_convertErrorToNSError(_:)();
        [v11 endWritingToolsWithError:v12];
        swift_errorRelease();
        swift_unknownObjectRelease();
      }
    }
    else
    {
      [v15 didEndWritingToolsSession:v9 accepted:(a1 == 2) | (a1 & 1)];
    }
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    uint64_t v14 = swift_release();
    if (a3) {
      a3(v14);
    }

    return swift_unknownObjectRelease();
  }
  else if (a3)
  {
    return ((uint64_t (*)(uint64_t))a3)(result);
  }
  return result;
}

uint64_t sub_10016A334()
{
  uint64_t v1 = v0;
  uint64_t v77 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v77 - 8);
  uint64_t v3 = __chkstk_darwin(v77);
  uint64_t v5 = (char *)&v69 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (uint64_t *)((char *)&v69 - v6);
  uint64_t result = sub_10016521C();
  if (result) {
    return result;
  }
  swift_getKeyPath();
  uint64_t v80 = (void *)v0;
  sub_100174B54((unint64_t *)&qword_1001FD2A0, (void (*)(uint64_t))type metadata accessor for ToolModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (*(unsigned char *)(v0 + 88))
  {
    uint64_t v72 = 0;
  }
  else
  {
    swift_getKeyPath();
    uint64_t v80 = (void *)v0;
    sub_100174B54((unint64_t *)&qword_1001FBD30, (void (*)(uint64_t))type metadata accessor for ProofreadingModel);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    swift_beginAccess();
    swift_retain();
    unint64_t v9 = swift_bridgeObjectRetain();
    uint64_t v10 = sub_1001737E4(v9, v0);
    uint64_t v72 = 0;
    swift_release();
    swift_bridgeObjectRelease();
    if (v10)
    {
      id v11 = [v10 uuid];
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      sub_1001696B4(0, (uint64_t)v7);
      (*(void (**)(void *, uint64_t))(v2 + 8))(v7, v77);
    }
  }
  swift_getKeyPath();
  uint64_t v12 = v1 + OBJC_IVAR____TtC21WritingToolsUIService17ProofreadingModel___observationRegistrar;
  uint64_t v80 = (void *)v1;
  uint64_t v76 = sub_100174B54((unint64_t *)&qword_1001FBD30, (void (*)(uint64_t))type metadata accessor for ProofreadingModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  int64_t v78 = (void (**)(void, uint64_t))v1;
  uint64_t v13 = (uint64_t *)(v1 + OBJC_IVAR____TtC21WritingToolsUIService17ProofreadingModel__suggestions);
  swift_beginAccess();
  unint64_t v14 = (unint64_t)v13;
  uint64_t v15 = *v13;
  uint64_t v16 = (void (**)(void, uint64_t))((unint64_t)*v13 >> 62);
  if (v16)
  {
LABEL_69:
    uint64_t v29 = v2;
    swift_bridgeObjectRetain_n();
    uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v17 < 0) {
      goto LABEL_84;
    }
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v2 < 0) {
      goto LABEL_85;
    }
    swift_bridgeObjectRetain();
    uint64_t v64 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v64 >= v17) {
      goto LABEL_88;
    }
    __break(1u);
    goto LABEL_73;
  }
  uint64_t v17 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  while (1)
  {
    uint64_t v75 = v12;
    if ((v15 & 0xC000000000000001) != 0 && v17)
    {
      sub_1000085FC(0, (unint64_t *)&qword_100201570);
      Swift::Int v18 = 0;
      do
      {
        Swift::Int v19 = v18 + 1;
        _ArrayBuffer._typeCheckSlowPath(_:)(v18);
        Swift::Int v18 = v19;
      }
      while (v17 != v19);
    }
    uint64_t v73 = v2;
    id v79 = v5;
    NSUUID v71 = v7;
    if (v16)
    {
      swift_bridgeObjectRetain();
      uint64_t v74 = _CocoaArrayWrapper.subscript.getter();
      uint64_t v2 = v21;
      uint64_t v5 = v22;
      unint64_t v20 = v23;
      swift_bridgeObjectRelease_n();
    }
    else
    {
      uint64_t v5 = 0;
      uint64_t v74 = v15 & 0xFFFFFFFFFFFFFF8;
      uint64_t v2 = (v15 & 0xFFFFFFFFFFFFFF8) + 32;
      unint64_t v20 = (2 * v17) | 1;
    }
    uint64_t v12 = v75;
    swift_getKeyPath();
    uint64_t v16 = v78;
    uint64_t v80 = v78;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    unint64_t v24 = (uint64_t *)v14;
    swift_retain();
    unint64_t v25 = swift_bridgeObjectRetain();
    uint64_t v26 = v72;
    uint64_t v17 = sub_100173E94(v25, (uint64_t)v16);
    char v28 = v27;
    uint64_t v72 = v26;
    swift_release();
    swift_bridgeObjectRelease();
    if (v28)
    {
      uint64_t v7 = (void *)v74;
      goto LABEL_44;
    }
    swift_getKeyPath();
    uint64_t v80 = v16;
    unint64_t v14 = v76;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v12 = *v24;
    uint64_t v29 = (unint64_t)*v24 >> 62;
    uint64_t v7 = v24;
    uint64_t v15 = v14;
    if (v29)
    {
LABEL_73:
      swift_bridgeObjectRetain();
      uint64_t v65 = _CocoaArrayWrapper.endIndex.getter();
      if (v65 < v17) {
        goto LABEL_86;
      }
      unint64_t v14 = v65;
      swift_bridgeObjectRetain();
      uint64_t v66 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v66 < v17)
      {
        __break(1u);
LABEL_76:
        __break(1u);
LABEL_77:
        __break(1u);
LABEL_78:
        __break(1u);
LABEL_79:
        __break(1u);
        goto LABEL_80;
      }
    }
    else
    {
      uint64_t v30 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v30 < v17) {
        goto LABEL_76;
      }
      swift_bridgeObjectRetain();
      unint64_t v14 = v30;
    }
    if (v17 < 0) {
      goto LABEL_77;
    }
    if (v29)
    {
      swift_bridgeObjectRetain();
      uint64_t v31 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v31 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    if (v31 < (uint64_t)v14) {
      goto LABEL_78;
    }
    if ((v14 & 0x8000000000000000) != 0) {
      goto LABEL_79;
    }
    if ((v12 & 0xC000000000000001) != 0 && v17 != v14)
    {
      if (v17 >= v14) {
        goto LABEL_83;
      }
      sub_1000085FC(0, (unint64_t *)&qword_100201570);
      Swift::Int v32 = v17;
      do
      {
        Swift::Int v33 = v32 + 1;
        _ArrayBuffer._typeCheckSlowPath(_:)(v32);
        Swift::Int v32 = v33;
      }
      while (v14 != v33);
    }
    if (v29)
    {
      swift_bridgeObjectRetain();
      uint64_t v2 = _CocoaArrayWrapper.subscript.getter();
      uint64_t v16 = v34;
      uint64_t v70 = v35;
      uint64_t v5 = v36;
      swift_bridgeObjectRelease_n();
    }
    else
    {
      uint64_t v2 = v12 & 0xFFFFFFFFFFFFFF8;
      uint64_t v16 = (void (**)(void, uint64_t))((v12 & 0xFFFFFFFFFFFFFF8) + 32);
      uint64_t v5 = (char *)((2 * v14) | 1);
      uint64_t v70 = v17;
    }
    int64_t v37 = v78;
    swift_getKeyPath();
    uint64_t v80 = v37;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v12 = *v7;
    unint64_t v14 = *v7 >> 62;
    if (!v14)
    {
      uint64_t v38 = *(void *)((*v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      uint64_t v29 = v74;
      if (v38 >= v17) {
        goto LABEL_36;
      }
LABEL_82:
      __break(1u);
LABEL_83:
      __break(1u);
LABEL_84:
      __break(1u);
LABEL_85:
      __break(1u);
LABEL_86:
      __break(1u);
      goto LABEL_87;
    }
LABEL_80:
    swift_bridgeObjectRetain();
    uint64_t v67 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v29 = v74;
    if ((v67 & 0x8000000000000000) == 0) {
      break;
    }
LABEL_87:
    __break(1u);
LABEL_88:
    uint64_t v2 = v29;
  }
  swift_bridgeObjectRetain();
  uint64_t v68 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v68 < v17) {
    goto LABEL_82;
  }
LABEL_36:
  unint64_t v39 = v16;
  if ((v12 & 0xC000000000000001) != 0 && v17)
  {
    sub_1000085FC(0, (unint64_t *)&qword_100201570);
    Swift::Int v40 = 0;
    do
    {
      Swift::Int v41 = v40 + 1;
      _ArrayBuffer._typeCheckSlowPath(_:)(v40);
      Swift::Int v40 = v41;
    }
    while (v17 != v41);
  }
  uint64_t v42 = v5;
  if (v14)
  {
    swift_bridgeObjectRetain();
    uint64_t v44 = _CocoaArrayWrapper.subscript.getter();
    uint64_t v45 = v47;
    uint64_t v43 = v48;
    unint64_t v46 = v49;
    swift_bridgeObjectRelease_n();
  }
  else
  {
    uint64_t v43 = 0;
    uint64_t v44 = v12 & 0xFFFFFFFFFFFFFF8;
    uint64_t v45 = (v12 & 0xFFFFFFFFFFFFFF8) + 32;
    unint64_t v46 = (2 * v17) | 1;
  }
  uint64_t v16 = v78;
  uint64_t v80 = (void *)v2;
  uint64_t v81 = (uint64_t)v39;
  uint64_t v82 = (char *)v70;
  unint64_t v83 = (unint64_t)v42;
  uint64_t v12 = (uint64_t)&v80;
  sub_100174848(v44, v45, v43, v46);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  uint64_t v7 = v80;
  uint64_t v2 = v81;
  uint64_t v5 = v82;
  unint64_t v20 = v83;
LABEL_44:
  uint64_t v80 = v7;
  uint64_t v81 = v2;
  uint64_t v82 = v5;
  unint64_t v83 = v20;
  int64_t v50 = v20 >> 1;
  if ((char *)(v20 >> 1) == v5)
  {
    swift_unknownObjectRetain();
    uint64_t v51 = (uint64_t)v71;
    uint64_t v52 = v73;
LABEL_59:
    uint64_t v59 = 0;
  }
  else
  {
    unint64_t v14 = (unint64_t)v16 + OBJC_IVAR____TtC21WritingToolsUIService17ProofreadingModel__suggestionStates;
    swift_retain();
    uint64_t v74 = (uint64_t)v7;
    swift_unknownObjectRetain();
    swift_beginAccess();
    uint64_t v16 = (void (**)(void, uint64_t))(v73 + 8);
    uint64_t v15 = v20 >> 1;
    uint64_t v53 = (uint64_t)v79;
    while (1)
    {
      if (__OFSUB__(v15--, 1))
      {
        __break(1u);
LABEL_68:
        __break(1u);
        goto LABEL_69;
      }
      if (v15 < (uint64_t)v5 || v15 >= v50) {
        goto LABEL_68;
      }
      id v55 = *(id *)(v2 + 8 * v15);
      id v56 = [v55 uuid];
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      swift_getKeyPath();
      uint64_t v85 = (uint64_t *)v78;
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      uint64_t v12 = *(void *)v14;
      if (*(void *)(*(void *)v14 + 16))
      {
        swift_bridgeObjectRetain();
        unint64_t v57 = sub_100007B70(v53);
        uint64_t v7 = (v58 & 1) != 0 ? *(void **)(*(void *)(v12 + 56) + 8 * v57) : 0;
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v7 = 0;
      }
      (*v16)(v79, v77);

      if (!v7) {
        break;
      }
      if ((char *)v15 == v5)
      {
        swift_release();
        uint64_t v52 = v73;
        uint64_t v51 = (uint64_t)v71;
        goto LABEL_59;
      }
    }
    uint64_t v60 = swift_release();
    __chkstk_darwin(v60);
    uint64_t v59 = &v69 - 4;
    *(&v69 - 2) = (uint64_t)&v80;
    uint64_t v84 = v15;
    uint64_t v61 = v72;
    sub_100174C20(&v84, &v85);
    if (!v61) {
      uint64_t v59 = v85;
    }
    uint64_t v52 = v73;
    uint64_t v51 = (uint64_t)v71;
  }
  swift_unknownObjectRelease();
  if (v59)
  {
    uint64_t v62 = v59;
    id v63 = [v62 uuid];
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    sub_1001696B4(1, v51);
    (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v51, v77);
  }
  return swift_unknownObjectRelease();
}

uint64_t sub_10016AE2C()
{
  uint64_t v1 = v0;
  uint64_t v75 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v75 - 8);
  uint64_t v3 = __chkstk_darwin(v75);
  uint64_t v76 = (char *)&v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v6 = (uint64_t *)((char *)&v66 - v5);
  uint64_t result = sub_10016521C();
  if (result) {
    return result;
  }
  swift_getKeyPath();
  uint64_t v77 = v0;
  sub_100174B54((unint64_t *)&qword_1001FD2A0, (void (*)(uint64_t))type metadata accessor for ToolModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (*(unsigned char *)(v0 + 88))
  {
    Swift::Int v8 = 0;
  }
  else
  {
    swift_getKeyPath();
    uint64_t v77 = v0;
    sub_100174B54((unint64_t *)&qword_1001FBD30, (void (*)(uint64_t))type metadata accessor for ProofreadingModel);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    swift_beginAccess();
    swift_retain();
    unint64_t v9 = swift_bridgeObjectRetain();
    Swift::Int v8 = 0;
    uint64_t v10 = sub_1001737E4(v9, v0);
    swift_release();
    swift_bridgeObjectRelease();
    if (v10)
    {
      id v11 = [v10 uuid];
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      sub_1001696B4(0, (uint64_t)v6);
      (*(void (**)(void *, uint64_t))(v2 + 8))(v6, v75);
    }
  }
  swift_getKeyPath();
  uint64_t v12 = v1 + OBJC_IVAR____TtC21WritingToolsUIService17ProofreadingModel___observationRegistrar;
  uint64_t v77 = v1;
  uint64_t v74 = sub_100174B54((unint64_t *)&qword_1001FBD30, (void (*)(uint64_t))type metadata accessor for ProofreadingModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v13 = (uint64_t *)(v1 + OBJC_IVAR____TtC21WritingToolsUIService17ProofreadingModel__suggestions);
  swift_beginAccess();
  uint64_t v72 = v13;
  unint64_t v14 = *v13;
  uint64_t v15 = *v13 & 0xFFFFFFFFFFFFFF8;
  uint64_t KeyPath = (void (*)(char *, uint64_t))((unint64_t)*v13 >> 62);
  if (!KeyPath)
  {
    unint64_t v17 = *(void *)(v15 + 16);
    swift_bridgeObjectRetain();
    goto LABEL_8;
  }
  while (1)
  {
    swift_bridgeObjectRetain_n();
    unint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if ((v17 & 0x8000000000000000) != 0) {
      break;
    }
    swift_bridgeObjectRetain();
    uint64_t v62 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (v62 < 0) {
      goto LABEL_84;
    }
    swift_bridgeObjectRetain();
    uint64_t v63 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v63 < (uint64_t)v17)
    {
      __break(1u);
LABEL_71:
      __break(1u);
      goto LABEL_72;
    }
LABEL_8:
    uint64_t v73 = v12;
    uint64_t v70 = v2;
    if ((v14 & 0xC000000000000001) != 0 && v17)
    {
      sub_1000085FC(0, (unint64_t *)&qword_100201570);
      Swift::Int v18 = 0;
      do
      {
        Swift::Int v19 = v18 + 1;
        _ArrayBuffer._typeCheckSlowPath(_:)(v18);
        Swift::Int v18 = v19;
      }
      while (v17 != v19);
    }
    if (KeyPath)
    {
      swift_bridgeObjectRetain();
      uint64_t v71 = _CocoaArrayWrapper.subscript.getter();
      uint64_t v2 = v21;
      uint64_t v20 = v22;
      unint64_t v17 = v23;
      swift_bridgeObjectRelease_n();
    }
    else
    {
      uint64_t v20 = 0;
      uint64_t v71 = v14 & 0xFFFFFFFFFFFFFF8;
      uint64_t v2 = (v14 & 0xFFFFFFFFFFFFFF8) + 32;
      unint64_t v17 = (2 * v17) | 1;
    }
    swift_getKeyPath();
    uint64_t v77 = v1;
    uint64_t v12 = v73;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    swift_retain();
    unint64_t v24 = swift_bridgeObjectRetain();
    uint64_t v25 = sub_100173E94(v24, v1);
    char v27 = v26;
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v69 = v6;
    if (v27)
    {
      uint64_t v32 = v70;
      uint64_t v31 = v71;
      goto LABEL_48;
    }
    uint64_t KeyPath = (void (*)(char *, uint64_t))swift_getKeyPath();
    uint64_t v77 = v1;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    BOOL v28 = __OFADD__(v25, 1);
    Swift::Int v8 = v25 + 1;
    if (v28) {
      goto LABEL_71;
    }
    uint64_t v2 = *v72;
    unint64_t v17 = (unint64_t)*v72 >> 62;
    if (!v17)
    {
      uint64_t v29 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v29 < v8) {
        goto LABEL_75;
      }
      uint64_t result = swift_bridgeObjectRetain();
      uint64_t v20 = v29;
      goto LABEL_20;
    }
LABEL_72:
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    if (result < v8) {
      goto LABEL_85;
    }
    uint64_t v20 = result;
    swift_bridgeObjectRetain();
    uint64_t v64 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (v64 < v8)
    {
      __break(1u);
LABEL_75:
      __break(1u);
LABEL_76:
      __break(1u);
LABEL_77:
      __break(1u);
LABEL_78:
      __break(1u);
LABEL_79:
      swift_bridgeObjectRetain();
      uint64_t result = _CocoaArrayWrapper.endIndex.getter();
      if (result < 0) {
        goto LABEL_86;
      }
      swift_bridgeObjectRetain();
      uint64_t v65 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t result = swift_bridgeObjectRelease();
      if (v65 < v8)
      {
LABEL_81:
        __break(1u);
LABEL_82:
        __break(1u);
        break;
      }
      goto LABEL_40;
    }
LABEL_20:
    if (v8 < 0) {
      goto LABEL_76;
    }
    if (v17)
    {
      if (v2 < 0) {
        uint64_t KeyPath = (void (*)(char *, uint64_t))v2;
      }
      else {
        uint64_t KeyPath = (void (*)(char *, uint64_t))(v2 & 0xFFFFFFFFFFFFFF8);
      }
      swift_bridgeObjectRetain();
      uint64_t v30 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t result = swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v30 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    if (v30 < v20) {
      goto LABEL_77;
    }
    if (v20 < 0) {
      goto LABEL_78;
    }
    if ((v2 & 0xC000000000000001) != 0 && v8 != v20)
    {
      if (v8 >= (unint64_t)v20) {
        goto LABEL_82;
      }
      sub_1000085FC(0, (unint64_t *)&qword_100201570);
      Swift::Int v33 = v8;
      do
      {
        Swift::Int v34 = v33 + 1;
        _ArrayBuffer._typeCheckSlowPath(_:)(v33);
        Swift::Int v33 = v34;
      }
      while (v20 != v34);
    }
    if (v17)
    {
      swift_bridgeObjectRetain();
      unint64_t v17 = _CocoaArrayWrapper.subscript.getter();
      uint64_t v68 = v35;
      Swift::Int v67 = v36;
      uint64_t v20 = v37;
      swift_bridgeObjectRelease_n();
    }
    else
    {
      unint64_t v17 = v2 & 0xFFFFFFFFFFFFFF8;
      uint64_t v68 = (v2 & 0xFFFFFFFFFFFFFF8) + 32;
      uint64_t v20 = (2 * v20) | 1;
      Swift::Int v67 = v8;
    }
    swift_getKeyPath();
    uint64_t v77 = v1;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v12 = *v72;
    uint64_t KeyPath = (void (*)(char *, uint64_t))((unint64_t)*v72 >> 62);
    if (KeyPath) {
      goto LABEL_79;
    }
    Swift::Int v38 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v38 < v8) {
      goto LABEL_81;
    }
LABEL_40:
    if ((v12 & 0xC000000000000001) != 0 && v8)
    {
      sub_1000085FC(0, (unint64_t *)&qword_100201570);
      Swift::Int v39 = 0;
      do
      {
        Swift::Int v40 = v39 + 1;
        _ArrayBuffer._typeCheckSlowPath(_:)(v39);
        Swift::Int v39 = v40;
      }
      while (v8 != v40);
    }
    uint64_t v41 = v20;
    unint64_t v42 = v17;
    if (KeyPath)
    {
      swift_bridgeObjectRetain();
      uint64_t v44 = _CocoaArrayWrapper.subscript.getter();
      uint64_t v45 = v47;
      uint64_t v43 = v48;
      unint64_t v46 = v49;
      swift_bridgeObjectRelease_n();
    }
    else
    {
      uint64_t v43 = 0;
      uint64_t v44 = v12 & 0xFFFFFFFFFFFFFF8;
      uint64_t v45 = (v12 & 0xFFFFFFFFFFFFFF8) + 32;
      unint64_t v46 = (2 * v8) | 1;
    }
    uint64_t v32 = v70;
    uint64_t v77 = v42;
    uint64_t v78 = v68;
    uint64_t v79 = v67;
    unint64_t v80 = v41;
    sub_100174848(v44, v45, v43, v46);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    uint64_t v31 = v77;
    uint64_t v2 = v78;
    uint64_t v20 = v79;
    unint64_t v17 = v80;
LABEL_48:
    uint64_t KeyPath = (void (*)(char *, uint64_t))(v17 >> 1);
    unint64_t v14 = (v17 >> 1) - v20;
    uint64_t v12 = (uint64_t)v76;
    if (v17 >> 1 == v20) {
      return swift_unknownObjectRelease();
    }
    uint64_t v50 = v1;
    Swift::Int v8 = v1 + OBJC_IVAR____TtC21WritingToolsUIService17ProofreadingModel__suggestionStates;
    uint64_t v71 = v31;
    swift_unknownObjectRetain_n();
    swift_beginAccess();
    uint64_t v6 = (void *)(v32 + 8);
    if (v20 <= (uint64_t)KeyPath) {
      unint64_t v51 = v17 >> 1;
    }
    else {
      unint64_t v51 = v20;
    }
    uint64_t v1 = v51 - v20;
    v2 += 8 * v20;
    while (v1)
    {
      id v52 = *(id *)v2;
      id v53 = [v52 uuid];
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      swift_getKeyPath();
      uint64_t v81 = v50;
      uint64_t v54 = v12;
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      uint64_t v55 = *(void *)v8;
      if (*(void *)(*(void *)v8 + 16))
      {
        swift_bridgeObjectRetain();
        unint64_t v56 = sub_100007B70(v54);
        if (v57) {
          uint64_t v58 = *(void *)(*(void *)(v55 + 56) + 8 * v56);
        }
        else {
          uint64_t v58 = 0;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v58 = 0;
      }
      uint64_t KeyPath = (void (*)(char *, uint64_t))*v6;
      uint64_t v12 = (uint64_t)v76;
      ((void (*)(char *, uint64_t))*v6)(v76, v75);
      if (!v58)
      {
        swift_unknownObjectRelease_n();
        id v59 = v52;
        id v60 = [v59 uuid];
        uint64_t v61 = (uint64_t)v69;
        static UUID._unconditionallyBridgeFromObjectiveC(_:)();

        sub_1001696B4(1, v61);
        KeyPath((char *)v61, v75);
        return swift_unknownObjectRelease();
      }

      --v1;
      v2 += 8;
      if (!--v14)
      {
        swift_unknownObjectRelease_n();
        return swift_unknownObjectRelease();
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_84:
  __break(1u);
LABEL_85:
  __break(1u);
LABEL_86:
  __break(1u);
  return result;
}