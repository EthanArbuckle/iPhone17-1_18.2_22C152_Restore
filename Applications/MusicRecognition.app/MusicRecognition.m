void type metadata accessor for ASCAppState(uint64_t a1)
{
  sub_10000663C(a1, &qword_100156630);
}

void type metadata accessor for SBUISystemApertureContentRole(uint64_t a1)
{
}

void type metadata accessor for SBUISystemApertureLayoutMode(uint64_t a1)
{
}

uint64_t sub_1000049B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for Locale();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000060EC(&qword_1001567A8);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  v12 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v14 = (char *)v18 - v13;
  v18[1] = a1;
  static Locale.autoupdatingCurrent.getter();
  sub_10000642C();
  IntegerFormatStyle.init(locale:)();
  static Locale.current.getter();
  IntegerFormatStyle.locale(_:)();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v15 = *(void (**)(char *, uint64_t))(v9 + 8);
  v15(v12, v8);
  sub_100006480((unint64_t *)&qword_1001567B8, &qword_1001567A8);
  BinaryInteger.formatted<A>(_:)();
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v15)(v14, v8);
  uint64_t v17 = v18[3];
  *(void *)a2 = v18[2];
  *(void *)(a2 + 8) = v17;
  *(unsigned char *)(a2 + 16) = 0;
  *(void *)(a2 + 24) = &_swiftEmptyArrayStorage;
  return result;
}

uint64_t sub_100004C08@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = Image.init(systemName:)();
  *a1 = result;
  return result;
}

uint64_t sub_100004C50()
{
  return static View._viewListCount(inputs:)();
}

uint64_t sub_100004C6C@<X0>(uint64_t a1@<X8>)
{
  v2 = v1;
  v23[1] = a1;
  uint64_t v3 = sub_1000060EC(&qword_100156748);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000060EC(&qword_100156750);
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000060EC(&qword_100156758);
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  v14 = (char *)v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23[0] = sub_1000060EC(&qword_100156760);
  __chkstk_darwin(v23[0]);
  v16 = (char *)v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23[4] = *v2;
  Label.init(title:icon:)();
  uint64_t v17 = static Font.footnote.getter();
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v10, v6, v3);
  v19 = (uint64_t *)&v10[*(int *)(v8 + 44)];
  uint64_t *v19 = KeyPath;
  v19[1] = v17;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  LODWORD(v8) = static HierarchicalShapeStyle.secondary.getter();
  sub_100006140((uint64_t)v10, (uint64_t)v14);
  *(_DWORD *)&v14[*(int *)(v12 + 44)] = v8;
  sub_1000063D0((uint64_t)v10, &qword_100156750);
  uint64_t v20 = static Alignment.leading.getter();
  sub_100042854(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v16, 0.0, 1, 0.0, 1, v20, v21);
  sub_1000063D0((uint64_t)v14, &qword_100156758);
  if (qword_1001562A8 != -1) {
    swift_once();
  }
  sub_1000061A8();
  View.accessibilityIdentifier(_:)();
  return sub_1000063D0((uint64_t)v16, &qword_100156760);
}

id sub_100004FCC()
{
  return *v0;
}

uint64_t sub_100004FD4@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_100004FDC(uint64_t a1)
{
  uint64_t v2 = sub_10000574C(&qword_1001566D8, type metadata accessor for SHError);

  return Error<>._domain.getter(a1, v2);
}

uint64_t sub_100005048(uint64_t a1)
{
  uint64_t v2 = sub_10000574C(&qword_1001566D8, type metadata accessor for SHError);

  return Error<>._code.getter(a1, v2);
}

uint64_t sub_1000050B8(uint64_t a1)
{
  uint64_t v2 = sub_10000574C(&qword_100156710, type metadata accessor for SHError);

  return _BridgedStoredNSError._getEmbeddedNSError()(a1, v2);
}

uint64_t sub_100005124(uint64_t a1, uint64_t a2)
{
  return sub_10000596C(a1, a2, (uint64_t (*)(uint64_t))&String._bridgeToObjectiveC());
}

uint64_t sub_10000514C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_100005180(uint64_t a1, id *a2)
{
  uint64_t result = static String._forceBridgeFromObjectiveC(_:result:)();
  *a2 = 0;
  return result;
}

uint64_t sub_1000051F8(uint64_t a1, id *a2)
{
  char v3 = static String._conditionallyBridgeFromObjectiveC(_:result:)();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_100005278@<X0>(void *a1@<X8>)
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v2 = String._bridgeToObjectiveC()();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1000052BC()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_1000052CC(uint64_t a1)
{
  uint64_t v2 = sub_10000574C(&qword_100156710, type metadata accessor for SHError);

  return _BridgedStoredNSError.errorCode.getter(a1, v2);
}

uint64_t sub_100005338(uint64_t a1)
{
  uint64_t v2 = sub_10000574C(&qword_100156710, type metadata accessor for SHError);

  return _BridgedStoredNSError.errorUserInfo.getter(a1, v2);
}

uint64_t sub_1000053A4(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_10000574C(&qword_100156710, type metadata accessor for SHError);
  id v5 = a1;

  return _BridgedStoredNSError.init(_bridgedNSError:)(v5, a2, v4);
}

uint64_t sub_100005434()
{
  id v1 = *v0;
  uint64_t v2 = NSObject.hashValue.getter();

  return v2;
}

uint64_t sub_10000546C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000574C(&qword_100156710, type metadata accessor for SHError);

  return _BridgedStoredNSError.hash(into:)(a1, a2, v4);
}

Swift::Int sub_1000054E8()
{
  return Hasher._finalize()();
}

void *sub_100005548@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

void sub_100005558(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_100005568(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10000574C(&qword_100156710, type metadata accessor for SHError);

  return static _BridgedStoredNSError.== infix(_:_:)(a1, a2, a3, v6);
}

BOOL sub_1000055EC(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t sub_100005600(uint64_t a1)
{
  uint64_t v2 = sub_10000574C(&qword_100156660, type metadata accessor for ASCAppState);
  uint64_t v3 = sub_10000574C(&qword_100156668, type metadata accessor for ASCAppState);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_1000056BC()
{
  return sub_10000574C(&qword_100156648, type metadata accessor for ASCAppState);
}

uint64_t sub_100005704()
{
  return sub_10000574C(&qword_100156650, type metadata accessor for ASCAppState);
}

uint64_t sub_10000574C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100005794(uint64_t a1)
{
  uint64_t v2 = sub_10000574C(&qword_100156718, type metadata accessor for NSKeyValueChangeKey);
  uint64_t v3 = sub_10000574C(&qword_100156720, type metadata accessor for NSKeyValueChangeKey);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_100005850@<X0>(void *a1@<X8>)
{
  NSString v2 = String._bridgeToObjectiveC()();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_100005898(uint64_t a1)
{
  uint64_t v2 = sub_10000574C(&qword_100156728, type metadata accessor for Key);
  uint64_t v3 = sub_10000574C(&qword_100156730, type metadata accessor for Key);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_100005954(uint64_t a1, uint64_t a2)
{
  return sub_10000596C(a1, a2, (uint64_t (*)(uint64_t))&String.hashValue.getter);
}

uint64_t sub_10000596C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1000059B0()
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100005A04()
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  Hasher.init(_seed:)();
  String.hash(into:)();
  Swift::Int v0 = Hasher._finalize()();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_100005A78()
{
  uint64_t v0 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v2 = v1;
  if (v0 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_100005B04()
{
  return sub_10000574C(&qword_100156658, type metadata accessor for ASCAppState);
}

void type metadata accessor for CGImage(uint64_t a1)
{
}

void type metadata accessor for NSKeyValueChangeKey(uint64_t a1)
{
}

void type metadata accessor for SHError(uint64_t a1)
{
}

void type metadata accessor for Key(uint64_t a1)
{
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
}

uint64_t sub_100005BB0()
{
  return sub_10000574C(&qword_100156698, type metadata accessor for Key);
}

uint64_t sub_100005BF8()
{
  return sub_10000574C(&qword_1001566A0, type metadata accessor for Key);
}

uint64_t sub_100005C40()
{
  return sub_10000574C(&qword_1001566A8, type metadata accessor for Key);
}

uint64_t sub_100005C88()
{
  return sub_10000574C(&qword_1001566B0, type metadata accessor for SHError);
}

uint64_t sub_100005CD0()
{
  return sub_10000574C(&qword_1001566B8, type metadata accessor for SHError);
}

uint64_t sub_100005D18()
{
  return sub_10000574C(&qword_1001566C0, type metadata accessor for NSKeyValueChangeKey);
}

uint64_t sub_100005D60()
{
  return sub_10000574C(&qword_1001566C8, type metadata accessor for NSKeyValueChangeKey);
}

uint64_t sub_100005DA8()
{
  return sub_10000574C(&qword_1001566D0, type metadata accessor for NSKeyValueChangeKey);
}

uint64_t sub_100005DF0()
{
  return sub_10000574C(&qword_1001566D8, type metadata accessor for SHError);
}

uint64_t sub_100005E38()
{
  return sub_10000574C(&qword_1001566E0, type metadata accessor for SHError);
}

uint64_t sub_100005E80()
{
  return sub_10000574C(&qword_1001566E8, type metadata accessor for SHError);
}

uint64_t sub_100005EC8()
{
  return sub_10000574C(&qword_1001566F0, type metadata accessor for Code);
}

void type metadata accessor for Code(uint64_t a1)
{
}

uint64_t sub_100005F24()
{
  return sub_10000574C(&qword_1001566F8, type metadata accessor for Code);
}

unint64_t sub_100005F70()
{
  unint64_t result = qword_100156700;
  if (!qword_100156700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100156700);
  }
  return result;
}

uint64_t sub_100005FC4()
{
  return sub_10000574C(&qword_100156708, type metadata accessor for Code);
}

uint64_t sub_10000600C()
{
  return sub_10000574C(&qword_100156710, type metadata accessor for SHError);
}

__n128 initializeWithTake for MusicRecognition(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_100006064(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_100006084(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
}

ValueMetadata *type metadata accessor for ShazamCountsView()
{
  return &type metadata for ShazamCountsView;
}

uint64_t sub_1000060D0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000060EC(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_100006130@<X0>(uint64_t a1@<X8>)
{
  return sub_1000049B8(*(void *)(v1 + 16), a1);
}

uint64_t sub_100006140(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000060EC(&qword_100156750);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1000061A8()
{
  unint64_t result = qword_100156768;
  if (!qword_100156768)
  {
    sub_100006224(&qword_100156760);
    sub_10000626C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100156768);
  }
  return result;
}

uint64_t sub_100006224(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

unint64_t sub_10000626C()
{
  unint64_t result = qword_100156770;
  if (!qword_100156770)
  {
    sub_100006224(&qword_100156758);
    sub_10000630C();
    sub_100006480(&qword_100156798, &qword_1001567A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100156770);
  }
  return result;
}

unint64_t sub_10000630C()
{
  unint64_t result = qword_100156778;
  if (!qword_100156778)
  {
    sub_100006224(&qword_100156750);
    sub_100006480(&qword_100156780, &qword_100156748);
    sub_100006480(&qword_100156788, &qword_100156790);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100156778);
  }
  return result;
}

uint64_t sub_1000063D0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_1000060EC(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_10000642C()
{
  unint64_t result = qword_1001567B0;
  if (!qword_1001567B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001567B0);
  }
  return result;
}

uint64_t sub_100006480(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100006224(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for LocationBottomModuleView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 initializeWithTake for LoadingView(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t sub_100006504(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_100006524(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

void type metadata accessor for CGRect(uint64_t a1)
{
}

unint64_t sub_100006568()
{
  unint64_t result = qword_1001567C8;
  if (!qword_1001567C8)
  {
    sub_100006224(&qword_1001567D0);
    sub_1000061A8();
    sub_10000574C((unint64_t *)&qword_1001567D8, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001567C8);
  }
  return result;
}

void type metadata accessor for CGPoint(uint64_t a1)
{
}

void type metadata accessor for Style(uint64_t a1)
{
}

void sub_10000663C(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t sub_10000669C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v35 = a3;
  uint64_t v36 = type metadata accessor for TaskPriority();
  uint64_t v34 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000060EC(&qword_100156810);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v31 = v7;
  uint64_t v32 = v8;
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_1000060EC(&qword_100156850);
  uint64_t v11 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  uint64_t v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t KeyPath = swift_getKeyPath();
  type metadata accessor for MusicRecognitionOnboardingWelcomeViewModel();
  swift_allocObject();
  uint64_t v15 = sub_1000CAFD0();
  uint64_t v16 = swift_getKeyPath();
  uint64_t v41 = a1;
  uint64_t v42 = a2;
  sub_1000060EC(&qword_100156858);
  State.wrappedValue.getter();
  uint64_t v37 = KeyPath;
  LOBYTE(v38) = 0;
  uint64_t v39 = v15;
  uint64_t v40 = v16;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a1;
  *(void *)(v17 + 24) = a2;
  swift_retain();
  swift_retain();
  uint64_t v18 = sub_1000060EC(&qword_100156818);
  unint64_t v19 = sub_100008DE8();
  View.onContinueUserActivity(_:perform:)();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = a1;
  *(void *)(v20 + 24) = a2;
  swift_retain();
  swift_retain();
  uint64_t v37 = v18;
  unint64_t v38 = v19;
  swift_getOpaqueTypeConformance2();
  uint64_t v21 = v31;
  View.onContinueUserActivity(_:perform:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v10, v21);
  static TaskPriority.userInitiated.getter();
  uint64_t v22 = sub_1000060EC(&qword_100156800);
  uint64_t v23 = v35;
  v24 = (char *)(v35 + *(int *)(v22 + 36));
  uint64_t v25 = type metadata accessor for _TaskModifier();
  uint64_t v26 = v34;
  uint64_t v27 = v36;
  (*(void (**)(char *, char *, uint64_t))(v34 + 16))(&v24[*(int *)(v25 + 20)], v6, v36);
  *(void *)v24 = &unk_100156860;
  *((void *)v24 + 1) = 0;
  uint64_t v28 = v33;
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 16))(v23, v13, v33);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v6, v27);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v28);
}

uint64_t sub_100006AF4@<X0>(void *a1@<X8>)
{
  sub_100008FB8();
  uint64_t result = EnvironmentValues.subscript.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_100006B44()
{
  return EnvironmentValues.subscript.setter();
}

uint64_t sub_100006BA4(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  return swift_release();
}

uint64_t sub_100006C0C()
{
  type metadata accessor for MainActor();
  v0[2] = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  v0[3] = v2;
  v0[4] = v1;
  return _swift_task_switch(sub_100006CA0, v2, v1);
}

uint64_t sub_100006CA0()
{
  if (qword_100156550 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v1;
  void *v1 = v0;
  v1[1] = sub_100006D64;
  return sub_1000DBE38();
}

uint64_t sub_100006D64()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 32);
  uint64_t v3 = *(void *)(v1 + 24);
  return _swift_task_switch(sub_100006E84, v3, v2);
}

uint64_t sub_100006E84()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100006EE4()
{
  uint64_t v1 = sub_1000060EC(&qword_1001567F8);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  uint64_t v5 = v0[1];
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v6;
  *(void *)(v7 + 24) = v5;
  swift_retain();
  swift_retain();
  sub_1000060EC(&qword_100156800);
  sub_100008CD8();
  WindowGroup.init(id:title:lazyContent:)();
  sub_100006480(&qword_100156848, &qword_1001567F8);
  static SceneBuilder.buildBlock<A>(_:)();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t sub_100007074@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100008C54();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_10000709C@<X0>(char *a1@<X0>, char a2@<W1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v35 = a3;
  uint64_t v38 = a4;
  char v5 = a2 & 1;
  uint64_t v39 = sub_1000060EC(&qword_100156870);
  __chkstk_darwin(v39);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for PrivacySplashPresenter();
  __chkstk_darwin(v8 - 8);
  uint64_t v31 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_1000060EC(&qword_100156878);
  uint64_t v10 = __chkstk_darwin(v34);
  uint64_t v12 = (uint64_t *)((char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v10);
  uint64_t v32 = (char *)&v31 - v13;
  uint64_t v36 = sub_1000060EC(&qword_100156880);
  __chkstk_darwin(v36);
  uint64_t v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_1000060EC(&qword_100156888);
  __chkstk_darwin(v33);
  uint64_t v17 = (uint64_t *)((char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v37 = sub_1000060EC(&qword_100156890);
  __chkstk_darwin(v37);
  unint64_t v19 = (char *)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = swift_retain();
  uint64_t v21 = sub_1000081CC(v20, v5);
  swift_release();
  swift_getKeyPath();
  uint64_t v40 = v21;
  sub_1000093BC((unint64_t *)&qword_100156898, (void (*)(uint64_t))type metadata accessor for ViewConfiguration);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  int v22 = *(unsigned __int8 *)(v21 + 16);
  uint64_t v23 = swift_release();
  if (v22)
  {
    if (v22 == 1)
    {
      type metadata accessor for HistoryListProvider();
      uint64_t v24 = swift_allocObject();
      type metadata accessor for SHLibrary();
      *(void *)(v24 + 16) = static SHLibrary.default.getter();
      ObservationRegistrar.init()();
      sub_1000060EC(&qword_1001568F0);
      uint64_t v25 = swift_allocObject();
      ObservationRegistrar.init()();
      *(void *)(v25 + 16) = v24;
      sub_1000060EC(&qword_1001568F8);
      swift_allocObject();
      uint64_t v26 = swift_retain();
      *(void *)(v25 + 24) = sub_100007DF4(v26);
      type metadata accessor for MusicRecognitionOnboardingWelcomeViewModel();
      sub_1000093BC((unint64_t *)&qword_1001568A8, (void (*)(uint64_t))type metadata accessor for MusicRecognitionOnboardingWelcomeViewModel);
      swift_retain();
      uint64_t v27 = (uint64_t)v31;
      Bindable<A>.init(wrappedValue:)();
      sub_1000094D4(v27, (uint64_t)v12 + *(int *)(v34 + 36));
      uint64_t *v12 = v25;
      sub_100009538(v27);
      uint64_t v28 = &qword_100156878;
      uint64_t v7 = v32;
      sub_100009C30((uint64_t)v12, (uint64_t)v32, &qword_100156878);
      sub_100009C94((uint64_t)v7, (uint64_t)v17, &qword_100156878);
      swift_storeEnumTagMultiPayload();
      sub_1000092EC();
      _ConditionalContent<>.init(storage:)();
      sub_100009C94((uint64_t)v19, (uint64_t)v15, &qword_100156890);
      swift_storeEnumTagMultiPayload();
      sub_100009270();
      sub_100009404();
      _ConditionalContent<>.init(storage:)();
      sub_1000063D0((uint64_t)v19, &qword_100156890);
    }
    else
    {
      __chkstk_darwin(v23);
      *(&v31 - 4) = a1;
      *((unsigned char *)&v31 - 24) = v30;
      *(&v31 - 2) = v35;
      type metadata accessor for TrackPageView();
      sub_1000093BC(&qword_1001568A0, (void (*)(uint64_t))type metadata accessor for TrackPageView);
      NavigationStack.init<>(root:)();
      type metadata accessor for MusicRecognitionOnboardingWelcomeViewModel();
      sub_1000093BC((unint64_t *)&qword_1001568A8, (void (*)(uint64_t))type metadata accessor for MusicRecognitionOnboardingWelcomeViewModel);
      swift_retain();
      Bindable<A>.init(wrappedValue:)();
      uint64_t v28 = &qword_100156870;
      sub_100009C94((uint64_t)v7, (uint64_t)v15, &qword_100156870);
      swift_storeEnumTagMultiPayload();
      sub_100009270();
      sub_100009404();
      _ConditionalContent<>.init(storage:)();
    }
    return sub_1000063D0((uint64_t)v7, v28);
  }
  else
  {
    uint64_t v40 = static Color.clear.getter();
    sub_100009594();
    *uint64_t v17 = Color.init<A>(_:)();
    swift_storeEnumTagMultiPayload();
    sub_1000092EC();
    swift_retain();
    _ConditionalContent<>.init(storage:)();
    sub_100009C94((uint64_t)v19, (uint64_t)v15, &qword_100156890);
    swift_storeEnumTagMultiPayload();
    sub_100009270();
    sub_100009404();
    _ConditionalContent<>.init(storage:)();
    sub_1000063D0((uint64_t)v19, &qword_100156890);
    return swift_release();
  }
}

uint64_t sub_1000077B0@<X0>(char a1@<W1>, uint64_t a2@<X8>)
{
  uint64_t v31 = a2;
  char v2 = a1 & 1;
  uint64_t v3 = type metadata accessor for TrackPageView();
  __chkstk_darwin(v3 - 8);
  char v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = swift_retain();
  uint64_t v7 = sub_1000081CC(v6, v2);
  swift_release();
  swift_getKeyPath();
  v32[0] = v7;
  sub_1000093BC((unint64_t *)&qword_100156898, (void (*)(uint64_t))type metadata accessor for ViewConfiguration);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  v29 = *(void **)(v7 + 24);
  id v30 = v29;
  swift_release();
  uint64_t v8 = swift_retain();
  uint64_t v9 = sub_1000081CC(v8, v2);
  swift_release();
  swift_getKeyPath();
  v32[0] = v9;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v10 = *(void *)(v9 + 32);
  uint64_t v11 = *(void *)(v9 + 40);
  swift_bridgeObjectRetain();
  swift_release();
  uint64_t v12 = swift_retain();
  uint64_t v13 = sub_1000081CC(v12, v2);
  swift_release();
  swift_getKeyPath();
  v32[0] = v13;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  char v14 = *(unsigned char *)(v13 + 48);
  swift_release();
  uint64_t v15 = swift_retain();
  uint64_t v16 = sub_1000081CC(v15, v2);
  swift_release();
  swift_getKeyPath();
  v32[0] = v16;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  char v17 = *(unsigned char *)(v16 + 16);
  swift_release();
  if (qword_100156550 != -1) {
    swift_once();
  }
  unsigned int v18 = 0x2000Bu >> (8 * v17);
  uint64_t v19 = qword_100164EA8;
  uint64_t v20 = type metadata accessor for MusicSubscriptionStatusController();
  v32[3] = v20;
  v32[4] = &off_10014D500;
  v32[0] = v19;
  type metadata accessor for TrackPageViewModel();
  uint64_t v21 = swift_allocObject();
  uint64_t v22 = sub_1000095E8((uint64_t)v32, v20);
  __chkstk_darwin(v22);
  uint64_t v24 = (uint64_t *)((char *)&v29 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v25 + 16))(v24);
  uint64_t v26 = *v24;
  swift_retain_n();
  uint64_t v27 = sub_100009638(v29, v10, v11, v14, v26, v18, v21);

  _s16MusicRecognition11AnyPlaylistVwxx_0((uint64_t)v32);
  swift_release();
  sub_1000437E4(v27, 0, 0, (uint64_t)v5);
  return sub_100009B4C((uint64_t)v5, v31);
}

uint64_t sub_100007B88@<X0>(uint64_t a1@<X8>)
{
  return sub_10000709C(*(char **)v1, *(unsigned char *)(v1 + 8), *(char **)(v1 + 16), a1);
}

int main(int argc, const char **argv, const char **envp)
{
  return 0;
}

unint64_t sub_100007BD8()
{
  unint64_t result = qword_1001567F0;
  if (!qword_1001567F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001567F0);
  }
  return result;
}

uint64_t destroy for MusicRecognition()
{
  swift_release();

  return swift_release();
}

void *_s16MusicRecognition16MusicRecognitionVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for MusicRecognition(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for MusicRecognition(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for MusicRecognition(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MusicRecognition(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MusicRecognition()
{
  return &type metadata for MusicRecognition;
}

uint64_t sub_100007DD8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100007DF4(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for NavigationPath();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v35[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v7 = v1 + qword_100164B90;
  *(void *)uint64_t v7 = LocalizedStringKey.init(stringLiteral:)();
  *(void *)(v7 + 8) = v8;
  *(unsigned char *)(v7 + 16) = v9 & 1;
  *(void *)(v7 + 24) = v10;
  uint64_t v11 = v1 + qword_100164B98;
  *(void *)uint64_t v11 = LocalizedStringKey.init(stringLiteral:)();
  *(void *)(v11 + 8) = v12;
  *(unsigned char *)(v11 + 16) = v13 & 1;
  *(void *)(v11 + 24) = v14;
  uint64_t v15 = v1 + qword_100164BA0;
  *(void *)uint64_t v15 = LocalizedStringKey.init(stringLiteral:)();
  *(void *)(v15 + 8) = v16;
  *(unsigned char *)(v15 + 16) = v17 & 1;
  *(void *)(v15 + 24) = v18;
  uint64_t v19 = v1 + qword_100164BA8;
  *(void *)uint64_t v19 = LocalizedStringKey.init(stringLiteral:)();
  *(void *)(v19 + 8) = v20;
  *(unsigned char *)(v19 + 16) = v21 & 1;
  *(void *)(v19 + 24) = v22;
  uint64_t v23 = (void *)(v1 + qword_100157708);
  *uint64_t v23 = 0;
  v23[1] = 0xE000000000000000;
  *(unsigned char *)(v1 + qword_100157710) = 0;
  *(unsigned char *)(v1 + qword_100157718) = 0;
  NavigationPath.init()();
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v1 + qword_100157720, v6, v3);
  if (qword_100156550 != -1) {
    swift_once();
  }
  uint64_t v24 = qword_100164EA8;
  uint64_t v25 = type metadata accessor for MusicSubscriptionStatusController();
  v35[3] = v25;
  v35[4] = &off_10014D500;
  v35[0] = v24;
  type metadata accessor for TrackPageViewModel();
  uint64_t v26 = swift_allocObject();
  uint64_t v27 = sub_1000095E8((uint64_t)v35, v25);
  __chkstk_darwin(v27);
  v29 = (void *)((char *)&v35[-1] - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v30 + 16))(v29);
  uint64_t v31 = *v29;
  swift_retain_n();
  uint64_t v32 = sub_100009638(0, 0, 0, 0, v31, 11, v26);
  _s16MusicRecognition11AnyPlaylistVwxx_0((uint64_t)v35);
  swift_release();
  *(void *)(v1 + qword_100157728) = v32;
  *(void *)(v1 + qword_100157730) = sub_10001E0B0();
  ObservationRegistrar.init()();
  *(void *)(v1 + *(void *)(*(void *)v1 + 184)) = a1;
  return v1;
}

uint64_t sub_1000081CC(uint64_t a1, char a2)
{
  uint64_t v4 = type metadata accessor for EnvironmentValues();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  if ((a2 & 1) == 0)
  {
    os_log_type_t v8 = static os_log_type_t.fault.getter();
    char v9 = static Log.runtimeIssuesLog.getter();
    os_log_type_t v10 = v8;
    if (os_log_type_enabled(v9, v8))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      *(_DWORD *)uint64_t v11 = 136315138;
      uint64_t v13 = sub_1000CB67C(0xD000000000000011, 0x8000000100117710, &v14);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath();
    swift_release();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v14;
  }
  return a1;
}

uint64_t sub_1000083D4@<X0>(uint64_t a1@<X8>)
{
  return sub_100008450(&qword_100156940, (uint64_t (*)(void))&type metadata accessor for OpenURLAction, 0x414C52556E65704FLL, 0xED00006E6F697463, a1);
}

uint64_t sub_100008414@<X0>(uint64_t a1@<X8>)
{
  return sub_100008450(&qword_100156938, (uint64_t (*)(void))&type metadata accessor for ColorScheme, 0x686353726F6C6F43, 0xEB00000000656D65, a1);
}

uint64_t sub_100008450@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v27 = a3;
  uint64_t v9 = v5;
  uint64_t v11 = type metadata accessor for EnvironmentValues();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1000060EC(a1);
  __chkstk_darwin(v15);
  char v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100009C94(v9, (uint64_t)v17, a1);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v18 = a2(0);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(a5, v17, v18);
  }
  else
  {
    os_log_type_t v20 = static os_log_type_t.fault.getter();
    char v21 = static Log.runtimeIssuesLog.getter();
    if (os_log_type_enabled(v21, v20))
    {
      unint64_t v25 = a4;
      uint64_t v22 = swift_slowAlloc();
      uint64_t v26 = a5;
      uint64_t v23 = (uint8_t *)v22;
      uint64_t v29 = swift_slowAlloc();
      *(_DWORD *)uint64_t v23 = 136315138;
      uint64_t v28 = sub_1000CB67C(v27, v25, &v29);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v21, v20, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v23, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
}

uint64_t sub_100008708@<X0>(uint64_t a1@<X8>)
{
  return sub_100008450(&qword_100156920, (uint64_t (*)(void))&type metadata accessor for ScenePhase, 0x616850656E656353, 0xEA00000000006573, a1);
}

uint64_t sub_100008740@<X0>(uint64_t a1@<X8>)
{
  return sub_100008450(&qword_100156918, (uint64_t (*)(void))&type metadata accessor for DismissAction, 0x417373696D736944, 0xED00006E6F697463, a1);
}

uint64_t sub_100008780@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for EnvironmentValues();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000060EC(&qword_100156928);
  __chkstk_darwin(v8);
  os_log_type_t v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100009C94(v2, (uint64_t)v10, &qword_100156928);
  if (swift_getEnumCaseMultiPayload() == 1) {
    return sub_100009C30((uint64_t)v10, a1, &qword_100156930);
  }
  os_log_type_t v12 = static os_log_type_t.fault.getter();
  uint64_t v13 = static Log.runtimeIssuesLog.getter();
  os_log_type_t v14 = v12;
  if (os_log_type_enabled(v13, v12))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    v17[1] = a1;
    uint64_t v18 = v16;
    *(_DWORD *)uint64_t v15 = 136315138;
    v17[2] = sub_1000CB67C(0xD000000000000020, 0x8000000100117730, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v15, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  EnvironmentValues.init()();
  swift_getAtKeyPath();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_100008A10(uint64_t a1, char a2)
{
  uint64_t v4 = type metadata accessor for EnvironmentValues();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2) {
    return a1 & 1;
  }
  swift_retain();
  os_log_type_t v8 = static os_log_type_t.fault.getter();
  uint64_t v9 = static Log.runtimeIssuesLog.getter();
  os_log_type_t v10 = v8;
  if (os_log_type_enabled(v9, v8))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315138;
    uint64_t v13 = sub_1000CB67C(1819242306, 0xE400000000000000, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  EnvironmentValues.init()();
  swift_getAtKeyPath();
  sub_100009CF8(a1, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v14;
}

uint64_t sub_100008C14@<X0>(uint64_t a1@<X8>)
{
  return sub_100008450(&qword_100156948, (uint64_t (*)(void))&type metadata accessor for LayoutDirection, 0x694474756F79614CLL, 0xEF6E6F6974636572, a1);
}

uint64_t sub_100008C54()
{
  type metadata accessor for ViewConfiguration();
  uint64_t v0 = swift_allocObject();
  *(unsigned char *)(v0 + 16) = 0;
  *(void *)(v0 + 32) = 0;
  *(void *)(v0 + 40) = 0;
  *(void *)(v0 + 24) = 0;
  *(unsigned char *)(v0 + 48) = 0;
  ObservationRegistrar.init()();
  State.init(wrappedValue:)();
  return v2;
}

uint64_t sub_100008CD0@<X0>(uint64_t a1@<X8>)
{
  return sub_10000669C(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

unint64_t sub_100008CD8()
{
  unint64_t result = qword_100156808;
  if (!qword_100156808)
  {
    sub_100006224(&qword_100156800);
    sub_100006224(&qword_100156810);
    sub_100006224(&qword_100156818);
    sub_100008DE8();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_1000093BC(&qword_100156840, (void (*)(uint64_t))&type metadata accessor for _TaskModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100156808);
  }
  return result;
}

unint64_t sub_100008DE8()
{
  unint64_t result = qword_100156820;
  if (!qword_100156820)
  {
    sub_100006224(&qword_100156818);
    sub_100008E88();
    sub_100006480(&qword_100156830, &qword_100156838);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100156820);
  }
  return result;
}

unint64_t sub_100008E88()
{
  unint64_t result = qword_100156828;
  if (!qword_100156828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100156828);
  }
  return result;
}

uint64_t sub_100008EDC@<X0>(void *a1@<X8>)
{
  sub_100008FB8();
  uint64_t result = EnvironmentValues.subscript.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_100008F34(void *a1)
{
  return sub_100006BA4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), 1);
}

uint64_t sub_100008F58()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100008F98(void *a1)
{
  return sub_100006BA4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), 2);
}

unint64_t sub_100008FB8()
{
  unint64_t result = qword_100156868;
  if (!qword_100156868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100156868);
  }
  return result;
}

uint64_t destroy for MusicRecognitionRoot()
{
  swift_release();

  return swift_release();
}

uint64_t _s16MusicRecognition20MusicRecognitionRootVwCP_0(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for MusicRecognitionRoot(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for MusicRecognitionRoot(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for MusicRecognitionRoot(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for MusicRecognitionRoot(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MusicRecognitionRoot(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MusicRecognitionRoot()
{
  return &type metadata for MusicRecognitionRoot;
}

uint64_t sub_1000091F8()
{
  return sub_100006480(&qword_100156848, &qword_1001567F8);
}

uint64_t sub_100009234()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100009258@<X0>(uint64_t a1@<X8>)
{
  return sub_1000077B0(*(unsigned char *)(v1 + 24), a1);
}

unint64_t sub_100009270()
{
  unint64_t result = qword_1001568B0;
  if (!qword_1001568B0)
  {
    sub_100006224(&qword_100156890);
    sub_1000092EC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001568B0);
  }
  return result;
}

unint64_t sub_1000092EC()
{
  unint64_t result = qword_1001568B8;
  if (!qword_1001568B8)
  {
    sub_100006224(&qword_100156878);
    sub_100006480(&qword_1001568C0, &qword_1001568C8);
    sub_1000093BC(&qword_1001568D0, (void (*)(uint64_t))type metadata accessor for PrivacySplashPresenter);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001568B8);
  }
  return result;
}

uint64_t sub_1000093BC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100009404()
{
  unint64_t result = qword_1001568D8;
  if (!qword_1001568D8)
  {
    sub_100006224(&qword_100156870);
    sub_100006480(&qword_1001568E0, &qword_1001568E8);
    sub_1000093BC(&qword_1001568D0, (void (*)(uint64_t))type metadata accessor for PrivacySplashPresenter);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001568D8);
  }
  return result;
}

uint64_t sub_1000094D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PrivacySplashPresenter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100009538(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PrivacySplashPresenter();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_100009594()
{
  unint64_t result = qword_100156900;
  if (!qword_100156900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100156900);
  }
  return result;
}

uint64_t sub_1000095E8(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_100009638(void *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, int a6, uint64_t a7)
{
  int v40 = a6;
  uint64_t v13 = sub_1000060EC((uint64_t *)&unk_100158FC0);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v16 = &v39[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v19 = &v39[-v18];
  __chkstk_darwin(v17);
  char v21 = &v39[-v20];
  v41[3] = type metadata accessor for MusicSubscriptionStatusController();
  v41[4] = &off_10014D500;
  v41[0] = a5;
  *(void *)(a7 + 16) = 0;
  *(unsigned char *)(a7 + 24) = 0;
  *(_OWORD *)(a7 + 32) = 0u;
  *(_OWORD *)(a7 + 48) = 0u;
  *(_OWORD *)(a7 + 64) = 0u;
  *(_OWORD *)(a7 + 80) = 0u;
  *(_OWORD *)(a7 + 96) = 0u;
  *(_OWORD *)(a7 + 112) = 0u;
  *(void *)(a7 + 128) = 0;
  *(unsigned char *)(a7 + 136) = 2;
  *(void *)(a7 + 144) = 0x3FE6666666666666;
  *(void *)(a7 + 200) = 0;
  *(_OWORD *)(a7 + 152) = 0u;
  *(_OWORD *)(a7 + 168) = 0u;
  *(_OWORD *)(a7 + 177) = 0u;
  *(void *)(a7 + 248) = 0;
  *(_OWORD *)(a7 + 232) = 0u;
  *(_OWORD *)(a7 + 216) = 0u;
  *(_OWORD *)(a7 + 264) = 0u;
  *(_OWORD *)(a7 + 280) = 0u;
  *(_OWORD *)(a7 + 296) = 0u;
  *(_OWORD *)(a7 + 312) = 0u;
  *(_OWORD *)(a7 + 328) = 0u;
  *(_OWORD *)(a7 + 344) = 0u;
  *(_OWORD *)(a7 + 360) = 0u;
  *(_OWORD *)(a7 + 376) = 0u;
  *(_OWORD *)(a7 + 392) = 0u;
  *(_OWORD *)(a7 + 408) = 0u;
  *(void *)(a7 + 424) = 0;
  *(void *)(a7 + 432) = 1;
  *(_OWORD *)(a7 + 440) = 0u;
  *(_OWORD *)(a7 + 456) = 0u;
  *(_OWORD *)(a7 + 472) = 0u;
  *(void *)(a7 + 488) = [self sharedInstance];
  *(void *)(a7 + 496) = LocalizedStringKey.init(stringLiteral:)();
  *(void *)(a7 + 504) = v22;
  *(unsigned char *)(a7 + 512) = v23 & 1;
  *(void *)(a7 + 520) = v24;
  *(void *)(a7 + 528) = LocalizedStringKey.init(stringLiteral:)();
  *(void *)(a7 + 536) = v25;
  *(unsigned char *)(a7 + 544) = v26 & 1;
  *(void *)(a7 + 552) = v27;
  *(void *)(a7 + 560) = 0;
  *(void *)(a7 + 576) = 0;
  *(void *)(a7 + 568) = 0;
  *(unsigned char *)(a7 + 584) = 0;
  ObservationRegistrar.init()();
  uint64_t v28 = *(void **)(a7 + 560);
  id v29 = a1;

  *(void *)(a7 + 560) = a1;
  swift_bridgeObjectRelease();
  *(void *)(a7 + 568) = a2;
  *(void *)(a7 + 576) = a3;
  *(unsigned char *)(a7 + 584) = a4;
  sub_100009AD0((uint64_t)v41, a7 + 592);
  *(unsigned char *)(a7 + 256) = v40;
  if (a1)
  {
    id v30 = [v29 artworkURL];
    if (v30)
    {
      uint64_t v31 = v30;
      static URL._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v32 = type metadata accessor for URL();
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v19, 0, 1, v32);
    }
    else
    {
      uint64_t v34 = type metadata accessor for URL();
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v19, 1, 1, v34);
    }
    sub_100009C30((uint64_t)v19, (uint64_t)v21, (uint64_t *)&unk_100158FC0);
  }
  else
  {
    uint64_t v33 = type metadata accessor for URL();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v21, 1, 1, v33);
  }
  uint64_t v35 = type metadata accessor for URL();
  uint64_t v36 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56);
  v36(v16, 1, 1, v35);
  type metadata accessor for SongArtworkViewModel();
  uint64_t v37 = swift_allocObject();
  v36((unsigned char *)(v37 + OBJC_IVAR____TtC16MusicRecognition20SongArtworkViewModel__artworkURL), 1, 1, v35);
  v36((unsigned char *)(v37 + OBJC_IVAR____TtC16MusicRecognition20SongArtworkViewModel___animatedArtworkURL), 1, 1, v35);
  ObservationRegistrar.init()();
  sub_1000ECEA4((uint64_t)v21, (uint64_t)v16);
  sub_1000063D0((uint64_t)v16, (uint64_t *)&unk_100158FC0);
  sub_1000063D0((uint64_t)v21, (uint64_t *)&unk_100158FC0);
  _s16MusicRecognition11AnyPlaylistVwxx_0((uint64_t)v41);
  *(void *)(a7 + 208) = v37;
  return a7;
}

uint64_t _s16MusicRecognition11AnyPlaylistVwxx_0(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_100009AD0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_100009B4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TrackPageView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_100009BB4()
{
  unint64_t result = qword_100156908;
  if (!qword_100156908)
  {
    sub_100006224(&qword_100156910);
    sub_100009270();
    sub_100009404();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100156908);
  }
  return result;
}

uint64_t sub_100009C30(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_1000060EC(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100009C94(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_1000060EC(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100009CF8(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_release();
  }
  return result;
}

uint64_t sub_100009D04@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1000060EC((uint64_t *)&unk_100158FC0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)v14 - v6;
  URL.init(string:)();
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v5, 1, v8);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v7, v5, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
    v14[1] = Image.init(systemName:)();
    uint64_t v11 = AnyView.init<A>(_:)();
    *(void *)a1 = 0x495F545349545241;
    *(void *)(a1 + 8) = 0xE900000000000044;
    *(void *)(a1 + 16) = 0x747369747241;
    *(void *)(a1 + 24) = 0xE600000000000000;
    *(_OWORD *)(a1 + 32) = xmmword_100110220;
    os_log_type_t v12 = (int *)type metadata accessor for DesignTimeArtistMetadata();
    uint64_t result = sub_100009F78((uint64_t)v7, a1 + v12[7]);
    uint64_t v13 = (void *)(a1 + v12[8]);
    *uint64_t v13 = 0xD0000000000001BDLL;
    v13[1] = 0x8000000100117760;
    *(void *)(a1 + v12[9]) = v11;
  }
  return result;
}

uint64_t type metadata accessor for DesignTimeArtistMetadata()
{
  uint64_t result = qword_1001569A8;
  if (!qword_1001569A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100009F78(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000060EC((uint64_t *)&unk_100158FC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t *sub_100009FE0(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    uint64_t v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a2[5];
    uint64_t v10 = a3[7];
    __dst = (char *)a1 + v10;
    uint64_t v11 = (char *)a2 + v10;
    a1[4] = a2[4];
    a1[5] = v9;
    uint64_t v12 = type metadata accessor for URL();
    uint64_t v13 = *(void *)(v12 - 8);
    uint64_t v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v22(v11, 1, v12))
    {
      uint64_t v14 = sub_1000060EC((uint64_t *)&unk_100158FC0);
      memcpy(__dst, v11, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(__dst, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
    }
    uint64_t v16 = a3[8];
    uint64_t v17 = a3[9];
    uint64_t v18 = (uint64_t *)((char *)v4 + v16);
    uint64_t v19 = (uint64_t *)((char *)a2 + v16);
    uint64_t v20 = v19[1];
    *uint64_t v18 = *v19;
    v18[1] = v20;
    *(uint64_t *)((char *)v4 + v17) = *(uint64_t *)((char *)a2 + v17);
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_10000A1C4(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();

  return swift_release();
}

void *sub_10000A2B4(void *a1, void *a2, int *a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  uint64_t v7 = a2[5];
  uint64_t v8 = a3[7];
  __dst = (char *)a1 + v8;
  uint64_t v9 = (char *)a2 + v8;
  a1[4] = a2[4];
  a1[5] = v7;
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = sub_1000060EC((uint64_t *)&unk_100158FC0);
    memcpy(__dst, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(__dst, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
  }
  uint64_t v14 = a3[8];
  uint64_t v15 = a3[9];
  uint64_t v16 = (void *)((char *)a1 + v14);
  uint64_t v17 = (void *)((char *)a2 + v14);
  uint64_t v18 = v17[1];
  void *v16 = *v17;
  v16[1] = v18;
  *(void *)((char *)a1 + v15) = *(void *)((char *)a2 + v15);
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *sub_10000A440(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[7];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = sub_1000060EC((uint64_t *)&unk_100158FC0);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  uint64_t v15 = a3[8];
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  void *v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_10000A668(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  uint64_t v7 = a3[7];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = sub_1000060EC((uint64_t *)&unk_100158FC0);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v13 = a3[9];
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  *(void *)((char *)a1 + v13) = *(void *)((char *)a2 + v13);
  return a1;
}

void *sub_10000A7A8(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a3[7];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = type metadata accessor for URL();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    uint64_t v17 = sub_1000060EC((uint64_t *)&unk_100158FC0);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_7:
  uint64_t v18 = a3[8];
  uint64_t v19 = (void *)((char *)a1 + v18);
  uint64_t v20 = (void *)((char *)a2 + v18);
  uint64_t v22 = *v20;
  uint64_t v21 = v20[1];
  void *v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  swift_release();
  return a1;
}

uint64_t sub_10000A988(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10000A99C);
}

uint64_t sub_10000A99C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1000060EC((uint64_t *)&unk_100158FC0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_10000AA50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10000AA64);
}

uint64_t sub_10000AA64(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1000060EC((uint64_t *)&unk_100158FC0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_10000AB10()
{
  sub_10000ABC4();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_10000ABC4()
{
  if (!qword_1001569B8)
  {
    type metadata accessor for URL();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1001569B8);
    }
  }
}

uint64_t sub_10000AC1C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_10000AC4C()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_10000AC7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10000AD3C(v2 + *(int *)(a1 + 28), a2);
}

uint64_t sub_10000AC8C(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 32));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_10000ACC4()
{
  return swift_retain();
}

uint64_t sub_10000ACD0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(a1, 1, 1, v2);
}

uint64_t sub_10000AD3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000060EC((uint64_t *)&unk_100158FC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t *sub_10000ADA4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (*a2)
    {
      uint64_t v7 = a2[1];
      *uint64_t v4 = *a2;
      v4[1] = v7;
      swift_retain();
    }
    else
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
    }
    uint64_t v9 = a2[3];
    v4[2] = a2[2];
    v4[3] = v9;
    uint64_t v10 = *(int *)(a3 + 24);
    uint64_t v11 = (uint64_t *)((char *)v4 + v10);
    uint64_t v12 = (uint64_t *)((char *)a2 + v10);
    swift_retain();
    swift_retain();
    sub_1000060EC(&qword_100156940);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = type metadata accessor for OpenURLAction();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    }
    else
    {
      *uint64_t v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v4;
}

uint64_t sub_10000AEFC(void *a1, uint64_t a2)
{
  if (*a1) {
    swift_release();
  }
  swift_release();
  swift_release();
  uint64_t v4 = (char *)a1 + *(int *)(a2 + 24);
  sub_1000060EC(&qword_100156940);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for OpenURLAction();
    uint64_t v6 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(v4, v5);
  }
  else
  {
    return swift_release();
  }
}

void *sub_10000AFCC(void *a1, void *a2, uint64_t a3)
{
  if (*a2)
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (void *)((char *)a1 + v8);
  uint64_t v10 = (void *)((char *)a2 + v8);
  swift_retain();
  swift_retain();
  sub_1000060EC(&qword_100156940);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = type metadata accessor for OpenURLAction();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  else
  {
    *uint64_t v9 = *v10;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t *sub_10000B0CC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  if (*a1)
  {
    if (v6)
    {
      uint64_t v7 = a2[1];
      *a1 = v6;
      a1[1] = v7;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v6)
  {
    uint64_t v8 = a2[1];
    *a1 = v6;
    a1[1] = v8;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_8:
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v9 = *(int *)(a3 + 24);
    uint64_t v10 = (uint64_t *)((char *)a1 + v9);
    uint64_t v11 = (uint64_t *)((char *)a2 + v9);
    sub_1000063D0((uint64_t)a1 + v9, &qword_100156940);
    sub_1000060EC(&qword_100156940);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = type metadata accessor for OpenURLAction();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *uint64_t v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_10000B228(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)a2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v4;
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (void *)(a1 + v5);
  uint64_t v7 = (const void *)(a2 + v5);
  uint64_t v8 = sub_1000060EC(&qword_100156940);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = type metadata accessor for OpenURLAction();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 32))(v6, v7, v9);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v6, v7, *(void *)(*(void *)(v8 - 8) + 64));
  }
  return a1;
}

uint64_t *sub_10000B318(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  if (*a1)
  {
    if (v6)
    {
      uint64_t v7 = a2[1];
      *a1 = v6;
      a1[1] = v7;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v6)
  {
    uint64_t v8 = a2[1];
    *a1 = v6;
    a1[1] = v8;
    goto LABEL_8;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_8:
  a1[2] = a2[2];
  swift_release();
  a1[3] = a2[3];
  swift_release();
  if (a1 != a2)
  {
    uint64_t v9 = *(int *)(a3 + 24);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    sub_1000063D0((uint64_t)a1 + v9, &qword_100156940);
    uint64_t v12 = sub_1000060EC(&qword_100156940);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = type metadata accessor for OpenURLAction();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v10, v11, v13);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_10000B468(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10000B47C);
}

uint64_t sub_10000B47C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1000060EC(&qword_100156A08);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_10000B530(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10000B544);
}

uint64_t sub_10000B544(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 16) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1000060EC(&qword_100156A08);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for ContextMenuForUnsubscribedUserView()
{
  uint64_t result = qword_100156A68;
  if (!qword_100156A68) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10000B63C()
{
  sub_10000B6DC();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_10000B6DC()
{
  if (!qword_100156A78)
  {
    type metadata accessor for OpenURLAction();
    unint64_t v0 = type metadata accessor for Environment.Content();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100156A78);
    }
  }
}

uint64_t sub_10000B734()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_10000B750()
{
  qword_1001569F8 = 0x6C7070612E6D6F63;
  unk_100156A00 = 0xEF636973754D2E65;
}

uint64_t sub_10000B780@<X0>(uint64_t a1@<X8>)
{
  uint64_t v74 = a1;
  uint64_t v64 = type metadata accessor for NavigationBarButtonStyle();
  uint64_t v2 = __chkstk_darwin(v64);
  v72 = (uint64_t *)((char *)&v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v2);
  uint64_t v73 = (uint64_t)&v51 - v4;
  uint64_t v5 = type metadata accessor for ButtonMenuStyle();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v66 = v5;
  uint64_t v67 = v6;
  __chkstk_darwin(v5);
  v63 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = type metadata accessor for URL();
  uint64_t v8 = *(void *)(v59 - 8);
  __chkstk_darwin(v59);
  v57 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ContextMenuForUnsubscribedUserView();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin(v10 - 8);
  uint64_t v56 = sub_1000060EC(&qword_100156AB0);
  uint64_t v60 = *(void *)(v56 - 8);
  __chkstk_darwin(v56);
  v52 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_1000060EC(&qword_100156AB8);
  uint64_t v62 = *(void *)(v61 - 8);
  __chkstk_darwin(v61);
  v55 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_1000060EC(&qword_100156AC0);
  uint64_t v65 = *(void *)(v53 - 8);
  __chkstk_darwin(v53 - 8);
  v58 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1000060EC(&qword_100156AC8);
  uint64_t v70 = *(void *)(v16 - 8);
  uint64_t v71 = v16;
  __chkstk_darwin(v16);
  v54 = (char *)&v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = sub_1000060EC(&qword_100156AD0);
  __chkstk_darwin(v69);
  v68 = (char *)&v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000E3D0(v1, (uint64_t)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for ContextMenuForUnsubscribedUserView);
  unint64_t v19 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v20 = swift_allocObject();
  sub_10000E648((uint64_t)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v20 + v19, (uint64_t (*)(void))type metadata accessor for ContextMenuForUnsubscribedUserView);
  uint64_t v75 = v1;
  sub_1000060EC(&qword_100156AD8);
  sub_1000060EC(&qword_100156AE0);
  v76 = &type metadata for Image;
  v77 = &protocol witness table for Image;
  swift_getOpaqueTypeConformance2();
  sub_100006480(&qword_100156AE8, &qword_100156AE0);
  Menu.init(onPresentationChanged:content:label:)();
  uint64_t v21 = *(void *)(v1 + 24);
  uint64_t v81 = *(void *)(v1 + 16);
  uint64_t v82 = v21;
  sub_1000060EC(&qword_100156AF0);
  State.projectedValue.getter();
  uint64_t v22 = v76;
  char v23 = v77;
  uint64_t v24 = v78;
  swift_getKeyPath();
  v76 = v22;
  v77 = v23;
  uint64_t v78 = v24;
  sub_1000060EC(&qword_100156AF8);
  Binding.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v25 = *(void **)(v1 + 24);
  v76 = *(void **)(v1 + 16);
  v77 = v25;
  State.wrappedValue.getter();
  uint64_t v26 = v8;
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  uint64_t v28 = v57;
  uint64_t v29 = v59;
  v27(v57, v80 + OBJC_IVAR____TtC16MusicRecognition20ContextMenuViewModel_shazamURL, v59);
  swift_release();
  uint64_t v50 = sub_100006480(&qword_100156B00, &qword_100156AB0);
  id v30 = (void *)v56;
  uint64_t v31 = v55;
  uint64_t v32 = (void *)v64;
  uint64_t v33 = v52;
  View.sharingPicker(isPresented:item:subject:message:)();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v29);
  (*(void (**)(char *, void *))(v60 + 8))(v33, v30);
  uint64_t v34 = v63;
  ButtonMenuStyle.init()();
  v76 = v30;
  v77 = (void *)v50;
  uint64_t v35 = v54;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v37 = sub_10000E8A0(&qword_100156B08, (void (*)(uint64_t))&type metadata accessor for ButtonMenuStyle);
  uint64_t v38 = v58;
  uint64_t v39 = (void *)v61;
  int v40 = (void *)v66;
  View.menuStyle<A>(_:)();
  (*(void (**)(char *, void *))(v67 + 8))(v34, v40);
  (*(void (**)(char *, void *))(v62 + 8))(v31, v39);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v42 = (uint64_t)v72;
  uint64_t *v72 = KeyPath;
  sub_1000060EC(&qword_100156938);
  swift_storeEnumTagMultiPayload();
  uint64_t v43 = v73;
  sub_10000E648(v42, v73, (uint64_t (*)(void))type metadata accessor for NavigationBarButtonStyle);
  v76 = v39;
  v77 = v40;
  uint64_t v78 = OpaqueTypeConformance2;
  uint64_t v79 = v37;
  uint64_t v44 = swift_getOpaqueTypeConformance2();
  uint64_t v45 = sub_10000E8A0(&qword_100156B10, (void (*)(uint64_t))type metadata accessor for NavigationBarButtonStyle);
  v46 = (void *)v53;
  View.buttonStyle<A>(_:)();
  sub_10000E840(v43, (uint64_t (*)(void))type metadata accessor for NavigationBarButtonStyle);
  (*(void (**)(char *, void *))(v65 + 8))(v38, v46);
  if (qword_100156310 != -1) {
    swift_once();
  }
  v76 = v46;
  v77 = v32;
  uint64_t v78 = v44;
  uint64_t v79 = v45;
  swift_getOpaqueTypeConformance2();
  uint64_t v47 = (uint64_t)v68;
  uint64_t v48 = v71;
  View.accessibilityIdentifier(_:)();
  (*(void (**)(char *, uint64_t))(v70 + 8))(v35, v48);
  v76 = (void *)qword_100164CF0;
  v77 = *(void **)algn_100164CF8;
  sub_10000E0F0();
  ModifiedContent<>.accessibilityLabel<A>(_:)();
  return sub_1000063D0(v47, &qword_100156AD0);
}

uint64_t sub_10000C214@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  v49 = a2;
  uint64_t v3 = sub_1000060EC(&qword_100156B20);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v50 = (uint64_t)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v48 = (char *)&v45 - v6;
  uint64_t v7 = sub_1000060EC(&qword_100156B28);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v47 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  v52 = (char *)&v45 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v45 - v14;
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v18 = (char *)&v45 - v17;
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v21 = (char *)&v45 - v20;
  __chkstk_darwin(v19);
  char v23 = (char *)&v45 - v22;
  uint64_t v54 = a1;
  sub_1000060EC(&qword_100156B30);
  sub_10000E174();
  Section<>.init(content:)();
  uint64_t v46 = v8;
  uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  uint64_t v51 = v23;
  v24(v23, v21, v7);
  uint64_t v53 = a1;
  Section<>.init(content:)();
  uint64_t v45 = v18;
  uint64_t v25 = v7;
  v24(v18, v15, v7);
  uint64_t v26 = *(void *)(a1 + 24);
  uint64_t v55 = *(void *)(a1 + 16);
  uint64_t v56 = v26;
  sub_1000060EC(&qword_100156AF0);
  State.wrappedValue.getter();
  uint64_t v27 = *(void *)(*(void *)(v57
                              + OBJC_IVAR____TtC16MusicRecognition39ContextMenuForUnsubscribedUserViewModel_streamingServices)
                  + 16);
  swift_release();
  if (v27)
  {
    uint64_t v28 = LocalizedStringKey.init(stringLiteral:)();
    __chkstk_darwin(v28);
    *(&v45 - 2) = (char *)a1;
    sub_1000060EC(&qword_100156B50);
    sub_10000E270();
    uint64_t v29 = v48;
    Section<>.init(_:content:)();
    uint64_t v30 = (uint64_t)v29;
    uint64_t v31 = sub_1000060EC(&qword_100156B60);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v29, 0, 1, v31);
  }
  else
  {
    uint64_t v32 = sub_1000060EC(&qword_100156B60);
    uint64_t v30 = (uint64_t)v48;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v48, 1, 1, v32);
  }
  uint64_t v33 = v46;
  uint64_t v34 = *(void (**)(char *, char *, uint64_t))(v46 + 16);
  uint64_t v35 = v52;
  uint64_t v36 = v25;
  v34(v52, v51, v25);
  uint64_t v37 = v47;
  uint64_t v38 = v45;
  v34(v47, v45, v36);
  uint64_t v39 = v50;
  sub_10000E2E4(v30, v50);
  int v40 = v49;
  v34(v49, v35, v36);
  uint64_t v41 = v30;
  uint64_t v42 = sub_1000060EC(&qword_100156B68);
  v34(&v40[*(int *)(v42 + 48)], v37, v36);
  sub_10000E2E4(v39, (uint64_t)&v40[*(int *)(v42 + 64)]);
  sub_1000063D0(v41, &qword_100156B20);
  uint64_t v43 = *(void (**)(char *, uint64_t))(v33 + 8);
  v43(v38, v36);
  v43(v51, v36);
  sub_1000063D0(v39, &qword_100156B20);
  v43(v37, v36);
  return ((uint64_t (*)(char *, uint64_t))v43)(v52, v36);
}

uint64_t sub_10000C73C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ContextMenuForUnsubscribedUserView();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2 - 8);
  uint64_t v5 = sub_1000060EC(&qword_100156B48);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000E3D0(a1, (uint64_t)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for ContextMenuForUnsubscribedUserView);
  unint64_t v9 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v10 = swift_allocObject();
  sub_10000E648((uint64_t)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v10 + v9, (uint64_t (*)(void))type metadata accessor for ContextMenuForUnsubscribedUserView);
  sub_1000060EC(&qword_100156748);
  sub_100006480(&qword_100156780, &qword_100156748);
  Button.init(action:label:)();
  if (qword_100156318 != -1) {
    swift_once();
  }
  sub_100006480(&qword_100156B40, &qword_100156B48);
  View.accessibilityIdentifier(_:)();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_10000C9D8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for ContextMenuForUnsubscribedUserView();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2 - 8);
  uint64_t v5 = sub_1000060EC(&qword_100156B48);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v20[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_1000060EC(&qword_100156B30);
  __chkstk_darwin(v9);
  uint64_t v11 = &v20[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10000E3D0(v1, (uint64_t)&v20[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)], (uint64_t (*)(void))type metadata accessor for ContextMenuForUnsubscribedUserView);
  unint64_t v12 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v13 = swift_allocObject();
  sub_10000E648((uint64_t)&v20[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)], v13 + v12, (uint64_t (*)(void))type metadata accessor for ContextMenuForUnsubscribedUserView);
  sub_1000060EC(&qword_100156748);
  sub_100006480(&qword_100156780, &qword_100156748);
  Button.init(action:label:)();
  if (qword_1001562C0 != -1) {
    swift_once();
  }
  sub_100006480(&qword_100156B40, &qword_100156B48);
  View.accessibilityIdentifier(_:)();
  (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v14 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v16 = v15;
  char v18 = v17 & 1;
  ModifiedContent<>.accessibilityLabel(_:)();
  sub_10000E904(v14, v16, v18);
  swift_bridgeObjectRelease();
  return sub_1000063D0((uint64_t)v11, &qword_100156B30);
}

uint64_t sub_10000CD64(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ContextMenuForUnsubscribedUserView();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2 - 8);
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = v5;
  sub_1000060EC(&qword_100156AF0);
  State.wrappedValue.getter();
  uint64_t v6 = *(void *)(v13 + OBJC_IVAR____TtC16MusicRecognition39ContextMenuForUnsubscribedUserViewModel_streamingServices);
  swift_bridgeObjectRetain();
  swift_release();
  uint64_t v11 = v6;
  sub_10000E3D0(a1, (uint64_t)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for ContextMenuForUnsubscribedUserView);
  unint64_t v7 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v8 = swift_allocObject();
  sub_10000E648((uint64_t)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v8 + v7, (uint64_t (*)(void))type metadata accessor for ContextMenuForUnsubscribedUserView);
  sub_1000060EC(&qword_100156B70);
  sub_1000060EC(&qword_100156B30);
  sub_100006480(&qword_100156B78, &qword_100156B70);
  sub_10000E174();
  sub_10000E8A0(&qword_100156B80, (void (*)(uint64_t))type metadata accessor for StreamingService);
  return ForEach<>.init(_:content:)();
}

uint64_t sub_10000CF90()
{
  uint64_t v0 = type metadata accessor for SymbolVariants();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)v9 - v5;
  v9[1] = Image.init(systemName:)();
  static SymbolVariants.circle.getter();
  SymbolVariants.fill.getter();
  unint64_t v7 = *(void (**)(char *, uint64_t))(v1 + 8);
  v7(v6, v0);
  View.symbolVariant(_:)();
  v7(v4, v0);
  return swift_release();
}

uint64_t sub_10000D0E0@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_10000E8A0(&qword_100156B18, (void (*)(uint64_t))type metadata accessor for ContextMenuViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + OBJC_IVAR____TtC16MusicRecognition20ContextMenuViewModel__shareSheetFromOverflow);
  return result;
}

uint64_t sub_10000D190()
{
  return swift_release();
}

uint64_t sub_10000D260()
{
  return swift_release();
}

uint64_t sub_10000D2D4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for OpenURLAction();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ContextMenuForUnsubscribedUserView();
  sub_1000083D4((uint64_t)v9);
  uint64_t v10 = *(void *)(a1 + 24);
  v12[1] = *(void *)(a1 + 16);
  v12[2] = v10;
  sub_1000060EC(&qword_100156AF0);
  State.wrappedValue.getter();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v12[3] + OBJC_IVAR____TtC16MusicRecognition20ContextMenuViewModel_shazamAppStoreURL, v2);
  swift_release();
  OpenURLAction.callAsFunction(_:)();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_10000D4B0()
{
  return Label.init(title:icon:)();
}

uint64_t sub_10000D504@<X0>(uint64_t a1@<X8>)
{
  return sub_10000D6C4(a1);
}

uint64_t sub_10000D520()
{
  sub_1000060EC(&qword_100156AF0);
  State.wrappedValue.getter();
  swift_getKeyPath();
  sub_10000E8A0(&qword_100156B18, (void (*)(uint64_t))type metadata accessor for ContextMenuViewModel);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  if (*(unsigned char *)(v2 + OBJC_IVAR____TtC16MusicRecognition20ContextMenuViewModel_member)) {
    int v0 = 66304;
  }
  else {
    int v0 = 768;
  }
  sub_1000D6E40(v0, 0xD000000000000028, 0x8000000100117950);
  return swift_release();
}

uint64_t sub_10000D654()
{
  return Label.init(title:icon:)();
}

uint64_t sub_10000D6A8@<X0>(uint64_t a1@<X8>)
{
  return sub_10000D6C4(a1);
}

uint64_t sub_10000D6C4@<X0>(uint64_t a1@<X8>)
{
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t result = Text.init(_:tableName:bundle:comment:)();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_10000D724@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = Image.init(systemName:)();
  *a1 = result;
  return result;
}

uint64_t sub_10000D764@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v19 = a2;
  uint64_t v21 = a3;
  uint64_t v4 = type metadata accessor for ContextMenuForUnsubscribedUserView();
  uint64_t v18 = *(void *)(v4 - 8);
  uint64_t v5 = *(void *)(v18 + 64);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = type metadata accessor for StreamingService();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1000060EC(&qword_100156B48);
  uint64_t v10 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000E3D0(a1, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StreamingService);
  sub_10000E3D0(v19, (uint64_t)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for ContextMenuForUnsubscribedUserView);
  unint64_t v13 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v14 = (v8 + *(unsigned __int8 *)(v18 + 80) + v13) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  uint64_t v15 = swift_allocObject();
  sub_10000E648((uint64_t)v9, v15 + v13, (uint64_t (*)(void))type metadata accessor for StreamingService);
  sub_10000E648((uint64_t)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v15 + v14, (uint64_t (*)(void))type metadata accessor for ContextMenuForUnsubscribedUserView);
  uint64_t v22 = a1;
  sub_1000060EC(&qword_100156748);
  sub_100006480(&qword_100156780, &qword_100156748);
  Button.init(action:label:)();
  sub_100006480(&qword_100156B40, &qword_100156B48);
  uint64_t v16 = v20;
  View.accessibilityIdentifier(_:)();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v16);
}

uint64_t sub_10000DAB4(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v5 = a1[1];
  if (qword_100156010 != -1) {
    swift_once();
  }
  BOOL v6 = v4 == qword_1001569F8 && v5 == unk_100156A00;
  if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    sub_1000060EC(&qword_100156AF0);
    State.wrappedValue.getter();
    sub_10000DC24((uint64_t)a1, a2, "Opening Apple Music provider URL %s");
    if (*(unsigned char *)(v9 + OBJC_IVAR____TtC16MusicRecognition20ContextMenuViewModel_member)) {
      int v7 = 66305;
    }
    else {
      int v7 = 769;
    }
  }
  else
  {
    sub_1000060EC(&qword_100156AF0);
    State.wrappedValue.getter();
    sub_10000DC24((uint64_t)a1, a2, "Opening third party provider URL %s");
    if (*(unsigned char *)(v9 + OBJC_IVAR____TtC16MusicRecognition20ContextMenuViewModel_member)) {
      int v7 = 66308;
    }
    else {
      int v7 = 772;
    }
  }
  sub_1000D6E40(v7, 0xD000000000000028, 0x8000000100117950);
  return swift_release();
}

uint64_t sub_10000DC24(uint64_t a1, uint64_t a2, const char *a3)
{
  uint64_t v24 = a3;
  uint64_t v4 = type metadata accessor for OpenURLAction();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  int v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for StreamingService();
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100156018 != -1) {
    swift_once();
  }
  uint64_t v11 = type metadata accessor for Logger();
  sub_10000E808(v11, (uint64_t)qword_100164B38);
  sub_10000E3D0(a1, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StreamingService);
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = swift_slowAlloc();
    uint64_t v23 = v4;
    uint64_t v15 = (uint8_t *)v14;
    uint64_t v20 = swift_slowAlloc();
    uint64_t v21 = a1;
    uint64_t v26 = v20;
    *(_DWORD *)uint64_t v15 = 136315138;
    uint64_t v22 = v5;
    uint64_t v19 = v15 + 4;
    type metadata accessor for URL();
    sub_10000E8A0((unint64_t *)&qword_100156B88, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v16 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v25 = sub_1000CB67C(v16, v17, &v26);
    uint64_t v5 = v22;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10000E840((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StreamingService);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, v24, v15, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v4 = v23;
    swift_slowDealloc();
  }
  else
  {
    sub_10000E840((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StreamingService);
  }

  type metadata accessor for ContextMenuForUnsubscribedUserView();
  sub_1000083D4((uint64_t)v7);
  OpenURLAction.callAsFunction(_:)();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_10000DF84@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for StreamingService();
  sub_10000E0F0();
  swift_bridgeObjectRetain();
  uint64_t result = Text.init<A>(_:)();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_10000E004@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for StreamingService();
  swift_bridgeObjectRetain();
  uint64_t result = Image.init(_internalSystemName:)();
  *a1 = result;
  return result;
}

uint64_t sub_10000E064(char a1)
{
  uint64_t v3 = type metadata accessor for ContextMenuForUnsubscribedUserView();
  uint64_t v6 = *(void *)(v3 - 8);
  uint64_t result = v3 - 8;
  uint64_t v5 = v6;
  if (a1)
  {
    int v7 = (uint64_t (**)(void))(v1
                            + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)));
    if (*v7) {
      return (*v7)();
    }
  }
  return result;
}

uint64_t sub_10000E0D8@<X0>(char *a1@<X8>)
{
  return sub_10000C214(*(void *)(v1 + 16), a1);
}

unint64_t sub_10000E0F0()
{
  unint64_t result = qword_100159A50;
  if (!qword_100159A50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_100159A50);
  }
  return result;
}

uint64_t sub_10000E14C()
{
  return sub_10010339C(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_10000E16C()
{
  return sub_10000C73C(*(void *)(v0 + 16));
}

unint64_t sub_10000E174()
{
  unint64_t result = qword_100156B38;
  if (!qword_100156B38)
  {
    sub_100006224(&qword_100156B30);
    sub_100006480(&qword_100156B40, &qword_100156B48);
    sub_10000E8A0((unint64_t *)&qword_1001567D8, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100156B38);
  }
  return result;
}

uint64_t sub_10000E244()
{
  return sub_10000C9D8();
}

uint64_t sub_10000E268()
{
  return sub_10000CD64(*(void *)(v0 + 16));
}

unint64_t sub_10000E270()
{
  unint64_t result = qword_100156B58;
  if (!qword_100156B58)
  {
    sub_100006224(&qword_100156B50);
    sub_10000E174();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100156B58);
  }
  return result;
}

uint64_t sub_10000E2E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000060EC(&qword_100156B20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10000E350@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for ContextMenuForUnsubscribedUserView() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_10000D764(a1, v6, a2);
}

uint64_t sub_10000E3D0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10000E438()
{
  uint64_t v1 = (int *)(type metadata accessor for StreamingService() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)v1 + 64);
  uint64_t v5 = type metadata accessor for ContextMenuForUnsubscribedUserView();
  uint64_t v6 = *(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  uint64_t v7 = (v3 + v4 + v6) & ~v6;
  uint64_t v8 = *(void *)(*(void *)(v5 - 8) + 64);
  swift_bridgeObjectRelease();
  uint64_t v9 = v0 + v3 + v1[7];
  uint64_t v10 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + v7)) {
    swift_release();
  }
  swift_release();
  swift_release();
  uint64_t v11 = v0 + v7 + *(int *)(v5 + 24);
  sub_1000060EC(&qword_100156940);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = type metadata accessor for OpenURLAction();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  }
  else
  {
    swift_release();
  }

  return _swift_deallocObject(v0, v7 + v8, v2 | v6 | 7);
}

uint64_t sub_10000E648(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10000E6B0()
{
  uint64_t v1 = *(void *)(type metadata accessor for StreamingService() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(type metadata accessor for ContextMenuForUnsubscribedUserView() - 8);
  uint64_t v5 = v0 + ((v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return sub_10000DAB4((uint64_t *)(v0 + v2), v5);
}

uint64_t sub_10000E77C()
{
  return Label.init(title:icon:)();
}

uint64_t sub_10000E7F8@<X0>(uint64_t a1@<X8>)
{
  return sub_10000DF84(a1);
}

uint64_t sub_10000E800@<X0>(uint64_t *a1@<X8>)
{
  return sub_10000E004(a1);
}

uint64_t sub_10000E808(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t sub_10000E840(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10000E8A0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10000E8EC()
{
  return sub_10000EA64((uint64_t (*)(uint64_t))sub_10000D520);
}

uint64_t sub_10000E904(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_release();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_10000E918()
{
  uint64_t v1 = type metadata accessor for ContextMenuForUnsubscribedUserView();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  if (*(void *)(v0 + v3)) {
    swift_release();
  }
  swift_release();
  swift_release();
  uint64_t v5 = v0 + v3 + *(int *)(v1 + 24);
  sub_1000060EC(&qword_100156940);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for OpenURLAction();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_10000EA4C()
{
  return sub_10000EA64((uint64_t (*)(uint64_t))sub_10000D260);
}

uint64_t sub_10000EA64(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for ContextMenuForUnsubscribedUserView() - 8);
  uint64_t v3 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return a1(v3);
}

uint64_t sub_10000EAD8()
{
  return sub_10000D2D4(*(void *)(v0 + 16));
}

unint64_t sub_10000EAE4()
{
  unint64_t result = qword_100156B90;
  if (!qword_100156B90)
  {
    sub_100006224(&qword_100156AD0);
    sub_100006224(&qword_100156AC0);
    type metadata accessor for NavigationBarButtonStyle();
    sub_100006224(&qword_100156AB8);
    type metadata accessor for ButtonMenuStyle();
    sub_100006224(&qword_100156AB0);
    sub_100006480(&qword_100156B00, &qword_100156AB0);
    swift_getOpaqueTypeConformance2();
    sub_10000E8A0(&qword_100156B08, (void (*)(uint64_t))&type metadata accessor for ButtonMenuStyle);
    swift_getOpaqueTypeConformance2();
    sub_10000E8A0(&qword_100156B10, (void (*)(uint64_t))type metadata accessor for NavigationBarButtonStyle);
    swift_getOpaqueTypeConformance2();
    sub_10000E8A0((unint64_t *)&qword_1001567D8, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100156B90);
  }
  return result;
}

uint64_t sub_10000ECF8()
{
  return sub_10000E14C();
}

ValueMetadata *type metadata accessor for Blur()
{
  return &type metadata for Blur;
}

void *sub_10000ED20()
{
  return &protocol witness table for Never;
}

id sub_10000ED2C()
{
  id v1 = [self effectWithStyle:*v0];
  id v2 = [objc_allocWithZone((Class)UIVisualEffectView) initWithEffect:v1];

  return v2;
}

void sub_10000ED9C(void *a1)
{
  id v3 = [self effectWithStyle:*v1];
  [a1 setEffect:v3];
}

uint64_t sub_10000EE28()
{
  return UIViewRepresentable.sizeThatFits(_:uiView:context:)();
}

uint64_t sub_10000EE6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_10000EFB4();

  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_10000EED0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_10000EFB4();

  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_10000EF34()
{
}

unint64_t sub_10000EF60()
{
  unint64_t result = qword_100156B98;
  if (!qword_100156B98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100156B98);
  }
  return result;
}

unint64_t sub_10000EFB4()
{
  unint64_t result = qword_100156BA0;
  if (!qword_100156BA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100156BA0);
  }
  return result;
}

uint64_t sub_10000F008(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t sub_10000F074(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for URL();
  id v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_10000F0D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_10000F13C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_10000F1A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_10000F204(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_10000F268(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10000F27C);
}

uint64_t sub_10000F27C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_10000F2E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10000F2FC);
}

uint64_t sub_10000F2FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for ShazamCampaignWebView()
{
  uint64_t result = qword_100156C00;
  if (!qword_100156C00) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10000F3B8()
{
  uint64_t result = type metadata accessor for URL();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10000F444()
{
  return sub_10000FB84(&qword_100156C38, (void (*)(uint64_t))type metadata accessor for ShazamCampaignWebView);
}

id sub_10000F48C()
{
  id v0 = [objc_allocWithZone((Class)WKWebViewConfiguration) init];
  id v1 = [objc_allocWithZone((Class)WKUserContentController) init];
  [v0 setUserContentController:v1];

  id v2 = [objc_allocWithZone((Class)WKPreferences) init];
  [v2 setTextInteractionEnabled:0];
  [v0 setPreferences:v2];
  id v3 = [objc_allocWithZone((Class)WKWebView) initWithFrame:v0 configuration:0.0, 0.0, 0.0, 0.0];
  [v3 setAllowsBackForwardNavigationGestures:0];

  return v3;
}

uint64_t sub_10000F584(void *a1)
{
  uint64_t v3 = type metadata accessor for ShazamCampaignWebView();
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for URLRequest();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  os_log_type_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v1, v6);
  URLRequest.init(url:cachePolicy:timeoutInterval:)();
  if (qword_100156018 != -1) {
    swift_once();
  }
  uint64_t v14 = type metadata accessor for Logger();
  sub_10000E808(v14, (uint64_t)qword_100164B38);
  sub_10000FAC4(v1, (uint64_t)v5);
  uint64_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v15, v16))
  {
    unint64_t v17 = (uint8_t *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    uint64_t v24 = v11;
    uint64_t v28 = v18;
    uint64_t v25 = v10;
    uint64_t v26 = a1;
    *(_DWORD *)unint64_t v17 = 136315138;
    sub_10000FB84((unint64_t *)&qword_100156B88, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v19 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v27 = sub_1000CB67C(v19, v20, &v28);
    uint64_t v10 = v25;
    a1 = v26;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10000FB28((uint64_t)v5);
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "Opening %s", v17, 0xCu);
    swift_arrayDestroy();
    uint64_t v11 = v24;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_10000FB28((uint64_t)v5);
  }

  Class isa = URLRequest._bridgeToObjectiveC()().super.isa;
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

id sub_10000F928()
{
  return sub_10000F48C();
}

uint64_t sub_10000F944(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10000FB84(&qword_100156C40, (void (*)(uint64_t))type metadata accessor for ShazamCampaignWebView);

  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_10000F9D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10000FB84(&qword_100156C40, (void (*)(uint64_t))type metadata accessor for ShazamCampaignWebView);

  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_10000FA6C()
{
}

uint64_t sub_10000FAC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ShazamCampaignWebView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10000FB28(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ShazamCampaignWebView();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10000FB84(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10000FBCC()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10000FC3C(v0, qword_100164B38);
  sub_10000E808(v0, (uint64_t)qword_100164B38);
  return Logger.init(subsystem:category:)();
}

uint64_t *sub_10000FC3C(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_10000FCA0()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    CurrentValueSubject.send(_:)();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_10000FD20()
{
  swift_release();
  _s16MusicRecognition11AnyPlaylistVwxx_0(v0 + 24);
  swift_release();

  return _swift_deallocClassInstance(v0, 72, 7);
}

uint64_t type metadata accessor for AnyMusicLibrary()
{
  return self;
}

uint64_t sub_10000FD8C()
{
  *(void *)(v1 + 16) = *v0;
  return _swift_task_switch(sub_10000FDB0, 0, 0);
}

uint64_t sub_10000FDB0()
{
  uint64_t v1 = *(void **)(v0 + 16);
  uint64_t v2 = v1[6];
  uint64_t v3 = v1[7];
  sub_100010740(v1 + 3, v2);
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v3 + 16) + **(int **)(v3 + 16));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100010784;
  return v6(v2, v3);
}

uint64_t sub_10000FEB4()
{
  *(void *)(v1 + 16) = *v0;
  return _swift_task_switch(sub_10000FED8, 0, 0);
}

uint64_t sub_10000FED8()
{
  uint64_t v1 = *(void **)(v0 + 16);
  uint64_t v2 = v1[6];
  uint64_t v3 = v1[7];
  sub_100010740(v1 + 3, v2);
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v3 + 24) + **(int **)(v3 + 24));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_10000FFDC;
  return v6(v2, v3);
}

uint64_t sub_10000FFDC()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1000100D0()
{
  *(void *)(v1 + 16) = *v0;
  return _swift_task_switch(sub_1000100F4, 0, 0);
}

uint64_t sub_1000100F4()
{
  uint64_t v1 = *(void **)(v0 + 16);
  uint64_t v2 = v1[6];
  uint64_t v3 = v1[7];
  sub_100010740(v1 + 3, v2);
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v3 + 32) + **(int **)(v3 + 32));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1000101F8;
  return v6(v2, v3);
}

uint64_t sub_1000101F8(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t sub_1000102F4(uint64_t a1)
{
  uint64_t v3 = *v1;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v3;
  return _swift_task_switch(sub_100010318, 0, 0);
}

uint64_t sub_100010318()
{
  uint64_t v1 = (void *)v0[3];
  uint64_t v2 = v1[6];
  uint64_t v3 = v1[7];
  sub_100010740(v1 + 3, v2);
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 40) + **(int **)(v3 + 40));
  uint64_t v4 = (void *)swift_task_alloc();
  v0[4] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100010424;
  uint64_t v5 = v0[2];
  return v7(v5, v2, v3);
}

uint64_t sub_100010424()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_100010518(uint64_t a1, uint64_t a2)
{
  v3[2] = a1;
  v3[3] = a2;
  v3[4] = *v2;
  return _swift_task_switch(sub_100010540, 0, 0);
}

uint64_t sub_100010540()
{
  uint64_t v1 = (void *)v0[4];
  uint64_t v2 = v1[6];
  uint64_t v3 = v1[7];
  sub_100010740(v1 + 3, v2);
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 48) + **(int **)(v3 + 48));
  uint64_t v4 = (void *)swift_task_alloc();
  v0[5] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_10001064C;
  uint64_t v6 = v0[2];
  uint64_t v5 = v0[3];
  return v8(v6, v5, v2, v3);
}

uint64_t sub_10001064C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

void *sub_100010740(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_100010788(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for URL();
  uint64_t v8 = *(void **)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  os_log_type_t v13 = (char *)&v18 - v12;
  swift_retain();
  ObservationRegistrar.init()();
  *(void *)(v3 + OBJC_IVAR____TtC16MusicRecognition39ContextMenuForUnsubscribedUserViewModel_streamingServices) = a3;
  swift_release();
  uint64_t v14 = (void (*)(char *, uint64_t, uint64_t))v8[2];
  v14(v13, a1, v7);
  v14(v11, a2, v7);
  *(unsigned char *)(v3 + OBJC_IVAR____TtC16MusicRecognition20ContextMenuViewModel__shareSheetFromOverflow) = 0;
  ObservationRegistrar.init()();
  uint64_t v15 = (void (*)(uint64_t, char *, uint64_t))v8[4];
  v15(v3 + OBJC_IVAR____TtC16MusicRecognition20ContextMenuViewModel_shazamAppStoreURL, v13, v7);
  v15(v3 + OBJC_IVAR____TtC16MusicRecognition20ContextMenuViewModel_shazamURL, v11, v7);
  *(unsigned char *)(v3 + OBJC_IVAR____TtC16MusicRecognition20ContextMenuViewModel_member) = 0;
  os_log_type_t v16 = (void (*)(uint64_t, uint64_t))v8[1];
  v16(a2, v7);
  v16(a1, v7);
  return v3;
}

uint64_t sub_10001097C()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MusicRecognition39ContextMenuForUnsubscribedUserViewModel___observationRegistrar;
  uint64_t v2 = type metadata accessor for ObservationRegistrar();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(v1, v2);
}

uint64_t sub_1000109F8()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MusicRecognition20ContextMenuViewModel_shazamAppStoreURL;
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC16MusicRecognition20ContextMenuViewModel_shazamURL, v2);
  uint64_t v4 = v0 + OBJC_IVAR____TtC16MusicRecognition20ContextMenuViewModel___observationRegistrar;
  uint64_t v5 = type metadata accessor for ObservationRegistrar();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  swift_bridgeObjectRelease();
  v6(v0 + OBJC_IVAR____TtC16MusicRecognition39ContextMenuForUnsubscribedUserViewModel___observationRegistrar, v5);
  uint64_t v7 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v8 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v7, v8);
}

uint64_t sub_100010B44()
{
  return type metadata accessor for ContextMenuForUnsubscribedUserViewModel();
}

uint64_t type metadata accessor for ContextMenuForUnsubscribedUserViewModel()
{
  uint64_t result = qword_100156D50;
  if (!qword_100156D50) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100010B98()
{
  uint64_t result = type metadata accessor for ObservationRegistrar();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

id sub_100010CF0()
{
  uint64_t v1 = OBJC_IVAR____TtC16MusicRecognition37MusicRecognitionPlatterViewController____lazy_storage___customLayoutHeightConstraint;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC16MusicRecognition37MusicRecognitionPlatterViewController____lazy_storage___customLayoutHeightConstraint);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC16MusicRecognition37MusicRecognitionPlatterViewController____lazy_storage___customLayoutHeightConstraint);
  }
  else
  {
    id v4 = [*(id *)(v0 + OBJC_IVAR____TtC16MusicRecognition37MusicRecognitionPlatterViewController_matchingFlowView) heightAnchor];
    id v5 = [v4 constraintEqualToConstant:84.0];

    uint64_t v6 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v5;
    id v3 = v5;

    uint64_t v2 = 0;
  }
  id v7 = v2;
  return v3;
}

id sub_100010DF8()
{
  ObjectType = (objc_class *)swift_getObjectType();
  if (qword_100156018 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000E808(v2, (uint64_t)qword_100164B38);
  id v3 = v0;
  id v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    id v7 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 138412290;
    id v8 = v3;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v7 = v3;

    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Deinitializing %@", v6, 0xCu);
    sub_1000060EC((uint64_t *)&unk_1001570F0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  v10.receiver = v3;
  v10.super_class = ObjectType;
  return [super dealloc];
}

id sub_100011098()
{
  uint64_t v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v3 = sub_1000060EC(&qword_100157038);
  __chkstk_darwin(v3 - 8);
  os_log_type_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26.receiver = v0;
  v26.super_class = ObjectType;
  [super viewDidLoad];
  id result = [v0 view];
  if (!result)
  {
    __break(1u);
    goto LABEL_8;
  }
  id v7 = result;
  [result setTranslatesAutoresizingMaskIntoConstraints:0];

  id result = [v1 view];
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  id v8 = result;
  NSString v9 = String._bridgeToObjectiveC()();
  [v8 setAccessibilityIdentifier:v9];

  id result = [v1 view];
  if (!result)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  objc_super v10 = result;
  uint64_t v11 = *(void **)&v1[OBJC_IVAR____TtC16MusicRecognition37MusicRecognitionPlatterViewController_matchingFlowView];
  [result addSubview:v11];

  uint64_t v12 = qword_100156120;
  id v13 = v11;
  if (v12 != -1) {
    swift_once();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v14 = v23;
  uint64_t v15 = v24;
  unsigned __int8 v16 = v25;
  sub_1000D398C(v23, v24, v25);
  sub_100014BF8(v14, v15, v16);

  sub_100011424();
  uint64_t v17 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v5, 1, 1, v17);
  uint64_t v18 = swift_allocObject();
  swift_unknownObjectWeakInit();
  type metadata accessor for MainActor();
  swift_retain();
  uint64_t v19 = static MainActor.shared.getter();
  unint64_t v20 = (void *)swift_allocObject();
  v20[2] = v19;
  v20[3] = &protocol witness table for MainActor;
  v20[4] = v18;
  swift_release();
  sub_1000DC528((uint64_t)v5, (uint64_t)&unk_100157048, (uint64_t)v20);
  swift_release();
  sub_100014E04((uint64_t)v1, qword_100164BD0);
  sub_1000060EC(&qword_100157050);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_100110670;
  *(void *)(v21 + 32) = type metadata accessor for UITraitBacklightLuminance();
  *(void *)(v21 + 40) = &protocol witness table for UITraitBacklightLuminance;
  UIViewController.registerForTraitChanges<A>(_:handler:)();
  swift_bridgeObjectRelease();
  return (id)swift_unknownObjectRelease();
}

uint64_t sub_100011424()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC16MusicRecognition37MusicRecognitionPlatterViewController_matchingFlowView);
  uint64_t v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v3 = (uint64_t (**)())(v1 + OBJC_IVAR____TtC16MusicRecognition22MatchingFlowCustomView_retryHandler);
  *uint64_t v3 = sub_100015438;
  v3[1] = (uint64_t (*)())v2;
  swift_release();
  uint64_t v4 = swift_allocObject();
  swift_unknownObjectWeakInit();
  os_log_type_t v5 = (uint64_t (**)())(v1 + OBJC_IVAR____TtC16MusicRecognition22MatchingFlowCustomView_cancellationHandler);
  *os_log_type_t v5 = sub_100015488;
  v5[1] = (uint64_t (*)())v4;
  swift_release();
  uint64_t v6 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v7 = (void (**)(uint64_t))(v1
                                     + OBJC_IVAR____TtC16MusicRecognition22MatchingFlowCustomView_appleMusicURLHandler);
  void *v7 = sub_1000154D8;
  v7[1] = (void (*)(uint64_t))v6;
  swift_release();
  uint64_t v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  NSString v9 = (uint64_t (**)(void *))(v1
                                       + OBJC_IVAR____TtC16MusicRecognition22MatchingFlowCustomView_displayMatchedMediaItemHandler);
  *NSString v9 = sub_1000154E0;
  v9[1] = (uint64_t (*)(void *))v8;

  return swift_release();
}

void sub_1000115E0(char a1)
{
  v10.receiver = v1;
  v10.super_class = (Class)swift_getObjectType();
  [super viewWillAppear:a1 & 1];
  if ((v1[OBJC_IVAR____TtC16MusicRecognition37MusicRecognitionPlatterViewController_presentationStyle] & 1) == 0)
  {
    id v3 = [v1 view];
    if (v3)
    {
      uint64_t v4 = v3;
      if (qword_100156020 != -1) {
        swift_once();
      }
      [v4 setBackgroundColor:qword_100164B58];

      os_log_type_t v5 = self;
      uint64_t v6 = OBJC_IVAR____TtC16MusicRecognition37MusicRecognitionPlatterViewController_activeConstraints;
      sub_1000150F8(0, (unint64_t *)&qword_100157AD0);
      swift_bridgeObjectRetain();
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v5 deactivateConstraints:isa];

      sub_100011774(4);
      *(void *)&v1[v6] = v8;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      Class v9 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v5 activateConstraints:v9];
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_100011774(uint64_t a1)
{
  if (a1 != 4)
  {
    if (a1 == 3)
    {
      sub_1000060EC(&qword_100157030);
      uint64_t v3 = swift_allocObject();
      *(_OWORD *)(v3 + 16) = xmmword_100110690;
      unint64_t v20 = *(void **)&v1[OBJC_IVAR____TtC16MusicRecognition37MusicRecognitionPlatterViewController_listeningAccessoryView];
      id v21 = [v20 centerXAnchor];
      id v22 = [v1 view];
      if (!v22)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      uint64_t v23 = v22;
      id v24 = [v22 SBUISA_systemApertureLeadingConcentricContentLayoutGuide];

      id v25 = [v24 centerXAnchor];
      id v26 = [v21 constraintEqualToAnchor:v25];

      *(void *)(v3 + 32) = v26;
      id v27 = [v20 widthAnchor];
      id v28 = [v27 constraintEqualToConstant:25.0];

      *(void *)(v3 + 40) = v28;
      uint64_t v29 = *(void **)&v1[OBJC_IVAR____TtC16MusicRecognition37MusicRecognitionPlatterViewController_waveformAccessoryView];
      id v30 = [v29 widthAnchor];
      id v31 = [v30 constraintEqualToConstant:24.0];

      *(void *)(v3 + 48) = v31;
      id v32 = [v29 centerXAnchor];
      id v33 = [v1 view];
      if (!v33)
      {
LABEL_36:
        __break(1u);
        goto LABEL_37;
      }
      uint64_t v34 = v33;
      id v35 = [v33 SBUISA_systemApertureTrailingConcentricContentLayoutGuide];

      id v36 = [v35 centerXAnchor];
      id v37 = [v32 constraintEqualToAnchor:v36];

      *(void *)(v3 + 56) = v37;
    }
    else
    {
      unint64_t v2 = (unint64_t)&_swiftEmptyArrayStorage;
      if (a1 != 2) {
        goto LABEL_15;
      }
      sub_1000060EC(&qword_100157030);
      uint64_t v3 = swift_allocObject();
      *(_OWORD *)(v3 + 16) = xmmword_1001106A0;
      uint64_t v4 = *(void **)&v1[OBJC_IVAR____TtC16MusicRecognition37MusicRecognitionPlatterViewController_minimalAccessoryView];
      id v5 = [v4 heightAnchor];
      id v6 = [v5 constraintEqualToConstant:20.0];

      *(void *)(v3 + 32) = v6;
      id v7 = [v4 widthAnchor];
      id v8 = [v7 constraintEqualToConstant:20.0];

      *(void *)(v3 + 40) = v8;
    }
    specialized Array._endMutation()();
    unint64_t v2 = v3;
LABEL_15:
    if (!(v2 >> 62)) {
      goto LABEL_16;
    }
    goto LABEL_31;
  }
  id v9 = [v1 view];
  if (!v9)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  objc_super v10 = v9;
  id v11 = [v9 window];

  id v12 = [v1 view];
  id v13 = v12;
  if (v11)
  {
    if (!v12)
    {
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    id v14 = [v12 widthAnchor];

    id v15 = [v1 view];
    if (!v15)
    {
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }
    unsigned __int8 v16 = v15;
    id v17 = [v15 window];

    if (!v17)
    {
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    id v18 = [v17 widthAnchor];

    id v19 = [v14 constraintEqualToAnchor:v18];
LABEL_26:

    sub_1000060EC(&qword_100157030);
    unint64_t v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_100110680;
    *(void *)(v2 + 32) = v19;
    id v51 = v19;
    *(void *)(v2 + 40) = sub_100010CF0();
    v52 = *(void **)&v1[OBJC_IVAR____TtC16MusicRecognition37MusicRecognitionPlatterViewController_matchingFlowView];
    id v53 = [v52 topAnchor];
    id v54 = [v1 view];
    if (!v54)
    {
LABEL_37:
      __break(1u);
      goto LABEL_38;
    }
    uint64_t v55 = v54;
    id v56 = [v54 topAnchor];

    id v57 = [v53 constraintEqualToAnchor:v56];
    *(void *)(v2 + 48) = v57;
    id v58 = [v52 bottomAnchor];
    id v59 = [v1 view];
    if (!v59)
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    uint64_t v60 = v59;
    id v61 = [v59 bottomAnchor];

    id v62 = [v58 constraintEqualToAnchor:v61];
    *(void *)(v2 + 56) = v62;
    id v63 = [v52 leadingAnchor];
    id v64 = [v1 view];
    if (!v64)
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    uint64_t v65 = v64;
    id v66 = [v64 leadingAnchor];

    id v67 = [v63 constraintEqualToAnchor:v66];
    *(void *)(v2 + 64) = v67;
    id v68 = [v52 trailingAnchor];
    id v69 = [v1 view];
    if (!v69)
    {
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }
    uint64_t v70 = v69;
    id v71 = [v69 trailingAnchor];

    id v72 = [v68 constraintEqualToAnchor:v71];
    *(void *)(v2 + 72) = v72;
    specialized Array._endMutation()();

    if (!(v2 >> 62))
    {
LABEL_16:
      uint64_t v38 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v38)
      {
LABEL_17:
        specialized ContiguousArray.reserveCapacity(_:)();
        if ((v38 & 0x8000000000000000) == 0)
        {
          uint64_t v39 = 0;
          do
          {
            if ((v2 & 0xC000000000000001) != 0) {
              id v40 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v40 = *(id *)(v2 + 8 * v39 + 32);
            }
            ++v39;
            LODWORD(v41) = 1144750080;
            [v40 setPriority:v41];
            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
            specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized ContiguousArray._endMutation()();
          }
          while (v38 != v39);
          goto LABEL_32;
        }
        __break(1u);
        goto LABEL_34;
      }
LABEL_32:
      swift_bridgeObjectRelease();
      return;
    }
LABEL_31:
    swift_bridgeObjectRetain();
    uint64_t v38 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v38) {
      goto LABEL_17;
    }
    goto LABEL_32;
  }
  if (v12)
  {
    id v18 = [v12 widthAnchor];

    id v42 = [self mainScreen];
    [v42 nativeBounds];
    CGFloat v44 = v43;
    CGFloat v46 = v45;
    CGFloat v48 = v47;
    CGFloat v50 = v49;

    v73.origin.x = v44;
    v73.origin.y = v46;
    v73.size.width = v48;
    v73.size.height = v50;
    id v19 = [v18 constraintEqualToConstant:CGRectGetWidth(v73)];
    goto LABEL_26;
  }
LABEL_44:
  __break(1u);
}

uint64_t sub_100012000(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[12] = a1;
  v4[13] = a4;
  sub_1000060EC(&qword_100157060);
  v4[14] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for NSRunLoop.SchedulerTimeType.Stride();
  v4[15] = v5;
  v4[16] = *(void *)(v5 - 8);
  v4[17] = swift_task_alloc();
  uint64_t v6 = sub_1000060EC(&qword_100157068);
  v4[18] = v6;
  v4[19] = *(void *)(v6 - 8);
  v4[20] = swift_task_alloc();
  uint64_t v7 = sub_1000060EC(&qword_100157070);
  v4[21] = v7;
  v4[22] = *(void *)(v7 - 8);
  v4[23] = swift_task_alloc();
  type metadata accessor for MainActor();
  v4[24] = static MainActor.shared.getter();
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1000121E4, v9, v8);
}

uint64_t sub_1000121E4()
{
  swift_release();
  swift_beginAccess();
  Strong = (char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    if (qword_100156120 != -1) {
      swift_once();
    }
    uint64_t v2 = *(void *)(v0 + 160);
    uint64_t v15 = *(void *)(v0 + 168);
    uint64_t v16 = *(void *)(v0 + 176);
    uint64_t v3 = *(void *)(v0 + 152);
    uint64_t v12 = *(void *)(v0 + 184);
    uint64_t v13 = *(void *)(v0 + 144);
    uint64_t v4 = *(void *)(v0 + 128);
    uint64_t v5 = *(void *)(v0 + 136);
    uint64_t v6 = *(void *)(v0 + 112);
    uint64_t v14 = *(void *)(v0 + 120);
    swift_beginAccess();
    sub_1000060EC(&qword_100157078);
    Published.projectedValue.getter();
    swift_endAccess();
    NSRunLoop.SchedulerTimeType.Stride.init(_:)();
    *(void *)(v0 + 88) = [self mainRunLoop];
    uint64_t v7 = type metadata accessor for NSRunLoop.SchedulerOptions();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
    sub_1000150F8(0, (unint64_t *)&qword_100157080);
    sub_100006480(&qword_100157088, &qword_100157068);
    sub_100015134();
    Publisher.debounce<A>(for:scheduler:options:)();
    sub_1000063D0(v6, &qword_100157060);

    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v5, v14);
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v13);
    swift_allocObject();
    swift_beginAccess();
    uint64_t v8 = (void *)swift_unknownObjectWeakLoadStrong();
    swift_unknownObjectWeakInit();

    sub_100006480(&qword_100157098, &qword_100157070);
    uint64_t v9 = Publisher<>.sink(receiveValue:)();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v12, v15);
    *(void *)&Strong[OBJC_IVAR____TtC16MusicRecognition37MusicRecognitionPlatterViewController_musicRecognitionCancellable] = v9;

    swift_release();
  }
  **(unsigned char **)(v0 + 96) = Strong == 0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  objc_super v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

void sub_1000125A0(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v2 = *(void **)(a1 + 8);
  unsigned __int8 v3 = *(unsigned char *)(a1 + 16);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = (char *)Strong;
    sub_1000D4814(v1, v2, v3);
    id v6 = *(id *)&v5[OBJC_IVAR____TtC16MusicRecognition37MusicRecognitionPlatterViewController_matchingFlowView];
    sub_1000D398C(v1, v2, v3);

    id v7 = *(id *)&v5[OBJC_IVAR____TtC16MusicRecognition37MusicRecognitionPlatterViewController_listeningAccessoryView];
    sub_1000D3CDC(v1, v2, v3);

    id v8 = *(id *)&v5[OBJC_IVAR____TtC16MusicRecognition37MusicRecognitionPlatterViewController_minimalAccessoryView];
    sub_1000D3CDC(v1, v2, v3);

    id v9 = *(id *)&v5[OBJC_IVAR____TtC16MusicRecognition37MusicRecognitionPlatterViewController_waveformAccessoryView];
    sub_1000D43B8(v1, v2, v3);
  }
}

void sub_1000126BC(char *a1)
{
  id v2 = [a1 traitCollection];
  id v3 = [v2 _backlightLuminance];

  if (v3 == (id)2)
  {
    id v4 = objc_retain(*(id *)(*(void *)&a1[OBJC_IVAR____TtC16MusicRecognition37MusicRecognitionPlatterViewController_matchingFlowView]
                           + OBJC_IVAR____TtC16MusicRecognition22MatchingFlowCustomView_listeningView));
    sub_10009C3BC();
  }
  else
  {
    if (v3 != (id)1) {
      return;
    }
    id v4 = objc_retain(*(id *)(*(void *)&a1[OBJC_IVAR____TtC16MusicRecognition37MusicRecognitionPlatterViewController_matchingFlowView]
                           + OBJC_IVAR____TtC16MusicRecognition22MatchingFlowCustomView_listeningView));
    sub_10009C270();
  }
}

void sub_1000127AC(void *a1)
{
  sub_100011774(*(void *)(v1
                          + OBJC_IVAR____TtC16MusicRecognition37MusicRecognitionPlatterViewController_activeLayoutMode));
  uint64_t v4 = v3;
  uint64_t v5 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v5;
  *(void *)(v6 + 24) = v4;
  v8[4] = sub_100014BE8;
  v8[5] = v6;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_1000129E0;
  v8[3] = &unk_100149C08;
  id v7 = _Block_copy(v8);
  swift_release();
  [a1 animateAlongsideTransition:v7 completion:0];
  _Block_release(v7);
}

void sub_1000128B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = (char *)Strong;
    uint64_t v6 = self;
    uint64_t v7 = OBJC_IVAR____TtC16MusicRecognition37MusicRecognitionPlatterViewController_activeConstraints;
    sub_1000150F8(0, (unint64_t *)&qword_100157AD0);
    swift_bridgeObjectRetain();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v6 deactivateConstraints:isa];

    *(void *)&v5[v7] = a3;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    Class v9 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v6 activateConstraints:v9];
  }
}

uint64_t sub_1000129E0(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  uint64_t v2 = swift_unknownObjectRetain();
  v1(v2);
  swift_release();

  return swift_unknownObjectRelease();
}

id sub_100012A9C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v8 = OBJC_IVAR____TtC16MusicRecognition37MusicRecognitionPlatterViewController_listeningAccessoryView;
  Class v9 = (objc_class *)type metadata accessor for ListeningAccessoryView();
  id v10 = objc_allocWithZone(v9);
  uint64_t v11 = v4;
  *(void *)&v4[v8] = [v10 initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v12 = OBJC_IVAR____TtC16MusicRecognition37MusicRecognitionPlatterViewController_waveformAccessoryView;
  *(void *)&v11[v12] = [objc_allocWithZone((Class)type metadata accessor for WaveformAccessoryView()) initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v13 = OBJC_IVAR____TtC16MusicRecognition37MusicRecognitionPlatterViewController_minimalAccessoryView;
  *(void *)&v11[v13] = [objc_allocWithZone(v9) initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v14 = OBJC_IVAR____TtC16MusicRecognition37MusicRecognitionPlatterViewController_matchingFlowView;
  *(void *)&v11[v14] = [objc_allocWithZone((Class)type metadata accessor for MatchingFlowCustomView()) initWithFrame:0.0, 0.0, 0.0, 0.0];
  v11[OBJC_IVAR____TtC16MusicRecognition37MusicRecognitionPlatterViewController_presentationStyle] = 1;
  *(void *)&v11[OBJC_IVAR____TtC16MusicRecognition37MusicRecognitionPlatterViewController_activeLayoutMode] = 0;
  uint64_t v15 = OBJC_IVAR____TtC16MusicRecognition37MusicRecognitionPlatterViewController_keyColor;
  if (qword_100156028 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  NSString v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v17 = [self colorNamed:v16];

  *(void *)&v11[v15] = v17;
  *(void *)&v11[OBJC_IVAR____TtC16MusicRecognition37MusicRecognitionPlatterViewController_contentRole] = 2;
  *(void *)&v11[OBJC_IVAR____TtC16MusicRecognition37MusicRecognitionPlatterViewController_preferredLayoutMode] = 3;
  *(void *)&v11[OBJC_IVAR____TtC16MusicRecognition37MusicRecognitionPlatterViewController_musicRecognitionCancellable] = 0;
  *(void *)&v11[OBJC_IVAR____TtC16MusicRecognition37MusicRecognitionPlatterViewController_assertionTimer] = 0;
  *(void *)&v11[OBJC_IVAR____TtC16MusicRecognition37MusicRecognitionPlatterViewController____lazy_storage___customLayoutHeightConstraint] = 0;
  *(void *)&v11[OBJC_IVAR____TtC16MusicRecognition37MusicRecognitionPlatterViewController_maximumLayoutMode] = 4;
  *(void *)&v11[OBJC_IVAR____TtC16MusicRecognition37MusicRecognitionPlatterViewController_activeConstraints] = &_swiftEmptyArrayStorage;

  if (a2)
  {
    NSString v18 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v18 = 0;
  }
  v21.receiver = v11;
  v21.super_class = ObjectType;
  [super initWithNibName:v18 bundle:a3];

  return v19;
}

id sub_100012D9C(void *a1)
{
  uint64_t v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v5 = OBJC_IVAR____TtC16MusicRecognition37MusicRecognitionPlatterViewController_listeningAccessoryView;
  uint64_t v6 = (objc_class *)type metadata accessor for ListeningAccessoryView();
  id v7 = objc_allocWithZone(v6);
  uint64_t v8 = v2;
  *(void *)&v2[v5] = [v7 initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v9 = OBJC_IVAR____TtC16MusicRecognition37MusicRecognitionPlatterViewController_waveformAccessoryView;
  *(void *)&v8[v9] = [objc_allocWithZone((Class)type metadata accessor for WaveformAccessoryView()) initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v10 = OBJC_IVAR____TtC16MusicRecognition37MusicRecognitionPlatterViewController_minimalAccessoryView;
  *(void *)&v8[v10] = [objc_allocWithZone(v6) initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v11 = OBJC_IVAR____TtC16MusicRecognition37MusicRecognitionPlatterViewController_matchingFlowView;
  *(void *)&v8[v11] = [objc_allocWithZone((Class)type metadata accessor for MatchingFlowCustomView()) initWithFrame:0.0, 0.0, 0.0, 0.0];
  v8[OBJC_IVAR____TtC16MusicRecognition37MusicRecognitionPlatterViewController_presentationStyle] = 1;
  *(void *)&v8[OBJC_IVAR____TtC16MusicRecognition37MusicRecognitionPlatterViewController_activeLayoutMode] = 0;
  uint64_t v12 = OBJC_IVAR____TtC16MusicRecognition37MusicRecognitionPlatterViewController_keyColor;
  if (qword_100156028 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  NSString v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v14 = [self colorNamed:v13];

  *(void *)&v8[v12] = v14;
  *(void *)&v8[OBJC_IVAR____TtC16MusicRecognition37MusicRecognitionPlatterViewController_contentRole] = 2;
  *(void *)&v8[OBJC_IVAR____TtC16MusicRecognition37MusicRecognitionPlatterViewController_preferredLayoutMode] = 3;
  *(void *)&v8[OBJC_IVAR____TtC16MusicRecognition37MusicRecognitionPlatterViewController_musicRecognitionCancellable] = 0;
  *(void *)&v8[OBJC_IVAR____TtC16MusicRecognition37MusicRecognitionPlatterViewController_assertionTimer] = 0;
  *(void *)&v8[OBJC_IVAR____TtC16MusicRecognition37MusicRecognitionPlatterViewController____lazy_storage___customLayoutHeightConstraint] = 0;
  *(void *)&v8[OBJC_IVAR____TtC16MusicRecognition37MusicRecognitionPlatterViewController_maximumLayoutMode] = 4;
  *(void *)&v8[OBJC_IVAR____TtC16MusicRecognition37MusicRecognitionPlatterViewController_activeConstraints] = &_swiftEmptyArrayStorage;

  v17.receiver = v8;
  v17.super_class = ObjectType;
  [super initWithCoder:a1];

  return v15;
}

uint64_t type metadata accessor for MusicRecognitionPlatterViewController()
{
  return self;
}

void sub_10001304C(uint64_t a1)
{
  uint64_t v2 = a1;
  uint64_t v3 = *(char **)(*(void *)(v1
                            + OBJC_IVAR____TtC16MusicRecognition37MusicRecognitionPlatterViewController_matchingFlowView)
                + OBJC_IVAR____TtC16MusicRecognition22MatchingFlowCustomView_listeningView);
  uint64_t v4 = *(void **)&v3[OBJC_IVAR____TtC16MusicRecognition13ListeningView_waveformView];
  int64_t v5 = *(void *)(a1 + 16);
  if (v5)
  {
    aBlock = (void **)&_swiftEmptyArrayStorage;
    uint64_t v6 = v3;
    sub_10006A564(0, v5, 0);
    id v7 = (void **)&_swiftEmptyArrayStorage;
    uint64_t v31 = v2;
    uint64_t v8 = (float *)(v2 + 32);
    unint64_t v9 = *((void *)&_swiftEmptyArrayStorage + 2);
    int64_t v10 = v5;
    do
    {
      float v11 = *v8;
      aBlock = v7;
      unint64_t v12 = (unint64_t)v7[3];
      if (v9 >= v12 >> 1)
      {
        sub_10006A564(v12 > 1, v9 + 1, 1);
        id v7 = aBlock;
      }
      float v13 = powf(v11 * 0.6, 0.4);
      v7[2] = (void *)(v9 + 1);
      *((float *)v7 + v9 + 8) = v13;
      ++v8;
      ++v9;
      --v10;
    }
    while (v10);
    uint64_t v1 = v30;
    uint64_t v2 = v31;
    uint64_t v4 = v29;
  }
  else
  {
    id v14 = v3;
    id v7 = (void **)&_swiftEmptyArrayStorage;
  }
  id v15 = self;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v4;
  *(void *)(v16 + 24) = v7;
  id v36 = sub_100014B0C;
  uint64_t v37 = v16;
  aBlock = _NSConcreteStackBlock;
  uint64_t v33 = 1107296256;
  uint64_t v34 = sub_1000D559C;
  id v35 = &unk_100149B40;
  objc_super v17 = _Block_copy(&aBlock);
  id v18 = v4;
  swift_release();
  [v15 animateWithDuration:0 delay:v17 usingSpringWithDamping:0 initialSpringVelocity:0.325 options:0.0 animations:0.8 completion:0.0];
  _Block_release(v17);

  id v19 = *(void **)(*(void *)(v1
                             + OBJC_IVAR____TtC16MusicRecognition37MusicRecognitionPlatterViewController_waveformAccessoryView)
                 + OBJC_IVAR____TtC16MusicRecognition21WaveformAccessoryView_waveformView);
  unint64_t v20 = (void **)&_swiftEmptyArrayStorage;
  if (v5)
  {
    aBlock = (void **)&_swiftEmptyArrayStorage;
    sub_10006A564(0, v5, 0);
    unint64_t v20 = aBlock;
    objc_super v21 = (float *)(v2 + 32);
    id v22 = (char *)aBlock[2];
    do
    {
      float v23 = *v21;
      aBlock = v20;
      unint64_t v24 = (unint64_t)v20[3];
      if ((unint64_t)v22 >= v24 >> 1)
      {
        sub_10006A564(v24 > 1, (int64_t)(v22 + 1), 1);
        unint64_t v20 = aBlock;
      }
      float v25 = powf(v23 * 0.6, 0.4);
      v20[2] = v22 + 1;
      *((float *)v20 + (void)v22 + 8) = v25;
      ++v21;
      ++v22;
      --v5;
    }
    while (v5);
  }
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = v19;
  *(void *)(v26 + 24) = v20;
  id v36 = sub_100015B20;
  uint64_t v37 = v26;
  aBlock = _NSConcreteStackBlock;
  uint64_t v33 = 1107296256;
  uint64_t v34 = sub_1000D559C;
  id v35 = &unk_100149B90;
  id v27 = _Block_copy(&aBlock);
  id v28 = v19;
  swift_release();
  [v15 animateWithDuration:0 delay:v27 usingSpringWithDamping:0 initialSpringVelocity:0.325 options:0.0 animations:0.8 completion:0.0];
  _Block_release(v27);
}

uint64_t sub_100013464(uint64_t a1)
{
  v1[5] = a1;
  sub_1000060EC(&qword_1001570C8);
  v1[6] = swift_task_alloc();
  v1[7] = type metadata accessor for MainActor();
  v1[8] = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[9] = v3;
  v1[10] = v2;
  return _swift_task_switch(sub_100013530, v3, v2);
}

uint64_t sub_100013530()
{
  if (qword_100156120 != -1) {
    swift_once();
  }
  v0[11] = qword_100164BD0;
  v0[12] = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  v0[13] = v2;
  v0[14] = v1;
  return _swift_task_switch(sub_1000135F8, v2, v1);
}

uint64_t sub_1000135F8()
{
  uint64_t v1 = v0[6];
  uint64_t v2 = v0[11] + OBJC_IVAR____TtC16MusicRecognition15MusicRecognizer_origin;
  swift_beginAccess();
  sub_100015928(v2, v1);
  uint64_t v3 = (void *)swift_task_alloc();
  v0[15] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1000136C8;
  uint64_t v4 = v0[6];
  return sub_10005ABCC(1, v4);
}

uint64_t sub_1000136C8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = *v3;
  uint64_t v5 = *v3;
  uint64_t v6 = *(void *)(*v3 + 48);
  *(void *)(v5 + 128) = a1;
  *(void *)(v5 + 136) = a2;
  *(unsigned char *)(v5 + 144) = a3;
  swift_task_dealloc();
  sub_1000063D0(v6, &qword_1001570C8);
  uint64_t v7 = *(void *)(v4 + 112);
  uint64_t v8 = *(void *)(v4 + 104);
  return _swift_task_switch(sub_100013820, v8, v7);
}

uint64_t sub_100013820()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 80);
  return _swift_task_switch(sub_100013884, v1, v2);
}

uint64_t sub_100013884()
{
  char v1 = *(unsigned char *)(v0 + 144);
  uint64_t v3 = *(void *)(v0 + 128);
  uint64_t v2 = *(void *)(v0 + 136);
  uint64_t v4 = *(void *)(v0 + 40);
  swift_release();
  *(void *)uint64_t v4 = v3;
  *(void *)(v4 + 8) = v2;
  *(unsigned char *)(v4 + 16) = v1;
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_100013910(uint64_t a1, unsigned __int8 a2, uint64_t a3, uint64_t a4, void (*a5)(char *, uint64_t, uint64_t))
{
  uint64_t v8 = sub_1000060EC(&qword_100157038);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    unint64_t v12 = (void *)Strong;
    sub_1000154E8(a2);
  }
  uint64_t v13 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v10, 1, 1, v13);
  type metadata accessor for MainActor();
  uint64_t v14 = static MainActor.shared.getter();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v14;
  *(void *)(v15 + 24) = &protocol witness table for MainActor;
  a5(v10, a4, v15);
  return swift_release();
}

uint64_t sub_100013A5C()
{
  type metadata accessor for MainActor();
  v0[2] = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  v0[3] = v2;
  v0[4] = v1;
  return _swift_task_switch(sub_100013AF0, v2, v1);
}

uint64_t sub_100013AF0()
{
  if (qword_100156120 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v1;
  void *v1 = v0;
  v1[1] = sub_100006D64;
  return sub_100058EB8();
}

void sub_100013BB4(uint64_t a1)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = (void *)Strong;
    sub_1000154E8(1u);
  }
  sub_100104B84(a1);
}

uint64_t sub_100013C18(void *a1)
{
  uint64_t v2 = sub_1000060EC(&qword_100157038);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v6 = (void *)Strong;
    sub_1000154E8(0xBu);
  }
  uint64_t v7 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v4, 1, 1, v7);
  type metadata accessor for MainActor();
  id v8 = a1;
  uint64_t v9 = static MainActor.shared.getter();
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = v9;
  v10[3] = &protocol witness table for MainActor;
  v10[4] = v8;
  sub_1000D5678((uint64_t)v4, (uint64_t)&unk_1001570C0, (uint64_t)v10);
  return swift_release();
}

uint64_t sub_100013D70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[15] = a4;
  type metadata accessor for MainActor();
  v4[16] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[17] = v6;
  v4[18] = v5;
  return _swift_task_switch(sub_100013E08, v6, v5);
}

uint64_t sub_100013E08()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = self;
  v0[2] = v0;
  v0[3] = sub_100013F10;
  uint64_t v3 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_1000D55E0;
  v0[13] = &unk_100149D20;
  v0[14] = v3;
  [v2 presentMediaItem:v1 completionHandler:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_100013F10()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 152) = v2;
  uint64_t v3 = *(void *)(v1 + 144);
  uint64_t v4 = *(void *)(v1 + 136);
  if (v2) {
    uint64_t v5 = sub_1000140A4;
  }
  else {
    uint64_t v5 = sub_100014040;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100014040()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000140A4()
{
  swift_release();
  swift_willThrow();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

id sub_100014118()
{
  id result = [self blackColor];
  qword_100164B58 = (uint64_t)result;
  return result;
}

void sub_100014154()
{
  qword_100164B60 = 0x6F436D617A616853;
  *(void *)algn_100164B68 = 0xEB00000000726F6CLL;
}

void sub_100014180(double a1)
{
  if (v1[OBJC_IVAR____TtC16MusicRecognition37MusicRecognitionPlatterViewController_presentationStyle] == 1)
  {
    id v3 = sub_100010CF0();
    [v3 setConstant:a1];

    if (*(void *)&v1[OBJC_IVAR____TtC16MusicRecognition37MusicRecognitionPlatterViewController_activeLayoutMode] == 4)
    {
      id v4 = [v1 systemApertureElementContext];
      uint64_t v5 = swift_allocObject();
      swift_unknownObjectWeakInit();
      v7[4] = sub_100015430;
      v7[5] = v5;
      v7[0] = _NSConcreteStackBlock;
      v7[1] = 1107296256;
      v7[2] = sub_1000D559C;
      v7[3] = &unk_100149CD0;
      uint64_t v6 = _Block_copy(v7);
      swift_release();
      [v4 setElementNeedsLayoutUpdateWithOptions:1 coordinatedAnimations:v6];
      _Block_release(v6);
      swift_unknownObjectRelease();
    }
  }
}

uint64_t sub_1000142D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a4;
  type metadata accessor for MainActor();
  v4[3] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[4] = v6;
  v4[5] = v5;
  return _swift_task_switch(sub_100014368, v6, v5);
}

uint64_t sub_100014368()
{
  if (qword_100156120 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v1;
  void *v1 = v0;
  v1[1] = sub_10001442C;
  return sub_100058EB8();
}

uint64_t sub_10001442C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 40);
  uint64_t v3 = *(void *)(v1 + 32);
  return _swift_task_switch(sub_10001454C, v3, v2);
}

uint64_t sub_10001454C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_release();
  id v2 = objc_retain(*(id *)(*(void *)(v1
                                     + OBJC_IVAR____TtC16MusicRecognition37MusicRecognitionPlatterViewController_matchingFlowView)
                         + OBJC_IVAR____TtC16MusicRecognition22MatchingFlowCustomView_listeningView));
  sub_10009C3BC();

  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_1000145D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a4;
  uint64_t v5 = type metadata accessor for ContinuousClock();
  v4[6] = v5;
  v4[7] = *(void *)(v5 - 8);
  v4[8] = swift_task_alloc();
  type metadata accessor for MainActor();
  v4[9] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[10] = v7;
  v4[11] = v6;
  return _swift_task_switch(sub_1000146CC, v7, v6);
}

uint64_t sub_1000146CC()
{
  uint64_t v1 = static Duration.seconds(_:)();
  uint64_t v3 = v2;
  ContinuousClock.init()();
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_100158EF0 + dword_100158EF0);
  id v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 96) = v4;
  *id v4 = v0;
  v4[1] = sub_1000147A8;
  return v6(v1, v3, 0, 0, 1);
}

uint64_t sub_1000147A8()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2[7] + 8))(v2[8], v2[6]);
  uint64_t v3 = v2[11];
  uint64_t v4 = v2[10];
  if (v0) {
    uint64_t v5 = sub_100014A18;
  }
  else {
    uint64_t v5 = sub_100014930;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100014930()
{
  swift_release();
  swift_beginAccess();
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = Strong;
    *(void *)&Strong[OBJC_IVAR____TtC16MusicRecognition37MusicRecognitionPlatterViewController_maximumLayoutMode] = 1;
    *(void *)&Strong[OBJC_IVAR____TtC16MusicRecognition37MusicRecognitionPlatterViewController_preferredLayoutMode] = 1;
    objc_msgSend(objc_msgSend(Strong, "systemApertureElementContext"), "requestTransitionToPreferredLayoutMode");
    swift_unknownObjectRelease();
  }
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_100014A18()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_100014A84()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = Strong;
    id v2 = [Strong view];

    if (v2)
    {
      [v2 layoutIfNeeded];
    }
    else
    {
      __break(1u);
    }
  }
}

id sub_100014B0C()
{
  return sub_100027C5C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_100014B14(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100014B24()
{
  return swift_release();
}

uint64_t sub_100014B30()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100014B70()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100014BA8()
{
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_100014BE8(uint64_t a1)
{
  sub_1000128B8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

void sub_100014BF8(void *a1, void *a2, unsigned __int8 a3)
{
  if (a3 != 0xFF) {
    sub_100014C0C(a1, a2, a3);
  }
}

void sub_100014C0C(void *a1, void *a2, unsigned __int8 a3)
{
  if (a3 >= 2u)
  {
    if (a3 != 2) {
      return;
    }
    swift_errorRelease();
    a1 = a2;
  }
}

uint64_t sub_100014C5C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  void *v7 = v2;
  v7[1] = sub_100014D10;
  return sub_100012000(a1, v4, v5, v6);
}

uint64_t sub_100014D10()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_100014E04(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakAssign();
  sub_100015090((uint64_t)&v9, (uint64_t)v10);
  uint64_t v3 = (char **)(a2 + OBJC_IVAR____TtC16MusicRecognition15MusicRecognizer_spectralOutputObservers);
  swift_beginAccess();
  uint64_t v4 = *v3;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v3 = v4;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v4 = sub_10005E4B0(0, *((void *)v4 + 2) + 1, 1, (unint64_t)v4);
    *uint64_t v3 = v4;
  }
  unint64_t v7 = *((void *)v4 + 2);
  unint64_t v6 = *((void *)v4 + 3);
  if (v7 >= v6 >> 1)
  {
    uint64_t v4 = sub_10005E4B0((char *)(v6 > 1), v7 + 1, 1, (unint64_t)v4);
    *uint64_t v3 = v4;
  }
  *((void *)v4 + 2) = v7 + 1;
  sub_100015090((uint64_t)v10, (uint64_t)&v4[8 * v7 + 32]);
  return swift_endAccess();
}

void sub_100014F04(void *a1, id a2)
{
  BOOL v3 = [a2 _backlightLuminance] != (id)1;
  id v4 = [a1 traitCollection];
  id v5 = [v4 _backlightLuminance];

  if (((v3 ^ (v5 == (id)1)) & 1) == 0)
  {
    unint64_t v6 = self;
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = a1;
    v10[4] = sub_100015088;
    v10[5] = v7;
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 1107296256;
    v10[2] = sub_1000D559C;
    v10[3] = &unk_100149C80;
    uint64_t v8 = _Block_copy(v10);
    id v9 = a1;
    swift_release();
    [v6 animateWithDuration:v8 animations:0.15];
    _Block_release(v8);
  }
}

uint64_t sub_100015050()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_100015088()
{
  sub_1000126BC(*(char **)(v0 + 16));
}

uint64_t sub_100015090(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000060EC(&qword_100157058);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000150F8(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

unint64_t sub_100015134()
{
  unint64_t result = qword_100157090;
  if (!qword_100157090)
  {
    sub_1000150F8(255, (unint64_t *)&qword_100157080);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100157090);
  }
  return result;
}

void sub_10001519C(uint64_t a1)
{
}

void sub_1000151A4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000060EC(&qword_100157038);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100014180(128.0);
  id v5 = objc_retain(*(id *)(*(void *)(v0
                                     + OBJC_IVAR____TtC16MusicRecognition37MusicRecognitionPlatterViewController_matchingFlowView)
                         + OBJC_IVAR____TtC16MusicRecognition22MatchingFlowCustomView_listeningView));
  sub_10009C3BC();

  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC16MusicRecognition37MusicRecognitionPlatterViewController_presentationStyle) == 1)
  {
    uint64_t v6 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v4, 1, 1, v6);
    uint64_t v7 = swift_allocObject();
    swift_unknownObjectWeakInit();
    type metadata accessor for MainActor();
    swift_retain();
    uint64_t v8 = static MainActor.shared.getter();
    id v9 = (void *)swift_allocObject();
    void v9[2] = v8;
    v9[3] = &protocol witness table for MainActor;
    v9[4] = v7;
    swift_release();
    sub_1000D5678((uint64_t)v4, (uint64_t)&unk_1001570B0, (uint64_t)v9);
    swift_release();
  }
}

uint64_t sub_10001533C()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10001537C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  void *v7 = v2;
  v7[1] = sub_100014D10;
  return sub_1000145D8(a1, v4, v5, v6);
}

void sub_100015430()
{
}

uint64_t sub_100015438()
{
  return sub_100013910(v0, 0xEu, (uint64_t)&unk_100149D70, (uint64_t)&unk_1001570E8, (void (*)(char *, uint64_t, uint64_t))sub_1000DC550);
}

uint64_t sub_100015488()
{
  return sub_100013910(v0, 0xDu, (uint64_t)&unk_100149D48, (uint64_t)&unk_1001570D8, (void (*)(char *, uint64_t, uint64_t))sub_1000DC37C);
}

void sub_1000154D8(uint64_t a1)
{
}

uint64_t sub_1000154E0(void *a1)
{
  return sub_100013C18(a1);
}

uint64_t sub_1000154E8(unsigned __int8 a1)
{
  uint64_t v2 = type metadata accessor for IntentSystemContext.Source();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000060EC(&qword_1001570C8);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100156120 != -1) {
    swift_once();
  }
  uint64_t v9 = qword_100164BD0 + OBJC_IVAR____TtC16MusicRecognition15MusicRecognizer_origin;
  swift_beginAccess();
  sub_100015928(v9, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1) {
    return sub_1000063D0((uint64_t)v8, &qword_1001570C8);
  }
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v8, v2);
  int v11 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v11 == enum case for IntentSystemContext.Source.app(_:)
    || v11 == enum case for IntentSystemContext.Source.CLI(_:))
  {
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  }
  if (v11 == enum case for IntentSystemContext.Source.siri(_:))
  {
LABEL_12:
    int v13 = 256;
LABEL_15:
    (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
    return sub_1000D6E40(v13 | a1 | 0x20000u, 0xD000000000000028, 0x8000000100117950);
  }
  if (v11 == enum case for IntentSystemContext.Source.shortcuts(_:))
  {
    int v13 = 2560;
    goto LABEL_15;
  }
  if (v11 == enum case for IntentSystemContext.Source.testing(_:)) {
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  }
  if (v11 == enum case for IntentSystemContext.Source.actionButton(_:))
  {
    int v13 = 1792;
    goto LABEL_15;
  }
  if (v11 == enum case for IntentSystemContext.Source.spotlight(_:))
  {
    int v13 = 2304;
    goto LABEL_15;
  }
  if (v11 == enum case for IntentSystemContext.Source.controlCenter(_:))
  {
    int v13 = 1536;
    goto LABEL_15;
  }
  if (v11 == enum case for IntentSystemContext.Source.widget(_:)) {
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  }
  if (v11 == enum case for IntentSystemContext.Source.assistant(_:)) {
    goto LABEL_12;
  }
  uint64_t v14 = *(void (**)(char *, uint64_t))(v3 + 8);
  v14(v5, v2);
  return ((uint64_t (*)(char *, uint64_t))v14)(v8, v2);
}

uint64_t sub_100015834()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100015874(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  void *v7 = v2;
  v7[1] = sub_100015B24;
  return sub_100013D70(a1, v4, v5, v6);
}

uint64_t sub_100015928(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000060EC(&qword_1001570C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100015990()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000159C8()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_100015B24;
  return sub_100013A5C();
}

uint64_t sub_100015A74(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100015B24;
  return sub_100013464(a1);
}

uint64_t destroy for LocationBottomModuleView(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(a1 + 48))
  {
    return swift_release();
  }
  return result;
}

void *initializeWithCopy for LocationBottomModuleView(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  uint64_t v8 = a2 + 6;
  uint64_t v7 = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7)
  {
    uint64_t v9 = a2[7];
    a1[6] = v7;
    a1[7] = v9;
    swift_retain();
  }
  else
  {
    *((_OWORD *)a1 + 3) = *v8;
  }
  return a1;
}

void *assignWithCopy for LocationBottomModuleView(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[6];
  if (!a1[6])
  {
    if (v4)
    {
      uint64_t v6 = a2[7];
      a1[6] = v4;
      a1[7] = v6;
      swift_retain();
      return a1;
    }
LABEL_7:
    *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v5 = a2[7];
  a1[6] = v4;
  a1[7] = v5;
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for LocationBottomModuleView(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

void *assignWithTake for LocationBottomModuleView(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[6];
  if (!a1[6])
  {
    if (v7)
    {
      uint64_t v9 = a2[7];
      a1[6] = v7;
      a1[7] = v9;
      return a1;
    }
LABEL_7:
    *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
    return a1;
  }
  if (!v7)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v8 = a2[7];
  a1[6] = v7;
  a1[7] = v8;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for LocationBottomModuleView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LocationBottomModuleView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LocationBottomModuleView()
{
  return &type metadata for LocationBottomModuleView;
}

uint64_t sub_100015E88()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100015EA4()
{
  uint64_t result = LocalizedStringKey.init(stringLiteral:)();
  qword_100157160 = result;
  *(void *)algn_100157168 = v1;
  byte_100157170 = v2 & 1;
  qword_100157178 = v3;
  return result;
}

uint64_t sub_100015EEC@<X0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v44 = a2;
  uint64_t v3 = sub_1000060EC(&qword_100157188);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v43 = (uint64_t)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v42 = (uint64_t)&v38 - v6;
  uint64_t v39 = type metadata accessor for AccessibilityChildBehavior();
  uint64_t v7 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  uint64_t v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000060EC(&qword_100157190);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000060EC(&qword_100157198);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v40 = v13;
  uint64_t v41 = v14;
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1000060EC(&qword_1001571A0);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  uint64_t v38 = (uint64_t)&v38 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v18);
  id v22 = (char *)&v38 - v21;
  __chkstk_darwin(v20);
  unint64_t v24 = (char *)&v38 - v23;
  *(void *)uint64_t v12 = static HorizontalAlignment.leading.getter();
  *((void *)v12 + 1) = 0x4010000000000000;
  v12[16] = 0;
  uint64_t v25 = sub_1000060EC(&qword_1001571A8);
  sub_100016380((uint64_t)&v12[*(int *)(v25 + 44)]);
  static AccessibilityChildBehavior.combine.getter();
  uint64_t v26 = sub_100006480(&qword_1001571B0, &qword_100157190);
  View.accessibilityElement(children:)();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v39);
  sub_1000063D0((uint64_t)v12, &qword_100157190);
  long long v45 = *a1;
  long long v46 = v45;
  sub_100017658((uint64_t)&v46);
  v27._countAndFlagsBits = 8236;
  v27._object = (void *)0xE200000000000000;
  String.append(_:)(v27);
  uint64_t v28 = *((void *)a1 + 2);
  uint64_t v29 = (void *)*((void *)a1 + 3);
  swift_bridgeObjectRetain();
  v30._countAndFlagsBits = v28;
  v30._object = v29;
  String.append(_:)(v30);
  swift_bridgeObjectRelease();
  *(void *)&long long v45 = v10;
  *((void *)&v45 + 1) = v26;
  swift_getOpaqueTypeConformance2();
  uint64_t v31 = v40;
  View.accessibilityLabel(_:)();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v16, v31);
  sub_100009C30((uint64_t)v22, (uint64_t)v24, &qword_1001571A0);
  uint64_t v32 = v42;
  sub_100016CBC(v42);
  uint64_t v33 = v38;
  sub_100009C94((uint64_t)v24, v38, &qword_1001571A0);
  uint64_t v34 = v43;
  sub_100009C94(v32, v43, &qword_100157188);
  uint64_t v35 = v44;
  sub_100009C94(v33, v44, &qword_1001571A0);
  uint64_t v36 = sub_1000060EC(&qword_1001571B8);
  sub_100009C94(v34, v35 + *(int *)(v36 + 48), &qword_100157188);
  sub_1000063D0(v32, &qword_100157188);
  sub_1000063D0((uint64_t)v24, &qword_1001571A0);
  sub_1000063D0(v34, &qword_100157188);
  return sub_1000063D0(v33, &qword_1001571A0);
}

uint64_t sub_100016380@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1000060EC(&qword_100157268);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v16 - v6;
  uint64_t v8 = sub_1000060EC(&qword_100157270);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v16 - v12;
  sub_100016528((uint64_t)&v16 - v12);
  sub_100016978((uint64_t)v7);
  sub_100009C94((uint64_t)v13, (uint64_t)v11, &qword_100157270);
  sub_100009C94((uint64_t)v7, (uint64_t)v5, &qword_100157268);
  sub_100009C94((uint64_t)v11, a1, &qword_100157270);
  uint64_t v14 = sub_1000060EC(&qword_100157278);
  sub_100009C94((uint64_t)v5, a1 + *(int *)(v14 + 48), &qword_100157268);
  sub_1000063D0((uint64_t)v7, &qword_100157268);
  sub_1000063D0((uint64_t)v13, &qword_100157270);
  sub_1000063D0((uint64_t)v5, &qword_100157268);
  return sub_1000063D0((uint64_t)v11, &qword_100157270);
}

uint64_t sub_100016528@<X0>(uint64_t a1@<X8>)
{
  uint64_t v41 = a1;
  uint64_t v40 = sub_1000060EC(&qword_1001571C0);
  __chkstk_darwin(v40);
  uint64_t v43 = (char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_1000060EC(&qword_100157298);
  uint64_t v35 = *(void *)(v37 - 8);
  __chkstk_darwin(v37);
  uint64_t v4 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000060EC(&qword_1001572A0);
  uint64_t v38 = *(void *)(v5 - 8);
  uint64_t v39 = v5;
  __chkstk_darwin(v5);
  uint64_t v36 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v44 = *(void *)(v1 + 16);
  uint64_t v45 = v7;
  sub_10000E0F0();
  swift_bridgeObjectRetain();
  uint64_t v8 = Text.init<A>(_:)();
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  uint64_t v42 = v11;
  char v14 = v13 & 1;
  uint64_t KeyPath = swift_getKeyPath();
  int v16 = static HierarchicalShapeStyle.secondary.getter();
  uint64_t v17 = static Font.caption.getter();
  uint64_t v18 = swift_getKeyPath();
  uint64_t v44 = v8;
  uint64_t v45 = v10;
  LOBYTE(v46) = v14;
  uint64_t v47 = v12;
  uint64_t v48 = KeyPath;
  uint64_t v49 = 1;
  char v50 = 0;
  int v51 = v16;
  uint64_t v52 = v18;
  uint64_t v53 = v17;
  static Font.Weight.semibold.getter();
  uint64_t v19 = sub_1000060EC(&qword_1001572A8);
  unint64_t v20 = sub_100017AE0();
  uint64_t v34 = v4;
  unint64_t v21 = v20;
  View.fontWeight(_:)();
  char v22 = v14;
  uint64_t v23 = (uint64_t)v43;
  sub_10000E904(v8, v10, v22);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v24 = enum case for DynamicTypeSize.xxxLarge(_:);
  uint64_t v25 = type metadata accessor for DynamicTypeSize();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 104))(v23, v24, v25);
  sub_100017994(&qword_100157258, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  uint64_t result = dispatch thunk of static Equatable.== infix(_:_:)();
  if (result)
  {
    uint64_t v44 = v19;
    uint64_t v45 = v21;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    uint64_t v28 = sub_100006480(&qword_100157260, &qword_1001571C0);
    Swift::String v30 = v36;
    uint64_t v29 = v37;
    uint64_t v31 = v40;
    uint64_t v32 = v34;
    View.dynamicTypeSize<A>(_:)();
    sub_1000063D0(v23, &qword_1001571C0);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v32, v29);
    uint64_t v44 = v29;
    uint64_t v45 = v31;
    uint64_t v46 = OpaqueTypeConformance2;
    uint64_t v47 = v28;
    swift_getOpaqueTypeConformance2();
    uint64_t v33 = v39;
    View.accessibilityIdentifier(_:)();
    return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v30, v33);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100016978@<X0>(uint64_t a1@<X8>)
{
  uint64_t v29 = a1;
  uint64_t v2 = sub_1000060EC(&qword_1001571C0);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_1000060EC(&qword_100157280);
  uint64_t v5 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  uint64_t v9 = v1[1];
  uint64_t v30 = v8;
  uint64_t v31 = v9;
  sub_10000E0F0();
  swift_bridgeObjectRetain();
  uint64_t v10 = Text.init<A>(_:)();
  uint64_t v12 = v11;
  char v14 = v13;
  uint64_t v16 = v15;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v18 = static Font.subheadline.getter();
  uint64_t v19 = swift_getKeyPath();
  uint64_t v30 = v10;
  uint64_t v31 = v12;
  LOBYTE(v32) = v14 & 1;
  uint64_t v33 = v16;
  uint64_t v34 = KeyPath;
  uint64_t v35 = 1;
  char v36 = 0;
  uint64_t v37 = v19;
  uint64_t v38 = v18;
  uint64_t v20 = enum case for DynamicTypeSize.xxxLarge(_:);
  uint64_t v21 = type metadata accessor for DynamicTypeSize();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104))(v4, v20, v21);
  sub_100017994(&qword_100157258, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  uint64_t result = dispatch thunk of static Equatable.== infix(_:_:)();
  if (result)
  {
    uint64_t v23 = sub_1000060EC(&qword_100157288);
    unint64_t v24 = sub_100017A40();
    uint64_t v25 = sub_100006480(&qword_100157260, &qword_1001571C0);
    View.dynamicTypeSize<A>(_:)();
    sub_1000063D0((uint64_t)v4, &qword_1001571C0);
    sub_10000E904(v30, v31, v32);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v30 = v23;
    uint64_t v31 = v2;
    unint64_t v32 = v24;
    uint64_t v33 = v25;
    swift_getOpaqueTypeConformance2();
    uint64_t v26 = v28;
    View.accessibilityIdentifier(_:)();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v26);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100016CBC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1000060EC(&qword_1001571C0);
  __chkstk_darwin(v3);
  uint64_t v60 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = type metadata accessor for DefaultButtonStyle();
  uint64_t v56 = *(void *)(v59 - 8);
  __chkstk_darwin(v59);
  uint64_t v6 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000060EC(&qword_1001571C8);
  uint64_t v55 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_1000060EC(&qword_1001571D0);
  __chkstk_darwin(v57);
  uint64_t v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = sub_1000060EC(&qword_1001571D8);
  uint64_t v48 = *(void *)(v50 - 8);
  __chkstk_darwin(v50);
  id v58 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_1000060EC(&qword_1001571E0);
  uint64_t v51 = *(void *)(v54 - 8);
  __chkstk_darwin(v54);
  uint64_t v49 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000060EC(&qword_1001571E8);
  uint64_t v61 = *(void *)(v14 - 8);
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v53 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v52 = (char *)&v45 - v17;
  sub_100009C30((uint64_t)(v1 + 2), (uint64_t)v66, &qword_100159A70);
  sub_100009C30((uint64_t)v66, (uint64_t)&v67, &qword_100159A70);
  uint64_t v18 = v68;
  if (!v68)
  {
    uint64_t v43 = 1;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v61 + 56))(a1, v43, 1, v14);
  }
  uint64_t v47 = v14;
  uint64_t v19 = v67;
  uint64_t v20 = HIBYTE(v68) & 0xF;
  if ((v68 & 0x2000000000000000) == 0) {
    uint64_t v20 = v67 & 0xFFFFFFFFFFFFLL;
  }
  if (!v20)
  {
    uint64_t v43 = 1;
    uint64_t v14 = v47;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v61 + 56))(a1, v43, 1, v14);
  }
  uint64_t v45 = v3;
  uint64_t v46 = a1;
  uint64_t v21 = (_OWORD *)swift_allocObject();
  long long v22 = v1[1];
  v21[1] = *v1;
  v21[2] = v22;
  long long v23 = v1[3];
  v21[3] = v1[2];
  v21[4] = v23;
  __chkstk_darwin(v21);
  *(&v45 - 2) = v19;
  *(&v45 - 1) = v18;
  sub_100017714((uint64_t)v1);
  sub_1000060EC(&qword_1001571F0);
  sub_100017788();
  Button.init(action:label:)();
  uint64_t v24 = static Color.blue.getter();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v26 = v55;
  (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v11, v9, v7);
  uint64_t v27 = v57;
  uint64_t v28 = (uint64_t *)&v11[*(int *)(v57 + 36)];
  *uint64_t v28 = KeyPath;
  v28[1] = v24;
  (*(void (**)(char *, uint64_t))(v26 + 8))(v9, v7);
  DefaultButtonStyle.init()();
  unint64_t v29 = sub_1000178D0();
  uint64_t v30 = sub_100017994(&qword_100157250, (void (*)(uint64_t))&type metadata accessor for DefaultButtonStyle);
  unint64_t v32 = v58;
  uint64_t v31 = v59;
  View.buttonStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v6, v31);
  sub_1000063D0((uint64_t)v11, &qword_1001571D0);
  uint64_t v33 = enum case for DynamicTypeSize.xxxLarge(_:);
  uint64_t v34 = type metadata accessor for DynamicTypeSize();
  uint64_t v35 = (uint64_t)v60;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v34 - 8) + 104))(v60, v33, v34);
  sub_100017994(&qword_100157258, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  if ((dispatch thunk of static Equatable.== infix(_:_:)() & 1) == 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v62 = v27;
  uint64_t v63 = v31;
  unint64_t v64 = v29;
  uint64_t v65 = v30;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v37 = sub_100006480(&qword_100157260, &qword_1001571C0);
  uint64_t v39 = v49;
  uint64_t v38 = v50;
  uint64_t v40 = v45;
  View.dynamicTypeSize<A>(_:)();
  sub_1000063D0(v35, &qword_1001571C0);
  (*(void (**)(char *, uint64_t))(v48 + 8))(v32, v38);
  uint64_t v62 = v38;
  uint64_t v63 = v40;
  unint64_t v64 = OpaqueTypeConformance2;
  uint64_t v65 = v37;
  swift_getOpaqueTypeConformance2();
  uint64_t v35 = (uint64_t)v53;
  uint64_t v41 = v54;
  View.accessibilityIdentifier(_:)();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v39, v41);
  if (qword_100156030 != -1) {
LABEL_12:
  }
    swift_once();
  uint64_t v42 = (uint64_t)v52;
  uint64_t v14 = v47;
  ModifiedContent<>.accessibilityHint(_:)();
  sub_1000063D0(v35, &qword_1001571E8);
  a1 = v46;
  sub_100009C30(v42, v46, &qword_1001571E8);
  uint64_t v43 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v61 + 56))(a1, v43, 1, v14);
}

uint64_t sub_1000174E0@<X0>(uint64_t a1@<X8>)
{
  sub_10000E0F0();
  swift_bridgeObjectRetain();
  uint64_t v2 = Text.init<A>(_:)();
  uint64_t v4 = v3;
  char v6 = v5 & 1;
  static Font.subheadline.getter();
  uint64_t v7 = Text.font(_:)();
  uint64_t v9 = v8;
  char v11 = v10;
  uint64_t v13 = v12;
  swift_release();
  sub_10000E904(v2, v4, v6);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t result = swift_getKeyPath();
  *(void *)a1 = v7;
  *(void *)(a1 + 8) = v9;
  *(unsigned char *)(a1 + 16) = v11 & 1;
  *(void *)(a1 + 24) = v13;
  *(void *)(a1 + 32) = KeyPath;
  *(void *)(a1 + 40) = 1;
  *(unsigned char *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = result;
  *(void *)(a1 + 64) = 0x3FE3333333333333;
  return result;
}

uint64_t sub_1000175F4@<X0>(uint64_t a1@<X8>)
{
  long long v3 = v1[1];
  v7[0] = *v1;
  v7[1] = v3;
  long long v4 = v1[3];
  v7[2] = v1[2];
  v7[3] = v4;
  *(void *)a1 = static HorizontalAlignment.leading.getter();
  *(void *)(a1 + 8) = 0x4010000000000000;
  *(unsigned char *)(a1 + 16) = 0;
  uint64_t v5 = sub_1000060EC(&qword_100157180);
  return sub_100015EEC(v7, a1 + *(int *)(v5 + 44));
}

uint64_t sub_100017658(uint64_t a1)
{
  return a1;
}

uint64_t sub_100017684()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 64)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 80, 7);
}

uint64_t sub_1000176DC()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 64);
  if (v1) {
    return v1();
  }
  return result;
}

uint64_t sub_10001770C@<X0>(uint64_t a1@<X8>)
{
  return sub_1000174E0(a1);
}

uint64_t sub_100017714(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100017778(v2);
  return a1;
}

uint64_t sub_100017778(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

unint64_t sub_100017788()
{
  unint64_t result = qword_1001571F8;
  if (!qword_1001571F8)
  {
    sub_100006224(&qword_1001571F0);
    sub_100017828();
    sub_100006480(&qword_100157220, &qword_100157228);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001571F8);
  }
  return result;
}

unint64_t sub_100017828()
{
  unint64_t result = qword_100157200;
  if (!qword_100157200)
  {
    sub_100006224(&qword_100157208);
    sub_100006480(&qword_100157210, &qword_100157218);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100157200);
  }
  return result;
}

unint64_t sub_1000178D0()
{
  unint64_t result = qword_100157230;
  if (!qword_100157230)
  {
    sub_100006224(&qword_1001571D0);
    sub_100006480(&qword_100157238, &qword_1001571C8);
    sub_100006480((unint64_t *)&qword_100157240, &qword_100157248);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100157230);
  }
  return result;
}

uint64_t sub_100017994(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000179E4@<X0>(void *a1@<X8>)
{
  uint64_t result = EnvironmentValues.minimumScaleFactor.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_100017A10()
{
  return EnvironmentValues.minimumScaleFactor.setter();
}

unint64_t sub_100017A40()
{
  unint64_t result = qword_100157290;
  if (!qword_100157290)
  {
    sub_100006224(&qword_100157288);
    sub_100017828();
    sub_100006480(&qword_100156788, &qword_100156790);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100157290);
  }
  return result;
}

unint64_t sub_100017AE0()
{
  unint64_t result = qword_1001572B0;
  if (!qword_1001572B0)
  {
    sub_100006224(&qword_1001572A8);
    sub_100017B80();
    sub_100006480(&qword_100156788, &qword_100156790);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001572B0);
  }
  return result;
}

unint64_t sub_100017B80()
{
  unint64_t result = qword_1001572B8;
  if (!qword_1001572B8)
  {
    sub_100006224(&qword_1001572C0);
    sub_100017828();
    sub_100006480(&qword_100156798, &qword_1001567A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001572B8);
  }
  return result;
}

uint64_t sub_100017C20()
{
  return sub_100006480(&qword_1001572C8, &qword_1001572D0);
}

void *assignWithCopy for OpenLinkImageView(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for OpenLinkImageView()
{
  return &type metadata for OpenLinkImageView;
}

uint64_t sub_100017CCC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100017CE8()
{
  return swift_release();
}

uint64_t sub_100017DD0()
{
  return sub_100017CE8();
}

unint64_t sub_100017DE0()
{
  unint64_t result = qword_1001572E0;
  if (!qword_1001572E0)
  {
    sub_100006224(&qword_1001572D8);
    sub_100017E80();
    sub_100006480(&qword_100156788, &qword_100156790);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001572E0);
  }
  return result;
}

unint64_t sub_100017E80()
{
  unint64_t result = qword_1001572E8;
  if (!qword_1001572E8)
  {
    sub_100006224(&qword_1001572F0);
    sub_100006480(&qword_1001572F8, (uint64_t *)&unk_100157300);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001572E8);
  }
  return result;
}

uint64_t sub_100017F20()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_100017F7C()
{
  id v0 = [self blackColor];
  id v1 = [v0 colorWithAlphaComponent:0.9];

  qword_100157310 = (uint64_t)v1;
}

id sub_100018128()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return [super dealloc];
}

uint64_t type metadata accessor for MusicRecognitionSceneDelegate()
{
  return self;
}

void sub_1000181D0(void *a1)
{
  uint64_t v2 = v1;
  if (qword_100156018 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_10000E808(v4, (uint64_t)qword_100164B38);
  id v5 = a1;
  char v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 138412290;
    id v10 = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v9 = v5;

    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Scene will connect %@", v8, 0xCu);
    sub_1000060EC((uint64_t *)&unk_1001570F0);
    swift_arrayDestroy();
    uint64_t v2 = v1;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  type metadata accessor for ActivityScene();
  uint64_t v11 = swift_dynamicCastClass();
  if (v11)
  {
    uint64_t v12 = (void *)v11;
    type metadata accessor for MusicRecognitionPlatterViewController();
    id v13 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    uint64_t v14 = v5;
    id v15 = [v13 init];
    uint64_t v16 = OBJC_IVAR____TtC16MusicRecognition29MusicRecognitionSceneDelegate_musicRecognitionPlatterViewController;
    uint64_t v17 = *(void **)(v2
                   + OBJC_IVAR____TtC16MusicRecognition29MusicRecognitionSceneDelegate_musicRecognitionPlatterViewController);
    *(void *)(v2
              + OBJC_IVAR____TtC16MusicRecognition29MusicRecognitionSceneDelegate_musicRecognitionPlatterViewController) = v15;

    if (objc_msgSend(v12, "SBUI_isHostedBySystemAperture"))
    {
      [v12 setSystemApertureElementViewControllerProvider:*(void *)(v2 + v16)];
    }
    else
    {
      id v20 = objc_allocWithZone((Class)type metadata accessor for ActivitySceneMetrics());
      ActivitySceneMetrics.init(size:cornerRadius:)();
      dispatch thunk of ActivityScene.resolvedMetrics.setter();
      if (qword_100156038 != -1) {
        swift_once();
      }
      id v21 = (id)qword_100157310;
      dispatch thunk of ActivityScene.backgroundTintColor.setter();
      uint64_t v22 = *(void *)(v2 + v16);
      if (v22) {
        *(unsigned char *)(v22 + OBJC_IVAR____TtC16MusicRecognition37MusicRecognitionPlatterViewController_presentationStyle) = 0;
      }
      id v23 = [objc_allocWithZone((Class)UIWindow) initWithWindowScene:v12];
      uint64_t v24 = OBJC_IVAR____TtC16MusicRecognition29MusicRecognitionSceneDelegate_window;
      uint64_t v25 = *(void **)(v2 + OBJC_IVAR____TtC16MusicRecognition29MusicRecognitionSceneDelegate_window);
      *(void *)(v2 + OBJC_IVAR____TtC16MusicRecognition29MusicRecognitionSceneDelegate_window) = v23;

      uint64_t v26 = *(void **)(v2 + v24);
      if (v26)
      {
        [v26 setRootViewController:*(void *)(v2 + v16)];
        uint64_t v27 = *(void **)(v2 + v24);
        if (v27)
        {
          id v28 = v27;
          [v28 makeKeyAndVisible];
        }
      }
    }
  }
  else
  {
    uint64_t v14 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v14, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, v18, "Unable to connect to ActivityScene", v19, 2u);
      swift_slowDealloc();
    }
  }
}

uint64_t *sub_100018560(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for URL();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = sub_1000060EC((uint64_t *)&unk_100158FC0);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v11 = *(int *)(a3 + 20);
    long long v12 = *(_OWORD *)((char *)a2 + v11 + 24);
    *(_OWORD *)((char *)a1 + v11 + 24) = v12;
    (**(void (***)(void))(v12 - 8))();
  }
  return a1;
}

uint64_t sub_10001870C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  uint64_t v6 = a1 + *(int *)(a2 + 20);

  return _s16MusicRecognition11AnyPlaylistVwxx_0(v6);
}

char *sub_1000187D8(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_1000060EC((uint64_t *)&unk_100158FC0);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = *(int *)(a3 + 20);
  long long v10 = *(_OWORD *)&a2[v9 + 24];
  *(_OWORD *)&a1[v9 + 24] = v10;
  (**(void (***)(void))(v10 - 8))();
  return a1;
}

char *sub_100018934(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = sub_1000060EC((uint64_t *)&unk_100158FC0);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  sub_100018AC4((uint64_t *)&a1[*(int *)(a3 + 20)], (uint64_t *)&a2[*(int *)(a3 + 20)]);
  return a1;
}

uint64_t *sub_100018AC4(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        unint64_t result = (uint64_t *)swift_release();
        *uint64_t v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *unint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

char *sub_100018CF4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_1000060EC((uint64_t *)&unk_100158FC0);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  long long v12 = *((_OWORD *)v11 + 1);
  *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
  *((_OWORD *)v10 + 1) = v12;
  *((void *)v10 + 4) = *((void *)v11 + 4);
  return a1;
}

char *sub_100018E2C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = sub_1000060EC((uint64_t *)&unk_100158FC0);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = *(int *)(a3 + 20);
  id v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  _s16MusicRecognition11AnyPlaylistVwxx_0((uint64_t)&a1[v12]);
  long long v15 = *((_OWORD *)v14 + 1);
  *(_OWORD *)id v13 = *(_OWORD *)v14;
  *((_OWORD *)v13 + 1) = v15;
  *((void *)v13 + 4) = *((void *)v14 + 4);
  return a1;
}

uint64_t sub_100018FD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100018FE4);
}

uint64_t sub_100018FE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000060EC((uint64_t *)&unk_100158FC0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 24);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1000190AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000190C0);
}

uint64_t sub_1000190C0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1000060EC((uint64_t *)&unk_100158FC0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 24) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for AnyAlbum()
{
  uint64_t result = qword_100157468;
  if (!qword_100157468) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1000191D0()
{
  sub_10000ABC4();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_100019264(uint64_t a1)
{
  uint64_t v2 = (void *)(v1 + *(int *)(a1 + 20));
  uint64_t v3 = v2[3];
  uint64_t v4 = v2[4];
  sub_100010740(v2, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
}

uint64_t sub_1000192C4(uint64_t a1)
{
  uint64_t v2 = (void *)(v1 + *(int *)(a1 + 20));
  uint64_t v3 = v2[3];
  uint64_t v4 = v2[4];
  sub_100010740(v2, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 16))(v3, v4);
}

uint64_t sub_10001931C(uint64_t a1)
{
  uint64_t v2 = (void *)(v1 + *(int *)(a1 + 20));
  uint64_t v3 = v2[3];
  uint64_t v4 = v2[4];
  sub_100010740(v2, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 24))(v3, v4);
}

uint64_t sub_100019374(uint64_t a1)
{
  uint64_t v2 = (void *)(v1 + *(int *)(a1 + 20));
  uint64_t v3 = v2[3];
  uint64_t v4 = v2[4];
  sub_100010740(v2, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 32))(v3, v4);
}

uint64_t sub_1000193CC(uint64_t a1)
{
  uint64_t v2 = (void *)(v1 + *(int *)(a1 + 20));
  uint64_t v3 = v2[3];
  uint64_t v4 = v2[4];
  sub_100010740(v2, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 40))(v3, v4);
}

uint64_t sub_100019424(uint64_t a1)
{
  uint64_t v2 = (void *)(v1 + *(int *)(a1 + 20));
  uint64_t v3 = v2[3];
  uint64_t v4 = v2[4];
  sub_100010740(v2, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 48))(v3, v4);
}

uint64_t sub_100019484(uint64_t a1)
{
  uint64_t v2 = (void *)(v1 + *(int *)(a1 + 20));
  uint64_t v3 = v2[3];
  uint64_t v4 = v2[4];
  sub_100010740(v2, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 56))(v3, v4);
}

uint64_t sub_1000194E4(uint64_t a1)
{
  uint64_t v2 = (void *)(v1 + *(int *)(a1 + 20));
  uint64_t v3 = v2[3];
  uint64_t v4 = v2[4];
  sub_100010740(v2, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 64))(v3, v4);
}

uint64_t sub_10001953C()
{
  uint64_t v0 = type metadata accessor for TypeDisplayRepresentation();
  sub_10000FC3C(v0, qword_100164B70);
  sub_10000E808(v0, (uint64_t)qword_100164B70);
  return TypeDisplayRepresentation.init(stringLiteral:)();
}

uint64_t sub_1000195A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v24 = a1;
  uint64_t v1 = sub_1000060EC(&qword_100157520);
  __chkstk_darwin(v1 - 8);
  id v23 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1000060EC(&qword_100157528);
  __chkstk_darwin(v3 - 8);
  uint64_t v22 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for LocalizedStringResource();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v21 - v11;
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v21 - v13;
  EntityProperty.wrappedValue.getter();
  uint64_t v15 = v25;
  LocalizedStringResource.init(stringLiteral:)();
  if (v15) {
    LocalizedStringResource.init(stringLiteral:)();
  }
  else {
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v14, v12, v5);
  }
  uint64_t v16 = *(void (**)(char *, uint64_t))(v6 + 8);
  v16(v12, v5);
  EntityProperty.wrappedValue.getter();
  uint64_t v17 = v25;
  LocalizedStringResource.init(stringLiteral:)();
  os_log_type_t v18 = v22;
  if (v17) {
    LocalizedStringResource.init(stringLiteral:)();
  }
  else {
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v22, v9, v5);
  }
  v16(v9, v5);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v18, 0, 1, v5);
  uint64_t v19 = type metadata accessor for DisplayRepresentation.Image();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v23, 1, 1, v19);
  return DisplayRepresentation.init(title:subtitle:image:)();
}

uint64_t static LocalizedStringResource.resource(fromStringLiteral:defaultValue:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  if (a1)
  {
    swift_bridgeObjectRetain();
    return LocalizedStringResource.init(stringLiteral:)();
  }
  else
  {
    uint64_t v6 = type metadata accessor for LocalizedStringResource();
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
    return v7(a3, a2, v6);
  }
}

unint64_t sub_100019968()
{
  unint64_t result = qword_1001574A0;
  if (!qword_1001574A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001574A0);
  }
  return result;
}

__n128 sub_1000199BC@<Q0>(uint64_t a1@<X8>)
{
  sub_10001A3A4((uint64_t *)v4);
  long long v2 = v4[3];
  *(_OWORD *)(a1 + 32) = v4[2];
  *(_OWORD *)(a1 + 48) = v2;
  *(_OWORD *)(a1 + 64) = v4[4];
  __n128 result = (__n128)v4[1];
  *(_OWORD *)a1 = v4[0];
  *(__n128 *)(a1 + 16) = result;
  return result;
}

unint64_t sub_100019A08()
{
  unint64_t result = qword_1001574A8;
  if (!qword_1001574A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001574A8);
  }
  return result;
}

unint64_t sub_100019A60()
{
  unint64_t result = qword_1001574B0;
  if (!qword_1001574B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001574B0);
  }
  return result;
}

unint64_t sub_100019AB8()
{
  unint64_t result = qword_1001574B8;
  if (!qword_1001574B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001574B8);
  }
  return result;
}

uint64_t sub_100019B0C()
{
  return sub_100006480(&qword_1001574C0, &qword_1001574C8);
}

void *sub_100019B48()
{
  return &protocol witness table for String;
}

uint64_t sub_100019B54(uint64_t a1)
{
  unint64_t v2 = sub_10001AC54();

  return static TransientAppEntity.defaultQuery.getter(a1, v2);
}

unint64_t sub_100019BA4()
{
  unint64_t result = qword_1001574D0;
  if (!qword_1001574D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001574D0);
  }
  return result;
}

unint64_t sub_100019BFC()
{
  unint64_t result = qword_1001574D8;
  if (!qword_1001574D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001574D8);
  }
  return result;
}

unint64_t sub_100019C54()
{
  unint64_t result = qword_1001574E0;
  if (!qword_1001574E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001574E0);
  }
  return result;
}

unint64_t sub_100019CAC()
{
  unint64_t result = qword_1001574E8;
  if (!qword_1001574E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001574E8);
  }
  return result;
}

void *sub_100019D00()
{
  return &protocol witness table for String;
}

uint64_t sub_100019D0C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = EntityProperty.wrappedValue.getter();
  uint64_t v7 = v11;
  if (v11)
  {
    uint64_t v8 = v10;
  }
  else
  {
    UUID.init()();
    uint64_t v8 = UUID.uuidString.getter();
    uint64_t v7 = v9;
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  *a1 = v8;
  a1[1] = v7;
  return result;
}

uint64_t sub_100019E10@<X0>(uint64_t a1@<X8>)
{
  if (qword_100156040 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for TypeDisplayRepresentation();
  uint64_t v3 = sub_10000E808(v2, (uint64_t)qword_100164B70);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_100019EB8()
{
  return sub_100006480(&qword_1001574F0, &qword_1001574F8);
}

uint64_t sub_100019EF4(uint64_t a1)
{
  unint64_t v2 = sub_100019968();

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_100019F44()
{
  unint64_t result = qword_100157500;
  if (!qword_100157500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100157500);
  }
  return result;
}

uint64_t sub_100019F9C(uint64_t a1)
{
  unint64_t v2 = sub_100019CAC();

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

uint64_t destroy for ShazamMediaEntity()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

void *initializeWithCopy for ShazamMediaEntity(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for ShazamMediaEntity(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  a1[5] = a2[5];
  swift_retain();
  swift_release();
  a1[6] = a2[6];
  swift_retain();
  swift_release();
  a1[7] = a2[7];
  swift_retain();
  swift_release();
  a1[8] = a2[8];
  swift_retain();
  swift_release();
  a1[9] = a2[9];
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for ShazamMediaEntity(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

_OWORD *assignWithTake for ShazamMediaEntity(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  swift_release();
  a1[1] = a2[1];
  swift_release();
  swift_release();
  a1[2] = a2[2];
  swift_release();
  swift_release();
  a1[3] = a2[3];
  swift_release();
  swift_release();
  a1[4] = a2[4];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ShazamMediaEntity(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 80)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ShazamMediaEntity(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ShazamMediaEntity()
{
  return &type metadata for ShazamMediaEntity;
}

uint64_t sub_10001A3A4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for LocalizedStringResource();
  __chkstk_darwin(v2 - 8);
  sub_1000060EC(&qword_100157508);
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v12 = EntityProperty<>.init(title:)();
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v11 = EntityProperty<>.init(title:)();
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v10 = EntityProperty<>.init(title:)();
  sub_1000060EC(&qword_100157510);
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v9 = EntityProperty<>.init(title:)();
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v3 = EntityProperty<>.init(title:)();
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v4 = EntityProperty<>.init(title:)();
  sub_1000060EC(&qword_100157518);
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v5 = EntityProperty<>.init(title:)();
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v6 = EntityProperty<>.init(title:)();
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v7 = EntityProperty<>.init(title:)();
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t result = EntityProperty<>.init(title:)();
  *a1 = v12;
  a1[1] = v11;
  a1[2] = v10;
  a1[3] = v9;
  a1[4] = v3;
  a1[5] = v4;
  a1[6] = v5;
  a1[7] = v6;
  a1[8] = v7;
  a1[9] = result;
  return result;
}

__n128 sub_10001A630@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v63 = a2;
  uint64_t v3 = sub_1000060EC((uint64_t *)&unk_100158FC0);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v4);
  uint64_t v9 = (char *)&v62 - v8;
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v62 - v11;
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v15 = (char *)&v62 - v14;
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v62 - v16;
  sub_10001A3A4((uint64_t *)v66);
  id v18 = [a1 appleMusicID];
  if (v18)
  {
    uint64_t v19 = v18;
    uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v22 = v21;
  }
  else
  {
    uint64_t v20 = 0;
    uint64_t v22 = 0;
  }
  uint64_t v64 = v20;
  uint64_t v65 = v22;
  EntityProperty.wrappedValue.setter();
  id v23 = [a1 artist];
  if (v23)
  {
    uint64_t v24 = v23;
    uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v27 = v26;
  }
  else
  {
    uint64_t v25 = 0;
    uint64_t v27 = 0;
  }
  uint64_t v64 = v25;
  uint64_t v65 = v27;
  EntityProperty.wrappedValue.setter();
  id v28 = [a1 title];
  if (v28)
  {
    unint64_t v29 = v28;
    uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v32 = v31;
  }
  else
  {
    uint64_t v30 = 0;
    uint64_t v32 = 0;
  }
  uint64_t v64 = v30;
  uint64_t v65 = v32;
  EntityProperty.wrappedValue.setter();
  id v33 = [a1 artworkURL];
  if (v33)
  {
    uint64_t v34 = v33;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v35 = type metadata accessor for URL();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v17, 0, 1, v35);
  }
  else
  {
    uint64_t v36 = type metadata accessor for URL();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v17, 1, 1, v36);
  }
  sub_10000AD3C((uint64_t)v17, (uint64_t)v15);
  EntityProperty.wrappedValue.setter();
  sub_10001ABF4((uint64_t)v17);
  id v37 = [a1 webURL];
  if (v37)
  {
    uint64_t v38 = v37;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v39 = type metadata accessor for URL();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v12, 0, 1, v39);
  }
  else
  {
    uint64_t v40 = type metadata accessor for URL();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v12, 1, 1, v40);
  }
  sub_10000AD3C((uint64_t)v12, (uint64_t)v15);
  EntityProperty.wrappedValue.setter();
  sub_10001ABF4((uint64_t)v12);
  id v41 = [a1 appleMusicURL];
  if (v41)
  {
    uint64_t v42 = v41;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v43 = type metadata accessor for URL();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v9, 0, 1, v43);
  }
  else
  {
    uint64_t v44 = type metadata accessor for URL();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v9, 1, 1, v44);
  }
  sub_10000AD3C((uint64_t)v9, (uint64_t)v15);
  EntityProperty.wrappedValue.setter();
  sub_10001ABF4((uint64_t)v9);
  LOBYTE(v64) = [a1 explicitContent];
  EntityProperty.wrappedValue.setter();
  id v45 = [a1 videoURL];
  if (v45)
  {
    uint64_t v46 = v45;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v47 = type metadata accessor for URL();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v6, 0, 1, v47);
  }
  else
  {
    uint64_t v48 = type metadata accessor for URL();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v6, 1, 1, v48);
  }
  sub_10000AD3C((uint64_t)v6, (uint64_t)v15);
  EntityProperty.wrappedValue.setter();
  sub_10001ABF4((uint64_t)v6);
  id v49 = [a1 lyricsSnippet];
  if (v49)
  {
    uint64_t v50 = v49;
    uint64_t v51 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v53 = v52;
  }
  else
  {
    uint64_t v51 = 0;
    uint64_t v53 = 0;
  }
  uint64_t v64 = v51;
  uint64_t v65 = v53;
  EntityProperty.wrappedValue.setter();
  id v54 = [a1 syncedLyricsSnippet];
  if (v54)
  {
    uint64_t v55 = v54;
    uint64_t v56 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v58 = v57;
  }
  else
  {
    uint64_t v56 = 0;
    uint64_t v58 = 0;
  }
  uint64_t v64 = v56;
  uint64_t v65 = v58;
  EntityProperty.wrappedValue.setter();
  long long v59 = v66[3];
  uint64_t v60 = v63;
  *(_OWORD *)(v63 + 32) = v66[2];
  *(_OWORD *)(v60 + 48) = v59;
  *(_OWORD *)(v60 + 64) = v66[4];
  __n128 result = (__n128)v66[1];
  *(_OWORD *)uint64_t v60 = v66[0];
  *(__n128 *)(v60 + 16) = result;
  return result;
}

uint64_t sub_10001ABF4(uint64_t a1)
{
  uint64_t v2 = sub_1000060EC((uint64_t *)&unk_100158FC0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_10001AC54()
{
  unint64_t result = qword_100157530;
  if (!qword_100157530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100157530);
  }
  return result;
}

uint64_t sub_10001ACA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Artist();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t sub_10001AD14(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Artist();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_10001AD78(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Artist();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_10001ADDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Artist();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_10001AE40(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Artist();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_10001AEA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Artist();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_10001AF08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10001AF1C);
}

uint64_t sub_10001AF1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Artist();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_10001AF88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10001AF9C);
}

uint64_t sub_10001AF9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Artist();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for MusicKitArtist()
{
  uint64_t result = qword_1001575A0;
  if (!qword_1001575A0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10001B058()
{
  uint64_t result = type metadata accessor for Artist();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_10001B0E4()
{
  qword_100157538 = 0x696D2E636973756DLL;
  unk_100157540 = 0xE900000000000063;
}

uint64_t sub_10001B10C()
{
  uint64_t v0 = sub_1000060EC(&qword_100157608);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v14 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1000060EC(&qword_100157610);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  Artist.genres.getter();
  uint64_t v6 = sub_1000060EC(&qword_100157618);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v2, 1, v6) == 1)
  {
    uint64_t v8 = &qword_100157608;
    uint64_t v9 = (uint64_t)v2;
  }
  else
  {
    sub_1000678D4((uint64_t)v5);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v2, v6);
    uint64_t v10 = type metadata accessor for Genre();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v5, 1, v10) != 1)
    {
      uint64_t v12 = Genre.name.getter();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v5, v10);
      return v12;
    }
    uint64_t v8 = &qword_100157610;
    uint64_t v9 = (uint64_t)v5;
  }
  sub_1000063D0(v9, v8);
  return 0;
}

uint64_t sub_10001B318()
{
  uint64_t v0 = sub_1000060EC(&qword_1001575D8);
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = type metadata accessor for ArtworkImage();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000060EC(&qword_1001575E8);
  __chkstk_darwin(v5);
  sub_1000060EC(&qword_1001575E0);
  swift_allocObject();
  MusicAttributeProperty.init(_:)();
  Artist.subscript.getter();
  swift_release();
  ArtworkImage.init(_:)();
  uint64_t v6 = sub_1000060EC(&qword_1001575F0);
  unint64_t v7 = sub_10001B9C0();
  ArtworkImage.artworkPlaceholder<A>(_:)();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  v9[1] = v6;
  void v9[2] = v7;
  swift_getOpaqueTypeConformance2();
  return AnyView.init<A>(_:)();
}

uint64_t sub_10001B5B4()
{
  uint64_t v0 = type metadata accessor for ArtworkUnavailableView();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100156048 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  ArtworkUnavailableView.init(placeholderImage:widthRatio:heightRatio:)();
  if (qword_1001562D8 != -1) {
    swift_once();
  }
  sub_10001BA9C((unint64_t *)&qword_100157600, (void (*)(uint64_t))&type metadata accessor for ArtworkUnavailableView);
  View.accessibilityIdentifier(_:)();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_10001B778@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1000060EC(&qword_1001575D8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000060EC(&qword_1001575E0);
  swift_allocObject();
  MusicAttributeProperty.init(_:)();
  Artist.subscript.getter();
  swift_release();
  uint64_t v5 = type metadata accessor for Artwork();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1000063D0((uint64_t)v4, &qword_1001575D8);
    uint64_t v7 = type metadata accessor for URL();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(a1, 1, 1, v7);
  }
  else
  {
    Artwork.url(width:height:)();
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  }
}

unint64_t sub_10001B9C0()
{
  unint64_t result = qword_1001575F8;
  if (!qword_1001575F8)
  {
    sub_100006224(&qword_1001575F0);
    sub_10001BA9C((unint64_t *)&qword_100157600, (void (*)(uint64_t))&type metadata accessor for ArtworkUnavailableView);
    sub_10001BA9C((unint64_t *)&qword_1001567D8, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001575F8);
  }
  return result;
}

uint64_t sub_10001BA9C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_10001BAE4()
{
  id result = [objc_allocWithZone((Class)UIColor) initWithRed:0.470588235 green:0.470588235 blue:0.501960784 alpha:0.36];
  qword_100157620 = (uint64_t)result;
  return result;
}

id sub_10001BB3C()
{
  id result = [objc_allocWithZone((Class)UIColor) initWithRed:0.615686275 green:0.615686275 blue:0.615686275 alpha:1.0];
  qword_100157628 = (uint64_t)result;
  return result;
}

id sub_10001BB84(double a1, double a2, double a3, double a4)
{
  uint64_t v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v11 = OBJC_IVAR____TtC16MusicRecognition20AmbientListeningView_listeningLayerView;
  id v12 = objc_allocWithZone((Class)UIView);
  uint64_t v13 = v4;
  *(void *)&v5[v11] = [v12 initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v14 = OBJC_IVAR____TtC16MusicRecognition20AmbientListeningView_listeningLayer;
  *(void *)&v13[v14] = [objc_allocWithZone((Class)SHListeningLayer) initWithIntroAnimation:0 useCustomCompatibleBackground:1];
  uint64_t v15 = OBJC_IVAR____TtC16MusicRecognition20AmbientListeningView_listeningLabel;
  *(void *)&v13[v15] = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v16 = OBJC_IVAR____TtC16MusicRecognition20AmbientListeningView_cancelButton;
  *(void *)&v13[v16] = [objc_allocWithZone((Class)UIButton) initWithFrame:0.0, 0.0, 0.0, 0.0];

  v19.receiver = v13;
  v19.super_class = ObjectType;
  id v17 = [super initWithFrame:a1, a2, a3, a4];
  sub_10001BCF0();

  return v17;
}

void sub_10001BCF0()
{
  uint64_t v1 = v0;
  [v0 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC16MusicRecognition20AmbientListeningView_listeningLayerView];
  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v3 = [v2 layer];
  id v56 = *(id *)&v1[OBJC_IVAR____TtC16MusicRecognition20AmbientListeningView_listeningLayer];
  [v3 addSublayer:];

  [v1 addSubview:v2];
  uint64_t v4 = *(void **)&v1[OBJC_IVAR____TtC16MusicRecognition20AmbientListeningView_listeningLabel];
  [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v1 addSubview:v4];
  id v5 = [self systemFontOfSize:62.0 weight:UIFontWeightSemibold];
  [v4 setFont:v5];

  id v6 = [self whiteColor];
  [v4 setTextColor:v6];

  id v7 = [self mainBundle];
  v8._countAndFlagsBits = 0xD00000000000001ELL;
  v59._object = (void *)0xE000000000000000;
  v8._object = (void *)0x80000001001182D0;
  v9._countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  v59._countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v8, (Swift::String_optional)0, (NSBundle)v7, v9, v59);

  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v4 setText:v10];

  if (qword_100156390 != -1) {
    swift_once();
  }
  NSString v11 = String._bridgeToObjectiveC()();
  [v4 setAccessibilityIdentifier:v11];

  id v12 = *(void **)&v1[OBJC_IVAR____TtC16MusicRecognition20AmbientListeningView_cancelButton];
  [v12 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v1 addSubview:v12];
  sub_1000060EC(&qword_100157030);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1001106A0;
  if (qword_100156058 != -1) {
    swift_once();
  }
  uint64_t v14 = (void *)qword_100157628;
  *(void *)(v13 + 32) = qword_100157628;
  uint64_t v15 = qword_100156050;
  id v16 = v14;
  if (v15 != -1) {
    swift_once();
  }
  id v17 = (void *)qword_100157620;
  *(void *)(v13 + 40) = qword_100157620;
  specialized Array._endMutation()();
  sub_1000150F8(0, (unint64_t *)&qword_100157678);
  id v18 = v17;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v20 = [self configurationWithPaletteColors:isa];

  id v21 = v20;
  NSString v22 = String._bridgeToObjectiveC()();
  id v57 = [self systemImageNamed:v22 withConfiguration:v21];

  uint64_t v55 = v21;
  [v12 setImage:v57 forState:0];
  [v12 setContentVerticalAlignment:3];
  [v12 setContentHorizontalAlignment:3];
  if (qword_100156398 != -1) {
    swift_once();
  }
  NSString v23 = String._bridgeToObjectiveC()();
  [v12 setAccessibilityIdentifier:v23];

  id v54 = self;
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_100110C50;
  id v25 = [v2 leadingAnchor];
  id v26 = [v1 leadingAnchor];
  id v27 = [v25 constraintEqualToAnchor:v26];

  *(void *)(v24 + 32) = v27;
  id v28 = [v2 centerYAnchor];
  id v29 = [v1 centerYAnchor];
  id v30 = [v28 constraintEqualToAnchor:v29];

  *(void *)(v24 + 40) = v30;
  id v31 = [v2 heightAnchor];
  id v32 = [v1 heightAnchor];
  id v33 = [v31 constraintEqualToAnchor:v32 multiplier:0.65];

  *(void *)(v24 + 48) = v33;
  id v34 = [v2 widthAnchor];
  id v35 = [v1 heightAnchor];
  id v36 = [v34 constraintEqualToAnchor:v35 multiplier:0.65];

  *(void *)(v24 + 56) = v36;
  id v37 = [v4 centerYAnchor];
  id v38 = [v1 centerYAnchor];
  id v39 = [v37 constraintEqualToAnchor:v38];

  *(void *)(v24 + 64) = v39;
  id v40 = [v4 trailingAnchor];
  id v41 = [v1 trailingAnchor];
  id v42 = [v40 constraintEqualToAnchor:v41 constant:-36.0];

  *(void *)(v24 + 72) = v42;
  id v43 = [v12 heightAnchor];
  id v44 = [v43 constraintEqualToConstant:54.0];

  *(void *)(v24 + 80) = v44;
  id v45 = [v12 widthAnchor];
  id v46 = [v45 constraintEqualToConstant:54.0];

  *(void *)(v24 + 88) = v46;
  id v47 = [v12 topAnchor];
  id v48 = [v1 topAnchor];
  id v49 = [v47 constraintEqualToAnchor:v48 constant:-26.0];

  *(void *)(v24 + 96) = v49;
  id v50 = [v12 trailingAnchor];
  id v51 = [v1 trailingAnchor];
  id v52 = [v50 constraintEqualToAnchor:v51];

  *(void *)(v24 + 104) = v52;
  specialized Array._endMutation()();
  sub_1000150F8(0, (unint64_t *)&qword_100157AD0);
  Class v53 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v54 activateConstraints:v53];

  [v56 startActiveListeningAnimation];
}

id sub_10001C620(void *a1)
{
  uint64_t v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v5 = OBJC_IVAR____TtC16MusicRecognition20AmbientListeningView_listeningLayerView;
  id v6 = objc_allocWithZone((Class)UIView);
  id v7 = v2;
  *(void *)&v2[v5] = [v6 initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v8 = OBJC_IVAR____TtC16MusicRecognition20AmbientListeningView_listeningLayer;
  *(void *)&v7[v8] = [objc_allocWithZone((Class)SHListeningLayer) initWithIntroAnimation:0 useCustomCompatibleBackground:1];
  uint64_t v9 = OBJC_IVAR____TtC16MusicRecognition20AmbientListeningView_listeningLabel;
  *(void *)&v7[v9] = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v10 = OBJC_IVAR____TtC16MusicRecognition20AmbientListeningView_cancelButton;
  *(void *)&v7[v10] = [objc_allocWithZone((Class)UIButton) initWithFrame:0.0, 0.0, 0.0, 0.0];

  v15.receiver = v7;
  v15.super_class = ObjectType;
  id v11 = [super initWithCoder:a1];
  id v12 = v11;
  if (v11)
  {
    id v13 = v11;
    sub_10001BCF0();
  }
  return v12;
}

uint64_t type metadata accessor for AmbientListeningView()
{
  return self;
}

uint64_t type metadata accessor for MusicRecognitionAmbientSceneDelegate()
{
  return self;
}

void sub_10001CA68(void *a1)
{
  uint64_t v2 = v1;
  if (qword_100156018 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_10000E808(v4, (uint64_t)qword_100164B38);
  id v5 = a1;
  id v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 138412290;
    id v10 = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v9 = v5;

    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Ambient scene will connect %@", v8, 0xCu);
    sub_1000060EC((uint64_t *)&unk_1001570F0);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v2 = v1;
    swift_slowDealloc();
  }
  else
  {
  }
  type metadata accessor for ActivityScene();
  uint64_t v11 = swift_dynamicCastClass();
  if (v11)
  {
    uint64_t v12 = v11;
    type metadata accessor for MusicRecognitionAmbientViewController();
    id v13 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    uint64_t v14 = v5;
    id v15 = [v13 init];
    uint64_t v16 = OBJC_IVAR____TtC16MusicRecognition36MusicRecognitionAmbientSceneDelegate_musicRecognitionAmbientViewController;
    id v17 = *(void **)(v2
                   + OBJC_IVAR____TtC16MusicRecognition36MusicRecognitionAmbientSceneDelegate_musicRecognitionAmbientViewController);
    *(void *)(v2
              + OBJC_IVAR____TtC16MusicRecognition36MusicRecognitionAmbientSceneDelegate_musicRecognitionAmbientViewController) = v15;

    id v18 = [objc_allocWithZone((Class)UIWindow) initWithWindowScene:v12];
    uint64_t v19 = OBJC_IVAR____TtC16MusicRecognition36MusicRecognitionAmbientSceneDelegate_window;
    id v20 = *(void **)(v2 + OBJC_IVAR____TtC16MusicRecognition36MusicRecognitionAmbientSceneDelegate_window);
    *(void *)(v2 + OBJC_IVAR____TtC16MusicRecognition36MusicRecognitionAmbientSceneDelegate_window) = v18;

    id v21 = *(void **)(v2 + v19);
    if (v21)
    {
      [v21 setRootViewController:*(void *)(v2 + v16)];
      NSString v22 = *(void **)(v2 + v19);
      if (v22)
      {
        id v23 = v22;
        [v23 makeKeyAndVisible];
      }
    }
  }
  else
  {
    uint64_t v14 = Logger.logObject.getter();
    os_log_type_t v24 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v14, v24))
    {
      id v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v25 = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, v24, "Unable to connect to ActivityScene", v25, 2u);
      swift_slowDealloc();
    }
  }
}

uint64_t type metadata accessor for DesignTimeMediaItem()
{
  return self;
}

uint64_t sub_10001CDB8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for ShortcutTileColor.blue(_:);
  uint64_t v3 = type metadata accessor for ShortcutTileColor();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

ValueMetadata *type metadata accessor for MusicRecognitionAppShortcuts()
{
  return &type metadata for MusicRecognitionAppShortcuts;
}

uint64_t sub_10001CE3C()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource();
  __chkstk_darwin(v0 - 8);
  id v45 = (char *)&v33 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = type metadata accessor for AppShortcutPhraseToken();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000060EC(&qword_1001576E0);
  uint64_t v7 = __chkstk_darwin(v6);
  id v41 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  id v38 = (char *)&v33 - v10;
  __chkstk_darwin(v9);
  uint64_t v11 = type metadata accessor for AppShortcut();
  uint64_t v43 = *(void *)(v11 - 8);
  uint64_t v44 = v11;
  __chkstk_darwin(v11);
  id v42 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_100025840();
  uint64_t v48 = v13;
  sub_1000060EC(&qword_1001576E8);
  uint64_t v14 = *(void *)(sub_1000060EC(&qword_1001576F0) - 8);
  unint64_t v15 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v39 = 2 * *(void *)(v14 + 72);
  uint64_t v16 = swift_allocObject();
  uint64_t v40 = v16;
  *(_OWORD *)(v16 + 16) = xmmword_100110CD0;
  unint64_t v17 = v16 + v15;
  unint64_t v18 = sub_10001D3BC();
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v19._countAndFlagsBits = 0x206E69676542;
  v19._object = (void *)0xE600000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v19);
  unsigned int v37 = enum case for AppShortcutPhraseToken.applicationName(_:);
  id v36 = *(void (**)(char *))(v3 + 104);
  v36(v5);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)();
  id v35 = *(void (**)(char *, uint64_t))(v3 + 8);
  uint64_t v46 = v3 + 8;
  v35(v5, v2);
  v20._countAndFlagsBits = 0;
  v20._object = (void *)0xE000000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v20);
  unint64_t v33 = v18;
  unint64_t v34 = v17;
  AppShortcutPhrase.init(stringInterpolation:)();
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v21._countAndFlagsBits = 0x207472617453;
  v21._object = (void *)0xE600000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v21);
  uint64_t v22 = v37;
  id v23 = (void (*)(char *, uint64_t, uint64_t))v36;
  ((void (*)(char *, void, uint64_t))v36)(v5, v37, v2);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)();
  os_log_type_t v24 = v35;
  v35(v5, v2);
  v25._countAndFlagsBits = 0;
  v25._object = (void *)0xE000000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v25);
  AppShortcutPhrase.init(stringInterpolation:)();
  v39 += v34;
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v26._countAndFlagsBits = 0;
  v26._object = (void *)0xE000000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v26);
  v23(v5, v22, v2);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)();
  v24(v5, v2);
  v27._countAndFlagsBits = 0;
  v27._object = (void *)0xE000000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v27);
  AppShortcutPhrase.init(stringInterpolation:)();
  LocalizedStringResource.init(stringLiteral:)();
  id v28 = v42;
  AppShortcut.init<A>(intent:phrases:shortTitle:systemImageName:)();
  uint64_t v29 = static AppShortcutsBuilder.buildExpression(_:)();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v28, v44);
  sub_1000060EC(&qword_100157700);
  uint64_t v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_100110670;
  *(void *)(v30 + 32) = v29;
  uint64_t v31 = static AppShortcutsBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v31;
}

unint64_t sub_10001D3BC()
{
  unint64_t result = qword_1001576F8;
  if (!qword_1001576F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001576F8);
  }
  return result;
}

uint64_t sub_10001D414()
{
  uint64_t result = type metadata accessor for LocalizedStringResource();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for NavigationPath();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_checkMetadataState();
      if (v3 <= 0x3F)
      {
        uint64_t result = type metadata accessor for ObservationRegistrar();
        if (v4 <= 0x3F) {
          return swift_initClassMetadata2();
        }
      }
    }
  }
  return result;
}

uint64_t sub_10001D594(char a1)
{
  if (a1)
  {
    if (a1 == 1)
    {
      id v1 = [self mainBundle];
      unint64_t v2 = 0xD000000000000016;
      unint64_t v9 = 0xE000000000000000;
      unint64_t v3 = "SHAZAM_SORT_TYPE_TITLE";
    }
    else
    {
      id v1 = [self mainBundle];
      unint64_t v2 = 0xD000000000000019;
      unint64_t v9 = 0xE000000000000000;
      unint64_t v3 = "SHAZAM_SORT_TYPE_SUBTITLE";
    }
    unint64_t v4 = (unint64_t)(v3 - 32) | 0x8000000000000000;
  }
  else
  {
    id v1 = [self mainBundle];
    unint64_t v9 = 0xE000000000000000;
    unint64_t v4 = 0x8000000100118560;
    unint64_t v2 = 0xD000000000000015;
  }
  v5._uint64_t countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  uint64_t v6 = 0;
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v2, (Swift::String_optional)0, (NSBundle)v1, v5, *(Swift::String *)(&v9 - 1))._countAndFlagsBits;

  return countAndFlagsBits;
}

BOOL sub_10001D6D4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

Swift::Int sub_10001D6E8()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_10001D730()
{
  Hasher._combine(_:)(*v0);
}

Swift::Int sub_10001D75C()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_10001D7A0(void *a1@<X8>)
{
  *a1 = &off_100148FD0;
}

void sub_10001D7B0(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_10001D7BC()
{
  return sub_10001D594(*v0);
}

uint64_t sub_10001D7C4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return (*a1 == *a2) & (a2[1] ^ a1[1] ^ 1u);
}

uint64_t sub_10001D7EC()
{
  uint64_t v0 = sub_100021BB8();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_10001D824()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_10001D8DC()
{
  return ObservationRegistrar.access<A, B>(_:keyPath:)();
}

uint64_t sub_10001D980()
{
  return ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
}

uint64_t sub_10001DA5C()
{
  swift_getKeyPath();
  sub_10001D8DC();
  swift_release();
  return *(unsigned __int8 *)(v0 + qword_100157718);
}

uint64_t sub_10001DAD8()
{
  return swift_release();
}

uint64_t sub_10001DB84@<X0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  sub_10001D8DC();
  swift_release();
  uint64_t v3 = v1 + qword_100157720;
  swift_beginAccess();
  uint64_t v4 = type metadata accessor for NavigationPath();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_10001DC5C(uint64_t a1)
{
  swift_getKeyPath();
  sub_10001D980();
  swift_release();
  uint64_t v2 = type metadata accessor for NavigationPath();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_10001DD3C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + qword_100157720;
  swift_beginAccess();
  uint64_t v4 = type metadata accessor for NavigationPath();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(v3, a2, v4);
  return swift_endAccess();
}

uint64_t sub_10001DDD8()
{
  return swift_release();
}

uint64_t sub_10001DE9C()
{
  sub_100021C60((uint64_t)&unk_100110F00, &qword_100157728);

  return swift_retain();
}

uint64_t sub_10001DED4()
{
  return swift_release();
}

uint64_t sub_10001DF84()
{
  unint64_t v1 = (*(uint64_t (**)(void))(*(void *)(*(void *)v0 + 88) + 8))(*(void *)(*(void *)v0 + 80));
  if (v1 >> 62) {
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
  }
  else {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_10001E034()
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)v0 + 88) + 24))(*(void *)(*(void *)v0 + 80)) & 1;
}

id sub_10001E0B0()
{
  id result = [self sharedInstance];
  if (result)
  {
    unint64_t v1 = result;
    id v2 = [result primaryAccountAltDSID];

    if (!v2) {
      return 0;
    }
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    id v3 = objc_allocWithZone((Class)CDPUIDeviceToDeviceEncryptionFlowContext);
    NSString v4 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v5 = [v3 initWithAltDSID:v4];

    [v5 setDeviceToDeviceEncryptionUpgradeType:0];
    [v5 setDeviceToDeviceEncryptionUpgradeUIStyle:1];
    id v6 = [self mainBundle];
    v10._object = (void *)0xE000000000000000;
    v7._object = (void *)0x80000001001184E0;
    v7._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
    v8._uint64_t countAndFlagsBits = 0;
    v8._object = (void *)0xE000000000000000;
    v10._uint64_t countAndFlagsBits = 0;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v7, (Swift::String_optional)0, (NSBundle)v6, v8, v10);

    NSString v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v5 setFeatureName:v9];

    return v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void *sub_10001E250()
{
  uint64_t v0 = (void *)sub_100021C60((uint64_t)&unk_100110EA0, qword_100157730);
  id v1 = v0;
  return v0;
}

void sub_10001E28C(void *a1)
{
}

uint64_t sub_10001E338()
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)v0 + 88) + 32))(*(void *)(*(void *)v0 + 80)) & 1;
}

uint64_t sub_10001E3B4(__int16 a1)
{
  char v2 = a1;
  unsigned int v40 = a1 & 0x100;
  uint64_t v3 = *v1;
  uint64_t v4 = type metadata accessor for String.StandardComparator();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  Swift::String v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v11 = (char *)&v37 - v10;
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v37 - v12;
  uint64_t v14 = sub_1000060EC(&qword_1001577F0);
  uint64_t v15 = __chkstk_darwin(v14);
  unint64_t v17 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v15);
  Swift::String v21 = (char *)&v37 - v20;
  if (v2)
  {
    uint64_t v38 = v19;
    uint64_t v39 = v18;
    unint64_t v41 = (*(uint64_t (**)(void))(*(void *)(v3 + 88) + 8))(*(void *)(v3 + 80));
    swift_getKeyPath();
    static String.StandardComparator.localizedStandard.getter();
    if (v2 == 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v11, v8, v4);
      SortDescriptor.init(_:comparator:order:)();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
      sub_1000060EC(&qword_1001577F8);
      sub_100006480(&qword_100157800, &qword_1001577F8);
      sub_100006480(&qword_100157808, &qword_1001577F0);
      uint64_t v22 = v39;
      unint64_t v23 = Sequence.sorted<A>(using:)();
      (*(void (**)(char *, uint64_t))(v38 + 8))(v17, v22);
      swift_bridgeObjectRelease();
      os_log_type_t v24 = &selRef_title;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v11, v13, v4);
      SortDescriptor.init(_:comparator:order:)();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v13, v4);
      sub_1000060EC(&qword_1001577F8);
      sub_100006480(&qword_100157800, &qword_1001577F8);
      sub_100006480(&qword_100157808, &qword_1001577F0);
      uint64_t v30 = v39;
      unint64_t v23 = Sequence.sorted<A>(using:)();
      (*(void (**)(char *, uint64_t))(v38 + 8))(v21, v30);
      swift_bridgeObjectRelease();
      os_log_type_t v24 = &selRef_subtitle;
    }
    uint64_t v27 = sub_100020CE8(v23, (SEL *)v24);
  }
  else
  {
    uint64_t v25 = (*(uint64_t (**)(void))(*(void *)(v3 + 88) + 8))(*(void *)(v3 + 80));
    if (v25 < 0 || (v25 & 0x4000000000000000) != 0)
    {
      unint64_t v36 = swift_bridgeObjectRetain();
      unint64_t v26 = (unint64_t)sub_100021234(v36);
      swift_bridgeObjectRelease();
    }
    else
    {
      unint64_t v26 = v25 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
    }
    unint64_t v41 = v26;
    sub_1000211B0((uint64_t *)&v41, v40);
    swift_bridgeObjectRelease();
    uint64_t v27 = sub_100020828(v41);
  }
  uint64_t v31 = v27;
  uint64_t v32 = v28;
  uint64_t v33 = v29;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v34 = sub_10001EFA4(v31, v32, v33);
  swift_release_n();
  swift_release_n();
  swift_release_n();
  return v34;
}

uint64_t sub_10001E918@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v44 = a2;
  uint64_t v3 = type metadata accessor for Date.FormatStyle.Symbol.Year();
  uint64_t v42 = *(void *)(v3 - 8);
  uint64_t v43 = v3;
  __chkstk_darwin(v3);
  unint64_t v41 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Date.FormatStyle.Symbol.Month();
  uint64_t v37 = *(void *)(v5 - 8);
  uint64_t v38 = v5;
  __chkstk_darwin(v5);
  unint64_t v36 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Date.FormatStyle();
  uint64_t v39 = *(void *)(v7 - 8);
  uint64_t v40 = v7;
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v13 = (char *)&v34 - v12;
  __chkstk_darwin(v11);
  id v35 = (char *)&v34 - v14;
  uint64_t v15 = sub_1000060EC(&qword_100157818);
  __chkstk_darwin(v15 - 8);
  unint64_t v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for Date();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v34 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  os_log_type_t v24 = (char *)&v34 - v23;
  id v25 = [*a1 creationDate];
  uint64_t v45 = v18;
  if (!v25)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v17, 1, 1, v18);
    goto LABEL_5;
  }
  unint64_t v26 = v25;
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
  v27(v17, v22, v18);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v17, 0, 1, v18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1)
  {
LABEL_5:
    static Date.now.getter();
    sub_1000063D0((uint64_t)v17, &qword_100157818);
    goto LABEL_6;
  }
  v27(v24, v17, v45);
LABEL_6:
  static FormatStyle<>.dateTime.getter();
  uint64_t v28 = v36;
  static Date.FormatStyle.Symbol.Month.abbreviated.getter();
  Date.FormatStyle.month(_:)();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v28, v38);
  uint64_t v29 = v40;
  uint64_t v30 = *(void (**)(char *, uint64_t))(v39 + 8);
  v30(v10, v40);
  uint64_t v31 = v41;
  static Date.FormatStyle.Symbol.Year.defaultDigits.getter();
  uint64_t v32 = v35;
  Date.FormatStyle.year(_:)();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v31, v43);
  v30(v13, v29);
  sub_100024020(&qword_100157820, (void (*)(uint64_t))&type metadata accessor for Date.FormatStyle);
  Date.formatted<A>(_:)();
  v30(v32, v29);
  return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v24, v45);
}

void sub_10001EE04(id *a1@<X0>, SEL *a2@<X3>, uint64_t *a3@<X8>)
{
  id v4 = [*a1 *a2];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v8 = v7;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v8 = 0;
  }
  *a3 = v6;
  a3[1] = v8;
}

uint64_t sub_10001EE68@<X0>(id *a1@<X0>, SEL *a2@<X1>, uint64_t *a3@<X8>)
{
  id v4 = [*a1 *a2];
  if (v4)
  {
    uint64_t v5 = v4;
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    sub_10000E0F0();
    StringProtocol.precomposedStringWithCanonicalMapping.getter();
    swift_bridgeObjectRelease();
    uint64_t v6 = StringProtocol.localizedUppercase.getter();
    unint64_t v8 = v7;
    swift_bridgeObjectRelease();
    sub_100021FC0(1, v6, v8, v9);
    swift_bridgeObjectRelease();
  }
  else
  {
    Substring.init(_:)();
  }
  uint64_t v10 = static String._fromSubstring(_:)();
  uint64_t v12 = v11;
  uint64_t result = swift_bridgeObjectRelease();
  *a3 = v10;
  a3[1] = v12;
  return result;
}

uint64_t sub_10001EFA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v18 = *(void *)(a3 + 16);
  if (v18)
  {
    uint64_t v17 = *(void *)(a2 + 16);
    swift_retain();
    swift_retain();
    uint64_t result = swift_retain();
    uint64_t v6 = 0;
    unint64_t v7 = (uint64_t *)(a2 + 40);
    unint64_t v8 = _swiftEmptyArrayStorage;
    while (1)
    {
      if (v17 == v6)
      {
        __break(1u);
        return result;
      }
      uint64_t v9 = *(v7 - 1);
      uint64_t v10 = *v7;
      unint64_t v11 = *(void *)(a3 + 8 * v6 + 32);
      if (v11 >> 62)
      {
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v16)
        {
LABEL_8:
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0)
          {
            uint64_t result = (uint64_t)sub_10005E608(0, v8[2] + 1, 1, v8);
            unint64_t v8 = (void *)result;
          }
          unint64_t v14 = v8[2];
          unint64_t v13 = v8[3];
          if (v14 >= v13 >> 1)
          {
            uint64_t result = (uint64_t)sub_10005E608((void *)(v13 > 1), v14 + 1, 1, v8);
            unint64_t v8 = (void *)result;
          }
          v8[2] = v14 + 1;
          uint64_t v15 = &v8[3 * v14];
          v15[4] = v9;
          v15[5] = v10;
          v15[6] = v11;
          goto LABEL_4;
        }
      }
      else
      {
        uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v12) {
          goto LABEL_8;
        }
      }
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
LABEL_4:
      ++v6;
      v7 += 2;
      if (v18 == v6)
      {
        swift_release();
        swift_release();
        swift_release();
        return (uint64_t)v8;
      }
    }
  }
  return (uint64_t)_swiftEmptyArrayStorage;
}

uint64_t sub_10001F170(uint64_t a1)
{
  char v2 = v1;
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(*v1 + 80);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(a1);
  unint64_t v7 = (char *)&v23 - v6;
  uint64_t v8 = sub_1000060EC(&qword_100157038);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100021C60((uint64_t)&unk_100110EA0, qword_100157730);
  if (v11)
  {
    uint64_t v12 = (void *)v11;
    uint64_t v13 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v10, 1, 1, v13);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, (uint64_t)v2 + *(void *)(*v2 + 184), v4);
    type metadata accessor for MainActor();
    id v14 = v12;
    uint64_t v15 = static MainActor.shared.getter();
    unint64_t v16 = (*(unsigned __int8 *)(v5 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v17 = (char *)swift_allocObject();
    *((void *)v17 + 2) = v15;
    *((void *)v17 + 3) = &protocol witness table for MainActor;
    *((void *)v17 + 4) = v4;
    *((void *)v17 + 5) = *(void *)(v3 + 88);
    *((void *)v17 + 6) = v14;
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v17[v16], v7, v4);
    sub_1000D5678((uint64_t)v10, (uint64_t)&unk_1001577C0, (uint64_t)v17);
    swift_release();

    return sub_10001DAD8();
  }
  else
  {
    if (qword_100156018 != -1) {
      swift_once();
    }
    uint64_t v19 = type metadata accessor for Logger();
    sub_10000E808(v19, (uint64_t)qword_100164B38);
    uint64_t v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v22 = 0;
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "Failed to perform encryption repair, missing context", v22, 2u);
      swift_slowDealloc();
    }

    return sub_10001DAD8();
  }
}

uint64_t sub_10001F4D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[18] = a6;
  v7[19] = a7;
  v7[16] = a4;
  v7[17] = a5;
  uint64_t v8 = type metadata accessor for Logger();
  v7[20] = v8;
  v7[21] = *(void *)(v8 - 8);
  v7[22] = swift_task_alloc();
  type metadata accessor for MainActor();
  v7[23] = static MainActor.shared.getter();
  uint64_t v10 = dispatch thunk of Actor.unownedExecutor.getter();
  v7[24] = v10;
  v7[25] = v9;
  return _swift_task_switch(sub_10001F5C8, v10, v9);
}

uint64_t sub_10001F5C8()
{
  id v1 = [objc_allocWithZone((Class)CDPUIDeviceToDeviceEncryptionHelper) initWithContext:v0[16]];
  v0[26] = v1;
  v0[2] = v0;
  v0[7] = v0 + 29;
  v0[3] = sub_10001F6EC;
  uint64_t v2 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_10001FD78;
  v0[13] = &unk_10014A170;
  v0[14] = v2;
  [v1 performDeviceToDeviceEncryptionStateRepairWithCompletion:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_10001F6EC()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 216) = v2;
  uint64_t v3 = *(void *)(v1 + 200);
  uint64_t v4 = *(void *)(v1 + 192);
  if (v2) {
    uint64_t v5 = sub_10001FCF8;
  }
  else {
    uint64_t v5 = sub_10001F81C;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_10001F81C()
{
  uint64_t v26 = v0;
  int v1 = *(unsigned __int8 *)(v0 + 232);
  if (qword_100156018 != -1) {
    swift_once();
  }
  uint64_t v3 = *(void *)(v0 + 168);
  uint64_t v2 = *(void *)(v0 + 176);
  uint64_t v4 = *(void *)(v0 + 160);
  uint64_t v5 = sub_10000E808(v4, (uint64_t)qword_100164B38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v5, v4);
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  BOOL v8 = os_log_type_enabled(v6, v7);
  uint64_t v9 = *(void *)(v0 + 168);
  uint64_t v10 = *(void *)(v0 + 176);
  uint64_t v11 = *(void *)(v0 + 160);
  if (v8)
  {
    uint64_t v24 = *(void *)(v0 + 160);
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136315138;
    uint64_t v25 = v13;
    if (v1) {
      uint64_t v14 = 0x6564656563637573;
    }
    else {
      uint64_t v14 = 0x64656C696166;
    }
    uint64_t v22 = v10;
    int v15 = v1;
    if (v1) {
      unint64_t v16 = 0xE900000000000064;
    }
    else {
      unint64_t v16 = 0xE600000000000000;
    }
    *(void *)(v0 + 120) = sub_1000CB67C(v14, v16, &v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Encryption repair %s", v12, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v22, v24);
    if (!v15) {
      goto LABEL_11;
    }
  }
  else
  {

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v10, v11);
    if (!v1)
    {
LABEL_11:

      swift_release();
      swift_task_dealloc();
      uint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
      return v17();
    }
  }
  uint64_t v23 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)(v0 + 152) + 48)
                                                 + **(int **)(*(void *)(v0 + 152) + 48));
  uint64_t v19 = (void *)swift_task_alloc();
  *(void *)(v0 + 224) = v19;
  void *v19 = v0;
  v19[1] = sub_10001FB60;
  uint64_t v21 = *(void *)(v0 + 144);
  uint64_t v20 = *(void *)(v0 + 152);
  return v23(v21, v20);
}

uint64_t sub_10001FB60()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 200);
  uint64_t v3 = *(void *)(v1 + 192);
  return _swift_task_switch(sub_10001FC80, v3, v2);
}

uint64_t sub_10001FC80()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10001FCF8()
{
  uint64_t v1 = *(void **)(v0 + 208);
  swift_release();
  swift_willThrow();

  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10001FD78(uint64_t a1, char a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    sub_1000060EC(&qword_1001577C8);
    uint64_t v5 = swift_allocError();
    *uint64_t v6 = a3;
    id v7 = a3;
    return _swift_continuation_throwingResumeWithError(v3, v5);
  }
  else
  {
    **(unsigned char **)(*(void *)(v3 + 64) + 40) = a2;
    return _swift_continuation_throwingResume(v3);
  }
}

uint64_t sub_10001FE2C()
{
  uint64_t v0 = type metadata accessor for NavigationPath();
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  NavigationPath.init()();
  return sub_10001DC5C((uint64_t)v2);
}

uint64_t sub_10001FEA0(char a1)
{
  uint64_t v3 = type metadata accessor for LocalizedStringResource();
  __chkstk_darwin(v3);
  if (a1)
  {
    (*(void (**)(char *, uint64_t))(v5 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v1 + qword_100164B88);
    String.init(localized:)();
  }
  return sub_10001D824();
}

uint64_t sub_10001FF80(void *a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  uint64_t v28 = a1;
  uint64_t v23 = *(void *)(v5 + 80);
  uint64_t v24 = *(void *)(v5 + 88);
  swift_getKeyPath();
  sub_10001D8DC();
  swift_release();
  uint64_t v21 = v23;
  uint64_t v22 = v24;
  swift_getKeyPath();
  swift_getWitnessTable();
  ObservationRegistrar.willSet<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  sub_100023F6C();
  sub_100024020(&qword_1001577E8, (void (*)(uint64_t))sub_100023F6C);
  NavigationPath.append<A>(_:)();
  swift_endAccess();
  sub_10001DDD8();
  swift_getKeyPath();
  v25[0] = a2;
  sub_100024020((unint64_t *)&qword_100156898, (void (*)(uint64_t))type metadata accessor for ViewConfiguration);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v6 = *(void *)(a2 + 40);
  uint64_t v20 = *(void *)(a2 + 32);
  swift_getKeyPath();
  v25[0] = a2;
  swift_bridgeObjectRetain();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  char v7 = *(unsigned char *)(a2 + 48);
  swift_getKeyPath();
  v25[0] = a2;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  char v8 = *(unsigned char *)(a2 + 16);
  if (qword_100156550 != -1) {
    swift_once();
  }
  unsigned int v9 = 0x2000Bu >> (8 * v8);
  uint64_t v10 = qword_100164EA8;
  uint64_t v26 = type metadata accessor for MusicSubscriptionStatusController();
  uint64_t v27 = &off_10014D500;
  v25[0] = v10;
  type metadata accessor for TrackPageViewModel();
  uint64_t v11 = swift_allocObject();
  uint64_t v12 = sub_1000095E8((uint64_t)v25, v26);
  __chkstk_darwin(v12);
  uint64_t v14 = (uint64_t *)((char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v15 + 16))(v14);
  uint64_t v16 = *v14;
  swift_retain_n();
  id v17 = a1;
  sub_100009638(a1, v20, v6, v7, v16, v9, v11);

  _s16MusicRecognition11AnyPlaylistVwxx_0((uint64_t)v25);
  swift_release();
  return sub_10001DED4();
}

uint64_t *sub_10002038C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = (uint64_t)v0 + qword_100164B88;
  uint64_t v3 = type metadata accessor for LocalizedStringResource();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = (uint64_t)v0 + qword_100157720;
  uint64_t v5 = type metadata accessor for NavigationPath();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_release();

  (*(void (**)(uint64_t))(*(void *)(*(void *)(v1 + 80) - 8) + 8))((uint64_t)v0 + *(void *)(*v0 + 184));
  uint64_t v6 = (uint64_t)v0 + *(void *)(*v0 + 192);
  uint64_t v7 = type metadata accessor for ObservationRegistrar();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  return v0;
}

uint64_t sub_100020598()
{
  sub_10002038C();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v1, v2);
}

uint64_t type metadata accessor for LibraryListViewModel()
{
  return sub_100020608();
}

uint64_t sub_100020608()
{
  return swift_getGenericMetadata();
}

_WORD *initializeBufferWithCopyOfBuffer for HistorySortSelection(_WORD *result, _WORD *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for HistorySortSelection(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 65281 <= 0xFFFEFFFF) {
    int v2 = 2;
  }
  else {
    int v2 = 4;
  }
  if (a2 + 65281 < 0xFF0000) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 16)) - 65281;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 16)) - 65281;
    }
    int v4 = *((unsigned __int8 *)a1 + 2);
    if (*((unsigned char *)a1 + 2)) {
      return (*a1 | (v4 << 16)) - 65281;
    }
  }
LABEL_17:
  unsigned int v6 = *((unsigned __int8 *)a1 + 1);
  BOOL v7 = v6 >= 2;
  int v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for HistorySortSelection(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65281 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65281 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 16) + 1;
    *(_WORD *)uint64_t result = a2 - 255;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000207B4);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)(result + 1) = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HistorySortSelection()
{
  return &type metadata for HistorySortSelection;
}

uint64_t sub_1000207F4()
{
  return 16;
}

__n128 sub_100020800(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_10002080C()
{
  return sub_10001DD3C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_100020828(unint64_t a1)
{
  uint64_t v1 = a1;
  uint64_t v37 = 0;
  uint64_t v38 = _swiftEmptyArrayStorage;
  if (a1 >> 62) {
    goto LABEL_71;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  while (v2)
  {
    unint64_t v3 = 0;
    unint64_t v31 = v1 & 0xC000000000000001;
    uint64_t v29 = v1 & 0xFFFFFFFFFFFFFF8;
    uint64_t v28 = v1 + 32;
    unsigned int v4 = _swiftEmptyArrayStorage;
    uint64_t v30 = v2;
    while (1)
    {
      if (v31)
      {
        id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (v3 >= *(void *)(v29 + 16)) {
          goto LABEL_70;
        }
        id v5 = *(id *)(v28 + 8 * v3);
      }
      unsigned int v6 = v5;
      if (__OFADD__(v3++, 1)) {
        break;
      }
      id v36 = v5;
      sub_10001E918(&v36, (uint64_t)&v34);
      if (v33)
      {
        swift_bridgeObjectRelease_n();
        swift_release();

        swift_release();
        return swift_release();
      }
      uint64_t v9 = v34;
      uint64_t v8 = v35;
      uint64_t v11 = v37;
      uint64_t v10 = v38;
      uint64_t v1 = v38[2];
      uint64_t v32 = v6;
      if (v37)
      {
        swift_retain();
        swift_retain();
        unint64_t v12 = sub_1000216F0(v9, v8, (uint64_t)(v10 + 4), v1, (void *)(v11 + 16));
        uint64_t v1 = v13;
        swift_release();
        swift_release();
        uint64_t v14 = v8;
        if (v1) {
          goto LABEL_27;
        }
      }
      else
      {
        if (!v1)
        {
          uint64_t v14 = v35;
LABEL_27:
          sub_10002132C(v9, v14);
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v39 = v4;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_10006A584(0, v4[2] + 1, 1);
            unsigned int v4 = v39;
          }
          uint64_t v16 = v32;
          unint64_t v21 = v4[2];
          unint64_t v20 = v4[3];
          if (v21 >= v20 >> 1)
          {
            sub_10006A584(v20 > 1, v21 + 1, 1);
            unsigned int v4 = v39;
          }
          v4[2] = v21 + 1;
          uint64_t v22 = &v4[v21];
          v22[4] = _swiftEmptyArrayStorage;
          uint64_t v1 = (uint64_t)(v22 + 4);
          id v23 = v32;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          uint64_t v18 = *(void *)v1;
          goto LABEL_32;
        }
        uint64_t v14 = v35;
        BOOL v15 = v38[4] == v34 && v38[5] == v35;
        if (v15 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          unint64_t v12 = 0;
        }
        else
        {
          if (v1 == 1) {
            goto LABEL_27;
          }
          if (v10[6] == v9 && v10[7] == v8 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            unint64_t v12 = 1;
          }
          else
          {
            if (v1 == 2) {
              goto LABEL_27;
            }
            if (v10[8] == v9 && v10[9] == v8 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
            {
              unint64_t v12 = 2;
            }
            else
            {
              if (v1 == 3) {
                goto LABEL_27;
              }
              if (v10[10] == v9 && v10[11] == v8 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
              {
                unint64_t v12 = 3;
              }
              else
              {
                if (v1 == 4) {
                  goto LABEL_27;
                }
                if ((v10[12] != v9 || v10[13] != v8) && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
                {
                  uint64_t v24 = v10 + 15;
                  uint64_t v25 = 5;
                  while (v1 != v25)
                  {
                    if (*(v24 - 1) == v9 && *v24 == v8)
                    {
                      unint64_t v12 = v25;
                      goto LABEL_20;
                    }
                    unint64_t v12 = v25++;
                    v24 += 2;
                    if (_stringCompareWithSmolCheck(_:_:expecting:)()) {
                      goto LABEL_20;
                    }
                  }
                  goto LABEL_27;
                }
                unint64_t v12 = 4;
              }
            }
          }
        }
      }
LABEL_20:
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unsigned int v4 = (void *)sub_100063684(v4);
      }
      uint64_t v16 = v32;
      if ((v12 & 0x8000000000000000) != 0) {
        goto LABEL_68;
      }
      if (v12 >= v4[2]) {
        goto LABEL_69;
      }
      uint64_t v1 = (uint64_t)&v4[v12 + 4];
      id v17 = v32;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      uint64_t v18 = *(void *)v1;
LABEL_32:
      if (*(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();

      swift_bridgeObjectRelease();
      if (v3 == v30)
      {
        swift_bridgeObjectRelease_n();
        return v37;
      }
    }
    __break(1u);
LABEL_68:
    __break(1u);
LABEL_69:
    __break(1u);
LABEL_70:
    __break(1u);
LABEL_71:
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
  }
  swift_bridgeObjectRelease_n();
  return 0;
}

uint64_t sub_100020CE8(unint64_t a1, SEL *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = a1;
  uint64_t v38 = 0;
  uint64_t v39 = _swiftEmptyArrayStorage;
  if (a1 >> 62) {
    goto LABEL_69;
  }
  uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  while (v5)
  {
    unint64_t v6 = 0;
    unint64_t v32 = v4 & 0xC000000000000001;
    uint64_t v30 = v4 & 0xFFFFFFFFFFFFFF8;
    uint64_t v29 = v4 + 32;
    BOOL v7 = _swiftEmptyArrayStorage;
    uint64_t v31 = v5;
    while (1)
    {
      if (v32)
      {
        id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (v6 >= *(void *)(v30 + 16)) {
          goto LABEL_68;
        }
        id v8 = *(id *)(v29 + 8 * v6);
      }
      uint64_t v9 = v8;
      if (__OFADD__(v6++, 1)) {
        break;
      }
      id v37 = v8;
      sub_10001EE68(&v37, a2, &v35);
      if (v3)
      {
        swift_bridgeObjectRelease_n();
        swift_release();

        swift_release();
        return swift_release();
      }
      uint64_t v34 = v9;
      uint64_t v11 = v35;
      uint64_t v3 = v36;
      uint64_t v13 = v38;
      unint64_t v12 = v39;
      uint64_t v4 = v39[2];
      if (v38)
      {
        swift_retain();
        swift_retain();
        unint64_t v14 = sub_1000216F0(v11, v3, (uint64_t)(v12 + 4), v4, (void *)(v13 + 16));
        uint64_t v4 = v15;
        swift_release();
        swift_release();
        if (v4) {
          goto LABEL_27;
        }
      }
      else
      {
        if (!v4) {
          goto LABEL_27;
        }
        BOOL v16 = v39[4] == v35 && v39[5] == v36;
        if (v16 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          unint64_t v14 = 0;
        }
        else
        {
          if (v4 == 1) {
            goto LABEL_27;
          }
          if (v12[6] == v11 && v12[7] == v3 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            unint64_t v14 = 1;
          }
          else
          {
            if (v4 == 2) {
              goto LABEL_27;
            }
            if (v12[8] == v11 && v12[9] == v3 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
            {
              unint64_t v14 = 2;
            }
            else
            {
              if (v4 == 3) {
                goto LABEL_27;
              }
              if (v12[10] == v11 && v12[11] == v3 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
              {
                unint64_t v14 = 3;
              }
              else
              {
                if (v4 == 4) {
                  goto LABEL_27;
                }
                if ((v12[12] != v11 || v12[13] != v3) && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
                {
                  uint64_t v25 = v12 + 15;
                  uint64_t v26 = 5;
                  while (v4 != v26)
                  {
                    if (*(v25 - 1) == v11 && *v25 == v3)
                    {
                      unint64_t v14 = v26;
                      goto LABEL_20;
                    }
                    unint64_t v14 = v26++;
                    v25 += 2;
                    if (_stringCompareWithSmolCheck(_:_:expecting:)()) {
                      goto LABEL_20;
                    }
                  }
LABEL_27:
                  sub_10002132C(v11, v3);
                  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                  uint64_t v40 = v7;
                  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                  {
                    sub_10006A584(0, v7[2] + 1, 1);
                    BOOL v7 = v40;
                  }
                  id v17 = v34;
                  unint64_t v22 = v7[2];
                  unint64_t v21 = v7[3];
                  if (v22 >= v21 >> 1)
                  {
                    sub_10006A584(v21 > 1, v22 + 1, 1);
                    BOOL v7 = v40;
                  }
                  v7[2] = v22 + 1;
                  id v23 = &v7[v22];
                  v23[4] = _swiftEmptyArrayStorage;
                  uint64_t v4 = (uint64_t)(v23 + 4);
                  id v24 = v34;
                  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
                  uint64_t v19 = *(void *)v4;
                  goto LABEL_32;
                }
                unint64_t v14 = 4;
              }
            }
          }
        }
      }
LABEL_20:
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        BOOL v7 = (void *)sub_100063684(v7);
      }
      id v17 = v34;
      if ((v14 & 0x8000000000000000) != 0) {
        goto LABEL_66;
      }
      if (v14 >= v7[2]) {
        goto LABEL_67;
      }
      uint64_t v4 = (uint64_t)&v7[v14 + 4];
      id v18 = v34;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      uint64_t v19 = *(void *)v4;
LABEL_32:
      if (*(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();

      swift_bridgeObjectRelease();
      uint64_t v3 = 0;
      if (v6 == v31)
      {
        swift_bridgeObjectRelease_n();
        return v38;
      }
    }
    __break(1u);
LABEL_66:
    __break(1u);
LABEL_67:
    __break(1u);
LABEL_68:
    __break(1u);
LABEL_69:
    swift_bridgeObjectRetain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
  }
  swift_bridgeObjectRelease_n();
  return 0;
}

uint64_t sub_1000211B0(uint64_t *a1, unsigned int a2)
{
  uint64_t v4 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v4;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v4 = sub_100063670(v4);
    *a1 = v4;
  }
  uint64_t v6 = *(void *)(v4 + 16);
  v8[0] = v4 + 32;
  v8[1] = v6;
  sub_100022C38(v8, (a2 >> 8) & 1);
  return specialized ContiguousArray._endMutation()();
}

void *sub_100021234(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1 >> 62) {
    goto LABEL_10;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v2) {
    return _swiftEmptyArrayStorage;
  }
  while (1)
  {
    if (v2 <= 0)
    {
      uint64_t v3 = _swiftEmptyArrayStorage;
    }
    else
    {
      sub_1000060EC(&qword_100157030);
      uint64_t v3 = (void *)swift_allocObject();
      int64_t v4 = j__malloc_size(v3);
      uint64_t v5 = v4 - 32;
      if (v4 < 32) {
        uint64_t v5 = v4 - 25;
      }
      v3[2] = v2;
      v3[3] = (2 * (v5 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    sub_10002185C((unint64_t)(v3 + 4), v2, v1);
    unint64_t v1 = v6;
    swift_bridgeObjectRelease();
    if (v1 == v2) {
      break;
    }
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v2) {
      return _swiftEmptyArrayStorage;
    }
  }
  return v3;
}

uint64_t sub_10002132C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v8 = v2[1];
  unint64_t v6 = v2 + 1;
  uint64_t v7 = v8;
  swift_bridgeObjectRetain();
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *unint64_t v6 = v8;
  if ((result & 1) == 0)
  {
    uint64_t result = sub_10006A5A4(0, *(void *)(v7 + 16) + 1, 1);
    uint64_t v7 = *v6;
  }
  unint64_t v11 = *(void *)(v7 + 16);
  unint64_t v10 = *(void *)(v7 + 24);
  if (v11 >= v10 >> 1)
  {
    uint64_t result = sub_10006A5A4(v10 > 1, v11 + 1, 1);
    uint64_t v7 = *v6;
  }
  *(void *)(v7 + 16) = v11 + 1;
  unint64_t v12 = v7 + 16 * v11;
  *(void *)(v12 + 32) = a1;
  *(void *)(v12 + 40) = a2;
  v3[1] = v7;
  uint64_t v13 = *(void *)(v7 + 16);
  if (*v3)
  {
    swift_beginAccess();
    if (static _HashTable.maximumCapacity(forScale:)() >= v13)
    {
      uint64_t result = swift_isUniquelyReferenced_native();
      uint64_t v14 = *v3;
      if (!result)
      {
        if (!v14)
        {
LABEL_16:
          __break(1u);
          return result;
        }
        uint64_t v14 = _HashTable.copy()();
        uint64_t result = swift_release();
        *uint64_t v3 = v14;
      }
      if (v14) {
        return _HashTable.UnsafeHandle.subscript.setter();
      }
      __break(1u);
      goto LABEL_16;
    }
  }
  else if ((unint64_t)v13 < 0x10)
  {
    return result;
  }
  return sub_1000214A8();
}

uint64_t sub_1000214A8()
{
  uint64_t v1 = *v0;
  Swift::Int v2 = v0[1];
  if (*v0)
  {
    swift_beginAccess();
    uint64_t v3 = *(void *)(v1 + 24) & 0x3FLL;
    unint64_t v4 = *(void *)(v2 + 16);
    if (v3) {
      goto LABEL_7;
    }
  }
  else
  {
    uint64_t v3 = 0;
    unint64_t v4 = *(void *)(v2 + 16);
  }
  if (v4 < 0x10)
  {
    uint64_t v5 = 0;
    goto LABEL_11;
  }
LABEL_7:
  uint64_t v6 = static _HashTable.scale(forCapacity:)();
  if (v3 <= v6) {
    uint64_t v7 = v6;
  }
  else {
    uint64_t v7 = v3;
  }
  uint64_t v5 = sub_10002154C(v2, v7, 0, v3);
LABEL_11:
  uint64_t result = swift_release();
  uint64_t *v0 = v5;
  return result;
}

uint64_t sub_10002154C(Swift::Int a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v8 = static _HashTable.scale(forCapacity:)();
  uint64_t v9 = 0;
  if (a3) {
    uint64_t v10 = 0;
  }
  else {
    uint64_t v10 = a2;
  }
  if (v10 <= v8) {
    uint64_t v10 = v8;
  }
  if (v10 <= a4) {
    uint64_t v11 = a4;
  }
  else {
    uint64_t v11 = v10;
  }
  if (v11 >= 5)
  {
    uint64_t v9 = _HashTable.init(scale:reservedScale:)();
    sub_1000215D4(a1, (void *)(v9 + 16));
  }
  return v9;
}

Swift::Int sub_1000215D4(Swift::Int result, void *a2)
{
  uint64_t v2 = *(void *)(result + 16);
  if (v2)
  {
    uint64_t v4 = 0;
    while (1)
    {
      Hasher.init(_seed:)();
      swift_bridgeObjectRetain();
      String.hash(into:)();
      uint64_t result = Hasher._finalize()();
      if (__OFSUB__(1 << *a2, 1)) {
        break;
      }
      uint64_t v5 = _HashTable.UnsafeHandle._startIterator(bucket:)();
      swift_bridgeObjectRelease();
      if (v5)
      {
        while (1)
          _HashTable.BucketIterator.advance()();
      }
      uint64_t result = _HashTable.BucketIterator.currentValue.setter();
      if (++v4 == v2) {
        return result;
      }
    }
    __break(1u);
  }
  return result;
}

Swift::Int sub_1000216F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  Hasher.init(_seed:)();
  String.hash(into:)();
  Swift::Int result = Hasher._finalize()();
  if (__OFSUB__(1 << *a5, 1))
  {
    __break(1u);
  }
  else
  {
    _HashTable.UnsafeHandle._startIterator(bucket:)();
    uint64_t v10 = _HashTable.BucketIterator.currentValue.getter();
    uint64_t v11 = v10;
    if ((v12 & 1) == 0)
    {
      uint64_t v13 = (void *)(a3 + 16 * v10);
      if (*v13 != a1 || v13[1] != a2)
      {
        do
        {
          if (_stringCompareWithSmolCheck(_:_:expecting:)()) {
            break;
          }
          _HashTable.BucketIterator.advance()();
          uint64_t v14 = _HashTable.BucketIterator.currentValue.getter();
          uint64_t v11 = v14;
          if (v15) {
            break;
          }
          BOOL v16 = (void *)(a3 + 16 * v14);
        }
        while (*v16 != a1 || v16[1] != a2);
      }
    }
    return v11;
  }
  return result;
}

uint64_t sub_10002185C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_100006480(&qword_100157810, &qword_1001577F8);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_1000060EC(&qword_1001577F8);
          char v12 = sub_100021A80(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100023F6C();
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void (*sub_100021A80(void (**a1)(id *a1), unint64_t a2, uint64_t a3))(void *a1)
{
  unint64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_100021B30(v6, a2, a3);
  return sub_100021AE8;
}

void sub_100021AE8(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

void (*sub_100021B30(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return destroy for DeviceToDeviceEncryptionView;
  }
  __break(1u);
  return result;
}

void destroy for DeviceToDeviceEncryptionView(id *a1)
{
}

uint64_t sub_100021BB8()
{
  swift_getKeyPath();
  sub_10001D8DC();
  swift_release();
  return *(void *)(v0 + qword_100157708);
}

uint64_t sub_100021C38()
{
  return sub_100021C60((uint64_t)&unk_100110F00, &qword_100157728);
}

uint64_t sub_100021C4C()
{
  return sub_100021C60((uint64_t)&unk_100110EA0, qword_100157730);
}

uint64_t sub_100021C60(uint64_t a1, void *a2)
{
  swift_getKeyPath();
  sub_10001D8DC();
  swift_release();
  return *(void *)(v2 + *a2);
}

uint64_t sub_100021CDC()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 56) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100021DA8(uint64_t a1)
{
  uint64_t v4 = v1[4];
  uint64_t v5 = v1[5];
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[6];
  uint64_t v9 = (uint64_t)v1
     + ((*(unsigned __int8 *)(*(void *)(v4 - 8) + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v4 - 8) + 80));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_100014D10;
  return sub_10001F4D0(a1, v6, v7, v8, v9, v4, v5);
}

uint64_t sub_100021EBC()
{
  return 16;
}

__n128 sub_100021EC8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

void sub_100021ED4()
{
  *(unsigned char *)(*(void *)(v0 + 16) + qword_100157718) = *(unsigned char *)(v0 + 24);
}

id sub_100021EEC@<X0>(void *a1@<X8>)
{
  uint64_t v2 = (void *)sub_100021C60((uint64_t)&unk_100110EA0, qword_100157730);
  *a1 = v2;

  return v2;
}

void sub_100021F38(id *a1)
{
  id v1 = *a1;
  id v2 = *a1;
  sub_10001E28C(v1);
}

uint64_t sub_100021F68()
{
  return 16;
}

__n128 sub_100021F74(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

void sub_100021F80()
{
  uint64_t v1 = *(void *)(v0 + 16);
  id v2 = *(void **)(v0 + 24);
  uint64_t v3 = *(void **)(v1 + qword_100157730[0]);
  *(void *)(v1 + qword_100157730[0]) = v2;
  id v4 = v2;
}

uint64_t sub_100021FC0(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t a4)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v4 = a3;
    uint64_t v5 = a2;
    uint64_t v6 = HIBYTE(a3) & 0xF;
    if ((a3 & 0x2000000000000000) == 0) {
      uint64_t v6 = a2;
    }
    uint64_t v7 = 7;
    if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0) {
      uint64_t v7 = 11;
    }
    uint64_t v8 = v7 | (v6 << 16);
    uint64_t v9 = String.index(_:offsetBy:limitedBy:)();
    if (v10) {
      a2 = v8;
    }
    else {
      a2 = v9;
    }
    a1 = 15;
    a3 = v5;
    a4 = v4;
  }
  return String.subscript.getter(a1, a2, a3, a4);
}

BOOL sub_10002205C(id *a1, void **a2, int a3)
{
  int v36 = a3;
  uint64_t v5 = sub_1000060EC(&qword_100157818);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  char v10 = (char *)&v33 - v9;
  uint64_t v11 = type metadata accessor for Date();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v35 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  id v17 = (char *)&v33 - v16;
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v33 - v18;
  unint64_t v20 = *a2;
  id v21 = [*a1 creationDate];
  if (!v21)
  {
    id v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
    v24(v10, 1, 1, v11);
    goto LABEL_5;
  }
  unint64_t v22 = v21;
  uint64_t v34 = v20;
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  id v23 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v23(v10, v17, v11);
  id v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  v24(v10, 0, 1, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    unint64_t v20 = v34;
LABEL_5:
    static Date.now.getter();
    sub_1000063D0((uint64_t)v10, &qword_100157818);
    goto LABEL_7;
  }
  v23(v19, v10, v11);
  unint64_t v20 = v34;
LABEL_7:
  id v25 = [v20 creationDate];
  if (v25)
  {
    uint64_t v26 = v25;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
    v27(v8, v17, v11);
    v24(v8, 0, 1, v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v8, 1, v11) != 1)
    {
      uint64_t v28 = v35;
      v27(v35, v8, v11);
      goto LABEL_12;
    }
  }
  else
  {
    v24(v8, 1, 1, v11);
  }
  uint64_t v28 = v35;
  static Date.now.getter();
  sub_1000063D0((uint64_t)v8, &qword_100157818);
LABEL_12:
  uint64_t v29 = Date.compare(_:)();
  uint64_t v30 = *(void (**)(char *, uint64_t))(v12 + 8);
  v30(v28, v11);
  v30(v19, v11);
  uint64_t v31 = -1;
  if ((v36 & 1) == 0) {
    uint64_t v31 = 1;
  }
  return v29 == v31;
}

uint64_t sub_100022420(void **__src, id *a2, unint64_t a3, void **__dst, char a5)
{
  uint64_t v5 = __dst;
  uint64_t v7 = a2;
  uint64_t v8 = __src;
  int64_t v9 = (char *)a2 - (char *)__src;
  int64_t v10 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v10 = (char *)a2 - (char *)__src;
  }
  uint64_t v11 = v10 >> 3;
  uint64_t v12 = a3 - (void)a2;
  uint64_t v13 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v13 = a3 - (void)a2;
  }
  uint64_t v14 = v13 >> 3;
  uint64_t v46 = __src;
  uint64_t v45 = __dst;
  if (v11 >= v13 >> 3)
  {
    if (v12 >= -7)
    {
      if (__dst != a2 || &a2[v14] <= __dst) {
        memmove(__dst, a2, 8 * v14);
      }
      id v25 = &v5[v14];
      uint64_t v44 = v25;
      uint64_t v46 = v7;
      if (v8 < v7 && v12 >= 8)
      {
        uint64_t v26 = (id *)(a3 - 8);
        uint64_t v27 = v7;
        uint64_t v38 = v5;
        uint64_t v39 = v8;
        while (1)
        {
          unint64_t v28 = (unint64_t)v25;
          uint64_t v29 = v25 - 1;
          id v43 = *(v25 - 1);
          uint64_t v30 = *--v27;
          uint64_t v42 = v30;
          id v31 = v43;
          id v32 = v30;
          BOOL v33 = sub_10002205C(&v43, &v42, a5 & 1);
          if (v41) {
            break;
          }
          BOOL v34 = v33;
          uint64_t v41 = 0;
          uint64_t v35 = v26 + 1;

          if (v34)
          {
            if (v35 != v7 || v26 >= v7) {
              *uint64_t v26 = *v27;
            }
            uint64_t v46 = v27;
            int v36 = v38;
            id v25 = (void **)v28;
            if (v27 <= v39) {
              goto LABEL_48;
            }
          }
          else
          {
            uint64_t v44 = v29;
            if ((unint64_t)v35 < v28 || (unint64_t)v26 >= v28 || v35 != (id *)v28) {
              *uint64_t v26 = *v29;
            }
            uint64_t v27 = v7;
            id v25 = v29;
            int v36 = v38;
            if (v7 <= v39) {
              goto LABEL_48;
            }
          }
          --v26;
          uint64_t v7 = v27;
          if (v25 <= v36) {
            goto LABEL_48;
          }
        }
      }
      goto LABEL_48;
    }
  }
  else if (v9 >= -7)
  {
    if (__dst != __src || &__src[v11] <= __dst) {
      memmove(__dst, __src, 8 * v11);
    }
    uint64_t v15 = &v5[v11];
    uint64_t v44 = v15;
    if ((unint64_t)v7 < a3 && v9 >= 8)
    {
      while (1)
      {
        uint64_t v16 = v8;
        id v43 = *v7;
        id v17 = v5;
        uint64_t v42 = *v5;
        uint64_t v18 = v42;
        id v19 = v43;
        id v20 = v18;
        BOOL v21 = sub_10002205C(&v43, &v42, a5 & 1);
        if (v41) {
          break;
        }
        BOOL v22 = v21;

        if (v22)
        {
          id v23 = v7 + 1;
          id v24 = v16;
          if (v16 < v7 || v16 >= v23 || v16 != v7) {
            id *v16 = *v7;
          }
          uint64_t v5 = v17;
        }
        else
        {
          id v24 = v16;
          if (v16 != v17) {
            id *v16 = *v17;
          }
          uint64_t v5 = v17 + 1;
          uint64_t v45 = v17 + 1;
          id v23 = v7;
        }
        uint64_t v41 = 0;
        uint64_t v8 = v24 + 1;
        uint64_t v46 = v8;
        if (v5 < v15)
        {
          uint64_t v7 = v23;
          if ((unint64_t)v23 < a3) {
            continue;
          }
        }
        goto LABEL_48;
      }
    }
LABEL_48:
    sub_100063460((void **)&v46, (const void **)&v45, &v44);
    return 1;
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void sub_100022780(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, char a5)
{
  uint64_t v55 = a1;
  uint64_t v9 = sub_1000060EC(&qword_100157818);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v61 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v60 = (char *)&v53 - v12;
  uint64_t v70 = type metadata accessor for Date();
  uint64_t v13 = __chkstk_darwin(v70);
  uint64_t v15 = (char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v65 = (char *)&v53 - v17;
  __chkstk_darwin(v16);
  id v69 = (char *)&v53 - v19;
  uint64_t v54 = a2;
  if (a3 != a2)
  {
    uint64_t v20 = *a4;
    unint64_t v68 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56);
    uint64_t v64 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48);
    BOOL v21 = (void (**)(char *, uint64_t))(v18 + 8);
    BOOL v22 = (a5 & 1) == 0;
    id v23 = (void (**)(char *, char *, uint64_t))(v18 + 32);
    uint64_t v24 = -1;
    if (v22) {
      uint64_t v24 = 1;
    }
    uint64_t v57 = v24;
    uint64_t v58 = v21;
    uint64_t v62 = v20;
    uint64_t v25 = v20 + 8 * a3 - 8;
    uint64_t v26 = &selRef_setDeviceToDeviceEncryptionUpgradeType_;
    Swift::String v59 = v15;
LABEL_7:
    uint64_t v27 = *(void **)(v62 + 8 * a3);
    uint64_t v66 = v55;
    uint64_t v56 = v25;
    uint64_t v63 = a3;
    while (1)
    {
      unint64_t v28 = *(void **)v25;
      id v29 = v27;
      id v30 = v28;
      id v31 = v26[6];
      id v67 = v29;
      id v32 = [v29 v31];
      if (v32)
      {
        BOOL v33 = v32;
        BOOL v34 = v65;
        static Date._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v35 = *v23;
        uint64_t v36 = (uint64_t)v60;
        uint64_t v37 = v70;
        (*v23)(v60, v34, v70);
        uint64_t v38 = *v68;
        (*v68)(v36, 0, 1, v37);
        if ((*v64)(v36, 1, v37) != 1)
        {
          v35(v69, (char *)v36, v70);
          goto LABEL_13;
        }
      }
      else
      {
        uint64_t v38 = *v68;
        uint64_t v36 = (uint64_t)v60;
        (*v68)((uint64_t)v60, 1, 1, v70);
      }
      static Date.now.getter();
      sub_1000063D0(v36, &qword_100157818);
LABEL_13:
      id v39 = [v30 v26[6]];
      if (v39)
      {
        uint64_t v40 = v39;
        uint64_t v41 = v65;
        static Date._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v42 = *v23;
        uint64_t v43 = (uint64_t)v61;
        uint64_t v44 = v70;
        (*v23)(v61, v41, v70);
        v38(v43, 0, 1, v44);
        if ((*v64)(v43, 1, v44) != 1)
        {
          uint64_t v45 = v30;
          uint64_t v46 = v59;
          v42(v59, (char *)v43, v70);
          goto LABEL_18;
        }
      }
      else
      {
        uint64_t v43 = (uint64_t)v61;
        v38((uint64_t)v61, 1, 1, v70);
      }
      uint64_t v45 = v30;
      uint64_t v46 = v59;
      static Date.now.getter();
      sub_1000063D0(v43, &qword_100157818);
LABEL_18:
      uint64_t v47 = v69;
      uint64_t v48 = Date.compare(_:)();
      id v49 = *v58;
      uint64_t v50 = v70;
      (*v58)(v46, v70);
      v49(v47, v50);

      uint64_t v51 = v63;
      uint64_t v26 = &selRef_setDeviceToDeviceEncryptionUpgradeType_;
      if (v48 != v57) {
        goto LABEL_6;
      }
      if (!v62)
      {
        __break(1u);
        return;
      }
      id v52 = *(void **)v25;
      uint64_t v27 = *(void **)(v25 + 8);
      *(void *)uint64_t v25 = v27;
      *(void *)(v25 + 8) = v52;
      v25 -= 8;
      if (v51 == ++v66)
      {
LABEL_6:
        a3 = v51 + 1;
        uint64_t v25 = v56 + 8;
        if (a3 == v54) {
          return;
        }
        goto LABEL_7;
      }
    }
  }
}

void sub_100022C38(uint64_t *a1, int a2)
{
  uint64_t v3 = v2;
  int v177 = a2;
  uint64_t v5 = sub_1000060EC(&qword_100157818);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  v180 = (char *)&v163 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  v185 = (char *)&v163 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  v171 = (char *)&v163 - v11;
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v163 - v12;
  uint64_t v191 = type metadata accessor for Date();
  uint64_t v14 = *(void *)(v191 - 8);
  uint64_t v15 = __chkstk_darwin(v191);
  uint64_t v17 = (char *)&v163 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v15);
  v189 = (char *)&v163 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  v170 = (char *)&v163 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  v187 = (char *)&v163 - v23;
  __chkstk_darwin(v22);
  v175 = (char *)&v163 - v24;
  Swift::Int v25 = a1[1];
  Swift::Int v26 = _minimumMergeRunLength(_:)(v25);
  if (v26 >= v25)
  {
    if (v25 < 0) {
      goto LABEL_161;
    }
    if (v25) {
      sub_100022780(0, v25, 1, a1, v177 & 1);
    }
    return;
  }
  if (v25 >= 0) {
    uint64_t v27 = v25;
  }
  else {
    uint64_t v27 = v25 + 1;
  }
  if (v25 < -1) {
    goto LABEL_169;
  }
  Swift::Int v167 = v26;
  v169 = v13;
  Swift::Int v173 = v25;
  if (v25 < 2)
  {
    id v30 = (char *)_swiftEmptyArrayStorage;
    uint64_t v194 = (uint64_t)_swiftEmptyArrayStorage;
    v176 = (void **)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
    if (v25 != 1)
    {
      unint64_t v107 = _swiftEmptyArrayStorage[2];
      if (v107 < 2) {
        goto LABEL_136;
      }
      goto LABEL_124;
    }
  }
  else
  {
    uint64_t v28 = v27 >> 1;
    sub_100023F6C();
    uint64_t v29 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10) = v28;
    v176 = (void **)((v29 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v194 = v29;
  }
  uint64_t v178 = v2;
  Swift::Int v31 = 0;
  v163 = a1;
  uint64_t v32 = *a1;
  v188 = (void (**)(char *, char *, uint64_t))(v14 + 32);
  v190 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  v186 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
  uint64_t v33 = -1;
  if ((v177 & 1) == 0) {
    uint64_t v33 = 1;
  }
  uint64_t v181 = v33;
  v182 = (void (**)(char *, uint64_t))(v14 + 8);
  uint64_t v164 = v32 + 16;
  uint64_t v165 = v32 - 8;
  id v30 = (char *)_swiftEmptyArrayStorage;
  BOOL v34 = v185;
  v179 = v17;
  Swift::Int v35 = v173;
  uint64_t v183 = v32;
LABEL_15:
  Swift::Int v36 = v31;
  Swift::Int v37 = v31 + 1;
  Swift::Int v172 = v31;
  if (v31 + 1 >= v35)
  {
    uint64_t v43 = (uint64_t)v34;
    goto LABEL_44;
  }
  uint64_t v38 = *(void **)(v32 + 8 * v37);
  v192 = *(void **)(v32 + 8 * v31);
  id v39 = v192;
  id v193 = v38;
  id v40 = v38;
  id v41 = v39;
  uint64_t v42 = v178;
  LODWORD(v174) = sub_10002205C(&v193, &v192, v177 & 1);
  uint64_t v178 = v42;
  if (v42)
  {
    swift_bridgeObjectRelease();

LABEL_137:
    *(void *)((v194 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
    specialized Array._endMutation()();
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v43 = (uint64_t)v34;

  Swift::Int v37 = v36 + 2;
  if (v36 + 2 >= v35) {
    goto LABEL_35;
  }
  v166 = v30;
  uint64_t v44 = (id *)(v164 + 8 * v36);
  while (1)
  {
    uint64_t v184 = v37;
    uint64_t v45 = *(v44 - 1);
    id v46 = *v44;
    id v47 = v45;
    uint64_t v48 = v46;
    id v49 = [v46 creationDate];
    if (v49)
    {
      uint64_t v50 = v49;
      uint64_t v51 = v187;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      id v52 = *v188;
      uint64_t v53 = (uint64_t)v169;
      uint64_t v54 = v51;
      uint64_t v55 = v191;
      (*v188)(v169, v54, v191);
      uint64_t v56 = *v190;
      (*v190)(v53, 0, 1, v55);
      int v57 = (*v186)(v53, 1, v55);
      uint64_t v58 = (uint64_t)v171;
      if (v57 != 1)
      {
        v52(v175, (char *)v53, v191);
        goto LABEL_24;
      }
    }
    else
    {
      uint64_t v56 = *v190;
      uint64_t v53 = (uint64_t)v169;
      (*v190)((uint64_t)v169, 1, 1, v191);
      uint64_t v58 = (uint64_t)v171;
    }
    static Date.now.getter();
    sub_1000063D0(v53, &qword_100157818);
LABEL_24:
    id v59 = [v47 creationDate:v163];
    if (v59)
    {
      uint64_t v60 = v59;
      uint64_t v61 = v187;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v62 = *v188;
      uint64_t v63 = v61;
      uint64_t v64 = v191;
      (*v188)((char *)v58, v63, v191);
      v56(v58, 0, 1, v64);
      if ((*v186)(v58, 1, v64) != 1)
      {
        uint64_t v65 = v170;
        v62(v170, (char *)v58, v191);
        goto LABEL_29;
      }
    }
    else
    {
      v56(v58, 1, 1, v191);
    }
    uint64_t v65 = v170;
    static Date.now.getter();
    sub_1000063D0(v58, &qword_100157818);
LABEL_29:
    Swift::Int v35 = v173;
    uint64_t v66 = v175;
    uint64_t v67 = Date.compare(_:)();
    unint64_t v68 = *v182;
    id v69 = v65;
    uint64_t v70 = v191;
    (*v182)(v69, v191);
    v68(v66, v70);

    if (((v174 ^ (v67 != v181)) & 1) == 0) {
      break;
    }
    uint64_t v43 = (uint64_t)v185;
    Swift::Int v37 = v184 + 1;
    ++v44;
    if (v35 == v184 + 1)
    {
      Swift::Int v37 = v35;
      goto LABEL_34;
    }
  }
  Swift::Int v37 = v184;
  uint64_t v43 = (uint64_t)v185;
LABEL_34:
  id v30 = v166;
  Swift::Int v36 = v172;
LABEL_35:
  uint64_t v32 = v183;
  if ((v174 & 1) == 0)
  {
LABEL_44:
    if (v37 >= v35) {
      goto LABEL_72;
    }
    if (__OFSUB__(v37, v36)) {
      goto LABEL_160;
    }
    if (v37 - v36 >= v167) {
      goto LABEL_72;
    }
    if (__OFADD__(v36, v167)) {
      goto LABEL_162;
    }
    if (v36 + v167 >= v35) {
      Swift::Int v76 = v35;
    }
    else {
      Swift::Int v76 = v36 + v167;
    }
    if (v76 < v36)
    {
LABEL_163:
      __break(1u);
      goto LABEL_164;
    }
    if (v37 == v76) {
      goto LABEL_72;
    }
    v166 = v30;
    uint64_t v77 = v165 + 8 * v37;
    Swift::Int v168 = v76;
LABEL_56:
    uint64_t v79 = *(void **)(v32 + 8 * v37);
    uint64_t v174 = v77;
    uint64_t v184 = v37;
    while (1)
    {
      uint64_t v80 = *(void **)v77;
      id v81 = v79;
      id v82 = v80;
      id v83 = [v81 creationDate];
      if (v83)
      {
        v84 = v83;
        uint64_t v85 = v43;
        v86 = v187;
        static Date._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v87 = v191;
        v88 = *v188;
        v89 = v86;
        uint64_t v43 = v85;
        (*v188)((char *)v85, v89, v191);
        v90 = *v190;
        (*v190)(v43, 0, 1, v87);
        if ((*v186)(v43, 1, v87) != 1)
        {
          v88(v189, (char *)v43, v87);
          goto LABEL_62;
        }
      }
      else
      {
        v90 = *v190;
        (*v190)(v43, 1, 1, v191);
      }
      static Date.now.getter();
      sub_1000063D0(v43, &qword_100157818);
LABEL_62:
      id v91 = [v82 creationDate:v163];
      if (v91)
      {
        v92 = v91;
        v93 = v187;
        static Date._unconditionallyBridgeFromObjectiveC(_:)();

        v94 = *v188;
        uint64_t v95 = (uint64_t)v180;
        v96 = v93;
        uint64_t v97 = v191;
        (*v188)(v180, v96, v191);
        v90(v95, 0, 1, v97);
        if ((*v186)(v95, 1, v97) != 1)
        {
          v98 = v179;
          v94(v179, (char *)v95, v191);
          goto LABEL_67;
        }
      }
      else
      {
        uint64_t v95 = (uint64_t)v180;
        v90((uint64_t)v180, 1, 1, v191);
      }
      v98 = v179;
      static Date.now.getter();
      sub_1000063D0(v95, &qword_100157818);
LABEL_67:
      v99 = v189;
      uint64_t v100 = Date.compare(_:)();
      v101 = *v182;
      v102 = v98;
      uint64_t v103 = v191;
      (*v182)(v102, v191);
      v101(v99, v103);

      if (v100 != v181)
      {
        uint64_t v78 = v184;
        uint64_t v43 = (uint64_t)v185;
        uint64_t v32 = v183;
LABEL_55:
        Swift::Int v37 = v78 + 1;
        uint64_t v77 = v174 + 8;
        Swift::Int v36 = v172;
        if (v37 != v168) {
          goto LABEL_56;
        }
        Swift::Int v37 = v168;
        id v30 = v166;
LABEL_72:
        if (v37 < v36) {
          goto LABEL_156;
        }
        BOOL v34 = (char *)v43;
        Swift::Int v31 = v37;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          id v30 = sub_100063364(0, *((void *)v30 + 2) + 1, 1, v30);
        }
        unint64_t v106 = *((void *)v30 + 2);
        unint64_t v105 = *((void *)v30 + 3);
        unint64_t v107 = v106 + 1;
        uint64_t v32 = v183;
        if (v106 >= v105 >> 1)
        {
          v156 = sub_100063364((char *)(v105 > 1), v106 + 1, 1, v30);
          uint64_t v32 = v183;
          id v30 = v156;
        }
        *((void *)v30 + 2) = v107;
        v108 = v30 + 32;
        v109 = &v30[16 * v106 + 32];
        *(void *)v109 = v36;
        *((void *)v109 + 1) = v31;
        if (v106)
        {
          while (2)
          {
            unint64_t v110 = v107 - 1;
            if (v107 >= 4)
            {
              v115 = &v108[16 * v107];
              uint64_t v116 = *((void *)v115 - 8);
              uint64_t v117 = *((void *)v115 - 7);
              BOOL v121 = __OFSUB__(v117, v116);
              uint64_t v118 = v117 - v116;
              if (v121) {
                goto LABEL_144;
              }
              uint64_t v120 = *((void *)v115 - 6);
              uint64_t v119 = *((void *)v115 - 5);
              BOOL v121 = __OFSUB__(v119, v120);
              uint64_t v113 = v119 - v120;
              char v114 = v121;
              if (v121) {
                goto LABEL_145;
              }
              unint64_t v122 = v107 - 2;
              v123 = &v108[16 * v107 - 32];
              uint64_t v125 = *(void *)v123;
              uint64_t v124 = *((void *)v123 + 1);
              BOOL v121 = __OFSUB__(v124, v125);
              uint64_t v126 = v124 - v125;
              if (v121) {
                goto LABEL_147;
              }
              BOOL v121 = __OFADD__(v113, v126);
              uint64_t v127 = v113 + v126;
              if (v121) {
                goto LABEL_150;
              }
              if (v127 >= v118)
              {
                v145 = &v108[16 * v110];
                uint64_t v147 = *(void *)v145;
                uint64_t v146 = *((void *)v145 + 1);
                BOOL v121 = __OFSUB__(v146, v147);
                uint64_t v148 = v146 - v147;
                if (v121) {
                  goto LABEL_154;
                }
                BOOL v138 = v113 < v148;
              }
              else
              {
LABEL_91:
                if (v114) {
                  goto LABEL_146;
                }
                unint64_t v122 = v107 - 2;
                v128 = &v108[16 * v107 - 32];
                uint64_t v130 = *(void *)v128;
                uint64_t v129 = *((void *)v128 + 1);
                BOOL v131 = __OFSUB__(v129, v130);
                uint64_t v132 = v129 - v130;
                char v133 = v131;
                if (v131) {
                  goto LABEL_149;
                }
                v134 = &v108[16 * v110];
                uint64_t v136 = *(void *)v134;
                uint64_t v135 = *((void *)v134 + 1);
                BOOL v121 = __OFSUB__(v135, v136);
                uint64_t v137 = v135 - v136;
                if (v121) {
                  goto LABEL_152;
                }
                if (__OFADD__(v132, v137)) {
                  goto LABEL_153;
                }
                if (v132 + v137 < v113) {
                  goto LABEL_103;
                }
                BOOL v138 = v113 < v137;
              }
              if (v138) {
                unint64_t v110 = v122;
              }
            }
            else
            {
              if (v107 == 3)
              {
                uint64_t v112 = *((void *)v30 + 4);
                uint64_t v111 = *((void *)v30 + 5);
                BOOL v121 = __OFSUB__(v111, v112);
                uint64_t v113 = v111 - v112;
                char v114 = v121;
                goto LABEL_91;
              }
              uint64_t v139 = *((void *)v30 + 4);
              uint64_t v140 = *((void *)v30 + 5);
              BOOL v121 = __OFSUB__(v140, v139);
              uint64_t v132 = v140 - v139;
              char v133 = v121;
LABEL_103:
              if (v133) {
                goto LABEL_148;
              }
              v141 = &v108[16 * v110];
              uint64_t v143 = *(void *)v141;
              uint64_t v142 = *((void *)v141 + 1);
              BOOL v121 = __OFSUB__(v142, v143);
              uint64_t v144 = v142 - v143;
              if (v121) {
                goto LABEL_151;
              }
              if (v144 < v132) {
                goto LABEL_120;
              }
            }
            unint64_t v149 = v110 - 1;
            if (v110 - 1 >= v107)
            {
              __break(1u);
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
LABEL_143:
              __break(1u);
LABEL_144:
              __break(1u);
LABEL_145:
              __break(1u);
LABEL_146:
              __break(1u);
LABEL_147:
              __break(1u);
LABEL_148:
              __break(1u);
LABEL_149:
              __break(1u);
LABEL_150:
              __break(1u);
LABEL_151:
              __break(1u);
LABEL_152:
              __break(1u);
LABEL_153:
              __break(1u);
LABEL_154:
              __break(1u);
LABEL_155:
              __break(1u);
LABEL_156:
              __break(1u);
LABEL_157:
              __break(1u);
LABEL_158:
              __break(1u);
LABEL_159:
              __break(1u);
LABEL_160:
              __break(1u);
LABEL_161:
              __break(1u);
LABEL_162:
              __break(1u);
              goto LABEL_163;
            }
            if (!v32) {
              goto LABEL_166;
            }
            v150 = &v108[16 * v149];
            uint64_t v151 = *(void *)v150;
            v152 = &v108[16 * v110];
            uint64_t v153 = *((void *)v152 + 1);
            uint64_t v154 = v178;
            sub_100022420((void **)(v32 + 8 * *(void *)v150), (id *)(v32 + 8 * *(void *)v152), v32 + 8 * v153, v176, v177 & 1);
            uint64_t v178 = v154;
            if (v154) {
              goto LABEL_136;
            }
            if (v153 < v151) {
              goto LABEL_141;
            }
            if (v110 > *((void *)v30 + 2)) {
              goto LABEL_142;
            }
            *(void *)v150 = v151;
            *(void *)&v108[16 * v149 + 8] = v153;
            unint64_t v155 = *((void *)v30 + 2);
            if (v110 >= v155) {
              goto LABEL_143;
            }
            unint64_t v107 = v155 - 1;
            memmove(&v108[16 * v110], v152 + 16, 16 * (v155 - 1 - v110));
            *((void *)v30 + 2) = v155 - 1;
            BOOL v138 = v155 > 2;
            BOOL v34 = v185;
            uint64_t v32 = v183;
            if (!v138) {
              goto LABEL_120;
            }
            continue;
          }
        }
        unint64_t v107 = 1;
LABEL_120:
        Swift::Int v35 = v173;
        if (v31 >= v173)
        {
          uint64_t v3 = v178;
          a1 = v163;
          if (v107 < 2)
          {
LABEL_136:
            swift_bridgeObjectRelease();
            goto LABEL_137;
          }
LABEL_124:
          uint64_t v157 = *a1;
          while (1)
          {
            unint64_t v158 = v107 - 2;
            if (v107 < 2) {
              goto LABEL_155;
            }
            if (!v157) {
              goto LABEL_168;
            }
            uint64_t v159 = *(void *)&v30[16 * v158 + 32];
            uint64_t v160 = *(void *)&v30[16 * v107 + 24];
            sub_100022420((void **)(v157 + 8 * v159), (id *)(v157 + 8 * *(void *)&v30[16 * v107 + 16]), v157 + 8 * v160, v176, v177 & 1);
            if (v3) {
              goto LABEL_136;
            }
            if (v160 < v159) {
              goto LABEL_157;
            }
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              id v30 = sub_10006365C((uint64_t)v30);
            }
            if (v158 >= *((void *)v30 + 2)) {
              goto LABEL_158;
            }
            v161 = &v30[16 * v158 + 32];
            *(void *)v161 = v159;
            *((void *)v161 + 1) = v160;
            unint64_t v162 = *((void *)v30 + 2);
            if (v107 > v162) {
              goto LABEL_159;
            }
            memmove(&v30[16 * v107 + 16], &v30[16 * v107 + 32], 16 * (v162 - v107));
            *((void *)v30 + 2) = v162 - 1;
            unint64_t v107 = v162 - 1;
            if (v162 <= 2) {
              goto LABEL_136;
            }
          }
        }
        goto LABEL_15;
      }
      uint64_t v78 = v184;
      uint64_t v43 = (uint64_t)v185;
      uint64_t v32 = v183;
      if (!v183) {
        goto LABEL_165;
      }
      v104 = *(void **)v77;
      uint64_t v79 = *(void **)(v77 + 8);
      *(void *)uint64_t v77 = v79;
      *(void *)(v77 + 8) = v104;
      v77 -= 8;
      if (v78 == ++v36) {
        goto LABEL_55;
      }
    }
  }
  if (v37 >= v36)
  {
    if (v36 < v37)
    {
      id v71 = (uint64_t *)(v165 + 8 * v37);
      Swift::Int v72 = v37;
      Swift::Int v73 = v36;
      uint64_t v74 = (uint64_t *)(v183 + 8 * v36);
      while (1)
      {
        if (v73 != --v72)
        {
          if (!v32) {
            goto LABEL_167;
          }
          uint64_t v75 = *v74;
          *uint64_t v74 = *v71;
          *id v71 = v75;
        }
        ++v73;
        --v71;
        ++v74;
        if (v73 >= v72) {
          goto LABEL_44;
        }
      }
    }
    goto LABEL_44;
  }
LABEL_164:
  __break(1u);
LABEL_165:
  __break(1u);
LABEL_166:
  __break(1u);
LABEL_167:
  __break(1u);
LABEL_168:
  __break(1u);
LABEL_169:
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_100023AA4(unsigned __int8 a1, unsigned __int8 a2)
{
  uint64_t v4 = type metadata accessor for MusicSubscription();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000060EC(&qword_1001577D0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100156550 != -1) {
    swift_once();
  }
  uint64_t v11 = qword_100164EA8;
  swift_getKeyPath();
  v16[1] = v11;
  sub_100024020((unint64_t *)&qword_1001577D8, (void (*)(uint64_t))type metadata accessor for MusicSubscriptionStatusController);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v12 = v11 + OBJC_IVAR____TtC16MusicRecognition33MusicSubscriptionStatusController__musicSubscription;
  swift_beginAccess();
  sub_100023D4C(v12, (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4))
  {
    sub_1000063D0((uint64_t)v10, &qword_1001577D0);
    int v13 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v10, v4);
    sub_1000063D0((uint64_t)v10, &qword_1001577D0);
    char v14 = MusicSubscription.canBecomeSubscriber.getter();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    if (v14) {
      int v13 = 0;
    }
    else {
      int v13 = 0x10000;
    }
  }
  return sub_1000D6E40(v13 | a1 | (a2 << 8), 0xD000000000000028, 0x8000000100117950);
}

uint64_t sub_100023D4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000060EC(&qword_1001577D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100023DB4@<X0>(uint64_t *a1@<X8>)
{
  *a1 = sub_100021C60((uint64_t)&unk_100110F00, &qword_100157728);

  return swift_retain();
}

uint64_t sub_100023E00()
{
  return sub_10001DED4();
}

uint64_t sub_100023E2C()
{
  return 16;
}

__n128 sub_100023E38(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_100023E44()
{
  *(void *)(*(void *)(v0 + 16) + qword_100157728) = *(void *)(v0 + 24);
  swift_retain();
  return swift_release();
}

uint64_t sub_100023E88@<X0>(uint64_t *a1@<X8>)
{
  *a1 = sub_100021BB8();
  a1[1] = v2;

  return swift_bridgeObjectRetain();
}

uint64_t sub_100023EC8()
{
  return sub_10001D824();
}

uint64_t sub_100023F08()
{
  return 16;
}

__n128 sub_100023F14(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_100023F20()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = (void *)(v0[2] + qword_100157708);
  void *v2 = v0[3];
  v2[1] = v1;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

unint64_t sub_100023F6C()
{
  unint64_t result = qword_1001577E0;
  if (!qword_1001577E0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1001577E0);
  }
  return result;
}

const char *sub_100023FC4()
{
  return "title";
}

void sub_100023FD0(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

const char *sub_100023FF0()
{
  return "subtitle";
}

void sub_100023FFC(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

uint64_t sub_100024020(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *initializeBufferWithCopyOfBuffer for ViewConfiguration.ViewName(unsigned char *result, unsigned char *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for ViewConfiguration.ViewName(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for HistorySortSelection.SortType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000241D0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t sub_1000241F8(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_100024204(unsigned char *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for HistorySortSelection.SortType()
{
  return &type metadata for HistorySortSelection.SortType;
}

uint64_t sub_10002421C()
{
  return sub_100006480(&qword_100157828, &qword_100157830);
}

unint64_t sub_10002425C()
{
  unint64_t result = qword_100157838;
  if (!qword_100157838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100157838);
  }
  return result;
}

unint64_t sub_1000242B4()
{
  unint64_t result = qword_100157840;
  if (!qword_100157840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100157840);
  }
  return result;
}

unint64_t sub_10002430C()
{
  unint64_t result = qword_100157848;
  if (!qword_100157848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100157848);
  }
  return result;
}

uint64_t sub_100024364()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100024380()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource();
  sub_10000FC3C(v0, qword_100164BB0);
  sub_10000E808(v0, (uint64_t)qword_100164BB0);
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t sub_1000243E4()
{
  uint64_t v0 = sub_1000060EC(&qword_100157520);
  __chkstk_darwin(v0 - 8);
  int v2 = (char *)&v13 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1000060EC(&qword_100157528);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for LocalizedStringResource();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100156060 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_10000E808(v6, (uint64_t)qword_100164BB0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v10, v6);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
  uint64_t v11 = type metadata accessor for DisplayRepresentation.Image();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v2, 1, 1, v11);
  return DisplayRepresentation.init(title:subtitle:image:)();
}

uint64_t sub_1000245F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[36] = a2;
  v3[37] = a3;
  v3[35] = a1;
  uint64_t v4 = type metadata accessor for IntentDonationManager();
  v3[38] = v4;
  v3[39] = *(void *)(v4 - 8);
  v3[40] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for IntentDonationIdentifier();
  v3[41] = v5;
  v3[42] = *(void *)(v5 - 8);
  v3[43] = swift_task_alloc();
  v3[44] = sub_1000060EC(&qword_1001570C8);
  v3[45] = swift_task_alloc();
  v3[46] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for IntentSystemContext();
  v3[47] = v6;
  v3[48] = *(void *)(v6 - 8);
  v3[49] = swift_task_alloc();
  v3[50] = swift_task_alloc();
  return _swift_task_switch(sub_1000247C4, 0, 0);
}

uint64_t sub_1000247C4()
{
  uint64_t v26 = v0;
  if (qword_100156018 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  *(void *)(v0 + 408) = sub_10000E808(v1, (uint64_t)qword_100164B38);
  swift_retain_n();
  swift_retain_n();
  int v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v2, v3))
  {
    os_log_type_t type = v3;
    uint64_t v4 = *(void *)(v0 + 400);
    uint64_t v5 = *(void *)(v0 + 384);
    uint64_t v6 = *(void *)(v0 + 368);
    uint64_t v21 = *(void *)(v0 + 376);
    uint64_t v8 = *(void *)(v0 + 288);
    uint64_t v7 = *(void *)(v0 + 296);
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136315138;
    *(void *)(v0 + 248) = v8;
    *(void *)(v0 + 256) = v7;
    sub_10001D3BC();
    AppIntent.systemContext.getter();
    IntentSystemContext.source.getter();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v21);
    uint64_t v10 = Optional.debugDescription.getter();
    unint64_t v12 = v11;
    sub_100026304(v6);
    *(void *)(v0 + 272) = sub_1000CB67C(v10, v12, &v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, type, "Performing Music Recognition request triggered by %s", v9, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
    swift_release_n();
  }
  if (qword_100156120 != -1) {
    swift_once();
  }
  uint64_t v14 = *(void *)(v0 + 384);
  uint64_t v13 = *(void *)(v0 + 392);
  uint64_t v15 = *(void *)(v0 + 376);
  uint64_t v16 = qword_100164BD0;
  long long v23 = *(_OWORD *)(v0 + 288);
  IntentParameter.wrappedValue.getter();
  *(unsigned char *)(v16 + 24) = *(unsigned char *)(v0 + 456);
  *(void *)(v0 + 200) = type metadata accessor for MusicRecognizer();
  *(void *)(v0 + 208) = &off_10014ADF0;
  *(void *)(v0 + 176) = v16;
  *(_OWORD *)(v0 + 216) = v23;
  *(void *)(v0 + 416) = sub_10001D3BC();
  swift_retain();
  AppIntent.systemContext.getter();
  IntentSystemContext.source.getter();
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  uint64_t v24 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1001578A8 + dword_1001578A8);
  uint64_t v17 = (void *)swift_task_alloc();
  *(void *)(v0 + 424) = v17;
  *uint64_t v17 = v0;
  v17[1] = sub_100024B94;
  uint64_t v18 = *(void *)(v0 + 360);
  uint64_t v19 = *(void *)(v0 + 296);
  return v24(v0 + 16, v0 + 176, v18, v19);
}

uint64_t sub_100024B94()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 360);
  *(void *)(*v1 + 432) = v0;
  swift_task_dealloc();
  sub_100026304(v3);
  if (v0)
  {
    uint64_t v4 = sub_100024FCC;
  }
  else
  {
    _s16MusicRecognition11AnyPlaylistVwxx_0(v2 + 176);
    uint64_t v4 = sub_100024CD4;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_100024CD4()
{
  long long v8 = *(_OWORD *)(v0 + 288);
  sub_100026364(v0 + 16, v0 + 96);
  sub_1000060EC(&qword_1001578B0);
  sub_1000263CC();
  static IntentResult.result<A>(value:)();
  sub_100026440((uint64_t *)(v0 + 16));
  static IntentDonationManager.shared.getter();
  *(_OWORD *)(v0 + 232) = v8;
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 440) = v1;
  uint64_t v2 = sub_1000060EC(&qword_100157870);
  uint64_t v3 = sub_100006480(&qword_1001578C0, &qword_100157870);
  void *v1 = v0;
  v1[1] = sub_100024E3C;
  uint64_t v4 = *(void *)(v0 + 416);
  uint64_t v5 = *(void *)(v0 + 344);
  uint64_t v6 = *(void *)(v0 + 280);
  return IntentDonationManager.donate<A, B>(intent:result:)(v5, v0 + 232, v6, &type metadata for RecognizeMusicIntent, v2, v4, v3);
}

uint64_t sub_100024E3C()
{
  uint64_t v2 = *(void **)v1;
  uint64_t v3 = *(void *)(*(void *)v1 + 320);
  uint64_t v4 = *(void *)(*(void *)v1 + 312);
  uint64_t v5 = *(void *)(*(void *)v1 + 304);
  *(void *)(*(void *)v1 + 448) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  if (v0)
  {
    uint64_t v6 = sub_100025128;
  }
  else
  {
    (*(void (**)(void, void))(v2[42] + 8))(v2[43], v2[41]);
    uint64_t v6 = sub_100025080;
  }
  return _swift_task_switch(v6, 0, 0);
}

uint64_t sub_100024FCC()
{
  _s16MusicRecognition11AnyPlaylistVwxx_0(v0 + 176);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100025080()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100025128()
{
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 138412290;
    swift_errorRetain();
    uint64_t v5 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 264) = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v4 = v5;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "IntentDonationManager unable to donate App Intent %@", v3, 0xCu);
    sub_1000060EC((uint64_t *)&unk_1001570F0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_100025328()
{
  uint64_t v0 = sub_1000060EC(&qword_100157880);
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v9 - v5;
  sub_10001D3BC();
  IntentPrediction.init<>(displayRepresentation:)();
  sub_100006480(&qword_100157878, &qword_100157880);
  static IntentPredictionsBuilder.buildExpression<A>(_:)();
  uint64_t v7 = *(void (**)(char *, uint64_t))(v1 + 8);
  v7(v4, v0);
  static IntentPredictionsBuilder.buildBlock<A>(_:)();
  return ((uint64_t (*)(char *, uint64_t))v7)(v6, v0);
}

unint64_t sub_1000254BC()
{
  unint64_t result = qword_100157850;
  if (!qword_100157850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100157850);
  }
  return result;
}

unint64_t sub_100025514()
{
  unint64_t result = qword_100157858;
  if (!qword_100157858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100157858);
  }
  return result;
}

uint64_t sub_100025568()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_10002559C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000255EC@<X0>(uint64_t a1@<X8>)
{
  if (qword_100156060 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for LocalizedStringResource();
  uint64_t v3 = sub_10000E808(v2, (uint64_t)qword_100164BB0);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_1000256A8(uint64_t a1)
{
  uint64_t v5 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_100014D10;
  return sub_1000245F4(a1, v5, v4);
}

uint64_t sub_100025754@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100025840();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_10002577C(uint64_t a1)
{
  unint64_t v2 = sub_10001D3BC();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for RecognizeMusicIntent()
{
  return &type metadata for RecognizeMusicIntent;
}

uint64_t sub_1000257C8()
{
  return sub_100006480(&qword_100157868, &qword_100157870);
}

uint64_t sub_100025804()
{
  return sub_100006480(&qword_100157878, &qword_100157880);
}

uint64_t sub_100025840()
{
  uint64_t v34 = type metadata accessor for InputConnectionBehavior();
  uint64_t v0 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v33 = (char *)v21 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_1000060EC(&qword_100157888);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000060EC(&qword_100157890);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000060EC(&qword_100157528);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for LocalizedStringResource();
  uint64_t v31 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v27 = sub_1000060EC(&qword_100157898);
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  id v30 = *(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56);
  uint64_t v32 = v12 + 56;
  v30(v10, 0, 1, v11);
  char v36 = 1;
  uint64_t v13 = type metadata accessor for Bool.IntentDisplayName();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
  uint64_t v29 = v14 + 56;
  v28(v7, 1, 1, v13);
  uint64_t v15 = type metadata accessor for IntentDialog();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
  uint64_t v26 = v16 + 56;
  v21[0] = v4;
  v25(v4, 1, 1, v15);
  unsigned int v23 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v17 = *(void (**)(void))(v0 + 104);
  v21[1] = v0 + 104;
  uint64_t v22 = (void (*)(char *, void, uint64_t))v17;
  uint64_t v18 = v33;
  uint64_t v19 = v34;
  v17(v33);
  uint64_t v24 = IntentParameter<>.init(title:description:default:displayName:requestValueDialog:inputConnectionBehavior:)();
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  v30(v10, 0, 1, v31);
  char v35 = 0;
  v28(v7, 1, 1, v13);
  v25((char *)v21[0], 1, 1, v15);
  v22(v18, v23, v19);
  IntentParameter<>.init(title:description:default:displayName:requestValueDialog:inputConnectionBehavior:)();
  return v24;
}

uint64_t sub_100025CAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[14] = a3;
  v4[15] = a4;
  v4[12] = a1;
  v4[13] = a2;
  return _swift_task_switch(sub_100025CD0, 0, 0);
}

uint64_t sub_100025CD0()
{
  sub_100010740(*(void **)(v0 + 104), *(void *)(*(void *)(v0 + 104) + 24));
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 128) = v1;
  void *v1 = v0;
  v1[1] = sub_100025D74;
  uint64_t v2 = *(void *)(v0 + 112);
  return sub_10005ABCC(0, v2);
}

uint64_t sub_100025D74(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = *v3;
  *(void *)(v4 + 136) = a1;
  *(void *)(v4 + 144) = a2;
  *(unsigned char *)(v4 + 153) = a3;
  swift_task_dealloc();
  return _swift_task_switch(sub_100025E78, 0, 0);
}

void sub_100025E78()
{
  long long v1 = 0uLL;
  if (*(unsigned __int8 *)(v0 + 153) == 255)
  {
    long long v13 = 0uLL;
    long long v14 = 0uLL;
    long long v15 = 0uLL;
    long long v16 = 0uLL;
LABEL_31:
    uint64_t v44 = *(_OWORD **)(v0 + 96);
    *uint64_t v44 = v1;
    v44[1] = v13;
    v44[2] = v14;
    v44[3] = v15;
    v44[4] = v16;
    id v40 = *(void (**)(void))(v0 + 8);
    goto LABEL_32;
  }
  if (SHSession.Result.wasCancelled.getter())
  {
    if (qword_100156018 != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for Logger();
    sub_10000E808(v2, (uint64_t)qword_100164B38);
    uint64_t v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.debug.getter();
    BOOL v5 = os_log_type_enabled(v3, v4);
    unsigned __int8 v6 = *(unsigned char *)(v0 + 153);
    uint64_t v8 = *(void **)(v0 + 136);
    uint64_t v7 = *(void **)(v0 + 144);
    if (!v5)
    {
      sub_100014BF8(*(void **)(v0 + 136), *(void **)(v0 + 144), *(unsigned char *)(v0 + 153));

LABEL_30:
      long long v13 = 0uLL;
      long long v14 = 0uLL;
      long long v15 = 0uLL;
      long long v16 = 0uLL;
      long long v1 = 0uLL;
      goto LABEL_31;
    }
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Match attempt was cancelled so returning nil from the App Intent", v9, 2u);
    swift_slowDealloc();

    uint64_t v10 = v8;
    uint64_t v11 = v7;
    unsigned __int8 v12 = v6;
LABEL_29:
    sub_100014BF8(v10, v11, v12);
    goto LABEL_30;
  }
  if (!*(unsigned char *)(v0 + 153))
  {
    unsigned int v23 = *(void **)(v0 + 136);
    sub_10002659C(v23, *(void **)(v0 + 144), 0);
    id v24 = [v23 mediaItems];
    sub_1000265E8();
    unint64_t v25 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v25 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v41 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v41) {
        goto LABEL_15;
      }
    }
    else if (*(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_15:
      if ((v25 & 0xC000000000000001) != 0)
      {
        id v26 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (!*(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return;
        }
        id v26 = *(id *)(v25 + 32);
      }
      uint64_t v27 = v26;
      uint64_t v29 = *(void **)(v0 + 136);
      uint64_t v28 = *(void **)(v0 + 144);
      swift_bridgeObjectRelease();
      sub_10001A630(v27, v0 + 16);
      long long v48 = *(_OWORD *)(v0 + 32);
      long long v49 = *(_OWORD *)(v0 + 16);
      long long v46 = *(_OWORD *)(v0 + 64);
      long long v47 = *(_OWORD *)(v0 + 48);
      long long v45 = *(_OWORD *)(v0 + 80);

      sub_100014BF8(v29, v28, 0);
      sub_100014BF8(v29, v28, 0);
      long long v16 = v45;
      long long v15 = v46;
      long long v14 = v47;
      long long v13 = v48;
      long long v1 = v49;
      goto LABEL_31;
    }
    uint64_t v43 = *(void **)(v0 + 136);
    uint64_t v42 = *(void **)(v0 + 144);
    swift_bridgeObjectRelease();
    sub_100014BF8(v43, v42, 0);
    uint64_t v10 = v43;
    uint64_t v11 = v42;
    unsigned __int8 v12 = 0;
    goto LABEL_29;
  }
  if (*(unsigned char *)(v0 + 153) != 1)
  {
    swift_errorRetain();
    id v30 = (void *)_convertErrorToNSError(_:)();
    uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v33 = v32;
    uint64_t v34 = sub_100075DC8((uint64_t)&off_100148FF8);
    char v35 = (void *)sub_1000DFF5C(v31, v33, v34);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v35)
    {
    }
    else if ([v30 code] != (id)202)
    {
      Swift::Int v37 = *(void **)(v0 + 136);
      char v36 = *(void **)(v0 + 144);
      sub_100026548();
      swift_allocError();
      char v39 = 2;
      goto LABEL_24;
    }
    Swift::Int v37 = *(void **)(v0 + 136);
    char v36 = *(void **)(v0 + 144);
    sub_100026548();
    swift_allocError();
    char v39 = 1;
LABEL_24:
    *uint64_t v38 = v39;
    swift_willThrow();

    swift_errorRelease();
    uint64_t v20 = v37;
    uint64_t v21 = v36;
    unsigned __int8 v22 = 2;
    goto LABEL_25;
  }
  IntentParameter.wrappedValue.getter();
  uint64_t v18 = *(void **)(v0 + 136);
  uint64_t v17 = *(void **)(v0 + 144);
  if ((*(unsigned char *)(v0 + 152) & 1) == 0)
  {
    uint64_t v10 = *(void **)(v0 + 136);
    uint64_t v11 = *(void **)(v0 + 144);
    unsigned __int8 v12 = 1;
    goto LABEL_29;
  }
  sub_100026548();
  swift_allocError();
  unsigned char *v19 = 0;
  swift_willThrow();
  uint64_t v20 = v18;
  uint64_t v21 = v17;
  unsigned __int8 v22 = 1;
LABEL_25:
  sub_100014BF8(v20, v21, v22);
  id v40 = *(void (**)(void))(v0 + 8);
LABEL_32:
  v40();
}

uint64_t sub_100026304(uint64_t a1)
{
  uint64_t v2 = sub_1000060EC(&qword_1001570C8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100026364(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000060EC(&qword_1001578B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1000263CC()
{
  unint64_t result = qword_1001578B8;
  if (!qword_1001578B8)
  {
    sub_100006224(&qword_1001578B0);
    sub_100019C54();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001578B8);
  }
  return result;
}

uint64_t *sub_100026440(uint64_t *a1)
{
  return a1;
}

uint64_t sub_10002648C(uint64_t result)
{
  if (result)
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

unint64_t sub_100026548()
{
  unint64_t result = qword_1001578C8;
  if (!qword_1001578C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001578C8);
  }
  return result;
}

id sub_10002659C(id result, void *a2, unsigned __int8 a3)
{
  if (a3 >= 2u)
  {
    if (a3 != 2) {
      return result;
    }
    swift_errorRetain();
    unint64_t result = a2;
  }
  return result;
}

unint64_t sub_1000265E8()
{
  unint64_t result = qword_1001578D0;
  if (!qword_1001578D0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1001578D0);
  }
  return result;
}

uint64_t sub_100026628(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Playlist();
  BOOL v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t sub_100026694(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Playlist();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_1000266F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Playlist();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_10002675C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Playlist();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_1000267C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Playlist();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_100026824(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Playlist();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_100026888(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10002689C);
}

uint64_t sub_10002689C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Playlist();
  BOOL v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_100026908(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10002691C);
}

uint64_t sub_10002691C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Playlist();
  BOOL v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for MusicKitPlaylist()
{
  uint64_t result = qword_100157948;
  if (!qword_100157948) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000269D8()
{
  uint64_t result = type metadata accessor for Playlist();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_100026A64()
{
  qword_1001578D8 = 0x6F6E2E636973756DLL;
  unk_1001578E0 = 0xEF7473696C2E6574;
}

uint64_t sub_100026A94()
{
  uint64_t result = static Color.gray.getter();
  qword_1001578E8 = result;
  return result;
}

uint64_t sub_100026AB4()
{
  uint64_t v0 = type metadata accessor for RoundedRectangle();
  uint64_t v1 = v0 - 8;
  __chkstk_darwin(v0);
  uint64_t v3 = (_OWORD *)((char *)&v43 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = sub_1000060EC(&qword_100157980);
  __chkstk_darwin(v4 - 8);
  unsigned __int8 v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = sub_1000060EC(&qword_100157988);
  __chkstk_darwin(v46);
  uint64_t v47 = (uint64_t)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000060EC(&qword_1001575D8);
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = type metadata accessor for ArtworkImage();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  unsigned __int8 v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000060EC(&qword_100157990);
  uint64_t v44 = *(void *)(v13 - 8);
  uint64_t v45 = v13;
  __chkstk_darwin(v13);
  long long v15 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_1000060EC(&qword_100157998);
  __chkstk_darwin(v43);
  uint64_t v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  Playlist.artwork.getter();
  ArtworkImage.init(_:)();
  type metadata accessor for ArtworkUnavailableView();
  sub_1000270C0();
  ArtworkImage.artworkPlaceholder<A>(_:)();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t v18 = (char *)v3 + *(int *)(v1 + 28);
  uint64_t v19 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v20 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 104))(v18, v19, v20);
  __asm { FMOV            V0.2D, #5.0 }
  *uint64_t v3 = _Q0;
  if (qword_100156070 != -1) {
    swift_once();
  }
  uint64_t v26 = qword_1001578E8;
  swift_retain();
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
  sub_100027118((uint64_t)v3, (uint64_t)v6);
  uint64_t v27 = &v6[*(int *)(sub_1000060EC(&qword_1001579A0) + 36)];
  long long v28 = v49;
  *(_OWORD *)uint64_t v27 = v48;
  *((_OWORD *)v27 + 1) = v28;
  *((void *)v27 + 4) = v50;
  uint64_t v29 = sub_1000060EC(&qword_1001579A8);
  *(void *)&v6[*(int *)(v29 + 52)] = v26;
  *(_WORD *)&v6[*(int *)(v29 + 56)] = 256;
  uint64_t v30 = static Alignment.center.getter();
  uint64_t v32 = v31;
  uint64_t v33 = (uint64_t *)&v6[*(int *)(sub_1000060EC(&qword_1001579B0) + 36)];
  *uint64_t v33 = v30;
  v33[1] = v32;
  sub_10002717C((uint64_t)v3);
  uint64_t v34 = v47;
  sub_100009C94((uint64_t)v6, v47, &qword_100157980);
  *(void *)(v34 + *(int *)(v46 + 36)) = 0x3FC999999999999ALL;
  sub_1000063D0((uint64_t)v6, &qword_100157980);
  uint64_t v35 = static Alignment.center.getter();
  uint64_t v37 = v36;
  uint64_t v38 = (uint64_t)&v17[*(int *)(v43 + 36)];
  sub_100009C94(v34, v38, &qword_100157988);
  char v39 = (uint64_t *)(v38 + *(int *)(sub_1000060EC(&qword_1001579B8) + 36));
  *char v39 = v35;
  v39[1] = v37;
  uint64_t v41 = v44;
  uint64_t v40 = v45;
  (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v17, v15, v45);
  sub_1000063D0(v34, &qword_100157988);
  (*(void (**)(char *, uint64_t))(v41 + 8))(v15, v40);
  sub_1000271D8();
  return AnyView.init<A>(_:)();
}

uint64_t sub_100026FF0()
{
  if (qword_100156068 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();

  return ArtworkUnavailableView.init(placeholderImage:widthRatio:heightRatio:)();
}

uint64_t sub_1000270A0()
{
  return Playlist.isCollaborative.getter() & 1;
}

unint64_t sub_1000270C0()
{
  unint64_t result = qword_100157600;
  if (!qword_100157600)
  {
    type metadata accessor for ArtworkUnavailableView();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100157600);
  }
  return result;
}

uint64_t sub_100027118(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RoundedRectangle();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10002717C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for RoundedRectangle();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1000271D8()
{
  unint64_t result = qword_1001579C0;
  if (!qword_1001579C0)
  {
    sub_100006224(&qword_100157998);
    type metadata accessor for ArtworkUnavailableView();
    sub_1000270C0();
    swift_getOpaqueTypeConformance2();
    sub_100027284();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001579C0);
  }
  return result;
}

unint64_t sub_100027284()
{
  unint64_t result = qword_1001579C8;
  if (!qword_1001579C8)
  {
    sub_100006224(&qword_1001579B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001579C8);
  }
  return result;
}

BOOL sub_1000272E0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

void sub_1000272F8()
{
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = [self colorNamed:v0];

  if (v1) {
    qword_1001579D0 = (uint64_t)v1;
  }
  else {
    __break(1u);
  }
}

id sub_100027374()
{
  id v1 = &v0[OBJC_IVAR____TtC16MusicRecognition26SpectralOutputWaveformView_barViews];
  swift_beginAccess();
  if (*(void *)v1 >> 62) {
    goto LABEL_22;
  }
  uint64_t v2 = *(void *)((*(void *)v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_3:
  uint64_t v3 = OBJC_IVAR____TtC16MusicRecognition26SpectralOutputWaveformView_waveformData;
  if (v2 != *(void *)(*(void *)&v0[OBJC_IVAR____TtC16MusicRecognition26SpectralOutputWaveformView_waveformData]
                       + 16))
    sub_1000275EC();
  [v0 bounds];
  double Width = CGRectGetWidth(v21);
  if (*(void *)v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = *(void *)((*(void *)v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v6 = *(void *)(*(void *)&v0[v3] + 16);
  if (v6)
  {
    unint64_t v7 = 0;
    double v8 = Width / (double)v5 * 0.5;
    do
    {
      swift_beginAccess();
      uint64_t v9 = *(void *)v1;
      if ((*(void *)v1 & 0xC000000000000001) != 0)
      {
        id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (v7 >= *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
LABEL_21:
          __break(1u);
LABEL_22:
          swift_bridgeObjectRetain();
          uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          goto LABEL_3;
        }
        id v10 = *(id *)(v9 + 8 * v7 + 32);
      }
      uint64_t v11 = v10;
      swift_endAccess();
      uint64_t v12 = *(void *)&v0[v3];
      if (v7 >= *(void *)(v12 + 16)) {
        goto LABEL_21;
      }
      unint64_t v13 = v7 + 1;
      double v14 = *(float *)(v12 + 4 * v7 + 32);
      [v0 bounds];
      double v16 = v15 * fmin(v14, 1.0);
      if (v8 > v16) {
        double v17 = v8;
      }
      else {
        double v17 = v16;
      }
      id v18 = [v11 layer];
      [v18 setBounds:0.0, 0.0, v8, v17];

      id v19 = [v11 layer];
      [v19 setCornerRadius:v8 * 0.5];

      unint64_t v7 = v13;
    }
    while (v6 != v13);
  }
  return [v0 setNeedsDisplay];
}

void sub_1000275EC()
{
  id v1 = v0;
  uint64_t v2 = &v0[OBJC_IVAR____TtC16MusicRecognition26SpectralOutputWaveformView_barViews];
  swift_beginAccess();
  if (!(*(void *)v2 >> 62))
  {
    if (!*(void *)((*(void *)v2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_15;
    }
LABEL_3:
    uint64_t v3 = *(void *)v2;
    if (*(void *)v2 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
      if (v4) {
        goto LABEL_5;
      }
    }
    else
    {
      uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      if (v4)
      {
LABEL_5:
        if (v4 < 1)
        {
          __break(1u);
          return;
        }
        for (uint64_t i = 0; i != v4; ++i)
        {
          if ((v3 & 0xC000000000000001) != 0) {
            id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v6 = *(id *)(v3 + 8 * i + 32);
          }
          unint64_t v7 = v6;
          [v6 removeFromSuperview];
        }
      }
    }
    swift_bridgeObjectRelease_n();
    *(void *)uint64_t v2 = &_swiftEmptyArrayStorage;
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  swift_bridgeObjectRetain();
  uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v8) {
    goto LABEL_3;
  }
LABEL_15:
  for (uint64_t j = *(void *)(*(void *)&v1[OBJC_IVAR____TtC16MusicRecognition26SpectralOutputWaveformView_waveformData]
                      + 16); j; --j)
  {
    id v10 = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, 0.0, 0.0];
    id v11 = [v10 layer];
    [v11 setCornerCurve:kCACornerCurveContinuous];

    id v12 = [v10 layer];
    [v12 setAllowsEdgeAntialiasing:1];

    if (qword_100156078 != -1) {
      swift_once();
    }
    [v10 setBackgroundColor:qword_1001579D0];
    swift_beginAccess();
    id v13 = v10;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((*(void *)v2 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v2 & 0xFFFFFFFFFFFFFF8)
                                                                                + 0x18) >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    swift_endAccess();
    [v1 addSubview:v13];
  }
}

void sub_100027960()
{
  v24.receiver = v0;
  v24.super_class = (Class)swift_getObjectType();
  [super layoutSubviews];
  uint64_t v1 = OBJC_IVAR____TtC16MusicRecognition26SpectralOutputWaveformView_style;
  char v2 = v0[OBJC_IVAR____TtC16MusicRecognition26SpectralOutputWaveformView_style];
  [v0 bounds];
  double v4 = v3;
  p_inst_props = &OBJC_PROTOCOL___SHSessionDelegate.inst_props;
  id v6 = &v0[OBJC_IVAR____TtC16MusicRecognition26SpectralOutputWaveformView_barViews];
  if (v2)
  {
    swift_beginAccess();
    unint64_t v7 = *(void *)v6;
    if (v7 >> 62) {
      goto LABEL_21;
    }
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_4:
    double v9 = v4 / (double)v8;
    double v10 = 0.52;
  }
  else
  {
    swift_beginAccess();
    unint64_t v11 = *(void *)v6;
    if (v11 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    double v9 = (v4 + -2.0) / (double)v12;
    double v10 = 0.54;
  }
  double v4 = v9 * v10;
  uint64_t v13 = *(void *)(*(void *)&v0[OBJC_IVAR____TtC16MusicRecognition26SpectralOutputWaveformView_waveformData] + 16);
  if (v13)
  {
    uint64_t v14 = 0;
    double v15 = (uint64_t *)((char *)p_inst_props[316] + (void)v0);
    do
    {
      swift_beginAccess();
      uint64_t v16 = *v15;
      if ((*v15 & 0xC000000000000001) != 0)
      {
        double v17 = (__objc2_prop_list **)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if ((unint64_t)v14 >= *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
LABEL_21:
          swift_bridgeObjectRetain();
          uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        double v17 = (__objc2_prop_list **)*(id *)(v16 + 8 * v14 + 32);
      }
      p_inst_props = v17;
      uint64_t v18 = v14 + 1;
      swift_endAccess();
      id v19 = [p_inst_props layer];
      [v19 setCornerRadius:v4 * 0.5];

      double v20 = v9 * (double)v14;
      double v21 = v20 + 1.0;
      double v22 = (v9 - v4) * 0.5 + v4 * 0.5 + v20;
      if (v0[v1]) {
        double v23 = v22;
      }
      else {
        double v23 = v21;
      }
      [v0 bounds];
      [p_inst_props setCenter:v23, CGRectGetMidY(v25)];
      [p_inst_props bounds];
      [p_inst_props setBounds:0.0, 0.0, v4];

      ++v14;
    }
    while (v13 != v18);
  }
}

id sub_100027C5C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + OBJC_IVAR____TtC16MusicRecognition26SpectralOutputWaveformView_waveformData) = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return sub_100027374();
}

uint64_t type metadata accessor for SpectralOutputWaveformView()
{
  return self;
}

uint64_t getEnumTagSinglePayload for SpectralOutputWaveformStyle(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for SpectralOutputWaveformStyle(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100027E9CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_100027EC4(unsigned char *result, char a2)
{
  *unint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for SpectralOutputWaveformStyle()
{
  return &type metadata for SpectralOutputWaveformStyle;
}

unint64_t sub_100027EE4()
{
  unint64_t result = qword_100157A18;
  if (!qword_100157A18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100157A18);
  }
  return result;
}

void sub_100027F38()
{
  qword_100157A20 = 0x636974617473;
  *(void *)algn_100157A28 = 0xE600000000000000;
}

void sub_100027F58(double a1, double a2, double a3, double a4)
{
  uint64_t v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v11 = OBJC_IVAR____TtC16MusicRecognition21WaveformAccessoryView_waveformView;
  uint64_t v12 = (objc_class *)type metadata accessor for SpectralOutputWaveformView();
  uint64_t v13 = objc_allocWithZone(v12);
  *(void *)&v13[OBJC_IVAR____TtC16MusicRecognition26SpectralOutputWaveformView_barViews] = _swiftEmptyArrayStorage;
  *(void *)&v13[OBJC_IVAR____TtC16MusicRecognition26SpectralOutputWaveformView_waveformData] = _swiftEmptyArrayStorage;
  v13[OBJC_IVAR____TtC16MusicRecognition26SpectralOutputWaveformView_style] = 0;
  v22.receiver = v13;
  v22.super_class = v12;
  uint64_t v14 = v5;
  id v15 = [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  sub_1000275EC();

  *(void *)&v5[v11] = v15;
  id v16 = [self mainBundle];
  id v17 = objc_allocWithZone((Class)BSUICAPackageView);
  NSString v18 = String._bridgeToObjectiveC()();
  id v19 = [v17 initWithPackageName:v18 inBundle:v16];

  if (v19)
  {
    *(void *)&v14[OBJC_IVAR____TtC16MusicRecognition21WaveformAccessoryView_listeningView] = v19;

    v21.receiver = v14;
    v21.super_class = ObjectType;
    id v20 = [super initWithFrame:a1, a2, a3, a4];
    sub_100028108();
  }
  else
  {
    __break(1u);
  }
}

void sub_100028108()
{
  [v0 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC16MusicRecognition21WaveformAccessoryView_waveformView];
  [v1 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v0 addSubview:v1];
  if (qword_1001563D0 != -1) {
    swift_once();
  }
  NSString v2 = String._bridgeToObjectiveC()();
  [v1 setAccessibilityIdentifier:v2];

  int v3 = *(void **)&v0[OBJC_IVAR____TtC16MusicRecognition21WaveformAccessoryView_listeningView];
  [v3 setTranslatesAutoresizingMaskIntoConstraints:0];
  if (qword_1001563C8 != -1) {
    swift_once();
  }
  NSString v4 = String._bridgeToObjectiveC()();
  [v3 setAccessibilityIdentifier:v4];

  [v3 setClipsToBounds:1];
  if (qword_100156080 != -1) {
    swift_once();
  }
  NSString v5 = String._bridgeToObjectiveC()();
  [v3 setState:v5];

  [v0 addSubview:v3];
  uint64_t v27 = self;
  sub_1000060EC(&qword_100157030);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1001113F0;
  id v7 = [v1 centerXAnchor];
  id v8 = [v0 centerXAnchor];
  id v9 = [v7 constraintEqualToAnchor:v8];

  *(void *)(v6 + 32) = v9;
  id v10 = [v1 centerYAnchor];
  id v11 = [v0 centerYAnchor];
  id v12 = [v10 constraintEqualToAnchor:v11];

  *(void *)(v6 + 40) = v12;
  id v13 = [v1 heightAnchor];
  id v14 = [v13 constraintEqualToConstant:24.0];

  *(void *)(v6 + 48) = v14;
  id v15 = [v1 widthAnchor];
  id v16 = [v15 constraintEqualToConstant:24.0];

  *(void *)(v6 + 56) = v16;
  id v17 = [v3 centerXAnchor];
  id v18 = [v0 centerXAnchor];
  id v19 = [v17 constraintEqualToAnchor:v18];

  *(void *)(v6 + 64) = v19;
  id v20 = [v3 centerYAnchor];
  id v21 = [v0 centerYAnchor];
  id v22 = [v20 constraintEqualToAnchor:v21];

  *(void *)(v6 + 72) = v22;
  id v23 = [v3 heightAnchor];
  id v24 = [v23 constraintEqualToConstant:24.0];

  *(void *)(v6 + 80) = v24;
  id v25 = [v3 widthAnchor];
  id v26 = [v25 constraintEqualToConstant:24.0];

  *(void *)(v6 + 88) = v26;
  specialized Array._endMutation()();
  sub_10002882C();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v27 activateConstraints:isa];
}

void sub_1000285F0(void *a1)
{
  NSString v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v5 = OBJC_IVAR____TtC16MusicRecognition21WaveformAccessoryView_waveformView;
  uint64_t v6 = (objc_class *)type metadata accessor for SpectralOutputWaveformView();
  id v7 = objc_allocWithZone(v6);
  *(void *)&v7[OBJC_IVAR____TtC16MusicRecognition26SpectralOutputWaveformView_barViews] = _swiftEmptyArrayStorage;
  *(void *)&v7[OBJC_IVAR____TtC16MusicRecognition26SpectralOutputWaveformView_waveformData] = _swiftEmptyArrayStorage;
  v7[OBJC_IVAR____TtC16MusicRecognition26SpectralOutputWaveformView_style] = 0;
  v17.receiver = v7;
  v17.super_class = v6;
  id v8 = v2;
  [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  sub_1000275EC();

  *(void *)&v2[v5] = v9;
  id v10 = [self mainBundle];
  id v11 = objc_allocWithZone((Class)BSUICAPackageView);
  NSString v12 = String._bridgeToObjectiveC()();
  id v13 = [v11 initWithPackageName:v12 inBundle:v10];

  if (v13)
  {
    *(void *)&v8[OBJC_IVAR____TtC16MusicRecognition21WaveformAccessoryView_listeningView] = v13;

    v16.receiver = v8;
    v16.super_class = ObjectType;
    [super initWithCoder:a1];
    if (v14)
    {
      id v15 = v14;
      sub_100028108();
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t type metadata accessor for WaveformAccessoryView()
{
  return self;
}

unint64_t sub_10002882C()
{
  unint64_t result = qword_100157AD0;
  if (!qword_100157AD0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100157AD0);
  }
  return result;
}

uint64_t *sub_10002886C(uint64_t *a1, uint64_t *a2)
{
  int v4 = *(_DWORD *)(*(void *)(sub_1000060EC(&qword_100156938) - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v6 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v6 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v5 = type metadata accessor for ColorScheme();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100028978(uint64_t a1)
{
  sub_1000060EC(&qword_100156938);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = type metadata accessor for ColorScheme();
    int v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
    return v3(a1, v2);
  }
  else
  {
    return swift_release();
  }
}

void *sub_100028A1C(void *a1, void *a2)
{
  sub_1000060EC(&qword_100156938);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for ColorScheme();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_100028AD8(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_1000063D0((uint64_t)a1, &qword_100156938);
    sub_1000060EC(&qword_100156938);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = type metadata accessor for ColorScheme();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_100028BAC(void *a1, const void *a2)
{
  uint64_t v4 = sub_1000060EC(&qword_100156938);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for ColorScheme();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
  }
  return a1;
}

void *sub_100028C70(void *a1, const void *a2)
{
  if (a1 != a2)
  {
    sub_1000063D0((uint64_t)a1, &qword_100156938);
    uint64_t v4 = sub_1000060EC(&qword_100156938);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v5 = type metadata accessor for ColorScheme();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100028D4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100028D60);
}

uint64_t sub_100028D60(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000060EC(&qword_100157AF0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_100028DD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100028DE4);
}

uint64_t sub_100028DE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000060EC(&qword_100157AF0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for NavigationBarButtonStyle()
{
  uint64_t result = qword_100157B50;
  if (!qword_100157B50) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100028EA4()
{
  sub_100028F30();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_100028F30()
{
  if (!qword_100157B60)
  {
    type metadata accessor for ColorScheme();
    unint64_t v0 = type metadata accessor for Environment.Content();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100157B60);
    }
  }
}

uint64_t sub_100028F88()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100028FA4()
{
  static Color.black.getter();
  uint64_t v0 = Color.opacity(_:)();
  uint64_t result = swift_release();
  qword_100157AE0 = v0;
  return result;
}

uint64_t sub_100028FE8()
{
  uint64_t result = static Color.secondary.getter();
  qword_100157AE8 = result;
  return result;
}

uint64_t sub_100029008@<X0>(uint64_t a1@<X8>)
{
  uint64_t v84 = a1;
  uint64_t v74 = type metadata accessor for ColorScheme();
  uint64_t v81 = *(void *)(v74 - 8);
  uint64_t v1 = __chkstk_darwin(v74);
  v86 = (char *)&v66 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v1);
  uint64_t v85 = (uint64_t)&v66 - v3;
  uint64_t v4 = type metadata accessor for BorderlessButtonStyle();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v77 = v4;
  uint64_t v78 = v5;
  __chkstk_darwin(v4);
  uint64_t v75 = (char *)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for SymbolVariants();
  uint64_t v72 = *(void *)(v7 - 8);
  uint64_t v73 = v7;
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v70 = (char *)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  id v11 = (char *)&v66 - v10;
  uint64_t v12 = type metadata accessor for ButtonStyleConfiguration.Label();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  id v15 = (char *)&v66 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = sub_1000060EC(&qword_100157B90);
  uint64_t v16 = *(void *)(v67 - 8);
  __chkstk_darwin(v67);
  id v18 = (char *)&v66 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1000060EC(&qword_100157B98);
  __chkstk_darwin(v19);
  id v21 = (char *)&v66 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = sub_1000060EC(&qword_100157BA0);
  uint64_t v71 = *(void *)(v69 - 8);
  __chkstk_darwin(v69);
  id v23 = (char *)&v66 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_1000060EC(&qword_100157BA8);
  uint64_t v79 = *(void *)(v24 - 8);
  uint64_t v80 = v24;
  __chkstk_darwin(v24);
  unint64_t v68 = (char *)&v66 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = sub_1000060EC(&qword_100157BB0);
  __chkstk_darwin(v76);
  uint64_t v87 = (uint64_t)&v66 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = sub_1000060EC(&qword_100157BB8);
  __chkstk_darwin(v82);
  uint64_t v83 = (uint64_t)&v66 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  ButtonStyleConfiguration.label.getter();
  static Font.Weight.bold.getter();
  sub_100029BD0(&qword_100157BC0, (void (*)(uint64_t))&type metadata accessor for ButtonStyleConfiguration.Label);
  View.fontWeight(_:)();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  uint64_t v28 = v74;
  uint64_t v29 = static Font.title2.getter();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v31 = v67;
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v21, v18, v67);
  uint64_t v32 = (uint64_t *)&v21[*(int *)(v19 + 36)];
  *uint64_t v32 = KeyPath;
  v32[1] = v29;
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v31);
  static SymbolVariants.circle.getter();
  uint64_t v33 = v70;
  SymbolVariants.fill.getter();
  uint64_t v34 = v73;
  uint64_t v35 = *(void (**)(char *, uint64_t))(v72 + 8);
  v35(v11, v73);
  unint64_t v36 = sub_100029AD0();
  View.symbolVariant(_:)();
  v35(v33, v34);
  sub_1000063D0((uint64_t)v21, &qword_100157B98);
  uint64_t v37 = v75;
  BorderlessButtonStyle.init()();
  uint64_t v88 = v19;
  unint64_t v89 = v36;
  swift_getOpaqueTypeConformance2();
  sub_100029BD0(&qword_100157BD0, (void (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle);
  uint64_t v38 = v68;
  uint64_t v39 = v69;
  uint64_t v40 = v77;
  View.buttonStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v78 + 8))(v37, v40);
  uint64_t v41 = v23;
  uint64_t v42 = v81;
  (*(void (**)(char *, uint64_t))(v71 + 8))(v41, v39);
  id v43 = [self whiteColor];
  uint64_t v77 = Color.init(uiColor:)();
  uint64_t v44 = v85;
  sub_100008414(v85);
  uint64_t v45 = enum case for ColorScheme.light(_:);
  uint64_t v46 = v86;
  uint64_t v78 = *(void *)(v42 + 104);
  ((void (*)(char *, void, uint64_t))v78)(v86, enum case for ColorScheme.light(_:), v28);
  uint64_t v47 = v44;
  LOBYTE(v37) = static ColorScheme.== infix(_:_:)();
  long long v48 = *(void (**)(char *, uint64_t))(v42 + 8);
  v48(v46, v28);
  v48((char *)v47, v28);
  if (v37)
  {
    if (qword_100156088 != -1) {
      swift_once();
    }
    long long v49 = &qword_100157AE0;
  }
  else
  {
    if (qword_100156090 != -1) {
      swift_once();
    }
    long long v49 = &qword_100157AE8;
  }
  uint64_t v50 = *v49;
  swift_retain();
  uint64_t v51 = v79;
  uint64_t v52 = v80;
  uint64_t v53 = v87;
  (*(void (**)(uint64_t, char *, uint64_t))(v79 + 16))(v87, v38, v80);
  uint64_t v54 = (uint64_t *)(v53 + *(int *)(v76 + 36));
  uint64_t *v54 = v77;
  v54[1] = v50;
  (*(void (**)(char *, uint64_t))(v51 + 8))(v38, v52);
  uint64_t v55 = v85;
  sub_100008414(v85);
  uint64_t v56 = v86;
  ((void (*)(char *, uint64_t, uint64_t))v78)(v86, v45, v28);
  char v57 = static ColorScheme.== infix(_:_:)();
  v48(v56, v28);
  v48((char *)v55, v28);
  if (v57)
  {
    if (qword_100156088 != -1) {
      swift_once();
    }
    uint64_t v58 = &qword_100157AE0;
  }
  else
  {
    if (qword_100156090 != -1) {
      swift_once();
    }
    uint64_t v58 = &qword_100157AE8;
  }
  uint64_t v59 = *v58;
  swift_retain();
  uint64_t v60 = swift_getKeyPath();
  uint64_t v88 = v59;
  swift_retain();
  uint64_t v61 = AnyShapeStyle.init<A>(_:)();
  uint64_t v62 = v87;
  uint64_t v63 = v83;
  sub_100029CC8(v87, v83);
  swift_release();
  uint64_t v64 = (uint64_t *)(v63 + *(int *)(v82 + 36));
  *uint64_t v64 = v60;
  v64[1] = v61;
  sub_1000063D0(v62, &qword_100157BB0);
  return sub_100029D30(v63, v84);
}

uint64_t sub_100029A20@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.font.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100029A4C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.font.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100029A78()
{
  return EnvironmentValues.font.setter();
}

uint64_t sub_100029AA4()
{
  return EnvironmentValues.font.setter();
}

unint64_t sub_100029AD0()
{
  unint64_t result = qword_100157BC8;
  if (!qword_100157BC8)
  {
    sub_100006224(&qword_100157B98);
    type metadata accessor for ButtonStyleConfiguration.Label();
    sub_100029BD0(&qword_100157BC0, (void (*)(uint64_t))&type metadata accessor for ButtonStyleConfiguration.Label);
    swift_getOpaqueTypeConformance2();
    sub_100006480(&qword_100156788, &qword_100156790);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100157BC8);
  }
  return result;
}

uint64_t sub_100029BD0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100029C18@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.tint.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100029C44@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.tint.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100029C70()
{
  return EnvironmentValues.tint.setter();
}

uint64_t sub_100029C9C()
{
  return EnvironmentValues.tint.setter();
}

uint64_t sub_100029CC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000060EC(&qword_100157BB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100029D30(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000060EC(&qword_100157BB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_100029D9C()
{
  unint64_t result = qword_100157BD8;
  if (!qword_100157BD8)
  {
    sub_100006224(&qword_100157BB8);
    sub_100029E3C();
    sub_100006480(&qword_100157BF8, &qword_100157C00);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100157BD8);
  }
  return result;
}

unint64_t sub_100029E3C()
{
  unint64_t result = qword_100157BE0;
  if (!qword_100157BE0)
  {
    sub_100006224(&qword_100157BB0);
    sub_100006224(&qword_100157BA0);
    type metadata accessor for BorderlessButtonStyle();
    sub_100006224(&qword_100157B98);
    sub_100029AD0();
    swift_getOpaqueTypeConformance2();
    sub_100029BD0(&qword_100157BD0, (void (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle);
    swift_getOpaqueTypeConformance2();
    sub_100006480(&qword_100157BE8, &qword_100157BF0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100157BE0);
  }
  return result;
}

uint64_t sub_100029F94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v8 = sub_1000060EC((uint64_t *)&unk_100158FC0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = (void *)((char *)a4 + *(int *)(type metadata accessor for AddToPlaylistView() + 20));
  *id v11 = swift_getKeyPath();
  sub_1000060EC(&qword_100156940);
  swift_storeEnumTagMultiPayload();
  type metadata accessor for AddToPlaylistViewModel();
  uint64_t v12 = swift_allocObject();
  swift_retain();
  swift_retain();
  URL.init(string:)();
  uint64_t v13 = type metadata accessor for URL();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v10, 1, v13);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(v12 + OBJC_IVAR____TtC16MusicRecognition22AddToPlaylistViewModel_appleMusicBaseURL, v10, v13);
    uint64_t v16 = v12 + OBJC_IVAR____TtC16MusicRecognition22AddToPlaylistViewModel__state;
    *(void *)uint64_t v16 = 1;
    *(_OWORD *)(v16 + 8) = 0u;
    *(_OWORD *)(v16 + 24) = 0u;
    *(void *)(v16 + 40) = 0;
    ObservationRegistrar.init()();
    *(void *)(v12 + OBJC_IVAR____TtC16MusicRecognition22AddToPlaylistViewModel_libraryController) = a1;
    uint64_t v17 = (void *)(v12 + OBJC_IVAR____TtC16MusicRecognition22AddToPlaylistViewModel_onDismissHandler);
    *uint64_t v17 = a2;
    v17[1] = a3;
    v19[1] = v12;
    State.init(wrappedValue:)();
    swift_release();
    uint64_t result = swift_release();
    uint64_t v18 = v19[3];
    *a4 = v19[2];
    a4[1] = v18;
  }
  return result;
}

uint64_t type metadata accessor for AddToPlaylistView()
{
  uint64_t result = qword_100157C80;
  if (!qword_100157C80) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10002A210@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = (uint64_t)v1;
  uint64_t v102 = a1;
  uint64_t v103 = sub_1000060EC(&qword_100157CB8);
  uint64_t v90 = *(void *)(v103 - 8);
  __chkstk_darwin(v103);
  uint64_t v89 = (uint64_t)&v85 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v99 = sub_1000060EC(&qword_100157CC0);
  v93 = *(void (***)(uint64_t, uint64_t, unint64_t))(v99 - 8);
  __chkstk_darwin(v99);
  uint64_t v92 = (uint64_t)&v85 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = sub_1000060EC(&qword_100157CC8);
  uint64_t v5 = __chkstk_darwin(v96);
  uint64_t v7 = (char *)&v85 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v95 = (char *)&v85 - v8;
  unint64_t v98 = sub_1000060EC(&qword_100157CD0);
  __chkstk_darwin(v98);
  uint64_t v101 = (uint64_t)&v85 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v91 = (void *)sub_1000060EC(&qword_100157CD8);
  __chkstk_darwin(v91);
  uint64_t v94 = (uint64_t)&v85 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = sub_1000060EC(&qword_100157CE0);
  __chkstk_darwin(v100);
  uint64_t v97 = (char *)&v85 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = type metadata accessor for _TaskModifier();
  __chkstk_darwin(v87);
  uint64_t v13 = (char *)&v85 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for TaskPriority();
  uint64_t v88 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v85 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for AddToPlaylistView();
  uint64_t v86 = *(void *)(v17 - 8);
  uint64_t v18 = *(void *)(v86 + 64);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = v1[1];
  uint64_t v112 = *v1;
  uint64_t v113 = v19;
  sub_1000060EC(&qword_100157CE8);
  State.wrappedValue.getter();
  uint64_t v20 = v108;
  swift_getKeyPath();
  uint64_t v112 = v20;
  sub_10002F6D4((unint64_t *)&qword_100157CF0, (void (*)(uint64_t))type metadata accessor for AddToPlaylistViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v21 = v20 + OBJC_IVAR____TtC16MusicRecognition22AddToPlaylistViewModel__state;
  swift_beginAccess();
  sub_10002F338(v21, (uint64_t)&v112);
  swift_release();
  uint64_t v22 = v112;
  if (v112)
  {
    if (v112 == 1)
    {
      v93 = (void (**)(uint64_t, uint64_t, unint64_t))LocalizedStringKey.init(stringLiteral:)();
      uint64_t v24 = v23;
      LODWORD(v92) = v25;
      uint64_t v27 = v26;
      sub_10002FB1C(v2, (uint64_t)&v85 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for AddToPlaylistView);
      unint64_t v28 = (*(unsigned __int8 *)(v86 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v86 + 80);
      uint64_t v29 = swift_allocObject();
      sub_10002F720((uint64_t)&v85 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), v29 + v28);
      static TaskPriority.userInitiated.getter();
      uint64_t v30 = v88;
      (*(void (**)(char *, char *, uint64_t))(v88 + 16))(&v13[*(int *)(v87 + 20)], v16, v14);
      *(void *)uint64_t v13 = &unk_100157D88;
      *((void *)v13 + 1) = v29;
      sub_10002FB1C((uint64_t)v13, (uint64_t)&v7[*(int *)(v96 + 36)], (uint64_t (*)(void))&type metadata accessor for _TaskModifier);
      *(void *)uint64_t v7 = v93;
      *((void *)v7 + 1) = v24;
      v7[16] = v92 & 1;
      *((void *)v7 + 3) = v27;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_10002FB84((uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for _TaskModifier);
      (*(void (**)(char *, uint64_t))(v30 + 8))(v16, v14);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v31 = (uint64_t)v95;
      sub_100009C30((uint64_t)v7, (uint64_t)v95, &qword_100157CC8);
      sub_100009C94(v31, v94, &qword_100157CC8);
      swift_storeEnumTagMultiPayload();
      sub_10002F504();
      uint64_t v32 = sub_100006224(&qword_100157D18);
      uint64_t v33 = sub_100006224(&qword_100157D20);
      id v91 = (void *)v33;
      uint64_t v34 = sub_100006224(&qword_100157D28);
      uint64_t v35 = sub_100006224(&qword_100157D30);
      uint64_t v36 = sub_100006480(&qword_100157D38, &qword_100157D30);
      uint64_t v108 = v35;
      uint64_t v109 = v36;
      v93 = (void (**)(uint64_t, uint64_t, unint64_t))&opaque type descriptor for <<opaque return type of View.navigationTitle(_:)>>;
      uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
      uint64_t v108 = v34;
      uint64_t v109 = OpaqueTypeConformance2;
      uint64_t v92 = (uint64_t)&opaque type descriptor for <<opaque return type of View.navigationBarTitleDisplayMode(_:)>>;
      uint64_t v38 = swift_getOpaqueTypeConformance2();
      unint64_t v39 = sub_10002F604();
      uint64_t v108 = v32;
      uint64_t v109 = v33;
      uint64_t v110 = v38;
      uint64_t v111 = (void *)v39;
      swift_getOpaqueTypeConformance2();
      uint64_t v40 = (uint64_t)v97;
      _ConditionalContent<>.init(storage:)();
      sub_100009C94(v40, v101, &qword_100157CE0);
      swift_storeEnumTagMultiPayload();
      unint64_t v99 = sub_10002F394();
      uint64_t v41 = sub_100006224(&qword_100157D58);
      uint64_t v42 = sub_100006224(&qword_100157D60);
      uint64_t v43 = sub_100006224(&qword_100157D68);
      uint64_t v44 = sub_100006224(&qword_100157D70);
      uint64_t v45 = type metadata accessor for InsetListStyle();
      uint64_t v46 = sub_100006480(&qword_100157D78, &qword_100157D70);
      uint64_t v108 = v44;
      uint64_t v109 = v45;
      uint64_t v110 = v46;
      uint64_t v111 = &protocol witness table for InsetListStyle;
      uint64_t v47 = swift_getOpaqueTypeConformance2();
      uint64_t v108 = v43;
      uint64_t v109 = v47;
      uint64_t v48 = swift_getOpaqueTypeConformance2();
      uint64_t v108 = v42;
      uint64_t v109 = v48;
      uint64_t v49 = swift_getOpaqueTypeConformance2();
      uint64_t v108 = v41;
      uint64_t v109 = (uint64_t)v91;
      uint64_t v110 = v49;
      uint64_t v111 = (void *)v39;
      swift_getOpaqueTypeConformance2();
      _ConditionalContent<>.init(storage:)();
      sub_1000063D0(v40, &qword_100157CE0);
      uint64_t v50 = (uint64_t *)v95;
      uint64_t v51 = &qword_100157CC8;
    }
    else
    {
      sub_100009C30((uint64_t)&v113, (uint64_t)&v108, &qword_100157CF8);
      uint64_t v72 = v89;
      sub_10002B884(v22, (uint64_t)&v108, v89);
      swift_bridgeObjectRelease();
      uint64_t v73 = v90;
      uint64_t v74 = v103;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v90 + 16))(v101, v72, v103);
      swift_storeEnumTagMultiPayload();
      unint64_t v99 = sub_10002F394();
      unint64_t v98 = sub_100006224(&qword_100157D58);
      uint64_t v75 = sub_100006224(&qword_100157D20);
      uint64_t v76 = sub_100006224(&qword_100157D60);
      uint64_t v77 = sub_100006224(&qword_100157D68);
      uint64_t v78 = sub_100006224(&qword_100157D70);
      uint64_t v79 = type metadata accessor for InsetListStyle();
      uint64_t v80 = sub_100006480(&qword_100157D78, &qword_100157D70);
      unint64_t v104 = v78;
      uint64_t v105 = v79;
      uint64_t v106 = v80;
      unint64_t v107 = &protocol witness table for InsetListStyle;
      uint64_t v81 = swift_getOpaqueTypeConformance2();
      unint64_t v104 = v77;
      uint64_t v105 = v81;
      uint64_t v82 = swift_getOpaqueTypeConformance2();
      unint64_t v104 = v76;
      uint64_t v105 = v82;
      uint64_t v83 = swift_getOpaqueTypeConformance2();
      unint64_t v84 = sub_10002F604();
      unint64_t v104 = v98;
      uint64_t v105 = v75;
      uint64_t v106 = v83;
      unint64_t v107 = (void *)v84;
      swift_getOpaqueTypeConformance2();
      _ConditionalContent<>.init(storage:)();
      (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v72, v74);
      uint64_t v50 = &v108;
      uint64_t v51 = &qword_100157CF8;
    }
    return sub_1000063D0((uint64_t)v50, v51);
  }
  else
  {
    uint64_t v52 = v92;
    sub_10002B3A0(v92);
    v93[2](v94, v52, v99);
    swift_storeEnumTagMultiPayload();
    sub_10002F504();
    uint64_t v53 = sub_100006224(&qword_100157D18);
    uint64_t v54 = sub_100006224(&qword_100157D20);
    uint64_t v90 = v54;
    uint64_t v55 = sub_100006224(&qword_100157D28);
    uint64_t v56 = sub_100006224(&qword_100157D30);
    uint64_t v57 = sub_100006480(&qword_100157D38, &qword_100157D30);
    uint64_t v108 = v56;
    uint64_t v109 = v57;
    uint64_t v95 = (char *)&opaque type descriptor for <<opaque return type of View.navigationTitle(_:)>>;
    uint64_t v58 = swift_getOpaqueTypeConformance2();
    uint64_t v108 = v55;
    uint64_t v109 = v58;
    id v91 = &opaque type descriptor for <<opaque return type of View.navigationBarTitleDisplayMode(_:)>>;
    uint64_t v59 = swift_getOpaqueTypeConformance2();
    unint64_t v60 = sub_10002F604();
    uint64_t v108 = v53;
    uint64_t v109 = v54;
    uint64_t v110 = v59;
    uint64_t v111 = (void *)v60;
    swift_getOpaqueTypeConformance2();
    uint64_t v61 = (uint64_t)v97;
    _ConditionalContent<>.init(storage:)();
    sub_100009C94(v61, v101, &qword_100157CE0);
    swift_storeEnumTagMultiPayload();
    unint64_t v98 = sub_10002F394();
    uint64_t v62 = sub_100006224(&qword_100157D58);
    uint64_t v63 = sub_100006224(&qword_100157D60);
    uint64_t v64 = sub_100006224(&qword_100157D68);
    uint64_t v65 = sub_100006224(&qword_100157D70);
    uint64_t v66 = type metadata accessor for InsetListStyle();
    uint64_t v67 = sub_100006480(&qword_100157D78, &qword_100157D70);
    uint64_t v108 = v65;
    uint64_t v109 = v66;
    uint64_t v110 = v67;
    uint64_t v111 = &protocol witness table for InsetListStyle;
    uint64_t v68 = swift_getOpaqueTypeConformance2();
    uint64_t v108 = v64;
    uint64_t v109 = v68;
    uint64_t v69 = swift_getOpaqueTypeConformance2();
    uint64_t v108 = v63;
    uint64_t v109 = v69;
    uint64_t v70 = swift_getOpaqueTypeConformance2();
    uint64_t v108 = v62;
    uint64_t v109 = v90;
    uint64_t v110 = v70;
    uint64_t v111 = (void *)v60;
    swift_getOpaqueTypeConformance2();
    _ConditionalContent<>.init(storage:)();
    sub_1000063D0(v61, &qword_100157CE0);
    return ((uint64_t (*)(uint64_t, unint64_t))v93[1])(v92, v99);
  }
}

uint64_t sub_10002B0A4(uint64_t a1)
{
  v1[5] = a1;
  type metadata accessor for MainActor();
  v1[6] = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[7] = v3;
  v1[8] = v2;
  return _swift_task_switch(sub_10002B13C, v3, v2);
}

uint64_t sub_10002B13C()
{
  uint64_t v1 = (uint64_t *)v0[5];
  uint64_t v3 = *v1;
  uint64_t v2 = v1[1];
  v0[2] = v3;
  v0[3] = v2;
  sub_1000060EC(&qword_100157CE8);
  State.wrappedValue.getter();
  v0[9] = v0[4];
  uint64_t v4 = (void *)swift_task_alloc();
  v0[10] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_10002B1FC;
  return sub_10006BFCC();
}

uint64_t sub_10002B1FC()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 64);
  uint64_t v3 = *(void *)(v1 + 56);
  return _swift_task_switch(sub_10002B340, v3, v2);
}

uint64_t sub_10002B340()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10002B3A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v35 = a1;
  uint64_t v2 = type metadata accessor for NavigationBarItem.TitleDisplayMode();
  uint64_t v31 = *(void *)(v2 - 8);
  uint64_t v32 = v2;
  __chkstk_darwin(v2);
  uint64_t v29 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000060EC(&qword_100157D30);
  uint64_t v27 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_1000060EC(&qword_100157D28);
  uint64_t v30 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000060EC(&qword_100157D18);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v33 = v9;
  uint64_t v34 = v10;
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = v1;
  sub_1000060EC(&qword_100157D90);
  sub_10002F858();
  ContentUnavailableView.init(label:description:actions:)();
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v13 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v15 = v14;
  char v17 = v16 & 1;
  uint64_t v18 = sub_100006480(&qword_100157D38, &qword_100157D30);
  View.navigationTitle(_:)();
  sub_10000E904(v13, v15, v17);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v6, v4);
  uint64_t v20 = v31;
  uint64_t v19 = v32;
  uint64_t v21 = v29;
  (*(void (**)(char *, void, uint64_t))(v31 + 104))(v29, enum case for NavigationBarItem.TitleDisplayMode.inline(_:), v32);
  uint64_t v38 = v4;
  uint64_t v39 = v18;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v23 = v28;
  View.navigationBarTitleDisplayMode(_:)();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v21, v19);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v8, v23);
  uint64_t v36 = v26;
  sub_1000060EC(&qword_100157D20);
  uint64_t v38 = v23;
  uint64_t v39 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  sub_10002F604();
  uint64_t v24 = v33;
  View.toolbar<A>(content:)();
  return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v12, v24);
}

uint64_t sub_10002B884@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v52 = a3;
  uint64_t v6 = type metadata accessor for NavigationBarItem.TitleDisplayMode();
  uint64_t v50 = *(void *)(v6 - 8);
  uint64_t v51 = v6;
  __chkstk_darwin(v6);
  uint64_t v49 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for InsetListStyle();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000060EC(&qword_100157D70);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_1000060EC(&qword_100157D68);
  uint64_t v44 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  char v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_1000060EC(&qword_100157D60);
  uint64_t v46 = *(void *)(v45 - 8);
  __chkstk_darwin(v45);
  uint64_t v40 = (char *)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1000060EC(&qword_100157D58);
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v47 = v19;
  uint64_t v48 = v20;
  __chkstk_darwin(v19);
  uint64_t v41 = (char *)&v39 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = a2;
  uint64_t v55 = v3;
  uint64_t v56 = a1;
  sub_1000060EC(&qword_100157DF0);
  sub_100006480(&qword_100157DF8, &qword_100157DF0);
  List<>.init(content:)();
  InsetListStyle.init()();
  uint64_t v22 = sub_100006480(&qword_100157D78, &qword_100157D70);
  View.listStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v23 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v25 = v24;
  uint64_t v57 = v12;
  uint64_t v58 = v8;
  LOBYTE(v8) = v26 & 1;
  uint64_t v59 = v22;
  unint64_t v60 = &protocol witness table for InsetListStyle;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v28 = v40;
  uint64_t v29 = v42;
  View.navigationTitle(_:)();
  sub_10000E904(v23, v25, v8);
  swift_bridgeObjectRelease();
  uint64_t v30 = v29;
  (*(void (**)(char *, uint64_t))(v44 + 8))(v17, v29);
  uint64_t v31 = v49;
  uint64_t v32 = v50;
  uint64_t v33 = v51;
  (*(void (**)(char *, void, uint64_t))(v50 + 104))(v49, enum case for NavigationBarItem.TitleDisplayMode.inline(_:), v51);
  uint64_t v57 = v30;
  uint64_t v58 = OpaqueTypeConformance2;
  uint64_t v34 = swift_getOpaqueTypeConformance2();
  uint64_t v35 = v41;
  uint64_t v36 = v45;
  View.navigationBarTitleDisplayMode(_:)();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v31, v33);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v28, v36);
  uint64_t v53 = v43;
  sub_1000060EC(&qword_100157D20);
  uint64_t v57 = v36;
  uint64_t v58 = v34;
  swift_getOpaqueTypeConformance2();
  sub_10002F604();
  uint64_t v37 = v47;
  View.toolbar<A>(content:)();
  return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v35, v37);
}

uint64_t sub_10002BF24@<X0>(uint64_t a1@<X8>)
{
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v2 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v4 = v3;
  char v6 = v5 & 1;
  static Font.title2.getter();
  uint64_t v7 = Text.font(_:)();
  uint64_t v9 = v8;
  char v11 = v10;
  swift_release();
  sub_10000E904(v2, v4, v6);
  swift_bridgeObjectRelease();
  uint64_t v12 = Text.bold()();
  uint64_t v14 = v13;
  char v16 = v15;
  uint64_t v18 = v17;
  sub_10000E904(v7, v9, v11 & 1);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a1 = v12;
  *(void *)(a1 + 8) = v14;
  *(unsigned char *)(a1 + 16) = v16 & 1;
  *(void *)(a1 + 24) = v18;
  return result;
}

uint64_t sub_10002C058@<X0>(uint64_t a1@<X8>)
{
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v2 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v4 = v3;
  char v6 = v5 & 1;
  static HierarchicalShapeStyle.secondary.getter();
  uint64_t v7 = Text.foregroundStyle<A>(_:)();
  uint64_t v9 = v8;
  char v11 = v10 & 1;
  sub_10000E904(v2, v4, v6);
  swift_bridgeObjectRelease();
  static Font.subheadline.getter();
  uint64_t v12 = Text.font(_:)();
  uint64_t v14 = v13;
  char v16 = v15;
  uint64_t v18 = v17;
  swift_release();
  sub_10000E904(v7, v9, v11);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a1 = v12;
  *(void *)(a1 + 8) = v14;
  *(unsigned char *)(a1 + 16) = v16 & 1;
  *(void *)(a1 + 24) = v18;
  return result;
}

uint64_t sub_10002C1A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for AddToPlaylistView();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4 - 8);
  uint64_t v7 = sub_1000060EC(&qword_100157DA8);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  char v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002FB1C(a1, (uint64_t)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for AddToPlaylistView);
  unint64_t v11 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v12 = swift_allocObject();
  sub_10002F720((uint64_t)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v12 + v11);
  sub_1000060EC(&qword_100157DB0);
  sub_10002F98C();
  Button.init(action:label:)();
  LODWORD(a1) = static HierarchicalShapeStyle.secondary.getter();
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 16))(a2, v10, v7);
  *(_DWORD *)(a2 + *(int *)(sub_1000060EC(&qword_100157D90) + 36)) = a1;
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_10002C3C8(void *a1)
{
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for OpenURLAction();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for AddToPlaylistView();
  sub_1000083D4((uint64_t)v9);
  uint64_t v10 = a1[1];
  v12[1] = *a1;
  v12[2] = v10;
  sub_1000060EC(&qword_100157CE8);
  State.wrappedValue.getter();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v12[3] + OBJC_IVAR____TtC16MusicRecognition22AddToPlaylistViewModel_appleMusicBaseURL, v2);
  swift_release();
  OpenURLAction.callAsFunction(_:)();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_10002C5A4@<X0>(_OWORD *a1@<X8>)
{
  uint64_t v49 = sub_1000060EC(&qword_100157DE8) - 8;
  __chkstk_darwin(v49);
  uint64_t v48 = (uint64_t)&v45 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for RoundedRectangle();
  uint64_t v4 = v3 - 8;
  __chkstk_darwin(v3);
  uint64_t v6 = (_OWORD *)((char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_1000060EC(&qword_1001579A0);
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7);
  uint64_t v45 = (uint64_t)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v10 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v47 = v10;
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  char v16 = v15 & 1;
  int v46 = v15 & 1;
  char v17 = static Edge.Set.horizontal.getter();
  char v18 = static Edge.Set.vertical.getter();
  EdgeInsets.init(_all:)();
  *(void *)&long long v53 = v10;
  *((void *)&v53 + 1) = v12;
  uint64_t v19 = v12;
  LOBYTE(v54) = v16;
  *((void *)&v54 + 1) = v14;
  v55[0] = v17;
  memset(&v55[8], 0, 32);
  v55[40] = 1;
  LOBYTE(v56) = v18;
  *((void *)&v56 + 1) = v20;
  *(void *)uint64_t v57 = v21;
  *(void *)&v57[8] = v22;
  *(void *)&v57[16] = v23;
  v57[24] = 0;
  uint64_t v24 = (char *)v6 + *(int *)(v4 + 28);
  uint64_t v25 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v26 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 104))(v24, v25, v26);
  __asm { FMOV            V0.2D, #3.0 }
  *uint64_t v6 = _Q0;
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
  uint64_t v32 = v45;
  sub_10002FB1C((uint64_t)v6, v45, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  uint64_t v33 = v32 + *(int *)(v8 + 44);
  long long v34 = v51;
  *(_OWORD *)uint64_t v33 = v50;
  *(_OWORD *)(v33 + 16) = v34;
  *(void *)(v33 + 32) = v52;
  sub_10002FB84((uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  uint64_t v35 = static Alignment.center.getter();
  uint64_t v37 = v36;
  uint64_t v38 = v48;
  sub_100009C94(v32, v48, &qword_1001579A0);
  uint64_t v39 = (uint64_t *)(v38 + *(int *)(v49 + 44));
  *uint64_t v39 = v35;
  v39[1] = v37;
  uint64_t v40 = sub_1000060EC(&qword_100157DB0);
  sub_100009C94(v38, (uint64_t)a1 + *(int *)(v40 + 36), &qword_100157DE8);
  long long v41 = v56;
  a1[4] = *(_OWORD *)&v55[32];
  a1[5] = v41;
  a1[6] = *(_OWORD *)v57;
  *(_OWORD *)((char *)a1 + 105) = *(_OWORD *)&v57[9];
  long long v42 = v54;
  *a1 = v53;
  a1[1] = v42;
  long long v43 = *(_OWORD *)&v55[16];
  a1[2] = *(_OWORD *)v55;
  a1[3] = v43;
  sub_10002FBE4((uint64_t)&v53);
  sub_1000063D0(v38, &qword_100157DE8);
  sub_1000063D0(v32, &qword_1001579A0);
  sub_10000E904(v47, v19, v46);
  return swift_bridgeObjectRelease();
}

uint64_t sub_10002C950@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v97 = a3;
  uint64_t v93 = sub_1000060EC(&qword_100157E00);
  uint64_t v91 = *(void *)(v93 - 8);
  __chkstk_darwin(v93);
  uint64_t v90 = (char *)&v80 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000060EC(&qword_100157E08);
  uint64_t v95 = *(void *)(v6 - 8);
  uint64_t v96 = v6;
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v94 = (char *)&v80 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v92 = (char *)&v80 - v9;
  uint64_t v10 = sub_1000060EC(&qword_100157E10);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v80 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000060EC(&qword_100157E18);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  char v17 = (char *)&v80 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1000060EC(&qword_100157E20);
  uint64_t v19 = __chkstk_darwin(v18 - 8);
  uint64_t v89 = (uint64_t)&v80 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v98 = (uint64_t)&v80 - v21;
  uint64_t v22 = sub_100009C94(a1, (uint64_t)&v99, &qword_100157CF8);
  if (*((void *)&v100 + 1))
  {
    uint64_t v87 = &v80;
    long long v102 = v99;
    long long v103 = v100;
    uint64_t v104 = v101;
    __chkstk_darwin(v22);
    uint64_t v86 = &v80 - 4;
    LocalizedStringKey.init(stringLiteral:)();
    uint64_t v23 = Text.init(_:tableName:bundle:comment:)();
    uint64_t v84 = v10;
    uint64_t v24 = v23;
    uint64_t v85 = v11;
    uint64_t v26 = v25;
    uint64_t v83 = v17;
    uint64_t v81 = v13;
    char v28 = v27 & 1;
    static Font.Weight.semibold.getter();
    uint64_t v29 = Text.fontWeight(_:)();
    uint64_t v88 = a2;
    uint64_t v30 = v29;
    uint64_t v32 = v31;
    uint64_t v82 = v14;
    char v34 = v33 & 1;
    sub_10000E904(v24, v26, v28);
    swift_bridgeObjectRelease();
    static Color.primary.getter();
    uint64_t v35 = Text.foregroundColor(_:)();
    uint64_t v37 = v36;
    char v39 = v38;
    uint64_t v80 = v15;
    uint64_t v41 = v40;
    swift_release();
    sub_10000E904(v30, v32, v34);
    swift_bridgeObjectRelease();
    *(void *)&long long v99 = v35;
    *((void *)&v99 + 1) = v37;
    LOBYTE(v100) = v39 & 1;
    *((void *)&v100 + 1) = v41;
    sub_1000060EC(&qword_100157E40);
    sub_10002FD6C();
    long long v42 = v81;
    Section<>.init(header:content:)();
    static VerticalEdge.Set.all.getter();
    sub_10002FE74(&qword_100157E60, &qword_100157E10, (void (*)(void))sub_10002FD6C);
    long long v43 = v83;
    uint64_t v44 = v84;
    View.listSectionSeparator(_:edges:)();
    (*(void (**)(char *, uint64_t))(v85 + 8))(v42, v44);
    uint64_t v45 = v80;
    uint64_t v46 = v98;
    uint64_t v47 = v43;
    uint64_t v48 = v82;
    (*(void (**)(uint64_t, char *, uint64_t))(v80 + 32))(v98, v47, v82);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v45 + 56))(v46, 0, 1, v48);
    uint64_t v49 = sub_10002FF00((uint64_t)&v102);
  }
  else
  {
    sub_1000063D0((uint64_t)&v99, &qword_100157CF8);
    uint64_t v49 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56))(v98, 1, 1, v14);
  }
  uint64_t v88 = &v80;
  __chkstk_darwin(v49);
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v50 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v52 = v51;
  char v54 = v53 & 1;
  static Font.Weight.semibold.getter();
  uint64_t v55 = Text.fontWeight(_:)();
  uint64_t v57 = v56;
  char v59 = v58 & 1;
  sub_10000E904(v50, v52, v54);
  swift_bridgeObjectRelease();
  static Color.primary.getter();
  uint64_t v60 = Text.foregroundColor(_:)();
  uint64_t v62 = v61;
  char v64 = v63;
  uint64_t v66 = v65;
  swift_release();
  sub_10000E904(v55, v57, v59);
  swift_bridgeObjectRelease();
  *(void *)&long long v102 = v60;
  *((void *)&v102 + 1) = v62;
  LOBYTE(v103) = v64 & 1;
  *((void *)&v103 + 1) = v66;
  sub_1000060EC(&qword_100157E28);
  sub_10002FCF8();
  uint64_t v67 = v90;
  Section<>.init(header:content:)();
  static VerticalEdge.Set.all.getter();
  sub_10002FE74(&qword_100157E50, &qword_100157E00, (void (*)(void))sub_10002FCF8);
  uint64_t v68 = v94;
  uint64_t v69 = v93;
  View.listSectionSeparator(_:edges:)();
  (*(void (**)(char *, uint64_t))(v91 + 8))(v67, v69);
  uint64_t v71 = v95;
  uint64_t v70 = v96;
  uint64_t v72 = v92;
  (*(void (**)(char *, char *, uint64_t))(v95 + 32))(v92, v68, v96);
  uint64_t v73 = v98;
  uint64_t v74 = v89;
  sub_100009C94(v98, v89, &qword_100157E20);
  uint64_t v75 = *(void (**)(char *, char *, uint64_t))(v71 + 16);
  v75(v68, v72, v70);
  uint64_t v76 = v97;
  sub_100009C94(v74, v97, &qword_100157E20);
  uint64_t v77 = sub_1000060EC(&qword_100157E58);
  v75((char *)(v76 + *(int *)(v77 + 48)), v68, v70);
  uint64_t v78 = *(void (**)(char *, uint64_t))(v71 + 8);
  v78(v72, v70);
  sub_1000063D0(v73, &qword_100157E20);
  v78(v68, v70);
  return sub_1000063D0(v74, &qword_100157E20);
}

uint64_t sub_10002D258(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AddToPlaylistView();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4 - 8);
  sub_10002FF54(a1, (uint64_t)v14);
  sub_10002FB1C(a2, (uint64_t)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for AddToPlaylistView);
  sub_10002FF54(a1, (uint64_t)v12);
  unint64_t v7 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = swift_allocObject();
  sub_10002F720((uint64_t)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v8 + v7);
  unint64_t v9 = v8 + ((v6 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
  long long v10 = v12[1];
  *(_OWORD *)unint64_t v9 = v12[0];
  *(_OWORD *)(v9 + 16) = v10;
  *(void *)(v9 + 32) = v13;
  v16[0] = v14[0];
  v16[1] = v14[1];
  uint64_t v17 = v15;
  uint64_t v18 = sub_10002FFB4;
  uint64_t v19 = v8;
  sub_10002FE18();
  View.accessibilityIdentifier(_:)();
  return sub_10002FFD4((uint64_t)v16);
}

uint64_t sub_10002D3F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AddToPlaylistView();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4 - 8);
  v10[1] = a1;
  swift_getKeyPath();
  sub_10002FB1C(a2, (uint64_t)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for AddToPlaylistView);
  unint64_t v7 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = swift_allocObject();
  sub_10002F720((uint64_t)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v8 + v7);
  swift_bridgeObjectRetain();
  sub_1000060EC(&qword_100157E78);
  sub_1000060EC(&qword_100157E40);
  sub_100006480(&qword_100157E80, &qword_100157E78);
  sub_10002FD6C();
  return ForEach<>.init(_:id:content:)();
}

uint64_t sub_10002D5AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AddToPlaylistView();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4 - 8);
  sub_10002FF54(a1, (uint64_t)v14);
  sub_10002FB1C(a2, (uint64_t)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for AddToPlaylistView);
  sub_10002FF54(a1, (uint64_t)v12);
  unint64_t v7 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = swift_allocObject();
  sub_10002F720((uint64_t)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v8 + v7);
  unint64_t v9 = v8 + ((v6 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
  long long v10 = v12[1];
  *(_OWORD *)unint64_t v9 = v12[0];
  *(_OWORD *)(v9 + 16) = v10;
  *(void *)(v9 + 32) = v13;
  v16[0] = v14[0];
  v16[1] = v14[1];
  uint64_t v17 = v15;
  uint64_t v18 = sub_100030470;
  uint64_t v19 = v8;
  if (qword_100156320 != -1) {
    swift_once();
  }
  sub_10002FE18();
  View.accessibilityIdentifier(_:)();
  return sub_10002FFD4((uint64_t)v16);
}

uint64_t sub_10002D774(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for AddToPlaylistView();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7 - 8);
  uint64_t v10 = sub_1000060EC(&qword_100157038);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a2[3];
  uint64_t v14 = a2[4];
  sub_100010740(a2, v13);
  uint64_t v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v13, v14);
  uint64_t v17 = v16;
  uint64_t v18 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v12, 1, 1, v18);
  sub_10002FB1C(a1, (uint64_t)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for AddToPlaylistView);
  type metadata accessor for MainActor();
  swift_bridgeObjectRetain();
  uint64_t v19 = static MainActor.shared.getter();
  unint64_t v20 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = v19;
  *(void *)(v21 + 24) = &protocol witness table for MainActor;
  sub_10002F720((uint64_t)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v21 + v20);
  uint64_t v22 = (uint64_t *)(v21 + ((v9 + v20 + 7) & 0xFFFFFFFFFFFFFFF8));
  *uint64_t v22 = v15;
  v22[1] = v17;
  sub_1000DC37C((uint64_t)v12, a4, v21);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_10002D9A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v13[1] = a2;
  uint64_t v3 = type metadata accessor for AddToPlaylistView();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v3 - 8);
  uint64_t v6 = sub_1000060EC(&qword_100157D50);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002FB1C(a1, (uint64_t)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for AddToPlaylistView);
  unint64_t v10 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v11 = swift_allocObject();
  sub_10002F720((uint64_t)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v11 + v10);
  Button.init(action:label:)();
  sub_100006480(&qword_100157D48, &qword_100157D50);
  View.accessibilityIdentifier(_:)();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_10002DBD0()
{
  sub_1000060EC(&qword_100157CE8);
  State.wrappedValue.getter();
  uint64_t v0 = *(void (**)(uint64_t))(v3 + OBJC_IVAR____TtC16MusicRecognition22AddToPlaylistViewModel_onDismissHandler);
  swift_retain();
  uint64_t v1 = swift_release();
  v0(v1);
  return swift_release();
}

uint64_t sub_10002DC54@<X0>(uint64_t a1@<X8>)
{
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t result = Text.init(_:tableName:bundle:comment:)();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_10002DCCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[9] = a5;
  v6[10] = a6;
  v6[8] = a4;
  type metadata accessor for MainActor();
  v6[11] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v6[12] = v8;
  v6[13] = v7;
  return _swift_task_switch(sub_10002DD68, v8, v7);
}

uint64_t sub_10002DD68()
{
  uint64_t v1 = (uint64_t *)v0[8];
  uint64_t v2 = *v1;
  uint64_t v3 = v1[1];
  v0[2] = *v1;
  v0[3] = v3;
  sub_1000060EC(&qword_100157CE8);
  State.wrappedValue.getter();
  char v4 = *(void (**)(uint64_t))(v0[6]
                                      + OBJC_IVAR____TtC16MusicRecognition22AddToPlaylistViewModel_onDismissHandler);
  swift_retain();
  uint64_t v5 = swift_release();
  v4(v5);
  swift_release();
  v0[4] = v2;
  v0[5] = v3;
  State.wrappedValue.getter();
  v0[14] = v0[7];
  uint64_t v6 = (void *)swift_task_alloc();
  v0[15] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_10002DEA4;
  uint64_t v8 = v0[9];
  uint64_t v7 = v0[10];
  return sub_10006CC64(v8, v7);
}

uint64_t sub_10002DEA4()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 104);
  uint64_t v3 = *(void *)(v1 + 96);
  return _swift_task_switch(sub_10002DFE8, v3, v2);
}

uint64_t sub_10002DFE8()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_10002E04C()
{
  qword_100157C08 = 0x4014000000000000;
}

void sub_10002E05C()
{
  *(_WORD *)&algn_100157C18[6] = -4864;
}

uint64_t sub_10002E08C()
{
  id v0 = [self tertiaryLabelColor];
  uint64_t result = Color.init(uiColor:)();
  qword_100157C20 = result;
  return result;
}

uint64_t sub_10002E0CC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = static VerticalAlignment.center.getter();
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 1;
  uint64_t v4 = sub_1000060EC(&qword_100157EB0);
  return sub_10002E11C(a1, a2 + *(int *)(v4 + 44));
}

uint64_t sub_10002E11C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000060EC(&qword_100157EB8);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000060EC(&qword_100157EC0);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v13 = (char *)&v29 - v12;
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v29 - v14;
  *(void *)uint64_t v6 = static VerticalAlignment.center.getter();
  *((void *)v6 + 1) = 0;
  v6[16] = 1;
  uint64_t v16 = sub_1000060EC(&qword_100157EC8);
  sub_10002E460(a1, (uint64_t)&v6[*(int *)(v16 + 44)]);
  uint64_t v17 = static Alignment.leading.getter();
  sub_1000428C4(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v13, 0.0, 1, 0.0, 1, v17, v18);
  sub_1000063D0((uint64_t)v6, &qword_100157EB8);
  sub_100009C30((uint64_t)v13, (uint64_t)v15, &qword_100157EC0);
  uint64_t v19 = a1[3];
  uint64_t v20 = a1[4];
  sub_100010740(a1, v19);
  char v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 24))(v19, v20);
  uint64_t v22 = 0;
  uint64_t KeyPath = 0;
  uint64_t v24 = 0;
  uint64_t v25 = 0;
  uint64_t v26 = 0;
  if (v21)
  {
    if (qword_1001560A0 != -1) {
      swift_once();
    }
    swift_bridgeObjectRetain();
    uint64_t v22 = Image.init(systemName:)();
    if (qword_1001560A8 != -1) {
      swift_once();
    }
    uint64_t v24 = qword_100157C20;
    uint64_t KeyPath = swift_getKeyPath();
    swift_retain();
    uint64_t v26 = static Font.caption2.getter();
    uint64_t v25 = swift_getKeyPath();
  }
  sub_100009C94((uint64_t)v15, (uint64_t)v10, &qword_100157EC0);
  sub_100009C94((uint64_t)v10, a2, &qword_100157EC0);
  char v27 = (uint64_t *)(a2 + *(int *)(sub_1000060EC(&qword_100157ED0) + 48));
  *char v27 = v22;
  v27[1] = KeyPath;
  v27[2] = v24;
  v27[3] = v25;
  v27[4] = v26;
  sub_100030C94(v22);
  sub_1000063D0((uint64_t)v15, &qword_100157EC0);
  sub_100030D04(v22);
  return sub_1000063D0((uint64_t)v10, &qword_100157EC0);
}

uint64_t sub_10002E460@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v44 = a2;
  uint64_t v42 = sub_1000060EC(&qword_100157ED8);
  __chkstk_darwin(v42);
  uint64_t v4 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for RoundedRectangle();
  __chkstk_darwin(v5);
  uint64_t v7 = (uint64_t *)((char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v41 = sub_1000060EC(&qword_100157EE0);
  uint64_t v8 = __chkstk_darwin(v41);
  uint64_t v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v43 = (uint64_t)&v37 - v11;
  uint64_t v12 = a1[3];
  uint64_t v13 = a1[4];
  sub_100010740(a1, v12);
  uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 32))(v12, v13);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v15 = v47;
  char v16 = v48;
  uint64_t v40 = v49;
  int v39 = v50;
  uint64_t v37 = v52;
  uint64_t v38 = v51;
  if (qword_100156098 != -1) {
    swift_once();
  }
  uint64_t v17 = qword_100157C08;
  uint64_t v18 = (char *)v7 + *(int *)(v5 + 20);
  uint64_t v19 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v20 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 104))(v18, v19, v20);
  uint64_t *v7 = v17;
  v7[1] = v17;
  sub_10002FB1C((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  *(_WORD *)&v4[*(int *)(v42 + 36)] = 256;
  sub_100009C94((uint64_t)v4, (uint64_t)&v10[*(int *)(v41 + 36)], &qword_100157ED8);
  *(void *)uint64_t v10 = v14;
  *((void *)v10 + 1) = v15;
  v10[16] = v16;
  *((void *)v10 + 3) = v40;
  v10[32] = v39;
  uint64_t v21 = v37;
  *((void *)v10 + 5) = v38;
  *((void *)v10 + 6) = v21;
  swift_retain();
  sub_1000063D0((uint64_t)v4, &qword_100157ED8);
  sub_10002FB84((uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  swift_release();
  uint64_t v22 = v43;
  sub_100009C30((uint64_t)v10, v43, &qword_100157EE0);
  uint64_t v23 = a1[3];
  uint64_t v24 = a1[4];
  sub_100010740(a1, v23);
  uint64_t v45 = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 16))(v23, v24);
  uint64_t v46 = v25;
  sub_10000E0F0();
  uint64_t v26 = Text.init<A>(_:)();
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  char v32 = v31 & 1;
  uint64_t KeyPath = swift_getKeyPath();
  sub_100009C94(v22, (uint64_t)v10, &qword_100157EE0);
  uint64_t v34 = v44;
  sub_100009C94((uint64_t)v10, v44, &qword_100157EE0);
  uint64_t v35 = v34 + *(int *)(sub_1000060EC(&qword_100157EE8) + 48);
  *(void *)uint64_t v35 = v26;
  *(void *)(v35 + 8) = v28;
  *(unsigned char *)(v35 + 16) = v32;
  *(void *)(v35 + 24) = v30;
  *(void *)(v35 + 32) = KeyPath;
  *(void *)(v35 + 40) = 2;
  *(unsigned char *)(v35 + 48) = 0;
  sub_10002FC24(v26, v28, v32);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1000063D0(v22, &qword_100157EE0);
  sub_10000E904(v26, v28, v32);
  swift_release();
  swift_bridgeObjectRelease();
  return sub_1000063D0((uint64_t)v10, &qword_100157EE0);
}

uint64_t sub_10002E8B0()
{
  sub_100030BEC(v0, (uint64_t)v4);
  uint64_t v1 = swift_allocObject();
  long long v2 = v4[1];
  *(_OWORD *)(v1 + 16) = v4[0];
  *(_OWORD *)(v1 + 32) = v2;
  *(_OWORD *)(v1 + 48) = v4[2];
  *(void *)(v1 + 64) = v5;
  sub_1000060EC(&qword_100157EA0);
  sub_100006480(&qword_100157EA8, &qword_100157EA0);
  return Button.init(action:label:)();
}

uint64_t sub_10002E99C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_10002F6D4((unint64_t *)&qword_100157CF0, (void (*)(uint64_t))type metadata accessor for AddToPlaylistViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v4 = v3 + OBJC_IVAR____TtC16MusicRecognition22AddToPlaylistViewModel__state;
  swift_beginAccess();
  return sub_10002F338(v4, a2);
}

uint64_t sub_10002EA68(uint64_t a1)
{
  sub_10002F338(a1, (uint64_t)v2);
  swift_getKeyPath();
  sub_10002F6D4((unint64_t *)&qword_100157CF0, (void (*)(uint64_t))type metadata accessor for AddToPlaylistViewModel);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  return sub_1000307C4((uint64_t)v2);
}

uint64_t *sub_10002EB50(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    a1[1] = a2[1];
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (uint64_t *)((char *)a1 + v6);
    uint64_t v8 = (uint64_t *)((char *)a2 + v6);
    swift_retain();
    swift_retain();
    sub_1000060EC(&qword_100156940);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = type metadata accessor for OpenURLAction();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      void *v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_10002EC78(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  sub_1000060EC(&qword_100156940);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for OpenURLAction();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(v4, v5);
  }
  else
  {
    return swift_release();
  }
}

void *sub_10002ED38(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (void *)((char *)a1 + v5);
  uint64_t v7 = (void *)((char *)a2 + v5);
  swift_retain();
  swift_retain();
  sub_1000060EC(&qword_100156940);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = type metadata accessor for OpenURLAction();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  else
  {
    *uint64_t v6 = *v7;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_10002EE08(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (void *)((char *)a1 + v6);
    uint64_t v8 = (void *)((char *)a2 + v6);
    sub_1000063D0((uint64_t)a1 + v6, &qword_100156940);
    sub_1000060EC(&qword_100156940);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = type metadata accessor for OpenURLAction();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      void *v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_10002EF14(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1000060EC(&qword_100156940);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = type metadata accessor for OpenURLAction();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(v5, v6, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
  }
  return a1;
}

void *sub_10002EFE8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    sub_1000063D0((uint64_t)a1 + v6, &qword_100156940);
    uint64_t v9 = sub_1000060EC(&qword_100156940);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = type metadata accessor for OpenURLAction();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_10002F0F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10002F108);
}

uint64_t sub_10002F108(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1000060EC(&qword_100156A08);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_10002F1BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10002F1D0);
}

void *sub_10002F1D0(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1000060EC(&qword_100156A08);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_10002F27C()
{
  sub_10000B6DC();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_10002F314()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10002F338(uint64_t a1, uint64_t a2)
{
  return a2;
}

unint64_t sub_10002F394()
{
  unint64_t result = qword_100157D00;
  if (!qword_100157D00)
  {
    sub_100006224(&qword_100157CE0);
    sub_10002F504();
    sub_100006224(&qword_100157D18);
    sub_100006224(&qword_100157D20);
    sub_100006224(&qword_100157D28);
    sub_100006224(&qword_100157D30);
    sub_100006480(&qword_100157D38, &qword_100157D30);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_10002F604();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100157D00);
  }
  return result;
}

unint64_t sub_10002F504()
{
  unint64_t result = qword_100157D08;
  if (!qword_100157D08)
  {
    sub_100006224(&qword_100157CC8);
    sub_10002F5B0();
    sub_10002F6D4(&qword_100156840, (void (*)(uint64_t))&type metadata accessor for _TaskModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100157D08);
  }
  return result;
}

unint64_t sub_10002F5B0()
{
  unint64_t result = qword_100157D10;
  if (!qword_100157D10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100157D10);
  }
  return result;
}

unint64_t sub_10002F604()
{
  unint64_t result = qword_100157D40;
  if (!qword_100157D40)
  {
    sub_100006224(&qword_100157D20);
    sub_100006480(&qword_100157D48, &qword_100157D50);
    sub_10002F6D4((unint64_t *)&qword_1001567D8, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100157D40);
  }
  return result;
}

uint64_t sub_10002F6D4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10002F720(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AddToPlaylistView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10002F784()
{
  uint64_t v2 = *(void *)(type metadata accessor for AddToPlaylistView() - 8);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_100015B24;
  return sub_10002B0A4(v3);
}

uint64_t sub_10002F850@<X0>(uint64_t a1@<X8>)
{
  return sub_10002C1A4(*(void *)(v1 + 16), a1);
}

unint64_t sub_10002F858()
{
  unint64_t result = qword_100157D98;
  if (!qword_100157D98)
  {
    sub_100006224(&qword_100157D90);
    sub_100006480(&qword_100157DA0, &qword_100157DA8);
    sub_100006480(&qword_100156798, &qword_1001567A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100157D98);
  }
  return result;
}

uint64_t sub_10002F91C@<X0>(uint64_t a1@<X8>)
{
  return sub_10002D9A0(*(void *)(v1 + 16), a1);
}

uint64_t sub_10002F958()
{
  return sub_10002FC7C((uint64_t (*)(uint64_t))sub_10002DBD0);
}

uint64_t sub_10002F974()
{
  return sub_10002FC7C((uint64_t (*)(uint64_t))sub_10002C3C8);
}

unint64_t sub_10002F98C()
{
  unint64_t result = qword_100157DB8;
  if (!qword_100157DB8)
  {
    sub_100006224(&qword_100157DB0);
    sub_10002FA2C();
    sub_100006480(&qword_100157DE0, &qword_100157DE8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100157DB8);
  }
  return result;
}

unint64_t sub_10002FA2C()
{
  unint64_t result = qword_100157DC0;
  if (!qword_100157DC0)
  {
    sub_100006224(&qword_100157DC8);
    sub_10002FAA8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100157DC0);
  }
  return result;
}

unint64_t sub_10002FAA8()
{
  unint64_t result = qword_100157DD0;
  if (!qword_100157DD0)
  {
    sub_100006224(&qword_100157DD8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100157DD0);
  }
  return result;
}

uint64_t sub_10002FB1C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10002FB84(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10002FBE4(uint64_t a1)
{
  return a1;
}

uint64_t sub_10002FC24(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_retain();
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_10002FC34@<X0>(uint64_t a1@<X8>)
{
  return sub_10002C950(*(void *)(v1 + 16), *(uint64_t **)(v1 + 32), a1);
}

uint64_t sub_10002FC40@<X0>(uint64_t a1@<X8>)
{
  return sub_10002D9A0(*(void *)(v1 + 16), a1);
}

uint64_t sub_10002FC7C(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for AddToPlaylistView() - 8);
  uint64_t v3 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return a1(v3);
}

uint64_t sub_10002FCF0()
{
  return sub_10002D3F4(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

unint64_t sub_10002FCF8()
{
  unint64_t result = qword_100157E30;
  if (!qword_100157E30)
  {
    sub_100006224(&qword_100157E28);
    sub_10002FD6C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100157E30);
  }
  return result;
}

unint64_t sub_10002FD6C()
{
  unint64_t result = qword_100157E38;
  if (!qword_100157E38)
  {
    sub_100006224(&qword_100157E40);
    sub_10002FE18();
    sub_10002F6D4((unint64_t *)&qword_1001567D8, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100157E38);
  }
  return result;
}

unint64_t sub_10002FE18()
{
  unint64_t result = qword_100157E48;
  if (!qword_100157E48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100157E48);
  }
  return result;
}

uint64_t sub_10002FE6C()
{
  return sub_10002D258(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_10002FE74(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100006224(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10002FF00(uint64_t a1)
{
  return a1;
}

uint64_t sub_10002FF54(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_10002FFB4()
{
  return sub_100030490((uint64_t)&unk_10014A458, (uint64_t)&unk_100157E70);
}

uint64_t sub_10002FFD4(uint64_t a1)
{
  return a1;
}

uint64_t sub_100030008(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for AddToPlaylistView() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = v1 + v5;
  uint64_t v9 = (uint64_t *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = *v9;
  uint64_t v11 = v9[1];
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v12;
  void *v12 = v2;
  v12[1] = sub_100015B24;
  return sub_10002DCCC(a1, v6, v7, v8, v10, v11);
}

uint64_t sub_100030134@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  sub_100010740(a1, v3);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t sub_100030190()
{
  uint64_t v1 = (int *)(type metadata accessor for AddToPlaylistView() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)v1 + 64);
  swift_release();
  swift_release();
  uint64_t v5 = v0 + v3 + v1[7];
  sub_1000060EC(&qword_100156940);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for OpenURLAction();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_1000302B0(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for AddToPlaylistView() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_10002D5AC(a1, v4);
}

uint64_t sub_100030334()
{
  uint64_t v1 = (int *)(type metadata accessor for AddToPlaylistView() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)v1 + 64);
  swift_release();
  swift_release();
  uint64_t v5 = v0 + v3 + v1[7];
  sub_1000060EC(&qword_100156940);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for OpenURLAction();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  unint64_t v7 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = v7 + 40;
  _s16MusicRecognition11AnyPlaylistVwxx_0(v0 + v7);

  return _swift_deallocObject(v0, v8, v2 | 7);
}

uint64_t sub_100030470()
{
  return sub_100030490((uint64_t)&unk_10014A4D0, (uint64_t)&unk_100157E88);
}

uint64_t sub_100030490(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for AddToPlaylistView() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_10002D774(v2 + v6, (void *)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8)), a1, a2);
}

uint64_t sub_100030534()
{
  uint64_t v1 = (int *)(type metadata accessor for AddToPlaylistView() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = *(void *)(*(void *)v1 + 64);
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  uint64_t v5 = v0 + v3 + v1[7];
  sub_1000060EC(&qword_100156940);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for OpenURLAction();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16, v2 | 7);
}

uint64_t sub_10003067C(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for AddToPlaylistView() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = v1 + v5;
  uint64_t v9 = (uint64_t *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = *v9;
  uint64_t v11 = v9[1];
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v12;
  void *v12 = v2;
  v12[1] = sub_100014D10;
  return sub_10002DCCC(a1, v6, v7, v8, v10, v11);
}

uint64_t sub_1000307A8()
{
  return sub_10006D2D8(*(void *)(v0 + 16), *(long long **)(v0 + 24));
}

uint64_t sub_1000307C4(uint64_t a1)
{
  return a1;
}

uint64_t destroy for PlaylistCellView(uint64_t a1)
{
  _s16MusicRecognition11AnyPlaylistVwxx_0(a1);

  return swift_release();
}

uint64_t initializeWithCopy for PlaylistCellView(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_retain();
  return a1;
}

uint64_t *assignWithCopy for PlaylistCellView(uint64_t *a1, uint64_t *a2)
{
  sub_100018AC4(a1, a2);
  uint64_t v4 = a2[6];
  a1[5] = a2[5];
  a1[6] = v4;
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for PlaylistCellView(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for PlaylistCellView(uint64_t a1, uint64_t a2)
{
  _s16MusicRecognition11AnyPlaylistVwxx_0(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for PlaylistCellView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PlaylistCellView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PlaylistCellView()
{
  return &type metadata for PlaylistCellView;
}

unint64_t sub_100030A0C()
{
  unint64_t result = qword_100157E90;
  if (!qword_100157E90)
  {
    sub_100006224(&qword_100157E98);
    sub_10002F394();
    sub_100006224(&qword_100157D58);
    sub_100006224(&qword_100157D20);
    sub_100006224(&qword_100157D60);
    sub_100006224(&qword_100157D68);
    sub_100006224(&qword_100157D70);
    type metadata accessor for InsetListStyle();
    sub_100006480(&qword_100157D78, &qword_100157D70);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_10002F604();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100157E90);
  }
  return result;
}

uint64_t sub_100030BD0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100030BEC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100030C24()
{
  _s16MusicRecognition11AnyPlaylistVwxx_0(v0 + 16);
  swift_release();

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_100030C64()
{
  return (*(uint64_t (**)(void))(v0 + 56))();
}

uint64_t sub_100030C8C@<X0>(uint64_t a1@<X8>)
{
  return sub_10002E0CC(*(void **)(v1 + 16), a1);
}

uint64_t sub_100030C94(uint64_t result)
{
  if (result)
  {
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_100030D04(uint64_t result)
{
  if (result)
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_100030D88()
{
  return sub_100006480(&qword_100157EF0, qword_100157EF8);
}

uint64_t sub_100030DC8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v29 = a7;
  id v25 = a1;
  uint64_t v26 = a6;
  uint64_t v24 = a2;
  uint64_t v28 = a9;
  uint64_t v14 = *(void *)(a8 - 8);
  uint64_t v27 = a10;
  __chkstk_darwin(a1);
  char v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for LibraryItemContextMenu();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v23 - v19;
  type metadata accessor for LibraryItemContextMenuModel();
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v24, a8);
  sub_1001019C4((uint64_t)v25, (uint64_t)v16);
  sub_100017778(a3);
  uint64_t v21 = v26;
  sub_100017778(a5);
  sub_100030FE4(a3, a4, a5, v21, (uint64_t)v20);
  View.modifier<A>(_:)();
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v17);
}

uint64_t type metadata accessor for LibraryItemContextMenu()
{
  return sub_100020608();
}

uint64_t sub_100030FE4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  swift_getWitnessTable();
  Bindable<A>.init(wrappedValue:)();
  uint64_t v10 = (int *)type metadata accessor for LibraryItemContextMenu();
  uint64_t v11 = (void *)(a5 + v10[9]);
  *uint64_t v11 = a1;
  v11[1] = a2;
  uint64_t v12 = (void *)(a5 + v10[10]);
  void *v12 = a3;
  v12[1] = a4;
  uint64_t v13 = a5 + v10[11];
  uint64_t result = swift_getKeyPath();
  *(void *)uint64_t v13 = result;
  *(unsigned char *)(v13 + 8) = 0;
  return result;
}

uint64_t sub_1000310F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 32);
}

uint64_t sub_100031100()
{
  type metadata accessor for LibraryItemContextMenuModel();
  uint64_t result = type metadata accessor for Bindable();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1000311B0(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    type metadata accessor for LibraryItemContextMenuModel();
    uint64_t v7 = type metadata accessor for Bindable();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[9];
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    if (*v10)
    {
      uint64_t v11 = v10[1];
      *uint64_t v9 = *v10;
      v9[1] = v11;
      swift_retain();
    }
    else
    {
      *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
    }
    uint64_t v13 = a3[10];
    uint64_t v14 = (uint64_t *)((char *)a1 + v13);
    uint64_t v15 = (uint64_t *)((char *)a2 + v13);
    if (*v15)
    {
      uint64_t v16 = v15[1];
      void *v14 = *v15;
      v14[1] = v16;
      swift_retain();
    }
    else
    {
      *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
    }
    uint64_t v17 = a3[11];
    uint64_t v18 = (char *)a1 + v17;
    uint64_t v19 = (char *)a2 + v17;
    uint64_t v20 = *(void *)v19;
    LOBYTE(v19) = v19[8];
    *(void *)uint64_t v18 = v20;
    v18[8] = (char)v19;
  }
  swift_retain();
  return a1;
}

uint64_t sub_1000312F4(uint64_t a1, uint64_t a2)
{
  type metadata accessor for LibraryItemContextMenuModel();
  uint64_t v4 = type metadata accessor for Bindable();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  if (*(void *)(a1 + *(int *)(a2 + 36))) {
    swift_release();
  }
  if (*(void *)(a1 + *(int *)(a2 + 40))) {
    swift_release();
  }

  return swift_release();
}

uint64_t sub_1000313AC(uint64_t a1, uint64_t a2, int *a3)
{
  type metadata accessor for LibraryItemContextMenuModel();
  uint64_t v6 = type metadata accessor for Bindable();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[9];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  if (*v9)
  {
    uint64_t v10 = v9[1];
    *uint64_t v8 = *v9;
    v8[1] = v10;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  }
  uint64_t v11 = a3[10];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  if (*v13)
  {
    uint64_t v14 = v13[1];
    void *v12 = *v13;
    v12[1] = v14;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  }
  uint64_t v15 = a3[11];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = (uint64_t *)(a2 + v15);
  uint64_t v18 = *v17;
  LOBYTE(v17) = *((unsigned char *)v17 + 8);
  *(void *)uint64_t v16 = v18;
  *(unsigned char *)(v16 + 8) = (_BYTE)v17;
  swift_retain();
  return a1;
}

uint64_t sub_1000314A4(uint64_t a1, uint64_t a2, int *a3)
{
  type metadata accessor for LibraryItemContextMenuModel();
  uint64_t v6 = type metadata accessor for Bindable();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[9];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a1 + v7);
  uint64_t v11 = *(void *)(a2 + v7);
  if (v10)
  {
    if (v11)
    {
      uint64_t v12 = *(void *)(v9 + 8);
      *uint64_t v8 = v11;
      v8[1] = v12;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v11)
  {
    uint64_t v13 = *(void *)(v9 + 8);
    *uint64_t v8 = v11;
    v8[1] = v13;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
LABEL_8:
  uint64_t v14 = a3[10];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = a2 + v14;
  uint64_t v17 = *(void *)(a1 + v14);
  uint64_t v18 = *(void *)(a2 + v14);
  if (!v17)
  {
    if (v18)
    {
      uint64_t v20 = *(void *)(v16 + 8);
      *uint64_t v15 = v18;
      v15[1] = v20;
      swift_retain();
      goto LABEL_15;
    }
LABEL_14:
    *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
    goto LABEL_15;
  }
  if (!v18)
  {
    swift_release();
    goto LABEL_14;
  }
  uint64_t v19 = *(void *)(v16 + 8);
  *uint64_t v15 = v18;
  v15[1] = v19;
  swift_retain();
  swift_release();
LABEL_15:
  uint64_t v21 = a3[11];
  uint64_t v22 = a1 + v21;
  uint64_t v23 = (uint64_t *)(a2 + v21);
  uint64_t v24 = *v23;
  LOBYTE(v23) = *((unsigned char *)v23 + 8);
  *(void *)uint64_t v22 = v24;
  *(unsigned char *)(v22 + 8) = (_BYTE)v23;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_100031610(uint64_t a1, uint64_t a2, int *a3)
{
  type metadata accessor for LibraryItemContextMenuModel();
  uint64_t v6 = type metadata accessor for Bindable();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[9];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v10 = *v9;
  if (*v9)
  {
    uint64_t v11 = v9[1];
    *uint64_t v8 = v10;
    v8[1] = v11;
  }
  else
  {
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  }
  uint64_t v12 = a3[10];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v15 = *v14;
  if (*v14)
  {
    uint64_t v16 = v14[1];
    *uint64_t v13 = v15;
    v13[1] = v16;
  }
  else
  {
    *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  }
  uint64_t v17 = a3[11];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  *(void *)uint64_t v18 = *(void *)v19;
  *(unsigned char *)(v18 + 8) = *(unsigned char *)(v19 + 8);
  return a1;
}

uint64_t sub_1000316FC(uint64_t a1, uint64_t a2, int *a3)
{
  type metadata accessor for LibraryItemContextMenuModel();
  uint64_t v6 = type metadata accessor for Bindable();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[9];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a1 + v7);
  uint64_t v11 = *(void *)(a2 + v7);
  if (v10)
  {
    if (v11)
    {
      uint64_t v12 = *(void *)(v9 + 8);
      *uint64_t v8 = v11;
      v8[1] = v12;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v11)
  {
    uint64_t v13 = *(void *)(v9 + 8);
    *uint64_t v8 = v11;
    v8[1] = v13;
    goto LABEL_8;
  }
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
LABEL_8:
  uint64_t v14 = a3[10];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = a2 + v14;
  uint64_t v17 = *(void *)(a1 + v14);
  uint64_t v18 = *(void *)(a2 + v14);
  if (!v17)
  {
    if (v18)
    {
      uint64_t v20 = *(void *)(v16 + 8);
      *uint64_t v15 = v18;
      v15[1] = v20;
      goto LABEL_15;
    }
LABEL_14:
    *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
    goto LABEL_15;
  }
  if (!v18)
  {
    swift_release();
    goto LABEL_14;
  }
  uint64_t v19 = *(void *)(v16 + 8);
  *uint64_t v15 = v18;
  v15[1] = v19;
  swift_release();
LABEL_15:
  uint64_t v21 = a3[11];
  uint64_t v22 = a1 + v21;
  uint64_t v23 = (uint64_t *)(a2 + v21);
  uint64_t v24 = *v23;
  LOBYTE(v23) = *((unsigned char *)v23 + 8);
  *(void *)uint64_t v22 = v24;
  *(unsigned char *)(v22 + 8) = (_BYTE)v23;
  swift_release();
  return a1;
}

uint64_t sub_100031848(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10003185C);
}

uint64_t sub_10003185C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for LibraryItemContextMenuModel();
  uint64_t v6 = type metadata accessor for Bindable();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 36));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t sub_100031938(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10003194C);
}

uint64_t sub_10003194C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for LibraryItemContextMenuModel();
  uint64_t result = type metadata accessor for Bindable();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 36)) = a2;
  }
  return result;
}

uint64_t sub_100031A18()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100031A5C()
{
  type metadata accessor for LibraryItemContextMenuModel();
  type metadata accessor for Bindable();
  Bindable.wrappedValue.getter();
  return v1;
}

uint64_t sub_100031A9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v29 = a1;
  uint64_t v30 = a3;
  swift_getWitnessTable();
  uint64_t v5 = type metadata accessor for _ViewModifier_Content();
  uint64_t v27 = sub_100006224(&qword_100157F80);
  uint64_t WitnessTable = swift_getWitnessTable();
  unint64_t v6 = sub_10003237C();
  unint64_t v7 = sub_1000323D0();
  unint64_t v8 = sub_100032424();
  uint64_t v40 = v5;
  uint64_t v41 = &type metadata for ContextMenuContent;
  uint64_t v42 = &type metadata for LibraryItemPreview;
  uint64_t v43 = v27;
  uint64_t v44 = WitnessTable;
  unint64_t v45 = v6;
  unint64_t v24 = v6;
  unint64_t v46 = v7;
  unint64_t v47 = v8;
  unint64_t v25 = v7;
  uint64_t v28 = &opaque type descriptor for <<opaque return type of View.contextMenu<A, B, C>(menuItems:preview:previewDestination:)>>;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v10 = *(void *)(OpaqueTypeMetadata2 - 8);
  uint64_t v11 = __chkstk_darwin(OpaqueTypeMetadata2);
  uint64_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v23 - v14;
  uint64_t v16 = *(void *)(a2 + 24);
  uint64_t v37 = *(void *)(a2 + 16);
  uint64_t v38 = v16;
  uint64_t v39 = v3;
  uint64_t v34 = v37;
  uint64_t v35 = v16;
  uint64_t v36 = v3;
  uint64_t v31 = v37;
  uint64_t v32 = v16;
  uint64_t v33 = v3;
  uint64_t v17 = swift_checkMetadataState();
  uint64_t v18 = WitnessTable;
  uint64_t v19 = v27;
  View.contextMenu<A, B, C>(menuItems:preview:previewDestination:)();
  uint64_t v40 = v17;
  uint64_t v41 = &type metadata for ContextMenuContent;
  uint64_t v42 = &type metadata for LibraryItemPreview;
  uint64_t v43 = v19;
  uint64_t v44 = v18;
  unint64_t v45 = v24;
  unint64_t v46 = v25;
  unint64_t v47 = v8;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  sub_1000BA728(v13, OpaqueTypeMetadata2, OpaqueTypeConformance2);
  uint64_t v21 = *(void (**)(char *, uint64_t))(v10 + 8);
  v21(v13, OpaqueTypeMetadata2);
  sub_1000BA728(v15, OpaqueTypeMetadata2, OpaqueTypeConformance2);
  return ((uint64_t (*)(char *, uint64_t))v21)(v15, OpaqueTypeMetadata2);
}

uint64_t sub_100031DD4@<X0>(unint64_t *a1@<X8>)
{
  type metadata accessor for LibraryItemContextMenu();
  uint64_t v2 = sub_100031A5C();
  unint64_t v3 = sub_100101A14(v2);
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_100031E24@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for LibraryItemContextMenu();
  id v5 = *(id *)(sub_100031A5C() + 16);
  swift_release();
  unint64_t v6 = (uint64_t *)(a1 + *(int *)(v4 + 36));
  uint64_t v7 = *v6;
  uint64_t v8 = v6[1];
  *a2 = v5;
  a2[1] = v7;
  a2[2] = v8;

  return sub_100017778(v7);
}

uint64_t sub_100031EA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (**a4)@<X0>(uint64_t a1@<X8>)@<X8>)
{
  uint64_t v8 = type metadata accessor for LibraryItemContextMenu();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v15 - v10;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v15 - v10, a1, v8);
  unint64_t v12 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a2;
  *(void *)(v13 + 24) = a3;
  uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v9 + 32))(v13 + v12, v11, v8);
  *a4 = sub_1000325F0;
  a4[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v13;
  return result;
}

uint64_t sub_100031FE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v35 = a2;
  uint64_t v3 = type metadata accessor for LibraryItemContextMenu();
  id v32 = *(id *)(sub_100031A5C() + 16);
  swift_release();
  uint64_t v33 = v3;
  uint64_t v34 = a1;
  uint64_t v4 = a1 + *(int *)(v3 + 44);
  uint64_t v5 = sub_1000081CC(*(void *)v4, *(unsigned char *)(v4 + 8));
  swift_getKeyPath();
  v37[0] = v5;
  sub_100032684();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v6 = *(void *)(v5 + 32);
  uint64_t v30 = *(void *)(v5 + 40);
  uint64_t v31 = v6;
  swift_bridgeObjectRetain();
  swift_release();
  uint64_t v7 = sub_1000081CC(*(void *)v4, *(unsigned char *)(v4 + 8));
  swift_getKeyPath();
  v37[0] = v7;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  int v29 = *(unsigned __int8 *)(v7 + 48);
  swift_release();
  uint64_t v8 = sub_1000081CC(*(void *)v4, *(unsigned char *)(v4 + 8));
  swift_getKeyPath();
  v37[0] = v8;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  char v9 = *(unsigned char *)(v8 + 16);
  swift_release();
  if (qword_100156550 != -1) {
    swift_once();
  }
  unsigned int v10 = 0x2000Bu >> (8 * v9);
  uint64_t v11 = qword_100164EA8;
  uint64_t v12 = type metadata accessor for MusicSubscriptionStatusController();
  v37[3] = v12;
  v37[4] = &off_10014D500;
  v37[0] = v11;
  uint64_t v13 = sub_1000095E8((uint64_t)v37, v12);
  uint64_t v14 = *(void *)(v12 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  __chkstk_darwin(v13);
  unint64_t v16 = (v15 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v17 = *(void (**)(unsigned char *))(v14 + 16);
  v17(&v28[-v16]);
  uint64_t v18 = *(void *)&v28[-v16];
  v36[3] = v12;
  v36[4] = &off_10014D500;
  v36[0] = v18;
  type metadata accessor for TrackPageViewModel();
  uint64_t v19 = swift_allocObject();
  uint64_t v20 = sub_1000095E8((uint64_t)v36, v12);
  __chkstk_darwin(v20);
  v17(&v28[-v16]);
  uint64_t v21 = *(void *)&v28[-v16];
  swift_retain();
  uint64_t v22 = v32;
  uint64_t v23 = sub_100009638(v32, v31, v30, v29, v21, v10, v19);

  _s16MusicRecognition11AnyPlaylistVwxx_0((uint64_t)v36);
  _s16MusicRecognition11AnyPlaylistVwxx_0((uint64_t)v37);
  unint64_t v24 = (uint64_t *)(v34 + *(int *)(v33 + 40));
  uint64_t v25 = *v24;
  uint64_t v26 = v24[1];
  sub_100017778(*v24);
  return sub_1000437E4(v23, v25, v26, v35);
}

uint64_t sub_10003235C()
{
  return static ViewModifier._viewListCount(inputs:body:)();
}

unint64_t sub_10003237C()
{
  unint64_t result = qword_100157F88;
  if (!qword_100157F88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100157F88);
  }
  return result;
}

unint64_t sub_1000323D0()
{
  unint64_t result = qword_100157F90;
  if (!qword_100157F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100157F90);
  }
  return result;
}

unint64_t sub_100032424()
{
  unint64_t result = qword_100157F98;
  if (!qword_100157F98)
  {
    sub_100006224(&qword_100157F80);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100157F98);
  }
  return result;
}

uint64_t sub_100032480@<X0>(unint64_t *a1@<X8>)
{
  return sub_100031DD4(a1);
}

uint64_t sub_10003248C@<X0>(void *a1@<X8>)
{
  return sub_100031E24(*(void *)(v1 + 32), a1);
}

uint64_t sub_100032498@<X0>(uint64_t (**a1)@<X0>(uint64_t a1@<X8>)@<X8>)
{
  return sub_100031EA4(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_1000324A4()
{
  uint64_t v1 = type metadata accessor for LibraryItemContextMenu();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  type metadata accessor for LibraryItemContextMenuModel();
  uint64_t v5 = type metadata accessor for Bindable();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v0 + v3, v5);
  if (*(void *)(v0 + v3 + *(int *)(v1 + 36))) {
    swift_release();
  }
  if (*(void *)(v0 + v3 + *(int *)(v1 + 40))) {
    swift_release();
  }
  swift_release();

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_1000325F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for LibraryItemContextMenu() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_100031FE4(v4, a1);
}

unint64_t sub_100032684()
{
  unint64_t result = qword_100156898;
  if (!qword_100156898)
  {
    type metadata accessor for ViewConfiguration();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100156898);
  }
  return result;
}

uint64_t sub_1000326EC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000327E4(uint64_t TupleTypeMetadata, unint64_t a2, uint64_t a3)
{
  uint64_t v4 = (uint64_t *)TupleTypeMetadata;
  uint64_t v5 = (uint64_t *)(a3 & 0xFFFFFFFFFFFFFFFELL);
  if (a2 == 1)
  {
    uint64_t v6 = *v5;
  }
  else
  {
    __chkstk_darwin(TupleTypeMetadata);
    uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    if (a2)
    {
      unint64_t v9 = 0;
      if (a2 < 4) {
        goto LABEL_9;
      }
      if ((unint64_t)(v8 - (char *)v5) < 0x20) {
        goto LABEL_9;
      }
      unint64_t v9 = a2 & 0xFFFFFFFFFFFFFFFCLL;
      unsigned int v10 = (long long *)(v5 + 2);
      uint64_t v11 = v8 + 16;
      unint64_t v12 = a2 & 0xFFFFFFFFFFFFFFFCLL;
      do
      {
        long long v13 = *v10;
        *(v11 - 1) = *(v10 - 1);
        *uint64_t v11 = v13;
        v10 += 2;
        v11 += 2;
        v12 -= 4;
      }
      while (v12);
      if (v9 != a2)
      {
LABEL_9:
        unint64_t v14 = a2 - v9;
        uint64_t v15 = v9;
        unint64_t v16 = &v8[8 * v9];
        uint64_t v17 = &v5[v15];
        do
        {
          uint64_t v18 = *v17++;
          *(void *)unint64_t v16 = v18;
          v16 += 8;
          --v14;
        }
        while (v14);
      }
    }
    TupleTypeMetadata = swift_getTupleTypeMetadata();
    uint64_t v6 = TupleTypeMetadata;
  }
  __chkstk_darwin(TupleTypeMetadata);
  uint64_t v20 = (char *)&v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    uint64_t v21 = (int *)(v6 + 32);
    unint64_t v22 = a2;
    do
    {
      if (a2 == 1) {
        int v23 = 0;
      }
      else {
        int v23 = *v21;
      }
      uint64_t v25 = *v5++;
      uint64_t v24 = v25;
      uint64_t v26 = *v4++;
      (*(void (**)(char *, uint64_t))(*(void *)(v24 - 8) + 16))(&v20[v23], v26);
      v21 += 4;
      --v22;
    }
    while (v22);
  }
  return TupleView.init(_:)();
}

uint64_t sub_1000329A8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_10001DA5C();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1000329D8()
{
  return sub_10001DAD8();
}

uint64_t sub_100032A00@<X0>(uint64_t a1@<X8>)
{
  return sub_10001DB84(a1);
}

uint64_t sub_100032A24(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NavigationPath();
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v5 + 16))(v4, a1);
  return sub_10001DC5C((uint64_t)v4);
}

uint64_t sub_100032AF0(uint64_t a1)
{
  uint64_t v1 = __chkstk_darwin(a1);
  v2(v1);
  return Section<>.init(header:content:)();
}

uint64_t sub_100032BC0()
{
  type metadata accessor for LibraryListViewModel();
  type metadata accessor for Bindable();
  Bindable.wrappedValue.getter();
  return v1;
}

uint64_t sub_100032C10()
{
  return Bindable.projectedValue.getter();
}

uint64_t sub_100032C58()
{
  sub_1000060EC(&qword_100158150);
  State.wrappedValue.getter();
  if (v3) {
    int v0 = 256;
  }
  else {
    int v0 = 0;
  }
  return v0 | v2;
}

uint64_t sub_100032CCC()
{
  return State.wrappedValue.setter();
}

uint64_t sub_100032D38()
{
  sub_1000060EC(&qword_100158150);
  State.projectedValue.getter();
  return v1;
}

uint64_t sub_100032DB0@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  *(void *)a3 = swift_getKeyPath();
  *(unsigned char *)(a3 + 8) = 0;
  uint64_t v6 = (int *)type metadata accessor for LibraryListView();
  uint64_t v7 = (uint64_t *)(a3 + v6[9]);
  uint64_t *v7 = swift_getKeyPath();
  sub_1000060EC(&qword_100156920);
  swift_storeEnumTagMultiPayload();
  swift_retain();
  swift_getWitnessTable();
  Bindable<A>.init(wrappedValue:)();
  uint64_t v8 = a3 + v6[11];
  State.init(wrappedValue:)();
  uint64_t result = swift_release();
  *(unsigned char *)uint64_t v8 = v11;
  *(unsigned char *)(v8 + 1) = v12;
  *(void *)(v8 + 8) = v13;
  unsigned int v10 = (void *)(a3 + v6[12]);
  *unsigned int v10 = a1;
  v10[1] = a2;
  return result;
}

uint64_t type metadata accessor for LibraryListView()
{
  return sub_100020608();
}

uint64_t sub_100032F64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v150 = a2;
  uint64_t v161 = type metadata accessor for ScenePhase();
  uint64_t v149 = *(void *)(v161 - 8);
  uint64_t v3 = __chkstk_darwin(v161);
  uint64_t v148 = (uint64_t)&v125 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v164 = *(void *)(a1 - 8);
  uint64_t v153 = *(void *)(v164 + 64);
  __chkstk_darwin(v3);
  uint64_t v160 = (char *)&v125 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000060EC(&qword_100158050);
  __chkstk_darwin(v6 - 8);
  uint64_t v154 = (void (*)(char *, uint64_t, uint64_t))((char *)&v125 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v147 = a1;
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v158 = *(void *)(a1 + 16);
  uint64_t v162 = v8;
  type metadata accessor for LibraryListViewModel();
  uint64_t v151 = (void *)type metadata accessor for Bindable();
  uint64_t v152 = *(v151 - 1);
  __chkstk_darwin(v151);
  uint64_t v146 = (char *)&v125 - v9;
  uint64_t v157 = (char *)type metadata accessor for NavigationPath();
  v156 = (char *)sub_100006224(&qword_100158058);
  unint64_t v155 = (char *)sub_100006224(&qword_100158060);
  uint64_t v145 = sub_100006224(&qword_100158068);
  uint64_t v144 = sub_100006224(&qword_100158070);
  uint64_t v143 = sub_100006224(&qword_1001577F8);
  uint64_t v10 = type metadata accessor for UUID();
  type metadata accessor for LibraryItemContextMenu();
  type metadata accessor for ModifiedContent();
  unint64_t v11 = sub_10003EEE4();
  uint64_t WitnessTable = swift_getWitnessTable();
  unint64_t v190 = v11;
  uint64_t v191 = WitnessTable;
  swift_getWitnessTable();
  type metadata accessor for Button();
  type metadata accessor for AccessibilityAttachmentModifier();
  uint64_t v13 = type metadata accessor for ModifiedContent();
  uint64_t v14 = sub_100006224(&qword_1001571C0);
  uint64_t v15 = swift_getWitnessTable();
  uint64_t v16 = sub_100042360((unint64_t *)&qword_1001567D8, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
  uint64_t v188 = v15;
  uint64_t v189 = v16;
  v163 = &protocol conformance descriptor for <> ModifiedContent<A, B>;
  uint64_t v17 = swift_getWitnessTable();
  uint64_t v18 = sub_100006480(&qword_100157260, &qword_1001571C0);
  uint64_t v174 = (void *)v13;
  v175 = (ValueMetadata *)v14;
  v176 = (void *)v17;
  int v177 = (void *)v18;
  swift_getOpaqueTypeMetadata2();
  sub_100006224(&qword_100158080);
  uint64_t v19 = type metadata accessor for ModifiedContent();
  uint64_t v20 = sub_100006224(&qword_100158088);
  uint64_t v174 = (void *)v13;
  v175 = (ValueMetadata *)v14;
  v176 = (void *)v17;
  int v177 = (void *)v18;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v22 = sub_100006480(&qword_100158090, &qword_100158080);
  uint64_t v186 = OpaqueTypeConformance2;
  uint64_t v187 = v22;
  uint64_t v23 = swift_getWitnessTable();
  unint64_t v24 = sub_10003EF38();
  uint64_t v174 = (void *)v19;
  v175 = (ValueMetadata *)v20;
  v176 = (void *)v23;
  int v177 = (void *)v24;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v26 = sub_100006480(&qword_1001580C0, &qword_1001577F8);
  uint64_t v27 = sub_100042360((unint64_t *)&qword_1001580C8, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v174 = (void *)v143;
  v175 = (ValueMetadata *)v10;
  v176 = (void *)OpaqueTypeMetadata2;
  int v177 = (void *)v26;
  uint64_t v178 = (void *)v27;
  type metadata accessor for ForEach();
  uint64_t v28 = type metadata accessor for Section();
  uint64_t v29 = sub_100006224(&qword_1001580D0);
  unint64_t v30 = sub_10003F0A8();
  uint64_t v174 = (void *)v29;
  v175 = (ValueMetadata *)v30;
  uint64_t v31 = swift_getOpaqueTypeConformance2();
  uint64_t v174 = (void *)v19;
  v175 = (ValueMetadata *)v20;
  v176 = (void *)v23;
  int v177 = (void *)v24;
  uint64_t v185 = swift_getOpaqueTypeConformance2();
  uint64_t v32 = swift_getWitnessTable();
  uint64_t v182 = v31;
  uint64_t v183 = v32;
  uint64_t v184 = &protocol witness table for EmptyView;
  uint64_t v33 = swift_getWitnessTable();
  uint64_t v174 = (void *)v28;
  v175 = (ValueMetadata *)v33;
  swift_getOpaqueTypeMetadata2();
  sub_100006224(&qword_1001567A0);
  type metadata accessor for ModifiedContent();
  sub_100006224(&qword_1001580F0);
  type metadata accessor for ModifiedContent();
  sub_100006224(&qword_1001580F8);
  uint64_t v34 = type metadata accessor for ModifiedContent();
  uint64_t v35 = sub_100006480(&qword_100158100, &qword_100158068);
  uint64_t v174 = (void *)v145;
  v175 = (ValueMetadata *)&type metadata for String;
  v176 = (void *)v34;
  int v177 = (void *)v35;
  uint64_t v178 = &protocol witness table for String;
  type metadata accessor for ForEach();
  swift_getTupleTypeMetadata3();
  uint64_t v36 = type metadata accessor for TupleView();
  uint64_t v37 = swift_getWitnessTable();
  uint64_t v174 = &type metadata for Never;
  v175 = (ValueMetadata *)v36;
  v176 = &protocol witness table for Never;
  int v177 = (void *)v37;
  type metadata accessor for List();
  type metadata accessor for ShazamUpsellOverlayModifier(255);
  uint64_t v38 = type metadata accessor for ModifiedContent();
  uint64_t v39 = swift_getWitnessTable();
  uint64_t v40 = sub_100042360(&qword_100158108, (void (*)(uint64_t))type metadata accessor for ShazamUpsellOverlayModifier);
  uint64_t v180 = v39;
  uint64_t v181 = v40;
  uint64_t v41 = swift_getWitnessTable();
  uint64_t v174 = (void *)v38;
  v175 = (ValueMetadata *)v41;
  uint64_t v42 = swift_getOpaqueTypeMetadata2();
  uint64_t v174 = (void *)v38;
  v175 = (ValueMetadata *)v41;
  uint64_t v43 = swift_getOpaqueTypeConformance2();
  uint64_t v174 = (void *)v42;
  v175 = (ValueMetadata *)v43;
  uint64_t v44 = swift_getOpaqueTypeMetadata2();
  uint64_t v174 = (void *)v42;
  v175 = (ValueMetadata *)v43;
  uint64_t v45 = swift_getOpaqueTypeConformance2();
  unint64_t v46 = sub_10000E0F0();
  uint64_t v174 = (void *)v44;
  v175 = (ValueMetadata *)&type metadata for String;
  v176 = (void *)v45;
  int v177 = (void *)v46;
  uint64_t v47 = swift_getOpaqueTypeMetadata2();
  uint64_t v174 = (void *)v44;
  v175 = (ValueMetadata *)&type metadata for String;
  v176 = (void *)v45;
  int v177 = (void *)v46;
  uint64_t v48 = swift_getOpaqueTypeConformance2();
  uint64_t v174 = (void *)v47;
  v175 = (ValueMetadata *)&type metadata for Bool;
  v176 = (void *)v48;
  int v177 = &protocol witness table for Bool;
  uint64_t v49 = swift_getOpaqueTypeMetadata2();
  unint64_t v50 = sub_100023F6C();
  uint64_t v51 = type metadata accessor for TrackPageView();
  uint64_t v174 = (void *)v47;
  v175 = (ValueMetadata *)&type metadata for Bool;
  v176 = (void *)v48;
  int v177 = &protocol witness table for Bool;
  uint64_t v52 = swift_getOpaqueTypeConformance2();
  uint64_t v53 = sub_100042360(&qword_1001577E8, (void (*)(uint64_t))sub_100023F6C);
  uint64_t v54 = sub_100042360(&qword_1001568A0, (void (*)(uint64_t))type metadata accessor for TrackPageView);
  uint64_t v174 = (void *)v49;
  v175 = (ValueMetadata *)v50;
  v176 = (void *)v51;
  int v177 = (void *)v52;
  uint64_t v178 = (void *)v53;
  uint64_t v179 = v54;
  uint64_t v55 = swift_getOpaqueTypeMetadata2();
  uint64_t v56 = sub_100006224(&qword_100158110);
  uint64_t v174 = (void *)v49;
  v175 = (ValueMetadata *)v50;
  v176 = (void *)v51;
  int v177 = (void *)v52;
  uint64_t v178 = (void *)v53;
  uint64_t v179 = v54;
  uint64_t v57 = swift_getOpaqueTypeConformance2();
  uint64_t v58 = sub_100006224(&qword_100158118);
  uint64_t v59 = sub_100006480(&qword_100158120, &qword_100158118);
  uint64_t v174 = (void *)v58;
  v175 = (ValueMetadata *)v59;
  uint64_t v60 = swift_getOpaqueTypeConformance2();
  uint64_t v174 = (void *)v55;
  v175 = (ValueMetadata *)v56;
  v176 = (void *)v57;
  int v177 = (void *)v60;
  uint64_t v61 = swift_getOpaqueTypeMetadata2();
  uint64_t v62 = sub_100006224(&qword_100158128);
  uint64_t v174 = (void *)v55;
  v175 = (ValueMetadata *)v56;
  v176 = (void *)v57;
  int v177 = (void *)v60;
  uint64_t v63 = swift_getOpaqueTypeConformance2();
  unint64_t v64 = sub_10003F1F4();
  uint64_t v174 = (void *)v61;
  v175 = (ValueMetadata *)v62;
  v176 = (void *)v63;
  int v177 = (void *)v64;
  uint64_t v135 = swift_getOpaqueTypeMetadata2();
  uint64_t v174 = (void *)v61;
  v175 = (ValueMetadata *)v62;
  v176 = (void *)v63;
  int v177 = (void *)v64;
  uint64_t v134 = swift_getOpaqueTypeConformance2();
  uint64_t v65 = type metadata accessor for NavigationStack();
  uint64_t v137 = *(void *)(v65 - 8);
  __chkstk_darwin(v65);
  uint64_t v130 = (char *)&v125 - v66;
  sub_100006224(&qword_100157248);
  uint64_t v127 = v65;
  uint64_t v67 = type metadata accessor for ModifiedContent();
  uint64_t v143 = *(void *)(v67 - 8);
  __chkstk_darwin(v67);
  unint64_t v155 = (char *)&v125 - v68;
  uint64_t v69 = swift_getWitnessTable();
  uint64_t v125 = v69;
  uint64_t v70 = sub_100006480((unint64_t *)&qword_100157240, &qword_100157248);
  uint64_t v172 = v69;
  uint64_t v173 = v70;
  uint64_t v71 = swift_getWitnessTable();
  unint64_t v72 = sub_10003F2F4();
  uint64_t v174 = (void *)v67;
  v175 = &type metadata for HistorySortSelection;
  uint64_t v73 = (void *)v67;
  uint64_t v126 = v67;
  v176 = (void *)v71;
  int v177 = (void *)v72;
  uint64_t v129 = v71;
  uint64_t v74 = (void *)v72;
  unint64_t v128 = v72;
  uint64_t v75 = swift_getOpaqueTypeMetadata2();
  uint64_t v133 = v75;
  uint64_t v142 = *(void *)(v75 - 8);
  __chkstk_darwin(v75);
  v156 = (char *)&v125 - v76;
  uint64_t v174 = v73;
  v175 = &type metadata for HistorySortSelection;
  v176 = (void *)v71;
  int v177 = v74;
  uint64_t v140 = &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>;
  uint64_t v77 = swift_getOpaqueTypeConformance2();
  uint64_t v132 = v77;
  uint64_t v131 = sub_100042360(&qword_100158148, (void (*)(uint64_t))&type metadata accessor for ScenePhase);
  uint64_t v174 = (void *)v75;
  v175 = (ValueMetadata *)v161;
  v176 = (void *)v77;
  int v177 = (void *)v131;
  uint64_t v138 = swift_getOpaqueTypeMetadata2();
  uint64_t v144 = *(void *)(v138 - 8);
  __chkstk_darwin(v138);
  uint64_t v157 = (char *)&v125 - v78;
  uint64_t v141 = type metadata accessor for ModifiedContent();
  uint64_t v145 = *(void *)(v141 - 8);
  uint64_t v79 = __chkstk_darwin(v141);
  uint64_t v136 = (char *)&v125 - ((v80 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v79);
  uint64_t v139 = (char *)&v125 - v81;
  uint64_t v82 = v146;
  uint64_t v83 = v147;
  uint64_t v84 = v159;
  sub_100032C10();
  uint64_t v85 = v158;
  uint64_t v168 = v158;
  uint64_t v86 = v162;
  uint64_t v169 = v162;
  swift_getKeyPath();
  uint64_t v87 = v151;
  Bindable<A>.subscript.getter();
  swift_release();
  (*(void (**)(char *, void *))(v152 + 8))(v82, v87);
  uint64_t v165 = v85;
  uint64_t v88 = v85;
  uint64_t v166 = v86;
  uint64_t v167 = v84;
  uint64_t v89 = v130;
  NavigationStack.init<>(path:root:)();
  static Color.primary.getter();
  uint64_t v90 = v127;
  View.tint(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v137 + 8))(v89, v90);
  unsigned __int16 v91 = sub_100032C58();
  LOBYTE(v174) = v91;
  BYTE1(v174) = v91 > 0xFFu;
  uint64_t v92 = v164;
  uint64_t v154 = *(void (**)(char *, uint64_t, uint64_t))(v164 + 16);
  uint64_t v93 = v160;
  v154(v160, v84, v83);
  uint64_t v94 = *(unsigned __int8 *)(v92 + 80);
  uint64_t v95 = v92;
  uint64_t v96 = (v94 + 32) & ~v94;
  v153 += v96;
  uint64_t v152 = v94 | 7;
  uint64_t v97 = swift_allocObject();
  uint64_t v98 = v88;
  uint64_t v99 = v162;
  *(void *)(v97 + 16) = v88;
  *(void *)(v97 + 24) = v99;
  uint64_t v146 = (char *)v96;
  long long v100 = *(void **)(v95 + 32);
  uint64_t v164 = v95 + 32;
  uint64_t v151 = v100;
  ((void (*)(uint64_t, char *, uint64_t))v100)(v97 + v96, v93, v83);
  uint64_t v101 = v126;
  long long v102 = v155;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v143 + 8))(v102, v101);
  uint64_t v103 = v148;
  sub_100008708(v148);
  uint64_t v104 = v160;
  uint64_t v105 = v83;
  v154(v160, v84, v83);
  uint64_t v106 = swift_allocObject();
  *(void *)(v106 + 16) = v98;
  *(void *)(v106 + 24) = v99;
  unint64_t v107 = v104;
  ((void (*)(uint64_t, char *, uint64_t))v151)(v106 + v96, v104, v83);
  uint64_t v108 = v103;
  uint64_t v109 = (void *)v133;
  uint64_t v110 = (ValueMetadata *)v161;
  uint64_t v111 = (void *)v132;
  uint64_t v112 = (void *)v131;
  uint64_t v113 = v156;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  (*(void (**)(uint64_t, ValueMetadata *))(v149 + 8))(v108, v110);
  (*(void (**)(char *, void *))(v142 + 8))(v113, v109);
  v154(v107, v159, v105);
  uint64_t v114 = swift_allocObject();
  uint64_t v115 = v162;
  *(void *)(v114 + 16) = v158;
  *(void *)(v114 + 24) = v115;
  ((void (*)(char *, char *, uint64_t))v151)(&v146[v114], v107, v105);
  uint64_t v174 = v109;
  v175 = v110;
  v176 = v111;
  int v177 = v112;
  uint64_t v116 = swift_getOpaqueTypeConformance2();
  uint64_t v117 = v136;
  uint64_t v118 = v138;
  uint64_t v119 = v157;
  View.onAppear(perform:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v144 + 8))(v119, v118);
  uint64_t v170 = v116;
  v171 = &protocol witness table for _AppearanceActionModifier;
  uint64_t v120 = v141;
  uint64_t v121 = swift_getWitnessTable();
  unint64_t v122 = v139;
  sub_1000BA728(v117, v120, v121);
  v123 = *(void (**)(char *, uint64_t))(v145 + 8);
  v123(v117, v120);
  sub_1000BA728(v122, v120, v121);
  return ((uint64_t (*)(char *, uint64_t))v123)(v122, v120);
}

uint64_t sub_1000344FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v228 = a1;
  uint64_t v213 = a4;
  type metadata accessor for LibraryListViewModel();
  uint64_t v6 = type metadata accessor for Bindable();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v211 = v6;
  uint64_t v212 = v7;
  __chkstk_darwin(v6);
  v210 = (char *)v163 - v8;
  uint64_t v9 = type metadata accessor for NavigationBarItem.TitleDisplayMode();
  uint64_t v208 = *(void *)(v9 - 8);
  uint64_t v209 = v9;
  __chkstk_darwin(v9);
  v207 = (char *)v163 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ContentMarginPlacement();
  uint64_t v205 = *(void *)(v11 - 8);
  uint64_t v206 = v11;
  __chkstk_darwin(v11);
  v204 = (char *)v163 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v225 = a2;
  uint64_t v226 = a3;
  uint64_t v227 = type metadata accessor for LibraryListView();
  uint64_t v229 = *(void *)(v227 - 8);
  uint64_t v224 = *(void *)(v229 + 64);
  __chkstk_darwin(v227);
  v223 = (char *)v163 - v13;
  uint64_t v14 = sub_1000060EC((uint64_t *)&unk_100158FC0);
  __chkstk_darwin(v14 - 8);
  v203 = (char *)v163 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v222 = (char *)sub_100006224(&qword_100158058);
  v221 = (char *)sub_100006224(&qword_100158060);
  v220 = (char *)sub_100006224(&qword_100158068);
  v219 = (char *)sub_100006224(&qword_100158070);
  v218 = (void (*)(void, void, void))sub_100006224(&qword_1001577F8);
  uint64_t v217 = type metadata accessor for UUID();
  type metadata accessor for LibraryItemContextMenu();
  type metadata accessor for ModifiedContent();
  unint64_t v16 = sub_10003EEE4();
  uint64_t WitnessTable = swift_getWitnessTable();
  unint64_t v254 = v16;
  uint64_t v255 = WitnessTable;
  swift_getWitnessTable();
  type metadata accessor for Button();
  type metadata accessor for AccessibilityAttachmentModifier();
  uint64_t v18 = type metadata accessor for ModifiedContent();
  uint64_t v19 = sub_100006224(&qword_1001571C0);
  uint64_t v20 = swift_getWitnessTable();
  uint64_t v21 = sub_100042360((unint64_t *)&qword_1001567D8, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
  uint64_t v252 = v20;
  uint64_t v253 = v21;
  v216 = (char *)&protocol conformance descriptor for <> ModifiedContent<A, B>;
  uint64_t v22 = swift_getWitnessTable();
  uint64_t v23 = sub_100006480(&qword_100157260, &qword_1001571C0);
  v238 = (void *)v18;
  v239 = (void *)v19;
  v240 = (void *)v22;
  v241 = (void *)v23;
  swift_getOpaqueTypeMetadata2();
  sub_100006224(&qword_100158080);
  uint64_t v24 = type metadata accessor for ModifiedContent();
  uint64_t v25 = sub_100006224(&qword_100158088);
  v238 = (void *)v18;
  v239 = (void *)v19;
  v240 = (void *)v22;
  v241 = (void *)v23;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v27 = sub_100006480(&qword_100158090, &qword_100158080);
  uint64_t v250 = OpaqueTypeConformance2;
  uint64_t v251 = v27;
  uint64_t v28 = swift_getWitnessTable();
  unint64_t v29 = sub_10003EF38();
  v238 = (void *)v24;
  v239 = (void *)v25;
  v240 = (void *)v28;
  v241 = (void *)v29;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v31 = sub_100006480(&qword_1001580C0, &qword_1001577F8);
  uint64_t v32 = sub_100042360((unint64_t *)&qword_1001580C8, (void (*)(uint64_t))&type metadata accessor for UUID);
  v238 = v218;
  v239 = (void *)v217;
  v240 = (void *)OpaqueTypeMetadata2;
  v241 = (void *)v31;
  v242 = (void *)v32;
  type metadata accessor for ForEach();
  uint64_t v33 = type metadata accessor for Section();
  uint64_t v34 = sub_100006224(&qword_1001580D0);
  unint64_t v35 = sub_10003F0A8();
  v238 = (void *)v34;
  v239 = (void *)v35;
  uint64_t v36 = swift_getOpaqueTypeConformance2();
  v238 = (void *)v24;
  v239 = (void *)v25;
  v240 = (void *)v28;
  v241 = (void *)v29;
  uint64_t v249 = swift_getOpaqueTypeConformance2();
  uint64_t v37 = swift_getWitnessTable();
  uint64_t v246 = v36;
  uint64_t v247 = v37;
  v248 = &protocol witness table for EmptyView;
  uint64_t v38 = swift_getWitnessTable();
  v238 = (void *)v33;
  v239 = (void *)v38;
  swift_getOpaqueTypeMetadata2();
  sub_100006224(&qword_1001567A0);
  type metadata accessor for ModifiedContent();
  sub_100006224(&qword_1001580F0);
  type metadata accessor for ModifiedContent();
  sub_100006224(&qword_1001580F8);
  uint64_t v39 = type metadata accessor for ModifiedContent();
  uint64_t v40 = sub_100006480(&qword_100158100, &qword_100158068);
  v238 = v220;
  v239 = &type metadata for String;
  v240 = (void *)v39;
  v241 = (void *)v40;
  v242 = &protocol witness table for String;
  type metadata accessor for ForEach();
  swift_getTupleTypeMetadata3();
  uint64_t v41 = type metadata accessor for TupleView();
  v218 = (void (*)(void, void, void))v41;
  uint64_t v217 = swift_getWitnessTable();
  v238 = &type metadata for Never;
  v239 = (void *)v41;
  v240 = &protocol witness table for Never;
  v241 = (void *)v217;
  uint64_t v42 = type metadata accessor for List();
  uint64_t v200 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  v219 = (char *)v163 - v43;
  type metadata accessor for ShazamUpsellOverlayModifier(255);
  uint64_t v190 = v42;
  uint64_t v44 = type metadata accessor for ModifiedContent();
  uint64_t v201 = *(void *)(v44 - 8);
  __chkstk_darwin(v44);
  uint64_t v191 = (uint64_t)v163 - v45;
  uint64_t v46 = swift_getWitnessTable();
  uint64_t v189 = v46;
  uint64_t v47 = sub_100042360(&qword_100158108, (void (*)(uint64_t))type metadata accessor for ShazamUpsellOverlayModifier);
  uint64_t v244 = v46;
  uint64_t v245 = v47;
  uint64_t v48 = swift_getWitnessTable();
  v238 = (void *)v44;
  v239 = (void *)v48;
  uint64_t v49 = (void *)v44;
  uint64_t v185 = v44;
  uint64_t v186 = v48;
  unint64_t v50 = (void *)v48;
  uint64_t v51 = swift_getOpaqueTypeMetadata2();
  uint64_t v197 = *(void *)(v51 - 8);
  __chkstk_darwin(v51);
  uint64_t v184 = (char *)v163 - v52;
  v238 = v49;
  v239 = v50;
  uint64_t v53 = swift_getOpaqueTypeConformance2();
  v238 = (void *)v51;
  v239 = (void *)v53;
  uint64_t v54 = (void *)v51;
  uint64_t v179 = v51;
  uint64_t v55 = (void *)v53;
  uint64_t v181 = v53;
  uint64_t v56 = swift_getOpaqueTypeMetadata2();
  uint64_t v198 = *(void *)(v56 - 8);
  __chkstk_darwin(v56);
  uint64_t v178 = (char *)v163 - v57;
  v238 = v54;
  v239 = v55;
  uint64_t v58 = swift_getOpaqueTypeConformance2();
  unint64_t v59 = sub_10000E0F0();
  v238 = (void *)v56;
  v239 = &type metadata for String;
  uint64_t v60 = (void *)v56;
  uint64_t v180 = v56;
  v240 = (void *)v58;
  v241 = (void *)v59;
  unint64_t v182 = v59;
  uint64_t v183 = v58;
  uint64_t v61 = (void *)v59;
  uint64_t v62 = swift_getOpaqueTypeMetadata2();
  uint64_t v199 = *(void *)(v62 - 8);
  __chkstk_darwin(v62);
  v220 = (char *)v163 - v63;
  v238 = v60;
  v239 = &type metadata for String;
  v240 = (void *)v58;
  v241 = v61;
  uint64_t v64 = swift_getOpaqueTypeConformance2();
  v238 = (void *)v62;
  v239 = &type metadata for Bool;
  uint64_t v65 = (void *)v62;
  uint64_t v176 = v62;
  v240 = (void *)v64;
  v241 = &protocol witness table for Bool;
  uint64_t v66 = (void *)v64;
  uint64_t v177 = v64;
  uint64_t v67 = swift_getOpaqueTypeMetadata2();
  uint64_t v202 = *(void *)(v67 - 8);
  __chkstk_darwin(v67);
  v221 = (char *)v163 - v68;
  unint64_t v69 = sub_100023F6C();
  uint64_t v70 = type metadata accessor for TrackPageView();
  v238 = v65;
  v239 = &type metadata for Bool;
  v240 = v66;
  v241 = &protocol witness table for Bool;
  uint64_t v71 = swift_getOpaqueTypeConformance2();
  uint64_t v72 = sub_100042360(&qword_1001577E8, (void (*)(uint64_t))sub_100023F6C);
  uint64_t v73 = sub_100042360(&qword_1001568A0, (void (*)(uint64_t))type metadata accessor for TrackPageView);
  v238 = (void *)v67;
  v239 = (void *)v69;
  uint64_t v74 = (void *)v67;
  uint64_t v169 = v67;
  uint64_t v170 = v72;
  unint64_t v165 = v69;
  uint64_t v166 = v70;
  v240 = (void *)v70;
  v241 = (void *)v71;
  uint64_t v171 = v71;
  v242 = (void *)v72;
  uint64_t v243 = v73;
  uint64_t v75 = v73;
  uint64_t v168 = v73;
  uint64_t v76 = swift_getOpaqueTypeMetadata2();
  uint64_t v195 = *(void *)(v76 - 8);
  __chkstk_darwin(v76);
  uint64_t v172 = (char *)v163 - v77;
  uint64_t v78 = sub_100006224(&qword_100158110);
  v238 = v74;
  v239 = (void *)v69;
  v240 = (void *)v70;
  v241 = (void *)v71;
  v242 = (void *)v72;
  uint64_t v243 = v75;
  uint64_t v79 = swift_getOpaqueTypeConformance2();
  uint64_t v80 = sub_100006224(&qword_100158118);
  uint64_t v81 = sub_100006480(&qword_100158120, &qword_100158118);
  v238 = (void *)v80;
  v239 = (void *)v81;
  uint64_t v82 = swift_getOpaqueTypeConformance2();
  uint64_t v83 = (void *)v76;
  v163[3] = v78;
  uint64_t v164 = v76;
  v238 = (void *)v76;
  v239 = (void *)v78;
  uint64_t v84 = (void *)v79;
  v163[1] = v82;
  v163[2] = v79;
  v240 = (void *)v79;
  v241 = (void *)v82;
  uint64_t v85 = (void *)v82;
  uint64_t v86 = swift_getOpaqueTypeMetadata2();
  uint64_t v188 = v86;
  uint64_t v196 = *(void *)(v86 - 8);
  __chkstk_darwin(v86);
  v222 = (char *)v163 - v87;
  uint64_t v88 = sub_100006224(&qword_100158128);
  uint64_t v175 = v88;
  v238 = v83;
  v239 = (void *)v78;
  v240 = v84;
  v241 = v85;
  uint64_t v89 = swift_getOpaqueTypeConformance2();
  uint64_t v174 = v89;
  unint64_t v173 = sub_10003F1F4();
  v238 = (void *)v86;
  v239 = (void *)v88;
  v240 = (void *)v89;
  v241 = (void *)v173;
  v192 = &opaque type descriptor for <<opaque return type of View.sheet<A>(isPresented:onDismiss:content:)>>;
  uint64_t v90 = swift_getOpaqueTypeMetadata2();
  uint64_t v91 = *(void *)(v90 - 8);
  uint64_t v193 = v90;
  uint64_t v194 = v91;
  uint64_t v92 = __chkstk_darwin(v90);
  uint64_t v167 = (char *)v163 - ((v93 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v92);
  uint64_t v187 = (char *)v163 - v94;
  uint64_t v95 = v225;
  uint64_t v235 = v225;
  uint64_t v96 = v226;
  uint64_t v236 = v226;
  uint64_t v97 = v228;
  uint64_t v237 = v228;
  List<>.init(content:)();
  uint64_t v98 = type metadata accessor for URL();
  uint64_t v99 = v203;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v98 - 8) + 56))(v203, 1, 1, v98);
  uint64_t v100 = v229;
  uint64_t v101 = *(void (**)(void, void, void))(v229 + 16);
  uint64_t v217 = v229 + 16;
  v218 = v101;
  long long v102 = v223;
  uint64_t v103 = v227;
  v101(v223, v97, v227);
  uint64_t v104 = *(unsigned __int8 *)(v100 + 80);
  v224 += (v104 + 32) & ~v104;
  uint64_t v105 = (v104 + 32) & ~v104;
  uint64_t v215 = v104 | 7;
  v216 = (char *)v105;
  uint64_t v106 = swift_allocObject();
  *(void *)(v106 + 16) = v95;
  *(void *)(v106 + 24) = v96;
  v214 = *(void (**)(uint64_t, char *, uint64_t))(v100 + 32);
  uint64_t v229 = v100 + 32;
  unint64_t v107 = v102;
  uint64_t v108 = v103;
  v214(v106 + v105, v102, v103);
  uint64_t v109 = v190;
  uint64_t v110 = v191;
  uint64_t v111 = (uint64_t)v99;
  uint64_t v112 = (uint64_t)v99;
  uint64_t v113 = v219;
  sub_1000EDAF4(v112, (uint64_t)sub_10003F560, v106, v190, v189, v191);
  swift_release();
  sub_1000063D0(v111, (uint64_t *)&unk_100158FC0);
  (*(void (**)(char *, uint64_t))(v200 + 8))(v113, v109);
  static Edge.Set.top.getter();
  uint64_t v114 = v204;
  static ContentMarginPlacement.automatic.getter();
  uint64_t v116 = v184;
  uint64_t v115 = v185;
  View.contentMargins(_:_:for:)();
  (*(void (**)(char *, uint64_t))(v205 + 8))(v114, v206);
  (*(void (**)(uint64_t, uint64_t))(v201 + 8))(v110, v115);
  uint64_t v118 = v207;
  uint64_t v117 = v208;
  uint64_t v119 = v209;
  (*(void (**)(char *, void, uint64_t))(v208 + 104))(v207, enum case for NavigationBarItem.TitleDisplayMode.inline(_:), v209);
  uint64_t v120 = v178;
  uint64_t v121 = v179;
  View.navigationBarTitleDisplayMode(_:)();
  (*(void (**)(char *, uint64_t))(v117 + 8))(v118, v119);
  (*(void (**)(char *, uint64_t))(v197 + 8))(v116, v121);
  uint64_t v122 = v228;
  sub_100032BC0();
  uint64_t v123 = sub_100021BB8();
  uint64_t v125 = v124;
  swift_bridgeObjectRetain();
  swift_release();
  v238 = (void *)v123;
  v239 = v125;
  uint64_t v126 = v180;
  View.navigationTitle<A>(_:)();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v198 + 8))(v120, v126);
  uint64_t v127 = v108;
  uint64_t v128 = v108;
  uint64_t v129 = (void (*)(char *, uint64_t, uint64_t))v218;
  v218(v107, v122, v128);
  uint64_t v130 = swift_allocObject();
  uint64_t v131 = v226;
  *(void *)(v130 + 16) = v225;
  *(void *)(v130 + 24) = v131;
  uint64_t v132 = v216;
  uint64_t v133 = (void (*)(char *, char *, uint64_t))v214;
  v214((uint64_t)&v216[v130], v107, v127);
  uint64_t v134 = v220;
  uint64_t v135 = v176;
  View.onScrollGeometryChange<A>(for:of:action:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v199 + 8))(v134, v135);
  v220 = (char *)swift_checkMetadataState();
  uint64_t v136 = v227;
  v129(v107, v228, v227);
  uint64_t v137 = swift_allocObject();
  uint64_t v138 = v225;
  uint64_t v139 = v226;
  *(void *)(v137 + 16) = v225;
  *(void *)(v137 + 24) = v139;
  v133(&v132[v137], v107, v136);
  swift_checkMetadataState();
  uint64_t v140 = v172;
  uint64_t v141 = v221;
  uint64_t v142 = v169;
  View.navigationDestination<A, B>(for:destination:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v202 + 8))(v141, v142);
  uint64_t v232 = v138;
  uint64_t v233 = v139;
  uint64_t v143 = v228;
  uint64_t v234 = v228;
  uint64_t v144 = v164;
  View.toolbar<A>(content:)();
  (*(void (**)(char *, uint64_t))(v195 + 8))(v140, v144);
  uint64_t v145 = v210;
  uint64_t v146 = v227;
  uint64_t v147 = v143;
  sub_100032C10();
  uint64_t v230 = v138;
  uint64_t v231 = v139;
  uint64_t v148 = v139;
  swift_getKeyPath();
  uint64_t v149 = v211;
  Bindable<A>.subscript.getter();
  swift_release();
  (*(void (**)(char *, uint64_t))(v212 + 8))(v145, v149);
  uint64_t v150 = v223;
  v218(v223, v147, v146);
  uint64_t v151 = swift_allocObject();
  *(void *)(v151 + 16) = v138;
  *(void *)(v151 + 24) = v148;
  v214((uint64_t)&v216[v151], v150, v146);
  uint64_t v152 = (void *)v173;
  uint64_t v153 = (void *)v174;
  uint64_t v154 = (void *)v175;
  unint64_t v155 = v167;
  v156 = (void *)v188;
  uint64_t v157 = v222;
  View.sheet<A>(isPresented:onDismiss:content:)();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, void *))(v196 + 8))(v157, v156);
  v238 = v156;
  v239 = v154;
  v240 = v153;
  v241 = v152;
  uint64_t v158 = swift_getOpaqueTypeConformance2();
  uint64_t v159 = v187;
  uint64_t v160 = v193;
  sub_1000BA728(v155, v193, v158);
  uint64_t v161 = *(void (**)(char *, uint64_t))(v194 + 8);
  v161(v155, v160);
  sub_1000BA728(v159, v160, v158);
  return ((uint64_t (*)(char *, uint64_t))v161)(v159, v160);
}

uint64_t sub_100035C08@<X0>(unint64_t a1@<X0>, void (*a2)(void, void)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v139 = a3;
  uint64_t v140 = a2;
  unint64_t v134 = a1;
  uint64_t v132 = a4;
  uint64_t v137 = type metadata accessor for LibraryListView();
  uint64_t v131 = *(void *)(v137 - 8);
  uint64_t v129 = *(void *)(v131 + 64);
  __chkstk_darwin(v137);
  uint64_t v130 = (char *)&KeyPath - v4;
  uint64_t v138 = sub_100006224(&qword_100158068);
  uint64_t v141 = sub_100006224(&qword_100158070);
  uint64_t v136 = (char *)sub_100006224(&qword_1001577F8);
  uint64_t v135 = type metadata accessor for UUID();
  type metadata accessor for LibraryItemContextMenu();
  type metadata accessor for ModifiedContent();
  unint64_t v5 = sub_10003EEE4();
  uint64_t WitnessTable = swift_getWitnessTable();
  unint64_t v158 = v5;
  uint64_t v159 = WitnessTable;
  swift_getWitnessTable();
  type metadata accessor for Button();
  type metadata accessor for AccessibilityAttachmentModifier();
  uint64_t v7 = type metadata accessor for ModifiedContent();
  uint64_t v8 = sub_100006224(&qword_1001571C0);
  uint64_t v9 = swift_getWitnessTable();
  uint64_t v10 = sub_100042360((unint64_t *)&qword_1001567D8, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
  uint64_t v156 = v9;
  uint64_t v157 = v10;
  uint64_t v11 = swift_getWitnessTable();
  uint64_t v12 = sub_100006480(&qword_100157260, &qword_1001571C0);
  uint64_t v149 = (char *)v7;
  uint64_t v150 = (void *)v8;
  uint64_t v151 = v11;
  unint64_t v152 = v12;
  swift_getOpaqueTypeMetadata2();
  sub_100006224(&qword_100158080);
  uint64_t v13 = type metadata accessor for ModifiedContent();
  uint64_t v14 = sub_100006224(&qword_100158088);
  uint64_t v149 = (char *)v7;
  uint64_t v150 = (void *)v8;
  uint64_t v151 = v11;
  unint64_t v152 = v12;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v16 = sub_100006480(&qword_100158090, &qword_100158080);
  uint64_t v154 = OpaqueTypeConformance2;
  uint64_t v155 = v16;
  uint64_t v17 = swift_getWitnessTable();
  unint64_t v18 = sub_10003EF38();
  uint64_t v149 = (char *)v13;
  uint64_t v150 = (void *)v14;
  uint64_t v151 = v17;
  unint64_t v152 = v18;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v20 = sub_100006480(&qword_1001580C0, &qword_1001577F8);
  uint64_t v21 = sub_100042360((unint64_t *)&qword_1001580C8, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v149 = v136;
  uint64_t v150 = (void *)v135;
  uint64_t v151 = OpaqueTypeMetadata2;
  unint64_t v152 = v20;
  uint64_t v153 = (void *)v21;
  type metadata accessor for ForEach();
  uint64_t v22 = type metadata accessor for Section();
  uint64_t v23 = sub_100006224(&qword_1001580D0);
  unint64_t v24 = sub_10003F0A8();
  uint64_t v149 = (char *)v23;
  uint64_t v150 = (void *)v24;
  uint64_t v25 = swift_getOpaqueTypeConformance2();
  uint64_t v149 = (char *)v13;
  uint64_t v150 = (void *)v14;
  uint64_t v151 = v17;
  unint64_t v152 = v18;
  unint64_t v26 = v134;
  v148[13] = swift_getOpaqueTypeConformance2();
  uint64_t v27 = swift_getWitnessTable();
  v148[10] = v25;
  v148[11] = v27;
  v148[12] = &protocol witness table for EmptyView;
  uint64_t v28 = swift_getWitnessTable();
  uint64_t v125 = v22;
  uint64_t v149 = (char *)v22;
  uint64_t v150 = (void *)v28;
  uint64_t v120 = (void *)v28;
  swift_getOpaqueTypeMetadata2();
  sub_100006224(&qword_1001567A0);
  uint64_t v29 = type metadata accessor for ModifiedContent();
  sub_100006224(&qword_1001580F0);
  uint64_t v121 = v29;
  uint64_t v30 = type metadata accessor for ModifiedContent();
  uint64_t v31 = sub_100006224(&qword_1001580F8);
  uint64_t v122 = v30;
  uint64_t v111 = v31;
  uint64_t v32 = type metadata accessor for ModifiedContent();
  uint64_t v33 = sub_100006480(&qword_100158100, &qword_100158068);
  uint64_t v149 = (char *)v138;
  uint64_t v150 = &type metadata for String;
  uint64_t v123 = v33;
  uint64_t v124 = v32;
  uint64_t v151 = v32;
  unint64_t v152 = v33;
  uint64_t v153 = &protocol witness table for String;
  uint64_t v115 = type metadata accessor for ForEach();
  uint64_t v126 = *(void *)(v115 - 8);
  uint64_t v34 = __chkstk_darwin(v115);
  uint64_t v128 = (char *)&KeyPath - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  uint64_t v127 = (char *)&KeyPath - v36;
  uint64_t v37 = sub_1000060EC(&qword_1001582B8);
  __chkstk_darwin(v37 - 8);
  uint64_t v110 = (char *)&KeyPath - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = sub_1000060EC(&qword_1001582C0);
  __chkstk_darwin(v104);
  unint64_t v107 = (char *)&KeyPath - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = type metadata accessor for ListSectionSpacing();
  uint64_t v108 = *(void *)(v40 - 8);
  uint64_t v109 = v40;
  __chkstk_darwin(v40);
  uint64_t v112 = (char *)&KeyPath - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = sub_1000060EC(&qword_1001582C8);
  uint64_t v106 = *(void *)(v114 - 8);
  __chkstk_darwin(v114);
  uint64_t v43 = (char *)&KeyPath - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v133 = sub_1000060EC(&qword_1001582D0);
  uint64_t v113 = *(void *)(v133 - 8);
  __chkstk_darwin(v133);
  uint64_t v105 = (char *)&KeyPath - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = sub_1000060EC(&qword_100158060);
  uint64_t v45 = __chkstk_darwin(v116);
  uint64_t v119 = (uint64_t)&KeyPath - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v45);
  uint64_t v141 = (uint64_t)&KeyPath - v47;
  uint64_t v48 = sub_1000060EC(&qword_100158058);
  uint64_t v49 = *(void *)(v48 - 8);
  uint64_t v50 = __chkstk_darwin(v48);
  uint64_t v136 = (char *)&KeyPath - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = __chkstk_darwin(v50);
  uint64_t v54 = (char *)&KeyPath - v53;
  __chkstk_darwin(v52);
  uint64_t v56 = (char *)&KeyPath - v55;
  uint64_t v142 = v140;
  uint64_t v143 = v139;
  unint64_t v144 = v26;
  sub_1000060EC(&qword_1001582D8);
  sub_100040088();
  Section<>.init(content:)();
  uint64_t v117 = v49;
  uint64_t v118 = v48;
  uint64_t v57 = *(void (**)(char *, char *, uint64_t))(v49 + 32);
  uint64_t v135 = (uint64_t)v56;
  v57(v56, v54, v48);
  unint64_t v58 = v26;
  sub_100032BC0();
  LOBYTE(v5) = sub_10001E034();
  uint64_t v59 = swift_release();
  uint64_t v60 = 1;
  if ((v5 & 1) == 0)
  {
    __chkstk_darwin(v59);
    uint64_t v61 = v139;
    *(&KeyPath - 4) = (uint64_t)v140;
    *(&KeyPath - 3) = v61;
    unint64_t v101 = v26;
    sub_1000060EC(&qword_100158310);
    sub_100040228();
    uint64_t v62 = v43;
    uint64_t v103 = v43;
    Section<>.init(content:)();
    uint64_t v63 = v112;
    static ListSectionSpacing.custom(_:)();
    uint64_t v65 = (uint64_t)v107;
    uint64_t v64 = v108;
    uint64_t v66 = &v107[*(int *)(v104 + 36)];
    uint64_t v104 = *(void *)(v108 + 16);
    uint64_t v67 = v109;
    ((void (*)(char *, char *, uint64_t))v104)(v66, v63, v109);
    uint64_t v68 = *(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56);
    v68(v66, 0, 1, v67);
    uint64_t v69 = v106;
    (*(void (**)(uint64_t, char *, uint64_t))(v106 + 16))(v65, v62, v114);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v70 = (uint64_t)v110;
    ((void (*)(char *, char *, uint64_t))v104)(v110, v63, v67);
    v68((char *)v70, 0, 1, v67);
    unint64_t v58 = v134;
    uint64_t v71 = (uint64_t)v105;
    uint64_t v72 = (uint64_t *)&v105[*(int *)(v133 + 36)];
    sub_100009C94(v70, (uint64_t)v72 + *(int *)(v111 + 28), &qword_1001582B8);
    uint64_t *v72 = KeyPath;
    sub_100009C94(v65, v71, &qword_1001582C0);
    sub_1000063D0(v70, &qword_1001582B8);
    sub_1000063D0(v65, &qword_1001582C0);
    (*(void (**)(char *, uint64_t))(v64 + 8))(v112, v67);
    (*(void (**)(char *, uint64_t))(v69 + 8))(v103, v114);
    sub_100009C30(v71, v141, &qword_1001582D0);
    uint64_t v60 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v113 + 56))(v141, v60, 1, v133);
  uint64_t v73 = v137;
  sub_100032BC0();
  unsigned __int16 v74 = sub_100032C58();
  uint64_t v75 = sub_10001E3B4(v74 | (unsigned __int16)((v74 > 0xFFu) << 8));
  swift_release();
  v148[0] = v75;
  uint64_t v77 = v130;
  uint64_t v76 = v131;
  (*(void (**)(char *, unint64_t, uint64_t))(v131 + 16))(v130, v58, v73);
  unint64_t v78 = (*(unsigned __int8 *)(v76 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80);
  uint64_t v79 = swift_allocObject();
  uint64_t v80 = v139;
  *(void *)(v79 + 16) = v140;
  *(void *)(v79 + 24) = v80;
  (*(void (**)(unint64_t, char *, uint64_t))(v76 + 32))(v79 + v78, v77, v73);
  uint64_t v149 = (char *)v125;
  uint64_t v150 = v120;
  uint64_t v81 = swift_getOpaqueTypeConformance2();
  uint64_t v82 = sub_100006480(&qword_100156798, &qword_1001567A0);
  v148[8] = v81;
  v148[9] = v82;
  uint64_t v83 = swift_getWitnessTable();
  uint64_t v84 = sub_100006480(&qword_100158328, &qword_1001580F0);
  v148[6] = v83;
  v148[7] = v84;
  uint64_t v85 = swift_getWitnessTable();
  uint64_t v86 = sub_100006480(&qword_100158330, &qword_1001580F8);
  v148[4] = v85;
  v148[5] = v86;
  uint64_t v87 = swift_getWitnessTable();
  unint64_t v101 = sub_100040414();
  uint64_t v88 = v128;
  ForEach<>.init(_:content:)();
  v148[3] = v87;
  uint64_t v89 = v115;
  uint64_t v90 = swift_getWitnessTable();
  uint64_t v91 = v127;
  sub_1000BA728(v88, v89, v90);
  uint64_t v92 = v126;
  uint64_t v140 = *(void (**)(void, void))(v126 + 8);
  v140(v88, v89);
  uint64_t v94 = v117;
  uint64_t v93 = v118;
  uint64_t v95 = v136;
  (*(void (**)(char *, uint64_t, uint64_t))(v117 + 16))(v136, v135, v118);
  uint64_t v149 = v95;
  uint64_t v96 = v119;
  sub_100009C94(v141, v119, &qword_100158060);
  uint64_t v150 = (void *)v96;
  (*(void (**)(char *, char *, uint64_t))(v92 + 16))(v88, v91, v89);
  uint64_t v151 = (uint64_t)v88;
  v148[0] = v93;
  v148[1] = v116;
  v148[2] = v89;
  uint64_t v145 = sub_100040638(&qword_100158340, &qword_100158058, (void (*)(void))sub_100040088);
  uint64_t v146 = sub_100040468(&qword_100158348, &qword_100158060, (void (*)(void))sub_1000404D4);
  uint64_t v147 = v90;
  sub_1000327E4((uint64_t)&v149, 3uLL, (uint64_t)v148);
  uint64_t v97 = v91;
  uint64_t v98 = (void (*)(char *, uint64_t))v140;
  v140(v97, v89);
  sub_1000063D0(v141, &qword_100158060);
  uint64_t v99 = *(void (**)(uint64_t, uint64_t))(v94 + 8);
  v99(v135, v93);
  v98(v88, v89);
  sub_1000063D0(v96, &qword_100158060);
  return ((uint64_t (*)(char *, uint64_t))v99)(v136, v93);
}

double sub_100036C30@<D0>(uint64_t a1@<X8>)
{
  type metadata accessor for LibraryListView();
  sub_100032BC0();
  uint64_t v2 = sub_10001DF84();
  swift_release();
  sub_100032BC0();
  char v3 = sub_10001E338();
  swift_release();
  static Color.clear.getter();
  uint64_t v4 = AnyView.init<A>(_:)();
  *(void *)a1 = v2;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  *(void *)(a1 + 16) = v4;
  double result = 0.0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(unsigned char *)(a1 + 56) = 0;
  return result;
}

double sub_100036CF4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = type metadata accessor for LibraryListView();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v15 - v10;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v15 - v10, a1, v8);
  unint64_t v12 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a2;
  *(void *)(v13 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v13 + v12, v11, v8);
  *(void *)a4 = sub_10004109C;
  *(void *)(a4 + 8) = v13;
  double result = 0.0;
  *(_OWORD *)(a4 + 16) = xmmword_100111860;
  *(void *)(a4 + 32) = 0;
  *(void *)(a4 + 40) = 0;
  *(unsigned char *)(a4 + 48) = 0;
  return result;
}

uint64_t sub_100036E48()
{
  type metadata accessor for LibraryListView();
  sub_100032BC0();
  sub_10001DAD8();

  return swift_release();
}

uint64_t sub_100036E94@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v75 = a3;
  uint64_t v76 = a4;
  uint64_t v77 = a1;
  uint64_t v78 = a2;
  uint64_t v82 = a5;
  uint64_t v5 = type metadata accessor for Prominence();
  uint64_t v80 = *(void *)(v5 - 8);
  uint64_t v81 = v5;
  __chkstk_darwin(v5);
  uint64_t v79 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = sub_100006224(&qword_100158070);
  uint64_t v72 = sub_100006224(&qword_1001577F8);
  uint64_t v71 = type metadata accessor for UUID();
  type metadata accessor for LibraryItemContextMenu();
  type metadata accessor for ModifiedContent();
  unint64_t v7 = sub_10003EEE4();
  uint64_t WitnessTable = swift_getWitnessTable();
  unint64_t v115 = v7;
  uint64_t v116 = WitnessTable;
  swift_getWitnessTable();
  type metadata accessor for Button();
  type metadata accessor for AccessibilityAttachmentModifier();
  uint64_t v9 = type metadata accessor for ModifiedContent();
  uint64_t v10 = sub_100006224(&qword_1001571C0);
  uint64_t v11 = swift_getWitnessTable();
  uint64_t v12 = sub_100042360((unint64_t *)&qword_1001567D8, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
  uint64_t v113 = v11;
  uint64_t v114 = v12;
  uint64_t v73 = &protocol conformance descriptor for <> ModifiedContent<A, B>;
  uint64_t v13 = swift_getWitnessTable();
  uint64_t v14 = sub_100006480(&qword_100157260, &qword_1001571C0);
  uint64_t v106 = v9;
  unint64_t v107 = v10;
  uint64_t v108 = v13;
  unint64_t v109 = v14;
  swift_getOpaqueTypeMetadata2();
  sub_100006224(&qword_100158080);
  uint64_t v15 = type metadata accessor for ModifiedContent();
  uint64_t v16 = sub_100006224(&qword_100158088);
  uint64_t v106 = v9;
  unint64_t v107 = v10;
  uint64_t v108 = v13;
  unint64_t v109 = v14;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  unsigned __int16 v74 = &protocol conformance descriptor for _TraitWritingModifier<A>;
  uint64_t v18 = sub_100006480(&qword_100158090, &qword_100158080);
  uint64_t v111 = OpaqueTypeConformance2;
  uint64_t v112 = v18;
  uint64_t v19 = swift_getWitnessTable();
  unint64_t v20 = sub_10003EF38();
  uint64_t v106 = v15;
  unint64_t v107 = v16;
  uint64_t v108 = v19;
  unint64_t v109 = v20;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v22 = sub_100006480(&qword_1001580C0, &qword_1001577F8);
  uint64_t v23 = sub_100042360((unint64_t *)&qword_1001580C8, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v106 = v72;
  unint64_t v107 = v71;
  uint64_t v108 = OpaqueTypeMetadata2;
  unint64_t v109 = v22;
  uint64_t v110 = v23;
  type metadata accessor for ForEach();
  uint64_t v24 = type metadata accessor for Section();
  uint64_t v72 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v70 = (char *)&v60 - v25;
  uint64_t v26 = sub_100006224(&qword_1001580D0);
  unint64_t v27 = sub_10003F0A8();
  uint64_t v106 = v26;
  unint64_t v107 = v27;
  uint64_t v28 = swift_getOpaqueTypeConformance2();
  uint64_t v106 = v15;
  unint64_t v107 = v16;
  uint64_t v108 = v19;
  unint64_t v109 = v20;
  uint64_t v105 = swift_getOpaqueTypeConformance2();
  uint64_t v29 = swift_getWitnessTable();
  uint64_t v102 = v28;
  uint64_t v103 = v29;
  uint64_t v104 = &protocol witness table for EmptyView;
  uint64_t v62 = swift_getWitnessTable();
  uint64_t v106 = v24;
  unint64_t v107 = v62;
  uint64_t v65 = &opaque type descriptor for <<opaque return type of View.headerProminence(_:)>>;
  uint64_t v63 = swift_getOpaqueTypeMetadata2();
  uint64_t v68 = *(void *)(v63 - 8);
  __chkstk_darwin(v63);
  uint64_t v31 = (char *)&v60 - v30;
  sub_100006224(&qword_1001567A0);
  uint64_t v64 = type metadata accessor for ModifiedContent();
  uint64_t v69 = *(void *)(v64 - 8);
  __chkstk_darwin(v64);
  uint64_t v61 = (char *)&v60 - v32;
  sub_100006224(&qword_1001580F0);
  uint64_t v67 = type metadata accessor for ModifiedContent();
  sub_100006224(&qword_1001580F8);
  uint64_t v33 = type metadata accessor for ModifiedContent();
  uint64_t v71 = *(void *)(v33 - 8);
  uint64_t v34 = __chkstk_darwin(v33);
  uint64_t v60 = (char *)&v60 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  uint64_t v66 = (char *)&v60 - v36;
  uint64_t v37 = *v77;
  uint64_t v38 = v77[1];
  uint64_t v39 = v77[2];
  uint64_t v89 = v75;
  uint64_t v90 = v76;
  uint64_t v91 = v37;
  uint64_t v92 = v38;
  uint64_t v93 = v39;
  uint64_t v94 = v78;
  uint64_t v84 = v75;
  uint64_t v85 = v76;
  uint64_t v86 = v37;
  uint64_t v87 = v38;
  uint64_t v88 = v39;
  uint64_t v40 = v70;
  sub_100032AF0((uint64_t)sub_1000406BC);
  uint64_t v41 = v79;
  uint64_t v42 = v80;
  uint64_t v43 = v81;
  (*(void (**)(char *, void, uint64_t))(v80 + 104))(v79, enum case for Prominence.increased(_:), v81);
  uint64_t v44 = v62;
  View.headerProminence(_:)();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v41, v43);
  (*(void (**)(char *, uint64_t))(v72 + 8))(v40, v24);
  int v101 = static HierarchicalShapeStyle.primary.getter();
  uint64_t v106 = v24;
  unint64_t v107 = v44;
  uint64_t v45 = swift_getOpaqueTypeConformance2();
  uint64_t v46 = v61;
  uint64_t v47 = v63;
  View.foregroundStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v68 + 8))(v31, v47);
  uint64_t v48 = sub_100006480(&qword_100156798, &qword_1001567A0);
  uint64_t v99 = v45;
  uint64_t v100 = v48;
  uint64_t v49 = v64;
  uint64_t v50 = swift_getWitnessTable();
  uint64_t v51 = v60;
  View.listSectionSpacing(_:)();
  (*(void (**)(char *, uint64_t))(v69 + 8))(v46, v49);
  uint64_t v52 = sub_100006480(&qword_100158328, &qword_1001580F0);
  uint64_t v97 = v50;
  uint64_t v98 = v52;
  uint64_t v53 = swift_getWitnessTable();
  uint64_t v54 = sub_100006480(&qword_100158330, &qword_1001580F8);
  uint64_t v95 = v53;
  uint64_t v96 = v54;
  uint64_t v55 = swift_getWitnessTable();
  uint64_t v56 = v66;
  uint64_t v57 = v51;
  sub_1000BA728(v51, v33, v55);
  unint64_t v58 = *(void (**)(char *, uint64_t))(v71 + 8);
  v58(v57, v33);
  sub_1000BA728(v56, v33, v55);
  return ((uint64_t (*)(char *, uint64_t))v58)(v56, v33);
}

uint64_t sub_100037860@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X8>)
{
  uint64_t v51 = a1;
  uint64_t v52 = a2;
  uint64_t v53 = a5;
  uint64_t v46 = a3;
  uint64_t v47 = a4;
  uint64_t v50 = type metadata accessor for LibraryListView();
  uint64_t v48 = *(void *)(v50 - 8);
  uint64_t v49 = *(void *)(v48 + 64);
  __chkstk_darwin(v50);
  uint64_t v45 = (char *)v40 - v5;
  uint64_t v6 = sub_100006224(&qword_1001577F8);
  v40[3] = v6;
  uint64_t v54 = type metadata accessor for UUID();
  type metadata accessor for LibraryItemContextMenu();
  type metadata accessor for ModifiedContent();
  unint64_t v7 = sub_10003EEE4();
  uint64_t WitnessTable = swift_getWitnessTable();
  unint64_t v66 = v7;
  uint64_t v67 = WitnessTable;
  swift_getWitnessTable();
  type metadata accessor for Button();
  type metadata accessor for AccessibilityAttachmentModifier();
  uint64_t v9 = type metadata accessor for ModifiedContent();
  uint64_t v10 = sub_100006224(&qword_1001571C0);
  uint64_t v11 = swift_getWitnessTable();
  uint64_t v12 = sub_100042360((unint64_t *)&qword_1001567D8, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
  uint64_t v64 = v11;
  uint64_t v65 = v12;
  uint64_t v13 = swift_getWitnessTable();
  uint64_t v14 = sub_100006480(&qword_100157260, &qword_1001571C0);
  uint64_t v57 = v9;
  uint64_t v58 = v10;
  uint64_t v59 = v13;
  unint64_t v60 = v14;
  swift_getOpaqueTypeMetadata2();
  sub_100006224(&qword_100158080);
  uint64_t v15 = type metadata accessor for ModifiedContent();
  uint64_t v16 = sub_100006224(&qword_100158088);
  uint64_t v43 = v16;
  uint64_t v57 = v9;
  uint64_t v58 = v10;
  uint64_t v59 = v13;
  unint64_t v60 = v14;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v18 = sub_100006480(&qword_100158090, &qword_100158080);
  uint64_t v62 = OpaqueTypeConformance2;
  uint64_t v63 = v18;
  uint64_t v44 = v15;
  uint64_t v19 = swift_getWitnessTable();
  uint64_t v42 = v19;
  unint64_t v41 = sub_10003EF38();
  uint64_t v57 = v15;
  uint64_t v58 = v16;
  uint64_t v59 = v19;
  unint64_t v60 = v41;
  v40[0] = &opaque type descriptor for <<opaque return type of View.swipeActions<A>(edge:allowsFullSwipe:content:)>>;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  v40[2] = OpaqueTypeMetadata2;
  uint64_t v21 = sub_100006480(&qword_1001580C0, &qword_1001577F8);
  v40[1] = v21;
  uint64_t v22 = sub_100042360((unint64_t *)&qword_1001580C8, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v57 = v6;
  uint64_t v58 = v54;
  uint64_t v59 = OpaqueTypeMetadata2;
  unint64_t v60 = v21;
  uint64_t v61 = v22;
  uint64_t v23 = type metadata accessor for ForEach();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = __chkstk_darwin(v23);
  unint64_t v27 = (char *)v40 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  uint64_t v29 = (char *)v40 - v28;
  uint64_t v56 = v51;
  uint64_t v30 = v48;
  uint64_t v31 = v45;
  uint64_t v32 = v50;
  (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v45, v52, v50);
  unint64_t v33 = (*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
  uint64_t v34 = swift_allocObject();
  uint64_t v35 = v47;
  *(void *)(v34 + 16) = v46;
  *(void *)(v34 + 24) = v35;
  (*(void (**)(unint64_t, char *, uint64_t))(v30 + 32))(v34 + v33, v31, v32);
  swift_bridgeObjectRetain();
  uint64_t v57 = v44;
  uint64_t v58 = v43;
  uint64_t v59 = v42;
  unint64_t v60 = v41;
  uint64_t v36 = swift_getOpaqueTypeConformance2();
  sub_100042360(&qword_100158368, (void (*)(uint64_t))sub_100023F6C);
  ForEach<>.init(_:content:)();
  uint64_t v55 = v36;
  uint64_t v37 = swift_getWitnessTable();
  sub_1000BA728(v27, v23, v37);
  uint64_t v38 = *(void (**)(char *, uint64_t))(v24 + 8);
  v38(v27, v23);
  sub_1000BA728(v29, v23, v37);
  return ((uint64_t (*)(char *, uint64_t))v38)(v29, v23);
}

uint64_t sub_100037EC0@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v101 = a2;
  uint64_t v100 = a1;
  uint64_t v88 = a5;
  uint64_t v7 = sub_1000060EC(&qword_1001571C0);
  __chkstk_darwin(v7);
  uint64_t v102 = (char *)v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = a3;
  uint64_t v98 = type metadata accessor for LibraryListView();
  uint64_t v94 = *(void *)(v98 - 8);
  uint64_t v97 = *(void *)(v94 + 64);
  __chkstk_darwin(v98);
  uint64_t v93 = (char *)v69 - v9;
  type metadata accessor for LibraryItemContextMenu();
  uint64_t v10 = type metadata accessor for ModifiedContent();
  unint64_t v11 = sub_10003EEE4();
  uint64_t WitnessTable = swift_getWitnessTable();
  unint64_t v116 = v11;
  uint64_t v117 = WitnessTable;
  uint64_t v96 = v10;
  uint64_t v95 = swift_getWitnessTable();
  uint64_t v13 = type metadata accessor for Button();
  uint64_t v99 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v92 = (char *)v69 - v14;
  type metadata accessor for AccessibilityAttachmentModifier();
  uint64_t v91 = v13;
  uint64_t v15 = type metadata accessor for ModifiedContent();
  uint64_t v86 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v89 = (char *)v69 - v16;
  uint64_t v17 = swift_getWitnessTable();
  uint64_t v90 = v17;
  uint64_t v18 = sub_100042360((unint64_t *)&qword_1001567D8, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
  uint64_t v114 = v17;
  uint64_t v115 = v18;
  uint64_t v19 = swift_getWitnessTable();
  uint64_t v20 = sub_100006480(&qword_100157260, &qword_1001571C0);
  *(void *)&long long v118 = v15;
  *((void *)&v118 + 1) = v7;
  *(void *)&long long v119 = v19;
  *((void *)&v119 + 1) = v20;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v82 = *(void *)(OpaqueTypeMetadata2 - 8);
  __chkstk_darwin(OpaqueTypeMetadata2);
  uint64_t v77 = (char *)v69 - v22;
  sub_100006224(&qword_100158080);
  uint64_t v83 = OpaqueTypeMetadata2;
  uint64_t v23 = type metadata accessor for ModifiedContent();
  uint64_t v84 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v81 = (char *)v69 - v24;
  uint64_t v25 = sub_100006224(&qword_100158088);
  uint64_t v85 = v15;
  *(void *)&long long v118 = v15;
  *((void *)&v118 + 1) = v7;
  uint64_t v87 = v7;
  uint64_t v78 = v19;
  *(void *)&long long v119 = v19;
  *((void *)&v119 + 1) = v20;
  uint64_t v76 = v20;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v27 = sub_100006480(&qword_100158090, &qword_100158080);
  v69[1] = OpaqueTypeConformance2;
  uint64_t v112 = OpaqueTypeConformance2;
  uint64_t v113 = v27;
  uint64_t v28 = swift_getWitnessTable();
  unint64_t v29 = sub_10003EF38();
  uint64_t v80 = v23;
  *(void *)&long long v118 = v23;
  *((void *)&v118 + 1) = v25;
  uint64_t v79 = v25;
  uint64_t v73 = v28;
  *(void *)&long long v119 = v28;
  *((void *)&v119 + 1) = v29;
  unint64_t v72 = v29;
  uint64_t v75 = swift_getOpaqueTypeMetadata2();
  uint64_t v74 = *(void *)(v75 - 8);
  uint64_t v30 = __chkstk_darwin(v75);
  uint64_t v70 = (char *)v69 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  uint64_t v71 = (char *)v69 - v32;
  unint64_t v33 = *v100;
  uint64_t v34 = v94;
  uint64_t v35 = v93;
  uint64_t v36 = v101;
  uint64_t v37 = v98;
  (*(void (**)(char *, uint64_t, uint64_t))(v94 + 16))(v93, v101, v98);
  unint64_t v38 = (*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
  unint64_t v39 = (v97 + v38 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v40 = swift_allocObject();
  uint64_t v41 = v103;
  *(void *)(v40 + 16) = v103;
  *(void *)(v40 + 24) = a4;
  (*(void (**)(unint64_t, char *, uint64_t))(v34 + 32))(v40 + v38, v35, v37);
  *(void *)(v40 + v39) = v33;
  uint64_t v104 = v41;
  uint64_t v105 = a4;
  uint64_t v106 = v33;
  uint64_t v107 = v36;
  id v42 = v33;
  uint64_t v43 = v89;
  id v44 = v42;
  uint64_t v45 = v92;
  Button.init(action:label:)();
  uint64_t v46 = v91;
  View.accessibilityIdentifier(_:)();
  (*(void (**)(char *, uint64_t))(v99 + 8))(v45, v46);
  uint64_t v47 = type metadata accessor for DynamicTypeSize();
  uint64_t v48 = (uint64_t)v102;
  (*(void (**)(void))(*(void *)(v47 - 8) + 104))();
  sub_100042360(&qword_100157258, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  uint64_t result = dispatch thunk of static Equatable.== infix(_:_:)();
  if (result)
  {
    uint64_t v50 = v77;
    uint64_t v51 = v85;
    View.dynamicTypeSize<A>(_:)();
    sub_1000063D0(v48, &qword_1001571C0);
    (*(void (**)(char *, uint64_t))(v86 + 8))(v43, v51);
    __asm { FMOV            V1.2D, #12.0 }
    long long v118 = _Q1;
    long long v119 = xmmword_100111870;
    char v120 = 0;
    uint64_t v57 = v81;
    uint64_t v58 = v83;
    View.listRowInsets(_:)();
    uint64_t v59 = (*(uint64_t (**)(char *, uint64_t))(v82 + 8))(v50, v58);
    __chkstk_darwin(v59);
    v69[-4] = v103;
    v69[-3] = a4;
    v69[-2] = v36;
    v69[-1] = v44;
    unint64_t v60 = v70;
    uint64_t v61 = v80;
    uint64_t v62 = v79;
    uint64_t v63 = v73;
    unint64_t v64 = v72;
    View.swipeActions<A>(edge:allowsFullSwipe:content:)();
    (*(void (**)(char *, uint64_t))(v84 + 8))(v57, v61);
    uint64_t v108 = v61;
    uint64_t v109 = v62;
    uint64_t v110 = v63;
    unint64_t v111 = v64;
    uint64_t v65 = swift_getOpaqueTypeConformance2();
    unint64_t v66 = v71;
    uint64_t v67 = v75;
    sub_1000BA728(v60, v75, v65);
    uint64_t v68 = *(void (**)(char *, uint64_t))(v74 + 8);
    v68(v60, v67);
    sub_1000BA728(v66, v67, v65);
    return ((uint64_t (*)(char *, uint64_t))v68)(v66, v67);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100038964(uint64_t a1, void *a2)
{
  type metadata accessor for LibraryListView();
  sub_100032BC0();
  sub_100023AA4(0xBu, 0);
  swift_release();
  sub_100032BC0();
  LOBYTE(a1) = *(unsigned char *)(a1 + 8);
  uint64_t v4 = swift_retain();
  uint64_t v5 = sub_1000081CC(v4, a1);
  swift_release();
  sub_10001FF80(a2, v5);
  swift_release();

  return swift_release();
}

uint64_t sub_100038A34@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v54 = a5;
  uint64_t v44 = a4;
  uint64_t v8 = type metadata accessor for LibraryListView();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v49 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v40 - v13;
  uint64_t v46 = *(void *)(a3 - 8);
  uint64_t v15 = v46;
  __chkstk_darwin(v12);
  uint64_t v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = v17;
  uint64_t v51 = type metadata accessor for LibraryItemContextMenu();
  uint64_t v18 = type metadata accessor for ModifiedContent();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v52 = v18;
  uint64_t v53 = v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v48 = (uint64_t)&v40 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v50 = (char *)&v40 - v22;
  id v57 = a1;
  id v47 = a1;
  uint64_t v42 = a2;
  uint64_t v23 = sub_100032BC0();
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v23 + *(void *)(*(void *)v23 + 184), a3);
  swift_release();
  uint64_t v41 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v41(v14, a2, v8);
  unint64_t v24 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v40 = v24 + v10;
  uint64_t v25 = swift_allocObject();
  uint64_t v43 = a3;
  uint64_t v26 = v44;
  *(void *)(v25 + 16) = a3;
  *(void *)(v25 + 24) = v26;
  uint64_t v27 = *(void (**)(unint64_t, char *, uint64_t))(v9 + 32);
  v27(v25 + v24, v14, v8);
  uint64_t v28 = v49;
  v41(v49, v42, v8);
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = a3;
  *(void *)(v29 + 24) = v26;
  v27(v29 + v24, v28, v8);
  unint64_t v30 = sub_10003EEE4();
  uint64_t v31 = v48;
  uint64_t v32 = (uint64_t)v45;
  uint64_t v33 = v43;
  sub_100030DC8(v47, (uint64_t)v45, (uint64_t)sub_100040E38, v25, (uint64_t)sub_100040ED8, v29, (uint64_t)&type metadata for LibraryItemView, v43, v48, v30);
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v32, v33);

  uint64_t WitnessTable = swift_getWitnessTable();
  unint64_t v55 = v30;
  uint64_t v56 = WitnessTable;
  uint64_t v35 = v52;
  uint64_t v36 = swift_getWitnessTable();
  uint64_t v37 = v50;
  sub_1000BA728(v31, v35, v36);
  unint64_t v38 = *(void (**)(uint64_t, uint64_t))(v53 + 8);
  v38(v31, v35);
  sub_1000BA728(v37, v35, v36);
  return ((uint64_t (*)(char *, uint64_t))v38)(v37, v35);
}

uint64_t sub_100038ED4@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v37 = a4;
  uint64_t v40 = a2;
  uint64_t v41 = a5;
  uint64_t v7 = type metadata accessor for LibraryListView();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v36 - v10;
  uint64_t v12 = sub_1000060EC(&qword_100158370);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1000060EC(&qword_1001580B8);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v38 = v15;
  uint64_t v39 = v16;
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1000060EC(&qword_1001580A8);
  __chkstk_darwin(v19 - 8);
  uint64_t v36 = (char *)&v36 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  static ButtonRole.destructive.getter();
  uint64_t v21 = type metadata accessor for ButtonRole();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v14, 0, 1, v21);
  uint64_t v22 = v7;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, a1, v7);
  unint64_t v23 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v24 = (v9 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v25 = swift_allocObject();
  uint64_t v26 = v37;
  *(void *)(v25 + 16) = a3;
  *(void *)(v25 + 24) = v26;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v25 + v23, v11, v22);
  uint64_t v27 = v40;
  *(void *)(v25 + v24) = v40;
  uint64_t v42 = a3;
  uint64_t v43 = v26;
  id v28 = v27;
  Button.init(role:action:label:)();
  sub_100006480(&qword_1001580B0, &qword_1001580B8);
  uint64_t v29 = (uint64_t)v36;
  uint64_t v30 = v38;
  View.accessibilityIdentifier(_:)();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v18, v30);
  uint64_t v31 = static Color.red.getter();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v33 = v41;
  sub_100009C94(v29, v41, &qword_1001580A8);
  uint64_t v34 = (uint64_t *)(v33 + *(int *)(sub_1000060EC(&qword_100158088) + 36));
  *uint64_t v34 = KeyPath;
  v34[1] = v31;
  return sub_1000063D0(v29, &qword_1001580A8);
}

uint64_t sub_1000392A0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v24 = a1;
  uint64_t v25 = a4;
  uint64_t v7 = type metadata accessor for LibraryListView();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v22 - v10;
  uint64_t v12 = sub_1000060EC(&qword_100157038);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, a1, v7);
  type metadata accessor for MainActor();
  id v23 = a2;
  uint64_t v16 = static MainActor.shared.getter();
  unint64_t v17 = (*(unsigned __int8 *)(v8 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v18 = (v9 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v19 = (char *)swift_allocObject();
  *((void *)v19 + 2) = v16;
  *((void *)v19 + 3) = &protocol witness table for MainActor;
  uint64_t v20 = v25;
  *((void *)v19 + 4) = a3;
  *((void *)v19 + 5) = v20;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v19[v17], v11, v7);
  *(void *)&v19[v18] = v23;
  sub_1000DC37C((uint64_t)v14, (uint64_t)&unk_100158380, (uint64_t)v19);
  swift_release();
  sub_100032BC0();
  sub_100023AA4(0x12u, 0);
  return swift_release();
}

uint64_t sub_1000394F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  long long v7[4] = a6;
  v7[5] = a7;
  v7[2] = a4;
  v7[3] = a5;
  void v7[6] = *(void *)(a6 - 8);
  v7[7] = swift_task_alloc();
  type metadata accessor for MainActor();
  v7[8] = static MainActor.shared.getter();
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
  v7[9] = v9;
  v7[10] = v8;
  return _swift_task_switch(sub_1000395E0, v9, v8);
}

uint64_t sub_1000395E0()
{
  uint64_t v2 = v0[6];
  uint64_t v1 = v0[7];
  uint64_t v3 = v0[4];
  uint64_t v11 = v0[5];
  type metadata accessor for LibraryListView();
  uint64_t v4 = sub_100032BC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4 + *(void *)(*(void *)v4 + 184), v3);
  swift_release();
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 + 40) + **(int **)(v11 + 40));
  uint64_t v5 = (void *)swift_task_alloc();
  v0[11] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_100039738;
  uint64_t v6 = v0[4];
  uint64_t v7 = v0[5];
  uint64_t v8 = v0[3];
  return v10(v8, v6, v7);
}

uint64_t sub_100039738()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 56);
  uint64_t v3 = *(void *)(*v0 + 48);
  uint64_t v4 = *(void *)(*v0 + 32);
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  uint64_t v5 = *(void *)(v1 + 80);
  uint64_t v6 = *(void *)(v1 + 72);
  return _swift_task_switch(sub_1000398BC, v6, v5);
}

uint64_t sub_1000398BC()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100039924@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v36 = a3;
  uint64_t v5 = type metadata accessor for AccessibilityTraits();
  uint64_t v33 = *(void *)(v5 - 8);
  uint64_t v34 = v5;
  __chkstk_darwin(v5);
  uint64_t v32 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_1000060EC(&qword_1001580D0);
  uint64_t v7 = __chkstk_darwin(v35);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v30 = (char *)&v29 - v11;
  __chkstk_darwin(v10);
  uint64_t v31 = (char *)&v29 - v12;
  uint64_t v37 = a1;
  uint64_t v38 = a2;
  sub_10000E0F0();
  swift_bridgeObjectRetain();
  uint64_t v13 = Text.init<A>(_:)();
  uint64_t v15 = v14;
  char v17 = v16 & 1;
  static Font.title3.getter();
  static Font.Weight.semibold.getter();
  Font.weight(_:)();
  swift_release();
  uint64_t v18 = Text.font(_:)();
  uint64_t v20 = v19;
  char v22 = v21;
  uint64_t v24 = v23;
  swift_release();
  sub_10000E904(v13, v15, v17);
  swift_bridgeObjectRelease();
  uint64_t v37 = v18;
  uint64_t v38 = v20;
  char v39 = v22 & 1;
  uint64_t v40 = v24;
  long long v41 = xmmword_100111880;
  long long v42 = xmmword_100111890;
  char v43 = 0;
  if (qword_100156380 != -1) {
    swift_once();
  }
  sub_1000060EC(&qword_1001580E8);
  sub_10003F154();
  View.accessibilityIdentifier(_:)();
  sub_10000E904(v18, v20, v22 & 1);
  swift_bridgeObjectRelease();
  uint64_t v25 = v32;
  static AccessibilityTraits.isHeader.getter();
  uint64_t v26 = (uint64_t)v30;
  ModifiedContent<>.accessibilityAddTraits(_:)();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v25, v34);
  sub_1000063D0((uint64_t)v9, &qword_1001580D0);
  uint64_t v27 = (uint64_t)v31;
  ModifiedContent<>.accessibilityHeading(_:)();
  sub_1000063D0(v26, &qword_1001580D0);
  sub_10003F0A8();
  View.accessibilityShowsLargeContentViewer()();
  return sub_1000063D0(v27, &qword_1001580D0);
}

uint64_t sub_100039C6C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4, unsigned __int8 a5)
{
  type metadata accessor for LibraryListView();
  sub_100032BC0();
  sub_100023AA4(a4, a5);

  return swift_release();
}

uint64_t sub_100039CE4@<X0>(BOOL *a1@<X8>)
{
  uint64_t result = ScrollGeometry.contentOffset.getter();
  *a1 = v3 <= 0.0;
  return result;
}

uint64_t sub_100039D18(uint64_t a1, char *a2)
{
  char v2 = *a2;
  type metadata accessor for LibraryListView();
  sub_100032BC0();
  sub_10001FEA0((v2 & 1) == 0);

  return swift_release();
}

uint64_t sub_100039D74@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for LibraryListView();
  sub_100032BC0();
  uint64_t v2 = sub_100021C38();
  swift_retain();
  swift_release();

  return sub_1000437E4(v2, 0, 0, a1);
}

uint64_t sub_100039DEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ToolbarItemPlacement();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_1000060EC(&qword_100158118);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = &v16[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  static ToolbarItemPlacement.topBarTrailing.getter();
  uint64_t v17 = a2;
  uint64_t v18 = a3;
  uint64_t v19 = a1;
  sub_1000060EC(&qword_100158168);
  uint64_t v11 = sub_100006224(&qword_100158170);
  uint64_t v12 = sub_100006224(&qword_100158178);
  unint64_t v13 = sub_10003FA2C();
  uint64_t v14 = sub_100006480(&qword_100158198, &qword_100158178);
  uint64_t v20 = v11;
  uint64_t v21 = v12;
  unint64_t v22 = v13;
  uint64_t v23 = v14;
  swift_getOpaqueTypeConformance2();
  ToolbarItem<>.init(placement:content:)();
  sub_100006480(&qword_100158120, &qword_100158118);
  static ToolbarContentBuilder.buildBlock<A>(_:)();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_10003A018@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v28 = a4;
  uint64_t v7 = type metadata accessor for LibraryListView();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v23 - v9;
  uint64_t v11 = sub_1000060EC(&qword_100158190);
  uint64_t v24 = *(void *)(v11 - 8);
  uint64_t v25 = v11;
  __chkstk_darwin(v11);
  unint64_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_1000060EC(&qword_100158170);
  __chkstk_darwin(v26);
  uint64_t v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  unint64_t v16 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a2;
  *(void *)(v17 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v17 + v16, v10, v7);
  uint64_t v31 = a2;
  uint64_t v32 = a3;
  uint64_t v27 = a1;
  uint64_t v33 = a1;
  uint64_t v29 = a2;
  uint64_t v30 = a3;
  sub_1000060EC(&qword_1001581A0);
  sub_1000060EC(&qword_1001581A8);
  unint64_t v21 = sub_10003FBA0();
  uint64_t v22 = sub_100006480(&qword_1001581F8, &qword_1001581A8);
  Menu.init(onPresentationChanged:content:label:)();
  if (qword_100156360 != -1) {
    swift_once();
  }
  sub_100006480(&qword_100158188, &qword_100158190);
  uint64_t v18 = v25;
  View.accessibilityIdentifier(_:)();
  uint64_t v19 = (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v13, v18);
  __chkstk_darwin(v19);
  *(&v23 - 4) = a2;
  *(&v23 - 3) = a3;
  sub_1000060EC(&qword_100158178);
  sub_10003FA2C();
  sub_100006480(&qword_100158198, &qword_100158178);
  View.accessibilityShowsLargeContentViewer<A>(_:)();
  return sub_1000063D0((uint64_t)v15, &qword_100158170);
}

uint64_t sub_10003A424(uint64_t result)
{
  if (result)
  {
    type metadata accessor for LibraryListView();
    sub_100032BC0();
    sub_100023AA4(0x11u, 0);
    return swift_release();
  }
  return result;
}

uint64_t sub_10003A49C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v41 = a2;
  uint64_t v42 = a3;
  id v47 = a4;
  uint64_t v5 = sub_1000060EC(&qword_100158208);
  uint64_t v45 = *(void *)(v5 - 8);
  uint64_t v46 = v5;
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v44 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v49 = (char *)&v38 - v8;
  uint64_t v43 = sub_1000060EC(&qword_100158210);
  uint64_t v40 = *(void *)(v43 - 8);
  uint64_t v9 = v40;
  uint64_t v10 = __chkstk_darwin(v43);
  uint64_t v48 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  unint64_t v13 = (char *)&v38 - v12;
  type metadata accessor for LibraryListView();
  uint64_t v14 = sub_100032D38();
  uint64_t v16 = v15;
  __int16 v18 = v17;
  swift_getKeyPath();
  uint64_t v53 = v14;
  uint64_t v54 = v16;
  __int16 v55 = v18 & 0x1FF;
  sub_1000060EC(&qword_100158218);
  Binding.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v53 = v56;
  uint64_t v54 = v57;
  LOBYTE(v55) = v58;
  swift_retain();
  swift_retain();
  sub_1000060EC(&qword_100158220);
  sub_10002425C();
  sub_100040468(&qword_100158228, &qword_100158220, (void (*)(void))sub_10003FE30);
  char v39 = v13;
  Picker.init(selection:label:content:)();
  swift_release();
  swift_release();
  uint64_t v19 = sub_100032D38();
  uint64_t v21 = v20;
  __int16 v23 = v22;
  swift_getKeyPath();
  uint64_t v53 = v19;
  uint64_t v54 = v21;
  __int16 v55 = v23 & 0x1FF;
  Binding.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v50 = v41;
  uint64_t v51 = v42;
  uint64_t v52 = a1;
  uint64_t v53 = v56;
  uint64_t v54 = v57;
  LOBYTE(v55) = v58;
  swift_retain();
  swift_retain();
  sub_1000060EC(&qword_100158240);
  sub_100006480(&qword_100158248, &qword_100158240);
  uint64_t v24 = v49;
  Picker.init(selection:label:content:)();
  swift_release();
  swift_release();
  uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  uint64_t v26 = v48;
  uint64_t v27 = v43;
  v25(v48, v13, v43);
  uint64_t v29 = v44;
  uint64_t v28 = v45;
  uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v45 + 16);
  uint64_t v31 = v24;
  uint64_t v32 = v46;
  v30(v44, v31, v46);
  uint64_t v33 = v47;
  v25(v47, v26, v27);
  uint64_t v34 = sub_1000060EC(&qword_100158250);
  v30(&v33[*(int *)(v34 + 48)], v29, v32);
  uint64_t v35 = *(void (**)(char *, uint64_t))(v28 + 8);
  v35(v49, v32);
  uint64_t v36 = *(void (**)(char *, uint64_t))(v40 + 8);
  v36(v39, v27);
  v35(v29, v32);
  return ((uint64_t (*)(char *, uint64_t))v36)(v48, v27);
}

uint64_t sub_10003A9B0()
{
  return ForEach<>.init(_:content:)();
}

uint64_t sub_10003AA8C@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000060EC(&qword_100158238);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v7 = *a1;
  uint64_t v16 = sub_10001D594(v7);
  uint64_t v17 = v8;
  sub_10000E0F0();
  uint64_t v9 = Text.init<A>(_:)();
  uint64_t v11 = v10;
  uint64_t v16 = v9;
  uint64_t v17 = v10;
  char v13 = v12 & 1;
  char v18 = v12 & 1;
  uint64_t v19 = v14;
  if (v7)
  {
    if (v7 == 1)
    {
      if (qword_100156340 == -1) {
        goto LABEL_7;
      }
    }
    else if (qword_100156348 == -1)
    {
LABEL_7:
      swift_bridgeObjectRetain();
      goto LABEL_8;
    }
    swift_once();
    goto LABEL_7;
  }
LABEL_8:
  View.accessibilityIdentifier(_:)();
  swift_bridgeObjectRelease();
  sub_10000E904(v9, v11, v13);
  swift_bridgeObjectRelease();
  return sub_100009C30((uint64_t)v6, a2, &qword_100158238);
}

uint64_t sub_10003AC64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v33 = a2;
  uint64_t v3 = sub_1000060EC(&qword_100158258);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v34 = (uint64_t)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v32 = (uint64_t)&v30 - v7;
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v31 = (char *)&v30 - v9;
  __chkstk_darwin(v8);
  uint64_t v35 = (uint64_t)&v30 - v10;
  type metadata accessor for LibraryListView();
  uint64_t v30 = a1;
  sub_100032BC0();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_release();
  uint64_t v11 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v13 = v12;
  uint64_t v36 = v11;
  uint64_t v37 = v12;
  char v15 = v14 & 1;
  char v38 = v14 & 1;
  uint64_t v39 = v16;
  __int16 v40 = 257;
  if (qword_100156368 != -1) {
    swift_once();
  }
  sub_1000060EC(&qword_100158260);
  sub_10003FEE8();
  View.accessibilityIdentifier(_:)();
  sub_10000E904(v11, v13, v15);
  swift_bridgeObjectRelease();
  sub_100032BC0();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_release();
  uint64_t v17 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v19 = v18;
  uint64_t v36 = v17;
  uint64_t v37 = v18;
  char v21 = v20 & 1;
  char v38 = v20 & 1;
  uint64_t v39 = v22;
  __int16 v40 = 0;
  if (qword_100156370 != -1) {
    swift_once();
  }
  uint64_t v23 = (uint64_t)v31;
  View.accessibilityIdentifier(_:)();
  sub_10000E904(v17, v19, v21);
  swift_bridgeObjectRelease();
  uint64_t v24 = v35;
  uint64_t v25 = v32;
  sub_100009C94(v35, v32, &qword_100158258);
  uint64_t v26 = v34;
  sub_100009C94(v23, v34, &qword_100158258);
  uint64_t v27 = v33;
  sub_100009C94(v25, v33, &qword_100158258);
  uint64_t v28 = sub_1000060EC(&qword_1001582A0);
  sub_100009C94(v26, v27 + *(int *)(v28 + 48), &qword_100158258);
  sub_1000063D0(v23, &qword_100158258);
  sub_1000063D0(v24, &qword_100158258);
  sub_1000063D0(v26, &qword_100158258);
  return sub_1000063D0(v25, &qword_100158258);
}

uint64_t sub_10003B04C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v38 = a1;
  uint64_t v1 = sub_1000060EC(&qword_100158200);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for SymbolVariants();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v34 - v9;
  uint64_t v36 = sub_1000060EC(&qword_100156AD8);
  uint64_t v11 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  uint64_t v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000060EC(&qword_1001581D0);
  uint64_t v15 = v14 - 8;
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_1000060EC(&qword_1001581C0) - 8;
  __chkstk_darwin(v37);
  uint64_t v35 = (uint64_t)&v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = Image.init(systemName:)();
  static SymbolVariants.circle.getter();
  SymbolVariants.fill.getter();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v5 + 8);
  v19(v10, v4);
  View.symbolVariant(_:)();
  v19(v8, v4);
  swift_release();
  static SymbolRenderingMode.palette.getter();
  uint64_t v20 = type metadata accessor for SymbolRenderingMode();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v3, 0, 1, v20);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v22 = (uint64_t *)&v17[*(int *)(v15 + 44)];
  uint64_t v23 = sub_1000060EC(&qword_1001581E0);
  sub_100009C94((uint64_t)v3, (uint64_t)v22 + *(int *)(v23 + 28), &qword_100158200);
  *uint64_t v22 = KeyPath;
  uint64_t v24 = v36;
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v17, v13, v36);
  sub_1000063D0((uint64_t)v3, &qword_100158200);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v24);
  LODWORD(v24) = static HierarchicalShapeStyle.primary.getter();
  id v25 = [self tertiarySystemFillColor];
  uint64_t v26 = Color.init(uiColor:)();
  uint64_t v27 = v35;
  sub_100009C94((uint64_t)v17, v35, &qword_1001581D0);
  uint64_t v28 = v27 + *(int *)(v37 + 44);
  *(_DWORD *)uint64_t v28 = v24;
  *(void *)(v28 + 8) = v26;
  sub_1000063D0((uint64_t)v17, &qword_1001581D0);
  static Font.title2.getter();
  static Font.Weight.semibold.getter();
  uint64_t v29 = Font.weight(_:)();
  swift_release();
  uint64_t v30 = swift_getKeyPath();
  uint64_t v31 = v38;
  sub_100009C94(v27, v38, &qword_1001581C0);
  uint64_t v32 = (uint64_t *)(v31 + *(int *)(sub_1000060EC(&qword_1001581A0) + 36));
  *uint64_t v32 = v30;
  v32[1] = v29;
  return sub_1000063D0(v27, &qword_1001581C0);
}

uint64_t sub_10003B4C0()
{
  return Label.init(title:icon:)();
}

uint64_t sub_10003B588@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for LibraryListView();
  sub_100032BC0();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_release();
  uint64_t result = Text.init(_:tableName:bundle:comment:)();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_10003B648()
{
  uint64_t v0 = type metadata accessor for SymbolVariants();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  char v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)v9 - v5;
  v9[1] = Image.init(systemName:)();
  static SymbolVariants.circle.getter();
  SymbolVariants.fill.getter();
  uint64_t v7 = *(void (**)(char *, uint64_t))(v1 + 8);
  v7(v6, v0);
  View.symbolVariant(_:)();
  v7(v4, v0);
  return swift_release();
}

void sub_10003B79C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v26 = a2;
  uint64_t v27 = a3;
  uint64_t v32 = a4;
  uint64_t v5 = type metadata accessor for _TaskModifier();
  uint64_t v6 = v5 - 8;
  __chkstk_darwin(v5);
  uint64_t v8 = (uint64_t *)((char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = type metadata accessor for TaskPriority();
  uint64_t v30 = *(void *)(v9 - 8);
  uint64_t v31 = v9;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for LibraryListView();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v25 - v14;
  sub_100032BC0();
  id v28 = (id)sub_100021C4C();
  id v29 = v28;
  swift_release();
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a1, v12);
  unint64_t v16 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v17 = swift_allocObject();
  uint64_t v18 = v27;
  *(void *)(v17 + 16) = v26;
  *(void *)(v17 + 24) = v18;
  (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v17 + v16, v15, v12);
  static TaskPriority.userInitiated.getter();
  uint64_t v19 = (char *)v8 + *(int *)(v6 + 28);
  uint64_t v20 = v30;
  uint64_t v21 = v31;
  (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v19, v11, v31);
  *uint64_t v8 = &unk_100158160;
  v8[1] = v17;
  uint64_t v22 = sub_1000060EC(&qword_100158128);
  uint64_t v23 = v32;
  sub_10003F960((uint64_t)v8, (uint64_t)v32 + *(int *)(v22 + 36));
  *uint64_t v23 = v28;
  id v24 = v29;
  sub_10003F9C4((uint64_t)v8);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v11, v21);
}

uint64_t sub_10003BA60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  type metadata accessor for MainActor();
  v3[5] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10003BAFC, v5, v4);
}

uint64_t sub_10003BAFC()
{
  swift_release();
  type metadata accessor for LibraryListView();
  uint64_t v1 = sub_100032BC0();
  sub_10001F170(v1);
  swift_release();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

unsigned __int8 *sub_10003BB8C(unsigned __int8 *result, unsigned __int8 *a2)
{
  if (*result != *a2)
  {
    type metadata accessor for LibraryListView();
    swift_retain();
    sub_1000060EC(&qword_100158150);
    State.wrappedValue.getter();
    State.wrappedValue.setter();
    return (unsigned __int8 *)swift_release();
  }
  return result;
}

uint64_t sub_10003BC60()
{
  uint64_t v0 = type metadata accessor for ScenePhase();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for ScenePhase.background(_:), v0);
  char v4 = static ScenePhase.== infix(_:_:)();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  if (v4)
  {
    type metadata accessor for LibraryListView();
    sub_100032BC0();
    sub_10001FE2C();
    swift_release();
    return sub_100032CCC();
  }
  return result;
}

void sub_10003BDB4()
{
  qword_100157FA0 = 0x4D415A414853;
  *(void *)algn_100157FA8 = 0xE600000000000000;
}

void sub_10003BDD4()
{
  algn_100157FB8[7] = -18;
}

uint64_t sub_10003BE04@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  int v35 = a2;
  uint64_t v36 = a3;
  uint64_t v4 = type metadata accessor for Divider();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v34[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_1000060EC(&qword_100158390);
  uint64_t v9 = v8 - 8;
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = &v34[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  uint64_t v14 = &v34[-v13];
  uint64_t v15 = sub_1000060EC(&qword_100158398);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  uint64_t v18 = &v34[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v16);
  uint64_t v20 = &v34[-v19];
  *(void *)uint64_t v20 = static VerticalAlignment.lastTextBaseline.getter();
  *((void *)v20 + 1) = 0;
  unsigned char v20[16] = 1;
  uint64_t v21 = sub_1000060EC(&qword_1001583A0);
  sub_10003C0F8(a1, v35, &v20[*(int *)(v21 + 44)]);
  Divider.init()();
  LOBYTE(a1) = static Edge.Set.bottom.getter();
  EdgeInsets.init(_all:)();
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v5 + 16))(v12, v7, v4);
  uint64_t v30 = &v12[*(int *)(v9 + 44)];
  *uint64_t v30 = a1;
  *((void *)v30 + 1) = v23;
  *((void *)v30 + 2) = v25;
  *((void *)v30 + 3) = v27;
  *((void *)v30 + 4) = v29;
  v30[40] = 0;
  (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
  sub_100009C30((uint64_t)v12, (uint64_t)v14, &qword_100158390);
  sub_100009C94((uint64_t)v20, (uint64_t)v18, &qword_100158398);
  sub_100009C94((uint64_t)v14, (uint64_t)v12, &qword_100158390);
  uint64_t v31 = v36;
  sub_100009C94((uint64_t)v18, v36, &qword_100158398);
  uint64_t v32 = sub_1000060EC(&qword_1001583A8);
  sub_100009C94((uint64_t)v12, v31 + *(int *)(v32 + 48), &qword_100158390);
  sub_1000063D0((uint64_t)v14, &qword_100158390);
  sub_1000063D0((uint64_t)v20, &qword_100158398);
  sub_1000063D0((uint64_t)v12, &qword_100158390);
  return sub_1000063D0((uint64_t)v18, &qword_100158398);
}

uint64_t sub_10003C0F8@<X0>(uint64_t a1@<X0>, int a2@<W1>, char *a3@<X8>)
{
  int v69 = a2;
  uint64_t v70 = a1;
  unint64_t v72 = a3;
  uint64_t v3 = sub_1000060EC(&qword_1001583B0);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v73 = (uint64_t)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v71 = (uint64_t *)((char *)&v64 - v6);
  uint64_t v68 = sub_1000060EC(&qword_1001571C0);
  __chkstk_darwin(v68);
  uint64_t v82 = (char *)&v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for AccessibilityTraits();
  uint64_t v80 = *(void *)(v8 - 8);
  uint64_t v81 = v8;
  __chkstk_darwin(v8);
  uint64_t v79 = (char *)&v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for AccessibilityChildBehavior();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v64 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000060EC(&qword_1001583B8);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v77 = v14;
  uint64_t v78 = v15;
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v64 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = sub_1000060EC(&qword_1001583C0);
  uint64_t v18 = __chkstk_darwin(v74);
  uint64_t v20 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v18);
  uint64_t v75 = (char *)&v64 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v76 = (char *)&v64 - v24;
  __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v64 - v25;
  uint64_t v67 = sub_1000060EC(&qword_1001583C8);
  uint64_t v66 = *(void *)(v67 - 8);
  uint64_t v27 = __chkstk_darwin(v67);
  uint64_t v65 = (char *)&v64 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  unint64_t v64 = (char *)&v64 - v29;
  uint64_t v30 = static HorizontalAlignment.leading.getter();
  sub_10003C984((uint64_t)&v83);
  char v31 = v84;
  uint64_t v32 = *(void *)v85;
  char v33 = v86;
  uint64_t v34 = v87;
  long long v35 = v83;
  long long v36 = *(_OWORD *)&v85[8];
  long long v83 = (unint64_t)v30;
  char v84 = 0;
  *(_OWORD *)uint64_t v85 = v35;
  v85[16] = v31;
  uint64_t v86 = v32;
  long long v87 = v36;
  char v88 = v33;
  uint64_t v89 = v34;
  static AccessibilityChildBehavior.combine.getter();
  uint64_t v37 = sub_1000060EC(&qword_1001583D0);
  uint64_t v38 = sub_100006480(&qword_1001583D8, &qword_1001583D0);
  View.accessibilityElement(children:)();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  long long v39 = v87;
  char v40 = v88;
  sub_10000E904(*(uint64_t *)v85, *(uint64_t *)&v85[8], v85[16]);
  swift_bridgeObjectRelease();
  uint64_t v41 = (uint64_t)v26;
  sub_10000E904(v39, *((uint64_t *)&v39 + 1), v40);
  swift_bridgeObjectRelease();
  *(void *)&long long v83 = v37;
  *((void *)&v83 + 1) = v38;
  swift_getOpaqueTypeConformance2();
  uint64_t v42 = v77;
  View.accessibilityIdentifier(_:)();
  (*(void (**)(char *, uint64_t))(v78 + 8))(v17, v42);
  sub_100041DC4();
  uint64_t v43 = v75;
  ModifiedContent<>.accessibilityLabel(_:)();
  swift_bridgeObjectRelease();
  sub_1000063D0((uint64_t)v20, &qword_1001583C0);
  uint64_t v44 = v79;
  static AccessibilityTraits.isHeader.getter();
  uint64_t v45 = (uint64_t)v76;
  ModifiedContent<>.accessibilityAddTraits(_:)();
  (*(void (**)(char *, uint64_t))(v80 + 8))(v44, v81);
  uint64_t v46 = (uint64_t)v43;
  uint64_t v47 = (uint64_t)v82;
  sub_1000063D0(v46, &qword_1001583C0);
  ModifiedContent<>.accessibilityHeading(_:)();
  sub_1000063D0(v45, &qword_1001583C0);
  uint64_t v48 = enum case for DynamicTypeSize.accessibility2(_:);
  uint64_t v49 = type metadata accessor for DynamicTypeSize();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 104))(v47, v48, v49);
  sub_100042360(&qword_100157258, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  uint64_t result = dispatch thunk of static Equatable.== infix(_:_:)();
  if (result)
  {
    sub_100041FC0();
    sub_100006480(&qword_100157260, &qword_1001571C0);
    uint64_t v51 = v65;
    View.dynamicTypeSize<A>(_:)();
    sub_1000063D0(v47, &qword_1001571C0);
    sub_1000063D0(v41, &qword_1001583C0);
    uint64_t v52 = v66;
    uint64_t v53 = v64;
    uint64_t v54 = v67;
    (*(void (**)(char *, char *, uint64_t))(v66 + 32))(v64, v51, v67);
    uint64_t v55 = static VerticalAlignment.lastTextBaseline.getter();
    uint64_t v56 = (uint64_t)v71;
    *uint64_t v71 = v55;
    *(void *)(v56 + 8) = 0x4020000000000000;
    *(unsigned char *)(v56 + 16) = 0;
    uint64_t v57 = sub_1000060EC(&qword_1001583E8);
    sub_10003CC90(v70, v69 & 1, v56 + *(int *)(v57 + 44));
    char v58 = *(void (**)(char *, char *, uint64_t))(v52 + 16);
    v58(v51, v53, v54);
    uint64_t v59 = v73;
    sub_100009C94(v56, v73, &qword_1001583B0);
    unint64_t v60 = v72;
    v58(v72, v51, v54);
    uint64_t v61 = sub_1000060EC(&qword_1001583F0);
    uint64_t v62 = &v60[*(int *)(v61 + 48)];
    *(void *)uint64_t v62 = 0;
    v62[8] = 1;
    sub_100009C94(v59, (uint64_t)&v60[*(int *)(v61 + 64)], &qword_1001583B0);
    sub_1000063D0(v56, &qword_1001583B0);
    uint64_t v63 = *(void (**)(char *, uint64_t))(v52 + 8);
    v63(v53, v54);
    sub_1000063D0(v59, &qword_1001583B0);
    return ((uint64_t (*)(char *, uint64_t))v63)(v51, v54);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10003C984@<X0>(uint64_t a1@<X8>)
{
  if (qword_1001560B0 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  LocalizedStringKey.init(_:)();
  uint64_t v1 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v3 = v2;
  char v5 = v4 & 1;
  static Font.largeTitle.getter();
  static Font.Weight.heavy.getter();
  Font.weight(_:)();
  swift_release();
  uint64_t v6 = Text.font(_:)();
  uint64_t v8 = v7;
  char v10 = v9;
  swift_release();
  sub_10000E904(v1, v3, v5);
  swift_bridgeObjectRelease();
  static Color.blue.getter();
  uint64_t v11 = Text.foregroundStyle<A>(_:)();
  uint64_t v29 = v12;
  uint64_t v30 = v11;
  char v14 = v13;
  uint64_t v31 = v15;
  sub_10000E904(v6, v8, v10 & 1);
  swift_release();
  swift_bridgeObjectRelease();
  if (qword_1001560B8 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  LocalizedStringKey.init(_:)();
  uint64_t v16 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v18 = v17;
  char v20 = v19 & 1;
  static Font.largeTitle.getter();
  static Font.Weight.heavy.getter();
  Font.weight(_:)();
  swift_release();
  uint64_t v21 = Text.font(_:)();
  uint64_t v23 = v22;
  char v25 = v24;
  uint64_t v27 = v26;
  swift_release();
  sub_10000E904(v16, v18, v20);
  swift_bridgeObjectRelease();
  *(void *)a1 = v30;
  *(void *)(a1 + 8) = v29;
  *(unsigned char *)(a1 + 16) = v14 & 1;
  *(void *)(a1 + 24) = v31;
  *(void *)(a1 + 32) = v21;
  *(void *)(a1 + 40) = v23;
  *(unsigned char *)(a1 + 48) = v25 & 1;
  *(void *)(a1 + 56) = v27;
  sub_10002FC24(v30, v29, v14 & 1);
  swift_bridgeObjectRetain();
  sub_10002FC24(v21, v23, v25 & 1);
  swift_bridgeObjectRetain();
  sub_10000E904(v21, v23, v25 & 1);
  swift_bridgeObjectRelease();
  sub_10000E904(v30, v29, v14 & 1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_10003CC90@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  LODWORD(v91) = a2;
  uint64_t v86 = a1;
  uint64_t v84 = a3;
  uint64_t v89 = sub_1000060EC(&qword_1001583F8);
  __chkstk_darwin(v89);
  long long v87 = (char *)&v72 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = sub_1000060EC(&qword_100158400);
  uint64_t v78 = *(void *)(v79 - 8);
  __chkstk_darwin(v79);
  uint64_t v90 = (char *)&v72 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000060EC(&qword_100158408);
  uint64_t v82 = *(void *)(v5 - 8);
  uint64_t v83 = v5;
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v81 = (char *)&v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v80 = (char *)&v72 - v8;
  uint64_t v93 = sub_1000060EC(&qword_1001571C0);
  __chkstk_darwin(v93);
  char v10 = (char *)&v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for CircularProgressViewStyle();
  uint64_t v76 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  char v13 = (char *)&v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000060EC(&qword_100158410);
  uint64_t v75 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v72 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = sub_1000060EC(&qword_100158418);
  uint64_t v17 = *(void *)(v74 - 8);
  __chkstk_darwin(v74);
  char v19 = (char *)&v72 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = sub_1000060EC(&qword_100158420);
  __chkstk_darwin(v85);
  uint64_t v21 = (char *)&v72 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1000060EC(&qword_100158428);
  uint64_t v23 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v73 = (char *)&v72 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_1000060EC(&qword_100158430);
  uint64_t v26 = __chkstk_darwin(v25 - 8);
  uint64_t v77 = (uint64_t)&v72 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  uint64_t v92 = (uint64_t)&v72 - v28;
  char v88 = v10;
  if (v91)
  {
    uint64_t v91 = v22;
    ProgressView<>.init<>()();
    CircularProgressViewStyle.init()();
    sub_100006480(&qword_100158490, &qword_100158410);
    sub_100042360(&qword_100158498, (void (*)(uint64_t))&type metadata accessor for CircularProgressViewStyle);
    View.progressViewStyle<A>(_:)();
    (*(void (**)(char *, uint64_t))(v76 + 8))(v13, v11);
    (*(void (**)(char *, uint64_t))(v75 + 8))(v16, v14);
    uint64_t v29 = v74;
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v21, v19, v74);
    *(void *)&v21[*(int *)(v85 + 36)] = 0x3FE0000000000000;
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v29);
    uint64_t v30 = enum case for DynamicTypeSize.xxxLarge(_:);
    uint64_t v31 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v31 - 8) + 104))(v10, v30, v31);
    sub_100042360(&qword_100157258, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
    uint64_t result = dispatch thunk of static Equatable.== infix(_:_:)();
    if ((result & 1) == 0) {
      goto LABEL_10;
    }
    sub_1000423A8();
    sub_100006480(&qword_100157260, &qword_1001571C0);
    char v33 = v73;
    View.dynamicTypeSize<A>(_:)();
    sub_1000063D0((uint64_t)v10, &qword_1001571C0);
    sub_1000063D0((uint64_t)v21, &qword_100158420);
    uint64_t v35 = v91;
    uint64_t v34 = v92;
    (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(v92, v33, v91);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v23 + 56))(v34, 0, 1, v35);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))((char *)&v72 - v28, 1, 1, v22);
  }
  id v36 = [self mainBundle];
  v37._uint64_t countAndFlagsBits = 0xD000000000000019;
  v103._object = (void *)0xE000000000000000;
  v37._object = (void *)0x8000000100118B80;
  v38._uint64_t countAndFlagsBits = 0;
  v38._object = (void *)0xE000000000000000;
  v103._uint64_t countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v37, (Swift::String_optional)0, (NSBundle)v36, v38, v103);

  sub_1000060EC(&qword_100158438);
  uint64_t v39 = swift_allocObject();
  *(_OWORD *)(v39 + 16) = xmmword_100110670;
  *(void *)(v39 + 56) = &type metadata for Int;
  *(void *)(v39 + 64) = &protocol witness table for Int;
  *(void *)(v39 + 32) = v86;
  uint64_t v40 = static String.localizedStringWithFormat(_:_:)();
  unint64_t v42 = v41;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v94 = v40;
  unint64_t v95 = v42;
  sub_10000E0F0();
  uint64_t v43 = Text.init<A>(_:)();
  uint64_t v45 = v44;
  char v47 = v46;
  uint64_t v49 = v48;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v51 = static Font.subheadline.getter();
  uint64_t v52 = swift_getKeyPath();
  uint64_t v53 = Color.init(_:bundle:)();
  uint64_t v85 = v43;
  uint64_t v86 = KeyPath;
  uint64_t v94 = v43;
  unint64_t v95 = v45;
  char v96 = v47 & 1;
  uint64_t v91 = v49;
  uint64_t v97 = v49;
  uint64_t v98 = KeyPath;
  char v99 = 2;
  uint64_t v100 = v52;
  uint64_t v101 = v51;
  uint64_t v102 = v53;
  if (qword_100156378 != -1) {
    swift_once();
  }
  sub_1000060EC(&qword_100158440);
  sub_1000420D4();
  uint64_t v54 = (uint64_t)v87;
  View.accessibilityIdentifier(_:)();
  sub_10000E904(v85, v45, v47 & 1);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  unint64_t v55 = sub_1000422B4();
  uint64_t v56 = v89;
  uint64_t v57 = v90;
  View.accessibilityShowsLargeContentViewer()();
  sub_1000063D0(v54, &qword_1001583F8);
  uint64_t v58 = enum case for DynamicTypeSize.accessibility1(_:);
  uint64_t v59 = type metadata accessor for DynamicTypeSize();
  uint64_t v60 = (uint64_t)v88;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v59 - 8) + 104))(v88, v58, v59);
  sub_100042360(&qword_100157258, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  uint64_t result = dispatch thunk of static Equatable.== infix(_:_:)();
  if (result)
  {
    uint64_t v94 = v56;
    unint64_t v95 = v55;
    swift_getOpaqueTypeConformance2();
    sub_100006480(&qword_100157260, &qword_1001571C0);
    uint64_t v61 = v81;
    uint64_t v62 = v79;
    View.dynamicTypeSize<A>(_:)();
    sub_1000063D0(v60, &qword_1001571C0);
    (*(void (**)(char *, uint64_t))(v78 + 8))(v57, v62);
    uint64_t v64 = v82;
    uint64_t v63 = v83;
    uint64_t v65 = v80;
    (*(void (**)(char *, char *, uint64_t))(v82 + 32))(v80, v61, v83);
    uint64_t v66 = v92;
    uint64_t v67 = v77;
    sub_100009C94(v92, v77, &qword_100158430);
    uint64_t v68 = *(void (**)(char *, char *, uint64_t))(v64 + 16);
    v68(v61, v65, v63);
    uint64_t v69 = v84;
    sub_100009C94(v67, v84, &qword_100158430);
    uint64_t v70 = sub_1000060EC(&qword_100158488);
    v68((char *)(v69 + *(int *)(v70 + 48)), v61, v63);
    uint64_t v71 = *(void (**)(char *, uint64_t))(v64 + 8);
    v71(v65, v63);
    sub_1000063D0(v66, &qword_100158430);
    v71(v61, v63);
    return sub_1000063D0(v67, &qword_100158430);
  }
  __break(1u);
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_10003D8AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)v1;
  int v4 = *(unsigned __int8 *)(v1 + 8);
  *(void *)a1 = static HorizontalAlignment.leading.getter();
  *(void *)(a1 + 8) = 0x4030000000000000;
  *(unsigned char *)(a1 + 16) = 0;
  uint64_t v5 = sub_1000060EC(&qword_100158388);
  return sub_10003BE04(v3, v4, a1 + *(int *)(v5 + 44));
}

uint64_t sub_10003D90C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v54 = a1;
  uint64_t v55 = a2;
  uint64_t v53 = a3;
  uint64_t v46 = sub_1000060EC(&qword_1001571C0);
  __chkstk_darwin(v46);
  uint64_t v56 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_1000060EC(&qword_1001584C0);
  __chkstk_darwin(v44);
  uint64_t v57 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = sub_1000060EC(&qword_1001584C8);
  uint64_t v48 = *(void *)(v51 - 8);
  __chkstk_darwin(v51);
  uint64_t v45 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_1000060EC(&qword_1001584D0);
  __chkstk_darwin(v43);
  uint64_t v50 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000060EC(&qword_1001584D8);
  __chkstk_darwin(v7 - 8);
  uint64_t v47 = (uint64_t)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_1000060EC(&qword_1001584E0);
  __chkstk_darwin(v52);
  uint64_t v49 = (uint64_t)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = static VerticalAlignment.center.getter();
  sub_10003DF08((uint64_t)&v58);
  uint64_t v11 = v58;
  uint64_t v12 = v59;
  uint64_t v14 = v60;
  uint64_t v13 = v61;
  uint64_t v15 = v62;
  uint64_t v16 = v63;
  char v17 = v64;
  uint64_t v18 = v65;
  uint64_t v58 = v10;
  uint64_t v59 = 0x4028000000000000;
  LOBYTE(v60) = 0;
  uint64_t v61 = v11;
  uint64_t v62 = v12;
  uint64_t v63 = v14;
  uint64_t v64 = v13;
  uint64_t v65 = v15;
  uint64_t v66 = v16;
  char v67 = v17;
  uint64_t v68 = v18;
  sub_1000060EC(&qword_1001584E8);
  sub_100006480(&qword_1001584F0, &qword_1001584E8);
  View.accessibilityIdentifier(_:)();
  swift_release();
  swift_release();
  uint64_t v19 = (uint64_t)v56;
  swift_release();
  swift_release();
  sub_10000E904(v15, v16, v17);
  swift_bridgeObjectRelease();
  uint64_t v20 = enum case for DynamicTypeSize.accessibility3(_:);
  uint64_t v21 = type metadata accessor for DynamicTypeSize();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104))(v19, v20, v21);
  sub_100042360(&qword_100157258, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  uint64_t result = dispatch thunk of static Equatable.== infix(_:_:)();
  if (result)
  {
    sub_1000424CC();
    sub_100006480(&qword_100157260, &qword_1001571C0);
    uint64_t v23 = v45;
    uint64_t v24 = (uint64_t)v57;
    View.dynamicTypeSize<A>(_:)();
    sub_1000063D0(v19, &qword_1001571C0);
    sub_1000063D0(v24, &qword_1001584C0);
    char v25 = static Edge.Set.vertical.getter();
    EdgeInsets.init(_all:)();
    uint64_t v27 = v26;
    uint64_t v29 = v28;
    uint64_t v31 = v30;
    uint64_t v33 = v32;
    uint64_t v34 = v48;
    uint64_t v35 = (uint64_t)v50;
    uint64_t v36 = v51;
    (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v50, v23, v51);
    uint64_t v37 = v35 + *(int *)(v43 + 36);
    *(unsigned char *)uint64_t v37 = v25;
    *(void *)(v37 + 8) = v27;
    *(void *)(v37 + 16) = v29;
    *(void *)(v37 + 24) = v31;
    *(void *)(v37 + 32) = v33;
    *(unsigned char *)(v37 + 40) = 0;
    (*(void (**)(char *, uint64_t))(v34 + 8))(v23, v36);
    uint64_t v38 = static Alignment.leading.getter();
    uint64_t v39 = v47;
    sub_100042B18(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v47, 0.0, 1, 0.0, 1, v38, v40);
    sub_1000063D0(v35, &qword_1001584D0);
    uint64_t v41 = v49;
    sub_100009C94(v39, v49, &qword_1001584D8);
    *(unsigned char *)(v41 + *(int *)(v52 + 36)) = 0;
    sub_1000063D0(v39, &qword_1001584D8);
    sub_10004259C();
    View.onTapGesture(count:perform:)();
    return sub_1000063D0(v41, &qword_1001584E0);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10003DF08@<X0>(uint64_t a1@<X8>)
{
  uint64_t v18 = Image.init(systemName:)();
  uint64_t v17 = Color.init(_:bundle:)();
  static Font.title2.getter();
  static Font.Weight.semibold.getter();
  uint64_t v16 = Font.weight(_:)();
  swift_release();
  uint64_t KeyPath = swift_getKeyPath();
  LocalizedStringKey.init(_:)();
  uint64_t v2 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v4 = v3;
  char v6 = v5 & 1;
  static Font.callout.getter();
  uint64_t v7 = Text.font(_:)();
  uint64_t v9 = v8;
  char v11 = v10;
  uint64_t v13 = v12;
  swift_release();
  sub_10000E904(v2, v4, v6);
  swift_bridgeObjectRelease();
  *(void *)a1 = v18;
  *(void *)(a1 + 8) = v17;
  *(void *)(a1 + 16) = KeyPath;
  *(void *)(a1 + 24) = v16;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v9;
  *(unsigned char *)(a1 + 48) = v11 & 1;
  *(void *)(a1 + 56) = v13;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_10002FC24(v7, v9, v11 & 1);
  swift_bridgeObjectRetain();
  sub_10000E904(v7, v9, v11 & 1);
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10003E0FC@<X0>(uint64_t a1@<X8>)
{
  return sub_10003D90C(*v1, v1[1], a1);
}

uint64_t sub_10003E10C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 40);
}

void sub_10003E114()
{
  sub_10003EE48();
  if (v0 <= 0x3F)
  {
    type metadata accessor for LibraryListViewModel();
    type metadata accessor for Bindable();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void *sub_10003E204(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    char v7 = *((unsigned char *)a2 + 8);
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = v7;
    uint64_t v8 = a3[9];
    uint64_t v9 = (void *)(a1 + v8);
    char v10 = (uint64_t *)((char *)a2 + v8);
    swift_retain();
    sub_1000060EC(&qword_100156920);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = type metadata accessor for ScenePhase();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    }
    else
    {
      *uint64_t v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v13 = a3[10];
    uint64_t v14 = (char *)v4 + v13;
    uint64_t v15 = (uint64_t)a2 + v13;
    type metadata accessor for LibraryListViewModel();
    uint64_t v16 = type metadata accessor for Bindable();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    uint64_t v17 = a3[11];
    uint64_t v18 = a3[12];
    uint64_t v19 = (char *)v4 + v17;
    uint64_t v20 = (uint64_t)a2 + v17;
    *(_WORD *)uint64_t v19 = *(_WORD *)v20;
    *((void *)v19 + 1) = *(void *)(v20 + 8);
    uint64_t v21 = (void *)((char *)v4 + v18);
    uint64_t v22 = (uint64_t *)((char *)a2 + v18);
    uint64_t v23 = *v22;
    swift_retain();
    if (v23)
    {
      uint64_t v24 = v22[1];
      *uint64_t v21 = v23;
      v21[1] = v24;
      swift_retain();
    }
    else
    {
      *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
    }
  }
  return v4;
}

uint64_t sub_10003E3D4(uint64_t a1, int *a2)
{
  swift_release();
  uint64_t v4 = a1 + a2[9];
  sub_1000060EC(&qword_100156920);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for ScenePhase();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = a1 + a2[10];
  type metadata accessor for LibraryListViewModel();
  uint64_t v7 = type metadata accessor for Bindable();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t result = swift_release();
  if (*(void *)(a1 + a2[12]))
  {
    return swift_release();
  }
  return result;
}

uint64_t sub_10003E508(uint64_t a1, uint64_t a2, int *a3)
{
  char v6 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v6;
  uint64_t v7 = a3[9];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  swift_retain();
  sub_1000060EC(&qword_100156920);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for ScenePhase();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    *uint64_t v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = a3[10];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  type metadata accessor for LibraryListViewModel();
  uint64_t v14 = type metadata accessor for Bindable();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[11];
  uint64_t v16 = a3[12];
  uint64_t v17 = a1 + v15;
  uint64_t v18 = a2 + v15;
  *(_WORD *)uint64_t v17 = *(_WORD *)v18;
  *(void *)(v17 + 8) = *(void *)(v18 + 8);
  uint64_t v19 = (void *)(a1 + v16);
  uint64_t v20 = (uint64_t *)(a2 + v16);
  uint64_t v21 = *v20;
  swift_retain();
  if (v21)
  {
    uint64_t v22 = v20[1];
    void *v19 = v21;
    v19[1] = v22;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
  }
  return a1;
}

uint64_t sub_10003E688(uint64_t a1, uint64_t a2, int *a3)
{
  char v6 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v6;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v7 = a3[9];
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (void *)(a2 + v7);
    sub_1000063D0(a1 + v7, &qword_100156920);
    sub_1000060EC(&qword_100156920);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = type metadata accessor for ScenePhase();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      *uint64_t v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v11 = a3[10];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  type metadata accessor for LibraryListViewModel();
  uint64_t v14 = type metadata accessor for Bindable();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[11];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  *(unsigned char *)uint64_t v16 = *(unsigned char *)v17;
  *(unsigned char *)(v16 + 1) = *(unsigned char *)(v17 + 1);
  *(void *)(v16 + 8) = *(void *)(v17 + 8);
  swift_retain();
  swift_release();
  uint64_t v18 = a3[12];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (uint64_t *)(a2 + v18);
  uint64_t v21 = *(void *)(a1 + v18);
  uint64_t v22 = *v20;
  if (!v21)
  {
    if (v22)
    {
      uint64_t v24 = v20[1];
      void *v19 = v22;
      v19[1] = v24;
      swift_retain();
      return a1;
    }
LABEL_12:
    *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
    return a1;
  }
  if (!v22)
  {
    swift_release();
    goto LABEL_12;
  }
  uint64_t v23 = v20[1];
  void *v19 = v22;
  v19[1] = v23;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_10003E874(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = a3[9];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_1000060EC(&qword_100156920);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for ScenePhase();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  uint64_t v11 = a3[10];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  type metadata accessor for LibraryListViewModel();
  uint64_t v14 = type metadata accessor for Bindable();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[12];
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (uint64_t *)(a2 + v15);
  uint64_t v18 = *v17;
  if (*v17)
  {
    uint64_t v19 = v17[1];
    void *v16 = v18;
    v16[1] = v19;
  }
  else
  {
    *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  }
  return a1;
}

uint64_t sub_10003E9E8(uint64_t a1, uint64_t a2, int *a3)
{
  char v6 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v6;
  swift_release();
  if (a1 != a2)
  {
    uint64_t v7 = a3[9];
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (const void *)(a2 + v7);
    sub_1000063D0(a1 + v7, &qword_100156920);
    uint64_t v10 = sub_1000060EC(&qword_100156920);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = type metadata accessor for ScenePhase();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
    }
  }
  uint64_t v12 = a3[10];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  type metadata accessor for LibraryListViewModel();
  uint64_t v15 = type metadata accessor for Bindable();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  uint64_t v16 = a3[11];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  *(unsigned char *)uint64_t v17 = *(unsigned char *)v18;
  *(unsigned char *)(v17 + 1) = *(unsigned char *)(v18 + 1);
  *(void *)(v17 + 8) = *(void *)(v18 + 8);
  swift_release();
  uint64_t v19 = a3[12];
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (uint64_t *)(a2 + v19);
  uint64_t v22 = *(void *)(a1 + v19);
  uint64_t v23 = *v21;
  if (!v22)
  {
    if (v23)
    {
      uint64_t v25 = v21[1];
      *uint64_t v20 = v23;
      v20[1] = v25;
      return a1;
    }
LABEL_11:
    *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
    return a1;
  }
  if (!v23)
  {
    swift_release();
    goto LABEL_11;
  }
  uint64_t v24 = v21[1];
  *uint64_t v20 = v23;
  v20[1] = v24;
  swift_release();
  return a1;
}

uint64_t sub_10003EBC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10003EBDC);
}

uint64_t sub_10003EBDC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000060EC(qword_100157FC0);
  if (*(_DWORD *)(*(void *)(v6 - 8) + 84) == a2)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)(v6 - 8);
    uint64_t v9 = a3[9];
LABEL_5:
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    return v11(a1 + v9, a2, v7);
  }
  type metadata accessor for LibraryListViewModel();
  uint64_t v10 = type metadata accessor for Bindable();
  if (*(_DWORD *)(*(void *)(v10 - 8) + 84) == a2)
  {
    uint64_t v7 = v10;
    uint64_t v8 = *(void *)(v10 - 8);
    uint64_t v9 = a3[10];
    goto LABEL_5;
  }
  unint64_t v13 = *(void *)(a1 + a3[11] + 8);
  if (v13 >= 0xFFFFFFFF) {
    LODWORD(v13) = -1;
  }
  int v14 = v13 - 1;
  if (v14 < 0) {
    int v14 = -1;
  }
  return (v14 + 1);
}

uint64_t sub_10003ED10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10003ED24);
}

uint64_t sub_10003ED24(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_1000060EC(qword_100157FC0);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[9];
  }
  else
  {
    type metadata accessor for LibraryListViewModel();
    uint64_t result = type metadata accessor for Bindable();
    if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
    {
      *(void *)(a1 + a4[11] + 8) = a2;
      return result;
    }
    uint64_t v9 = result;
    uint64_t v10 = *(void *)(result - 8);
    uint64_t v11 = a4[10];
  }
  unint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);

  return v13(a1 + v11, a2, a2, v9);
}

void sub_10003EE48()
{
  if (!qword_100158048)
  {
    type metadata accessor for ScenePhase();
    unint64_t v0 = type metadata accessor for Environment.Content();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100158048);
    }
  }
}

uint64_t sub_10003EEA0()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_10003EEE4()
{
  unint64_t result = qword_100158078;
  if (!qword_100158078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100158078);
  }
  return result;
}

unint64_t sub_10003EF38()
{
  unint64_t result = qword_100158098;
  if (!qword_100158098)
  {
    sub_100006224(&qword_100158088);
    sub_10003EFD8();
    sub_100006480((unint64_t *)&qword_100157240, &qword_100157248);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100158098);
  }
  return result;
}

unint64_t sub_10003EFD8()
{
  unint64_t result = qword_1001580A0;
  if (!qword_1001580A0)
  {
    sub_100006224(&qword_1001580A8);
    sub_100006480(&qword_1001580B0, &qword_1001580B8);
    sub_100042360((unint64_t *)&qword_1001567D8, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001580A0);
  }
  return result;
}

unint64_t sub_10003F0A8()
{
  unint64_t result = qword_1001580D8;
  if (!qword_1001580D8)
  {
    sub_100006224(&qword_1001580D0);
    sub_10003F154();
    sub_100042360((unint64_t *)&qword_1001567D8, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001580D8);
  }
  return result;
}

unint64_t sub_10003F154()
{
  unint64_t result = qword_1001580E0;
  if (!qword_1001580E0)
  {
    sub_100006224(&qword_1001580E8);
    sub_100006480(&qword_100158090, &qword_100158080);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001580E0);
  }
  return result;
}

unint64_t sub_10003F1F4()
{
  unint64_t result = qword_100158130;
  if (!qword_100158130)
  {
    sub_100006224(&qword_100158128);
    sub_10003F2A0();
    sub_100042360(&qword_100156840, (void (*)(uint64_t))&type metadata accessor for _TaskModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100158130);
  }
  return result;
}

unint64_t sub_10003F2A0()
{
  unint64_t result = qword_100158138;
  if (!qword_100158138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100158138);
  }
  return result;
}

unint64_t sub_10003F2F4()
{
  unint64_t result = qword_100158140;
  if (!qword_100158140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100158140);
  }
  return result;
}

uint64_t sub_10003F348@<X0>(uint64_t a1@<X8>)
{
  return sub_10001DB84(a1);
}

uint64_t sub_10003F370()
{
  return 16;
}

__n128 sub_10003F37C(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_10003F388@<X0>(uint64_t a1@<X8>)
{
  return sub_1000344FC(v1[4], v1[2], v1[3], a1);
}

unsigned __int8 *sub_10003F398(unsigned __int8 *a1, unsigned __int8 *a2)
{
  type metadata accessor for LibraryListView();

  return sub_10003BB8C(a1, a2);
}

uint64_t sub_10003F438()
{
  type metadata accessor for LibraryListView();

  return sub_10003BC60();
}

uint64_t sub_10003F4D8()
{
  uint64_t v1 = type metadata accessor for LibraryListView();
  uint64_t v3 = *(void *)(v1 - 8);
  uint64_t result = v1 - 8;
  uint64_t v4 = (uint64_t (**)(void))(v0
                          + *(int *)(result + 56)
                          + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)));
  if (*v4) {
    return (*v4)();
  }
  return result;
}

uint64_t sub_10003F550@<X0>(uint64_t a1@<X8>)
{
  return sub_100035C08(*(void *)(v1 + 32), *(void (**)(void, void))(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_10003F560()
{
  return sub_100040E44(6u, 0);
}

uint64_t sub_10003F56C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.tintColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10003F598()
{
  return EnvironmentValues.tintColor.setter();
}

uint64_t sub_10003F5C4()
{
  return EnvironmentValues.symbolRenderingMode.getter();
}

uint64_t sub_10003F5E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10003F608(a1, a2, a3, a4, &qword_100158200, (uint64_t (*)(char *))&EnvironmentValues.symbolRenderingMode.setter);
}

uint64_t sub_10003F608(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(char *))
{
  uint64_t v9 = sub_1000060EC(a5);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100009C94(a1, (uint64_t)v11, a5);
  return a6(v11);
}

uint64_t sub_10003F6B0(uint64_t a1, char *a2)
{
  type metadata accessor for LibraryListView();

  return sub_100039D18(a1, a2);
}

uint64_t sub_10003F750(uint64_t a1)
{
  return sub_1000406F8(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_100039D74);
}

uint64_t sub_10003F768()
{
  return sub_100039DEC(v0[4], v0[2], v0[3]);
}

uint64_t sub_10003F774@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_10001DA5C();
  *a1 = result & 1;
  return result;
}

uint64_t sub_10003F7A4()
{
  return sub_10001DAD8();
}

uint64_t sub_10003F7CC()
{
  return 16;
}

__n128 sub_10003F7D8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

void sub_10003F7E8(void *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v5 = *(void *)(type metadata accessor for LibraryListView() - 8);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  sub_10003B79C(v6, v3, v4, a1);
}

uint64_t sub_10003F878()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = *(void *)(type metadata accessor for LibraryListView() - 8);
  uint64_t v5 = v0 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *uint64_t v6 = v1;
  v6[1] = sub_100015B24;
  return sub_10003BA60(v5, v2, v3);
}

uint64_t sub_10003F960(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for _TaskModifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10003F9C4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for _TaskModifier();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10003FA20@<X0>(uint64_t a1@<X8>)
{
  return sub_10003A018(v1[4], v1[2], v1[3], a1);
}

unint64_t sub_10003FA2C()
{
  unint64_t result = qword_100158180;
  if (!qword_100158180)
  {
    sub_100006224(&qword_100158170);
    sub_100006480(&qword_100158188, &qword_100158190);
    sub_100042360((unint64_t *)&qword_1001567D8, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100158180);
  }
  return result;
}

uint64_t sub_10003FB00(uint64_t a1)
{
  type metadata accessor for LibraryListView();

  return sub_10003A424(a1);
}

uint64_t sub_10003FB8C@<X0>(char *a1@<X8>)
{
  return sub_10003A49C(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_10003FB98@<X0>(uint64_t a1@<X8>)
{
  return sub_10003B04C(a1);
}

unint64_t sub_10003FBA0()
{
  unint64_t result = qword_1001581B0;
  if (!qword_1001581B0)
  {
    sub_100006224(&qword_1001581A0);
    sub_10003FC40();
    sub_100006480(&qword_100156788, &qword_100156790);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001581B0);
  }
  return result;
}

unint64_t sub_10003FC40()
{
  unint64_t result = qword_1001581B8;
  if (!qword_1001581B8)
  {
    sub_100006224(&qword_1001581C0);
    sub_10003FCE0();
    sub_100006480(&qword_1001581E8, &qword_1001581F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001581B8);
  }
  return result;
}

unint64_t sub_10003FCE0()
{
  unint64_t result = qword_1001581C8;
  if (!qword_1001581C8)
  {
    sub_100006224(&qword_1001581D0);
    swift_getOpaqueTypeConformance2();
    sub_100006480(&qword_1001581D8, &qword_1001581E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001581C8);
  }
  return result;
}

uint64_t sub_10003FDB0()
{
  return sub_10003B4C0();
}

uint64_t sub_10003FDBC@<X0>(uint64_t a1@<X8>)
{
  return sub_10003B588(a1);
}

uint64_t sub_10003FDC8()
{
  return sub_10003B648();
}

uint64_t sub_10003FDD0()
{
  return EnvironmentValues.symbolRenderingMode.getter();
}

uint64_t sub_10003FDF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10003F608(a1, a2, a3, a4, &qword_100158200, (uint64_t (*)(char *))&EnvironmentValues.symbolRenderingMode.setter);
}

unint64_t sub_10003FE30()
{
  unint64_t result = qword_100158230;
  if (!qword_100158230)
  {
    sub_100006224(&qword_100158238);
    sub_100042360((unint64_t *)&qword_1001567D8, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100158230);
  }
  return result;
}

uint64_t sub_10003FEDC@<X0>(uint64_t a1@<X8>)
{
  return sub_10003AC64(*(void *)(v1 + 32), a1);
}

unint64_t sub_10003FEE8()
{
  unint64_t result = qword_100158268;
  if (!qword_100158268)
  {
    sub_100006224(&qword_100158260);
    sub_10003FF88();
    sub_100006480(&qword_100158290, &qword_100158298);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100158268);
  }
  return result;
}

unint64_t sub_10003FF88()
{
  unint64_t result = qword_100158270;
  if (!qword_100158270)
  {
    sub_100006224(&qword_100158278);
    sub_100006480(&qword_100158280, &qword_100158288);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100158270);
  }
  return result;
}

unint64_t sub_100040028()
{
  unint64_t result = qword_1001582B0;
  if (!qword_1001582B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001582B0);
  }
  return result;
}

double sub_10004007C@<D0>(uint64_t a1@<X8>)
{
  return sub_100036C30(a1);
}

unint64_t sub_100040088()
{
  unint64_t result = qword_1001582E0;
  if (!qword_1001582E0)
  {
    sub_100006224(&qword_1001582D8);
    sub_100040128();
    sub_100006480(&qword_100158090, &qword_100158080);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001582E0);
  }
  return result;
}

unint64_t sub_100040128()
{
  unint64_t result = qword_1001582E8;
  if (!qword_1001582E8)
  {
    sub_100006224(&qword_1001582F0);
    sub_1000401C8();
    sub_100006480(&qword_100158300, &qword_100158308);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001582E8);
  }
  return result;
}

unint64_t sub_1000401C8()
{
  unint64_t result = qword_1001582F8;
  if (!qword_1001582F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001582F8);
  }
  return result;
}

double sub_10004021C@<D0>(uint64_t a1@<X8>)
{
  return sub_100036CF4(v1[4], v1[2], v1[3], a1);
}

unint64_t sub_100040228()
{
  unint64_t result = qword_100158318;
  if (!qword_100158318)
  {
    sub_100006224(&qword_100158310);
    sub_1000402C8();
    sub_100006480(&qword_100158090, &qword_100158080);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100158318);
  }
  return result;
}

unint64_t sub_1000402C8()
{
  unint64_t result = qword_100158320;
  if (!qword_100158320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100158320);
  }
  return result;
}

uint64_t sub_10004031C()
{
  return EnvironmentValues.listSectionSpacing.getter();
}

uint64_t sub_100040340(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10003F608(a1, a2, a3, a4, &qword_1001582B8, (uint64_t (*)(char *))&EnvironmentValues.listSectionSpacing.setter);
}

uint64_t sub_100040378@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v7 = *(void *)(type metadata accessor for LibraryListView() - 8);
  uint64_t v8 = v2 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));

  return sub_100036E94(a1, v8, v5, v6, a2);
}

unint64_t sub_100040414()
{
  unint64_t result = qword_100158338;
  if (!qword_100158338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100158338);
  }
  return result;
}

uint64_t sub_100040468(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100006224(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000404D4()
{
  unint64_t result = qword_100158350;
  if (!qword_100158350)
  {
    sub_100006224(&qword_1001582D0);
    sub_100040574();
    sub_100006480(&qword_100158330, &qword_1001580F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100158350);
  }
  return result;
}

unint64_t sub_100040574()
{
  unint64_t result = qword_100158358;
  if (!qword_100158358)
  {
    sub_100006224(&qword_1001582C0);
    sub_100040638(&qword_100158360, &qword_1001582C8, (void (*)(void))sub_100040228);
    sub_100006480(&qword_100158328, &qword_1001580F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100158358);
  }
  return result;
}

uint64_t sub_100040638(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100006224(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000406BC@<X0>(uint64_t a1@<X8>)
{
  return sub_100037860(v1[6], v1[7], v1[2], v1[3], a1);
}

uint64_t sub_1000406CC@<X0>(uint64_t a1@<X8>)
{
  return sub_100039924(*(void *)(v1 + 32), *(void *)(v1 + 40), a1);
}

uint64_t sub_1000406E0(uint64_t a1)
{
  return sub_1000406F8(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_100037EC0);
}

uint64_t sub_1000406F8(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(v2 + 16);
  uint64_t v5 = *(void *)(v2 + 24);
  uint64_t v6 = *(void *)(type metadata accessor for LibraryListView() - 8);
  uint64_t v7 = v2 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));

  return a2(a1, v7, v4, v5);
}

uint64_t sub_1000407AC()
{
  return sub_1000409C8((uint64_t (*)(unint64_t, uint64_t, uint64_t, uint64_t))sub_100038964);
}

uint64_t sub_1000407C4@<X0>(uint64_t a1@<X8>)
{
  return sub_100038A34(*(void **)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_1000407D0@<X0>(uint64_t a1@<X8>)
{
  return sub_100038ED4(*(void *)(v1 + 32), *(void **)(v1 + 40), *(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_1000407E0()
{
  uint64_t v1 = (int *)type metadata accessor for LibraryListView();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v5 = v0 + v3;
  swift_release();
  uint64_t v6 = v0 + v3 + v1[9];
  sub_1000060EC(&qword_100156920);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for ScenePhase();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  uint64_t v8 = v5 + v1[10];
  type metadata accessor for LibraryListViewModel();
  uint64_t v9 = type metadata accessor for Bindable();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  swift_release();
  if (*(void *)(v5 + v1[12])) {
    swift_release();
  }
  unint64_t v10 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v11 = v10 + 8;

  return _swift_deallocObject(v0, v11, v2 | 7);
}

uint64_t sub_1000409B0()
{
  return sub_1000409C8((uint64_t (*)(unint64_t, uint64_t, uint64_t, uint64_t))sub_1000392A0);
}

uint64_t sub_1000409C8(uint64_t (*a1)(unint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v4 = *(void *)(type metadata accessor for LibraryListView() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));

  return a1(v1 + v5, v6, v2, v3);
}

uint64_t sub_100040A8C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = Image.init(systemName:)();
  *a1 = result;
  return result;
}

uint64_t sub_100040AC4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.tintColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100040AF0()
{
  return EnvironmentValues.tintColor.setter();
}

uint64_t sub_100040B1C()
{
  uint64_t v1 = (int *)type metadata accessor for LibraryListView();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 48) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  swift_unknownObjectRelease();
  uint64_t v5 = v0 + v3;
  swift_release();
  uint64_t v6 = v0 + v3 + v1[9];
  sub_1000060EC(&qword_100156920);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for ScenePhase();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  uint64_t v8 = v5 + v1[10];
  type metadata accessor for LibraryListViewModel();
  uint64_t v9 = type metadata accessor for Bindable();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  swift_release();
  if (*(void *)(v5 + v1[12])) {
    swift_release();
  }
  unint64_t v10 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v11 = v10 + 8;

  return _swift_deallocObject(v0, v11, v2 | 7);
}

uint64_t sub_100040CF4(uint64_t a1)
{
  uint64_t v4 = v1[4];
  uint64_t v5 = v1[5];
  uint64_t v6 = *(void *)(type metadata accessor for LibraryListView() - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = v1[2];
  uint64_t v9 = v1[3];
  uint64_t v10 = (uint64_t)v1 + v7;
  uint64_t v11 = *(void *)((char *)v1 + ((*(void *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v12;
  void *v12 = v2;
  v12[1] = sub_100014D10;
  return sub_1000394F4(a1, v8, v9, v10, v11, v4, v5);
}

uint64_t sub_100040E38()
{
  return sub_100040E44(3u, 0);
}

uint64_t sub_100040E44(unsigned __int8 a1, unsigned __int8 a2)
{
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v7 = *(void *)(type metadata accessor for LibraryListView() - 8);
  return sub_100039C6C(v2 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)), v5, v6, a1, a2);
}

uint64_t sub_100040ED8()
{
  return sub_100040E44(0xBu, 3u);
}

uint64_t sub_100040EE8()
{
  uint64_t v1 = (int *)type metadata accessor for LibraryListView();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v5 = v0 + v3;
  swift_release();
  uint64_t v6 = v0 + v3 + v1[9];
  sub_1000060EC(&qword_100156920);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for ScenePhase();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  uint64_t v8 = v5 + v1[10];
  type metadata accessor for LibraryListViewModel();
  uint64_t v9 = type metadata accessor for Bindable();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  swift_release();
  if (*(void *)(v5 + v1[12])) {
    swift_release();
  }

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_10004109C()
{
  type metadata accessor for LibraryListView();

  return sub_100036E48();
}

void *initializeBufferWithCopyOfBuffer for LibrarySyncErrorView(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

uint64_t destroy for LibrarySyncErrorView()
{
  return swift_release();
}

void *assignWithCopy for LibrarySyncErrorView(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for LibrarySyncErrorView(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for LibrarySyncErrorView()
{
  return &type metadata for LibrarySyncErrorView;
}

uint64_t initializeBufferWithCopyOfBuffer for LibraryHeader(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)uint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for LibraryHeader(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for LibraryHeader(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LibraryHeader()
{
  return &type metadata for LibraryHeader;
}

uint64_t sub_100041294()
{
  return swift_getWitnessTable();
}

uint64_t sub_100041D8C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100041DA8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100041DC4()
{
  sub_1000060EC(&qword_1001584A8);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1001118A0;
  if (qword_1001560B0 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_100157FA0;
  uint64_t v2 = *(void **)algn_100157FA8;
  unsigned int v3 = self;
  id v4 = [v3 mainBundle];
  v16._object = (void *)0xE000000000000000;
  v5._uint64_t countAndFlagsBits = v1;
  v5._object = v2;
  v6._uint64_t countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  v16._uint64_t countAndFlagsBits = 0;
  Swift::String v7 = NSLocalizedString(_:tableName:bundle:value:comment:)(v5, (Swift::String_optional)0, (NSBundle)v4, v6, v16);

  *(Swift::String *)(v0 + 32) = v7;
  if (qword_1001560B8 != -1) {
    swift_once();
  }
  uint64_t v8 = qword_100157FB0;
  uint64_t v9 = *(void **)algn_100157FB8;
  id v10 = [v3 mainBundle];
  v17._object = (void *)0xE000000000000000;
  v11._uint64_t countAndFlagsBits = v8;
  v11._object = v9;
  v12._uint64_t countAndFlagsBits = 0;
  v12._object = (void *)0xE000000000000000;
  v17._uint64_t countAndFlagsBits = 0;
  Swift::String v13 = NSLocalizedString(_:tableName:bundle:value:comment:)(v11, (Swift::String_optional)0, (NSBundle)v10, v12, v17);

  *(Swift::String *)(v0 + 48) = v13;
  sub_1000060EC(&qword_1001584B0);
  sub_100006480(&qword_1001584B8, &qword_1001584B0);
  uint64_t v14 = BidirectionalCollection<>.joined(separator:)();
  swift_bridgeObjectRelease();
  return v14;
}

unint64_t sub_100041FC0()
{
  unint64_t result = qword_1001583E0;
  if (!qword_1001583E0)
  {
    sub_100006224(&qword_1001583C0);
    sub_100006224(&qword_1001583D0);
    sub_100006480(&qword_1001583D8, &qword_1001583D0);
    swift_getOpaqueTypeConformance2();
    sub_100042360((unint64_t *)&qword_1001567D8, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001583E0);
  }
  return result;
}

unint64_t sub_1000420D4()
{
  unint64_t result = qword_100158448;
  if (!qword_100158448)
  {
    sub_100006224(&qword_100158440);
    sub_100042174();
    sub_100006480(&qword_1001572F8, (uint64_t *)&unk_100157300);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100158448);
  }
  return result;
}

unint64_t sub_100042174()
{
  unint64_t result = qword_100158450;
  if (!qword_100158450)
  {
    sub_100006224(&qword_100158458);
    sub_100042214();
    sub_100006480(&qword_100156788, &qword_100156790);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100158450);
  }
  return result;
}

unint64_t sub_100042214()
{
  unint64_t result = qword_100158460;
  if (!qword_100158460)
  {
    sub_100006224(&qword_100158468);
    sub_100006480(&qword_100158470, &qword_100158478);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100158460);
  }
  return result;
}

unint64_t sub_1000422B4()
{
  unint64_t result = qword_100158480;
  if (!qword_100158480)
  {
    sub_100006224(&qword_1001583F8);
    sub_1000420D4();
    sub_100042360((unint64_t *)&qword_1001567D8, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100158480);
  }
  return result;
}

uint64_t sub_100042360(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000423A8()
{
  unint64_t result = qword_1001584A0;
  if (!qword_1001584A0)
  {
    sub_100006224(&qword_100158420);
    sub_100006224(&qword_100158410);
    type metadata accessor for CircularProgressViewStyle();
    sub_100006480(&qword_100158490, &qword_100158410);
    sub_100042360(&qword_100158498, (void (*)(uint64_t))&type metadata accessor for CircularProgressViewStyle);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001584A0);
  }
  return result;
}

unint64_t sub_1000424CC()
{
  unint64_t result = qword_1001584F8;
  if (!qword_1001584F8)
  {
    sub_100006224(&qword_1001584C0);
    sub_100006480(&qword_1001584F0, &qword_1001584E8);
    sub_100042360((unint64_t *)&qword_1001567D8, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001584F8);
  }
  return result;
}

unint64_t sub_10004259C()
{
  unint64_t result = qword_100158500;
  if (!qword_100158500)
  {
    sub_100006224(&qword_1001584E0);
    sub_10004263C();
    sub_100006480(&qword_100158518, &qword_100158520);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100158500);
  }
  return result;
}

unint64_t sub_10004263C()
{
  unint64_t result = qword_100158508;
  if (!qword_100158508)
  {
    sub_100006224(&qword_1001584D8);
    sub_1000426B8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100158508);
  }
  return result;
}

unint64_t sub_1000426B8()
{
  unint64_t result = qword_100158510;
  if (!qword_100158510)
  {
    sub_100006224(&qword_1001584D0);
    sub_100006224(&qword_1001584C0);
    sub_100006224(&qword_1001571C0);
    sub_1000424CC();
    sub_100006480(&qword_100157260, &qword_1001571C0);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100158510);
  }
  return result;
}

uint64_t sub_1000427B8()
{
  return sub_100006480(&qword_100158528, &qword_100158530);
}

uint64_t sub_1000427F4()
{
  return swift_getOpaqueTypeConformance2();
}

double sub_100042854@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100042934(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&qword_100156758, (void (*)(uint64_t, uint64_t, uint64_t))sub_100009C94, &qword_100156760).n128_u64[0];
  return result;
}

double sub_1000428C4@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100042934(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_100157EB8, (void (*)(uint64_t, uint64_t, uint64_t))sub_100009C94, &qword_100157EC0).n128_u64[0];
  return result;
}

__n128 sub_100042934@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, void (*a17)(uint64_t, uint64_t, uint64_t), uint64_t *a18)
{
  uint64_t v20 = a17;
  uint64_t v21 = a18;
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  int v24 = a8 & 1;
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (v24) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    uint64_t v31 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();

    uint64_t v21 = a18;
    uint64_t v20 = a17;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  v20(v18, a9, a16);
  uint64_t v32 = (_OWORD *)(a9 + *(int *)(sub_1000060EC(v21) + 36));
  v32[4] = v38;
  void v32[5] = v39;
  v32[6] = v40;
  *uint64_t v32 = v34;
  v32[1] = v35;
  __n128 result = v37;
  v32[2] = v36;
  v32[3] = v37;
  return result;
}

double sub_100042B18@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100042934(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&qword_1001584D0, (void (*)(uint64_t, uint64_t, uint64_t))sub_100009C94, &qword_1001584D8).n128_u64[0];
  return result;
}

double sub_100042B88@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100042934(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_100158CA8, (void (*)(uint64_t, uint64_t, uint64_t))sub_100009C94, &qword_100158CB0).n128_u64[0];
  return result;
}

uint64_t sub_100042BF8@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, _OWORD *a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    uint64_t v23 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  long long v24 = v13[1];
  *a9 = *v13;
  a9[1] = v24;
  long long v25 = v13[3];
  a9[2] = v13[2];
  a9[3] = v25;
  a9[8] = v31;
  a9[9] = v32;
  a9[10] = v33;
  a9[4] = v27;
  a9[5] = v28;
  a9[6] = v29;
  a9[7] = v30;

  return sub_100017714((uint64_t)v13);
}

double sub_100042DB0@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100042934(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)_s17ArtistDetailsViewVMa, (void (*)(uint64_t, uint64_t, uint64_t))sub_100058C74, &qword_100158C80).n128_u64[0];
  return result;
}

id sub_100042E28@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, void *a16, char a17)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    uint64_t v26 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  *(void *)a9 = a16;
  *(unsigned char *)(a9 + 8) = a17 & 1;
  *(_OWORD *)(a9 + 80) = v32;
  *(_OWORD *)(a9 + 96) = v33;
  *(_OWORD *)(a9 + 112) = v34;
  *(_OWORD *)(a9 + 16) = v28;
  *(_OWORD *)(a9 + 32) = v29;
  *(_OWORD *)(a9 + 48) = v30;
  *(_OWORD *)(a9 + 64) = v31;

  return a16;
}

double sub_100042FF0@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100042934(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_100158CB8, (void (*)(uint64_t, uint64_t, uint64_t))sub_100009C94, &qword_100158CC0).n128_u64[0];
  return result;
}

uint64_t sub_100043060@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19)
{
  uint64_t v20 = a19;
  char v21 = a18;
  uint64_t v22 = a17;
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    long long v31 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();

    char v21 = a18;
    uint64_t v20 = a19;
    uint64_t v22 = a17;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  *(void *)a9 = a16;
  *(void *)(a9 + 8) = v22;
  *(unsigned char *)(a9 + 16) = v21 & 1;
  *(void *)(a9 + 24) = v20;
  *(_OWORD *)(a9 + 96) = v37;
  *(_OWORD *)(a9 + 112) = v38;
  *(_OWORD *)(a9 + 128) = v39;
  *(_OWORD *)(a9 + 32) = v33;
  *(_OWORD *)(a9 + 48) = v34;
  *(_OWORD *)(a9 + 64) = v35;
  *(_OWORD *)(a9 + 80) = v36;
  sub_10002FC24(a16, v22, v21 & 1);

  return swift_bridgeObjectRetain();
}

uint64_t sub_100043254@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19)
{
  uint64_t v20 = a16;
  uint64_t v21 = a17;
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    long long v30 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();

    uint64_t v20 = a16;
    uint64_t v21 = a17;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  *(void *)a9 = v20;
  *(void *)(a9 + 8) = v21;
  *(unsigned char *)(a9 + 16) = a18 & 1;
  *(void *)(a9 + 24) = a19;
  *(_OWORD *)(a9 + 96) = v36;
  *(_OWORD *)(a9 + 112) = v37;
  *(_OWORD *)(a9 + 128) = v38;
  *(_OWORD *)(a9 + 32) = v32;
  *(_OWORD *)(a9 + 48) = v33;
  *(_OWORD *)(a9 + 64) = v34;
  *(_OWORD *)(a9 + 80) = v35;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t sub_10004343C@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    uint64_t v23 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  long long v24 = v13[1];
  long long v37 = *v13;
  long long v38 = v24;
  sub_100058CDC((uint64_t)&v37, (uint64_t)v40);
  long long v26 = v13[1];
  long long v35 = v13[2];
  long long v25 = v35;
  *(_OWORD *)a9 = *v13;
  *(_OWORD *)(a9 + 16) = v26;
  *(_OWORD *)(a9 + 32) = v25;
  *(_OWORD *)(a9 + 152) = v34;
  *(_OWORD *)(a9 + 136) = v33;
  *(_OWORD *)(a9 + 120) = v32;
  *(_OWORD *)(a9 + 104) = v31;
  *(_OWORD *)(a9 + 56) = v28;
  uint64_t v39 = *((void *)&v38 + 1);
  char v36 = *((unsigned char *)v13 + 48);
  *(unsigned char *)(a9 + 48) = v36;
  *(_OWORD *)(a9 + 72) = v29;
  *(_OWORD *)(a9 + 88) = v30;
  sub_100058D38((uint64_t)v40);
  sub_100058D6C((uint64_t)&v39);
  return sub_100058D98((uint64_t)&v35);
}

double sub_100043624@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100042934(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_100158CC8, (void (*)(uint64_t, uint64_t, uint64_t))sub_100009C94, &qword_100158CD0).n128_u64[0];
  return result;
}

double sub_100043694@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100042934(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_100158C88, (void (*)(uint64_t, uint64_t, uint64_t))sub_100009C94, &qword_100158C90).n128_u64[0];
  return result;
}

double sub_100043704@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100042934(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_100158C98, (void (*)(uint64_t, uint64_t, uint64_t))sub_100009C94, &qword_100158CA0).n128_u64[0];
  return result;
}

double sub_100043774@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100042934(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_100158CD8, (void (*)(uint64_t, uint64_t, uint64_t))sub_100009C94, &qword_100158CE0).n128_u64[0];
  return result;
}

uint64_t sub_1000437E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  *(void *)a4 = swift_getKeyPath();
  *(unsigned char *)(a4 + 8) = 0;
  uint64_t v8 = (int *)type metadata accessor for TrackPageView();
  uint64_t v9 = (uint64_t *)(a4 + v8[5]);
  *uint64_t v9 = swift_getKeyPath();
  sub_1000060EC(&qword_100156928);
  swift_storeEnumTagMultiPayload();
  id v10 = (uint64_t *)(a4 + v8[6]);
  *id v10 = swift_getKeyPath();
  sub_1000060EC(&qword_100156938);
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = a4 + v8[7];
  *(void *)uint64_t v11 = swift_getKeyPath();
  *(unsigned char *)(v11 + 8) = 0;
  uint64_t v12 = a4 + v8[8];
  *(void *)uint64_t v12 = swift_getKeyPath();
  *(unsigned char *)(v12 + 8) = 0;
  Swift::String v13 = (uint64_t *)(a4 + v8[9]);
  *Swift::String v13 = swift_getKeyPath();
  sub_1000060EC(&qword_100156918);
  swift_storeEnumTagMultiPayload();
  uint64_t v14 = (uint64_t *)(a4 + v8[10]);
  uint64_t *v14 = swift_getKeyPath();
  sub_1000060EC(&qword_100156920);
  swift_storeEnumTagMultiPayload();
  uint64_t v15 = (void *)(a4 + v8[12]);
  *uint64_t v15 = [objc_allocWithZone((Class)CLLocationManager) init];
  type metadata accessor for LocationManager();
  Logger.init(subsystem:category:)();
  Swift::String v16 = (uint64_t *)(a4 + v8[13]);
  sub_1000060EC(&qword_1001585A0);
  *(unsigned char *)(swift_allocObject() + 16) = 0;
  sub_100006480(&qword_1001585A8, &qword_1001585A0);
  uint64_t result = ObservedObject.init(wrappedValue:)();
  uint64_t *v16 = result;
  v16[1] = v18;
  *(void *)(a4 + v8[11]) = a1;
  uint64_t v19 = (void *)(a4 + v8[14]);
  void *v19 = a2;
  v19[1] = a3;
  return result;
}

uint64_t type metadata accessor for TrackPageView()
{
  uint64_t result = qword_100158618;
  if (!qword_100158618) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100043A84(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
}

double sub_100043A94@<D0>(_OWORD *a1@<X8>)
{
  double result = 0.0;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

uint64_t sub_100043AA0(uint64_t a1)
{
  return sub_100043C08(a1, (SEL *)&selRef_secondarySystemFillColor, &qword_100158538);
}

uint64_t sub_100043AB4(uint64_t a1)
{
  return sub_100043C08(a1, (SEL *)&selRef_clearColor, &qword_100158540);
}

void sub_100043AC8()
{
  qword_100158548 = 0;
}

uint64_t sub_100043AD4(uint64_t a1)
{
  return sub_100043B20(a1, (void (*)(void))&static Color.black.getter, &qword_100158550);
}

uint64_t sub_100043AF8(uint64_t a1)
{
  return sub_100043B20(a1, (void (*)(void))&static Color.white.getter, &qword_100158558);
}

uint64_t sub_100043B20(uint64_t a1, void (*a2)(void), uint64_t *a3)
{
  a2();
  uint64_t v4 = Color.opacity(_:)();
  uint64_t result = swift_release();
  *a3 = v4;
  return result;
}

uint64_t sub_100043B78()
{
  static AnyTransition.opacity.getter();
  static Animation.easeIn(duration:)();
  uint64_t v0 = AnyTransition.animation(_:)();
  swift_release();
  uint64_t result = swift_release();
  qword_100158560 = v0;
  return result;
}

uint64_t sub_100043BD4()
{
  uint64_t result = static Font.body.getter();
  qword_100158568 = result;
  return result;
}

uint64_t sub_100043BF4(uint64_t a1)
{
  return sub_100043C08(a1, (SEL *)&selRef_systemBackgroundColor, &qword_100158570);
}

uint64_t sub_100043C08(uint64_t a1, SEL *a2, uint64_t *a3)
{
  id v4 = [self *a2];
  uint64_t result = Color.init(uiColor:)();
  *a3 = result;
  return result;
}

uint64_t sub_100043C50(uint64_t a1)
{
  return sub_100043C70(a1, &qword_100158578);
}

uint64_t sub_100043C60(uint64_t a1)
{
  return sub_100043C70(a1, &qword_100158580);
}

uint64_t sub_100043C70(uint64_t a1, uint64_t *a2)
{
  id v3 = [self systemBackgroundColor];
  Color.init(uiColor:)();
  uint64_t v4 = Color.opacity(_:)();
  uint64_t result = swift_release();
  *a2 = v4;
  return result;
}

uint64_t sub_100043CE4()
{
  uint64_t v0 = type metadata accessor for Material();
  sub_10000FC3C(v0, qword_100158588);
  sub_10000E808(v0, (uint64_t)qword_100158588);
  return static Material.thin.getter();
}

uint64_t sub_100043D30@<X0>(uint64_t a1@<X8>)
{
  uint64_t v33 = a1;
  uint64_t v2 = type metadata accessor for TrackPageView();
  uint64_t v28 = *(void *)(v2 - 8);
  uint64_t v3 = *(void *)(v28 + 64);
  __chkstk_darwin(v2);
  uint64_t v4 = type metadata accessor for ScenePhase();
  uint64_t v30 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  Swift::String v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000060EC(&qword_100158688);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000060EC(&qword_100158690);
  uint64_t v29 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000060EC(&qword_100158698);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v31 = v13;
  uint64_t v32 = v14;
  __chkstk_darwin(v13);
  long long v27 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004421C(v1, (uint64_t)v9);
  uint64_t v26 = v1;
  sub_100008708((uint64_t)v6);
  sub_100058C74(v1, (uint64_t)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for TrackPageView);
  unint64_t v16 = (*(unsigned __int8 *)(v28 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  uint64_t v17 = swift_allocObject();
  sub_1000583D4((uint64_t)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v17 + v16, (uint64_t (*)(void))type metadata accessor for TrackPageView);
  unint64_t v18 = sub_1000563F0();
  uint64_t v19 = sub_100057F30(&qword_100158148, (void (*)(uint64_t))&type metadata accessor for ScenePhase);
  View.onChange<A>(of:initial:_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v6, v4);
  sub_1000063D0((uint64_t)v9, &qword_100158688);
  uint64_t v35 = v7;
  unint64_t v36 = v4;
  unint64_t v37 = v18;
  uint64_t v38 = v19;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v21 = v27;
  View.navigationBarBackButtonHidden(_:)();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v12, v10);
  uint64_t v34 = v26;
  sub_1000060EC(&qword_1001587C0);
  uint64_t v35 = v10;
  unint64_t v36 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  uint64_t v22 = sub_100006224(&qword_1001587C8);
  unint64_t v23 = sub_100056B18();
  uint64_t v35 = v22;
  unint64_t v36 = v23;
  swift_getOpaqueTypeConformance2();
  uint64_t v24 = v31;
  View.toolbar<A>(content:)();
  return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v21, v24);
}

uint64_t sub_10004421C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v73 = a2;
  uint64_t v62 = sub_1000060EC(&qword_1001587B8);
  uint64_t v60 = *(void *)(v62 - 8);
  __chkstk_darwin(v62);
  uint64_t v59 = (char *)&v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = sub_1000060EC(&qword_1001587A8);
  uint64_t v4 = __chkstk_darwin(v72);
  uint64_t v58 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v61 = (uint64_t)&v52 - v6;
  uint64_t v7 = sub_1000060EC(&qword_1001586E0);
  __chkstk_darwin(v7 - 8);
  uint64_t v56 = (uint64_t)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_1000060EC(&qword_1001586D0);
  uint64_t v9 = __chkstk_darwin(v68);
  uint64_t v55 = (uint64_t)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v57 = (uint64_t)&v52 - v11;
  uint64_t v69 = sub_1000060EC(&qword_100158808);
  __chkstk_darwin(v69);
  uint64_t v71 = (uint64_t)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_1000060EC(&qword_100158810);
  __chkstk_darwin(v65);
  uint64_t v66 = (uint64_t)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = sub_1000060EC(&qword_1001586C0);
  __chkstk_darwin(v70);
  char v67 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = type metadata accessor for _TaskModifier();
  __chkstk_darwin(v52);
  unint64_t v16 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = type metadata accessor for TaskPriority();
  uint64_t v53 = *(void *)(v54 - 8);
  __chkstk_darwin(v54);
  unint64_t v18 = (char *)&v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for TrackPageView();
  uint64_t v20 = v19 - 8;
  uint64_t v63 = *(void *)(v19 - 8);
  uint64_t v21 = *(void *)(v63 + 64);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v52 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_1000060EC(&qword_100157CC8);
  uint64_t v23 = __chkstk_darwin(v64);
  long long v25 = (char *)&v52 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  long long v27 = (char *)&v52 - v26;
  uint64_t v28 = a1;
  uint64_t v29 = *(void *)(a1 + *(int *)(v20 + 52));
  swift_getKeyPath();
  *(void *)&long long v75 = v29;
  sub_100057F30(&qword_100158818, (void (*)(uint64_t))type metadata accessor for TrackPageViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  sub_100056D74(v29 + 32, (uint64_t)&v75);
  if (v76)
  {
    if (v76 == 1)
    {
      LocalizedStringKey.init(stringLiteral:)();
      LocalizedStringKey.init(stringLiteral:)();
      Text.init(_:tableName:bundle:comment:)();
      uint64_t v30 = v59;
      ContentUnavailableView<>.init(_:systemImage:description:)();
      sub_100006480(&qword_1001587B0, &qword_1001587B8);
      uint64_t v31 = v58;
      uint64_t v32 = v62;
      View.accessibilityIdentifier(_:)();
      (*(void (**)(char *, uint64_t))(v60 + 8))(v30, v32);
      uint64_t v33 = &qword_1001587A8;
      uint64_t v34 = (uint64_t)v31;
      uint64_t v35 = v61;
      sub_100009C30(v34, v61, &qword_1001587A8);
      sub_100009C94(v35, v71, &qword_1001587A8);
      swift_storeEnumTagMultiPayload();
      sub_10005649C();
      sub_100056A40();
      _ConditionalContent<>.init(storage:)();
      uint64_t v36 = v35;
    }
    else
    {
      uint64_t v62 = *(void *)(v29 + 528);
      uint64_t v45 = *(void *)(v29 + 536);
      LODWORD(v61) = *(unsigned __int8 *)(v29 + 544);
      uint64_t v46 = *(void *)(v29 + 552);
      sub_100058C74(v28, (uint64_t)&v52 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for TrackPageView);
      unint64_t v47 = (*(unsigned __int8 *)(v63 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80);
      uint64_t v48 = swift_allocObject();
      sub_1000583D4((uint64_t)v22, v48 + v47, (uint64_t (*)(void))type metadata accessor for TrackPageView);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      static TaskPriority.userInitiated.getter();
      uint64_t v49 = v53;
      uint64_t v50 = v54;
      (*(void (**)(char *, char *, uint64_t))(v53 + 16))(&v16[*(int *)(v52 + 20)], v18, v54);
      *(void *)unint64_t v16 = &unk_100158828;
      *((void *)v16 + 1) = v48;
      sub_100058C74((uint64_t)v16, (uint64_t)&v25[*(int *)(v64 + 36)], (uint64_t (*)(void))&type metadata accessor for _TaskModifier);
      *(void *)long long v25 = v62;
      *((void *)v25 + 1) = v45;
      v25[16] = v61;
      *((void *)v25 + 3) = v46;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1000581B4((uint64_t)v16, (uint64_t (*)(void))&type metadata accessor for _TaskModifier);
      (*(void (**)(char *, uint64_t))(v49 + 8))(v18, v50);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v33 = &qword_100157CC8;
      sub_100009C30((uint64_t)v25, (uint64_t)v27, &qword_100157CC8);
      sub_100009C94((uint64_t)v27, v66, &qword_100157CC8);
      swift_storeEnumTagMultiPayload();
      sub_10002F504();
      sub_100056560();
      uint64_t v51 = (uint64_t)v67;
      _ConditionalContent<>.init(storage:)();
      sub_100009C94(v51, v71, &qword_1001586C0);
      swift_storeEnumTagMultiPayload();
      sub_10005649C();
      sub_100056A40();
      _ConditionalContent<>.init(storage:)();
      sub_1000063D0(v51, &qword_1001586C0);
      uint64_t v36 = (uint64_t)v27;
    }
    return sub_1000063D0(v36, v33);
  }
  else
  {
    sub_100056DD0(&v75, (uint64_t)v74);
    uint64_t v37 = v56;
    sub_100045190(v74, v56);
    sub_100058C74(a1, (uint64_t)&v52 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for TrackPageView);
    unint64_t v38 = (*(unsigned __int8 *)(v63 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80);
    uint64_t v39 = swift_allocObject();
    sub_1000583D4((uint64_t)&v52 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0), v39 + v38, (uint64_t (*)(void))type metadata accessor for TrackPageView);
    uint64_t v40 = v55;
    sub_100009C94(v37, v55, &qword_1001586E0);
    uint64_t v41 = (id (**)())(v40 + *(int *)(v68 + 36));
    *uint64_t v41 = sub_100056E04;
    v41[1] = (id (*)())v39;
    v41[2] = 0;
    v41[3] = 0;
    sub_1000063D0(v37, &qword_1001586E0);
    uint64_t v42 = v57;
    sub_100009C30(v40, v57, &qword_1001586D0);
    sub_100009C94(v42, v66, &qword_1001586D0);
    swift_storeEnumTagMultiPayload();
    sub_10002F504();
    sub_100056560();
    uint64_t v43 = (uint64_t)v67;
    _ConditionalContent<>.init(storage:)();
    sub_100009C94(v43, v71, &qword_1001586C0);
    swift_storeEnumTagMultiPayload();
    sub_10005649C();
    sub_100056A40();
    _ConditionalContent<>.init(storage:)();
    sub_1000063D0(v43, &qword_1001586C0);
    sub_1000063D0(v42, &qword_1001586D0);
    return _s16MusicRecognition11AnyPlaylistVwxx_0((uint64_t)v74);
  }
}

uint64_t sub_100044E18(uint64_t a1)
{
  v1[2] = a1;
  type metadata accessor for MainActor();
  v1[3] = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[4] = v3;
  v1[5] = v2;
  return _swift_task_switch(sub_100044EB0, v3, v2);
}

uint64_t sub_100044EB0()
{
  id v1 = [self processInfo];
  id v2 = [v1 arguments];

  uint64_t v3 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)();
  LOBYTE(v2) = sub_100052F54(0xD000000000000036, 0x8000000100118CE0, v3);
  swift_bridgeObjectRelease();
  if (v2)
  {
    swift_release();
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
  else
  {
    type metadata accessor for TrackPageView();
    uint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v0 + 48) = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_100045010;
    return sub_1000AAAC8();
  }
}

uint64_t sub_100045010()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 40);
  uint64_t v3 = *(void *)(v1 + 32);
  return _swift_task_switch(sub_100045130, v3, v2);
}

uint64_t sub_100045130()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100045190@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v112 = a1;
  uint64_t v106 = a2;
  uint64_t v3 = type metadata accessor for CoordinateSpace();
  uint64_t v104 = *(void *)(v3 - 8);
  uint64_t v105 = v3;
  __chkstk_darwin(v3);
  Swift::String v103 = (char *)&v73 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ToolbarRole();
  uint64_t v101 = *(void *)(v5 - 8);
  uint64_t v102 = v5;
  __chkstk_darwin(v5);
  uint64_t v100 = (char *)&v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = type metadata accessor for NavigationBarItem.TitleDisplayMode();
  uint64_t v98 = *(void *)(v99 - 8);
  __chkstk_darwin(v99);
  uint64_t v97 = (char *)&v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for TrackPageView();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8 - 8);
  uint64_t v11 = (char *)&v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = sub_1000060EC(&qword_100158740);
  __chkstk_darwin(v111);
  uint64_t v13 = (char *)&v73 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = sub_1000060EC(&qword_100158830);
  uint64_t v81 = *(void *)(v83 - 8);
  __chkstk_darwin(v83);
  uint64_t v77 = (char *)&v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = sub_1000060EC(&qword_100158730);
  __chkstk_darwin(v80);
  uint64_t v78 = (char *)&v73 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = sub_1000060EC(&qword_100158728);
  uint64_t v88 = *(void *)(v86 - 8);
  __chkstk_darwin(v86);
  uint64_t v79 = (char *)&v73 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = sub_1000060EC(&qword_100158718);
  uint64_t v96 = *(void *)(v95 - 8);
  __chkstk_darwin(v95);
  uint64_t v82 = (char *)&v73 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = sub_1000060EC(&qword_100158838);
  uint64_t v90 = *(void *)(v92 - 8);
  __chkstk_darwin(v92);
  uint64_t v85 = (char *)&v73 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = sub_1000060EC(&qword_100158710) - 8;
  __chkstk_darwin(v87);
  uint64_t v84 = (char *)&v73 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = sub_1000060EC(&qword_100158700) - 8;
  __chkstk_darwin(v93);
  uint64_t v89 = (uint64_t)&v73 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = sub_1000060EC(&qword_1001586F0) - 8;
  __chkstk_darwin(v94);
  uint64_t v91 = (char *)&v73 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100058C74(v2, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for TrackPageView);
  uint64_t v22 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v23 = (v22 + 16) & ~v22;
  uint64_t v24 = v23 + v10;
  uint64_t v25 = v22 | 7;
  uint64_t v26 = swift_allocObject();
  sub_1000583D4((uint64_t)v11, v26 + v23, (uint64_t (*)(void))type metadata accessor for TrackPageView);
  char v27 = static Axis.Set.vertical.getter();
  uint64_t v74 = v13;
  *uint64_t v13 = v27;
  v13[1] = 0;
  *((void *)v13 + 1) = sub_100056F3C;
  *((void *)v13 + 2) = v26;
  uint64_t v28 = &v13[*(int *)(v111 + 44)];
  *(void *)uint64_t v28 = static HorizontalAlignment.center.getter();
  *((void *)v28 + 1) = 0;
  v28[16] = 0;
  uint64_t v29 = sub_1000060EC(&qword_100158840);
  uint64_t v30 = v2;
  sub_10004D858(v2, v112, (uint64_t)&v28[*(int *)(v29 + 44)]);
  uint64_t v107 = v2;
  uint64_t v73 = v11;
  uint64_t v109 = type metadata accessor for TrackPageView;
  sub_100058C74(v2, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for TrackPageView);
  uint64_t v76 = v24;
  uint64_t v108 = v25;
  uint64_t v31 = swift_allocObject();
  uint64_t v110 = v23;
  long long v75 = type metadata accessor for TrackPageView;
  sub_1000583D4((uint64_t)v11, v31 + v23, (uint64_t (*)(void))type metadata accessor for TrackPageView);
  sub_100006480(&qword_100158748, &qword_100158740);
  sub_1000569EC();
  uint64_t v32 = v77;
  uint64_t v33 = (uint64_t)v74;
  View.onScrollGeometryChange<A>(for:of:action:)();
  swift_release();
  sub_1000063D0(v33, &qword_100158740);
  uint64_t v34 = (uint64_t)v73;
  sub_100058C74(v30, (uint64_t)v73, (uint64_t (*)(void))type metadata accessor for TrackPageView);
  uint64_t v35 = swift_allocObject();
  uint64_t v36 = v34;
  sub_1000583D4(v34, v35 + v23, (uint64_t (*)(void))type metadata accessor for TrackPageView);
  uint64_t v37 = v81;
  uint64_t v38 = (uint64_t)v78;
  uint64_t v39 = v83;
  (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v78, v32, v83);
  uint64_t v40 = v80;
  uint64_t v41 = (uint64_t (**)())(v38 + *(int *)(v80 + 36));
  *uint64_t v41 = sub_100057034;
  v41[1] = (uint64_t (*)())v35;
  v41[2] = 0;
  v41[3] = 0;
  (*(void (**)(char *, uint64_t))(v37 + 8))(v32, v39);
  uint64_t v42 = v98;
  uint64_t v43 = v97;
  uint64_t v44 = v99;
  (*(void (**)(char *, void, uint64_t))(v98 + 104))(v97, enum case for NavigationBarItem.TitleDisplayMode.inline(_:), v99);
  unint64_t v45 = sub_1000568FC();
  uint64_t v46 = v79;
  View.navigationBarTitleDisplayMode(_:)();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v43, v44);
  sub_1000063D0(v38, &qword_100158730);
  unint64_t v47 = v100;
  static ToolbarRole.automatic.getter();
  uint64_t v115 = v40;
  unint64_t v116 = v45;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v49 = v82;
  uint64_t v50 = v86;
  View.toolbarRole(_:)();
  (*(void (**)(char *, uint64_t))(v101 + 8))(v47, v102);
  (*(void (**)(char *, uint64_t))(v88 + 8))(v46, v50);
  uint64_t v51 = v107;
  uint64_t v113 = v112;
  uint64_t v114 = v107;
  sub_1000060EC(&qword_100158720);
  uint64_t v115 = v50;
  unint64_t v116 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  sub_100006480(&qword_100158758, &qword_100158720);
  uint64_t v52 = v85;
  uint64_t v53 = v95;
  View.toolbar<A>(content:)();
  (*(void (**)(char *, uint64_t))(v96 + 8))(v49, v53);
  uint64_t v54 = v90;
  uint64_t v55 = (uint64_t)v84;
  uint64_t v56 = v92;
  (*(void (**)(char *, char *, uint64_t))(v90 + 16))(v84, v52, v92);
  uint64_t v57 = (void *)(v55 + *(int *)(v87 + 44));
  void *v57 = &type metadata for TrackPageViewSafeAreaPreferenceKey;
  v57[1] = sub_100052BD4;
  v57[2] = 0;
  (*(void (**)(char *, uint64_t))(v54 + 8))(v52, v56);
  sub_100058C74(v51, v36, (uint64_t (*)(void))v109);
  uint64_t v58 = swift_allocObject();
  uint64_t v59 = v75;
  sub_1000583D4(v36, v58 + v110, (uint64_t (*)(void))v75);
  uint64_t v60 = v89;
  sub_100009C94(v55, v89, &qword_100158710);
  uint64_t v61 = (uint64_t (**)())(v60 + *(int *)(v93 + 44));
  *uint64_t v61 = sub_100057058;
  v61[1] = (uint64_t (*)())v58;
  sub_1000063D0(v55, &qword_100158710);
  uint64_t v63 = v103;
  uint64_t v62 = v104;
  uint64_t v64 = v105;
  (*(void (**)(char *, void, uint64_t))(v104 + 104))(v103, enum case for CoordinateSpace.local(_:), v105);
  uint64_t v65 = (uint64_t)v91;
  uint64_t v66 = &v91[*(int *)(v94 + 44)];
  uint64_t v67 = sub_1000060EC(&qword_100158788);
  (*(void (**)(char *, char *, uint64_t))(v62 + 16))(&v66[*(int *)(v67 + 36)], v63, v64);
  *(void *)uint64_t v66 = &type metadata for ScreenWidthPreferenceKey;
  uint64_t v68 = (void (**)(double *@<X8>, double@<D2>, double@<D3>))&v66[*(int *)(v67 + 40)];
  char *v68 = sub_100058E3C;
  v68[1] = 0;
  sub_100009C94(v60, v65, &qword_100158700);
  (*(void (**)(char *, uint64_t))(v62 + 8))(v63, v64);
  sub_1000063D0(v60, &qword_100158700);
  sub_100058C74(v107, v36, (uint64_t (*)(void))v109);
  uint64_t v69 = swift_allocObject();
  sub_1000583D4(v36, v69 + v110, (uint64_t (*)(void))v59);
  uint64_t v70 = v106;
  sub_100009C94(v65, v106, &qword_1001586F0);
  uint64_t v71 = (uint64_t (**)(uint64_t))(v70 + *(int *)(sub_1000060EC(&qword_1001586E0) + 36));
  *uint64_t v71 = sub_1000570CC;
  v71[1] = (uint64_t (*)(uint64_t))v69;
  return sub_1000063D0(v65, &qword_1001586F0);
}

uint64_t sub_100045EDC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for ScenePhase();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a2, v3);
  if ((*(unsigned int (**)(char *, uint64_t))(v4 + 88))(v6, v3) != enum case for ScenePhase.background(_:)) {
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  type metadata accessor for TrackPageView();
  return sub_1000AD7C4();
}

uint64_t sub_10004600C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v23[1] = a2;
  uint64_t v3 = type metadata accessor for ToolbarItemPlacement();
  __chkstk_darwin(v3 - 8);
  uint64_t v4 = sub_1000060EC(&qword_1001587D8);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23[0] = sub_1000060EC(&qword_1001587C8);
  uint64_t v8 = __chkstk_darwin(v23[0]);
  uint64_t v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)v23 - v11;
  char v13 = *(unsigned char *)(a1 + 8);
  uint64_t v14 = swift_retain();
  uint64_t v15 = sub_1000081CC(v14, v13);
  swift_release();
  swift_getKeyPath();
  uint64_t v24 = v15;
  sub_100057F30((unint64_t *)&qword_100156898, (void (*)(uint64_t))type metadata accessor for ViewConfiguration);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  int v16 = *(unsigned __int8 *)(v15 + 16);
  swift_release();
  if (v16 == 1)
  {
    uint64_t v17 = static ToolbarItemPlacement.topBarLeading.getter();
    __chkstk_darwin(v17);
    v23[-2] = a1;
    sub_1000060EC(&qword_1001587F0);
    sub_100056BFC();
    ToolbarItem<>.init(placement:content:)();
    uint64_t v18 = sub_100006480(&qword_1001587E0, &qword_1001587D8);
    static ToolbarContentBuilder.buildBlock<A>(_:)();
    uint64_t v19 = sub_1000060EC(&qword_1001587E8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v10, 0, 1, v19);
    uint64_t v24 = v4;
    uint64_t v25 = v18;
    swift_getOpaqueTypeConformance2();
    static ToolbarContentBuilder.buildIf<A>(_:)();
    sub_1000063D0((uint64_t)v10, &qword_1001587C8);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  else
  {
    uint64_t v20 = sub_1000060EC(&qword_1001587E8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v10, 1, 1, v20);
    uint64_t v21 = sub_100006480(&qword_1001587E0, &qword_1001587D8);
    uint64_t v24 = v4;
    uint64_t v25 = v21;
    swift_getOpaqueTypeConformance2();
    static ToolbarContentBuilder.buildIf<A>(_:)();
    sub_1000063D0((uint64_t)v10, &qword_1001587C8);
  }
  sub_100056B18();
  static ToolbarContentBuilder.buildBlock<A>(_:)();
  return sub_1000063D0((uint64_t)v12, &qword_1001587C8);
}

uint64_t sub_100046468@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v26 = a1;
  uint64_t v29 = a2;
  uint64_t v2 = type metadata accessor for NavigationBarButtonStyle();
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)((char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v26 - v6;
  uint64_t v8 = type metadata accessor for TrackPageView();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8 - 8);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000060EC(&qword_1001580B8);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1000060EC(&qword_100158800);
  uint64_t v27 = *(void *)(v16 - 8);
  uint64_t v28 = v16;
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100058C74(v26, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for TrackPageView);
  unint64_t v19 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v20 = v2;
  uint64_t v21 = swift_allocObject();
  sub_1000583D4((uint64_t)v11, v21 + v19, (uint64_t (*)(void))type metadata accessor for TrackPageView);
  Button.init(action:label:)();
  *uint64_t v5 = swift_getKeyPath();
  sub_1000060EC(&qword_100156938);
  swift_storeEnumTagMultiPayload();
  sub_1000583D4((uint64_t)v5, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for NavigationBarButtonStyle);
  uint64_t v22 = sub_100006480(&qword_1001580B0, &qword_1001580B8);
  uint64_t v23 = sub_100057F30(&qword_100156B10, (void (*)(uint64_t))type metadata accessor for NavigationBarButtonStyle);
  View.buttonStyle<A>(_:)();
  sub_1000581B4((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for NavigationBarButtonStyle);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  if (qword_100156308 != -1) {
    swift_once();
  }
  uint64_t v30 = v12;
  uint64_t v31 = v20;
  uint64_t v32 = v22;
  uint64_t v33 = v23;
  swift_getOpaqueTypeConformance2();
  uint64_t v24 = v28;
  View.accessibilityIdentifier(_:)();
  return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v18, v24);
}

uint64_t sub_1000468D4()
{
  uint64_t v0 = type metadata accessor for DismissAction();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for TrackPageView();
  sub_100008740((uint64_t)v3);
  DismissAction.callAsFunction()();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_1000469B8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = Image.init(systemName:)();
  *a1 = result;
  return result;
}

uint64_t sub_1000469F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v66 = a2;
  uint64_t v3 = type metadata accessor for TrackPageView();
  uint64_t v4 = v3 - 8;
  uint64_t v65 = *(void *)(v3 - 8);
  uint64_t v64 = *(void *)(v65 + 64);
  __chkstk_darwin(v3);
  uint64_t v63 = (uint64_t)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for SongArtworkView();
  uint64_t v7 = (int *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (uint64_t *)((char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = sub_1000060EC(&qword_100158C38);
  uint64_t v11 = v10 - 8;
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_1000060EC(&qword_100158C40) - 8;
  __chkstk_darwin(v57);
  uint64_t v15 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = sub_1000060EC(&qword_100158C48) - 8;
  __chkstk_darwin(v58);
  uint64_t v55 = (uint64_t)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_1000060EC(&qword_100158C50) - 8;
  __chkstk_darwin(v60);
  uint64_t v59 = (uint64_t)&v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_1000060EC(&qword_100158C58) - 8;
  __chkstk_darwin(v62);
  uint64_t v61 = (uint64_t)&v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  *uint64_t v9 = swift_getKeyPath();
  sub_1000060EC(&qword_100156938);
  swift_storeEnumTagMultiPayload();
  unint64_t v19 = (uint64_t *)((char *)v9 + v7[7]);
  uint64_t v68 = 0;
  swift_retain();
  State.init(wrappedValue:)();
  uint64_t v20 = *((void *)&v69 + 1);
  void *v19 = v69;
  v19[1] = v20;
  uint64_t v21 = (uint64_t *)((char *)v9 + v7[8]);
  uint64_t v68 = 0x3FF0000000000000;
  State.init(wrappedValue:)();
  uint64_t v22 = *((void *)&v69 + 1);
  *uint64_t v21 = v69;
  v21[1] = v22;
  *(uint64_t *)((char *)v9 + v7[9]) = a1;
  *((unsigned char *)v9 + v7[10]) = 0;
  uint64_t v56 = *(int *)(v4 + 52);
  uint64_t v23 = *(void *)(v67 + v56);
  swift_getKeyPath();
  *(void *)&long long v69 = v23;
  sub_100057F30(&qword_100158818, (void (*)(uint64_t))type metadata accessor for TrackPageViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v24 = *(void *)(v23 + 16);
  *(void *)uint64_t v13 = swift_getKeyPath();
  v13[8] = 0;
  sub_1000583D4((uint64_t)v9, (uint64_t)&v13[*(int *)(v11 + 44)], (uint64_t (*)(void))type metadata accessor for SongArtworkView);
  *(void *)&v13[*(int *)(v11 + 48)] = v24;
  swift_getKeyPath();
  *(void *)&long long v69 = v23;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_getKeyPath();
  *(void *)&long long v69 = v23;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  sub_100009C94((uint64_t)v13, (uint64_t)v15, &qword_100158C38);
  uint64_t v25 = &v15[*(int *)(v57 + 44)];
  long long v26 = v70;
  *(_OWORD *)uint64_t v25 = v69;
  *((_OWORD *)v25 + 1) = v26;
  *((_OWORD *)v25 + 2) = v71;
  sub_1000063D0((uint64_t)v13, &qword_100158C38);
  LOBYTE(v4) = static Edge.Set.top.getter();
  EdgeInsets.init(_all:)();
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  uint64_t v35 = v55;
  sub_100009C94((uint64_t)v15, v55, &qword_100158C40);
  uint64_t v36 = v35 + *(int *)(v58 + 44);
  *(unsigned char *)uint64_t v36 = v4;
  *(void *)(v36 + 8) = v28;
  *(void *)(v36 + 16) = v30;
  *(void *)(v36 + 24) = v32;
  *(void *)(v36 + 32) = v34;
  *(unsigned char *)(v36 + 40) = 0;
  sub_1000063D0((uint64_t)v15, &qword_100158C40);
  swift_getKeyPath();
  uint64_t v68 = v23;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v37 = *(void *)(v23 + 144);
  static UnitPoint.center.getter();
  uint64_t v39 = v38;
  uint64_t v41 = v40;
  uint64_t v42 = v59;
  sub_100009C94(v35, v59, &qword_100158C48);
  uint64_t v43 = (void *)(v42 + *(int *)(v60 + 44));
  *uint64_t v43 = v37;
  v43[1] = v37;
  v43[2] = v39;
  v43[3] = v41;
  sub_1000063D0(v35, &qword_100158C48);
  uint64_t v44 = v67;
  uint64_t v45 = *(void *)(v67 + v56);
  swift_getKeyPath();
  uint64_t v68 = v45;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v46 = *(void *)(v45 + 152);
  uint64_t v47 = v61;
  sub_100009C94(v42, v61, &qword_100158C50);
  *(void *)(v47 + *(int *)(v62 + 44)) = v46;
  sub_1000063D0(v42, &qword_100158C50);
  uint64_t v48 = v63;
  sub_100058C74(v44, v63, (uint64_t (*)(void))type metadata accessor for TrackPageView);
  unint64_t v49 = (*(unsigned __int8 *)(v65 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80);
  uint64_t v50 = swift_allocObject();
  sub_1000583D4(v48, v50 + v49, (uint64_t (*)(void))type metadata accessor for TrackPageView);
  uint64_t v51 = v66;
  sub_100009C94(v47, v66, &qword_100158C58);
  uint64_t v52 = (uint64_t (**)())(v51 + *(int *)(sub_1000060EC(&qword_100158B38) + 36));
  char *v52 = sub_1000587C4;
  v52[1] = (uint64_t (*)())v50;
  v52[2] = 0;
  v52[3] = 0;
  return sub_1000063D0(v47, &qword_100158C58);
}

uint64_t sub_100047118@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v96 = a2;
  uint64_t v87 = type metadata accessor for ColorScheme();
  uint64_t v86 = *(void *)(v87 - 8);
  uint64_t v3 = __chkstk_darwin(v87);
  uint64_t v84 = (char *)&v78 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v83 = (uint64_t)&v78 - v5;
  uint64_t v6 = (int *)type metadata accessor for SongArtworkView();
  __chkstk_darwin(v6);
  uint64_t v8 = (uint64_t *)((char *)&v78 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v81 = sub_1000060EC(&qword_100158A40);
  __chkstk_darwin(v81);
  uint64_t v10 = (char *)&v78 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = sub_1000060EC(&qword_100158A48);
  __chkstk_darwin(v80);
  uint64_t v82 = (uint64_t)&v78 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = sub_1000060EC(&qword_100158A50);
  __chkstk_darwin(v85);
  uint64_t v91 = (char *)&v78 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = sub_1000060EC(&qword_100158A58);
  __chkstk_darwin(v88);
  uint64_t v90 = (char *)&v78 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = sub_1000060EC(&qword_100158A60);
  __chkstk_darwin(v89);
  *(void *)&long long v93 = (char *)&v78 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1000060EC(&qword_100158A68);
  uint64_t v94 = *(void *)(v15 - 8);
  uint64_t v95 = v15;
  __chkstk_darwin(v15);
  uint64_t v92 = (uint64_t)&v78 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1000060EC((uint64_t *)&unk_100158FC0);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  uint64_t v20 = (char *)&v78 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v18);
  uint64_t v23 = (char *)&v78 - v22;
  __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v78 - v24;
  uint64_t v26 = type metadata accessor for URL();
  __chkstk_darwin(v26);
  uint64_t v28 = (char *)&v78 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = a1;
  uint64_t v31 = v30;
  sub_100009C94(v29, (uint64_t)v25, (uint64_t *)&unk_100158FC0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v25, 1, v26) == 1)
  {
    sub_1000063D0((uint64_t)v25, (uint64_t *)&unk_100158FC0);
    uint64_t v32 = 1;
    uint64_t v34 = v95;
    uint64_t v33 = v96;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v28, v25, v26);
    uint64_t v35 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
    uint64_t v78 = v28;
    v35(v23, v28, v26);
    uint64_t v79 = v31;
    uint64_t v36 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v31 + 56);
    v36(v23, 0, 1, v26);
    v36(v20, 1, 1, v26);
    type metadata accessor for SongArtworkViewModel();
    uint64_t v37 = swift_allocObject();
    v36((char *)(v37 + OBJC_IVAR____TtC16MusicRecognition20SongArtworkViewModel__artworkURL), 1, 1, v26);
    v36((char *)(v37 + OBJC_IVAR____TtC16MusicRecognition20SongArtworkViewModel___animatedArtworkURL), 1, 1, v26);
    ObservationRegistrar.init()();
    sub_1000ECEA4((uint64_t)v23, (uint64_t)v20);
    sub_1000063D0((uint64_t)v20, (uint64_t *)&unk_100158FC0);
    sub_1000063D0((uint64_t)v23, (uint64_t *)&unk_100158FC0);
    *uint64_t v8 = swift_getKeyPath();
    sub_1000060EC(&qword_100156938);
    swift_storeEnumTagMultiPayload();
    uint64_t v38 = (uint64_t *)((char *)v8 + v6[5]);
    uint64_t v97 = 0;
    State.init(wrappedValue:)();
    uint64_t v39 = v99;
    *uint64_t v38 = v98;
    v38[1] = v39;
    uint64_t v40 = (uint64_t *)((char *)v8 + v6[6]);
    uint64_t v97 = 0x3FF0000000000000;
    State.init(wrappedValue:)();
    uint64_t v41 = v99;
    *uint64_t v40 = v98;
    v40[1] = v41;
    *(uint64_t *)((char *)v8 + v6[7]) = v37;
    *((unsigned char *)v8 + v6[8]) = 1;
    sub_100058C74((uint64_t)v8, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for SongArtworkView);
    *(void *)&v10[*(int *)(v81 + 36)] = 0x3FF8000000000000;
    sub_1000581B4((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for SongArtworkView);
    uint64_t v42 = v82;
    sub_100009C94((uint64_t)v10, v82, &qword_100158A40);
    *(void *)(v42 + *(int *)(v80 + 36)) = 0x3FF0000000000000;
    sub_1000063D0((uint64_t)v10, &qword_100158A40);
    uint64_t v43 = static Alignment.center.getter();
    uint64_t v45 = v44;
    type metadata accessor for TrackPageView();
    uint64_t v46 = v83;
    sub_100008414(v83);
    uint64_t v47 = v86;
    uint64_t v48 = v84;
    uint64_t v49 = v87;
    (*(void (**)(char *, void, uint64_t))(v86 + 104))(v84, enum case for ColorScheme.light(_:), v87);
    char v50 = static ColorScheme.== infix(_:_:)();
    uint64_t v51 = *(void (**)(char *, uint64_t))(v47 + 8);
    v51(v48, v49);
    v51((char *)v46, v49);
    if (v50)
    {
      uint64_t v52 = v93;
      uint64_t v53 = (uint64_t)v91;
      if (qword_1001560E0 != -1) {
        swift_once();
      }
      uint64_t v54 = &qword_100158558;
    }
    else
    {
      uint64_t v52 = v93;
      uint64_t v53 = (uint64_t)v91;
      if (qword_1001560D8 != -1) {
        swift_once();
      }
      uint64_t v54 = &qword_100158550;
    }
    uint64_t v55 = v78;
    uint64_t v56 = *v54;
    swift_retain();
    sub_100009C94(v42, v53, &qword_100158A48);
    uint64_t v57 = (uint64_t *)(v53 + *(int *)(v85 + 36));
    uint64_t *v57 = v56;
    v57[1] = v43;
    v57[2] = v45;
    sub_1000063D0(v42, &qword_100158A48);
    if (qword_100156110 != -1) {
      swift_once();
    }
    uint64_t v58 = type metadata accessor for Material();
    uint64_t v59 = sub_10000E808(v58, (uint64_t)qword_100158588);
    char v60 = static Edge.Set.all.getter();
    uint64_t v61 = (uint64_t)v90;
    uint64_t v62 = &v90[*(int *)(v88 + 36)];
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v58 - 8) + 16))(v62, v59, v58);
    v62[*(int *)(sub_1000060EC(&qword_100158A70) + 36)] = v60;
    sub_100009C30(v53, v61, &qword_100158A50);
    sub_100009C94(v61, v52, &qword_100158A58);
    uint64_t v63 = v52 + *(int *)(v89 + 36);
    *(void *)uint64_t v63 = 0x4049000000000000;
    *(unsigned char *)(v63 + 8) = 0;
    sub_1000063D0(v61, &qword_100158A58);
    uint64_t v64 = static Alignment.center.getter();
    uint64_t v66 = v65;
    sub_1000060EC(&qword_1001589E8);
    uint64_t v67 = swift_allocObject();
    *(_OWORD *)(v67 + 16) = xmmword_100110CD0;
    if (qword_1001560F8 != -1) {
      swift_once();
    }
    uint64_t v68 = qword_1001560D0;
    swift_retain();
    if (v68 != -1) {
      swift_once();
    }
    *(void *)(v67 + 32) = Gradient.Stop.init(color:location:)();
    *(void *)(v67 + 40) = v69;
    uint64_t v34 = v95;
    if (qword_100156100 != -1) {
      swift_once();
    }
    swift_retain();
    *(void *)(v67 + 48) = Gradient.Stop.init(color:location:)();
    *(void *)(v67 + 56) = v70;
    if (qword_100156108 != -1) {
      swift_once();
    }
    swift_retain();
    *(void *)(v67 + 64) = Gradient.Stop.init(color:location:)();
    *(void *)(v67 + 72) = v71;
    static UnitPoint.top.getter();
    static UnitPoint.bottom.getter();
    Gradient.init(stops:)();
    LinearGradient.init(gradient:startPoint:endPoint:)();
    uint64_t v72 = v98;
    long long v93 = v99;
    uint64_t v73 = v100;
    uint64_t v74 = v101;
    uint64_t v75 = v92;
    sub_100009C94(v52, v92, &qword_100158A60);
    uint64_t v76 = v75 + *(int *)(v34 + 36);
    *(void *)uint64_t v76 = v64;
    *(void *)(v76 + 8) = v66;
    *(void *)(v76 + 16) = v72;
    *(_OWORD *)(v76 + 24) = v93;
    *(void *)(v76 + 40) = v73;
    *(void *)(v76 + 48) = v74;
    sub_1000063D0(v52, &qword_100158A60);
    (*(void (**)(char *, uint64_t))(v79 + 8))(v55, v26);
    uint64_t v33 = v96;
    sub_100009C30(v75, v96, &qword_100158A68);
    uint64_t v32 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v94 + 56))(v33, v32, 1, v34);
}

uint64_t sub_100047D20@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  char v3 = result;
  if (result)
  {
    uint64_t v5 = *(void *)(v2 + *(int *)(type metadata accessor for TrackPageView() + 44));
    swift_getKeyPath();
    v29[0] = v5;
    sub_100057F30(&qword_100158818, (void (*)(uint64_t))type metadata accessor for TrackPageViewModel);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    swift_beginAccess();
    sub_100009C94(v5 + 320, (uint64_t)v29, &qword_100158B40);
    uint64_t v6 = v30;
    if (v30)
    {
      uint64_t v7 = sub_100010740(v29, v30);
      uint64_t v8 = *(void *)(v6 - 8);
      __chkstk_darwin(v7);
      uint64_t v10 = &v28[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
      (*(void (**)(unsigned char *))(v8 + 16))(v10);
      sub_1000063D0((uint64_t)v29, &qword_100158B40);
      id v11 = [*(id *)&v10[*(int *)(type metadata accessor for TrackPageMetadata() + 20)] shazamCount];
      (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v6);
    }
    else
    {
      sub_1000063D0((uint64_t)v29, &qword_100158B40);
      id v11 = 0;
    }
    unsigned __int8 v22 = static Edge.Set.top.getter();
    EdgeInsets.init(_all:)();
    uint64_t v14 = v23;
    uint64_t v15 = v24;
    uint64_t v16 = v25;
    uint64_t v17 = v26;
    unsigned __int8 v27 = static Edge.Set.bottom.getter();
    uint64_t result = EdgeInsets.init(_all:)();
    uint64_t v12 = v22;
    uint64_t v13 = v27;
  }
  else
  {
    id v11 = 0;
    uint64_t v12 = 0;
    uint64_t v13 = 0;
    uint64_t v14 = 0;
    uint64_t v15 = 0;
    uint64_t v16 = 0;
    uint64_t v17 = 0;
    uint64_t v18 = 0;
    uint64_t v19 = 0;
    uint64_t v20 = 0;
    uint64_t v21 = 0;
  }
  *(void *)a2 = v11;
  *(void *)(a2 + 8) = v12;
  *(void *)(a2 + 16) = v14;
  *(void *)(a2 + 24) = v15;
  *(void *)(a2 + 32) = v16;
  *(void *)(a2 + 40) = v17;
  *(void *)(a2 + 48) = 0;
  *(void *)(a2 + 56) = v13;
  *(void *)(a2 + 64) = v18;
  *(void *)(a2 + 72) = v19;
  *(void *)(a2 + 80) = v20;
  *(void *)(a2 + 88) = v21;
  *(unsigned char *)(a2 + 96) = 0;
  *(unsigned char *)(a2 + 97) = (v3 & 1) == 0;
  return result;
}

uint64_t sub_100047FBC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v45 = a2;
  uint64_t v4 = type metadata accessor for UserInterfaceSizeClass();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v40 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000060EC(&qword_1001589C8);
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000060EC(&qword_100156930);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v41 = (uint64_t)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v40 - v15;
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v40 - v17;
  uint64_t v19 = sub_1000060EC(&qword_100158B50);
  __chkstk_darwin(v19 - 8);
  uint64_t v21 = (char *)&v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_1000060EC(&qword_100158B30);
  __chkstk_darwin(v43);
  uint64_t v44 = (uint64_t)&v40 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v21 = static VerticalAlignment.top.getter();
  *((void *)v21 + 1) = 0;
  v21[16] = 1;
  uint64_t v23 = sub_1000060EC(&qword_100158B58);
  sub_100048524(a1, v2, (uint64_t)&v21[*(int *)(v23 + 44)]);
  int v42 = static Edge.Set.top.getter();
  type metadata accessor for TrackPageView();
  sub_100008780((uint64_t)v18);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v16, enum case for UserInterfaceSizeClass.compact(_:), v4);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v16, 0, 1, v4);
  uint64_t v24 = (uint64_t)&v10[*(int *)(v8 + 56)];
  sub_100009C94((uint64_t)v18, (uint64_t)v10, &qword_100156930);
  sub_100009C94((uint64_t)v16, v24, &qword_100156930);
  uint64_t v25 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v25((uint64_t)v10, 1, v4) != 1)
  {
    sub_100009C94((uint64_t)v10, v41, &qword_100156930);
    if (v25(v24, 1, v4) != 1)
    {
      uint64_t v26 = v40;
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v40, v24, v4);
      sub_100057F30(&qword_1001589D0, (void (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass);
      uint64_t v27 = v41;
      dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v28 = *(void (**)(char *, uint64_t))(v5 + 8);
      v28(v26, v4);
      sub_1000063D0((uint64_t)v16, &qword_100156930);
      sub_1000063D0((uint64_t)v18, &qword_100156930);
      v28((char *)v27, v4);
      sub_1000063D0((uint64_t)v10, &qword_100156930);
      goto LABEL_8;
    }
    sub_1000063D0((uint64_t)v16, &qword_100156930);
    sub_1000063D0((uint64_t)v18, &qword_100156930);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v41, v4);
    goto LABEL_6;
  }
  sub_1000063D0((uint64_t)v16, &qword_100156930);
  sub_1000063D0((uint64_t)v18, &qword_100156930);
  if (v25(v24, 1, v4) != 1)
  {
LABEL_6:
    sub_1000063D0((uint64_t)v10, &qword_1001589C8);
    goto LABEL_8;
  }
  sub_1000063D0((uint64_t)v10, &qword_100156930);
LABEL_8:
  EdgeInsets.init(_all:)();
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  uint64_t v37 = v44;
  sub_100009C94((uint64_t)v21, v44, &qword_100158B50);
  uint64_t v38 = v37 + *(int *)(v43 + 36);
  *(unsigned char *)uint64_t v38 = v42;
  *(void *)(v38 + 8) = v30;
  *(void *)(v38 + 16) = v32;
  *(void *)(v38 + 24) = v34;
  *(void *)(v38 + 32) = v36;
  *(unsigned char *)(v38 + 40) = 0;
  sub_1000063D0((uint64_t)v21, &qword_100158B50);
  return sub_100009C30(v37, v45, &qword_100158B30);
}

uint64_t sub_100048524@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v43 = a3;
  uint64_t v5 = sub_1000060EC(&qword_100158B60);
  __chkstk_darwin(v5 - 8);
  uint64_t v41 = (uint64_t)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000060EC(&qword_100158B68);
  uint64_t v8 = v7 - 8;
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v42 = (uint64_t)&v40 - v12;
  uint64_t v13 = sub_1000060EC(&qword_100158B70);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1000060EC(&qword_100158B78);
  uint64_t v17 = v16 - 8;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v40 - v21;
  sub_100048888(a1, a2, (uint64_t)v15);
  char v23 = static Edge.Set.trailing.getter();
  EdgeInsets.init(_all:)();
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  sub_100009C94((uint64_t)v15, (uint64_t)v20, &qword_100158B70);
  uint64_t v32 = &v20[*(int *)(v17 + 44)];
  *uint64_t v32 = v23;
  *((void *)v32 + 1) = v25;
  *((void *)v32 + 2) = v27;
  *((void *)v32 + 3) = v29;
  *((void *)v32 + 4) = v31;
  v32[40] = 0;
  sub_1000063D0((uint64_t)v15, &qword_100158B70);
  sub_100009C30((uint64_t)v20, (uint64_t)v22, &qword_100158B78);
  uint64_t v33 = v41;
  sub_100048E9C(a2, a1, v41);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  sub_100009C94(v33, (uint64_t)v11, &qword_100158B60);
  uint64_t v34 = &v11[*(int *)(v8 + 44)];
  long long v35 = v45;
  *(_OWORD *)uint64_t v34 = v44;
  *((_OWORD *)v34 + 1) = v35;
  *((_OWORD *)v34 + 2) = v46;
  sub_1000063D0(v33, &qword_100158B60);
  uint64_t v36 = v42;
  sub_100009C30((uint64_t)v11, v42, &qword_100158B68);
  sub_100009C94((uint64_t)v22, (uint64_t)v20, &qword_100158B78);
  sub_100009C94(v36, (uint64_t)v11, &qword_100158B68);
  uint64_t v37 = v43;
  sub_100009C94((uint64_t)v20, v43, &qword_100158B78);
  uint64_t v38 = sub_1000060EC(&qword_100158B80);
  sub_100009C94((uint64_t)v11, v37 + *(int *)(v38 + 48), &qword_100158B68);
  sub_1000063D0(v36, &qword_100158B68);
  sub_1000063D0((uint64_t)v22, &qword_100158B78);
  sub_1000063D0((uint64_t)v11, &qword_100158B68);
  return sub_1000063D0((uint64_t)v20, &qword_100158B78);
}

uint64_t sub_100048888@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v48 = a2;
  uint64_t v5 = sub_1000060EC(&qword_100158BF0);
  __chkstk_darwin(v5 - 8);
  uint64_t v47 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for RedactionReasons();
  uint64_t v43 = *(void *)(v7 - 8);
  uint64_t v44 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000060EC(&qword_100158BF8);
  uint64_t v45 = *(void *)(v10 - 8);
  uint64_t v46 = v10;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = sub_1000060EC(&qword_100158C00);
  uint64_t v13 = __chkstk_darwin(v50);
  uint64_t v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v42 - v16;
  uint64_t v49 = sub_1000060EC(&qword_100158C08);
  __chkstk_darwin(v49);
  uint64_t v19 = (char *)&v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100010740(a1, a1[3]);
  uint64_t v20 = sub_1000C348C();
  if (v21)
  {
    uint64_t v22 = v20;
    uint64_t v23 = v21;
    uint64_t v42 = a3;
    sub_100010740(a1, a1[3]);
    uint64_t v24 = sub_1000C6AC4();
    if (v25)
    {
      uint64_t v26 = v24;
      uint64_t v27 = v25;
      uint64_t v28 = sub_100010740(a1, a1[3]);
      unsigned __int8 v29 = [*(id *)((char *)v28 + *(int *)(type metadata accessor for TrackPageMetadata() + 20)) explicitContent];
      if (qword_1001560E8 != -1) {
        swift_once();
      }
      uint64_t v30 = qword_100158560;
      *(void *)uint64_t v19 = v26;
      *((void *)v19 + 1) = v27;
      *((void *)v19 + 2) = v22;
      *((void *)v19 + 3) = v23;
      v19[32] = v29;
      *((void *)v19 + 5) = v30;
      swift_storeEnumTagMultiPayload();
      swift_retain();
      sub_1000060EC(&qword_100158C20);
      sub_100058268();
      sub_100058308();
      uint64_t v31 = v42;
      _ConditionalContent<>.init(storage:)();
      uint64_t v32 = sub_1000060EC(&qword_100158C10);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v31, 0, 1, v32);
    }
    swift_bridgeObjectRelease();
    a3 = v42;
  }
  type metadata accessor for TrackPageView();
  if (sub_1000ADD00())
  {
    uint64_t v51 = 0x747369747241;
    unint64_t v52 = 0xE600000000000000;
    uint64_t v53 = 1735290707;
    unint64_t v54 = 0xE400000000000000;
    char v55 = 1;
    static RedactionReasons.placeholder.getter();
    sub_100058214();
    View.redacted(reason:)();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v9, v44);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_1001560E8 != -1) {
      swift_once();
    }
    uint64_t v34 = qword_100158560;
    uint64_t v36 = v45;
    uint64_t v35 = v46;
    (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v15, v12, v46);
    *(void *)&v15[*(int *)(v50 + 36)] = v34;
    uint64_t v37 = *(void (**)(char *, uint64_t))(v36 + 8);
    swift_retain();
    v37(v12, v35);
    sub_100009C30((uint64_t)v15, (uint64_t)v17, &qword_100158C00);
    sub_100009C94((uint64_t)v17, (uint64_t)v19, &qword_100158C00);
    swift_storeEnumTagMultiPayload();
    sub_1000060EC(&qword_100158C20);
    sub_100058268();
    sub_100058308();
    uint64_t v38 = (uint64_t)v47;
    _ConditionalContent<>.init(storage:)();
    sub_1000063D0((uint64_t)v17, &qword_100158C00);
    uint64_t v39 = sub_1000060EC(&qword_100158C10);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v38, 0, 1, v39);
    return sub_100009C30(v38, a3, &qword_100158BF0);
  }
  else
  {
    uint64_t v40 = sub_1000060EC(&qword_100158C10);
    uint64_t v41 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56);
    return v41(a3, 1, 1, v40);
  }
}

uint64_t sub_100048E9C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v57 = a2;
  uint64_t v5 = sub_1000060EC(&qword_100158B88);
  __chkstk_darwin(v5);
  uint64_t v7 = &v50[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_1000060EC(&qword_100158B90);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = &v50[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = type metadata accessor for TrackPageView();
  uint64_t v12 = v11 - 8;
  uint64_t v58 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v59 = v13;
  char v60 = &v50[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = type metadata accessor for ColorScheme();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = &v50[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v62 = type metadata accessor for SongPreviewPlaybackView();
  __chkstk_darwin(v62);
  uint64_t v61 = (uint64_t *)&v50[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v66 = sub_1000060EC(&qword_100158B98);
  uint64_t v19 = __chkstk_darwin(v66);
  uint64_t v63 = &v50[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v19);
  uint64_t v64 = a1;
  uint64_t v65 = &v50[-v21];
  uint64_t v22 = *(void *)(a1 + *(int *)(v12 + 52));
  swift_getKeyPath();
  uint64_t v67 = v22;
  sub_100057F30(&qword_100158818, (void (*)(uint64_t))type metadata accessor for TrackPageViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  sub_100009C94(v22 + 280, (uint64_t)&v68, &qword_100158BA0);
  if (v69)
  {
    uint64_t v53 = v10;
    uint64_t v54 = v5;
    char v55 = v7;
    uint64_t v56 = a3;
    sub_100057AA4(&v68, (uint64_t)v70);
    uint64_t v23 = v57;
    sub_100010740(v57, v57[3]);
    uint64_t v24 = enum case for ColorScheme.light(_:);
    uint64_t v25 = *(void (**)(void))(v15 + 104);
    ((void (*)(unsigned char *, void, uint64_t))v25)(v17, enum case for ColorScheme.light(_:), v14);
    sub_1000C2CE0((uint64_t)v17);
    uint64_t v26 = *(void (**)(unsigned char *, uint64_t))(v15 + 8);
    v26(v17, v14);
    unsigned int v51 = enum case for ColorScheme.dark(_:);
    v25(v17);
    sub_1000C2CE0((uint64_t)v17);
    v26(v17, v14);
    uint64_t v52 = sub_1000DBC50();
    swift_release();
    swift_release();
    sub_100010740(v23, v23[3]);
    ((void (*)(unsigned char *, uint64_t, uint64_t))v25)(v17, v24, v14);
    sub_1000C2810((uint64_t)v17);
    v26(v17, v14);
    ((void (*)(unsigned char *, void, uint64_t))v25)(v17, v51, v14);
    sub_1000C2810((uint64_t)v17);
    v26(v17, v14);
    uint64_t v27 = sub_1000DBC50();
    swift_release();
    swift_release();
    sub_100009AD0((uint64_t)v70, (uint64_t)&v68);
    type metadata accessor for SongPreviewPlaybackViewModel();
    swift_allocObject();
    uint64_t v28 = v52;
    swift_retain();
    swift_retain();
    uint64_t v29 = sub_1000C1918(&v68, v28, v27);
    uint64_t v30 = v60;
    sub_100058C74(v64, (uint64_t)v60, (uint64_t (*)(void))type metadata accessor for TrackPageView);
    unint64_t v31 = (*(unsigned __int8 *)(v58 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
    uint64_t v32 = swift_allocObject();
    sub_1000583D4((uint64_t)v30, v32 + v31, (uint64_t (*)(void))type metadata accessor for TrackPageView);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v34 = v61;
    *uint64_t v61 = KeyPath;
    sub_1000060EC(&qword_100156948);
    swift_storeEnumTagMultiPayload();
    swift_release();
    swift_release();
    uint64_t v35 = v62;
    uint64_t v36 = (char *)v34 + *(int *)(v62 + 20);
    *(void *)uint64_t v36 = sub_1000581AC;
    *((void *)v36 + 1) = v29;
    v36[16] = 0;
    uint64_t v37 = (uint64_t (**)())((char *)v34 + *(int *)(v35 + 24));
    *uint64_t v37 = sub_1000580BC;
    v37[1] = (uint64_t (*)())v32;
    uint64_t v38 = (uint64_t)v34;
    if (qword_1001560E8 != -1) {
      swift_once();
    }
    uint64_t v39 = qword_100158560;
    uint64_t v40 = v63;
    sub_100058C74(v38, (uint64_t)v63, (uint64_t (*)(void))type metadata accessor for SongPreviewPlaybackView);
    *(void *)&v40[*(int *)(v66 + 36)] = v39;
    swift_retain();
    sub_1000581B4(v38, (uint64_t (*)(void))type metadata accessor for SongPreviewPlaybackView);
    uint64_t v41 = v65;
    sub_100009C30((uint64_t)v40, (uint64_t)v65, &qword_100158B98);
    sub_100009C94((uint64_t)v41, (uint64_t)v55, &qword_100158B98);
    swift_storeEnumTagMultiPayload();
    sub_1000060EC(&qword_100158BB0);
    sub_100057E60();
    sub_100057F78();
    uint64_t v42 = (uint64_t)v53;
    _ConditionalContent<>.init(storage:)();
    sub_1000063D0((uint64_t)v41, &qword_100158B98);
    _s16MusicRecognition11AnyPlaylistVwxx_0((uint64_t)v70);
    uint64_t v43 = sub_1000060EC(&qword_100158BA8);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v42, 0, 1, v43);
    return sub_100009C30(v42, v56, &qword_100158B90);
  }
  else
  {
    sub_1000063D0((uint64_t)&v68, &qword_100158BA0);
    if (sub_1000ADD00())
    {
      id v45 = [self secondarySystemFillColor];
      uint64_t v46 = Color.init(uiColor:)();
      if (qword_1001560E8 != -1) {
        swift_once();
      }
      uint64_t v47 = qword_100158560;
      *(void *)uint64_t v7 = v46;
      *((_WORD *)v7 + 4) = 256;
      *((void *)v7 + 2) = v47;
      swift_storeEnumTagMultiPayload();
      swift_retain();
      sub_1000060EC(&qword_100158BB0);
      sub_100057E60();
      sub_100057F78();
      _ConditionalContent<>.init(storage:)();
      uint64_t v48 = sub_1000060EC(&qword_100158BA8);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(a3, 0, 1, v48);
    }
    else
    {
      uint64_t v49 = sub_1000060EC(&qword_100158BA8);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(a3, 1, 1, v49);
    }
  }
}

uint64_t sub_1000497B8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + *(int *)(type metadata accessor for TrackPageView() + 44));
  swift_getKeyPath();
  sub_100057F30(&qword_100158818, (void (*)(uint64_t))type metadata accessor for TrackPageViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (*(unsigned char *)(v1 + 24)) {
    int v2 = 68354;
  }
  else {
    int v2 = 2818;
  }
  return sub_1000D6E40(v2, 0xD000000000000028, 0x8000000100117950);
}

uint64_t sub_100049898@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v151 = a3;
  uint64_t v183 = a4;
  uint64_t v184 = a2;
  uint64_t v164 = type metadata accessor for RedactionReasons();
  uint64_t v163 = *(void *)(v164 - 8);
  __chkstk_darwin(v164);
  uint64_t v161 = (char *)&v145 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v168 = sub_1000060EC(&qword_100158AB8);
  uint64_t v167 = *(void *)(v168 - 8);
  __chkstk_darwin(v168);
  unint64_t v165 = (char *)&v145 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v162 = sub_1000060EC(&qword_100158AC0);
  __chkstk_darwin(v162);
  uint64_t v169 = (char *)&v145 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v181 = sub_1000060EC(&qword_100158AC8);
  uint64_t v8 = __chkstk_darwin(v181);
  uint64_t v166 = (uint64_t)&v145 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v170 = (uint64_t)&v145 - v10;
  uint64_t v179 = sub_1000060EC(&qword_100158AD0);
  __chkstk_darwin(v179);
  uint64_t v180 = (uint64_t)&v145 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000060EC(&qword_100158AD8);
  __chkstk_darwin(v12 - 8);
  unint64_t v182 = (char *)&v145 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for TrackPageView();
  uint64_t v152 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v153 = v15;
  uint64_t v154 = (char *)&v145 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v150 = type metadata accessor for ColorScheme();
  uint64_t v149 = *(void *)(v150 - 8);
  __chkstk_darwin(v150);
  uint64_t v17 = (char *)&v145 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1000060EC(&qword_100158950);
  __chkstk_darwin(v18 - 8);
  uint64_t v148 = (uint64_t)&v145 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v176 = type metadata accessor for PlayInAppleMusicView();
  uint64_t v20 = __chkstk_darwin(v176);
  uint64_t v160 = (uint64_t)&v145 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v177 = (uint64_t (**)())((char *)&v145 - v23);
  __chkstk_darwin(v22);
  uint64_t v156 = (uint64_t)&v145 - v24;
  uint64_t v155 = sub_1000060EC(&qword_100158AE0);
  __chkstk_darwin(v155);
  uint64_t v158 = (uint64_t)&v145 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v178 = sub_1000060EC(&qword_100158AE8);
  uint64_t v26 = __chkstk_darwin(v178);
  uint64_t v157 = (uint64_t)&v145 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  uint64_t v159 = (uint64_t)&v145 - v28;
  uint64_t v29 = sub_1000060EC(&qword_100158860);
  __chkstk_darwin(v29 - 8);
  unint64_t v31 = (char *)&v145 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_1000060EC((uint64_t *)&unk_100158FC0);
  uint64_t v33 = __chkstk_darwin(v32 - 8);
  uint64_t v35 = (char *)&v145 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = __chkstk_darwin(v33);
  uint64_t v38 = (char *)&v145 - v37;
  uint64_t v39 = __chkstk_darwin(v36);
  uint64_t v173 = (uint64_t)&v145 - v40;
  __chkstk_darwin(v39);
  uint64_t v42 = (char *)&v145 - v41;
  uint64_t v43 = type metadata accessor for URL();
  uint64_t v44 = *(void *)(v43 - 8);
  uint64_t v45 = __chkstk_darwin(v43);
  uint64_t v172 = (uint64_t)&v145 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v45);
  uint64_t v174 = (char *)&v145 - v47;
  uint64_t v175 = a1;
  uint64_t v48 = sub_100010740(a1, a1[3]);
  uint64_t v171 = (int *)type metadata accessor for TrackPageMetadata();
  sub_100009C94((uint64_t)v48 + v171[6], (uint64_t)v31, &qword_100158860);
  uint64_t v49 = type metadata accessor for AnySong();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v49 - 8) + 48))(v31, 1, v49) == 1)
  {
    sub_1000063D0((uint64_t)v31, &qword_100158860);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v44 + 56))(v42, 1, 1, v43);
    uint64_t v50 = v43;
    uint64_t v51 = v44;
  }
  else
  {
    sub_100009C94((uint64_t)v31, (uint64_t)v42, (uint64_t *)&unk_100158FC0);
    sub_1000581B4((uint64_t)v31, (uint64_t (*)(void))type metadata accessor for AnySong);
    int v52 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v44 + 48))(v42, 1, v43);
    uint64_t v50 = v43;
    uint64_t v51 = v44;
    if (v52 != 1)
    {
      uint64_t v83 = v174;
      (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v174, v42, v50);
      uint64_t v84 = (char *)*(int *)(v14 + 44);
      int v85 = sub_1000ADED0();
      (*(void (**)(uint64_t, char *, uint64_t))(v51 + 16))(v172, v83, v50);
      uint64_t v86 = sub_100010740(v175, v175[3]);
      uint64_t v87 = v148;
      sub_100009C94((uint64_t)v86 + v171[8], v148, &qword_100158950);
      uint64_t v88 = type metadata accessor for AnyAlbum();
      int v89 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v88 - 8) + 48))(v87, 1, v88);
      uint64_t v147 = v50;
      uint64_t v146 = v51;
      LODWORD(v170) = v85;
      uint64_t v169 = v84;
      if (v89 == 1)
      {
        sub_1000063D0(v87, &qword_100158950);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v51 + 56))(v173, 1, 1, v50);
      }
      else
      {
        uint64_t v90 = (void *)(v87 + *(int *)(v88 + 20));
        uint64_t v91 = v90[3];
        uint64_t v92 = v90[4];
        sub_100010740(v90, v91);
        (*(void (**)(uint64_t, uint64_t))(v92 + 56))(v91, v92);
        sub_1000581B4(v87, (uint64_t (*)(void))type metadata accessor for AnyAlbum);
      }
      long long v93 = v175;
      sub_100010740(v175, v175[3]);
      uint64_t v94 = enum case for ColorScheme.light(_:);
      uint64_t v95 = v149;
      uint64_t v96 = *(void (**)(void))(v149 + 104);
      uint64_t v97 = v150;
      ((void (*)(char *, void, uint64_t))v96)(v17, enum case for ColorScheme.light(_:), v150);
      sub_1000C2810((uint64_t)v17);
      uint64_t v98 = *(void (**)(char *, uint64_t))(v95 + 8);
      v98(v17, v97);
      LODWORD(v167) = enum case for ColorScheme.dark(_:);
      v96(v17);
      sub_1000C2810((uint64_t)v17);
      v98(v17, v97);
      uint64_t v168 = sub_1000DBC50();
      swift_release();
      swift_release();
      sub_100010740(v93, v93[3]);
      ((void (*)(char *, uint64_t, uint64_t))v96)(v17, v94, v97);
      sub_1000C2CE0((uint64_t)v17);
      v98(v17, v97);
      ((void (*)(char *, void, uint64_t))v96)(v17, v167, v97);
      sub_1000C2CE0((uint64_t)v17);
      v98(v17, v97);
      uint64_t v99 = sub_1000DBC50();
      swift_release();
      swift_release();
      uint64_t v100 = v151[2];
      uint64_t v101 = v151[3];
      uint64_t v103 = *v151;
      uint64_t v102 = (char *)v151[1];
      sub_100010740(v93, v93[3]);
      unint64_t v165 = v102;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v164 = sub_1000C36D8();
      uint64_t v163 = v104;
      uint64_t v105 = *(uint64_t (**)())&v169[v184];
      swift_getKeyPath();
      uint64_t v186 = v105;
      sub_100057F30(&qword_100158818, (void (*)(uint64_t))type metadata accessor for TrackPageViewModel);
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      uint64_t v169 = (char *)*((void *)v105 + 71);
      uint64_t v106 = *((void *)v105 + 72);
      uint64_t v107 = sub_100010740(v93, v93[3]);
      uint64_t v108 = *(void **)((char *)v107 + v171[5]);
      swift_bridgeObjectRetain();
      id v109 = [v108 shazamID];
      uint64_t v167 = v101;
      uint64_t v166 = v103;
      if (v109)
      {
        uint64_t v110 = v109;
        uint64_t v111 = v99;
        uint64_t v112 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v114 = v113;
      }
      else
      {
        uint64_t v111 = v99;
        uint64_t v112 = 0;
        uint64_t v114 = 0;
      }
      uint64_t v115 = (uint64_t)v154;
      swift_getKeyPath();
      uint64_t v186 = v105;
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      unint64_t v116 = (void *)*((void *)v105 + 34);
      id v117 = v116;
      *(void *)&long long v144 = v106;
      *((void *)&v144 + 1) = v112;
      *((void *)&v142 + 1) = v169;
      *(void *)&long long v142 = v163;
      *((void *)&v141 + 1) = v164;
      *(void *)&long long v141 = v165;
      uint64_t v118 = sub_1000A734C(v170 & 1, v172, v173, v168, v111, v100, v167, v166, v141, v142, v144, v114, v116);
      sub_100058C74(v184, v115, (uint64_t (*)(void))type metadata accessor for TrackPageView);
      unint64_t v119 = (*(unsigned __int8 *)(v152 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v152 + 80);
      uint64_t v120 = swift_allocObject();
      sub_1000583D4(v115, v120 + v119, (uint64_t (*)(void))type metadata accessor for TrackPageView);
      uint64_t v122 = v176;
      uint64_t v121 = v177;
      uint64_t v123 = (uint64_t *)((char *)v177 + *(int *)(v176 + 24));
      uint64_t *v123 = swift_getKeyPath();
      sub_1000060EC(&qword_100156940);
      swift_storeEnumTagMultiPayload();
      uint64_t v124 = (uint64_t *)((char *)v121 + *(int *)(v122 + 28));
      *uint64_t v124 = swift_getKeyPath();
      sub_1000060EC(&qword_100156938);
      swift_storeEnumTagMultiPayload();
      uint64_t v185 = v118;
      type metadata accessor for PlayInAppleMusicViewModel();
      State.init(wrappedValue:)();
      uint64_t v125 = v187;
      v121[2] = v186;
      v121[3] = v125;
      *uint64_t v121 = sub_100057E08;
      v121[1] = (uint64_t (*)())v120;
      uint64_t v126 = v156;
      sub_1000583D4((uint64_t)v121, v156, (uint64_t (*)(void))type metadata accessor for PlayInAppleMusicView);
      if (qword_1001560E8 != -1) {
        swift_once();
      }
      uint64_t v127 = qword_100158560;
      uint64_t v128 = v158;
      sub_100058C74(v126, v158, (uint64_t (*)(void))type metadata accessor for PlayInAppleMusicView);
      *(void *)(v128 + *(int *)(v155 + 36)) = v127;
      swift_retain();
      sub_1000581B4(v126, (uint64_t (*)(void))type metadata accessor for PlayInAppleMusicView);
      LOBYTE(v127) = static Edge.Set.bottom.getter();
      EdgeInsets.init(_all:)();
      uint64_t v130 = v129;
      uint64_t v132 = v131;
      uint64_t v134 = v133;
      uint64_t v136 = v135;
      uint64_t v137 = v157;
      sub_100009C94(v128, v157, &qword_100158AE0);
      uint64_t v138 = v137 + *(int *)(v178 + 36);
      *(unsigned char *)uint64_t v138 = v127;
      *(void *)(v138 + 8) = v130;
      *(void *)(v138 + 16) = v132;
      *(void *)(v138 + 24) = v134;
      *(void *)(v138 + 32) = v136;
      *(unsigned char *)(v138 + 40) = 0;
      sub_1000063D0(v128, &qword_100158AE0);
      uint64_t v139 = v159;
      sub_100009C30(v137, v159, &qword_100158AE8);
      sub_100009C94(v139, v180, &qword_100158AE8);
      swift_storeEnumTagMultiPayload();
      sub_100057BA8(&qword_100158B00, &qword_100158AE8, (void (*)(void))sub_100057C24);
      sub_100057BA8(&qword_100158B20, &qword_100158AC8, (void (*)(void))sub_100057CF4);
      uint64_t v81 = (uint64_t)v182;
      _ConditionalContent<>.init(storage:)();
      sub_1000063D0(v139, &qword_100158AE8);
      (*(void (**)(char *, uint64_t))(v146 + 8))(v174, v147);
      goto LABEL_19;
    }
  }
  sub_1000063D0((uint64_t)v42, (uint64_t *)&unk_100158FC0);
  if ((sub_1000ADD00() & 1) == 0)
  {
    uint64_t v82 = sub_1000060EC(&qword_100158AF0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v82 - 8) + 56))(v183, 1, 1, v82);
  }
  URL.init(string:)();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v51 + 48))(v38, 1, v50);
  if (result != 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v51 + 56))(v35, 1, 1, v50);
    uint64_t v54 = static Color.primary.getter();
    uint64_t v55 = static Color.primary.getter();
    *(void *)&long long v143 = 0;
    *((void *)&v143 + 1) = 0x495F4D415A414853;
    uint64_t v56 = sub_1000A734C(0, (uint64_t)v38, (uint64_t)v35, v54, v55, 0, 0, 0, 0, 0, v143, 0xE900000000000044, 0);
    uint64_t v58 = v176;
    uint64_t v57 = v177;
    uint64_t v59 = (uint64_t *)((char *)v177 + *(int *)(v176 + 24));
    *uint64_t v59 = swift_getKeyPath();
    sub_1000060EC(&qword_100156940);
    swift_storeEnumTagMultiPayload();
    char v60 = (uint64_t *)((char *)v57 + *(int *)(v58 + 28));
    *char v60 = swift_getKeyPath();
    sub_1000060EC(&qword_100156938);
    swift_storeEnumTagMultiPayload();
    uint64_t v185 = v56;
    type metadata accessor for PlayInAppleMusicViewModel();
    State.init(wrappedValue:)();
    uint64_t v61 = v187;
    v57[2] = v186;
    v57[3] = v61;
    void *v57 = 0;
    v57[1] = 0;
    uint64_t v62 = v160;
    sub_1000583D4((uint64_t)v57, v160, (uint64_t (*)(void))type metadata accessor for PlayInAppleMusicView);
    uint64_t v63 = v161;
    static RedactionReasons.placeholder.getter();
    sub_100057F30(&qword_100158AF8, (void (*)(uint64_t))type metadata accessor for PlayInAppleMusicView);
    uint64_t v64 = v165;
    View.redacted(reason:)();
    (*(void (**)(char *, uint64_t))(v163 + 8))(v63, v164);
    sub_1000581B4(v62, (uint64_t (*)(void))type metadata accessor for PlayInAppleMusicView);
    if (qword_1001560E8 != -1) {
      swift_once();
    }
    uint64_t v65 = qword_100158560;
    uint64_t v66 = v167;
    uint64_t v67 = (uint64_t)v169;
    uint64_t v68 = v168;
    (*(void (**)(char *, char *, uint64_t))(v167 + 16))(v169, v64, v168);
    *(void *)(v67 + *(int *)(v162 + 36)) = v65;
    uint64_t v69 = *(void (**)(char *, uint64_t))(v66 + 8);
    swift_retain();
    v69(v64, v68);
    LOBYTE(v65) = static Edge.Set.bottom.getter();
    EdgeInsets.init(_all:)();
    uint64_t v71 = v70;
    uint64_t v73 = v72;
    uint64_t v75 = v74;
    uint64_t v77 = v76;
    uint64_t v78 = v166;
    sub_100009C94(v67, v166, &qword_100158AC0);
    uint64_t v79 = v78 + *(int *)(v181 + 36);
    *(unsigned char *)uint64_t v79 = v65;
    *(void *)(v79 + 8) = v71;
    *(void *)(v79 + 16) = v73;
    *(void *)(v79 + 24) = v75;
    *(void *)(v79 + 32) = v77;
    *(unsigned char *)(v79 + 40) = 0;
    sub_1000063D0(v67, &qword_100158AC0);
    uint64_t v80 = v170;
    sub_100009C30(v78, v170, &qword_100158AC8);
    sub_100009C94(v80, v180, &qword_100158AC8);
    swift_storeEnumTagMultiPayload();
    sub_100057BA8(&qword_100158B00, &qword_100158AE8, (void (*)(void))sub_100057C24);
    sub_100057BA8(&qword_100158B20, &qword_100158AC8, (void (*)(void))sub_100057CF4);
    uint64_t v81 = (uint64_t)v182;
    _ConditionalContent<>.init(storage:)();
    sub_1000063D0(v80, &qword_100158AC8);
LABEL_19:
    uint64_t v140 = sub_1000060EC(&qword_100158AF0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v140 - 8) + 56))(v81, 0, 1, v140);
    return sub_100009C30(v81, v183, &qword_100158AD8);
  }
  __break(1u);
  return result;
}

uint64_t sub_10004AE20(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + *(int *)(type metadata accessor for TrackPageView() + 44));
  swift_getKeyPath();
  sub_100057F30(&qword_100158818, (void (*)(uint64_t))type metadata accessor for TrackPageViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (*(unsigned char *)(v1 + 24)) {
    int v2 = 66049;
  }
  else {
    int v2 = 513;
  }
  return sub_1000D6E40(v2, 0xD000000000000028, 0x8000000100117950);
}

uint64_t sub_10004AF00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v64 = a2;
  uint64_t v3 = type metadata accessor for UserInterfaceSizeClass();
  uint64_t v60 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v57 = &v55[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_1000060EC(&qword_1001589C8);
  uint64_t v6 = v5 - 8;
  __chkstk_darwin(v5);
  uint64_t v58 = &v55[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_1000060EC(&qword_100156930);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v61 = &v55[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = &v55[-v12];
  __chkstk_darwin(v11);
  uint64_t v15 = &v55[-v14];
  uint64_t v16 = sub_1000060EC(&qword_1001589F8);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = &v55[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v19 = sub_1000060EC(&qword_100158A00);
  uint64_t v20 = v19 - 8;
  __chkstk_darwin(v19);
  uint64_t v22 = &v55[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v62 = sub_1000060EC(&qword_100158960);
  __chkstk_darwin(v62);
  uint64_t v63 = &v55[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10004B514(a1, v2, (uint64_t)v18);
  LOBYTE(a1) = static Edge.Set.bottom.getter();
  EdgeInsets.init(_all:)();
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  sub_100009C94((uint64_t)v18, (uint64_t)v22, &qword_1001589F8);
  uint64_t v32 = *(int *)(v20 + 44);
  uint64_t v33 = v60;
  uint64_t v59 = v22;
  uint64_t v34 = &v22[v32];
  *uint64_t v34 = a1;
  *((void *)v34 + 1) = v25;
  *((void *)v34 + 2) = v27;
  *((void *)v34 + 3) = v29;
  *((void *)v34 + 4) = v31;
  v34[40] = 0;
  uint64_t v35 = (uint64_t)v15;
  uint64_t v36 = (uint64_t)v58;
  sub_1000063D0((uint64_t)v18, &qword_1001589F8);
  LODWORD(a1) = static Edge.Set.horizontal.getter();
  type metadata accessor for TrackPageView();
  sub_100008780(v35);
  (*(void (**)(unsigned char *, void, uint64_t))(v33 + 104))(v13, enum case for UserInterfaceSizeClass.regular(_:), v3);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v33 + 56))(v13, 0, 1, v3);
  uint64_t v38 = v36 + *(int *)(v6 + 56);
  sub_100009C94(v35, v36, &qword_100156930);
  sub_100009C94((uint64_t)v13, v38, &qword_100156930);
  uint64_t v39 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48);
  if (v39(v36, 1, v3) != 1)
  {
    sub_100009C94(v36, (uint64_t)v61, &qword_100156930);
    if (v39(v38, 1, v3) != 1)
    {
      uint64_t v40 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v33 + 32);
      int v56 = a1;
      a1 = (uint64_t)v57;
      v40(v57, v38, v3);
      sub_100057F30(&qword_1001589D0, (void (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass);
      uint64_t v41 = v61;
      dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v42 = *(void (**)(uint64_t, uint64_t))(v33 + 8);
      v42(a1, v3);
      sub_1000063D0((uint64_t)v13, &qword_100156930);
      sub_1000063D0(v35, &qword_100156930);
      v42((uint64_t)v41, v3);
      LOBYTE(a1) = v56;
      sub_1000063D0(v36, &qword_100156930);
      goto LABEL_8;
    }
    sub_1000063D0((uint64_t)v13, &qword_100156930);
    sub_1000063D0(v35, &qword_100156930);
    (*(void (**)(unsigned char *, uint64_t))(v33 + 8))(v61, v3);
    goto LABEL_6;
  }
  sub_1000063D0((uint64_t)v13, &qword_100156930);
  sub_1000063D0(v35, &qword_100156930);
  if (v39(v38, 1, v3) != 1)
  {
LABEL_6:
    sub_1000063D0(v36, &qword_1001589C8);
    goto LABEL_8;
  }
  sub_1000063D0(v36, &qword_100156930);
LABEL_8:
  EdgeInsets.init(_all:)();
  uint64_t v44 = v43;
  uint64_t v46 = v45;
  uint64_t v48 = v47;
  uint64_t v50 = v49;
  uint64_t v51 = (uint64_t)v59;
  int v52 = v63;
  sub_100009C94((uint64_t)v59, (uint64_t)v63, &qword_100158A00);
  uint64_t v53 = &v52[*(int *)(v62 + 36)];
  *uint64_t v53 = a1;
  *((void *)v53 + 1) = v44;
  *((void *)v53 + 2) = v46;
  *((void *)v53 + 3) = v48;
  *((void *)v53 + 4) = v50;
  v53[40] = 0;
  sub_1000063D0(v51, &qword_100158A00);
  return sub_100009C30((uint64_t)v52, v64, &qword_100158960);
}

uint64_t sub_10004B514@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v57 = a2;
  uint64_t v59 = (char *)a1;
  uint64_t v60 = a3;
  uint64_t v52 = type metadata accessor for RedactionReasons();
  uint64_t v51 = *(void *)(v52 - 8);
  __chkstk_darwin(v52);
  uint64_t v54 = (char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = sub_1000060EC(&qword_100158A08);
  uint64_t v53 = *(void *)(v58 - 8);
  uint64_t v4 = __chkstk_darwin(v58);
  uint64_t v50 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v49 - v6;
  uint64_t v55 = sub_1000060EC(&qword_100158A10);
  __chkstk_darwin(v55);
  uint64_t v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000060EC(&qword_100158A18);
  __chkstk_darwin(v10 - 8);
  int v56 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ArtistProfileViewModel();
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for TrackPageView();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void *)(v16 + 64);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for ArtistProfileView();
  uint64_t v20 = __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v49 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v24 = (char *)&v49 - v23;
  sub_100009C94((uint64_t)v59, (uint64_t)&v62, &qword_1001589A8);
  if (v63)
  {
    sub_100057AA4(&v62, (uint64_t)v64);
    sub_100009AD0((uint64_t)v64, (uint64_t)&v62);
    sub_100058C74(v57, (uint64_t)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for TrackPageView);
    unint64_t v25 = (*(unsigned __int8 *)(v16 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
    uint64_t v26 = swift_allocObject();
    sub_1000583D4((uint64_t)v18, v26 + v25, (uint64_t (*)(void))type metadata accessor for TrackPageView);
    uint64_t v27 = (uint64_t *)&v22[*(int *)(v19 + 24)];
    *uint64_t v27 = swift_getKeyPath();
    sub_1000060EC(&qword_100156940);
    swift_storeEnumTagMultiPayload();
    sub_100009AD0((uint64_t)&v62, (uint64_t)v61);
    sub_1000E2454(v61, (uint64_t)v14);
    _s16MusicRecognition11AnyPlaylistVwxx_0((uint64_t)&v62);
    sub_1000583D4((uint64_t)v14, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for ArtistProfileViewModel);
    uint64_t v28 = (uint64_t (**)())&v22[*(int *)(v19 + 20)];
    *uint64_t v28 = sub_100057AC0;
    v28[1] = (uint64_t (*)())v26;
    sub_1000583D4((uint64_t)v22, (uint64_t)v24, (uint64_t (*)(void))type metadata accessor for ArtistProfileView);
    sub_100058C74((uint64_t)v24, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for ArtistProfileView);
    swift_storeEnumTagMultiPayload();
    uint64_t v29 = sub_100057F30(&qword_100158A28, (void (*)(uint64_t))type metadata accessor for ArtistProfileView);
    *(void *)&long long v62 = v19;
    *((void *)&v62 + 1) = v29;
    swift_getOpaqueTypeConformance2();
    uint64_t v30 = v56;
    _ConditionalContent<>.init(storage:)();
    sub_1000581B4((uint64_t)v24, (uint64_t (*)(void))type metadata accessor for ArtistProfileView);
    _s16MusicRecognition11AnyPlaylistVwxx_0((uint64_t)v64);
    uint64_t v31 = sub_1000060EC(&qword_100158A20);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v30, 0, 1, v31);
    uint64_t v32 = (uint64_t)v30;
    return sub_100009C30(v32, v60, &qword_100158A18);
  }
  uint64_t v33 = v54;
  uint64_t v49 = v7;
  uint64_t v34 = v53;
  uint64_t v59 = v9;
  uint64_t v35 = v58;
  sub_1000063D0((uint64_t)&v62, &qword_1001589A8);
  char v36 = sub_1000ADD00();
  uint64_t v37 = v60;
  if (v36)
  {
    v64[3] = type metadata accessor for DesignTimeArtistMetadata();
    v64[4] = (uint64_t)&off_100149980;
    uint64_t v38 = sub_100057938(v64);
    sub_100009D04((uint64_t)v38);
    uint64_t v39 = (uint64_t *)&v22[*(int *)(v19 + 24)];
    *uint64_t v39 = swift_getKeyPath();
    sub_1000060EC(&qword_100156940);
    swift_storeEnumTagMultiPayload();
    sub_100009AD0((uint64_t)v64, (uint64_t)&v62);
    sub_1000E2454(&v62, (uint64_t)v14);
    _s16MusicRecognition11AnyPlaylistVwxx_0((uint64_t)v64);
    sub_1000583D4((uint64_t)v14, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for ArtistProfileViewModel);
    uint64_t v40 = &v22[*(int *)(v19 + 20)];
    *(void *)uint64_t v40 = 0;
    *((void *)v40 + 1) = 0;
    uint64_t v41 = (uint64_t)v24;
    sub_1000583D4((uint64_t)v22, (uint64_t)v24, (uint64_t (*)(void))type metadata accessor for ArtistProfileView);
    static RedactionReasons.placeholder.getter();
    uint64_t v42 = sub_100057F30(&qword_100158A28, (void (*)(uint64_t))type metadata accessor for ArtistProfileView);
    uint64_t v43 = v50;
    View.redacted(reason:)();
    (*(void (**)(char *, uint64_t))(v51 + 8))(v33, v52);
    sub_1000581B4(v41, (uint64_t (*)(void))type metadata accessor for ArtistProfileView);
    uint64_t v44 = v49;
    (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v49, v43, v35);
    (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v59, v44, v35);
    swift_storeEnumTagMultiPayload();
    v64[0] = v19;
    v64[1] = v42;
    swift_getOpaqueTypeConformance2();
    uint64_t v45 = v56;
    _ConditionalContent<>.init(storage:)();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v44, v35);
    uint64_t v46 = sub_1000060EC(&qword_100158A20);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v45, 0, 1, v46);
    uint64_t v32 = (uint64_t)v45;
    return sub_100009C30(v32, v60, &qword_100158A18);
  }
  uint64_t v48 = sub_1000060EC(&qword_100158A20);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v37, 1, 1, v48);
}

uint64_t sub_10004BDCC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + *(int *)(type metadata accessor for TrackPageView() + 44));
  swift_getKeyPath();
  sub_100057F30(&qword_100158818, (void (*)(uint64_t))type metadata accessor for TrackPageViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (*(unsigned char *)(v1 + 24)) {
    int v2 = 66561;
  }
  else {
    int v2 = 1025;
  }
  return sub_1000D6E40(v2, 0xD000000000000028, 0x8000000100117950);
}

uint64_t sub_10004BEAC@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v85 = a2;
  LODWORD(v93) = a1;
  *(void *)&long long v94 = type metadata accessor for UserInterfaceSizeClass();
  uint64_t v89 = *(void *)(v94 - 8);
  __chkstk_darwin(v94);
  uint64_t v82 = (char *)&v76 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000060EC(&qword_1001589C8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v76 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000060EC(&qword_100156930);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v83 = (uint64_t)&v76 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v92 = (uint64_t)&v76 - v12;
  __chkstk_darwin(v11);
  uint64_t v87 = (uint64_t)&v76 - v13;
  uint64_t v86 = type metadata accessor for TrackPageView();
  uint64_t v84 = *(void *)(v86 - 8);
  uint64_t v14 = *(void *)(v84 + 64);
  __chkstk_darwin(v86);
  uint64_t v15 = sub_1000060EC((uint64_t *)&unk_100158FC0);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v76 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for ShazamUpsellViewModel();
  __chkstk_darwin(v18 - 8);
  uint64_t v20 = (uint64_t *)((char *)&v76 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v21 = type metadata accessor for ShazamUpsellView();
  uint64_t v22 = __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v76 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v26 = (char *)&v76 - v25;
  uint64_t v90 = sub_1000060EC(&qword_1001589D8);
  __chkstk_darwin(v90);
  uint64_t v91 = (char *)&v76 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_1000060EC(&qword_1001589E0);
  uint64_t v29 = __chkstk_darwin(v28);
  __chkstk_darwin(v29);
  if (v93)
  {
    uint64_t v78 = (uint64_t)&v76 - v32;
    uint64_t v79 = v33;
    uint64_t v80 = v31;
    uint64_t v81 = v30;
    uint64_t v93 = a3;
    sub_100009C94(v85, (uint64_t)v17, (uint64_t *)&unk_100158FC0);
    sub_100095BE8((uint64_t)v17, v20);
    uint64_t v77 = v5;
    sub_100058C74(v88, (uint64_t)&v76 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for TrackPageView);
    unint64_t v34 = (*(unsigned __int8 *)(v84 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v84 + 80);
    uint64_t v35 = swift_allocObject();
    sub_1000583D4((uint64_t)&v76 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v35 + v34, (uint64_t (*)(void))type metadata accessor for TrackPageView);
    char v36 = (uint64_t *)&v24[*(int *)(v21 + 24)];
    *char v36 = swift_getKeyPath();
    sub_1000060EC(&qword_100156940);
    swift_storeEnumTagMultiPayload();
    sub_1000583D4((uint64_t)v20, (uint64_t)v24, (uint64_t (*)(void))type metadata accessor for ShazamUpsellViewModel);
    uint64_t v37 = (uint64_t (**)())&v24[*(int *)(v21 + 20)];
    *uint64_t v37 = sub_1000579A0;
    v37[1] = (uint64_t (*)())v35;
    sub_1000583D4((uint64_t)v24, (uint64_t)v26, (uint64_t (*)(void))type metadata accessor for ShazamUpsellView);
    LODWORD(v85) = static Edge.Set.horizontal.getter();
    uint64_t v38 = v87;
    sub_100008780(v87);
    uint64_t v39 = v89;
    uint64_t v40 = v92;
    uint64_t v41 = v94;
    (*(void (**)(uint64_t, void, void))(v89 + 104))(v92, enum case for UserInterfaceSizeClass.regular(_:), v94);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v39 + 56))(v40, 0, 1, v41);
    uint64_t v42 = (uint64_t)&v7[*(int *)(v77 + 48)];
    sub_100009C94(v38, (uint64_t)v7, &qword_100156930);
    sub_100009C94(v40, v42, &qword_100156930);
    uint64_t v43 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v39 + 48);
    int v44 = v43(v7, 1, v41);
    uint64_t v45 = (uint64_t)v7;
    if (v44 == 1)
    {
      sub_1000063D0(v40, &qword_100156930);
      sub_1000063D0(v38, &qword_100156930);
      int v46 = v43((char *)v42, 1, v94);
      uint64_t v47 = v93;
      uint64_t v48 = (uint64_t)v91;
      if (v46 == 1)
      {
        sub_1000063D0(v45, &qword_100156930);
LABEL_12:
        EdgeInsets.init(_all:)();
        uint64_t v57 = v56;
        uint64_t v59 = v58;
        uint64_t v61 = v60;
        uint64_t v63 = v62;
        sub_100058C74((uint64_t)v26, v48, (uint64_t (*)(void))type metadata accessor for ShazamUpsellView);
        uint64_t v64 = v48 + *(int *)(v90 + 36);
        *(unsigned char *)uint64_t v64 = v85;
        *(void *)(v64 + 8) = v57;
        *(void *)(v64 + 16) = v59;
        *(void *)(v64 + 24) = v61;
        *(void *)(v64 + 32) = v63;
        *(unsigned char *)(v64 + 40) = 0;
        sub_1000581B4((uint64_t)v26, (uint64_t (*)(void))type metadata accessor for ShazamUpsellView);
        sub_1000060EC(&qword_1001589E8);
        uint64_t v65 = swift_allocObject();
        *(_OWORD *)(v65 + 16) = xmmword_1001118A0;
        if (qword_1001560C0 != -1) {
          swift_once();
        }
        swift_retain();
        *(void *)(v65 + 32) = Gradient.Stop.init(color:location:)();
        *(void *)(v65 + 40) = v66;
        if (qword_1001560C8 != -1) {
          swift_once();
        }
        swift_retain();
        *(void *)(v65 + 48) = Gradient.Stop.init(color:location:)();
        *(void *)(v65 + 56) = v67;
        static UnitPoint.top.getter();
        static UnitPoint.bottom.getter();
        Gradient.init(stops:)();
        LinearGradient.init(gradient:startPoint:endPoint:)();
        uint64_t v68 = v95;
        long long v94 = v96;
        uint64_t v69 = v97;
        uint64_t v70 = v98;
        char v71 = static Edge.Set.all.getter();
        uint64_t v72 = v79;
        sub_100009C94(v48, v79, &qword_1001589D8);
        uint64_t v73 = v81;
        uint64_t v74 = v72 + *(int *)(v81 + 36);
        *(void *)uint64_t v74 = v68;
        *(_OWORD *)(v74 + 8) = v94;
        *(void *)(v74 + 24) = v69;
        *(void *)(v74 + 32) = v70;
        *(unsigned char *)(v74 + 40) = v71;
        sub_1000063D0(v48, &qword_1001589D8);
        uint64_t v75 = v78;
        sub_100009C30(v72, v78, &qword_1001589E0);
        sub_100009C30(v75, v47, &qword_1001589E0);
        return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v80 + 56))(v47, 0, 1, v73);
      }
    }
    else
    {
      uint64_t v51 = v83;
      sub_100009C94((uint64_t)v7, v83, &qword_100156930);
      int v52 = v43((char *)v42, 1, v94);
      uint64_t v48 = (uint64_t)v91;
      if (v52 != 1)
      {
        uint64_t v53 = v82;
        uint64_t v54 = v94;
        (*(void (**)(char *, uint64_t, void))(v39 + 32))(v82, v42, v94);
        sub_100057F30(&qword_1001589D0, (void (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass);
        dispatch thunk of static Equatable.== infix(_:_:)();
        uint64_t v55 = *(void (**)(char *, uint64_t))(v39 + 8);
        v55(v53, v54);
        sub_1000063D0(v92, &qword_100156930);
        sub_1000063D0(v38, &qword_100156930);
        v55((char *)v51, v54);
        sub_1000063D0(v45, &qword_100156930);
        uint64_t v47 = v93;
        goto LABEL_12;
      }
      sub_1000063D0(v92, &qword_100156930);
      sub_1000063D0(v38, &qword_100156930);
      (*(void (**)(uint64_t, void))(v39 + 8))(v51, v94);
      uint64_t v47 = v93;
    }
    sub_1000063D0(v45, &qword_1001589C8);
    goto LABEL_12;
  }
  uint64_t v49 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v31 + 56);

  return v49(a3, 1, 1);
}

uint64_t sub_10004C948(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + *(int *)(type metadata accessor for TrackPageView() + 44));
  swift_getKeyPath();
  sub_100057F30(&qword_100158818, (void (*)(uint64_t))type metadata accessor for TrackPageViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (*(unsigned char *)(v1 + 24)) {
    int v2 = 66054;
  }
  else {
    int v2 = 518;
  }
  return sub_1000D6E40(v2, 0xD000000000000028, 0x8000000100117950);
}

uint64_t sub_10004CA28@<X0>(int a1@<W0>, void *a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v78 = a2;
  LODWORD(v81) = a1;
  uint64_t v4 = type metadata accessor for UserInterfaceSizeClass();
  uint64_t v80 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v69 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000060EC(&qword_1001589C8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000060EC(&qword_100156930);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v13 = (char *)&v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = (char *)&v69 - v15;
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v69 - v17;
  uint64_t v19 = type metadata accessor for TrackPageView();
  uint64_t result = __chkstk_darwin(v19);
  if ((v81 & 1) == 0)
  {
    *(_OWORD *)((char *)a3 + 169) = 0u;
    a3[9] = 0u;
    a3[10] = 0u;
    a3[7] = 0u;
    a3[8] = 0u;
    a3[5] = 0u;
    a3[6] = 0u;
    a3[3] = 0u;
    a3[4] = 0u;
    a3[1] = 0u;
    a3[2] = 0u;
    *a3 = 0u;
    return result;
  }
  uint64_t v71 = v22;
  uint64_t v72 = v21;
  uint64_t v73 = (uint64_t)&v69 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = v7;
  uint64_t v76 = v16;
  uint64_t v77 = v9;
  uint64_t v81 = (uint64_t)v18;
  uint64_t v70 = v13;
  uint64_t v75 = v4;
  uint64_t v23 = v78[3];
  uint64_t v24 = v78[10];
  uint64_t v25 = sub_100010740(v78, v23);
  v82[3] = v23;
  v82[4] = v24;
  uint64_t v26 = sub_100057938(v82);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v23 - 8) + 16))(v26, v25, v23);
  uint64_t v27 = v79;
  char v28 = sub_1000B0E80();
  uint64_t v69 = v6;
  if (v28) {
    uint64_t v29 = (void *)sub_1000761C4((uint64_t)&off_100149050);
  }
  else {
    uint64_t v29 = &_swiftEmptySetSingleton;
  }
  *(void *)&long long v83 = LocalizedStringKey.init(stringLiteral:)();
  *((void *)&v83 + 1) = v30;
  LOBYTE(v84) = v31 & 1;
  *((void *)&v84 + 1) = v32;
  *((void *)&v87 + 1) = _swiftEmptyArrayStorage;
  sub_100009AD0((uint64_t)v82, (uint64_t)&v85);
  uint64_t v33 = sub_1000E67C0((uint64_t)v29);
  swift_bridgeObjectRelease();
  _s16MusicRecognition11AnyPlaylistVwxx_0((uint64_t)v82);
  swift_bridgeObjectRelease();
  *((void *)&v87 + 1) = v33;
  long long v96 = v85;
  long long v97 = v86;
  long long v94 = v83;
  long long v95 = v84;
  long long v98 = v87;
  uint64_t v34 = v73;
  sub_100058C74(v27, v73, (uint64_t (*)(void))type metadata accessor for TrackPageView);
  unint64_t v35 = (*(unsigned __int8 *)(v71 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80);
  uint64_t v36 = swift_allocObject();
  sub_1000583D4(v34, v36 + v35, (uint64_t (*)(void))type metadata accessor for TrackPageView);
  long long v85 = v96;
  long long v86 = v97;
  long long v87 = v98;
  long long v83 = v94;
  long long v84 = v95;
  *(void *)&long long v88 = sub_1000579DC;
  *((void *)&v88 + 1) = v36;
  LOBYTE(v36) = static Edge.Set.bottom.getter();
  EdgeInsets.init(_all:)();
  uint64_t v38 = v37;
  uint64_t v40 = v39;
  uint64_t v42 = v41;
  uint64_t v44 = v43;
  sub_1000579F4((uint64_t)&v83, (uint64_t)&v94);
  LOBYTE(v100) = v36;
  *((void *)&v100 + 1) = v38;
  *(void *)&long long v101 = v40;
  *((void *)&v101 + 1) = v42;
  *(void *)&long long v102 = v44;
  BYTE8(v102) = 0;
  sub_100057A50((uint64_t)&v83);
  LODWORD(v78) = static Edge.Set.horizontal.getter();
  uint64_t v45 = v81;
  sub_100008780(v81);
  uint64_t v46 = v80;
  uint64_t v48 = v75;
  uint64_t v47 = (uint64_t)v76;
  (*(void (**)(char *, void, uint64_t))(v80 + 104))(v76, enum case for UserInterfaceSizeClass.regular(_:), v75);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v46 + 56))(v47, 0, 1, v48);
  uint64_t v49 = (uint64_t)v77;
  uint64_t v50 = (uint64_t)&v77[*(int *)(v74 + 48)];
  sub_100009C94(v45, (uint64_t)v77, &qword_100156930);
  sub_100009C94(v47, v50, &qword_100156930);
  uint64_t v51 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v46 + 48);
  if (v51(v49, 1, v48) != 1)
  {
    uint64_t v53 = (uint64_t)v70;
    sub_100009C94(v49, (uint64_t)v70, &qword_100156930);
    if (v51(v50, 1, v48) != 1)
    {
      uint64_t v67 = v69;
      (*(void (**)(char *, uint64_t, uint64_t))(v46 + 32))(v69, v50, v48);
      sub_100057F30(&qword_1001589D0, (void (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass);
      dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v68 = *(void (**)(char *, uint64_t))(v46 + 8);
      v68(v67, v48);
      sub_1000063D0((uint64_t)v76, &qword_100156930);
      sub_1000063D0(v81, &qword_100156930);
      v68((char *)v53, v48);
      sub_1000063D0(v49, &qword_100156930);
      char v52 = (char)v78;
      goto LABEL_12;
    }
    sub_1000063D0((uint64_t)v76, &qword_100156930);
    sub_1000063D0(v81, &qword_100156930);
    (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v53, v48);
    goto LABEL_11;
  }
  sub_1000063D0(v47, &qword_100156930);
  sub_1000063D0(v81, &qword_100156930);
  if (v51(v50, 1, v48) != 1)
  {
LABEL_11:
    sub_1000063D0((uint64_t)v77, &qword_1001589C8);
    char v52 = (char)v78;
    goto LABEL_12;
  }
  sub_1000063D0((uint64_t)v77, &qword_100156930);
  char v52 = (char)v78;
LABEL_12:
  EdgeInsets.init(_all:)();
  uint64_t v55 = v54;
  uint64_t v57 = v56;
  uint64_t v59 = v58;
  uint64_t v61 = v60;
  sub_100009C94((uint64_t)&v94, (uint64_t)&v83, &qword_1001589F0);
  LOBYTE(v92) = v52;
  *((void *)&v92 + 1) = v55;
  *(void *)&v93[0] = v57;
  *((void *)&v93[0] + 1) = v59;
  *(void *)&v93[1] = v61;
  BYTE8(v93[1]) = 0;
  uint64_t result = sub_1000063D0((uint64_t)&v94, &qword_1001589F0);
  long long v102 = v91;
  long long v103 = v92;
  v104[0] = v93[0];
  *(_OWORD *)((char *)v104 + 9) = *(_OWORD *)((char *)v93 + 9);
  long long v98 = v87;
  long long v99 = v88;
  long long v100 = v89;
  long long v101 = v90;
  long long v94 = v83;
  long long v95 = v84;
  long long v96 = v85;
  long long v97 = v86;
  long long v62 = v92;
  a3[8] = v91;
  a3[9] = v62;
  a3[10] = v104[0];
  *(_OWORD *)((char *)a3 + 169) = *(_OWORD *)((char *)v104 + 9);
  long long v63 = v99;
  a3[4] = v98;
  a3[5] = v63;
  long long v64 = v101;
  a3[6] = v100;
  a3[7] = v64;
  long long v65 = v95;
  *a3 = v94;
  a3[1] = v65;
  long long v66 = v97;
  a3[2] = v96;
  a3[3] = v66;
  return result;
}

uint64_t sub_10004D1F8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + *(int *)(type metadata accessor for TrackPageView() + 44));
  swift_getKeyPath();
  sub_100057F30(&qword_100158818, (void (*)(uint64_t))type metadata accessor for TrackPageViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (*(unsigned char *)(v1 + 24)) {
    int v2 = 66817;
  }
  else {
    int v2 = 1281;
  }
  return sub_1000D6E40(v2, 0xD000000000000028, 0x8000000100117950);
}

uint64_t sub_10004D2D8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  id v62 = a1;
  uint64_t v9 = type metadata accessor for UserInterfaceSizeClass();
  uint64_t v55 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v54 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000060EC(&qword_1001589C8);
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1000060EC(&qword_100156930);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  uint64_t v58 = (uint64_t)&v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v53 - v19;
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v53 - v21;
  uint64_t v23 = type metadata accessor for Date();
  __chkstk_darwin(v23);
  uint64_t v25 = (char *)&v53 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v26 + 16))(v25, a4);
  swift_retain();
  swift_retain();
  id v27 = v62;
  char v28 = (void *)sub_10007CB34(a2, (uint64_t)v25, a3, v27);
  uint64_t v61 = v29;
  id v62 = v28;
  uint64_t v59 = v31;
  uint64_t v60 = v30;
  swift_release();
  swift_release();

  uint64_t v32 = v55;
  int v57 = static Edge.Set.bottom.getter();
  EdgeInsets.init(_all:)();
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  uint64_t v38 = v37;
  uint64_t v40 = v39;
  int v56 = static Edge.Set.horizontal.getter();
  type metadata accessor for TrackPageView();
  sub_100008780((uint64_t)v22);
  (*(void (**)(char *, void, uint64_t))(v32 + 104))(v20, enum case for UserInterfaceSizeClass.regular(_:), v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v20, 0, 1, v9);
  uint64_t v41 = (uint64_t)&v14[*(int *)(v12 + 56)];
  sub_100009C94((uint64_t)v22, (uint64_t)v14, &qword_100156930);
  sub_100009C94((uint64_t)v20, v41, &qword_100156930);
  uint64_t v42 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48);
  if (v42((uint64_t)v14, 1, v9) != 1)
  {
    sub_100009C94((uint64_t)v14, v58, &qword_100156930);
    if (v42(v41, 1, v9) != 1)
    {
      uint64_t v43 = v54;
      (*(void (**)(char *, uint64_t, uint64_t))(v32 + 32))(v54, v41, v9);
      sub_100057F30(&qword_1001589D0, (void (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass);
      uint64_t v44 = v58;
      dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v45 = *(void (**)(char *, uint64_t))(v32 + 8);
      v45(v43, v9);
      sub_1000063D0((uint64_t)v20, &qword_100156930);
      sub_1000063D0((uint64_t)v22, &qword_100156930);
      v45((char *)v44, v9);
      sub_1000063D0((uint64_t)v14, &qword_100156930);
      goto LABEL_8;
    }
    sub_1000063D0((uint64_t)v20, &qword_100156930);
    sub_1000063D0((uint64_t)v22, &qword_100156930);
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v58, v9);
    goto LABEL_6;
  }
  sub_1000063D0((uint64_t)v20, &qword_100156930);
  sub_1000063D0((uint64_t)v22, &qword_100156930);
  if (v42(v41, 1, v9) != 1)
  {
LABEL_6:
    sub_1000063D0((uint64_t)v14, &qword_1001589C8);
    goto LABEL_8;
  }
  sub_1000063D0((uint64_t)v14, &qword_100156930);
LABEL_8:
  uint64_t result = EdgeInsets.init(_all:)();
  uint64_t v47 = v61;
  *(void *)a5 = v62;
  *(void *)(a5 + 8) = v47;
  uint64_t v48 = v59;
  *(void *)(a5 + 16) = v60;
  *(void *)(a5 + 24) = v48;
  *(unsigned char *)(a5 + 32) = v57;
  *(void *)(a5 + 40) = v34;
  *(void *)(a5 + 48) = v36;
  *(void *)(a5 + 56) = v38;
  *(void *)(a5 + 64) = v40;
  *(unsigned char *)(a5 + 72) = 0;
  *(unsigned char *)(a5 + 80) = v56;
  *(void *)(a5 + 88) = v49;
  *(void *)(a5 + 96) = v50;
  *(void *)(a5 + 104) = v51;
  *(void *)(a5 + 112) = v52;
  *(unsigned char *)(a5 + 120) = 0;
  return result;
}

uint64_t sub_10004D858@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v158 = a3;
  uint64_t v5 = sub_1000060EC((uint64_t *)&unk_100158FC0);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v138 = (char *)&v132 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v139 = (char *)&v132 - v8;
  uint64_t v9 = sub_1000060EC(&qword_100158948);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  long long v141 = (char *)&v132 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v155 = (uint64_t)&v132 - v13;
  __chkstk_darwin(v12);
  uint64_t v157 = (uint64_t)&v132 - v14;
  uint64_t v15 = sub_1000060EC(&qword_100157818);
  __chkstk_darwin(v15 - 8);
  uint64_t v135 = (char *)&v132 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for Date();
  uint64_t v136 = *(void *)(v17 - 8);
  uint64_t v137 = v17;
  __chkstk_darwin(v17);
  uint64_t v134 = (char *)&v132 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1000060EC(&qword_100158950);
  uint64_t v20 = __chkstk_darwin(v19 - 8);
  uint64_t v133 = (uint64_t)&v132 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  long long v143 = (char *)&v132 - v22;
  uint64_t v23 = sub_1000060EC(&qword_100158958);
  __chkstk_darwin(v23 - 8);
  uint64_t v153 = (int *)((char *)&v132 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v25 = sub_1000060EC(&qword_100158960);
  uint64_t v26 = __chkstk_darwin(v25 - 8);
  uint64_t v156 = (uint64_t)&v132 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v142 = (uint64_t)&v132 - v29;
  __chkstk_darwin(v28);
  uint64_t v160 = (uint64_t)&v132 - v30;
  uint64_t v140 = type metadata accessor for TrackPageView();
  uint64_t v152 = *(void *)(v140 - 8);
  uint64_t v151 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v152 + 64);
  __chkstk_darwin(v140);
  uint64_t v150 = (uint64_t)&v132 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = type metadata accessor for CoordinateSpace();
  uint64_t v148 = *(void *)(v32 - 8);
  uint64_t v149 = v32;
  __chkstk_darwin(v32);
  uint64_t v147 = (char *)&v132 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_1000060EC(&qword_100158968);
  __chkstk_darwin(v34 - 8);
  uint64_t v36 = (char *)&v132 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_1000060EC(&qword_100158970);
  __chkstk_darwin(v37 - 8);
  uint64_t v39 = (char *)&v132 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_1000060EC(&qword_100158978);
  uint64_t v41 = v40 - 8;
  __chkstk_darwin(v40);
  uint64_t v43 = (char *)&v132 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_1000060EC(&qword_100158980);
  uint64_t v45 = v44 - 8;
  __chkstk_darwin(v44);
  long long v144 = (char *)&v132 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v146 = sub_1000060EC(&qword_100158988) - 8;
  uint64_t v47 = __chkstk_darwin(v146);
  uint64_t v154 = (uint64_t)&v132 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = __chkstk_darwin(v47);
  uint64_t v145 = (uint64_t)&v132 - v50;
  __chkstk_darwin(v49);
  uint64_t v161 = (uint64_t)&v132 - v51;
  *(void *)uint64_t v36 = static HorizontalAlignment.center.getter();
  *((void *)v36 + 1) = 0;
  v36[16] = 0;
  uint64_t v52 = (uint64_t)&v36[*(int *)(sub_1000060EC(&qword_100158990) + 44)];
  uint64_t v159 = a2;
  sub_10004E9B0(a1, a2, v52);
  uint64_t v53 = static Alignment.center.getter();
  sub_100042934(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v39, 0.0, 1, 0.0, 1, v53, v54, (uint64_t)&qword_100158968, (void (*)(uint64_t, uint64_t, uint64_t))sub_100009C94, &qword_100158970);
  sub_1000063D0((uint64_t)v36, &qword_100158968);
  uint64_t v55 = static Alignment.center.getter();
  uint64_t v57 = v56;
  uint64_t v58 = (uint64_t)&v43[*(int *)(v41 + 44)];
  sub_10004F7E4(a1, a2, v58);
  uint64_t v59 = (uint64_t *)(v58 + *(int *)(sub_1000060EC(&qword_100158998) + 36));
  *uint64_t v59 = v55;
  v59[1] = v57;
  sub_100009C30((uint64_t)v39, (uint64_t)v43, &qword_100158970);
  uint64_t v60 = v147;
  uint64_t v61 = v148;
  uint64_t v62 = v149;
  (*(void (**)(char *, void, uint64_t))(v148 + 104))(v147, enum case for CoordinateSpace.local(_:), v149);
  uint64_t v63 = *(int *)(v45 + 44);
  uint64_t v64 = (uint64_t)v144;
  long long v65 = &v144[v63];
  uint64_t v66 = sub_1000060EC(&qword_1001589A0);
  (*(void (**)(char *, char *, uint64_t))(v61 + 16))(&v65[*(int *)(v66 + 36)], v60, v62);
  *(void *)long long v65 = &type metadata for BackgroundBlurHeightPreferenceKey;
  uint64_t v67 = (void (**)(double *@<X8>, double@<D2>, double@<D3>))&v65[*(int *)(v66 + 40)];
  *uint64_t v67 = sub_10004FA84;
  v67[1] = 0;
  sub_100009C94((uint64_t)v43, v64, &qword_100158978);
  uint64_t v68 = v60;
  uint64_t v69 = a1;
  (*(void (**)(char *, uint64_t))(v61 + 8))(v68, v62);
  sub_1000063D0((uint64_t)v43, &qword_100158978);
  uint64_t v70 = v150;
  sub_100058C74(a1, v150, (uint64_t (*)(void))type metadata accessor for TrackPageView);
  unint64_t v71 = (*(unsigned __int8 *)(v152 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v152 + 80);
  uint64_t v72 = swift_allocObject();
  sub_1000583D4(v70, v72 + v71, (uint64_t (*)(void))type metadata accessor for TrackPageView);
  uint64_t v73 = v145;
  sub_100009C94(v64, v145, &qword_100158980);
  uint64_t v74 = (uint64_t (**)(uint64_t))(v73 + *(int *)(v146 + 44));
  *uint64_t v74 = sub_1000577CC;
  v74[1] = (uint64_t (*)(uint64_t))v72;
  uint64_t v75 = (uint64_t)v153;
  sub_1000063D0(v64, &qword_100158980);
  uint64_t v76 = v159;
  sub_100009C30(v73, v161, &qword_100158988);
  uint64_t v77 = sub_100010740(v76, v76[3]);
  uint64_t v78 = (int *)type metadata accessor for TrackPageMetadata();
  sub_100009C94((uint64_t)v77 + v78[7], v75, &qword_100158958);
  uint64_t v79 = type metadata accessor for AnyArtist();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v79 - 8) + 48))(v75, 1, v79) == 1)
  {
    sub_1000063D0(v75, &qword_100158958);
    long long v170 = 0u;
    long long v171 = 0u;
    uint64_t v172 = 0;
  }
  else
  {
    *((void *)&v171 + 1) = v79;
    uint64_t v172 = &off_10014B7A8;
    uint64_t v80 = sub_100057938((uint64_t *)&v170);
    sub_1000583D4(v75, (uint64_t)v80, (uint64_t (*)(void))type metadata accessor for AnyArtist);
  }
  uint64_t v81 = v142;
  uint64_t v82 = (uint64_t)v143;
  sub_10004AF00((uint64_t)&v170, v142);
  sub_1000063D0((uint64_t)&v170, &qword_1001589A8);
  sub_100009C30(v81, v160, &qword_100158960);
  long long v83 = sub_100010740(v76, v76[3]);
  sub_100009C94((uint64_t)v83 + v78[8], v82, &qword_100158950);
  uint64_t v84 = type metadata accessor for AnyAlbum();
  long long v85 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v84 - 8) + 48);
  if (v85(v82, 1, v84) == 1)
  {
    sub_1000063D0(v82, &qword_100158950);
    uint64_t v87 = (uint64_t)v138;
    uint64_t v86 = (uint64_t)v139;
    uint64_t v88 = v140;
LABEL_20:
    sub_1000577E4(v167);
    sub_100009C30((uint64_t)v167, (uint64_t)v169, &qword_1001589B0);
    goto LABEL_21;
  }
  uint64_t v151 = v85;
  uint64_t v152 = v69;
  uint64_t v153 = v78;
  long long v89 = (void *)(v82 + *(int *)(v84 + 20));
  uint64_t v90 = v89[3];
  uint64_t v91 = v89[4];
  sub_100010740(v89, v90);
  uint64_t v92 = (*(uint64_t (**)(uint64_t, uint64_t))(v91 + 64))(v90, v91);
  sub_1000581B4(v82, (uint64_t (*)(void))type metadata accessor for AnyAlbum);
  uint64_t v93 = v76[3];
  uint64_t v94 = v76[10];
  sub_100010740(v76, v93);
  uint64_t v95 = (uint64_t)v135;
  (*(void (**)(uint64_t, uint64_t))(v94 + 8))(v93, v94);
  uint64_t v97 = v136;
  uint64_t v96 = v137;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v136 + 48))(v95, 1, v137) == 1)
  {
    swift_release();
    sub_1000063D0(v95, &qword_100157818);
    uint64_t v69 = v152;
    uint64_t v87 = (uint64_t)v138;
    uint64_t v86 = (uint64_t)v139;
LABEL_19:
    uint64_t v88 = v140;
    uint64_t v78 = v153;
    goto LABEL_20;
  }
  uint64_t v150 = v92;
  long long v98 = v134;
  (*(void (**)(char *, uint64_t, uint64_t))(v97 + 32))(v134, v95, v96);
  uint64_t v99 = v97;
  uint64_t v100 = v76[3];
  uint64_t v101 = v76[10];
  sub_100010740(v76, v100);
  long long v102 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v101 + 72))(v100, v101);
  if (!v102)
  {
    (*(void (**)(char *, uint64_t))(v99 + 8))(v98, v96);
LABEL_18:
    swift_release();
    uint64_t v69 = v152;
    uint64_t v87 = (uint64_t)v138;
    uint64_t v86 = (uint64_t)v139;
    uint64_t v76 = v159;
    goto LABEL_19;
  }
  long long v103 = v102;
  [v102 coordinate];
  if (v104 == 0.0)
  {
    [v103 coordinate];
    BOOL v106 = v105 == 0.0;
  }
  else
  {
    BOOL v106 = 0;
  }
  uint64_t v107 = (uint64_t)v134;
  uint64_t v108 = v150;
  [v103 coordinate];
  if (!CLLocationCoordinate2DIsValid(v173) || v106)
  {
    (*(void (**)(uint64_t, uint64_t))(v136 + 8))(v107, v137);

    goto LABEL_18;
  }
  id v109 = sub_100010740(v159, v159[3]);
  uint64_t v110 = v133;
  sub_100009C94((uint64_t)v109 + v153[8], v133, &qword_100158950);
  if (v151(v110, 1, v84) == 1)
  {
    sub_1000063D0(v110, &qword_100158950);
    uint64_t v87 = (uint64_t)v138;
    uint64_t v86 = (uint64_t)v139;
LABEL_26:
    uint64_t v131 = static Color.primary.getter();
    goto LABEL_27;
  }
  uint64_t v128 = (void *)(v110 + *(int *)(v84 + 20));
  uint64_t v129 = v128[3];
  uint64_t v130 = v128[4];
  sub_100010740(v128, v129);
  uint64_t v131 = (*(uint64_t (**)(uint64_t, uint64_t))(v130 + 16))(v129, v130);
  sub_1000581B4(v110, (uint64_t (*)(void))type metadata accessor for AnyAlbum);
  uint64_t v87 = (uint64_t)v138;
  uint64_t v86 = (uint64_t)v139;
  if (!v131) {
    goto LABEL_26;
  }
LABEL_27:
  uint64_t v69 = v152;
  uint64_t v76 = v159;
  sub_10004D2D8(v103, v108, v131, v107, (uint64_t)v167);
  swift_release();

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v136 + 8))(v107, v137);
  v162[4] = v167[4];
  v162[5] = v167[5];
  v163[0] = v168[0];
  *(_OWORD *)((char *)v163 + 9) = *(_OWORD *)((char *)v168 + 9);
  v162[0] = v167[0];
  v162[1] = v167[1];
  v162[2] = v167[2];
  v162[3] = v167[3];
  nullsub_1(v162);
  sub_100009C30((uint64_t)v162, (uint64_t)v169, &qword_1001589B0);
  uint64_t v88 = v140;
  uint64_t v78 = v153;
LABEL_21:
  uint64_t v111 = *(void *)(v69 + *(int *)(v88 + 44));
  char v112 = sub_1000AE5C0();
  sub_10004CA28(v112 & 1, v76, v167);
  swift_getKeyPath();
  *(void *)&v162[0] = v111;
  sub_100057F30(&qword_100158818, (void (*)(uint64_t))type metadata accessor for TrackPageViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  int v113 = *(unsigned __int8 *)(v111 + 584);
  id v114 = [*(id *)((char *)sub_100010740(v76, v76[3]) + v78[5]) webURL];
  if (v114)
  {
    uint64_t v115 = v114;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v116 = type metadata accessor for URL();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v116 - 8) + 56))(v87, 0, 1, v116);
  }
  else
  {
    uint64_t v117 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v117 - 8) + 56))(v87, 1, 1, v117);
  }
  uint64_t v118 = (uint64_t)v141;
  sub_100009C30(v87, v86, (uint64_t *)&unk_100158FC0);
  uint64_t v119 = v155;
  sub_10004BEAC(v113, v86, v155);
  sub_1000063D0(v86, (uint64_t *)&unk_100158FC0);
  uint64_t v120 = v157;
  sub_100009C30(v119, v157, &qword_100158948);
  uint64_t v121 = v154;
  sub_100009C94(v161, v154, &qword_100158988);
  uint64_t v122 = v160;
  uint64_t v123 = v156;
  sub_100009C94(v160, v156, &qword_100158960);
  sub_100009C30((uint64_t)v169, (uint64_t)v164, &qword_1001589B0);
  sub_100009C94((uint64_t)v167, (uint64_t)v162, &qword_1001589B8);
  sub_100009C94(v120, v118, &qword_100158948);
  uint64_t v124 = v158;
  sub_100009C94(v121, v158, &qword_100158988);
  uint64_t v125 = (int *)sub_1000060EC(&qword_1001589C0);
  sub_100009C94(v123, v124 + v125[12], &qword_100158960);
  uint64_t v126 = v124 + v125[16];
  sub_100009C30((uint64_t)v164, (uint64_t)v165, &qword_1001589B0);
  sub_100009C30((uint64_t)v165, v126, &qword_1001589B0);
  sub_100009C94((uint64_t)v162, v124 + v125[20], &qword_1001589B8);
  sub_100009C94(v118, v124 + v125[24], &qword_100158948);
  sub_10005786C((uint64_t)v165, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_100057808);
  sub_1000063D0(v120, &qword_100158948);
  sub_1000063D0((uint64_t)v167, &qword_1001589B8);
  sub_1000063D0(v122, &qword_100158960);
  sub_1000063D0(v161, &qword_100158988);
  sub_1000063D0(v118, &qword_100158948);
  sub_1000063D0((uint64_t)v162, &qword_1001589B8);
  sub_100009C30((uint64_t)v164, (uint64_t)v166, &qword_1001589B0);
  sub_10005786C((uint64_t)v166, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1000578D8);
  sub_1000063D0(v123, &qword_100158960);
  return sub_1000063D0(v121, &qword_100158988);
}

uint64_t sub_10004E9B0@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v51 = a2;
  uint64_t v59 = a3;
  uint64_t v5 = sub_1000060EC(&qword_100158A78);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v58 = (uint64_t)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v57 = (uint64_t)&v49 - v8;
  uint64_t v9 = type metadata accessor for TrackPageView();
  uint64_t v55 = *(void *)(v9 - 8);
  uint64_t v56 = v9 - 8;
  uint64_t v52 = *(void *)(v55 + 64);
  __chkstk_darwin(v9 - 8);
  uint64_t v50 = (uint64_t)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for CoordinateSpace();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1000060EC(&qword_100158A80);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1000060EC(&qword_100158A88);
  uint64_t v19 = v18 - 8;
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v49 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1000060EC(&qword_100158A90);
  uint64_t v23 = v22 - 8;
  __chkstk_darwin(v22);
  uint64_t v49 = (uint64_t)&v49 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_1000060EC(&qword_100158A98) - 8;
  uint64_t v25 = __chkstk_darwin(v54);
  uint64_t v27 = (char *)&v49 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  uint64_t v53 = (uint64_t)&v49 - v28;
  *(void *)uint64_t v17 = static HorizontalAlignment.center.getter();
  *((void *)v17 + 1) = 0;
  v17[16] = 0;
  uint64_t v29 = sub_1000060EC(&qword_100158AA0);
  sub_10004F04C(a1, a2, (uint64_t)&v17[*(int *)(v29 + 44)]);
  (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, enum case for CoordinateSpace.local(_:), v11);
  uint64_t v30 = &v21[*(int *)(v19 + 44)];
  uint64_t v31 = sub_1000060EC(&qword_100158AA8);
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(&v30[*(int *)(v31 + 36)], v14, v11);
  *(void *)uint64_t v30 = &type metadata for NavigationBarTitleOffsetPreferenceKey;
  uint64_t v32 = (void (**)(double *@<X8>, double@<D2>, double@<D3>))&v30[*(int *)(v31 + 40)];
  *uint64_t v32 = sub_100058E3C;
  v32[1] = 0;
  sub_100009C94((uint64_t)v17, (uint64_t)v21, &qword_100158A80);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  sub_1000063D0((uint64_t)v17, &qword_100158A80);
  uint64_t v33 = a1;
  uint64_t v34 = a1;
  uint64_t v35 = v50;
  sub_100058C74(v34, v50, (uint64_t (*)(void))type metadata accessor for TrackPageView);
  unint64_t v36 = (*(unsigned __int8 *)(v55 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80);
  uint64_t v37 = swift_allocObject();
  sub_1000583D4(v35, v37 + v36, (uint64_t (*)(void))type metadata accessor for TrackPageView);
  uint64_t v38 = v49;
  sub_100009C94((uint64_t)v21, v49, &qword_100158A88);
  uint64_t v39 = (uint64_t (**)(uint64_t))(v38 + *(int *)(v23 + 44));
  *uint64_t v39 = sub_100057B04;
  v39[1] = (uint64_t (*)(uint64_t))v37;
  sub_1000063D0((uint64_t)v21, &qword_100158A88);
  uint64_t v40 = *(void *)(v33 + *(int *)(v56 + 52));
  swift_getKeyPath();
  v63[0] = v40;
  sub_100057F30(&qword_100158818, (void (*)(uint64_t))type metadata accessor for TrackPageViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  sub_100009C94(v38, (uint64_t)v27, &qword_100158A90);
  uint64_t v41 = &v27[*(int *)(v54 + 44)];
  long long v42 = v61;
  *(_OWORD *)uint64_t v41 = v60;
  *((_OWORD *)v41 + 1) = v42;
  *((_OWORD *)v41 + 2) = v62;
  sub_1000063D0(v38, &qword_100158A90);
  uint64_t v43 = v53;
  sub_100009C30((uint64_t)v27, v53, &qword_100158A98);
  sub_1000AE3BC(v63);
  uint64_t v44 = v57;
  sub_100049898(v51, v33, v63, v57);
  sub_100057684((uint64_t)v63);
  sub_100009C94(v43, (uint64_t)v27, &qword_100158A98);
  uint64_t v45 = v58;
  sub_100009C94(v44, v58, &qword_100158A78);
  uint64_t v46 = v59;
  sub_100009C94((uint64_t)v27, v59, &qword_100158A98);
  uint64_t v47 = sub_1000060EC(&qword_100158AB0);
  sub_100009C94(v45, v46 + *(int *)(v47 + 48), &qword_100158A78);
  sub_1000063D0(v44, &qword_100158A78);
  sub_1000063D0(v43, &qword_100158A98);
  sub_1000063D0(v45, &qword_100158A78);
  return sub_1000063D0((uint64_t)v27, &qword_100158A98);
}

uint64_t sub_10004F04C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v60 = a3;
  uint64_t v5 = sub_1000060EC(&qword_100158B30);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v49 - v9;
  uint64_t v11 = sub_1000060EC(&qword_100158B38);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v58 = (uint64_t)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v49 - v14;
  uint64_t v16 = *(int *)(type metadata accessor for TrackPageView() + 44);
  uint64_t v17 = *(void *)(a1 + v16);
  swift_getKeyPath();
  *(void *)&long long v61 = v17;
  sub_100057F30(&qword_100158818, (void (*)(uint64_t))type metadata accessor for TrackPageViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v18 = swift_retain();
  uint64_t v57 = v15;
  sub_1000469F8(v18, (uint64_t)v15);
  swift_release();
  uint64_t v19 = a2[3];
  uint64_t v20 = a2[11];
  uint64_t v21 = sub_100010740(a2, v19);
  *((void *)&v62 + 1) = v19;
  *(void *)&long long v63 = v20;
  uint64_t v22 = sub_100057938((uint64_t *)&v61);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(v22, v21, v19);
  sub_100047FBC(&v61, (uint64_t)v8);
  _s16MusicRecognition11AnyPlaylistVwxx_0((uint64_t)&v61);
  uint64_t v59 = v8;
  uint64_t v56 = v10;
  sub_100009C30((uint64_t)v8, (uint64_t)v10, &qword_100158B30);
  uint64_t v23 = *(void *)(a1 + v16);
  swift_getKeyPath();
  *(void *)&long long v61 = v23;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  sub_100009C94(v23 + 320, (uint64_t)&v61, &qword_100158B40);
  uint64_t v24 = *((void *)&v62 + 1);
  if (*((void *)&v62 + 1))
  {
    uint64_t v25 = sub_100010740(&v61, *((uint64_t *)&v62 + 1));
    uint64_t v26 = *(void *)(v24 - 8);
    __chkstk_darwin(v25);
    uint64_t v28 = (char *)&v49 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v26 + 16))(v28);
    sub_1000063D0((uint64_t)&v61, &qword_100158B40);
    id v29 = [*(id *)&v28[*(int *)(type metadata accessor for TrackPageMetadata() + 20)] shazamCount];
    (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v24);
  }
  else
  {
    sub_1000063D0((uint64_t)&v61, &qword_100158B40);
    id v29 = 0;
  }
  uint64_t v30 = *(void *)(a1 + v16);
  swift_getKeyPath();
  *(void *)&long long v61 = v30;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  sub_100009C94(v30 + 320, (uint64_t)&v61, &qword_100158B40);
  uint64_t v31 = *((void *)&v62 + 1);
  if (*((void *)&v62 + 1))
  {
    uint64_t v32 = sub_100010740(&v61, *((uint64_t *)&v62 + 1));
    uint64_t v33 = *(void *)(v31 - 8);
    __chkstk_darwin(v32);
    uint64_t v35 = (char *)&v49 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v33 + 16))(v35);
    sub_1000063D0((uint64_t)&v61, &qword_100158B40);
    [*(id *)&v35[*(int *)(type metadata accessor for TrackPageMetadata() + 20)] shazamCount];
    (*(void (**)(char *, uint64_t))(v33 + 8))(v35, v31);
  }
  else
  {
    sub_1000063D0((uint64_t)&v61, &qword_100158B40);
  }
  sub_100047D20((uint64_t)v29 > 0, (uint64_t)&v61);
  long long v55 = v61;
  long long v54 = v62;
  long long v53 = v63;
  long long v52 = v64;
  long long v51 = v65;
  uint64_t v50 = v66;
  uint64_t v49 = v67;
  char v36 = v68;
  char v37 = v69;
  uint64_t v38 = (uint64_t)v57;
  uint64_t v39 = v58;
  sub_100009C94((uint64_t)v57, v58, &qword_100158B38);
  uint64_t v40 = (uint64_t)v56;
  uint64_t v41 = (uint64_t)v59;
  sub_100009C94((uint64_t)v56, (uint64_t)v59, &qword_100158B30);
  uint64_t v42 = v60;
  sub_100009C94(v39, v60, &qword_100158B38);
  uint64_t v43 = sub_1000060EC(&qword_100158B48);
  sub_100009C94(v41, v42 + *(int *)(v43 + 48), &qword_100158B30);
  uint64_t v44 = v42 + *(int *)(v43 + 64);
  long long v45 = v54;
  *(_OWORD *)uint64_t v44 = v55;
  *(_OWORD *)(v44 + 16) = v45;
  long long v46 = v52;
  *(_OWORD *)(v44 + 32) = v53;
  *(_OWORD *)(v44 + 48) = v46;
  *(_OWORD *)(v44 + 64) = v51;
  uint64_t v47 = v49;
  *(void *)(v44 + 80) = v50;
  *(void *)(v44 + 88) = v47;
  *(unsigned char *)(v44 + 96) = v36;
  *(unsigned char *)(v44 + 97) = v37;
  sub_1000063D0(v40, &qword_100158B30);
  sub_1000063D0(v38, &qword_100158B38);
  sub_1000063D0(v41, &qword_100158B30);
  return sub_1000063D0(v39, &qword_100158B38);
}

uint64_t sub_10004F6FC()
{
  return swift_release();
}

uint64_t sub_10004F7E4@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1000060EC((uint64_t *)&unk_100158FC0);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)v24 - v10;
  uint64_t v12 = sub_1000060EC(&qword_100158A30);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100010740(a2, a2[3]);
  id v16 = [*(id *)((char *)v15 + *(int *)(type metadata accessor for TrackPageMetadata() + 20)) artworkURL];
  if (v16)
  {
    uint64_t v17 = v16;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v18 = type metadata accessor for URL();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v9, 0, 1, v18);
  }
  else
  {
    uint64_t v19 = type metadata accessor for URL();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v9, 1, 1, v19);
  }
  sub_100009C30((uint64_t)v9, (uint64_t)v11, (uint64_t *)&unk_100158FC0);
  sub_100047118((uint64_t)v11, (uint64_t)v14);
  sub_1000063D0((uint64_t)v11, (uint64_t *)&unk_100158FC0);
  uint64_t v20 = *(void *)(a1 + *(int *)(type metadata accessor for TrackPageView() + 44));
  swift_getKeyPath();
  v24[1] = v20;
  sub_100057F30(&qword_100158818, (void (*)(uint64_t))type metadata accessor for TrackPageViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v21 = *(void *)(v20 + 200);
  sub_100009C94((uint64_t)v14, a3, &qword_100158A30);
  uint64_t v22 = (void *)(a3 + *(int *)(sub_1000060EC(&qword_100158A38) + 36));
  *uint64_t v22 = 0;
  v22[1] = v21;
  return sub_1000063D0((uint64_t)v14, &qword_100158A30);
}

void sub_10004FA84(double *a1@<X8>, double a2@<D2>, double a3@<D3>)
{
  *a1 = a2;
  a1[1] = a3;
}

uint64_t sub_10004FA8C()
{
  return swift_release();
}

uint64_t sub_10004FB74(uint64_t a1, double a2)
{
  uint64_t v4 = type metadata accessor for TrackPageView();
  uint64_t v5 = *(void *)(a1 + *(int *)(v4 + 44));
  swift_getKeyPath();
  sub_100057F30(&qword_100158818, (void (*)(uint64_t))type metadata accessor for TrackPageViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  double v7 = -*(double *)(v5 + 160);
  uint64_t v8 = *(void *)(a1 + *(int *)(v4 + 52) + 8);
  if (v7 > a2 != *(unsigned char *)(v8 + 16))
  {
    sub_1000060EC(&qword_1001585A0);
    sub_100006480(&qword_1001585A8, &qword_1001585A0);
    ObservableObject<>.objectWillChange.getter();
    ObservableObjectPublisher.send()();
    uint64_t result = swift_release();
  }
  *(unsigned char *)(v8 + 16) = v7 > a2;
  return result;
}

uint64_t sub_10004FCC4@<X0>(void *a1@<X8>)
{
  uint64_t result = ScrollGeometry.contentOffset.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_10004FCF0()
{
  return swift_release();
}

uint64_t sub_10004FE1C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TrackPageView();
  uint64_t v3 = (void (**)(void))(a1 + *(int *)(v2 + 56));
  if (*v3) {
    (*v3)();
  }
  uint64_t v4 = *(void *)(a1 + *(int *)(v2 + 44));
  int v5 = *(unsigned __int8 *)(v4 + 256);
  swift_getKeyPath();
  sub_100057F30(&qword_100158818, (void (*)(uint64_t))type metadata accessor for TrackPageViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (*(unsigned char *)(v4 + 24)) {
    int v6 = 0x10000;
  }
  else {
    int v6 = 0;
  }
  return sub_1000D6E40(v6 | (v5 << 8) | 0x10u, 0xD000000000000028, 0x8000000100117950);
}

uint64_t sub_10004FF20@<X0>(void *a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v201 = a2;
  uint64_t v188 = a3;
  uint64_t v187 = sub_1000060EC(&qword_100158848);
  __chkstk_darwin(v187);
  uint64_t v186 = (char *)&v161 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v173 = sub_1000060EC(&qword_100158850);
  uint64_t v162 = *(void *)(v173 - 8);
  __chkstk_darwin(v173);
  uint64_t v161 = (char *)&v161 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v174 = sub_1000060EC(&qword_100158858);
  uint64_t v163 = *(void *)(v174 - 8);
  __chkstk_darwin(v174);
  long long v170 = (char *)&v161 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000060EC(&qword_100158860);
  __chkstk_darwin(v7 - 8);
  uint64_t v178 = (uint64_t)&v161 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000060EC(&qword_100158868);
  uint64_t v166 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  unint64_t v165 = (char *)&v161 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v171 = sub_1000060EC(&qword_100158870);
  uint64_t v168 = *(void *)(v171 - 8);
  __chkstk_darwin(v171);
  uint64_t v167 = (char *)&v161 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000060EC(&qword_100158878);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v191 = (char *)&v161 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v185 = (char *)&v161 - v15;
  uint64_t v190 = (char **)sub_1000060EC(&qword_100158880);
  uint64_t v181 = (uint64_t)*(v190 - 1);
  __chkstk_darwin(v190);
  uint64_t v180 = (char *)&v161 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1000060EC((uint64_t *)&unk_100158FC0);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  uint64_t v177 = (uint64_t)&v161 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v18);
  unint64_t v182 = (char *)&v161 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v183 = (char *)&v161 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v175 = (char *)&v161 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v176 = (char *)&v161 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v194 = (char *)&v161 - v29;
  __chkstk_darwin(v28);
  uint64_t v196 = (char *)&v161 - v30;
  uint64_t v31 = type metadata accessor for URL();
  uint64_t v199 = *(void *)(v31 - 8);
  uint64_t v32 = __chkstk_darwin(v31);
  uint64_t v169 = (char *)&v161 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __chkstk_darwin(v32);
  uint64_t v195 = (char *)&v161 - v35;
  uint64_t v36 = __chkstk_darwin(v34);
  uint64_t v164 = (char *)&v161 - v37;
  __chkstk_darwin(v36);
  uint64_t v179 = (char *)&v161 - v38;
  uint64_t v39 = sub_1000060EC(&qword_100158888);
  uint64_t v40 = __chkstk_darwin(v39 - 8);
  uint64_t v189 = (char *)&v161 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v40);
  uint64_t v200 = (uint64_t)&v161 - v42;
  uint64_t v43 = type metadata accessor for ToolbarItemPlacement();
  __chkstk_darwin(v43 - 8);
  long long v45 = (char *)&v161 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = sub_1000060EC(&qword_100158890);
  uint64_t v47 = *(void *)(v46 - 8);
  __chkstk_darwin(v46);
  uint64_t v49 = (char *)&v161 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = sub_1000060EC(&qword_100158898);
  uint64_t v51 = __chkstk_darwin(v50 - 8);
  long long v53 = (char *)&v161 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v51);
  long long v55 = (char *)&v161 - v54;
  uint64_t v56 = a1[3];
  uint64_t v198 = a1;
  sub_100010740(a1, v56);
  uint64_t v57 = sub_1000C348C();
  uint64_t v197 = v45;
  uint64_t v172 = v9;
  if (v58)
  {
    uint64_t v59 = (char *)v57;
    uint64_t v60 = v58;
    uint64_t v61 = static ToolbarItemPlacement.principal.getter();
    __chkstk_darwin(v61);
    uint64_t v193 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v31;
    *(&v161 - 4) = v59;
    *(&v161 - 3) = v60;
    *(&v161 - 2) = v201;
    sub_1000060EC(&qword_100158900);
    sub_100057298();
    ToolbarItemGroup.init(placement:content:)();
    swift_bridgeObjectRelease();
    uint64_t v62 = sub_100006480(&qword_1001588A8, &qword_100158890);
    static ToolbarContentBuilder.buildBlock<A>(_:)();
    uint64_t v63 = sub_1000060EC(&qword_1001588A0);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v63 - 8) + 56))(v53, 0, 1, v63);
    v203 = (char **)v46;
    uint64_t v204 = v62;
    swift_getOpaqueTypeConformance2();
    uint64_t v31 = (uint64_t)v193;
    static ToolbarContentBuilder.buildIf<A>(_:)();
    sub_1000063D0((uint64_t)v53, &qword_100158898);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v49, v46);
  }
  else
  {
    uint64_t v64 = sub_1000060EC(&qword_1001588A0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v64 - 8) + 56))(v53, 1, 1, v64);
    uint64_t v65 = sub_100006480(&qword_1001588A8, &qword_100158890);
    v203 = (char **)v46;
    uint64_t v204 = v65;
    swift_getOpaqueTypeConformance2();
    static ToolbarContentBuilder.buildIf<A>(_:)();
    sub_1000063D0((uint64_t)v53, &qword_100158898);
  }
  uint64_t v66 = v198;
  uint64_t v67 = v199;
  uint64_t v68 = (uint64_t)v55;
  uint64_t v69 = (uint64_t)v196;
  uint64_t v70 = (uint64_t)v194;
  unint64_t v71 = sub_100010740(v198, v198[3]);
  uint64_t v196 = (char *)type metadata accessor for TrackPageMetadata();
  id v72 = [*(id *)((char *)v71 + *((int *)v196 + 5)) webURL];
  if (v72)
  {
    uint64_t v73 = v72;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v74 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v67 + 56);
    uint64_t v75 = v70;
    uint64_t v76 = 0;
  }
  else
  {
    uint64_t v74 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v67 + 56);
    uint64_t v75 = v70;
    uint64_t v76 = 1;
  }
  v192 = v74;
  v74(v75, v76, 1, v31);
  uint64_t v77 = v201;
  sub_100009C30(v70, v69, (uint64_t *)&unk_100158FC0);
  uint64_t v193 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v67 + 48);
  uint64_t v194 = (char *)(v67 + 48);
  int v78 = v193(v69, 1, v31);
  uint64_t v184 = v68;
  if (v78 == 1)
  {
    sub_1000063D0(v69, (uint64_t *)&unk_100158FC0);
    uint64_t v79 = sub_1000060EC(&qword_1001588B0);
    uint64_t v80 = (uint64_t)v189;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v79 - 8) + 56))(v189, 1, 1, v79);
    uint64_t v81 = sub_100006480(&qword_1001588B8, &qword_100158880);
    v203 = v190;
    uint64_t v204 = v81;
    swift_getOpaqueTypeConformance2();
    static ToolbarContentBuilder.buildIf<A>(_:)();
    sub_1000063D0(v80, &qword_100158888);
  }
  else
  {
    uint64_t v82 = v179;
    (*(void (**)(char *, uint64_t, uint64_t))(v67 + 32))(v179, v69, v31);
    uint64_t v83 = static ToolbarItemPlacement.topBarTrailing.getter();
    __chkstk_darwin(v83);
    *(&v161 - 2) = v82;
    *(&v161 - 1) = v77;
    type metadata accessor for ToolbarShareButton();
    sub_100057F30(&qword_1001588F8, (void (*)(uint64_t))type metadata accessor for ToolbarShareButton);
    uint64_t v84 = v180;
    ToolbarItem<>.init(placement:content:)();
    uint64_t v85 = sub_100006480(&qword_1001588B8, &qword_100158880);
    uint64_t v87 = (uint64_t)v189;
    uint64_t v86 = v190;
    static ToolbarContentBuilder.buildBlock<A>(_:)();
    uint64_t v88 = sub_1000060EC(&qword_1001588B0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v88 - 8) + 56))(v87, 0, 1, v88);
    v203 = v86;
    uint64_t v204 = v85;
    swift_getOpaqueTypeConformance2();
    static ToolbarContentBuilder.buildIf<A>(_:)();
    sub_1000063D0(v87, &qword_100158888);
    (*(void (**)(char *, char **))(v181 + 8))(v84, v86);
    long long v89 = v82;
    uint64_t v68 = v184;
    (*(void (**)(char *, uint64_t))(v67 + 8))(v89, v31);
  }
  uint64_t v90 = *(int *)(type metadata accessor for TrackPageView() + 44);
  uint64_t v91 = *(char ***)&v77[v90];
  swift_getKeyPath();
  v203 = v91;
  sub_100057F30(&qword_100158818, (void (*)(uint64_t))type metadata accessor for TrackPageViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (((_BYTE)v91[3] & 1) == 0)
  {
    uint64_t v92 = *(void *)&v201[v90];
    swift_getKeyPath();
    uint64_t v202 = v92;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    swift_beginAccess();
    sub_100009C94(v92 + 216, (uint64_t)&v203, &qword_1001588C0);
    uint64_t v93 = v205;
    if (!v205)
    {
      id v109 = &qword_1001588C0;
      uint64_t v110 = &v203;
LABEL_19:
      sub_1000063D0((uint64_t)v110, v109);
      goto LABEL_20;
    }
    uint64_t v94 = sub_100010740(&v203, v205);
    uint64_t v190 = &v161;
    uint64_t v95 = v68;
    uint64_t v96 = *(void *)(v93 - 8);
    __chkstk_darwin(v94);
    long long v98 = (char *)&v161 - ((v97 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v96 + 16))(v98);
    sub_1000063D0((uint64_t)&v203, &qword_1001588C0);
    uint64_t v99 = *(void *)&v98[*(int *)(type metadata accessor for StreamingServicesProvider() + 20)];
    uint64_t v100 = v31;
    uint64_t v101 = *(void (**)(char *, uint64_t))(v96 + 8);
    swift_bridgeObjectRetain();
    v101(v98, v93);
    uint64_t v68 = v95;
    uint64_t v66 = v198;
    uint64_t v31 = v100;
    uint64_t v67 = v199;
    uint64_t v102 = *(void *)(v99 + 16);
    swift_bridgeObjectRelease();
    if (v102)
    {
      long long v103 = sub_100010740(v66, v66[3]);
      id v104 = [*(id *)((char *)v103 + *((int *)v196 + 5)) webURL];
      if (v104)
      {
        double v105 = v104;
        uint64_t v106 = (uint64_t)v175;
        static URL._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v107 = 0;
        uint64_t v108 = (uint64_t)v176;
      }
      else
      {
        uint64_t v107 = 1;
        uint64_t v108 = (uint64_t)v176;
        uint64_t v106 = (uint64_t)v175;
      }
      v192(v106, v107, 1, v31);
      sub_100009C30(v106, v108, (uint64_t *)&unk_100158FC0);
      if (v193(v108, 1, v31) != 1)
      {
        uint64_t v138 = v164;
        (*(void (**)(char *, uint64_t, uint64_t))(v67 + 32))(v164, v108, v31);
        uint64_t v139 = static ToolbarItemPlacement.topBarTrailing.getter();
        __chkstk_darwin(v139);
        *(&v161 - 2) = v201;
        *(&v161 - 1) = v138;
        type metadata accessor for ContextMenuForUnsubscribedUserView();
        sub_100057F30(&qword_1001588F0, (void (*)(uint64_t))type metadata accessor for ContextMenuForUnsubscribedUserView);
        uint64_t v140 = v167;
        ToolbarItem<>.init(placement:content:)();
        uint64_t v141 = sub_100006480(&qword_1001588D8, &qword_100158870);
        uint64_t v142 = v165;
        uint64_t v143 = v171;
        static ToolbarContentBuilder.buildBlock<A>(_:)();
        v203 = (char **)v143;
        uint64_t v204 = v141;
        swift_getOpaqueTypeConformance2();
        uint64_t v144 = sub_100006480(&qword_1001588E0, &qword_100158858);
        v203 = (char **)v174;
        uint64_t v204 = v144;
        swift_getOpaqueTypeConformance2();
        uint64_t v145 = (uint64_t)v191;
        uint64_t v146 = v172;
        static ToolbarContentBuilder.buildEither<A, B>(first:)();
        (*(void (**)(char *, uint64_t))(v166 + 8))(v142, v146);
        uint64_t v147 = sub_1000060EC(&qword_1001588C8);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v147 - 8) + 56))(v145, 0, 1, v147);
        sub_100057144();
        uint64_t v148 = v67;
        uint64_t v120 = (uint64_t)v185;
        static ToolbarContentBuilder.buildIf<A>(_:)();
        sub_1000063D0(v145, &qword_100158878);
        (*(void (**)(char *, uint64_t))(v168 + 8))(v140, v143);
        (*(void (**)(char *, uint64_t))(v148 + 8))(v138, v31);
        uint64_t v118 = v187;
        uint64_t v119 = (uint64_t)v186;
        goto LABEL_33;
      }
      id v109 = (uint64_t *)&unk_100158FC0;
      uint64_t v110 = (char ***)v108;
      goto LABEL_19;
    }
  }
LABEL_20:
  uint64_t v111 = sub_100010740(v66, v66[3]);
  id v112 = [*(id *)((char *)v111 + *((int *)v196 + 5)) webURL];
  if (v112)
  {
    int v113 = v112;
    uint64_t v114 = (uint64_t)v182;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v115 = 0;
    uint64_t v116 = v195;
    uint64_t v117 = (uint64_t)v183;
  }
  else
  {
    uint64_t v115 = 1;
    uint64_t v116 = v195;
    uint64_t v117 = (uint64_t)v183;
    uint64_t v114 = (uint64_t)v182;
  }
  v192(v114, v115, 1, v31);
  sub_100009C30(v114, v117, (uint64_t *)&unk_100158FC0);
  if (v193(v117, 1, v31) == 1)
  {
    sub_1000063D0(v117, (uint64_t *)&unk_100158FC0);
    uint64_t v118 = v187;
    uint64_t v119 = (uint64_t)v186;
    uint64_t v120 = (uint64_t)v185;
  }
  else
  {
    uint64_t v121 = *(void (**)(char *, uint64_t, uint64_t))(v67 + 32);
    v121(v116, v117, v31);
    uint64_t v122 = *(char ***)&v201[v90];
    swift_getKeyPath();
    v203 = v122;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v123 = v122[33];
    if (v123)
    {
      uint64_t v124 = sub_100010740(v198, v198[3]);
      uint64_t v125 = v178;
      sub_100009C94((uint64_t)v124 + *((int *)v196 + 6), v178, &qword_100158860);
      uint64_t v126 = type metadata accessor for AnySong();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v126 - 8) + 48))(v125, 1, v126) == 1)
      {
        swift_retain();
        sub_1000063D0(v125, &qword_100158860);
        uint64_t v127 = v177;
        v192(v177, 1, 1, v31);
        uint64_t v118 = v187;
        uint64_t v128 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v31;
        uint64_t v119 = (uint64_t)v186;
        uint64_t v120 = (uint64_t)v185;
      }
      else
      {
        uint64_t v129 = v177;
        sub_100009C94(v125, v177, (uint64_t *)&unk_100158FC0);
        swift_retain();
        uint64_t v130 = v125;
        uint64_t v127 = v129;
        sub_1000581B4(v130, (uint64_t (*)(void))type metadata accessor for AnySong);
        int v131 = v193(v129, 1, v31);
        uint64_t v118 = v187;
        uint64_t v128 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v31;
        uint64_t v119 = (uint64_t)v186;
        uint64_t v120 = (uint64_t)v185;
        if (v131 != 1)
        {
          uint64_t v149 = v169;
          v121(v169, v127, (uint64_t)v128);
          uint64_t v150 = static ToolbarItemPlacement.topBarTrailing.getter();
          uint64_t v193 = v128;
          __chkstk_darwin(v150);
          uint64_t v151 = v195;
          *(&v161 - 4) = v123;
          *(&v161 - 3) = v151;
          *(&v161 - 2) = v201;
          *(&v161 - 1) = v149;
          type metadata accessor for ContextMenuForSubscribedUserView();
          sub_100057F30(&qword_1001588E8, (void (*)(uint64_t))type metadata accessor for ContextMenuForSubscribedUserView);
          ToolbarItem<>.init(placement:content:)();
          uint64_t v152 = sub_100006480(&qword_1001588E0, &qword_100158858);
          uint64_t v153 = v161;
          uint64_t v154 = v174;
          static ToolbarContentBuilder.buildBlock<A>(_:)();
          uint64_t v155 = sub_100006480(&qword_1001588D8, &qword_100158870);
          v203 = (char **)v171;
          uint64_t v204 = v155;
          swift_getOpaqueTypeConformance2();
          v203 = (char **)v154;
          uint64_t v204 = v152;
          swift_getOpaqueTypeConformance2();
          uint64_t v156 = (uint64_t)v191;
          uint64_t v157 = v173;
          static ToolbarContentBuilder.buildEither<A, B>(second:)();
          (*(void (**)(char *, uint64_t))(v162 + 8))(v153, v157);
          uint64_t v158 = sub_1000060EC(&qword_1001588C8);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v158 - 8) + 56))(v156, 0, 1, v158);
          sub_100057144();
          static ToolbarContentBuilder.buildIf<A>(_:)();
          swift_release();
          sub_1000063D0(v156, &qword_100158878);
          (*(void (**)(char *, uint64_t))(v163 + 8))(v170, v154);
          uint64_t v159 = *(void (**)(char *, uint64_t (*)(uint64_t, uint64_t, uint64_t)))(v199 + 8);
          uint64_t v160 = v193;
          v159(v169, v193);
          v159(v195, v160);
          uint64_t v68 = v184;
          goto LABEL_33;
        }
      }
      swift_release();
      (*(void (**)(char *, uint64_t (*)(uint64_t, uint64_t, uint64_t)))(v199 + 8))(v195, v128);
      sub_1000063D0(v127, (uint64_t *)&unk_100158FC0);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v67 + 8))(v116, v31);
      uint64_t v118 = v187;
      uint64_t v119 = (uint64_t)v186;
      uint64_t v120 = (uint64_t)v185;
    }
    uint64_t v68 = v184;
  }
  uint64_t v132 = sub_1000060EC(&qword_1001588C8);
  uint64_t v133 = (uint64_t)v191;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v132 - 8) + 56))(v191, 1, 1, v132);
  sub_100057144();
  static ToolbarContentBuilder.buildIf<A>(_:)();
  sub_1000063D0(v133, &qword_100158878);
LABEL_33:
  uint64_t v134 = v119 + *(int *)(v118 + 48);
  uint64_t v135 = v119 + *(int *)(v118 + 64);
  sub_100009C94(v68, v119, &qword_100158898);
  uint64_t v136 = v200;
  sub_100009C94(v200, v134, &qword_100158888);
  sub_100009C94(v120, v135, &qword_100158878);
  TupleToolbarContent.init(_:)();
  sub_1000063D0(v120, &qword_100158878);
  sub_1000063D0(v136, &qword_100158888);
  return sub_1000063D0(v68, &qword_100158898);
}

uint64_t sub_1000519B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v33 = a4;
  uint64_t v7 = sub_1000060EC(&qword_100158900);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = a1;
  uint64_t v35 = a2;
  sub_10000E0F0();
  swift_bridgeObjectRetain();
  uint64_t v10 = Text.init<A>(_:)();
  uint64_t v12 = v11;
  char v14 = v13 & 1;
  static Font.Weight.bold.getter();
  uint64_t v15 = Text.fontWeight(_:)();
  uint64_t v17 = v16;
  char v19 = v18;
  sub_10000E904(v10, v12, v14);
  swift_bridgeObjectRelease();
  if (qword_1001560F0 != -1) {
    swift_once();
  }
  char v20 = v19 & 1;
  uint64_t v21 = Text.font(_:)();
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  char v27 = v26 & 1;
  sub_10000E904(v15, v17, v20);
  swift_bridgeObjectRelease();
  if (*(unsigned char *)(*(void *)(a3 + *(int *)(type metadata accessor for TrackPageView() + 52) + 8) + 16)) {
    double v28 = 1.0;
  }
  else {
    double v28 = 0.0;
  }
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v30 = swift_getKeyPath();
  uint64_t v34 = v21;
  uint64_t v35 = v23;
  char v36 = v27;
  uint64_t v37 = v25;
  double v38 = v28;
  uint64_t v39 = KeyPath;
  char v40 = 1;
  uint64_t v41 = v30;
  uint64_t v42 = 1;
  char v43 = 0;
  sub_1000060EC(&qword_100158918);
  sub_100057344();
  View.accessibilityIdentifier(_:)();
  sub_10000E904(v21, v23, v27);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return sub_100009C30((uint64_t)v9, v33, &qword_100158900);
}

uint64_t sub_100051C34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for TrackPageView();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6);
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v13 = *(void (**)(char *, uint64_t))(v10 + 16);
  uint64_t v31 = v14;
  v13(v12, a1);
  if (qword_1001562C0 != -1) {
    swift_once();
  }
  uint64_t v15 = *(void *)(a2 + *(int *)(v6 + 44));
  uint64_t v16 = *(void *)algn_100164C58;
  uint64_t v28 = qword_100164C50;
  uint64_t v17 = *(void *)(v15 + 504);
  uint64_t v30 = *(void *)(v15 + 496);
  int v29 = *(unsigned __int8 *)(v15 + 512);
  uint64_t v18 = *(void *)(v15 + 520);
  sub_100058C74(a2, (uint64_t)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for TrackPageView);
  unint64_t v19 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v20 = swift_allocObject();
  sub_1000583D4((uint64_t)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v20 + v19, (uint64_t (*)(void))type metadata accessor for TrackPageView);
  char v32 = 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  State.init(wrappedValue:)();
  uint64_t v21 = v34;
  *(unsigned char *)a3 = v33;
  *(void *)(a3 + 8) = v21;
  uint64_t v22 = (int *)type metadata accessor for ToolbarShareButton();
  uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v10 + 32))(a3 + v22[5], v12, v31);
  uint64_t v24 = (uint64_t *)(a3 + v22[6]);
  uint64_t *v24 = v28;
  v24[1] = v16;
  uint64_t v25 = a3 + v22[7];
  *(void *)uint64_t v25 = v30;
  *(void *)(v25 + 8) = v17;
  *(unsigned char *)(v25 + 16) = v29;
  *(void *)(v25 + 24) = v18;
  char v26 = (uint64_t (**)())(a3 + v22[8]);
  *char v26 = sub_10005766C;
  v26[1] = (uint64_t (*)())v20;
  return result;
}

uint64_t sub_100051F0C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + *(int *)(type metadata accessor for TrackPageView() + 44));
  swift_getKeyPath();
  sub_100057F30(&qword_100158818, (void (*)(uint64_t))type metadata accessor for TrackPageViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (*(unsigned char *)(v1 + 24)) {
    int v2 = 66048;
  }
  else {
    int v2 = 512;
  }
  return sub_1000D6E40(v2, 0xD000000000000028, 0x8000000100117950);
}

uint64_t sub_100051FEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v54 = a3;
  uint64_t v5 = type metadata accessor for TrackPageView();
  uint64_t v6 = v5 - 8;
  uint64_t v47 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v48 = v7;
  uint64_t v49 = (uint64_t)v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v51 = (char *)v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v50 = (char *)v44 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)v44 - v15;
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)v44 - v17;
  uint64_t v19 = type metadata accessor for ContextMenuForUnsubscribedUserView();
  __chkstk_darwin(v19);
  uint64_t v21 = (void *)((char *)v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v22 = *(void *)(a1 + *(int *)(v6 + 52));
  sub_1000AE3BC(v59);
  uint64_t v46 = v18;
  sub_100092FB4((uint64_t)v18);
  sub_100057684((uint64_t)v59);
  uint64_t v52 = v9;
  long long v53 = v16;
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v23(v16, a2, v8);
  swift_getKeyPath();
  uint64_t v56 = v22;
  sub_100057F30(&qword_100158818, (void (*)(uint64_t))type metadata accessor for TrackPageViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  sub_100009C94(v22 + 216, (uint64_t)v57, &qword_1001588C0);
  uint64_t v24 = v58;
  if (v58)
  {
    uint64_t v25 = sub_100010740(v57, v58);
    v44[1] = v44;
    uint64_t v26 = a1;
    uint64_t v27 = *(void *)(v24 - 8);
    __chkstk_darwin(v25);
    int v29 = (char *)v44 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v27 + 16))(v29);
    sub_1000063D0((uint64_t)v57, &qword_1001588C0);
    uint64_t v30 = type metadata accessor for StreamingServicesProvider();
    uint64_t v31 = *(void (**)(char *, uint64_t))(v27 + 8);
    long long v45 = *(void **)&v29[*(int *)(v30 + 20)];
    swift_bridgeObjectRetain();
    v31(v29, v24);
    a1 = v26;
  }
  else
  {
    sub_1000063D0((uint64_t)v57, &qword_1001588C0);
    long long v45 = _swiftEmptyArrayStorage;
  }
  uint64_t v32 = v49;
  sub_100058C74(a1, v49, (uint64_t (*)(void))type metadata accessor for TrackPageView);
  unint64_t v33 = (*(unsigned __int8 *)(v47 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
  uint64_t v34 = swift_allocObject();
  sub_1000583D4(v32, v34 + v33, (uint64_t (*)(void))type metadata accessor for TrackPageView);
  uint64_t v35 = (void *)((char *)v21 + *(int *)(v19 + 24));
  *uint64_t v35 = swift_getKeyPath();
  sub_1000060EC(&qword_100156940);
  swift_storeEnumTagMultiPayload();
  *uint64_t v21 = sub_1000576E0;
  v21[1] = v34;
  uint64_t v36 = (uint64_t)v50;
  uint64_t v37 = v46;
  v23(v50, (uint64_t)v46, v8);
  double v38 = (void (*)(char *, char *, uint64_t))v23;
  uint64_t v39 = (uint64_t)v51;
  char v40 = v53;
  v38(v51, v53, v8);
  type metadata accessor for ContextMenuForUnsubscribedUserViewModel();
  swift_allocObject();
  swift_retain();
  uint64_t v55 = sub_100010788(v36, v39, (uint64_t)v45);
  State.init(wrappedValue:)();
  swift_release();
  uint64_t v41 = *(void (**)(char *, uint64_t))(v52 + 8);
  v41(v40, v8);
  v41(v37, v8);
  uint64_t v42 = v57[1];
  void v21[2] = v57[0];
  v21[3] = v42;
  return sub_1000583D4((uint64_t)v21, v54, (uint64_t (*)(void))type metadata accessor for ContextMenuForUnsubscribedUserView);
}

uint64_t sub_1000525C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v40 = a4;
  uint64_t v46 = a2;
  uint64_t v47 = a5;
  uint64_t v7 = type metadata accessor for TrackPageView();
  uint64_t v8 = v7 - 8;
  uint64_t v41 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v42 = v9;
  uint64_t v44 = (uint64_t)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000060EC(&qword_100158940);
  __chkstk_darwin(v10 - 8);
  uint64_t v43 = (uint64_t)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for URL();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v19 = (char *)&v39 - v18;
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v39 - v20;
  uint64_t v22 = type metadata accessor for ContextMenuForSubscribedUserView();
  __chkstk_darwin(v22 - 8);
  uint64_t v24 = (uint64_t *)((char *)&v39 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v25(v21, v46, v12);
  uint64_t v26 = *(int *)(v8 + 52);
  uint64_t v45 = a3;
  uint64_t v46 = a1;
  uint64_t v27 = *(void *)(a3 + v26);
  swift_retain();
  sub_1000AE3BC(v51);
  sub_100092FB4((uint64_t)v19);
  sub_100057684((uint64_t)v51);
  v25(v16, v40, v12);
  swift_getKeyPath();
  uint64_t v48 = v27;
  sub_100057F30(&qword_100158818, (void (*)(uint64_t))type metadata accessor for TrackPageViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  sub_100009C94(v27 + 216, (uint64_t)v49, &qword_1001588C0);
  uint64_t v28 = v50;
  if (v50)
  {
    int v29 = sub_100010740(v49, v50);
    uint64_t v30 = *(void *)(v28 - 8);
    __chkstk_darwin(v29);
    uint64_t v32 = (char *)&v39 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v30 + 16))(v32);
    sub_1000063D0((uint64_t)v49, &qword_1001588C0);
    uint64_t v33 = v43;
    sub_100009C94((uint64_t)v32, v43, &qword_100158940);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v32, v28);
  }
  else
  {
    sub_1000063D0((uint64_t)v49, &qword_1001588C0);
    uint64_t v34 = type metadata accessor for StreamingService();
    uint64_t v33 = v43;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v43, 1, 1, v34);
  }
  uint64_t v35 = v44;
  sub_100058C74(v45, v44, (uint64_t (*)(void))type metadata accessor for TrackPageView);
  unint64_t v36 = (*(unsigned __int8 *)(v41 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
  uint64_t v37 = swift_allocObject();
  sub_1000583D4(v35, v37 + v36, (uint64_t (*)(void))type metadata accessor for TrackPageView);
  sub_10007DDCC(v46, (uint64_t)v21, (uint64_t)v19, (uint64_t)v16, v33, (uint64_t)sub_1000576E0, v37, v24);
  return sub_1000583D4((uint64_t)v24, v47, (uint64_t (*)(void))type metadata accessor for ContextMenuForSubscribedUserView);
}

uint64_t sub_100052AF4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + *(int *)(type metadata accessor for TrackPageView() + 44));
  swift_getKeyPath();
  sub_100057F30(&qword_100158818, (void (*)(uint64_t))type metadata accessor for TrackPageViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (*(unsigned char *)(v1 + 24)) {
    int v2 = 66051;
  }
  else {
    int v2 = 515;
  }
  return sub_1000D6E40(v2, 0xD000000000000028, 0x8000000100117950);
}

void sub_100052BD4(double *a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>)
{
  *a1 = a2;
  a1[1] = a3;
  a1[2] = a4;
  a1[3] = a5;
}

uint64_t sub_100052BE0()
{
  return swift_release();
}

uint64_t sub_100052CC8(double *a1, uint64_t a2)
{
  uint64_t v4 = sub_1000060EC(&qword_100156930);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = &v16[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = type metadata accessor for UserInterfaceSizeClass();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = &v16[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  double v11 = *a1;
  double v12 = a1[1];
  uint64_t v13 = *(void *)(a2 + *(int *)(type metadata accessor for TrackPageView() + 44));
  swift_getKeyPath();
  uint64_t v17 = v13;
  double v18 = v11;
  uint64_t v19 = v13;
  sub_100057F30(&qword_100158818, (void (*)(uint64_t))type metadata accessor for TrackPageViewModel);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  sub_100008780((uint64_t)v6);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    (*(void (**)(unsigned char *, void, uint64_t))(v8 + 104))(v10, enum case for UserInterfaceSizeClass.regular(_:), v7);
    sub_1000063D0((uint64_t)v6, &qword_100156930);
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v8 + 32))(v10, v6, v7);
  }
  if (v11 >= v12) {
    double v14 = v12;
  }
  else {
    double v14 = v11;
  }
  sub_1000AF200(v14);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_100052F54(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a3[2];
  if (!v3) {
    return 0;
  }
  if (a3[4] == a1 && a3[5] == a2) {
    return 1;
  }
  uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
  if (result) {
    return 1;
  }
  if (v3 == 1) {
    return 0;
  }
  uint64_t v9 = a3 + 7;
  for (uint64_t i = 1; ; ++i)
  {
    uint64_t v11 = i + 1;
    if (__OFADD__(i, 1)) {
      break;
    }
    BOOL v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
      return 1;
    }
    uint64_t result = 0;
    v9 += 2;
    if (v11 == v3) {
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_10005301C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_100057F30(&qword_100158818, (void (*)(uint64_t))type metadata accessor for TrackPageViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  return sub_100056D74(v3 + 32, a2);
}

uint64_t sub_1000530E0(uint64_t a1)
{
  sub_100056D74(a1, (uint64_t)v2);
  swift_getKeyPath();
  sub_100057F30(&qword_100158818, (void (*)(uint64_t))type metadata accessor for TrackPageViewModel);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  return sub_100058884((uint64_t)v2);
}

double sub_1000531C0@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_100057F30(&qword_100158818, (void (*)(uint64_t))type metadata accessor for TrackPageViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  double result = *(double *)(v3 + 144);
  *a2 = result;
  return result;
}

uint64_t sub_100053268()
{
  return swift_release();
}

double sub_100053340@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_100057F30(&qword_100158818, (void (*)(uint64_t))type metadata accessor for TrackPageViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  double result = *(double *)(v3 + 152);
  *a2 = result;
  return result;
}

uint64_t sub_1000533E8()
{
  return swift_release();
}

double sub_1000534C0@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_100057F30(&qword_100158818, (void (*)(uint64_t))type metadata accessor for TrackPageViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  double result = *(double *)(v3 + 160);
  *a2 = result;
  return result;
}

uint64_t sub_100053568()
{
  return swift_release();
}

double sub_100053640@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_100057F30(&qword_100158818, (void (*)(uint64_t))type metadata accessor for TrackPageViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  double result = *(double *)(v3 + 168);
  *a2 = result;
  return result;
}

uint64_t sub_1000536E8()
{
  return swift_release();
}

double sub_1000537C0@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_100057F30(&qword_100158818, (void (*)(uint64_t))type metadata accessor for TrackPageViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  double result = *(double *)(v3 + 176);
  *a2 = result;
  return result;
}

uint64_t sub_100053868()
{
  return swift_release();
}

double sub_100053940@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_100057F30(&qword_100158818, (void (*)(uint64_t))type metadata accessor for TrackPageViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  double result = *(double *)(v3 + 184);
  *a2 = result;
  return result;
}

uint64_t sub_1000539E8()
{
  return swift_release();
}

double sub_100053AC0@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_100057F30(&qword_100158818, (void (*)(uint64_t))type metadata accessor for TrackPageViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  double result = *(double *)(v3 + 200);
  *a2 = result;
  return result;
}

uint64_t sub_100053B68()
{
  return swift_release();
}

uint64_t sub_100053C40@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_100057F30(&qword_100158818, (void (*)(uint64_t))type metadata accessor for TrackPageViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + 584);
  return result;
}

uint64_t sub_100053CE8()
{
  return swift_release();
}

uint64_t sub_100053DB8()
{
  return EnvironmentValues.colorScheme.getter();
}

uint64_t sub_100053DDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100053FEC(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for ColorScheme, (uint64_t (*)(char *))&EnvironmentValues.colorScheme.setter);
}

uint64_t sub_100053E08()
{
  return EnvironmentValues.horizontalSizeClass.getter();
}

uint64_t sub_100053E2C()
{
  return EnvironmentValues.horizontalSizeClass.getter();
}

uint64_t sub_100053E50(uint64_t a1)
{
  uint64_t v2 = sub_1000060EC(&qword_100156930);
  __chkstk_darwin(v2 - 8);
  sub_100009C94(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_100156930);
  return EnvironmentValues.horizontalSizeClass.setter();
}

uint64_t sub_100053EE8()
{
  return EnvironmentValues.colorScheme.getter();
}

uint64_t sub_100053F0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100053FEC(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for ColorScheme, (uint64_t (*)(char *))&EnvironmentValues.colorScheme.setter);
}

uint64_t sub_100053F4C()
{
  return EnvironmentValues.openURL.getter();
}

uint64_t sub_100053F70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100053FEC(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for OpenURLAction, (uint64_t (*)(char *))&EnvironmentValues.openURL.setter);
}

uint64_t sub_100053F9C()
{
  return EnvironmentValues.scenePhase.getter();
}

uint64_t sub_100053FC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100053FEC(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for ScenePhase, (uint64_t (*)(char *))&EnvironmentValues.scenePhase.setter);
}

uint64_t sub_100053FEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t (*a6)(char *))
{
  a5(0);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v12 - v8;
  (*(void (**)(char *, uint64_t))(v10 + 16))((char *)&v12 - v8, a1);
  return a6(v9);
}

uint64_t sub_1000540BC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = EnvironmentValues.accessibilityReduceMotion.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1000540EC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = EnvironmentValues.accessibilityReduceTransparency.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_10005411C()
{
  return EnvironmentValues.dismiss.getter();
}

uint64_t sub_100054140()
{
  return EnvironmentValues.scenePhase.getter();
}

uint64_t sub_100054164(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100053FEC(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for ScenePhase, (uint64_t (*)(char *))&EnvironmentValues.scenePhase.setter);
}

void *sub_1000541A4(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    char v7 = *((unsigned char *)a2 + 8);
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (void *)(a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    swift_retain();
    sub_1000060EC(&qword_100156928);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = type metadata accessor for UserInterfaceSizeClass();
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      {
        uint64_t v13 = sub_1000060EC(&qword_100156930);
        memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v12 + 16))(v9, v10, v11);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      }
    }
    else
    {
      *uint64_t v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v15 = a3[6];
    uint64_t v16 = (void *)((char *)v4 + v15);
    uint64_t v17 = (uint64_t *)((char *)a2 + v15);
    sub_1000060EC(&qword_100156938);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v18 = type metadata accessor for ColorScheme();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
    }
    else
    {
      void *v16 = *v17;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v19 = a3[7];
    uint64_t v20 = (char *)v4 + v19;
    uint64_t v21 = (uint64_t)a2 + v19;
    uint64_t v22 = *(void *)v21;
    char v23 = *(unsigned char *)(v21 + 8);
    sub_10005464C(*(void *)v21, v23);
    *(void *)uint64_t v20 = v22;
    v20[8] = v23;
    uint64_t v24 = a3[8];
    uint64_t v25 = (char *)v4 + v24;
    uint64_t v26 = (uint64_t)a2 + v24;
    uint64_t v27 = *(void *)v26;
    char v28 = *(unsigned char *)(v26 + 8);
    sub_10005464C(*(void *)v26, v28);
    *(void *)uint64_t v25 = v27;
    v25[8] = v28;
    uint64_t v29 = a3[9];
    uint64_t v30 = (void *)((char *)v4 + v29);
    uint64_t v31 = (uint64_t *)((char *)a2 + v29);
    sub_1000060EC(&qword_100156918);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v32 = type metadata accessor for DismissAction();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v32 - 8) + 16))(v30, v31, v32);
    }
    else
    {
      *uint64_t v30 = *v31;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v33 = a3[10];
    uint64_t v34 = (void *)((char *)v4 + v33);
    uint64_t v35 = (uint64_t *)((char *)a2 + v33);
    sub_1000060EC(&qword_100156920);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v36 = type metadata accessor for ScenePhase();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v36 - 8) + 16))(v34, v35, v36);
    }
    else
    {
      *uint64_t v34 = *v35;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v37 = a3[12];
    *(void *)((char *)v4 + a3[11]) = *(uint64_t *)((char *)a2 + a3[11]);
    double v38 = (char *)v4 + v37;
    uint64_t v39 = (uint64_t)a2 + v37;
    uint64_t v40 = *(void **)((char *)a2 + v37);
    *(void *)((char *)v4 + v37) = v40;
    uint64_t v41 = *(int *)(type metadata accessor for LocationManager() + 20);
    uint64_t v42 = &v38[v41];
    uint64_t v43 = v39 + v41;
    uint64_t v44 = type metadata accessor for Logger();
    uint64_t v45 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v44 - 8) + 16);
    swift_retain();
    id v46 = v40;
    v45(v42, v43, v44);
    uint64_t v47 = a3[13];
    uint64_t v48 = a3[14];
    uint64_t v49 = (void *)((char *)v4 + v47);
    uint64_t v50 = (uint64_t *)((char *)a2 + v47);
    uint64_t v51 = v50[1];
    void *v49 = *v50;
    v49[1] = v51;
    uint64_t v52 = (void *)((char *)v4 + v48);
    long long v53 = (uint64_t *)((char *)a2 + v48);
    uint64_t v54 = *v53;
    swift_retain();
    if (v54)
    {
      uint64_t v55 = v53[1];
      void *v52 = v54;
      v52[1] = v55;
      swift_retain();
    }
    else
    {
      *(_OWORD *)uint64_t v52 = *(_OWORD *)v53;
    }
  }
  return v4;
}

uint64_t sub_10005464C(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_100054658(uint64_t a1, int *a2)
{
  swift_release();
  uint64_t v4 = a1 + a2[5];
  sub_1000060EC(&qword_100156928);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for UserInterfaceSizeClass();
    uint64_t v6 = *(void *)(v5 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = a1 + a2[6];
  sub_1000060EC(&qword_100156938);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = type metadata accessor for ColorScheme();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  sub_100009CF8(*(void *)(a1 + a2[7]), *(unsigned char *)(a1 + a2[7] + 8));
  sub_100009CF8(*(void *)(a1 + a2[8]), *(unsigned char *)(a1 + a2[8] + 8));
  uint64_t v9 = a1 + a2[9];
  sub_1000060EC(&qword_100156918);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for DismissAction();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  }
  else
  {
    swift_release();
  }
  uint64_t v11 = a1 + a2[10];
  sub_1000060EC(&qword_100156920);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = type metadata accessor for ScenePhase();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  }
  else
  {
    swift_release();
  }
  swift_release();
  uint64_t v13 = (id *)(a1 + a2[12]);

  uint64_t v14 = (char *)v13 + *(int *)(type metadata accessor for LocationManager() + 20);
  uint64_t v15 = type metadata accessor for Logger();
  (*(void (**)(char *, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  uint64_t result = swift_release();
  if (*(void *)(a1 + a2[14]))
  {
    return swift_release();
  }
  return result;
}

uint64_t sub_100054968(uint64_t a1, uint64_t a2, int *a3)
{
  char v6 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  swift_retain();
  sub_1000060EC(&qword_100156928);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for UserInterfaceSizeClass();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      uint64_t v12 = sub_1000060EC(&qword_100156930);
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
  }
  else
  {
    *uint64_t v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v13 = a3[6];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  sub_1000060EC(&qword_100156938);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v16 = type metadata accessor for ColorScheme();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  }
  else
  {
    void *v14 = *v15;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v17 = a3[7];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = *(void *)v19;
  char v21 = *(unsigned char *)(v19 + 8);
  sub_10005464C(*(void *)v19, v21);
  *(void *)uint64_t v18 = v20;
  *(unsigned char *)(v18 + 8) = v21;
  uint64_t v22 = a3[8];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  uint64_t v25 = *(void *)v24;
  char v26 = *(unsigned char *)(v24 + 8);
  sub_10005464C(*(void *)v24, v26);
  *(void *)uint64_t v23 = v25;
  *(unsigned char *)(v23 + 8) = v26;
  uint64_t v27 = a3[9];
  char v28 = (void *)(a1 + v27);
  uint64_t v29 = (void *)(a2 + v27);
  sub_1000060EC(&qword_100156918);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v30 = type metadata accessor for DismissAction();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
  }
  else
  {
    *char v28 = *v29;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v31 = a3[10];
  uint64_t v32 = (void *)(a1 + v31);
  uint64_t v33 = (void *)(a2 + v31);
  sub_1000060EC(&qword_100156920);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v34 = type metadata accessor for ScenePhase();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
  }
  else
  {
    *uint64_t v32 = *v33;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v35 = a3[12];
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  double v38 = *(void **)(a2 + v35);
  *(void *)(a1 + v35) = v38;
  uint64_t v39 = *(int *)(type metadata accessor for LocationManager() + 20);
  uint64_t v40 = v36 + v39;
  uint64_t v41 = v37 + v39;
  uint64_t v42 = type metadata accessor for Logger();
  uint64_t v43 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 16);
  swift_retain();
  id v44 = v38;
  v43(v40, v41, v42);
  uint64_t v45 = a3[13];
  uint64_t v46 = a3[14];
  uint64_t v47 = (void *)(a1 + v45);
  uint64_t v48 = (void *)(a2 + v45);
  uint64_t v49 = v48[1];
  *uint64_t v47 = *v48;
  v47[1] = v49;
  uint64_t v50 = (void *)(a1 + v46);
  uint64_t v51 = (uint64_t *)(a2 + v46);
  uint64_t v52 = *v51;
  swift_retain();
  if (v52)
  {
    uint64_t v53 = v51[1];
    *uint64_t v50 = v52;
    v50[1] = v53;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v50 = *(_OWORD *)v51;
  }
  return a1;
}

uint64_t sub_100054DC0(uint64_t a1, uint64_t a2, int *a3)
{
  char v6 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v6;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v7 = a3[5];
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (void *)(a2 + v7);
    sub_1000063D0(a1 + v7, &qword_100156928);
    sub_1000060EC(&qword_100156928);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = type metadata accessor for UserInterfaceSizeClass();
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      {
        uint64_t v12 = sub_1000060EC(&qword_100156930);
        memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
    }
    else
    {
      *uint64_t v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v13 = a3[6];
    uint64_t v14 = (void *)(a1 + v13);
    uint64_t v15 = (void *)(a2 + v13);
    sub_1000063D0(a1 + v13, &qword_100156938);
    sub_1000060EC(&qword_100156938);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v16 = type metadata accessor for ColorScheme();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    }
    else
    {
      void *v14 = *v15;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v17 = a3[7];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = *(void *)v19;
  char v21 = *(unsigned char *)(v19 + 8);
  sub_10005464C(*(void *)v19, v21);
  uint64_t v22 = *(void *)v18;
  char v23 = *(unsigned char *)(v18 + 8);
  *(void *)uint64_t v18 = v20;
  *(unsigned char *)(v18 + 8) = v21;
  sub_100009CF8(v22, v23);
  uint64_t v24 = a3[8];
  uint64_t v25 = a1 + v24;
  uint64_t v26 = a2 + v24;
  uint64_t v27 = *(void *)v26;
  char v28 = *(unsigned char *)(v26 + 8);
  sub_10005464C(*(void *)v26, v28);
  uint64_t v29 = *(void *)v25;
  char v30 = *(unsigned char *)(v25 + 8);
  *(void *)uint64_t v25 = v27;
  *(unsigned char *)(v25 + 8) = v28;
  sub_100009CF8(v29, v30);
  if (a1 != a2)
  {
    uint64_t v31 = a3[9];
    uint64_t v32 = (void *)(a1 + v31);
    uint64_t v33 = (void *)(a2 + v31);
    sub_1000063D0(a1 + v31, &qword_100156918);
    sub_1000060EC(&qword_100156918);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v34 = type metadata accessor for DismissAction();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
    }
    else
    {
      *uint64_t v32 = *v33;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v35 = a3[10];
    uint64_t v36 = (void *)(a1 + v35);
    uint64_t v37 = (void *)(a2 + v35);
    sub_1000063D0(a1 + v35, &qword_100156920);
    sub_1000060EC(&qword_100156920);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v38 = type metadata accessor for ScenePhase();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
    }
    else
    {
      *uint64_t v36 = *v37;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  swift_retain();
  swift_release();
  uint64_t v39 = a3[12];
  uint64_t v40 = (void **)(a1 + v39);
  uint64_t v41 = a2 + v39;
  uint64_t v42 = *(void **)(a2 + v39);
  uint64_t v43 = *v40;
  *uint64_t v40 = v42;
  id v44 = v42;

  uint64_t v45 = *(int *)(type metadata accessor for LocationManager() + 20);
  uint64_t v46 = (char *)v40 + v45;
  uint64_t v47 = v41 + v45;
  uint64_t v48 = type metadata accessor for Logger();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v48 - 8) + 24))(v46, v47, v48);
  uint64_t v49 = a3[13];
  uint64_t v50 = (void *)(a1 + v49);
  uint64_t v51 = (void *)(a2 + v49);
  *uint64_t v50 = *v51;
  v50[1] = v51[1];
  swift_retain();
  swift_release();
  uint64_t v52 = a3[14];
  uint64_t v53 = (void *)(a1 + v52);
  uint64_t v54 = (uint64_t *)(a2 + v52);
  uint64_t v55 = *(void *)(a1 + v52);
  uint64_t v56 = *v54;
  if (!v55)
  {
    if (v56)
    {
      uint64_t v58 = v54[1];
      *uint64_t v53 = v56;
      v53[1] = v58;
      swift_retain();
      return a1;
    }
LABEL_25:
    *(_OWORD *)uint64_t v53 = *(_OWORD *)v54;
    return a1;
  }
  if (!v56)
  {
    swift_release();
    goto LABEL_25;
  }
  uint64_t v57 = v54[1];
  *uint64_t v53 = v56;
  v53[1] = v57;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1000552DC(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = a3[5];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_1000060EC(&qword_100156928);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for UserInterfaceSizeClass();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
    {
      uint64_t v12 = sub_1000060EC(&qword_100156930);
      memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v7, v8, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  uint64_t v13 = a3[6];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (const void *)(a2 + v13);
  uint64_t v16 = sub_1000060EC(&qword_100156938);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v17 = type metadata accessor for ColorScheme();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v17 - 8) + 32))(v14, v15, v17);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  uint64_t v18 = a3[7];
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v18;
  uint64_t v21 = a2 + v18;
  *(void *)uint64_t v20 = *(void *)v21;
  *(unsigned char *)(v20 + 8) = *(unsigned char *)(v21 + 8);
  uint64_t v22 = a1 + v19;
  uint64_t v23 = a2 + v19;
  *(void *)uint64_t v22 = *(void *)v23;
  *(unsigned char *)(v22 + 8) = *(unsigned char *)(v23 + 8);
  uint64_t v24 = a3[9];
  uint64_t v25 = (void *)(a1 + v24);
  uint64_t v26 = (const void *)(a2 + v24);
  uint64_t v27 = sub_1000060EC(&qword_100156918);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v28 = type metadata accessor for DismissAction();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v28 - 8) + 32))(v25, v26, v28);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
  }
  uint64_t v29 = a3[10];
  char v30 = (void *)(a1 + v29);
  uint64_t v31 = (const void *)(a2 + v29);
  uint64_t v32 = sub_1000060EC(&qword_100156920);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v33 = type metadata accessor for ScenePhase();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v33 - 8) + 32))(v30, v31, v33);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
  }
  uint64_t v34 = a3[12];
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  uint64_t v35 = a1 + v34;
  uint64_t v36 = a2 + v34;
  *(void *)(a1 + v34) = *(void *)(a2 + v34);
  uint64_t v37 = *(int *)(type metadata accessor for LocationManager() + 20);
  uint64_t v38 = v35 + v37;
  uint64_t v39 = v36 + v37;
  uint64_t v40 = type metadata accessor for Logger();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 32))(v38, v39, v40);
  uint64_t v41 = a3[14];
  *(_OWORD *)(a1 + a3[13]) = *(_OWORD *)(a2 + a3[13]);
  uint64_t v42 = (void *)(a1 + v41);
  uint64_t v43 = (uint64_t *)(a2 + v41);
  uint64_t v44 = *v43;
  if (*v43)
  {
    uint64_t v45 = v43[1];
    *uint64_t v42 = v44;
    v42[1] = v45;
  }
  else
  {
    *(_OWORD *)uint64_t v42 = *(_OWORD *)v43;
  }
  return a1;
}

uint64_t sub_100055724(uint64_t a1, uint64_t a2, int *a3)
{
  char v6 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v6;
  swift_release();
  if (a1 != a2)
  {
    uint64_t v7 = a3[5];
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (const void *)(a2 + v7);
    sub_1000063D0(a1 + v7, &qword_100156928);
    uint64_t v10 = sub_1000060EC(&qword_100156928);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = type metadata accessor for UserInterfaceSizeClass();
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11))
      {
        uint64_t v13 = sub_1000060EC(&qword_100156930);
        memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v8, v9, v11);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v11);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
    }
    uint64_t v14 = a3[6];
    uint64_t v15 = (void *)(a1 + v14);
    uint64_t v16 = (const void *)(a2 + v14);
    sub_1000063D0(a1 + v14, &qword_100156938);
    uint64_t v17 = sub_1000060EC(&qword_100156938);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v18 = type metadata accessor for ColorScheme();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v18 - 8) + 32))(v15, v16, v18);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
    }
  }
  uint64_t v19 = a3[7];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = (uint64_t *)(a2 + v19);
  uint64_t v22 = *v21;
  LOBYTE(v21) = *((unsigned char *)v21 + 8);
  uint64_t v23 = *(void *)v20;
  char v24 = *(unsigned char *)(v20 + 8);
  *(void *)uint64_t v20 = v22;
  *(unsigned char *)(v20 + 8) = (_BYTE)v21;
  sub_100009CF8(v23, v24);
  uint64_t v25 = a3[8];
  uint64_t v26 = a1 + v25;
  uint64_t v27 = (uint64_t *)(a2 + v25);
  uint64_t v28 = *v27;
  LOBYTE(v27) = *((unsigned char *)v27 + 8);
  uint64_t v29 = *(void *)v26;
  char v30 = *(unsigned char *)(v26 + 8);
  *(void *)uint64_t v26 = v28;
  *(unsigned char *)(v26 + 8) = (_BYTE)v27;
  sub_100009CF8(v29, v30);
  if (a1 != a2)
  {
    uint64_t v31 = a3[9];
    uint64_t v32 = (void *)(a1 + v31);
    uint64_t v33 = (const void *)(a2 + v31);
    sub_1000063D0(a1 + v31, &qword_100156918);
    uint64_t v34 = sub_1000060EC(&qword_100156918);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v35 = type metadata accessor for DismissAction();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v35 - 8) + 32))(v32, v33, v35);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
    }
    uint64_t v36 = a3[10];
    uint64_t v37 = (void *)(a1 + v36);
    uint64_t v38 = (const void *)(a2 + v36);
    sub_1000063D0(a1 + v36, &qword_100156920);
    uint64_t v39 = sub_1000060EC(&qword_100156920);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v40 = type metadata accessor for ScenePhase();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v40 - 8) + 32))(v37, v38, v40);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
    }
  }
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  swift_release();
  uint64_t v41 = a3[12];
  uint64_t v42 = a1 + v41;
  uint64_t v43 = a2 + v41;
  uint64_t v44 = *(void **)(a1 + v41);
  *(void *)(a1 + v41) = *(void *)(a2 + v41);

  uint64_t v45 = *(int *)(type metadata accessor for LocationManager() + 20);
  uint64_t v46 = v42 + v45;
  uint64_t v47 = v43 + v45;
  uint64_t v48 = type metadata accessor for Logger();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 40))(v46, v47, v48);
  uint64_t v49 = a3[13];
  uint64_t v50 = (void *)(a1 + v49);
  uint64_t v51 = (uint64_t *)(a2 + v49);
  uint64_t v53 = *v51;
  uint64_t v52 = v51[1];
  *uint64_t v50 = v53;
  v50[1] = v52;
  swift_release();
  uint64_t v54 = a3[14];
  uint64_t v55 = (void *)(a1 + v54);
  uint64_t v56 = (uint64_t *)(a2 + v54);
  uint64_t v57 = *(void *)(a1 + v54);
  uint64_t v58 = *v56;
  if (!v57)
  {
    if (v58)
    {
      uint64_t v60 = v56[1];
      void *v55 = v58;
      v55[1] = v60;
      return a1;
    }
LABEL_24:
    *(_OWORD *)uint64_t v55 = *(_OWORD *)v56;
    return a1;
  }
  if (!v58)
  {
    swift_release();
    goto LABEL_24;
  }
  uint64_t v59 = v56[1];
  void *v55 = v58;
  v55[1] = v59;
  swift_release();
  return a1;
}

uint64_t sub_100055C30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100055C44);
}

uint64_t sub_100055C44(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000060EC(&qword_1001585B0);
  if (*(_DWORD *)(*(void *)(v6 - 8) + 84) == a2)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)(v6 - 8);
    uint64_t v9 = a3[5];
LABEL_9:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    return v13(a1 + v9, a2, v7);
  }
  uint64_t v10 = sub_1000060EC(&qword_100157AF0);
  if (*(_DWORD *)(*(void *)(v10 - 8) + 84) == a2)
  {
    uint64_t v7 = v10;
    uint64_t v8 = *(void *)(v10 - 8);
    uint64_t v9 = a3[6];
    goto LABEL_9;
  }
  uint64_t v11 = sub_1000060EC(&qword_1001585B8);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v7 = v11;
    uint64_t v8 = *(void *)(v11 - 8);
    uint64_t v9 = a3[9];
    goto LABEL_9;
  }
  uint64_t v12 = sub_1000060EC(qword_100157FC0);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v7 = v12;
    uint64_t v8 = *(void *)(v12 - 8);
    uint64_t v9 = a3[10];
    goto LABEL_9;
  }
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v15 = *(void *)(a1 + a3[11]);
    if (v15 >= 0xFFFFFFFF) {
      LODWORD(v15) = -1;
    }
    return (v15 + 1);
  }
  else
  {
    uint64_t v16 = type metadata accessor for LocationManager();
    uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48);
    uint64_t v18 = v16;
    uint64_t v19 = a1 + a3[12];
    return v17(v19, a2, v18);
  }
}

uint64_t sub_100055E68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100055E7C);
}

uint64_t sub_100055E7C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_1000060EC(&qword_1001585B0);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[5];
LABEL_9:
    unint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v15(a1 + v11, a2, a2, v9);
  }
  uint64_t v12 = sub_1000060EC(&qword_100157AF0);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[6];
    goto LABEL_9;
  }
  uint64_t v13 = sub_1000060EC(&qword_1001585B8);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v9 = v13;
    uint64_t v10 = *(void *)(v13 - 8);
    uint64_t v11 = a4[9];
    goto LABEL_9;
  }
  uint64_t result = sub_1000060EC(qword_100157FC0);
  if (*(_DWORD *)(*(void *)(result - 8) + 84) == a3)
  {
    uint64_t v9 = result;
    uint64_t v10 = *(void *)(result - 8);
    uint64_t v11 = a4[10];
    goto LABEL_9;
  }
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[11]) = (a2 - 1);
  }
  else
  {
    uint64_t v16 = type metadata accessor for LocationManager();
    uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
    uint64_t v18 = v16;
    uint64_t v19 = a1 + a4[12];
    return v17(v19, a2, a2, v18);
  }
  return result;
}

void sub_1000560A0()
{
  sub_1000562A0();
  if (v0 <= 0x3F)
  {
    sub_1000562FC(319, (unint64_t *)&qword_100157B60, (void (*)(uint64_t))&type metadata accessor for ColorScheme);
    if (v1 <= 0x3F)
    {
      sub_1000562FC(319, (unint64_t *)&unk_100158630, (void (*)(uint64_t))&type metadata accessor for DismissAction);
      if (v2 <= 0x3F)
      {
        sub_1000562FC(319, (unint64_t *)&qword_100158048, (void (*)(uint64_t))&type metadata accessor for ScenePhase);
        if (v3 <= 0x3F)
        {
          type metadata accessor for LocationManager();
          if (v4 <= 0x3F) {
            swift_initStructMetadata();
          }
        }
      }
    }
  }
}

void sub_1000562A0()
{
  if (!qword_100158628)
  {
    sub_100006224(&qword_100156930);
    unint64_t v0 = type metadata accessor for Environment.Content();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100158628);
    }
  }
}

void sub_1000562FC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Environment.Content();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_100056350()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100056370(uint64_t a1, uint64_t a2)
{
  type metadata accessor for TrackPageView();

  return sub_100045EDC(a1, a2);
}

unint64_t sub_1000563F0()
{
  unint64_t result = qword_1001586A0;
  if (!qword_1001586A0)
  {
    sub_100006224(&qword_100158688);
    sub_1000564D8(&qword_1001586A8, &qword_1001586B0, (void (*)(void))sub_10005649C, (void (*)(void))sub_100056A40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001586A0);
  }
  return result;
}

uint64_t sub_10005649C()
{
  return sub_1000564D8(&qword_1001586B8, &qword_1001586C0, (void (*)(void))sub_10002F504, (void (*)(void))sub_100056560);
}

uint64_t sub_1000564D8(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100006224(a2);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100056560()
{
  return sub_100057BA8(&qword_1001586C8, &qword_1001586D0, (void (*)(void))sub_100056590);
}

unint64_t sub_100056590()
{
  unint64_t result = qword_1001586D8;
  if (!qword_1001586D8)
  {
    sub_100006224(&qword_1001586E0);
    sub_100056630();
    sub_100006480(&qword_100158790, &qword_100158798);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001586D8);
  }
  return result;
}

unint64_t sub_100056630()
{
  unint64_t result = qword_1001586E8;
  if (!qword_1001586E8)
  {
    sub_100006224(&qword_1001586F0);
    sub_1000566D0();
    sub_100006480(&qword_100158780, &qword_100158788);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001586E8);
  }
  return result;
}

unint64_t sub_1000566D0()
{
  unint64_t result = qword_1001586F8;
  if (!qword_1001586F8)
  {
    sub_100006224(&qword_100158700);
    sub_100056770();
    sub_100006480(&qword_100158770, &qword_100158778);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001586F8);
  }
  return result;
}

unint64_t sub_100056770()
{
  unint64_t result = qword_100158708;
  if (!qword_100158708)
  {
    sub_100006224(&qword_100158710);
    sub_100006224(&qword_100158718);
    sub_100006224(&qword_100158720);
    sub_100006224(&qword_100158728);
    sub_100006224(&qword_100158730);
    sub_1000568FC();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_100006480(&qword_100158758, &qword_100158720);
    swift_getOpaqueTypeConformance2();
    sub_100006480(&qword_100158760, &qword_100158768);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100158708);
  }
  return result;
}

unint64_t sub_1000568FC()
{
  unint64_t result = qword_100158738;
  if (!qword_100158738)
  {
    sub_100006224(&qword_100158730);
    sub_100006224(&qword_100158740);
    sub_100006480(&qword_100158748, &qword_100158740);
    sub_1000569EC();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100158738);
  }
  return result;
}

unint64_t sub_1000569EC()
{
  unint64_t result = qword_100158750;
  if (!qword_100158750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100158750);
  }
  return result;
}

unint64_t sub_100056A40()
{
  unint64_t result = qword_1001587A0;
  if (!qword_1001587A0)
  {
    sub_100006224(&qword_1001587A8);
    sub_100006480(&qword_1001587B0, &qword_1001587B8);
    sub_100057F30((unint64_t *)&qword_1001567D8, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001587A0);
  }
  return result;
}

uint64_t sub_100056B10@<X0>(uint64_t a1@<X8>)
{
  return sub_10004600C(*(void *)(v1 + 16), a1);
}

unint64_t sub_100056B18()
{
  unint64_t result = qword_1001587D0;
  if (!qword_1001587D0)
  {
    sub_100006224(&qword_1001587C8);
    sub_100006224(&qword_1001587D8);
    sub_100006480(&qword_1001587E0, &qword_1001587D8);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001587D0);
  }
  return result;
}

uint64_t sub_100056BF4@<X0>(uint64_t a1@<X8>)
{
  return sub_100046468(*(void *)(v1 + 16), a1);
}

unint64_t sub_100056BFC()
{
  unint64_t result = qword_1001587F8;
  if (!qword_1001587F8)
  {
    sub_100006224(&qword_1001587F0);
    sub_100006224(&qword_1001580B8);
    type metadata accessor for NavigationBarButtonStyle();
    sub_100006480(&qword_1001580B0, &qword_1001580B8);
    sub_100057F30(&qword_100156B10, (void (*)(uint64_t))type metadata accessor for NavigationBarButtonStyle);
    swift_getOpaqueTypeConformance2();
    sub_100057F30((unint64_t *)&qword_1001567D8, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001587F8);
  }
  return result;
}

uint64_t sub_100056D54()
{
  return sub_1000580D4((uint64_t (*)(uint64_t))sub_1000468D4);
}

uint64_t sub_100056D74(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100056DD0(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[2];
  *(_OWORD *)(a2 + 16) = a1[1];
  *(_OWORD *)(a2 + 32) = v3;
  *(_OWORD *)a2 = v2;
  long long v4 = a1[3];
  long long v5 = a1[4];
  long long v6 = a1[5];
  *(void *)(a2 + 96) = *((void *)a1 + 12);
  *(_OWORD *)(a2 + 64) = v5;
  *(_OWORD *)(a2 + 80) = v6;
  *(_OWORD *)(a2 + 48) = v4;
  return a2;
}

id sub_100056E04()
{
  return sub_100107E44();
}

uint64_t sub_100056E6C()
{
  uint64_t v2 = *(void *)(type metadata accessor for TrackPageView() - 8);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  long long v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *long long v4 = v1;
  v4[1] = sub_100014D10;
  return sub_100044E18(v3);
}

uint64_t sub_100056F3C(double a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for TrackPageView() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_10004FB74(v4, a1);
}

uint64_t sub_100056FB0()
{
  type metadata accessor for TrackPageView();

  return sub_10004FCF0();
}

uint64_t sub_100057034()
{
  return sub_1000580D4(sub_10004FE1C);
}

uint64_t sub_10005704C@<X0>(uint64_t a1@<X8>)
{
  return sub_10004FF20(*(void **)(v1 + 16), *(char **)(v1 + 24), a1);
}

uint64_t sub_100057058()
{
  type metadata accessor for TrackPageView();

  return sub_100052BE0();
}

uint64_t sub_1000570CC(uint64_t a1)
{
  return sub_100057B1C(a1, (uint64_t (*)(uint64_t, uint64_t))sub_100052CC8);
}

uint64_t sub_1000570EC()
{
  return sub_1000B05A4(*(void *)(v0 + 16), *(double *)(v0 + 24));
}

uint64_t sub_100057114()
{
  return sub_1000B064C(*(void *)(v0 + 16), *(double *)(v0 + 24));
}

unint64_t sub_100057144()
{
  unint64_t result = qword_1001588D0;
  if (!qword_1001588D0)
  {
    sub_100006224(&qword_1001588C8);
    sub_100006224(&qword_100158870);
    sub_100006480(&qword_1001588D8, &qword_100158870);
    swift_getOpaqueTypeConformance2();
    sub_100006224(&qword_100158858);
    sub_100006480(&qword_1001588E0, &qword_100158858);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001588D0);
  }
  return result;
}

uint64_t sub_100057270@<X0>(uint64_t a1@<X8>)
{
  return sub_1000525C4(v1[2], v1[3], v1[4], v1[5], a1);
}

uint64_t sub_10005727C@<X0>(uint64_t a1@<X8>)
{
  return sub_100051FEC(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_100057284@<X0>(uint64_t a1@<X8>)
{
  return sub_100051C34(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_10005728C@<X0>(uint64_t a1@<X8>)
{
  return sub_1000519B0(v1[2], v1[3], v1[4], a1);
}

unint64_t sub_100057298()
{
  unint64_t result = qword_100158908;
  if (!qword_100158908)
  {
    sub_100006224(&qword_100158900);
    sub_100057344();
    sub_100057F30((unint64_t *)&qword_1001567D8, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100158908);
  }
  return result;
}

unint64_t sub_100057344()
{
  unint64_t result = qword_100158910;
  if (!qword_100158910)
  {
    sub_100006224(&qword_100158918);
    sub_1000573E4();
    sub_100006480(&qword_100157210, &qword_100157218);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100158910);
  }
  return result;
}

unint64_t sub_1000573E4()
{
  unint64_t result = qword_100158920;
  if (!qword_100158920)
  {
    sub_100006224(&qword_100158928);
    sub_100057484();
    sub_100006480(&qword_100158470, &qword_100158478);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100158920);
  }
  return result;
}

unint64_t sub_100057484()
{
  unint64_t result = qword_100158930;
  if (!qword_100158930)
  {
    sub_100006224(&qword_100158938);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100158930);
  }
  return result;
}

uint64_t sub_1000574F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = EnvironmentValues.lineLimit.getter();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_10005752C()
{
  return EnvironmentValues.lineLimit.setter();
}

uint64_t sub_10005755C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = EnvironmentValues.multilineTextAlignment.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100057588@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = EnvironmentValues.multilineTextAlignment.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1000575B4()
{
  return EnvironmentValues.multilineTextAlignment.setter();
}

uint64_t sub_1000575DC()
{
  return EnvironmentValues.multilineTextAlignment.setter();
}

uint64_t sub_100057604@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = EnvironmentValues.lineLimit.getter();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_100057638()
{
  return EnvironmentValues.lineLimit.setter();
}

uint64_t sub_10005766C()
{
  return sub_1000580D4(sub_100051F0C);
}

uint64_t sub_100057684(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000576E4()
{
  return EnvironmentValues.openURL.getter();
}

uint64_t sub_100057708(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100053FEC(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for OpenURLAction, (uint64_t (*)(char *))&EnvironmentValues.openURL.setter);
}

uint64_t sub_10005774C()
{
  uint64_t v1 = *(void *)(type metadata accessor for TrackPageView() - 8);
  return sub_100052AF4(v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)));
}

uint64_t sub_1000577A8()
{
  return sub_1000B086C(*(void *)(v0 + 16), *(double *)(v0 + 24));
}

uint64_t sub_1000577CC(uint64_t a1)
{
  return sub_100057B1C(a1, (uint64_t (*)(uint64_t, uint64_t))sub_10004FA8C);
}

double sub_1000577E4(_OWORD *a1)
{
  double result = 0.0;
  *(_OWORD *)((char *)a1 + 105) = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

uint64_t sub_100057808(uint64_t result)
{
  if (result)
  {
    swift_retain();
    swift_retain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_10005786C(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))
{
  char v4 = *(unsigned char *)(a1 + 120);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), v4);
  return a1;
}

uint64_t sub_1000578D8(uint64_t result)
{
  if (result)
  {
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t *sub_100057938(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_1000579A0()
{
  return sub_1000580D4(sub_10004C948);
}

uint64_t sub_1000579B8()
{
  return sub_1000B19CC(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_1000579DC()
{
  return sub_1000580D4(sub_10004D1F8);
}

uint64_t sub_1000579F4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100057A50(uint64_t a1)
{
  return a1;
}

uint64_t sub_100057AA4(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_100057AC0()
{
  return sub_1000580D4(sub_10004BDCC);
}

uint64_t sub_100057AE0()
{
  return sub_1000B04FC(*(void *)(v0 + 16), *(double *)(v0 + 24));
}

uint64_t sub_100057B04(uint64_t a1)
{
  return sub_100057B1C(a1, (uint64_t (*)(uint64_t, uint64_t))sub_10004F6FC);
}

uint64_t sub_100057B1C(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(type metadata accessor for TrackPageView() - 8);
  uint64_t v5 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return a2(a1, v5);
}

uint64_t sub_100057BA8(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100006224(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100057C24()
{
  unint64_t result = qword_100158B08;
  if (!qword_100158B08)
  {
    sub_100006224(&qword_100158AE0);
    sub_100057F30(&qword_100158AF8, (void (*)(uint64_t))type metadata accessor for PlayInAppleMusicView);
    sub_100006480(&qword_100158B10, &qword_100158B18);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100158B08);
  }
  return result;
}

unint64_t sub_100057CF4()
{
  unint64_t result = qword_100158B28;
  if (!qword_100158B28)
  {
    sub_100006224(&qword_100158AC0);
    type metadata accessor for PlayInAppleMusicView();
    sub_100057F30(&qword_100158AF8, (void (*)(uint64_t))type metadata accessor for PlayInAppleMusicView);
    swift_getOpaqueTypeConformance2();
    sub_100006480(&qword_100158B10, &qword_100158B18);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100158B28);
  }
  return result;
}

uint64_t sub_100057E08()
{
  return sub_1000580D4(sub_10004AE20);
}

uint64_t sub_100057E28()
{
  return sub_1000B0454(*(void *)(v0 + 16), *(double *)(v0 + 24));
}

unint64_t sub_100057E60()
{
  unint64_t result = qword_100158BB8;
  if (!qword_100158BB8)
  {
    sub_100006224(&qword_100158B98);
    sub_100057F30(&qword_100158BC0, (void (*)(uint64_t))type metadata accessor for SongPreviewPlaybackView);
    sub_100006480(&qword_100158B10, &qword_100158B18);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100158BB8);
  }
  return result;
}

uint64_t sub_100057F30(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100057F78()
{
  unint64_t result = qword_100158BC8;
  if (!qword_100158BC8)
  {
    sub_100006224(&qword_100158BB0);
    sub_100058018();
    sub_100006480(&qword_100158B10, &qword_100158B18);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100158BC8);
  }
  return result;
}

unint64_t sub_100058018()
{
  unint64_t result = qword_100158BD0;
  if (!qword_100158BD0)
  {
    sub_100006224(&qword_100158BD8);
    sub_100006480(&qword_100158BE0, &qword_100158BE8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100158BD0);
  }
  return result;
}

uint64_t sub_1000580BC()
{
  return sub_1000580D4(sub_1000497B8);
}

uint64_t sub_1000580D4(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for TrackPageView() - 8);
  uint64_t v3 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return a1(v3);
}

uint64_t sub_100058148()
{
  return EnvironmentValues.layoutDirection.getter();
}

uint64_t sub_10005816C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100053FEC(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for LayoutDirection, (uint64_t (*)(char *))&EnvironmentValues.layoutDirection.setter);
}

uint64_t sub_1000581AC()
{
  return j__swift_retain(v0);
}

uint64_t sub_1000581B4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_100058214()
{
  unint64_t result = qword_100158C18;
  if (!qword_100158C18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100158C18);
  }
  return result;
}

unint64_t sub_100058268()
{
  unint64_t result = qword_100158C28;
  if (!qword_100158C28)
  {
    sub_100006224(&qword_100158C20);
    sub_100058214();
    sub_100006480(&qword_100158B10, &qword_100158B18);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100158C28);
  }
  return result;
}

unint64_t sub_100058308()
{
  unint64_t result = qword_100158C30;
  if (!qword_100158C30)
  {
    sub_100006224(&qword_100158C00);
    sub_100058214();
    swift_getOpaqueTypeConformance2();
    sub_100006480(&qword_100158B10, &qword_100158B18);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100158C30);
  }
  return result;
}

uint64_t sub_1000583D4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100058450()
{
  uint64_t v1 = (int *)type metadata accessor for TrackPageView();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v5 = v0 + v3;
  swift_release();
  uint64_t v6 = v0 + v3 + v1[5];
  sub_1000060EC(&qword_100156928);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for UserInterfaceSizeClass();
    uint64_t v8 = *(void *)(v7 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v9 = v5 + v1[6];
  sub_1000060EC(&qword_100156938);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for ColorScheme();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  }
  else
  {
    swift_release();
  }
  sub_100009CF8(*(void *)(v5 + v1[7]), *(unsigned char *)(v5 + v1[7] + 8));
  sub_100009CF8(*(void *)(v5 + v1[8]), *(unsigned char *)(v5 + v1[8] + 8));
  uint64_t v11 = v5 + v1[9];
  sub_1000060EC(&qword_100156918);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = type metadata accessor for DismissAction();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  }
  else
  {
    swift_release();
  }
  uint64_t v13 = v5 + v1[10];
  sub_1000060EC(&qword_100156920);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v14 = type metadata accessor for ScenePhase();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  }
  else
  {
    swift_release();
  }
  swift_release();
  unint64_t v15 = (id *)(v5 + v1[12]);

  uint64_t v16 = (char *)v15 + *(int *)(type metadata accessor for LocationManager() + 20);
  uint64_t v17 = type metadata accessor for Logger();
  (*(void (**)(char *, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
  swift_release();
  if (*(void *)(v5 + v1[14])) {
    swift_release();
  }

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_1000587C4()
{
  return sub_1000ADBD8();
}

uint64_t sub_100058828()
{
  return sub_1000B044C(*(void *)(v0 + 16), *(double *)(v0 + 24));
}

uint64_t sub_100058848()
{
  return sub_1000B0444(*(void *)(v0 + 16), *(double *)(v0 + 24));
}

uint64_t sub_100058868()
{
  return sub_1000B03C4(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_100058884(uint64_t a1)
{
  return a1;
}

ValueMetadata *type metadata accessor for ScreenWidthPreferenceKey()
{
  return &type metadata for ScreenWidthPreferenceKey;
}

ValueMetadata *type metadata accessor for TrackPageViewSafeAreaPreferenceKey()
{
  return &type metadata for TrackPageViewSafeAreaPreferenceKey;
}

ValueMetadata *type metadata accessor for BackgroundBlurHeightPreferenceKey()
{
  return &type metadata for BackgroundBlurHeightPreferenceKey;
}

ValueMetadata *type metadata accessor for NavigationBarTitleOffsetPreferenceKey()
{
  return &type metadata for NavigationBarTitleOffsetPreferenceKey;
}

uint64_t sub_100058918()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_100058A84(uint64_t a1)
{
  unint64_t result = sub_100058AAC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100058AAC()
{
  unint64_t result = qword_100158C60;
  if (!qword_100158C60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100158C60);
  }
  return result;
}

unint64_t sub_100058B00(uint64_t a1)
{
  unint64_t result = sub_100058B28();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100058B28()
{
  unint64_t result = qword_100158C68;
  if (!qword_100158C68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100158C68);
  }
  return result;
}

unint64_t sub_100058B7C(uint64_t a1)
{
  unint64_t result = sub_100058BA4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100058BA4()
{
  unint64_t result = qword_100158C70;
  if (!qword_100158C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100158C70);
  }
  return result;
}

unint64_t sub_100058BF8(uint64_t a1)
{
  unint64_t result = sub_100058C20();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100058C20()
{
  unint64_t result = qword_100158C78;
  if (!qword_100158C78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100158C78);
  }
  return result;
}

uint64_t sub_100058C74(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100058CDC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100058D38(uint64_t a1)
{
  return a1;
}

uint64_t sub_100058D6C(uint64_t a1)
{
  return a1;
}

uint64_t sub_100058D98(uint64_t a1)
{
  return a1;
}

uint64_t sub_100058DC4()
{
  return sub_1000570EC();
}

uint64_t sub_100058DDC()
{
  return sub_100057114();
}

uint64_t sub_100058DF4()
{
  return sub_1000577A8();
}

uint64_t sub_100058E0C()
{
  return sub_100057AE0();
}

uint64_t sub_100058E24()
{
  return sub_100057E28();
}

uint64_t sub_100058E40()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_100058EB8()
{
  v1[5] = v0;
  sub_1000060EC(&qword_1001570C8);
  v1[6] = swift_task_alloc();
  type metadata accessor for MainActor();
  v1[7] = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[8] = v3;
  v1[9] = v2;
  return _swift_task_switch(sub_100058F80, v3, v2);
}

uint64_t sub_100058F80()
{
  if (qword_100156018 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000E808(v1, (uint64_t)qword_100164B38);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Stopping recognition", v4, 2u);
    swift_slowDealloc();
  }
  uint64_t v6 = v0[5];
  uint64_t v5 = v0[6];

  uint64_t v7 = type metadata accessor for IntentSystemContext.Source();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v5, 1, 1, v7);
  uint64_t v8 = v6 + OBJC_IVAR____TtC16MusicRecognition15MusicRecognizer_origin;
  swift_beginAccess();
  sub_10005EDBC(v5, v8, &qword_1001570C8);
  swift_endAccess();
  SHManagedSession.cancel()();
  uint64_t v9 = (void *)swift_task_alloc();
  v0[10] = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_100059160;
  return sub_10006DBA8();
}

uint64_t sub_100059160()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 72);
  uint64_t v3 = *(void *)(v1 + 64);
  return _swift_task_switch(sub_100059280, v3, v2);
}

uint64_t sub_100059280()
{
  swift_release();
  if (qword_1001565D0 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)qword_10015D250;
  if (qword_10015D250)
  {
    NSString v2 = String._bridgeToObjectiveC()();
    [v1 setBool:0 forKey:v2];
  }
  type metadata accessor for ControlCenter();
  static ControlCenter.shared.getter();
  dispatch thunk of ControlCenter.reloadControls(ofKind:)();
  swift_release();
  sub_10005C16C();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_1000593A4(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for AnyCancellable();
    sub_10005EF14(&qword_100158F18, (void (*)(uint64_t))&type metadata accessor for AnyCancellable);
    uint64_t result = Set.Iterator.init(_cocoa:)();
    uint64_t v1 = v18;
    uint64_t v17 = v19;
    uint64_t v3 = v20;
    uint64_t v4 = v21;
    unint64_t v5 = v22;
  }
  else
  {
    uint64_t v6 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v17 = a1 + 56;
    uint64_t v3 = ~v6;
    uint64_t v7 = -v6;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v5 = v8 & *(void *)(a1 + 56);
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v4 = 0;
  }
  int64_t v9 = (unint64_t)(v3 + 64) >> 6;
  if (v1 < 0) {
    goto LABEL_10;
  }
  while (1)
  {
    if (v5)
    {
      uint64_t v10 = (v5 - 1) & v5;
      unint64_t v11 = __clz(__rbit64(v5)) | (v4 << 6);
      uint64_t v12 = v4;
      goto LABEL_29;
    }
    int64_t v13 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      break;
    }
    if (v13 >= v9) {
      return sub_10005F094();
    }
    unint64_t v14 = *(void *)(v17 + 8 * v13);
    uint64_t v12 = v4 + 1;
    if (!v14)
    {
      uint64_t v12 = v4 + 2;
      if (v4 + 2 >= v9) {
        return sub_10005F094();
      }
      unint64_t v14 = *(void *)(v17 + 8 * v12);
      if (!v14)
      {
        uint64_t v12 = v4 + 3;
        if (v4 + 3 >= v9) {
          return sub_10005F094();
        }
        unint64_t v14 = *(void *)(v17 + 8 * v12);
        if (!v14)
        {
          uint64_t v12 = v4 + 4;
          if (v4 + 4 >= v9) {
            return sub_10005F094();
          }
          unint64_t v14 = *(void *)(v17 + 8 * v12);
          if (!v14)
          {
            uint64_t v12 = v4 + 5;
            if (v4 + 5 >= v9) {
              return sub_10005F094();
            }
            unint64_t v14 = *(void *)(v17 + 8 * v12);
            if (!v14)
            {
              uint64_t v15 = v4 + 6;
              while (v9 != v15)
              {
                unint64_t v14 = *(void *)(v17 + 8 * v15++);
                if (v14)
                {
                  uint64_t v12 = v15 - 1;
                  goto LABEL_28;
                }
              }
              return sub_10005F094();
            }
          }
        }
      }
    }
LABEL_28:
    uint64_t v10 = (v14 - 1) & v14;
    unint64_t v11 = __clz(__rbit64(v14)) + (v12 << 6);
LABEL_29:
    uint64_t v16 = *(void *)(*(void *)(v1 + 48) + 8 * v11);
    swift_retain();
    if (!v16) {
      return sub_10005F094();
    }
    while (1)
    {
      AnyCancellable.cancel()();
      uint64_t result = swift_release();
      uint64_t v4 = v12;
      unint64_t v5 = v10;
      if ((v1 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_10:
      if (__CocoaSet.Iterator.next()())
      {
        type metadata accessor for AnyCancellable();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        swift_unknownObjectRelease();
        uint64_t v12 = v4;
        uint64_t v10 = v5;
        if (v23) {
          continue;
        }
      }
      return sub_10005F094();
    }
  }
  __break(1u);
  return result;
}

NSString sub_100059660()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_100164BC8 = (uint64_t)result;
  return result;
}

uint64_t sub_100059698()
{
  type metadata accessor for MusicRecognizer();
  uint64_t v0 = swift_allocObject();
  uint64_t result = sub_10005A4B4();
  qword_100164BD0 = v0;
  return result;
}

double sub_1000596D8@<D0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(unsigned char *)(a1 + 16) = v4;
  return result;
}

uint64_t sub_100059760(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  NSString v2 = *(void **)(a1 + 8);
  unsigned __int8 v3 = *(unsigned char *)(a1 + 16);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10005F080(v1, v2, v3);
  swift_retain();
  return static Published.subscript.setter();
}

BOOL sub_1000597F4()
{
  uint64_t v60 = type metadata accessor for IntentSystemContext.Source();
  uint64_t v62 = *(void *)(v60 - 8);
  __chkstk_darwin(v60);
  uint64_t v59 = &v47[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v61 = sub_1000060EC(&qword_100158F08);
  uint64_t v2 = __chkstk_darwin(v61);
  uint64_t v58 = &v47[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v2);
  unint64_t v5 = &v47[-v4];
  uint64_t v6 = sub_1000060EC(&qword_1001570C8);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v55 = &v47[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v57 = &v47[-v10];
  uint64_t v11 = __chkstk_darwin(v9);
  int64_t v13 = &v47[-v12];
  __chkstk_darwin(v11);
  uint64_t v15 = &v47[-v14];
  uint64_t v16 = sub_1000060EC(&qword_100157818);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = &v47[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v19 = type metadata accessor for Date();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v56 = &v47[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v21);
  char v24 = &v47[-v23];
  uint64_t v25 = v0 + OBJC_IVAR____TtC16MusicRecognition15MusicRecognizer_activityStartDate;
  swift_beginAccess();
  sub_100009C94(v25, (uint64_t)v18, &qword_100157818);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) != 1)
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v20 + 32))(v24, v18, v19);
    if (SBUIIsSystemApertureEnabled())
    {
      (*(void (**)(unsigned char *, uint64_t))(v20 + 8))(v24, v19);
      return 0;
    }
    uint64_t v54 = v24;
    uint64_t v26 = v0 + OBJC_IVAR____TtC16MusicRecognition15MusicRecognizer_origin;
    swift_beginAccess();
    uint64_t v27 = v62;
    uint64_t v28 = *(void (**)(unsigned char *, void, uint64_t))(v62 + 104);
    uint64_t v29 = v60;
    uint64_t v51 = v62 + 104;
    uint64_t v49 = v28;
    v28(v15, enum case for IntentSystemContext.Source.shortcuts(_:), v60);
    char v30 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v27 + 56);
    uint64_t v52 = v27 + 56;
    uint64_t v50 = v30;
    v30((uint64_t)v15, 0, 1, v29);
    uint64_t v31 = (uint64_t)&v5[*(int *)(v61 + 48)];
    uint64_t v53 = v26;
    sub_100009C94(v26, (uint64_t)v5, &qword_1001570C8);
    sub_100009C94((uint64_t)v15, v31, &qword_1001570C8);
    uint64_t v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48);
    if (v32((uint64_t)v5, 1, v29) == 1)
    {
      sub_1000063D0((uint64_t)v15, &qword_1001570C8);
      if (v32(v31, 1, v29) == 1) {
        goto LABEL_13;
      }
    }
    else
    {
      sub_100009C94((uint64_t)v5, (uint64_t)v13, &qword_1001570C8);
      if (v32(v31, 1, v29) != 1)
      {
        (*(void (**)(unsigned char *, uint64_t, uint64_t))(v62 + 32))(v59, v31, v29);
        sub_10005EF14((unint64_t *)&qword_100158F10, (void (*)(uint64_t))&type metadata accessor for IntentSystemContext.Source);
        int v48 = dispatch thunk of static Equatable.== infix(_:_:)();
        uint64_t v36 = *(void (**)(unsigned char *, uint64_t))(v62 + 8);
        v36(v59, v29);
        sub_1000063D0((uint64_t)v15, &qword_1001570C8);
        v36(v13, v29);
        sub_1000063D0((uint64_t)v5, &qword_1001570C8);
        if (v48) {
          goto LABEL_20;
        }
LABEL_11:
        uint64_t v33 = (uint64_t)v57;
        v49(v57, enum case for IntentSystemContext.Source.spotlight(_:), v29);
        v50(v33, 0, 1, v29);
        unint64_t v5 = v58;
        uint64_t v34 = (uint64_t)&v58[*(int *)(v61 + 48)];
        sub_100009C94(v53, (uint64_t)v58, &qword_1001570C8);
        sub_100009C94(v33, v34, &qword_1001570C8);
        if (v32((uint64_t)v5, 1, v29) == 1)
        {
          sub_1000063D0(v33, &qword_1001570C8);
          if (v32(v34, 1, v29) == 1)
          {
LABEL_13:
            sub_1000063D0((uint64_t)v5, &qword_1001570C8);
LABEL_20:
            uint64_t v41 = v56;
            Date.init()();
            uint64_t v42 = v54;
            Date.timeIntervalSince(_:)();
            double v44 = v43;
            uint64_t v45 = *(void (**)(unsigned char *, uint64_t))(v20 + 8);
            v45(v41, v19);
            v45(v42, v19);
            return v44 < 4.0;
          }
        }
        else
        {
          uint64_t v35 = v55;
          sub_100009C94((uint64_t)v5, (uint64_t)v55, &qword_1001570C8);
          if (v32(v34, 1, v29) != 1)
          {
            uint64_t v37 = v62;
            uint64_t v38 = v59;
            (*(void (**)(unsigned char *, uint64_t, uint64_t))(v62 + 32))(v59, v34, v29);
            sub_10005EF14((unint64_t *)&qword_100158F10, (void (*)(uint64_t))&type metadata accessor for IntentSystemContext.Source);
            char v39 = dispatch thunk of static Equatable.== infix(_:_:)();
            uint64_t v40 = *(void (**)(unsigned char *, uint64_t))(v37 + 8);
            v40(v38, v29);
            sub_1000063D0(v33, &qword_1001570C8);
            v40(v35, v29);
            sub_1000063D0((uint64_t)v5, &qword_1001570C8);
            if (v39) {
              goto LABEL_20;
            }
LABEL_21:
            (*(void (**)(unsigned char *, uint64_t))(v20 + 8))(v54, v19);
            return 0;
          }
          sub_1000063D0(v33, &qword_1001570C8);
          (*(void (**)(unsigned char *, uint64_t))(v62 + 8))(v35, v29);
        }
        sub_1000063D0((uint64_t)v5, &qword_100158F08);
        goto LABEL_21;
      }
      sub_1000063D0((uint64_t)v15, &qword_1001570C8);
      (*(void (**)(unsigned char *, uint64_t))(v62 + 8))(v13, v29);
    }
    sub_1000063D0((uint64_t)v5, &qword_100158F08);
    goto LABEL_11;
  }
  sub_1000063D0((uint64_t)v18, &qword_100157818);
  return 0;
}

uint64_t sub_10005A074()
{
  uint64_t v1 = (void *)(v0 + OBJC_IVAR____TtC16MusicRecognition15MusicRecognizer_subscriptions);
  swift_beginAccess();
  uint64_t v2 = swift_bridgeObjectRetain();
  sub_1000593A4(v2);
  swift_bridgeObjectRelease();
  void *v1 = &_swiftEmptySetSingleton;
  swift_bridgeObjectRelease();
  swift_release();
  sub_1000063D0(v0 + OBJC_IVAR____TtC16MusicRecognition15MusicRecognizer_origin, &qword_1001570C8);
  uint64_t v3 = v0 + OBJC_IVAR____TtC16MusicRecognition15MusicRecognizer__result;
  uint64_t v4 = sub_1000060EC(&qword_100157078);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_1000063D0(v0 + OBJC_IVAR____TtC16MusicRecognition15MusicRecognizer_activityStartDate, &qword_100157818);
  return v0;
}

uint64_t sub_10005A1C0()
{
  sub_10005A074();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v1, v2);
}

uint64_t sub_10005A218()
{
  return type metadata accessor for MusicRecognizer();
}

uint64_t type metadata accessor for MusicRecognizer()
{
  uint64_t result = qword_100158D48;
  if (!qword_100158D48) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10005A26C()
{
  sub_10005A454(319, &qword_100158D58, (void (*)(uint64_t))&type metadata accessor for IntentSystemContext.Source);
  if (v0 <= 0x3F)
  {
    sub_10005A3F8();
    if (v1 <= 0x3F)
    {
      sub_10005A454(319, (unint64_t *)&unk_100158D70, (void (*)(uint64_t))&type metadata accessor for Date);
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

void sub_10005A3F8()
{
  if (!qword_100158D60)
  {
    sub_100006224(&qword_100158D68);
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100158D60);
    }
  }
}

void sub_10005A454(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void *sub_10005A4A8()
{
  return &protocol witness table for ObservableObjectPublisher;
}

uint64_t sub_10005A4B4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000060EC(&qword_100157038);
  __chkstk_darwin(v2 - 8);
  unint64_t v4 = (char *)v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000060EC(&qword_100157078);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(unsigned char *)(v1 + 24) = 0;
  uint64_t v9 = v1 + OBJC_IVAR____TtC16MusicRecognition15MusicRecognizer_origin;
  uint64_t v10 = type metadata accessor for IntentSystemContext.Source();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  uint64_t v11 = v1 + OBJC_IVAR____TtC16MusicRecognition15MusicRecognizer__result;
  v23[1] = 0;
  void v23[2] = 0;
  char v24 = -1;
  sub_1000060EC(&qword_100158D68);
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v11, v8, v5);
  *(unsigned char *)(v1 + OBJC_IVAR____TtC16MusicRecognition15MusicRecognizer_isRetryAttempt) = 0;
  uint64_t v12 = OBJC_IVAR____TtC16MusicRecognition15MusicRecognizer_activity;
  type metadata accessor for MusicRecognitionActivity();
  int64_t v13 = (void *)swift_allocObject();
  v13[3] = 0;
  v13[4] = 0;
  void v13[2] = 0;
  *(void *)(v1 + v12) = v13;
  *(void *)(v1 + OBJC_IVAR____TtC16MusicRecognition15MusicRecognizer_spectralOutputObservers) = &_swiftEmptyArrayStorage;
  uint64_t v14 = (void *)(v1 + OBJC_IVAR____TtC16MusicRecognition15MusicRecognizer_musicRecognitionControlToggleKind);
  void *v14 = 0xD00000000000003ALL;
  v14[1] = 0x8000000100118E90;
  *(void *)(v1 + OBJC_IVAR____TtC16MusicRecognition15MusicRecognizer_subscriptions) = &_swiftEmptySetSingleton;
  uint64_t v15 = OBJC_IVAR____TtC16MusicRecognition15MusicRecognizer_runningBoardAssertion;
  *(void *)(v1 + v15) = [objc_allocWithZone((Class)type metadata accessor for RunningBoardAssertion()) init];
  uint64_t v16 = v1 + OBJC_IVAR____TtC16MusicRecognition15MusicRecognizer_activityStartDate;
  uint64_t v17 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 1, v17);
  type metadata accessor for SHManagedSession();
  swift_allocObject();
  *(void *)(v1 + 16) = SHManagedSession.init()();
  uint64_t v18 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v4, 1, 1, v18);
  uint64_t v19 = swift_allocObject();
  swift_weakInit();
  type metadata accessor for MainActor();
  swift_retain();
  uint64_t v20 = static MainActor.shared.getter();
  uint64_t v21 = (void *)swift_allocObject();
  void v21[2] = v20;
  v21[3] = &protocol witness table for MainActor;
  v21[4] = v19;
  swift_release();
  sub_1000DC37C((uint64_t)v4, (uint64_t)&unk_100158E48, (uint64_t)v21);
  swift_release();
  sub_10005A844();
  return v1;
}

uint64_t sub_10005A844()
{
  uint64_t v0 = sub_1000060EC(&qword_100158E50);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v14 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for NSNotificationCenter.Publisher();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000060EC(&qword_100158E58);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000150F8(0, &qword_100158E60);
  id v11 = [(id)swift_getObjCClassFromMetadata() defaultCenter];
  if (qword_100156118 != -1) {
    swift_once();
  }
  NSNotificationCenter.publisher(for:object:)();

  sub_1000150F8(0, (unint64_t *)&qword_100158E68);
  id v15 = (id)static OS_dispatch_queue.main.getter();
  uint64_t v12 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v2, 1, 1, v12);
  sub_10005EF14(&qword_100158E70, (void (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Publisher);
  sub_10005DE60();
  Publisher.receive<A>(on:options:)();
  sub_1000063D0((uint64_t)v2, &qword_100158E50);

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_10005DED0();
  swift_retain();
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_10005ABCC(char a1, uint64_t a2)
{
  *(void *)(v3 + 264) = a2;
  *(void *)(v3 + 272) = v2;
  *(unsigned char *)(v3 + 161) = a1;
  sub_1000060EC(&qword_100157038);
  *(void *)(v3 + 280) = swift_task_alloc();
  sub_1000060EC(&qword_100157818);
  *(void *)(v3 + 288) = swift_task_alloc();
  *(void *)(v3 + 296) = sub_1000060EC(&qword_1001570C8);
  *(void *)(v3 + 304) = swift_task_alloc();
  *(void *)(v3 + 312) = type metadata accessor for MainActor();
  *(void *)(v3 + 320) = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v3 + 328) = v5;
  *(void *)(v3 + 336) = v4;
  return _swift_task_switch(sub_10005AD00, v5, v4);
}

uint64_t sub_10005AD00()
{
  uint64_t v32 = v0;
  uint64_t v1 = *(void *)(v0 + 264);
  uint64_t v2 = *(void *)(v0 + 272);
  *(unsigned char *)(v2 + OBJC_IVAR____TtC16MusicRecognition15MusicRecognizer_isRetryAttempt) = *(unsigned char *)(v0 + 161);
  uint64_t v3 = OBJC_IVAR____TtC16MusicRecognition15MusicRecognizer_origin;
  *(void *)(v0 + 344) = OBJC_IVAR____TtC16MusicRecognition15MusicRecognizer_origin;
  uint64_t v4 = v2 + v3;
  swift_beginAccess();
  sub_10005ED4C(v1, v4);
  swift_endAccess();
  *(void *)(v0 + 352) = *(void *)(v2 + 16);
  SHManagedSession.state.getter();
  if (static SHManagedSession.State.== infix(_:_:)())
  {
    swift_release();
    if (qword_100156018 != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    sub_10000E808(v5, (uint64_t)qword_100164B38);
    uint64_t v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "Attempting to start recognition when already running", v8, 2u);
      swift_slowDealloc();
    }

    type metadata accessor for SHError(0);
    *(void *)(v0 + 248) = 202;
    sub_1000060EC(&qword_100158ED8);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100110670;
    *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(inited + 40) = v10;
    *(void *)(inited + 72) = &type metadata for String;
    *(void *)(inited + 48) = 0xD000000000000054;
    *(void *)(inited + 56) = 0x8000000100118F60;
    sub_1000E8C84(inited);
    sub_10005EF14(&qword_100156710, type metadata accessor for SHError);
    _BridgedStoredNSError.init(_:userInfo:)();
    uint64_t v11 = *(void *)(v0 + 240);
    id v12 = [objc_allocWithZone((Class)SHSignature) init];
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    int64_t v13 = *(uint64_t (**)(uint64_t, id, uint64_t))(v0 + 8);
    return v13(v11, v12, 2);
  }
  else
  {
    char v15 = *(unsigned char *)(v0 + 161);
    *(void *)(v0 + 360) = *(void *)(*(void *)(v0 + 272)
                                      + OBJC_IVAR____TtC16MusicRecognition15MusicRecognizer_runningBoardAssertion);
    sub_1000E1650();
    if (v15)
    {
      if (qword_100156018 != -1) {
        swift_once();
      }
      uint64_t v16 = type metadata accessor for Logger();
      sub_10000E808(v16, (uint64_t)qword_100164B38);
      swift_retain_n();
      uint64_t v17 = Logger.logObject.getter();
      os_log_type_t v18 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v17, v18))
      {
        uint64_t v19 = *(void *)(v0 + 304);
        uint64_t v20 = *(void *)(v0 + 272) + *(void *)(v0 + 344);
        uint64_t v21 = (uint8_t *)swift_slowAlloc();
        uint64_t v31 = swift_slowAlloc();
        *(_DWORD *)uint64_t v21 = 136315138;
        sub_100009C94(v20, v19, &qword_1001570C8);
        uint64_t v22 = Optional.debugDescription.getter();
        unint64_t v24 = v23;
        sub_1000063D0(v19, &qword_1001570C8);
        *(void *)(v0 + 256) = sub_1000CB67C(v22, v24, &v31);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_release_n();
        _os_log_impl((void *)&_mh_execute_header, v17, v18, "Starting recognition from source %s", v21, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_release_n();
      }

      if (qword_1001565D0 != -1) {
        swift_once();
      }
      uint64_t v26 = (void *)qword_10015D250;
      if (qword_10015D250)
      {
        NSString v27 = String._bridgeToObjectiveC()();
        [v26 setBool:1 forKey:v27];
      }
      uint64_t v28 = *(void *)(v0 + 272);
      *(void *)(v0 + 376) = type metadata accessor for ControlCenter();
      static ControlCenter.shared.getter();
      uint64_t v29 = v28 + OBJC_IVAR____TtC16MusicRecognition15MusicRecognizer_musicRecognitionControlToggleKind;
      *(void *)(v0 + 384) = *(void *)(v28
                                        + OBJC_IVAR____TtC16MusicRecognition15MusicRecognizer_musicRecognitionControlToggleKind);
      *(void *)(v0 + 392) = *(void *)(v29 + 8);
      dispatch thunk of ControlCenter.reloadControls(ofKind:)();
      swift_release();
      sub_10005C16C();
      swift_getKeyPath();
      swift_getKeyPath();
      *(void *)(v0 + 200) = 0;
      *(void *)(v0 + 192) = 0;
      *(unsigned char *)(v0 + 208) = -1;
      swift_retain();
      static Published.subscript.setter();
      char v30 = (void *)swift_task_alloc();
      *(void *)(v0 + 400) = v30;
      *char v30 = v0;
      v30[1] = sub_10005B85C;
      return sub_10006E1FC();
    }
    else
    {
      uint64_t v25 = (void *)swift_task_alloc();
      *(void *)(v0 + 368) = v25;
      *uint64_t v25 = v0;
      v25[1] = sub_10005B3B8;
      return sub_10006DBA8();
    }
  }
}

uint64_t sub_10005B3B8()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 336);
  uint64_t v3 = *(void *)(v1 + 328);
  return _swift_task_switch(sub_10005B4D8, v3, v2);
}

uint64_t sub_10005B4D8()
{
  uint64_t v17 = v0;
  if (qword_100156018 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000E808(v1, (uint64_t)qword_100164B38);
  swift_retain_n();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = *(void *)(v0 + 304);
    uint64_t v5 = *(void *)(v0 + 272) + *(void *)(v0 + 344);
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315138;
    sub_100009C94(v5, v4, &qword_1001570C8);
    uint64_t v7 = Optional.debugDescription.getter();
    unint64_t v9 = v8;
    sub_1000063D0(v4, &qword_1001570C8);
    *(void *)(v0 + 256) = sub_1000CB67C(v7, v9, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Starting recognition from source %s", v6, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_release_n();
  }

  if (qword_1001565D0 != -1) {
    swift_once();
  }
  uint64_t v10 = (void *)qword_10015D250;
  if (qword_10015D250)
  {
    NSString v11 = String._bridgeToObjectiveC()();
    [v10 setBool:1 forKey:v11];
  }
  uint64_t v12 = *(void *)(v0 + 272);
  *(void *)(v0 + 376) = type metadata accessor for ControlCenter();
  static ControlCenter.shared.getter();
  uint64_t v13 = v12 + OBJC_IVAR____TtC16MusicRecognition15MusicRecognizer_musicRecognitionControlToggleKind;
  *(void *)(v0 + 384) = *(void *)(v12
                                    + OBJC_IVAR____TtC16MusicRecognition15MusicRecognizer_musicRecognitionControlToggleKind);
  *(void *)(v0 + 392) = *(void *)(v13 + 8);
  dispatch thunk of ControlCenter.reloadControls(ofKind:)();
  swift_release();
  sub_10005C16C();
  swift_getKeyPath();
  swift_getKeyPath();
  *(void *)(v0 + 200) = 0;
  *(void *)(v0 + 192) = 0;
  *(unsigned char *)(v0 + 208) = -1;
  swift_retain();
  static Published.subscript.setter();
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v0 + 400) = v14;
  void *v14 = v0;
  v14[1] = sub_10005B85C;
  return sub_10006E1FC();
}

uint64_t sub_10005B85C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 336);
  uint64_t v3 = *(void *)(v1 + 328);
  return _swift_task_switch(sub_10005B97C, v3, v2);
}

uint64_t sub_10005B97C()
{
  uint64_t v1 = v0[36];
  uint64_t v2 = v0[34];
  Date.init()();
  uint64_t v3 = type metadata accessor for Date();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v1, 0, 1, v3);
  uint64_t v4 = v2 + OBJC_IVAR____TtC16MusicRecognition15MusicRecognizer_activityStartDate;
  swift_beginAccess();
  sub_10005EDBC(v1, v4, &qword_100157818);
  swift_endAccess();
  uint64_t v5 = (void *)swift_task_alloc();
  v0[51] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_10005BAA8;
  return SHManagedSession.result()();
}

uint64_t sub_10005BAA8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = *v3;
  uint64_t v5 = *v3;
  *(void *)(v5 + 416) = a1;
  *(void *)(v5 + 424) = a2;
  *(unsigned char *)(v5 + 162) = a3;
  swift_task_dealloc();
  uint64_t v6 = *(void *)(v4 + 336);
  uint64_t v7 = *(void *)(v4 + 328);
  return _swift_task_switch(sub_10005BBD4, v7, v6);
}

uint64_t sub_10005BBD4()
{
  char v1 = *(unsigned char *)(v0 + 162);
  uint64_t v3 = *(void *)(v0 + 416);
  uint64_t v2 = *(void *)(v0 + 424);
  swift_getKeyPath();
  swift_getKeyPath();
  *(void *)(v0 + 144) = v3;
  *(void *)(v0 + 152) = v2;
  *(unsigned char *)(v0 + 160) = v1;
  swift_retain();
  static Published.subscript.setter();
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 432) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_10005BCD4;
  return sub_10005C3CC();
}

uint64_t sub_10005BCD4()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 336);
  uint64_t v3 = *(void *)(v1 + 328);
  return _swift_task_switch(sub_10005BDF4, v3, v2);
}

void sub_10005BDF4()
{
  swift_release();
  uint64_t v1 = (void *)qword_10015D250;
  if (qword_10015D250)
  {
    NSString v2 = String._bridgeToObjectiveC()();
    [v1 setBool:0 forKey:v2];
  }
  uint64_t v3 = *(void *)(v0 + 272);
  static ControlCenter.shared.getter();
  dispatch thunk of ControlCenter.reloadControls(ofKind:)();
  swift_release();
  if (*(unsigned char *)(v3 + 24) != 1) {
    goto LABEL_16;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  int v4 = *(unsigned __int8 *)(v0 + 232);
  if (v4 == 255) {
    goto LABEL_16;
  }
  uint64_t v6 = *(void **)(v0 + 216);
  uint64_t v5 = *(void **)(v0 + 224);
  if (*(unsigned char *)(v0 + 232))
  {
    uint64_t v16 = *(void **)(v0 + 216);
    uint64_t v17 = *(void **)(v0 + 224);
LABEL_15:
    sub_100014BF8(v16, v17, v4);
    goto LABEL_16;
  }
  id v7 = [*(id *)(v0 + 216) mediaItems];
  sub_1000150F8(0, (unint64_t *)&qword_1001578D0);
  unint64_t v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v18) {
      goto LABEL_8;
    }
    goto LABEL_14;
  }
  if (!*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_14:
    swift_bridgeObjectRelease();
    uint64_t v16 = v6;
    uint64_t v17 = v5;
    LOBYTE(v4) = 0;
    goto LABEL_15;
  }
LABEL_8:
  if ((v8 & 0xC000000000000001) != 0)
  {
    id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    id v9 = *(id *)(v8 + 32);
  }
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v0 + 280);
  swift_bridgeObjectRelease();
  uint64_t v12 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  id v13 = v10;
  uint64_t v14 = static MainActor.shared.getter();
  char v15 = (void *)swift_allocObject();
  v15[2] = v14;
  v15[3] = &protocol witness table for MainActor;
  v15[4] = v13;
  sub_1000DC37C(v11, (uint64_t)&unk_100158ED0, (uint64_t)v15);
  sub_100014BF8(v6, v5, 0);

  swift_release();
LABEL_16:
  sub_1000E1B64();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v20 = *(void *)(v0 + 168);
  uint64_t v19 = *(void *)(v0 + 176);
  uint64_t v21 = *(unsigned __int8 *)(v0 + 184);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 8);
  v22(v20, v19, v21);
}

uint64_t sub_10005C16C()
{
  uint64_t v1 = (unint64_t *)(v0 + OBJC_IVAR____TtC16MusicRecognition15MusicRecognizer_spectralOutputObservers);
  swift_beginAccess();
  unint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    unint64_t v4 = 0;
    uint64_t v5 = 40;
    while (1)
    {
      sub_100009C94(v2 + v5 - 8, (uint64_t)v17, &qword_100157058);
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      swift_unknownObjectRelease();
      sub_1000063D0((uint64_t)v17, &qword_100157058);
      if (!Strong) {
        break;
      }
      ++v4;
      v5 += 8;
      if (v3 == v4)
      {
        uint64_t result = swift_bridgeObjectRelease();
        int64_t v8 = *(void *)(*v1 + 16);
        goto LABEL_10;
      }
    }
    uint64_t result = swift_bridgeObjectRelease();
    int64_t v8 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      goto LABEL_37;
    }
    unint64_t v9 = *v1;
    unint64_t v10 = *(void *)(*v1 + 16);
    if (v8 != v10)
    {
      unint64_t v11 = v4 + 1;
      while (v11 < v10)
      {
        sub_100009C94(v9 + v5, (uint64_t)v17, &qword_100157058);
        uint64_t v12 = swift_unknownObjectWeakLoadStrong();
        swift_unknownObjectRelease();
        uint64_t result = sub_1000063D0((uint64_t)v17, &qword_100157058);
        if (v12)
        {
          if (v11 != v4)
          {
            if ((v4 & 0x8000000000000000) != 0) {
              goto LABEL_31;
            }
            unint64_t v13 = *v1;
            unint64_t v14 = *(void *)(*v1 + 16);
            if (v4 >= v14) {
              goto LABEL_32;
            }
            uint64_t result = sub_100009C94(v13 + 8 * v4 + 32, (uint64_t)v17, &qword_100157058);
            if (v11 >= v14) {
              goto LABEL_33;
            }
            sub_100009C94(v13 + v5, (uint64_t)v16, &qword_100157058);
            uint64_t result = swift_isUniquelyReferenced_nonNull_native();
            unint64_t *v1 = v13;
            if ((result & 1) == 0)
            {
              uint64_t result = (uint64_t)sub_10005EA94(v13);
              unint64_t v13 = result;
              unint64_t *v1 = result;
            }
            if (v4 >= *(void *)(v13 + 16)) {
              goto LABEL_34;
            }
            uint64_t result = sub_10005EDBC((uint64_t)v16, v13 + 8 * v4 + 32, &qword_100157058);
            if (v11 >= *(void *)(*v1 + 16)) {
              goto LABEL_35;
            }
            uint64_t result = sub_10005EDBC((uint64_t)v17, *v1 + v5, &qword_100157058);
          }
          if (__OFADD__(v4++, 1)) {
            goto LABEL_30;
          }
        }
        int64_t v8 = v11 + 1;
        if (__OFADD__(v11, 1)) {
          goto LABEL_29;
        }
        unint64_t v9 = *v1;
        unint64_t v10 = *(void *)(*v1 + 16);
        ++v11;
        v5 += 8;
        if (v8 == v10) {
          goto LABEL_9;
        }
      }
      __break(1u);
LABEL_29:
      __break(1u);
LABEL_30:
      __break(1u);
LABEL_31:
      __break(1u);
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
LABEL_34:
      __break(1u);
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
LABEL_9:
    uint64_t v3 = v4;
LABEL_10:
    if (v8 >= v3) {
      goto LABEL_11;
    }
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
  }
  else
  {
    int64_t v8 = 0;
LABEL_11:
    sub_10005EBB4(v3, v8);
    return swift_endAccess();
  }
  return result;
}

uint64_t sub_10005C3CC()
{
  *(void *)(v1 + 40) = v0;
  sub_1000060EC(&qword_100157038);
  *(void *)(v1 + 48) = swift_task_alloc();
  return _swift_task_switch(sub_10005C460, 0, 0);
}

uint64_t sub_10005C460()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  *(void *)(v0 + 56) = v1;
  *(void *)(v0 + 64) = v2;
  int v3 = *(unsigned __int8 *)(v0 + 32);
  *(unsigned char *)(v0 + 33) = v3;
  if (v3 == 255)
  {
LABEL_4:
    swift_task_dealloc();
    int64_t v8 = *(uint64_t (**)(void))(v0 + 8);
    return v8();
  }
  if (sub_1000597F4())
  {
    uint64_t v5 = *(void *)(v0 + 40);
    uint64_t v4 = *(void *)(v0 + 48);
    uint64_t v6 = type metadata accessor for TaskPriority();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v4, 1, 1, v6);
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = 0;
    *(void *)(v7 + 24) = 0;
    *(void *)(v7 + 32) = v5;
    *(void *)(v7 + 40) = v1;
    *(void *)(v7 + 48) = v2;
    *(unsigned char *)(v7 + 56) = v3;
    swift_retain();
    sub_1000DC37C(v4, (uint64_t)&unk_100158EE8, v7);
    swift_release();
    goto LABEL_4;
  }
  unint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v10;
  *unint64_t v10 = v0;
  v10[1] = sub_10005C660;
  return sub_10006EF64(v1, v2, v3);
}

uint64_t sub_10005C660()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10005C75C, 0, 0);
}

uint64_t sub_10005C75C()
{
  sub_100014BF8(*(void **)(v0 + 56), *(void **)(v0 + 64), *(unsigned char *)(v0 + 33));
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10005C7C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _OWORD v4[3] = a4;
  type metadata accessor for MainActor();
  v4[4] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  _OWORD v4[5] = v6;
  v4[6] = v5;
  return _swift_task_switch(sub_10005C860, v6, v5);
}

uint64_t sub_10005C860()
{
  uint64_t v1 = (void *)v0[3];
  type metadata accessor for SHLibrary();
  v0[7] = static SHLibrary.default.getter();
  sub_1000060EC(&qword_100157030);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_100112420;
  *(void *)(v2 + 32) = v1;
  uint64_t v6 = v2;
  specialized Array._endMutation()();
  v0[8] = v6;
  id v3 = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[9] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_10005C968;
  return SHLibrary.addItems(_:)(v6);
}

uint64_t sub_10005C968()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 40);
    uint64_t v4 = *(void *)(v2 + 48);
    uint64_t v5 = sub_10005CAEC;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v3 = *(void *)(v2 + 40);
    uint64_t v4 = *(void *)(v2 + 48);
    uint64_t v5 = sub_10005CA8C;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_10005CA8C()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10005CAEC()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  if (qword_100156018 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000E808(v1, (uint64_t)qword_100164B38);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138412290;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 16) = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v5 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Unable to add track to library %@", v4, 0xCu);
    sub_1000060EC((uint64_t *)&unk_1001570F0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_10005CD0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  *(unsigned char *)(v7 + 80) = a7;
  *(void *)(v7 + 24) = a5;
  *(void *)(v7 + 32) = a6;
  *(void *)(v7 + 16) = a4;
  uint64_t v8 = type metadata accessor for ContinuousClock();
  *(void *)(v7 + 40) = v8;
  *(void *)(v7 + 48) = *(void *)(v8 - 8);
  *(void *)(v7 + 56) = swift_task_alloc();
  return _swift_task_switch(sub_10005CDD4, 0, 0);
}

uint64_t sub_10005CDD4()
{
  uint64_t v1 = static Duration.seconds(_:)();
  uint64_t v3 = v2;
  ContinuousClock.init()();
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_100158EF0 + dword_100158EF0);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_10005CEB0;
  return v6(v1, v3, 0, 0, 1);
}

uint64_t sub_10005CEB0()
{
  uint64_t v2 = (void *)*v1;
  swift_task_dealloc();
  uint64_t v3 = v2[7];
  uint64_t v4 = v2[6];
  uint64_t v5 = v2[5];
  if (v0)
  {
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    uint64_t v6 = sub_10005F3D4;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    uint64_t v6 = sub_10005D048;
  }
  return _swift_task_switch(v6, 0, 0);
}

uint64_t sub_10005D048()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v1;
  void *v1 = v0;
  v1[1] = sub_10005D0F0;
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(v0 + 32);
  char v4 = *(unsigned char *)(v0 + 80);
  return sub_10006EF64(v3, v2, v4);
}

uint64_t sub_10005D0F0()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_10005D200(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[10] = a4;
  uint64_t v5 = sub_1000060EC(&qword_100158EA8);
  v4[11] = v5;
  v4[12] = *(void *)(v5 - 8);
  v4[13] = swift_task_alloc();
  uint64_t v6 = sub_1000060EC(&qword_100158EB0);
  v4[14] = v6;
  v4[15] = *(void *)(v6 - 8);
  v4[16] = swift_task_alloc();
  v4[17] = type metadata accessor for MainActor();
  v4[18] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[19] = v8;
  v4[20] = v7;
  return _swift_task_switch(sub_10005D35C, v8, v7);
}

uint64_t sub_10005D35C()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  v0[21] = Strong;
  uint64_t v2 = v0[13];
  if (Strong)
  {
    uint64_t v3 = v0[11];
    uint64_t v4 = v0[12];
    SHManagedSession.spectralOutput.getter();
    AsyncStream.makeAsyncIterator()();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
    v0[22] = OBJC_IVAR____TtC16MusicRecognition15MusicRecognizer_spectralOutputObservers;
    swift_beginAccess();
    uint64_t v5 = static MainActor.shared.getter();
    v0[23] = v5;
    uint64_t v6 = (void *)swift_task_alloc();
    v0[24] = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_10005D51C;
    uint64_t v7 = v0[14];
    return AsyncStream.Iterator.next(isolation:)(v0 + 8, v5, &protocol witness table for MainActor, v7);
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
}

uint64_t sub_10005D51C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 160);
  uint64_t v3 = *(void *)(v1 + 152);
  return _swift_task_switch(sub_10005D660, v3, v2);
}

uint64_t sub_10005D660()
{
  uint64_t v1 = v0 + 8;
  if (v0[8])
  {
    uint64_t v2 = *(void *)(v0[21] + v0[22]);
    uint64_t v3 = *(void *)(v2 + 16);
    if (v3)
    {
      uint64_t v4 = (uint64_t)(v0 + 9);
      uint64_t v5 = v2 + 32;
      swift_bridgeObjectRetain();
      do
      {
        sub_100009C94(v5, v4, &qword_100157058);
        uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
        sub_1000063D0(v4, &qword_100157058);
        if (Strong)
        {
          Class isa = Array._bridgeToObjectiveC()().super.isa;
          [Strong receivedWithSpectralOutput:isa];
          swift_unknownObjectRelease();
        }
        v5 += 8;
        --v3;
      }
      while (v3);
      swift_bridgeObjectRelease();
      uint64_t v1 = v0 + 8;
    }
    swift_bridgeObjectRelease();
    uint64_t v10 = static MainActor.shared.getter();
    v0[23] = v10;
    uint64_t v11 = (void *)swift_task_alloc();
    v0[24] = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_10005D51C;
    uint64_t v12 = v0[14];
    return AsyncStream.Iterator.next(isolation:)(v1, v10, &protocol witness table for MainActor, v12);
  }
  else
  {
    (*(void (**)(void, void))(v0[15] + 8))(v0[16], v0[14]);
    swift_release();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
}

uint64_t sub_10005D880()
{
  uint64_t v0 = sub_1000060EC(&qword_100157038);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  uint64_t v4 = swift_allocObject();
  swift_weakInit();
  type metadata accessor for MainActor();
  swift_retain();
  uint64_t v5 = static MainActor.shared.getter();
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = v5;
  v6[3] = &protocol witness table for MainActor;
  v6[4] = v4;
  swift_release();
  sub_1000DC528((uint64_t)v2, (uint64_t)&unk_100158E90, (uint64_t)v6);
  return swift_release();
}

uint64_t sub_10005D9C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _OWORD v4[5] = a1;
  v4[6] = a4;
  type metadata accessor for MainActor();
  v4[7] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[8] = v6;
  v4[9] = v5;
  return _swift_task_switch(sub_10005DA60, v6, v5);
}

uint64_t sub_10005DA60()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  *(void *)(v0 + 80) = Strong;
  if (Strong)
  {
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 88) = v2;
    void *v2 = v0;
    v2[1] = sub_10005DB68;
    return sub_100058EB8();
  }
  else
  {
    swift_release();
    **(unsigned char **)(v0 + 40) = *(void *)(v0 + 80) == 0;
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
}

uint64_t sub_10005DB68()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 72);
  uint64_t v3 = *(void *)(v1 + 64);
  return _swift_task_switch(sub_10005DCAC, v3, v2);
}

uint64_t sub_10005DCAC()
{
  swift_release();
  **(unsigned char **)(v0 + 40) = *(void *)(v0 + 80) == 0;
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10005DD20@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10005DD70()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10005DDAC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  void *v7 = v2;
  v7[1] = sub_100015B24;
  return sub_10005D200(a1, v4, v5, v6);
}

unint64_t sub_10005DE60()
{
  unint64_t result = qword_100158E78;
  if (!qword_100158E78)
  {
    sub_1000150F8(255, (unint64_t *)&qword_100158E68);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100158E78);
  }
  return result;
}

uint64_t sub_10005DEC8()
{
  return sub_10005D880();
}

unint64_t sub_10005DED0()
{
  unint64_t result = qword_100158E80;
  if (!qword_100158E80)
  {
    sub_100006224(&qword_100158E58);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_100158E80);
  }
  return result;
}

uint64_t sub_10005DF30(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  void *v7 = v2;
  v7[1] = sub_100015B24;
  return sub_10005D9C8(a1, v4, v5, v6);
}

uint64_t sub_10005DFE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(void *)(v6 + 56) = v5;
  uint64_t v12 = type metadata accessor for ContinuousClock.Instant();
  *(void *)(v6 + 64) = v12;
  *(void *)(v6 + 72) = *(void *)(v12 - 8);
  *(void *)(v6 + 80) = swift_task_alloc();
  *(void *)(v6 + 88) = swift_task_alloc();
  *(void *)(v6 + 40) = a1;
  *(void *)(v6 + 48) = a2;
  *(void *)(v6 + 16) = a3;
  *(void *)(v6 + 24) = a4;
  *(unsigned char *)(v6 + 32) = a5 & 1;
  return _swift_task_switch(sub_10005E0E8, 0, 0);
}

uint64_t sub_10005E0E8()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[9];
  uint64_t v4 = type metadata accessor for ContinuousClock();
  uint64_t v5 = sub_10005EF14(&qword_100158EF8, (void (*)(uint64_t))&type metadata accessor for ContinuousClock);
  dispatch thunk of Clock.now.getter();
  sub_10005EF14(&qword_100158F00, (void (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant);
  dispatch thunk of InstantProtocol.advanced(by:)();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[12] = v6;
  v0[13] = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v6(v1, v2);
  uint64_t v7 = (void *)swift_task_alloc();
  v0[14] = v7;
  void *v7 = v0;
  v7[1] = sub_10005E288;
  uint64_t v8 = v0[11];
  return dispatch thunk of Clock.sleep(until:tolerance:)(v8, v0 + 2, v4, v5);
}

uint64_t sub_10005E288()
{
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(*v1 + 96);
  uint64_t v3 = *(void *)(*v1 + 88);
  uint64_t v4 = *(void *)(*v1 + 64);
  uint64_t v5 = *v1;
  *(void *)(v5 + 120) = v0;
  swift_task_dealloc();
  v2(v3, v4);
  if (v0)
  {
    return _swift_task_switch(sub_10005E444, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
}

uint64_t sub_10005E444()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

char *sub_10005E4B0(char *result, int64_t a2, char a3, unint64_t a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *(void *)(a4 + 24);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *(void *)(a4 + 16);
    if (v7 <= v8) {
      uint64_t v9 = *(void *)(a4 + 16);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1000060EC(&qword_100158EA0);
      uint64_t v10 = (char *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 32;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
      uint64_t v13 = (char *)&_swiftEmptyArrayStorage + 32;
      if (result)
      {
LABEL_15:
        if ((unint64_t)v10 < a4 || (unint64_t)v13 >= a4 + 32 + 8 * v8)
        {
          sub_1000060EC(&qword_100157058);
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v10 != (char *)a4)
        {
          sub_1000060EC(&qword_100157058);
          swift_arrayInitWithTakeBackToFront();
        }
        *(void *)(a4 + 16) = 0;
        goto LABEL_26;
      }
    }
    sub_10005EAA8(0, v8, (unint64_t)v13, a4);
LABEL_26:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_10005E608(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1000060EC(&qword_100158F28);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_10005F09C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_10005E730(char a1, int64_t a2, char a3, unint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_1000060EC(&qword_100158F30);
  uint64_t v10 = *(void *)(type metadata accessor for ContextMenuItemSection(0) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t v14 = j__malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (BOOL v15 = v11 == -1) : (BOOL v15 = 0), v15))
  {
LABEL_29:
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  void v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(type metadata accessor for ContextMenuItemSection(0) - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v18 = (unint64_t)v13 + v17;
  if (a1)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(void *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_10005F194(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

void *sub_10005E998(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  int64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v7 = a2;
    }
LABEL_8:
    int64_t v8 = a4[2];
    if (v7 <= v8) {
      int64_t v9 = a4[2];
    }
    else {
      int64_t v9 = v7;
    }
    if (v9)
    {
      sub_1000060EC(&qword_100158F20);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * v11 - 64;
      unint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= (void *)((char *)a4 + v8 + 32)) {
          memmove(v12, a4 + 4, v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      unint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_10005F2EC(0, v8, (char *)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_10005EA94(unint64_t a1)
{
  return sub_10005E4B0(0, *(void *)(a1 + 16), 0, a1);
}

uint64_t sub_10005EAA8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      sub_1000060EC(&qword_100157058);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10005EBB4(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v4 = *v2;
  int64_t v5 = *((void *)*v2 + 2);
  if (v5 < a2)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  char isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > *((void *)v4 + 3) >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    uint64_t v4 = sub_10005E4B0(isUniquelyReferenced_nonNull_native, v11, 1, (unint64_t)v4);
  }
  sub_1000060EC(&qword_100157058);
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_22;
  }
  uint64_t v13 = *((void *)v4 + 2);
  uint64_t v14 = v13 - a2;
  if (__OFSUB__(v13, a2)) {
    goto LABEL_28;
  }
  if ((v14 & 0x8000000000000000) == 0)
  {
    if (a1 < a2 || &v4[8 * a1 + 32] >= &v4[8 * a2 + 32 + 8 * v14])
    {
      uint64_t result = swift_arrayInitWithTakeFrontToBack();
    }
    else if (a1 != a2)
    {
      uint64_t result = swift_arrayInitWithTakeBackToFront();
    }
    uint64_t v15 = *((void *)v4 + 2);
    BOOL v16 = __OFADD__(v15, v8);
    uint64_t v17 = v15 - v7;
    if (!v16)
    {
      *((void *)v4 + 2) = v17;
LABEL_22:
      void *v2 = v4;
      return result;
    }
    goto LABEL_29;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10005ED4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000060EC(&qword_1001570C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_10005EDBC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_1000060EC(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_10005EE20()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10005EE60(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  void *v7 = v2;
  v7[1] = sub_100014D10;
  return sub_10005C7C8(a1, v4, v5, v6);
}

uint64_t sub_10005EF14(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10005EF5C()
{
  swift_unknownObjectRelease();
  swift_release();
  sub_100014C0C(*(void **)(v0 + 40), *(void **)(v0 + 48), *(unsigned char *)(v0 + 56));

  return _swift_deallocObject(v0, 57, 7);
}

uint64_t sub_10005EFA8(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 40);
  uint64_t v8 = *(void *)(v1 + 48);
  char v9 = *(unsigned char *)(v1 + 56);
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_100015B24;
  return sub_10005CD0C(a1, v4, v5, v6, v7, v8, v9);
}

id sub_10005F080(id result, void *a2, unsigned __int8 a3)
{
  if (a3 != 0xFF) {
    return sub_10002659C(result, a2, a3);
  }
  return result;
}

uint64_t sub_10005F094()
{
  return swift_release();
}

uint64_t sub_10005F09C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10005F194(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = *(void *)(type metadata accessor for ContextMenuItemSection(0) - 8);
    uint64_t v9 = a4 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v10 = *(void *)(v8 + 72);
    unint64_t v11 = v9 + v10 * a1;
    unint64_t v12 = a3 + v10 * v4;
    if (v11 >= v12 || v11 + v10 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v12;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

char *sub_10005F2EC(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + a1 + 32);
    unint64_t v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t destroy for LoadingView()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for LoadingView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for LoadingView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for LoadingView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for LoadingView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LoadingView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LoadingView()
{
  return &type metadata for LoadingView;
}

uint64_t sub_10005F5B4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10005F5D0()
{
  uint64_t v0 = sub_1000060EC(&qword_100158F38);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  ProgressView<>.init<>(_:)();
  if (qword_1001562F0 != -1) {
    swift_once();
  }
  sub_10005F730();
  View.accessibilityIdentifier(_:)();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

unint64_t sub_10005F730()
{
  unint64_t result = qword_100158F40;
  if (!qword_100158F40)
  {
    sub_100006224(&qword_100158F38);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100158F40);
  }
  return result;
}

unint64_t sub_10005F790()
{
  unint64_t result = qword_100158F48;
  if (!qword_100158F48)
  {
    sub_100006224((uint64_t *)&unk_100158F50);
    sub_10005F730();
    sub_10005F80C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100158F48);
  }
  return result;
}

unint64_t sub_10005F80C()
{
  unint64_t result = qword_1001567D8;
  if (!qword_1001567D8)
  {
    type metadata accessor for AccessibilityAttachmentModifier();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001567D8);
  }
  return result;
}

void sub_10005F864()
{
  qword_100158F60 = 0x636974617473;
  *(void *)algn_100158F68 = 0xE600000000000000;
}

void sub_10005F884()
{
  qword_100158F70 = 0x6E696E657473696CLL;
  *(void *)algn_100158F78 = 0xE900000000000067;
}

void sub_10005F8AC(double a1, double a2, double a3, double a4)
{
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v10 = self;
  unint64_t v11 = v4;
  id v12 = [v10 mainBundle];
  id v13 = objc_allocWithZone((Class)BSUICAPackageView);
  NSString v14 = String._bridgeToObjectiveC()();
  id v15 = [v13 initWithPackageName:v14 inBundle:v12];

  if (v15)
  {
    *(void *)&v11[OBJC_IVAR____TtC16MusicRecognition22ListeningAccessoryView_listeningView] = v15;
    uint64_t v16 = OBJC_IVAR____TtC16MusicRecognition22ListeningAccessoryView_imageView;
    *(void *)&v11[v16] = [objc_allocWithZone((Class)UIImageView) initWithFrame:0.0, 0.0, 0.0, 0.0];

    v18.receiver = v11;
    v18.super_class = ObjectType;
    id v17 = [super initWithFrame:a1, a2, a3, a4];
    sub_10005FA14();
  }
  else
  {
    __break(1u);
  }
}

void sub_10005FA14()
{
  [v0 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC16MusicRecognition22ListeningAccessoryView_listeningView];
  [v1 setTranslatesAutoresizingMaskIntoConstraints:0];
  if (qword_1001563C8 != -1) {
    swift_once();
  }
  NSString v2 = String._bridgeToObjectiveC()();
  [v1 setAccessibilityIdentifier:v2];

  [v1 setClipsToBounds:1];
  [v0 addSubview:v1];
  uint64_t v3 = *(void **)&v0[OBJC_IVAR____TtC16MusicRecognition22ListeningAccessoryView_imageView];
  [v3 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v3 _setContinuousCornerRadius:4.0];
  [v3 setClipsToBounds:1];
  [v0 addSubview:v3];
  uint64_t v25 = self;
  sub_1000060EC(&qword_100157030);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1001113F0;
  id v5 = [v1 centerXAnchor];
  id v6 = [v0 centerXAnchor];
  id v7 = [v5 constraintEqualToAnchor:v6];

  *(void *)(v4 + 32) = v7;
  id v8 = [v1 centerYAnchor];
  id v9 = [v0 centerYAnchor];
  id v10 = [v8 constraintEqualToAnchor:v9];

  *(void *)(v4 + 40) = v10;
  id v11 = [v1 heightAnchor];
  id v12 = [v11 constraintEqualToConstant:24.0];

  *(void *)(v4 + 48) = v12;
  id v13 = [v1 widthAnchor];
  id v14 = [v13 constraintEqualToConstant:24.0];

  *(void *)(v4 + 56) = v14;
  id v15 = [v3 centerXAnchor];
  id v16 = [v0 centerXAnchor];
  id v17 = [v15 constraintEqualToAnchor:v16];

  *(void *)(v4 + 64) = v17;
  id v18 = [v3 centerYAnchor];
  id v19 = [v0 centerYAnchor];
  id v20 = [v18 constraintEqualToAnchor:v19 constant:0.5];

  *(void *)(v4 + 72) = v20;
  id v21 = [v3 heightAnchor];
  id v22 = [v21 constraintEqualToConstant:20.5];

  *(void *)(v4 + 80) = v22;
  id v23 = [v3 widthAnchor];
  id v24 = [v23 constraintEqualToConstant:20.5];

  *(void *)(v4 + 88) = v24;
  specialized Array._endMutation()();
  sub_10002882C();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v25 activateConstraints:isa];
}

void sub_10005FE88(void *a1)
{
  NSString v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  id v5 = self;
  id v6 = v2;
  id v7 = [v5 mainBundle];
  id v8 = objc_allocWithZone((Class)BSUICAPackageView);
  NSString v9 = String._bridgeToObjectiveC()();
  id v10 = [v8 initWithPackageName:v9 inBundle:v7];

  if (v10)
  {
    *(void *)&v6[OBJC_IVAR____TtC16MusicRecognition22ListeningAccessoryView_listeningView] = v10;
    uint64_t v11 = OBJC_IVAR____TtC16MusicRecognition22ListeningAccessoryView_imageView;
    *(void *)&v6[v11] = [objc_allocWithZone((Class)UIImageView) initWithFrame:0.0, 0.0, 0.0, 0.0];

    v14.receiver = v6;
    v14.super_class = ObjectType;
    [super initWithCoder:a1];
    if (v12)
    {
      id v13 = v12;
      sub_10005FA14();
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t type metadata accessor for ListeningAccessoryView()
{
  return self;
}

uint64_t sub_100060080(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[2] = a4;
  v5[3] = a5;
  uint64_t v6 = type metadata accessor for URL();
  v5[4] = v6;
  v5[5] = *(void *)(v6 - 8);
  v5[6] = swift_task_alloc();
  sub_1000060EC((uint64_t *)&unk_100158FC0);
  v5[7] = swift_task_alloc();
  type metadata accessor for MainActor();
  v5[8] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[9] = v8;
  v5[10] = v7;
  return _swift_task_switch(sub_1000601A4, v8, v7);
}

uint64_t sub_1000601A4()
{
  uint64_t v1 = *(void **)(v0 + 24);
  *(void *)(v0 + 88) = *(void *)(*(void *)(v0 + 16)
                                   + OBJC_IVAR____TtC16MusicRecognition22ListeningAccessoryView_imageView);
  id v2 = [v1 artworkURL];
  uint64_t v3 = *(void *)(v0 + 56);
  if (v2)
  {
    uint64_t v4 = v2;
    uint64_t v6 = *(void *)(v0 + 40);
    uint64_t v5 = *(void *)(v0 + 48);
    uint64_t v7 = *(void *)(v0 + 32);
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v3, v5, v7);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56))(v3, 0, 1, v7);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v3, 1, v7) != 1)
    {
      sub_10001ABF4(*(void *)(v0 + 56));
      uint64_t v8 = (void *)swift_task_alloc();
      *(void *)(v0 + 96) = v8;
      *uint64_t v8 = v0;
      v8[1] = sub_10006043C;
      return sub_1001053DC();
    }
  }
  else
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 40) + 56))(*(void *)(v0 + 56), 1, 1, *(void *)(v0 + 32));
  }
  uint64_t v10 = *(void *)(v0 + 56);
  swift_release();
  sub_10001ABF4(v10);
  NSString v11 = String._bridgeToObjectiveC()();
  id v12 = [self imageNamed:v11];

  [*(id *)(v0 + 88) setImage:v12];
  if (qword_1001563B0 != -1) {
    swift_once();
  }
  id v13 = *(void **)(v0 + 88);
  NSString v14 = String._bridgeToObjectiveC()();
  [v13 setAccessibilityIdentifier:v14];

  swift_task_dealloc();
  swift_task_dealloc();
  id v15 = *(uint64_t (**)(void))(v0 + 8);
  return v15();
}

uint64_t sub_10006043C(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 104) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 72);
  return _swift_task_switch(sub_100060564, v4, v3);
}

uint64_t sub_100060564()
{
  uint64_t v1 = *(void **)(v0 + 104);
  swift_release();
  [*(id *)(v0 + 88) setImage:v1];

  if (qword_1001563B0 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void **)(v0 + 88);
  NSString v3 = String._bridgeToObjectiveC()();
  [v2 setAccessibilityIdentifier:v3];

  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_10006065C(uint64_t a1)
{
  v1[2] = a1;
  uint64_t v2 = type metadata accessor for URL();
  v1[3] = v2;
  v1[4] = *(void *)(v2 - 8);
  v1[5] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for URLRequest();
  v1[6] = v3;
  v1[7] = *(void *)(v3 - 8);
  v1[8] = swift_task_alloc();
  return _swift_task_switch(sub_100060778, 0, 0);
}

uint64_t sub_100060778()
{
  (*(void (**)(void, void, void))(v0[4] + 16))(v0[5], v0[2], v0[3]);
  URLRequest.init(url:cachePolicy:timeoutInterval:)();
  v0[9] = [self sharedSession];
  uint64_t v1 = (void *)swift_task_alloc();
  v0[10] = v1;
  void *v1 = v0;
  v1[1] = sub_100060874;
  uint64_t v2 = v0[8];
  return NSURLSession.data(for:delegate:)(v2, 0);
}

uint64_t sub_100060874(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v8 = *v4;
  NSString v9 = *(void **)(*v4 + 72);
  *(void *)(*v4 + 88) = v3;
  swift_task_dealloc();

  if (v3)
  {
    uint64_t v10 = sub_100060AC4;
  }
  else
  {

    *(void *)(v8 + 96) = a2;
    *(void *)(v8 + 104) = a1;
    uint64_t v10 = sub_1000609D0;
  }
  return _swift_task_switch(v10, 0, 0);
}

uint64_t sub_1000609D0()
{
  unint64_t v1 = v0[12];
  uint64_t v2 = v0[13];
  uint64_t v4 = v0[7];
  uint64_t v3 = v0[8];
  uint64_t v5 = v0[6];
  id v6 = objc_allocWithZone((Class)UIImage);
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  id v8 = [v6 initWithData:isa];
  sub_100060B4C(v2, v1);

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  NSString v9 = (uint64_t (*)(id))v0[1];
  return v9(v8);
}

uint64_t sub_100060AC4()
{
  (*(void (**)(void, void))(v0[7] + 8))(v0[8], v0[6]);
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_100060B4C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

void sub_100060BA4()
{
  qword_100158FD8 = 0x6C632E656C707061;
  unk_100158FE0 = 0xEF6C616369737361;
}

void sub_100060BD4()
{
  unk_100158FF7 = -18;
}

void sub_100060C04()
{
  qword_100158FF8 = 0x6C4320656C707041;
  unk_100159000 = 0xEF6C616369737361;
}

uint64_t sub_100060C34(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 176) = a7;
  *(void *)(v8 + 184) = a8;
  *(void *)(v8 + 160) = a5;
  *(void *)(v8 + 168) = a6;
  *(void *)(v8 + 144) = a2;
  *(void *)(v8 + 152) = a4;
  *(unsigned char *)(v8 + 256) = a3;
  *(void *)(v8 + 136) = a1;
  uint64_t v9 = type metadata accessor for URL();
  *(void *)(v8 + 192) = v9;
  *(void *)(v8 + 200) = *(void *)(v9 - 8);
  *(void *)(v8 + 208) = swift_task_alloc();
  sub_1000060EC((uint64_t *)&unk_100158FC0);
  *(void *)(v8 + 216) = swift_task_alloc();
  *(void *)(v8 + 224) = swift_task_alloc();
  sub_1000060EC(&qword_100158950);
  *(void *)(v8 + 232) = swift_task_alloc();
  sub_1000060EC(&qword_100158940);
  *(void *)(v8 + 240) = swift_task_alloc();
  return _swift_task_switch(sub_100060DA4, 0, 0);
}

uint64_t sub_100060DA4()
{
  if (*(unsigned char *)(v0 + 256) == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v1 = *(void *)(v0 + 232);
    uint64_t v2 = *(void *)(v0 + 184);
    uint64_t v3 = *(void *)(v0 + 136);
    *(void *)(v3 + *(int *)(type metadata accessor for StreamingServicesProvider() + 20)) = _swiftEmptyArrayStorage;
    sub_100009C94(v2, v1, &qword_100158950);
    uint64_t v4 = type metadata accessor for AnyAlbum();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(v1, 1, v4) == 1)
    {
      uint64_t v5 = *(void *)(v0 + 232);
      uint64_t v6 = *(void *)(v0 + 240);
      uint64_t v7 = *(void *)(v0 + 184);

      sub_1000063D0(v7, &qword_100158950);
      sub_1000063D0(v5, &qword_100158950);
      uint64_t v8 = type metadata accessor for StreamingService();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v6, 1, 1, v8);
    }
    else
    {
      uint64_t v12 = *(void *)(v0 + 224);
      uint64_t v11 = *(void *)(v0 + 232);
      uint64_t v13 = *(void *)(v0 + 216);
      uint64_t v14 = *(void *)(v0 + 192);
      uint64_t v15 = *(void *)(v0 + 200);
      uint64_t v16 = (void *)(v11 + *(int *)(v4 + 20));
      uint64_t v17 = v16[3];
      uint64_t v18 = v16[4];
      sub_100010740(v16, v17);
      (*(void (**)(uint64_t, uint64_t))(v18 + 56))(v17, v18);
      sub_100063BB0(v11, (uint64_t (*)(void))type metadata accessor for AnyAlbum);
      sub_100009C94(v12, v13, (uint64_t *)&unk_100158FC0);
      int v19 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14);
      id v20 = *(void **)(v0 + 240);
      if (v19 == 1)
      {
        uint64_t v21 = type metadata accessor for StreamingService();
        (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v20, 1, 1, v21);
      }
      else
      {
        uint64_t v22 = *(void *)(v0 + 208);
        (*(void (**)(uint64_t, void, void))(*(void *)(v0 + 200) + 32))(v22, *(void *)(v0 + 216), *(void *)(v0 + 192));
        sub_1000617CC(v22, v20);
        (*(void (**)(void, void))(*(void *)(v0 + 200) + 8))(*(void *)(v0 + 208), *(void *)(v0 + 192));
      }
      uint64_t v23 = *(void *)(v0 + 224);
      uint64_t v24 = *(void *)(v0 + 184);

      sub_1000063D0(v24, &qword_100158950);
      sub_1000063D0(v23, (uint64_t *)&unk_100158FC0);
    }
    sub_100063AE4(*(void *)(v0 + 240), *(void *)(v0 + 136));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v25 = *(uint64_t (**)(void))(v0 + 8);
    return v25();
  }
  else
  {
    uint64_t v9 = *(void **)(v0 + 144);
    *(void *)(v0 + 16) = v0;
    *(void *)(v0 + 56) = v0 + 120;
    *(void *)(v0 + 24) = sub_1000611C8;
    uint64_t v10 = swift_continuation_init();
    *(void *)(v0 + 80) = _NSConcreteStackBlock;
    *(void *)(v0 + 88) = 0x40000000;
    *(void *)(v0 + 96) = sub_100061B14;
    *(void *)(v0 + 104) = &unk_10014AF80;
    *(void *)(v0 + 112) = v10;
    [v9 streamingProviderValuesWithCompletion:v0 + 80];
    return _swift_continuation_await(v0 + 16);
  }
}

uint64_t sub_1000611C8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 248) = v1;
  if (v1) {
    uint64_t v2 = sub_1000616E4;
  }
  else {
    uint64_t v2 = sub_1000612D8;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1000612D8()
{
  uint64_t v36 = v0;
  uint64_t v2 = *(void *)(v0 + 168);
  uint64_t v1 = *(void *)(v0 + 176);
  uint64_t v4 = *(void *)(v0 + 152);
  uint64_t v3 = *(void *)(v0 + 160);
  uint64_t v5 = *(void **)(v0 + 120);
  id v6 = [v5 availableBundleIdentifiers];
  uint64_t v7 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  id v8 = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v9 = (void *)sub_100063830(v7, v8, v2, v1, v4, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t v35 = v9;
  swift_bridgeObjectRetain();
  sub_100061F70(&v35);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = v35;
  uint64_t v11 = *(void *)(v0 + 232);
  uint64_t v12 = *(void *)(v0 + 184);
  uint64_t v13 = *(void *)(v0 + 136);
  *(void *)(v13 + *(int *)(type metadata accessor for StreamingServicesProvider() + 20)) = v10;
  sub_100009C94(v12, v11, &qword_100158950);
  uint64_t v14 = type metadata accessor for AnyAlbum();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v11, 1, v14) == 1)
  {
    uint64_t v15 = *(void *)(v0 + 232);
    uint64_t v16 = *(void *)(v0 + 240);
    uint64_t v17 = *(void *)(v0 + 184);

    sub_1000063D0(v17, &qword_100158950);
    sub_1000063D0(v15, &qword_100158950);
    uint64_t v18 = type metadata accessor for StreamingService();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v16, 1, 1, v18);
  }
  else
  {
    uint64_t v20 = *(void *)(v0 + 224);
    uint64_t v19 = *(void *)(v0 + 232);
    uint64_t v21 = *(void *)(v0 + 216);
    uint64_t v22 = *(void *)(v0 + 192);
    uint64_t v23 = *(void *)(v0 + 200);
    uint64_t v24 = (void *)(v19 + *(int *)(v14 + 20));
    uint64_t v25 = v24[3];
    uint64_t v26 = v24[4];
    sub_100010740(v24, v25);
    (*(void (**)(uint64_t, uint64_t))(v26 + 56))(v25, v26);
    sub_100063BB0(v19, (uint64_t (*)(void))type metadata accessor for AnyAlbum);
    sub_100009C94(v20, v21, (uint64_t *)&unk_100158FC0);
    int v27 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22);
    uint64_t v28 = *(void **)(v0 + 240);
    if (v27 == 1)
    {
      uint64_t v29 = type metadata accessor for StreamingService();
      (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v28, 1, 1, v29);
    }
    else
    {
      uint64_t v30 = *(void *)(v0 + 208);
      (*(void (**)(uint64_t, void, void))(*(void *)(v0 + 200) + 32))(v30, *(void *)(v0 + 216), *(void *)(v0 + 192));
      sub_1000617CC(v30, v28);
      (*(void (**)(void, void))(*(void *)(v0 + 200) + 8))(*(void *)(v0 + 208), *(void *)(v0 + 192));
    }
    uint64_t v31 = *(void *)(v0 + 224);
    uint64_t v32 = *(void *)(v0 + 184);

    sub_1000063D0(v32, &qword_100158950);
    sub_1000063D0(v31, (uint64_t *)&unk_100158FC0);
  }
  sub_100063AE4(*(void *)(v0 + 240), *(void *)(v0 + 136));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v33 = *(uint64_t (**)(void))(v0 + 8);
  return v33();
}

uint64_t sub_1000616E4()
{
  uint64_t v1 = v0[23];
  uint64_t v2 = (void *)v0[18];
  swift_willThrow();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_1000063D0(v1, &qword_100158950);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_1000617CC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  id v3 = [objc_allocWithZone((Class)LSApplicationWorkspace) init];
  uint64_t v4 = self;
  NSString v5 = String._bridgeToObjectiveC()();
  id v6 = [v4 applicationWithBundleIdentifier:v5];

  NSString v7 = String._bridgeToObjectiveC()();
  unsigned int v8 = [v3 applicationIsInstalled:v7];

  if (v8
    && (id v9 = [objc_allocWithZone((Class)LSApplicationWorkspace) init],
        NSString v10 = String._bridgeToObjectiveC()(),
        id v11 = [v4 applicationWithBundleIdentifier:v10],
        v10,
        LOBYTE(v10) = [v11 isHidden],
        v11,
        v9,
        (v10 & 1) == 0))
  {
    id v14 = [objc_allocWithZone((Class)LSApplicationWorkspace) init];
    NSString v15 = String._bridgeToObjectiveC()();

    uint64_t v16 = (int *)type metadata accessor for StreamingService();
    uint64_t v17 = (char *)a2 + v16[5];
    uint64_t v18 = type metadata accessor for URL();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v17, a1, v18);
    if (qword_100156148 != -1) {
      swift_once();
    }
    uint64_t v20 = qword_100158FF8;
    uint64_t v19 = unk_100159000;
    uint64_t v21 = qword_100156138;
    swift_bridgeObjectRetain();
    if (v21 != -1) {
      swift_once();
    }
    uint64_t v22 = qword_100158FD8;
    uint64_t v23 = unk_100158FE0;
    *a2 = 0xD000000000000019;
    a2[1] = 0x80000001001190C0;
    uint64_t v24 = (void *)((char *)a2 + v16[6]);
    uint64_t *v24 = v20;
    v24[1] = v19;
    uint64_t v25 = (void *)((char *)a2 + v16[7]);
    *uint64_t v25 = v22;
    v25[1] = v23;
    *((unsigned char *)a2 + v16[8]) = 1;
    (*(void (**)(void *, void, uint64_t, int *))(*((void *)v16 - 1) + 56))(a2, 0, 1, v16);
    return swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v12 = type metadata accessor for StreamingService();
    return (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(a2, 1, 1, v12);
  }
}

uint64_t sub_100061B14(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    sub_1000060EC(&qword_1001577C8);
    uint64_t v5 = swift_allocError();
    *id v6 = a3;
    id v7 = a3;
    return _swift_continuation_throwingResumeWithError(v3, v5);
  }
  else
  {
    if (a2)
    {
      **(void **)(*(void *)(v3 + 64) + 40) = a2;
      id v8 = a2;
      a1 = v3;
    }
    else
    {
      __break(1u);
    }
    return _swift_continuation_throwingResume(a1);
  }
}

uint64_t sub_100061BD4@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X4>, uint64_t a4@<X5>, char *a5@<X8>)
{
  uint64_t v44 = a4;
  uint64_t v41 = a3;
  uint64_t v46 = a5;
  uint64_t v47 = type metadata accessor for URL();
  uint64_t v45 = *(void *)(v47 - 8);
  uint64_t v7 = __chkstk_darwin(v47);
  id v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  id v11 = (char *)&v40 - v10;
  uint64_t v12 = *a1;
  uint64_t v13 = a1[1];
  NSString v14 = String._bridgeToObjectiveC()();
  id v15 = [a2 providerNameForBundleID:v14];

  uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v42 = v17;
  uint64_t v43 = v16;

  uint64_t v18 = v11;
  NSString v19 = String._bridgeToObjectiveC()();
  NSString v20 = String._bridgeToObjectiveC()();
  NSString v21 = String._bridgeToObjectiveC()();
  id v22 = [a2 searchURLForBundleID:v19 title:v20 artist:v21];

  static URL._unconditionallyBridgeFromObjectiveC(_:)();
  id v23 = objc_allocWithZone((Class)LSApplicationWorkspace);
  swift_bridgeObjectRetain();
  id v24 = [v23 init];
  uint64_t v25 = self;
  swift_bridgeObjectRetain();
  NSString v26 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v27 = [v25 applicationWithBundleIdentifier:v26];

  uint64_t v44 = v12;
  NSString v28 = String._bridgeToObjectiveC()();
  LODWORD(v26) = [v24 applicationIsInstalled:v28];

  if (v26) {
    LODWORD(v41) = [v27 isHidden] ^ 1;
  }
  else {
    LODWORD(v41) = 0;
  }
  uint64_t v29 = v45;
  uint64_t v30 = v47;
  (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v9, v18, v47);
  uint64_t v31 = qword_100156140;
  swift_bridgeObjectRetain();
  if (v31 != -1) {
    swift_once();
  }
  uint64_t v33 = qword_100158FE8;
  uint64_t v32 = unk_100158FF0;
  swift_bridgeObjectRetain();

  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v18, v30);
  uint64_t v34 = v46;
  *(void *)uint64_t v46 = v44;
  *((void *)v34 + 1) = v13;
  uint64_t v35 = (int *)type metadata accessor for StreamingService();
  uint64_t result = (*(uint64_t (**)(char *, char *, uint64_t))(v29 + 32))(&v34[v35[5]], v9, v30);
  uint64_t v37 = (uint64_t *)&v34[v35[6]];
  uint64_t v38 = v42;
  *uint64_t v37 = v43;
  v37[1] = v38;
  char v39 = (uint64_t *)&v34[v35[7]];
  *char v39 = v33;
  v39[1] = v32;
  v34[v35[8]] = v41;
  return result;
}

Swift::Int sub_100061F70(void **a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for StreamingService() - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = (void *)sub_100063698(v3);
  }
  uint64_t v4 = v3[2];
  v6[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  Swift::Int result = sub_100062018(v6);
  *a1 = v3;
  return result;
}

Swift::Int sub_100062018(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v159 = type metadata accessor for StreamingService();
  uint64_t v155 = *(void *)(v159 - 8);
  uint64_t v4 = __chkstk_darwin(v159);
  uint64_t v150 = (uint64_t)&v141 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v160 = (uint64_t)&v141 - v7;
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v141 - v9;
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v13 = (char *)&v141 - v12;
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v153 = (uint64_t)&v141 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v152 = (uint64_t)&v141 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v148 = (uint64_t)&v141 - v19;
  __chkstk_darwin(v18);
  uint64_t v147 = (uint64_t)&v141 - v20;
  uint64_t v162 = a1;
  Swift::Int v21 = a1[1];
  Swift::Int result = _minimumMergeRunLength(_:)(v21);
  if (result >= v21)
  {
    if (v21 < 0) {
      goto LABEL_155;
    }
    if (v21) {
      return sub_100062B4C(0, v21, 1, v162);
    }
    return result;
  }
  if (v21 >= 0) {
    uint64_t v23 = v21;
  }
  else {
    uint64_t v23 = v21 + 1;
  }
  if (v21 < -1) {
    goto LABEL_163;
  }
  uint64_t v156 = v10;
  Swift::Int v144 = result;
  if (v21 < 2)
  {
    id v27 = (char *)_swiftEmptyArrayStorage;
    unint64_t v154 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v155 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v155 + 80));
    uint64_t v143 = _swiftEmptyArrayStorage;
    if (v21 != 1)
    {
      unint64_t v29 = _swiftEmptyArrayStorage[2];
LABEL_121:
      if (v29 >= 2)
      {
        uint64_t v134 = *v162;
        do
        {
          unint64_t v135 = v29 - 2;
          if (v29 < 2) {
            goto LABEL_150;
          }
          if (!v134) {
            goto LABEL_162;
          }
          uint64_t v136 = v27;
          uint64_t v137 = *(void *)&v27[16 * v135 + 32];
          uint64_t v138 = *(void *)&v27[16 * v29 + 24];
          sub_100062DFC(v134 + *(void *)(v155 + 72) * v137, v134 + *(void *)(v155 + 72) * *(void *)&v27[16 * v29 + 16], v134 + *(void *)(v155 + 72) * v138, v154);
          if (v2) {
            break;
          }
          if (v138 < v137) {
            goto LABEL_151;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v136 = sub_10006365C((uint64_t)v27);
          }
          if (v135 >= *((void *)v136 + 2)) {
            goto LABEL_152;
          }
          uint64_t v139 = &v136[16 * v135 + 32];
          *(void *)uint64_t v139 = v137;
          *((void *)v139 + 1) = v138;
          unint64_t v140 = *((void *)v136 + 2);
          if (v29 > v140) {
            goto LABEL_153;
          }
          memmove(&v136[16 * v29 + 16], &v136[16 * v29 + 32], 16 * (v140 - v29));
          *((void *)v136 + 2) = v140 - 1;
          unint64_t v29 = v140 - 1;
          id v27 = v136;
        }
        while (v140 > 2);
      }
LABEL_132:
      swift_bridgeObjectRelease();
      v143[2] = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v24 = v23 >> 1;
    uint64_t v25 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)(v25 + 16) = v24;
    uint64_t v26 = *(unsigned __int8 *)(v155 + 80);
    uint64_t v143 = (void *)v25;
    unint64_t v154 = v25 + ((v26 + 32) & ~v26);
  }
  Swift::Int v28 = 0;
  id v27 = (char *)_swiftEmptyArrayStorage;
  uint64_t v146 = v13;
  while (1)
  {
    Swift::Int v30 = v28;
    Swift::Int v31 = v28 + 1;
    Swift::Int v151 = v28;
    if (v28 + 1 < v21)
    {
      uint64_t v32 = *v162;
      Swift::Int v33 = *(void *)(v155 + 72);
      uint64_t v34 = v147;
      sub_100063B4C(*v162 + v33 * v31, v147);
      uint64_t v157 = v32;
      Swift::Int v161 = v33;
      uint64_t v35 = v32 + v33 * v30;
      uint64_t v36 = v148;
      sub_100063B4C(v35, v148);
      uint64_t v37 = *(int *)(v159 + 24);
      uint64_t v38 = *(void *)(v34 + v37);
      uint64_t v39 = *(void *)(v34 + v37 + 8);
      uint64_t v40 = (void *)(v36 + v37);
      if (v38 == *v40 && v39 == v40[1]) {
        LODWORD(v158) = 0;
      }
      else {
        LODWORD(v158) = _stringCompareWithSmolCheck(_:_:expecting:)();
      }
      sub_100063BB0(v148, (uint64_t (*)(void))type metadata accessor for StreamingService);
      sub_100063BB0(v147, (uint64_t (*)(void))type metadata accessor for StreamingService);
      if (v30 + 2 >= v21)
      {
        Swift::Int v31 = v30 + 2;
        if ((v158 & 1) == 0) {
          goto LABEL_50;
        }
      }
      else
      {
        Swift::Int v42 = v21;
        uint64_t v145 = v27;
        Swift::Int v43 = v161 * v31;
        uint64_t v44 = v157;
        uint64_t v45 = v161 * (v30 + 2);
        Swift::Int v46 = v30 + 2;
        while (1)
        {
          uint64_t v47 = v152;
          sub_100063B4C(v44 + v45, v152);
          uint64_t v48 = v153;
          sub_100063B4C(v44 + v43, v153);
          uint64_t v49 = *(int *)(v159 + 24);
          uint64_t v50 = *(void *)(v47 + v49);
          uint64_t v51 = *(void *)(v47 + v49 + 8);
          uint64_t v52 = (void *)(v48 + v49);
          BOOL v53 = v50 == *v52 && v51 == v52[1];
          int v54 = v53 ? 0 : _stringCompareWithSmolCheck(_:_:expecting:)();
          sub_100063BB0(v153, (uint64_t (*)(void))type metadata accessor for StreamingService);
          sub_100063BB0(v152, (uint64_t (*)(void))type metadata accessor for StreamingService);
          if ((v158 ^ v54)) {
            break;
          }
          ++v46;
          v44 += v161;
          if (v42 == v46)
          {
            Swift::Int v21 = v42;
            Swift::Int v31 = v42;
            id v27 = v145;
            Swift::Int v30 = v151;
            if (v158) {
              goto LABEL_37;
            }
            goto LABEL_50;
          }
        }
        id v27 = v145;
        Swift::Int v31 = v46;
        Swift::Int v30 = v151;
        Swift::Int v21 = v42;
        if ((v158 & 1) == 0) {
          goto LABEL_50;
        }
      }
LABEL_37:
      if (v31 < v30) {
        goto LABEL_156;
      }
      if (v30 < v31)
      {
        Swift::Int v149 = v21;
        uint64_t v145 = v27;
        uint64_t v55 = 0;
        uint64_t v56 = v161 * (v31 - 1);
        Swift::Int v57 = v31 * v161;
        uint64_t v58 = v30 * v161;
        do
        {
          if (v30 != v31 + v55 - 1)
          {
            Swift::Int v60 = v31;
            uint64_t v61 = v157;
            if (!v157) {
              goto LABEL_161;
            }
            unint64_t v62 = v157 + v58;
            Swift::Int v158 = v157 + v56;
            sub_100063C10(v157 + v58, v150);
            if (v58 < v56 || v62 >= v61 + v57)
            {
              uint64_t v59 = v158;
              swift_arrayInitWithTakeFrontToBack();
            }
            else
            {
              uint64_t v59 = v158;
              if (v58 != v56) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            sub_100063C10(v150, v59);
            Swift::Int v31 = v60;
          }
          ++v30;
          --v55;
          v56 -= v161;
          v57 -= v161;
          v58 += v161;
        }
        while (v30 < v31 + v55);
        id v27 = v145;
        uint64_t v13 = v146;
        Swift::Int v30 = v151;
        Swift::Int v21 = v149;
      }
    }
LABEL_50:
    if (v31 >= v21) {
      goto LABEL_73;
    }
    if (__OFSUB__(v31, v30)) {
      goto LABEL_154;
    }
    if (v31 - v30 >= v144) {
      goto LABEL_73;
    }
    if (__OFADD__(v30, v144)) {
      goto LABEL_157;
    }
    Swift::Int v63 = v30 + v144 >= v21 ? v21 : v30 + v144;
    if (v63 < v30) {
      break;
    }
    if (v31 != v63)
    {
      uint64_t v145 = v27;
      uint64_t v142 = v2;
      uint64_t v64 = *(void *)(v155 + 72);
      uint64_t v65 = v64 * (v31 - 1);
      uint64_t v157 = v64;
      Swift::Int v161 = v31 * v64;
      Swift::Int v149 = v63;
      do
      {
        uint64_t v67 = 0;
        Swift::Int v68 = v30;
        Swift::Int v158 = v31;
        while (1)
        {
          uint64_t v69 = *v162;
          sub_100063B4C(v161 + v67 + *v162, (uint64_t)v13);
          uint64_t v70 = v65;
          uint64_t v71 = v65 + v67 + v69;
          uint64_t v72 = (uint64_t)v13;
          uint64_t v73 = (uint64_t)v156;
          sub_100063B4C(v71, (uint64_t)v156);
          uint64_t v74 = *(int *)(v159 + 24);
          uint64_t v75 = *(void *)(v72 + v74);
          uint64_t v76 = *(void *)(v72 + v74 + 8);
          uint64_t v77 = (void *)(v73 + v74);
          if (v75 == *v77 && v76 == v77[1]) {
            break;
          }
          char v79 = _stringCompareWithSmolCheck(_:_:expecting:)();
          sub_100063BB0(v73, (uint64_t (*)(void))type metadata accessor for StreamingService);
          sub_100063BB0(v72, (uint64_t (*)(void))type metadata accessor for StreamingService);
          uint64_t v13 = (char *)v72;
          if ((v79 & 1) == 0) {
            goto LABEL_61;
          }
          uint64_t v80 = *v162;
          if (!*v162) {
            goto LABEL_159;
          }
          uint64_t v65 = v70;
          uint64_t v81 = v80 + v70 + v67;
          sub_100063C10(v80 + v161 + v67, v160);
          swift_arrayInitWithTakeFrontToBack();
          sub_100063C10(v160, v81);
          Swift::Int v66 = v158;
          v67 -= v157;
          if (v158 == ++v68) {
            goto LABEL_62;
          }
        }
        sub_100063BB0(v73, (uint64_t (*)(void))type metadata accessor for StreamingService);
        sub_100063BB0(v72, (uint64_t (*)(void))type metadata accessor for StreamingService);
        uint64_t v13 = (char *)v72;
LABEL_61:
        Swift::Int v66 = v158;
        uint64_t v65 = v70;
LABEL_62:
        Swift::Int v31 = v66 + 1;
        v65 += v157;
        v161 += v157;
        Swift::Int v30 = v151;
      }
      while (v31 != v149);
      Swift::Int v31 = v149;
      uint64_t v2 = v142;
      id v27 = v145;
    }
LABEL_73:
    if (v31 < v30) {
      goto LABEL_149;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    Swift::Int v158 = v31;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      id v27 = sub_100063364(0, *((void *)v27 + 2) + 1, 1, v27);
    }
    unint64_t v84 = *((void *)v27 + 2);
    unint64_t v83 = *((void *)v27 + 3);
    unint64_t v29 = v84 + 1;
    if (v84 >= v83 >> 1) {
      id v27 = sub_100063364((char *)(v83 > 1), v84 + 1, 1, v27);
    }
    *((void *)v27 + 2) = v29;
    uint64_t v85 = v27 + 32;
    uint64_t v86 = &v27[16 * v84 + 32];
    Swift::Int v87 = v158;
    *(void *)uint64_t v86 = v30;
    *((void *)v86 + 1) = v87;
    if (v84)
    {
      while (1)
      {
        unint64_t v88 = v29 - 1;
        if (v29 >= 4)
        {
          uint64_t v93 = &v85[16 * v29];
          uint64_t v94 = *((void *)v93 - 8);
          uint64_t v95 = *((void *)v93 - 7);
          BOOL v99 = __OFSUB__(v95, v94);
          uint64_t v96 = v95 - v94;
          if (v99) {
            goto LABEL_138;
          }
          uint64_t v98 = *((void *)v93 - 6);
          uint64_t v97 = *((void *)v93 - 5);
          BOOL v99 = __OFSUB__(v97, v98);
          uint64_t v91 = v97 - v98;
          char v92 = v99;
          if (v99) {
            goto LABEL_139;
          }
          unint64_t v100 = v29 - 2;
          uint64_t v101 = &v85[16 * v29 - 32];
          uint64_t v103 = *(void *)v101;
          uint64_t v102 = *((void *)v101 + 1);
          BOOL v99 = __OFSUB__(v102, v103);
          uint64_t v104 = v102 - v103;
          if (v99) {
            goto LABEL_141;
          }
          BOOL v99 = __OFADD__(v91, v104);
          uint64_t v105 = v91 + v104;
          if (v99) {
            goto LABEL_144;
          }
          if (v105 >= v96)
          {
            uint64_t v123 = &v85[16 * v88];
            uint64_t v125 = *(void *)v123;
            uint64_t v124 = *((void *)v123 + 1);
            BOOL v99 = __OFSUB__(v124, v125);
            uint64_t v126 = v124 - v125;
            if (v99) {
              goto LABEL_148;
            }
            BOOL v116 = v91 < v126;
            goto LABEL_110;
          }
        }
        else
        {
          if (v29 != 3)
          {
            uint64_t v117 = *((void *)v27 + 4);
            uint64_t v118 = *((void *)v27 + 5);
            BOOL v99 = __OFSUB__(v118, v117);
            uint64_t v110 = v118 - v117;
            char v111 = v99;
            goto LABEL_104;
          }
          uint64_t v90 = *((void *)v27 + 4);
          uint64_t v89 = *((void *)v27 + 5);
          BOOL v99 = __OFSUB__(v89, v90);
          uint64_t v91 = v89 - v90;
          char v92 = v99;
        }
        if (v92) {
          goto LABEL_140;
        }
        unint64_t v100 = v29 - 2;
        uint64_t v106 = &v85[16 * v29 - 32];
        uint64_t v108 = *(void *)v106;
        uint64_t v107 = *((void *)v106 + 1);
        BOOL v109 = __OFSUB__(v107, v108);
        uint64_t v110 = v107 - v108;
        char v111 = v109;
        if (v109) {
          goto LABEL_143;
        }
        id v112 = &v85[16 * v88];
        uint64_t v114 = *(void *)v112;
        uint64_t v113 = *((void *)v112 + 1);
        BOOL v99 = __OFSUB__(v113, v114);
        uint64_t v115 = v113 - v114;
        if (v99) {
          goto LABEL_146;
        }
        if (__OFADD__(v110, v115)) {
          goto LABEL_147;
        }
        if (v110 + v115 >= v91)
        {
          BOOL v116 = v91 < v115;
LABEL_110:
          if (v116) {
            unint64_t v88 = v100;
          }
          goto LABEL_112;
        }
LABEL_104:
        if (v111) {
          goto LABEL_142;
        }
        uint64_t v119 = &v85[16 * v88];
        uint64_t v121 = *(void *)v119;
        uint64_t v120 = *((void *)v119 + 1);
        BOOL v99 = __OFSUB__(v120, v121);
        uint64_t v122 = v120 - v121;
        if (v99) {
          goto LABEL_145;
        }
        if (v122 < v110) {
          goto LABEL_14;
        }
LABEL_112:
        unint64_t v127 = v88 - 1;
        if (v88 - 1 >= v29)
        {
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          __break(1u);
          goto LABEL_158;
        }
        if (!*v162) {
          goto LABEL_160;
        }
        uint64_t v128 = v27;
        uint64_t v129 = &v85[16 * v127];
        uint64_t v130 = *(void *)v129;
        int v131 = &v85[16 * v88];
        uint64_t v132 = *((void *)v131 + 1);
        sub_100062DFC(*v162 + *(void *)(v155 + 72) * *(void *)v129, *v162 + *(void *)(v155 + 72) * *(void *)v131, *v162 + *(void *)(v155 + 72) * v132, v154);
        if (v2) {
          goto LABEL_132;
        }
        if (v132 < v130) {
          goto LABEL_135;
        }
        if (v88 > *((void *)v128 + 2)) {
          goto LABEL_136;
        }
        *(void *)uint64_t v129 = v130;
        *(void *)&v85[16 * v127 + 8] = v132;
        unint64_t v133 = *((void *)v128 + 2);
        if (v88 >= v133) {
          goto LABEL_137;
        }
        id v27 = v128;
        unint64_t v29 = v133 - 1;
        memmove(&v85[16 * v88], v131 + 16, 16 * (v133 - 1 - v88));
        *((void *)v128 + 2) = v133 - 1;
        if (v133 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v29 = 1;
LABEL_14:
    Swift::Int v21 = v162[1];
    Swift::Int v28 = v158;
    uint64_t v13 = v146;
    if (v158 >= v21) {
      goto LABEL_121;
    }
  }
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  __break(1u);
LABEL_161:
  __break(1u);
LABEL_162:
  __break(1u);
LABEL_163:
  Swift::Int result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100062B4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v35 = a4;
  uint64_t v30 = a1;
  uint64_t v33 = type metadata accessor for StreamingService();
  uint64_t v6 = __chkstk_darwin(v33);
  uint64_t v34 = (uint64_t)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v28 - v9;
  uint64_t result = __chkstk_darwin(v8);
  uint64_t v14 = (char *)&v28 - v13;
  uint64_t v32 = a3;
  uint64_t v29 = a2;
  if (a3 != a2)
  {
    uint64_t v15 = *(void *)(v12 + 72);
    uint64_t v36 = v15 * (v32 - 1);
    uint64_t v31 = v15;
    uint64_t v16 = v15 * v32;
LABEL_6:
    uint64_t v17 = 0;
    uint64_t v18 = v30;
    while (1)
    {
      uint64_t v19 = *v35;
      sub_100063B4C(v16 + v17 + *v35, (uint64_t)v14);
      sub_100063B4C(v36 + v17 + v19, (uint64_t)v10);
      uint64_t v20 = *(int *)(v33 + 24);
      uint64_t v21 = *(void *)&v14[v20];
      uint64_t v22 = *(void *)&v14[v20 + 8];
      uint64_t v23 = &v10[v20];
      if (v21 == *(void *)v23 && v22 == *((void *)v23 + 1))
      {
        sub_100063BB0((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StreamingService);
        uint64_t result = sub_100063BB0((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for StreamingService);
LABEL_5:
        v36 += v31;
        v16 += v31;
        if (++v32 == v29) {
          return result;
        }
        goto LABEL_6;
      }
      char v25 = _stringCompareWithSmolCheck(_:_:expecting:)();
      sub_100063BB0((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StreamingService);
      uint64_t result = sub_100063BB0((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for StreamingService);
      if ((v25 & 1) == 0) {
        goto LABEL_5;
      }
      uint64_t v26 = *v35;
      if (!*v35) {
        break;
      }
      uint64_t v27 = v26 + v36 + v17;
      sub_100063C10(v26 + v16 + v17, v34);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = sub_100063C10(v34, v27);
      v17 -= v31;
      if (v32 == ++v18) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_100062DFC(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v54 = type metadata accessor for StreamingService();
  uint64_t v8 = __chkstk_darwin(v54);
  uint64_t v53 = (uint64_t)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v51 - v11;
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v15 = (char *)&v51 - v14;
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v51 - v16;
  uint64_t v19 = *(void *)(v18 + 72);
  if (!v19)
  {
    __break(1u);
LABEL_72:
    __break(1u);
LABEL_73:
    __break(1u);
    goto LABEL_74;
  }
  unint64_t v20 = a1;
  if (a2 - a1 == 0x8000000000000000 && v19 == -1) {
    goto LABEL_72;
  }
  int64_t v21 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v19 == -1) {
    goto LABEL_73;
  }
  uint64_t v22 = (uint64_t)(a2 - a1) / v19;
  unint64_t v57 = a1;
  unint64_t v56 = a4;
  uint64_t v23 = v21 / v19;
  if (v22 >= v21 / v19)
  {
    if ((v23 & 0x8000000000000000) == 0)
    {
      unint64_t v52 = a1;
      uint64_t v25 = v23 * v19;
      if (a4 < a2 || a2 + v25 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v37 = a4 + v25;
      unint64_t v55 = a4 + v25;
      unint64_t v57 = a2;
      if (v25 >= 1 && v52 < a2)
      {
        uint64_t v39 = -v19;
        do
        {
          sub_100063B4C(v37 + v39, (uint64_t)v12);
          unint64_t v40 = a2 + v39;
          uint64_t v41 = v53;
          sub_100063B4C(a2 + v39, v53);
          uint64_t v42 = *(int *)(v54 + 24);
          uint64_t v43 = *(void *)&v12[v42];
          uint64_t v44 = *(void *)&v12[v42 + 8];
          uint64_t v45 = (void *)(v41 + v42);
          if (v43 == *v45 && v44 == v45[1]) {
            char v47 = 0;
          }
          else {
            char v47 = _stringCompareWithSmolCheck(_:_:expecting:)();
          }
          unint64_t v48 = a3 + v39;
          sub_100063BB0(v53, (uint64_t (*)(void))type metadata accessor for StreamingService);
          sub_100063BB0((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for StreamingService);
          if (v47)
          {
            if (a3 < a2 || v48 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != a2)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v57 += v39;
          }
          else
          {
            unint64_t v49 = v55;
            v55 += v39;
            if (a3 < v49 || v48 >= v49)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != v49)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            unint64_t v40 = a2;
          }
          unint64_t v37 = v55;
          if (v55 <= a4) {
            break;
          }
          a2 = v40;
          a3 += v39;
        }
        while (v40 > v52);
      }
LABEL_70:
      sub_10006351C(&v57, &v56, (uint64_t *)&v55);
      return 1;
    }
  }
  else if ((v22 & 0x8000000000000000) == 0)
  {
    uint64_t v24 = v22 * v19;
    if (a4 < v20 || v20 + v24 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != v20)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v26 = a4 + v24;
    unint64_t v55 = a4 + v24;
    if (v24 >= 1 && a2 < a3)
    {
      while (1)
      {
        sub_100063B4C(a2, (uint64_t)v17);
        sub_100063B4C(a4, (uint64_t)v15);
        uint64_t v28 = *(int *)(v54 + 24);
        uint64_t v29 = *(void *)&v17[v28];
        uint64_t v30 = *(void *)&v17[v28 + 8];
        uint64_t v31 = &v15[v28];
        if (v29 == *(void *)v31 && v30 == *((void *)v31 + 1)) {
          break;
        }
        char v33 = _stringCompareWithSmolCheck(_:_:expecting:)();
        sub_100063BB0((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for StreamingService);
        sub_100063BB0((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for StreamingService);
        if ((v33 & 1) == 0) {
          goto LABEL_32;
        }
        unint64_t v34 = v57;
        unint64_t v35 = a2 + v19;
        if (v57 < a2 || v57 >= v35)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v57 == a2)
        {
          unint64_t v34 = a2;
        }
        else
        {
          swift_arrayInitWithTakeBackToFront();
        }
LABEL_38:
        unint64_t v57 = v34 + v19;
        a4 = v56;
        if (v56 < v26)
        {
          a2 = v35;
          if (v35 < a3) {
            continue;
          }
        }
        goto LABEL_70;
      }
      sub_100063BB0((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for StreamingService);
      sub_100063BB0((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for StreamingService);
LABEL_32:
      unint64_t v34 = v57;
      unint64_t v36 = v56 + v19;
      if (v57 < v56 || v57 >= v36)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (v57 != v56)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v56 = v36;
      unint64_t v35 = a2;
      goto LABEL_38;
    }
    goto LABEL_70;
  }
LABEL_74:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

char *sub_100063364(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1000060EC(&qword_100159010);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_100063460(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 7;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -8)
  {
    uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
    {
      return (char *)memmove(result, v3, 8 * v7);
    }
  }
  return result;
}

uint64_t sub_10006351C(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v3 = *a1;
  unint64_t v4 = *a2;
  uint64_t v5 = *a3;
  uint64_t result = type metadata accessor for StreamingService();
  uint64_t v7 = *(void *)(*(void *)(result - 8) + 72);
  if (!v7)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v8 = v5 - v4;
  if (v5 - v4 == 0x8000000000000000 && v7 == -1) {
    goto LABEL_18;
  }
  if (v8 / v7 < 0)
  {
LABEL_19:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  if (v3 < v4 || v3 >= v4 + v8 / v7 * v7)
  {
    return swift_arrayInitWithTakeFrontToBack();
  }
  else if (v3 != v4)
  {
    return swift_arrayInitWithTakeBackToFront();
  }
  return result;
}

char *sub_10006365C(uint64_t a1)
{
  return sub_100063364(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_100063670(uint64_t a1)
{
  return specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(a1 + 16), 0, a1);
}

uint64_t sub_100063684(void *a1)
{
  return sub_10006AB78(0, a1[2], 0, a1);
}

uint64_t sub_100063698(void *a1)
{
  return sub_10006AE70(0, a1[2], 0, a1);
}

uint64_t sub_1000636AC(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3) {
    unint64_t v7 = 3;
  }
  unint64_t v8 = v7 - 3;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 128;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

int64_t sub_10006374C(int64_t result, int a2, char a3, uint64_t a4)
{
  if (a3) {
    goto LABEL_20;
  }
  unint64_t v4 = result;
  if (result < 0 || (uint64_t result = 1 << *(unsigned char *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v5 = v4 >> 6;
  uint64_t v6 = a4 + 56;
  unint64_t v7 = *(void *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  unint64_t v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8) {
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  }
  unint64_t v9 = v5 + 1;
  unint64_t v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    unint64_t v11 = *(void *)(v6 + 8 * v9);
    if (v11) {
      return __clz(__rbit64(v11)) + (v9 << 6);
    }
    unint64_t v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      unint64_t v11 = *(void *)(v6 + 8 * v9);
      if (v11) {
        return __clz(__rbit64(v11)) + (v9 << 6);
      }
      while (v10 - 3 != v5)
      {
        unint64_t v11 = *(void *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          unint64_t v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

uint64_t sub_100063830(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v34 = a5;
  uint64_t v35 = a6;
  uint64_t v32 = a3;
  uint64_t v33 = a4;
  uint64_t v31 = a2;
  uint64_t v9 = type metadata accessor for StreamingService();
  uint64_t v30 = *(void *)(v9 - 8);
  __chkstk_darwin(v9 - 8);
  unint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = _swiftEmptyArrayStorage;
  if (!v12) {
    return (uint64_t)v13;
  }
  uint64_t v38 = _swiftEmptyArrayStorage;
  sub_10006A5C4(0, v12, 0);
  uint64_t v13 = v38;
  uint64_t result = sub_1000636AC(a1);
  int64_t v15 = result;
  int v17 = v16;
  char v19 = v18 & 1;
  uint64_t v29 = a1 + 56;
  while ((v15 & 0x8000000000000000) == 0 && v15 < 1 << *(unsigned char *)(a1 + 32))
  {
    if (((*(void *)(v29 + (((unint64_t)v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
      goto LABEL_15;
    }
    if (*(_DWORD *)(a1 + 36) != v17) {
      goto LABEL_16;
    }
    unint64_t v20 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v15);
    uint64_t v21 = v20[1];
    v37[0] = *v20;
    v37[1] = v21;
    swift_bridgeObjectRetain();
    sub_100061BD4(v37, v31, v34, v35, v11);
    if (v7)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return (uint64_t)v13;
    }
    uint64_t v36 = 0;
    uint64_t v22 = a1;
    uint64_t v23 = (uint64_t)v11;
    swift_bridgeObjectRelease();
    uint64_t v38 = v13;
    unint64_t v25 = v13[2];
    unint64_t v24 = v13[3];
    if (v25 >= v24 >> 1)
    {
      sub_10006A5C4(v24 > 1, v25 + 1, 1);
      uint64_t v13 = v38;
    }
    void v13[2] = v25 + 1;
    uint64_t v26 = (uint64_t)v13
        + ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80))
        + *(void *)(v30 + 72) * v25;
    unint64_t v11 = (char *)v23;
    sub_100063C10(v23, v26);
    a1 = v22;
    uint64_t result = sub_10006374C(v15, v17, v19 & 1, v22);
    int64_t v15 = result;
    int v17 = v27;
    char v19 = v28 & 1;
    --v12;
    uint64_t v7 = v36;
    if (!v12)
    {
      sub_100063C74(result, v27, v28 & 1);
      return (uint64_t)v13;
    }
  }
  __break(1u);
LABEL_15:
  __break(1u);
LABEL_16:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for StreamingServicesProvider()
{
  uint64_t result = qword_100159070;
  if (!qword_100159070) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100063AE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000060EC(&qword_100158940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100063B4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StreamingService();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100063BB0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100063C10(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StreamingService();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100063C74(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t *sub_100063C80(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = (int *)type metadata accessor for StreamingService();
    uint64_t v8 = *((void *)v7 - 1);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = sub_1000060EC(&qword_100158940);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      uint64_t v11 = a2[1];
      *a1 = *a2;
      a1[1] = v11;
      uint64_t v12 = v7[5];
      uint64_t v26 = (char *)a1 + v12;
      uint64_t v13 = (char *)a2 + v12;
      uint64_t v14 = type metadata accessor for URL();
      int64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
      swift_bridgeObjectRetain();
      v15(v26, v13, v14);
      uint64_t v16 = v7[6];
      int v17 = (uint64_t *)((char *)a1 + v16);
      char v18 = (uint64_t *)((char *)a2 + v16);
      uint64_t v19 = v18[1];
      *int v17 = *v18;
      v17[1] = v19;
      uint64_t v20 = v7[7];
      uint64_t v21 = (uint64_t *)((char *)a1 + v20);
      uint64_t v22 = (uint64_t *)((char *)a2 + v20);
      uint64_t v23 = v22[1];
      *uint64_t v21 = *v22;
      v21[1] = v23;
      *((unsigned char *)a1 + v7[8]) = *((unsigned char *)a2 + v7[8]);
      unint64_t v24 = *(void (**)(uint64_t *, void, uint64_t, int *))(v8 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v24(a1, 0, 1, v7);
    }
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_100063E94(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StreamingService();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 1, v2))
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = a1 + *(int *)(v2 + 20);
    uint64_t v4 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return swift_bridgeObjectRelease();
}

void *sub_100063F84(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for StreamingService();
  uint64_t v7 = *((void *)v6 - 1);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_1000060EC(&qword_100158940);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    uint64_t v9 = a2[1];
    *a1 = *a2;
    a1[1] = v9;
    uint64_t v10 = v6[5];
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    uint64_t v13 = type metadata accessor for URL();
    uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    v14(v11, v12, v13);
    uint64_t v15 = v6[6];
    uint64_t v16 = (void *)((char *)a1 + v15);
    int v17 = (void *)((char *)a2 + v15);
    uint64_t v18 = v17[1];
    void *v16 = *v17;
    v16[1] = v18;
    uint64_t v19 = v6[7];
    uint64_t v20 = (void *)((char *)a1 + v19);
    uint64_t v21 = (void *)((char *)a2 + v19);
    uint64_t v22 = v21[1];
    *uint64_t v20 = *v21;
    v20[1] = v22;
    *((unsigned char *)a1 + v6[8]) = *((unsigned char *)a2 + v6[8]);
    uint64_t v23 = *(void (**)(void *, void, uint64_t, int *))(v7 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v23(a1, 0, 1, v6);
  }
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_10006414C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for StreamingService();
  uint64_t v7 = *((void *)v6 - 1);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, int *))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v25 = v6[5];
      uint64_t v26 = (char *)a1 + v25;
      uint64_t v27 = (char *)a2 + v25;
      uint64_t v28 = type metadata accessor for URL();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 24))(v26, v27, v28);
      uint64_t v29 = v6[6];
      uint64_t v30 = (void *)((char *)a1 + v29);
      uint64_t v31 = (void *)((char *)a2 + v29);
      *uint64_t v30 = *v31;
      v30[1] = v31[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v32 = v6[7];
      uint64_t v33 = (void *)((char *)a1 + v32);
      uint64_t v34 = (void *)((char *)a2 + v32);
      *uint64_t v33 = *v34;
      v33[1] = v34[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((unsigned char *)a1 + v6[8]) = *((unsigned char *)a2 + v6[8]);
      goto LABEL_7;
    }
    sub_100063BB0((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for StreamingService);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v23 = sub_1000060EC(&qword_100158940);
    memcpy(a1, a2, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v11 = v6[5];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = type metadata accessor for URL();
  uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
  swift_bridgeObjectRetain();
  v15(v12, v13, v14);
  uint64_t v16 = v6[6];
  int v17 = (void *)((char *)a1 + v16);
  uint64_t v18 = (void *)((char *)a2 + v16);
  *int v17 = *v18;
  v17[1] = v18[1];
  uint64_t v19 = v6[7];
  uint64_t v20 = (void *)((char *)a1 + v19);
  uint64_t v21 = (void *)((char *)a2 + v19);
  *uint64_t v20 = *v21;
  v20[1] = v21[1];
  *((unsigned char *)a1 + v6[8]) = *((unsigned char *)a2 + v6[8]);
  uint64_t v22 = *(void (**)(void *, void, uint64_t, int *))(v7 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v22(a1, 0, 1, v6);
LABEL_7:
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_100064448(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for StreamingService();
  uint64_t v7 = *((void *)v6 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_1000060EC(&qword_100158940);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    uint64_t v9 = v6[5];
    int v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = type metadata accessor for URL();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
    *(_OWORD *)((char *)a1 + v6[6]) = *(_OWORD *)((char *)a2 + v6[6]);
    *(_OWORD *)((char *)a1 + v6[7]) = *(_OWORD *)((char *)a2 + v6[7]);
    *((unsigned char *)a1 + v6[8]) = *((unsigned char *)a2 + v6[8]);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
  }
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  return a1;
}

void *sub_1000645CC(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for StreamingService();
  uint64_t v7 = *((void *)v6 - 1);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, int *))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v17 = a2[1];
      *a1 = *a2;
      a1[1] = v17;
      swift_bridgeObjectRelease();
      uint64_t v18 = v6[5];
      uint64_t v19 = (char *)a1 + v18;
      uint64_t v20 = (char *)a2 + v18;
      uint64_t v21 = type metadata accessor for URL();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 40))(v19, v20, v21);
      uint64_t v22 = v6[6];
      uint64_t v23 = (void *)((char *)a1 + v22);
      unint64_t v24 = (void *)((char *)a2 + v22);
      uint64_t v26 = *v24;
      uint64_t v25 = v24[1];
      *uint64_t v23 = v26;
      v23[1] = v25;
      swift_bridgeObjectRelease();
      uint64_t v27 = v6[7];
      uint64_t v28 = (void *)((char *)a1 + v27);
      uint64_t v29 = (void *)((char *)a2 + v27);
      uint64_t v31 = *v29;
      uint64_t v30 = v29[1];
      *uint64_t v28 = v31;
      v28[1] = v30;
      swift_bridgeObjectRelease();
      *((unsigned char *)a1 + v6[8]) = *((unsigned char *)a2 + v6[8]);
      goto LABEL_7;
    }
    sub_100063BB0((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for StreamingService);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v15 = sub_1000060EC(&qword_100158940);
    memcpy(a1, a2, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v11 = v6[5];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = type metadata accessor for URL();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  *(_OWORD *)((char *)a1 + v6[6]) = *(_OWORD *)((char *)a2 + v6[6]);
  *(_OWORD *)((char *)a1 + v6[7]) = *(_OWORD *)((char *)a2 + v6[7]);
  *((unsigned char *)a1 + v6[8]) = *((unsigned char *)a2 + v6[8]);
  (*(void (**)(void *, void, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100064838(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10006484C);
}

uint64_t sub_10006484C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000060EC(&qword_100158940);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_100064910(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100064924);
}

uint64_t sub_100064924(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1000060EC(&qword_100158940);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

void sub_1000649E4()
{
  sub_100064A7C();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_100064A7C()
{
  if (!qword_100159080)
  {
    type metadata accessor for StreamingService();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100159080);
    }
  }
}

void *sub_100064AD4(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    unint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for URL();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[6];
    uint64_t v14 = a3[7];
    uint64_t v15 = (void *)((char *)v4 + v13);
    uint64_t v16 = (void *)((char *)a2 + v13);
    uint64_t v17 = v16[1];
    *uint64_t v15 = *v16;
    v15[1] = v17;
    uint64_t v18 = (void *)((char *)v4 + v14);
    uint64_t v19 = (void *)((char *)a2 + v14);
    uint64_t v20 = v19[1];
    *uint64_t v18 = *v19;
    v18[1] = v20;
    *((unsigned char *)v4 + a3[8]) = *((unsigned char *)a2 + a3[8]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_100064C08(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *sub_100064CA8(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)((char *)a1 + v12);
  uint64_t v15 = (void *)((char *)a2 + v12);
  uint64_t v16 = v15[1];
  void *v14 = *v15;
  v14[1] = v16;
  uint64_t v17 = (void *)((char *)a1 + v13);
  uint64_t v18 = (void *)((char *)a2 + v13);
  uint64_t v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_100064D8C(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for URL();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)((char *)a1 + v13);
  uint64_t v15 = (void *)((char *)a2 + v13);
  void *v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  return a1;
}

_OWORD *sub_100064E94(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for URL();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v10) = *(_OWORD *)((char *)a2 + v10);
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  return a1;
}

void *sub_100064F40(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for URL();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  void *v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[7];
  uint64_t v17 = (void *)((char *)a1 + v16);
  uint64_t v18 = (void *)((char *)a2 + v16);
  uint64_t v20 = *v18;
  uint64_t v19 = v18[1];
  *uint64_t v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  return a1;
}

uint64_t sub_100065018(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10006502C);
}

uint64_t sub_10006502C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for URL();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1000650DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000650F0);
}

uint64_t sub_1000650F0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for URL();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for StreamingService()
{
  uint64_t result = qword_100159108;
  if (!qword_100159108) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000651E4()
{
  uint64_t result = type metadata accessor for URL();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100065288@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_100065298(void *a1, void *a2)
{
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (char v5 = _stringCompareWithSmolCheck(_:_:expecting:)(), v6 = 0, (v5 & 1) != 0))
  {
    uint64_t v7 = (int *)type metadata accessor for StreamingService();
    if (static URL.== infix(_:_:)())
    {
      uint64_t v8 = v7[6];
      uint64_t v9 = *(void *)((char *)a1 + v8);
      uint64_t v10 = *(void *)((char *)a1 + v8 + 8);
      uint64_t v11 = (void *)((char *)a2 + v8);
      BOOL v12 = v9 == *v11 && v10 == v11[1];
      if (v12 || (v13 = _stringCompareWithSmolCheck(_:_:expecting:)(), char v6 = 0, (v13 & 1) != 0))
      {
        uint64_t v14 = v7[7];
        uint64_t v15 = *(void *)((char *)a1 + v14);
        uint64_t v16 = *(void *)((char *)a1 + v14 + 8);
        uint64_t v17 = (void *)((char *)a2 + v14);
        BOOL v18 = v15 == *v17 && v16 == v17[1];
        if (v18 || (v19 = _stringCompareWithSmolCheck(_:_:expecting:)(), char v6 = 0, (v19 & 1) != 0)) {
          char v6 = *((unsigned char *)a1 + v7[8]) ^ *((unsigned char *)a2 + v7[8]) ^ 1;
        }
      }
    }
    else
    {
      char v6 = 0;
    }
  }
  return v6 & 1;
}

char *sub_100065394()
{
  unint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC16MusicRecognition23AmbientMatchingFlowView____lazy_storage___ambientSceneAnimator];
  if (v1)
  {
    uint64_t v2 = *(char **)&v0[OBJC_IVAR____TtC16MusicRecognition23AmbientMatchingFlowView____lazy_storage___ambientSceneAnimator];
  }
  else
  {
    *(void *)&v0[OBJC_IVAR____TtC16MusicRecognition23AmbientMatchingFlowView____lazy_storage___ambientSceneAnimator] = v0;
    uint64_t v2 = v0;
    unint64_t v1 = 0;
  }
  id v3 = v1;
  return v2;
}

id sub_1000653E4(double a1, double a2, double a3, double a4)
{
  char v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v11 = &v4[OBJC_IVAR____TtC16MusicRecognition23AmbientMatchingFlowView_retryHandler];
  *(void *)uint64_t v11 = nullsub_1;
  *((void *)v11 + 1) = 0;
  BOOL v12 = &v4[OBJC_IVAR____TtC16MusicRecognition23AmbientMatchingFlowView_cancellationHandler];
  *(void *)BOOL v12 = nullsub_1;
  *((void *)v12 + 1) = 0;
  char v13 = &v4[OBJC_IVAR____TtC16MusicRecognition23AmbientMatchingFlowView_appleMusicURLHandler];
  *(void *)char v13 = nullsub_1;
  *((void *)v13 + 1) = 0;
  uint64_t v14 = &v4[OBJC_IVAR____TtC16MusicRecognition23AmbientMatchingFlowView_displayMatchedMediaItemHandler];
  *(void *)uint64_t v14 = nullsub_1;
  *((void *)v14 + 1) = 0;
  uint64_t v15 = OBJC_IVAR____TtC16MusicRecognition23AmbientMatchingFlowView_listeningView;
  id v16 = objc_allocWithZone((Class)type metadata accessor for AmbientListeningView());
  uint64_t v17 = v4;
  *(void *)&v5[v15] = [v16 initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v18 = OBJC_IVAR____TtC16MusicRecognition23AmbientMatchingFlowView_matchView;
  *(void *)&v17[v18] = [objc_allocWithZone((Class)type metadata accessor for AmbientMatchView()) initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v19 = OBJC_IVAR____TtC16MusicRecognition23AmbientMatchingFlowView_noMatchView;
  *(void *)&v17[v19] = [objc_allocWithZone((Class)type metadata accessor for AmbientNoMatchView()) initWithFrame:0.0, 0.0, 0.0, 0.0];
  *(void *)&v17[OBJC_IVAR____TtC16MusicRecognition23AmbientMatchingFlowView____lazy_storage___ambientSceneAnimator] = 0;
  *(void *)&v17[OBJC_IVAR____TtC16MusicRecognition23AmbientMatchingFlowView_matchedMediaItem] = 0;

  v22.receiver = v17;
  v22.super_class = ObjectType;
  id v20 = [super initWithFrame:a1, a2, a3, a4];
  sub_1000655BC();

  return v20;
}

void sub_1000655BC()
{
  [v0 setLayoutMargins:-26.0, 0.0, 0.0, 0.0];
  [v0 setTranslatesAutoresizingMaskIntoConstraints:0];
  unint64_t v1 = *(char **)&v0[OBJC_IVAR____TtC16MusicRecognition23AmbientMatchingFlowView_listeningView];
  [v1 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v0 addSubview:v1];
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC16MusicRecognition23AmbientMatchingFlowView_matchView];
  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v0 addSubview:v2];
  id v3 = *(char **)&v0[OBJC_IVAR____TtC16MusicRecognition23AmbientMatchingFlowView_noMatchView];
  [v3 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v0 addSubview:v3];
  [v1 setHidden:1];
  [v2 setHidden:1];
  [v3 setHidden:1];
  id v4 = [objc_allocWithZone((Class)UITapGestureRecognizer) initWithTarget:v0 action:"displayMatchedMediaItemAction"];
  [v2 addGestureRecognizer:v4];

  [*(id *)&v3[OBJC_IVAR____TtC16MusicRecognition18AmbientNoMatchView_retryButton] addTarget:v0 action:"retryAction" forControlEvents:64];
  [*(id *)&v1[OBJC_IVAR____TtC16MusicRecognition20AmbientListeningView_cancelButton] addTarget:v0 action:"cancelAction" forControlEvents:64];
  uint64_t v54 = self;
  sub_1000060EC(&qword_100157030);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1001126C0;
  id v6 = [v1 topAnchor];
  id v7 = [v0 layoutMarginsGuide];
  id v8 = [v7 topAnchor];

  id v9 = [v6 constraintEqualToAnchor:v8];
  *(void *)(v5 + 32) = v9;
  id v10 = [v1 bottomAnchor];
  id v11 = [v0 layoutMarginsGuide];
  id v12 = [v11 bottomAnchor];

  id v13 = [v10 constraintEqualToAnchor:v12];
  *(void *)(v5 + 40) = v13;
  id v14 = [v1 leadingAnchor];
  id v15 = [v0 layoutMarginsGuide];
  id v16 = [v15 leadingAnchor];

  id v17 = [v14 constraintEqualToAnchor:v16 constant:54.0];
  *(void *)(v5 + 48) = v17;
  id v18 = [v1 trailingAnchor];
  id v19 = [v0 layoutMarginsGuide];
  id v20 = [v19 trailingAnchor];

  id v21 = [v18 constraintEqualToAnchor:v20];
  *(void *)(v5 + 56) = v21;
  id v22 = [v2 topAnchor];
  id v23 = [v0 layoutMarginsGuide];
  id v24 = [v23 topAnchor];

  id v25 = [v22 constraintEqualToAnchor:v24];
  *(void *)(v5 + 64) = v25;
  id v26 = [v2 bottomAnchor];
  id v27 = [v0 layoutMarginsGuide];
  id v28 = [v27 bottomAnchor];

  id v29 = [v26 constraintEqualToAnchor:v28];
  *(void *)(v5 + 72) = v29;
  id v30 = [v2 leadingAnchor];
  id v31 = [v0 layoutMarginsGuide];
  id v32 = [v31 leadingAnchor];

  id v33 = [v30 constraintEqualToAnchor:v32];
  *(void *)(v5 + 80) = v33;
  id v34 = [v2 trailingAnchor];
  id v35 = [v0 layoutMarginsGuide];
  id v36 = [v35 trailingAnchor];

  id v37 = [v34 constraintEqualToAnchor:v36];
  *(void *)(v5 + 88) = v37;
  id v38 = [v3 topAnchor];
  id v39 = [v0 layoutMarginsGuide];
  id v40 = [v39 topAnchor];

  id v41 = [v38 constraintEqualToAnchor:v40];
  *(void *)(v5 + 96) = v41;
  id v42 = [v3 bottomAnchor];
  id v43 = [v0 layoutMarginsGuide];
  id v44 = [v43 bottomAnchor];

  id v45 = [v42 constraintEqualToAnchor:v44];
  *(void *)(v5 + 104) = v45;
  id v46 = [v3 leadingAnchor];
  id v47 = [v0 layoutMarginsGuide];
  id v48 = [v47 leadingAnchor];

  id v49 = [v46 constraintEqualToAnchor:v48];
  *(void *)(v5 + 112) = v49;
  id v50 = [v3 trailingAnchor];
  id v51 = [v0 layoutMarginsGuide];
  id v52 = [v51 trailingAnchor];

  id v53 = [v50 constraintEqualToAnchor:v52];
  *(void *)(v5 + 120) = v53;
  specialized Array._endMutation()();
  sub_10002882C();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v54 activateConstraints:isa];
}

id sub_100065DC0(void *a1)
{
  uint64_t v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v5 = &v2[OBJC_IVAR____TtC16MusicRecognition23AmbientMatchingFlowView_retryHandler];
  *(void *)uint64_t v5 = nullsub_1;
  *((void *)v5 + 1) = 0;
  id v6 = &v2[OBJC_IVAR____TtC16MusicRecognition23AmbientMatchingFlowView_cancellationHandler];
  *(void *)id v6 = nullsub_1;
  *((void *)v6 + 1) = 0;
  id v7 = &v2[OBJC_IVAR____TtC16MusicRecognition23AmbientMatchingFlowView_appleMusicURLHandler];
  *(void *)id v7 = nullsub_1;
  *((void *)v7 + 1) = 0;
  id v8 = &v2[OBJC_IVAR____TtC16MusicRecognition23AmbientMatchingFlowView_displayMatchedMediaItemHandler];
  *(void *)id v8 = nullsub_1;
  *((void *)v8 + 1) = 0;
  uint64_t v9 = OBJC_IVAR____TtC16MusicRecognition23AmbientMatchingFlowView_listeningView;
  id v10 = objc_allocWithZone((Class)type metadata accessor for AmbientListeningView());
  id v11 = v2;
  *(void *)&v2[v9] = [v10 initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v12 = OBJC_IVAR____TtC16MusicRecognition23AmbientMatchingFlowView_matchView;
  *(void *)&v11[v12] = [objc_allocWithZone((Class)type metadata accessor for AmbientMatchView()) initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v13 = OBJC_IVAR____TtC16MusicRecognition23AmbientMatchingFlowView_noMatchView;
  *(void *)&v11[v13] = [objc_allocWithZone((Class)type metadata accessor for AmbientNoMatchView()) initWithFrame:0.0, 0.0, 0.0, 0.0];
  *(void *)&v11[OBJC_IVAR____TtC16MusicRecognition23AmbientMatchingFlowView____lazy_storage___ambientSceneAnimator] = 0;
  *(void *)&v11[OBJC_IVAR____TtC16MusicRecognition23AmbientMatchingFlowView_matchedMediaItem] = 0;

  v18.receiver = v11;
  v18.super_class = ObjectType;
  [super initWithCoder:a1];
  id v15 = v14;
  if (v14)
  {
    id v16 = v14;
    sub_1000655BC();
  }
  return v15;
}

id sub_100065FB0(void *a1)
{
  uint64_t v60 = type metadata accessor for Locale();
  uint64_t v63 = *(void *)(v60 - 8);
  __chkstk_darwin(v60);
  id v4 = (char *)&v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000060EC(&qword_1001567A8);
  uint64_t v64 = *(void *)(v5 - 8);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v61 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  unint64_t v62 = (char *)&v52 - v8;
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v55 = *(void *)(v9 - 8);
  uint64_t v56 = v9;
  __chkstk_darwin(v9);
  id v53 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000060EC((uint64_t *)&unk_100158FC0);
  __chkstk_darwin(v11 - 8);
  uint64_t v54 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000060EC(&qword_100157038);
  __chkstk_darwin(v13 - 8);
  id v15 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v16 = *(void **)&v1[OBJC_IVAR____TtC16MusicRecognition23AmbientMatchingFlowView_matchedMediaItem];
  *(void *)&v1[OBJC_IVAR____TtC16MusicRecognition23AmbientMatchingFlowView_matchedMediaItem] = a1;

  uint64_t v17 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v15, 1, 1, v17);
  type metadata accessor for MainActor();
  id v18 = a1;
  id v19 = v1;
  uint64_t v20 = static MainActor.shared.getter();
  id v21 = (void *)swift_allocObject();
  void v21[2] = v20;
  v21[3] = &protocol witness table for MainActor;
  v21[4] = v19;
  v21[5] = v18;
  sub_1000DC37C((uint64_t)v15, (uint64_t)&unk_1001591C8, (uint64_t)v21);
  swift_release();
  id v22 = v19;
  id v23 = *(char **)&v19[OBJC_IVAR____TtC16MusicRecognition23AmbientMatchingFlowView_matchView];
  uint64_t v59 = OBJC_IVAR____TtC16MusicRecognition16AmbientMatchView_titleLabel;
  id v24 = *(id *)&v23[OBJC_IVAR____TtC16MusicRecognition16AmbientMatchView_titleLabel];
  id v25 = [v18 title];
  [v24 setText:v25];

  uint64_t v58 = OBJC_IVAR____TtC16MusicRecognition16AmbientMatchView_artistLabel;
  id v26 = *(id *)&v23[OBJC_IVAR____TtC16MusicRecognition16AmbientMatchView_artistLabel];
  id v27 = v18;
  id v28 = [v18 artist];
  [v26 setText:v28];

  if (qword_100156238 != -1) {
    swift_once();
  }
  id v29 = objc_allocWithZone((Class)LSApplicationWorkspace);
  swift_bridgeObjectRetain();
  id v30 = [v29 init];
  id v31 = self;
  swift_bridgeObjectRetain();
  NSString v32 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v33 = [v31 applicationWithBundleIdentifier:v32];

  NSString v34 = String._bridgeToObjectiveC()();
  LODWORD(v32) = [v30 applicationIsInstalled:v34];

  swift_bridgeObjectRelease();
  if (v32)
  {
    id v35 = [v27 appleMusicURL];
    if (v35)
    {
      id v36 = v35;
      id v37 = v53;
      static URL._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v39 = (uint64_t)v54;
      uint64_t v38 = v55;
      uint64_t v40 = v56;
      (*(void (**)(char *, char *, uint64_t))(v55 + 32))(v54, v37, v56);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v38 + 56))(v39, 0, 1, v40);
      int v41 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v38 + 48))(v39, 1, v40);
      uint64_t v42 = 0;
      if (v41 != 1) {
        goto LABEL_10;
      }
    }
    else
    {
      uint64_t v39 = (uint64_t)v54;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v55 + 56))(v54, 1, 1, v56);
    }
    uint64_t v42 = 1;
LABEL_10:
    sub_10001ABF4(v39);
    goto LABEL_11;
  }
  uint64_t v42 = 1;
LABEL_11:
  uint64_t v56 = OBJC_IVAR____TtC16MusicRecognition16AmbientMatchView_appleMusicButton;
  id v43 = *(void **)&v23[OBJC_IVAR____TtC16MusicRecognition16AmbientMatchView_appleMusicButton];
  [v43 setHidden:v42];
  unint64_t v57 = v22;
  [v43 addTarget:v22 action:"appleMusicButtonAction" forControlEvents:64];
  uint64_t v44 = OBJC_IVAR____TtC16MusicRecognition16AmbientMatchView_shazamCountLabel;
  id v45 = *(id *)&v23[OBJC_IVAR____TtC16MusicRecognition16AmbientMatchView_shazamCountLabel];
  id v65 = [v27 shazamCount];
  static Locale.autoupdatingCurrent.getter();
  sub_10000642C();
  id v46 = v61;
  IntegerFormatStyle.init(locale:)();
  static Locale.current.getter();
  id v47 = v62;
  IntegerFormatStyle.locale(_:)();
  (*(void (**)(char *, uint64_t))(v63 + 8))(v4, v60);
  id v48 = *(void (**)(char *, uint64_t))(v64 + 8);
  v48(v46, v5);
  sub_1000677B4();
  BinaryInteger.formatted<A>(_:)();
  v48(v47, v5);
  NSString v49 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v45 setText:v49];

  id v50 = *(id *)&v23[v44];
  [v50 setHidden:[v27 shazamCount] == 0];

  [*(id *)&v23[v56] setAlpha:0.0];
  [*(id *)&v23[OBJC_IVAR____TtC16MusicRecognition16AmbientMatchView_shazamCountStackView] setAlpha:0.0];
  [*(id *)&v23[v59] setAlpha:0.0];
  [*(id *)&v23[v58] setAlpha:0.0];
  [*(id *)&v57[OBJC_IVAR____TtC16MusicRecognition23AmbientMatchingFlowView_noMatchView] setHidden:1];
  return [v23 setHidden:0];
}

uint64_t sub_1000667B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[2] = a4;
  v5[3] = a5;
  type metadata accessor for MainActor();
  v5[4] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[5] = v7;
  v5[6] = v6;
  return _swift_task_switch(sub_100066848, v7, v6);
}

uint64_t sub_100066848()
{
  unint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v1;
  void *v1 = v0;
  v1[1] = sub_1000668EC;
  uint64_t v2 = *(void *)(v0 + 24);
  return sub_1001086AC(v2);
}

uint64_t sub_1000668EC()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 48);
  uint64_t v3 = *(void *)(v1 + 40);
  return _swift_task_switch(sub_100066A0C, v3, v2);
}

uint64_t sub_100066A0C()
{
  swift_release();
  uint64_t v1 = sub_100065394();
  sub_1000B64C8(v1);

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

id sub_100066A80(uint64_t a1)
{
  uint64_t v3 = sub_100065394();
  uint64_t v4 = *(char **)&v3[OBJC_IVAR____TtC16MusicRecognition23AmbientMatchingFlowView_noMatchView];
  [v4 setAlpha:1.0];
  uint64_t v5 = *(void **)&v4[OBJC_IVAR____TtC16MusicRecognition18AmbientNoMatchView_titleLabel];
  [v5 setAlpha:0.0];
  [*(id *)&v4[OBJC_IVAR____TtC16MusicRecognition18AmbientNoMatchView_retryButton] setAlpha:0.0];
  id v6 = v5;
  [v6 transform];
  CGAffineTransformTranslate(&v16, &aBlock, 0.0, 80.0);
  CGAffineTransform aBlock = v16;
  [v6 setTransform:&aBlock];

  if (qword_100156438 != -1) {
    swift_once();
  }
  id v7 = [objc_allocWithZone((Class)UIViewPropertyAnimator) initWithDuration:qword_10015B448 timingParameters:0.0];
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v3;
  *(void *)&aBlock.tx = sub_100067810;
  *(void *)&aBlock.ty = v8;
  *(void *)&aBlock.a = _NSConcreteStackBlock;
  *(void *)&aBlock.b = 1107296256;
  *(void *)&aBlock.c = sub_1000D559C;
  *(void *)&aBlock.d = &unk_10014B030;
  uint64_t v9 = _Block_copy(&aBlock);
  uint64_t v10 = v3;
  swift_release();
  [v7 addAnimations:v9];
  _Block_release(v9);
  [v7 startAnimationAfterDelay:0.3];
  uint64_t v11 = self;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v10;
  *(void *)&aBlock.tx = sub_100067868;
  *(void *)&aBlock.ty = v12;
  *(void *)&aBlock.a = _NSConcreteStackBlock;
  *(void *)&aBlock.b = 1107296256;
  *(void *)&aBlock.c = sub_1000D559C;
  *(void *)&aBlock.d = &unk_10014B080;
  uint64_t v13 = _Block_copy(&aBlock);
  uint64_t v14 = v10;
  swift_release();
  [v11 animateKeyframesWithDuration:0 delay:v13 options:0 animations:1.2 completion:0.0];

  _Block_release(v13);
  [*(id *)(v1 + OBJC_IVAR____TtC16MusicRecognition23AmbientMatchingFlowView_matchView) setHidden:1];
  [*(id *)(v1 + OBJC_IVAR____TtC16MusicRecognition23AmbientMatchingFlowView_noMatchView) setHidden:0];
  return sub_1000E9208(a1);
}

uint64_t sub_100066DC8()
{
  uint64_t v1 = sub_1000060EC((uint64_t *)&unk_100158FC0);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  id v6 = (char *)&v16 - v5;
  uint64_t v7 = type metadata accessor for URL();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void **)(v0 + OBJC_IVAR____TtC16MusicRecognition23AmbientMatchingFlowView_matchedMediaItem);
  if (!v11)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
    return sub_10001ABF4((uint64_t)v6);
  }
  id v12 = [v11 appleMusicURL];
  if (v12)
  {
    uint64_t v13 = v12;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v4, 0, 1, v7);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v4, 1, 1, v7);
  }
  sub_100009F78((uint64_t)v4, (uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1) {
    return sub_10001ABF4((uint64_t)v6);
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
  id v15 = *(void (**)(char *))(v0
                                      + OBJC_IVAR____TtC16MusicRecognition23AmbientMatchingFlowView_appleMusicURLHandler);
  swift_retain();
  v15(v10);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

void sub_1000670C4()
{
  uint64_t v0 = self;
  uint64_t v1 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v9 = sub_1000678A8;
  uint64_t v10 = v1;
  uint64_t v5 = _NSConcreteStackBlock;
  uint64_t v6 = 1107296256;
  uint64_t v7 = sub_1000D559C;
  uint64_t v8 = &unk_10014B0D0;
  uint64_t v2 = _Block_copy(&v5);
  swift_release();
  uint64_t v3 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v9 = sub_1000678B0;
  uint64_t v10 = v3;
  uint64_t v5 = _NSConcreteStackBlock;
  uint64_t v6 = 1107296256;
  uint64_t v7 = sub_1000B6658;
  uint64_t v8 = &unk_10014B0F8;
  uint64_t v4 = _Block_copy(&v5);
  swift_release();
  [v0 animateWithDuration:v2 animations:v4 completion:0.3];
  _Block_release(v4);
  _Block_release(v2);
}

void sub_100067254()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    id v2 = *(id *)(Strong + OBJC_IVAR____TtC16MusicRecognition23AmbientMatchingFlowView_noMatchView);

    [v2 setAlpha:0.0];
  }
  swift_beginAccess();
  uint64_t v3 = swift_unknownObjectWeakLoadStrong();
  if (v3)
  {
    uint64_t v4 = (void *)v3;
    id v5 = *(id *)(v3 + OBJC_IVAR____TtC16MusicRecognition23AmbientMatchingFlowView_listeningView);

    [v5 setAlpha:1.0];
  }
}

uint64_t sub_100067328()
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v1 = (void *)result;
    id v2 = *(void (**)(void))(result + OBJC_IVAR____TtC16MusicRecognition23AmbientMatchingFlowView_retryHandler);
    swift_retain();

    v2();
    return swift_release();
  }
  return result;
}

uint64_t type metadata accessor for AmbientMatchingFlowView()
{
  return self;
}

uint64_t sub_1000676AC()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1000676F4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_100014D10;
  return sub_1000667B0(a1, v4, v5, v7, v6);
}

unint64_t sub_1000677B4()
{
  unint64_t result = qword_1001567B8;
  if (!qword_1001567B8)
  {
    sub_100006224(&qword_1001567A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001567B8);
  }
  return result;
}

id sub_100067810()
{
  return sub_1000B72A8(*(void *)(v0 + 16));
}

uint64_t sub_100067818(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100067828()
{
  return swift_release();
}

uint64_t sub_100067830()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_100067868()
{
  sub_1000B7304(*(void **)(v0 + 16));
}

uint64_t sub_100067870()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1000678A8()
{
}

uint64_t sub_1000678B0()
{
  return sub_100067328();
}

uint64_t sub_1000678D4@<X0>(uint64_t a1@<X8>)
{
  return sub_1000678FC(&qword_100157618, &qword_1001593D0, (uint64_t (*)(void))&type metadata accessor for Genre, a1);
}

uint64_t sub_1000678FC@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X1>, uint64_t (*a3)(void)@<X2>, uint64_t a4@<X8>)
{
  sub_1000060EC(a1);
  sub_100006480(a2, a1);
  dispatch thunk of Collection.startIndex.getter();
  dispatch thunk of Collection.endIndex.getter();
  if (v15[4] == v15[0])
  {
    uint64_t v8 = a3(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(a4, 1, 1, v8);
  }
  else
  {
    uint64_t v10 = (void (*)(void *, void))dispatch thunk of Collection.subscript.read();
    uint64_t v12 = v11;
    uint64_t v13 = a3(0);
    uint64_t v14 = *(void *)(v13 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(a4, v12, v13);
    v10(v15, 0);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v14 + 56))(a4, 0, 1, v13);
  }
}

uint64_t sub_100067A94@<X0>(uint64_t a1@<X8>)
{
  return sub_1000678FC(&qword_1001593C0, &qword_1001593C8, (uint64_t (*)(void))&type metadata accessor for Song, a1);
}

uint64_t sub_100067ABC@<X0>(uint64_t a1@<X8>)
{
  return sub_1000678FC(&qword_1001593A0, &qword_1001593A8, (uint64_t (*)(void))&type metadata accessor for Album, a1);
}

uint64_t sub_100067AE4@<X0>(uint64_t a1@<X8>)
{
  return sub_1000678FC(&qword_1001593B0, &qword_1001593B8, (uint64_t (*)(void))&type metadata accessor for Artist, a1);
}

uint64_t sub_100067B0C(uint64_t a1)
{
  uint64_t v2 = v1;
  type metadata accessor for MusicLibrary();
  *(void *)(v1 + 24) = static MusicLibrary.shared.getter();
  *(void *)(v1 + OBJC_IVAR____TtC16MusicRecognition20MusicKitMusicLibrary_songAddStatusCancellable) = 0;
  uint64_t v4 = OBJC_IVAR____TtC16MusicRecognition20MusicKitMusicLibrary_playlistsByID;
  *(void *)(v2 + v4) = sub_1000E8DBC((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v5 = v2 + OBJC_IVAR____TtC16MusicRecognition20MusicKitMusicLibrary_mostRecentEditedPlaylist;
  uint64_t v6 = type metadata accessor for Playlist();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  uint64_t v7 = v2 + OBJC_IVAR____TtC16MusicRecognition20MusicKitMusicLibrary_song;
  uint64_t v8 = type metadata accessor for Song();
  uint64_t v9 = *(void *)(v8 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v7, a1, v8);
  sub_1000060EC(&qword_100159388);
  swift_allocObject();
  *(void *)(v2 + 16) = CurrentValueSubject.init(_:)();
  static MusicLibrary.shared.getter();
  uint64_t v10 = MusicLibrary.state<A>(for:)();
  swift_release();
  *(void *)(v2 + 32) = v10;
  sub_1000060EC(&qword_100159390);
  sub_100006480(&qword_100159398, &qword_100159390);
  ObservableObject<>.objectWillChange.getter();
  uint64_t v11 = swift_allocObject();
  swift_weakInit();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_10006BD5C;
  *(void *)(v12 + 24) = v11;
  type metadata accessor for ObservableObjectPublisher();
  uint64_t v13 = Publisher<>.sink(receiveValue:)();
  swift_release();
  swift_release();
  *(void *)(v2 + OBJC_IVAR____TtC16MusicRecognition20MusicKitMusicLibrary_songAddStatusCancellable) = v13;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a1, v8);
  return v2;
}

uint64_t sub_100067DA8()
{
  uint64_t v0 = type metadata accessor for MusicLibrary.AddStatus();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = &v10[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v2);
  uint64_t v6 = &v10[-v5];
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    dispatch thunk of MusicLibrary.ItemState.addStatus.getter();
    (*(void (**)(unsigned char *, void, uint64_t))(v1 + 104))(v4, enum case for MusicLibrary.AddStatus.added(_:), v0);
    int v8 = static MusicLibrary.AddStatus.== infix(_:_:)() & 1;
    uint64_t v9 = *(void (**)(unsigned char *, uint64_t))(v1 + 8);
    v9(v4, v0);
    v9(v6, v0);
    swift_retain();
    CurrentValueSubject.value.getter();
    swift_release();
    if (v8 != v11)
    {
      unsigned __int8 v11 = v8;
      swift_retain();
      CurrentValueSubject.send(_:)();
      swift_release();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_100067F70(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_100067F98(uint64_t a1)
{
  v2[5] = a1;
  v2[6] = v1;
  sub_1000060EC(&qword_100159318);
  v2[7] = swift_task_alloc();
  sub_1000060EC(&qword_100159308);
  v2[8] = swift_task_alloc();
  v2[9] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for Playlist();
  v2[10] = v3;
  v2[11] = *(void *)(v3 - 8);
  v2[12] = swift_task_alloc();
  uint64_t v4 = sub_1000060EC(&qword_100159320);
  v2[13] = v4;
  v2[14] = *(void *)(v4 - 8);
  v2[15] = swift_task_alloc();
  return _swift_task_switch(sub_100068128, 0, 0);
}

uint64_t sub_100068128()
{
  swift_getKeyPath();
  MusicLibraryRequest.init()();
  MusicLibraryRequest<>.sort<A>(by:ascending:)();
  swift_getKeyPath();
  *(unsigned char *)(v0 + 136) = 1;
  MusicLibraryRequest<>.filter<A>(matching:equalTo:)();
  swift_release();
  MusicLibraryRequest.limit.setter();
  swift_release();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 128) = v1;
  void *v1 = v0;
  v1[1] = sub_100068268;
  uint64_t v2 = *(void *)(v0 + 56);
  return sub_100068660(v2);
}

uint64_t sub_100068268()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_100068364, 0, 0);
}

uint64_t sub_100068364()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = sub_1000060EC(&qword_100159330);
  uint64_t v3 = *(void *)(v2 - 8);
  int v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2);
  uint64_t v6 = v0[14];
  uint64_t v5 = v0[15];
  uint64_t v7 = v0[13];
  uint64_t v8 = v0[10];
  uint64_t v9 = v0[11];
  uint64_t v10 = v0[9];
  if (v4 == 1)
  {
    (*(void (**)(void, void))(v6 + 8))(v0[15], v0[13]);
    sub_1000063D0(v1, &qword_100159318);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v10, 1, 1, v8);
LABEL_4:
    uint64_t v11 = v0[5];
    sub_1000063D0(v0[9], &qword_100159308);
    *(_OWORD *)uint64_t v11 = 0u;
    *(_OWORD *)(v11 + 16) = 0u;
    *(void *)(v11 + 32) = 0;
    goto LABEL_6;
  }
  sub_1000678FC(&qword_100159330, &qword_100159338, (uint64_t (*)(void))&type metadata accessor for Playlist, v0[9]);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v10, 1, v8) == 1) {
    goto LABEL_4;
  }
  uint64_t v13 = v0[11];
  uint64_t v12 = (uint64_t *)v0[12];
  uint64_t v14 = v0[10];
  uint64_t v15 = v0[8];
  uint64_t v16 = (uint64_t *)v0[5];
  uint64_t v17 = v0[6];
  id v18 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v13 + 32);
  v18(v12, (uint64_t *)v0[9], v14);
  (*(void (**)(uint64_t, uint64_t *, uint64_t))(v13 + 16))(v15, v12, v14);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56))(v15, 0, 1, v14);
  uint64_t v19 = v17 + OBJC_IVAR____TtC16MusicRecognition20MusicKitMusicLibrary_mostRecentEditedPlaylist;
  swift_beginAccess();
  sub_10006A474(v15, v19);
  swift_endAccess();
  v16[3] = type metadata accessor for MusicKitPlaylist();
  void v16[4] = (uint64_t)&off_10014A298;
  uint64_t v20 = sub_100057938(v16);
  v18(v20, v12, v14);
LABEL_6:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v21 = (uint64_t (*)(void))v0[1];
  return v21();
}

uint64_t sub_100068660(uint64_t a1)
{
  v1[3] = a1;
  uint64_t v2 = sub_1000060EC(&qword_100159340);
  v1[4] = v2;
  v1[5] = *(void *)(v2 - 8);
  uint64_t v3 = swift_task_alloc();
  v1[6] = v3;
  int v4 = (void *)swift_task_alloc();
  v1[7] = v4;
  uint64_t v5 = sub_1000060EC(&qword_100159320);
  *int v4 = v1;
  v4[1] = sub_10006877C;
  return MusicLibraryRequest.response()(v3, v5);
}

uint64_t sub_10006877C()
{
  *(void *)(*(void *)v1 + 64) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_100068968;
  }
  else {
    uint64_t v2 = sub_100068890;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100068890()
{
  uint64_t v2 = v0[5];
  uint64_t v1 = v0[6];
  uint64_t v4 = v0[3];
  uint64_t v3 = v0[4];
  MusicLibraryResponse.items.getter();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v5 = sub_1000060EC(&qword_100159330);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 0, 1, v5);
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_100068968()
{
  if (qword_100156018 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000E808(v1, (uint64_t)qword_100164B38);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138412290;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    v0[2] = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v5 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Error retrieving playlists from user's music library: %@", v4, 0xCu);
    sub_1000060EC((uint64_t *)&unk_1001570F0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v7 = v0[3];
  uint64_t v8 = sub_1000060EC(&qword_100159330);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_100068BBC()
{
  v1[12] = v0;
  sub_1000060EC(&qword_100159318);
  v1[13] = swift_task_alloc();
  uint64_t v2 = sub_1000060EC(&qword_100159330);
  v1[14] = v2;
  v1[15] = *(void *)(v2 - 8);
  v1[16] = swift_task_alloc();
  v1[17] = swift_task_alloc();
  uint64_t v3 = sub_1000060EC(&qword_100159320);
  v1[18] = v3;
  v1[19] = *(void *)(v3 - 8);
  v1[20] = swift_task_alloc();
  return _swift_task_switch(sub_100068D20, 0, 0);
}

uint64_t sub_100068D20()
{
  swift_getKeyPath();
  *(void *)(v0 + 168) = type metadata accessor for Playlist();
  MusicLibraryRequest.init()();
  MusicLibraryRequest.sort<A>(by:ascending:)();
  swift_getKeyPath();
  *(unsigned char *)(v0 + 184) = 1;
  MusicLibraryRequest<>.filter<A>(matching:equalTo:)();
  swift_release();
  MusicLibraryRequest.limit.setter();
  swift_release();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 176) = v1;
  void *v1 = v0;
  v1[1] = sub_100068E5C;
  uint64_t v2 = *(void *)(v0 + 104);
  return sub_100068660(v2);
}

uint64_t sub_100068E5C()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_100068F58, 0, 0);
}

uint64_t sub_100068F58()
{
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v2 = *(void *)(v0 + 120);
  uint64_t v3 = *(void *)(v0 + 104);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 152) + 8))(*(void *)(v0 + 160), *(void *)(v0 + 144));
    sub_1000063D0(v3, &qword_100159318);
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v5 = *(void *)(v0 + 128);
    uint64_t v6 = *(void *)(v0 + 136);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v6, v3, v1);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v5, v6, v1);
    sub_100006480(&qword_100159350, &qword_100159330);
    uint64_t v7 = dispatch thunk of Sequence._copyToContiguousArray()();
    sub_1000692BC(v7);
    swift_release();
    sub_100006480(&qword_100159338, &qword_100159330);
    uint64_t v8 = dispatch thunk of Collection.count.getter();
    uint64_t v4 = _swiftEmptyArrayStorage;
    if (v8)
    {
      uint64_t v9 = v8;
      sub_10006A544(0, v8 & ~(v8 >> 63), 0);
      uint64_t v4 = _swiftEmptyArrayStorage;
      uint64_t result = dispatch thunk of Collection.startIndex.getter();
      if (v9 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v25 = *(void *)(v0 + 168) - 8;
      do
      {
        uint64_t v11 = *(void *)(v0 + 168);
        uint64_t v12 = (void (*)(uint64_t, void))dispatch thunk of Collection.subscript.read();
        uint64_t v14 = v13;
        *(void *)(v0 + 40) = type metadata accessor for MusicKitPlaylist();
        *(void *)(v0 + 48) = &off_10014A298;
        uint64_t v15 = sub_100057938((uint64_t *)(v0 + 16));
        (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)v25 + 16))(v15, v14, v11);
        v12(v0 + 56, 0);
        unint64_t v17 = _swiftEmptyArrayStorage[2];
        unint64_t v16 = _swiftEmptyArrayStorage[3];
        if (v17 >= v16 >> 1) {
          sub_10006A544(v16 > 1, v17 + 1, 1);
        }
        _swiftEmptyArrayStorage[2] = v17 + 1;
        id v18 = &_swiftEmptyArrayStorage[5 * v17];
        long long v19 = *(_OWORD *)(v0 + 16);
        long long v20 = *(_OWORD *)(v0 + 32);
        v18[8] = *(void *)(v0 + 48);
        *((_OWORD *)v18 + 2) = v19;
        *((_OWORD *)v18 + 3) = v20;
        dispatch thunk of Collection.formIndex(after:)();
        --v9;
      }
      while (v9);
    }
    uint64_t v22 = *(void *)(v0 + 152);
    uint64_t v21 = *(void *)(v0 + 160);
    uint64_t v23 = *(void *)(v0 + 144);
    (*(void (**)(void, void))(*(void *)(v0 + 120) + 8))(*(void *)(v0 + 136), *(void *)(v0 + 112));
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v24 = *(uint64_t (**)(void *))(v0 + 8);
  return v24(v4);
}

uint64_t sub_1000692BC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v23 = sub_1000060EC(&qword_100159360);
  uint64_t v4 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v6 = (uint64_t *)((char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  int64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = _swiftEmptyArrayStorage;
  if (v7)
  {
    uint64_t v20 = v1;
    id v24 = _swiftEmptyArrayStorage;
    sub_10006A524(0, v7, 0);
    uint64_t v8 = v24;
    uint64_t v22 = type metadata accessor for Playlist();
    uint64_t v9 = *(void *)(v22 - 8);
    uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
    uint64_t v10 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    do
    {
      v21((char *)v6 + *(int *)(v23 + 48), v10, v22);
      *uint64_t v6 = Playlist.id.getter();
      v6[1] = v12;
      id v24 = v8;
      unint64_t v14 = v8[2];
      unint64_t v13 = v8[3];
      if (v14 >= v13 >> 1)
      {
        sub_10006A524(v13 > 1, v14 + 1, 1);
        uint64_t v8 = v24;
      }
      uint64_t v8[2] = v14 + 1;
      sub_10006A9B0((uint64_t)v6, (uint64_t)v8+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v14);
      v10 += v11;
      --v7;
    }
    while (v7);
    uint64_t v2 = v20;
  }
  if (v8[2])
  {
    sub_1000060EC(&qword_100159368);
    uint64_t v15 = (void *)static _DictionaryStorage.allocate(capacity:)();
  }
  else
  {
    uint64_t v15 = &_swiftEmptyDictionarySingleton;
  }
  id v24 = v15;
  uint64_t v16 = swift_bridgeObjectRetain();
  sub_10006B0B0(v16, 1, &v24);
  swift_bridgeObjectRelease();
  unint64_t v17 = v24;
  id v18 = (void *)(v2 + OBJC_IVAR____TtC16MusicRecognition20MusicKitMusicLibrary_playlistsByID);
  swift_beginAccess();
  *id v18 = v17;
  return swift_bridgeObjectRelease();
}

uint64_t sub_100069534(uint64_t a1, uint64_t a2)
{
  v3[7] = a2;
  v3[8] = v2;
  v3[6] = a1;
  sub_1000060EC(&qword_100159308);
  v3[9] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for Playlist();
  v3[10] = v4;
  v3[11] = *(void *)(v4 - 8);
  v3[12] = swift_task_alloc();
  v3[13] = swift_task_alloc();
  return _swift_task_switch(sub_100069638, 0, 0);
}

uint64_t sub_100069638()
{
  id v28 = v0;
  uint64_t v1 = (uint64_t *)(v0[8] + OBJC_IVAR____TtC16MusicRecognition20MusicKitMusicLibrary_playlistsByID);
  swift_beginAccess();
  uint64_t v2 = *v1;
  if (!*(void *)(v2 + 16))
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(v0[11] + 56))(v0[9], 1, 1, v0[10]);
LABEL_7:
    sub_1000063D0(v0[9], &qword_100159308);
    swift_endAccess();
    if (qword_100156018 != -1) {
      swift_once();
    }
    uint64_t v11 = type metadata accessor for Logger();
    sub_10000E808(v11, (uint64_t)qword_100164B38);
    swift_bridgeObjectRetain_n();
    uint64_t v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.error.getter();
    BOOL v14 = os_log_type_enabled(v12, v13);
    unint64_t v15 = v0[7];
    if (v14)
    {
      uint64_t v16 = v0[6];
      unint64_t v17 = (uint8_t *)swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      *(_DWORD *)unint64_t v17 = 136315138;
      swift_bridgeObjectRetain();
      v0[5] = sub_1000CB67C(v16, v15, &v27);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "No playlist found with identifier %s", v17, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v18 = (uint64_t (*)(void))v0[1];
    return v18();
  }
  uint64_t v4 = v0[6];
  uint64_t v3 = v0[7];
  swift_bridgeObjectRetain();
  unint64_t v5 = sub_1000CA380(v4, v3);
  if (v6)
  {
    (*(void (**)(void, unint64_t, void))(v0[11] + 16))(v0[9], *(void *)(v2 + 56) + *(void *)(v0[11] + 72) * v5, v0[10]);
    uint64_t v7 = 0;
  }
  else
  {
    uint64_t v7 = 1;
  }
  uint64_t v8 = v0[10];
  uint64_t v9 = v0[11];
  uint64_t v10 = v0[9];
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v10, v7, 1, v8);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v10, 1, v8) == 1) {
    goto LABEL_7;
  }
  uint64_t v20 = v0[8];
  (*(void (**)(void, void, void))(v0[11] + 32))(v0[13], v0[9], v0[10]);
  swift_endAccess();
  uint64_t v21 = v20 + OBJC_IVAR____TtC16MusicRecognition20MusicKitMusicLibrary_song;
  uint64_t v26 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void *))((char *)&async function pointer to dispatch thunk of MusicLibrary.add<A>(_:to:)
                                                                           + async function pointer to dispatch thunk of MusicLibrary.add<A>(_:to:));
  uint64_t v22 = (void *)swift_task_alloc();
  v0[14] = v22;
  uint64_t v23 = type metadata accessor for Song();
  *uint64_t v22 = v0;
  v22[1] = sub_100069A3C;
  uint64_t v24 = v0[12];
  uint64_t v25 = v0[13];
  return v26(v24, v21, v25, v23, &protocol witness table for Song);
}

uint64_t sub_100069A3C()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 120) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_100069BFC;
  }
  else
  {
    uint64_t v5 = v2[11];
    uint64_t v4 = v2[12];
    uint64_t v6 = v2[10];
    uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
    v2[16] = v7;
    v2[17] = (v5 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v7(v4, v6);
    uint64_t v3 = sub_100069B74;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_100069B74()
{
  (*(void (**)(void, void))(v0 + 128))(*(void *)(v0 + 104), *(void *)(v0 + 80));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100069BFC()
{
  (*(void (**)(void, void))(v0[11] + 8))(v0[13], v0[10]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_100069C98()
{
  swift_release();
  swift_release();
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MusicRecognition20MusicKitMusicLibrary_song;
  uint64_t v2 = type metadata accessor for Song();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_bridgeObjectRelease();
  sub_1000063D0(v0 + OBJC_IVAR____TtC16MusicRecognition20MusicKitMusicLibrary_mostRecentEditedPlaylist, &qword_100159308);
  uint64_t v3 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v4 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v3, v4);
}

uint64_t sub_100069D88()
{
  return type metadata accessor for MusicKitMusicLibrary();
}

uint64_t type metadata accessor for MusicKitMusicLibrary()
{
  uint64_t result = qword_100159218;
  if (!qword_100159218) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100069DDC()
{
  type metadata accessor for Song();
  if (v0 <= 0x3F)
  {
    sub_100069ED4();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_100069ED4()
{
  if (!qword_100159228)
  {
    type metadata accessor for Playlist();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100159228);
    }
  }
}

uint64_t sub_100069F2C()
{
  *(void *)(v1 + 16) = *v0;
  return _swift_task_switch(sub_100069F50, 0, 0);
}

uint64_t sub_100069F50()
{
  uint64_t v1 = *(void *)(v0 + 16) + OBJC_IVAR____TtC16MusicRecognition20MusicKitMusicLibrary_song;
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t, void *))((char *)&async function pointer to dispatch thunk of MusicLibrary.add<A>(_:)
                                                        + async function pointer to dispatch thunk of MusicLibrary.add<A>(_:));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v2;
  uint64_t v3 = type metadata accessor for Song();
  void *v2 = v0;
  v2[1] = sub_100010784;
  return v5(v1, v3, &protocol witness table for Song);
}

uint64_t sub_10006A028()
{
  *(void *)(v1 + 16) = *v0;
  return _swift_task_switch(sub_10006A04C, 0, 0);
}

uint64_t sub_10006A04C()
{
  uint64_t v1 = *(void *)(v0 + 16) + OBJC_IVAR____TtC16MusicRecognition20MusicKitMusicLibrary_song;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v2;
  uint64_t v3 = type metadata accessor for Song();
  void *v2 = v0;
  v2[1] = sub_10000FFDC;
  return MusicLibrary.remove<A>(_:)(v1, v3, &protocol witness table for Song);
}

uint64_t sub_10006A114()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_10006A1A4;
  return sub_100068BBC();
}

uint64_t sub_10006A1A4(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t sub_10006A2A0(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100014D10;
  return sub_100067F98(a1);
}

uint64_t sub_10006A33C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100014D10;
  return sub_100069534(a1, a2);
}

uint64_t sub_10006A3E4(void *a1)
{
  return dispatch thunk of LibraryPlaylistInternalSortProperties.lastModifiedDate.getter();
}

uint64_t sub_10006A42C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  sub_100010740(a1, a1[3]);
  uint64_t result = dispatch thunk of LibraryPlaylistInternalFilter.isEditable.getter();
  *a2 = result;
  return result;
}

uint64_t sub_10006A474(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000060EC(&qword_100159308);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10006A4DC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_100010740(a1, a1[3]);
  uint64_t result = dispatch thunk of LibraryPlaylistSortProperties.name.getter();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_10006A524(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10006A5E4(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_10006A544(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10006A82C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10006A564(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10006AA18(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10006A584(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10006AB78(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_10006A5A4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10006AD04(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10006A5C4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10006AE70(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_10006A5E4(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    os_log_type_t v13 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_1000060EC(&qword_100159370);
  uint64_t v10 = *(void *)(sub_1000060EC(&qword_100159360) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  os_log_type_t v13 = (void *)swift_allocObject();
  size_t v14 = j__malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  void v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(sub_1000060EC(&qword_100159360) - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  id v18 = (char *)v13 + v17;
  long long v19 = (char *)a4 + v17;
  if (a1)
  {
    if (v13 < a4 || v18 >= &v19[*(void *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v20 = *(void *)(v16 + 72) * v8;
  uint64_t v21 = &v18[v20];
  unint64_t v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10006A82C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1000060EC(&qword_100159358);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v12 = v10 + 32;
  os_log_type_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[40 * v8]) {
      memmove(v12, v13, 40 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[40 * v8] || v12 >= &v13[40 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10006A9B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000060EC(&qword_100159360);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10006AA18(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1000060EC(&qword_100159378);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 29;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 2);
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  os_log_type_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[4 * v8]) {
      memmove(v13, v14, 4 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[4 * v8] || v13 >= &v14[4 * v8])
  {
    memcpy(v13, v14, 4 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10006AB78(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1000060EC(qword_1001593D8);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    void v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 8 * v8) {
      memmove(v10 + 4, a4 + 4, 8 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    sub_1000060EC(&qword_1001577F8);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10006AD04(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1000060EC(&qword_1001584A8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10006AE70(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    unint64_t v13 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_1000060EC(&qword_100159380);
  uint64_t v10 = *(void *)(type metadata accessor for StreamingService() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v13 = (void *)swift_allocObject();
  size_t v14 = j__malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  void v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(type metadata accessor for StreamingService() - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  id v18 = (char *)v13 + v17;
  long long v19 = (char *)a4 + v17;
  if (a1)
  {
    if (v13 < a4 || v18 >= &v19[*(void *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v20 = *(void *)(v16 + 72) * v8;
  uint64_t v21 = &v18[v20];
  unint64_t v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10006B0B0(uint64_t a1, int a2, void *a3)
{
  uint64_t v7 = type metadata accessor for Playlist();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000060EC(&qword_100159360);
  uint64_t v12 = __chkstk_darwin(v11);
  unint64_t v15 = (uint64_t *)((char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = *(void *)(a1 + 16);
  if (!v16) {
    return swift_bridgeObjectRelease();
  }
  LODWORD(v64) = a2;
  uint64_t v60 = v3;
  uint64_t v61 = v16;
  unint64_t v17 = (char *)v15 + *(int *)(v12 + 48);
  unint64_t v59 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v18 = a1 + v59;
  uint64_t v66 = *(void *)(v13 + 72);
  uint64_t v63 = a1;
  swift_bridgeObjectRetain();
  sub_10006B610(v18, (uint64_t)v15);
  uint64_t v62 = v8;
  long long v19 = *(void (**)(unint64_t, char *, uint64_t))(v8 + 32);
  uint64_t v21 = v15[1];
  uint64_t v72 = *v15;
  uint64_t v20 = v72;
  uint64_t v73 = v21;
  Swift::Int v68 = v19;
  uint64_t v69 = v10;
  id v65 = v17;
  uint64_t v67 = v7;
  v19((unint64_t)v10, v17, v7);
  unint64_t v22 = (void *)*a3;
  unint64_t v24 = sub_1000CA380(v20, v21);
  uint64_t v25 = v22[2];
  BOOL v26 = (v23 & 1) == 0;
  uint64_t v27 = v25 + v26;
  if (__OFADD__(v25, v26)) {
    goto LABEL_23;
  }
  char v28 = v23;
  if (v22[3] >= v27)
  {
    if (v64)
    {
      if (v23) {
        goto LABEL_10;
      }
    }
    else
    {
      sub_10006B678();
      if (v28) {
        goto LABEL_10;
      }
    }
LABEL_13:
    id v33 = (void *)*a3;
    *(void *)(*a3 + 8 * (v24 >> 6) + 64) |= 1 << v24;
    NSString v34 = (uint64_t *)(v33[6] + 16 * v24);
    *NSString v34 = v20;
    v34[1] = v21;
    uint64_t v35 = v33[7];
    uint64_t v64 = *(void *)(v62 + 72);
    uint64_t v36 = v67;
    v68(v35 + v64 * v24, v69, v67);
    uint64_t v37 = v33[2];
    BOOL v38 = __OFADD__(v37, 1);
    uint64_t v39 = v37 + 1;
    if (v38)
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v33[2] = v39;
    uint64_t v40 = v61 - 1;
    if (v61 == 1) {
      return swift_bridgeObjectRelease_n();
    }
    uint64_t v41 = v63 + v66 + v59;
    while (1)
    {
      sub_10006B610(v41, (uint64_t)v15);
      uint64_t v43 = v15[1];
      uint64_t v72 = *v15;
      uint64_t v42 = v72;
      uint64_t v73 = v43;
      v68((unint64_t)v69, v65, v36);
      uint64_t v44 = (void *)*a3;
      unint64_t v45 = sub_1000CA380(v42, v43);
      uint64_t v47 = v44[2];
      BOOL v48 = (v46 & 1) == 0;
      BOOL v38 = __OFADD__(v47, v48);
      uint64_t v49 = v47 + v48;
      if (v38) {
        break;
      }
      char v50 = v46;
      if (v44[3] < v49)
      {
        sub_10006B93C(v49, 1);
        unint64_t v45 = sub_1000CA380(v42, v43);
        if ((v50 & 1) != (v51 & 1)) {
          goto LABEL_25;
        }
      }
      if (v50) {
        goto LABEL_10;
      }
      uint64_t v52 = (void *)*a3;
      *(void *)(*a3 + 8 * (v45 >> 6) + 64) |= 1 << v45;
      id v53 = (uint64_t *)(v52[6] + 16 * v45);
      *id v53 = v42;
      v53[1] = v43;
      uint64_t v36 = v67;
      v68(v52[7] + v64 * v45, v69, v67);
      uint64_t v54 = v52[2];
      BOOL v38 = __OFADD__(v54, 1);
      uint64_t v55 = v54 + 1;
      if (v38) {
        goto LABEL_24;
      }
      v52[2] = v55;
      v41 += v66;
      if (!--v40) {
        return swift_bridgeObjectRelease_n();
      }
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_10006B93C(v27, v64 & 1);
  unint64_t v29 = sub_1000CA380(v20, v21);
  if ((v28 & 1) == (v30 & 1))
  {
    unint64_t v24 = v29;
    if ((v28 & 1) == 0) {
      goto LABEL_13;
    }
LABEL_10:
    uint64_t v32 = swift_allocError();
    swift_willThrow();
    uint64_t v74 = v32;
    swift_errorRetain();
    sub_1000060EC(&qword_1001577C8);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v62 + 8))(v69, v67);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_errorRelease();
    }
    goto LABEL_26;
  }
LABEL_25:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
LABEL_26:
  uint64_t v70 = 0;
  unint64_t v71 = 0xE000000000000000;
  _StringGuts.grow(_:)(30);
  v56._object = (void *)0x80000001001192E0;
  v56._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
  String.append(_:)(v56);
  _print_unlocked<A, B>(_:_:)();
  v57._uint64_t countAndFlagsBits = 39;
  v57._object = (void *)0xE100000000000000;
  String.append(_:)(v57);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10006B610(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000060EC(&qword_100159360);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void *sub_10006B678()
{
  uint64_t v35 = type metadata accessor for Playlist();
  uint64_t v1 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  uint64_t v3 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000060EC(&qword_100159368);
  char v30 = v0;
  uint64_t v4 = *v0;
  uint64_t v5 = static _DictionaryStorage.copy(original:)();
  uint64_t v6 = *(void *)(v4 + 16);
  uint64_t v36 = v5;
  if (!v6)
  {
    uint64_t result = (void *)swift_release();
    uint64_t v28 = v36;
    uint64_t v27 = v30;
LABEL_25:
    *uint64_t v27 = v28;
    return result;
  }
  uint64_t v7 = v5;
  uint64_t result = (void *)(v5 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v4 || (unint64_t)result >= v4 + 64 + 8 * v9)
  {
    uint64_t result = memmove(result, (const void *)(v4 + 64), 8 * v9);
    uint64_t v7 = v36;
  }
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v4 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v4 + 64);
  uint64_t v31 = v4 + 64;
  int64_t v32 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v33 = v1 + 32;
  uint64_t v34 = v1 + 16;
  uint64_t v14 = v35;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v24 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v24 >= v32) {
      goto LABEL_23;
    }
    unint64_t v25 = *(void *)(v31 + 8 * v24);
    ++v10;
    if (!v25)
    {
      int64_t v10 = v24 + 1;
      if (v24 + 1 >= v32) {
        goto LABEL_23;
      }
      unint64_t v25 = *(void *)(v31 + 8 * v10);
      if (!v25) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v25 - 1) & v25;
    unint64_t v16 = __clz(__rbit64(v25)) + (v10 << 6);
LABEL_9:
    uint64_t v17 = 16 * v16;
    uint64_t v18 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v16);
    uint64_t v19 = *v18;
    uint64_t v20 = v18[1];
    unint64_t v21 = *(void *)(v1 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v3, *(void *)(v4 + 56) + v21, v14);
    uint64_t v22 = v36;
    char v23 = (void *)(*(void *)(v36 + 48) + v17);
    *char v23 = v19;
    v23[1] = v20;
    (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(*(void *)(v22 + 56) + v21, v3, v14);
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v32)
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    uint64_t v27 = v30;
    uint64_t v28 = v36;
    goto LABEL_25;
  }
  unint64_t v25 = *(void *)(v31 + 8 * v26);
  if (v25)
  {
    int64_t v10 = v26;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v10 >= v32) {
      goto LABEL_23;
    }
    unint64_t v25 = *(void *)(v31 + 8 * v10);
    ++v26;
    if (v25) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_10006B93C(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v49 = type metadata accessor for Playlist();
  uint64_t v5 = *(void *)(v49 - 8);
  __chkstk_darwin(v49);
  BOOL v48 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v2;
  sub_1000060EC(&qword_100159368);
  int v47 = a2;
  uint64_t v8 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16)) {
    goto LABEL_41;
  }
  uint64_t v10 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v11 = *(void *)(v7 + 64);
  uint64_t v44 = (void *)(v7 + 64);
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  else {
    uint64_t v12 = -1;
  }
  unint64_t v13 = v12 & v11;
  uint64_t v42 = v2;
  int64_t v43 = (unint64_t)(v10 + 63) >> 6;
  unint64_t v45 = (void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v46 = v5;
  uint64_t v14 = (void (**)(char *, uint64_t, uint64_t))(v5 + 32);
  uint64_t v15 = v8 + 64;
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  while (1)
  {
    if (v13)
    {
      unint64_t v20 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v21 = v20 | (v17 << 6);
      goto LABEL_22;
    }
    int64_t v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v43) {
      break;
    }
    char v23 = v44;
    unint64_t v24 = v44[v22];
    ++v17;
    if (!v24)
    {
      int64_t v17 = v22 + 1;
      if (v22 + 1 >= v43) {
        goto LABEL_34;
      }
      unint64_t v24 = v44[v17];
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v43)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v42;
          if ((v47 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v24 = v44[v25];
        if (!v24)
        {
          while (1)
          {
            int64_t v17 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_43;
            }
            if (v17 >= v43) {
              goto LABEL_34;
            }
            unint64_t v24 = v44[v17];
            ++v25;
            if (v24) {
              goto LABEL_21;
            }
          }
        }
        int64_t v17 = v25;
      }
    }
LABEL_21:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_22:
    uint64_t v26 = *(void *)(v7 + 56);
    uint64_t v27 = v7;
    uint64_t v28 = (uint64_t *)(*(void *)(v7 + 48) + 16 * v21);
    uint64_t v29 = *v28;
    uint64_t v30 = v28[1];
    uint64_t v31 = *(void *)(v46 + 72);
    uint64_t v32 = v26 + v31 * v21;
    if (v47)
    {
      (*v14)(v48, v32, v49);
    }
    else
    {
      (*v45)(v48, v32, v49);
      swift_bridgeObjectRetain();
    }
    Hasher.init(_seed:)();
    String.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v33 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v34 = result & ~v33;
    unint64_t v35 = v34 >> 6;
    if (((-1 << v34) & ~*(void *)(v15 + 8 * (v34 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v34) & ~*(void *)(v15 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v36 = 0;
      unint64_t v37 = (unint64_t)(63 - v33) >> 6;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v38 = v35 == v37;
        if (v35 == v37) {
          unint64_t v35 = 0;
        }
        v36 |= v38;
        uint64_t v39 = *(void *)(v15 + 8 * v35);
      }
      while (v39 == -1);
      unint64_t v18 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = (void *)(*(void *)(v9 + 48) + 16 * v18);
    void *v19 = v29;
    v19[1] = v30;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v14)(*(void *)(v9 + 56) + v31 * v18, v48, v49);
    ++*(void *)(v9 + 16);
    uint64_t v7 = v27;
  }
  swift_release();
  uint64_t v3 = v42;
  char v23 = v44;
  if ((v47 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v40 = 1 << *(unsigned char *)(v7 + 32);
  if (v40 >= 64) {
    bzero(v23, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *char v23 = -1 << v40;
  }
  *(void *)(v7 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v9;
  return result;
}

uint64_t sub_10006BD24()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10006BD5C()
{
  return sub_100067DA8();
}

uint64_t sub_10006BD64()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10006BD9C()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_10006BDC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 24);
}

uint64_t type metadata accessor for LazyView()
{
  return sub_100020608();
}

uint64_t sub_10006BDE4(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 24);
}

uint64_t sub_10006BDEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a3 - 8);
  uint64_t v7 = ((uint64_t (*)(void))__chkstk_darwin)();
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (void (*)(void))__chkstk_darwin(v7);
  uint64_t v12 = (char *)&v15 - v11;
  v10();
  sub_1000BA728(v9, a3, a4);
  unint64_t v13 = *(void (**)(char *, uint64_t))(v6 + 8);
  v13(v9, a3);
  sub_1000BA728(v12, a3, a4);
  return ((uint64_t (*)(char *, uint64_t))v13)(v12, a3);
}

uint64_t sub_10006BF20(uint64_t a1)
{
  return sub_10006BDEC(*v1, v1[1], *(void *)(a1 + 16), *(void *)(a1 + 24));
}

uint64_t sub_10006BF30@<X0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  sub_10006DA38();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v3 = v1 + OBJC_IVAR____TtC16MusicRecognition22AddToPlaylistViewModel__state;
  swift_beginAccess();
  return sub_10002F338(v3, a1);
}

uint64_t sub_10006BFCC()
{
  v1[28] = v0;
  type metadata accessor for MainActor();
  v1[29] = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[30] = v3;
  v1[31] = v2;
  return _swift_task_switch(sub_10006C064, v3, v2);
}

uint64_t sub_10006C064()
{
  if (qword_100156238 != -1) {
    swift_once();
  }
  v0[32] = *(void *)algn_10015A878;
  id v1 = objc_allocWithZone((Class)LSApplicationWorkspace);
  swift_bridgeObjectRetain();
  v0[33] = [v1 init];
  uint64_t v2 = self;
  swift_bridgeObjectRetain();
  NSString v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v4 = [v2 applicationWithBundleIdentifier:v3];
  v0[34] = v4;

  uint64_t v7 = (uint64_t (*)(uint64_t))((char *)&dword_10015A880 + dword_10015A880);
  uint64_t v5 = (void *)swift_task_alloc();
  v0[35] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_10006C1D4;
  return v7((uint64_t)v4);
}

uint64_t sub_10006C1D4(char a1)
{
  uint64_t v4 = *v2;
  *(void *)(v4 + 288) = v1;
  swift_task_dealloc();
  uint64_t v5 = *(void **)(v4 + 272);
  uint64_t v6 = *(void **)(v4 + 264);
  swift_bridgeObjectRelease();

  if (v1)
  {
    swift_errorRelease();
    uint64_t v7 = *(void *)(v4 + 240);
    uint64_t v8 = *(void *)(v4 + 248);
    uint64_t v9 = sub_10006C504;
  }
  else
  {
    *(unsigned char *)(v4 + 352) = a1 & 1;
    uint64_t v7 = *(void *)(v4 + 240);
    uint64_t v8 = *(void *)(v4 + 248);
    uint64_t v9 = sub_10006C35C;
  }
  return _swift_task_switch(v9, v7, v8);
}

uint64_t sub_10006C35C()
{
  if (*(unsigned char *)(v0 + 352) == 1)
  {
    uint64_t v1 = *(void *)(v0 + 288);
    uint64_t v2 = *(void *)(v0 + 224);
    *(void *)(v0 + 16) = 1;
    *(_OWORD *)(v0 + 24) = 0u;
    *(_OWORD *)(v0 + 40) = 0u;
    *(void *)(v0 + 56) = 0;
    swift_getKeyPath();
    uint64_t v3 = swift_task_alloc();
    *(void *)(v3 + 16) = v2;
    *(void *)(v3 + 24) = v0 + 16;
    *(void *)(v0 + 296) = OBJC_IVAR____TtC16MusicRecognition22AddToPlaylistViewModel___observationRegistrar;
    *(void *)(v0 + 208) = v2;
    *(void *)(v0 + 304) = sub_10006DA38();
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    *(void *)(v0 + 312) = v1;
    swift_release();
    swift_task_dealloc();
    sub_1000307C4(v0 + 16);
    *(void *)(v0 + 320) = *(void *)(v2 + OBJC_IVAR____TtC16MusicRecognition22AddToPlaylistViewModel_libraryController);
    return _swift_task_switch(sub_10006C580, 0, 0);
  }
  else
  {
    uint64_t v4 = swift_release();
    (*(void (**)(uint64_t))(*(void *)(v0 + 224)
                                    + OBJC_IVAR____TtC16MusicRecognition22AddToPlaylistViewModel_onDismissHandler))(v4);
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
}

uint64_t sub_10006C504()
{
  uint64_t v1 = swift_release();
  (*(void (**)(uint64_t))(*(void *)(v0 + 224)
                                  + OBJC_IVAR____TtC16MusicRecognition22AddToPlaylistViewModel_onDismissHandler))(v1);
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10006C580()
{
  uint64_t v1 = *(void **)(v0 + 320);
  uint64_t v2 = v1[6];
  uint64_t v3 = v1[7];
  sub_100010740(v1 + 3, v2);
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v3 + 32) + **(int **)(v3 + 32));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 328) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_10006C684;
  return v6(v2, v3);
}

uint64_t sub_10006C684(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 336) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 248);
  uint64_t v4 = *(void *)(v2 + 240);
  return _swift_task_switch(sub_10006C7AC, v4, v3);
}

uint64_t sub_10006C7AC()
{
  uint64_t v1 = *(void *)(v0 + 336);
  if (v1)
  {
    if (*(void *)(v1 + 16))
    {
      return _swift_task_switch(sub_10006C908, 0, 0);
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v2 = *(void *)(v0 + 224);
  swift_release();
  *(_OWORD *)(v0 + 128) = 0u;
  *(_OWORD *)(v0 + 144) = 0u;
  *(_OWORD *)(v0 + 112) = 0u;
  swift_getKeyPath();
  uint64_t v3 = swift_task_alloc();
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v0 + 112;
  *(void *)(v0 + 200) = v2;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  swift_task_dealloc();
  sub_1000307C4(v0 + 112);
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_10006C908()
{
  uint64_t v1 = *(void **)(v0 + 320);
  uint64_t v2 = v1[6];
  uint64_t v3 = v1[7];
  sub_100010740(v1 + 3, v2);
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 40) + **(int **)(v3 + 40));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 344) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_10006CA24;
  return v6(v0 + 160, v2, v3);
}

uint64_t sub_10006CA24()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 248);
  uint64_t v3 = *(void *)(v1 + 240);
  return _swift_task_switch(sub_10006CB44, v3, v2);
}

uint64_t sub_10006CB44()
{
  uint64_t v1 = v0[42];
  uint64_t v2 = v0[28];
  swift_release();
  v0[8] = v1;
  sub_10006DA90((uint64_t)(v0 + 20), (uint64_t)(v0 + 9));
  swift_getKeyPath();
  uint64_t v3 = swift_task_alloc();
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v0 + 8;
  v0[27] = v2;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  swift_task_dealloc();
  sub_1000307C4((uint64_t)(v0 + 8));
  sub_10006DAF8((uint64_t)(v0 + 20));
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_10006CC64(uint64_t a1, uint64_t a2)
{
  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  return _swift_task_switch(sub_10006CC88, 0, 0);
}

uint64_t sub_10006CC88()
{
  uint64_t v1 = *(void **)(v0[5] + OBJC_IVAR____TtC16MusicRecognition22AddToPlaylistViewModel_libraryController);
  uint64_t v2 = v1[6];
  uint64_t v3 = v1[7];
  sub_100010740(v1 + 3, v2);
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 48) + **(int **)(v3 + 48));
  uint64_t v4 = (void *)swift_task_alloc();
  v0[6] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_10006CDA0;
  uint64_t v6 = v0[3];
  uint64_t v5 = v0[4];
  return v8(v6, v5, v2, v3);
}

uint64_t sub_10006CDA0()
{
  *(void *)(*(void *)v1 + 56) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_10006D0D4;
  }
  else {
    uint64_t v2 = sub_10006CEB4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10006CEB4()
{
  *(void *)(v0 + 64) = type metadata accessor for MainActor();
  *(void *)(v0 + 72) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10006CF4C, v2, v1);
}

uint64_t sub_10006CF4C()
{
  swift_release();
  *(void *)(v0 + 80) = [objc_allocWithZone((Class)UINotificationFeedbackGenerator) init];
  return _swift_task_switch(sub_10006CFD0, 0, 0);
}

uint64_t sub_10006CFD0()
{
  *(void *)(v0 + 88) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10006D05C, v2, v1);
}

uint64_t sub_10006D05C()
{
  uint64_t v1 = *(void **)(v0 + 80);
  swift_release();
  [v1 notificationOccurred:0];

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10006D0D4()
{
  if (qword_100156018 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000E808(v1, (uint64_t)qword_100164B38);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138412290;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 16) = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v5 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Adding song to playlist failed: %@", v4, 0xCu);
    sub_1000060EC((uint64_t *)&unk_1001570F0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_10006D2D8(uint64_t a1, long long *a2)
{
  uint64_t v3 = a1 + OBJC_IVAR____TtC16MusicRecognition22AddToPlaylistViewModel__state;
  swift_beginAccess();
  sub_10006DB58(a2, v3);
  return swift_endAccess();
}

uint64_t sub_10006D344()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MusicRecognition22AddToPlaylistViewModel_appleMusicBaseURL;
  uint64_t v2 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  sub_1000307C4(v0 + OBJC_IVAR____TtC16MusicRecognition22AddToPlaylistViewModel__state);
  swift_release();
  uint64_t v3 = v0 + OBJC_IVAR____TtC16MusicRecognition22AddToPlaylistViewModel___observationRegistrar;
  uint64_t v4 = type metadata accessor for ObservationRegistrar();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v6 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v5, v6);
}

uint64_t sub_10006D45C()
{
  return type metadata accessor for AddToPlaylistViewModel();
}

uint64_t type metadata accessor for AddToPlaylistViewModel()
{
  uint64_t result = qword_1001594A0;
  if (!qword_1001594A0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10006D4B0()
{
  uint64_t result = type metadata accessor for URL();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for ObservationRegistrar();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

unint64_t destroy for AddToPlaylistViewModel.State(unint64_t *a1)
{
  unint64_t result = *a1;
  if (result >= 0xFFFFFFFF)
  {
    unint64_t result = swift_bridgeObjectRelease();
    if (a1[4])
    {
      return _s16MusicRecognition11AnyPlaylistVwxx_0((uint64_t)(a1 + 1));
    }
  }
  return result;
}

uint64_t initializeWithCopy for AddToPlaylistViewModel.State(uint64_t a1, uint64_t a2)
{
  if (*(void *)a2 < 0xFFFFFFFFuLL)
  {
    long long v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    uint64_t v4 = (_OWORD *)(a2 + 8);
    uint64_t v5 = *(void *)(a2 + 32);
    swift_bridgeObjectRetain();
    if (v5)
    {
      uint64_t v6 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = v5;
      *(void *)(a1 + 40) = v6;
      (**(void (***)(uint64_t, uint64_t, uint64_t))(v5 - 8))(a1 + 8, a2 + 8, v5);
    }
    else
    {
      long long v8 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 8) = *v4;
      *(_OWORD *)(a1 + 24) = v8;
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
    }
  }
  return a1;
}

uint64_t assignWithCopy for AddToPlaylistViewModel.State(uint64_t a1, long long *a2)
{
  unint64_t v4 = *(void *)a1;
  unint64_t v5 = *(void *)a2;
  if (v4 < 0xFFFFFFFF)
  {
    if (v5 >= 0xFFFFFFFF)
    {
      *(void *)a1 = v5;
      uint64_t v6 = a1 + 8;
      long long v7 = (long long *)((char *)a2 + 8);
      uint64_t v9 = *((void *)a2 + 4);
      swift_bridgeObjectRetain();
      if (v9)
      {
        *(void *)(a1 + 32) = v9;
        *(void *)(a1 + 40) = *((void *)a2 + 5);
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v9 - 8))(a1 + 8, (uint64_t)a2 + 8, v9);
        return a1;
      }
LABEL_14:
      long long v12 = *v7;
      long long v13 = v7[1];
      *(void *)(v6 + 32) = *((void *)v7 + 4);
      *(_OWORD *)uint64_t v6 = v12;
      *(_OWORD *)(v6 + 16) = v13;
      return a1;
    }
LABEL_11:
    long long v10 = *a2;
    long long v11 = a2[2];
    *(_OWORD *)(a1 + 16) = a2[1];
    *(_OWORD *)(a1 + 32) = v11;
    *(_OWORD *)a1 = v10;
    return a1;
  }
  if (v5 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    if (*(void *)(a1 + 32)) {
      _s16MusicRecognition11AnyPlaylistVwxx_0(a1 + 8);
    }
    goto LABEL_11;
  }
  *(void *)a1 = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + 8;
  long long v7 = (long long *)((char *)a2 + 8);
  uint64_t v8 = *((void *)a2 + 4);
  if (!*(void *)(a1 + 32))
  {
    if (v8)
    {
      *(void *)(a1 + 32) = v8;
      *(void *)(a1 + 40) = *((void *)a2 + 5);
      (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1 + 8, (uint64_t)a2 + 8);
      return a1;
    }
    goto LABEL_14;
  }
  if (v8)
  {
    sub_100018AC4((uint64_t *)(a1 + 8), (uint64_t *)a2 + 1);
  }
  else
  {
    sub_10002FF00(a1 + 8);
    uint64_t v14 = *((void *)a2 + 5);
    long long v15 = *(long long *)((char *)a2 + 24);
    *(_OWORD *)uint64_t v6 = *v7;
    *(_OWORD *)(a1 + 24) = v15;
    *(void *)(a1 + 40) = v14;
  }
  return a1;
}

__n128 initializeWithTake for AddToPlaylistViewModel.State(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for AddToPlaylistViewModel.State(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 < 0xFFFFFFFFuLL)
  {
LABEL_8:
    long long v4 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v4;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    return a1;
  }
  if (*(void *)a2 < 0xFFFFFFFFuLL)
  {
    swift_bridgeObjectRelease();
    if (*(void *)(a1 + 32)) {
      _s16MusicRecognition11AnyPlaylistVwxx_0(a1 + 8);
    }
    goto LABEL_8;
  }
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 32))
  {
    if (*(void *)(a2 + 32)) {
      _s16MusicRecognition11AnyPlaylistVwxx_0(a1 + 8);
    }
    else {
      sub_10002FF00(a1 + 8);
    }
  }
  long long v5 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = v5;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for AddToPlaylistViewModel.State(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *((unsigned char *)a1 + 48)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 1;
  if (v4 >= 3) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for AddToPlaylistViewModel.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)__n128 result = 0u;
    *(_DWORD *)__n128 result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 48) = 0;
    }
    if (a2) {
      *(void *)__n128 result = a2 + 1;
    }
  }
  return result;
}

uint64_t sub_10006D9DC(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

uint64_t sub_10006D9F4(uint64_t result, int a2)
{
  if (a2 < 0)
  {
    uint64_t v2 = a2 ^ 0x80000000;
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
  }
  else
  {
    if (!a2) {
      return result;
    }
    uint64_t v2 = (a2 - 1);
  }
  *(void *)__n128 result = v2;
  return result;
}

ValueMetadata *type metadata accessor for AddToPlaylistViewModel.State()
{
  return &type metadata for AddToPlaylistViewModel.State;
}

unint64_t sub_10006DA38()
{
  unint64_t result = qword_100157CF0;
  if (!qword_100157CF0)
  {
    type metadata accessor for AddToPlaylistViewModel();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100157CF0);
  }
  return result;
}

uint64_t sub_10006DA90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000060EC(&qword_100157CF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10006DAF8(uint64_t a1)
{
  uint64_t v2 = sub_1000060EC(&qword_100157CF8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10006DB58(long long *a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_10006DB90()
{
  return sub_1000307A8();
}

uint64_t sub_10006DBA8()
{
  v1[4] = v0;
  uint64_t v2 = type metadata accessor for ActivityUIDismissalPolicy();
  v1[5] = v2;
  v1[6] = *(void *)(v2 - 8);
  v1[7] = swift_task_alloc();
  sub_1000060EC(&qword_100159660);
  v1[8] = swift_task_alloc();
  return _swift_task_switch(sub_10006DC98, 0, 0);
}

uint64_t sub_10006DC98()
{
  int64_t v22 = v0;
  if (qword_100156018 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000E808(v1, (uint64_t)qword_100164B38);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Calling end activity", v4, 2u);
    swift_slowDealloc();
  }
  uint64_t v5 = v0[4];

  uint64_t v6 = *(void *)(v5 + 16);
  v0[9] = v6;
  if (v6)
  {
    swift_retain_n();
    long long v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      uint64_t v10 = swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 136315138;
      uint64_t v21 = v10;
      v0[2] = v6;
      swift_retain();
      sub_1000060EC(&qword_100159670);
      uint64_t v11 = String.init<A>(describing:)();
      v0[3] = sub_1000CB67C(v11, v12, &v21);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Ending activity %s", v9, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_release_n();
    }

    uint64_t v15 = v0[8];
    dispatch thunk of Activity.content.getter();
    uint64_t v16 = sub_1000060EC(&qword_100159668);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 0, 1, v16);
    static ActivityUIDismissalPolicy.immediate.getter();
    unint64_t v20 = (uint64_t (*)(uint64_t, uint64_t))((char *)&async function pointer to dispatch thunk of Activity.end(_:dismissalPolicy:)
                                                   + async function pointer to dispatch thunk of Activity.end(_:dismissalPolicy:));
    int64_t v17 = (void *)swift_task_alloc();
    v0[10] = v17;
    *int64_t v17 = v0;
    v17[1] = sub_10006E010;
    uint64_t v18 = v0[7];
    uint64_t v19 = v0[8];
    return v20(v19, v18);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    long long v13 = (uint64_t (*)(void))v0[1];
    return v13();
  }
}

uint64_t sub_10006E010()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 64);
  uint64_t v2 = *(void *)(*(void *)v0 + 56);
  uint64_t v3 = *(void *)(*(void *)v0 + 48);
  uint64_t v4 = *(void *)(*(void *)v0 + 40);
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  sub_1000063D0(v1, &qword_100159660);
  return _swift_task_switch(sub_10006E18C, 0, 0);
}

uint64_t sub_10006E18C()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10006E1FC()
{
  v1[7] = v0;
  uint64_t v2 = type metadata accessor for IntentSystemContext.Source();
  v1[8] = v2;
  v1[9] = *(void *)(v2 - 8);
  v1[10] = swift_task_alloc();
  v1[11] = sub_1000060EC(&qword_100158F08);
  v1[12] = swift_task_alloc();
  sub_1000060EC(&qword_1001570C8);
  v1[13] = swift_task_alloc();
  v1[14] = swift_task_alloc();
  v1[15] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for ActivityPresentationOptions();
  v1[16] = v3;
  v1[17] = *(void *)(v3 - 8);
  v1[18] = swift_task_alloc();
  sub_1000060EC(&qword_100157818);
  v1[19] = swift_task_alloc();
  uint64_t v4 = sub_1000060EC(&qword_100159668);
  v1[20] = v4;
  v1[21] = *(void *)(v4 - 8);
  v1[22] = swift_task_alloc();
  return _swift_task_switch(sub_10006E428, 0, 0);
}

void sub_10006E428()
{
  uint64_t v73 = v0;
  uint64_t v1 = *(void **)(v0[7] + 24);
  if (v1) {
    [v1 invalidate];
  }
  sub_1000060EC(&qword_100159670);
  unint64_t v2 = static Activity.activities.getter();
  if (v2 >> 62) {
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
  }
  else {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v3) {
    goto LABEL_26;
  }
  if (qword_100156018 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_10000E808(v4, (uint64_t)qword_100164B38);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v5, v6))
  {
    long long v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)long long v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Requesting MusicRecognitionActivity", v7, 2u);
    swift_slowDealloc();
  }

  id v8 = [self mainBundle];
  id v9 = [v8 bundleIdentifier];

  if (!v9)
  {
    __break(1u);
    return;
  }
  uint64_t v10 = v0[19];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v11 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  sub_100070460();
  sub_1000704B8();
  sub_100070510();
  ActivityContent.init(state:staleDate:relevanceScore:)();
  int v12 = SBSIsSystemApertureAvailable();
  sub_1000060EC(&qword_1001596A0);
  uint64_t v13 = type metadata accessor for ActivityPresentationOptions.ActivityPresentationDestination();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 72);
  unint64_t v16 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  int64_t v17 = (void (**)(unint64_t, void, uint64_t))(v14 + 104);
  uint64_t v18 = swift_allocObject();
  if (v12)
  {
    *(_OWORD *)(v18 + 16) = xmmword_1001118A0;
    unint64_t v19 = v18 + v16;
    unint64_t v20 = *v17;
    (*v17)(v19, enum case for ActivityPresentationOptions.ActivityPresentationDestination.systemAperture(_:), v13);
    unint64_t v21 = v19 + v15;
  }
  else
  {
    *(_OWORD *)(v18 + 16) = xmmword_100110CD0;
    unint64_t v22 = v18 + v16;
    unint64_t v20 = *v17;
    (*v17)(v22, enum case for ActivityPresentationOptions.ActivityPresentationDestination.banner(_:), v13);
    v20(v22 + v15, enum case for ActivityPresentationOptions.ActivityPresentationDestination.lockscreen(_:), v13);
    unint64_t v21 = v22 + 2 * v15;
  }
  v20(v21, enum case for ActivityPresentationOptions.ActivityPresentationDestination.ambient(_:), v13);
  ActivityPresentationOptions.init(destinations:)();
  ActivityPresentationOptions.shouldSuppressAlertContentOnLockScreen.setter();
  if (qword_100156120 != -1) {
    swift_once();
  }
  uint64_t v23 = v0[14];
  uint64_t v24 = v0[15];
  uint64_t v25 = v0[11];
  uint64_t v26 = v0[12];
  uint64_t v28 = v0[8];
  uint64_t v27 = v0[9];
  uint64_t v29 = qword_100164BD0 + OBJC_IVAR____TtC16MusicRecognition15MusicRecognizer_origin;
  swift_beginAccess();
  sub_100015928(v29, v24);
  (*(void (**)(uint64_t, void, uint64_t))(v27 + 104))(v23, enum case for IntentSystemContext.Source.actionButton(_:), v28);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v27 + 56))(v23, 0, 1, v28);
  uint64_t v30 = v26 + *(int *)(v25 + 48);
  sub_100015928(v24, v26);
  sub_100015928(v23, v30);
  uint64_t v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48);
  if (v31(v26, 1, v28) == 1)
  {
    uint64_t v32 = v0[15];
    uint64_t v33 = v0[8];
    sub_1000063D0(v0[14], &qword_1001570C8);
    sub_1000063D0(v32, &qword_1001570C8);
    if (v31(v30, 1, v33) == 1)
    {
      sub_1000063D0(v0[12], &qword_1001570C8);
      goto LABEL_23;
    }
    goto LABEL_21;
  }
  uint64_t v34 = v0[8];
  sub_100015928(v0[12], v0[13]);
  unsigned int v35 = v31(v30, 1, v34);
  uint64_t v36 = v0[14];
  uint64_t v37 = v0[15];
  uint64_t v38 = v0[13];
  if (v35 == 1)
  {
    uint64_t v39 = v0[8];
    uint64_t v40 = v0[9];
    sub_1000063D0(v0[14], &qword_1001570C8);
    sub_1000063D0(v37, &qword_1001570C8);
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v38, v39);
LABEL_21:
    sub_1000063D0(v0[12], &qword_100158F08);
    goto LABEL_23;
  }
  uint64_t v69 = v0[12];
  uint64_t v41 = v0[9];
  uint64_t v42 = v0[10];
  uint64_t v43 = v0[8];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 32))(v42, v30, v43);
  sub_100070AFC();
  dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v44 = *(void (**)(uint64_t, uint64_t))(v41 + 8);
  v44(v42, v43);
  sub_1000063D0(v36, &qword_1001570C8);
  sub_1000063D0(v37, &qword_1001570C8);
  v44(v38, v43);
  sub_1000063D0(v69, &qword_1001570C8);
LABEL_23:
  ActivityPresentationOptions.isActionButtonInitiated.setter();
  uint64_t v45 = static Activity.request(attributes:content:presentationOptions:platterTarget:contentSourceRequests:isEphemeral:isUnbounded:)();
  uint64_t v46 = v0[7];
  swift_bridgeObjectRelease();
  *(void *)(v46 + 16) = v45;
  swift_release();
  if (*(void *)(v46 + 16))
  {
    swift_retain_n();
    int v47 = Logger.logObject.getter();
    os_log_type_t v48 = static os_log_type_t.debug.getter();
    BOOL v49 = os_log_type_enabled(v47, v48);
    uint64_t v51 = v0[21];
    uint64_t v50 = v0[22];
    uint64_t v52 = v0[20];
    uint64_t v53 = v0[17];
    uint64_t v54 = v0[18];
    uint64_t v71 = v0[16];
    if (v49)
    {
      uint64_t v70 = v0[20];
      uint64_t v55 = (uint8_t *)swift_slowAlloc();
      uint64_t v72 = swift_slowAlloc();
      *(_DWORD *)uint64_t v55 = 136315138;
      uint64_t v56 = Activity.id.getter();
      v0[6] = sub_1000CB67C(v56, v57, &v72);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl((void *)&_mh_execute_header, v47, v48, "Successfully requested activity with id %s", v55, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v54, v71);
      (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v50, v70);
    }
    else
    {

      swift_release_n();
      (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v54, v71);
      (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v50, v52);
    }
  }
  else
  {
    unint64_t v59 = Logger.logObject.getter();
    os_log_type_t v60 = static os_log_type_t.error.getter();
    BOOL v61 = os_log_type_enabled(v59, v60);
    uint64_t v63 = v0[21];
    uint64_t v62 = v0[22];
    uint64_t v64 = v0[20];
    uint64_t v66 = v0[17];
    uint64_t v65 = v0[18];
    uint64_t v67 = v0[16];
    if (v61)
    {
      Swift::Int v68 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)Swift::Int v68 = 0;
      _os_log_impl((void *)&_mh_execute_header, v59, v60, "No activity was returned", v68, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v65, v67);
    (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v62, v64);
  }
LABEL_26:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v58 = (void (*)(void))v0[1];
  v58();
}

uint64_t sub_10006EF64(uint64_t a1, uint64_t a2, char a3)
{
  *(void *)(v4 + 72) = a2;
  *(void *)(v4 + 80) = v3;
  *(unsigned char *)(v4 + 168) = a3;
  *(void *)(v4 + 64) = a1;
  sub_1000060EC(&qword_100159680);
  *(void *)(v4 + 88) = swift_task_alloc();
  sub_1000060EC(&qword_100157818);
  *(void *)(v4 + 96) = swift_task_alloc();
  uint64_t v5 = sub_1000060EC(&qword_100159668);
  *(void *)(v4 + 104) = v5;
  *(void *)(v4 + 112) = *(void *)(v5 - 8);
  *(void *)(v4 + 120) = swift_task_alloc();
  type metadata accessor for MainActor();
  *(void *)(v4 + 128) = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v4 + 136) = v7;
  *(void *)(v4 + 144) = v6;
  return _swift_task_switch(sub_10006F0C4, v7, v6);
}

uint64_t sub_10006F0C4()
{
  if (qword_100156018 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000E808(v1, (uint64_t)qword_100164B38);
  unint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Calling update activity", v4, 2u);
    swift_slowDealloc();
  }
  uint64_t v5 = *(void *)(v0 + 80);

  uint64_t v6 = *(void **)(v5 + 24);
  if (v6) {
    [v6 invalidate];
  }
  if (*(unsigned char *)(v0 + 168)) {
    goto LABEL_8;
  }
  id v8 = [*(id *)(v0 + 64) mediaItems];
  sub_1000265E8();
  unint64_t v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v9 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  sub_100014C0C(*(void **)(v0 + 64), *(void **)(v0 + 72), 0);
  swift_bridgeObjectRelease();
  if (!v10) {
LABEL_8:
  }
    double v7 = 5.0;
  else {
    double v7 = 180.0;
  }
  uint64_t v11 = *(void *)(v0 + 80);
  int v12 = self;
  *(void *)(v0 + 48) = sub_100070664;
  *(void *)(v0 + 56) = v11;
  *(void *)(v0 + 16) = _NSConcreteStackBlock;
  *(void *)(v0 + 24) = 1107296256;
  *(void *)(v0 + 32) = sub_100070080;
  *(void *)(v0 + 40) = &unk_10014B2B0;
  uint64_t v13 = _Block_copy((const void *)(v0 + 16));
  swift_retain();
  swift_release();
  id v14 = [v12 scheduledTimerWithTimeInterval:0 repeats:v13 block:v7];
  _Block_release(v13);
  uint64_t v15 = *(void **)(v5 + 24);
  *(void *)(v5 + 24) = v14;

  if (SHSession.Result.wasCancelled.getter())
  {
    swift_release();
LABEL_22:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v21 = *(uint64_t (**)(void))(v0 + 8);
    return v21();
  }
  if (!*(void *)(*(void *)(v0 + 80) + 16))
  {
    swift_release();
    uint64_t v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v18, v19))
    {
      unint64_t v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v20 = 0;
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "No activity identifier found, unable to assert", v20, 2u);
      swift_slowDealloc();
    }

    goto LABEL_22;
  }
  int v16 = *(unsigned __int8 *)(v0 + 168);
  swift_retain();
  Activity.id.getter();
  swift_release();
  if (!v16)
  {
    unsigned __int8 v17 = 1;
    goto LABEL_26;
  }
  if (v16 == 1)
  {
    unsigned __int8 v17 = 0;
LABEL_26:
    sub_1000706C4(v17);
  }
  if (SBUIIsSystemApertureEnabled())
  {
    uint64_t v23 = *(void *)(v0 + 80);
    swift_allocObject();
    swift_weakInit();
    objc_allocWithZone((Class)type metadata accessor for ProminentPresentationAssertion());
    uint64_t v24 = ProminentPresentationAssertion.init(explanation:activityIdentifier:duration:invalidationHandler:)();
    uint64_t v25 = *(void **)(v23 + 32);
    *(void *)(v23 + 32) = v24;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return _swift_task_switch(sub_10006F564, 0, 0);
}

uint64_t sub_10006F564()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 80) + 16);
  *(void *)(v0 + 152) = v1;
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 88);
    uint64_t v3 = *(void *)(v0 + 96);
    uint64_t v4 = *(void **)(v0 + 64);
    id v14 = *(void **)(v0 + 72);
    char v5 = *(unsigned char *)(v0 + 168);
    uint64_t v6 = type metadata accessor for Date();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v3, 1, 1, v6);
    sub_100070460();
    sub_1000704B8();
    sub_100070510();
    swift_retain();
    ActivityContent.init(state:staleDate:relevanceScore:)();
    sub_100075610(v4, v14, v5, v2);
    uint64_t v7 = type metadata accessor for AlertConfiguration();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v2, 0, 1, v7);
    uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t))((char *)&async function pointer to dispatch thunk of Activity.update(_:alertConfiguration:)
                                                   + async function pointer to dispatch thunk of Activity.update(_:alertConfiguration:));
    id v8 = (void *)swift_task_alloc();
    *(void *)(v0 + 160) = v8;
    *id v8 = v0;
    v8[1] = sub_10006F770;
    uint64_t v9 = *(void *)(v0 + 120);
    uint64_t v10 = *(void *)(v0 + 88);
    return v15(v9, v10);
  }
  else
  {
    uint64_t v12 = *(void *)(v0 + 136);
    uint64_t v13 = *(void *)(v0 + 144);
    return _swift_task_switch(sub_10006F91C, v12, v13);
  }
}

uint64_t sub_10006F770()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 88);
  swift_task_dealloc();
  sub_1000063D0(v1, &qword_100159680);
  return _swift_task_switch(sub_10006F890, 0, 0);
}

uint64_t sub_10006F890()
{
  uint64_t v2 = v0[14];
  uint64_t v1 = v0[15];
  uint64_t v3 = v0[13];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v4 = v0[17];
  uint64_t v5 = v0[18];
  return _swift_task_switch(sub_10006F91C, v4, v5);
}

uint64_t sub_10006F91C()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10006F998()
{
  return 0;
}

uint64_t sub_10006F9A4()
{
  return 0;
}

void sub_10006F9B0(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_10006F9BC(uint64_t a1)
{
  unint64_t v2 = sub_1000705BC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10006F9F8(uint64_t a1)
{
  unint64_t v2 = sub_1000705BC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10006FA34(uint64_t a1)
{
  return _s16MusicRecognition11AnyPlaylistVwxx_0(a1);
}

uint64_t sub_10006FA5C(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_10006FBF0(a1, a2, a3, &qword_100159638, (void (*)(void))sub_1000705BC);
}

Swift::Int sub_10006FA98()
{
  return Hasher._finalize()();
}

Swift::Int sub_10006FAD0()
{
  return Hasher._finalize()();
}

uint64_t sub_10006FB04()
{
  return 1;
}

uint64_t sub_10006FB0C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_10006FB3C(uint64_t a1)
{
  unint64_t v2 = sub_100070610();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10006FB78(uint64_t a1)
{
  unint64_t v2 = sub_100070610();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10006FBB4(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_10006FBF0(a1, a2, a3, &qword_100159648, (void (*)(void))sub_100070610);
}

uint64_t sub_10006FBF0(void *a1, uint64_t a2, uint64_t a3, uint64_t *a4, void (*a5)(void))
{
  uint64_t v7 = sub_1000060EC(a4);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100010740(a1, a1[3]);
  a5();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_10006FD10()
{
  uint64_t v0 = sub_1000060EC(&qword_100157038);
  __chkstk_darwin(v0 - 8);
  unint64_t v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  uint64_t v4 = swift_allocObject();
  swift_weakInit();
  uint64_t v5 = (void *)swift_allocObject();
  v5[2] = 0;
  v5[3] = 0;
  v5[4] = v4;
  sub_1000DC528((uint64_t)v2, (uint64_t)&unk_100159690, (uint64_t)v5);
  return swift_release();
}

uint64_t sub_10006FE28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 40) = a1;
  *(void *)(v4 + 48) = a4;
  return _swift_task_switch(sub_10006FE48, 0, 0);
}

uint64_t sub_10006FE48()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  *(void *)(v0 + 56) = Strong;
  if (Strong)
  {
    unint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 64) = v2;
    void *v2 = v0;
    v2[1] = sub_10006FF40;
    return sub_10006DBA8();
  }
  else
  {
    **(unsigned char **)(v0 + 40) = 1;
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
}

uint64_t sub_10006FF40()
{
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_100070058, 0, 0);
}

uint64_t sub_100070058()
{
  **(unsigned char **)(v0 + 40) = *(void *)(v0 + 56) == 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100070080(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

void sub_1000700E8(void *a1)
{
  if (qword_100156018 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000E808(v2, (uint64_t)qword_100164B38);
  id v3 = a1;
  swift_errorRetain();
  id v4 = v3;
  swift_errorRetain();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 138412546;
    id v9 = v4;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v8 = v4;

    *(_WORD *)(v7 + 12) = 2112;
    swift_errorRetain();
    uint64_t v12 = _swift_stdlib_bridgeErrorToNSError();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v8[1] = v12;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Presented prominent assertion %@ error %@", (uint8_t *)v7, 0x16u);
    sub_1000060EC((uint64_t *)&unk_1001570F0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }

  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v11 = *(void **)(Strong + 32);
    *(void *)(Strong + 32) = 0;
    swift_release();
  }
}

uint64_t sub_100070330()
{
  swift_release();

  return _swift_deallocClassInstance(v0, 40, 7);
}

uint64_t type metadata accessor for MusicRecognitionActivity()
{
  return self;
}

ValueMetadata *type metadata accessor for MusicRecognitionActivityAttributes()
{
  return &type metadata for MusicRecognitionActivityAttributes;
}

unint64_t sub_1000703B0()
{
  unint64_t result = qword_100159608;
  if (!qword_100159608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100159608);
  }
  return result;
}

unint64_t sub_100070408()
{
  unint64_t result = qword_100159610;
  if (!qword_100159610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100159610);
  }
  return result;
}

unint64_t sub_100070460()
{
  unint64_t result = qword_100159618;
  if (!qword_100159618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100159618);
  }
  return result;
}

unint64_t sub_1000704B8()
{
  unint64_t result = qword_100159620;
  if (!qword_100159620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100159620);
  }
  return result;
}

unint64_t sub_100070510()
{
  unint64_t result = qword_100159628;
  if (!qword_100159628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100159628);
  }
  return result;
}

unint64_t sub_100070568()
{
  unint64_t result = qword_100159630;
  if (!qword_100159630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100159630);
  }
  return result;
}

unint64_t sub_1000705BC()
{
  unint64_t result = qword_100159640;
  if (!qword_100159640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100159640);
  }
  return result;
}

unint64_t sub_100070610()
{
  unint64_t result = qword_100159650;
  if (!qword_100159650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_100159650);
  }
  return result;
}

uint64_t sub_100070664()
{
  return sub_10006FD10();
}

uint64_t sub_10007066C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10007067C()
{
  return swift_release();
}

uint64_t sub_100070684()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1000706BC(void *a1)
{
}

uint64_t sub_1000706C4(unsigned __int8 a1)
{
  uint64_t v2 = type metadata accessor for IntentSystemContext.Source();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000060EC(&qword_1001570C8);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100156120 != -1) {
    swift_once();
  }
  uint64_t v9 = qword_100164BD0 + OBJC_IVAR____TtC16MusicRecognition15MusicRecognizer_origin;
  swift_beginAccess();
  sub_100015928(v9, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1) {
    return sub_1000063D0((uint64_t)v8, &qword_1001570C8);
  }
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v8, v2);
  int v11 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v11 == enum case for IntentSystemContext.Source.app(_:)
    || v11 == enum case for IntentSystemContext.Source.CLI(_:))
  {
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  }
  if (v11 == enum case for IntentSystemContext.Source.siri(_:))
  {
LABEL_12:
    __int16 v13 = 2;
LABEL_15:
    (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
    return sub_1000D7174(a1 & 1u | (v13 << 8), 0xD000000000000028, 0x8000000100119460);
  }
  if (v11 == enum case for IntentSystemContext.Source.shortcuts(_:))
  {
    __int16 v13 = 3;
    goto LABEL_15;
  }
  if (v11 == enum case for IntentSystemContext.Source.testing(_:)) {
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  }
  if (v11 == enum case for IntentSystemContext.Source.actionButton(_:))
  {
    __int16 v13 = 1;
    goto LABEL_15;
  }
  if (v11 == enum case for IntentSystemContext.Source.spotlight(_:))
  {
    __int16 v13 = 6;
    goto LABEL_15;
  }
  if (v11 == enum case for IntentSystemContext.Source.controlCenter(_:))
  {
    __int16 v13 = 4;
    goto LABEL_15;
  }
  if (v11 == enum case for IntentSystemContext.Source.widget(_:)) {
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  }
  if (v11 == enum case for IntentSystemContext.Source.assistant(_:)) {
    goto LABEL_12;
  }
  id v14 = *(void (**)(char *, uint64_t))(v3 + 8);
  v14(v5, v2);
  return ((uint64_t (*)(char *, uint64_t))v14)(v8, v2);
}

uint64_t sub_100070A0C()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100070A4C(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100014D10;
  v5[5] = a1;
  v5[6] = v4;
  return _swift_task_switch(sub_10006FE48, 0, 0);
}

unint64_t sub_100070AFC()
{
  unint64_t result = qword_100158F10;
  if (!qword_100158F10)
  {
    type metadata accessor for IntentSystemContext.Source();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100158F10);
  }
  return result;
}

ValueMetadata *type metadata accessor for MusicRecognitionActivityAttributes.CodingKeys()
{
  return &type metadata for MusicRecognitionActivityAttributes.CodingKeys;
}

ValueMetadata *type metadata accessor for MusicRecognitionActivityAttributes.ContentState.CodingKeys()
{
  return &type metadata for MusicRecognitionActivityAttributes.ContentState.CodingKeys;
}

ValueMetadata *type metadata accessor for MusicRecognitionActivityAttributes.ContentState()
{
  return &type metadata for MusicRecognitionActivityAttributes.ContentState;
}

unint64_t sub_100070B88()
{
  unint64_t result = qword_1001596A8;
  if (!qword_1001596A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001596A8);
  }
  return result;
}

unint64_t sub_100070BE0()
{
  unint64_t result = qword_1001596B0;
  if (!qword_1001596B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001596B0);
  }
  return result;
}

unint64_t sub_100070C38()
{
  unint64_t result = qword_1001596B8;
  if (!qword_1001596B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001596B8);
  }
  return result;
}

unint64_t sub_100070C90()
{
  unint64_t result = qword_1001596C0;
  if (!qword_1001596C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001596C0);
  }
  return result;
}

uint64_t *sub_100070CE8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = sub_1000060EC(&qword_100159718);
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = v15;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v6 = v4;
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = (int *)type metadata accessor for ArtistProfileViewModel();
    uint64_t v9 = v8[5];
    __dst = (char *)a1 + v9;
    uint64_t v10 = (char *)a2 + v9;
    uint64_t v11 = type metadata accessor for URL();
    uint64_t v12 = *(void *)(v11 - 8);
    __int16 v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = sub_1000060EC((uint64_t *)&unk_100158FC0);
      memcpy(__dst, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(__dst, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
    }
    uint64_t v16 = v8[6];
    unsigned __int8 v17 = (uint64_t *)((char *)a1 + v16);
    uint64_t v18 = (uint64_t *)((char *)a2 + v16);
    uint64_t v19 = v18[1];
    *unsigned __int8 v17 = *v18;
    v17[1] = v19;
    uint64_t v20 = v8[7];
    unint64_t v21 = (uint64_t *)((char *)a1 + v20);
    unint64_t v22 = (uint64_t *)((char *)a2 + v20);
    uint64_t v23 = v22[1];
    *unint64_t v21 = *v22;
    v21[1] = v23;
    *(uint64_t *)((char *)a1 + v8[8]) = *(uint64_t *)((char *)a2 + v8[8]);
    *(uint64_t *)((char *)a1 + *(int *)(v6 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(v6 + 28));
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  swift_retain();
  return a1;
}

uint64_t sub_100070EEC(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = a1 + *(int *)(type metadata accessor for ArtistProfileViewModel() + 20);
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v4 = *(void *)(v3 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3)) {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1000060EC(&qword_100159718);

  return swift_release();
}

void *sub_100070FFC(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  int v5 = (int *)type metadata accessor for ArtistProfileViewModel();
  uint64_t v6 = v5[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  if (v11(v8, 1, v9))
  {
    uint64_t v12 = sub_1000060EC((uint64_t *)&unk_100158FC0);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v13 = v5[6];
  uint64_t v14 = (void *)((char *)a1 + v13);
  uint64_t v15 = (void *)((char *)a2 + v13);
  uint64_t v16 = v15[1];
  void *v14 = *v15;
  v14[1] = v16;
  uint64_t v17 = v5[7];
  uint64_t v18 = (void *)((char *)a1 + v17);
  uint64_t v19 = (void *)((char *)a2 + v17);
  uint64_t v20 = v19[1];
  *uint64_t v18 = *v19;
  v18[1] = v20;
  *(void *)((char *)a1 + v5[8]) = *(void *)((char *)a2 + v5[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v21 = sub_1000060EC(&qword_100159718);
  *(void *)((char *)a1 + *(int *)(v21 + 28)) = *(void *)((char *)a2 + *(int *)(v21 + 28));
  swift_retain();
  return a1;
}

void *sub_10007119C(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (int *)type metadata accessor for ArtistProfileViewModel();
  uint64_t v5 = v4[5];
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
  int v11 = v10(v6, 1, v8);
  int v12 = v10(v7, 1, v8);
  if (!v11)
  {
    if (!v12)
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 24))(v6, v7, v8);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    uint64_t v13 = sub_1000060EC((uint64_t *)&unk_100158FC0);
    memcpy(v6, v7, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v6, v7, v8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
LABEL_7:
  uint64_t v14 = v4[6];
  uint64_t v15 = (void *)((char *)a1 + v14);
  uint64_t v16 = (void *)((char *)a2 + v14);
  *uint64_t v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v17 = v4[7];
  uint64_t v18 = (void *)((char *)a1 + v17);
  uint64_t v19 = (void *)((char *)a2 + v17);
  *uint64_t v18 = *v19;
  v18[1] = v19[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v4[8]) = *(void *)((char *)a2 + v4[8]);
  swift_retain();
  swift_release();
  uint64_t v20 = sub_1000060EC(&qword_100159718);
  *(void *)((char *)a1 + *(int *)(v20 + 28)) = *(void *)((char *)a2 + *(int *)(v20 + 28));
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_1000713E0(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  uint64_t v4 = (int *)type metadata accessor for ArtistProfileViewModel();
  uint64_t v5 = v4[5];
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
  {
    uint64_t v10 = sub_1000060EC((uint64_t *)&unk_100158FC0);
    memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v6, v7, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  *(_OWORD *)((char *)a1 + v4[6]) = *(_OWORD *)((char *)a2 + v4[6]);
  *(_OWORD *)((char *)a1 + v4[7]) = *(_OWORD *)((char *)a2 + v4[7]);
  *(void *)((char *)a1 + v4[8]) = *(void *)((char *)a2 + v4[8]);
  uint64_t v11 = sub_1000060EC(&qword_100159718);
  *(void *)((char *)a1 + *(int *)(v11 + 28)) = *(void *)((char *)a2 + *(int *)(v11 + 28));
  return a1;
}

void *sub_100071548(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = (int *)type metadata accessor for ArtistProfileViewModel();
  uint64_t v6 = v5[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = sub_1000060EC((uint64_t *)&unk_100158FC0);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  uint64_t v15 = v5[6];
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  uint64_t v19 = *v17;
  uint64_t v18 = v17[1];
  void *v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease();
  uint64_t v20 = v5[7];
  uint64_t v21 = (void *)((char *)a1 + v20);
  unint64_t v22 = (void *)((char *)a2 + v20);
  uint64_t v24 = *v22;
  uint64_t v23 = v22[1];
  *uint64_t v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v5[8]) = *(void *)((char *)a2 + v5[8]);
  swift_release();
  uint64_t v25 = sub_1000060EC(&qword_100159718);
  *(void *)((char *)a1 + *(int *)(v25 + 28)) = *(void *)((char *)a2 + *(int *)(v25 + 28));
  swift_release();
  return a1;
}

uint64_t sub_10007174C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100071760);
}

uint64_t sub_100071760(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000060EC(&qword_100159718);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_1000717D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000717E4);
}

uint64_t sub_1000717E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000060EC(&qword_100159718);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t _s22ArtistProfileImageViewVMa()
{
  uint64_t result = qword_100159778;
  if (!qword_100159778) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1000718A4()
{
  sub_100071930();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_100071930()
{
  if (!qword_100159788)
  {
    type metadata accessor for ArtistProfileViewModel();
    unint64_t v0 = type metadata accessor for State();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100159788);
    }
  }
}

uint64_t sub_100071988()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000719A4()
{
  id v0 = [self labelColor];
  id v1 = [v0 colorWithAlphaComponent:0.15];

  uint64_t v2 = Color.init(uiColor:)();
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
  swift_retain();
  uint64_t v3 = static Alignment.center.getter();
  *(double *)&qword_1001596C8 = v6 * 0.5;
  unk_1001596D0 = *(void *)&v6;
  qword_1001596D8 = v7;
  qword_1001596E0 = v8;
  qword_1001596E8 = v9;
  qword_1001596F0 = v10;
  qword_1001596F8 = v2;
  word_100159700 = 256;
  qword_100159708 = v3;
  unk_100159710 = v4;

  return swift_release();
}

uint64_t sub_100071AB8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for ArtistProfileViewModel();
  uint64_t v3 = v2 - 8;
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000060EC(&qword_100159718);
  State.wrappedValue.getter();
  uint64_t v27 = *(void *)&v5[*(int *)(v3 + 40)];
  swift_retain();
  sub_100071C9C((uint64_t)v5);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  char v6 = v29;
  uint64_t v25 = v30;
  uint64_t v26 = v28;
  char v7 = v31;
  uint64_t v23 = v33;
  uint64_t v24 = v32;
  if (qword_100156150 != -1) {
    swift_once();
  }
  uint64_t v8 = qword_1001596C8;
  uint64_t v9 = unk_1001596D0;
  uint64_t v10 = qword_1001596E0;
  uint64_t v11 = qword_1001596E8;
  uint64_t v12 = qword_1001596F0;
  uint64_t v13 = qword_1001596F8;
  char v14 = word_100159700;
  char v15 = HIBYTE(word_100159700);
  uint64_t v17 = qword_100159708;
  uint64_t v16 = unk_100159710;
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v18 = qword_1001596D8;
  uint64_t result = static Alignment.center.getter();
  uint64_t v20 = v26;
  *(void *)a1 = v27;
  *(void *)(a1 + 8) = v20;
  *(unsigned char *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v25;
  *(unsigned char *)(a1 + 32) = v7;
  uint64_t v21 = v23;
  *(void *)(a1 + 40) = v24;
  *(void *)(a1 + 48) = v21;
  *(_WORD *)(a1 + 56) = 256;
  *(void *)(a1 + 64) = v8;
  *(void *)(a1 + 72) = v9;
  *(void *)(a1 + 80) = v18;
  *(void *)(a1 + 88) = v10;
  *(void *)(a1 + 96) = v11;
  *(void *)(a1 + 104) = v12;
  *(void *)(a1 + 112) = v13;
  *(unsigned char *)(a1 + 120) = v14;
  *(unsigned char *)(a1 + 121) = v15;
  *(void *)(a1 + 128) = v17;
  *(void *)(a1 + 136) = v16;
  *(void *)(a1 + 144) = result;
  *(void *)(a1 + 152) = v22;
  return result;
}

uint64_t sub_100071C9C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ArtistProfileViewModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_100071CFC()
{
  unint64_t result = qword_1001597B8;
  if (!qword_1001597B8)
  {
    sub_100006224(&qword_1001597C0);
    sub_100071D9C();
    sub_100006480(&qword_1001597E8, &qword_1001597F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001597B8);
  }
  return result;
}

unint64_t sub_100071D9C()
{
  unint64_t result = qword_1001597C8;
  if (!qword_1001597C8)
  {
    sub_100006224(&qword_1001597D0);
    sub_100071E3C();
    sub_100006480(&qword_100158BE0, &qword_100158BE8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001597C8);
  }
  return result;
}

unint64_t sub_100071E3C()
{
  unint64_t result = qword_1001597D8;
  if (!qword_1001597D8)
  {
    sub_100006224(&qword_1001597E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001597D8);
  }
  return result;
}

unint64_t *initializeBufferWithCopyOfBuffer for CachedAsyncImagePhase(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  sub_100071EE4(*a2);
  *a1 = v3;
  return a1;
}

unint64_t sub_100071EE4(unint64_t result)
{
  if (result >> 62 == 1) {
    return swift_errorRetain();
  }
  if (!(result >> 62)) {
    return swift_retain();
  }
  return result;
}

unint64_t destroy for CachedAsyncImagePhase(unint64_t *a1)
{
  return sub_100071F0C(*a1);
}

unint64_t sub_100071F0C(unint64_t result)
{
  if (result >> 62 == 1) {
    return swift_errorRelease();
  }
  if (!(result >> 62)) {
    return swift_release();
  }
  return result;
}

unint64_t *assignWithCopy for CachedAsyncImagePhase(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  sub_100071EE4(*a2);
  unint64_t v4 = *a1;
  *a1 = v3;
  sub_100071F0C(v4);
  return a1;
}

void *initializeWithTake for CachedAsyncImagePhase(void *result, void *a2)
{
  *unint64_t result = *a2;
  return result;
}

unint64_t *assignWithTake for CachedAsyncImagePhase(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a1;
  *a1 = *a2;
  sub_100071F0C(v3);
  return a1;
}

uint64_t getEnumTagSinglePayload for CachedAsyncImagePhase(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7E && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 126);
  }
  unsigned int v3 = (((*(void *)a1 >> 57) >> 5) | (4 * ((*(void *)a1 >> 57) & 0x18 | *(void *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7D) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for CachedAsyncImagePhase(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7D)
  {
    *(void *)unint64_t result = a2 - 126;
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 2) & 0x1F | (32 * (-a2 & 0x7F));
      *(void *)unint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_100072054(void *a1)
{
  uint64_t v1 = *a1 >> 62;
  if (v1 <= 1) {
    return v1;
  }
  else {
    return (*a1 >> 3) + 2;
  }
}

void *sub_100072070(void *result)
{
  *result &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

unint64_t *sub_100072080(unint64_t *result, uint64_t a2)
{
  if (a2 < 2)
  {
    uint64_t v2 = *result & 0xFFFFFFFFFFFFFF8;
    unint64_t v3 = a2 << 62;
  }
  else
  {
    uint64_t v2 = 8 * (a2 - 2);
    unint64_t v3 = 0x8000000000000000;
  }
  *unint64_t result = v2 | v3;
  return result;
}

ValueMetadata *type metadata accessor for CachedAsyncImagePhase()
{
  return &type metadata for CachedAsyncImagePhase;
}

void sub_1000720BC()
{
  sub_100072C5C();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unint64_t sub_100072178(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    unint64_t v15 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v15 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    unint64_t v7 = *(void *)a2;
    sub_100071EE4(*(void *)a2);
    *(void *)a1 = v7;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    uint64_t v8 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = v8;
    uint64_t v9 = *(int *)(a3 + 44);
    __dst = (void *)(a1 + v9);
    uint64_t v10 = (const void *)(a2 + v9);
    uint64_t v11 = type metadata accessor for URLRequest();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
    swift_retain();
    swift_retain();
    swift_retain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = sub_1000060EC(qword_1001597F8);
      memcpy(__dst, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v12 + 16))(__dst, v10, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
    }
    uint64_t v16 = *(int *)(a3 + 48);
    uint64_t v17 = *(void **)(a2 + v16);
    *(void *)(a1 + v16) = v17;
    id v18 = v17;
  }
  return a1;
}

void sub_10007234C(unint64_t *a1, uint64_t a2)
{
  sub_100071F0C(*a1);
  swift_release();
  swift_release();
  swift_release();
  unint64_t v4 = (char *)a1 + *(int *)(a2 + 44);
  uint64_t v5 = type metadata accessor for URLRequest();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  }
  unint64_t v7 = *(void **)((char *)a1 + *(int *)(a2 + 48));
}

uint64_t sub_100072434(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = *(void *)a2;
  sub_100071EE4(*(void *)a2);
  *(void *)a1 = v6;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  uint64_t v19 = a3;
  uint64_t v8 = *(int *)(a3 + 44);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (const void *)(a2 + v8);
  uint64_t v11 = type metadata accessor for URLRequest();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
  swift_retain();
  swift_retain();
  swift_retain();
  if (v13(v10, 1, v11))
  {
    uint64_t v14 = sub_1000060EC(qword_1001597F8);
    memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 16))(v9, v10, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v15 = *(int *)(v19 + 48);
  uint64_t v16 = *(void **)(a2 + v15);
  *(void *)(a1 + v15) = v16;
  id v17 = v16;
  return a1;
}

unint64_t *sub_1000725B8(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  unint64_t v6 = *a2;
  sub_100071EE4(*a2);
  unint64_t v7 = *a1;
  *a1 = v6;
  sub_100071F0C(v7);
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  unint64_t v8 = a2[3];
  a1[2] = a2[2];
  a1[3] = v8;
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  uint64_t v9 = *(int *)(a3 + 44);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = type metadata accessor for URLRequest();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    uint64_t v17 = sub_1000060EC(qword_1001597F8);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_7:
  uint64_t v18 = *(int *)(a3 + 48);
  uint64_t v19 = *(void **)((char *)a2 + v18);
  uint64_t v20 = *(void **)((char *)a1 + v18);
  *(unint64_t *)((char *)a1 + v18) = (unint64_t)v19;
  id v21 = v19;

  return a1;
}

uint64_t sub_1000727B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v7 = *(int *)(a3 + 44);
  unint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for URLRequest();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = sub_1000060EC(qword_1001597F8);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  *(void *)(a1 + *(int *)(a3 + 48)) = *(void *)(a2 + *(int *)(a3 + 48));
  return a1;
}

uint64_t sub_1000728E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = *(void *)a1;
  *(void *)a1 = *(void *)a2;
  sub_100071F0C(v6);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_release();
  uint64_t v7 = *(int *)(a3 + 44);
  unint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for URLRequest();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = sub_1000060EC(qword_1001597F8);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  uint64_t v16 = *(int *)(a3 + 48);
  uint64_t v17 = *(void **)(a1 + v16);
  *(void *)(a1 + v16) = *(void *)(a2 + v16);

  return a1;
}

uint64_t sub_100072ABC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100072AD0);
}

uint64_t sub_100072AD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1000060EC(qword_1001597F8);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 44);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_100072B84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100072B98);
}

uint64_t sub_100072B98(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 16) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1000060EC(qword_1001597F8);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 44);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for CachedAsyncImage()
{
  return sub_100020608();
}

void sub_100072C5C()
{
  if (!qword_100159880)
  {
    type metadata accessor for URLRequest();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100159880);
    }
  }
}

uint64_t sub_100072CB4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100072CF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v3 = v2;
  uint64_t v78 = a2;
  uint64_t v5 = sub_1000060EC(qword_1001597F8);
  __chkstk_darwin(v5 - 8);
  uint64_t v67 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = sub_1000060EC((uint64_t *)&unk_100158FC0);
  __chkstk_darwin(v77);
  uint64_t v81 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = type metadata accessor for TaskPriority();
  uint64_t v82 = *(void *)(v80 - 8);
  uint64_t v8 = __chkstk_darwin(v80);
  char v79 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = a1;
  uint64_t v10 = *(void *)(a1 - 8);
  uint64_t v72 = *(char **)(v10 + 64);
  uint64_t v11 = __chkstk_darwin(v8);
  int v13 = (char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v66 = *(void *)(v14 - 8);
  __chkstk_darwin(v11);
  uint64_t v16 = (char *)&v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for _TaskModifier();
  uint64_t v17 = type metadata accessor for ModifiedContent();
  uint64_t v73 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v57 - v18;
  sub_100006224(&qword_100159888);
  uint64_t v74 = v17;
  uint64_t v20 = type metadata accessor for ModifiedContent();
  uint64_t v75 = *(void *)(v20 - 8);
  uint64_t v76 = v20;
  uint64_t v21 = __chkstk_darwin(v20);
  uint64_t v70 = (char *)&v57 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v71 = (char *)&v57 - v23;
  uint64_t v24 = (void (*)(unint64_t))*((void *)v2 + 2);
  long long v25 = *v2;
  uint64_t v58 = v2;
  long long v87 = v25;
  sub_1000060EC(&qword_100159890);
  State.wrappedValue.getter();
  unint64_t v26 = v88;
  v24(v88);
  sub_100071F0C(v26);
  uint64_t v27 = v59;
  uint64_t v64 = *(void (**)(char *, long long *, uint64_t))(v10 + 16);
  v64(v13, v3, v59);
  uint64_t v28 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v29 = (v28 + 32) & ~v28;
  uint64_t v62 = &v72[v29];
  uint64_t v61 = v28 | 7;
  uint64_t v30 = swift_allocObject();
  uint64_t v31 = *(void *)(v27 + 24);
  *(void *)(v30 + 16) = v14;
  *(void *)(v30 + 24) = v31;
  uint64_t v63 = v29;
  uint64_t v32 = *(void (**)(uint64_t, char *, uint64_t))(v10 + 32);
  Swift::Int v68 = v13;
  uint64_t v69 = v10 + 32;
  os_log_type_t v60 = v32;
  v32(v30 + v29, v13, v27);
  uint64_t v33 = v14;
  uint64_t v34 = v27;
  unsigned int v35 = v79;
  static TaskPriority.userInitiated.getter();
  uint64_t v72 = v19;
  uint64_t v36 = (uint64_t)v67;
  View.task(priority:_:)();
  swift_release();
  uint64_t v37 = *(void (**)(char *, uint64_t))(v82 + 8);
  uint64_t v38 = v58;
  v82 += 8;
  uint64_t v65 = v37;
  v37(v35, v80);
  (*(void (**)(char *, uint64_t))(v66 + 8))(v16, v33);
  sub_1000742D8((uint64_t)v38 + *(int *)(v27 + 44), v36);
  uint64_t v39 = type metadata accessor for URLRequest();
  uint64_t v40 = *(void *)(v39 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(v36, 1, v39) == 1)
  {
    sub_1000063D0(v36, qword_1001597F8);
    uint64_t v41 = type metadata accessor for URL();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v81, 1, 1, v41);
  }
  else
  {
    URLRequest.url.getter();
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v36, v39);
  }
  uint64_t v42 = v68;
  v64(v68, v38, v34);
  uint64_t v43 = swift_allocObject();
  *(void *)(v43 + 16) = v33;
  *(void *)(v43 + 24) = v31;
  v60(v43 + v63, v42, v34);
  uint64_t v44 = sub_10007463C(&qword_100156840, (void (*)(uint64_t))&type metadata accessor for _TaskModifier);
  uint64_t v85 = v31;
  uint64_t v86 = v44;
  uint64_t v45 = v74;
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_100074598();
  int v47 = v79;
  static TaskPriority.userInitiated.getter();
  os_log_type_t v48 = v70;
  uint64_t v49 = (uint64_t)v81;
  uint64_t v50 = v72;
  View.task<A>(id:priority:_:)();
  swift_release();
  v65(v47, v80);
  sub_1000063D0(v49, (uint64_t *)&unk_100158FC0);
  (*(void (**)(char *, uint64_t))(v73 + 8))(v50, v45);
  unint64_t v51 = sub_100074684();
  uint64_t v83 = WitnessTable;
  unint64_t v84 = v51;
  uint64_t v52 = v76;
  uint64_t v53 = swift_getWitnessTable();
  uint64_t v54 = v71;
  sub_1000BA728(v48, v52, v53);
  uint64_t v55 = *(void (**)(char *, uint64_t))(v75 + 8);
  v55(v48, v52);
  sub_1000BA728(v54, v52, v53);
  return ((uint64_t (*)(char *, uint64_t))v55)(v54, v52);
}

uint64_t sub_100073514(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[9] = a2;
  v3[10] = a3;
  v3[8] = a1;
  sub_1000060EC(qword_1001597F8);
  v3[11] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for URLRequest();
  v3[12] = v4;
  v3[13] = *(void *)(v4 - 8);
  v3[14] = swift_task_alloc();
  type metadata accessor for MainActor();
  v3[15] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10007363C, v6, v5);
}

uint64_t sub_10007363C()
{
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t v2 = *(void *)(v0 + 104);
  uint64_t v3 = *(void *)(v0 + 88);
  uint64_t v4 = *(void *)(v0 + 64);
  swift_release();
  uint64_t v5 = type metadata accessor for CachedAsyncImage();
  sub_1000742D8(v4 + *(int *)(v5 + 44), v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    uint64_t v6 = *(long long **)(v0 + 64);
    sub_1000063D0(*(void *)(v0 + 88), qword_1001597F8);
    long long v7 = *v6;
    *(void *)(v0 + 48) = 0x8000000000000008;
    *(_OWORD *)(v0 + 16) = v7;
    sub_1000060EC(&qword_100159890);
    State.wrappedValue.setter();
  }
  else
  {
    uint64_t v8 = *(void *)(v0 + 112);
    (*(void (**)(uint64_t, void, void))(*(void *)(v0 + 104) + 32))(v8, *(void *)(v0 + 88), *(void *)(v0 + 96));
    id v9 = sub_1000737E0(v8, v5);
    uint64_t v11 = *(void *)(v0 + 104);
    uint64_t v10 = *(void *)(v0 + 112);
    uint64_t v12 = *(void *)(v0 + 96);
    if (v9)
    {
      *(_OWORD *)(v0 + 32) = *(_OWORD *)*(void *)(v0 + 64);
      *(void *)(v0 + 56) = v9;
      sub_1000060EC(&qword_100159890);
      State.wrappedValue.setter();
    }
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  int v13 = *(uint64_t (**)(void))(v0 + 8);
  return v13();
}

id sub_1000737E0(uint64_t a1, uint64_t a2)
{
  id v3 = [*(id *)(v2 + *(int *)(a2 + 48)) configuration];
  id v4 = [v3 URLCache];

  if (!v4) {
    return 0;
  }
  Class isa = URLRequest._bridgeToObjectiveC()().super.isa;
  id v6 = [v4 cachedResponseForRequest:isa];

  if (!v6) {
    return 0;
  }
  id v7 = [v6 data];
  uint64_t v8 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v10 = v9;

  id v11 = objc_allocWithZone((Class)UIImage);
  sub_1000746E0(v8, v10);
  Class v12 = Data._bridgeToObjectiveC()().super.isa;
  id v13 = [v11 initWithData:v12];
  sub_100060B4C(v8, v10);

  if (v13) {
    id v13 = (id)Image.init(uiImage:)();
  }
  sub_100060B4C(v8, v10);

  return v13;
}

uint64_t sub_100073934(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[12] = a2;
  v3[13] = a3;
  v3[11] = a1;
  sub_1000060EC(qword_1001597F8);
  v3[14] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for URLRequest();
  v3[15] = v4;
  v3[16] = *(void *)(v4 - 8);
  v3[17] = swift_task_alloc();
  type metadata accessor for MainActor();
  v3[18] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v3[19] = v6;
  v3[20] = v5;
  return _swift_task_switch(sub_100073A5C, v6, v5);
}

uint64_t sub_100073A5C()
{
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 128);
  uint64_t v3 = *(void *)(v0 + 112);
  uint64_t v4 = *(void *)(v0 + 88);
  uint64_t v5 = type metadata accessor for CachedAsyncImage();
  sub_1000742D8(v4 + *(int *)(v5 + 44), v3);
  int v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1);
  uint64_t v7 = *(void *)(v0 + 112);
  uint64_t v8 = *(_OWORD **)(v0 + 88);
  if (v6 == 1)
  {
    swift_release();
    sub_1000063D0(v7, qword_1001597F8);
    *(_OWORD *)(v0 + 16) = *v8;
    *(void *)(v0 + 64) = 0x8000000000000008;
    sub_1000060EC(&qword_100159890);
    State.wrappedValue.setter();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
    return v9();
  }
  else
  {
    (*(void (**)(void, void, void))(*(void *)(v0 + 128) + 32))(*(void *)(v0 + 136), *(void *)(v0 + 112), *(void *)(v0 + 120));
    *(_DWORD *)(v0 + 208) = *(_DWORD *)(v5 + 48);
    id v11 = (void *)swift_task_alloc();
    *(void *)(v0 + 168) = v11;
    *id v11 = v0;
    v11[1] = sub_100073C1C;
    uint64_t v12 = *(void *)(v0 + 136);
    return NSURLSession.data(for:delegate:)(v12, 0);
  }
}

uint64_t sub_100073C1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (void *)*v4;
  int v6 = (void *)*v4;
  v6[22] = a1;
  v6[23] = a2;
  v6[24] = a3;
  v6[25] = v3;
  swift_task_dealloc();
  uint64_t v7 = v5[20];
  uint64_t v8 = v5[19];
  if (v3) {
    unint64_t v9 = sub_1000740B4;
  }
  else {
    unint64_t v9 = sub_100073D64;
  }
  return _swift_task_switch(v9, v8, v7);
}

uint64_t sub_100073D64()
{
  uint64_t v2 = *(void *)(v0 + 176);
  unint64_t v1 = *(void *)(v0 + 184);
  swift_release();
  id v3 = objc_allocWithZone((Class)UIImage);
  sub_1000746E0(v2, v1);
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  id v5 = [v3 initWithData:isa];
  sub_100060B4C(v2, v1);

  if (v5)
  {
    uint64_t v6 = *(int *)(v0 + 208);
    uint64_t v7 = *(void *)(v0 + 88);
    long long v33 = *(_OWORD *)(v0 + 96);
    uint64_t v8 = Image.init(uiImage:)();
    Transaction.animation.getter();
    uint64_t v9 = swift_task_alloc();
    *(_OWORD *)(v9 + 16) = v33;
    *(void *)(v9 + 32) = v7;
    *(void *)(v9 + 40) = v8;
    withAnimation<A>(_:_:)();
    swift_release();
    swift_task_dealloc();
    id v10 = [*(id *)(v7 + v6) configuration];
    id v11 = [v10 URLCache];

    unint64_t v12 = *(void *)(v0 + 184);
    uint64_t v13 = *(void **)(v0 + 192);
    uint64_t v14 = *(void *)(v0 + 176);
    uint64_t v15 = *(void *)(v0 + 128);
    uint64_t v16 = *(void *)(v0 + 136);
    uint64_t v17 = *(void *)(v0 + 120);
    if (v11)
    {
      id v18 = objc_allocWithZone((Class)NSCachedURLResponse);
      sub_1000746E0(v14, v12);
      id v19 = v13;
      Class v20 = Data._bridgeToObjectiveC()().super.isa;
      id v21 = [v18 initWithResponse:v19 data:v20];
      sub_100060B4C(v14, v12);

      Class v22 = URLRequest._bridgeToObjectiveC()().super.isa;
      [v11 storeCachedResponse:v21 forRequest:v22];
      swift_release();

      sub_100060B4C(v14, v12);
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v16, v17);
    }
    else
    {
      (*(void (**)(void, void))(v15 + 8))(*(void *)(v0 + 136), *(void *)(v0 + 120));

      sub_100060B4C(v14, v12);
      swift_release();
    }
  }
  else
  {
    uint64_t v23 = *(unint64_t **)(v0 + 88);
    unint64_t v24 = *v23;
    unint64_t v25 = v23[1];
    *(void *)(v0 + 48) = *v23;
    unint64_t v26 = *(void *)(v0 + 184);
    uint64_t v27 = *(void **)(v0 + 192);
    uint64_t v28 = *(void *)(v0 + 176);
    uint64_t v29 = *(void *)(v0 + 128);
    uint64_t v34 = *(void *)(v0 + 136);
    uint64_t v30 = *(void *)(v0 + 120);
    *(void *)(v0 + 56) = v25;
    *(void *)(v0 + 80) = 0x8000000000000008;
    sub_100071EE4(v24);
    swift_retain();
    sub_1000060EC(&qword_100159890);
    State.wrappedValue.setter();
    sub_100060B4C(v28, v26);

    sub_100071F0C(v24);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v34, v30);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v31 = *(uint64_t (**)(void))(v0 + 8);
  return v31();
}

uint64_t sub_1000740B4()
{
  uint64_t v1 = *(void *)(v0 + 200);
  uint64_t v2 = *(void *)(v0 + 136);
  uint64_t v3 = *(void *)(v0 + 120);
  uint64_t v4 = *(void *)(v0 + 128);
  id v5 = *(_OWORD **)(v0 + 88);
  swift_release();
  *(_OWORD *)(v0 + 32) = *v5;
  *(void *)(v0 + 72) = v1 | 0x4000000000000000;
  sub_1000060EC(&qword_100159890);
  State.wrappedValue.setter();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_10007418C()
{
  return State.wrappedValue.setter();
}

uint64_t sub_1000741F0()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = *(void *)(type metadata accessor for CachedAsyncImage() - 8);
  uint64_t v5 = v0 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *uint64_t v6 = v1;
  v6[1] = sub_100015B24;
  return sub_100073514(v5, v2, v3);
}

uint64_t sub_1000742D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000060EC(qword_1001597F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100074344()
{
  uint64_t v1 = type metadata accessor for CachedAsyncImage();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  sub_100071F0C(*(void *)(v0 + v3));
  swift_release();
  swift_release();
  swift_release();
  uint64_t v5 = v0 + v3 + *(int *)(v1 + 44);
  uint64_t v6 = type metadata accessor for URLRequest();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_1000744B0()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = *(void *)(type metadata accessor for CachedAsyncImage() - 8);
  uint64_t v5 = v0 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *uint64_t v6 = v1;
  v6[1] = sub_100014D10;
  return sub_100073934(v5, v2, v3);
}

unint64_t sub_100074598()
{
  unint64_t result = qword_1001598B8;
  if (!qword_1001598B8)
  {
    sub_100006224((uint64_t *)&unk_100158FC0);
    sub_10007463C(&qword_1001598C0, (void (*)(uint64_t))&type metadata accessor for URL);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001598B8);
  }
  return result;
}

uint64_t sub_10007463C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100074684()
{
  unint64_t result = qword_1001598C8;
  if (!qword_1001598C8)
  {
    sub_100006224(&qword_100159888);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001598C8);
  }
  return result;
}

uint64_t sub_1000746E0(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }

  return swift_retain();
}

uint64_t sub_100074738()
{
  return sub_10007418C();
}

uint64_t sub_100074758()
{
  return swift_getWitnessTable();
}

uint64_t value<A>(iOS:iPadOS:)(uint64_t (*a1)(void), uint64_t a2, uint64_t (*a3)(void))
{
  id v5 = [self currentDevice];
  id v6 = [v5 userInterfaceIdiom];

  if (v6 == (id)1) {
    return a3();
  }
  else {
    return a1();
  }
}

uint64_t sub_1000748E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Album();
  id v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t sub_100074950(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Album();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_1000749B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Album();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_100074A18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Album();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_100074A7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Album();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_100074AE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Album();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_100074B44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100074B58);
}

uint64_t sub_100074B58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Album();
  id v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_100074BC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100074BD8);
}

uint64_t sub_100074BD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Album();
  id v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for MusicKitAlbum()
{
  uint64_t result = qword_100159938;
  if (!qword_100159938) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100074C94()
{
  uint64_t result = type metadata accessor for Album();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_100074D20()
{
  qword_1001598D0 = 0x636973756DLL;
  *(void *)algn_1001598D8 = 0xE500000000000000;
}

uint64_t sub_100074D40@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for EditorialVideoArtworkFlavor();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000060EC(&qword_100159970);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Album();
  uint64_t v9 = EditorialVideoArtworkVending.editorialVideoArtworks.getter();
  if (!v9) {
    goto LABEL_8;
  }
  uint64_t v10 = v9;
  static EditorialVideoArtworkFlavor.motionDetailSquare.getter();
  if (*(void *)(v10 + 16) && (unint64_t v11 = sub_1000CA3F8((uint64_t)v5), (v12 & 1) != 0))
  {
    unint64_t v13 = v11;
    uint64_t v14 = *(void *)(v10 + 56);
    uint64_t v15 = type metadata accessor for VideoArtwork();
    uint64_t v16 = *(void *)(v15 - 8);
    uint64_t v23 = a1;
    uint64_t v17 = v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v16 + 16))(v8, v14 + *(void *)(v16 + 72) * v13, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v8, 0, 1, v15);
    a1 = v23;
  }
  else
  {
    uint64_t v15 = type metadata accessor for VideoArtwork();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v8, 1, 1, v15);
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  type metadata accessor for VideoArtwork();
  uint64_t v18 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v8, 1, v15) == 1)
  {
    sub_1000063D0((uint64_t)v8, &qword_100159970);
LABEL_8:
    uint64_t v19 = type metadata accessor for URL();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(a1, 1, 1, v19);
  }
  VideoArtwork.url.getter();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v8, v15);
  uint64_t v21 = type metadata accessor for URL();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(a1, 0, 1, v21);
}

uint64_t sub_100075098(uint64_t (*a1)(void))
{
  uint64_t v2 = sub_1000060EC(&qword_1001575D8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  Album.artwork.getter();
  uint64_t v5 = type metadata accessor for Artwork();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1000063D0((uint64_t)v4, &qword_1001575D8);
    return 0;
  }
  uint64_t v7 = (void *)a1();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  if (!v7) {
    return 0;
  }
  [objc_allocWithZone((Class)UIColor) initWithCGColor:v7];
  uint64_t v8 = Color.init(uiColor:)();

  return v8;
}

uint64_t sub_1000751F0()
{
  uint64_t v0 = type metadata accessor for ArtworkUnavailableView();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100156158 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  ArtworkUnavailableView.init(placeholderImage:widthRatio:heightRatio:)();
  if (qword_1001562D8 != -1) {
    swift_once();
  }
  sub_10001BA9C((unint64_t *)&qword_100157600, (void (*)(uint64_t))&type metadata accessor for ArtworkUnavailableView);
  View.accessibilityIdentifier(_:)();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_1000753B8()
{
  return sub_100075098((uint64_t (*)(void))&Artwork.backgroundColor.getter);
}

uint64_t sub_1000753E4()
{
  return sub_100075098((uint64_t (*)(void))&Artwork.primaryTextColor.getter);
}

uint64_t sub_100075420()
{
  uint64_t v0 = sub_1000060EC(&qword_1001575D8);
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = type metadata accessor for ArtworkImage();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000060EC(&qword_1001575E8);
  __chkstk_darwin(v5);
  Album.artwork.getter();
  ArtworkImage.init(_:)();
  uint64_t v6 = sub_1000060EC(&qword_1001575F0);
  unint64_t v7 = sub_10001B9C0();
  ArtworkImage.artworkPlaceholder<A>(_:)();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  v9[0] = v6;
  v9[1] = v7;
  swift_getOpaqueTypeConformance2();
  return AnyView.init<A>(_:)();
}

void sub_100075610(void *a1@<X0>, void *a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = type metadata accessor for AlertConfiguration.AlertSound();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1000060EC(&qword_100157528);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  char v12 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v53 - v13;
  uint64_t v15 = type metadata accessor for LocalizedStringResource();
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v21 = (char *)&v53 - v20;
  uint64_t v22 = __chkstk_darwin(v19);
  __chkstk_darwin(v22);
  if (a3)
  {
    if (a3 != 1)
    {
      uint64_t v62 = a1;
      swift_errorRetain();
      sub_1000060EC(&qword_1001577C8);
      sub_1000150F8(0, (unint64_t *)&qword_100159978);
      if (swift_dynamicCast())
      {
        unint64_t v26 = v61;
        uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v29 = v28;
        uint64_t v30 = sub_100075DC8((uint64_t)&off_100148FA0);
        uint64_t v31 = (void *)sub_1000DFF5C(v27, v29, v30);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v31)
        {

          LocalizedStringResource.init(stringLiteral:)();
          LocalizedStringResource.init(stringLiteral:)();
          static AlertConfiguration.AlertSound.default.getter();
          AlertConfiguration.init(title:body:sound:)();

          swift_errorRelease();
          return;
        }
      }
      swift_errorRelease();
    }
    goto LABEL_29;
  }
  uint64_t v59 = v24;
  os_log_type_t v60 = (char *)&v53 - v23;
  uint64_t v54 = v25;
  uint64_t v56 = a2;
  uint64_t v57 = a1;
  uint64_t v58 = a4;
  id v32 = a1;
  id v33 = [v32 mediaItems];
  sub_1000150F8(0, (unint64_t *)&qword_1001578D0);
  unint64_t v34 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v34 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v35 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v35 = *(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v35)
  {
    id v36 = [v32 mediaItems];
    unint64_t v37 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v37 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v52 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v52)
      {
LABEL_11:
        if ((v37 & 0xC000000000000001) == 0)
        {
          if (!*(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            return;
          }
          id v38 = *(id *)(v37 + 32);
LABEL_14:
          id v39 = v38;
          swift_bridgeObjectRelease();
          id v40 = [v39 title];
          id v55 = v39;
          if (v40)
          {
            uint64_t v41 = v40;
            static String._unconditionallyBridgeFromObjectiveC(_:)();

            swift_bridgeObjectRetain();
            LocalizedStringResource.init(stringLiteral:)();
            uint64_t v42 = v59;
            uint64_t v43 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v59 + 56);
            v43(v14, 0, 1, v15);
            swift_bridgeObjectRelease();
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v14, 1, v15) != 1)
            {
              (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v60, v14, v15);
              id v39 = v55;
LABEL_21:
              id v44 = [v39 artist];
              if (v44)
              {
                uint64_t v45 = v44;
                static String._unconditionallyBridgeFromObjectiveC(_:)();

                swift_bridgeObjectRetain();
                uint64_t v42 = v59;
                LocalizedStringResource.init(stringLiteral:)();
                v43(v12, 0, 1, v15);
                swift_bridgeObjectRelease();
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v12, 1, v15) != 1)
                {
                  uint64_t v46 = v54;
                  (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v54, v12, v15);
LABEL_26:
                  int v47 = v56;
                  uint64_t v48 = v42;
                  uint64_t v49 = *(void (**)(char *, char *, uint64_t))(v42 + 16);
                  uint64_t v50 = v60;
                  v49(v21, v60, v15);
                  v49(v18, v46, v15);
                  static AlertConfiguration.AlertSound.default.getter();
                  AlertConfiguration.init(title:body:sound:)();
                  sub_100014C0C(v57, v47, 0);

                  unint64_t v51 = *(void (**)(uint64_t, uint64_t))(v48 + 8);
                  v51((uint64_t)v46, v15);
                  v51((uint64_t)v50, v15);
                  return;
                }
              }
              else
              {
                v43(v12, 1, 1, v15);
              }
              uint64_t v46 = v54;
              LocalizedStringResource.init(stringLiteral:)();
              sub_100075ED8((uint64_t)v12);
              goto LABEL_26;
            }
            id v39 = v55;
          }
          else
          {
            uint64_t v42 = v59;
            uint64_t v43 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v59 + 56);
            v43(v14, 1, 1, v15);
          }
          LocalizedStringResource.init(stringLiteral:)();
          sub_100075ED8((uint64_t)v14);
          goto LABEL_21;
        }
LABEL_34:
        id v38 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        goto LABEL_14;
      }
    }
    else if (*(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_11;
    }
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_34;
  }
  sub_100014C0C(v57, v56, 0);
LABEL_29:
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  static AlertConfiguration.AlertSound.default.getter();
  AlertConfiguration.init(title:body:sound:)();
}

uint64_t sub_100075DC8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_1000060EC(&qword_100159980);
    uint64_t v3 = static _SetStorage.allocate(capacity:)();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v6 = a1 + 32;
    uint64_t v7 = ~(-1 << *(unsigned char *)(v3 + 32));
    while (1)
    {
      uint64_t v8 = *(void *)(v6 + 8 * v4);
      uint64_t result = static Hasher._hash(seed:_:)();
      unint64_t v10 = result & v7;
      unint64_t v11 = (result & (unint64_t)v7) >> 6;
      uint64_t v12 = *(void *)(v5 + 8 * v11);
      uint64_t v13 = 1 << (result & v7);
      uint64_t v14 = *(void *)(v3 + 48);
      if ((v13 & v12) != 0)
      {
        while (*(void *)(v14 + 8 * v10) != v8)
        {
          unint64_t v10 = (v10 + 1) & v7;
          unint64_t v11 = v10 >> 6;
          uint64_t v12 = *(void *)(v5 + 8 * (v10 >> 6));
          uint64_t v13 = 1 << v10;
          if ((v12 & (1 << v10)) == 0) {
            goto LABEL_7;
          }
        }
      }
      else
      {
LABEL_7:
        *(void *)(v5 + 8 * v11) = v13 | v12;
        *(void *)(v14 + 8 * v10) = v8;
        uint64_t v15 = *(void *)(v3 + 16);
        BOOL v16 = __OFADD__(v15, 1);
        uint64_t v17 = v15 + 1;
        if (v16)
        {
          __break(1u);
          return result;
        }
        *(void *)(v3 + 16) = v17;
      }
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return (uint64_t)&_swiftEmptySetSingleton;
}

uint64_t sub_100075ED8(uint64_t a1)
{
  uint64_t v2 = sub_1000060EC(&qword_100157528);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_100075F38(unint64_t result)
{
  unint64_t v1 = result;
  unint64_t v2 = result >> 62;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (v6)
    {
LABEL_3:
      sub_1000060EC(&qword_100159990);
      uint64_t result = static _SetStorage.allocate(capacity:)();
      uint64_t v3 = (unsigned char *)result;
      uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
      if (!v2) {
        goto LABEL_4;
      }
LABEL_8:
      swift_bridgeObjectRetain();
      uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t result = swift_bridgeObjectRelease();
      if (!v5) {
        return (unint64_t)v3;
      }
      goto LABEL_9;
    }
  }
  else if (*(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  uint64_t v3 = &_swiftEmptySetSingleton;
  uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
  if (v2) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return (unint64_t)v3;
  }
LABEL_9:
  unint64_t v7 = 0;
  uint64_t v8 = v3 + 56;
  unint64_t v21 = v1 & 0xC000000000000001;
  unint64_t v19 = v1 + 32;
  uint64_t v20 = v1 & 0xFFFFFFFFFFFFFF8;
  while (v21)
  {
    uint64_t result = specialized _ArrayBuffer._getElementSlowPath(_:)();
    unint64_t v9 = result;
    BOOL v10 = __OFADD__(v7++, 1);
    if (v10) {
      goto LABEL_25;
    }
LABEL_18:
    type metadata accessor for AnyCancellable();
    sub_100076308(&qword_100158F18);
    uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v11 = -1 << v3[32];
    unint64_t v12 = result & ~v11;
    unint64_t v13 = v12 >> 6;
    uint64_t v14 = *(void *)&v8[8 * (v12 >> 6)];
    uint64_t v15 = 1 << v12;
    if (((1 << v12) & v14) != 0)
    {
      uint64_t v16 = ~v11;
      sub_100076308(&qword_100159998);
      while (1)
      {
        uint64_t result = dispatch thunk of static Equatable.== infix(_:_:)();
        if (result) {
          break;
        }
        unint64_t v12 = (v12 + 1) & v16;
        unint64_t v13 = v12 >> 6;
        uint64_t v14 = *(void *)&v8[8 * (v12 >> 6)];
        uint64_t v15 = 1 << v12;
        if ((v14 & (1 << v12)) == 0) {
          goto LABEL_22;
        }
      }
      uint64_t result = swift_release();
    }
    else
    {
LABEL_22:
      *(void *)&v8[8 * v13] = v15 | v14;
      *(void *)(*((void *)v3 + 6) + 8 * v12) = v9;
      uint64_t v17 = *((void *)v3 + 2);
      BOOL v10 = __OFADD__(v17, 1);
      uint64_t v18 = v17 + 1;
      if (v10) {
        goto LABEL_26;
      }
      *((void *)v3 + 2) = v18;
    }
    if (v7 == v5) {
      return (unint64_t)v3;
    }
  }
  if (v7 >= *(void *)(v20 + 16)) {
    goto LABEL_27;
  }
  unint64_t v9 = *(void *)(v19 + 8 * v7);
  uint64_t result = swift_retain();
  BOOL v10 = __OFADD__(v7++, 1);
  if (!v10) {
    goto LABEL_18;
  }
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

Swift::Int sub_1000761C4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_1000060EC(&qword_100159988);
    uint64_t v3 = static _SetStorage.allocate(capacity:)();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v6 = a1 + 32;
    while (1)
    {
      Swift::UInt v7 = *(unsigned __int8 *)(v6 + v4);
      Hasher.init(_seed:)();
      Hasher._combine(_:)(v7);
      Swift::Int result = Hasher._finalize()();
      uint64_t v9 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v10 = result & ~v9;
      unint64_t v11 = v10 >> 6;
      uint64_t v12 = *(void *)(v5 + 8 * (v10 >> 6));
      uint64_t v13 = 1 << v10;
      uint64_t v14 = *(void *)(v3 + 48);
      if (((1 << v10) & v12) != 0)
      {
        if (*(unsigned __int8 *)(v14 + v10) == v7) {
          goto LABEL_3;
        }
        uint64_t v15 = ~v9;
        while (1)
        {
          unint64_t v10 = (v10 + 1) & v15;
          unint64_t v11 = v10 >> 6;
          uint64_t v12 = *(void *)(v5 + 8 * (v10 >> 6));
          uint64_t v13 = 1 << v10;
          if ((v12 & (1 << v10)) == 0) {
            break;
          }
          if (*(unsigned __int8 *)(v14 + v10) == v7) {
            goto LABEL_3;
          }
        }
      }
      *(void *)(v5 + 8 * v11) = v13 | v12;
      *(unsigned char *)(v14 + v10) = v7;
      uint64_t v16 = *(void *)(v3 + 16);
      BOOL v17 = __OFADD__(v16, 1);
      uint64_t v18 = v16 + 1;
      if (v17)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v18;
LABEL_3:
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return (Swift::Int)&_swiftEmptySetSingleton;
}

uint64_t sub_100076308(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for AnyCancellable();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_10007634C()
{
  id v0 = objc_allocWithZone((Class)ASCAdamID);
  swift_bridgeObjectRetain();
  NSString v1 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v2 = [v0 initWithStringValue:v1];

  uint64_t v3 = (void *)ASCLockupContextStandard;
  id v4 = ASCLockupKindApp;
  id v5 = v3;
  swift_bridgeObjectRetain();
  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v7 = [self _requestWithID:v2 kind:v4 context:v5 productVariantID:v6];

  return v7;
}

id sub_10007645C()
{
  sub_100077698((uint64_t)(v0 + 4), (uint64_t)v14);
  uint64_t v1 = v0[6];
  uint64_t v2 = v0[7];
  uint64_t v3 = v0[8];
  uint64_t v4 = v0[9];
  id v5 = (objc_class *)type metadata accessor for AppStoreComponent.AppStoreCoordinator();
  NSString v6 = (char *)objc_allocWithZone(v5);
  id v7 = &v6[OBJC_IVAR____TtCV16MusicRecognition17AppStoreComponent19AppStoreCoordinator_metricsQuery];
  *(void *)id v7 = 0;
  *((void *)v7 + 1) = 0;
  sub_100077698((uint64_t)v14, (uint64_t)v7);
  sub_100017658((uint64_t)v14);
  sub_100017778(v1);
  sub_100017778(v3);
  uint64_t v8 = v6;
  swift_bridgeObjectRelease();
  uint64_t v9 = (uint64_t *)&v8[OBJC_IVAR____TtCV16MusicRecognition17AppStoreComponent19AppStoreCoordinator_onOpen];
  *uint64_t v9 = v1;
  v9[1] = v2;
  unint64_t v10 = (uint64_t *)&v8[OBJC_IVAR____TtCV16MusicRecognition17AppStoreComponent19AppStoreCoordinator_onStateChange];
  *unint64_t v10 = v3;
  v10[1] = v4;
  sub_100017778(v1);
  sub_100017778(v3);

  v13.receiver = v8;
  v13.super_class = v5;
  id v11 = [super init];
  sub_100077228(v3);
  sub_100077228(v1);
  return v11;
}

id sub_10007656C()
{
  id v0 = [objc_allocWithZone((Class)ASCLockupView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v1 = self;
  id v2 = v0;
  id v3 = [v1 clearColor];
  [v2 setBackgroundColor:v3];

  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  sub_1000060EC(&qword_100159A78);
  UIViewRepresentableContext.coordinator.getter();
  [v2 setDelegate:v6];

  id v4 = sub_10007634C();
  [v2 setRequest:v4];

  return v2;
}

void sub_1000766D0(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1000060EC(&qword_100157038);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void (**)(uint64_t))(v2
                                      + OBJC_IVAR____TtCV16MusicRecognition17AppStoreComponent19AppStoreCoordinator_onStateChange);
  if (v9) {
    v9(a2);
  }
  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v12 = v11;
  if (v10 != static String._unconditionallyBridgeFromObjectiveC(_:)() || v12 != v13)
  {
    char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v15) {
      goto LABEL_15;
    }
    uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v18 = v17;
    if (v16 != static String._unconditionallyBridgeFromObjectiveC(_:)() || v18 != v19)
    {
      char v21 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v21 & 1) == 0) {
        return;
      }
      goto LABEL_15;
    }
  }
  swift_bridgeObjectRelease_n();
LABEL_15:
  uint64_t v22 = v3 + OBJC_IVAR____TtCV16MusicRecognition17AppStoreComponent19AppStoreCoordinator_onOpen;
  uint64_t v23 = *(void *)(v3 + OBJC_IVAR____TtCV16MusicRecognition17AppStoreComponent19AppStoreCoordinator_onOpen);
  if (v23)
  {
    uint64_t v24 = *(void *)(v22 + 8);
    unint64_t v25 = self;
    swift_retain();
    id v26 = [v25 mainBundle];
    v47._object = (void *)0xE000000000000000;
    v27._object = (void *)0x8000000100119610;
    v27._uint64_t countAndFlagsBits = 0xD000000000000026;
    v28._uint64_t countAndFlagsBits = 0;
    v28._object = (void *)0xE000000000000000;
    v47._uint64_t countAndFlagsBits = 0;
    Swift::String v29 = NSLocalizedString(_:tableName:bundle:value:comment:)(v27, (Swift::String_optional)0, (NSBundle)v26, v28, v47);

    Swift::String aBlock = v29;
    sub_10000E0F0();
    StringProtocol.localizedUppercase.getter();
    swift_bridgeObjectRelease();
    uint64_t v30 = self;
    NSString v31 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v32 = [v30 textMetadataWithTitle:v31 subtitle:0];

    id v33 = objc_allocWithZone((Class)ASCLocalOffer);
    uint64_t v45 = v23;
    uint64_t v46 = v24;
    aBlock._uint64_t countAndFlagsBits = (uint64_t)_NSConcreteStackBlock;
    aBlock._object = (void *)1107296256;
    uint64_t v43 = sub_1000D559C;
    id v44 = &unk_10014B508;
    unint64_t v34 = _Block_copy(&aBlock);
    sub_100017778(v23);
    id v35 = v32;
    swift_release();
    id v36 = [v33 initWithMetadata:v35 action:v34];

    _Block_release(v34);
    uint64_t v37 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v8, 1, 1, v37);
    type metadata accessor for MainActor();
    id v38 = a1;
    id v39 = v36;
    uint64_t v40 = static MainActor.shared.getter();
    uint64_t v41 = (void *)swift_allocObject();
    v41[2] = v40;
    v41[3] = &protocol witness table for MainActor;
    v41[4] = v38;
    void v41[5] = v39;
    sub_1000DC37C((uint64_t)v8, (uint64_t)&unk_100159A60, (uint64_t)v41);

    sub_100077228(v23);
    swift_release();
  }
}

uint64_t sub_100076AE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[2] = a4;
  v5[3] = a5;
  type metadata accessor for MainActor();
  v5[4] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100076B80, v7, v6);
}

uint64_t sub_100076B80()
{
  uint64_t v1 = *(void **)(v0 + 16);
  swift_release();
  id v2 = [v1 lockup];
  if (v2)
  {
    uint64_t v3 = v2;
    id v4 = [v2 lockupWithOffer:*(void *)(v0 + 24)];
  }
  else
  {
    id v4 = 0;
  }
  [*(id *)(v0 + 16) setLockup:v4];

  id v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t type metadata accessor for AppStoreComponent.AppStoreCoordinator()
{
  return self;
}

id sub_100076DEC()
{
  return sub_10007656C();
}

uint64_t sub_100076E30()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v1 = *(void *)(v0 + 40);
  sub_1000060EC(&qword_100159A78);
  UIViewRepresentableContext.coordinator.getter();
  uint64_t v3 = &v5[OBJC_IVAR____TtCV16MusicRecognition17AppStoreComponent19AppStoreCoordinator_metricsQuery];
  *(void *)uint64_t v3 = v2;
  *((void *)v3 + 1) = v1;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRelease();
}

id sub_100076EA8@<X0>(void *a1@<X8>)
{
  id result = sub_10007645C();
  *a1 = result;
  return result;
}

uint64_t sub_100076EF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_100077700();

  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_100076F58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_100077700();

  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_100076FBC()
{
}

id sub_100076FE4()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtCV16MusicRecognition17AppStoreComponent19AppStoreCoordinator_metricsQuery + 8);
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtCV16MusicRecognition17AppStoreComponent19AppStoreCoordinator_metricsQuery);
    sub_1000060EC((uint64_t *)&unk_100159A40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100110670;
    *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(inited + 40) = v4;
    *(void *)(inited + 48) = v2;
    *(void *)(inited + 56) = v1;
    swift_bridgeObjectRetain();
    sub_1000E8B60(inited);
    id v5 = objc_allocWithZone((Class)ASCMetricsActivity);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v7 = [v5 initWithFields:isa];

    return v7;
  }
  else
  {
    id v9 = objc_allocWithZone((Class)ASCMetricsActivity);
    return [v9 init];
  }
}

uint64_t sub_100077108(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100077118()
{
  return swift_release();
}

uint64_t sub_100077120()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100077168(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_100014D10;
  return sub_100076AE8(a1, v4, v5, v7, v6);
}

uint64_t sub_100077228(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t destroy for AppStoreComponent(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(a1 + 48)) {
    uint64_t result = swift_release();
  }
  if (*(void *)(a1 + 64))
  {
    return swift_release();
  }
  return result;
}

void *initializeWithCopy for AppStoreComponent(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  uint64_t v8 = a2 + 6;
  uint64_t v7 = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7)
  {
    uint64_t v9 = a2[7];
    a1[6] = v7;
    a1[7] = v9;
    swift_retain();
  }
  else
  {
    *((_OWORD *)a1 + 3) = *v8;
  }
  uint64_t v10 = a2[8];
  if (v10)
  {
    uint64_t v11 = a2[9];
    a1[8] = v10;
    a1[9] = v11;
    swift_retain();
  }
  else
  {
    *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
  }
  return a1;
}

void *assignWithCopy for AppStoreComponent(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[6];
  if (a1[6])
  {
    if (v4)
    {
      uint64_t v5 = a2[7];
      a1[6] = v4;
      a1[7] = v5;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v4)
  {
    uint64_t v6 = a2[7];
    a1[6] = v4;
    a1[7] = v6;
    swift_retain();
    goto LABEL_8;
  }
  *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
LABEL_8:
  uint64_t v7 = a2[8];
  if (!a1[8])
  {
    if (v7)
    {
      uint64_t v9 = a2[9];
      a1[8] = v7;
      a1[9] = v9;
      swift_retain();
      return a1;
    }
LABEL_14:
    *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
    return a1;
  }
  if (!v7)
  {
    swift_release();
    goto LABEL_14;
  }
  uint64_t v8 = a2[9];
  a1[8] = v7;
  a1[9] = v8;
  swift_retain();
  swift_release();
  return a1;
}

void *assignWithTake for AppStoreComponent(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[6];
  if (a1[6])
  {
    if (v7)
    {
      uint64_t v8 = a2[7];
      a1[6] = v7;
      a1[7] = v8;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v7)
  {
    uint64_t v9 = a2[7];
    a1[6] = v7;
    a1[7] = v9;
    goto LABEL_8;
  }
  *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
LABEL_8:
  uint64_t v10 = a2[8];
  if (!a1[8])
  {
    if (v10)
    {
      uint64_t v12 = a2[9];
      a1[8] = v10;
      a1[9] = v12;
      return a1;
    }
LABEL_14:
    *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
    return a1;
  }
  if (!v10)
  {
    swift_release();
    goto LABEL_14;
  }
  uint64_t v11 = a2[9];
  a1[8] = v10;
  a1[9] = v11;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for AppStoreComponent(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 80)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AppStoreComponent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppStoreComponent()
{
  return &type metadata for AppStoreComponent;
}

unint64_t sub_100077644()
{
  unint64_t result = qword_100159A68;
  if (!qword_100159A68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100159A68);
  }
  return result;
}

uint64_t sub_100077698(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000060EC(&qword_100159A70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_100077700()
{
  unint64_t result = qword_100159A80;
  if (!qword_100159A80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100159A80);
  }
  return result;
}

uint64_t *sub_100077754(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    uint64_t v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    uint64_t v8 = (int *)type metadata accessor for ShazamUpsellViewModel();
    uint64_t v9 = v8[6];
    __dst = (char *)v4 + v9;
    uint64_t v10 = (char *)a2 + v9;
    uint64_t v11 = type metadata accessor for URL();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v42 = v13;
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = sub_1000060EC((uint64_t *)&unk_100158FC0);
      memcpy(__dst, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(__dst, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
    }
    uint64_t v16 = v8[7];
    uint64_t v17 = (uint64_t *)((char *)v4 + v16);
    uint64_t v18 = (uint64_t *)((char *)a2 + v16);
    uint64_t v19 = v18[1];
    *uint64_t v17 = *v18;
    v17[1] = v19;
    uint64_t v20 = v8[8];
    char v21 = (char *)v4 + v20;
    uint64_t v22 = (char *)a2 + v20;
    uint64_t v23 = *((void *)v22 + 1);
    *(void *)char v21 = *(void *)v22;
    *((void *)v21 + 1) = v23;
    v21[16] = v22[16];
    *((void *)v21 + 3) = *((void *)v22 + 3);
    uint64_t v24 = v8[9];
    unint64_t v25 = (char *)v4 + v24;
    id v26 = (char *)a2 + v24;
    uint64_t v27 = *((void *)v26 + 1);
    *(void *)unint64_t v25 = *(void *)v26;
    *((void *)v25 + 1) = v27;
    v25[16] = v26[16];
    *((void *)v25 + 3) = *((void *)v26 + 3);
    uint64_t v28 = v8[10];
    Swift::String v29 = (char *)v4 + v28;
    uint64_t v30 = (char *)a2 + v28;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v42(v30, 1, v11))
    {
      uint64_t v31 = sub_1000060EC((uint64_t *)&unk_100158FC0);
      memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v29, v30, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v29, 0, 1, v11);
    }
    uint64_t v32 = *(int *)(a3 + 20);
    id v33 = (uint64_t *)((char *)v4 + v32);
    unint64_t v34 = (uint64_t *)((char *)a2 + v32);
    if (*v34)
    {
      uint64_t v35 = v34[1];
      *id v33 = *v34;
      v33[1] = v35;
      swift_retain();
    }
    else
    {
      *(_OWORD *)id v33 = *(_OWORD *)v34;
    }
    uint64_t v36 = *(int *)(a3 + 24);
    uint64_t v37 = (uint64_t *)((char *)v4 + v36);
    id v38 = (uint64_t *)((char *)a2 + v36);
    sub_1000060EC(&qword_100156940);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v39 = type metadata accessor for OpenURLAction();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
    }
    else
    {
      *uint64_t v37 = *v38;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v4;
}

uint64_t sub_100077AF8(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = type metadata accessor for ShazamUpsellViewModel();
  uint64_t v5 = a1 + *(int *)(v4 + 24);
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (!v8(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v9 = a1 + *(int *)(v4 + 40);
  if (!v8(v9, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v9, v6);
  }
  if (*(void *)(a1 + *(int *)(a2 + 20))) {
    swift_release();
  }
  uint64_t v10 = a1 + *(int *)(a2 + 24);
  sub_1000060EC(&qword_100156940);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = type metadata accessor for OpenURLAction();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8);
    return v12(v10, v11);
  }
  else
  {
    return swift_release();
  }
}

void *sub_100077CFC(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  uint64_t v7 = (int *)type metadata accessor for ShazamUpsellViewModel();
  uint64_t v8 = v7[6];
  __dst = (char *)a1 + v8;
  uint64_t v9 = (char *)a2 + v8;
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v40 = v12;
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = sub_1000060EC((uint64_t *)&unk_100158FC0);
    memcpy(__dst, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(__dst, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
  }
  uint64_t v14 = v7[7];
  uint64_t v15 = (void *)((char *)a1 + v14);
  uint64_t v16 = (void *)((char *)a2 + v14);
  uint64_t v17 = v16[1];
  *uint64_t v15 = *v16;
  v15[1] = v17;
  uint64_t v18 = v7[8];
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = *((void *)v20 + 1);
  *(void *)uint64_t v19 = *(void *)v20;
  *((void *)v19 + 1) = v21;
  v19[16] = v20[16];
  *((void *)v19 + 3) = *((void *)v20 + 3);
  uint64_t v22 = v7[9];
  uint64_t v23 = (char *)a1 + v22;
  uint64_t v24 = (char *)a2 + v22;
  uint64_t v25 = *((void *)v24 + 1);
  *(void *)uint64_t v23 = *(void *)v24;
  *((void *)v23 + 1) = v25;
  v23[16] = v24[16];
  *((void *)v23 + 3) = *((void *)v24 + 3);
  uint64_t v26 = v7[10];
  uint64_t v27 = (char *)a1 + v26;
  uint64_t v28 = (char *)a2 + v26;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v40(v28, 1, v10))
  {
    uint64_t v29 = sub_1000060EC((uint64_t *)&unk_100158FC0);
    memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v27, v28, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v27, 0, 1, v10);
  }
  uint64_t v30 = *(int *)(a3 + 20);
  uint64_t v31 = (void *)((char *)a1 + v30);
  uint64_t v32 = (void *)((char *)a2 + v30);
  if (*v32)
  {
    uint64_t v33 = v32[1];
    *uint64_t v31 = *v32;
    v31[1] = v33;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
  }
  uint64_t v34 = *(int *)(a3 + 24);
  uint64_t v35 = (void *)((char *)a1 + v34);
  uint64_t v36 = (void *)((char *)a2 + v34);
  sub_1000060EC(&qword_100156940);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v37 = type metadata accessor for OpenURLAction();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v37 - 8) + 16))(v35, v36, v37);
  }
  else
  {
    *uint64_t v35 = *v36;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

char *sub_100078048(char *a1, char *a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = *((void *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 2) = *((void *)a2 + 2);
  *((void *)a1 + 3) = *((void *)a2 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = (int *)type metadata accessor for ShazamUpsellViewModel();
  uint64_t v6 = v5[6];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_1000060EC((uint64_t *)&unk_100158FC0);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = v5[7];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  *(void *)uint64_t v16 = *(void *)v17;
  *((void *)v16 + 1) = *((void *)v17 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = v5[8];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  *(void *)uint64_t v19 = *(void *)&a2[v18];
  *((void *)v19 + 1) = *(void *)&a2[v18 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v19[16] = v20[16];
  *((void *)v19 + 3) = *((void *)v20 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v21 = v5[9];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  *(void *)uint64_t v22 = *(void *)&a2[v21];
  *((void *)v22 + 1) = *(void *)&a2[v21 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22[16] = v23[16];
  *((void *)v22 + 3) = *((void *)v23 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v24 = v5[10];
  uint64_t v25 = &a1[v24];
  uint64_t v26 = &a2[v24];
  LODWORD(v22) = v11(&a1[v24], 1, v9);
  int v27 = v11(v26, 1, v9);
  if (v22)
  {
    if (!v27)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v25, v26, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v25, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v27)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v25, v9);
LABEL_12:
    uint64_t v28 = sub_1000060EC((uint64_t *)&unk_100158FC0);
    memcpy(v25, v26, *(void *)(*(void *)(v28 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v25, v26, v9);
LABEL_13:
  uint64_t v29 = *(int *)(a3 + 20);
  uint64_t v30 = &a1[v29];
  uint64_t v31 = &a2[v29];
  uint64_t v32 = *(void *)&a1[v29];
  uint64_t v33 = *(void *)&a2[v29];
  if (v32)
  {
    if (v33)
    {
      uint64_t v34 = *((void *)v31 + 1);
      *(void *)uint64_t v30 = v33;
      *((void *)v30 + 1) = v34;
      swift_retain();
      swift_release();
      goto LABEL_20;
    }
    swift_release();
  }
  else if (v33)
  {
    uint64_t v35 = *((void *)v31 + 1);
    *(void *)uint64_t v30 = v33;
    *((void *)v30 + 1) = v35;
    swift_retain();
    goto LABEL_20;
  }
  *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
LABEL_20:
  if (a1 != a2)
  {
    uint64_t v36 = *(int *)(a3 + 24);
    uint64_t v37 = &a1[v36];
    id v38 = &a2[v36];
    sub_1000063D0((uint64_t)&a1[v36], &qword_100156940);
    sub_1000060EC(&qword_100156940);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v39 = type metadata accessor for OpenURLAction();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
    }
    else
    {
      *(void *)uint64_t v37 = *(void *)v38;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_1000784E4(_OWORD *a1, char *a2, uint64_t a3)
{
  long long v6 = *((_OWORD *)a2 + 1);
  *a1 = *(_OWORD *)a2;
  a1[1] = v6;
  uint64_t v7 = (int *)type metadata accessor for ShazamUpsellViewModel();
  uint64_t v8 = v7[6];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = &a2[v8];
  uint64_t v11 = type metadata accessor for URL();
  uint64_t v12 = *(void *)(v11 - 8);
  int v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  if (v13(v10, 1, v11))
  {
    uint64_t v14 = sub_1000060EC((uint64_t *)&unk_100158FC0);
    memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  *(_OWORD *)((char *)a1 + v7[7]) = *(_OWORD *)&a2[v7[7]];
  uint64_t v15 = v7[8];
  uint64_t v16 = (_OWORD *)((char *)a1 + v15);
  uint64_t v17 = &a2[v15];
  long long v18 = *((_OWORD *)v17 + 1);
  _OWORD *v16 = *(_OWORD *)v17;
  v16[1] = v18;
  uint64_t v19 = v7[9];
  uint64_t v20 = (_OWORD *)((char *)a1 + v19);
  uint64_t v21 = &a2[v19];
  long long v22 = *((_OWORD *)v21 + 1);
  *uint64_t v20 = *(_OWORD *)v21;
  v20[1] = v22;
  uint64_t v23 = v7[10];
  uint64_t v24 = (char *)a1 + v23;
  uint64_t v25 = &a2[v23];
  if (v13(&a2[v23], 1, v11))
  {
    uint64_t v26 = sub_1000060EC((uint64_t *)&unk_100158FC0);
    memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v24, v25, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v24, 0, 1, v11);
  }
  uint64_t v27 = *(int *)(a3 + 20);
  uint64_t v28 = (void *)((char *)a1 + v27);
  uint64_t v29 = (uint64_t *)&a2[v27];
  uint64_t v30 = *v29;
  if (*v29)
  {
    uint64_t v31 = v29[1];
    *uint64_t v28 = v30;
    v28[1] = v31;
  }
  else
  {
    *(_OWORD *)uint64_t v28 = *(_OWORD *)v29;
  }
  uint64_t v32 = *(int *)(a3 + 24);
  uint64_t v33 = (char *)a1 + v32;
  uint64_t v34 = &a2[v32];
  uint64_t v35 = sub_1000060EC(&qword_100156940);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v36 = type metadata accessor for OpenURLAction();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 32))(v33, v34, v36);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
  }
  return a1;
}

char *sub_1000787B4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v5 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *((void *)a2 + 3);
  *((void *)a1 + 2) = *((void *)a2 + 2);
  *((void *)a1 + 3) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = (int *)type metadata accessor for ShazamUpsellViewModel();
  uint64_t v8 = v7[6];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = type metadata accessor for URL();
  uint64_t v12 = *(void *)(v11 - 8);
  int v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v15)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
LABEL_6:
    uint64_t v16 = sub_1000060EC((uint64_t *)&unk_100158FC0);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
LABEL_7:
  uint64_t v17 = v7[7];
  long long v18 = &a1[v17];
  uint64_t v19 = (uint64_t *)&a2[v17];
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  *(void *)long long v18 = v21;
  *((void *)v18 + 1) = v20;
  swift_bridgeObjectRelease();
  uint64_t v22 = v7[8];
  uint64_t v23 = &a1[v22];
  uint64_t v24 = &a2[v22];
  uint64_t v25 = *(void *)&a2[v22 + 8];
  *(void *)uint64_t v23 = *(void *)&a2[v22];
  *((void *)v23 + 1) = v25;
  swift_bridgeObjectRelease();
  v23[16] = v24[16];
  *((void *)v23 + 3) = *((void *)v24 + 3);
  swift_bridgeObjectRelease();
  uint64_t v26 = v7[9];
  uint64_t v27 = &a1[v26];
  uint64_t v28 = &a2[v26];
  uint64_t v29 = *(void *)&a2[v26 + 8];
  *(void *)uint64_t v27 = *(void *)&a2[v26];
  *((void *)v27 + 1) = v29;
  swift_bridgeObjectRelease();
  v27[16] = v28[16];
  *((void *)v27 + 3) = *((void *)v28 + 3);
  swift_bridgeObjectRelease();
  uint64_t v30 = v7[10];
  uint64_t v31 = &a1[v30];
  uint64_t v32 = &a2[v30];
  LODWORD(v28) = v13(&a1[v30], 1, v11);
  int v33 = v13(v32, 1, v11);
  if (v28)
  {
    if (!v33)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v31, v32, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v31, 0, 1, v11);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v33)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v31, v11);
LABEL_12:
    uint64_t v34 = sub_1000060EC((uint64_t *)&unk_100158FC0);
    memcpy(v31, v32, *(void *)(*(void *)(v34 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v31, v32, v11);
LABEL_13:
  uint64_t v35 = *(int *)(a3 + 20);
  uint64_t v36 = &a1[v35];
  uint64_t v37 = &a2[v35];
  uint64_t v38 = *(void *)&a1[v35];
  uint64_t v39 = *(void *)&a2[v35];
  if (v38)
  {
    if (v39)
    {
      uint64_t v40 = *((void *)v37 + 1);
      *(void *)uint64_t v36 = v39;
      *((void *)v36 + 1) = v40;
      swift_release();
      goto LABEL_20;
    }
    swift_release();
  }
  else if (v39)
  {
    uint64_t v41 = *((void *)v37 + 1);
    *(void *)uint64_t v36 = v39;
    *((void *)v36 + 1) = v41;
    goto LABEL_20;
  }
  *(_OWORD *)uint64_t v36 = *(_OWORD *)v37;
LABEL_20:
  if (a1 != a2)
  {
    uint64_t v42 = *(int *)(a3 + 24);
    uint64_t v43 = &a1[v42];
    id v44 = &a2[v42];
    sub_1000063D0((uint64_t)&a1[v42], &qword_100156940);
    uint64_t v45 = sub_1000060EC(&qword_100156940);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v46 = type metadata accessor for OpenURLAction();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 32))(v43, v44, v46);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100078BF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100078C08);
}

uint64_t sub_100078C08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ShazamUpsellViewModel();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 2147483646)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
  else
  {
    uint64_t v12 = sub_1000060EC(&qword_100156A08);
    int v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a3 + 24);
    return v13(v15, a2, v14);
  }
}

uint64_t sub_100078D44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100078D58);
}

uint64_t sub_100078D58(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for ShazamUpsellViewModel();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 2147483646)
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = a2;
  }
  else
  {
    uint64_t v11 = sub_1000060EC(&qword_100156A08);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 24);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

uint64_t type metadata accessor for ShazamUpsellView()
{
  uint64_t result = qword_100159B78;
  if (!qword_100159B78) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100078ED4()
{
  type metadata accessor for ShazamUpsellViewModel();
  if (v0 <= 0x3F)
  {
    sub_10000B6DC();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_100078FA4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100078FC0()
{
  uint64_t result = static Font.footnote.getter();
  qword_100159AF0 = result;
  return result;
}

uint64_t sub_100078FE0()
{
  uint64_t result = static Font.Weight.bold.getter();
  qword_100159AF8 = v1;
  return result;
}

uint64_t sub_100079000()
{
  uint64_t result = static Color.secondary.getter();
  qword_100159B00 = result;
  return result;
}

uint64_t sub_100079020()
{
  uint64_t result = static Color.secondary.getter();
  qword_100159B08 = result;
  return result;
}

uint64_t sub_100079040()
{
  uint64_t result = static Font.subheadline.getter();
  qword_100159B10 = result;
  return result;
}

uint64_t sub_100079060()
{
  uint64_t result = static Font.Weight.regular.getter();
  qword_100159B18 = v1;
  return result;
}

uint64_t sub_100079080@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1000060EC(&qword_100159BB8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000060EC(&qword_100159BC0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000060EC(&qword_100159BC8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v5 = static HorizontalAlignment.leading.getter();
  *((void *)v5 + 1) = 0;
  v5[16] = 0;
  uint64_t v12 = sub_1000060EC(&qword_100159BD0);
  sub_100079314(v1, (uint64_t)&v5[*(int *)(v12 + 44)]);
  if (qword_1001562B0 != -1) {
    swift_once();
  }
  sub_10007A3E0();
  View.accessibilityIdentifier(_:)();
  sub_1000063D0((uint64_t)v5, &qword_100159BB8);
  char v13 = static Edge.Set.top.getter();
  EdgeInsets.init(_all:)();
  uint64_t v15 = v14;
  uint64_t v17 = v16;
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  sub_100009C94((uint64_t)v8, (uint64_t)v11, &qword_100159BC0);
  uint64_t v22 = &v11[*(int *)(v9 + 36)];
  *uint64_t v22 = v13;
  *((void *)v22 + 1) = v15;
  *((void *)v22 + 2) = v17;
  *((void *)v22 + 3) = v19;
  *((void *)v22 + 4) = v21;
  v22[40] = 0;
  sub_1000063D0((uint64_t)v8, &qword_100159BC0);
  char v23 = static Edge.Set.bottom.getter();
  EdgeInsets.init(_all:)();
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  sub_100009C94((uint64_t)v11, a1, &qword_100159BC8);
  uint64_t v32 = a1 + *(int *)(sub_1000060EC(&qword_100159BE0) + 36);
  *(unsigned char *)uint64_t v32 = v23;
  *(void *)(v32 + 8) = v25;
  *(void *)(v32 + 16) = v27;
  *(void *)(v32 + 24) = v29;
  *(void *)(v32 + 32) = v31;
  *(unsigned char *)(v32 + 40) = 0;
  return sub_1000063D0((uint64_t)v11, &qword_100159BC8);
}

uint64_t sub_100079314@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for ShazamUpsellView();
  uint64_t v145 = *(void *)(v4 - 8);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v147 = &v127[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v146 = v6;
  __chkstk_darwin(v5);
  Swift::Int v144 = &v127[-v7];
  uint64_t v143 = type metadata accessor for Divider();
  uint64_t v142 = *(void *)(v143 - 8);
  __chkstk_darwin(v143);
  uint64_t v141 = &v127[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v140 = sub_1000060EC(&qword_100158390);
  uint64_t v9 = __chkstk_darwin(v140);
  uint64_t v155 = &v127[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  unint64_t v154 = &v127[-v11];
  uint64_t v152 = type metadata accessor for ShazamUpsellViewModel();
  uint64_t v12 = *(int *)(v152 + 28);
  Swift::Int v161 = a1;
  char v13 = (void *)((char *)a1 + v12);
  uint64_t v14 = v13[1];
  uint64_t v163 = *v13;
  uint64_t v164 = v14;
  sub_10000E0F0();
  swift_bridgeObjectRetain();
  uint64_t v15 = Text.init<A>(_:)();
  uint64_t v17 = v16;
  char v19 = v18;
  if (qword_100156160 != -1) {
    swift_once();
  }
  uint64_t v20 = Text.font(_:)();
  uint64_t v22 = v21;
  char v24 = v23;
  sub_10000E904(v15, v17, v19 & 1);
  swift_bridgeObjectRelease();
  if (qword_100156170 != -1) {
    swift_once();
  }
  uint64_t v163 = qword_100159B00;
  swift_retain();
  char v25 = v24 & 1;
  uint64_t v26 = Text.foregroundStyle<A>(_:)();
  uint64_t v28 = v27;
  char v30 = v29;
  sub_10000E904(v20, v22, v25);
  swift_release();
  swift_bridgeObjectRelease();
  if (qword_100156168 != -1) {
    swift_once();
  }
  uint64_t v159 = Text.fontWeight(_:)();
  uint64_t v158 = v31;
  LODWORD(v151) = v32;
  uint64_t v160 = v33;
  sub_10000E904(v26, v28, v30 & 1);
  swift_bridgeObjectRelease();
  int v139 = static Edge.Set.bottom.getter();
  EdgeInsets.init(_all:)();
  uint64_t v138 = v34;
  uint64_t v137 = v35;
  uint64_t v136 = v36;
  uint64_t v135 = v37;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v38 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v40 = v39;
  char v42 = v41 & 1;
  static Font.title2.getter();
  uint64_t v43 = Text.font(_:)();
  uint64_t v45 = v44;
  char v47 = v46;
  swift_release();
  char v48 = v47 & 1;
  sub_10000E904(v38, v40, v42);
  swift_bridgeObjectRelease();
  uint64_t v163 = static Color.primary.getter();
  uint64_t v49 = Text.foregroundStyle<A>(_:)();
  uint64_t v51 = v50;
  char v53 = v52 & 1;
  sub_10000E904(v43, v45, v48);
  swift_release();
  swift_bridgeObjectRelease();
  static Font.Weight.bold.getter();
  uint64_t v156 = Text.fontWeight(_:)();
  uint64_t v153 = v54;
  char v56 = v55;
  uint64_t v157 = v57;
  sub_10000E904(v49, v51, v53);
  swift_bridgeObjectRelease();
  int v134 = static Edge.Set.bottom.getter();
  EdgeInsets.init(_all:)();
  uint64_t v133 = v58;
  uint64_t v132 = v59;
  uint64_t v131 = v60;
  uint64_t v130 = v61;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v62 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v64 = v63;
  char v66 = v65;
  if (qword_100156180 != -1) {
    swift_once();
  }
  uint64_t v67 = Text.font(_:)();
  uint64_t v69 = v68;
  char v71 = v70;
  sub_10000E904(v62, v64, v66 & 1);
  swift_bridgeObjectRelease();
  if (qword_100156188 != -1) {
    swift_once();
  }
  char v72 = v71 & 1;
  uint64_t v73 = Text.fontWeight(_:)();
  uint64_t v75 = v74;
  char v77 = v76;
  sub_10000E904(v67, v69, v72);
  swift_bridgeObjectRelease();
  if (qword_100156178 != -1) {
    swift_once();
  }
  int v149 = v56 & 1;
  int v148 = v151 & 1;
  uint64_t v163 = qword_100159B08;
  swift_retain();
  uint64_t v152 = Text.foregroundStyle<A>(_:)();
  uint64_t v151 = v78;
  uint64_t v129 = v79;
  int v150 = v80 & 1;
  sub_10000E904(v73, v75, v77 & 1);
  swift_release();
  swift_bridgeObjectRelease();
  int v128 = static Edge.Set.bottom.getter();
  EdgeInsets.init(_all:)();
  uint64_t v82 = v81;
  uint64_t v84 = v83;
  uint64_t v86 = v85;
  uint64_t v88 = v87;
  uint64_t v89 = v141;
  Divider.init()();
  char v90 = static Edge.Set.bottom.getter();
  EdgeInsets.init(_all:)();
  uint64_t v92 = v91;
  uint64_t v94 = v93;
  uint64_t v96 = v95;
  uint64_t v98 = v97;
  uint64_t v99 = v142;
  unint64_t v100 = v155;
  uint64_t v101 = v143;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v142 + 16))(v155, v89, v143);
  uint64_t v102 = &v100[*(int *)(v140 + 36)];
  unsigned char *v102 = v90;
  *((void *)v102 + 1) = v92;
  *((void *)v102 + 2) = v94;
  *((void *)v102 + 3) = v96;
  *((void *)v102 + 4) = v98;
  v102[40] = 0;
  (*(void (**)(unsigned char *, uint64_t))(v99 + 8))(v89, v101);
  uint64_t v103 = (uint64_t)v100;
  uint64_t v104 = v154;
  sub_10007A43C((uint64_t)v100, (uint64_t)v154);
  uint64_t v105 = v161;
  uint64_t v143 = *v161;
  uint64_t v141 = (unsigned char *)v161[1];
  uint64_t v106 = v161[3];
  uint64_t v142 = v161[2];
  uint64_t v107 = v144;
  sub_10007A4A4((uint64_t)v161, (uint64_t)v144);
  unint64_t v108 = (*(unsigned __int8 *)(v145 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v145 + 80);
  uint64_t v146 = swift_allocObject();
  sub_10007A50C((uint64_t)v107, v146 + v108);
  uint64_t v109 = (uint64_t)v105;
  uint64_t v110 = v147;
  sub_10007A4A4(v109, (uint64_t)v147);
  Swift::Int v161 = (void *)swift_allocObject();
  sub_10007A50C((uint64_t)v110, (uint64_t)v161 + v108);
  LOBYTE(v108) = v148;
  LOBYTE(v163) = v148;
  LOBYTE(v101) = v149;
  char v162 = v149;
  sub_100009C94((uint64_t)v104, v103, &qword_100158390);
  uint64_t v111 = v158;
  *(void *)a2 = v159;
  *(void *)(a2 + 8) = v111;
  *(unsigned char *)(a2 + 16) = v108;
  *(void *)(a2 + 24) = v160;
  *(unsigned char *)(a2 + 32) = v139;
  uint64_t v112 = v137;
  *(void *)(a2 + 40) = v138;
  *(void *)(a2 + 48) = v112;
  uint64_t v113 = v135;
  *(void *)(a2 + 56) = v136;
  *(void *)(a2 + 64) = v113;
  *(unsigned char *)(a2 + 72) = 0;
  uint64_t v114 = v153;
  *(void *)(a2 + 80) = v156;
  *(void *)(a2 + 88) = v114;
  *(unsigned char *)(a2 + 96) = v101;
  *(void *)(a2 + 104) = v157;
  *(unsigned char *)(a2 + 112) = v134;
  uint64_t v115 = v132;
  *(void *)(a2 + 120) = v133;
  *(void *)(a2 + 128) = v115;
  uint64_t v116 = v130;
  *(void *)(a2 + 136) = v131;
  *(void *)(a2 + 144) = v116;
  *(unsigned char *)(a2 + 152) = 0;
  uint64_t v117 = v152;
  uint64_t v118 = v151;
  *(void *)(a2 + 160) = v152;
  *(void *)(a2 + 168) = v118;
  LOBYTE(v110) = v150;
  *(unsigned char *)(a2 + 176) = v150;
  *(void *)(a2 + 184) = v129;
  *(unsigned char *)(a2 + 192) = v128;
  *(void *)(a2 + 200) = v82;
  *(void *)(a2 + 208) = v84;
  *(void *)(a2 + 216) = v86;
  *(void *)(a2 + 224) = v88;
  *(unsigned char *)(a2 + 232) = 0;
  uint64_t v119 = sub_1000060EC(&qword_100159BE8);
  sub_100009C94(v103, a2 + *(int *)(v119 + 80), &qword_100158390);
  uint64_t v120 = (uint64_t *)(a2 + *(int *)(v119 + 96));
  uint64_t v121 = v141;
  *uint64_t v120 = v143;
  v120[1] = (uint64_t)v121;
  v120[2] = v142;
  v120[3] = v106;
  v120[4] = 0;
  v120[5] = 0;
  uint64_t v122 = v146;
  v120[6] = (uint64_t)sub_10007A570;
  v120[7] = v122;
  uint64_t v123 = v161;
  v120[8] = (uint64_t)sub_10007A834;
  v120[9] = (uint64_t)v123;
  sub_10002FC24(v159, v158, v148);
  swift_bridgeObjectRetain();
  sub_10002FC24(v156, v114, v149);
  swift_bridgeObjectRetain();
  uint64_t v124 = v117;
  uint64_t v125 = v151;
  sub_10002FC24(v124, v151, (char)v110);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100017778((uint64_t)sub_10007A570);
  sub_100017778((uint64_t)sub_10007A834);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000063D0((uint64_t)v154, &qword_100158390);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100077228((uint64_t)sub_10007A570);
  sub_100077228((uint64_t)sub_10007A834);
  sub_1000063D0((uint64_t)v155, &qword_100158390);
  sub_10000E904(v152, v125, v150);
  swift_bridgeObjectRelease();
  sub_10000E904(v156, v153, v162);
  swift_bridgeObjectRelease();
  sub_10000E904(v159, v158, v163);
  return swift_bridgeObjectRelease();
}

void sub_10007A020(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for OpenURLAction();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000060EC((uint64_t *)&unk_100158FC0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for ShazamUpsellViewModel();
  sub_100009C94(a1 + *(int *)(v13 + 40), (uint64_t)v8, (uint64_t *)&unk_100158FC0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1000063D0((uint64_t)v8, (uint64_t *)&unk_100158FC0);
    if (qword_100156018 != -1) {
      swift_once();
    }
    uint64_t v14 = type metadata accessor for Logger();
    sub_10000E808(v14, (uint64_t)qword_100164B38);
    uint64_t v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "Could not open shazam app from appstore component", v17, 2u);
      swift_slowDealloc();
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
    type metadata accessor for ShazamUpsellView();
    sub_1000083D4((uint64_t)v5);
    OpenURLAction.callAsFunction(_:)();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
}

uint64_t sub_10007A320(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v5 = v4;
  if (v3 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v5 == v6)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if ((v8 & 1) == 0) {
      return result;
    }
  }
  uint64_t result = type metadata accessor for ShazamUpsellView();
  uint64_t v10 = (uint64_t (**)(void))(a2 + *(int *)(result + 20));
  if (*v10) {
    return (*v10)();
  }
  return result;
}

unint64_t sub_10007A3E0()
{
  unint64_t result = qword_100159BD8;
  if (!qword_100159BD8)
  {
    sub_100006224(&qword_100159BB8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100159BD8);
  }
  return result;
}

uint64_t sub_10007A43C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000060EC(&qword_100158390);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10007A4A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ShazamUpsellView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10007A50C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ShazamUpsellView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_10007A570()
{
  uint64_t v1 = *(void *)(type metadata accessor for ShazamUpsellView() - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  sub_10007A020(v2);
}

uint64_t sub_10007A5D4()
{
  uint64_t v1 = type metadata accessor for ShazamUpsellView();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v14 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v15 = v0;
  uint64_t v4 = v0 + v3;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = type metadata accessor for ShazamUpsellViewModel();
  uint64_t v6 = v0 + v3 + *(int *)(v5 + 24);
  uint64_t v7 = type metadata accessor for URL();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (!v9(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = v4 + *(int *)(v5 + 40);
  if (!v9(v10, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v10, v7);
  }
  if (*(void *)(v4 + *(int *)(v1 + 20))) {
    swift_release();
  }
  uint64_t v11 = v4 + *(int *)(v1 + 24);
  sub_1000060EC(&qword_100156940);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = type metadata accessor for OpenURLAction();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  }
  else
  {
    swift_release();
  }

  return _swift_deallocObject(v15, v3 + v14, v2 | 7);
}

uint64_t sub_10007A834(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for ShazamUpsellView() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_10007A320(a1, v4);
}

uint64_t sub_10007A8A4()
{
  return sub_10007A908(&qword_100159BF0, &qword_100159BE0, (void (*)(void))sub_10007A8E0);
}

uint64_t sub_10007A8E0()
{
  return sub_10007A908(&qword_100159BF8, &qword_100159BC8, (void (*)(void))sub_10007A988);
}

uint64_t sub_10007A908(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100006224(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10007A988()
{
  unint64_t result = qword_100159C00[0];
  if (!qword_100159C00[0])
  {
    sub_100006224(&qword_100159BC0);
    sub_10007A3E0();
    sub_10005F80C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100159C00);
  }
  return result;
}

uint64_t sub_10007AA04()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for ObservationRegistrar();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_initClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_10007AAE0@<X0>(uint64_t a1@<X8>)
{
  long long v5 = *(_OWORD *)(*(void *)v1 + 80);
  swift_getKeyPath();
  sub_10007ABC0();
  swift_release();
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 96);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a1, v3);
}

uint64_t sub_10007ABC0()
{
  return ObservationRegistrar.access<A, B>(_:keyPath:)();
}

uint64_t sub_10007AC64(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = (uint64_t)a1 + *(void *)(*a1 + 96);
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v3 + 80) - 8) + 24))(v4, a2);
  return swift_endAccess();
}

uint64_t sub_10007AD24()
{
  return ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
}

uint64_t sub_10007AE00()
{
  sub_10007B308();

  return swift_retain();
}

uint64_t sub_10007AE28()
{
  return swift_release();
}

uint64_t sub_10007AED8(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 80);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(a1);
  uint64_t v6 = (char *)&v9 - v5;
  sub_10007AAE0((uint64_t)&v9 - v5);
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(*(void *)(v2 + 88) + 16))(v3);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v7;
}

BOOL sub_10007AFE0(uint64_t a1)
{
  return sub_10007AED8(a1) == 1;
}

uint64_t sub_10007B004(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 80);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(a1);
  uint64_t v6 = (char *)&v8 - v5;
  sub_10007AAE0((uint64_t)&v8 - v5);
  LOBYTE(v2) = (*(uint64_t (**)(uint64_t))(*(void *)(v2 + 88) + 32))(v3);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v2 & 1;
}

uint64_t sub_10007B10C()
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 80) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 96));
  swift_release();
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 112);
  uint64_t v2 = type metadata accessor for ObservationRegistrar();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t sub_10007B1F0()
{
  sub_10007B10C();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v1, v2);
}

uint64_t type metadata accessor for HistoryViewModel()
{
  return sub_100020608();
}

uint64_t sub_10007B260()
{
  return swift_release();
}

uint64_t sub_10007B308()
{
  swift_getKeyPath();
  sub_10007ABC0();
  swift_release();
  return *(void *)(v0 + *(void *)(*(void *)v0 + 104));
}

uint64_t sub_10007B390(unsigned __int8 a1, unsigned __int8 a2)
{
  uint64_t v4 = type metadata accessor for MusicSubscription();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000060EC(&qword_1001577D0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100156550 != -1) {
    swift_once();
  }
  uint64_t v11 = qword_100164EA8;
  swift_getKeyPath();
  v16[1] = v11;
  sub_10007B5F8();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v12 = v11 + OBJC_IVAR____TtC16MusicRecognition33MusicSubscriptionStatusController__musicSubscription;
  swift_beginAccess();
  sub_100023D4C(v12, (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4))
  {
    sub_10007B650((uint64_t)v10);
    int v13 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v10, v4);
    sub_10007B650((uint64_t)v10);
    char v14 = MusicSubscription.canBecomeSubscriber.getter();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    if (v14) {
      int v13 = 0;
    }
    else {
      int v13 = 0x10000;
    }
  }
  return sub_1000D6E40(v13 | a1 | (a2 << 8), 0xD000000000000028, 0x8000000100117950);
}

unint64_t sub_10007B5F8()
{
  unint64_t result = qword_1001577D8;
  if (!qword_1001577D8)
  {
    type metadata accessor for MusicSubscriptionStatusController();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001577D8);
  }
  return result;
}

uint64_t sub_10007B650(uint64_t a1)
{
  uint64_t v2 = sub_1000060EC(&qword_1001577D0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10007B6B0@<X0>(uint64_t a1@<X8>)
{
  return sub_10007AAE0(a1);
}

uint64_t sub_10007B6D4()
{
  return sub_10007B260();
}

uint64_t sub_10007B6F8()
{
  return 16;
}

__n128 sub_10007B704(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_10007B710()
{
  return sub_10007AC64(*(uint64_t **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_10007B72C@<X0>(uint64_t *a1@<X8>)
{
  *a1 = sub_10007B308();

  return swift_retain();
}

uint64_t sub_10007B768()
{
  return sub_10007AE28();
}

uint64_t sub_10007B794()
{
  return 16;
}

__n128 sub_10007B7A0(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_10007B7AC()
{
  *(void *)(*(void *)(v0 + 16) + *(void *)(**(void **)(v0 + 16) + 104)) = *(void *)(v0 + 24);
  swift_retain();
  return swift_release();
}

uint64_t sub_10007B7FC()
{
  uint64_t result = LocalizedStringKey.init(stringLiteral:)();
  qword_100159C88 = result;
  unk_100159C90 = v1;
  byte_100159C98 = v2 & 1;
  qword_100159CA0 = v3;
  return result;
}

void sub_10007B844()
{
  qword_100159CA8 = 0x4024000000000000;
}

void sub_10007B854()
{
  qword_100159CB0 = 0x4030000000000000;
}

void sub_10007B864()
{
  qword_100159CB8 = 0x4062000000000000;
}

uint64_t sub_10007B874()
{
  id v0 = [self secondarySystemBackgroundColor];
  uint64_t result = Color.init(uiColor:)();
  qword_100159CC0 = result;
  return result;
}

uint64_t sub_10007B8B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v47 = a4;
  uint64_t v53 = a5;
  uint64_t v52 = type metadata accessor for RoundedRectangle();
  __chkstk_darwin(v52);
  uint64_t v9 = (uint64_t *)((char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = sub_1000060EC(&qword_100158CA8);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000060EC(&qword_100158CB0);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = sub_1000060EC(&qword_100159CD0);
  __chkstk_darwin(v50);
  uint64_t v17 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = sub_1000060EC(&qword_100159CD8);
  uint64_t v18 = __chkstk_darwin(v51);
  uint64_t v20 = (char *)&v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v49 = (uint64_t)&v46 - v21;
  uint64_t v22 = sub_1000060EC(&qword_100158238);
  uint64_t v23 = __chkstk_darwin(v22 - 8);
  uint64_t v48 = (uint64_t)&v46 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v46 - v25;
  uint64_t v27 = a2;
  uint64_t v28 = a3;
  uint64_t v29 = v47;
  sub_10007BDE8((uint64_t)&v46 - v25);
  *(void *)uint64_t v12 = static HorizontalAlignment.center.getter();
  *((void *)v12 + 1) = 0;
  v12[16] = 0;
  uint64_t v30 = sub_1000060EC(&qword_100159CE0);
  sub_10007C0D4(a1, v27, v28, v29, (uint64_t)&v12[*(int *)(v30 + 44)]);
  uint64_t v31 = static Alignment.leading.getter();
  sub_100042B88(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v15, 0.0, 1, 0.0, 1, v31, v32);
  sub_1000063D0((uint64_t)v12, &qword_100158CA8);
  if (qword_1001561B0 != -1) {
    swift_once();
  }
  uint64_t v33 = qword_100159CC0;
  swift_retain();
  char v34 = static Edge.Set.all.getter();
  sub_100009C94((uint64_t)v15, (uint64_t)v17, &qword_100158CB0);
  uint64_t v35 = &v17[*(int *)(v50 + 36)];
  *(void *)uint64_t v35 = v33;
  v35[8] = v34;
  sub_1000063D0((uint64_t)v15, &qword_100158CB0);
  if (qword_100156198 != -1) {
    swift_once();
  }
  uint64_t v36 = qword_100159CA8;
  uint64_t v37 = (char *)v9 + *(int *)(v52 + 20);
  uint64_t v38 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v39 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v39 - 8) + 104))(v37, v38, v39);
  *uint64_t v9 = v36;
  v9[1] = v36;
  uint64_t v40 = (uint64_t)&v20[*(int *)(v51 + 36)];
  sub_100027118((uint64_t)v9, v40);
  *(_WORD *)(v40 + *(int *)(sub_1000060EC(&qword_100157ED8) + 36)) = 256;
  sub_100009C94((uint64_t)v17, (uint64_t)v20, &qword_100159CD0);
  sub_10002717C((uint64_t)v9);
  sub_1000063D0((uint64_t)v17, &qword_100159CD0);
  uint64_t v41 = v49;
  sub_10007CF00((uint64_t)v20, v49);
  uint64_t v42 = v48;
  sub_100009C94((uint64_t)v26, v48, &qword_100158238);
  sub_100009C94(v41, (uint64_t)v20, &qword_100159CD8);
  uint64_t v43 = v53;
  sub_100009C94(v42, v53, &qword_100158238);
  uint64_t v44 = sub_1000060EC(&qword_100159CE8);
  sub_100009C94((uint64_t)v20, v43 + *(int *)(v44 + 48), &qword_100159CD8);
  sub_1000063D0(v41, &qword_100159CD8);
  sub_1000063D0((uint64_t)v26, &qword_100158238);
  sub_1000063D0((uint64_t)v20, &qword_100159CD8);
  return sub_1000063D0(v42, &qword_100158238);
}

uint64_t sub_10007BDE8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v28 = a1;
  uint64_t v27 = type metadata accessor for AccessibilityTraits();
  uint64_t v25 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  char v2 = (char *)&v23 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_1000060EC(&qword_100158238);
  __chkstk_darwin(v26);
  uint64_t v24 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100156190 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v4 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v6 = v5;
  char v8 = v7 & 1;
  static Font.title2.getter();
  uint64_t v9 = Text.font(_:)();
  uint64_t v11 = v10;
  char v13 = v12;
  swift_release();
  sub_10000E904(v4, v6, v8);
  swift_bridgeObjectRelease();
  static Font.Weight.bold.getter();
  uint64_t v14 = Text.fontWeight(_:)();
  uint64_t v16 = v15;
  char v18 = v17;
  uint64_t v20 = v19;
  sub_10000E904(v9, v11, v13 & 1);
  swift_bridgeObjectRelease();
  uint64_t v29 = v14;
  uint64_t v30 = v16;
  char v31 = v18 & 1;
  uint64_t v32 = v20;
  static AccessibilityTraits.isHeader.getter();
  uint64_t v21 = (uint64_t)v24;
  View.accessibilityAddTraits(_:)();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v2, v27);
  sub_10000E904(v29, v30, v31);
  swift_bridgeObjectRelease();
  ModifiedContent<>.accessibilityIdentifier(_:)();
  return sub_1000063D0(v21, &qword_100158238);
}

uint64_t sub_10007C0D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v45 = a3;
  uint64_t v46 = a5;
  uint64_t v9 = sub_1000060EC(&qword_100159CF0);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v48 = (uint64_t)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v47 = (uint64_t)&v42 - v12;
  sub_10007C56C(a1, a2, a3, a4, (uint64_t)&v42 - v12);
  *(void *)&v83[0] = a3;
  *((void *)&v83[0] + 1) = a4;
  sub_1000060EC(&qword_100159CF8);
  State.wrappedValue.getter();
  uint64_t v13 = LocationViewModel.address.getter();
  uint64_t v43 = v14;
  uint64_t v44 = v13;
  swift_release();
  *(void *)&v83[0] = a1;
  *((void *)&v83[0] + 1) = a2;
  sub_1000060EC(&qword_100159D00);
  State.wrappedValue.getter();
  uint64_t v15 = *(void *)(v70 + 56);
  uint64_t v42 = *(void *)(v70 + 48);
  swift_bridgeObjectRetain();
  swift_release();
  *(void *)&v83[0] = a1;
  *((void *)&v83[0] + 1) = a2;
  State.wrappedValue.getter();
  uint64_t v17 = *(void *)(v70 + 24);
  uint64_t v16 = *(void *)(v70 + 32);
  swift_bridgeObjectRetain();
  swift_release();
  char v18 = (void *)swift_allocObject();
  v18[2] = a1;
  v18[3] = a2;
  void v18[4] = v45;
  v18[5] = a4;
  uint64_t v49 = v42;
  uint64_t v50 = v15;
  uint64_t v51 = v17;
  uint64_t v52 = v16;
  uint64_t v53 = v44;
  uint64_t v54 = v43;
  char v55 = sub_10007CFB8;
  char v56 = v18;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  static Alignment.leading.getter();
  sub_100042BF8(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, &v57, 0.0, 1, 0.0, 1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100077228((uint64_t)sub_10007CFB8);
  char v19 = static Edge.Set.all.getter();
  if (qword_1001561A0 != -1) {
    swift_once();
  }
  EdgeInsets.init(_all:)();
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  char v68 = 0;
  uint64_t v29 = v47;
  uint64_t v28 = v48;
  sub_100009C94(v47, v48, &qword_100159CF0);
  char v30 = v68;
  uint64_t v31 = v46;
  sub_100009C94(v28, v46, &qword_100159CF0);
  uint64_t v32 = *(int *)(sub_1000060EC(&qword_100159D08) + 48);
  long long v77 = v64;
  long long v78 = v65;
  long long v79 = v66;
  long long v80 = v67;
  long long v73 = v60;
  long long v74 = v61;
  uint64_t v33 = (_OWORD *)(v31 + v32);
  long long v75 = v62;
  long long v76 = v63;
  long long v70 = v57;
  long long v71 = v58;
  long long v72 = v59;
  LOBYTE(v81) = v19;
  *(_DWORD *)((char *)&v81 + 1) = *(_DWORD *)v69;
  DWORD1(v81) = *(_DWORD *)&v69[3];
  *((void *)&v81 + 1) = v21;
  *(void *)&v82[0] = v23;
  *((void *)&v82[0] + 1) = v25;
  *(void *)&v82[1] = v27;
  BYTE8(v82[1]) = v30;
  long long v34 = v67;
  long long v35 = v64;
  v33[6] = v63;
  v33[7] = v35;
  long long v36 = v79;
  v33[8] = v78;
  v33[9] = v36;
  long long v37 = v73;
  v33[2] = v72;
  v33[3] = v37;
  long long v38 = v75;
  v33[4] = v74;
  v33[5] = v38;
  long long v39 = v71;
  *uint64_t v33 = v70;
  v33[1] = v39;
  v33[12] = v82[0];
  *(_OWORD *)((char *)v33 + 201) = *(_OWORD *)((char *)v82 + 9);
  long long v40 = v81;
  v33[10] = v34;
  v33[11] = v40;
  sub_100017714((uint64_t)&v70);
  sub_1000063D0(v29, &qword_100159CF0);
  v83[8] = v65;
  v83[9] = v66;
  v83[10] = v67;
  v83[4] = v61;
  v83[5] = v62;
  v83[6] = v63;
  v83[7] = v64;
  v83[0] = v57;
  v83[1] = v58;
  v83[2] = v59;
  v83[3] = v60;
  char v84 = v19;
  *(_DWORD *)uint64_t v85 = *(_DWORD *)v69;
  *(_DWORD *)&v85[3] = *(_DWORD *)&v69[3];
  uint64_t v86 = v21;
  uint64_t v87 = v23;
  uint64_t v88 = v25;
  uint64_t v89 = v27;
  char v90 = v30;
  sub_10007CFC4((uint64_t)v83);
  return sub_1000063D0(v28, &qword_100159CF0);
}

uint64_t sub_10007C56C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v28 = a1;
  uint64_t v35 = a5;
  uint64_t v8 = type metadata accessor for AccessibilityChildBehavior();
  uint64_t v33 = *(void *)(v8 - 8);
  uint64_t v34 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = type metadata accessor for LocationView();
  uint64_t v11 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000060EC(&qword_100159D10);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1000060EC(&qword_100159D18);
  uint64_t v31 = *(void *)(v17 - 8);
  uint64_t v32 = v17;
  __chkstk_darwin(v17);
  char v19 = (char *)&v28 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_1000060EC(&qword_100159CF0);
  __chkstk_darwin(v29);
  uint64_t v21 = (char *)&v28 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v38 = a3;
  *((void *)&v38 + 1) = a4;
  sub_1000060EC(&qword_100159CF8);
  State.wrappedValue.getter();
  *(void *)&long long v38 = v28;
  *((void *)&v38 + 1) = a2;
  sub_1000060EC(&qword_100159D00);
  State.wrappedValue.getter();
  swift_retain();
  swift_release();
  LocationView.init(viewModel:strokeColor:)();
  if (qword_1001561A8 != -1) {
    swift_once();
  }
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v22 = v30;
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v16, v13, v30);
  uint64_t v23 = &v16[*(int *)(v14 + 36)];
  long long v24 = v39;
  *(_OWORD *)uint64_t v23 = v38;
  *((_OWORD *)v23 + 1) = v24;
  *((_OWORD *)v23 + 2) = v40;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v22);
  static AccessibilityChildBehavior.combine.getter();
  unint64_t v25 = sub_10007D028();
  View.accessibilityElement(children:)();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v10, v34);
  sub_1000063D0((uint64_t)v16, &qword_100159D10);
  uint64_t v36 = v14;
  unint64_t v37 = v25;
  swift_getOpaqueTypeConformance2();
  uint64_t v26 = v32;
  View.accessibilityIdentifier(_:)();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v19, v26);
  ModifiedContent<>.accessibilityHidden(_:)();
  return sub_1000063D0((uint64_t)v21, &qword_100159CF0);
}

uint64_t sub_10007C9C0()
{
  sub_1000060EC(&qword_100159D00);
  State.wrappedValue.getter();
  sub_1000060EC(&qword_100159CF8);
  State.wrappedValue.getter();
  id v0 = (void *)LocationViewModel.location.getter();
  swift_release();
  [v0 coordinate];
  double v2 = v1;
  double v4 = v3;

  State.wrappedValue.getter();
  uint64_t v5 = LocationViewModel.address.getter();
  char v7 = v6;
  swift_release();
  sub_1000C11F4(v2, v4, v5, v7);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10007CAC4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v6 = v1[2];
  uint64_t v5 = v1[3];
  *(void *)a1 = static HorizontalAlignment.leading.getter();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  uint64_t v7 = sub_1000060EC(&qword_100159CC8);
  return sub_10007B8B4(v3, v4, v6, v5, a1 + *(int *)(v7 + 44));
}

uint64_t sub_10007CB34(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  type metadata accessor for LocationModuleModel();
  swift_allocObject();
  uint64_t v16 = sub_1000C0EC0(a1, v11, a3);
  State.init(wrappedValue:)();
  uint64_t v12 = v17;
  type metadata accessor for LocationViewModel();
  swift_retain();
  id v13 = a4;
  uint64_t v16 = LocationViewModel.__allocating_init(location:artworkView:)();
  State.init(wrappedValue:)();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a2, v8);
  return v12;
}

uint64_t destroy for LocationModuleView()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

void *initializeWithCopy for LocationModuleView(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for LocationModuleView(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for LocationModuleView(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  swift_release();
  a1[1] = a2[1];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for LocationModuleView(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LocationModuleView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LocationModuleView()
{
  return &type metadata for LocationModuleView;
}

uint64_t sub_10007CEE4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10007CF00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000060EC(&qword_100159CD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10007CF68()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10007CFB8()
{
  return sub_10007C9C0();
}

uint64_t sub_10007CFC4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100077228(v2);
  return a1;
}

unint64_t sub_10007D028()
{
  unint64_t result = qword_100159D20;
  if (!qword_100159D20)
  {
    sub_100006224(&qword_100159D10);
    sub_10007D0A4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100159D20);
  }
  return result;
}

unint64_t sub_10007D0A4()
{
  unint64_t result = qword_100159D28;
  if (!qword_100159D28)
  {
    type metadata accessor for LocationView();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100159D28);
  }
  return result;
}

unint64_t sub_10007D100()
{
  unint64_t result = qword_100159D30;
  if (!qword_100159D30)
  {
    sub_100006224(&qword_100159D38);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100159D30);
  }
  return result;
}

uint64_t sub_10007D15C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10007D170);
}

uint64_t sub_10007D170(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000060EC((uint64_t *)&unk_100158FC0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 24);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_10007D238(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10007D24C);
}

uint64_t sub_10007D24C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1000060EC((uint64_t *)&unk_100158FC0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 24) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for AnyArtist()
{
  uint64_t result = qword_100159D98;
  if (!qword_100159D98) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10007D35C()
{
  sub_10000ABC4();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_10007D3F0(uint64_t a1)
{
  uint64_t v2 = (void *)(v1 + *(int *)(a1 + 20));
  uint64_t v3 = v2[3];
  uint64_t v4 = v2[4];
  sub_100010740(v2, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 16))(v3, v4);
}

uint64_t sub_10007D448(uint64_t a1)
{
  uint64_t v2 = (void *)(v1 + *(int *)(a1 + 20));
  uint64_t v3 = v2[3];
  uint64_t v4 = v2[4];
  sub_100010740(v2, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 24))(v3, v4);
}

uint64_t sub_10007D4A0(uint64_t a1)
{
  uint64_t v2 = (void *)(v1 + *(int *)(a1 + 20));
  uint64_t v3 = v2[3];
  uint64_t v4 = v2[4];
  sub_100010740(v2, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 32))(v3, v4);
}

uint64_t sub_10007D500(uint64_t a1)
{
  uint64_t v2 = (void *)(v1 + *(int *)(a1 + 20));
  uint64_t v3 = v2[3];
  uint64_t v4 = v2[4];
  sub_100010740(v2, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 40))(v3, v4);
}

uint64_t sub_10007D558(uint64_t a1)
{
  uint64_t v2 = (void *)(v1 + *(int *)(a1 + 20));
  uint64_t v3 = v2[3];
  uint64_t v4 = v2[4];
  sub_100010740(v2, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 48))(v3, v4);
}

uint64_t sub_10007D5B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (void *)(v3 + *(int *)(a3 + 20));
  uint64_t v7 = v6[3];
  uint64_t v8 = v6[4];
  sub_100010740(v6, v7);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(a1, a2, v7, v8);
}

uint64_t sub_10007D628()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  if (v4 < 0.0 || v4 > 1.0)
  {
    BOOL v2 = sub_10007D7D0();
    swift_getKeyPath();
    swift_getKeyPath();
    if (v2)
    {
      static Published.subscript.getter();
      swift_release();
      uint64_t result = swift_release();
      if (v4 <= 1.0) {
        return result;
      }
      swift_getKeyPath();
      swift_getKeyPath();
    }
    swift_retain();
    uint64_t v3 = static Published.subscript.setter();
    return sub_10007D628(v3);
  }
  return result;
}

double sub_10007D75C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

BOOL sub_10007D7D0()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (v1 < 0.0) {
    return 0;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return (~*(void *)&v1 & 0x7FF0000000000000) != 0 || (*(void *)&v1 & 0xFFFFFFFFFFFFFLL) == 0;
}

uint64_t sub_10007D8B4()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_10007D928()
{
  return sub_10007D628();
}

uint64_t sub_10007D9F0()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MusicRecognition27SongPreviewStatusController__progress;
  uint64_t v2 = sub_1000060EC(&qword_100159EB0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC16MusicRecognition27SongPreviewStatusController__playbackStatus;
  uint64_t v4 = sub_1000060EC(&qword_100159EB8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v6 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v5, v6);
}

uint64_t sub_10007DADC()
{
  return type metadata accessor for SongPreviewStatusController();
}

uint64_t type metadata accessor for SongPreviewStatusController()
{
  uint64_t result = qword_100159E08;
  if (!qword_100159E08) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10007DB30()
{
  sub_10007DC18(319, &qword_100159E18);
  if (v0 <= 0x3F)
  {
    sub_10007DC18(319, (unint64_t *)&unk_100159E20);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_10007DC18(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = type metadata accessor for Published();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for SongPreviewStatusController.PlaybackStatus(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10007DD2CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SongPreviewStatusController.PlaybackStatus()
{
  return &type metadata for SongPreviewStatusController.PlaybackStatus;
}

unint64_t sub_10007DD68()
{
  unint64_t result = qword_100159EA8;
  if (!qword_100159EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100159EA8);
  }
  return result;
}

uint64_t sub_10007DDCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t *a8@<X8>)
{
  uint64_t v32 = a5;
  uint64_t v37 = a4;
  uint64_t v38 = a3;
  uint64_t v36 = a2;
  uint64_t v34 = a1;
  uint64_t v11 = sub_1000060EC(&qword_100158940);
  __chkstk_darwin(v11 - 8);
  uint64_t v35 = (uint64_t)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for URL();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v15);
  uint64_t v20 = (char *)&v30 - v19;
  uint64_t v31 = (uint64_t)&v30 - v19;
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v30 - v21;
  uint64_t v23 = (uint64_t *)((char *)a8 + *(int *)(type metadata accessor for ContextMenuForSubscribedUserView() + 24));
  *uint64_t v23 = swift_getKeyPath();
  sub_1000060EC(&qword_100156940);
  swift_storeEnumTagMultiPayload();
  uint64_t v33 = a8;
  *a8 = a6;
  a8[1] = a7;
  long long v24 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  v24(v22, v36, v13);
  v24(v20, v38, v13);
  v24(v17, v37, v13);
  uint64_t v25 = v32;
  sub_100009C94(v32, v35, &qword_100158940);
  type metadata accessor for ContextMenuForSubscribedUserViewModel();
  swift_allocObject();
  sub_100017778(a6);
  uint64_t v39 = sub_1000DFA38(v34, (uint64_t)v22, v31, (uint64_t)v17, v35);
  State.init(wrappedValue:)();
  sub_100077228(a6);
  swift_release();
  sub_1000063D0(v25, &qword_100158940);
  uint64_t v26 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
  v26(v37, v13);
  v26(v38, v13);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))v26)(v36, v13);
  uint64_t v28 = v41;
  uint64_t v29 = v33;
  v33[2] = v40;
  void v29[3] = v28;
  return result;
}

uint64_t type metadata accessor for ContextMenuForSubscribedUserView()
{
  uint64_t result = qword_100159F38;
  if (!qword_100159F38) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10007E0F8()
{
  qword_100159EC0 = 0x73697370696C6C65;
  *(void *)algn_100159EC8 = 0xE800000000000000;
}

void sub_10007E11C()
{
  qword_100159ED0 = 0x6461622E74786574;
  *(void *)algn_100159ED8 = 0xEF73756C702E6567;
}

uint64_t sub_10007E14C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v108 = a1;
  uint64_t v102 = type metadata accessor for NavigationBarButtonStyle();
  uint64_t v3 = __chkstk_darwin(v102);
  uint64_t v106 = (uint64_t *)((char *)v70 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v3);
  uint64_t v107 = (uint64_t)v70 - v5;
  uint64_t v104 = type metadata accessor for ButtonMenuStyle();
  uint64_t v105 = *(void *)(v104 - 8);
  __chkstk_darwin(v104);
  uint64_t v98 = (char *)v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = type metadata accessor for URL();
  uint64_t v94 = *(void *)(v96 - 8);
  __chkstk_darwin(v96);
  uint64_t v92 = (char *)v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ContextMenuForSubscribedUserView();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8 - 8);
  uint64_t v82 = sub_1000060EC(&qword_100159F78);
  uint64_t v83 = *(void *)(v82 - 8);
  __chkstk_darwin(v82);
  long long v74 = (char *)v70 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = sub_1000060EC(&qword_100159F80);
  uint64_t v85 = *(void *)(v84 - 8);
  __chkstk_darwin(v84);
  uint64_t v110 = (char *)v70 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = sub_1000060EC(&qword_100159F88);
  uint64_t v91 = *(void *)(v89 - 8);
  __chkstk_darwin(v89);
  uint64_t v111 = (char *)v70 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = sub_1000060EC(&qword_100159F90);
  uint64_t v95 = *(void *)(v93 - 8);
  __chkstk_darwin(v93);
  uint64_t v88 = (char *)v70 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = sub_1000060EC(&qword_100159F98);
  uint64_t v97 = *(void *)(v87 - 8);
  __chkstk_darwin(v87);
  char v90 = (char *)v70 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = sub_1000060EC(&qword_100159FA0);
  uint64_t v101 = *(void *)(v103 - 8);
  __chkstk_darwin(v103);
  uint64_t v86 = (char *)v70 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = sub_1000060EC(&qword_100159FA8);
  __chkstk_darwin(v100);
  uint64_t v99 = (char *)v70 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v81 = type metadata accessor for ContextMenuForSubscribedUserView;
  uint64_t v76 = (uint64_t)v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100083B58(v1, v76, (uint64_t (*)(void))type metadata accessor for ContextMenuForSubscribedUserView);
  uint64_t v18 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v79 = ((v18 + 16) & ~v18) + v10;
  uint64_t v19 = (v18 + 16) & ~v18;
  uint64_t v80 = v19;
  uint64_t v78 = v18 | 7;
  uint64_t v20 = swift_allocObject();
  long long v77 = type metadata accessor for ContextMenuForSubscribedUserView;
  sub_100083AF0((uint64_t)v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v20 + v19, (uint64_t (*)(void))type metadata accessor for ContextMenuForSubscribedUserView);
  uint64_t v113 = v2;
  sub_1000060EC(&qword_100156AD8);
  sub_1000060EC(&qword_100159FB0);
  uint64_t v115 = &type metadata for Image;
  uint64_t v116 = &protocol witness table for Image;
  swift_getOpaqueTypeConformance2();
  sub_100006480(&qword_100159FB8, &qword_100159FB0);
  Menu.init(onPresentationChanged:content:label:)();
  uint64_t v71 = LocalizedStringKey.init(_:)();
  v70[1] = v21;
  uint64_t v22 = *(void *)(v2 + 24);
  uint64_t v121 = *(void *)(v2 + 16);
  uint64_t v122 = v22;
  uint64_t v109 = sub_1000060EC(&qword_100159FC0);
  State.projectedValue.getter();
  uint64_t v23 = v115;
  long long v24 = v116;
  uint64_t v25 = v117;
  swift_getKeyPath();
  uint64_t v115 = v23;
  uint64_t v116 = v24;
  uint64_t v117 = v25;
  uint64_t v75 = sub_1000060EC(&qword_100159FC8);
  Binding.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v112 = v2;
  uint64_t v72 = sub_1000060EC(&qword_100157D20);
  uint64_t v73 = sub_100006480(&qword_100159FD0, &qword_100159F78);
  uint64_t v26 = sub_1000837B0((unint64_t *)&qword_100157D40, &qword_100157D20, &qword_100157D48, &qword_100157D50);
  uint64_t v27 = (void *)v82;
  uint64_t v28 = v74;
  View.confirmationDialog<A, B>(_:isPresented:titleVisibility:actions:message:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  (*(void (**)(char *, void *))(v83 + 8))(v28, v27);
  uint64_t v29 = *(void *)(v2 + 24);
  uint64_t v121 = *(void *)(v2 + 16);
  uint64_t v122 = v29;
  State.projectedValue.getter();
  uint64_t v30 = v115;
  uint64_t v31 = v116;
  uint64_t v32 = v117;
  swift_getKeyPath();
  uint64_t v115 = v30;
  uint64_t v116 = v31;
  uint64_t v117 = v32;
  Binding.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v33 = v76;
  sub_100083B58(v2, v76, (uint64_t (*)(void))v81);
  uint64_t v34 = swift_allocObject();
  sub_100083AF0(v33, v34 + v80, (uint64_t (*)(void))v77);
  uint64_t v83 = sub_1000060EC(&qword_100159FD8);
  uint64_t v115 = v27;
  uint64_t v116 = (void *)v72;
  uint64_t v117 = &type metadata for Text;
  uint64_t v118 = v73;
  uint64_t v119 = v26;
  uint64_t v120 = &protocol witness table for Text;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v36 = sub_100006480(&qword_100159FE0, &qword_100159FD8);
  uint64_t v37 = (void *)v84;
  uint64_t v38 = v110;
  View.sheet<A>(isPresented:onDismiss:content:)();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, void *))(v85 + 8))(v38, v37);
  uint64_t v39 = *(void *)(v2 + 24);
  uint64_t v121 = *(void *)(v2 + 16);
  uint64_t v122 = v39;
  State.projectedValue.getter();
  uint64_t v40 = v115;
  uint64_t v41 = v116;
  uint64_t v42 = v117;
  swift_getKeyPath();
  uint64_t v115 = v40;
  uint64_t v116 = v41;
  uint64_t v117 = v42;
  Binding.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v43 = *(void **)(v2 + 24);
  uint64_t v115 = *(void **)(v2 + 16);
  uint64_t v116 = v43;
  State.wrappedValue.getter();
  uint64_t v44 = v94;
  uint64_t v45 = v92;
  uint64_t v46 = v96;
  (*(void (**)(char *, uint64_t, uint64_t))(v94 + 16))(v92, v114 + OBJC_IVAR____TtC16MusicRecognition20ContextMenuViewModel_shazamURL, v96);
  swift_release();
  uint64_t v115 = v37;
  uint64_t v116 = (void *)v83;
  uint64_t v117 = (void *)OpaqueTypeConformance2;
  uint64_t v118 = v36;
  uint64_t v69 = swift_getOpaqueTypeConformance2();
  uint64_t v47 = v89;
  uint64_t v48 = v88;
  uint64_t v49 = v86;
  uint64_t v50 = v111;
  View.sharingPicker(isPresented:item:subject:message:)();
  uint64_t v51 = (void *)v102;
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v45, v46);
  uint64_t v52 = (void *)v47;
  (*(void (**)(char *, uint64_t))(v91 + 8))(v50, v47);
  uint64_t v53 = v98;
  ButtonMenuStyle.init()();
  uint64_t v115 = v52;
  uint64_t v116 = (void *)v69;
  uint64_t v54 = swift_getOpaqueTypeConformance2();
  uint64_t v55 = sub_10008362C(&qword_100156B08, (void (*)(uint64_t))&type metadata accessor for ButtonMenuStyle);
  char v56 = v90;
  long long v57 = (void *)v93;
  long long v58 = (void *)v104;
  View.menuStyle<A>(_:)();
  (*(void (**)(char *, void *))(v105 + 8))(v53, v58);
  (*(void (**)(char *, void *))(v95 + 8))(v48, v57);
  uint64_t KeyPath = swift_getKeyPath();
  long long v60 = v106;
  *uint64_t v106 = KeyPath;
  sub_1000060EC(&qword_100156938);
  swift_storeEnumTagMultiPayload();
  uint64_t v61 = (uint64_t)v60;
  uint64_t v62 = v107;
  sub_100083AF0(v61, v107, (uint64_t (*)(void))type metadata accessor for NavigationBarButtonStyle);
  uint64_t v115 = v57;
  uint64_t v116 = v58;
  uint64_t v117 = (void *)v54;
  uint64_t v118 = v55;
  uint64_t v63 = swift_getOpaqueTypeConformance2();
  uint64_t v64 = sub_10008362C(&qword_100156B10, (void (*)(uint64_t))type metadata accessor for NavigationBarButtonStyle);
  long long v65 = (void *)v87;
  View.buttonStyle<A>(_:)();
  sub_10000E840(v62, (uint64_t (*)(void))type metadata accessor for NavigationBarButtonStyle);
  (*(void (**)(char *, void *))(v97 + 8))(v56, v65);
  if (qword_100156310 != -1) {
    swift_once();
  }
  uint64_t v115 = v65;
  uint64_t v116 = v51;
  uint64_t v117 = (void *)v63;
  uint64_t v118 = v64;
  swift_getOpaqueTypeConformance2();
  uint64_t v66 = (uint64_t)v99;
  uint64_t v67 = v103;
  View.accessibilityIdentifier(_:)();
  (*(void (**)(char *, uint64_t))(v101 + 8))(v49, v67);
  uint64_t v115 = (void *)qword_100164CF0;
  uint64_t v116 = *(void **)algn_100164CF8;
  sub_10000E0F0();
  ModifiedContent<>.accessibilityLabel<A>(_:)();
  return sub_1000063D0(v66, &qword_100159FA8);
}

uint64_t sub_10007F18C@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v40 = a2;
  uint64_t v39 = sub_1000060EC(&qword_100156B28);
  uint64_t v42 = *(void *)(v39 - 8);
  uint64_t v3 = __chkstk_darwin(v39);
  uint64_t v38 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v37 = (char *)&v31 - v6;
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v41 = (char *)&v31 - v8;
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v31 - v9;
  uint64_t v36 = sub_1000060EC(&qword_10015A008);
  uint64_t v34 = *(void *)(v36 - 8);
  uint64_t v11 = v34;
  uint64_t v12 = __chkstk_darwin(v36);
  uint64_t v35 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v31 - v14;
  LocalizedStringKey.init(_:)();
  uint64_t v45 = a1;
  sub_1000060EC(&qword_10015A010);
  sub_100006480(&qword_10015A018, &qword_10015A010);
  uint64_t v33 = v15;
  Section<>.init(_:content:)();
  uint64_t v44 = a1;
  sub_1000060EC(&qword_100156B30);
  sub_1000837B0((unint64_t *)&qword_100156B38, &qword_100156B30, &qword_100156B40, &qword_100156B48);
  uint64_t v32 = v10;
  Section<>.init(content:)();
  uint64_t v43 = a1;
  uint64_t v16 = v41;
  Section<>.init(content:)();
  uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  uint64_t v18 = v35;
  uint64_t v17 = v36;
  v31(v35, v15, v36);
  uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v42 + 16);
  uint64_t v20 = v37;
  int v21 = v10;
  uint64_t v22 = v39;
  v19(v37, v21, v39);
  uint64_t v23 = v38;
  v19(v38, v16, v22);
  long long v24 = v40;
  v31(v40, v18, v17);
  uint64_t v25 = sub_1000060EC(&qword_10015A020);
  v19(&v24[*(int *)(v25 + 48)], v20, v22);
  uint64_t v26 = &v24[*(int *)(v25 + 64)];
  uint64_t v27 = v23;
  v19(v26, v23, v22);
  uint64_t v28 = *(void (**)(char *, uint64_t))(v42 + 8);
  v28(v41, v22);
  v28(v32, v22);
  uint64_t v29 = *(void (**)(char *, uint64_t))(v34 + 8);
  v29(v33, v17);
  v28(v27, v22);
  v28(v20, v22);
  return ((uint64_t (*)(char *, uint64_t))v29)(v18, v17);
}

uint64_t sub_10007F614@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v86 = a2;
  uint64_t v3 = sub_1000060EC(&qword_10015A028);
  uint64_t v80 = *(void *)(v3 - 8);
  uint64_t v81 = v3;
  __chkstk_darwin(v3);
  uint64_t v78 = (char *)&v75 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000060EC(&qword_10015A030);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v79 = (char *)&v75 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v85 = (uint64_t)&v75 - v8;
  uint64_t v9 = type metadata accessor for ContextMenuForSubscribedUserView();
  uint64_t v87 = *(char **)(v9 - 8);
  __chkstk_darwin(v9 - 8);
  long long v77 = v10;
  uint64_t v11 = (char *)&v75 - (((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000060EC(&qword_100156B48);
  uint64_t v90 = *(void *)(v12 - 8);
  uint64_t v91 = v12;
  __chkstk_darwin(v12);
  uint64_t v89 = (char *)&v75 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = sub_1000060EC(&qword_100156B30);
  uint64_t v75 = *(void *)(v76 - 8);
  uint64_t v14 = __chkstk_darwin(v76);
  uint64_t v84 = (uint64_t)&v75 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v83 = (char *)&v75 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v82 = (uint64_t)&v75 - v19;
  __chkstk_darwin(v18);
  uint64_t v94 = (uint64_t)&v75 - v20;
  uint64_t v21 = sub_1000060EC(&qword_100158940);
  __chkstk_darwin(v21 - 8);
  uint64_t v23 = (char *)&v75 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for StreamingService();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = *(void *)(v25 + 64);
  uint64_t v27 = __chkstk_darwin(v24);
  uint64_t v28 = (char *)&v75 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  uint64_t v30 = (char *)&v75 - v29;
  uint64_t v31 = sub_1000060EC(&qword_10015A038);
  uint64_t v32 = __chkstk_darwin(v31 - 8);
  uint64_t v92 = (uint64_t)&v75 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  uint64_t v35 = (char *)&v75 - v34;
  uint64_t v36 = *(void *)(a1 + 16);
  uint64_t v37 = *(void *)(a1 + 24);
  uint64_t v88 = a1;
  uint64_t v95 = v36;
  uint64_t v96 = v37;
  sub_1000060EC(&qword_100159FC0);
  State.wrappedValue.getter();
  sub_100009C94(v97 + OBJC_IVAR____TtC16MusicRecognition37ContextMenuForSubscribedUserViewModel_classicalProvider, (uint64_t)v23, &qword_100158940);
  swift_release();
  int v38 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24);
  uint64_t v93 = v35;
  if (v38 == 1)
  {
    sub_1000063D0((uint64_t)v23, &qword_100158940);
    uint64_t v39 = 1;
    uint64_t v40 = (uint64_t)v11;
    uint64_t v41 = v35;
    uint64_t v42 = v77;
  }
  else
  {
    sub_100083AF0((uint64_t)v23, (uint64_t)v30, (uint64_t (*)(void))type metadata accessor for StreamingService);
    uint64_t v43 = (uint64_t)v11;
    uint64_t v44 = v88;
    uint64_t v45 = v43;
    sub_100083B58(v88, v43, (uint64_t (*)(void))type metadata accessor for ContextMenuForSubscribedUserView);
    sub_100083B58((uint64_t)v30, (uint64_t)v28, (uint64_t (*)(void))type metadata accessor for StreamingService);
    unint64_t v46 = (v87[80] + 16) & ~(unint64_t)v87[80];
    uint64_t v47 = *(unsigned __int8 *)(v25 + 80);
    uint64_t v48 = v77;
    unint64_t v49 = ((unint64_t)v77 + v47 + v46) & ~v47;
    uint64_t v50 = swift_allocObject();
    sub_100083AF0(v45, v50 + v46, (uint64_t (*)(void))type metadata accessor for ContextMenuForSubscribedUserView);
    uint64_t v51 = sub_100083AF0((uint64_t)v28, v50 + v49, (uint64_t (*)(void))type metadata accessor for StreamingService);
    __chkstk_darwin(v51);
    *(&v75 - 2) = v44;
    *(&v75 - 1) = (uint64_t)v30;
    sub_1000060EC(&qword_100156748);
    sub_100006480(&qword_100156780, &qword_100156748);
    uint64_t v52 = v89;
    Button.init(action:label:)();
    sub_100006480(&qword_100156B40, &qword_100156B48);
    uint64_t v53 = v94;
    uint64_t v54 = v91;
    View.accessibilityIdentifier(_:)();
    (*(void (**)(char *, uint64_t))(v90 + 8))(v52, v54);
    sub_10000E840((uint64_t)v30, (uint64_t (*)(void))type metadata accessor for StreamingService);
    uint64_t v55 = v53;
    uint64_t v56 = (uint64_t)v93;
    sub_100009C30(v55, (uint64_t)v93, &qword_100156B30);
    uint64_t v39 = 0;
    uint64_t v40 = v45;
    uint64_t v41 = (char *)v56;
    uint64_t v42 = v48;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v75 + 56))(v41, v39, 1, v76);
  long long v77 = type metadata accessor for ContextMenuForSubscribedUserView;
  uint64_t v57 = v88;
  sub_100083B58(v88, v40, (uint64_t (*)(void))type metadata accessor for ContextMenuForSubscribedUserView);
  unint64_t v58 = (v87[80] + 16) & ~(unint64_t)v87[80];
  uint64_t v87 = (char *)v42 + v58;
  uint64_t v59 = swift_allocObject();
  sub_100083AF0(v40, v59 + v58, (uint64_t (*)(void))type metadata accessor for ContextMenuForSubscribedUserView);
  sub_1000060EC(&qword_100158178);
  sub_100006480(&qword_100158198, &qword_100158178);
  long long v60 = v78;
  Button.init(action:label:)();
  sub_100006480(&qword_10015A040, &qword_10015A028);
  uint64_t v61 = (uint64_t)v79;
  uint64_t v62 = v81;
  View.accessibilityIdentifier(_:)();
  (*(void (**)(char *, uint64_t))(v80 + 8))(v60, v62);
  uint64_t v63 = v85;
  sub_100009C30(v61, v85, &qword_10015A030);
  sub_10008016C(v94);
  sub_100083B58(v57, v40, (uint64_t (*)(void))v77);
  uint64_t v64 = swift_allocObject();
  sub_100083AF0(v40, v64 + v58, (uint64_t (*)(void))type metadata accessor for ContextMenuForSubscribedUserView);
  sub_1000060EC(&qword_100156748);
  sub_100006480(&qword_100156780, &qword_100156748);
  long long v65 = v89;
  Button.init(action:label:)();
  sub_100006480(&qword_100156B40, &qword_100156B48);
  uint64_t v66 = (uint64_t)v83;
  uint64_t v67 = v91;
  View.accessibilityIdentifier(_:)();
  (*(void (**)(char *, uint64_t))(v90 + 8))(v65, v67);
  uint64_t v68 = v82;
  sub_100009C30(v66, v82, &qword_100156B30);
  uint64_t v69 = v92;
  sub_100009C94((uint64_t)v93, v92, &qword_10015A038);
  sub_100009C94(v63, v61, &qword_10015A030);
  uint64_t v70 = v94;
  sub_100009C94(v94, v66, &qword_100156B30);
  uint64_t v71 = v84;
  sub_100009C94(v68, v84, &qword_100156B30);
  uint64_t v72 = v86;
  sub_100009C94(v69, v86, &qword_10015A038);
  uint64_t v73 = (int *)sub_1000060EC(&qword_10015A048);
  sub_100009C94(v61, v72 + v73[12], &qword_10015A030);
  sub_100009C94(v66, v72 + v73[16], &qword_100156B30);
  sub_100009C94(v71, v72 + v73[20], &qword_100156B30);
  sub_1000063D0(v68, &qword_100156B30);
  sub_1000063D0(v70, &qword_100156B30);
  sub_1000063D0(v63, &qword_10015A030);
  sub_1000063D0((uint64_t)v93, &qword_10015A038);
  sub_1000063D0(v71, &qword_100156B30);
  sub_1000063D0(v66, &qword_100156B30);
  sub_1000063D0(v61, &qword_10015A030);
  return sub_1000063D0(v92, &qword_10015A038);
}

uint64_t sub_10008016C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v26 = a1;
  uint64_t v3 = type metadata accessor for ContextMenuForSubscribedUserView();
  uint64_t v23 = *(void *)(v3 - 8);
  uint64_t v4 = *(void *)(v23 + 64);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = sub_1000060EC(&qword_100158370);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000060EC(&qword_100156B48);
  uint64_t v24 = *(void *)(v8 - 8);
  uint64_t v25 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(v1 + 24);
  uint64_t v27 = *(void *)(v1 + 16);
  uint64_t v28 = v11;
  sub_1000060EC(&qword_100159FC0);
  State.wrappedValue.getter();
  uint64_t v12 = v29;
  swift_getKeyPath();
  uint64_t v27 = v12;
  sub_10008362C(&qword_100159FF0, (void (*)(uint64_t))type metadata accessor for ContextMenuForSubscribedUserViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  int v13 = *(unsigned __int8 *)(v12
                           + OBJC_IVAR____TtC16MusicRecognition37ContextMenuForSubscribedUserViewModel__isSongInLibrary);
  swift_release();
  if (v13 == 1) {
    static ButtonRole.destructive.getter();
  }
  else {
    static ButtonRole.cancel.getter();
  }
  uint64_t v14 = type metadata accessor for ButtonRole();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v7, 0, 1, v14);
  sub_100083B58(v2, (uint64_t)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for ContextMenuForSubscribedUserView);
  unint64_t v15 = (*(unsigned __int8 *)(v23 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  uint64_t v16 = swift_allocObject();
  uint64_t v17 = sub_100083AF0((uint64_t)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v16 + v15, (uint64_t (*)(void))type metadata accessor for ContextMenuForSubscribedUserView);
  __chkstk_darwin(v17);
  *(&v22 - 2) = v2;
  sub_1000060EC(&qword_100156748);
  sub_100006480(&qword_100156780, &qword_100156748);
  Button.init(role:action:label:)();
  uint64_t v18 = *(void *)(v2 + 24);
  uint64_t v27 = *(void *)(v2 + 16);
  uint64_t v28 = v18;
  State.wrappedValue.getter();
  uint64_t v19 = v29;
  swift_getKeyPath();
  uint64_t v27 = v19;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_release();
  sub_100006480(&qword_100156B40, &qword_100156B48);
  uint64_t v20 = v25;
  View.accessibilityIdentifier(_:)();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v10, v20);
}

uint64_t sub_100080604@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v3 = type metadata accessor for ContextMenuForSubscribedUserView();
  uint64_t v28 = *(void *)(v3 - 8);
  uint64_t v4 = *(void *)(v28 + 64);
  __chkstk_darwin(v3 - 8);
  uint64_t v26 = (uint64_t)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000060EC(&qword_100156B48);
  uint64_t v29 = *(void *)(v5 - 8);
  uint64_t v30 = v5;
  __chkstk_darwin(v5);
  uint64_t v27 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for URL();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  int v13 = (char *)&v25 - v12;
  uint64_t v14 = *(void *)(a1 + 24);
  uint64_t v32 = *(void *)(a1 + 16);
  uint64_t v33 = v14;
  sub_1000060EC(&qword_100159FC0);
  State.wrappedValue.getter();
  unint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v15(v13, v34 + OBJC_IVAR____TtC16MusicRecognition20ContextMenuViewModel_shazamAppStoreURL, v7);
  swift_release();
  uint64_t v16 = a1;
  uint64_t v17 = v26;
  sub_100083B58(v16, v26, (uint64_t (*)(void))type metadata accessor for ContextMenuForSubscribedUserView);
  v15(v11, (uint64_t)v13, v7);
  unint64_t v18 = (*(unsigned __int8 *)(v28 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  unint64_t v19 = (v4 + *(unsigned __int8 *)(v8 + 80) + v18) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v20 = swift_allocObject();
  uint64_t v21 = v20 + v18;
  uint64_t v22 = v27;
  sub_100083AF0(v17, v21, (uint64_t (*)(void))type metadata accessor for ContextMenuForSubscribedUserView);
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v20 + v19, v11, v7);
  sub_1000060EC(&qword_100156748);
  sub_100006480(&qword_100156780, &qword_100156748);
  Button.init(action:label:)();
  if (qword_100156318 != -1) {
    swift_once();
  }
  sub_100006480(&qword_100156B40, &qword_100156B48);
  uint64_t v23 = v30;
  View.accessibilityIdentifier(_:)();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v22, v23);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v13, v7);
}

uint64_t sub_100080A18()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for ContextMenuForSubscribedUserView();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2 - 8);
  uint64_t v5 = sub_1000060EC(&qword_100156B48);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v20[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_1000060EC(&qword_100156B30);
  __chkstk_darwin(v9);
  uint64_t v11 = &v20[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100083B58(v1, (uint64_t)&v20[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)], (uint64_t (*)(void))type metadata accessor for ContextMenuForSubscribedUserView);
  unint64_t v12 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v13 = swift_allocObject();
  sub_100083AF0((uint64_t)&v20[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)], v13 + v12, (uint64_t (*)(void))type metadata accessor for ContextMenuForSubscribedUserView);
  sub_1000060EC(&qword_100156748);
  sub_100006480(&qword_100156780, &qword_100156748);
  Button.init(action:label:)();
  if (qword_1001562C0 != -1) {
    swift_once();
  }
  sub_100006480(&qword_100156B40, &qword_100156B48);
  View.accessibilityIdentifier(_:)();
  (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
  LocalizedStringKey.init(_:)();
  uint64_t v14 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v16 = v15;
  char v18 = v17 & 1;
  ModifiedContent<>.accessibilityLabel(_:)();
  sub_10000E904(v14, v16, v18);
  swift_bridgeObjectRelease();
  return sub_1000063D0((uint64_t)v11, &qword_100156B30);
}

uint64_t sub_100080DA4()
{
  uint64_t v0 = type metadata accessor for SymbolVariants();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)v9 - v5;
  if (qword_1001561B8 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  v9[1] = Image.init(systemName:)();
  static SymbolVariants.circle.getter();
  SymbolVariants.fill.getter();
  uint64_t v7 = *(void (**)(char *, uint64_t))(v1 + 8);
  v7(v6, v0);
  View.symbolVariant(_:)();
  v7(v4, v0);
  return swift_release();
}

uint64_t sub_100080F34@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1000817DC(a1, &OBJC_IVAR____TtC16MusicRecognition37ContextMenuForSubscribedUserViewModel__confirmationDialogPresented, a2);
}

uint64_t sub_100080F48()
{
  return swift_release();
}

uint64_t sub_100081018@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v19 = a2;
  uint64_t v3 = type metadata accessor for ContextMenuForSubscribedUserView();
  uint64_t v18 = *(void *)(v3 - 8);
  uint64_t v4 = *(void *)(v18 + 64);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = sub_1000060EC(&qword_100158370);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000060EC(&qword_100157D50);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  LocalizedStringKey.init(_:)();
  v17[1] = v12;
  static ButtonRole.destructive.getter();
  uint64_t v13 = type metadata accessor for ButtonRole();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v7, 0, 1, v13);
  sub_100083B58(a1, (uint64_t)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for ContextMenuForSubscribedUserView);
  unint64_t v14 = (*(unsigned __int8 *)(v18 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  uint64_t v15 = swift_allocObject();
  sub_100083AF0((uint64_t)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v15 + v14, (uint64_t (*)(void))type metadata accessor for ContextMenuForSubscribedUserView);
  Button<>.init(_:role:action:)();
  if (qword_100156328 != -1) {
    swift_once();
  }
  sub_100006480(&qword_100157D48, &qword_100157D50);
  View.accessibilityIdentifier(_:)();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_10008133C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ContextMenuForSubscribedUserView();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000060EC(&qword_100157038);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  sub_100083B58(a1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for ContextMenuForSubscribedUserView);
  type metadata accessor for MainActor();
  uint64_t v10 = static MainActor.shared.getter();
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v10;
  *(void *)(v12 + 24) = &protocol witness table for MainActor;
  sub_100083AF0((uint64_t)v5, v12 + v11, (uint64_t (*)(void))type metadata accessor for ContextMenuForSubscribedUserView);
  sub_1000DC37C((uint64_t)v8, (uint64_t)&unk_10015A000, v12);
  return swift_release();
}

uint64_t sub_100081510(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _OWORD v4[5] = a4;
  type metadata accessor for MainActor();
  v4[6] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[7] = v6;
  v4[8] = v5;
  return _swift_task_switch(sub_1000815A8, v6, v5);
}

uint64_t sub_1000815A8()
{
  uint64_t v1 = v0[5];
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v2 = *(void *)(v1 + 24);
  v0[2] = v3;
  v0[3] = v2;
  sub_1000060EC(&qword_100159FC0);
  State.wrappedValue.getter();
  v0[9] = v0[4];
  uint64_t v4 = (void *)swift_task_alloc();
  v0[10] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100081668;
  return sub_1000DE2C0();
}

uint64_t sub_100081668()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 64);
  uint64_t v3 = *(void *)(v1 + 56);
  return _swift_task_switch(sub_1000846C0, v3, v2);
}

uint64_t sub_1000817AC@<X0>(uint64_t a1@<X8>)
{
  return sub_100082F90(a1);
}

uint64_t sub_1000817C8@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1000817DC(a1, &OBJC_IVAR____TtC16MusicRecognition37ContextMenuForSubscribedUserViewModel__addToPlaylistSheetPresented, a2);
}

uint64_t sub_1000817DC@<X0>(uint64_t *a1@<X0>, void *a2@<X4>, unsigned char *a3@<X8>)
{
  uint64_t v5 = *a1;
  swift_getKeyPath();
  sub_10008362C(&qword_100159FF0, (void (*)(uint64_t))type metadata accessor for ContextMenuForSubscribedUserViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  *a3 = *(unsigned char *)(v5 + *a2);
  return result;
}

uint64_t sub_100081890()
{
  return swift_release();
}

uint64_t sub_100081960()
{
  return NavigationView.init(content:)();
}

uint64_t sub_1000819F4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for ContextMenuForSubscribedUserView();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4 - 8);
  uint64_t v7 = *(void *)(a1 + 24);
  v12[1] = *(void *)(a1 + 16);
  _OWORD v12[2] = v7;
  sub_1000060EC(&qword_100159FC0);
  State.wrappedValue.getter();
  uint64_t v8 = *(void *)(v12[3]
                 + OBJC_IVAR____TtC16MusicRecognition37ContextMenuForSubscribedUserViewModel_musicLibraryController);
  swift_retain();
  swift_release();
  sub_100083B58(a1, (uint64_t)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for ContextMenuForSubscribedUserView);
  unint64_t v9 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v10 = swift_allocObject();
  sub_100083AF0((uint64_t)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v10 + v9, (uint64_t (*)(void))type metadata accessor for ContextMenuForSubscribedUserView);
  return sub_100029F94(v8, (uint64_t)sub_1000835F4, v10, a2);
}

uint64_t sub_100081B74()
{
  return swift_release();
}

uint64_t sub_100081C68@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_10008362C(&qword_100156B18, (void (*)(uint64_t))type metadata accessor for ContextMenuViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + OBJC_IVAR____TtC16MusicRecognition20ContextMenuViewModel__shareSheetFromOverflow);
  return result;
}

uint64_t sub_100081D18()
{
  return swift_release();
}

uint64_t sub_100081DE8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for OpenURLAction();
  uint64_t v6 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(a1 + 24);
  uint64_t v16 = *(void *)(a1 + 16);
  uint64_t v9 = v16;
  uint64_t v17 = v10;
  sub_1000060EC(&qword_100159FC0);
  State.wrappedValue.getter();
  uint64_t v14 = v18;
  type metadata accessor for ContextMenuForSubscribedUserView();
  sub_1000083D4((uint64_t)v8);
  uint64_t v16 = v9;
  uint64_t v17 = v10;
  State.wrappedValue.getter();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v18 + OBJC_IVAR____TtC16MusicRecognition37ContextMenuForSubscribedUserViewModel_songCampaignURL, v2);
  swift_release();
  OpenURLAction.callAsFunction(_:)();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v15);
  if (*(unsigned char *)(v14 + OBJC_IVAR____TtC16MusicRecognition20ContextMenuViewModel_member)) {
    int v11 = 66305;
  }
  else {
    int v11 = 769;
  }
  sub_1000D6E40(v11, 0xD000000000000028, 0x8000000100117950);
  return swift_release();
}

uint64_t sub_100082034()
{
  return Label.init(title:icon:)();
}

uint64_t sub_1000820F0@<X0>(uint64_t a1@<X8>)
{
  return sub_100082F90(a1);
}

uint64_t sub_10008210C()
{
  uint64_t v0 = type metadata accessor for SymbolVariants();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)v9 - v5;
  v9[1] = Image.init(_internalSystemName:)();
  static SymbolVariants.square.getter();
  SymbolVariants.fill.getter();
  uint64_t v7 = *(void (**)(char *, uint64_t))(v1 + 8);
  v7(v6, v0);
  View.symbolVariant(_:)();
  v7(v4, v0);
  return swift_release();
}

uint64_t sub_100082258(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ContextMenuForSubscribedUserView();
  uint64_t v19 = *(void *)(v2 - 8);
  uint64_t v3 = *(void *)(v19 + 64);
  __chkstk_darwin(v2 - 8);
  uint64_t v20 = (uint64_t)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000060EC(&qword_100157038);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v21 = v8;
  uint64_t v22 = v7;
  sub_1000060EC(&qword_100159FC0);
  State.wrappedValue.getter();
  uint64_t v9 = v23;
  swift_getKeyPath();
  uint64_t v21 = v9;
  sub_10008362C(&qword_100159FF0, (void (*)(uint64_t))type metadata accessor for ContextMenuForSubscribedUserViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  int v10 = *(unsigned __int8 *)(v9
                           + OBJC_IVAR____TtC16MusicRecognition37ContextMenuForSubscribedUserViewModel__isSongInLibrary);
  swift_release();
  if (v10 == 1)
  {
    uint64_t v21 = v8;
    uint64_t v22 = v7;
    State.wrappedValue.getter();
    uint64_t v11 = v23;
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    *(&v19 - 2) = v11;
    *((unsigned char *)&v19 - 8) = 1;
    uint64_t v21 = v11;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
  }
  else
  {
    uint64_t v14 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v6, 1, 1, v14);
    uint64_t v15 = v20;
    sub_100083B58(a1, v20, (uint64_t (*)(void))type metadata accessor for ContextMenuForSubscribedUserView);
    type metadata accessor for MainActor();
    uint64_t v16 = static MainActor.shared.getter();
    unint64_t v17 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = v16;
    *(void *)(v18 + 24) = &protocol witness table for MainActor;
    sub_100083AF0(v15, v18 + v17, (uint64_t (*)(void))type metadata accessor for ContextMenuForSubscribedUserView);
    sub_1000DC37C((uint64_t)v6, (uint64_t)&unk_10015A058, v18);
  }
  return swift_release();
}

uint64_t sub_1000825B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _OWORD v4[5] = a4;
  type metadata accessor for MainActor();
  v4[6] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[7] = v6;
  v4[8] = v5;
  return _swift_task_switch(sub_10008264C, v6, v5);
}

uint64_t sub_10008264C()
{
  uint64_t v1 = v0[5];
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v2 = *(void *)(v1 + 24);
  v0[2] = v3;
  v0[3] = v2;
  sub_1000060EC(&qword_100159FC0);
  State.wrappedValue.getter();
  v0[9] = v0[4];
  uint64_t v4 = (void *)swift_task_alloc();
  v0[10] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_10002B1FC;
  return sub_1000DEA14();
}

uint64_t sub_10008270C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v15 = a2;
  uint64_t v14 = sub_1000060EC(&qword_100156748);
  uint64_t v3 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v16 = *(void *)(a1 + 16);
  uint64_t v6 = v16;
  uint64_t v17 = v7;
  sub_1000060EC(&qword_100159FC0);
  State.wrappedValue.getter();
  uint64_t v8 = v18;
  swift_getKeyPath();
  uint64_t v16 = v8;
  sub_10008362C(&qword_100159FF0, (void (*)(uint64_t))type metadata accessor for ContextMenuForSubscribedUserViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v9 = LocalizedStringKey.init(stringLiteral:)();
  v13[1] = v10;
  void v13[2] = v9;
  swift_release();
  uint64_t v16 = v6;
  uint64_t v17 = v7;
  State.wrappedValue.getter();
  uint64_t v11 = v18;
  swift_getKeyPath();
  uint64_t v16 = v11;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (*(unsigned char *)(v11 + OBJC_IVAR____TtC16MusicRecognition37ContextMenuForSubscribedUserViewModel__isSongInLibrary) == 1)
  {
    if (qword_100156560 == -1) {
      goto LABEL_5;
    }
    goto LABEL_6;
  }
  if (qword_100156558 != -1) {
LABEL_6:
  }
    swift_once();
LABEL_5:
  swift_bridgeObjectRetain();
  swift_release();
  Label<>.init(_:systemImage:)();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v3 + 32))(v15, v5, v14);
}

uint64_t sub_1000829F0()
{
  sub_1000060EC(&qword_100159FC0);
  State.wrappedValue.getter();
  swift_getKeyPath();
  sub_10008362C(&qword_100156B18, (void (*)(uint64_t))type metadata accessor for ContextMenuViewModel);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  if (*(unsigned char *)(v2 + OBJC_IVAR____TtC16MusicRecognition20ContextMenuViewModel_member)) {
    int v0 = 66304;
  }
  else {
    int v0 = 768;
  }
  sub_1000D6E40(v0, 0xD000000000000028, 0x8000000100117950);
  return swift_release();
}

uint64_t sub_100082B24()
{
  return Label.init(title:icon:)();
}

uint64_t sub_100082B78@<X0>(uint64_t a1@<X8>)
{
  return sub_100082F90(a1);
}

uint64_t sub_100082B94()
{
  sub_1000060EC(&qword_100159FC0);
  State.wrappedValue.getter();
  swift_getKeyPath();
  sub_10008362C(&qword_100159FF0, (void (*)(uint64_t))type metadata accessor for ContextMenuForSubscribedUserViewModel);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  if (*(unsigned char *)(v2 + OBJC_IVAR____TtC16MusicRecognition20ContextMenuViewModel_member)) {
    int v0 = 66314;
  }
  else {
    int v0 = 778;
  }
  sub_1000D6E40(v0, 0xD000000000000028, 0x8000000100117950);
  return swift_release();
}

uint64_t sub_100082CC8()
{
  return Label.init(title:icon:)();
}

uint64_t sub_100082D1C@<X0>(uint64_t a1@<X8>)
{
  return sub_100082F90(a1);
}

uint64_t sub_100082D38@<X0>(uint64_t *a1@<X8>)
{
  if (qword_1001561C0 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  uint64_t result = Image.init(systemName:)();
  *a1 = result;
  return result;
}

uint64_t sub_100082DB4()
{
  return swift_release();
}

uint64_t sub_100082E34()
{
  uint64_t v0 = type metadata accessor for OpenURLAction();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ContextMenuForSubscribedUserView();
  sub_1000083D4((uint64_t)v3);
  OpenURLAction.callAsFunction(_:)();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_100082F20()
{
  return Label.init(title:icon:)();
}

uint64_t sub_100082F74@<X0>(uint64_t a1@<X8>)
{
  return sub_100082F90(a1);
}

uint64_t sub_100082F90@<X0>(uint64_t a1@<X8>)
{
  LocalizedStringKey.init(_:)();
  uint64_t result = Text.init(_:tableName:bundle:comment:)();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_100082FF0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for OpenURLAction();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(a1 + 24);
  v10[1] = *(void *)(a1 + 16);
  void v10[2] = v6;
  sub_1000060EC(&qword_100159FC0);
  State.wrappedValue.getter();
  uint64_t v7 = v10[3];
  type metadata accessor for ContextMenuForSubscribedUserView();
  sub_1000083D4((uint64_t)v5);
  type metadata accessor for StreamingService();
  OpenURLAction.callAsFunction(_:)();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (*(unsigned char *)(v7 + OBJC_IVAR____TtC16MusicRecognition20ContextMenuViewModel_member)) {
    int v8 = 66313;
  }
  else {
    int v8 = 777;
  }
  sub_1000D6E40(v8, 0xD000000000000028, 0x8000000100117950);
  return swift_release();
}

uint64_t sub_10008315C@<X0>(uint64_t a1@<X8>)
{
  sub_1000060EC(&qword_100159FC0);
  State.wrappedValue.getter();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_release();
  uint64_t result = Text.init(_:tableName:bundle:comment:)();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_100083238(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10008324C);
}

uint64_t sub_10008324C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1000060EC(&qword_100156A08);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_100083300(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100083314);
}

uint64_t sub_100083314(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 16) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1000060EC(&qword_100156A08);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1000833C0()
{
  sub_10000B6DC();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_100083460()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100083480(char a1)
{
  uint64_t v3 = type metadata accessor for ContextMenuForSubscribedUserView();
  uint64_t v6 = *(void *)(v3 - 8);
  uint64_t result = v3 - 8;
  uint64_t v5 = v6;
  if (a1)
  {
    uint64_t v7 = (uint64_t (**)(void))(v1
                            + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)));
    if (*v7) {
      return (*v7)();
    }
  }
  return result;
}

uint64_t sub_1000834F4@<X0>(char *a1@<X8>)
{
  return sub_10007F18C(*(void *)(v1 + 16), a1);
}

uint64_t sub_1000834FC@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1000817DC(a1, &OBJC_IVAR____TtC16MusicRecognition37ContextMenuForSubscribedUserViewModel__confirmationDialogPresented, a2);
}

uint64_t sub_100083528@<X0>(uint64_t a1@<X8>)
{
  return sub_100081018(*(void *)(v1 + 16), a1);
}

uint64_t sub_100083530@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1000817DC(a1, &OBJC_IVAR____TtC16MusicRecognition37ContextMenuForSubscribedUserViewModel__addToPlaylistSheetPresented, a2);
}

uint64_t sub_100083560()
{
  type metadata accessor for ContextMenuForSubscribedUserView();

  return sub_100081960();
}

uint64_t sub_1000835E8@<X0>(void *a1@<X8>)
{
  return sub_1000819F4(*(void *)(v1 + 16), a1);
}

uint64_t sub_1000835F4()
{
  return sub_1000840C8((uint64_t (*)(uint64_t))sub_100081B74);
}

uint64_t sub_10008360C()
{
  return sub_1000DF358(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_10008362C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100083678()
{
  return sub_1000840C8(sub_10008133C);
}

uint64_t sub_100083694(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for ContextMenuForSubscribedUserView() - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_100015B24;
  return sub_100081510(a1, v5, v6, v7);
}

uint64_t sub_100083780()
{
  return sub_1000DF348(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_1000837A0@<X0>(uint64_t a1@<X8>)
{
  return sub_10007F614(*(void *)(v1 + 16), a1);
}

uint64_t sub_1000837A8@<X0>(uint64_t a1@<X8>)
{
  return sub_100080604(*(void *)(v1 + 16), a1);
}

uint64_t sub_1000837B0(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100006224(a2);
    sub_100006480(a3, a4);
    sub_10008362C((unint64_t *)&qword_1001567D8, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10008387C()
{
  return sub_100080A18();
}

uint64_t sub_1000838A4()
{
  return sub_1000840C8((uint64_t (*)(uint64_t))sub_1000829F0);
}

uint64_t sub_1000838BC()
{
  uint64_t v1 = type metadata accessor for ContextMenuForSubscribedUserView();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(v6 + 64);
  if (*(void *)(v0 + v3)) {
    swift_release();
  }
  swift_release();
  swift_release();
  uint64_t v9 = v0 + v3 + *(int *)(v1 + 24);
  sub_1000060EC(&qword_100156940);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for OpenURLAction();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  }
  else
  {
    swift_release();
  }
  uint64_t v11 = v2 | v7 | 7;
  uint64_t v12 = (v3 + v4 + v7) & ~v7;
  uint64_t v13 = v12 + v8;
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v12, v5);

  return _swift_deallocObject(v0, v13, v11);
}

uint64_t sub_100083A84()
{
  return sub_100083E04((uint64_t (*)(void))&type metadata accessor for URL, (uint64_t (*)(unint64_t, uint64_t))sub_100082DB4);
}

uint64_t sub_100083AB0()
{
  return sub_100082E34();
}

uint64_t sub_100083ABC()
{
  return sub_1000840C8(sub_100081DE8);
}

uint64_t sub_100083AD8()
{
  return sub_1000840C8((uint64_t (*)(uint64_t))sub_100082B94);
}

uint64_t sub_100083AF0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100083B58(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100083BC0()
{
  uint64_t v1 = type metadata accessor for ContextMenuForSubscribedUserView();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v5 = type metadata accessor for StreamingService();
  uint64_t v6 = *(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  uint64_t v7 = *(void *)(*(void *)(v5 - 8) + 64);
  if (*(void *)(v0 + v3)) {
    swift_release();
  }
  swift_release();
  swift_release();
  uint64_t v8 = v0 + v3 + *(int *)(v1 + 24);
  sub_1000060EC(&qword_100156940);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = type metadata accessor for OpenURLAction();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  else
  {
    swift_release();
  }
  uint64_t v10 = v2 | v6 | 7;
  uint64_t v11 = (v3 + v4 + v6) & ~v6;
  uint64_t v12 = v11 + v7;
  uint64_t v13 = v0 + v11;
  swift_bridgeObjectRelease();
  uint64_t v14 = v13 + *(int *)(v5 + 20);
  uint64_t v15 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v12, v10);
}

uint64_t sub_100083DD8()
{
  return sub_100083E04((uint64_t (*)(void))type metadata accessor for StreamingService, (uint64_t (*)(unint64_t, uint64_t))sub_100082FF0);
}

uint64_t sub_100083E04(uint64_t (*a1)(void), uint64_t (*a2)(unint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(type metadata accessor for ContextMenuForSubscribedUserView() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64);
  uint64_t v7 = *(void *)(a1(0) - 8);
  uint64_t v8 = v2 + ((v5 + v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));

  return a2(v2 + v5, v8);
}

uint64_t sub_100083EEC()
{
  return Label.init(title:icon:)();
}

uint64_t sub_100083F68@<X0>(uint64_t a1@<X8>)
{
  return sub_10008315C(a1);
}

uint64_t sub_100083F7C()
{
  uint64_t v1 = type metadata accessor for ContextMenuForSubscribedUserView();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  if (*(void *)(v0 + v3)) {
    swift_release();
  }
  swift_release();
  swift_release();
  uint64_t v5 = v0 + v3 + *(int *)(v1 + 24);
  sub_1000060EC(&qword_100156940);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for OpenURLAction();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_1000840B0()
{
  return sub_1000840C8(sub_100082258);
}

uint64_t sub_1000840C8(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for ContextMenuForSubscribedUserView() - 8);
  uint64_t v3 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return a1(v3);
}

uint64_t sub_10008413C@<X0>(uint64_t a1@<X8>)
{
  return sub_10008270C(*(void *)(v1 + 16), a1);
}

uint64_t sub_100084148()
{
  uint64_t v1 = type metadata accessor for ContextMenuForSubscribedUserView();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  swift_unknownObjectRelease();
  if (*(void *)(v0 + v3)) {
    swift_release();
  }
  swift_release();
  swift_release();
  uint64_t v5 = v0 + v3 + *(int *)(v1 + 24);
  sub_1000060EC(&qword_100156940);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for OpenURLAction();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_100084284(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for ContextMenuForSubscribedUserView() - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_100014D10;
  return sub_1000825B4(a1, v5, v6, v7);
}

unint64_t sub_100084374()
{
  unint64_t result = qword_10015A060;
  if (!qword_10015A060)
  {
    sub_100006224(&qword_100159FA8);
    sub_100006224(&qword_100159F98);
    type metadata accessor for NavigationBarButtonStyle();
    sub_100006224(&qword_100159F90);
    type metadata accessor for ButtonMenuStyle();
    sub_100006224(&qword_100159F88);
    sub_100006224(&qword_100159F80);
    sub_100006224(&qword_100159FD8);
    sub_100006224(&qword_100159F78);
    sub_100006224(&qword_100157D20);
    sub_100006480(&qword_100159FD0, &qword_100159F78);
    sub_1000837B0((unint64_t *)&qword_100157D40, &qword_100157D20, &qword_100157D48, &qword_100157D50);
    swift_getOpaqueTypeConformance2();
    sub_100006480(&qword_100159FE0, &qword_100159FD8);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_10008362C(&qword_100156B08, (void (*)(uint64_t))&type metadata accessor for ButtonMenuStyle);
    swift_getOpaqueTypeConformance2();
    sub_10008362C(&qword_100156B10, (void (*)(uint64_t))type metadata accessor for NavigationBarButtonStyle);
    swift_getOpaqueTypeConformance2();
    sub_10008362C((unint64_t *)&qword_1001567D8, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015A060);
  }
  return result;
}

uint64_t sub_100084690()
{
  return sub_10008360C();
}

uint64_t sub_1000846A8()
{
  return sub_100083780();
}

uint64_t type metadata accessor for MusicRecognitionAmbientCompactSceneDelegate()
{
  return self;
}

void sub_10008482C(void *a1)
{
  uint64_t v2 = v1;
  if (qword_100156018 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_10000E808(v4, (uint64_t)qword_100164B38);
  id v5 = a1;
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 138412290;
    id v10 = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v9 = v5;

    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Ambient compact scene will connect %@", v8, 0xCu);
    sub_1000060EC((uint64_t *)&unk_1001570F0);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v2 = v1;
    swift_slowDealloc();
  }
  else
  {
  }
  type metadata accessor for ActivityScene();
  uint64_t v11 = swift_dynamicCastClass();
  if (v11)
  {
    uint64_t v12 = v11;
    id v13 = objc_allocWithZone((Class)UIWindow);
    uint64_t v14 = v5;
    id v15 = [v13 initWithWindowScene:v12];
    uint64_t v16 = OBJC_IVAR____TtC16MusicRecognition43MusicRecognitionAmbientCompactSceneDelegate_window;
    uint64_t v17 = *(void **)(v2 + OBJC_IVAR____TtC16MusicRecognition43MusicRecognitionAmbientCompactSceneDelegate_window);
    *(void *)(v2 + OBJC_IVAR____TtC16MusicRecognition43MusicRecognitionAmbientCompactSceneDelegate_window) = v15;

    uint64_t v18 = *(void **)(v2 + v16);
    if (v18)
    {
      type metadata accessor for MusicRecognitionAmbientCompactViewController();
      id v19 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
      id v20 = v18;
      id v21 = [v19 init];
      [v20 setRootViewController:v21];

      uint64_t v22 = *(void **)(v2 + v16);
      if (v22)
      {
        id v23 = v22;
        [v23 makeKeyAndVisible];
      }
    }
  }
  else
  {
    uint64_t v14 = Logger.logObject.getter();
    os_log_type_t v24 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v14, v24))
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v25 = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, v24, "Unable to connect to ActivityScene", v25, 2u);
      swift_slowDealloc();
    }
  }
}

uint64_t sub_100084B14(void (*a1)(uint64_t *__return_ptr, char *))
{
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  os_log_type_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000060EC(&qword_100157818);
  __chkstk_darwin(v8 - 8);
  id v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10008689C(v1, (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1) {
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
  a1(&v12, v7);
  if (v2) {
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v12;
}

uint64_t sub_100084CDC@<X0>(int a1@<W0>, long long *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unsigned char *a5@<X8>)
{
  uint64_t v108 = a3;
  uint64_t v109 = a4;
  uint64_t v107 = a2;
  int v106 = a1;
  uint64_t v119 = a5;
  uint64_t v5 = type metadata accessor for Date.FormatStyle.Symbol.Weekday();
  uint64_t v104 = *(unsigned char **)(v5 - 8);
  uint64_t v105 = (void (*)(char *, uint64_t))v5;
  __chkstk_darwin(v5);
  uint64_t v103 = (char *)&v71 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Date.FormatStyle.Symbol.Minute();
  uint64_t v101 = *(void *)(v7 - 8);
  uint64_t v102 = v7;
  __chkstk_darwin(v7);
  uint64_t v100 = (char *)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = type metadata accessor for Date.FormatStyle.Symbol.Hour.AMPMStyle();
  uint64_t v99 = *(void *)(v97 - 8);
  __chkstk_darwin(v97);
  uint64_t v95 = (char *)&v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = type metadata accessor for Date.FormatStyle.Symbol.Hour();
  uint64_t v96 = *(void *)(v98 - 8);
  __chkstk_darwin(v98);
  uint64_t v94 = (char *)&v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = type metadata accessor for Date.FormatStyle.Symbol.Day();
  uint64_t v92 = *(void *)(v93 - 8);
  __chkstk_darwin(v93);
  uint64_t v91 = (char *)&v71 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = type metadata accessor for Date.FormatStyle.Symbol.Month();
  uint64_t v89 = *(void *)(v90 - 8);
  __chkstk_darwin(v90);
  uint64_t v88 = (char *)&v71 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Date.FormatStyle.Symbol.Year();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v116 = v13;
  uint64_t v117 = v14;
  __chkstk_darwin(v13);
  uint64_t v114 = (char *)&v71 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for FormatStyleCapitalizationContext();
  __chkstk_darwin(v16 - 8);
  uint64_t v113 = (char *)&v71 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for TimeZone();
  __chkstk_darwin(v18 - 8);
  uint64_t v112 = (char *)&v71 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for Calendar();
  __chkstk_darwin(v20 - 8);
  uint64_t v111 = (char *)&v71 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v115 = type metadata accessor for Locale();
  uint64_t v118 = *(void *)(v115 - 8);
  __chkstk_darwin(v115);
  id v23 = (char *)&v71 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_1000060EC(&qword_10015A150);
  __chkstk_darwin(v24 - 8);
  uint64_t v26 = (char *)&v71 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_1000060EC(&qword_10015A158);
  __chkstk_darwin(v27 - 8);
  uint64_t v29 = (char *)&v71 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = type metadata accessor for Date.FormatStyle();
  uint64_t v30 = *(void *)(v110 - 8);
  uint64_t v31 = __chkstk_darwin(v110);
  uint64_t v33 = (char *)&v71 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __chkstk_darwin(v31);
  uint64_t v36 = (char *)&v71 - v35;
  uint64_t v37 = __chkstk_darwin(v34);
  uint64_t v72 = (char *)&v71 - v38;
  uint64_t v39 = __chkstk_darwin(v37);
  uint64_t v73 = (char *)&v71 - v40;
  uint64_t v41 = __chkstk_darwin(v39);
  uint64_t v43 = (char *)&v71 - v42;
  uint64_t v44 = __chkstk_darwin(v41);
  uint64_t v76 = (char *)&v71 - v45;
  __chkstk_darwin(v44);
  uint64_t v78 = (char *)&v71 - v46;
  uint64_t v87 = type metadata accessor for SongMetadataRowViewModel();
  uint64_t v83 = &v119[*(int *)(v87 + 28)];
  uint64_t v85 = type metadata accessor for Date.FormatStyle.DateStyle();
  uint64_t v47 = *(void *)(v85 - 8);
  uint64_t v84 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v47 + 56);
  uint64_t v86 = v47 + 56;
  uint64_t v75 = v29;
  v84(v29, 1, 1, v85);
  uint64_t v81 = type metadata accessor for Date.FormatStyle.TimeStyle();
  uint64_t v48 = *(void *)(v81 - 8);
  uint64_t v80 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v48 + 56);
  uint64_t v82 = v48 + 56;
  long long v77 = v26;
  v80(v26, 1, 1, v81);
  long long v74 = v23;
  static Locale.autoupdatingCurrent.getter();
  static Calendar.autoupdatingCurrent.getter();
  static TimeZone.autoupdatingCurrent.getter();
  static FormatStyleCapitalizationContext.unknown.getter();
  Date.FormatStyle.init(date:time:locale:calendar:timeZone:capitalizationContext:)();
  unint64_t v49 = v114;
  static Date.FormatStyle.Symbol.Year.defaultDigits.getter();
  Date.FormatStyle.year(_:)();
  uint64_t v50 = *(void (**)(char *, uint64_t))(v117 + 8);
  v117 += 8;
  uint64_t v79 = v50;
  v50(v49, v116);
  uint64_t v51 = *(void (**)(char *, uint64_t))(v30 + 8);
  uint64_t v52 = v110;
  v51(v33, v110);
  uint64_t v53 = v88;
  static Date.FormatStyle.Symbol.Month.abbreviated.getter();
  uint64_t v54 = v72;
  Date.FormatStyle.month(_:)();
  (*(void (**)(char *, uint64_t))(v89 + 8))(v53, v90);
  v51(v36, v52);
  uint64_t v55 = v91;
  static Date.FormatStyle.Symbol.Day.twoDigits.getter();
  uint64_t v56 = v73;
  Date.FormatStyle.day(_:)();
  (*(void (**)(char *, uint64_t))(v92 + 8))(v55, v93);
  v51(v54, v52);
  uint64_t v57 = v95;
  static Date.FormatStyle.Symbol.Hour.AMPMStyle.abbreviated.getter();
  unint64_t v58 = v94;
  static Date.FormatStyle.Symbol.Hour.defaultDigits(amPM:)();
  (*(void (**)(char *, uint64_t))(v99 + 8))(v57, v97);
  Date.FormatStyle.hour(_:)();
  (*(void (**)(char *, uint64_t))(v96 + 8))(v58, v98);
  v51(v56, v52);
  uint64_t v59 = v100;
  static Date.FormatStyle.Symbol.Minute.twoDigits.getter();
  long long v60 = v76;
  Date.FormatStyle.minute(_:)();
  (*(void (**)(char *, uint64_t))(v101 + 8))(v59, v102);
  v51(v43, v52);
  uint64_t v61 = v103;
  static Date.FormatStyle.Symbol.Weekday.abbreviated.getter();
  uint64_t v62 = v78;
  Date.FormatStyle.weekday(_:)();
  (*((void (**)(char *, void))v104 + 1))(v61, v105);
  uint64_t v63 = v52;
  v51(v60, v52);
  uint64_t v64 = v74;
  static Locale.autoupdatingCurrent.getter();
  Date.FormatStyle.locale(_:)();
  long long v65 = *(void (**)(char *, uint64_t))(v118 + 8);
  v118 += 8;
  uint64_t v105 = v65;
  v65(v64, v115);
  v51(v62, v63);
  uint64_t v104 = &v119[*(int *)(v87 + 32)];
  v84(v75, 1, 1, v85);
  v80(v77, 1, 1, v81);
  static Locale.autoupdatingCurrent.getter();
  static Calendar.autoupdatingCurrent.getter();
  static TimeZone.autoupdatingCurrent.getter();
  static FormatStyleCapitalizationContext.unknown.getter();
  Date.FormatStyle.init(date:time:locale:calendar:timeZone:capitalizationContext:)();
  uint64_t v66 = v114;
  static Date.FormatStyle.Symbol.Year.defaultDigits.getter();
  Date.FormatStyle.year(_:)();
  v79(v66, v116);
  uint64_t v67 = v110;
  v51(v60, v110);
  static Locale.autoupdatingCurrent.getter();
  Date.FormatStyle.locale(_:)();
  v105(v64, v115);
  v51(v62, v67);
  uint64_t v68 = v119;
  *uint64_t v119 = v106;
  uint64_t result = sub_100057AA4(v107, (uint64_t)(v68 + 8));
  uint64_t v70 = v109;
  *((void *)v68 + 6) = v108;
  *((void *)v68 + 7) = v70;
  return result;
}

uint64_t sub_100085964()
{
  return LocalizedStringKey.init(stringLiteral:)();
}

char *sub_100085A64(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (char *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = (char *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    long long v7 = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 32) = v7;
    (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 8, (uint64_t)(a2 + 1));
    uint64_t v8 = a2[7];
    *((void *)v4 + 6) = a2[6];
    *((void *)v4 + 7) = v8;
    uint64_t v9 = *(int *)(a3 + 28);
    uint64_t v10 = &v4[v9];
    uint64_t v11 = (uint64_t)a2 + v9;
    uint64_t v12 = type metadata accessor for Date.FormatStyle();
    uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    v13(&v4[*(int *)(a3 + 32)], (uint64_t)a2 + *(int *)(a3 + 32), v12);
  }
  return v4;
}

uint64_t sub_100085BBC(uint64_t a1, uint64_t a2)
{
  _s16MusicRecognition11AnyPlaylistVwxx_0(a1 + 8);
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = type metadata accessor for Date.FormatStyle();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v8)((void *)(v5 - 8), v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 32);

  return v8(v6, v5);
}

uint64_t sub_100085C74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  long long v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 8, a2 + 8);
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  uint64_t v8 = *(int *)(a3 + 28);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = type metadata accessor for Date.FormatStyle();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  v12(a1 + *(int *)(a3 + 32), a2 + *(int *)(a3 + 32), v11);
  return a1;
}

uint64_t sub_100085D74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  sub_100018AC4((uint64_t *)(a1 + 8), (uint64_t *)(a2 + 8));
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = type metadata accessor for Date.FormatStyle();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v10(a1 + *(int *)(a3 + 32), a2 + *(int *)(a3 + 32), v9);
  return a1;
}

uint64_t sub_100085E4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = type metadata accessor for Date.FormatStyle();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v10(a1 + *(int *)(a3 + 32), a2 + *(int *)(a3 + 32), v9);
  return a1;
}

uint64_t sub_100085F20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  _s16MusicRecognition11AnyPlaylistVwxx_0(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = type metadata accessor for Date.FormatStyle();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40);
  v10(v7, v8, v9);
  v10(a1 + *(int *)(a3 + 32), a2 + *(int *)(a3 + 32), v9);
  return a1;
}

uint64_t sub_100086000(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100086014);
}

uint64_t sub_100086014(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 32);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for Date.FormatStyle();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1000860C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000860D8);
}

uint64_t sub_1000860D8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 32) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for Date.FormatStyle();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for SongMetadataRowViewModel()
{
  uint64_t result = qword_10015A0F8;
  if (!qword_10015A0F8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000861CC()
{
  uint64_t result = type metadata accessor for Date.FormatStyle();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for SongMetadataRowViewModel.SupportedMetadata(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for SongMetadataRowViewModel.SupportedMetadata(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000863D4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SongMetadataRowViewModel.SupportedMetadata()
{
  return &type metadata for SongMetadataRowViewModel.SupportedMetadata;
}

unint64_t sub_100086410()
{
  unint64_t result = qword_10015A140;
  if (!qword_10015A140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015A140);
  }
  return result;
}

unint64_t sub_100086468()
{
  unint64_t result = qword_10015A148;
  if (!qword_10015A148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015A148);
  }
  return result;
}

uint64_t sub_1000864BC()
{
  uint64_t v1 = sub_1000060EC(&qword_100157818);
  __chkstk_darwin(v1 - 8);
  int v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(*(unsigned char *)v0)
  {
    case 1:
      uint64_t v9 = *(void *)(v0 + 32);
      uint64_t v8 = *(void *)(v0 + 40);
      sub_100010740((void *)(v0 + 8), v9);
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 16))(v9, v8);
      break;
    case 2:
      uint64_t v12 = *(void *)(v0 + 32);
      uint64_t v11 = *(void *)(v0 + 40);
      sub_100010740((void *)(v0 + 8), v12);
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 40))(v12, v11);
      break;
    case 3:
      uint64_t v14 = *(void *)(v0 + 32);
      uint64_t v13 = *(void *)(v0 + 40);
      sub_100010740((void *)(v0 + 8), v14);
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 48))(v14, v13);
      break;
    case 4:
      uint64_t v15 = *(void *)(v0 + 32);
      uint64_t v16 = *(void *)(v0 + 40);
      sub_100010740((void *)(v0 + 8), v15);
      uint64_t v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 24))(v15, v16);
      __chkstk_darwin(v17);
      *(&v23 - 2) = v0;
      BOOL v7 = sub_100086794;
      goto LABEL_7;
    case 5:
      uint64_t v20 = *(void *)(v0 + 32);
      uint64_t v19 = *(void *)(v0 + 40);
      sub_100010740((void *)(v0 + 8), v20);
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 64))(v20, v19);
      break;
    case 6:
      uint64_t v22 = *(void *)(v0 + 32);
      uint64_t v21 = *(void *)(v0 + 40);
      sub_100010740((void *)(v0 + 8), v22);
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 56))(v22, v21);
      break;
    default:
      uint64_t v4 = *(void *)(v0 + 32);
      uint64_t v5 = *(void *)(v0 + 40);
      sub_100010740((void *)(v0 + 8), v4);
      uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
      __chkstk_darwin(v6);
      *(&v23 - 2) = v0;
      BOOL v7 = sub_100086848;
LABEL_7:
      uint64_t v18 = sub_100084B14((void (*)(uint64_t *__return_ptr, char *))v7);
      sub_1000867E8((uint64_t)v3);
      uint64_t result = v18;
      break;
  }
  return result;
}

uint64_t sub_100086794@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for SongMetadataRowViewModel();
  uint64_t result = Date.FormatStyle.format(_:)();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1000867E8(uint64_t a1)
{
  uint64_t v2 = sub_1000060EC(&qword_100157818);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100086848@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for SongMetadataRowViewModel();
  uint64_t result = Date.FormatStyle.format(_:)();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_10008689C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000060EC(&qword_100157818);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t initializeWithCopy for SongPlaybackViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SongPlaybackViewModel(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

__n128 initializeWithTake for SongPlaybackViewModel(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for SongPlaybackViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for SongPlaybackViewModel(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 33)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SongPlaybackViewModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 33) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SongPlaybackViewModel()
{
  return &type metadata for SongPlaybackViewModel;
}

uint64_t *sub_100086AC4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = (int *)type metadata accessor for ArtistProfileViewModel();
    uint64_t v9 = v8[5];
    __dst = (char *)v4 + v9;
    uint64_t v10 = (char *)a2 + v9;
    uint64_t v11 = type metadata accessor for URL();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = sub_1000060EC((uint64_t *)&unk_100158FC0);
      memcpy(__dst, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(__dst, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
    }
    uint64_t v16 = v8[6];
    uint64_t v17 = (uint64_t *)((char *)v4 + v16);
    uint64_t v18 = (uint64_t *)((char *)a2 + v16);
    uint64_t v19 = v18[1];
    *uint64_t v17 = *v18;
    v17[1] = v19;
    uint64_t v20 = v8[7];
    uint64_t v21 = (uint64_t *)((char *)v4 + v20);
    uint64_t v22 = (uint64_t *)((char *)a2 + v20);
    uint64_t v23 = v22[1];
    *uint64_t v21 = *v22;
    v21[1] = v23;
    *(uint64_t *)((char *)v4 + v8[8]) = *(uint64_t *)((char *)a2 + v8[8]);
    uint64_t v24 = *(int *)(a3 + 20);
    uint64_t v25 = (uint64_t *)((char *)v4 + v24);
    uint64_t v26 = (char *)a2 + v24;
    uint64_t v27 = *(uint64_t *)((char *)a2 + v24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    if (v27)
    {
      uint64_t v28 = *((void *)v26 + 1);
      *uint64_t v25 = v27;
      v25[1] = v28;
      swift_retain();
    }
    else
    {
      *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
    }
    uint64_t v29 = *(int *)(a3 + 24);
    uint64_t v30 = (uint64_t *)((char *)v4 + v29);
    uint64_t v31 = (uint64_t *)((char *)a2 + v29);
    sub_1000060EC(&qword_100156940);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v32 = type metadata accessor for OpenURLAction();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v32 - 8) + 16))(v30, v31, v32);
    }
    else
    {
      *uint64_t v30 = *v31;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v4;
}

uint64_t sub_100086D70(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(type metadata accessor for ArtistProfileViewModel() + 20);
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  if (*(void *)(a1 + *(int *)(a2 + 20))) {
    swift_release();
  }
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  sub_1000060EC(&qword_100156940);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = type metadata accessor for OpenURLAction();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
    return v9(v7, v8);
  }
  else
  {
    return swift_release();
  }
}

void *sub_100086F0C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = (int *)type metadata accessor for ArtistProfileViewModel();
  uint64_t v7 = v6[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = sub_1000060EC((uint64_t *)&unk_100158FC0);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = v6[6];
  uint64_t v15 = (void *)((char *)a1 + v14);
  uint64_t v16 = (void *)((char *)a2 + v14);
  uint64_t v17 = v16[1];
  *uint64_t v15 = *v16;
  v15[1] = v17;
  uint64_t v18 = v6[7];
  uint64_t v19 = (void *)((char *)a1 + v18);
  uint64_t v20 = (void *)((char *)a2 + v18);
  uint64_t v21 = v20[1];
  void *v19 = *v20;
  v19[1] = v21;
  *(void *)((char *)a1 + v6[8]) = *(void *)((char *)a2 + v6[8]);
  uint64_t v22 = *(int *)(a3 + 20);
  uint64_t v23 = (void *)((char *)a1 + v22);
  uint64_t v24 = (char *)a2 + v22;
  uint64_t v25 = *(void *)((char *)a2 + v22);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  if (v25)
  {
    uint64_t v26 = *((void *)v24 + 1);
    *uint64_t v23 = v25;
    v23[1] = v26;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
  }
  uint64_t v27 = *(int *)(a3 + 24);
  uint64_t v28 = (void *)((char *)a1 + v27);
  uint64_t v29 = (void *)((char *)a2 + v27);
  sub_1000060EC(&qword_100156940);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v30 = type metadata accessor for OpenURLAction();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
  }
  else
  {
    *uint64_t v28 = *v29;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_10008715C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = (int *)type metadata accessor for ArtistProfileViewModel();
  uint64_t v6 = v5[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_1000060EC((uint64_t *)&unk_100158FC0);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = v5[6];
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  void *v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = v5[7];
  uint64_t v19 = (void *)((char *)a1 + v18);
  uint64_t v20 = (void *)((char *)a2 + v18);
  void *v19 = *v20;
  v19[1] = v20[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v5[8]) = *(void *)((char *)a2 + v5[8]);
  swift_retain();
  swift_release();
  uint64_t v21 = *(int *)(a3 + 20);
  uint64_t v22 = (void *)((char *)a1 + v21);
  uint64_t v23 = (char *)a2 + v21;
  uint64_t v24 = *(void *)((char *)a1 + v21);
  uint64_t v25 = *(void *)((char *)a2 + v21);
  if (v24)
  {
    if (v25)
    {
      uint64_t v26 = *((void *)v23 + 1);
      *uint64_t v22 = v25;
      v22[1] = v26;
      swift_retain();
      swift_release();
      goto LABEL_14;
    }
    swift_release();
  }
  else if (v25)
  {
    uint64_t v27 = *((void *)v23 + 1);
    *uint64_t v22 = v25;
    v22[1] = v27;
    swift_retain();
    goto LABEL_14;
  }
  *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
LABEL_14:
  if (a1 != a2)
  {
    uint64_t v28 = *(int *)(a3 + 24);
    uint64_t v29 = (void *)((char *)a1 + v28);
    uint64_t v30 = (void *)((char *)a2 + v28);
    sub_1000063D0((uint64_t)a1 + v28, &qword_100156940);
    sub_1000060EC(&qword_100156940);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v31 = type metadata accessor for OpenURLAction();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
    }
    else
    {
      void *v29 = *v30;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_10008748C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = (int *)type metadata accessor for ArtistProfileViewModel();
  uint64_t v7 = v6[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = sub_1000060EC((uint64_t *)&unk_100158FC0);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  *(_OWORD *)((char *)a1 + v6[6]) = *(_OWORD *)((char *)a2 + v6[6]);
  *(_OWORD *)((char *)a1 + v6[7]) = *(_OWORD *)((char *)a2 + v6[7]);
  *(void *)((char *)a1 + v6[8]) = *(void *)((char *)a2 + v6[8]);
  uint64_t v13 = *(int *)(a3 + 20);
  uint64_t v14 = (void *)((char *)a1 + v13);
  uint64_t v15 = (uint64_t *)((char *)a2 + v13);
  uint64_t v16 = *v15;
  if (*v15)
  {
    uint64_t v17 = v15[1];
    void *v14 = v16;
    v14[1] = v17;
  }
  else
  {
    *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  }
  uint64_t v18 = *(int *)(a3 + 24);
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = sub_1000060EC(&qword_100156940);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v22 = type metadata accessor for OpenURLAction();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v19, v20, v22);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
  }
  return a1;
}

void *sub_1000876A8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = (int *)type metadata accessor for ArtistProfileViewModel();
  uint64_t v7 = v6[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    uint64_t v15 = sub_1000060EC((uint64_t *)&unk_100158FC0);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  uint64_t v16 = v6[6];
  uint64_t v17 = (void *)((char *)a1 + v16);
  uint64_t v18 = (void *)((char *)a2 + v16);
  uint64_t v20 = *v18;
  uint64_t v19 = v18[1];
  *uint64_t v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  uint64_t v21 = v6[7];
  uint64_t v22 = (void *)((char *)a1 + v21);
  uint64_t v23 = (void *)((char *)a2 + v21);
  uint64_t v25 = *v23;
  uint64_t v24 = v23[1];
  *uint64_t v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v6[8]) = *(void *)((char *)a2 + v6[8]);
  swift_release();
  uint64_t v26 = *(int *)(a3 + 20);
  uint64_t v27 = (void *)((char *)a1 + v26);
  uint64_t v28 = (char *)a2 + v26;
  uint64_t v29 = *(void *)((char *)a1 + v26);
  uint64_t v30 = *(void *)((char *)a2 + v26);
  if (v29)
  {
    if (v30)
    {
      uint64_t v31 = *((void *)v28 + 1);
      *uint64_t v27 = v30;
      v27[1] = v31;
      swift_release();
      goto LABEL_14;
    }
    swift_release();
  }
  else if (v30)
  {
    uint64_t v32 = *((void *)v28 + 1);
    *uint64_t v27 = v30;
    v27[1] = v32;
    goto LABEL_14;
  }
  *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
LABEL_14:
  if (a1 != a2)
  {
    uint64_t v33 = *(int *)(a3 + 24);
    uint64_t v34 = (char *)a1 + v33;
    uint64_t v35 = (char *)a2 + v33;
    sub_1000063D0((uint64_t)a1 + v33, &qword_100156940);
    uint64_t v36 = sub_1000060EC(&qword_100156940);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v37 = type metadata accessor for OpenURLAction();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 32))(v34, v35, v37);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1000879A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000879B8);
}

uint64_t sub_1000879B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ArtistProfileViewModel();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 2147483646)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
  else
  {
    uint64_t v12 = sub_1000060EC(&qword_100156A08);
    int v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a3 + 24);
    return v13(v15, a2, v14);
  }
}

uint64_t sub_100087AF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100087B08);
}

uint64_t sub_100087B08(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for ArtistProfileViewModel();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 2147483646)
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = a2;
  }
  else
  {
    uint64_t v11 = sub_1000060EC(&qword_100156A08);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 24);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

uint64_t type metadata accessor for ArtistProfileView()
{
  uint64_t result = qword_10015A1D8;
  if (!qword_10015A1D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100087C84()
{
  type metadata accessor for ArtistProfileViewModel();
  if (v0 <= 0x3F)
  {
    sub_10000B6DC();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_100087D54()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100087D70()
{
  uint64_t result = static Font.subheadline.getter();
  qword_10015A160 = result;
  return result;
}

uint64_t sub_100087D90()
{
  uint64_t result = static HierarchicalShapeStyle.secondary.getter();
  dword_10015A168 = result;
  return result;
}

uint64_t sub_100087DB0()
{
  id v0 = [self secondarySystemFillColor];
  uint64_t result = Color.init(uiColor:)();
  qword_10015A170 = result;
  return result;
}

void sub_100087DF0()
{
  qword_10015A178 = 0;
}

uint64_t sub_100087DFC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for RoundedRectangle();
  __chkstk_darwin(v4);
  uint64_t v6 = (_OWORD *)((char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_1000060EC(&qword_10015A218);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000060EC(&qword_10015A220);
  uint64_t v11 = v10 - 8;
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000060EC(&qword_10015A228);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v9 = static HorizontalAlignment.leading.getter();
  *((void *)v9 + 1) = 0;
  v9[16] = 1;
  uint64_t v17 = sub_1000060EC(&qword_10015A230);
  sub_100088168(v2, (uint64_t)&v9[*(int *)(v17 + 44)]);
  LOBYTE(v2) = static Edge.Set.all.getter();
  EdgeInsets.init(_all:)();
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  sub_100009C94((uint64_t)v9, (uint64_t)v13, &qword_10015A218);
  uint64_t v26 = &v13[*(int *)(v11 + 44)];
  *uint64_t v26 = v2;
  *((void *)v26 + 1) = v19;
  *((void *)v26 + 2) = v21;
  *((void *)v26 + 3) = v23;
  *((void *)v26 + 4) = v25;
  v26[40] = 0;
  sub_1000063D0((uint64_t)v9, &qword_10015A218);
  if (qword_1001561D8 != -1) {
    swift_once();
  }
  uint64_t v27 = qword_10015A170;
  swift_retain();
  char v28 = static Edge.Set.all.getter();
  sub_100009C94((uint64_t)v13, (uint64_t)v16, &qword_10015A220);
  uint64_t v29 = &v16[*(int *)(v14 + 36)];
  *(void *)uint64_t v29 = v27;
  v29[8] = v28;
  sub_1000063D0((uint64_t)v13, &qword_10015A220);
  uint64_t v30 = (char *)v6 + *(int *)(v4 + 20);
  uint64_t v31 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v32 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v32 - 8) + 104))(v30, v31, v32);
  __asm { FMOV            V0.2D, #10.0 }
  *uint64_t v6 = _Q0;
  uint64_t v38 = a1 + *(int *)(sub_1000060EC(&qword_10015A238) + 36);
  sub_100088F20((uint64_t)v6, v38, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  *(_WORD *)(v38 + *(int *)(sub_1000060EC(&qword_100157ED8) + 36)) = 256;
  sub_100009C94((uint64_t)v16, a1, &qword_10015A228);
  sub_100089248((uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  return sub_1000063D0((uint64_t)v16, &qword_10015A228);
}

uint64_t sub_100088168@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v79 = a2;
  uint64_t v3 = type metadata accessor for ExpandableTextView();
  uint64_t v67 = *(void *)(v3 - 8);
  uint64_t v68 = v3;
  __chkstk_darwin(v3);
  uint64_t v66 = (char *)&v64 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_1000060EC(&qword_10015A240);
  __chkstk_darwin(v65);
  uint64_t v70 = (char *)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = sub_1000060EC(&qword_10015A248);
  __chkstk_darwin(v72);
  uint64_t v71 = (uint64_t)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000060EC(&qword_10015A250);
  uint64_t v76 = *(void *)(v7 - 8);
  uint64_t v77 = v7;
  __chkstk_darwin(v7);
  uint64_t v69 = (char *)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000060EC(&qword_10015A258);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v78 = (uint64_t)&v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v80 = (char *)&v64 - v12;
  uint64_t v13 = type metadata accessor for ArtistProfileView();
  uint64_t v73 = *(void *)(v13 - 8);
  uint64_t v14 = *(void *)(v73 + 64);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = type metadata accessor for ArtistProfileViewModel();
  __chkstk_darwin(v74);
  uint64_t v17 = (char *)&v64 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = _s17ArtistDetailsViewVMa();
  uint64_t v19 = v18 - 8;
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v64 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1000060EC(&qword_100158C80);
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)&v64 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_1000060EC(&qword_10015A260);
  uint64_t v26 = __chkstk_darwin(v25 - 8);
  char v28 = (char *)&v64 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  uint64_t v30 = (char *)&v64 - v29;
  sub_100088F20(a1, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for ArtistProfileViewModel);
  uint64_t v75 = a1;
  sub_100088F20(a1, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for ArtistProfileView);
  unint64_t v31 = (*(unsigned __int8 *)(v73 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v73 + 80);
  uint64_t v32 = swift_allocObject();
  sub_1000891E0((uint64_t)v15, v32 + v31, (uint64_t (*)(void))type metadata accessor for ArtistProfileView);
  sub_1000891E0((uint64_t)v17, (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for ArtistProfileViewModel);
  uint64_t v33 = (uint64_t (**)())&v21[*(int *)(v19 + 28)];
  *uint64_t v33 = sub_100089180;
  v33[1] = (uint64_t (*)())v32;
  uint64_t v34 = static Alignment.leading.getter();
  sub_100042DB0(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v24, 0.0, 1, 0.0, 1, v34, v35);
  sub_100089248((uint64_t)v21, (uint64_t (*)(void))_s17ArtistDetailsViewVMa);
  if (qword_1001562A0 != -1) {
    swift_once();
  }
  sub_1000892A8();
  View.accessibilityIdentifier(_:)();
  sub_1000063D0((uint64_t)v24, &qword_100158C80);
  sub_100009C30((uint64_t)v28, (uint64_t)v30, &qword_10015A260);
  if (*(void *)(v75 + *(int *)(v74 + 28) + 8))
  {
    uint64_t v36 = qword_1001561C8;
    swift_bridgeObjectRetain();
    if (v36 != -1) {
      swift_once();
    }
    uint64_t v37 = self;
    swift_retain();
    id v38 = [v37 mainBundle];
    v39._uint64_t countAndFlagsBits = 0xD000000000000016;
    v81._object = (void *)0xE000000000000000;
    v39._object = (void *)0x8000000100119A50;
    v40._uint64_t countAndFlagsBits = 0;
    v40._object = (void *)0xE000000000000000;
    v81._uint64_t countAndFlagsBits = 0;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v39, (Swift::String_optional)0, (NSBundle)v38, v40, v81);

    String.lowercased()();
    swift_bridgeObjectRelease();
    uint64_t v41 = v66;
    ExpandableTextView.init(text:font:numberOfLines:expandTextToken:_:)();
    if (qword_1001561D0 != -1) {
      swift_once();
    }
    int v42 = dword_10015A168;
    uint64_t v44 = v67;
    uint64_t v43 = v68;
    uint64_t v45 = (uint64_t)v70;
    (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v70, v41, v68);
    *(_DWORD *)(v45 + *(int *)(v65 + 36)) = v42;
    (*(void (**)(char *, uint64_t))(v44 + 8))(v41, v43);
    char v46 = static Edge.Set.top.getter();
    uint64_t v47 = (uint64_t)v80;
    if (qword_1001561E0 != -1) {
      swift_once();
    }
    EdgeInsets.init(_all:)();
    uint64_t v49 = v48;
    uint64_t v51 = v50;
    uint64_t v53 = v52;
    uint64_t v55 = v54;
    uint64_t v56 = v71;
    sub_100009C94(v45, v71, &qword_10015A240);
    uint64_t v57 = v56 + *(int *)(v72 + 36);
    *(unsigned char *)uint64_t v57 = v46;
    *(void *)(v57 + 8) = v49;
    *(void *)(v57 + 16) = v51;
    *(void *)(v57 + 24) = v53;
    *(void *)(v57 + 32) = v55;
    *(unsigned char *)(v57 + 40) = 0;
    sub_1000063D0(v45, &qword_10015A240);
    sub_100089354();
    uint64_t v58 = (uint64_t)v69;
    View.accessibilityIdentifier(_:)();
    sub_1000063D0(v56, &qword_10015A248);
    sub_100009C30(v58, v47, &qword_10015A250);
    uint64_t v59 = 0;
  }
  else
  {
    uint64_t v59 = 1;
    uint64_t v47 = (uint64_t)v80;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v76 + 56))(v47, v59, 1, v77);
  sub_100009C94((uint64_t)v30, (uint64_t)v28, &qword_10015A260);
  uint64_t v60 = v78;
  sub_100009C94(v47, v78, &qword_10015A258);
  uint64_t v61 = v79;
  sub_100009C94((uint64_t)v28, v79, &qword_10015A260);
  uint64_t v62 = sub_1000060EC(&qword_10015A278);
  sub_100009C94(v60, v61 + *(int *)(v62 + 48), &qword_10015A258);
  sub_1000063D0(v47, &qword_10015A258);
  sub_1000063D0((uint64_t)v30, &qword_10015A260);
  sub_1000063D0(v60, &qword_10015A258);
  return sub_1000063D0((uint64_t)v28, &qword_10015A260);
}

uint64_t sub_100088A9C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for OpenURLAction();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000060EC((uint64_t *)&unk_100158FC0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)v29 - v14;
  uint64_t v16 = *(int *)(type metadata accessor for ArtistProfileViewModel() + 20);
  uint64_t v33 = a1;
  sub_100009C94(a1 + v16, (uint64_t)v8, (uint64_t *)&unk_100158FC0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_1000063D0((uint64_t)v8, (uint64_t *)&unk_100158FC0);
  }
  uint64_t v32 = v3;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v8, v9);
  if (qword_100156018 != -1) {
    swift_once();
  }
  uint64_t v18 = type metadata accessor for Logger();
  sub_10000E808(v18, (uint64_t)qword_100164B38);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
  uint64_t v19 = Logger.logObject.getter();
  os_log_type_t v20 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = swift_slowAlloc();
    uint64_t v31 = v2;
    uint64_t v22 = (uint8_t *)v21;
    uint64_t v30 = swift_slowAlloc();
    uint64_t v35 = v30;
    *(_DWORD *)uint64_t v22 = 136315138;
    v29[1] = v22 + 4;
    sub_1000894A0((unint64_t *)&qword_100156B88, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v23 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v34 = sub_1000CB67C(v23, v24, &v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v25 = *(void (**)(char *, uint64_t))(v10 + 8);
    v25(v13, v9);
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "Opening %s", v22, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v2 = v31;
    swift_slowDealloc();
  }
  else
  {
    uint64_t v25 = *(void (**)(char *, uint64_t))(v10 + 8);
    v25(v13, v9);
  }

  uint64_t v26 = type metadata accessor for ArtistProfileView();
  uint64_t v27 = v32;
  char v28 = (void (**)(void))(v33 + *(int *)(v26 + 20));
  if (*v28) {
    (*v28)();
  }
  sub_1000083D4((uint64_t)v5);
  OpenURLAction.callAsFunction(_:)();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v5, v2);
  return ((uint64_t (*)(char *, uint64_t))v25)(v15, v9);
}

uint64_t sub_100088F20(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100088F88()
{
  uint64_t v1 = type metadata accessor for ArtistProfileView();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v5 = v0 + v3;
  swift_bridgeObjectRelease();
  uint64_t v6 = v0 + v3 + *(int *)(type metadata accessor for ArtistProfileViewModel() + 20);
  uint64_t v7 = type metadata accessor for URL();
  uint64_t v8 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  if (*(void *)(v5 + *(int *)(v1 + 20))) {
    swift_release();
  }
  uint64_t v9 = v5 + *(int *)(v1 + 24);
  sub_1000060EC(&qword_100156940);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for OpenURLAction();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  }
  else
  {
    swift_release();
  }

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_100089180()
{
  uint64_t v1 = *(void *)(type metadata accessor for ArtistProfileView() - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_100088A9C(v2);
}

uint64_t sub_1000891E0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100089248(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1000892A8()
{
  unint64_t result = qword_10015A268;
  if (!qword_10015A268)
  {
    sub_100006224(&qword_100158C80);
    sub_1000894A0(&qword_10015A270, (void (*)(uint64_t))_s17ArtistDetailsViewVMa);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015A268);
  }
  return result;
}

unint64_t sub_100089354()
{
  unint64_t result = qword_10015A280;
  if (!qword_10015A280)
  {
    sub_100006224(&qword_10015A248);
    sub_1000893D0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015A280);
  }
  return result;
}

unint64_t sub_1000893D0()
{
  unint64_t result = qword_10015A288;
  if (!qword_10015A288)
  {
    sub_100006224(&qword_10015A240);
    sub_1000894A0(&qword_10015A290, (void (*)(uint64_t))&type metadata accessor for ExpandableTextView);
    sub_100006480(&qword_100156798, &qword_1001567A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015A288);
  }
  return result;
}

uint64_t sub_1000894A0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000894EC()
{
  unint64_t result = qword_10015A298;
  if (!qword_10015A298)
  {
    sub_100006224(&qword_10015A238);
    sub_10008958C();
    sub_100006480(&qword_10015A2C8, &qword_100157ED8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015A298);
  }
  return result;
}

unint64_t sub_10008958C()
{
  unint64_t result = qword_10015A2A0;
  if (!qword_10015A2A0)
  {
    sub_100006224(&qword_10015A228);
    sub_10008962C();
    sub_100006480(&qword_10015A2B8, &qword_10015A2C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015A2A0);
  }
  return result;
}

unint64_t sub_10008962C()
{
  unint64_t result = qword_10015A2A8;
  if (!qword_10015A2A8)
  {
    sub_100006224(&qword_10015A220);
    sub_100006480(&qword_10015A2B0, &qword_10015A218);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015A2A8);
  }
  return result;
}

void destroy for LibraryItemPreview(uint64_t a1)
{
  if (*(void *)(a1 + 8))
  {
    swift_release();
  }
}

void *_s16MusicRecognition18LibraryItemPreviewVwCP_0(void *a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  *a1 = *(void *)a2;
  uint64_t v5 = a1 + 1;
  uint64_t v7 = (_OWORD *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 8);
  id v8 = v4;
  if (v6)
  {
    uint64_t v9 = *(void *)(a2 + 16);
    a1[1] = v6;
    a1[2] = v9;
    swift_retain();
  }
  else
  {
    *uint64_t v5 = *v7;
  }
  return a1;
}

uint64_t assignWithCopy for LibraryItemPreview(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  uint64_t v7 = *(void *)(a2 + 8);
  if (!*(void *)(a1 + 8))
  {
    if (v7)
    {
      uint64_t v9 = *(void *)(a2 + 16);
      *(void *)(a1 + 8) = v7;
      *(void *)(a1 + 16) = v9;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    return a1;
  }
  if (!v7)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v8 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = v7;
  *(void *)(a1 + 16) = v8;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for LibraryItemPreview(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *a2;

  uint64_t v5 = a2[1];
  if (!*(void *)(a1 + 8))
  {
    if (v5)
    {
      uint64_t v7 = a2[2];
      *(void *)(a1 + 8) = v5;
      *(void *)(a1 + 16) = v7;
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    return a1;
  }
  if (!v5)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v6 = a2[2];
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for LibraryItemPreview(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LibraryItemPreview(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LibraryItemPreview()
{
  return &type metadata for LibraryItemPreview;
}

uint64_t sub_10008994C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100089968@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v58 = a2;
  uint64_t v59 = a3;
  uint64_t v54 = a4;
  uint64_t v53 = sub_1000060EC(&qword_1001571C0);
  __chkstk_darwin(v53);
  uint64_t v6 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for AccessibilityChildBehavior();
  uint64_t v56 = *(void *)(v7 - 8);
  uint64_t v57 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000060EC(&qword_10015A2D0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000060EC(&qword_10015A2D8);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1000060EC(&qword_10015A2E0);
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = sub_1000060EC(&qword_10015A2E8);
  __chkstk_darwin(v49);
  uint64_t v21 = (char *)&v48 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1000060EC(&qword_10015A2F0);
  uint64_t v51 = *(void *)(v22 - 8);
  uint64_t v52 = v22;
  __chkstk_darwin(v22);
  uint64_t v50 = (char *)&v48 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v12 = static VerticalAlignment.center.getter();
  *((void *)v12 + 1) = 0x4030000000000000;
  v12[16] = 0;
  uint64_t v24 = (uint64_t)&v12[*(int *)(sub_1000060EC(&qword_10015A2F8) + 44)];
  uint64_t v55 = a1;
  sub_100089F54(a1, v24);
  LOBYTE(a1) = static Edge.Set.all.getter();
  EdgeInsets.init(_all:)();
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  sub_10008A294((uint64_t)v12, (uint64_t)v15);
  uint64_t v33 = &v15[*(int *)(v13 + 36)];
  *uint64_t v33 = (char)a1;
  *((void *)v33 + 1) = v26;
  *((void *)v33 + 2) = v28;
  *((void *)v33 + 3) = v30;
  *((void *)v33 + 4) = v32;
  v33[40] = 0;
  sub_1000063D0((uint64_t)v12, &qword_10015A2D0);
  static AccessibilityChildBehavior.combine.getter();
  unint64_t v34 = sub_10008A2FC();
  View.accessibilityElement(children:)();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v9, v57);
  sub_1000063D0((uint64_t)v15, &qword_10015A2D8);
  uint64_t v60 = v13;
  unint64_t v61 = v34;
  swift_getOpaqueTypeConformance2();
  View.accessibilityIdentifier(_:)();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  uint64_t v35 = enum case for DynamicTypeSize.xxxLarge(_:);
  uint64_t v36 = type metadata accessor for DynamicTypeSize();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v36 - 8) + 104))(v6, v35, v36);
  sub_10008A47C(&qword_100157258, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  uint64_t result = dispatch thunk of static Equatable.== infix(_:_:)();
  if (result)
  {
    sub_10008A39C();
    sub_100006480(&qword_100157260, &qword_1001571C0);
    id v38 = v50;
    View.dynamicTypeSize<A>(_:)();
    sub_1000063D0((uint64_t)v6, &qword_1001571C0);
    sub_1000063D0((uint64_t)v21, &qword_10015A2E8);
    Swift::String v39 = (uint64_t (*)())swift_allocObject();
    uint64_t v41 = v54;
    Swift::String v40 = v55;
    uint64_t v43 = v58;
    uint64_t v42 = v59;
    *((void *)v39 + 2) = v55;
    *((void *)v39 + 3) = v43;
    *((void *)v39 + 4) = v42;
    uint64_t v45 = v51;
    uint64_t v44 = v52;
    (*(void (**)(uint64_t, char *, uint64_t))(v51 + 16))(v41, v38, v52);
    char v46 = (uint64_t (**)())(v41 + *(int *)(sub_1000060EC(&qword_10015A318) + 36));
    char *v46 = sub_10008A50C;
    v46[1] = v39;
    v46[2] = 0;
    v46[3] = 0;
    id v47 = v40;
    sub_100017778(v43);
    return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v38, v44);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100089F54@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000060EC((uint64_t *)&unk_100158FC0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for LibraryItemArtwork();
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v13 = (char *)&v33 - v12;
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v33 - v14;
  id v16 = [a1 artworkURL];
  if (v16)
  {
    uint64_t v17 = v16;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v18 = type metadata accessor for URL();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v6, 0, 1, v18);
  }
  else
  {
    uint64_t v19 = type metadata accessor for URL();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v6, 1, 1, v19);
  }
  sub_100009F78((uint64_t)v6, (uint64_t)v13);
  *(void *)&v42[0] = 0x4058000000000000;
  sub_10008A53C();
  ScaledMetric.init(wrappedValue:)();
  uint64_t v20 = (uint64_t *)&v13[*(int *)(v7 + 24)];
  *uint64_t v20 = swift_getKeyPath();
  sub_1000060EC(&qword_100156938);
  swift_storeEnumTagMultiPayload();
  sub_10008A598((uint64_t)v13, (uint64_t)v15);
  id v21 = a1;
  uint64_t v22 = static Alignment.leading.getter();
  sub_100042E28(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)&v33, 0.0, 1, 0.0, 1, v22, v23, v21, 1);

  sub_10008A5FC((uint64_t)v15, (uint64_t)v10);
  sub_10008A5FC((uint64_t)v10, a2);
  uint64_t v24 = (_OWORD *)(a2 + *(int *)(sub_1000060EC(&qword_10015A328) + 48));
  long long v25 = v37;
  long long v26 = v38;
  v41[4] = v37;
  void v41[5] = v38;
  long long v27 = v39;
  long long v28 = v40;
  v41[6] = v39;
  v41[7] = v40;
  long long v29 = v33;
  long long v30 = v34;
  v41[0] = v33;
  v41[1] = v34;
  long long v31 = v36;
  v41[2] = v35;
  v41[3] = v36;
  void v24[2] = v35;
  v24[3] = v31;
  _OWORD *v24 = v29;
  v24[1] = v30;
  v24[6] = v27;
  v24[7] = v28;
  v24[4] = v25;
  v24[5] = v26;
  sub_10008A660((id *)v41);
  sub_10008A68C((uint64_t)v15);
  v42[4] = v37;
  v42[5] = v38;
  v42[6] = v39;
  v42[7] = v40;
  v42[0] = v33;
  v42[1] = v34;
  v42[2] = v35;
  v42[3] = v36;
  sub_10008A6E8((id *)v42);
  return sub_10008A68C((uint64_t)v10);
}

uint64_t sub_10008A288@<X0>(uint64_t a1@<X8>)
{
  return sub_100089968(*(void **)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), a1);
}

uint64_t sub_10008A294(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000060EC(&qword_10015A2D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_10008A2FC()
{
  unint64_t result = qword_10015A300;
  if (!qword_10015A300)
  {
    sub_100006224(&qword_10015A2D8);
    sub_100006480(&qword_10015A308, &qword_10015A2D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015A300);
  }
  return result;
}

unint64_t sub_10008A39C()
{
  unint64_t result = qword_10015A310;
  if (!qword_10015A310)
  {
    sub_100006224(&qword_10015A2E8);
    sub_100006224(&qword_10015A2D8);
    sub_10008A2FC();
    swift_getOpaqueTypeConformance2();
    sub_10008A47C((unint64_t *)&qword_1001567D8, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015A310);
  }
  return result;
}

uint64_t sub_10008A47C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10008A4C4()
{
  if (*(void *)(v0 + 24)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10008A50C()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 24);
  if (v1) {
    return v1();
  }
  return result;
}

unint64_t sub_10008A53C()
{
  unint64_t result = qword_10015A320;
  if (!qword_10015A320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015A320);
  }
  return result;
}

uint64_t sub_10008A598(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LibraryItemArtwork();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10008A5FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LibraryItemArtwork();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id *sub_10008A660(id *a1)
{
  id v2 = *a1;
  return a1;
}

uint64_t sub_10008A68C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for LibraryItemArtwork();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id *sub_10008A6E8(id *a1)
{
  return a1;
}

unint64_t sub_10008A718()
{
  unint64_t result = qword_10015A330;
  if (!qword_10015A330)
  {
    sub_100006224(&qword_10015A318);
    sub_100006224(&qword_10015A2E8);
    sub_100006224(&qword_1001571C0);
    sub_10008A39C();
    sub_100006480(&qword_100157260, &qword_1001571C0);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015A330);
  }
  return result;
}

uint64_t *sub_10008A818(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    uint64_t v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = (int *)type metadata accessor for ArtistProfileViewModel();
    uint64_t v9 = v8[5];
    __dst = (char *)v4 + v9;
    uint64_t v10 = (char *)a2 + v9;
    uint64_t v11 = type metadata accessor for URL();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = sub_1000060EC((uint64_t *)&unk_100158FC0);
      memcpy(__dst, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(__dst, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
    }
    uint64_t v16 = v8[6];
    uint64_t v17 = (uint64_t *)((char *)v4 + v16);
    uint64_t v18 = (uint64_t *)((char *)a2 + v16);
    uint64_t v19 = v18[1];
    *uint64_t v17 = *v18;
    v17[1] = v19;
    uint64_t v20 = v8[7];
    id v21 = (uint64_t *)((char *)v4 + v20);
    uint64_t v22 = (uint64_t *)((char *)a2 + v20);
    uint64_t v23 = v22[1];
    *id v21 = *v22;
    v21[1] = v23;
    *(uint64_t *)((char *)v4 + v8[8]) = *(uint64_t *)((char *)a2 + v8[8]);
    uint64_t v24 = *(int *)(a3 + 20);
    long long v25 = (uint64_t *)((char *)v4 + v24);
    long long v26 = (uint64_t *)((char *)a2 + v24);
    uint64_t v27 = v26[1];
    *long long v25 = *v26;
    v25[1] = v27;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_10008AA18(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = a1 + *(int *)(type metadata accessor for ArtistProfileViewModel() + 20);
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v4 = *(void *)(v3 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3)) {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_release();
}

void *sub_10008AB24(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = (int *)type metadata accessor for ArtistProfileViewModel();
  uint64_t v7 = v6[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = sub_1000060EC((uint64_t *)&unk_100158FC0);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = v6[6];
  uint64_t v15 = (void *)((char *)a1 + v14);
  uint64_t v16 = (void *)((char *)a2 + v14);
  uint64_t v17 = v16[1];
  *uint64_t v15 = *v16;
  v15[1] = v17;
  uint64_t v18 = v6[7];
  uint64_t v19 = (void *)((char *)a1 + v18);
  uint64_t v20 = (void *)((char *)a2 + v18);
  uint64_t v21 = v20[1];
  void *v19 = *v20;
  v19[1] = v21;
  *(void *)((char *)a1 + v6[8]) = *(void *)((char *)a2 + v6[8]);
  uint64_t v22 = *(int *)(a3 + 20);
  uint64_t v23 = (void *)((char *)a1 + v22);
  uint64_t v24 = (void *)((char *)a2 + v22);
  uint64_t v25 = v24[1];
  *uint64_t v23 = *v24;
  v23[1] = v25;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

void *sub_10008ACD4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = (int *)type metadata accessor for ArtistProfileViewModel();
  uint64_t v6 = v5[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = sub_1000060EC((uint64_t *)&unk_100158FC0);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  uint64_t v15 = v5[6];
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  void *v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = v5[7];
  uint64_t v19 = (void *)((char *)a1 + v18);
  uint64_t v20 = (void *)((char *)a2 + v18);
  void *v19 = *v20;
  v19[1] = v20[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v5[8]) = *(void *)((char *)a2 + v5[8]);
  swift_retain();
  swift_release();
  uint64_t v21 = *(int *)(a3 + 20);
  uint64_t v22 = (void *)((char *)a1 + v21);
  uint64_t v23 = (void *)((char *)a2 + v21);
  uint64_t v24 = v23[1];
  *uint64_t v22 = *v23;
  v22[1] = v24;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_10008AF24(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = (int *)type metadata accessor for ArtistProfileViewModel();
  uint64_t v7 = v6[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = sub_1000060EC((uint64_t *)&unk_100158FC0);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  *(_OWORD *)((char *)a1 + v6[6]) = *(_OWORD *)((char *)a2 + v6[6]);
  *(_OWORD *)((char *)a1 + v6[7]) = *(_OWORD *)((char *)a2 + v6[7]);
  *(void *)((char *)a1 + v6[8]) = *(void *)((char *)a2 + v6[8]);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 20));
  return a1;
}

void *sub_10008B084(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = (int *)type metadata accessor for ArtistProfileViewModel();
  uint64_t v7 = v6[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = sub_1000060EC((uint64_t *)&unk_100158FC0);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  uint64_t v16 = v6[6];
  uint64_t v17 = (void *)((char *)a1 + v16);
  uint64_t v18 = (void *)((char *)a2 + v16);
  uint64_t v20 = *v18;
  uint64_t v19 = v18[1];
  *uint64_t v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  uint64_t v21 = v6[7];
  uint64_t v22 = (void *)((char *)a1 + v21);
  uint64_t v23 = (void *)((char *)a2 + v21);
  uint64_t v25 = *v23;
  uint64_t v24 = v23[1];
  *uint64_t v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v6[8]) = *(void *)((char *)a2 + v6[8]);
  swift_release();
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 20));
  swift_release();
  return a1;
}

uint64_t sub_10008B290(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10008B2A4);
}

uint64_t sub_10008B2A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ArtistProfileViewModel();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_10008B364(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10008B378);
}

uint64_t sub_10008B378(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for ArtistProfileViewModel();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t _s17ArtistDetailsViewVMa()
{
  uint64_t result = qword_10015A3A0;
  if (!qword_10015A3A0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10008B480()
{
  uint64_t result = type metadata accessor for ArtistProfileViewModel();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10008B518()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10008B534()
{
  uint64_t result = static Font.subheadline.getter();
  qword_10015A338 = result;
  return result;
}

uint64_t sub_10008B554()
{
  uint64_t result = static Color.secondary.getter();
  qword_10015A340 = result;
  return result;
}

uint64_t sub_10008B574@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v32 = a1;
  uint64_t v33 = type metadata accessor for AccessibilityTraits();
  uint64_t v31 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  long long v30 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for AccessibilityChildBehavior();
  uint64_t v28 = *(void *)(v4 - 8);
  uint64_t v29 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000060EC(&qword_100158CB8);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000060EC(&qword_100158CC0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000060EC(&qword_10015A3D8);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_1000060EC(&qword_10015A3E0);
  __chkstk_darwin(v27);
  uint64_t v18 = (char *)&v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v9 = static VerticalAlignment.center.getter();
  *((void *)v9 + 1) = 0;
  v9[16] = 1;
  uint64_t v19 = sub_1000060EC(&qword_10015A3E8);
  sub_10008B9A4((uint64_t)v2, (uint64_t)&v9[*(int *)(v19 + 44)]);
  uint64_t v20 = static Alignment.leading.getter();
  sub_100042FF0(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v12, 0.0, 1, 0.0, 1, v20, v21);
  sub_1000063D0((uint64_t)v9, &qword_100158CB8);
  static AccessibilityChildBehavior.combine.getter();
  unint64_t v22 = sub_10008C80C();
  View.accessibilityElement(children:)();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v6, v29);
  sub_1000063D0((uint64_t)v12, &qword_100158CC0);
  uint64_t v23 = v2[1];
  uint64_t v36 = *v2;
  uint64_t v37 = v23;
  uint64_t v34 = v10;
  unint64_t v35 = v22;
  swift_getOpaqueTypeConformance2();
  sub_10000E0F0();
  View.accessibilityLabel<A>(_:)();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  uint64_t v24 = v30;
  static AccessibilityTraits.isButton.getter();
  ModifiedContent<>.accessibilityAddTraits(_:)();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v24, v33);
  return sub_1000063D0((uint64_t)v18, &qword_10015A3E0);
}

uint64_t sub_10008B9A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v53 = a2;
  uint64_t v3 = sub_1000060EC((uint64_t *)&unk_100158FC0);
  __chkstk_darwin(v3 - 8);
  uint64_t v48 = (uint64_t)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = _s17ArtistDetailsViewVMa();
  uint64_t v44 = *(void *)(v5 - 8);
  uint64_t v6 = *(void *)(v44 + 64);
  __chkstk_darwin(v5 - 8);
  uint64_t v52 = sub_1000060EC(&qword_10015A400);
  uint64_t v50 = *(void *)(v52 - 8);
  __chkstk_darwin(v52);
  uint64_t v45 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = sub_1000060EC(&qword_10015A408) - 8;
  uint64_t v8 = __chkstk_darwin(v49);
  uint64_t v51 = (uint64_t)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  char v46 = (char *)&v44 - v11;
  __chkstk_darwin(v10);
  uint64_t v47 = (uint64_t)&v44 - v12;
  uint64_t v13 = type metadata accessor for ArtistProfileViewModel();
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v19 = (char *)&v44 - v18;
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v44 - v20;
  uint64_t v22 = _s22ArtistProfileImageViewVMa();
  uint64_t v23 = __chkstk_darwin(v22 - 8);
  uint64_t v25 = (char *)&v44 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v27 = (char *)&v44 - v26;
  sub_10008CB9C(a1, (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for ArtistProfileViewModel);
  sub_10008CB9C((uint64_t)v21, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for ArtistProfileViewModel);
  sub_10008CB9C((uint64_t)v19, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for ArtistProfileViewModel);
  State.init(wrappedValue:)();
  sub_10008CC04((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for ArtistProfileViewModel);
  sub_10008CC04((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for ArtistProfileViewModel);
  sub_10008CA38((uint64_t)v25, (uint64_t)v27, (uint64_t (*)(void))_s22ArtistProfileImageViewVMa);
  sub_10008CB9C(a1, (uint64_t)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))_s17ArtistDetailsViewVMa);
  unint64_t v28 = (*(unsigned __int8 *)(v44 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80);
  uint64_t v29 = swift_allocObject();
  sub_10008CA38((uint64_t)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v29 + v28, (uint64_t (*)(void))_s17ArtistDetailsViewVMa);
  uint64_t v54 = a1;
  sub_1000060EC(&qword_10015A410);
  sub_100006480(&qword_10015A418, &qword_10015A410);
  long long v30 = v45;
  Button.init(action:label:)();
  uint64_t v31 = v48;
  sub_100009C94(a1 + *(int *)(v13 + 20), v48, (uint64_t *)&unk_100158FC0);
  uint64_t v32 = type metadata accessor for URL();
  LOBYTE(v13) = (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 48))(v31, 1, v32) == 1;
  sub_1000063D0(v31, (uint64_t *)&unk_100158FC0);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v34 = swift_allocObject();
  *(unsigned char *)(v34 + 16) = v13;
  uint64_t v35 = v50;
  uint64_t v36 = (uint64_t)v46;
  uint64_t v37 = v52;
  (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v46, v30, v52);
  long long v38 = (uint64_t *)(v36 + *(int *)(v49 + 44));
  *long long v38 = KeyPath;
  v38[1] = (uint64_t)sub_10008CB2C;
  v38[2] = v34;
  (*(void (**)(char *, uint64_t))(v35 + 8))(v30, v37);
  uint64_t v39 = v47;
  sub_10008CB34(v36, v47);
  sub_10008CB9C((uint64_t)v27, (uint64_t)v25, (uint64_t (*)(void))_s22ArtistProfileImageViewVMa);
  uint64_t v40 = v51;
  sub_100009C94(v39, v51, &qword_10015A408);
  uint64_t v41 = v53;
  sub_10008CB9C((uint64_t)v25, v53, (uint64_t (*)(void))_s22ArtistProfileImageViewVMa);
  uint64_t v42 = sub_1000060EC(&qword_10015A420);
  sub_100009C94(v40, v41 + *(int *)(v42 + 48), &qword_10015A408);
  sub_1000063D0(v39, &qword_10015A408);
  sub_10008CC04((uint64_t)v27, (uint64_t (*)(void))_s22ArtistProfileImageViewVMa);
  sub_1000063D0(v40, &qword_10015A408);
  return sub_10008CC04((uint64_t)v25, (uint64_t (*)(void))_s22ArtistProfileImageViewVMa);
}

double sub_10008C00C@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = static HorizontalAlignment.leading.getter();
  sub_10008C128(a1, (uint64_t)v11);
  *(_OWORD *)&v13[119] = v11[7];
  *(_OWORD *)&v13[103] = v11[6];
  *(_OWORD *)&v13[55] = v11[3];
  *(_OWORD *)&v13[39] = v11[2];
  *(_OWORD *)&v13[135] = v12[0];
  *(_OWORD *)&v13[144] = *(_OWORD *)((char *)v12 + 9);
  *(_OWORD *)&v13[71] = v11[4];
  *(_OWORD *)&v13[87] = v11[5];
  *(_OWORD *)&v13[7] = v11[0];
  *(_OWORD *)&v13[23] = v11[1];
  long long v5 = *(_OWORD *)&v13[112];
  *(_OWORD *)(a2 + 113) = *(_OWORD *)&v13[96];
  *(_OWORD *)(a2 + 129) = v5;
  long long v6 = *(_OWORD *)&v13[144];
  *(_OWORD *)(a2 + 145) = *(_OWORD *)&v13[128];
  *(_OWORD *)(a2 + 161) = v6;
  long long v7 = *(_OWORD *)&v13[48];
  *(_OWORD *)(a2 + 49) = *(_OWORD *)&v13[32];
  *(_OWORD *)(a2 + 65) = v7;
  long long v8 = *(_OWORD *)&v13[80];
  *(_OWORD *)(a2 + 81) = *(_OWORD *)&v13[64];
  *(_OWORD *)(a2 + 97) = v8;
  double result = *(double *)v13;
  long long v10 = *(_OWORD *)&v13[16];
  *(_OWORD *)(a2 + 17) = *(_OWORD *)v13;
  *(void *)a2 = v4;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 1;
  *(_OWORD *)(a2 + 33) = v10;
  return result;
}

uint64_t sub_10008C128@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v34 = static VerticalAlignment.center.getter();
  sub_10008C480(a1, (uint64_t)&v47);
  uint64_t v43 = v48;
  uint64_t v44 = v47;
  char v41 = v49;
  uint64_t v4 = v51;
  uint64_t v33 = v52;
  uint64_t v40 = v54;
  char v38 = v55;
  char v39 = v53;
  uint64_t v42 = v56;
  uint64_t v45 = v57;
  uint64_t v46 = v50;
  long long v5 = (uint64_t *)((char *)a1 + *(int *)(type metadata accessor for ArtistProfileViewModel() + 24));
  uint64_t v6 = v5[1];
  if (v6)
  {
    uint64_t v47 = *v5;
    uint64_t v48 = v6;
    sub_10000E0F0();
    uint64_t v47 = StringProtocol.localizedUppercase.getter();
    uint64_t v48 = v7;
    uint64_t v8 = Text.init<A>(_:)();
    uint64_t v10 = v9;
    char v12 = v11 & 1;
    static Font.caption.getter();
    uint64_t v13 = Text.font(_:)();
    uint64_t v15 = v14;
    uint64_t v32 = v4;
    char v17 = v16;
    swift_release();
    char v18 = v17 & 1;
    sub_10000E904(v8, v10, v12);
    swift_bridgeObjectRelease();
    uint64_t v47 = static Color.secondary.getter();
    uint64_t v19 = Text.foregroundStyle<A>(_:)();
    uint64_t v21 = v20;
    char v23 = v22 & 1;
    sub_10000E904(v13, v15, v18);
    swift_release();
    swift_bridgeObjectRelease();
    static Font.Weight.bold.getter();
    uint64_t v24 = Text.fontWeight(_:)();
    uint64_t v36 = v25;
    uint64_t v37 = v24;
    uint64_t v35 = v26;
    uint64_t v28 = v27 & 1;
    uint64_t v29 = v19;
    uint64_t v4 = v32;
    sub_10000E904(v29, v21, v23);
    swift_bridgeObjectRelease();
    uint64_t KeyPath = swift_getKeyPath();
  }
  else
  {
    uint64_t v36 = 0;
    uint64_t v37 = 0;
    uint64_t v28 = 0;
    uint64_t v35 = 0;
    uint64_t KeyPath = 0;
  }
  LOBYTE(v47) = 0;
  *(void *)a2 = v34;
  *(void *)(a2 + 8) = 0x4028000000000000;
  *(unsigned char *)(a2 + 16) = 0;
  *(void *)(a2 + 24) = v44;
  *(void *)(a2 + 32) = v43;
  *(unsigned char *)(a2 + 40) = v41;
  *(void *)(a2 + 48) = v46;
  *(void *)(a2 + 56) = v4;
  *(void *)(a2 + 64) = v33;
  *(unsigned char *)(a2 + 72) = v39;
  *(void *)(a2 + 80) = v40;
  *(unsigned char *)(a2 + 88) = v38;
  *(void *)(a2 + 96) = v42;
  *(void *)(a2 + 104) = v45;
  *(void *)(a2 + 112) = v37;
  *(void *)(a2 + 120) = v36;
  *(void *)(a2 + 128) = v28;
  *(void *)(a2 + 136) = v35;
  *(void *)(a2 + 144) = KeyPath;
  *(unsigned char *)(a2 + 152) = 0;
  sub_10002FC24(v44, v43, v41);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_10008CC64(v42);
  sub_10008CCA4(v37, v36, v28, v35);
  sub_10008CCF4(v37, v36, v28, v35);
  sub_10000E904(v44, v43, v41);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return sub_10008CD44(v42);
}

uint64_t sub_10008C480@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000060EC((uint64_t *)&unk_100158FC0);
  __chkstk_darwin(v4 - 8);
  char v38 = a1;
  uint64_t v39 = (uint64_t)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = a1[1];
  uint64_t v40 = *a1;
  uint64_t v41 = v6;
  sub_10000E0F0();
  swift_bridgeObjectRetain();
  uint64_t v7 = Text.init<A>(_:)();
  uint64_t v9 = v8;
  char v11 = v10 & 1;
  static Font.title3.getter();
  uint64_t v12 = Text.font(_:)();
  uint64_t v14 = v13;
  char v16 = v15;
  swift_release();
  sub_10000E904(v7, v9, v11);
  swift_bridgeObjectRelease();
  static Font.Weight.semibold.getter();
  uint64_t v17 = Text.fontWeight(_:)();
  uint64_t v19 = v18;
  LOBYTE(v9) = v20 & 1;
  sub_10000E904(v12, v14, v16 & 1);
  swift_bridgeObjectRelease();
  uint64_t v40 = static Color.primary.getter();
  uint64_t v21 = Text.foregroundStyle<A>(_:)();
  uint64_t v23 = v22;
  HIDWORD(v37) = v24;
  uint64_t v26 = v25;
  sub_10000E904(v17, v19, v9);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v28 = swift_getKeyPath();
  uint64_t v29 = type metadata accessor for ArtistProfileViewModel();
  uint64_t v30 = v39;
  sub_100009C94((uint64_t)v38 + *(int *)(v29 + 20), v39, (uint64_t *)&unk_100158FC0);
  uint64_t v31 = type metadata accessor for URL();
  LODWORD(v7) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 48))(v30, 1, v31);
  sub_1000063D0(v30, (uint64_t *)&unk_100158FC0);
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  if (v7 != 1)
  {
    if (qword_1001561E8 != -1) {
      swift_once();
    }
    uint64_t v32 = qword_10015A338;
    uint64_t v34 = qword_1001561F0;
    swift_retain();
    if (v34 != -1) {
      swift_once();
    }
    uint64_t v33 = qword_10015A340;
    swift_retain();
  }
  char v35 = BYTE4(v37) & 1;
  *(void *)a2 = v21;
  *(void *)(a2 + 8) = v23;
  *(unsigned char *)(a2 + 16) = v35;
  *(void *)(a2 + 24) = v26;
  *(void *)(a2 + 32) = KeyPath;
  *(void *)(a2 + 40) = 1;
  *(unsigned char *)(a2 + 48) = 0;
  *(void *)(a2 + 56) = v28;
  *(unsigned char *)(a2 + 64) = 0;
  *(void *)(a2 + 72) = v32;
  *(void *)(a2 + 80) = v33;
  sub_10002FC24(v21, v23, v35);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_10008CC64(v32);
  sub_10008CD44(v32);
  sub_10000E904(v21, v23, v35);
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

unint64_t sub_10008C80C()
{
  unint64_t result = qword_10015A3F0;
  if (!qword_10015A3F0)
  {
    sub_100006224(&qword_100158CC0);
    sub_100006480(&qword_10015A3F8, &qword_100158CB8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015A3F0);
  }
  return result;
}

uint64_t sub_10008C8AC()
{
  uint64_t v1 = *(void *)(_s17ArtistDetailsViewVMa() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  swift_bridgeObjectRelease();
  uint64_t v5 = v0 + v3 + *(int *)(type metadata accessor for ArtistProfileViewModel() + 20);
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_10008CA38(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10008CAA0()
{
  uint64_t v1 = _s17ArtistDetailsViewVMa();
  return (*(uint64_t (**)(void))(v0
                              + *(int *)(v1 + 20)
                              + ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80))))();
}

double sub_10008CB0C@<D0>(uint64_t a1@<X8>)
{
  return sub_10008C00C(*(uint64_t **)(v1 + 16), a1);
}

uint64_t sub_10008CB1C()
{
  return _swift_deallocObject(v0, 17, 7);
}

unsigned char *sub_10008CB2C(unsigned char *a1)
{
  return sub_1000BCC00(a1, *(unsigned char *)(v1 + 16));
}

uint64_t sub_10008CB34(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000060EC(&qword_10015A408);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10008CB9C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10008CC04(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10008CC64(uint64_t result)
{
  if (result)
  {
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_10008CCA4(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_10002FC24(result, a2, a3 & 1);
    swift_bridgeObjectRetain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_10008CCF4(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_10000E904(result, a2, a3 & 1);
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10008CD44(uint64_t result)
{
  if (result)
  {
    swift_release();
    return swift_release();
  }
  return result;
}

unint64_t sub_10008CD98()
{
  unint64_t result = qword_10015A428[0];
  if (!qword_10015A428[0])
  {
    sub_100006224(&qword_10015A3E0);
    sub_100006224(&qword_100158CC0);
    sub_10008C80C();
    swift_getOpaqueTypeConformance2();
    sub_10005F80C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_10015A428);
  }
  return result;
}

uint64_t sub_10008CE48()
{
  uint64_t result = type metadata accessor for CoordinateSpace();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_10008CEF0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
  }
  else
  {
    uint64_t v8 = *(int *)(a3 + 36);
    uint64_t v9 = (char *)a1 + v8;
    char v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for CoordinateSpace();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = *(int *)(a3 + 40);
    uint64_t v13 = (uint64_t *)((char *)a1 + v12);
    uint64_t v14 = (uint64_t *)((char *)a2 + v12);
    uint64_t v15 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v15;
  }
  swift_retain();
  return a1;
}

uint64_t sub_10008CFD8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 36);
  uint64_t v3 = type metadata accessor for CoordinateSpace();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);

  return swift_release();
}

void *sub_10008D060(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 36);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for CoordinateSpace();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 40);
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  uint64_t v13 = v12[1];
  *uint64_t v11 = *v12;
  v11[1] = v13;
  swift_retain();
  return a1;
}

void *sub_10008D104(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 36);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for CoordinateSpace();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 40);
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  uint64_t v13 = v12[1];
  *uint64_t v11 = *v12;
  v11[1] = v13;
  swift_retain();
  swift_release();
  return a1;
}

void *sub_10008D1B4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 36);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for CoordinateSpace();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 40)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 40));
  return a1;
}

void *sub_10008D24C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 36);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for CoordinateSpace();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 40)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 40));
  swift_release();
  return a1;
}

uint64_t sub_10008D2F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10008D304);
}

uint64_t sub_10008D304(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for CoordinateSpace();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 36);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_10008D3B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10008D3C8);
}

void *sub_10008D3C8(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for CoordinateSpace();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 36);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for SizeModifier()
{
  return sub_100020608();
}

uint64_t sub_10008D488()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10008D4CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v29 = a1;
  uint64_t v30 = a3;
  uint64_t v4 = *(void *)(a2 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(a1);
  swift_getWitnessTable();
  v24[1] = type metadata accessor for _ViewModifier_Content();
  sub_100006224(&qword_10015A4B0);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v25 = *(void *)(a2 + 24);
  uint64_t v26 = v6;
  type metadata accessor for _PreferenceWritingModifier();
  uint64_t v7 = type metadata accessor for ModifiedContent();
  unint64_t v35 = sub_10008DC48();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v28 = &protocol conformance descriptor for <> ModifiedContent<A, B>;
  v24[3] = v7;
  void v24[2] = swift_getWitnessTable();
  type metadata accessor for GeometryReader();
  v24[4] = swift_getWitnessTable();
  v24[5] = type metadata accessor for _BackgroundModifier();
  uint64_t v8 = type metadata accessor for ModifiedContent();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)v24 - v13;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v27, a2);
  unint64_t v15 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v16 = swift_allocObject();
  uint64_t v17 = v25;
  *(void *)(v16 + 16) = v26;
  *(void *)(v16 + 24) = v17;
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v16 + v15, (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a2);
  uint64_t v33 = GeometryReader.init(content:)();
  uint64_t v34 = v18;
  static Alignment.center.getter();
  uint64_t v19 = swift_getWitnessTable();
  View.background<A>(_:alignment:)();
  swift_release();
  uint64_t v20 = swift_getWitnessTable();
  uint64_t v31 = v19;
  uint64_t v32 = v20;
  uint64_t v21 = swift_getWitnessTable();
  sub_1000BA728(v12, v8, v21);
  uint64_t v22 = *(void (**)(char *, uint64_t))(v9 + 8);
  v22(v12, v8);
  sub_1000BA728(v14, v8, v21);
  return ((uint64_t (*)(char *, uint64_t))v22)(v14, v8);
}

uint64_t sub_10008D8B0@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  v20[2] = a1;
  uint64_t v24 = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v21 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v5 = (char *)v20 - v4;
  v20[1] = sub_100006224(&qword_10015A4B0);
  v20[3] = type metadata accessor for _PreferenceWritingModifier();
  uint64_t v6 = type metadata accessor for ModifiedContent();
  uint64_t v22 = *(void *)(v6 - 8);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)v20 - v10;
  uint64_t v12 = static Color.clear.getter();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v28 = v12;
  v20[0] = *a2;
  uint64_t v13 = *(void (**)(uint64_t))((char *)a2 + *(int *)(type metadata accessor for SizeModifier() + 40));
  uint64_t v14 = GeometryProxy.frame(in:)();
  v13(v14);
  unint64_t v15 = sub_10008DC48();
  View.preference<A>(key:value:)();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v5, AssociatedTypeWitness);
  swift_release();
  swift_release();
  uint64_t WitnessTable = swift_getWitnessTable();
  unint64_t v25 = v15;
  uint64_t v26 = WitnessTable;
  uint64_t v17 = swift_getWitnessTable();
  sub_1000BA728(v9, v6, v17);
  uint64_t v18 = *(void (**)(char *, uint64_t))(v22 + 8);
  v18(v9, v6);
  sub_1000BA728(v11, v6, v17);
  return ((uint64_t (*)(char *, uint64_t))v18)(v11, v6);
}

uint64_t sub_10008DBA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  *a5 = a1;
  uint64_t v9 = type metadata accessor for SizeModifier();
  uint64_t v10 = (char *)a5 + *(int *)(v9 + 36);
  uint64_t v11 = type metadata accessor for CoordinateSpace();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v10, a2, v11);
  uint64_t v13 = (void *)((char *)a5 + *(int *)(v9 + 40));
  *uint64_t v13 = a3;
  v13[1] = a4;
  return result;
}

unint64_t sub_10008DC48()
{
  unint64_t result = qword_10015A4B8;
  if (!qword_10015A4B8)
  {
    sub_100006224(&qword_10015A4B0);
    sub_10008DCC4();
    sub_10008DD18();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015A4B8);
  }
  return result;
}

unint64_t sub_10008DCC4()
{
  unint64_t result = qword_10015A4C0;
  if (!qword_10015A4C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015A4C0);
  }
  return result;
}

unint64_t sub_10008DD18()
{
  unint64_t result = qword_100157240;
  if (!qword_100157240)
  {
    sub_100006224(&qword_100157248);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100157240);
  }
  return result;
}

uint64_t sub_10008DD74()
{
  uint64_t v1 = type metadata accessor for SizeModifier();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3 + *(int *)(v1 + 36);
  uint64_t v7 = type metadata accessor for CoordinateSpace();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_release();

  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_10008DE74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for SizeModifier() - 8);
  uint64_t v6 = (void *)(v2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)));

  return sub_10008D8B0(a1, v6, a2);
}

uint64_t sub_10008DF18()
{
  return swift_getWitnessTable();
}

ValueMetadata *type metadata accessor for ShazamCountsViewModel()
{
  return &type metadata for ShazamCountsViewModel;
}

double sub_10008E0C8@<D0>(double *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  double result = v3;
  *a1 = v3;
  return result;
}

uint64_t sub_10008E148()
{
  return sub_10007D628();
}

id sub_10008E1C8()
{
  id result = [objc_allocWithZone((Class)type metadata accessor for SongPreviewPlaybackController()) init];
  qword_100164BF8 = (uint64_t)result;
  return result;
}

uint64_t sub_10008E1FC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

id sub_10008E270()
{
  uint64_t v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v3 = sub_1000060EC(&qword_10015A528);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v1[OBJC_IVAR____TtC16MusicRecognition29SongPreviewPlaybackController_previewPlayer] = 0;
  *(void *)&v1[OBJC_IVAR____TtC16MusicRecognition29SongPreviewPlaybackController_playerContext] = 0;
  uint64_t v7 = &v1[OBJC_IVAR____TtC16MusicRecognition29SongPreviewPlaybackController__statusController];
  type metadata accessor for SongPreviewStatusController();
  uint64_t v8 = swift_allocObject();
  uint64_t v13 = 0;
  uint64_t v9 = v1;
  Published.init(initialValue:)();
  LOBYTE(v13) = 0;
  Published.init(initialValue:)();
  uint64_t v13 = v8;
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v7, v6, v3);

  v12.receiver = v9;
  v12.super_class = ObjectType;
  return [super init];
}

void sub_10008E438(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  sub_10008E828();
  id v7 = objc_allocWithZone((Class)AVURLAsset);
  URL._bridgeToObjectiveC()(v8);
  uint64_t v10 = v9;
  id v11 = [v7 initWithURL:v9 options:0];

  id v33 = [objc_allocWithZone((Class)AVPlayerItem) initWithAsset:v11];
  id v12 = [objc_allocWithZone((Class)AVPlayer) initWithPlayerItem:v33];
  uint64_t v13 = OBJC_IVAR____TtC16MusicRecognition29SongPreviewPlaybackController_previewPlayer;
  uint64_t v14 = *(void **)&v2[OBJC_IVAR____TtC16MusicRecognition29SongPreviewPlaybackController_previewPlayer];
  *(void *)&v2[OBJC_IVAR____TtC16MusicRecognition29SongPreviewPlaybackController_previewPlayer] = v12;

  unint64_t v15 = *(void **)&v2[v13];
  if (v15)
  {
    id v16 = v15;
    NSString v17 = String._bridgeToObjectiveC()();
    id v32 = v16;
    [v16 addObserver:v2 forKeyPath:v17 options:1 context:&v2[OBJC_IVAR____TtC16MusicRecognition29SongPreviewPlaybackController_playerContext]];

    id v18 = [self defaultCenter];
    uint64_t v19 = v4;
    NSString v20 = String._bridgeToObjectiveC()();
    id v21 = [v16 currentItem];
    [v18 addObserver:v2 selector:"playerDidFinishPlaying" name:v20 object:v21];

    CMTime v41 = CMTime.init(value:timescale:)(1, 5);
    CMTimeValue value = v41.value;
    LODWORD(v20) = v41.timescale;
    uint64_t v30 = HIDWORD(*(void *)&v41.timescale);
    CMTimeEpoch epoch = v41.epoch;
    sub_10008FEF4();
    uint64_t v23 = (void *)static OS_dispatch_queue.main.getter();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
    unint64_t v24 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v25 = swift_allocObject();
    *(void *)(v25 + 16) = v2;
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v25 + v24, (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v19);
    char v38 = sub_100090000;
    uint64_t v39 = v25;
    Swift::String aBlock = _NSConcreteStackBlock;
    unint64_t v35 = 1107296256;
    uint64_t v36 = sub_10008EF40;
    uint64_t v37 = &unk_10014BD80;
    uint64_t v26 = _Block_copy(&aBlock);
    uint64_t v27 = v2;
    swift_release();
    Swift::String aBlock = (void **)value;
    unint64_t v35 = __PAIR64__(v30, v20);
    id v28 = v32;
    uint64_t v36 = (uint64_t (*)(uint64_t, uint64_t *))epoch;
    id v29 = [v32 addPeriodicTimeObserverForInterval:&aBlock queue:v23 usingBlock:v26];
    _Block_release(v26);

    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
    _s16MusicRecognition11AnyPlaylistVwxx_0((uint64_t)&aBlock);
    sub_1000900A4();
  }
  else
  {
  }
}

uint64_t sub_10008E828()
{
  uint64_t v1 = OBJC_IVAR____TtC16MusicRecognition29SongPreviewPlaybackController_previewPlayer;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC16MusicRecognition29SongPreviewPlaybackController_previewPlayer);
  if (v2)
  {
    [v2 pause];
    uint64_t v3 = *(void **)(v0 + v1);
  }
  else
  {
    uint64_t v3 = 0;
  }
  *(void *)(v0 + v1) = 0;

  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.setter();
  sub_10007D628();
  swift_getKeyPath();
  swift_getKeyPath();
  return static Published.subscript.setter();
}

id sub_10008E944(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = type metadata accessor for URL();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = *(void **)(a4 + OBJC_IVAR____TtC16MusicRecognition29SongPreviewPlaybackController_previewPlayer);
  if (v11 && (id v12 = [v11 currentItem]) != 0)
  {
    uint64_t v13 = v12;
    [v12 duration];

    CMTime.seconds.getter();
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    CMTime.seconds.getter();
    sub_10007D928();
    swift_release();
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    id result = (id)swift_release();
    if (*(double *)v23 == 1.0) {
      return sub_10008EDF8();
    }
  }
  else
  {
    if (qword_100156018 != -1) {
      swift_once();
    }
    uint64_t v15 = type metadata accessor for Logger();
    sub_10000E808(v15, (uint64_t)qword_100164B38);
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a5, v7);
    id v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v16, v17))
    {
      id v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      v22[1] = a4;
      v23[0] = v19;
      *(_DWORD *)id v18 = 136315138;
      sub_10009049C((unint64_t *)&qword_100156B88, (void (*)(uint64_t))&type metadata accessor for URL);
      uint64_t v20 = dispatch thunk of CustomStringConvertible.description.getter();
      void v23[3] = sub_1000CB67C(v20, v21, v23);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "Invalid or missing duration for current item %s", v18, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    }

    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    swift_getKeyPath();
    swift_getKeyPath();
    v23[0] = 0;
    swift_retain();
    static Published.subscript.setter();
    sub_10007D628();
    return (id)swift_release();
  }
  return result;
}

id sub_10008EDF8()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  CMTimeValue value = 0;
  swift_retain();
  static Published.subscript.setter();
  sub_10007D628();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.setter();
  id result = *(id *)(v0 + OBJC_IVAR____TtC16MusicRecognition29SongPreviewPlaybackController_previewPlayer);
  if (result)
  {
    CMTimeScale timescale = kCMTimeZero.timescale;
    CMTimeFlags flags = kCMTimeZero.flags;
    CMTimeEpoch epoch = kCMTimeZero.epoch;
    CMTimeValue value = kCMTimeZero.value;
    CMTimeScale v13 = timescale;
    CMTimeFlags v14 = flags;
    CMTimeEpoch v15 = epoch;
    CMTimeEpoch v7 = epoch;
    CMTimeValue v8 = kCMTimeZero.value;
    CMTimeScale v9 = timescale;
    CMTimeFlags v10 = flags;
    CMTimeValue v4 = kCMTimeZero.value;
    CMTimeScale v5 = timescale;
    CMTimeFlags v6 = flags;
    return [result seekToTime:&value toleranceBefore:&v8 toleranceAfter:&v4];
  }
  return result;
}

uint64_t sub_10008EF40(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  uint64_t v3 = a2[1];
  uint64_t v4 = a2[2];
  CMTimeScale v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  v5(v2, v3, v4);

  return swift_release();
}

uint64_t sub_10008EFAC()
{
  return _swift_task_switch(sub_10008F038, 0, 0);
}

uint64_t sub_10008F038()
{
  id v1 = [self sharedInstance];
  *(void *)(v0 + 16) = 0;
  unsigned int v2 = [v1 setCategory:AVAudioSessionCategoryPlayback withOptions:1 error:v0 + 16];

  uint64_t v3 = *(void **)(v0 + 16);
  if (v2)
  {
    id v4 = v3;
  }
  else
  {
    id v5 = v3;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    if (qword_100156018 != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    sub_10000E808(v6, (uint64_t)qword_100164B38);
    swift_errorRetain();
    swift_errorRetain();
    CMTimeEpoch v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v7, v8))
    {
      CMTimeScale v9 = (uint8_t *)swift_slowAlloc();
      CMTimeFlags v10 = (void *)swift_slowAlloc();
      *(_DWORD *)CMTimeScale v9 = 138412290;
      swift_errorRetain();
      uint64_t v11 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 16) = v11;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *CMTimeFlags v10 = v11;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Received error setting playback category %@", v9, 0xCu);
      sub_1000060EC((uint64_t *)&unk_1001570F0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
  }
  id v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

void sub_10008F2DC()
{
  id v1 = *(void **)(v0 + OBJC_IVAR____TtC16MusicRecognition29SongPreviewPlaybackController_previewPlayer);
  if (v1)
  {
    id v6 = v1;
    id v2 = [v6 error];
    if (v2)
    {
      id v3 = v2;

      id v4 = v3;
    }
    else
    {
      [v6 rate];
      if (v5 == 0.0) {
        [v6 play];
      }
      else {
        [v6 pause];
      }
      id v4 = v6;
    }
  }
}

void sub_10008F3E4(uint64_t a1, NSString a2, uint64_t a3, Class isa, char *a5)
{
  id v6 = v5;
  ObjectType = (objc_class *)swift_getObjectType();
  if (!a5 || &v6[OBJC_IVAR____TtC16MusicRecognition29SongPreviewPlaybackController_playerContext] != a5)
  {
    if (a2) {
      a2 = String._bridgeToObjectiveC()();
    }
    sub_10008FE30(a3, (uint64_t)&v27);
    uint64_t v18 = *((void *)&v28 + 1);
    if (*((void *)&v28 + 1))
    {
      uint64_t v19 = sub_100010740(&v27, *((uint64_t *)&v28 + 1));
      uint64_t v20 = *(void *)(v18 - 8);
      __chkstk_darwin(v19);
      uint64_t v22 = (char *)&v24 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v20 + 16))(v22);
      uint64_t v23 = _bridgeAnythingToObjectiveC<A>(_:)();
      (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v18);
      _s16MusicRecognition11AnyPlaylistVwxx_0((uint64_t)&v27);
      if (!isa)
      {
LABEL_20:
        v26.receiver = v6;
        v26.super_class = ObjectType;
        [super observeValueForKeyPath:a2 ofObject:v23 change:isa context:a5];

        swift_unknownObjectRelease();
        return;
      }
    }
    else
    {
      uint64_t v23 = 0;
      if (!isa) {
        goto LABEL_20;
      }
    }
    type metadata accessor for NSKeyValueChangeKey(0);
    sub_10009049C(&qword_100156718, type metadata accessor for NSKeyValueChangeKey);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    goto LABEL_20;
  }
  if (!a2
    || (a1 != 1702125938 || a2 != (NSString)0xE400000000000000)
    && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
  {
    return;
  }
  if (!isa || !*((void *)isa + 2))
  {
    long long v27 = 0u;
    long long v28 = 0u;
    goto LABEL_25;
  }
  CMTimeScale v13 = NSKeyValueChangeNewKey;
  uint64_t v14 = sub_1000CA490();
  if ((v15 & 1) == 0)
  {
    long long v27 = 0u;
    long long v28 = 0u;

    goto LABEL_25;
  }
  sub_10008FE98(*((void *)isa + 7) + 32 * v14, (uint64_t)&v27);

  if (!*((void *)&v28 + 1))
  {
LABEL_25:
    sub_1000063D0((uint64_t)&v27, &qword_10015A520);
    return;
  }
  if (swift_dynamicCast())
  {
    if ((*(void *)&v25 & 0x7FFFFFFFFFFFFFFFLL) == 0)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      BOOL v16 = sub_10007D7D0();
      swift_release();
      if (v16)
      {
        swift_getKeyPath();
        swift_getKeyPath();
        static Published.subscript.getter();
        swift_release();
        swift_release();
        swift_getKeyPath();
        swift_getKeyPath();
        char v17 = 2;
LABEL_29:
        LOBYTE(v27) = v17;
        static Published.subscript.setter();
        return;
      }
    }
    if (v25 != 0.0)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      swift_getKeyPath();
      swift_getKeyPath();
      char v17 = 1;
      goto LABEL_29;
    }
  }
}

uint64_t sub_10008FA18()
{
  return type metadata accessor for SongPreviewPlaybackController();
}

uint64_t type metadata accessor for SongPreviewPlaybackController()
{
  uint64_t result = qword_10015A508;
  if (!qword_10015A508) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10008FA6C()
{
  sub_10008FB14();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_10008FB14()
{
  if (!qword_10015A518)
  {
    type metadata accessor for SongPreviewStatusController();
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10015A518);
    }
  }
}

uint64_t sub_10008FB6C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

void sub_10008FBE4()
{
}

uint64_t sub_10008FC08()
{
  return sub_10008E828();
}

uint64_t sub_10008FC2C@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_10008FCAC()
{
  return static Published.subscript.setter();
}

uint64_t sub_10008FD20@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_10008FDA4(uint64_t a1, void **a2)
{
  id v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  id v3 = v2;
  return static Published.subscript.setter();
}

uint64_t sub_10008FE30(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000060EC(&qword_10015A520);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10008FE98(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

unint64_t sub_10008FEF4()
{
  unint64_t result = qword_100158E68;
  if (!qword_100158E68)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100158E68);
  }
  return result;
}

uint64_t sub_10008FF34()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

id sub_100090000(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(type metadata accessor for URL() - 8);
  uint64_t v8 = *(void *)(v3 + 16);
  uint64_t v9 = v3 + ((*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));

  return sub_10008E944(a1, a2, a3, v8, v9);
}

uint64_t sub_10009008C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10009009C()
{
  return swift_release();
}

uint64_t sub_1000900A4()
{
  uint64_t v0 = sub_1000060EC(&qword_100157038);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v11 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for TaskPriority();
  uint64_t v4 = *(void *)(v3 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = 0;
  *(void *)(v5 + 24) = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_1000063D0((uint64_t)v2, &qword_100157038);
    uint64_t v6 = 0;
    uint64_t v7 = 0;
  }
  else
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v2, v3);
    if (*(void *)(v5 + 16))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v7 = v8;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v6 = 0;
      uint64_t v7 = 0;
    }
  }
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = &unk_10015A538;
  *(void *)(v9 + 24) = v5;
  if (v7 | v6)
  {
    v11[0] = 0;
    v11[1] = 0;
    v11[2] = v6;
    v11[3] = v7;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_1000902D0()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100090308()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_100014D10;
  return _swift_task_switch(sub_10008F038, 0, 0);
}

uint64_t sub_1000903AC()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000903E4(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100014D10;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_10015C6D8 + dword_10015C6D8);
  return v6(a1, v4);
}

uint64_t sub_10009049C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000904E4()
{
  return swift_initClassMetadata2();
}

uint64_t sub_100090528()
{
  return 1;
}

uint64_t sub_100090530(uint64_t a1)
{
  uint64_t v2 = v1;
  id v4 = objc_allocWithZone(v1);
  uint64_t v5 = sub_1000907C0(a1);
  (*(void (**)(uint64_t))(*(void *)(*(void *)((char *)v2 + qword_100164C00) - 8) + 8))(a1);
  return v5;
}

void *sub_1000905B0(uint64_t a1, uint64_t a2)
{
  id v5 = objc_allocWithZone(v2);
  return sub_1000905F4(a1, a2);
}

void *sub_1000905F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)((swift_isaMask & *v2) + qword_100164C00);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(a1);
  (*(void (**)(char *))(v5 + 16))((char *)&v11 - v6);
  uint64_t v7 = (void *)UIHostingController.init(coder:rootView:)();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  id v9 = v7;
  v8(a2, v4);
  if (v7) {

  }
  return v7;
}

id sub_10009072C(void *a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)swift_getObjectType();
  [super initWithCoder:a1];

  return v3;
}

id sub_100090780(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_10009072C(a3);
}

uint64_t type metadata accessor for SecureHostingController()
{
  return sub_100020608();
}

uint64_t sub_1000907C0(uint64_t a1)
{
  __chkstk_darwin(a1);
  (*(void (**)(char *))(v2 + 16))((char *)&v4 - v1);
  return UIHostingController.init(rootView:)();
}

uint64_t sub_1000908A8()
{
  if ((SHLibrary.isUpdating.getter() & 1) == 0
    || ((unint64_t v0 = SHLibrary.items.getter(), v0 >> 62)
      ? (uint64_t v1 = _CocoaArrayWrapper.endIndex.getter())
      : (uint64_t v1 = *(void *)((v0 & 0xFFFFFFFFFFFFFF8) + 0x10)),
        swift_bridgeObjectRelease(),
        v1))
  {
    if (SHLibrary.isUpdating.getter()) {
      return 2;
    }
    unint64_t v2 = SHLibrary.items.getter();
    uint64_t v3 = v2 >> 62 ? _CocoaArrayWrapper.endIndex.getter() : *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRelease();
    if (v3) {
      return 2;
    }
  }
  if (SHLibrary.isUpdating.getter())
  {
    unint64_t v5 = SHLibrary.items.getter();
    uint64_t v6 = v5 >> 62 ? _CocoaArrayWrapper.endIndex.getter() : *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRelease();
    if (!v6) {
      return 1;
    }
  }
  return 0;
}

uint64_t sub_1000909B0(uint64_t a1)
{
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v1;
  return _swift_task_switch(sub_1000909D0, 0, 0);
}

uint64_t sub_1000909D0()
{
  uint64_t v1 = (void *)v0[3];
  sub_1000060EC(&qword_100157030);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_100112420;
  *(void *)(v2 + 32) = v1;
  uint64_t v6 = v2;
  specialized Array._endMutation()();
  v0[5] = v6;
  id v3 = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[6] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100090AC4;
  return SHLibrary.removeItems(_:)(v6);
}

uint64_t sub_100090AC4()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_100090C00, 0, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    id v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_100090C00()
{
  swift_bridgeObjectRelease();
  if (qword_100156018 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000E808(v1, (uint64_t)qword_100164B38);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138412290;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 16) = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v5 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Failed to remove item %@", v4, 0xCu);
    sub_1000060EC((uint64_t *)&unk_1001570F0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_100090E0C()
{
  *(void *)(v1 + 24) = v0;
  return _swift_task_switch(sub_100090E2C, 0, 0);
}

uint64_t sub_100090E2C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v1;
  void *v1 = v0;
  v1[1] = sub_100090EC4;
  return SHLibrary.reload()();
}

uint64_t sub_100090EC4()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 40) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_100090FF8, 0, 0);
  }
  else
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_100090FF8()
{
  if (qword_100156018 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000E808(v1, (uint64_t)qword_100164B38);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138412290;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 16) = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v5 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Failed to reload library %@", v4, 0xCu);
    sub_1000060EC((uint64_t *)&unk_1001570F0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_1000911FC()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MusicRecognition19HistoryListProvider___observationRegistrar;
  uint64_t v2 = type metadata accessor for ObservationRegistrar();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v4 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v3, v4);
}

uint64_t sub_1000912A4()
{
  return type metadata accessor for HistoryListProvider();
}

uint64_t type metadata accessor for HistoryListProvider()
{
  uint64_t result = qword_10015A5F8;
  if (!qword_10015A5F8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000912F8()
{
  uint64_t result = type metadata accessor for ObservationRegistrar();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_100091398()
{
  return SHLibrary.items.getter();
}

uint64_t sub_1000913C0()
{
  return sub_1000908A8();
}

uint64_t sub_1000913E4()
{
  return SHLibrary.isEncrypted.getter() & 1;
}

uint64_t sub_100091410()
{
  return SHLibrary.isUpdating.getter() & 1;
}

uint64_t sub_10009143C(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100014D10;
  v5[3] = a1;
  v5[4] = v4;
  return _swift_task_switch(sub_1000909D0, 0, 0);
}

uint64_t sub_1000914EC()
{
  uint64_t v2 = *v0;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100015B24;
  v3[3] = v2;
  return _swift_task_switch(sub_100090E2C, 0, 0);
}

uint64_t sub_100091598(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000060EC(&qword_10015A6A8);
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t sub_100091608(uint64_t a1)
{
  uint64_t v2 = sub_1000060EC(&qword_10015A6A8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_100091670(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000060EC(&qword_10015A6A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_1000916D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000060EC(&qword_10015A6A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_100091740(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000060EC(&qword_10015A6A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_1000917A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000060EC(&qword_10015A6A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_100091810(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100091824);
}

uint64_t sub_100091824(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000060EC(&qword_10015A6A8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_100091894(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000918A8);
}

uint64_t sub_1000918A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000060EC(&qword_10015A6A8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for PrivacySplashPresenter()
{
  uint64_t result = qword_10015A708;
  if (!qword_10015A708) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100091968()
{
  sub_1000919F4();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1000919F4()
{
  if (!qword_10015A718)
  {
    type metadata accessor for MusicRecognitionOnboardingWelcomeViewModel();
    unint64_t v0 = type metadata accessor for Bindable();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10015A718);
    }
  }
}

uint64_t sub_100091A4C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100091A68(uint64_t a1)
{
  v14[0] = a1;
  uint64_t v2 = type metadata accessor for PrivacySplashPresenter();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2 - 8);
  uint64_t v5 = sub_1000060EC(&qword_10015A6A8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  Bindable.projectedValue.getter();
  swift_getKeyPath();
  Bindable<A>.subscript.getter();
  swift_release();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_1000094D4(v1, (uint64_t)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v9 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v10 = swift_allocObject();
  sub_100091FAC((uint64_t)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v10 + v9);
  sub_1000060EC(&qword_10015A748);
  sub_1000060EC(&qword_10015A750);
  sub_100092080();
  uint64_t v11 = sub_100006224(&qword_10015A760);
  unint64_t v12 = sub_1000920DC();
  v14[1] = v11;
  _OWORD v14[2] = v12;
  swift_getOpaqueTypeConformance2();
  View.fullScreenCover<A>(isPresented:onDismiss:content:)();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_100091CF4@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_10009230C();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + 16);
  return result;
}

uint64_t sub_100091D6C()
{
  return swift_release();
}

uint64_t sub_100091E0C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PrivacySplashPresenter();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2 - 8);
  sub_1000094D4(a1, (uint64_t)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = swift_allocObject();
  sub_100091FAC((uint64_t)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v6 + v5);
  uint64_t v7 = static SafeAreaRegions.all.getter();
  char v8 = static Edge.Set.bottom.getter();
  v10[0] = sub_10009228C;
  v10[1] = v6;
  void v10[2] = v7;
  char v11 = v8;
  sub_1000060EC(&qword_10015A760);
  sub_1000920DC();
  View.interactiveDismissDisabled(_:)();
  return swift_release();
}

uint64_t sub_100091F50()
{
  return swift_release();
}

uint64_t sub_100091FAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PrivacySplashPresenter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100092010()
{
  uint64_t v1 = *(void *)(type metadata accessor for PrivacySplashPresenter() - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_100091E0C(v2);
}

unint64_t sub_100092080()
{
  unint64_t result = qword_10015A758;
  if (!qword_10015A758)
  {
    sub_100006224(&qword_10015A748);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015A758);
  }
  return result;
}

unint64_t sub_1000920DC()
{
  unint64_t result = qword_10015A768;
  if (!qword_10015A768)
  {
    sub_100006224(&qword_10015A760);
    sub_100092158();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015A768);
  }
  return result;
}

unint64_t sub_100092158()
{
  unint64_t result = qword_10015A770;
  if (!qword_10015A770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015A770);
  }
  return result;
}

uint64_t sub_1000921B0()
{
  uint64_t v1 = *(void *)(type metadata accessor for PrivacySplashPresenter() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_1000060EC(&qword_10015A6A8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_10009228C()
{
  type metadata accessor for PrivacySplashPresenter();

  return sub_100091F50();
}

uint64_t sub_1000922EC()
{
  return sub_1000A61AC(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

unint64_t sub_10009230C()
{
  unint64_t result = qword_1001568A8;
  if (!qword_1001568A8)
  {
    type metadata accessor for MusicRecognitionOnboardingWelcomeViewModel();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001568A8);
  }
  return result;
}

uint64_t sub_100092364()
{
  return swift_getOpaqueTypeConformance2();
}

unsigned char *storeEnumTagSinglePayload for RecognizeMusicError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000924E4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RecognizeMusicError()
{
  return &type metadata for RecognizeMusicError;
}

uint64_t sub_100092520(char a1)
{
  if (a1)
  {
    if (a1 != 1)
    {
      id v1 = [self mainBundle];
      unint64_t v9 = 0xE000000000000000;
      unint64_t v4 = 0x8000000100119BD0;
      unint64_t v2 = 0xD00000000000002FLL;
      goto LABEL_7;
    }
    id v1 = [self mainBundle];
    unint64_t v2 = 0xD000000000000035;
    unint64_t v9 = 0xE000000000000000;
    int v3 = "RECOGNIZE_MUSIC_APP_INTENT_MATCH_FAILURE_ERROR_REASON";
  }
  else
  {
    id v1 = [self mainBundle];
    unint64_t v2 = 0xD000000000000030;
    unint64_t v9 = 0xE000000000000000;
    int v3 = "RECOGNIZE_MUSIC_APP_INTENT_NO_MATCH_ERROR_REASON";
  }
  unint64_t v4 = (unint64_t)(v3 - 32) | 0x8000000000000000;
LABEL_7:
  v5._uint64_t countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  uint64_t v6 = 0;
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v2, (Swift::String_optional)0, (NSBundle)v1, v5, *(Swift::String *)(&v9 - 1))._countAndFlagsBits;

  return countAndFlagsBits;
}

uint64_t sub_100092660(char a1)
{
  if (a1)
  {
    if (a1 != 1)
    {
      id v1 = [self mainBundle];
      unint64_t v9 = 0xE000000000000000;
      unint64_t v4 = 0x8000000100119C80;
      unint64_t v2 = 0xD000000000000034;
      goto LABEL_7;
    }
    id v1 = [self mainBundle];
    unint64_t v2 = 0xD00000000000003ALL;
    unint64_t v9 = 0xE000000000000000;
    int v3 = "RECOGNIZE_MUSIC_APP_INTENT_MATCH_FAILURE_ERROR_DESCRIPTION";
  }
  else
  {
    id v1 = [self mainBundle];
    unint64_t v2 = 0xD000000000000035;
    unint64_t v9 = 0xE000000000000000;
    int v3 = "RECOGNIZE_MUSIC_APP_INTENT_NO_MATCH_ERROR_DESCRIPTION";
  }
  unint64_t v4 = (unint64_t)(v3 - 32) | 0x8000000000000000;
LABEL_7:
  v5._uint64_t countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  uint64_t v6 = 0;
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v2, (Swift::String_optional)0, (NSBundle)v1, v5, *(Swift::String *)(&v9 - 1))._countAndFlagsBits;

  return countAndFlagsBits;
}

uint64_t sub_1000927A0()
{
  return sub_100092660(*v0);
}

uint64_t sub_1000927A8()
{
  return sub_100092520(*v0);
}

unint64_t sub_1000927B8()
{
  return 0xD000000000000019;
}

uint64_t sub_1000927D4()
{
  return qword_100113C88[*v0];
}

unint64_t sub_1000927F0()
{
  unint64_t result = qword_10015A778;
  if (!qword_10015A778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015A778);
  }
  return result;
}

uint64_t sub_100092844(uint64_t a1)
{
  unint64_t v2 = sub_1000928C0();

  return Error<>._domain.getter(a1, v2);
}

uint64_t sub_100092880(uint64_t a1)
{
  unint64_t v2 = sub_1000928C0();

  return Error<>._code.getter(a1, v2);
}

unint64_t sub_1000928C0()
{
  unint64_t result = qword_10015A780;
  if (!qword_10015A780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015A780);
  }
  return result;
}

uint64_t destroy for HistoryListGroup()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s16MusicRecognition16HistoryListGroupVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for HistoryListGroup(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for HistoryListGroup(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for HistoryListGroup(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HistoryListGroup(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HistoryListGroup()
{
  return &type metadata for HistoryListGroup;
}

uint64_t destroy for TrackPageCampaignHandler()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for TrackPageCampaignHandler(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for TrackPageCampaignHandler(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for TrackPageCampaignHandler(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TrackPageCampaignHandler(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 64)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TrackPageCampaignHandler(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 64) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TrackPageCampaignHandler()
{
  return &type metadata for TrackPageCampaignHandler;
}

void sub_100092D78()
{
  qword_10015A788 = 0x6763737469;
  unk_10015A790 = 0xE500000000000000;
}

void sub_100092D98()
{
  qword_10015A798 = 0x7463737469;
  unk_10015A7A0 = 0xE500000000000000;
}

void sub_100092DB8()
{
  qword_10015A7A8 = 0x65766974616E5FLL;
  unk_10015A7B0 = 0xE700000000000000;
}

void sub_100092DDC()
{
  qword_10015A7B8 = 29795;
  unk_10015A7C0 = 0xE200000000000000;
}

void sub_100092DF4()
{
  qword_10015A7C8 = 29808;
  unk_10015A7D0 = 0xE200000000000000;
}

void sub_100092E0C()
{
  qword_10015A7D8 = 0x3534333939343832;
  unk_10015A7E0 = 0xE900000000000039;
}

uint64_t sub_100092E34()
{
  uint64_t v0 = sub_1000060EC((uint64_t *)&unk_100158FC0);
  __chkstk_darwin(v0 - 8);
  unint64_t v2 = (char *)v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for URL();
  sub_10000FC3C(v3, qword_10015A7E8);
  uint64_t v4 = sub_10000E808(v3, (uint64_t)qword_10015A7E8);
  v7[0] = 0;
  v7[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(30);
  swift_bridgeObjectRelease();
  if (qword_100156228 != -1) {
    swift_once();
  }
  URL.init(string:)();
  uint64_t v5 = *(void *)(v3 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v2, 1, v3);
  if (result != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(v4, v2, v3);
  }
  __break(1u);
  return result;
}

uint64_t sub_100092FB4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1000060EC((uint64_t *)&unk_100158FC0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000060EC(&qword_10015A810);
  __chkstk_darwin(v6 - 8);
  char v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for URLComponents();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  unint64_t v12 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100156230 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for URL();
  uint64_t v14 = sub_10000E808(v13, (uint64_t)qword_10015A7E8);
  URLComponents.init(url:resolvingAgainstBaseURL:)();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1000063D0((uint64_t)v8, &qword_10015A810);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(a1, v14, v13);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
    sub_100077698(v1 + 16, (uint64_t)v20);
    sub_100077698((uint64_t)v20, (uint64_t)v21);
    uint64_t v19 = a1;
    if (v21[1] && *(void *)(v1 + 40))
    {
      void v18[4] = *(void *)(v1 + 40);
      uint64_t v16 = *(void *)(v1 + 32);
      v18[2] = v21[0];
      v18[3] = v16;
      sub_1000060EC(&qword_10015A800);
      v18[1] = *(void *)(*(void *)(type metadata accessor for URLQueryItem() - 8) + 72);
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001118A0;
      if (qword_100156218 != -1) {
        swift_once();
      }
      URLQueryItem.init(name:value:)();
      if (qword_100156220 != -1) {
        swift_once();
      }
      URLQueryItem.init(name:value:)();
    }
    URLComponents.queryItems.setter();
    URLComponents.url.getter();
    uint64_t v17 = *(void *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v5, 1, v13) == 1)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v19, v14, v13);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      return sub_1000063D0((uint64_t)v5, (uint64_t *)&unk_100158FC0);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v17 + 32))(v19, v5, v13);
    }
  }
}

uint64_t sub_100093444@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X5>, uint64_t *a7@<X8>)
{
  uint64_t v14 = type metadata accessor for URLComponents();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v65 = a5;
  uint64_t v66 = (char *)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = a6;
  if (a4)
  {
    uint64_t v68 = a3;
    unint64_t v69 = a4;
    uint64_t v18 = qword_100156210;
    swift_bridgeObjectRetain();
    if (v18 != -1) {
      swift_once();
    }
    uint64_t v19 = qword_10015A7A8;
    uint64_t v20 = (void *)unk_10015A7B0;
    swift_bridgeObjectRetain();
    v21._uint64_t countAndFlagsBits = v19;
    v21._object = v20;
    String.append(_:)(v21);
    swift_bridgeObjectRelease();
    uint64_t v23 = v68;
    uint64_t v22 = (void *)v69;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v23 = 0;
    uint64_t v22 = 0;
  }
  swift_bridgeObjectRetain();
  URLComponents.init()();
  uint64_t v62 = a2;
  uint64_t v63 = v23;
  uint64_t v64 = a1;
  uint64_t v60 = v15;
  uint64_t v61 = v14;
  uint64_t v58 = a7;
  if (!v22)
  {
    long long v27 = (void *)0xE300000000000000;
    uint64_t v55 = 7104878;
LABEL_15:
    uint64_t v26 = v65;
    goto LABEL_16;
  }
  if (!v17)
  {
    long long v27 = v22;
    uint64_t v55 = v23;
    goto LABEL_15;
  }
  sub_1000060EC(&qword_10015A800);
  type metadata accessor for URLQueryItem();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001118A0;
  uint64_t v24 = qword_100156218;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v24 != -1) {
    swift_once();
  }
  uint64_t v25 = v63;
  URLQueryItem.init(name:value:)();
  a1 = v64;
  if (qword_100156220 != -1) {
    swift_once();
  }
  uint64_t v26 = v65;
  URLQueryItem.init(name:value:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a2 = v62;
  swift_bridgeObjectRelease();
  long long v27 = v22;
  uint64_t v55 = v25;
LABEL_16:
  URLComponents.queryItems.setter();
  uint64_t v28 = URLComponents.percentEncodedQuery.getter();
  uint64_t v56 = v29;
  uint64_t v57 = v28;
  uint64_t v68 = 0;
  unint64_t v69 = 0xE000000000000000;
  swift_bridgeObjectRetain();
  _StringGuts.grow(_:)(76);
  v30._uint64_t countAndFlagsBits = 0xD00000000000001DLL;
  v30._object = (void *)0x8000000100119D60;
  String.append(_:)(v30);
  if (a2) {
    uint64_t v31 = a1;
  }
  else {
    uint64_t v31 = 7104878;
  }
  if (a2) {
    id v32 = a2;
  }
  else {
    id v32 = (void *)0xE300000000000000;
  }
  swift_bridgeObjectRetain();
  v33._uint64_t countAndFlagsBits = v31;
  v33._object = v32;
  String.append(_:)(v33);
  swift_bridgeObjectRelease();
  v34._object = (void *)0x8000000100119D80;
  v34._uint64_t countAndFlagsBits = 0xD000000000000014;
  String.append(_:)(v34);
  uint64_t v59 = (uint64_t)v22;
  swift_bridgeObjectRetain();
  v35._uint64_t countAndFlagsBits = v55;
  v35._object = v27;
  String.append(_:)(v35);
  swift_bridgeObjectRelease();
  v36._uint64_t countAndFlagsBits = 0xD000000000000015;
  v36._object = (void *)0x8000000100119DA0;
  String.append(_:)(v36);
  if (v17) {
    uint64_t v37 = v26;
  }
  else {
    uint64_t v37 = 7104878;
  }
  if (v17) {
    char v38 = v17;
  }
  else {
    char v38 = (void *)0xE300000000000000;
  }
  swift_bridgeObjectRetain();
  v39._uint64_t countAndFlagsBits = v37;
  v39._object = v38;
  String.append(_:)(v39);
  swift_bridgeObjectRelease();
  uint64_t v40 = v68;
  unint64_t v41 = v69;
  uint64_t v42 = v26;
  if (qword_100156018 != -1) {
    swift_once();
  }
  uint64_t v43 = type metadata accessor for Logger();
  sub_10000E808(v43, (uint64_t)qword_100164B38);
  swift_bridgeObjectRetain();
  uint64_t v44 = Logger.logObject.getter();
  os_log_type_t v45 = static os_log_type_t.debug.getter();
  BOOL v46 = os_log_type_enabled(v44, v45);
  uint64_t v47 = v58;
  if (v46)
  {
    uint64_t v48 = (uint8_t *)swift_slowAlloc();
    uint64_t v68 = swift_slowAlloc();
    *(_DWORD *)uint64_t v48 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v67 = sub_1000CB67C(v40, v41, &v68);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v44, v45, "%s", v48, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v42 = v65;
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  (*(void (**)(char *, uint64_t))(v60 + 8))(v66, v61);
  uint64_t v49 = (uint64_t)v62;
  uint64_t v50 = v63;
  swift_bridgeObjectRetain();
  uint64_t v51 = v56;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease_n();
  *uint64_t v47 = v64;
  v47[1] = v49;
  uint64_t v53 = v59;
  v47[2] = v50;
  v47[3] = v53;
  unsigned char v47[4] = v42;
  v47[5] = (uint64_t)v17;
  v47[6] = v57;
  v47[7] = v51;
  return result;
}

uint64_t sub_100093A60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[42] = a3;
  v4[43] = a4;
  v4[40] = a1;
  v4[41] = a2;
  return _swift_task_switch(sub_100093A84, 0, 0);
}

uint64_t sub_100093A84()
{
  uint64_t v1 = (void *)v0[43];
  v0[10] = v0;
  v0[15] = v0 + 39;
  v0[11] = sub_100093B80;
  uint64_t v2 = swift_continuation_init();
  v0[34] = _NSConcreteStackBlock;
  v0[35] = 0x40000000;
  v0[36] = sub_100093440;
  v0[37] = &unk_10014C0D0;
  v0[38] = v2;
  [v1 defaultValuesWithCompletion:v0 + 34];
  return _swift_continuation_await(v0 + 10);
}

uint64_t sub_100093B80()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 112);
  *(void *)(*(void *)v0 + 352) = v1;
  if (v1)
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_100094264;
  }
  else
  {
    uint64_t v2 = sub_100093C98;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100093C98()
{
  uint64_t v1 = (void *)v0[43];
  v0[45] = v0[39];
  v0[18] = v0;
  v0[23] = v0 + 39;
  v0[19] = sub_100093D9C;
  uint64_t v2 = swift_continuation_init();
  v0[34] = _NSConcreteStackBlock;
  v0[35] = 0x40000000;
  v0[36] = sub_100093440;
  v0[37] = &unk_10014C0E8;
  v0[38] = v2;
  [v1 campaignTokenWithCompletion:v0 + 34];
  return _swift_continuation_await(v0 + 18);
}

uint64_t sub_100093D9C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 176);
  *(void *)(*(void *)v0 + 368) = v1;
  if (v1)
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_10009448C;
  }
  else
  {
    uint64_t v2 = sub_100093EB4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100093EB4()
{
  uint64_t v1 = (void *)v0[43];
  v0[47] = v0[39];
  v0[2] = v0;
  v0[7] = v0 + 39;
  v0[3] = sub_100093FB8;
  uint64_t v2 = swift_continuation_init();
  v0[34] = _NSConcreteStackBlock;
  v0[35] = 0x40000000;
  v0[36] = sub_100093440;
  v0[37] = &unk_10014C100;
  v0[38] = v2;
  [v1 defaultValuesWithCompletion:v0 + 34];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_100093FB8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 384) = v1;
  if (v1)
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_1000946B8;
  }
  else
  {
    swift_bridgeObjectRelease_n();
    uint64_t v2 = sub_1000940DC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1000940DC()
{
  uint64_t v1 = *(void **)(v0 + 376);
  uint64_t v2 = *(void **)(v0 + 360);
  uint64_t v23 = *(void **)(v0 + 344);
  uint64_t v3 = *(void **)(v0 + 312);
  id v4 = [v3 providerToken];

  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v7 = v6;

  id v8 = [v2 campaignGroup];
  uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v11 = v10;

  NSString v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v13 = [v1 tokenForClientIdentifier:v12];

  uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v16 = v15;

  sub_100093444(v9, v11, v14, v16, v5, v7, (uint64_t *)(v0 + 208));
  uint64_t v17 = *(_OWORD **)(v0 + 320);
  long long v18 = *(_OWORD *)(v0 + 224);
  long long v19 = *(_OWORD *)(v0 + 240);
  long long v20 = *(_OWORD *)(v0 + 256);
  *uint64_t v17 = *(_OWORD *)(v0 + 208);
  v17[1] = v18;
  void v17[2] = v19;
  void v17[3] = v20;
  Swift::String v21 = *(uint64_t (**)(void))(v0 + 8);
  return v21();
}

uint64_t sub_100094264()
{
  swift_willThrow();
  if (qword_100156018 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000E808(v1, (uint64_t)qword_100164B38);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  BOOL v4 = os_log_type_enabled(v2, v3);
  uint64_t v5 = (void *)v0[43];
  if (v4)
  {
    NSString v12 = (void *)v0[43];
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 138412290;
    swift_errorRetain();
    uint64_t v8 = _swift_stdlib_bridgeErrorToNSError();
    v0[34] = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v7 = v8;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Error fetching campaign token & group with error %@", v6, 0xCu);
    sub_1000060EC((uint64_t *)&unk_1001570F0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v9 = (_OWORD *)v0[40];
  void v9[2] = 0u;
  v9[3] = 0u;
  *uint64_t v9 = 0u;
  v9[1] = 0u;
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_10009448C()
{
  uint64_t v1 = (void *)v0[45];
  swift_willThrow();

  if (qword_100156018 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000E808(v2, (uint64_t)qword_100164B38);
  swift_errorRetain();
  swift_errorRetain();
  os_log_type_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.error.getter();
  BOOL v5 = os_log_type_enabled(v3, v4);
  uint64_t v6 = (void *)v0[43];
  if (v5)
  {
    uint64_t v13 = (void *)v0[43];
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 138412290;
    swift_errorRetain();
    uint64_t v9 = _swift_stdlib_bridgeErrorToNSError();
    v0[34] = v9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v8 = v9;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Error fetching campaign token & group with error %@", v7, 0xCu);
    sub_1000060EC((uint64_t *)&unk_1001570F0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v10 = (_OWORD *)v0[40];
  void v10[2] = 0u;
  void v10[3] = 0u;
  *uint64_t v10 = 0u;
  v10[1] = 0u;
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_1000946B8()
{
  uint64_t v1 = (void *)v0[47];
  uint64_t v2 = (void *)v0[45];
  swift_willThrow();

  if (qword_100156018 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  sub_10000E808(v3, (uint64_t)qword_100164B38);
  swift_errorRetain();
  swift_errorRetain();
  os_log_type_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.error.getter();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = (void *)v0[43];
  if (v6)
  {
    uint64_t v14 = (void *)v0[43];
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 138412290;
    swift_errorRetain();
    uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
    v0[34] = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v9 = v10;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Error fetching campaign token & group with error %@", v8, 0xCu);
    sub_1000060EC((uint64_t *)&unk_1001570F0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v11 = (_OWORD *)v0[40];
  v11[2] = 0u;
  v11[3] = 0u;
  *uint64_t v11 = 0u;
  v11[1] = 0u;
  NSString v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

id sub_100094960()
{
  uint64_t v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v3 = sub_1000060EC(&qword_100157038);
  __chkstk_darwin(v3 - 8);
  os_log_type_t v5 = (char *)v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41.receiver = v1;
  v41.super_class = ObjectType;
  [super viewDidLoad];
  id result = [v1 view];
  if (!result)
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v7 = result;
  id v8 = [self blackColor];
  [v7 setBackgroundColor:v8];

  id result = [v1 view];
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v9 = result;
  [result setTranslatesAutoresizingMaskIntoConstraints:0];

  uint64_t v10 = *(void **)&v1[OBJC_IVAR____TtC16MusicRecognition44MusicRecognitionAmbientCompactViewController_matchingFlowView];
  [v10 setTranslatesAutoresizingMaskIntoConstraints:0];
  id result = [v1 view];
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v11 = result;
  v40[0] = v5;
  [result addSubview:v10];

  sub_1000060EC(&qword_100157030);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_100110690;
  id v13 = [v10 topAnchor];
  id result = [v1 view];
  if (!result)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v14 = result;
  id v15 = [result layoutMarginsGuide];

  id v16 = [v15 topAnchor];
  id v17 = [v13 constraintEqualToAnchor:v16];

  *(void *)(v12 + 32) = v17;
  id v18 = [v10 bottomAnchor];
  id result = [v1 view];
  if (!result)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  long long v19 = result;
  id v20 = [result layoutMarginsGuide];

  id v21 = [v20 bottomAnchor];
  id v22 = [v18 constraintEqualToAnchor:v21];

  *(void *)(v12 + 40) = v22;
  id v23 = [v10 leadingAnchor];
  id result = [v1 view];
  if (!result)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v24 = result;
  id v25 = [result layoutMarginsGuide];

  id v26 = [v25 leadingAnchor];
  id v27 = [v23 constraintEqualToAnchor:v26];

  *(void *)(v12 + 48) = v27;
  id v28 = [v10 trailingAnchor];
  id result = [v1 view];
  if (result)
  {
    uint64_t v29 = result;
    Swift::String v30 = self;
    id v31 = [v29 layoutMarginsGuide];

    id v32 = [v31 trailingAnchor];
    id v33 = [v28 constraintEqualToAnchor:v32];

    *(void *)(v12 + 56) = v33;
    v40[1] = v12;
    specialized Array._endMutation()();
    sub_1000150F8(0, (unint64_t *)&qword_100157AD0);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v30 activateConstraints:isa];

    uint64_t v35 = type metadata accessor for TaskPriority();
    uint64_t v36 = v40[0];
    (*(void (**)(void, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v40[0], 1, 1, v35);
    uint64_t v37 = swift_allocObject();
    swift_unknownObjectWeakInit();
    type metadata accessor for MainActor();
    swift_retain();
    uint64_t v38 = static MainActor.shared.getter();
    Swift::String v39 = (void *)swift_allocObject();
    v39[2] = v38;
    v39[3] = &protocol witness table for MainActor;
    unsigned char v39[4] = v37;
    swift_release();
    sub_1000DC528(v36, (uint64_t)&unk_10015A858, (uint64_t)v39);
    return (id)swift_release();
  }
LABEL_15:
  __break(1u);
  return result;
}

uint64_t sub_100094F18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[12] = a1;
  v4[13] = a4;
  sub_1000060EC(&qword_100158E50);
  v4[14] = swift_task_alloc();
  uint64_t v5 = sub_1000060EC(&qword_100157068);
  v4[15] = v5;
  v4[16] = *(void *)(v5 - 8);
  v4[17] = swift_task_alloc();
  uint64_t v6 = sub_1000060EC(&qword_10015A860);
  v4[18] = v6;
  v4[19] = *(void *)(v6 - 8);
  v4[20] = swift_task_alloc();
  type metadata accessor for MainActor();
  v4[21] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1000950A0, v8, v7);
}

uint64_t sub_1000950A0()
{
  swift_release();
  swift_beginAccess();
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    if (qword_100156120 != -1) {
      swift_once();
    }
    uint64_t v2 = *(void *)(v0 + 160);
    uint64_t v3 = *(void *)(v0 + 136);
    uint64_t v12 = *(void *)(v0 + 144);
    uint64_t v13 = *(void *)(v0 + 152);
    uint64_t v5 = *(void *)(v0 + 120);
    uint64_t v4 = *(void *)(v0 + 128);
    uint64_t v6 = *(void *)(v0 + 112);
    swift_beginAccess();
    sub_1000060EC(&qword_100157078);
    Published.projectedValue.getter();
    swift_endAccess();
    sub_1000150F8(0, (unint64_t *)&qword_100158E68);
    *(void *)(v0 + 88) = static OS_dispatch_queue.main.getter();
    uint64_t v7 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
    sub_100006480(&qword_100157088, &qword_100157068);
    sub_10005DE60();
    Publisher.receive<A>(on:options:)();
    sub_10009580C(v6);

    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    swift_allocObject();
    swift_beginAccess();
    uint64_t v8 = (void *)swift_unknownObjectWeakLoadStrong();
    swift_unknownObjectWeakInit();

    sub_100006480(&qword_10015A868, &qword_10015A860);
    uint64_t v9 = Publisher<>.sink(receiveValue:)();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v2, v12);
    *(void *)&Strong[OBJC_IVAR____TtC16MusicRecognition44MusicRecognitionAmbientCompactViewController_musicRecognitionCancellable] = v9;

    swift_release();
  }
  **(unsigned char **)(v0 + 96) = Strong == 0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

void sub_1000953E0(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v2 = *(void **)(a1 + 8);
  unsigned __int8 v3 = *(unsigned char *)(a1 + 16);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = (void *)Strong;
    id v6 = objc_retain(*(id *)(Strong
                           + OBJC_IVAR____TtC16MusicRecognition44MusicRecognitionAmbientCompactViewController_matchingFlowView));
    sub_1000D4CFC(v1, v2, v3);
  }
}

id sub_10009547C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v4[OBJC_IVAR____TtC16MusicRecognition44MusicRecognitionAmbientCompactViewController_musicRecognitionCancellable] = 0;
  uint64_t v8 = OBJC_IVAR____TtC16MusicRecognition44MusicRecognitionAmbientCompactViewController_matchingFlowView;
  id v9 = objc_allocWithZone((Class)type metadata accessor for AmbientCompactMatchingFlowView());
  uint64_t v10 = v4;
  *(void *)&v4[v8] = [v9 initWithFrame:0.0, 0.0, 0.0, 0.0];

  if (a2)
  {
    NSString v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v11 = 0;
  }
  v14.receiver = v10;
  v14.super_class = ObjectType;
  [super initWithNibName:v11 bundle:a3];

  return v12;
}

id sub_1000955D8(void *a1)
{
  ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v1[OBJC_IVAR____TtC16MusicRecognition44MusicRecognitionAmbientCompactViewController_musicRecognitionCancellable] = 0;
  uint64_t v4 = OBJC_IVAR____TtC16MusicRecognition44MusicRecognitionAmbientCompactViewController_matchingFlowView;
  id v5 = objc_allocWithZone((Class)type metadata accessor for AmbientCompactMatchingFlowView());
  id v6 = v1;
  *(void *)&v1[v4] = [v5 initWithFrame:0.0, 0.0, 0.0, 0.0];

  v9.receiver = v6;
  v9.super_class = ObjectType;
  id v7 = [super initWithCoder:a1];

  return v7;
}

uint64_t type metadata accessor for MusicRecognitionAmbientCompactViewController()
{
  return self;
}

uint64_t sub_1000956E0()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100095718()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100095758(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  id v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  void *v7 = v2;
  v7[1] = sub_100014D10;
  return sub_100094F18(a1, v4, v5, v6);
}

uint64_t sub_10009580C(uint64_t a1)
{
  uint64_t v2 = sub_1000060EC(&qword_100158E50);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_10009586C(uint64_t a1)
{
}

void sub_100095874()
{
  qword_10015A870 = 0x6C7070612E6D6F63;
  *(void *)algn_10015A878 = 0xEF636973754D2E65;
}

uint64_t sub_1000958A4(uint64_t a1)
{
  *(void *)(v1 + 120) = a1;
  return _swift_task_switch(sub_1000958C4, 0, 0);
}

uint64_t sub_1000958C4()
{
  uint64_t v1 = v0[15];
  id v2 = [self sharedGuard];
  v0[16] = v2;
  v0[2] = v0;
  v0[7] = v0 + 18;
  v0[3] = sub_1000959F8;
  uint64_t v3 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_10001FD78;
  v0[13] = &unk_10014C168;
  v0[14] = v3;
  [v2 authenticateForSubject:v1 completion:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_1000959F8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 136) = v1;
  if (v1) {
    id v2 = sub_100095B74;
  }
  else {
    id v2 = sub_100095B08;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100095B08()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + 144);

  id v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_100095B74()
{
  uint64_t v1 = *(void **)(v0 + 128);
  swift_willThrow();

  id v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2(0);
}

uint64_t sub_100095BE8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = 0x3534333939343832;
  a2[1] = 0xE900000000000039;
  a2[2] = 0xD000000000000024;
  a2[3] = 0x8000000100119EB0;
  uint64_t v4 = (int *)type metadata accessor for ShazamUpsellViewModel();
  URL.init(string:)();
  uint64_t v5 = (void *)((char *)a2 + v4[7]);
  id v6 = [self mainBundle];
  v21._object = (void *)0xE000000000000000;
  v7._object = (void *)0x8000000100119F10;
  v7._uint64_t countAndFlagsBits = 0xD000000000000013;
  v8._uint64_t countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  v21._uint64_t countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v7, (Swift::String_optional)0, (NSBundle)v6, v8, v21);

  sub_10000E0F0();
  uint64_t v9 = StringProtocol.localizedUppercase.getter();
  uint64_t v11 = v10;
  swift_bridgeObjectRelease();
  *uint64_t v5 = v9;
  v5[1] = v11;
  id v12 = (char *)a2 + v4[8];
  *(void *)id v12 = LocalizedStringKey.init(stringLiteral:)();
  *((void *)v12 + 1) = v13;
  v12[16] = v14 & 1;
  *((void *)v12 + 3) = v15;
  id v16 = (char *)a2 + v4[9];
  *(void *)id v16 = LocalizedStringKey.init(stringLiteral:)();
  *((void *)v16 + 1) = v17;
  unsigned char v16[16] = v18 & 1;
  *((void *)v16 + 3) = v19;
  return sub_100009F78(a1, (uint64_t)a2 + v4[10]);
}

uint64_t type metadata accessor for ShazamUpsellViewModel()
{
  uint64_t result = qword_10015A8E0;
  if (!qword_10015A8E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t *sub_100095DF4(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a3[6];
    __dst = (char *)a1 + v9;
    uint64_t v10 = (char *)a2 + v9;
    uint64_t v11 = type metadata accessor for URL();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v35 = v13;
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = sub_1000060EC((uint64_t *)&unk_100158FC0);
      memcpy(__dst, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(__dst, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
    }
    uint64_t v16 = v11;
    uint64_t v17 = a3[7];
    uint64_t v18 = a3[8];
    uint64_t v19 = (uint64_t *)((char *)v4 + v17);
    id v20 = (uint64_t *)((char *)a2 + v17);
    uint64_t v21 = v20[1];
    void *v19 = *v20;
    v19[1] = v21;
    id v22 = (char *)v4 + v18;
    id v23 = (char *)a2 + v18;
    uint64_t v24 = *((void *)v23 + 1);
    *(void *)id v22 = *(void *)v23;
    *((void *)v22 + 1) = v24;
    v22[16] = v23[16];
    *((void *)v22 + 3) = *((void *)v23 + 3);
    uint64_t v25 = a3[9];
    uint64_t v26 = a3[10];
    id v27 = (char *)v4 + v25;
    id v28 = (char *)a2 + v25;
    uint64_t v29 = *((void *)v28 + 1);
    *(void *)id v27 = *(void *)v28;
    *((void *)v27 + 1) = v29;
    v27[16] = v28[16];
    Swift::String v30 = (char *)v4 + v26;
    id v31 = (char *)a2 + v26;
    *((void *)v27 + 3) = *((void *)v28 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v35(v31, 1, v16))
    {
      uint64_t v32 = sub_1000060EC((uint64_t *)&unk_100158FC0);
      memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v30, v31, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v30, 0, 1, v16);
    }
  }
  return v4;
}

uint64_t sub_1000960B8(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v5 - 8);
  id v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  if (!v6(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = a1 + *(int *)(a2 + 40);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v6)(v7, 1, v5);
  if (!result)
  {
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
    return v9(v7, v5);
  }
  return result;
}

void *sub_100096228(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = a3[6];
  __dst = (char *)a1 + v8;
  uint64_t v9 = (char *)a2 + v8;
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v33 = v12;
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = sub_1000060EC((uint64_t *)&unk_100158FC0);
    memcpy(__dst, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(__dst, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
  }
  uint64_t v14 = v10;
  uint64_t v15 = a3[7];
  uint64_t v16 = a3[8];
  uint64_t v17 = (void *)((char *)a1 + v15);
  uint64_t v18 = (void *)((char *)a2 + v15);
  uint64_t v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  id v20 = (char *)a1 + v16;
  uint64_t v21 = (char *)a2 + v16;
  uint64_t v22 = *((void *)v21 + 1);
  *(void *)id v20 = *(void *)v21;
  *((void *)v20 + 1) = v22;
  unsigned char v20[16] = v21[16];
  *((void *)v20 + 3) = *((void *)v21 + 3);
  uint64_t v23 = a3[9];
  uint64_t v24 = a3[10];
  uint64_t v25 = (char *)a1 + v23;
  uint64_t v26 = (char *)a2 + v23;
  uint64_t v27 = *((void *)v26 + 1);
  *(void *)uint64_t v25 = *(void *)v26;
  *((void *)v25 + 1) = v27;
  v25[16] = v26[16];
  id v28 = (char *)a1 + v24;
  uint64_t v29 = (char *)a2 + v24;
  *((void *)v25 + 3) = *((void *)v26 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v33(v29, 1, v14))
  {
    uint64_t v30 = sub_1000060EC((uint64_t *)&unk_100158FC0);
    memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v28, v29, v14);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v28, 0, 1, v14);
  }
  return a1;
}

char *sub_10009649C(char *a1, void *a2, int *a3)
{
  *(void *)a1 = *a2;
  *((void *)a1 + 1) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 2) = a2[2];
  *((void *)a1 + 3) = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[6];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_1000060EC((uint64_t *)&unk_100158FC0);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = a3[7];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = (void *)((char *)a2 + v15);
  *(void *)uint64_t v16 = *v17;
  *((void *)v16 + 1) = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = a3[8];
  uint64_t v19 = &a1[v18];
  id v20 = (char *)a2 + v18;
  *(void *)uint64_t v19 = *(void *)((char *)a2 + v18);
  *((void *)v19 + 1) = *(void *)((char *)a2 + v18 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v19[16] = v20[16];
  *((void *)v19 + 3) = *((void *)v20 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v21 = a3[9];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = (char *)a2 + v21;
  *(void *)uint64_t v22 = *(void *)((char *)a2 + v21);
  *((void *)v22 + 1) = *(void *)((char *)a2 + v21 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22[16] = v23[16];
  *((void *)v22 + 3) = *((void *)v23 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v24 = a3[10];
  uint64_t v25 = &a1[v24];
  uint64_t v26 = (char *)a2 + v24;
  int v27 = v11(&a1[v24], 1, v9);
  int v28 = v11(v26, 1, v9);
  if (!v27)
  {
    if (!v28)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v25, v26, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v25, v9);
    goto LABEL_12;
  }
  if (v28)
  {
LABEL_12:
    uint64_t v29 = sub_1000060EC((uint64_t *)&unk_100158FC0);
    memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v25, v26, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v25, 0, 1, v9);
  return a1;
}

_OWORD *sub_10009681C(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v11 = *(void *)(v10 - 8);
  int v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = sub_1000060EC((uint64_t *)&unk_100158FC0);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = a3[8];
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  uint64_t v15 = (_OWORD *)((char *)a1 + v14);
  uint64_t v16 = (_OWORD *)((char *)a2 + v14);
  long long v17 = v16[1];
  *uint64_t v15 = *v16;
  v15[1] = v17;
  uint64_t v18 = a3[9];
  uint64_t v19 = a3[10];
  id v20 = (_OWORD *)((char *)a1 + v18);
  uint64_t v21 = (_OWORD *)((char *)a2 + v18);
  long long v22 = v21[1];
  *id v20 = *v21;
  v20[1] = v22;
  uint64_t v23 = (char *)a1 + v19;
  uint64_t v24 = (char *)a2 + v19;
  if (v12(v24, 1, v10))
  {
    uint64_t v25 = sub_1000060EC((uint64_t *)&unk_100158FC0);
    memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v23, v24, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v23, 0, 1, v10);
  }
  return a1;
}

char *sub_100096A10(char *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *(void *)a1 = *a2;
  *((void *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  *((void *)a1 + 2) = a2[2];
  *((void *)a1 + 3) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[6];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for URL();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v15)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
LABEL_6:
    uint64_t v16 = sub_1000060EC((uint64_t *)&unk_100158FC0);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
LABEL_7:
  uint64_t v17 = a3[7];
  uint64_t v18 = &a1[v17];
  uint64_t v19 = (void *)((char *)a2 + v17);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  *(void *)uint64_t v18 = v21;
  *((void *)v18 + 1) = v20;
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[8];
  uint64_t v23 = &a1[v22];
  uint64_t v24 = (char *)a2 + v22;
  uint64_t v25 = *(void *)((char *)a2 + v22 + 8);
  *(void *)uint64_t v23 = *(void *)((char *)a2 + v22);
  *((void *)v23 + 1) = v25;
  swift_bridgeObjectRelease();
  v23[16] = v24[16];
  *((void *)v23 + 3) = *((void *)v24 + 3);
  swift_bridgeObjectRelease();
  uint64_t v26 = a3[9];
  int v27 = &a1[v26];
  int v28 = (char *)a2 + v26;
  uint64_t v29 = *(void *)((char *)a2 + v26 + 8);
  *(void *)int v27 = *(void *)((char *)a2 + v26);
  *((void *)v27 + 1) = v29;
  swift_bridgeObjectRelease();
  v27[16] = v28[16];
  *((void *)v27 + 3) = *((void *)v28 + 3);
  swift_bridgeObjectRelease();
  uint64_t v30 = a3[10];
  id v31 = &a1[v30];
  uint64_t v32 = (char *)a2 + v30;
  LODWORD(v27) = v13(&a1[v30], 1, v11);
  int v33 = v13(v32, 1, v11);
  if (!v27)
  {
    if (!v33)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v31, v32, v11);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v31, v11);
    goto LABEL_12;
  }
  if (v33)
  {
LABEL_12:
    uint64_t v34 = sub_1000060EC((uint64_t *)&unk_100158FC0);
    memcpy(v31, v32, *(void *)(*(void *)(v34 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v31, v32, v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v31, 0, 1, v11);
  return a1;
}

uint64_t sub_100096D30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100096D44);
}

uint64_t sub_100096D44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1000060EC((uint64_t *)&unk_100158FC0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_100096DF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100096E0C);
}

uint64_t sub_100096E0C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1000060EC((uint64_t *)&unk_100158FC0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_100096EB8()
{
  sub_10000ABC4();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

ValueMetadata *type metadata accessor for ContextMenuContent()
{
  return &type metadata for ContextMenuContent;
}

uint64_t sub_100096F70()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100096F8C()
{
  return Section<>.init(header:content:)();
}

uint64_t sub_1000970A0()
{
  return ForEach<>.init(_:content:)();
}

uint64_t sub_1000971B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v222 = a1;
  uint64_t v227 = a2;
  unint64_t v182 = (int *)type metadata accessor for StreamingService();
  __chkstk_darwin(v182);
  uint64_t v185 = (uint64_t)&v174 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v202 = sub_1000060EC(&qword_10015AA40);
  __chkstk_darwin(v202);
  uint64_t v204 = (uint64_t)&v174 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v215 = sub_1000060EC(&qword_10015AA18);
  __chkstk_darwin(v215);
  uint64_t v205 = (char *)&v174 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v210 = type metadata accessor for SyncAction(0);
  uint64_t v5 = __chkstk_darwin(v210);
  uint64_t v186 = (uint64_t *)((char *)&v174 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v5);
  uint64_t v187 = (uint64_t *)((char *)&v174 - v7);
  uint64_t v212 = sub_1000060EC(&qword_10015AA48);
  __chkstk_darwin(v212);
  uint64_t v214 = (uint64_t)&v174 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v197 = sub_1000060EC(&qword_10015AA50);
  __chkstk_darwin(v197);
  uint64_t v200 = (uint64_t)&v174 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v213 = sub_1000060EC(&qword_10015A9F8);
  __chkstk_darwin(v213);
  uint64_t v201 = (char *)&v174 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v220 = sub_1000060EC(&qword_10015A9E8);
  __chkstk_darwin(v220);
  v216 = (char *)&v174 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v198 = type metadata accessor for AsyncThrowingAction(0);
  __chkstk_darwin(v198);
  uint64_t v184 = (uint64_t *)((char *)&v174 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v226 = type metadata accessor for _OpenAction(0);
  uint64_t v13 = __chkstk_darwin(v226);
  uint64_t v179 = (uint64_t *)((char *)&v174 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v183 = (uint64_t)&v174 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v193 = (uint64_t *)((char *)&v174 - v18);
  __chkstk_darwin(v17);
  uint64_t v203 = (uint64_t)&v174 - v19;
  uint64_t v191 = sub_1000060EC(&qword_10015AA58);
  __chkstk_darwin(v191);
  uint64_t v196 = (uint64_t)&v174 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v211 = sub_1000060EC(&qword_10015A9C8);
  __chkstk_darwin(v211);
  uint64_t v199 = (char *)&v174 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v194 = type metadata accessor for AsyncAction(0);
  __chkstk_darwin(v194);
  uint64_t v180 = (uint64_t *)((char *)&v174 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v195 = type metadata accessor for ShareAction(0);
  __chkstk_darwin(v195);
  uint64_t v181 = (uint64_t *)((char *)&v174 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v223 = sub_1000060EC(&qword_10015AA60);
  __chkstk_darwin(v223);
  uint64_t v225 = (uint64_t)&v174 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v217 = sub_1000060EC(&qword_10015AA68);
  __chkstk_darwin(v217);
  uint64_t v219 = (uint64_t)&v174 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v206 = sub_1000060EC(&qword_10015AA70);
  __chkstk_darwin(v206);
  uint64_t v208 = (uint64_t)&v174 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v189 = sub_1000060EC(&qword_10015AA78);
  __chkstk_darwin(v189);
  uint64_t v190 = (uint64_t)&v174 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v207 = sub_1000060EC(&qword_10015A9A8);
  __chkstk_darwin(v207);
  v192 = (char *)&v174 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v218 = sub_1000060EC(&qword_10015A998);
  __chkstk_darwin(v218);
  uint64_t v209 = (char *)&v174 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v224 = sub_1000060EC(&qword_10015A988);
  __chkstk_darwin(v224);
  v221 = (char *)&v174 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = type metadata accessor for Locale();
  __chkstk_darwin(v31 - 8);
  uint64_t v32 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v32 - 8);
  uint64_t v188 = type metadata accessor for OpenAction(0);
  uint64_t v33 = __chkstk_darwin(v188);
  uint64_t v35 = (uint64_t *)((char *)&v174 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v33);
  uint64_t v178 = (uint64_t)&v174 - v36;
  uint64_t v37 = type metadata accessor for URL();
  uint64_t v38 = *(void *)(v37 - 8);
  uint64_t v39 = __chkstk_darwin(v37);
  objc_super v41 = (char *)&v174 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = __chkstk_darwin(v39);
  uint64_t v44 = (char *)&v174 - v43;
  __chkstk_darwin(v42);
  BOOL v46 = (char *)&v174 - v45;
  uint64_t v47 = _s6ActionOMa(0);
  __chkstk_darwin(v47);
  uint64_t v49 = (uint64_t *)((char *)&v174 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v50 = type metadata accessor for ContextMenuItem(0);
  sub_10009A24C(v222 + *(int *)(v50 + 20), (uint64_t)v49, _s6ActionOMa);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v70 = (uint64_t *)((char *)v49 + *(int *)(sub_1000060EC(&qword_10015AA80) + 48));
      uint64_t v72 = *v70;
      uint64_t v71 = v70[1];
      uint64_t v73 = *(void (**)(char *, uint64_t *, uint64_t))(v38 + 32);
      uint64_t v74 = v46;
      uint64_t v177 = v46;
      v73(v46, v49, v37);
      uint64_t v75 = v195;
      uint64_t v76 = v181;
      (*(void (**)(char *, char *, uint64_t))(v38 + 16))((char *)v181 + *(int *)(v195 + 24), v74, v37);
      swift_retain();
      String.LocalizationValue.init(stringLiteral:)();
      static Locale.current.getter();
      uint64_t *v76 = String.init(localized:table:bundle:locale:comment:)();
      v76[1] = v77;
      v76[2] = 0xD000000000000013;
      v76[3] = 0x8000000100117980;
      uint64_t v78 = (uint64_t *)((char *)v76 + *(int *)(v75 + 28));
      *uint64_t v78 = v72;
      v78[1] = v71;
      sub_10009A24C((uint64_t)v76, v190, type metadata accessor for ShareAction);
      swift_storeEnumTagMultiPayload();
      sub_10009A194(&qword_10015A9B0, (void (*)(uint64_t))type metadata accessor for OpenAction);
      sub_10009A194(&qword_10015A9B8, (void (*)(uint64_t))type metadata accessor for ShareAction);
      uint64_t v79 = (uint64_t)v192;
      _ConditionalContent<>.init(storage:)();
      sub_100009C94(v79, v208, &qword_10015A9A8);
      swift_storeEnumTagMultiPayload();
      sub_100099D90();
      sub_100099E6C();
      uint64_t v80 = (uint64_t)v209;
      _ConditionalContent<>.init(storage:)();
      sub_1000063D0(v79, &qword_10015A9A8);
      sub_100009C94(v80, v219, &qword_10015A998);
      swift_storeEnumTagMultiPayload();
      sub_100099CCC();
      sub_100099F48();
      uint64_t v81 = (uint64_t)v221;
      _ConditionalContent<>.init(storage:)();
      sub_1000063D0(v80, &qword_10015A998);
      sub_100009C94(v81, v225, &qword_10015A988);
      swift_storeEnumTagMultiPayload();
      sub_100099D08(&qword_10015A980, &qword_10015A988, (void (*)(void))sub_100099CCC, (void (*)(void))sub_100099F48);
      sub_10009A194(&qword_10015A9D8, (void (*)(uint64_t))type metadata accessor for _OpenAction);
      _ConditionalContent<>.init(storage:)();
      swift_release();
      sub_1000063D0(v81, &qword_10015A988);
      sub_10009A2B4((uint64_t)v76, type metadata accessor for ShareAction);
      return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v177, v37);
    case 2u:
      uint64_t v83 = *v49;
      uint64_t v82 = v49[1];
      String.LocalizationValue.init(stringLiteral:)();
      static Locale.current.getter();
      uint64_t v84 = String.init(localized:table:bundle:locale:comment:)();
      uint64_t v86 = v85;
      uint64_t v87 = v194;
      uint64_t v88 = v180;
      static ButtonRole.destructive.getter();
      *uint64_t v88 = v84;
      v88[1] = v86;
      v88[2] = 0x69662E6873617274;
      v88[3] = 0xEA00000000006C6CLL;
      uint64_t v89 = (uint64_t *)((char *)v88 + *(int *)(v87 + 28));
      void *v89 = v83;
      v89[1] = v82;
      sub_10009A24C((uint64_t)v88, v196, type metadata accessor for AsyncAction);
      swift_storeEnumTagMultiPayload();
      sub_10009A194(&qword_10015A9D0, (void (*)(uint64_t))type metadata accessor for AsyncAction);
      sub_10009A194(&qword_10015A9D8, (void (*)(uint64_t))type metadata accessor for _OpenAction);
      swift_retain();
      uint64_t v90 = (uint64_t)v199;
      _ConditionalContent<>.init(storage:)();
      sub_100009C94(v90, v208, &qword_10015A9C8);
      swift_storeEnumTagMultiPayload();
      sub_100099D90();
      sub_100099E6C();
      uint64_t v91 = (uint64_t)v209;
      _ConditionalContent<>.init(storage:)();
      sub_1000063D0(v90, &qword_10015A9C8);
      sub_100009C94(v91, v219, &qword_10015A998);
      swift_storeEnumTagMultiPayload();
      sub_100099CCC();
      sub_100099F48();
      uint64_t v92 = (uint64_t)v221;
      _ConditionalContent<>.init(storage:)();
      sub_1000063D0(v91, &qword_10015A998);
      sub_100009C94(v92, v225, &qword_10015A988);
      swift_storeEnumTagMultiPayload();
      sub_100099D08(&qword_10015A980, &qword_10015A988, (void (*)(void))sub_100099CCC, (void (*)(void))sub_100099F48);
      _ConditionalContent<>.init(storage:)();
      swift_release();
      sub_1000063D0(v92, &qword_10015A988);
      uint64_t v93 = type metadata accessor for AsyncAction;
      goto LABEL_10;
    case 3u:
      uint64_t v94 = v38;
      uint64_t v95 = *(void (**)(char *, uint64_t *, uint64_t))(v38 + 32);
      uint64_t v177 = v46;
      v95(v46, v49, v37);
      String.LocalizationValue.init(stringLiteral:)();
      static Locale.current.getter();
      uint64_t v96 = String.init(localized:table:bundle:locale:comment:)();
      uint64_t v98 = v97;
      (*(void (**)(char *, char *, uint64_t))(v94 + 16))(v44, v46, v37);
      uint64_t KeyPath = swift_getKeyPath();
      uint64_t v100 = (uint64_t)v193;
      *uint64_t v193 = KeyPath;
      sub_1000060EC(&qword_100156940);
      swift_storeEnumTagMultiPayload();
      uint64_t v101 = v226;
      uint64_t v102 = (uint64_t *)(v100 + *(int *)(v226 + 20));
      uint64_t *v102 = v96;
      v102[1] = v98;
      uint64_t v103 = (void *)(v100 + *(int *)(v101 + 24));
      *uint64_t v103 = 0xD000000000000011;
      v103[1] = 0x8000000100119F90;
      uint64_t v104 = v37;
      v95((char *)(v100 + *(int *)(v101 + 28)), (uint64_t *)v44, v37);
      uint64_t v105 = v203;
      sub_10009A1E4(v100, v203, type metadata accessor for _OpenAction);
      sub_10009A24C(v105, v196, type metadata accessor for _OpenAction);
      swift_storeEnumTagMultiPayload();
      sub_10009A194(&qword_10015A9D0, (void (*)(uint64_t))type metadata accessor for AsyncAction);
      sub_10009A194(&qword_10015A9D8, (void (*)(uint64_t))type metadata accessor for _OpenAction);
      uint64_t v106 = (uint64_t)v199;
      _ConditionalContent<>.init(storage:)();
      sub_100009C94(v106, v208, &qword_10015A9C8);
      swift_storeEnumTagMultiPayload();
      sub_100099D90();
      sub_100099E6C();
      uint64_t v107 = (uint64_t)v209;
      _ConditionalContent<>.init(storage:)();
      sub_1000063D0(v106, &qword_10015A9C8);
      sub_100009C94(v107, v219, &qword_10015A998);
      swift_storeEnumTagMultiPayload();
      sub_100099CCC();
      sub_100099F48();
      uint64_t v108 = (uint64_t)v221;
      _ConditionalContent<>.init(storage:)();
      sub_1000063D0(v107, &qword_10015A998);
      sub_100009C94(v108, v225, &qword_10015A988);
      swift_storeEnumTagMultiPayload();
      sub_100099D08(&qword_10015A980, &qword_10015A988, (void (*)(void))sub_100099CCC, (void (*)(void))sub_100099F48);
      _ConditionalContent<>.init(storage:)();
      sub_1000063D0(v108, &qword_10015A988);
      sub_10009A2B4(v105, type metadata accessor for _OpenAction);
      return (*(uint64_t (**)(char *, uint64_t))(v94 + 8))(v177, v104);
    case 4u:
      uint64_t v110 = *v49;
      uint64_t v109 = v49[1];
      String.LocalizationValue.init(stringLiteral:)();
      static Locale.current.getter();
      uint64_t v111 = String.init(localized:table:bundle:locale:comment:)();
      uint64_t v113 = v112;
      uint64_t v114 = v198;
      uint64_t v115 = v184;
      static ButtonRole.cancel.getter();
      uint64_t *v115 = v111;
      v115[1] = v113;
      v115[2] = 1937075312;
      v115[3] = 0xE400000000000000;
      uint64_t v116 = (uint64_t *)((char *)v115 + *(int *)(v114 + 28));
      *uint64_t v116 = v110;
      v116[1] = v109;
      sub_10009A24C((uint64_t)v115, v200, type metadata accessor for AsyncThrowingAction);
      swift_storeEnumTagMultiPayload();
      sub_10009A194(&qword_10015AA00, (void (*)(uint64_t))type metadata accessor for AsyncThrowingAction);
      sub_10009A194(&qword_10015AA08, (void (*)(uint64_t))type metadata accessor for SyncAction);
      swift_retain();
      uint64_t v117 = (uint64_t)v201;
      _ConditionalContent<>.init(storage:)();
      sub_100009C94(v117, v214, &qword_10015A9F8);
      swift_storeEnumTagMultiPayload();
      sub_100099F84();
      sub_10009A060();
      uint64_t v118 = (uint64_t)v216;
      _ConditionalContent<>.init(storage:)();
      sub_1000063D0(v117, &qword_10015A9F8);
      sub_100009C94(v118, v219, &qword_10015A9E8);
      swift_storeEnumTagMultiPayload();
      sub_100099CCC();
      sub_100099F48();
      uint64_t v119 = (uint64_t)v221;
      _ConditionalContent<>.init(storage:)();
      sub_1000063D0(v118, &qword_10015A9E8);
      sub_100009C94(v119, v225, &qword_10015A988);
      swift_storeEnumTagMultiPayload();
      sub_100099D08(&qword_10015A980, &qword_10015A988, (void (*)(void))sub_100099CCC, (void (*)(void))sub_100099F48);
      sub_10009A194(&qword_10015A9D8, (void (*)(uint64_t))type metadata accessor for _OpenAction);
      _ConditionalContent<>.init(storage:)();
      swift_release();
      sub_1000063D0(v119, &qword_10015A988);
      uint64_t v120 = type metadata accessor for AsyncThrowingAction;
      goto LABEL_8;
    case 5u:
      uint64_t v122 = *v49;
      uint64_t v121 = v49[1];
      String.LocalizationValue.init(stringLiteral:)();
      static Locale.current.getter();
      uint64_t v123 = String.init(localized:table:bundle:locale:comment:)();
      uint64_t v125 = v124;
      uint64_t v126 = v210;
      uint64_t v115 = v187;
      static ButtonRole.destructive.getter();
      uint64_t *v115 = v123;
      v115[1] = v125;
      v115[2] = 0x69662E6873617274;
      v115[3] = 0xEA00000000006C6CLL;
      unint64_t v127 = (uint64_t *)((char *)v115 + *(int *)(v126 + 28));
      *unint64_t v127 = v122;
      v127[1] = v121;
      sub_10009A24C((uint64_t)v115, v200, type metadata accessor for SyncAction);
      swift_storeEnumTagMultiPayload();
      sub_10009A194(&qword_10015AA00, (void (*)(uint64_t))type metadata accessor for AsyncThrowingAction);
      sub_10009A194(&qword_10015AA08, (void (*)(uint64_t))type metadata accessor for SyncAction);
      swift_retain();
      uint64_t v128 = (uint64_t)v201;
      _ConditionalContent<>.init(storage:)();
      sub_100009C94(v128, v214, &qword_10015A9F8);
      swift_storeEnumTagMultiPayload();
      sub_100099F84();
      sub_10009A060();
      uint64_t v129 = (uint64_t)v216;
      _ConditionalContent<>.init(storage:)();
      sub_1000063D0(v128, &qword_10015A9F8);
      sub_100009C94(v129, v219, &qword_10015A9E8);
      swift_storeEnumTagMultiPayload();
      sub_100099CCC();
      sub_100099F48();
      uint64_t v130 = (uint64_t)v221;
      _ConditionalContent<>.init(storage:)();
      sub_1000063D0(v129, &qword_10015A9E8);
      sub_100009C94(v130, v225, &qword_10015A988);
      swift_storeEnumTagMultiPayload();
      sub_100099D08(&qword_10015A980, &qword_10015A988, (void (*)(void))sub_100099CCC, (void (*)(void))sub_100099F48);
      sub_10009A194(&qword_10015A9D8, (void (*)(uint64_t))type metadata accessor for _OpenAction);
      _ConditionalContent<>.init(storage:)();
      swift_release();
      sub_1000063D0(v130, &qword_10015A988);
      uint64_t v120 = type metadata accessor for SyncAction;
LABEL_8:
      uint64_t v131 = (uint64_t (*)())v120;
      uint64_t v132 = (uint64_t)v115;
      goto LABEL_14;
    case 6u:
      uint64_t v134 = *v49;
      uint64_t v133 = v49[1];
      String.LocalizationValue.init(stringLiteral:)();
      static Locale.current.getter();
      uint64_t v135 = String.init(localized:table:bundle:locale:comment:)();
      uint64_t v137 = v136;
      uint64_t v138 = v210;
      uint64_t v88 = v186;
      static ButtonRole.cancel.getter();
      *uint64_t v88 = v135;
      v88[1] = v137;
      v88[2] = 0x6461622E74786574;
      v88[3] = 0xEF73756C702E6567;
      int v139 = (uint64_t *)((char *)v88 + *(int *)(v138 + 28));
      *int v139 = v134;
      v139[1] = v133;
      sub_10009A24C((uint64_t)v88, v204, type metadata accessor for SyncAction);
      swift_storeEnumTagMultiPayload();
      sub_10009A194(&qword_10015AA08, (void (*)(uint64_t))type metadata accessor for SyncAction);
      sub_10009A194(&qword_10015A9D8, (void (*)(uint64_t))type metadata accessor for _OpenAction);
      swift_retain();
      uint64_t v140 = (uint64_t)v205;
      _ConditionalContent<>.init(storage:)();
      sub_100009C94(v140, v214, &qword_10015AA18);
      swift_storeEnumTagMultiPayload();
      sub_100099F84();
      sub_10009A060();
      uint64_t v141 = (uint64_t)v216;
      _ConditionalContent<>.init(storage:)();
      sub_1000063D0(v140, &qword_10015AA18);
      sub_100009C94(v141, v219, &qword_10015A9E8);
      swift_storeEnumTagMultiPayload();
      sub_100099CCC();
      sub_100099F48();
      uint64_t v142 = (uint64_t)v221;
      _ConditionalContent<>.init(storage:)();
      sub_1000063D0(v141, &qword_10015A9E8);
      sub_100009C94(v142, v225, &qword_10015A988);
      swift_storeEnumTagMultiPayload();
      sub_100099D08(&qword_10015A980, &qword_10015A988, (void (*)(void))sub_100099CCC, (void (*)(void))sub_100099F48);
      _ConditionalContent<>.init(storage:)();
      swift_release();
      sub_1000063D0(v142, &qword_10015A988);
      uint64_t v93 = type metadata accessor for SyncAction;
LABEL_10:
      uint64_t v131 = (uint64_t (*)())v93;
      uint64_t v132 = (uint64_t)v88;
      goto LABEL_14;
    case 7u:
      uint64_t v143 = *(void (**)(char *, uint64_t *, uint64_t))(v38 + 32);
      uint64_t v175 = v41;
      v143(v41, v49, v37);
      String.LocalizationValue.init(stringLiteral:)();
      static Locale.current.getter();
      uint64_t v144 = String.init(localized:table:bundle:locale:comment:)();
      uint64_t v146 = v145;
      uint64_t v147 = v46;
      (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v46, v41, v37);
      uint64_t v148 = swift_getKeyPath();
      int v149 = v179;
      uint64_t *v179 = v148;
      sub_1000060EC(&qword_100156940);
      swift_storeEnumTagMultiPayload();
      uint64_t v150 = v226;
      uint64_t v151 = (uint64_t *)((char *)v149 + *(int *)(v226 + 20));
      *uint64_t v151 = v144;
      v151[1] = v146;
      uint64_t v152 = (uint64_t *)((char *)v149 + *(int *)(v150 + 24));
      void *v152 = 0x6C632E656C707061;
      v152[1] = 0xEF6C616369737361;
      v143((char *)v149 + *(int *)(v150 + 28), (uint64_t *)v147, v37);
      uint64_t v153 = (uint64_t)v149;
      uint64_t v154 = v183;
      sub_10009A1E4(v153, v183, type metadata accessor for _OpenAction);
      sub_10009A24C(v154, v204, type metadata accessor for _OpenAction);
      swift_storeEnumTagMultiPayload();
      sub_10009A194(&qword_10015AA08, (void (*)(uint64_t))type metadata accessor for SyncAction);
      sub_10009A194(&qword_10015A9D8, (void (*)(uint64_t))type metadata accessor for _OpenAction);
      uint64_t v155 = (uint64_t)v205;
      _ConditionalContent<>.init(storage:)();
      sub_100009C94(v155, v214, &qword_10015AA18);
      swift_storeEnumTagMultiPayload();
      sub_100099F84();
      sub_10009A060();
      uint64_t v156 = (uint64_t)v216;
      _ConditionalContent<>.init(storage:)();
      sub_1000063D0(v155, &qword_10015AA18);
      sub_100009C94(v156, v219, &qword_10015A9E8);
      swift_storeEnumTagMultiPayload();
      sub_100099CCC();
      sub_100099F48();
      uint64_t v157 = (uint64_t)v221;
      _ConditionalContent<>.init(storage:)();
      sub_1000063D0(v156, &qword_10015A9E8);
      sub_100009C94(v157, v225, &qword_10015A988);
      swift_storeEnumTagMultiPayload();
      sub_100099D08(&qword_10015A980, &qword_10015A988, (void (*)(void))sub_100099CCC, (void (*)(void))sub_100099F48);
      _ConditionalContent<>.init(storage:)();
      sub_1000063D0(v157, &qword_10015A988);
      sub_10009A2B4(v154, type metadata accessor for _OpenAction);
      return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v175, v37);
    case 8u:
      uint64_t v158 = v185;
      sub_10009A1E4((uint64_t)v49, v185, (uint64_t (*)(void))type metadata accessor for StreamingService);
      uint64_t v159 = (uint64_t *)(v158 + v182[6]);
      uint64_t v161 = *v159;
      uint64_t v160 = v159[1];
      char v162 = (uint64_t *)(v158 + v182[7]);
      uint64_t v164 = *v162;
      uint64_t v163 = v162[1];
      uint64_t v165 = v38;
      uint64_t v166 = *(void (**)(char *, uint64_t, uint64_t))(v38 + 16);
      uint64_t v167 = v46;
      v166(v46, v158 + v182[5], v37);
      uint64_t v168 = swift_getKeyPath();
      uint64_t v169 = (uint64_t)v193;
      *uint64_t v193 = v168;
      sub_1000060EC(&qword_100156940);
      swift_storeEnumTagMultiPayload();
      uint64_t v170 = v226;
      uint64_t v171 = (void *)(v169 + *(int *)(v226 + 20));
      void *v171 = v161;
      v171[1] = v160;
      uint64_t v172 = (void *)(v169 + *(int *)(v170 + 24));
      *uint64_t v172 = v164;
      v172[1] = v163;
      (*(void (**)(uint64_t, char *, uint64_t))(v165 + 32))(v169 + *(int *)(v170 + 28), v167, v37);
      uint64_t v173 = v203;
      sub_10009A1E4(v169, v203, type metadata accessor for _OpenAction);
      sub_10009A24C(v173, v225, type metadata accessor for _OpenAction);
      swift_storeEnumTagMultiPayload();
      sub_100099D08(&qword_10015A980, &qword_10015A988, (void (*)(void))sub_100099CCC, (void (*)(void))sub_100099F48);
      sub_10009A194(&qword_10015A9D8, (void (*)(uint64_t))type metadata accessor for _OpenAction);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      _ConditionalContent<>.init(storage:)();
      sub_10009A2B4(v173, type metadata accessor for _OpenAction);
      uint64_t v131 = type metadata accessor for StreamingService;
      uint64_t v132 = v158;
LABEL_14:
      uint64_t result = sub_10009A2B4(v132, (uint64_t (*)(void))v131);
      break;
    default:
      uint64_t v51 = (uint64_t *)((char *)v49 + *(int *)(sub_1000060EC(&qword_10015AA80) + 48));
      uint64_t v53 = *v51;
      uint64_t v52 = (char *)v51[1];
      uint64_t v222 = v53;
      v216 = v52;
      uint64_t v54 = v38;
      uint64_t v176 = v38;
      uint64_t v55 = *(void (**)(char *, uint64_t *, uint64_t))(v38 + 32);
      uint64_t v177 = v46;
      v55(v46, v49, v37);
      String.LocalizationValue.init(stringLiteral:)();
      static Locale.current.getter();
      uint64_t v56 = String.init(localized:table:bundle:locale:comment:)();
      uint64_t v58 = v57;
      (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v44, v46, v37);
      *uint64_t v35 = swift_getKeyPath();
      sub_1000060EC(&qword_100156940);
      swift_storeEnumTagMultiPayload();
      uint64_t v59 = (int *)v188;
      uint64_t v60 = (uint64_t *)((char *)v35 + *(int *)(v188 + 20));
      *uint64_t v60 = v56;
      v60[1] = v58;
      uint64_t v61 = (uint64_t *)((char *)v35 + v59[6]);
      *uint64_t v61 = 0xD000000000000010;
      v61[1] = 0x8000000100117610;
      uint64_t v62 = v37;
      v55((char *)v35 + v59[7], (uint64_t *)v44, v37);
      uint64_t v63 = (uint64_t *)((char *)v35 + v59[8]);
      uint64_t v64 = v216;
      void *v63 = v222;
      v63[1] = v64;
      uint64_t v65 = v178;
      sub_10009A1E4((uint64_t)v35, v178, type metadata accessor for OpenAction);
      sub_10009A24C(v65, v190, type metadata accessor for OpenAction);
      swift_storeEnumTagMultiPayload();
      sub_10009A194(&qword_10015A9B0, (void (*)(uint64_t))type metadata accessor for OpenAction);
      sub_10009A194(&qword_10015A9B8, (void (*)(uint64_t))type metadata accessor for ShareAction);
      swift_retain();
      uint64_t v66 = (uint64_t)v192;
      _ConditionalContent<>.init(storage:)();
      sub_100009C94(v66, v208, &qword_10015A9A8);
      swift_storeEnumTagMultiPayload();
      sub_100099D90();
      sub_100099E6C();
      uint64_t v67 = (uint64_t)v209;
      _ConditionalContent<>.init(storage:)();
      sub_1000063D0(v66, &qword_10015A9A8);
      sub_100009C94(v67, v219, &qword_10015A998);
      swift_storeEnumTagMultiPayload();
      sub_100099CCC();
      sub_100099F48();
      uint64_t v68 = (uint64_t)v221;
      _ConditionalContent<>.init(storage:)();
      sub_1000063D0(v67, &qword_10015A998);
      sub_100009C94(v68, v225, &qword_10015A988);
      swift_storeEnumTagMultiPayload();
      sub_100099D08(&qword_10015A980, &qword_10015A988, (void (*)(void))sub_100099CCC, (void (*)(void))sub_100099F48);
      sub_10009A194(&qword_10015A9D8, (void (*)(uint64_t))type metadata accessor for _OpenAction);
      _ConditionalContent<>.init(storage:)();
      swift_release();
      sub_1000063D0(v68, &qword_10015A988);
      sub_10009A2B4(v65, type metadata accessor for OpenAction);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v176 + 8))(v177, v62);
      break;
  }
  return result;
}

uint64_t sub_1000999BC()
{
  return ForEach<>.init(_:content:)();
}

unint64_t sub_100099ABC()
{
  unint64_t result = qword_10015A948;
  if (!qword_10015A948)
  {
    sub_100006224(&qword_10015A938);
    sub_100099B7C();
    sub_10009A3B0(&qword_10015A960, &qword_10015A968, (void (*)(void))sub_100099BE8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015A948);
  }
  return result;
}

unint64_t sub_100099B7C()
{
  unint64_t result = qword_10015A950;
  if (!qword_10015A950)
  {
    sub_100006224(&qword_10015A958);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015A950);
  }
  return result;
}

unint64_t sub_100099BE8()
{
  unint64_t result = qword_10015A970;
  if (!qword_10015A970)
  {
    sub_100006224(&qword_10015A978);
    sub_100099D08(&qword_10015A980, &qword_10015A988, (void (*)(void))sub_100099CCC, (void (*)(void))sub_100099F48);
    sub_10009A194(&qword_10015A9D8, (void (*)(uint64_t))type metadata accessor for _OpenAction);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015A970);
  }
  return result;
}

uint64_t sub_100099CCC()
{
  return sub_100099D08(&qword_10015A990, &qword_10015A998, (void (*)(void))sub_100099D90, (void (*)(void))sub_100099E6C);
}

uint64_t sub_100099D08(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100006224(a2);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100099D90()
{
  unint64_t result = qword_10015A9A0;
  if (!qword_10015A9A0)
  {
    sub_100006224(&qword_10015A9A8);
    sub_10009A194(&qword_10015A9B0, (void (*)(uint64_t))type metadata accessor for OpenAction);
    sub_10009A194(&qword_10015A9B8, (void (*)(uint64_t))type metadata accessor for ShareAction);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015A9A0);
  }
  return result;
}

unint64_t sub_100099E6C()
{
  unint64_t result = qword_10015A9C0;
  if (!qword_10015A9C0)
  {
    sub_100006224(&qword_10015A9C8);
    sub_10009A194(&qword_10015A9D0, (void (*)(uint64_t))type metadata accessor for AsyncAction);
    sub_10009A194(&qword_10015A9D8, (void (*)(uint64_t))type metadata accessor for _OpenAction);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015A9C0);
  }
  return result;
}

uint64_t sub_100099F48()
{
  return sub_100099D08(&qword_10015A9E0, &qword_10015A9E8, (void (*)(void))sub_100099F84, (void (*)(void))sub_10009A060);
}

unint64_t sub_100099F84()
{
  unint64_t result = qword_10015A9F0;
  if (!qword_10015A9F0)
  {
    sub_100006224(&qword_10015A9F8);
    sub_10009A194(&qword_10015AA00, (void (*)(uint64_t))type metadata accessor for AsyncThrowingAction);
    sub_10009A194(&qword_10015AA08, (void (*)(uint64_t))type metadata accessor for SyncAction);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015A9F0);
  }
  return result;
}

unint64_t sub_10009A060()
{
  unint64_t result = qword_10015AA10;
  if (!qword_10015AA10)
  {
    sub_100006224(&qword_10015AA18);
    sub_10009A194(&qword_10015AA08, (void (*)(uint64_t))type metadata accessor for SyncAction);
    sub_10009A194(&qword_10015A9D8, (void (*)(uint64_t))type metadata accessor for _OpenAction);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015AA10);
  }
  return result;
}

uint64_t sub_10009A13C()
{
  return sub_1000970A0();
}

uint64_t sub_10009A144(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100006224(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10009A194(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10009A1E4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10009A24C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10009A2B4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

ValueMetadata *type metadata accessor for ContextMenuContentModel()
{
  return &type metadata for ContextMenuContentModel;
}

uint64_t sub_10009A324()
{
  return sub_10009A3B0(&qword_10015AA88, &qword_10015AA90, (void (*)(void))sub_10009A374);
}

uint64_t sub_10009A374()
{
  return sub_10009A3B0(&qword_10015AA98, &qword_10015AAA0, (void (*)(void))sub_100099ABC);
}

uint64_t sub_10009A3B0(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100006224(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *sub_10009A41C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    _s6ActionOMa(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
      case 4u:
      case 5u:
      case 6u:
        uint64_t v18 = v10[1];
        *uint64_t v9 = *v10;
        v9[1] = v18;
        swift_retain();
        break;
      case 3u:
      case 7u:
        uint64_t v17 = type metadata accessor for URL();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v9, v10, v17);
        break;
      case 8u:
        uint64_t v19 = v10[1];
        *uint64_t v9 = *v10;
        v9[1] = v19;
        uint64_t v20 = (int *)type metadata accessor for StreamingService();
        uint64_t v21 = v20[5];
        uint64_t v34 = (char *)v9 + v21;
        uint64_t v22 = (char *)v10 + v21;
        uint64_t v23 = type metadata accessor for URL();
        uint64_t v24 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16);
        swift_bridgeObjectRetain();
        v24(v34, v22, v23);
        uint64_t v25 = v20[6];
        uint64_t v26 = (void *)((char *)v9 + v25);
        uint64_t v27 = (void *)((char *)v10 + v25);
        uint64_t v28 = v27[1];
        *uint64_t v26 = *v27;
        v26[1] = v28;
        uint64_t v29 = v20[7];
        uint64_t v30 = (void *)((char *)v9 + v29);
        uint64_t v31 = (void *)((char *)v10 + v29);
        uint64_t v32 = v31[1];
        *uint64_t v30 = *v31;
        v30[1] = v32;
        *((unsigned char *)v9 + v20[8]) = *((unsigned char *)v10 + v20[8]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      default:
        uint64_t v11 = type metadata accessor for URL();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
        uint64_t v12 = *(int *)(sub_1000060EC(&qword_10015AA80) + 48);
        uint64_t v13 = (void *)((char *)v9 + v12);
        uint64_t v14 = (void *)((char *)v10 + v12);
        uint64_t v15 = v14[1];
        *uint64_t v13 = *v14;
        v13[1] = v15;
        swift_retain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_10009A80C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  _s6ActionOMa(0);
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 1:
      uint64_t v7 = type metadata accessor for URL();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v5, v7);
      sub_1000060EC(&qword_10015AA80);
      goto LABEL_3;
    case 2:
    case 4:
    case 5:
    case 6:
LABEL_3:
      uint64_t result = swift_release();
      break;
    case 3:
    case 7:
      uint64_t v8 = type metadata accessor for URL();
      uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
      uint64_t result = v9(v5, v8);
      break;
    case 8:
      swift_bridgeObjectRelease();
      uint64_t v10 = v5 + *(int *)(type metadata accessor for StreamingService() + 20);
      uint64_t v11 = type metadata accessor for URL();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10009AA38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  _s6ActionOMa(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
    case 4u:
    case 5u:
    case 6u:
      uint64_t v16 = v9[1];
      *uint64_t v8 = *v9;
      v8[1] = v16;
      swift_retain();
      break;
    case 3u:
    case 7u:
      uint64_t v15 = type metadata accessor for URL();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(v8, v9, v15);
      break;
    case 8u:
      uint64_t v17 = v9[1];
      *uint64_t v8 = *v9;
      v8[1] = v17;
      uint64_t v18 = (int *)type metadata accessor for StreamingService();
      uint64_t v19 = v18[5];
      uint64_t v32 = (char *)v8 + v19;
      uint64_t v20 = (char *)v9 + v19;
      uint64_t v21 = type metadata accessor for URL();
      uint64_t v22 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16);
      swift_bridgeObjectRetain();
      v22(v32, v20, v21);
      uint64_t v23 = v18[6];
      uint64_t v24 = (void *)((char *)v8 + v23);
      uint64_t v25 = (void *)((char *)v9 + v23);
      uint64_t v26 = v25[1];
      void *v24 = *v25;
      v24[1] = v26;
      uint64_t v27 = v18[7];
      uint64_t v28 = (void *)((char *)v8 + v27);
      uint64_t v29 = (void *)((char *)v9 + v27);
      uint64_t v30 = v29[1];
      *uint64_t v28 = *v29;
      v28[1] = v30;
      *((unsigned char *)v8 + v18[8]) = *((unsigned char *)v9 + v18[8]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      break;
    default:
      uint64_t v10 = type metadata accessor for URL();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
      uint64_t v11 = *(int *)(sub_1000060EC(&qword_10015AA80) + 48);
      uint64_t v12 = (void *)((char *)v8 + v11);
      uint64_t v13 = (void *)((char *)v9 + v11);
      uint64_t v14 = v13[1];
      void *v12 = *v13;
      v12[1] = v14;
      swift_retain();
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_10009ADD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (void *)(a2 + v7);
    sub_10009B1A0(a1 + v7);
    _s6ActionOMa(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
      case 4u:
      case 5u:
      case 6u:
        uint64_t v16 = v9[1];
        *uint64_t v8 = *v9;
        v8[1] = v16;
        swift_retain();
        break;
      case 3u:
      case 7u:
        uint64_t v15 = type metadata accessor for URL();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(v8, v9, v15);
        break;
      case 8u:
        *uint64_t v8 = *v9;
        v8[1] = v9[1];
        uint64_t v17 = (int *)type metadata accessor for StreamingService();
        uint64_t v18 = v17[5];
        uint64_t v29 = (char *)v8 + v18;
        uint64_t v19 = (char *)v9 + v18;
        uint64_t v20 = type metadata accessor for URL();
        uint64_t v21 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
        swift_bridgeObjectRetain();
        v21(v29, v19, v20);
        uint64_t v22 = v17[6];
        uint64_t v23 = (void *)((char *)v8 + v22);
        uint64_t v24 = (void *)((char *)v9 + v22);
        *uint64_t v23 = *v24;
        v23[1] = v24[1];
        uint64_t v25 = v17[7];
        uint64_t v26 = (void *)((char *)v8 + v25);
        uint64_t v27 = (void *)((char *)v9 + v25);
        *uint64_t v26 = *v27;
        v26[1] = v27[1];
        *((unsigned char *)v8 + v17[8]) = *((unsigned char *)v9 + v17[8]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      default:
        uint64_t v10 = type metadata accessor for URL();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
        uint64_t v11 = *(int *)(sub_1000060EC(&qword_10015AA80) + 48);
        uint64_t v12 = (void *)((char *)v8 + v11);
        uint64_t v13 = (void *)((char *)v9 + v11);
        uint64_t v14 = v13[1];
        void *v12 = *v13;
        v12[1] = v14;
        swift_retain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_10009B1A0(uint64_t a1)
{
  uint64_t v2 = _s6ActionOMa(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10009B1FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (_OWORD *)(a1 + v7);
  uint64_t v9 = (_OWORD *)(a2 + v7);
  uint64_t v10 = _s6ActionOMa(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
      uint64_t v11 = type metadata accessor for URL();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
      uint64_t v12 = sub_1000060EC(&qword_10015AA80);
      *(_OWORD *)((char *)v8 + *(int *)(v12 + 48)) = *(_OWORD *)((char *)v9 + *(int *)(v12 + 48));
      goto LABEL_6;
    case 3u:
    case 7u:
      uint64_t v13 = type metadata accessor for URL();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v13 - 8) + 32))(v8, v9, v13);
      goto LABEL_6;
    case 8u:
      *uint64_t v8 = *v9;
      uint64_t v14 = (int *)type metadata accessor for StreamingService();
      uint64_t v15 = v14[5];
      uint64_t v16 = (char *)v8 + v15;
      uint64_t v17 = (char *)v9 + v15;
      uint64_t v18 = type metadata accessor for URL();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
      *(_OWORD *)((char *)v8 + v14[6]) = *(_OWORD *)((char *)v9 + v14[6]);
      *(_OWORD *)((char *)v8 + v14[7]) = *(_OWORD *)((char *)v9 + v14[7]);
      *((unsigned char *)v8 + v14[8]) = *((unsigned char *)v9 + v14[8]);
LABEL_6:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
      break;
  }
  return a1;
}

uint64_t sub_10009B504(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (_OWORD *)(a1 + v7);
    uint64_t v9 = (_OWORD *)(a2 + v7);
    sub_10009B1A0(a1 + v7);
    uint64_t v10 = _s6ActionOMa(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
        uint64_t v11 = type metadata accessor for URL();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
        uint64_t v12 = sub_1000060EC(&qword_10015AA80);
        *(_OWORD *)((char *)v8 + *(int *)(v12 + 48)) = *(_OWORD *)((char *)v9 + *(int *)(v12 + 48));
        goto LABEL_7;
      case 3u:
      case 7u:
        uint64_t v13 = type metadata accessor for URL();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v13 - 8) + 32))(v8, v9, v13);
        goto LABEL_7;
      case 8u:
        *uint64_t v8 = *v9;
        uint64_t v14 = (int *)type metadata accessor for StreamingService();
        uint64_t v15 = v14[5];
        uint64_t v16 = (char *)v8 + v15;
        uint64_t v17 = (char *)v9 + v15;
        uint64_t v18 = type metadata accessor for URL();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
        *(_OWORD *)((char *)v8 + v14[6]) = *(_OWORD *)((char *)v9 + v14[6]);
        *(_OWORD *)((char *)v8 + v14[7]) = *(_OWORD *)((char *)v9 + v14[7]);
        *((unsigned char *)v8 + v14[8]) = *((unsigned char *)v9 + v14[8]);
LABEL_7:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_10009B81C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10009B830);
}

uint64_t sub_10009B830(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = _s6ActionOMa(0);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_10009B928(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10009B93C);
}

uint64_t sub_10009B93C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = _s6ActionOMa(0);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t type metadata accessor for ContextMenuItem(uint64_t a1)
{
  return sub_10009C0CC(a1, qword_10015AB00);
}

uint64_t sub_10009BA60()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    uint64_t result = _s6ActionOMa(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_10009BB28(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = *(int *)(a3 + 24);
    uint64_t v10 = (uint64_t *)((char *)a1 + v8);
    uint64_t v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    *(uint64_t *)((char *)a1 + v9) = *(uint64_t *)((char *)a2 + v9);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_10009BC10(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10009BC94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_10009BD2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10009BDE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  return a1;
}

uint64_t sub_10009BE68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10009BF08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10009BF1C);
}

uint64_t sub_10009BF1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_10009BFDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10009BFF0);
}

uint64_t sub_10009BFF0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for ContextMenuItemSection(uint64_t a1)
{
  return sub_10009C0CC(a1, qword_10015AB90);
}

uint64_t sub_10009C0CC(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10009C104()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_10009C1AC()
{
  unint64_t result = qword_1001580C8;
  if (!qword_1001580C8)
  {
    type metadata accessor for UUID();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001580C8);
  }
  return result;
}

uint64_t sub_10009C208@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for UUID();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

void sub_10009C270()
{
  [*(id *)(v0 + OBJC_IVAR____TtC16MusicRecognition13ListeningView_waveformView) setHidden:1];
  if (*(void *)(v0 + OBJC_IVAR____TtC16MusicRecognition13ListeningView_extendedListeningTextChangeTask))
  {
    swift_retain();
    sub_1000060EC(&qword_1001577C8);
    Task.cancel()();
    swift_release();
  }
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC16MusicRecognition13ListeningView_listeningLabel);
  id v2 = [self mainBundle];
  v7._object = (void *)0xE000000000000000;
  v3._object = (void *)0x80000001001182D0;
  v3._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
  v4._uint64_t countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  v7._uint64_t countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v3, (Swift::String_optional)0, (NSBundle)v2, v4, v7);

  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v1 setText:v5];
}

uint64_t sub_10009C3BC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000060EC(&qword_100157038);
  __chkstk_darwin(v2 - 8);
  Swift::String v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v5 = *(void **)&v0[OBJC_IVAR____TtC16MusicRecognition13ListeningView_listeningLabel];
  id v6 = [self mainBundle];
  v17._object = (void *)0xE000000000000000;
  v7._object = (void *)0x80000001001182D0;
  v7._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
  v8._uint64_t countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  v17._uint64_t countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v7, (Swift::String_optional)0, (NSBundle)v6, v8, v17);

  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v5 setText:v9];

  [*(id *)&v1[OBJC_IVAR____TtC16MusicRecognition13ListeningView_waveformView] setHidden:0];
  uint64_t v10 = OBJC_IVAR____TtC16MusicRecognition13ListeningView_extendedListeningTextChangeTask;
  if (*(void *)&v1[OBJC_IVAR____TtC16MusicRecognition13ListeningView_extendedListeningTextChangeTask])
  {
    swift_retain();
    sub_1000060EC(&qword_1001577C8);
    Task.cancel()();
    swift_release();
  }
  uint64_t v11 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v4, 1, 1, v11);
  type metadata accessor for MainActor();
  uint64_t v12 = v1;
  uint64_t v13 = static MainActor.shared.getter();
  uint64_t v14 = (void *)swift_allocObject();
  _OWORD v14[2] = v13;
  void v14[3] = &protocol witness table for MainActor;
  v14[4] = v12;
  *(void *)&v1[v10] = sub_1000D5678((uint64_t)v4, (uint64_t)&unk_10015AC60, (uint64_t)v14);
  return swift_release();
}

void sub_10009C5FC()
{
  qword_10015ABD0 = 0x6B72616D78;
  *(void *)algn_10015ABD8 = 0xE500000000000000;
}

id sub_10009C61C()
{
  id result = [objc_allocWithZone((Class)UIColor) initWithRed:0.262745098 green:0.533333333 blue:0.996078431 alpha:1.0];
  qword_10015ABE0 = (uint64_t)result;
  return result;
}

id sub_10009C670()
{
  id result = [objc_allocWithZone((Class)UIColor) initWithRed:0.0588235294 green:0.129411765 blue:0.250980392 alpha:1.0];
  qword_10015ABE8 = (uint64_t)result;
  return result;
}

void sub_10009C6C8()
{
  qword_10015ABF0 = 0xC030800000000000;
}

void sub_10009C6DC(double a1, double a2, double a3, double a4)
{
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v10 = self;
  uint64_t v11 = v4;
  id v12 = [v10 mainBundle];
  id v13 = objc_allocWithZone((Class)BSUICAPackageView);
  NSString v14 = String._bridgeToObjectiveC()();
  id v15 = [v13 initWithPackageName:v14 inBundle:v12];

  if (v15)
  {
    *(void *)&v11[OBJC_IVAR____TtC16MusicRecognition13ListeningView_listeningView] = v15;
    uint64_t v16 = OBJC_IVAR____TtC16MusicRecognition13ListeningView_listeningLabel;
    *(void *)&v11[v16] = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
    uint64_t v17 = OBJC_IVAR____TtC16MusicRecognition13ListeningView_cancelButton;
    *(void *)&v11[v17] = [objc_allocWithZone((Class)UIButton) initWithFrame:0.0, 0.0, 0.0, 0.0];
    uint64_t v18 = OBJC_IVAR____TtC16MusicRecognition13ListeningView_waveformView;
    uint64_t v19 = (objc_class *)type metadata accessor for SpectralOutputWaveformView();
    uint64_t v20 = objc_allocWithZone(v19);
    *(void *)&v20[OBJC_IVAR____TtC16MusicRecognition26SpectralOutputWaveformView_barViews] = _swiftEmptyArrayStorage;
    *(void *)&v20[OBJC_IVAR____TtC16MusicRecognition26SpectralOutputWaveformView_waveformData] = _swiftEmptyArrayStorage;
    v20[OBJC_IVAR____TtC16MusicRecognition26SpectralOutputWaveformView_style] = 1;
    v24.receiver = v20;
    v24.super_class = v19;
    id v21 = [super initWithFrame:0.0, 0.0, 0.0, 0.0];
    sub_1000275EC();

    *(void *)&v11[v18] = v21;
    *(void *)&v11[OBJC_IVAR____TtC16MusicRecognition13ListeningView_extendedListeningTextChangeTask] = 0;
    *(void *)&v11[OBJC_IVAR____TtC16MusicRecognition13ListeningView_listeningLabelVerticalAnchor] = 0;

    v23.receiver = v11;
    v23.super_class = ObjectType;
    [super initWithFrame:a1, a2, a3, a4];
    sub_10009C908();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10009C908()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000060EC(&qword_10015AC50);
  __chkstk_darwin(v2 - 8);
  Swift::String v4 = (char *)&v84 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = type metadata accessor for UIButton.Configuration.CornerStyle();
  uint64_t v88 = *(void (***)(void, void, void))(v90 - 8);
  __chkstk_darwin(v90);
  uint64_t v87 = (char *)&v84 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for UIButton.Configuration();
  uint64_t v91 = *(void *)(v6 - 8);
  uint64_t v92 = v6;
  __chkstk_darwin(v6);
  Swift::String v8 = (char *)&v84 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  [v0 setTranslatesAutoresizingMaskIntoConstraints:0];
  NSString v9 = *(void **)&v0[OBJC_IVAR____TtC16MusicRecognition13ListeningView_listeningView];
  [v9 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v0 addSubview:v9];
  NSString v10 = String._bridgeToObjectiveC()();
  [v9 setAccessibilityIdentifier:v10];

  id v11 = [v9 layer];
  [v11 setCompositingFilter:kCAFilterScreenBlendMode];

  id v12 = *(char **)&v1[OBJC_IVAR____TtC16MusicRecognition13ListeningView_listeningLabel];
  [v12 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v1 addSubview:v12];
  id v13 = [self systemFontOfSize:16.0 weight:UIFontWeightSemibold];
  [v12 setFont:v13];

  id v14 = [self whiteColor];
  [v12 setTextColor:v14];

  id v86 = self;
  id v15 = [v86 mainBundle];
  v16._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
  v94._object = (void *)0xE000000000000000;
  v16._object = (void *)0x80000001001182D0;
  v17._uint64_t countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  v94._uint64_t countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v16, (Swift::String_optional)0, (NSBundle)v15, v17, v94);

  NSString v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v12 setText:v18];

  [v12 setNumberOfLines:2];
  if (qword_100156390 != -1) {
    swift_once();
  }
  NSString v19 = String._bridgeToObjectiveC()();
  [v12 setAccessibilityIdentifier:v19];

  [v12 setIsAccessibilityElement:0];
  uint64_t v20 = *(void **)&v1[OBJC_IVAR____TtC16MusicRecognition13ListeningView_cancelButton];
  [v20 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v1 addSubview:v20];
  id v21 = [self configurationWithPointSize:5 weight:19.0];
  static UIButton.Configuration.filled()();
  id v22 = v8;
  if (qword_100156240 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  id v23 = v21;
  NSString v24 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v25 = [self systemImageNamed:v24 withConfiguration:v23];

  id v89 = v23;
  UIButton.Configuration.image.setter();
  if (qword_100156250 != -1) {
    swift_once();
  }
  id v26 = (id)qword_10015ABE8;
  UIButton.Configuration.baseBackgroundColor.setter();
  if (qword_100156248 != -1) {
    swift_once();
  }
  id v27 = (id)qword_10015ABE0;
  UIButton.Configuration.baseForegroundColor.setter();
  ((void (**)(char *, void, uint64_t))v88)[13](v87, enum case for UIButton.Configuration.CornerStyle.capsule(_:), v90);
  UIButton.Configuration.cornerStyle.setter();
  uint64_t v29 = v91;
  uint64_t v28 = v92;
  uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v91 + 16);
  uint64_t v90 = (uint64_t)v22;
  v30(v4, v22, v92);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v4, 0, 1, v28);
  UIButton.configuration.setter();
  [v20 setContentVerticalAlignment:3];
  [v20 setContentHorizontalAlignment:3];
  if (qword_100156398 != -1) {
    swift_once();
  }
  uint64_t v87 = v12;
  NSString v31 = String._bridgeToObjectiveC()();
  [v20 setAccessibilityIdentifier:v31];

  NSString v32 = String._bridgeToObjectiveC()();
  [v20 setAccessibilityLabel:v32];

  id v33 = [v86 mainBundle];
  v34._uint64_t countAndFlagsBits = 0xD000000000000033;
  v95._object = (void *)0xE000000000000000;
  v34._object = (void *)0x800000010011A090;
  v35._uint64_t countAndFlagsBits = 0;
  v35._object = (void *)0xE000000000000000;
  v95._uint64_t countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v34, (Swift::String_optional)0, (NSBundle)v33, v35, v95);

  NSString v36 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v20 setAccessibilityHint:v36];

  uint64_t v37 = *(void **)&v1[OBJC_IVAR____TtC16MusicRecognition13ListeningView_waveformView];
  [v37 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v1 addSubview:v37];
  id v85 = v20;
  if (qword_1001563D0 != -1) {
    swift_once();
  }
  NSString v38 = String._bridgeToObjectiveC()();
  [v37 setAccessibilityIdentifier:v38];

  uint64_t v88 = (void (**)(void, void, void))self;
  sub_1000060EC(&qword_100157030);
  uint64_t v39 = swift_allocObject();
  *(_OWORD *)(v39 + 16) = xmmword_100113F80;
  id v40 = [v9 heightAnchor];
  id v41 = [v1 heightAnchor];
  id v42 = [v40 constraintEqualToAnchor:v41 constant:-12.0];

  *(void *)(v39 + 32) = v42;
  id v43 = [v9 widthAnchor];
  id v44 = [v1 heightAnchor];
  id v45 = [v43 constraintEqualToAnchor:v44 constant:-12.0];

  *(void *)(v39 + 40) = v45;
  id v86 = v37;
  id v46 = [v9 leadingAnchor];
  id v47 = [v1 leadingAnchor];
  id v48 = [v46 constraintEqualToAnchor:v47 constant:7.0];

  *(void *)(v39 + 48) = v48;
  id v49 = [v9 centerYAnchor];
  id v50 = [v1 centerYAnchor];
  id v51 = [v49 constraintEqualToAnchor:v50 constant:-2.0];

  *(void *)(v39 + 56) = v51;
  id v52 = v87;
  id v53 = [v87 leadingAnchor];
  id v54 = [v9 trailingAnchor];
  id v55 = [v53 constraintEqualToAnchor:v54 constant:2.0];

  *(void *)(v39 + 64) = v55;
  id v56 = [v52 trailingAnchor];
  id v57 = v86;
  id v58 = [v86 leadingAnchor];
  id v59 = [v56 constraintEqualToAnchor:v58 constant:-7.0];

  *(void *)(v39 + 72) = v59;
  id v60 = v85;
  id v61 = [v85 trailingAnchor];
  id v62 = [v1 trailingAnchor];
  uint64_t v63 = v60;
  if (qword_100156258 != -1) {
    swift_once();
  }
  id v64 = [v61 constraintEqualToAnchor:v62 constant:*(double *)&qword_10015ABF0];

  *(void *)(v39 + 80) = v64;
  id v65 = [v63 centerYAnchor];
  id v66 = [v1 centerYAnchor];
  id v67 = [v65 constraintEqualToAnchor:v66];

  *(void *)(v39 + 88) = v67;
  id v68 = [v63 widthAnchor];
  id v69 = [v68 constraintEqualToConstant:51.0];

  *(void *)(v39 + 96) = v69;
  id v70 = [v63 heightAnchor];
  id v71 = [v70 constraintEqualToConstant:51.0];

  *(void *)(v39 + 104) = v71;
  id v72 = [v57 centerYAnchor];
  id v73 = [v1 centerYAnchor];
  id v74 = [v72 constraintEqualToAnchor:v73];

  *(void *)(v39 + 112) = v74;
  id v75 = [v57 widthAnchor];
  id v76 = [v75 constraintEqualToConstant:36.0];

  *(void *)(v39 + 120) = v76;
  id v77 = [v57 heightAnchor];
  id v78 = [v77 constraintEqualToConstant:30.0];

  *(void *)(v39 + 128) = v78;
  id v79 = [v57 trailingAnchor];
  id v80 = [v63 leadingAnchor];
  id v81 = [v79 constraintEqualToAnchor:v80 constant:-18.0];

  *(void *)(v39 + 136) = v81;
  uint64_t v93 = v39;
  specialized Array._endMutation()();
  sub_10002882C();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v88 activateConstraints:isa];

  return (*(uint64_t (**)(uint64_t, uint64_t))(v91 + 8))(v90, v92);
}

void sub_10009D6F0(void *a1)
{
  ObjectType = (objc_class *)swift_getObjectType();
  Swift::String v4 = self;
  uint64_t v5 = v1;
  id v6 = [v4 mainBundle];
  id v7 = objc_allocWithZone((Class)BSUICAPackageView);
  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = [v7 initWithPackageName:v8 inBundle:v6];

  if (v9)
  {
    *(void *)&v5[OBJC_IVAR____TtC16MusicRecognition13ListeningView_listeningView] = v9;
    uint64_t v10 = OBJC_IVAR____TtC16MusicRecognition13ListeningView_listeningLabel;
    *(void *)&v5[v10] = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
    uint64_t v11 = OBJC_IVAR____TtC16MusicRecognition13ListeningView_cancelButton;
    *(void *)&v5[v11] = [objc_allocWithZone((Class)UIButton) initWithFrame:0.0, 0.0, 0.0, 0.0];
    uint64_t v12 = OBJC_IVAR____TtC16MusicRecognition13ListeningView_waveformView;
    id v13 = (objc_class *)type metadata accessor for SpectralOutputWaveformView();
    id v14 = objc_allocWithZone(v13);
    *(void *)&v14[OBJC_IVAR____TtC16MusicRecognition26SpectralOutputWaveformView_barViews] = _swiftEmptyArrayStorage;
    *(void *)&v14[OBJC_IVAR____TtC16MusicRecognition26SpectralOutputWaveformView_waveformData] = _swiftEmptyArrayStorage;
    v14[OBJC_IVAR____TtC16MusicRecognition26SpectralOutputWaveformView_style] = 1;
    v19.receiver = v14;
    v19.super_class = v13;
    [super initWithFrame:0.0, 0.0, 0.0, 0.0];
    sub_1000275EC();

    *(void *)&v5[v12] = v15;
    *(void *)&v5[OBJC_IVAR____TtC16MusicRecognition13ListeningView_extendedListeningTextChangeTask] = 0;
    *(void *)&v5[OBJC_IVAR____TtC16MusicRecognition13ListeningView_listeningLabelVerticalAnchor] = 0;

    v18.receiver = v5;
    v18.super_class = ObjectType;
    [super initWithCoder:a1];
    if (v16)
    {
      id v17 = v16;
      sub_10009C908();
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_10009D92C()
{
  v12.receiver = v0;
  v12.super_class = (Class)swift_getObjectType();
  [super layoutSubviews];
  if (!*(void *)&v0[OBJC_IVAR____TtC16MusicRecognition13ListeningView_listeningLabelVerticalAnchor])
  {
    char v1 = sub_1000CAC20();
    uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC16MusicRecognition13ListeningView_listeningLabel];
    if (v1)
    {
      id v3 = [v2 _tightBoundingBoxLayoutGuide];
      id v4 = [v3 topAnchor];

      id v5 = [v0 SBUISA_systemApertureObstructedAreaLayoutGuide];
      id v6 = [v5 bottomAnchor];
    }
    else
    {
      id v4 = [v2 centerYAnchor];
      id v6 = [*(id *)&v0[OBJC_IVAR____TtC16MusicRecognition13ListeningView_listeningView] centerYAnchor];
    }
    id v7 = [v4 constraintEqualToAnchor:v6];

    NSString v8 = self;
    sub_1000060EC(&qword_100157030);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_100112420;
    *(void *)(v9 + 32) = v7;
    specialized Array._endMutation()();
    sub_10002882C();
    id v10 = v7;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v8 activateConstraints:isa];
  }
}

uint64_t sub_10009DB40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a4;
  uint64_t v5 = type metadata accessor for ContinuousClock();
  _OWORD v4[3] = v5;
  v4[4] = *(void *)(v5 - 8);
  _OWORD v4[5] = swift_task_alloc();
  v4[6] = swift_task_alloc();
  v4[7] = type metadata accessor for MainActor();
  v4[8] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[9] = v7;
  v4[10] = v6;
  return _swift_task_switch(sub_10009DC48, v7, v6);
}

uint64_t sub_10009DC48()
{
  ContinuousClock.init()();
  id v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_100158EF0 + dword_100158EF0);
  char v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v1;
  void *v1 = v0;
  v1[1] = sub_10009DD10;
  return v3(9000000000000000000, 0, 0, 0, 1);
}

uint64_t sub_10009DD10()
{
  uint64_t v2 = *(void **)v1;
  uint64_t v3 = *(void *)(*(void *)v1 + 48);
  uint64_t v4 = *(void *)(*(void *)v1 + 32);
  uint64_t v5 = *(void *)(*(void *)v1 + 24);
  v2[12] = v0;
  swift_task_dealloc();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v2[13] = v6;
  v2[14] = (v4 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v6(v3, v5);
  uint64_t v7 = v2[10];
  uint64_t v8 = v2[9];
  if (v0) {
    uint64_t v9 = sub_10009E02C;
  }
  else {
    uint64_t v9 = sub_10009DEBC;
  }
  return _swift_task_switch(v9, v8, v7);
}

uint64_t sub_10009DEBC()
{
  uint64_t countAndFlagsBits = v0[6]._countAndFlagsBits;
  static Task<>.checkCancellation()();
  if (countAndFlagsBits)
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    object = (uint64_t (*)(void))v0->_object;
    return object();
  }
  else
  {
    uint64_t v4 = self;
    v0[7]._object = v4;
    id v5 = [v4 mainBundle];
    v12._object = (void *)0xE000000000000000;
    v6._object = (void *)0x800000010011A0D0;
    v6._uint64_t countAndFlagsBits = 0xD000000000000029;
    v7._uint64_t countAndFlagsBits = 0;
    v7._object = (void *)0xE000000000000000;
    v12._uint64_t countAndFlagsBits = 0;
    Swift::String v8 = NSLocalizedString(_:tableName:bundle:value:comment:)(v6, (Swift::String_optional)0, (NSBundle)v5, v7, v12);

    v0[8] = v8;
    v0[9]._uint64_t countAndFlagsBits = static MainActor.shared.getter();
    uint64_t v10 = dispatch thunk of Actor.unownedExecutor.getter();
    v0[9]._object = (void *)v10;
    v0[10]._uint64_t countAndFlagsBits = v9;
    return _swift_task_switch(sub_10009E0A0, v10, v9);
  }
}

uint64_t sub_10009E02C()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10009E0A0()
{
  uint64_t v2 = v0[16];
  uint64_t v1 = v0[17];
  uint64_t v3 = v0[2];
  v0[21] = static MainActor.shared.getter();
  uint64_t v4 = (void *)swift_task_alloc();
  v0[22] = v4;
  v4[2] = v3;
  _OWORD v4[3] = v2;
  v4[4] = v1;
  id v5 = (void *)swift_task_alloc();
  v0[23] = v5;
  *id v5 = v0;
  v5[1] = sub_10009E1B8;
  return withCheckedContinuation<A>(isolation:function:_:)();
}

uint64_t sub_10009E1B8()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 160);
  uint64_t v3 = *(void *)(v1 + 152);
  return _swift_task_switch(sub_10009E318, v3, v2);
}

uint64_t sub_10009E318()
{
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 80);
  return _swift_task_switch(sub_10009E384, v1, v2);
}

uint64_t sub_10009E384()
{
  ContinuousClock.init()();
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_100158EF0 + dword_100158EF0);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 192) = v1;
  void *v1 = v0;
  v1[1] = sub_10009E44C;
  return v3(8000000000000000000, 0, 0, 0, 1);
}

uint64_t sub_10009E44C()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*v1 + 104);
  uint64_t v4 = *(void *)(*v1 + 40);
  uint64_t v5 = *(void *)(*v1 + 24);
  *(void *)(*v1 + 200) = v0;
  swift_task_dealloc();
  v3(v4, v5);
  uint64_t v6 = *(void *)(v2 + 80);
  uint64_t v7 = *(void *)(v2 + 72);
  if (v0) {
    Swift::String v8 = sub_10009E758;
  }
  else {
    Swift::String v8 = sub_10009E5F4;
  }
  return _swift_task_switch(v8, v7, v6);
}

uint64_t sub_10009E5F4()
{
  object = v0[12]._object;
  static Task<>.checkCancellation()();
  if (object)
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = (uint64_t (*)(void))v0->_object;
    return v2();
  }
  else
  {
    id v4 = [v0[7]._object mainBundle];
    v11._object = (void *)0xE000000000000000;
    v5._object = (void *)0x800000010011A130;
    v5._uint64_t countAndFlagsBits = 0xD000000000000029;
    v6._uint64_t countAndFlagsBits = 0;
    v6._object = (void *)0xE000000000000000;
    v11._uint64_t countAndFlagsBits = 0;
    Swift::String v7 = NSLocalizedString(_:tableName:bundle:value:comment:)(v5, (Swift::String_optional)0, (NSBundle)v4, v6, v11);

    v0[13] = v7;
    v0[14]._uint64_t countAndFlagsBits = static MainActor.shared.getter();
    uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
    v0[14]._object = (void *)v9;
    v0[15]._uint64_t countAndFlagsBits = v8;
    return _swift_task_switch(sub_10009E7CC, v9, v8);
  }
}

uint64_t sub_10009E758()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10009E7CC()
{
  uint64_t v2 = v0[26];
  uint64_t v1 = v0[27];
  uint64_t v3 = v0[2];
  v0[31] = static MainActor.shared.getter();
  id v4 = (void *)swift_task_alloc();
  v0[32] = v4;
  v4[2] = v3;
  _OWORD v4[3] = v2;
  v4[4] = v1;
  Swift::String v5 = (void *)swift_task_alloc();
  v0[33] = v5;
  *Swift::String v5 = v0;
  v5[1] = sub_10009E8E4;
  return withCheckedContinuation<A>(isolation:function:_:)();
}

uint64_t sub_10009E8E4()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 240);
  uint64_t v3 = *(void *)(v1 + 232);
  return _swift_task_switch(sub_10009EA44, v3, v2);
}

uint64_t sub_10009EA44()
{
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 80);
  return _swift_task_switch(sub_10009EAB0, v1, v2);
}

uint64_t sub_10009EAB0()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_10009EB28(uint64_t a1, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_1000060EC(&qword_10015AC68);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8);
  Swift::String v11 = self;
  uint64_t v18 = *(void *)&a2[OBJC_IVAR____TtC16MusicRecognition13ListeningView_listeningLabel];
  id v19 = v11;
  Swift::String v12 = (void *)swift_allocObject();
  _OWORD v12[2] = a2;
  v12[3] = a3;
  void v12[4] = a4;
  NSString v24 = sub_10009EF9C;
  id v25 = v12;
  Swift::String aBlock = _NSConcreteStackBlock;
  uint64_t v21 = 1107296256;
  id v22 = sub_1000D559C;
  id v23 = &unk_10014C220;
  id v13 = _Block_copy(&aBlock);
  id v14 = a2;
  swift_bridgeObjectRetain();
  swift_release();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8);
  unint64_t v15 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v16 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v16 + v15, (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  NSString v24 = sub_10009F0B0;
  id v25 = (void *)v16;
  Swift::String aBlock = _NSConcreteStackBlock;
  uint64_t v21 = 1107296256;
  id v22 = sub_1000B6658;
  id v23 = &unk_10014C270;
  id v17 = _Block_copy(&aBlock);
  swift_release();
  [v19 transitionWithView:v18 duration:5242880 options:v13 animations:v17 completion:0.35];
  _Block_release(v17);
  _Block_release(v13);
}

uint64_t type metadata accessor for ListeningView()
{
  return self;
}

uint64_t sub_10009EE5C()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10009EE9C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  void *v7 = v2;
  v7[1] = sub_100014D10;
  return sub_10009DB40(a1, v4, v5, v6);
}

void sub_10009EF50(uint64_t a1)
{
  sub_10009EB28(a1, *(char **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_10009EF5C()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_10009EF9C()
{
  uint64_t v1 = *(void **)(*(void *)(v0 + 16) + OBJC_IVAR____TtC16MusicRecognition13ListeningView_listeningLabel);
  NSString v2 = String._bridgeToObjectiveC()();
  [v1 setText:v2];
}

uint64_t sub_10009F004(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10009F014()
{
  return swift_release();
}

uint64_t sub_10009F01C()
{
  uint64_t v1 = sub_1000060EC(&qword_10015AC68);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10009F0B0()
{
  return CheckedContinuation.resume(returning:)();
}

uint64_t *sub_10009F124(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (*a2)
    {
      uint64_t v7 = a2[1];
      *uint64_t v4 = *a2;
      v4[1] = v7;
      swift_retain();
    }
    else
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
    }
    uint64_t v9 = a2[3];
    v4[2] = a2[2];
    _OWORD v4[3] = v9;
    uint64_t v10 = *(int *)(a3 + 24);
    Swift::String v11 = (uint64_t *)((char *)v4 + v10);
    Swift::String v12 = (uint64_t *)((char *)a2 + v10);
    swift_retain();
    swift_retain();
    sub_1000060EC(&qword_100156940);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = type metadata accessor for OpenURLAction();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    }
    else
    {
      *Swift::String v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v14 = *(int *)(a3 + 28);
    unint64_t v15 = (uint64_t *)((char *)v4 + v14);
    uint64_t v16 = (uint64_t *)((char *)a2 + v14);
    sub_1000060EC(&qword_100156938);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = type metadata accessor for ColorScheme();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    }
    else
    {
      *unint64_t v15 = *v16;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v4;
}

uint64_t sub_10009F30C(void *a1, uint64_t a2)
{
  if (*a1) {
    swift_release();
  }
  swift_release();
  swift_release();
  uint64_t v4 = (char *)a1 + *(int *)(a2 + 24);
  sub_1000060EC(&qword_100156940);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for OpenURLAction();
    (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = (char *)a1 + *(int *)(a2 + 28);
  sub_1000060EC(&qword_100156938);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for ColorScheme();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8);
    return v8(v6, v7);
  }
  else
  {
    return swift_release();
  }
}

void *sub_10009F454(void *a1, void *a2, uint64_t a3)
{
  if (*a2)
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (void *)((char *)a1 + v8);
  uint64_t v10 = (void *)((char *)a2 + v8);
  swift_retain();
  swift_retain();
  sub_1000060EC(&qword_100156940);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = type metadata accessor for OpenURLAction();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  else
  {
    *uint64_t v9 = *v10;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v12 = *(int *)(a3 + 28);
  uint64_t v13 = (void *)((char *)a1 + v12);
  uint64_t v14 = (void *)((char *)a2 + v12);
  sub_1000060EC(&qword_100156938);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = type metadata accessor for ColorScheme();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  }
  else
  {
    *uint64_t v13 = *v14;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t *sub_10009F5EC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  if (*a1)
  {
    if (v6)
    {
      uint64_t v7 = a2[1];
      *a1 = v6;
      a1[1] = v7;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v6)
  {
    uint64_t v8 = a2[1];
    *a1 = v6;
    a1[1] = v8;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_8:
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v9 = *(int *)(a3 + 24);
    uint64_t v10 = (uint64_t *)((char *)a1 + v9);
    uint64_t v11 = (uint64_t *)((char *)a2 + v9);
    sub_1000063D0((uint64_t)a1 + v9, &qword_100156940);
    sub_1000060EC(&qword_100156940);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = type metadata accessor for OpenURLAction();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *uint64_t v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v13 = *(int *)(a3 + 28);
    uint64_t v14 = (uint64_t *)((char *)a1 + v13);
    uint64_t v15 = (uint64_t *)((char *)a2 + v13);
    sub_1000063D0((uint64_t)a1 + v13, &qword_100156938);
    sub_1000060EC(&qword_100156938);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v16 = type metadata accessor for ColorScheme();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    }
    else
    {
      void *v14 = *v15;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_10009F7F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)a2)
  {
    uint64_t v6 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v6;
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_1000060EC(&qword_100156940);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = type metadata accessor for OpenURLAction();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
  }
  uint64_t v12 = *(int *)(a3 + 28);
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (const void *)(a2 + v12);
  uint64_t v15 = sub_1000060EC(&qword_100156938);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v16 = type metadata accessor for ColorScheme();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v16 - 8) + 32))(v13, v14, v16);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  return a1;
}

uint64_t *sub_10009F990(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  if (*a1)
  {
    if (v6)
    {
      uint64_t v7 = a2[1];
      *a1 = v6;
      a1[1] = v7;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v6)
  {
    uint64_t v8 = a2[1];
    *a1 = v6;
    a1[1] = v8;
    goto LABEL_8;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_8:
  a1[2] = a2[2];
  swift_release();
  a1[3] = a2[3];
  swift_release();
  if (a1 != a2)
  {
    uint64_t v9 = *(int *)(a3 + 24);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    sub_1000063D0((uint64_t)a1 + v9, &qword_100156940);
    uint64_t v12 = sub_1000060EC(&qword_100156940);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = type metadata accessor for OpenURLAction();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v10, v11, v13);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
    }
    uint64_t v14 = *(int *)(a3 + 28);
    uint64_t v15 = (char *)a1 + v14;
    uint64_t v16 = (char *)a2 + v14;
    sub_1000063D0((uint64_t)a1 + v14, &qword_100156938);
    uint64_t v17 = sub_1000060EC(&qword_100156938);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v18 = type metadata accessor for ColorScheme();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v15, v16, v18);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_10009FB98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10009FBAC);
}

uint64_t sub_10009FBAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1000060EC(&qword_100156A08);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 24);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_1000060EC(&qword_100157AF0);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 28);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_10009FCE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10009FCF4);
}

uint64_t sub_10009FCF4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 16) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_1000060EC(&qword_100156A08);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 24);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_1000060EC(&qword_100157AF0);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 28);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t type metadata accessor for PlayInAppleMusicView()
{
  uint64_t result = qword_10015AD20;
  if (!qword_10015AD20) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10009FE74()
{
  sub_10009FF88(319, (unint64_t *)&qword_100156A78, (void (*)(uint64_t))&type metadata accessor for OpenURLAction);
  if (v0 <= 0x3F)
  {
    sub_10009FF88(319, (unint64_t *)&qword_100157B60, (void (*)(uint64_t))&type metadata accessor for ColorScheme);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_10009FF88(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Environment.Content();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_10009FFDC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10009FFF8()
{
  uint64_t result = static Color.secondary.getter();
  qword_10015AC70 = result;
  return result;
}

void sub_1000A0018()
{
  qword_10015AC78 = 0x6B72616D78;
  unk_10015AC80 = 0xE500000000000000;
}

uint64_t sub_1000A0038()
{
  uint64_t v33 = sub_1000060EC(&qword_10015AD88);
  uint64_t v0 = __chkstk_darwin(v33);
  uint64_t v2 = (char *)&v26 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v0);
  unint64_t v4 = (char *)&v26 - v3;
  uint64_t v5 = sub_1000060EC(&qword_10015AD70);
  __chkstk_darwin(v5);
  NSString v31 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DynamicTypeSize();
  uint64_t v8 = *(void **)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v26 - v12;
  sub_10000FC3C(v5, qword_10015AC88);
  uint64_t v32 = sub_10000E808(v5, (uint64_t)qword_10015AC88);
  uint64_t v14 = (void (*)(char *, void, uint64_t))v8[13];
  v14(v13, enum case for DynamicTypeSize.xSmall(_:), v7);
  v14(v11, enum case for DynamicTypeSize.xxLarge(_:), v7);
  sub_1000A5364(&qword_10015AD90, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  uint64_t v15 = v13;
  uint64_t result = dispatch thunk of static Comparable.<= infix(_:_:)();
  if (result)
  {
    uint64_t v17 = v33;
    uint64_t v18 = &v4[*(int *)(v33 + 48)];
    uint64_t v29 = v5;
    uint64_t v30 = v13;
    id v19 = (void (*)(char *, char *, uint64_t))v8[2];
    v19(v4, v15, v7);
    v19(v18, v11, v7);
    uint64_t v20 = &v2[*(int *)(v17 + 48)];
    v19(v2, v4, v7);
    v19(v20, v18, v7);
    id v27 = v4;
    uint64_t v21 = (void (*)(char *, char *, uint64_t))v8[4];
    id v22 = v31;
    v21(v31, v2, v7);
    uint64_t v28 = v11;
    uint64_t v23 = (uint64_t)v22;
    NSString v24 = (void (*)(char *, uint64_t))v8[1];
    v24(v20, v7);
    id v25 = &v2[*(int *)(v33 + 48)];
    v21(v2, v27, v7);
    v21(v25, v18, v7);
    v21((char *)(v23 + *(int *)(v29 + 36)), v25, v7);
    v24(v2, v7);
    sub_1000A432C(v23, v32);
    v24(v28, v7);
    return ((uint64_t (*)(char *, uint64_t))v24)(v30, v7);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1000A0404()
{
  uint64_t result = static Font.body.getter();
  qword_10015ACA0 = result;
  return result;
}

uint64_t sub_1000A0424()
{
  uint64_t result = static Font.subheadline.getter();
  qword_10015ACA8 = result;
  return result;
}

uint64_t sub_1000A0444()
{
  uint64_t result = static Font.Weight.regular.getter();
  qword_10015ACB0 = v1;
  return result;
}

uint64_t sub_1000A0464()
{
  uint64_t result = static Font.title3.getter();
  qword_10015ACB8 = result;
  return result;
}

uint64_t sub_1000A0484()
{
  id v0 = [self systemFillColor];
  uint64_t result = Color.init(uiColor:)();
  qword_10015ACC0 = result;
  return result;
}

uint64_t sub_1000A04C4@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v147 = a2;
  uint64_t v3 = sub_1000060EC(&qword_10015AD98);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v148 = (uint64_t)&v121 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v146 = (char *)&v121 - v6;
  uint64_t v144 = type metadata accessor for MusicSubscriptionOffer.Options();
  uint64_t v143 = *(void *)(v144 - 8);
  __chkstk_darwin(v144);
  uint64_t v142 = (char *)&v121 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v133 = type metadata accessor for RoundedRectangle() - 8;
  __chkstk_darwin(v133);
  uint64_t v130 = (char *)&v121 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v131 = type metadata accessor for BorderedProminentButtonStyle();
  uint64_t v132 = *(void *)(v131 - 8);
  __chkstk_darwin(v131);
  uint64_t v125 = (char *)&v121 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for PlayInAppleMusicView();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  uint64_t v13 = __chkstk_darwin(v10 - 8);
  unint64_t v135 = (unint64_t)&v121 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v121 - v14;
  uint64_t v16 = sub_1000060EC(&qword_10015ADA0);
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  id v19 = (char *)&v121 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v122 = sub_1000060EC(&qword_10015ADA8);
  __chkstk_darwin(v122);
  uint64_t v21 = (char *)&v121 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v129 = sub_1000060EC(&qword_10015ADB0);
  uint64_t v124 = *(void *)(v129 - 8);
  __chkstk_darwin(v129);
  uint64_t v23 = (char *)&v121 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v123 = sub_1000060EC(&qword_10015ADB8);
  __chkstk_darwin(v123);
  id v25 = (char *)&v121 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v138 = sub_1000060EC(&qword_10015ADC0);
  __chkstk_darwin(v138);
  uint64_t v134 = (char *)&v121 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v140 = sub_1000060EC(&qword_10015ADC8);
  uint64_t v139 = *(void *)(v140 - 8);
  __chkstk_darwin(v140);
  uint64_t v151 = (char *)&v121 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v141 = sub_1000060EC(&qword_10015ADD0);
  uint64_t v150 = *(void *)(v141 - 8);
  uint64_t v28 = __chkstk_darwin(v141);
  uint64_t v145 = (char *)&v121 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v137 = (char *)&v121 - v31;
  __chkstk_darwin(v30);
  int v149 = (char *)&v121 - v32;
  sub_1000A479C(a1, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for PlayInAppleMusicView);
  uint64_t v33 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v34 = (v33 + 16) & ~v33;
  uint64_t v127 = v34 + v12;
  uint64_t v126 = v33 | 7;
  uint64_t v35 = swift_allocObject();
  uint64_t v128 = v34;
  sub_1000A4398((uint64_t)v15, v35 + v34);
  uint64_t v153 = a1;
  sub_1000060EC(&qword_10015ADD8);
  sub_1000A441C();
  Button.init(action:label:)();
  uint64_t v136 = a1;
  uint64_t v36 = *(void *)(a1 + 24);
  uint64_t v154 = *(void *)(a1 + 16);
  uint64_t v155 = v36;
  uint64_t v152 = sub_1000060EC(&qword_10015AE28);
  State.wrappedValue.getter();
  uint64_t v37 = *(void *)(v158 + OBJC_IVAR____TtC16MusicRecognition25PlayInAppleMusicViewModel_buttonBackgroundColor);
  swift_retain();
  swift_release();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v154 = v37;
  swift_retain();
  uint64_t v39 = AnyShapeStyle.init<A>(_:)();
  (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v21, v19, v16);
  swift_release();
  id v40 = (uint64_t *)&v21[*(int *)(v122 + 36)];
  *id v40 = KeyPath;
  v40[1] = v39;
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  id v41 = v125;
  BorderedProminentButtonStyle.init()();
  sub_1000A46D8();
  sub_1000A5364(&qword_10015AE40, (void (*)(uint64_t))&type metadata accessor for BorderedProminentButtonStyle);
  uint64_t v42 = v131;
  View.buttonStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v132 + 8))(v41, v42);
  uint64_t v43 = (uint64_t)v21;
  uint64_t v44 = v123;
  sub_1000063D0(v43, &qword_10015ADA8);
  id v45 = v130;
  id v46 = &v130[*(int *)(v133 + 28)];
  uint64_t v47 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v48 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v48 - 8) + 104))(v46, v47, v48);
  __asm { FMOV            V0.2D, #12.0 }
  *id v45 = _Q0;
  uint64_t v54 = (uint64_t)&v25[*(int *)(v44 + 36)];
  sub_1000A479C((uint64_t)v45, v54, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  *(_WORD *)(v54 + *(int *)(sub_1000060EC(&qword_100157ED8) + 36)) = 256;
  uint64_t v55 = v124;
  uint64_t v56 = v129;
  (*(void (**)(char *, char *, uint64_t))(v124 + 16))(v25, v23, v129);
  sub_1000A5304((uint64_t)v45, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  (*(void (**)(char *, uint64_t))(v55 + 8))(v23, v56);
  if (qword_1001562B8 != -1) {
    swift_once();
  }
  sub_1000A4804();
  uint64_t v57 = (uint64_t)v134;
  View.accessibilityIdentifier(_:)();
  sub_1000063D0((uint64_t)v25, &qword_10015ADB8);
  uint64_t v58 = v136;
  uint64_t v59 = *(void *)(v136 + 24);
  uint64_t v158 = *(void *)(v136 + 16);
  uint64_t v159 = v59;
  State.projectedValue.getter();
  uint64_t v60 = v154;
  uint64_t v61 = v155;
  uint64_t v62 = v156;
  swift_getKeyPath();
  uint64_t v154 = v60;
  uint64_t v155 = v61;
  uint64_t v156 = v62;
  uint64_t v131 = sub_1000060EC(&qword_10015AE50);
  Binding.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v63 = v135;
  sub_1000A479C(v58, v135, (uint64_t (*)(void))type metadata accessor for PlayInAppleMusicView);
  uint64_t v64 = swift_allocObject();
  sub_1000A4398(v63, v64 + v128);
  uint64_t v132 = sub_1000060EC(&qword_10015AE58);
  uint64_t v133 = sub_1000A49A4(&qword_10015AE60, &qword_10015ADC0, (void (*)(void))sub_1000A4804);
  unint64_t v135 = sub_1000A4A54();
  uint64_t v65 = v138;
  View.sheet<A>(isPresented:onDismiss:content:)();
  swift_release();
  swift_release();
  swift_release();
  sub_1000063D0(v57, &qword_10015ADC0);
  uint64_t v66 = *(void *)(v58 + 24);
  uint64_t v158 = *(void *)(v58 + 16);
  uint64_t v159 = v66;
  State.projectedValue.getter();
  uint64_t v67 = v154;
  uint64_t v68 = v155;
  uint64_t v69 = v156;
  swift_getKeyPath();
  uint64_t v154 = v67;
  uint64_t v155 = v68;
  uint64_t v156 = v69;
  Binding.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  LODWORD(v134) = v161;
  uint64_t v70 = *(void *)(v58 + 24);
  uint64_t v154 = *(void *)(v58 + 16);
  uint64_t v155 = v70;
  State.wrappedValue.getter();
  uint64_t v71 = v158;
  swift_getKeyPath();
  uint64_t v154 = v71;
  sub_1000A5364((unint64_t *)&qword_10015AE80, (void (*)(uint64_t))type metadata accessor for PlayInAppleMusicViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v72 = v71 + OBJC_IVAR____TtC16MusicRecognition25PlayInAppleMusicViewModel__subscriptionOfferOptions;
  swift_beginAccess();
  uint64_t v73 = v143;
  id v74 = v142;
  uint64_t v75 = v144;
  (*(void (**)(char *, uint64_t, uint64_t))(v143 + 16))(v142, v72, v144);
  swift_release();
  uint64_t v154 = v65;
  uint64_t v155 = v132;
  uint64_t v156 = v133;
  unint64_t v157 = v135;
  swift_getOpaqueTypeConformance2();
  id v76 = v137;
  uint64_t v77 = v140;
  id v78 = v151;
  View.musicSubscriptionOffer(isPresented:options:onLoadCompletion:)();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v73 + 8))(v74, v75);
  (*(void (**)(char *, uint64_t))(v139 + 8))(v78, v77);
  id v80 = v149;
  uint64_t v79 = v150;
  uint64_t v81 = v141;
  (*(void (**)(char *, char *, uint64_t))(v150 + 32))(v149, v76, v141);
  uint64_t v82 = *(void *)(v58 + 16);
  uint64_t v83 = *(void *)(v58 + 24);
  uint64_t v154 = v82;
  uint64_t v155 = v83;
  State.wrappedValue.getter();
  uint64_t v84 = *(void *)(v160 + OBJC_IVAR____TtC16MusicRecognition25PlayInAppleMusicViewModel_offers);
  swift_release();
  if (v84)
  {
    uint64_t v154 = v82;
    uint64_t v155 = v83;
    State.wrappedValue.getter();
    uint64_t v85 = sub_1000A5F50();
    uint64_t v87 = v86;
    swift_release();
    uint64_t v154 = v85;
    uint64_t v155 = v87;
    sub_10000E0F0();
    uint64_t v88 = Text.init<A>(_:)();
    uint64_t v90 = v89;
    char v92 = v91;
    if (qword_100156280 != -1) {
      swift_once();
    }
    uint64_t v93 = Text.font(_:)();
    uint64_t v95 = v94;
    char v97 = v96;
    sub_10000E904(v88, v90, v92 & 1);
    swift_bridgeObjectRelease();
    if (qword_100156288 != -1) {
      swift_once();
    }
    char v98 = v97 & 1;
    uint64_t v99 = Text.fontWeight(_:)();
    uint64_t v101 = v100;
    char v103 = v102;
    sub_10000E904(v93, v95, v98);
    swift_bridgeObjectRelease();
    if (qword_100156260 != -1) {
      swift_once();
    }
    uint64_t v154 = qword_10015AC70;
    swift_retain();
    uint64_t v104 = Text.foregroundStyle<A>(_:)();
    uint64_t v106 = v105;
    char v108 = v107;
    unint64_t v110 = v109;
    sub_10000E904(v99, v101, v103 & 1);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v154 = v104;
    uint64_t v155 = v106;
    LOBYTE(v156) = v108 & 1;
    unint64_t v157 = v110;
    if (qword_1001562E8 != -1) {
      swift_once();
    }
    uint64_t v111 = (uint64_t)v146;
    View.accessibilityIdentifier(_:)();
    sub_10000E904(v104, v106, v108 & 1);
    swift_bridgeObjectRelease();
    uint64_t v112 = sub_1000060EC(&qword_100158238);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v112 - 8) + 56))(v111, 0, 1, v112);
    id v80 = v149;
    uint64_t v79 = v150;
  }
  else
  {
    uint64_t v113 = sub_1000060EC(&qword_100158238);
    uint64_t v111 = (uint64_t)v146;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v113 - 8) + 56))(v146, 1, 1, v113);
  }
  uint64_t v114 = *(void (**)(char *, char *, uint64_t))(v79 + 16);
  uint64_t v115 = v145;
  v114(v145, v80, v81);
  uint64_t v116 = v148;
  sub_100009C94(v111, v148, &qword_10015AD98);
  uint64_t v117 = v147;
  v114(v147, v115, v81);
  uint64_t v118 = sub_1000060EC(&qword_10015AE88);
  sub_100009C94(v116, (uint64_t)&v117[*(int *)(v118 + 48)], &qword_10015AD98);
  sub_1000063D0(v111, &qword_10015AD98);
  uint64_t v119 = *(void (**)(char *, uint64_t))(v79 + 8);
  v119(v80, v81);
  sub_1000063D0(v116, &qword_10015AD98);
  return ((uint64_t (*)(char *, uint64_t))v119)(v115, v81);
}

uint64_t sub_1000A16EC(uint64_t a1)
{
  uint64_t v2 = sub_1000060EC((uint64_t *)&unk_100158FC0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)a1) {
    (*(void (**)(uint64_t))a1)(v3);
  }
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v6 = *(void *)(a1 + 24);
  uint64_t v15 = v7;
  uint64_t v16 = v6;
  sub_1000060EC(&qword_10015AE28);
  State.wrappedValue.getter();
  uint64_t v8 = *(void *)(v17 + OBJC_IVAR____TtC16MusicRecognition25PlayInAppleMusicViewModel_offers);
  swift_release();
  if (!v8) {
    return sub_1000A1A2C();
  }
  uint64_t v15 = v7;
  uint64_t v16 = v6;
  State.wrappedValue.getter();
  sub_1000A5B94((uint64_t)v5);
  uint64_t v9 = type metadata accessor for URL();
  int v10 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v5, 1, v9);
  sub_1000063D0((uint64_t)v5, (uint64_t *)&unk_100158FC0);
  swift_release();
  uint64_t v15 = v7;
  uint64_t v16 = v6;
  State.wrappedValue.getter();
  uint64_t v11 = v17;
  if (v10 == 1)
  {
    swift_getKeyPath();
    uint64_t v15 = v11;
    sub_1000A5364((unint64_t *)&qword_10015AE80, (void (*)(uint64_t))type metadata accessor for PlayInAppleMusicViewModel);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v15 = v11;
    swift_getKeyPath();
    ObservationRegistrar.willSet<A, B>(_:keyPath:)();
    swift_release();
    *(unsigned char *)(v11 + 16) = (*(unsigned char *)(v11 + 16) & 1) == 0;
    uint64_t v15 = v11;
    swift_getKeyPath();
    ObservationRegistrar.didSet<A, B>(_:keyPath:)();
  }
  else
  {
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    *(&v14 - 2) = v11;
    *((unsigned char *)&v14 - 8) = 1;
    uint64_t v15 = v11;
    sub_1000A5364((unint64_t *)&qword_10015AE80, (void (*)(uint64_t))type metadata accessor for PlayInAppleMusicViewModel);
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  }
  swift_release();
  return swift_release();
}

uint64_t sub_1000A1A2C()
{
  uint64_t v1 = v0;
  uint64_t v42 = type metadata accessor for OpenURLAction();
  uint64_t v2 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v41 = (uint64_t)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000060EC((uint64_t *)&unk_100158FC0);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v38 = (uint64_t)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v35 - v7;
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  id v40 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v35 - v13;
  uint64_t v39 = type metadata accessor for PlayInAppleMusicView();
  __chkstk_darwin(v39);
  uint64_t v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100156018 != -1) {
    swift_once();
  }
  uint64_t v17 = type metadata accessor for Logger();
  sub_10000E808(v17, (uint64_t)qword_100164B38);
  sub_1000A479C(v0, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for PlayInAppleMusicView);
  uint64_t v18 = Logger.logObject.getter();
  int v19 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v18, (os_log_type_t)v19))
  {
    int v36 = v19;
    uint64_t v37 = v2;
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    uint64_t v35 = v21;
    *(_DWORD *)uint64_t v20 = 136315138;
    uint64_t v22 = *((void *)v16 + 3);
    uint64_t v44 = *((void *)v16 + 2);
    uint64_t v45 = v22;
    uint64_t v46 = v21;
    sub_1000060EC(&qword_10015AE28);
    State.wrappedValue.getter();
    uint64_t v23 = v43;
    if (!*(void *)(v43 + OBJC_IVAR____TtC16MusicRecognition25PlayInAppleMusicViewModel_offers))
    {
      sub_100009C94(v43 + OBJC_IVAR____TtC16MusicRecognition25PlayInAppleMusicViewModel_appleMusicClassicalURL, (uint64_t)v8, (uint64_t *)&unk_100158FC0);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
      {
        (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v14, v8, v9);
        goto LABEL_8;
      }
      sub_1000063D0((uint64_t)v8, (uint64_t *)&unk_100158FC0);
    }
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v14, v23 + OBJC_IVAR____TtC16MusicRecognition25PlayInAppleMusicViewModel_appleMusicSongURL, v9);
LABEL_8:
    swift_release();
    sub_1000A5364((unint64_t *)&qword_100156B88, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v24 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v26 = v25;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v9);
    uint64_t v44 = sub_1000CB67C(v24, v26, &v46);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1000A5304((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for PlayInAppleMusicView);
    _os_log_impl((void *)&_mh_execute_header, v18, (os_log_type_t)v36, "Opening %s", v20, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v27 = v42;
    uint64_t v2 = v37;
    goto LABEL_10;
  }
  sub_1000A5304((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for PlayInAppleMusicView);

  uint64_t v27 = v42;
LABEL_10:
  uint64_t v28 = v41;
  sub_1000083D4(v41);
  uint64_t v29 = *(void *)(v1 + 24);
  uint64_t v44 = *(void *)(v1 + 16);
  uint64_t v45 = v29;
  sub_1000060EC(&qword_10015AE28);
  State.wrappedValue.getter();
  uint64_t v30 = v46;
  if (*(void *)(v46 + OBJC_IVAR____TtC16MusicRecognition25PlayInAppleMusicViewModel_offers))
  {
    uint64_t v31 = v40;
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v40, v46 + OBJC_IVAR____TtC16MusicRecognition25PlayInAppleMusicViewModel_appleMusicSongURL, v9);
  }
  else
  {
    uint64_t v32 = v38;
    sub_100009C94(v46 + OBJC_IVAR____TtC16MusicRecognition25PlayInAppleMusicViewModel_appleMusicClassicalURL, v38, (uint64_t *)&unk_100158FC0);
    int v33 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v32, 1, v9);
    uint64_t v31 = v40;
    if (v33 == 1)
    {
      sub_1000063D0(v32, (uint64_t *)&unk_100158FC0);
      (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v31, v30 + OBJC_IVAR____TtC16MusicRecognition25PlayInAppleMusicViewModel_appleMusicSongURL, v9);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v40, v32, v9);
    }
  }
  swift_release();
  OpenURLAction.callAsFunction(_:)();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v31, v9);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v28, v27);
}

uint64_t sub_1000A2088@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v35 = a2;
  uint64_t v34 = sub_1000060EC(&qword_10015AF38);
  uint64_t v3 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_1000060EC(&qword_10015AE00);
  __chkstk_darwin(v32);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_1000060EC(&qword_10015ADF0);
  __chkstk_darwin(v33);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v10 = static Axis.Set.horizontal.getter();
  uint64_t v31 = a1;
  sub_1000A2568(a1, (uint64_t)v53);
  *(_OWORD *)&v54[167] = v53[10];
  *(_OWORD *)&v54[183] = v53[11];
  *(_OWORD *)&v54[199] = v53[12];
  *(_OWORD *)&v54[215] = v53[13];
  *(_OWORD *)&v54[103] = v53[6];
  *(_OWORD *)&v54[119] = v53[7];
  *(_OWORD *)&v54[135] = v53[8];
  *(_OWORD *)&v54[151] = v53[9];
  *(_OWORD *)&v54[39] = v53[2];
  *(_OWORD *)&v54[55] = v53[3];
  *(_OWORD *)&v54[71] = v53[4];
  *(_OWORD *)&v54[87] = v53[5];
  *(_OWORD *)&v54[7] = v53[0];
  *(_OWORD *)&v54[23] = v53[1];
  if (qword_100156278 != -1) {
    swift_once();
  }
  uint64_t v11 = qword_10015ACA0;
  uint64_t KeyPath = swift_getKeyPath();
  *(_OWORD *)((char *)&v55[11] + 1) = *(_OWORD *)&v54[176];
  *(_OWORD *)((char *)&v55[12] + 1) = *(_OWORD *)&v54[192];
  *(_OWORD *)((char *)&v55[13] + 1) = *(_OWORD *)&v54[208];
  *(_OWORD *)((char *)&v55[7] + 1) = *(_OWORD *)&v54[112];
  *(_OWORD *)((char *)&v55[8] + 1) = *(_OWORD *)&v54[128];
  *(_OWORD *)((char *)&v55[9] + 1) = *(_OWORD *)&v54[144];
  *(_OWORD *)((char *)&v55[10] + 1) = *(_OWORD *)&v54[160];
  *(_OWORD *)((char *)&v55[3] + 1) = *(_OWORD *)&v54[48];
  *(_OWORD *)((char *)&v55[4] + 1) = *(_OWORD *)&v54[64];
  *(_OWORD *)((char *)&v55[5] + 1) = *(_OWORD *)&v54[80];
  *(_OWORD *)((char *)&v55[6] + 1) = *(_OWORD *)&v54[96];
  *(_OWORD *)((char *)v55 + 1) = *(_OWORD *)v54;
  LOBYTE(v55[0]) = v10;
  *(_OWORD *)((char *)&v55[1] + 1) = *(_OWORD *)&v54[16];
  *(_OWORD *)((char *)&v55[2] + 1) = *(_OWORD *)&v54[32];
  *(void *)&v55[14] = *(void *)&v54[223];
  *((void *)&v55[14] + 1) = KeyPath;
  uint64_t v56 = v11;
  long long v49 = v55[12];
  long long v50 = v55[13];
  long long v51 = v55[14];
  uint64_t v52 = v11;
  long long v45 = v55[8];
  long long v46 = v55[9];
  long long v47 = v55[10];
  long long v48 = v55[11];
  long long v41 = v55[4];
  long long v42 = v55[5];
  long long v43 = v55[6];
  long long v44 = v55[7];
  long long v37 = v55[0];
  long long v38 = v55[1];
  long long v39 = v55[2];
  long long v40 = v55[3];
  swift_retain();
  static Font.Weight.semibold.getter();
  sub_1000060EC(&qword_10015AE08);
  sub_1000A460C();
  View.fontWeight(_:)();
  sub_1000A5224((uint64_t)v55);
  uint64_t v13 = *(void *)(v31 + 24);
  *(void *)&long long v37 = *(void *)(v31 + 16);
  *((void *)&v37 + 1) = v13;
  sub_1000060EC(&qword_10015AE28);
  State.wrappedValue.getter();
  uint64_t v14 = *(void *)(v36 + OBJC_IVAR____TtC16MusicRecognition25PlayInAppleMusicViewModel_buttonTextColor);
  swift_retain();
  swift_release();
  uint64_t v15 = swift_getKeyPath();
  uint64_t v16 = v34;
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v7, v5, v34);
  uint64_t v17 = (uint64_t *)&v7[*(int *)(v32 + 36)];
  *uint64_t v17 = v15;
  v17[1] = v14;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v16);
  uint64_t v18 = swift_getKeyPath();
  sub_100009C94((uint64_t)v7, (uint64_t)v9, &qword_10015AE00);
  int v19 = &v9[*(int *)(v33 + 36)];
  *(void *)int v19 = v18;
  *((void *)v19 + 1) = 1;
  v19[16] = 0;
  sub_1000063D0((uint64_t)v7, &qword_10015AE00);
  LOBYTE(v18) = static Edge.Set.vertical.getter();
  EdgeInsets.init(_all:)();
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v28 = v35;
  sub_100009C94((uint64_t)v9, v35, &qword_10015ADF0);
  uint64_t v29 = v28 + *(int *)(sub_1000060EC(&qword_10015ADD8) + 36);
  *(unsigned char *)uint64_t v29 = v18;
  *(void *)(v29 + 8) = v21;
  *(void *)(v29 + 16) = v23;
  *(void *)(v29 + 24) = v25;
  *(void *)(v29 + 32) = v27;
  *(unsigned char *)(v29 + 40) = 0;
  return sub_1000063D0((uint64_t)v9, &qword_10015ADF0);
}

uint64_t sub_1000A2568@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  sub_1000060EC(&qword_10015AE28);
  State.wrappedValue.getter();
  LocalizedStringKey.init(stringLiteral:)();
  swift_release();
  uint64_t v5 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v7 = v6;
  char v9 = v8;
  uint64_t v11 = v10;
  char v34 = static Edge.Set.horizontal.getter();
  EdgeInsets.init(_all:)();
  uint64_t v13 = v12;
  uint64_t v15 = v14;
  uint64_t v17 = v16;
  uint64_t v19 = v18;
  *(void *)long long v37 = v4;
  *(void *)&v37[8] = v3;
  State.wrappedValue.getter();
  uint64_t v35 = v11;
  LocalizedStringKey.init(stringLiteral:)();
  swift_release();
  char v20 = v9 & 1;
  uint64_t v21 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  LOBYTE(v3) = v26 & 1;
  uint64_t v27 = static Alignment.center.getter();
  sub_100043060(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)&v43, 0.0, 1, 0.0, 1, v27, v28, v21, v23, v3, v25);
  sub_10000E904(v21, v23, v3);
  swift_bridgeObjectRelease();
  v42[6] = v49;
  v42[7] = v50;
  _OWORD v42[8] = v51;
  v42[2] = v45;
  v42[3] = v46;
  v42[4] = v47;
  v42[5] = v48;
  v42[0] = v43;
  v42[1] = v44;
  v36[6] = v49;
  v36[7] = v50;
  v36[8] = v51;
  v36[2] = v45;
  v36[3] = v46;
  v36[4] = v47;
  void v36[5] = v48;
  v36[0] = v43;
  v36[1] = v44;
  *(_OWORD *)&v37[87] = v48;
  *(_OWORD *)&v37[103] = v49;
  *(_OWORD *)&v37[119] = v50;
  *(_OWORD *)&v37[135] = v51;
  *(_OWORD *)&v37[23] = v44;
  *(_OWORD *)&v37[39] = v45;
  *(_OWORD *)&v37[55] = v46;
  *(_OWORD *)&v37[71] = v47;
  char v41 = v20;
  char v38 = 0;
  *(_OWORD *)&v37[7] = v43;
  *(_DWORD *)(a2 + 17) = *(_DWORD *)v40;
  *(_DWORD *)(a2 + 20) = *(_DWORD *)&v40[3];
  *(_DWORD *)(a2 + 33) = *(_DWORD *)v39;
  *(_DWORD *)(a2 + 36) = *(_DWORD *)&v39[3];
  *(void *)a2 = v5;
  *(void *)(a2 + 8) = v7;
  *(unsigned char *)(a2 + 16) = v20;
  *(void *)(a2 + 24) = v35;
  *(unsigned char *)(a2 + 32) = v34;
  *(void *)(a2 + 40) = v13;
  *(void *)(a2 + 48) = v15;
  *(void *)(a2 + 56) = v17;
  *(void *)(a2 + 64) = v19;
  *(unsigned char *)(a2 + 72) = 0;
  long long v29 = *(_OWORD *)&v37[112];
  *(_OWORD *)(a2 + 169) = *(_OWORD *)&v37[96];
  *(_OWORD *)(a2 + 185) = v29;
  *(_OWORD *)(a2 + 201) = *(_OWORD *)&v37[128];
  *(void *)(a2 + 216) = *(void *)&v37[143];
  long long v30 = *(_OWORD *)&v37[48];
  *(_OWORD *)(a2 + 105) = *(_OWORD *)&v37[32];
  *(_OWORD *)(a2 + 121) = v30;
  long long v31 = *(_OWORD *)&v37[80];
  *(_OWORD *)(a2 + 137) = *(_OWORD *)&v37[64];
  *(_OWORD *)(a2 + 153) = v31;
  long long v32 = *(_OWORD *)&v37[16];
  *(_OWORD *)(a2 + 73) = *(_OWORD *)v37;
  *(_OWORD *)(a2 + 89) = v32;
  sub_10002FC24(v5, v7, v20);
  swift_bridgeObjectRetain();
  sub_10002FBE4((uint64_t)v36);
  sub_1000A52C4((uint64_t)v42);
  sub_10000E904(v5, v7, v20);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000A2A18@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1000A5364((unint64_t *)&qword_10015AE80, (void (*)(uint64_t))type metadata accessor for PlayInAppleMusicViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + 17);
  return result;
}

uint64_t sub_1000A2AC0()
{
  return swift_release();
}

uint64_t sub_1000A2B90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000060EC((uint64_t *)&unk_100158FC0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for URL();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(a1 + 24);
  v16[1] = *(void *)(a1 + 16);
  _OWORD v16[2] = v11;
  sub_1000060EC(&qword_10015AE28);
  State.wrappedValue.getter();
  sub_1000A5B94((uint64_t)v6);
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1000063D0((uint64_t)v6, (uint64_t *)&unk_100158FC0);
    uint64_t v12 = sub_1000060EC(&qword_10015AE78);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(a2, 1, 1, v12);
  }
  else
  {
    uint64_t v14 = (*(uint64_t (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    __chkstk_darwin(v14);
    v16[-2] = v10;
    v16[-1] = a1;
    sub_1000060EC(&qword_10015AE90);
    sub_1000A4B04();
    NavigationView.init(content:)();
    uint64_t v15 = sub_1000060EC(&qword_10015AE78);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a2, 0, 1, v15);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
}

uint64_t sub_1000A2E2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v27 = a2;
  uint64_t v30 = a3;
  uint64_t v4 = type metadata accessor for NavigationBarItem.TitleDisplayMode();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ShazamCampaignWebView();
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000060EC(&qword_10015AEA0);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1000060EC(&qword_10015AEC0);
  uint64_t v28 = *(void *)(v15 - 8);
  uint64_t v29 = v15;
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for URL();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v10, a1, v18);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for NavigationBarItem.TitleDisplayMode.inline(_:), v4);
  uint64_t v19 = sub_1000A5364(&qword_100156C38, (void (*)(uint64_t))type metadata accessor for ShazamCampaignWebView);
  View.navigationBarTitleDisplayMode(_:)();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1000A5304((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ShazamCampaignWebView);
  uint64_t v31 = v27;
  uint64_t v20 = sub_1000060EC(&qword_10015AEA8);
  uint64_t v32 = v8;
  uint64_t v33 = v19;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v22 = sub_100006224(&qword_10015AEB0);
  uint64_t v23 = sub_100006480(&qword_10015AEB8, &qword_10015AEB0);
  uint64_t v32 = v22;
  uint64_t v33 = v23;
  uint64_t v24 = swift_getOpaqueTypeConformance2();
  View.toolbar<A>(content:)();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  if (qword_1001562E0 != -1) {
    swift_once();
  }
  uint64_t v32 = v11;
  uint64_t v33 = v20;
  uint64_t v34 = OpaqueTypeConformance2;
  uint64_t v35 = v24;
  swift_getOpaqueTypeConformance2();
  uint64_t v25 = v29;
  View.accessibilityIdentifier(_:)();
  return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v17, v25);
}

uint64_t sub_1000A32A0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ToolbarItemPlacement();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = sub_1000060EC(&qword_10015AEB0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  static ToolbarItemPlacement.topBarTrailing.getter();
  uint64_t v9 = a1;
  sub_1000060EC(&qword_10015AEC8);
  sub_1000A49A4(&qword_10015AED0, &qword_10015AEC8, (void (*)(void))sub_1000A4CD8);
  ToolbarItem<>.init(placement:content:)();
  sub_100006480(&qword_10015AEB8, &qword_10015AEB0);
  static ToolbarContentBuilder.buildBlock<A>(_:)();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1000A3468@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v29 = a2;
  uint64_t v3 = type metadata accessor for PlainButtonStyle();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v27 = v3;
  uint64_t v28 = v4;
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for PlayInAppleMusicView();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7 - 8);
  uint64_t v24 = sub_1000060EC(&qword_10015AEE8);
  uint64_t v26 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_1000060EC(&qword_10015AF00);
  uint64_t v12 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1000060EC(&qword_10015AEE0);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000A479C(a1, (uint64_t)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for PlayInAppleMusicView);
  unint64_t v18 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v19 = swift_allocObject();
  sub_1000A4398((uint64_t)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v19 + v18);
  sub_1000060EC(&qword_10015AF08);
  sub_1000A5058();
  Button.init(action:label:)();
  PlainButtonStyle.init()();
  sub_100006480(&qword_10015AEF0, &qword_10015AEE8);
  sub_1000A5364(&qword_10015AEF8, (void (*)(uint64_t))&type metadata accessor for PlainButtonStyle);
  uint64_t v20 = v24;
  uint64_t v21 = v27;
  View.buttonStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v6, v21);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v20);
  uint64_t v22 = v25;
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v17, v14, v25);
  *(_WORD *)&v17[*(int *)(v15 + 36)] = 256;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v22);
  sub_1000A4CD8();
  View.accessibilityIdentifier(_:)();
  return sub_1000063D0((uint64_t)v17, &qword_10015AEE0);
}

uint64_t sub_1000A38D0()
{
  return swift_release();
}

uint64_t sub_1000A39C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v36 = a1;
  uint64_t v1 = type metadata accessor for SymbolVariants();
  uint64_t v32 = *(void *)(v1 - 8);
  uint64_t v33 = v1;
  uint64_t v2 = __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v32 - v5;
  uint64_t v7 = sub_1000060EC(&qword_10015AF28);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000060EC(&qword_10015AF18);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000060EC(&qword_10015AF30);
  uint64_t v34 = *(void *)(v14 - 8);
  uint64_t v35 = v14;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100156268 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  uint64_t v37 = Image.init(systemName:)();
  static Font.Weight.bold.getter();
  View.fontWeight(_:)();
  swift_release();
  if (qword_100156290 != -1) {
    swift_once();
  }
  uint64_t v17 = qword_10015ACB8;
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v13, v10, v7);
  uint64_t v19 = (uint64_t *)&v13[*(int *)(v11 + 36)];
  uint64_t *v19 = KeyPath;
  v19[1] = v17;
  uint64_t v20 = *(void (**)(char *, uint64_t))(v8 + 8);
  swift_retain();
  v20(v10, v7);
  static SymbolVariants.circle.getter();
  SymbolVariants.fill.getter();
  uint64_t v21 = v33;
  uint64_t v22 = *(void (**)(char *, uint64_t))(v32 + 8);
  v22(v6, v33);
  sub_1000A512C();
  View.symbolVariant(_:)();
  v22(v4, v21);
  sub_1000063D0((uint64_t)v13, &qword_10015AF18);
  id v23 = [self whiteColor];
  uint64_t v24 = Color.init(uiColor:)();
  if (qword_100156298 != -1) {
    swift_once();
  }
  uint64_t v25 = qword_10015ACC0;
  uint64_t v27 = v34;
  uint64_t v26 = v35;
  uint64_t v28 = v36;
  (*(void (**)(uint64_t, char *, uint64_t))(v34 + 16))(v36, v16, v35);
  uint64_t v29 = (uint64_t *)(v28 + *(int *)(sub_1000060EC(&qword_10015AF08) + 36));
  uint64_t *v29 = v24;
  v29[1] = v25;
  uint64_t v30 = *(uint64_t (**)(char *, uint64_t))(v27 + 8);
  swift_retain();
  return v30(v16, v26);
}

uint64_t sub_1000A3E30@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1000A5364((unint64_t *)&qword_10015AE80, (void (*)(uint64_t))type metadata accessor for PlayInAppleMusicViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + 16);
  return result;
}

uint64_t sub_1000A3ED8()
{
  return swift_release();
}

void sub_1000A3FA8(uint64_t a1)
{
  if (a1)
  {
    swift_errorRetain();
    if (qword_100156018 != -1) {
      swift_once();
    }
    uint64_t v1 = type metadata accessor for Logger();
    sub_10000E808(v1, (uint64_t)qword_100164B38);
    swift_errorRetain();
    swift_errorRetain();
    oslog = Logger.logObject.getter();
    os_log_type_t v2 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v2))
    {
      uint64_t v3 = (uint8_t *)swift_slowAlloc();
      uint64_t v4 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v3 = 138412290;
      swift_errorRetain();
      uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v4 = v6;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, oslog, v2, "Error presenting music subscription offer: %@", v3, 0xCu);
      sub_1000060EC((uint64_t *)&unk_1001570F0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
  }
}

uint64_t sub_1000A419C()
{
  uint64_t v1 = sub_1000060EC(&qword_10015AD60);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v3 = static HorizontalAlignment.center.getter();
  *((void *)v3 + 1) = 0x4018000000000000;
  v3[16] = 0;
  uint64_t v4 = sub_1000060EC(&qword_10015AD68);
  sub_1000A04C4(v0, &v3[*(int *)(v4 + 44)]);
  if (qword_100156270 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1000060EC(&qword_10015AD70);
  sub_10000E808(v5, (uint64_t)qword_10015AC88);
  sub_100006480(&qword_10015AD78, &qword_10015AD60);
  sub_100006480(&qword_10015AD80, &qword_10015AD70);
  View.dynamicTypeSize<A>(_:)();
  return sub_1000063D0((uint64_t)v3, &qword_10015AD60);
}

uint64_t sub_1000A432C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000060EC(&qword_10015AD70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000A4398(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PlayInAppleMusicView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000A43FC()
{
  return sub_1000A4FE4(sub_1000A16EC);
}

uint64_t sub_1000A4414@<X0>(uint64_t a1@<X8>)
{
  return sub_1000A2088(*(void *)(v1 + 16), a1);
}

unint64_t sub_1000A441C()
{
  unint64_t result = qword_10015ADE0;
  if (!qword_10015ADE0)
  {
    sub_100006224(&qword_10015ADD8);
    sub_1000A4498();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015ADE0);
  }
  return result;
}

unint64_t sub_1000A4498()
{
  unint64_t result = qword_10015ADE8;
  if (!qword_10015ADE8)
  {
    sub_100006224(&qword_10015ADF0);
    sub_1000A4538();
    sub_100006480(&qword_100157210, &qword_100157218);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015ADE8);
  }
  return result;
}

unint64_t sub_1000A4538()
{
  unint64_t result = qword_10015ADF8;
  if (!qword_10015ADF8)
  {
    sub_100006224(&qword_10015AE00);
    sub_100006224(&qword_10015AE08);
    sub_1000A460C();
    swift_getOpaqueTypeConformance2();
    sub_100006480((unint64_t *)&qword_100157240, &qword_100157248);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015ADF8);
  }
  return result;
}

unint64_t sub_1000A460C()
{
  unint64_t result = qword_10015AE10;
  if (!qword_10015AE10)
  {
    sub_100006224(&qword_10015AE08);
    sub_100006480(&qword_10015AE18, &qword_10015AE20);
    sub_100006480(&qword_100156788, &qword_100156790);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015AE10);
  }
  return result;
}

unint64_t sub_1000A46D8()
{
  unint64_t result = qword_10015AE30;
  if (!qword_10015AE30)
  {
    sub_100006224(&qword_10015ADA8);
    sub_100006480(&qword_10015AE38, &qword_10015ADA0);
    sub_100006480(&qword_100157BF8, &qword_100157C00);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015AE30);
  }
  return result;
}

uint64_t sub_1000A479C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_1000A4804()
{
  unint64_t result = qword_10015AE48;
  if (!qword_10015AE48)
  {
    sub_100006224(&qword_10015ADB8);
    sub_100006224(&qword_10015ADA8);
    type metadata accessor for BorderedProminentButtonStyle();
    sub_1000A46D8();
    sub_1000A5364(&qword_10015AE40, (void (*)(uint64_t))&type metadata accessor for BorderedProminentButtonStyle);
    swift_getOpaqueTypeConformance2();
    sub_100006480(&qword_10015A2C8, &qword_100157ED8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015AE48);
  }
  return result;
}

uint64_t sub_1000A4934@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for PlayInAppleMusicView() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_1000A2B90(v4, a1);
}

uint64_t sub_1000A49A4(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100006224(a2);
    a3();
    sub_1000A5364((unint64_t *)&qword_1001567D8, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000A4A54()
{
  unint64_t result = qword_10015AE68;
  if (!qword_10015AE68)
  {
    sub_100006224(&qword_10015AE58);
    sub_100006480(&qword_10015AE70, &qword_10015AE78);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015AE68);
  }
  return result;
}

uint64_t sub_1000A4AFC@<X0>(uint64_t a1@<X8>)
{
  return sub_1000A2E2C(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

unint64_t sub_1000A4B04()
{
  unint64_t result = qword_10015AE98;
  if (!qword_10015AE98)
  {
    sub_100006224(&qword_10015AE90);
    sub_100006224(&qword_10015AEA0);
    sub_100006224(&qword_10015AEA8);
    type metadata accessor for ShazamCampaignWebView();
    sub_1000A5364(&qword_100156C38, (void (*)(uint64_t))type metadata accessor for ShazamCampaignWebView);
    swift_getOpaqueTypeConformance2();
    sub_100006224(&qword_10015AEB0);
    sub_100006480(&qword_10015AEB8, &qword_10015AEB0);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_1000A5364((unint64_t *)&qword_1001567D8, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015AE98);
  }
  return result;
}

uint64_t sub_1000A4CC8()
{
  return sub_1000A32A0(*(void *)(v0 + 16));
}

uint64_t sub_1000A4CD0@<X0>(uint64_t a1@<X8>)
{
  return sub_1000A3468(*(void *)(v1 + 16), a1);
}

unint64_t sub_1000A4CD8()
{
  unint64_t result = qword_10015AED8;
  if (!qword_10015AED8)
  {
    sub_100006224(&qword_10015AEE0);
    sub_100006224(&qword_10015AEE8);
    type metadata accessor for PlainButtonStyle();
    sub_100006480(&qword_10015AEF0, &qword_10015AEE8);
    sub_1000A5364(&qword_10015AEF8, (void (*)(uint64_t))&type metadata accessor for PlainButtonStyle);
    swift_getOpaqueTypeConformance2();
    sub_100006480(&qword_100158BE0, &qword_100158BE8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015AED8);
  }
  return result;
}

uint64_t sub_1000A4E24()
{
  uint64_t v1 = type metadata accessor for PlayInAppleMusicView();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v5 = v0 + v3;
  if (*(void *)(v0 + v3)) {
    swift_release();
  }
  swift_release();
  swift_release();
  uint64_t v6 = v5 + *(int *)(v1 + 24);
  sub_1000060EC(&qword_100156940);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for OpenURLAction();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  uint64_t v8 = v5 + *(int *)(v1 + 28);
  sub_1000060EC(&qword_100156938);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = type metadata accessor for ColorScheme();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  else
  {
    swift_release();
  }

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_1000A4FCC()
{
  return sub_1000A4FE4((uint64_t (*)(uint64_t))sub_1000A38D0);
}

uint64_t sub_1000A4FE4(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for PlayInAppleMusicView() - 8);
  uint64_t v3 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return a1(v3);
}

unint64_t sub_1000A5058()
{
  unint64_t result = qword_10015AF10;
  if (!qword_10015AF10)
  {
    sub_100006224(&qword_10015AF08);
    sub_100006224(&qword_10015AF18);
    sub_1000A512C();
    swift_getOpaqueTypeConformance2();
    sub_100006480(&qword_100157BE8, &qword_100157BF0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015AF10);
  }
  return result;
}

unint64_t sub_1000A512C()
{
  unint64_t result = qword_10015AF20;
  if (!qword_10015AF20)
  {
    sub_100006224(&qword_10015AF18);
    swift_getOpaqueTypeConformance2();
    sub_100006480(&qword_100156788, &qword_100156790);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015AF20);
  }
  return result;
}

uint64_t sub_1000A5204()
{
  return sub_1000A61B4(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_1000A5224(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 88);
  uint64_t v3 = *(void *)(a1 + 96);
  char v4 = *(unsigned char *)(a1 + 104);
  sub_10000E904(*(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
  swift_bridgeObjectRelease();
  sub_10000E904(v2, v3, v4);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return a1;
}

uint64_t sub_1000A52C4(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000A5304(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1000A5364(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000A53AC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000A5474()
{
  return sub_1000A5204();
}

void sub_1000A548C()
{
  *(_WORD *)&algn_100164C18[6] = -4864;
}

void sub_1000A54BC()
{
  *(_WORD *)&algn_100164C28[6] = -4864;
}

void sub_1000A54EC()
{
  *(_WORD *)&algn_100164C38[6] = -4864;
}

void sub_1000A551C()
{
  *(_WORD *)&algn_100164C48[6] = -4864;
}

void sub_1000A554C()
{
  qword_100164C50 = 0x694C206572616853;
  *(void *)algn_100164C58 = 0xEA00000000006B6ELL;
}

void sub_1000A5574()
{
  *(_WORD *)&algn_100164C68[6] = -4864;
}

void sub_1000A55A4()
{
  qword_100164C70 = 0x6D75626C41;
  *(void *)algn_100164C78 = 0xE500000000000000;
}

void sub_1000A55C4()
{
  qword_100164C80 = 0x20676E697373694DLL;
  *(void *)algn_100164C88 = 0xEF6B726F77747261;
}

void sub_1000A55F4()
{
  algn_100164C98[7] = -18;
}

void sub_1000A5624()
{
  algn_100164CA8[7] = -18;
}

void sub_1000A5654()
{
  qword_100164CB0 = 0x676E6964616F4CLL;
  *(void *)algn_100164CB8 = 0xE700000000000000;
}

void sub_1000A5678()
{
  qword_100164CC0 = 2036427856;
  *(void *)algn_100164CC8 = 0xE400000000000000;
}

void sub_1000A5694()
{
  qword_100164CD0 = 0x6573756150;
  *(void *)algn_100164CD8 = 0xE500000000000000;
}

void sub_1000A56B4()
{
  qword_100164CE0 = 0x747542206B636142;
  *(void *)algn_100164CE8 = 0xEB000000006E6F74;
}

void sub_1000A56E0()
{
  *(_WORD *)&algn_100164CF8[6] = -4864;
}

void sub_1000A5710()
{
  qword_100164D00 = 0x616853206E65704FLL;
  *(void *)algn_100164D08 = 0xEB000000006D617ALL;
}

void sub_1000A573C()
{
  qword_100164D10 = 0x7473696C79616C50;
  *(void *)algn_100164D18 = 0xE800000000000000;
}

void sub_1000A5760()
{
  qword_100164D20 = 0x532065766F6D6552;
  *(void *)algn_100164D28 = 0xEB00000000676E6FLL;
}

void sub_1000A578C()
{
  qword_100164D30 = 0x7241206D75626C41;
  *(void *)algn_100164D38 = 0xE900000000000074;
}

void sub_1000A57B4()
{
  qword_100164D40 = 0x6C6F686563616C50;
  *(void *)algn_100164D48 = 0xEB00000000726564;
}

void sub_1000A57E0()
{
  qword_100164D50 = 0x614C20656C746954;
  *(void *)algn_100164D58 = 0xEB000000006C6562;
}

void sub_1000A580C()
{
  algn_100164D68[5] = 0;
  *(_WORD *)&algn_100164D68[6] = -5120;
}

void sub_1000A5838()
{
  qword_100164D70 = 0x62614C2065746144;
  *(void *)algn_100164D78 = 0xEA00000000006C65;
}

void sub_1000A5860()
{
  *(_WORD *)&algn_100164D88[6] = -4864;
}

void sub_1000A5890()
{
  algn_100164D98[7] = -18;
}

void sub_1000A58C0()
{
  qword_100164DA0 = 0x6E69646E65637341;
  *(void *)algn_100164DA8 = 0xE900000000000067;
}

void sub_1000A58E8()
{
  qword_100164DB0 = 0x69646E6563736544;
  *(void *)algn_100164DB8 = 0xEA0000000000676ELL;
}

void sub_1000A5910()
{
  algn_100164DC8[5] = 0;
  *(_WORD *)&algn_100164DC8[6] = -5120;
}

void sub_1000A593C()
{
  algn_100164DD8[5] = 0;
  *(_WORD *)&algn_100164DD8[6] = -5120;
}

void sub_1000A5968()
{
  qword_100164DE0 = 0x6E6F74747542;
  *(void *)algn_100164DE8 = 0xE600000000000000;
}

void sub_1000A5988()
{
  qword_100164DF0 = 0x6E696E657473694CLL;
  *(void *)algn_100164DF8 = 0xEF656C7469742067;
}

void sub_1000A59B8()
{
  *(_WORD *)&algn_100164E08[6] = -4864;
}

void sub_1000A59E8()
{
  qword_100164E10 = 0x6E20747369747241;
  *(void *)algn_100164E18 = 0xEB00000000656D61;
}

void sub_1000A5A14()
{
  qword_100164E20 = 0x6D616E20676E6F53;
  *(void *)algn_100164E28 = 0xE900000000000065;
}

void sub_1000A5A3C()
{
  *(_WORD *)&algn_100164E38[6] = -4864;
}

void sub_1000A5A6C()
{
  algn_100164E48[7] = -18;
}

void sub_1000A5A9C()
{
  algn_100164E58[5] = 0;
  *(_WORD *)&algn_100164E58[6] = -5120;
}

void sub_1000A5AC8()
{
  qword_100164E60 = 0x4C206D617A616853;
  *(void *)algn_100164E68 = 0xEB000000006F676FLL;
}

void sub_1000A5AF4()
{
  qword_100164E70 = 0x6C61727463657053;
  *(void *)algn_100164E78 = 0xEF74757074754F20;
}

uint64_t sub_1000A5B24()
{
  swift_getKeyPath();
  sub_1000A78EC();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t sub_1000A5B94@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1000060EC((uint64_t *)&unk_100158FC0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void **)(v1 + OBJC_IVAR____TtC16MusicRecognition25PlayInAppleMusicViewModel_offers);
  if (!v6) {
    goto LABEL_8;
  }
  swift_getKeyPath();
  v16[1] = v1;
  sub_1000A78EC();
  id v7 = v6;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (!*(void *)(v1 + OBJC_IVAR____TtC16MusicRecognition25PlayInAppleMusicViewModel__token + 8)
    || !*(void *)(v1 + 32)
    || !*(void *)(v1 + OBJC_IVAR____TtC16MusicRecognition25PlayInAppleMusicViewModel_sourceBundleIdentifier + 8))
  {

LABEL_8:
    uint64_t v13 = type metadata accessor for URL();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a1, 1, 1, v13);
  }
  swift_bridgeObjectRetain();
  NSString v8 = String._bridgeToObjectiveC()();
  NSString v9 = String._bridgeToObjectiveC()();
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v11 = [v7 campaignURLForTrackID:v8 bundleID:v9 token:v10];

  if (v11)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v12 = type metadata accessor for URL();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v5, 0, 1, v12);
  }
  else
  {

    uint64_t v15 = type metadata accessor for URL();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v5, 1, 1, v15);
  }
  return sub_100009F78((uint64_t)v5, a1);
}

uint64_t sub_1000A5E14()
{
  swift_getKeyPath();
  sub_1000A78EC();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_1000A5E84@<X0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  sub_1000A78EC();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v3 = v1 + OBJC_IVAR____TtC16MusicRecognition25PlayInAppleMusicViewModel__subscriptionOfferOptions;
  swift_beginAccess();
  uint64_t v4 = type metadata accessor for MusicSubscriptionOffer.Options();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1000A5F50()
{
  uint64_t v1 = sub_1000060EC((uint64_t *)&unk_100158FC0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *(void **)(v0 + OBJC_IVAR____TtC16MusicRecognition25PlayInAppleMusicViewModel_offers);
  if (v4)
  {
    id v5 = v4;
    sub_1000A5B94((uint64_t)v3);
    uint64_t v6 = type metadata accessor for URL();
    int v7 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v3, 1, v6);
    sub_10001ABF4((uint64_t)v3);
    if (v7 == 1 || (id v8 = [v5 campaignSubtitle]) == 0)
    {
      id v9 = [v5 defaultSubtitle];
      uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v12 = v11;

      swift_bridgeObjectRelease();
      uint64_t v13 = HIBYTE(v12) & 0xF;
      if ((v12 & 0x2000000000000000) == 0) {
        uint64_t v13 = v10 & 0xFFFFFFFFFFFFLL;
      }
      if (!v13)
      {
        id v14 = [self mainBundle];
        v25._object = (void *)0xE000000000000000;
        v20._object = (void *)0x800000010011A360;
        v20._uint64_t countAndFlagsBits = 0xD000000000000028;
        v21._uint64_t countAndFlagsBits = 0;
        v21._object = (void *)0xE000000000000000;
        v25._uint64_t countAndFlagsBits = 0;
        uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v20, (Swift::String_optional)0, (NSBundle)v14, v21, v25)._countAndFlagsBits;
        goto LABEL_11;
      }
      id v8 = [v5 defaultSubtitle];
    }
    id v14 = v8;
    uint64_t countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)();
LABEL_11:
    uint64_t v19 = countAndFlagsBits;

    return v19;
  }
  id v16 = [self mainBundle];
  v24._object = (void *)0xE000000000000000;
  v17._object = (void *)0x800000010011A360;
  v17._uint64_t countAndFlagsBits = 0xD000000000000028;
  v18._uint64_t countAndFlagsBits = 0;
  v18._object = (void *)0xE000000000000000;
  v24._uint64_t countAndFlagsBits = 0;
  uint64_t v19 = NSLocalizedString(_:tableName:bundle:value:comment:)(v17, (Swift::String_optional)0, (NSBundle)v16, v18, v24)._countAndFlagsBits;

  return v19;
}

uint64_t sub_1000A61AC(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2;
  return result;
}

uint64_t sub_1000A61B4(uint64_t result, char a2)
{
  *(unsigned char *)(result + 17) = a2;
  return result;
}

uint64_t sub_1000A61BC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1000A78EC();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v4 = v3 + OBJC_IVAR____TtC16MusicRecognition25PlayInAppleMusicViewModel__subscriptionOfferOptions;
  swift_beginAccess();
  uint64_t v5 = type metadata accessor for MusicSubscriptionOffer.Options();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_1000A6288(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for MusicSubscriptionOffer.Options();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  int v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  uint64_t v8 = *a2;
  swift_getKeyPath();
  uint64_t v11 = v8;
  unint64_t v12 = v7;
  uint64_t v13 = v8;
  sub_1000A78EC();
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1000A63E0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + OBJC_IVAR____TtC16MusicRecognition25PlayInAppleMusicViewModel__subscriptionOfferOptions;
  swift_beginAccess();
  uint64_t v4 = type metadata accessor for MusicSubscriptionOffer.Options();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(v3, a2, v4);
  return swift_endAccess();
}

uint64_t sub_1000A647C()
{
  swift_getKeyPath();
  sub_1000A78EC();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC16MusicRecognition25PlayInAppleMusicViewModel__token);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1000A6508@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1000A78EC();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v4 = *(void *)(v3 + OBJC_IVAR____TtC16MusicRecognition25PlayInAppleMusicViewModel__token + 8);
  *a2 = *(void *)(v3 + OBJC_IVAR____TtC16MusicRecognition25PlayInAppleMusicViewModel__token);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1000A6590()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000A6644(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _OWORD v4[3] = a4;
  v4[4] = type metadata accessor for MainActor();
  _OWORD v4[5] = static MainActor.shared.getter();
  uint64_t v5 = (void *)swift_task_alloc();
  v4[6] = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_1000A66EC;
  return sub_1000A7944();
}

uint64_t sub_1000A66EC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 56) = a1;
  *(void *)(v3 + 64) = a2;
  swift_task_dealloc();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1000A6830, v5, v4);
}

uint64_t sub_1000A6830()
{
  uint64_t v2 = v0[7];
  uint64_t v1 = v0[8];
  uint64_t v3 = v0[3];
  swift_release();
  swift_getKeyPath();
  uint64_t v4 = (void *)swift_task_alloc();
  v4[2] = v3;
  _OWORD v4[3] = v2;
  v4[4] = v1;
  v0[2] = v3;
  sub_1000A78EC();
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_1000A693C(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    sub_1000060EC(&qword_1001577C8);
    uint64_t v5 = swift_allocError();
    *uint64_t v6 = a3;
    id v7 = a3;
    return _swift_continuation_throwingResumeWithError(v3, v5);
  }
  else
  {
    id v8 = a2;
    uint64_t v9 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v11 = v10;

    unint64_t v12 = *(uint64_t **)(*(void *)(v3 + 64) + 40);
    uint64_t *v12 = v9;
    v12[1] = v11;
    return _swift_continuation_throwingResume(v3);
  }
}

uint64_t sub_1000A6A10()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MusicRecognition25PlayInAppleMusicViewModel_appleMusicSongURL;
  uint64_t v2 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_10001ABF4(v0 + OBJC_IVAR____TtC16MusicRecognition25PlayInAppleMusicViewModel_appleMusicClassicalURL);
  swift_release();
  swift_release();
  uint64_t v3 = v0 + OBJC_IVAR____TtC16MusicRecognition25PlayInAppleMusicViewModel__subscriptionOfferOptions;
  uint64_t v4 = type metadata accessor for MusicSubscriptionOffer.Options();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = v0 + OBJC_IVAR____TtC16MusicRecognition25PlayInAppleMusicViewModel___observationRegistrar;
  uint64_t v6 = type metadata accessor for ObservationRegistrar();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  return v0;
}

uint64_t sub_1000A6B6C()
{
  sub_1000A6A10();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v1, v2);
}

uint64_t sub_1000A6BC4()
{
  return type metadata accessor for PlayInAppleMusicViewModel();
}

uint64_t type metadata accessor for PlayInAppleMusicViewModel()
{
  uint64_t result = qword_10015AFA8;
  if (!qword_10015AFA8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1000A6C18()
{
  type metadata accessor for URL();
  if (v0 <= 0x3F)
  {
    sub_10000ABC4();
    if (v1 <= 0x3F)
    {
      type metadata accessor for MusicSubscriptionOffer.Options();
      if (v2 <= 0x3F)
      {
        type metadata accessor for ObservationRegistrar();
        if (v3 <= 0x3F) {
          swift_updateClassMetadata2();
        }
      }
    }
  }
}

uint64_t sub_1000A6D94(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18)
{
  uint64_t v19 = v18;
  uint64_t v51 = a6;
  uint64_t v52 = a7;
  uint64_t v50 = a5;
  int v49 = a1;
  uint64_t v53 = a9;
  uint64_t v54 = a8;
  uint64_t v47 = a17;
  uint64_t v48 = a4;
  uint64_t v45 = a14;
  uint64_t v46 = a15;
  uint64_t v55 = a18;
  uint64_t v56 = a13;
  uint64_t v44 = a11;
  uint64_t v22 = type metadata accessor for MusicSubscriptionOffer.MessageIdentifier();
  __chkstk_darwin(v22 - 8);
  uint64_t v23 = type metadata accessor for MusicSubscriptionOffer.Action();
  __chkstk_darwin(v23 - 8);
  uint64_t v24 = type metadata accessor for MusicSubscriptionOffer.Options();
  uint64_t v25 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v43 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_WORD *)(v19 + 16) = 0;
  static MusicSubscriptionOffer.Action.subscribe.getter();
  static MusicSubscriptionOffer.MessageIdentifier.join.getter();
  MusicSubscriptionOffer.Options.init(action:messageIdentifier:itemID:affiliateToken:campaignToken:)();
  static MusicSubscriptionOffer.MessageIdentifier.playMusic.getter();
  MusicSubscriptionOffer.Options.messageIdentifier.setter();
  (*(void (**)(uint64_t, char *, uint64_t))(v25 + 32))(v19 + OBJC_IVAR____TtC16MusicRecognition25PlayInAppleMusicViewModel__subscriptionOfferOptions, v27, v24);
  uint64_t v28 = (void *)(v19 + OBJC_IVAR____TtC16MusicRecognition25PlayInAppleMusicViewModel__token);
  *uint64_t v28 = 0;
  v28[1] = 0;
  ObservationRegistrar.init()();
  uint64_t v29 = (void *)(v19 + OBJC_IVAR____TtC16MusicRecognition25PlayInAppleMusicViewModel_sourceBundleIdentifier);
  uint64_t v30 = v56;
  void *v29 = a12;
  v29[1] = v30;
  uint64_t v31 = v19 + OBJC_IVAR____TtC16MusicRecognition25PlayInAppleMusicViewModel_appleMusicSongURL;
  uint64_t v32 = type metadata accessor for URL();
  uint64_t v33 = *(void *)(v32 - 8);
  uint64_t v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 16);
  uint64_t v56 = a2;
  uint64_t v35 = a2;
  uint64_t v36 = v44;
  v34(v31, v35, v32);
  uint64_t v37 = v46;
  *(void *)(v19 + 24) = v45;
  *(void *)(v19 + 32) = v37;
  *(void *)(v19 + OBJC_IVAR____TtC16MusicRecognition25PlayInAppleMusicViewModel_offers) = a16;
  id v38 = a16;
  swift_bridgeObjectRelease();
  uint64_t v39 = v55;
  *uint64_t v28 = v47;
  v28[1] = v39;
  uint64_t v40 = v48;
  uint64_t v55 = a3;
  sub_10000AD3C(a3, v19 + OBJC_IVAR____TtC16MusicRecognition25PlayInAppleMusicViewModel_appleMusicClassicalURL);
  uint64_t v41 = v50;
  *(unsigned char *)(v19 + OBJC_IVAR____TtC16MusicRecognition25PlayInAppleMusicViewModel_shouldDisplayAppleClassicalFeatures) = v49;
  *(void *)(v19 + OBJC_IVAR____TtC16MusicRecognition25PlayInAppleMusicViewModel_buttonTextColor) = v41;
  *(void *)(v19 + OBJC_IVAR____TtC16MusicRecognition25PlayInAppleMusicViewModel_buttonBackgroundColor) = v40;
  swift_retain();
  swift_retain();
  if (v36)
  {
    MusicItemID.init(_:)();
    swift_getKeyPath();
    uint64_t v57 = v19;
    sub_1000A78EC();
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v57 = v19;
    swift_getKeyPath();
    ObservationRegistrar.willSet<A, B>(_:keyPath:)();
    swift_release();
    swift_beginAccess();
    MusicSubscriptionOffer.Options.itemID.setter();
    swift_endAccess();
    uint64_t v57 = v19;
    swift_getKeyPath();
    ObservationRegistrar.didSet<A, B>(_:keyPath:)();
    swift_release();
  }
  swift_getKeyPath();
  uint64_t v57 = v19;
  sub_1000A78EC();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v57 = v19;
  swift_getKeyPath();
  ObservationRegistrar.willSet<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  MusicSubscriptionOffer.Options.figaroCampaignToken.setter();
  swift_endAccess();
  uint64_t v57 = v19;
  swift_getKeyPath();
  ObservationRegistrar.didSet<A, B>(_:keyPath:)();
  swift_release();
  swift_getKeyPath();
  uint64_t v57 = v19;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v57 = v19;
  swift_getKeyPath();
  ObservationRegistrar.willSet<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  MusicSubscriptionOffer.Options.figaroCampaignGroup.setter();
  swift_endAccess();
  uint64_t v57 = v19;
  swift_getKeyPath();
  ObservationRegistrar.didSet<A, B>(_:keyPath:)();
  swift_release();
  sub_10001ABF4(v55);
  (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v56, v32);
  return v19;
}

uint64_t sub_1000A734C(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9, long long a10, long long a11, uint64_t a12, void *a13)
{
  uint64_t v47 = a7;
  uint64_t v48 = a8;
  uint64_t v46 = a6;
  long long v44 = a10;
  long long v45 = a9;
  long long v43 = a11;
  uint64_t v18 = sub_1000060EC(&qword_100157038);
  __chkstk_darwin(v18 - 8);
  long long v42 = (char *)&v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1000060EC((uint64_t *)&unk_100158FC0);
  __chkstk_darwin(v20 - 8);
  uint64_t v22 = (char *)&v41 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for URL();
  uint64_t v24 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v41 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = *(void (**)(char *, uint64_t))(v24 + 16);
  uint64_t v51 = a2;
  uint64_t v49 = v28;
  v27(v26, a2);
  uint64_t v50 = a3;
  sub_10000AD3C(a3, (uint64_t)v22);
  type metadata accessor for PlayInAppleMusicViewModel();
  swift_allocObject();
  id v29 = a13;
  swift_retain();
  swift_retain();
  uint64_t v30 = sub_1000A6D94(a1, (uint64_t)v26, (uint64_t)v22, a4, a5, v46, v47, v48, v45, *((uint64_t *)&v45 + 1), v44, *((uint64_t *)&v44 + 1), v43, *((uint64_t *)&v43 + 1), a12, a13, 0, 0);
  swift_release();
  swift_release();

  uint64_t v31 = self;
  swift_retain();
  id v32 = [v31 processInfo];
  id v33 = [v32 arguments];

  uint64_t v34 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)();
  LOBYTE(v33) = sub_100052F54(0xD000000000000036, 0x8000000100118CE0, v34);
  swift_bridgeObjectRelease();
  if (v33)
  {
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    uint64_t v52 = v30;
    sub_1000A78EC();
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  }
  else
  {
    uint64_t v36 = type metadata accessor for TaskPriority();
    uint64_t v37 = (uint64_t)v42;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v42, 1, 1, v36);
    type metadata accessor for MainActor();
    swift_retain();
    uint64_t v38 = static MainActor.shared.getter();
    uint64_t v39 = (void *)swift_allocObject();
    v39[2] = v38;
    v39[3] = &protocol witness table for MainActor;
    unsigned char v39[4] = v30;
    sub_1000DC37C(v37, (uint64_t)&unk_10015B098, (uint64_t)v39);
  }
  swift_release();
  swift_release();

  swift_release();
  swift_release();
  sub_10001ABF4(v50);
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v51, v49);
  return v30;
}

uint64_t sub_1000A77D8()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1000A7818(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  id v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  void *v7 = v2;
  v7[1] = sub_100014D10;
  return sub_1000A6644(a1, v4, v5, v6);
}

uint64_t sub_1000A78D4()
{
  return sub_1000A80FC();
}

unint64_t sub_1000A78EC()
{
  unint64_t result = qword_10015AE80;
  if (!qword_10015AE80)
  {
    type metadata accessor for PlayInAppleMusicViewModel();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015AE80);
  }
  return result;
}

uint64_t sub_1000A7944()
{
  uint64_t v1 = type metadata accessor for CharacterSet();
  v0[20] = v1;
  v0[21] = *(void *)(v1 - 8);
  v0[22] = swift_task_alloc();
  type metadata accessor for MainActor();
  v0[23] = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  v0[24] = v3;
  v0[25] = v2;
  return _swift_task_switch(sub_1000A7A34, v3, v2);
}

uint64_t sub_1000A7A34()
{
  uint64_t v1 = self;
  id v2 = [v1 currentDevice];
  unsigned int v3 = [v2 isSupported];

  if (v3)
  {
    id v4 = [v1 currentDevice];
    v0[26] = v4;
    v0[2] = v0;
    v0[7] = v0 + 15;
    v0[3] = sub_1000A7C94;
    uint64_t v5 = swift_continuation_init();
    v0[10] = _NSConcreteStackBlock;
    v0[11] = 0x40000000;
    v0[12] = sub_1000A693C;
    v0[13] = &unk_10014C338;
    v0[14] = v5;
    [v4 generateTokenWithCompletionHandler:v0 + 10];
    return _swift_continuation_await(v0 + 2);
  }
  else
  {
    swift_release();
    if (qword_100156018 != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    sub_10000E808(v6, (uint64_t)qword_100164B38);
    id v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "DeviceCheck API is not supported on this device", v9, 2u);
      swift_slowDealloc();
    }

    swift_task_dealloc();
    uint64_t v10 = (uint64_t (*)(void, void))v0[1];
    return v10(0, 0);
  }
}

uint64_t sub_1000A7C94()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 216) = v2;
  uint64_t v3 = *(void *)(v1 + 200);
  uint64_t v4 = *(void *)(v1 + 192);
  if (v2) {
    uint64_t v5 = sub_1000A7ED4;
  }
  else {
    uint64_t v5 = sub_1000A7DC4;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_1000A7DC4()
{
  uint64_t v1 = *(void **)(v0 + 208);
  uint64_t v2 = *(void *)(v0 + 176);
  uint64_t v3 = *(void *)(v0 + 160);
  uint64_t v4 = *(void *)(v0 + 168);
  swift_release();
  uint64_t v5 = *(void *)(v0 + 120);
  unint64_t v6 = *(void *)(v0 + 128);
  Swift::String v7 = Data.base64EncodedString(options:)(0);
  sub_100060B4C(v5, v6);

  *(Swift::String *)(v0 + 136) = v7;
  static CharacterSet.urlQueryAllowed.getter();
  sub_10000E0F0();
  uint64_t v8 = StringProtocol.addingPercentEncoding(withAllowedCharacters:)();
  uint64_t v10 = v9;
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return v11(v8, v10);
}

uint64_t sub_1000A7ED4()
{
  uint64_t v1 = (void *)v0[26];
  swift_release();
  swift_willThrow();

  if (qword_100156018 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000E808(v2, (uint64_t)qword_100164B38);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    unint64_t v6 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 138412290;
    swift_errorRetain();
    uint64_t v7 = _swift_stdlib_bridgeErrorToNSError();
    v0[19] = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *unint64_t v6 = v7;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Error generating token with DeviceCheck API: %@", v5, 0xCu);
    sub_1000060EC((uint64_t *)&unk_1001570F0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void, void))v0[1];
  return v8(0, 0);
}

uint64_t sub_1000A80FC()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = (void *)(v0[2] + OBJC_IVAR____TtC16MusicRecognition25PlayInAppleMusicViewModel__token);
  void *v2 = v0[3];
  v2[1] = v1;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000A8150()
{
  return sub_1000A63E0(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

id sub_1000A817C(double a1, double a2, double a3, double a4)
{
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v10 = &v4[OBJC_IVAR____TtC16MusicRecognition22MatchingFlowCustomView_retryHandler];
  *(void *)uint64_t v10 = nullsub_1;
  *((void *)v10 + 1) = 0;
  uint64_t v11 = &v4[OBJC_IVAR____TtC16MusicRecognition22MatchingFlowCustomView_cancellationHandler];
  *(void *)uint64_t v11 = nullsub_1;
  *((void *)v11 + 1) = 0;
  uint64_t v12 = &v4[OBJC_IVAR____TtC16MusicRecognition22MatchingFlowCustomView_appleMusicURLHandler];
  *(void *)uint64_t v12 = nullsub_1;
  *((void *)v12 + 1) = 0;
  uint64_t v13 = &v4[OBJC_IVAR____TtC16MusicRecognition22MatchingFlowCustomView_displayMatchedMediaItemHandler];
  *(void *)uint64_t v13 = nullsub_1;
  *((void *)v13 + 1) = 0;
  *(void *)&v4[OBJC_IVAR____TtC16MusicRecognition22MatchingFlowCustomView_matchedMediaItem] = 0;
  uint64_t v14 = OBJC_IVAR____TtC16MusicRecognition22MatchingFlowCustomView_listeningView;
  id v15 = objc_allocWithZone((Class)type metadata accessor for ListeningView());
  id v16 = v4;
  *(void *)&v4[v14] = [v15 initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v17 = OBJC_IVAR____TtC16MusicRecognition22MatchingFlowCustomView_matchView;
  *(void *)&v16[v17] = [objc_allocWithZone((Class)type metadata accessor for MatchView()) initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v18 = OBJC_IVAR____TtC16MusicRecognition22MatchingFlowCustomView_noMatchView;
  *(void *)&v16[v18] = [objc_allocWithZone((Class)type metadata accessor for NoMatchView()) initWithFrame:0.0, 0.0, 0.0, 0.0];

  v21.receiver = v16;
  v21.super_class = ObjectType;
  [super initWithFrame:a1, a2, a3, a4];
  sub_1000A8344();

  return v19;
}

void sub_1000A8344()
{
  [v0 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v1 = *(char **)&v0[OBJC_IVAR____TtC16MusicRecognition22MatchingFlowCustomView_listeningView];
  [v1 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v0 addSubview:v1];
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC16MusicRecognition22MatchingFlowCustomView_matchView];
  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v0 addSubview:v2];
  uint64_t v3 = *(void **)&v0[OBJC_IVAR____TtC16MusicRecognition22MatchingFlowCustomView_noMatchView];
  [v3 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v0 addSubview:v3];
  [*(id *)&v1[OBJC_IVAR____TtC16MusicRecognition13ListeningView_cancelButton] addTarget:v0 action:"cancelAction" forControlEvents:64];
  id v4 = [objc_allocWithZone((Class)UITapGestureRecognizer) initWithTarget:v0 action:"displayMatchedMediaItemAction"];
  [v2 addGestureRecognizer:v4];

  id v5 = [objc_allocWithZone((Class)UITapGestureRecognizer) initWithTarget:v0 action:"retryAction"];
  [v3 addGestureRecognizer:v5];

  long long v43 = self;
  sub_1000060EC(&qword_100157030);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1001126C0;
  id v7 = [v1 topAnchor];
  id v8 = [v0 topAnchor];
  id v9 = [v7 constraintEqualToAnchor:v8];

  *(void *)(v6 + 32) = v9;
  id v10 = [v1 bottomAnchor];
  id v11 = [v0 bottomAnchor];
  id v12 = [v10 constraintEqualToAnchor:v11];

  *(void *)(v6 + 40) = v12;
  id v13 = [v1 leadingAnchor];
  id v14 = [v0 leadingAnchor];
  id v15 = [v13 constraintEqualToAnchor:v14];

  *(void *)(v6 + 48) = v15;
  id v16 = [v1 trailingAnchor];
  id v17 = [v0 trailingAnchor];
  id v18 = [v16 constraintEqualToAnchor:v17];

  *(void *)(v6 + 56) = v18;
  id v19 = [v3 topAnchor];
  id v20 = [v0 topAnchor];
  id v21 = [v19 constraintEqualToAnchor:v20];

  *(void *)(v6 + 64) = v21;
  id v22 = [v3 bottomAnchor];
  id v23 = [v0 bottomAnchor];
  id v24 = [v22 constraintEqualToAnchor:v23];

  *(void *)(v6 + 72) = v24;
  id v25 = [v3 leadingAnchor];
  id v26 = [v0 leadingAnchor];
  id v27 = [v25 constraintEqualToAnchor:v26];

  *(void *)(v6 + 80) = v27;
  id v28 = [v3 trailingAnchor];
  id v29 = [v0 trailingAnchor];
  id v30 = [v28 constraintEqualToAnchor:v29];

  *(void *)(v6 + 88) = v30;
  id v31 = [v2 topAnchor];
  id v32 = [v0 topAnchor];
  id v33 = [v31 constraintEqualToAnchor:v32];

  *(void *)(v6 + 96) = v33;
  id v34 = [v2 bottomAnchor];
  id v35 = [v0 bottomAnchor];
  id v36 = [v34 constraintEqualToAnchor:v35];

  *(void *)(v6 + 104) = v36;
  id v37 = [v2 leadingAnchor];
  id v38 = [v0 leadingAnchor];
  id v39 = [v37 constraintEqualToAnchor:v38];

  *(void *)(v6 + 112) = v39;
  id v40 = [v2 trailingAnchor];
  id v41 = [v0 trailingAnchor];
  id v42 = [v40 constraintEqualToAnchor:v41];

  *(void *)(v6 + 120) = v42;
  specialized Array._endMutation()();
  sub_1000150F8(0, (unint64_t *)&qword_100157AD0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v43 activateConstraints:isa];
}

id sub_1000A89DC(void *a1)
{
  uint64_t v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  id v5 = &v2[OBJC_IVAR____TtC16MusicRecognition22MatchingFlowCustomView_retryHandler];
  *(void *)id v5 = nullsub_1;
  *((void *)v5 + 1) = 0;
  uint64_t v6 = &v2[OBJC_IVAR____TtC16MusicRecognition22MatchingFlowCustomView_cancellationHandler];
  *(void *)uint64_t v6 = nullsub_1;
  *((void *)v6 + 1) = 0;
  id v7 = &v2[OBJC_IVAR____TtC16MusicRecognition22MatchingFlowCustomView_appleMusicURLHandler];
  *(void *)id v7 = nullsub_1;
  *((void *)v7 + 1) = 0;
  id v8 = &v2[OBJC_IVAR____TtC16MusicRecognition22MatchingFlowCustomView_displayMatchedMediaItemHandler];
  *(void *)id v8 = nullsub_1;
  *((void *)v8 + 1) = 0;
  *(void *)&v2[OBJC_IVAR____TtC16MusicRecognition22MatchingFlowCustomView_matchedMediaItem] = 0;
  uint64_t v9 = OBJC_IVAR____TtC16MusicRecognition22MatchingFlowCustomView_listeningView;
  id v10 = objc_allocWithZone((Class)type metadata accessor for ListeningView());
  id v11 = v2;
  *(void *)&v2[v9] = [v10 initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v12 = OBJC_IVAR____TtC16MusicRecognition22MatchingFlowCustomView_matchView;
  *(void *)&v11[v12] = [objc_allocWithZone((Class)type metadata accessor for MatchView()) initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v13 = OBJC_IVAR____TtC16MusicRecognition22MatchingFlowCustomView_noMatchView;
  *(void *)&v11[v13] = [objc_allocWithZone((Class)type metadata accessor for NoMatchView()) initWithFrame:0.0, 0.0, 0.0, 0.0];

  v18.receiver = v11;
  v18.super_class = ObjectType;
  [super initWithCoder:a1];
  id v15 = v14;
  if (v14)
  {
    id v16 = v14;
    sub_1000A8344();
  }
  return v15;
}

uint64_t type metadata accessor for MatchingFlowCustomView()
{
  return self;
}

id sub_1000A8CA0()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC16MusicRecognition22MatchingFlowCustomView_listeningView);
  [v1 setHidden:0];
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC16MusicRecognition22MatchingFlowCustomView_noMatchView);
  if (([v2 isHidden] & 1) == 0)
  {
    id v3 = [v2 layer];
    id v4 = [v1 layer];
    sub_1000A9C68(v3, v4);
  }
  [v2 setHidden:1];
  id v5 = *(void **)(v0 + OBJC_IVAR____TtC16MusicRecognition22MatchingFlowCustomView_matchView);

  return [v5 setHidden:1];
}

void sub_1000A8D88(void *a1)
{
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000060EC((uint64_t *)&unk_100158FC0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000060EC(&qword_100157038);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void **)&v1[OBJC_IVAR____TtC16MusicRecognition22MatchingFlowCustomView_matchedMediaItem];
  *(void *)&v1[OBJC_IVAR____TtC16MusicRecognition22MatchingFlowCustomView_matchedMediaItem] = a1;

  uint64_t v14 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v12, 1, 1, v14);
  type metadata accessor for MainActor();
  id v15 = a1;
  id v16 = v1;
  uint64_t v17 = static MainActor.shared.getter();
  objc_super v18 = (void *)swift_allocObject();
  v18[2] = v17;
  v18[3] = &protocol witness table for MainActor;
  void v18[4] = v16;
  void v18[5] = v15;
  sub_1000DC37C((uint64_t)v12, (uint64_t)&unk_10015B1B0, (uint64_t)v18);
  swift_release();
  id v19 = *(char **)&v16[OBJC_IVAR____TtC16MusicRecognition22MatchingFlowCustomView_matchView];
  id v20 = *(id *)&v19[OBJC_IVAR____TtC16MusicRecognition9MatchView_titleLabel];
  id v21 = [v15 title];
  [v20 setText:v21];

  id v22 = *(id *)&v19[OBJC_IVAR____TtC16MusicRecognition9MatchView_artistLabel];
  id v23 = [v15 artist];
  [v22 setText:v23];

  [*(id *)&v19[OBJC_IVAR____TtC16MusicRecognition9MatchView_appleMusicButton] addTarget:v16 action:"appleMusicButtonAction" forControlEvents:64];
  [*(id *)&v16[OBJC_IVAR____TtC16MusicRecognition22MatchingFlowCustomView_noMatchView] setHidden:1];
  [v19 setHidden:0];
  id v24 = [v15 appleMusicURL];
  if (!v24)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v9, 1, 1, v3);
    goto LABEL_7;
  }
  id v25 = v24;
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v9, v6, v3);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v4 + 56))(v9, 0, 1, v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3) == 1)
  {
LABEL_7:
    sub_10001ABF4((uint64_t)v9);
    char v32 = 0;
    goto LABEL_8;
  }
  sub_10001ABF4((uint64_t)v9);
  if (qword_100156238 != -1) {
    swift_once();
  }
  id v26 = objc_allocWithZone((Class)LSApplicationWorkspace);
  swift_bridgeObjectRetain();
  id v27 = [v26 init];
  id v28 = self;
  swift_bridgeObjectRetain();
  NSString v29 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v30 = [v28 applicationWithBundleIdentifier:v29];

  NSString v31 = String._bridgeToObjectiveC()();
  char v32 = [v27 applicationIsInstalled:v31];

  swift_bridgeObjectRelease();
LABEL_8:
  sub_1000B7D80(v32);
  UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, *(id *)&v19[OBJC_IVAR____TtC16MusicRecognition9MatchView_stackView]);
}

uint64_t sub_1000A9288(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[2] = a4;
  v5[3] = a5;
  type metadata accessor for MainActor();
  v5[4] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[5] = v7;
  v5[6] = v6;
  return _swift_task_switch(sub_1000A9320, v7, v6);
}

uint64_t sub_1000A9320()
{
  uint64_t v1 = v0[2];
  id v2 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                             + OBJC_IVAR____TtC16MusicRecognition22MatchingFlowCustomView_listeningView), "layer"));
  id v3 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                             + OBJC_IVAR____TtC16MusicRecognition22MatchingFlowCustomView_matchView), "layer"));
  sub_1000A9C68(v2, v3);

  uint64_t v4 = (void *)swift_task_alloc();
  v0[7] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1000A9420;
  uint64_t v5 = v0[3];
  return sub_1000B7A7C(v5);
}

uint64_t sub_1000A9420()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 48);
  uint64_t v3 = *(void *)(v1 + 40);
  return _swift_task_switch(sub_10005CA8C, v3, v2);
}

void sub_1000A9540(uint64_t a1)
{
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC16MusicRecognition22MatchingFlowCustomView_noMatchView);
  [v3 setHidden:0];
  [*(id *)(v1 + OBJC_IVAR____TtC16MusicRecognition22MatchingFlowCustomView_matchView) setHidden:1];
  id v4 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                             + OBJC_IVAR____TtC16MusicRecognition22MatchingFlowCustomView_listeningView), "layer"));
  id v5 = [v3 layer];
  sub_1000A9C68(v4, v5);

  sub_1000C74EC(a1);
  UIAccessibilityNotifications v6 = UIAccessibilityScreenChangedNotification;

  UIAccessibilityPostNotification(v6, v3);
}

uint64_t sub_1000A961C()
{
  uint64_t v1 = sub_1000060EC((uint64_t *)&unk_100158FC0);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  id v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  UIAccessibilityNotifications v6 = (char *)&v16 - v5;
  uint64_t v7 = type metadata accessor for URL();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void **)(v0 + OBJC_IVAR____TtC16MusicRecognition22MatchingFlowCustomView_matchedMediaItem);
  if (!v11)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
    return sub_10001ABF4((uint64_t)v6);
  }
  id v12 = [v11 appleMusicURL];
  if (v12)
  {
    uint64_t v13 = v12;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v4, 0, 1, v7);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v4, 1, 1, v7);
  }
  sub_100009F78((uint64_t)v4, (uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1) {
    return sub_10001ABF4((uint64_t)v6);
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
  id v15 = *(void (**)(char *))(v0
                                      + OBJC_IVAR____TtC16MusicRecognition22MatchingFlowCustomView_appleMusicURLHandler);
  swift_retain();
  v15(v10);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1000A98CC(char *a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void (**)(uint64_t))&a1[*a3];
  id v4 = a1;
  uint64_t v5 = swift_retain();
  v3(v5);

  return swift_release();
}

uint64_t sub_1000A99C0()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1000A9A08(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_100014D10;
  return sub_1000A9288(a1, v4, v5, v7, v6);
}

void sub_1000A9AC8()
{
  qword_10015B0A8 = 0x7974696361706FLL;
  unk_10015B0B0 = 0xE700000000000000;
}

CAMediaTimingFillMode sub_1000A9AEC()
{
  qword_10015B0B8 = (uint64_t)kCAFillModeForwards;
  return kCAFillModeForwards;
}

void sub_1000A9B04()
{
  *(_WORD *)&algn_10015B0C8[6] = -4864;
}

void sub_1000A9B34()
{
  qword_10015B0D0 = 0x42726579614C6F74;
  *(void *)algn_10015B0D8 = 0xEB0000000072756CLL;
}

void sub_1000A9B60()
{
  algn_10015B0E8[7] = -18;
}

void sub_1000A9B90()
{
  algn_10015B0F8[5] = 0;
  *(_WORD *)&algn_10015B0F8[6] = -5120;
}

void sub_1000A9BBC()
{
  qword_10015B100 = 0x746C7561666564;
  *(void *)algn_10015B108 = 0xE700000000000000;
}

void sub_1000A9BE0()
{
  algn_10015B118[5] = 0;
  *(_WORD *)&algn_10015B118[6] = -5120;
}

void sub_1000A9C0C()
{
  qword_10015B120 = 0x6461527475706E69;
  *(void *)algn_10015B128 = 0xEB00000000737569;
}

void sub_1000A9C38()
{
  algn_10015B138[7] = -18;
}

void sub_1000A9C68(void *a1, void *a2)
{
  NSString v2 = String._bridgeToObjectiveC()();
  uint64_t v3 = self;
  id v4 = [v3 animationWithKeyPath:v2];

  id v5 = v4;
  Class isa = Double._bridgeToObjectiveC()().super.super.isa;
  [v5 setFromValue:isa];

  id v7 = v5;
  Class v8 = Double._bridgeToObjectiveC()().super.super.isa;
  [v7 setToValue:v8];

  [v7 setMass:0.513];
  [v7 setStiffness:76.956];
  [v7 setDamping:72.0];
  [v7 setBeginTime:CACurrentMediaTime()];
  [v7 setRemovedOnCompletion:0];
  if (qword_1001563E0 != -1) {
    swift_once();
  }
  uint64_t v55 = v7;
  [v7 setFillMode:qword_10015B0B8];
  NSString v9 = String._bridgeToObjectiveC()();
  id v10 = [v3 animationWithKeyPath:v9];

  id v11 = v10;
  Class v12 = Double._bridgeToObjectiveC()().super.super.isa;
  [v11 setFromValue:v12];

  Class v13 = Double._bridgeToObjectiveC()().super.super.isa;
  [v11 setToValue:v13];

  [v11 setMass:0.513];
  [v11 setStiffness:76.956];
  [v11 setDamping:72.0];
  [v11 setBeginTime:CACurrentMediaTime()];
  [v11 setRemovedOnCompletion:0];
  [v11 setFillMode:qword_10015B0B8];
  if (qword_1001563D8 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  NSString v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v15 = [v3 animationWithKeyPath:v14];

  id v16 = v15;
  Class v17 = Double._bridgeToObjectiveC()().super.super.isa;
  [v16 setFromValue:v17];

  Class v18 = Double._bridgeToObjectiveC()().super.super.isa;
  [v16 setToValue:v18];

  [v16 setMass:0.513];
  [v16 setStiffness:76.956];
  [v16 setDamping:72.0];
  [v16 setBeginTime:CACurrentMediaTime()];
  [v16 setRemovedOnCompletion:0];
  [v16 setFillMode:qword_10015B0B8];
  swift_bridgeObjectRetain();
  NSString v19 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v20 = [v3 animationWithKeyPath:v19];

  id v21 = v20;
  Class v22 = Double._bridgeToObjectiveC()().super.super.isa;
  [v21 setFromValue:v22];

  Class v23 = Double._bridgeToObjectiveC()().super.super.isa;
  [v21 setToValue:v23];

  [v21 setMass:0.513];
  [v21 setStiffness:76.956];
  [v21 setDamping:72.0];
  [v21 setBeginTime:CACurrentMediaTime()];
  [v21 setRemovedOnCompletion:0];
  [v21 setFillMode:qword_10015B0B8];
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v24 = objc_allocWithZone((Class)CAFilter);
  NSString v25 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v26 = [v24 initWithType:v25];

  if (qword_100156400 != -1) {
    swift_once();
  }
  NSString v27 = String._bridgeToObjectiveC()();
  [v26 setName:v27];

  if (qword_100156408 != -1) {
    swift_once();
  }
  NSString v28 = String._bridgeToObjectiveC()();
  if (qword_100156410 != -1) {
    swift_once();
  }
  NSString v29 = String._bridgeToObjectiveC()();
  [v26 setValue:v28 forKey:v29];

  NSString v30 = String._bridgeToObjectiveC()();
  NSString v31 = String._bridgeToObjectiveC()();
  [v26 setValue:v30 forKey:v31];

  v32.super.super.Class isa = Double._bridgeToObjectiveC()().super.super.isa;
  if (qword_100156418 != -1) {
    swift_once();
  }
  NSString v33 = String._bridgeToObjectiveC()();
  [v26 setValue:v32.super.super.isa forKey:v33];

  Class v34 = Bool._bridgeToObjectiveC()().super.super.isa;
  NSString v35 = String._bridgeToObjectiveC()();
  [v26 setValue:v34 forKey:v35];

  v36.super.super.Class isa = Bool._bridgeToObjectiveC()().super.super.isa;
  if (qword_100156420 != -1) {
    swift_once();
  }
  NSString v37 = String._bridgeToObjectiveC()();
  [v26 setValue:v36.super.super.isa forKey:v37];

  id v38 = self;
  [v38 begin];
  [v38 setAnimationDuration:0.8];
  sub_1000060EC(&qword_10015B1B8);
  uint64_t v39 = swift_allocObject();
  *(_OWORD *)(v39 + 16) = xmmword_100110670;
  uint64_t v40 = sub_1000150F8(0, &qword_10015B1C0);
  *(void *)(v39 + 56) = v40;
  *(void *)(v39 + 32) = v26;
  id v41 = v26;
  Class v42 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [a1 setFilters:v42];

  uint64_t v43 = swift_allocObject();
  *(_OWORD *)(v43 + 16) = xmmword_100110670;
  *(void *)(v43 + 56) = v40;
  *(void *)(v43 + 32) = v41;
  id v44 = v41;
  Class v45 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [a2 setFilters:v45];

  uint64_t v46 = swift_allocObject();
  *(void *)(v46 + 16) = a1;
  aBlock[4] = sub_1000AA7F0;
  aBlock[5] = v46;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000D559C;
  aBlock[3] = &unk_10014C3D0;
  uint64_t v47 = _Block_copy(aBlock);
  id v48 = a1;
  swift_release();
  [v38 setCompletionBlock:v47];
  _Block_release(v47);
  if (qword_1001563E8 != -1) {
    swift_once();
  }
  NSString v49 = String._bridgeToObjectiveC()();
  [v48 addAnimation:v55 forKey:v49];

  NSString v50 = String._bridgeToObjectiveC()();
  [v48 addAnimation:v16 forKey:v50];

  if (qword_1001563F0 != -1) {
    swift_once();
  }
  NSString v51 = String._bridgeToObjectiveC()();
  [a2 addAnimation:v11 forKey:v51];

  if (qword_1001563F8 != -1) {
    swift_once();
  }
  NSString v52 = String._bridgeToObjectiveC()();
  [a2 addAnimation:v21 forKey:v52];

  [v38 commit];
}

uint64_t sub_1000AA7B8()
{
  return _swift_deallocObject(v0, 24, 7);
}

id sub_1000AA7F0()
{
  return [*(id *)(v0 + 16) setHidden:1];
}

uint64_t sub_1000AA804(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000AA814()
{
  return swift_release();
}

uint64_t sub_1000AA81C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v6 = sub_1000060EC((uint64_t *)&unk_100158FC0);
  __chkstk_darwin(v6 - 8);
  Class v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  Class v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100009C94(a1, (uint64_t)v8, (uint64_t *)&unk_100158FC0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1000063D0((uint64_t)v8, (uint64_t *)&unk_100158FC0);
    uint64_t v13 = 1;
  }
  else
  {
    NSString v14 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
    v14(v12, v8, v9);
    if (*(void *)(a2 + 16))
    {
      URL.appending(queryItems:)();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    }
    else
    {
      v14(a3, v12, v9);
    }
    uint64_t v13 = 0;
  }
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(a3, v13, 1, v9);
}

uint64_t sub_1000AAA04@<X0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  sub_1000B5C54(&qword_100158818, (void (*)(uint64_t))type metadata accessor for TrackPageViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  return sub_100056D74(v1 + 32, a1);
}

uint64_t sub_1000AAAC8()
{
  v1[311] = v0;
  sub_1000060EC(&qword_100158860);
  v1[312] = swift_task_alloc();
  uint64_t v2 = type metadata accessor for AnyArtist();
  v1[313] = v2;
  v1[314] = *(void *)(v2 - 8);
  v1[315] = swift_task_alloc();
  v1[316] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for AnyAlbum();
  v1[317] = v3;
  v1[318] = *(void *)(v3 - 8);
  v1[319] = swift_task_alloc();
  v1[320] = swift_task_alloc();
  sub_1000060EC((uint64_t *)&unk_100158FC0);
  v1[321] = swift_task_alloc();
  v1[322] = swift_task_alloc();
  v1[323] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for AnySong();
  v1[324] = v4;
  v1[325] = *(void *)(v4 - 8);
  v1[326] = swift_task_alloc();
  v1[327] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Album();
  v1[328] = v5;
  v1[329] = *(void *)(v5 - 8);
  v1[330] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for Artist();
  v1[331] = v6;
  v1[332] = *(void *)(v6 - 8);
  v1[333] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for Song();
  v1[334] = v7;
  v1[335] = *(void *)(v7 - 8);
  v1[336] = swift_task_alloc();
  v1[337] = swift_task_alloc();
  sub_1000060EC(&qword_10015B368);
  v1[338] = swift_task_alloc();
  v1[339] = swift_task_alloc();
  sub_1000060EC(&qword_10015B370);
  v1[340] = swift_task_alloc();
  v1[341] = swift_task_alloc();
  sub_1000060EC(&qword_10015B378);
  v1[342] = swift_task_alloc();
  v1[343] = swift_task_alloc();
  v1[344] = sub_1000060EC(&qword_10015B380);
  v1[345] = swift_task_alloc();
  v1[346] = swift_task_alloc();
  v1[347] = type metadata accessor for TrackPageMetadata();
  v1[348] = swift_task_alloc();
  v1[349] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for MusicSubscription();
  v1[350] = v8;
  v1[351] = *(void *)(v8 - 8);
  v1[352] = swift_task_alloc();
  sub_1000060EC(&qword_1001577D0);
  v1[353] = swift_task_alloc();
  type metadata accessor for MainActor();
  v1[354] = static MainActor.shared.getter();
  uint64_t v10 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[355] = v10;
  v1[356] = v9;
  return _swift_task_switch(sub_1000AB018, v10, v9);
}

uint64_t sub_1000AB018()
{
  if (qword_100156018 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000E808(v1, (uint64_t)qword_100164B38);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Loading Native Track Page", v4, 2u);
    swift_slowDealloc();
  }
  uint64_t v5 = *(void *)(v0 + 2488);

  swift_getKeyPath();
  *(void *)(v0 + 2856) = OBJC_IVAR____TtC16MusicRecognition18TrackPageViewModel___observationRegistrar;
  *(void *)(v0 + 2472) = v5;
  *(void *)(v0 + 2864) = sub_1000B5C54(&qword_100158818, (void (*)(uint64_t))type metadata accessor for TrackPageViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v6 = *(void **)(v5 + 560);
  *(void *)(v0 + 2872) = v6;
  if (v6)
  {
    id v7 = v6;
    uint64_t v8 = *(void *)(SHMediaItem.properties.getter() + 16);
    swift_bridgeObjectRelease();
    if (v8)
    {
      uint64_t v54 = v7;
      uint64_t v9 = *(void *)(v0 + 2824);
      uint64_t v10 = *(void *)(v0 + 2808);
      uint64_t v11 = *(void *)(v0 + 2800);
      uint64_t v12 = *sub_100010740((void *)(*(void *)(v0 + 2488) + 592), *(void *)(*(void *)(v0 + 2488) + 616));
      swift_getKeyPath();
      *(void *)(v0 + 2448) = v12;
      sub_1000B5C54((unint64_t *)&qword_1001577D8, (void (*)(uint64_t))type metadata accessor for MusicSubscriptionStatusController);
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      uint64_t v13 = v12 + OBJC_IVAR____TtC16MusicRecognition33MusicSubscriptionStatusController__musicSubscription;
      swift_beginAccess();
      sub_100009C94(v13, v9, &qword_1001577D0);
      int v14 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v9, 1, v11);
      uint64_t v15 = *(void *)(v0 + 2824);
      if (v14)
      {
        sub_1000063D0(v15, &qword_1001577D0);
        char v16 = 0;
      }
      else
      {
        uint64_t v26 = *(void *)(v0 + 2816);
        uint64_t v27 = *(void *)(v0 + 2808);
        uint64_t v28 = *(void *)(v0 + 2800);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 16))(v26, v15, v28);
        sub_1000063D0(v15, &qword_1001577D0);
        char v29 = MusicSubscription.canBecomeSubscriber.getter();
        (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v28);
        char v16 = v29 ^ 1;
      }
      uint64_t v30 = *(void *)(v0 + 2792);
      NSString v31 = *(int **)(v0 + 2776);
      uint64_t v32 = *(void *)(v0 + 2600);
      uint64_t v50 = *(void *)(v0 + 2592);
      uint64_t v33 = *(void *)(v0 + 2544);
      uint64_t v34 = *(void *)(v0 + 2512);
      uint64_t v51 = *(void *)(v0 + 2536);
      uint64_t v52 = *(void *)(v0 + 2504);
      uint64_t v35 = *(void *)(v0 + 2488);
      swift_getKeyPath();
      uint64_t v36 = swift_task_alloc();
      uint64_t v53 = v35;
      *(void *)(v36 + 16) = v35;
      *(unsigned char *)(v36 + 24) = v16 & 1;
      *(void *)(v0 + 2440) = v35;
      ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
      swift_release();
      swift_task_dealloc();
      uint64_t v37 = v31[6];
      *(_DWORD *)(v0 + 1444) = v37;
      uint64_t v38 = v30 + v37;
      uint64_t v39 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 56);
      *(void *)(v0 + 2880) = v39;
      *(void *)(v0 + 2888) = (v32 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
      v39(v38, 1, 1, v50);
      uint64_t v40 = v30 + v31[8];
      id v41 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v33 + 56);
      *(void *)(v0 + 2896) = v41;
      *(void *)(v0 + 2904) = (v33 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
      v41(v40, 1, 1, v51);
      uint64_t v42 = v30 + v31[7];
      uint64_t v43 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 56);
      *(void *)(v0 + 2912) = v43;
      *(void *)(v0 + 2920) = (v34 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
      v43(v42, 1, 1, v52);
      id v44 = v54;
      UUID.init()();
      *(void *)(v30 + v31[5]) = v44;
      *(void *)(v0 + 1472) = v31;
      *(void *)(v0 + 1480) = &off_10014CEF8;
      *(void *)(v0 + 1488) = &off_10014CE40;
      uint64_t v45 = sub_1000B5C54(&qword_10015B388, (void (*)(uint64_t))type metadata accessor for TrackPageMetadata);
      *(void *)(v0 + 2928) = v45;
      *(void *)(v0 + 1496) = v45;
      *(void *)(v0 + 1504) = &off_10014CE60;
      *(void *)(v0 + 1512) = &off_10014CEA8;
      *(void *)(v0 + 1520) = &off_10014CF08;
      *(void *)(v0 + 1528) = &off_10014CF20;
      *(void *)(v0 + 1536) = &off_10014CEB8;
      uint64_t v46 = sub_1000B5C54(&qword_10015B390, (void (*)(uint64_t))type metadata accessor for TrackPageMetadata);
      *(void *)(v0 + 2936) = v46;
      *(void *)(v0 + 1544) = v46;
      uint64_t v47 = sub_100057938((uint64_t *)(v0 + 1448));
      sub_1000B5998(v30, (uint64_t)v47, (uint64_t (*)(void))type metadata accessor for TrackPageMetadata);
      *(unsigned char *)(v0 + 1552) = 0;
      swift_getKeyPath();
      uint64_t v48 = swift_task_alloc();
      *(void *)(v48 + 16) = v53;
      *(void *)(v48 + 24) = v0 + 1448;
      *(void *)(v0 + 2432) = v53;
      ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
      *(void *)(v0 + 2944) = 0;
      swift_release();
      swift_task_dealloc();
      sub_100058884(v0 + 1448);
      NSString v49 = (void *)swift_task_alloc();
      *(void *)(v0 + 2952) = v49;
      void *v49 = v0;
      v49[1] = sub_1000AB9B4;
      return sub_1000B19D4();
    }
    uint64_t v22 = *(void *)(v0 + 2488);
    swift_release();
    *(unsigned char *)(v0 + 1672) = 3;
    *(unsigned char *)(v0 + 1776) = 1;
    swift_getKeyPath();
    uint64_t v23 = swift_task_alloc();
    *(void *)(v23 + 16) = v22;
    *(void *)(v23 + 24) = v0 + 1672;
    *(void *)(v0 + 2480) = v22;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    swift_task_dealloc();
    sub_100058884(v0 + 1672);
  }
  else
  {
    swift_release();
    Class v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v17, v18))
    {
      NSString v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)NSString v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Missing media item", v19, 2u);
      swift_slowDealloc();
    }
    uint64_t v20 = *(void *)(v0 + 2488);

    *(unsigned char *)(v0 + 1336) = 1;
    *(unsigned char *)(v0 + 1440) = 1;
    swift_getKeyPath();
    uint64_t v21 = swift_task_alloc();
    *(void *)(v21 + 16) = v20;
    *(void *)(v21 + 24) = v0 + 1336;
    *(void *)(v0 + 2456) = v20;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    swift_task_dealloc();
    sub_100058884(v0 + 1336);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v24 = *(uint64_t (**)(void))(v0 + 8);
  return v24();
}

uint64_t sub_1000AB9B4(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 2960) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 2848);
  uint64_t v4 = *(void *)(v2 + 2840);
  return _swift_task_switch(sub_1000ABADC, v4, v3);
}

uint64_t sub_1000ABADC()
{
  uint64_t v1 = *(void **)(v0 + 2960);
  uint64_t v2 = *(void *)(v0 + 2944);
  uint64_t v11 = *(void **)(v0 + 2872);
  uint64_t v3 = *(void *)(v0 + 2752);
  uint64_t v4 = *(void *)(v0 + 2488);
  swift_getKeyPath();
  uint64_t v5 = swift_task_alloc();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v1;
  *(void *)(v0 + 2416) = v4;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  *(void *)(v0 + 2968) = v2;
  swift_release();

  swift_task_dealloc();
  uint64_t v6 = swift_task_alloc();
  *(void *)(v0 + 2976) = v6;
  *(void *)(v6 + 16) = &unk_10015B3A8;
  *(void *)(v6 + 24) = v4;
  swift_retain();
  sub_100006224(&qword_10015B3C0);
  swift_asyncLet_begin();
  *(_DWORD *)(v0 + 1556) = *(_DWORD *)(v3 + 48);
  *(_DWORD *)(v0 + 1668) = *(_DWORD *)(v3 + 64);
  uint64_t v7 = swift_allocObject();
  *(void *)(v0 + 2984) = v7;
  *(void *)(v7 + 16) = v11;
  uint64_t v8 = swift_task_alloc();
  *(void *)(v0 + 2992) = v8;
  *(void *)(v8 + 16) = &unk_10015B3D0;
  *(void *)(v8 + 24) = v7;
  id v9 = v11;
  swift_asyncLet_begin();
  return _swift_asyncLet_get(v0 + 656, v0 + 1784, sub_1000ABD00, v0 + 2240);
}

uint64_t sub_1000ABD00()
{
  uint64_t v1 = v0[223];
  v0[375] = v1;
  uint64_t v2 = v0[224];
  v0[376] = v2;
  v0[377] = v0[225];
  v0[378] = v0[226];
  v0[379] = v0[227];
  v0[380] = v0[228];
  v0[381] = v0[229];
  v0[382] = v0[230];
  sub_1000B5890(v1, v2);
  uint64_t v3 = v0[346];
  return _swift_asyncLet_get(v0 + 2, v3, sub_1000ABDB0, v0 + 270);
}

uint64_t sub_1000ABDB0()
{
  return _swift_task_switch(sub_1000ABDCC, *(void *)(v0 + 2840), *(void *)(v0 + 2848));
}

uint64_t sub_1000ABDCC()
{
  uint64_t v131 = *(void *)(v0 + 3008);
  uint64_t v1 = *(void *)(v0 + 2768);
  uint64_t v2 = *(void *)(v0 + 2760);
  uint64_t v3 = *(void *)(v0 + 2752);
  uint64_t v4 = *(void *)(v0 + 2744);
  uint64_t v5 = *(void *)(v0 + 2728);
  uint64_t v127 = *(void *)(v0 + 2712);
  uint64_t v6 = v1 + *(int *)(v0 + 1668);
  uint64_t v7 = v1 + *(int *)(v0 + 1556);
  uint64_t v8 = v2 + *(int *)(v3 + 48);
  uint64_t v9 = v2 + *(int *)(v3 + 64);
  sub_100009C94(v1, v2, &qword_10015B378);
  sub_100009C94(v7, v8, &qword_10015B370);
  sub_100009C94(v6, v9, &qword_10015B368);
  sub_100009C30(v2, v4, &qword_10015B378);
  sub_100009C30(v8, v5, &qword_10015B370);
  sub_100009C30(v9, v127, &qword_10015B368);
  if (v131 != 1)
  {
    uint64_t v10 = *(void *)(v0 + 2488);
    uint64_t v11 = *(void *)(v10 + 424);
    uint64_t v12 = *(void *)(v10 + 432);
    long long v13 = *(_OWORD *)(v0 + 3016);
    long long v14 = *(_OWORD *)(v0 + 3032);
    long long v15 = *(_OWORD *)(v0 + 3048);
    *(_OWORD *)(v10 + 424) = *(_OWORD *)(v0 + 3000);
    *(_OWORD *)(v10 + 440) = v13;
    *(_OWORD *)(v10 + 456) = v14;
    *(_OWORD *)(v10 + 472) = v15;
    sub_1000B5290(v11, v12);
  }
  uint64_t v16 = *(void *)(v0 + 2736);
  uint64_t v17 = *(void *)(v0 + 2680);
  uint64_t v18 = *(void *)(v0 + 2672);
  sub_100009C94(*(void *)(v0 + 2744), v16, &qword_10015B378);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v16, 1, v18) == 1)
  {
    NSString v19 = &qword_10015B378;
    uint64_t v20 = *(void *)(v0 + 2736);
LABEL_10:
    sub_1000063D0(v20, v19);
    uint64_t v34 = *(void *)(v0 + 2600);
    uint64_t v35 = *(void *)(v0 + 2496);
    uint64_t v36 = *(void *)(v0 + 2488);
    uint64_t v128 = *(void *)(v0 + 2792) + *(int *)(v0 + 1444);
    uint64_t v132 = *(void *)(v0 + 2592);
    swift_getKeyPath();
    uint64_t v37 = swift_task_alloc();
    *(void *)(v37 + 16) = v36;
    *(unsigned char *)(v37 + 24) = 1;
    *(void *)(v0 + 2408) = v36;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    swift_task_dealloc();
    swift_getKeyPath();
    *(void *)(v0 + 2400) = v36;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    char v38 = *(unsigned char *)(v36 + 24);
    sub_100009C94(v128, v35, &qword_100158860);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(v35, 1, v132) == 1)
    {
      uint64_t v39 = *(void *)(v0 + 2568);
      sub_1000063D0(*(void *)(v0 + 2496), &qword_100158860);
      uint64_t v40 = type metadata accessor for URL();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v39, 1, 1, v40);
    }
    else
    {
      uint64_t v41 = *(void *)(v0 + 2496);
      uint64_t v42 = (void *)(v41 + *(int *)(*(void *)(v0 + 2592) + 20));
      uint64_t v43 = v42[3];
      uint64_t v44 = v42[4];
      sub_100010740(v42, v43);
      (*(void (**)(uint64_t, uint64_t))(v44 + 40))(v43, v44);
      sub_1000B5A68(v41, (uint64_t (*)(void))type metadata accessor for AnySong);
    }
    uint64_t v45 = *(void *)(v0 + 2744);
    uint64_t v46 = *(void *)(v0 + 2728);
    uint64_t v47 = *(void *)(v0 + 2712);
    uint64_t v48 = *(void *)(v0 + 2568);
    sub_1000B3324(v38, v45, v48);
    sub_1000063D0(v48, (uint64_t *)&unk_100158FC0);
    sub_1000063D0(v47, &qword_10015B368);
    sub_1000063D0(v46, &qword_10015B370);
    sub_1000063D0(v45, &qword_10015B378);
    uint64_t v49 = *(void *)(v0 + 2768);
    return _swift_asyncLet_finish(v0 + 16, v49, sub_1000AD4E8, v0 + 1296);
  }
  uint64_t v21 = *(void *)(v0 + 2728);
  uint64_t v22 = *(void *)(v0 + 2720);
  uint64_t v23 = *(void *)(v0 + 2656);
  uint64_t v24 = *(void *)(v0 + 2648);
  (*(void (**)(void, void, void))(*(void *)(v0 + 2680) + 32))(*(void *)(v0 + 2696), *(void *)(v0 + 2736), *(void *)(v0 + 2672));
  sub_100009C94(v21, v22, &qword_10015B370);
  int v25 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v22, 1, v24);
  uint64_t v26 = *(void *)(v0 + 2720);
  if (v25 == 1)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 2680) + 8))(*(void *)(v0 + 2696), *(void *)(v0 + 2672));
    NSString v19 = &qword_10015B370;
LABEL_9:
    uint64_t v20 = v26;
    goto LABEL_10;
  }
  uint64_t v27 = *(void *)(v0 + 2712);
  uint64_t v28 = *(void *)(v0 + 2704);
  uint64_t v29 = *(void *)(v0 + 2632);
  uint64_t v30 = *(void *)(v0 + 2624);
  (*(void (**)(void, void, void))(*(void *)(v0 + 2656) + 32))(*(void *)(v0 + 2664), *(void *)(v0 + 2720), *(void *)(v0 + 2648));
  sub_100009C94(v27, v28, &qword_10015B368);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v28, 1, v30) == 1)
  {
    uint64_t v26 = *(void *)(v0 + 2704);
    uint64_t v31 = *(void *)(v0 + 2696);
    uint64_t v32 = *(void *)(v0 + 2680);
    uint64_t v33 = *(void *)(v0 + 2672);
    (*(void (**)(void, void))(*(void *)(v0 + 2656) + 8))(*(void *)(v0 + 2664), *(void *)(v0 + 2648));
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v31, v33);
    NSString v19 = &qword_10015B368;
    goto LABEL_9;
  }
  uint64_t v123 = (uint64_t *)(v0 + 1976);
  uint64_t v129 = (uint64_t *)(v0 + 2120);
  uint64_t v133 = (uint64_t *)(v0 + 2040);
  uint64_t v117 = v0 + 2336;
  uint64_t v121 = v0 + 2368;
  uint64_t v110 = *(void *)(v0 + 2968);
  uint64_t v50 = *(void *)(v0 + 2696);
  uint64_t v112 = v50;
  uint64_t v51 = *(void *)(v0 + 2688);
  uint64_t v52 = *(void *)(v0 + 2680);
  uint64_t v53 = *(void *)(v0 + 2672);
  uint64_t v54 = *(void *)(v0 + 2488);
  (*(void (**)(void, void, void))(*(void *)(v0 + 2632) + 32))(*(void *)(v0 + 2640), *(void *)(v0 + 2704), *(void *)(v0 + 2624));
  uint64_t v55 = *(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 16);
  v55(v51, v50, v53);
  type metadata accessor for MusicKitMusicLibrary();
  swift_allocObject();
  uint64_t v56 = sub_100067B0C(v51);
  type metadata accessor for AnyMusicLibrary();
  uint64_t v57 = swift_allocObject();
  uint64_t v58 = sub_1000B4F4C(v56, v57);
  swift_getKeyPath();
  uint64_t v59 = swift_task_alloc();
  *(void *)(v59 + 16) = v54;
  *(void *)(v59 + 24) = v58;
  *(void *)(v0 + 2424) = v54;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  *(void *)(v0 + 3064) = v110;
  swift_release();
  swift_release();
  swift_task_dealloc();
  *(void *)(v0 + 2224) = type metadata accessor for MusicKitSong();
  *(void *)(v0 + 2232) = &off_10014CCC0;
  uint64_t v60 = v0 + 2200;
  uint64_t v61 = sub_100057938((uint64_t *)(v0 + 2200));
  v55((uint64_t)v61, v112, v53);
  sub_1000AE3BC((uint64_t *)(v0 + 1912));
  sub_100009C30(v0 + 1928, v0 + 2352, &qword_100159A70);
  sub_100009C30(v0 + 2352, v0 + 2304, &qword_100159A70);
  if (*(void *)(v0 + 2312) && *(void *)(v0 + 1920))
  {
    sub_1000060EC(&qword_10015A800);
    type metadata accessor for URLQueryItem();
    uint64_t v62 = (void *)swift_allocObject();
    *((_OWORD *)v62 + 1) = xmmword_1001118A0;
    if (qword_100156200 != -1) {
      swift_once();
    }
    URLQueryItem.init(name:value:)();
    if (qword_100156208 != -1) {
      swift_once();
    }
    URLQueryItem.init(name:value:)();
  }
  else
  {
    uint64_t v62 = _swiftEmptyArrayStorage;
  }
  uint64_t v63 = *(void *)(v0 + 2632);
  uint64_t v111 = *(void *)(v0 + 2624);
  uint64_t v113 = *(void *)(v0 + 2640);
  uint64_t v64 = *(void *)(v0 + 2608);
  uint64_t v65 = *(void *)(v0 + 2592);
  uint64_t v66 = *(char **)(v0 + 2584);
  uint64_t v67 = *(void *)(v0 + 2576);
  uint64_t v107 = *(void *)(v0 + 2616);
  sub_100057684(v0 + 1912);
  uint64_t v68 = type metadata accessor for URL();
  uint64_t v125 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v68 - 8) + 56);
  uint64_t v126 = v68;
  v125(v64, 1, 1);
  uint64_t v69 = (void *)(v64 + *(int *)(v65 + 20));
  sub_100009AD0(v60, (uint64_t)v69);
  uint64_t v70 = v69[3];
  uint64_t v71 = v69[4];
  sub_100010740(v69, v70);
  (*(void (**)(uint64_t, uint64_t))(v71 + 48))(v70, v71);
  sub_1000AA81C(v67, (uint64_t)v62, v66);
  swift_bridgeObjectRelease();
  _s16MusicRecognition11AnyPlaylistVwxx_0(v60);
  sub_1000063D0(v67, (uint64_t *)&unk_100158FC0);
  sub_1000B5930((uint64_t)v66, v64);
  sub_1000B5A00(v64, v107, (uint64_t (*)(void))type metadata accessor for AnySong);
  *(void *)(v0 + 2144) = type metadata accessor for MusicKitAlbum();
  *(void *)(v0 + 2152) = &off_10014B4C0;
  uint64_t v72 = sub_100057938(v129);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v63 + 16))(v72, v113, v111);
  uint64_t v73 = v0 + 1848;
  sub_1000AE3BC((uint64_t *)(v0 + 1848));
  sub_100009C30(v0 + 1864, v117, &qword_100159A70);
  sub_100009C30(v117, v0 + 2320, &qword_100159A70);
  if (*(void *)(v0 + 2328) && *(void *)(v0 + 1856))
  {
    sub_1000060EC(&qword_10015A800);
    type metadata accessor for URLQueryItem();
    id v74 = (void *)swift_allocObject();
    *((_OWORD *)v74 + 1) = xmmword_1001118A0;
    if (qword_100156200 != -1) {
      swift_once();
    }
    URLQueryItem.init(name:value:)();
    if (qword_100156208 != -1) {
      swift_once();
    }
    URLQueryItem.init(name:value:)();
    uint64_t v73 = v0 + 1848;
  }
  else
  {
    id v74 = _swiftEmptyArrayStorage;
  }
  uint64_t v124 = *(void *)(v0 + 2664);
  uint64_t v75 = *(void *)(v0 + 2656);
  id v76 = *(char **)(v0 + 2584);
  uint64_t v77 = *(void *)(v0 + 2576);
  uint64_t v115 = *(void *)(v0 + 2560);
  uint64_t v78 = *(void *)(v0 + 2552);
  uint64_t v79 = *(void *)(v0 + 2536);
  uint64_t v119 = *(void *)(v0 + 2648);
  sub_100057684(v73);
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v125)(v78, 1, 1, v126);
  id v80 = (void *)(v78 + *(int *)(v79 + 20));
  sub_100009AD0((uint64_t)v129, (uint64_t)v80);
  uint64_t v81 = v80[3];
  uint64_t v82 = v80[4];
  sub_100010740(v80, v81);
  (*(void (**)(uint64_t, uint64_t))(v82 + 48))(v81, v82);
  sub_1000AA81C(v77, (uint64_t)v74, v76);
  swift_bridgeObjectRelease();
  _s16MusicRecognition11AnyPlaylistVwxx_0((uint64_t)v129);
  sub_1000063D0(v77, (uint64_t *)&unk_100158FC0);
  sub_1000B5930((uint64_t)v76, v78);
  sub_1000B5A00(v78, v115, (uint64_t (*)(void))type metadata accessor for AnyAlbum);
  *(void *)(v0 + 2064) = type metadata accessor for MusicKitArtist();
  *(void *)(v0 + 2072) = &off_100149FB0;
  uint64_t v83 = sub_100057938(v133);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v75 + 16))(v83, v124, v119);
  sub_1000AE3BC(v123);
  sub_100009C30(v0 + 1992, v121, &qword_100159A70);
  sub_100009C30(v121, v0 + 2384, &qword_100159A70);
  if (*(void *)(v0 + 2392) && *(void *)(v0 + 1984))
  {
    sub_1000060EC(&qword_10015A800);
    type metadata accessor for URLQueryItem();
    uint64_t v84 = swift_allocObject();
    *(_OWORD *)(v84 + 16) = xmmword_1001118A0;
    if (qword_100156200 != -1) {
      swift_once();
    }
    URLQueryItem.init(name:value:)();
    if (qword_100156208 != -1) {
      swift_once();
    }
    URLQueryItem.init(name:value:)();
    uint64_t v85 = (void *)v84;
  }
  else
  {
    uint64_t v85 = _swiftEmptyArrayStorage;
  }
  uint64_t v118 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v0 + 2896);
  unint64_t v109 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v0 + 2880);
  uint64_t v120 = *(void **)(v0 + 2872);
  uint64_t v122 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v0 + 2912);
  uint64_t v130 = *(void *)(v0 + 2792);
  uint64_t v86 = *(void *)(v0 + 2784);
  uint64_t v104 = *(int **)(v0 + 2776);
  uint64_t v105 = *(void *)(v0 + 2616);
  uint64_t v87 = *(char **)(v0 + 2584);
  uint64_t v88 = *(void *)(v0 + 2576);
  uint64_t v106 = *(void *)(v0 + 2592);
  uint64_t v108 = *(void *)(v0 + 2560);
  uint64_t v103 = *(void *)(v0 + 2528);
  uint64_t v89 = *(void *)(v0 + 2520);
  uint64_t v90 = *(void *)(v0 + 2504);
  uint64_t v114 = *(void *)(v0 + 2536);
  uint64_t v116 = v90;
  sub_100057684((uint64_t)v123);
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v125)(v89, 1, 1, v126);
  char v91 = (void *)(v89 + *(int *)(v90 + 20));
  sub_100009AD0((uint64_t)v133, (uint64_t)v91);
  uint64_t v93 = v91[3];
  uint64_t v92 = v91[4];
  sub_100010740(v91, v93);
  (*(void (**)(uint64_t, uint64_t))(v92 + 32))(v93, v92);
  sub_1000AA81C(v88, (uint64_t)v85, v87);
  swift_bridgeObjectRelease();
  _s16MusicRecognition11AnyPlaylistVwxx_0((uint64_t)v133);
  sub_1000063D0(v88, (uint64_t *)&unk_100158FC0);
  sub_1000B5930((uint64_t)v87, v89);
  sub_1000B5A00(v89, v103, (uint64_t (*)(void))type metadata accessor for AnyArtist);
  uint64_t v94 = v86 + v104[6];
  sub_1000B5998(v105, v94, (uint64_t (*)(void))type metadata accessor for AnySong);
  v109(v94, 0, 1, v106);
  uint64_t v95 = v86 + v104[8];
  sub_1000B5998(v108, v95, (uint64_t (*)(void))type metadata accessor for AnyAlbum);
  v118(v95, 0, 1, v114);
  uint64_t v96 = v86 + v104[7];
  sub_1000B5998(v103, v96, (uint64_t (*)(void))type metadata accessor for AnyArtist);
  v122(v96, 0, 1, v116);
  id v97 = v120;
  UUID.init()();
  *(void *)(v86 + v104[5]) = v97;
  sub_1000B5A68(v130, (uint64_t (*)(void))type metadata accessor for TrackPageMetadata);
  sub_1000B5A00(v86, v130, (uint64_t (*)(void))type metadata accessor for TrackPageMetadata);
  char v98 = (void *)swift_task_alloc();
  *(void *)(v0 + 3072) = v98;
  void *v98 = v0;
  v98[1] = sub_1000ACF0C;
  uint64_t v99 = *(void *)(v0 + 2616);
  uint64_t v100 = *(void *)(v0 + 2560);
  uint64_t v101 = *(void *)(v0 + 2528);
  return sub_1000B2AE4(v101, v99, v100);
}

uint64_t sub_1000ACF0C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 2848);
  uint64_t v3 = *(void *)(v1 + 2840);
  return _swift_task_switch(sub_1000AD02C, v3, v2);
}

uint64_t sub_1000AD02C()
{
  uint64_t v1 = *(void *)(v0 + 2936);
  uint64_t v2 = *(void *)(v0 + 2928);
  uint64_t v3 = *(void *)(v0 + 2792);
  uint64_t v4 = *(void *)(v0 + 2680);
  uint64_t v34 = *(void *)(v0 + 2672);
  uint64_t v36 = *(void *)(v0 + 2696);
  uint64_t v5 = *(void *)(v0 + 2656);
  uint64_t v32 = *(void *)(v0 + 2648);
  uint64_t v33 = *(void *)(v0 + 2664);
  uint64_t v6 = *(void *)(v0 + 2632);
  uint64_t v30 = *(void *)(v0 + 2624);
  uint64_t v31 = *(void *)(v0 + 2640);
  uint64_t v28 = *(void *)(v0 + 2560);
  uint64_t v29 = *(void *)(v0 + 2616);
  uint64_t v27 = *(void *)(v0 + 2528);
  uint64_t v7 = *(void *)(v0 + 2488);
  *(void *)(v0 + 1584) = *(void *)(v0 + 2776);
  *(void *)(v0 + 1592) = &off_10014CEF8;
  *(void *)(v0 + 1600) = &off_10014CE40;
  *(void *)(v0 + 1608) = v2;
  *(void *)(v0 + 1616) = &off_10014CE60;
  *(void *)(v0 + 1624) = &off_10014CEA8;
  *(void *)(v0 + 1632) = &off_10014CF08;
  *(void *)(v0 + 1640) = &off_10014CF20;
  *(void *)(v0 + 1648) = &off_10014CEB8;
  *(void *)(v0 + 1656) = v1;
  uint64_t v8 = sub_100057938((uint64_t *)(v0 + 1560));
  sub_1000B5998(v3, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for TrackPageMetadata);
  *(unsigned char *)(v0 + 1664) = 0;
  swift_getKeyPath();
  uint64_t v9 = swift_task_alloc();
  *(void *)(v9 + 16) = v7;
  *(void *)(v9 + 24) = v0 + 1560;
  *(void *)(v0 + 2464) = v7;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  swift_task_dealloc();
  sub_100058884(v0 + 1560);
  sub_1000B5A68(v27, (uint64_t (*)(void))type metadata accessor for AnyArtist);
  sub_1000B5A68(v28, (uint64_t (*)(void))type metadata accessor for AnyAlbum);
  sub_1000B5A68(v29, (uint64_t (*)(void))type metadata accessor for AnySong);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v31, v30);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v33, v32);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v36, v34);
  uint64_t v10 = *(void *)(v0 + 2600);
  uint64_t v11 = *(void *)(v0 + 2496);
  uint64_t v12 = *(void *)(v0 + 2488);
  uint64_t v35 = *(void *)(v0 + 2792) + *(int *)(v0 + 1444);
  uint64_t v37 = *(void *)(v0 + 2592);
  swift_getKeyPath();
  uint64_t v13 = swift_task_alloc();
  *(void *)(v13 + 16) = v12;
  *(unsigned char *)(v13 + 24) = 1;
  *(void *)(v0 + 2408) = v12;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  swift_task_dealloc();
  swift_getKeyPath();
  *(void *)(v0 + 2400) = v12;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  char v14 = *(unsigned char *)(v12 + 24);
  sub_100009C94(v35, v11, &qword_100158860);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v11, 1, v37) == 1)
  {
    uint64_t v15 = *(void *)(v0 + 2568);
    sub_1000063D0(*(void *)(v0 + 2496), &qword_100158860);
    uint64_t v16 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
  }
  else
  {
    uint64_t v17 = *(void *)(v0 + 2496);
    uint64_t v18 = (void *)(v17 + *(int *)(*(void *)(v0 + 2592) + 20));
    uint64_t v19 = v18[3];
    uint64_t v20 = v18[4];
    sub_100010740(v18, v19);
    (*(void (**)(uint64_t, uint64_t))(v20 + 40))(v19, v20);
    sub_1000B5A68(v17, (uint64_t (*)(void))type metadata accessor for AnySong);
  }
  uint64_t v21 = *(void *)(v0 + 2744);
  uint64_t v22 = *(void *)(v0 + 2728);
  uint64_t v23 = *(void *)(v0 + 2712);
  uint64_t v24 = *(void *)(v0 + 2568);
  sub_1000B3324(v14, v21, v24);
  sub_1000063D0(v24, (uint64_t *)&unk_100158FC0);
  sub_1000063D0(v23, &qword_10015B368);
  sub_1000063D0(v22, &qword_10015B370);
  sub_1000063D0(v21, &qword_10015B378);
  uint64_t v25 = *(void *)(v0 + 2768);
  return _swift_asyncLet_finish(v0 + 16, v25, sub_1000AD4E8, v0 + 1296);
}

uint64_t sub_1000AD4E8()
{
  return _swift_task_switch(sub_1000AD504, *(void *)(v0 + 2840), *(void *)(v0 + 2848));
}

uint64_t sub_1000AD504()
{
  swift_release();
  swift_task_dealloc();
  return _swift_asyncLet_finish(v0 + 656, v0 + 1784, sub_1000AD590, v0 + 2080);
}

uint64_t sub_1000AD590()
{
  return _swift_task_switch(sub_1000AD5AC, *(void *)(v0 + 2840), *(void *)(v0 + 2848));
}

uint64_t sub_1000AD5AC()
{
  uint64_t v1 = (void *)v0[359];
  uint64_t v2 = v0[349];
  swift_release();

  swift_task_dealloc();
  sub_1000B5A68(v2, (uint64_t (*)(void))type metadata accessor for TrackPageMetadata);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_1000AD7C4()
{
  uint64_t v1 = v0;
  swift_getKeyPath();
  v12[0] = v0;
  sub_1000B5C54(&qword_100158818, (void (*)(uint64_t))type metadata accessor for TrackPageViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  if ((*(unsigned char *)(v0 + 24) & 1) == 0)
  {
    if (qword_100156018 != -1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for Logger();
    sub_10000E808(v3, (uint64_t)qword_100164B38);
    uint64_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "Pausing playback for unsubscribed user", v6, 2u);
      swift_slowDealloc();
    }

    swift_getKeyPath();
    v9[0] = v1;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    swift_beginAccess();
    sub_100009C94(v1 + 280, (uint64_t)v12, &qword_100158BA0);
    if (v12[3])
    {
      sub_100009AD0((uint64_t)v12, (uint64_t)v9);
      sub_1000063D0((uint64_t)v12, &qword_100158BA0);
      uint64_t v7 = v10;
      uint64_t v8 = v11;
      sub_100010740(v9, v10);
      (*(void (**)(uint64_t, uint64_t))(v8 + 24))(v7, v8);
      return _s16MusicRecognition11AnyPlaylistVwxx_0((uint64_t)v9);
    }
    else
    {
      return sub_1000063D0((uint64_t)v12, &qword_100158BA0);
    }
  }
  return result;
}

double sub_1000AD9F8()
{
  swift_getKeyPath();
  sub_1000B5C54(&qword_100158818, (void (*)(uint64_t))type metadata accessor for TrackPageViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(double *)(v0 + 16);
}

double sub_1000ADA98()
{
  swift_getKeyPath();
  sub_1000B5C54(&qword_100158818, (void (*)(uint64_t))type metadata accessor for TrackPageViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(double *)(v0 + 144);
}

double sub_1000ADB38()
{
  swift_getKeyPath();
  sub_1000B5C54(&qword_100158818, (void (*)(uint64_t))type metadata accessor for TrackPageViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(double *)(v0 + 152);
}

uint64_t sub_1000ADBD8()
{
  static Animation.easeOut(duration:)();
  Animation.delay(_:)();
  swift_release();
  swift_retain();
  withAnimation<A>(_:_:)();
  swift_release();
  static Animation.interpolatingSpring(mass:stiffness:damping:initialVelocity:)();
  Animation.delay(_:)();
  swift_release();
  swift_retain();
  withAnimation<A>(_:_:)();
  swift_release_n();

  return swift_release();
}

uint64_t sub_1000ADD00()
{
  swift_getKeyPath();
  sub_1000B5C54(&qword_100158818, (void (*)(uint64_t))type metadata accessor for TrackPageViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (*(unsigned char *)(v0 + 192)) {
    return 0;
  }
  swift_getKeyPath();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t result = *(void *)(v0 + 560);
  if (result)
  {
    uint64_t result = (uint64_t)[(id)result appleMusicID];
    if (result)
    {

      return 1;
    }
  }
  return result;
}

uint64_t sub_1000ADE04@<X0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  sub_1000B5C54(&qword_100158818, (void (*)(uint64_t))type metadata accessor for TrackPageViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  return sub_100009C94(v1 + 280, a1, &qword_100158BA0);
}

uint64_t sub_1000ADED0()
{
  uint64_t v1 = sub_1000060EC(&qword_100158940);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  v13[0] = v0;
  sub_1000B5C54(&qword_100158818, (void (*)(uint64_t))type metadata accessor for TrackPageViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (*(unsigned char *)(v0 + 24) != 1) {
    return 0;
  }
  swift_getKeyPath();
  v12[0] = v0;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  sub_100009C94(v0 + 216, (uint64_t)v13, &qword_1001588C0);
  uint64_t v4 = v14;
  if (v14)
  {
    os_log_type_t v5 = sub_100010740(v13, v14);
    uint64_t v6 = *(void *)(v4 - 8);
    __chkstk_darwin(v5);
    uint64_t v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v6 + 16))(v8);
    sub_1000063D0((uint64_t)v13, &qword_1001588C0);
    sub_100009C94((uint64_t)v8, (uint64_t)v3, &qword_100158940);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v4);
    uint64_t v9 = type metadata accessor for StreamingService();
    uint64_t v4 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v3, 1, v9) != 1;
  }
  else
  {
    sub_1000063D0((uint64_t)v13, &qword_1001588C0);
    uint64_t v10 = type metadata accessor for StreamingService();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v3, 1, 1, v10);
  }
  sub_1000063D0((uint64_t)v3, &qword_100158940);
  return v4;
}

uint64_t sub_1000AE1BC()
{
  swift_getKeyPath();
  sub_1000B5C54(&qword_100158818, (void (*)(uint64_t))type metadata accessor for TrackPageViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v1 = *(void *)(v0 + 568);
  swift_bridgeObjectRetain();
  return v1;
}

void *sub_1000AE270()
{
  swift_getKeyPath();
  sub_1000B5C54(&qword_100158818, (void (*)(uint64_t))type metadata accessor for TrackPageViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v1 = *(void **)(v0 + 272);
  id v2 = v1;
  return v1;
}

uint64_t sub_1000AE318()
{
  return swift_retain();
}

uint64_t sub_1000AE3BC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = v1[53];
  uint64_t v4 = v1[54];
  uint64_t v5 = v3;
  uint64_t v6 = v4;
  uint64_t v7 = v1[55];
  uint64_t v8 = v1[56];
  uint64_t v9 = v1[57];
  uint64_t v10 = v1[58];
  uint64_t v11 = v1[59];
  uint64_t v12 = v1[60];
  if (v4 == 1)
  {
    uint64_t v18 = v1[53];
    sub_100093444(0, 0, 0, 0, 0, 0, (uint64_t *)&v19);
    uint64_t v16 = v1[54];
    uint64_t v17 = v1[53];
    long long v13 = v20;
    *(_OWORD *)(v1 + 53) = v19;
    *(_OWORD *)(v1 + 55) = v13;
    long long v14 = v22;
    *(_OWORD *)(v1 + 57) = v21;
    *(_OWORD *)(v1 + 59) = v14;
    sub_1000B5B40((uint64_t)&v19);
    sub_1000B5290(v17, v16);
    uint64_t v4 = 1;
    uint64_t v3 = v18;
    uint64_t v5 = v19;
    uint64_t v12 = *((void *)&v22 + 1);
    uint64_t v11 = v22;
    uint64_t v10 = *((void *)&v21 + 1);
    uint64_t v9 = v21;
    uint64_t v8 = *((void *)&v20 + 1);
    uint64_t v7 = v20;
    uint64_t v6 = *((void *)&v19 + 1);
  }
  uint64_t result = sub_1000B5890(v3, v4);
  *a1 = v5;
  a1[1] = v6;
  a1[2] = v7;
  a1[3] = v8;
  a1[4] = v9;
  a1[5] = v10;
  a1[6] = v11;
  a1[7] = v12;
  return result;
}

double sub_1000AE520()
{
  swift_getKeyPath();
  sub_1000B5C54(&qword_100158818, (void (*)(uint64_t))type metadata accessor for TrackPageViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(double *)(v0 + 200);
}

uint64_t sub_1000AE5C0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000060EC(&qword_100157818);
  __chkstk_darwin(v2 - 8);
  uint64_t v54 = (char *)&v54 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  uint64_t v56 = v0;
  sub_1000B5C54(&qword_100158818, (void (*)(uint64_t))type metadata accessor for TrackPageViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  sub_100009C94(v0 + 320, (uint64_t)v57, &qword_100158B40);
  uint64_t v4 = v58;
  if (v58)
  {
    uint64_t v5 = v59;
    uint64_t v6 = sub_100010740(v57, v58);
    uint64_t v7 = *(void *)(v4 - 8);
    __chkstk_darwin(v6);
    uint64_t v9 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v7 + 16))(v9);
    sub_1000063D0((uint64_t)v57, &qword_100158B40);
    (*(void (**)(uint64_t, uint64_t))(v5 + 16))(v4, v5);
    uint64_t v11 = v10;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v4);
    if (v11) {
      goto LABEL_23;
    }
  }
  else
  {
    sub_1000063D0((uint64_t)v57, &qword_100158B40);
  }
  swift_getKeyPath();
  uint64_t v55 = v1;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  sub_100009C94(v1 + 320, (uint64_t)v57, &qword_100158B40);
  uint64_t v12 = v58;
  if (v58)
  {
    uint64_t v13 = v59;
    long long v14 = sub_100010740(v57, v58);
    uint64_t v15 = *(void *)(v12 - 8);
    __chkstk_darwin(v14);
    uint64_t v17 = (char *)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v15 + 16))(v17);
    sub_1000063D0((uint64_t)v57, &qword_100158B40);
    (*(void (**)(uint64_t, uint64_t))(v13 + 40))(v12, v13);
    uint64_t v19 = v18;
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v12);
    if (v19) {
      goto LABEL_23;
    }
  }
  else
  {
    sub_1000063D0((uint64_t)v57, &qword_100158B40);
  }
  swift_getKeyPath();
  uint64_t v55 = v1;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  sub_100009C94(v1 + 320, (uint64_t)v57, &qword_100158B40);
  uint64_t v20 = v58;
  if (v58)
  {
    uint64_t v21 = v59;
    long long v22 = sub_100010740(v57, v58);
    uint64_t v23 = *(void *)(v20 - 8);
    __chkstk_darwin(v22);
    uint64_t v25 = (char *)&v54 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v23 + 16))(v25);
    sub_1000063D0((uint64_t)v57, &qword_100158B40);
    uint64_t v26 = (uint64_t)v54;
    (*(void (**)(uint64_t, uint64_t))(v21 + 24))(v20, v21);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v20);
    uint64_t v27 = type metadata accessor for Date();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 48))(v26, 1, v27) != 1)
    {
      sub_1000063D0(v26, &qword_100157818);
      return 1;
    }
  }
  else
  {
    sub_1000063D0((uint64_t)v57, &qword_100158B40);
    uint64_t v28 = type metadata accessor for Date();
    uint64_t v26 = (uint64_t)v54;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v54, 1, 1, v28);
  }
  sub_1000063D0(v26, &qword_100157818);
  swift_getKeyPath();
  uint64_t v55 = v1;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  sub_100009C94(v1 + 320, (uint64_t)v57, &qword_100158B40);
  uint64_t v29 = v58;
  if (v58)
  {
    uint64_t v30 = v59;
    uint64_t v31 = sub_100010740(v57, v58);
    uint64_t v32 = *(void *)(v29 - 8);
    __chkstk_darwin(v31);
    uint64_t v34 = (char *)&v54 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v32 + 16))(v34);
    sub_1000063D0((uint64_t)v57, &qword_100158B40);
    (*(void (**)(uint64_t, uint64_t))(v30 + 48))(v29, v30);
    uint64_t v36 = v35;
    (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v29);
    if (v36) {
      goto LABEL_23;
    }
  }
  else
  {
    sub_1000063D0((uint64_t)v57, &qword_100158B40);
  }
  swift_getKeyPath();
  uint64_t v55 = v1;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  sub_100009C94(v1 + 320, (uint64_t)v57, &qword_100158B40);
  uint64_t v37 = v58;
  if (!v58)
  {
    sub_1000063D0((uint64_t)v57, &qword_100158B40);
    goto LABEL_21;
  }
  uint64_t v38 = v59;
  uint64_t v39 = sub_100010740(v57, v58);
  uint64_t v40 = *(void *)(v37 - 8);
  __chkstk_darwin(v39);
  uint64_t v42 = (char *)&v54 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v40 + 16))(v42);
  sub_1000063D0((uint64_t)v57, &qword_100158B40);
  (*(void (**)(uint64_t, uint64_t))(v38 + 56))(v37, v38);
  uint64_t v44 = v43;
  (*(void (**)(char *, uint64_t))(v40 + 8))(v42, v37);
  if (v44)
  {
LABEL_23:
    swift_bridgeObjectRelease();
    return 1;
  }
LABEL_21:
  swift_getKeyPath();
  uint64_t v55 = v1;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  sub_100009C94(v1 + 320, (uint64_t)v57, &qword_100158B40);
  uint64_t v45 = v58;
  if (v58)
  {
    uint64_t v46 = v59;
    uint64_t v47 = sub_100010740(v57, v58);
    uint64_t v48 = *(void *)(v45 - 8);
    __chkstk_darwin(v47);
    uint64_t v50 = (char *)&v54 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v48 + 16))(v50);
    sub_1000063D0((uint64_t)v57, &qword_100158B40);
    (*(void (**)(uint64_t, uint64_t))(v46 + 64))(v45, v46);
    uint64_t v52 = v51;
    (*(void (**)(char *, uint64_t))(v48 + 8))(v50, v45);
    if (v52) {
      goto LABEL_23;
    }
  }
  else
  {
    sub_1000063D0((uint64_t)v57, &qword_100158B40);
  }
  return 0;
}

uint64_t sub_1000AEF7C()
{
  swift_getKeyPath();
  sub_1000B5C54(&qword_100158818, (void (*)(uint64_t))type metadata accessor for TrackPageViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(unsigned __int8 *)(v0 + 584);
}

double sub_1000AF01C()
{
  swift_getKeyPath();
  sub_1000B5C54(&qword_100158818, (void (*)(uint64_t))type metadata accessor for TrackPageViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(double *)(v0 + 160);
}

uint64_t sub_1000AF0BC()
{
  swift_getKeyPath();
  sub_1000B5C54(&qword_100158818, (void (*)(uint64_t))type metadata accessor for TrackPageViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(unsigned __int8 *)(v0 + 24);
}

uint64_t sub_1000AF15C()
{
  return swift_retain();
}

uint64_t sub_1000AF200(double a1)
{
  uint64_t v3 = type metadata accessor for UserInterfaceSizeClass();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v10[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *, void, uint64_t))(v4 + 104))(v6, enum case for UserInterfaceSizeClass.compact(_:), v3);
  char v7 = static UserInterfaceSizeClass.== infix(_:_:)();
  (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
  if (v7) {
    double v8 = a1 + -64.0;
  }
  else {
    double v8 = a1 * 0.6;
  }
  swift_getKeyPath();
  uint64_t v11 = v1;
  double v12 = v8;
  uint64_t v13 = v1;
  sub_1000B5C54(&qword_100158818, (void (*)(uint64_t))type metadata accessor for TrackPageViewModel);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  return swift_release();
}

double sub_1000AF3D8@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1000B5C54(&qword_100158818, (void (*)(uint64_t))type metadata accessor for TrackPageViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  double result = *(double *)(v3 + 16);
  *a2 = result;
  return result;
}

uint64_t sub_1000AF480()
{
  return swift_release();
}

uint64_t sub_1000AF558@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1000B5C54(&qword_100158818, (void (*)(uint64_t))type metadata accessor for TrackPageViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + 24);
  return result;
}

uint64_t sub_1000AF600()
{
  return swift_release();
}

uint64_t sub_1000AF6D0()
{
  uint64_t v1 = sub_1000060EC(&qword_100158950);
  __chkstk_darwin(v1 - 8);
  uint64_t v71 = (char *)&v64 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1000060EC(&qword_100158958);
  __chkstk_darwin(v3 - 8);
  uint64_t v70 = (char *)&v64 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000060EC((uint64_t *)&unk_100158FC0);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  double v8 = (char *)&v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v11 = (char *)&v64 - v10;
  uint64_t v12 = __chkstk_darwin(v9);
  long long v14 = (char *)&v64 - v13;
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v64 - v15;
  swift_getKeyPath();
  uint64_t v17 = v0 + OBJC_IVAR____TtC16MusicRecognition18TrackPageViewModel___observationRegistrar;
  v77[0] = v0;
  sub_1000B5C54(&qword_100158818, (void (*)(uint64_t))type metadata accessor for TrackPageViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  sub_100056D74(v0 + 32, (uint64_t)&v74);
  if (v76) {
    return sub_100058884((uint64_t)&v74);
  }
  uint64_t v65 = v11;
  uint64_t v66 = v14;
  uint64_t v67 = v16;
  uint64_t v68 = v8;
  sub_100056DD0(&v74, (uint64_t)v77);
  sub_1000B61C8((uint64_t)v77, (uint64_t)&v74);
  uint64_t KeyPath = swift_getKeyPath();
  __chkstk_darwin(KeyPath);
  *(&v64 - 2) = v0;
  *(&v64 - 1) = (uint64_t)&v74;
  uint64_t v73 = v0;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  sub_1000063D0((uint64_t)&v74, &qword_100158B40);
  swift_getKeyPath();
  *(void *)&long long v74 = v0;
  uint64_t v69 = v17;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v20 = *(void **)(v0 + 560);
  uint64_t v21 = v0;
  if (!v20)
  {
    uint64_t v28 = type metadata accessor for URL();
    uint64_t v24 = (uint64_t)v66;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v66, 1, 1, v28);
    uint64_t v29 = (uint64_t)v68;
    uint64_t v30 = (uint64_t)v70;
    uint64_t v23 = (uint64_t)v71;
    goto LABEL_9;
  }
  id v22 = [v20 artworkURL];
  uint64_t v23 = (uint64_t)v71;
  uint64_t v24 = (uint64_t)v66;
  if (v22)
  {
    uint64_t v25 = v22;
    uint64_t v26 = (uint64_t)v65;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v27 = type metadata accessor for URL();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v26, 0, 1, v27);
  }
  else
  {
    uint64_t v27 = type metadata accessor for URL();
    uint64_t v26 = (uint64_t)v65;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v65, 1, 1, v27);
  }
  uint64_t v29 = (uint64_t)v68;
  sub_100009C30(v26, v24, (uint64_t *)&unk_100158FC0);
  type metadata accessor for URL();
  uint64_t v31 = *(void *)(v27 - 8);
  int v32 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v31 + 48))(v24, 1, v27);
  uint64_t v30 = (uint64_t)v70;
  if (v32 == 1)
  {
LABEL_9:
    swift_getKeyPath();
    uint64_t v73 = v21;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    swift_beginAccess();
    sub_100009C94(v21 + 320, (uint64_t)&v74, &qword_100158B40);
    uint64_t v33 = v75;
    if (!v75)
    {
      sub_1000063D0((uint64_t)&v74, &qword_100158B40);
      goto LABEL_14;
    }
    uint64_t v34 = sub_100010740(&v74, v75);
    uint64_t v35 = *(void *)(v33 - 8);
    __chkstk_darwin(v34);
    uint64_t v37 = (char *)&v64 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v35 + 16))(v37);
    sub_1000063D0((uint64_t)&v74, &qword_100158B40);
    uint64_t v38 = type metadata accessor for TrackPageMetadata();
    sub_100009C94((uint64_t)&v37[*(int *)(v38 + 28)], v30, &qword_100158958);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v37, v33);
    uint64_t v39 = type metadata accessor for AnyArtist();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 48))(v30, 1, v39) == 1)
    {
      sub_1000063D0(v30, &qword_100158958);
      uint64_t v29 = (uint64_t)v68;
LABEL_14:
      uint64_t v41 = type metadata accessor for URL();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v67, 1, 1, v41);
LABEL_22:
      sub_1000063D0(v24, (uint64_t *)&unk_100158FC0);
      goto LABEL_23;
    }
    uint64_t v70 = (char *)&v64;
    swift_getKeyPath();
    uint64_t v72 = v21;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    uint64_t result = swift_release();
    double v42 = *(double *)(v21 + 16);
    if ((~*(void *)&v42 & 0x7FF0000000000000) != 0)
    {
      uint64_t v29 = (uint64_t)v68;
      if (v42 > -9.22337204e18)
      {
        if (v42 < 9.22337204e18)
        {
          swift_getKeyPath();
          uint64_t v72 = v21;
          ObservationRegistrar.access<A, B>(_:keyPath:)();
          uint64_t result = swift_release();
          double v43 = *(double *)(v21 + 16);
          if ((~*(void *)&v43 & 0x7FF0000000000000) != 0)
          {
            if (v43 > -9.22337204e18)
            {
              if (v43 < 9.22337204e18)
              {
                uint64_t v44 = (uint64_t)v43;
                uint64_t v45 = (void *)(v30 + *(int *)(v39 + 20));
                uint64_t v46 = v45[3];
                uint64_t v47 = v45[4];
                sub_100010740(v45, v46);
                (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v47 + 56))((uint64_t)v42, v44, v46, v47);
                sub_1000B5A68(v30, (uint64_t (*)(void))type metadata accessor for AnyArtist);
                uint64_t v23 = (uint64_t)v71;
                goto LABEL_22;
              }
LABEL_35:
              __break(1u);
              return result;
            }
LABEL_34:
            __break(1u);
            goto LABEL_35;
          }
LABEL_33:
          __break(1u);
          goto LABEL_34;
        }
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v40 = (uint64_t)v67;
  (*(void (**)(char *, uint64_t, uint64_t))(v31 + 32))(v67, v24, v27);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v31 + 56))(v40, 0, 1, v27);
LABEL_23:
  swift_getKeyPath();
  uint64_t v72 = v21;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  sub_100009C94(v21 + 320, (uint64_t)&v74, &qword_100158B40);
  uint64_t v48 = v75;
  if (v75)
  {
    uint64_t v49 = sub_100010740(&v74, v75);
    uint64_t v71 = (char *)&v64;
    uint64_t v50 = *(void *)(v48 - 8);
    __chkstk_darwin(v49);
    uint64_t v52 = (char *)&v64 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v50 + 16))(v52);
    sub_1000063D0((uint64_t)&v74, &qword_100158B40);
    uint64_t v53 = type metadata accessor for TrackPageMetadata();
    sub_100009C94((uint64_t)&v52[*(int *)(v53 + 32)], v23, &qword_100158950);
    uint64_t v54 = type metadata accessor for AnyAlbum();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 48))(v23, 1, v54) == 1)
    {
      sub_1000063D0(v23, &qword_100158950);
      uint64_t v55 = type metadata accessor for URL();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56))(v29, 1, 1, v55);
    }
    else
    {
      uint64_t v57 = (void *)(v23 + *(int *)(v54 + 20));
      uint64_t v58 = v23;
      uint64_t v59 = v57[3];
      uint64_t v60 = v57[4];
      sub_100010740(v57, v59);
      uint64_t v61 = *(void (**)(uint64_t, uint64_t))(v60 + 8);
      uint64_t v62 = v60;
      uint64_t v29 = (uint64_t)v68;
      v61(v59, v62);
      sub_1000B5A68(v58, (uint64_t (*)(void))type metadata accessor for AnyAlbum);
    }
    (*(void (**)(char *, uint64_t))(v50 + 8))(v52, v48);
  }
  else
  {
    sub_1000063D0((uint64_t)&v74, &qword_100158B40);
    uint64_t v56 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(v29, 1, 1, v56);
  }
  swift_getKeyPath();
  *(void *)&long long v74 = v21;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_retain();
  uint64_t v63 = (uint64_t)v67;
  sub_1000ECEA4((uint64_t)v67, v29);
  swift_release();
  sub_1000063D0(v29, (uint64_t *)&unk_100158FC0);
  sub_1000063D0(v63, (uint64_t *)&unk_100158FC0);
  return _s16MusicRecognition11AnyPlaylistVwxx_0((uint64_t)v77);
}

void *sub_1000B0250()
{
  swift_getKeyPath();
  sub_1000B5C54(&qword_100158818, (void (*)(uint64_t))type metadata accessor for TrackPageViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v1 = *(void **)(v0 + 560);
  id v2 = v1;
  return v1;
}

uint64_t sub_1000B02F8@<X0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  sub_1000B5C54(&qword_100158818, (void (*)(uint64_t))type metadata accessor for TrackPageViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  return sub_100009C94(v1 + 320, a1, &qword_100158B40);
}

uint64_t sub_1000B03C4(uint64_t a1, uint64_t a2)
{
  sub_100056D74(a2, (uint64_t)v4);
  swift_beginAccess();
  sub_1000B6190(v4, a1 + 32);
  swift_endAccess();
  sub_1000AF6D0();
  return sub_100058884((uint64_t)v4);
}

uint64_t sub_1000B0444(uint64_t result, double a2)
{
  *(double *)(result + 144) = a2;
  return result;
}

uint64_t sub_1000B044C(uint64_t result, double a2)
{
  *(double *)(result + 152) = a2;
  return result;
}

uint64_t sub_1000B0454(uint64_t result, double a2)
{
  *(double *)(result + 160) = a2;
  return result;
}

double sub_1000B045C()
{
  swift_getKeyPath();
  sub_1000B5C54(&qword_100158818, (void (*)(uint64_t))type metadata accessor for TrackPageViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(double *)(v0 + 168);
}

uint64_t sub_1000B04FC(uint64_t result, double a2)
{
  *(double *)(result + 168) = a2;
  return result;
}

double sub_1000B0504()
{
  swift_getKeyPath();
  sub_1000B5C54(&qword_100158818, (void (*)(uint64_t))type metadata accessor for TrackPageViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(double *)(v0 + 176);
}

uint64_t sub_1000B05A4(uint64_t result, double a2)
{
  *(double *)(result + 176) = a2;
  return result;
}

double sub_1000B05AC()
{
  swift_getKeyPath();
  sub_1000B5C54(&qword_100158818, (void (*)(uint64_t))type metadata accessor for TrackPageViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(double *)(v0 + 184);
}

uint64_t sub_1000B064C(uint64_t result, double a2)
{
  *(double *)(result + 184) = a2;
  return result;
}

uint64_t sub_1000B0654()
{
  swift_getKeyPath();
  sub_1000B5C54(&qword_100158818, (void (*)(uint64_t))type metadata accessor for TrackPageViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(unsigned __int8 *)(v0 + 192);
}

uint64_t sub_1000B06F4@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1000B5C54(&qword_100158818, (void (*)(uint64_t))type metadata accessor for TrackPageViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + 192);
  return result;
}

uint64_t sub_1000B079C()
{
  return swift_release();
}

uint64_t sub_1000B086C(uint64_t result, double a2)
{
  *(double *)(result + 200) = a2;
  return result;
}

uint64_t sub_1000B0874@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1000B5C54(&qword_100158818, (void (*)(uint64_t))type metadata accessor for TrackPageViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  *a2 = *(void *)(v3 + 208);
  return swift_retain();
}

uint64_t sub_1000B0920()
{
  return swift_release();
}

uint64_t sub_1000B0A00@<X0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  sub_1000B5C54(&qword_100158818, (void (*)(uint64_t))type metadata accessor for TrackPageViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  return sub_100009C94(v1 + 216, a1, &qword_1001588C0);
}

uint64_t sub_1000B0ACC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1000B5C54(&qword_100158818, (void (*)(uint64_t))type metadata accessor for TrackPageViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  return sub_100009C94(v3 + 216, a2, &qword_1001588C0);
}

uint64_t sub_1000B0B98(uint64_t a1)
{
  sub_100009C94(a1, (uint64_t)v2, &qword_1001588C0);
  swift_getKeyPath();
  sub_1000B5C54(&qword_100158818, (void (*)(uint64_t))type metadata accessor for TrackPageViewModel);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  return sub_1000063D0((uint64_t)v2, &qword_1001588C0);
}

uint64_t sub_1000B0C88(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + 216;
  swift_beginAccess();
  sub_1000B62BC(a2, v3, &qword_1001588C0);
  return swift_endAccess();
}

uint64_t sub_1000B0CF4@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1000B5C54(&qword_100158818, (void (*)(uint64_t))type metadata accessor for TrackPageViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  *a2 = *(void *)(v3 + 264);
  return swift_retain();
}

uint64_t sub_1000B0DA0()
{
  return swift_release();
}

uint64_t sub_1000B0E80()
{
  swift_getKeyPath();
  v14[0] = v0;
  sub_1000B5C54(&qword_100158818, (void (*)(uint64_t))type metadata accessor for TrackPageViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  sub_100009C94(v0 + 320, (uint64_t)v14, &qword_100158B40);
  uint64_t v1 = v15;
  if (v15)
  {
    uint64_t v2 = v16;
    uint64_t v3 = sub_100010740(v14, v15);
    uint64_t v4 = *(void *)(v1 - 8);
    __chkstk_darwin(v3);
    uint64_t v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
    (*(void (**)(unsigned char *))(v4 + 16))(v6);
    sub_1000063D0((uint64_t)v14, &qword_100158B40);
    uint64_t v7 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 72))(v1, v2);
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v1);
    if (v7)
    {
      [v7 coordinate];
      if (v8 == 0.0)
      {
        [v7 coordinate];
        BOOL v10 = v9 != 0.0;
      }
      else
      {
        BOOL v10 = 1;
      }
      [v7 coordinate];
      BOOL v12 = CLLocationCoordinate2DIsValid(v17);

      return v12 & v10;
    }
    else
    {
      return 0;
    }
  }
  else
  {
    sub_1000063D0((uint64_t)v14, &qword_100158B40);
    return 0;
  }
}

id sub_1000B10C0@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1000B5C54(&qword_100158818, (void (*)(uint64_t))type metadata accessor for TrackPageViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v4 = *(void **)(v3 + 272);
  *a2 = v4;

  return v4;
}

void sub_1000B1178(void **a1)
{
  uint64_t v1 = *a1;
  swift_getKeyPath();
  sub_1000B5C54(&qword_100158818, (void (*)(uint64_t))type metadata accessor for TrackPageViewModel);
  id v2 = v1;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
}

uint64_t sub_1000B1254@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1000B5C54(&qword_100158818, (void (*)(uint64_t))type metadata accessor for TrackPageViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  return sub_100009C94(v3 + 280, a2, &qword_100158BA0);
}

uint64_t sub_1000B1320(uint64_t a1)
{
  sub_100009C94(a1, (uint64_t)v2, &qword_100158BA0);
  swift_getKeyPath();
  sub_1000B5C54(&qword_100158818, (void (*)(uint64_t))type metadata accessor for TrackPageViewModel);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  return sub_1000063D0((uint64_t)v2, &qword_100158BA0);
}

uint64_t sub_1000B1410(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + 280;
  swift_beginAccess();
  sub_1000B62BC(a2, v3, &qword_100158BA0);
  return swift_endAccess();
}

uint64_t sub_1000B147C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1000B5C54(&qword_100158818, (void (*)(uint64_t))type metadata accessor for TrackPageViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  return sub_100009C94(v3 + 320, a2, &qword_100158B40);
}

uint64_t sub_1000B1548(uint64_t a1)
{
  sub_100009C94(a1, (uint64_t)v2, &qword_100158B40);
  swift_getKeyPath();
  sub_1000B5C54(&qword_100158818, (void (*)(uint64_t))type metadata accessor for TrackPageViewModel);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  return sub_1000063D0((uint64_t)v2, &qword_100158B40);
}

uint64_t sub_1000B1638(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + 320;
  swift_beginAccess();
  sub_1000B62BC(a2, v3, &qword_100158B40);
  return swift_endAccess();
}

id sub_1000B16A4@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1000B5C54(&qword_100158818, (void (*)(uint64_t))type metadata accessor for TrackPageViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v4 = *(void **)(v3 + 560);
  *a2 = v4;

  return v4;
}

void sub_1000B175C(void **a1)
{
  uint64_t v1 = *a1;
  swift_getKeyPath();
  sub_1000B5C54(&qword_100158818, (void (*)(uint64_t))type metadata accessor for TrackPageViewModel);
  id v2 = v1;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
}

uint64_t sub_1000B1838@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1000B5C54(&qword_100158818, (void (*)(uint64_t))type metadata accessor for TrackPageViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v4 = *(void *)(v3 + 576);
  *a2 = *(void *)(v3 + 568);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1000B18E8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000B19CC(uint64_t result, char a2)
{
  *(unsigned char *)(result + 584) = a2;
  return result;
}

uint64_t sub_1000B19D4()
{
  v1[16] = v0;
  type metadata accessor for MainActor();
  v1[17] = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[18] = v3;
  v1[19] = v2;
  return _swift_task_switch(sub_1000B1A6C, v3, v2);
}

uint64_t sub_1000B1A6C()
{
  uint64_t v1 = v0[16];
  swift_getKeyPath();
  v0[10] = v1;
  sub_1000B5C54(&qword_100158818, (void (*)(uint64_t))type metadata accessor for TrackPageViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (*(unsigned char *)(v1 + 24))
  {
    swift_release();
    uint64_t v2 = (uint64_t (*)(void))v0[1];
    return v2(0);
  }
  else
  {
    uint64_t v4 = *(void **)(v0[16] + 488);
    v0[2] = v0;
    v0[7] = v0 + 15;
    v0[3] = sub_1000B1C24;
    uint64_t v5 = swift_continuation_init();
    v0[10] = _NSConcreteStackBlock;
    v0[11] = 0x40000000;
    v0[12] = sub_100061B14;
    v0[13] = &unk_10014C630;
    v0[14] = v5;
    [v4 offerValuesWithCompletion:v0 + 10];
    return _swift_continuation_await(v0 + 2);
  }
}

uint64_t sub_1000B1C24()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 160) = v2;
  uint64_t v3 = *(void *)(v1 + 152);
  uint64_t v4 = *(void *)(v1 + 144);
  if (v2) {
    uint64_t v5 = sub_1000B1DB8;
  }
  else {
    uint64_t v5 = sub_1000B1D54;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_1000B1D54()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_1000B1DB8()
{
  swift_release();
  swift_willThrow();
  if (qword_100156018 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000E808(v1, (uint64_t)qword_100164B38);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138412290;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 80) = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v5 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Error fetching Shazam offers: %@", v4, 0xCu);
    sub_1000060EC((uint64_t *)&unk_1001570F0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7(0);
}

uint64_t sub_1000B1FD0(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 88) = a1;
  *(void *)(v2 + 96) = a2;
  return _swift_task_switch(sub_1000B1FF0, 0, 0);
}

uint64_t sub_1000B1FF0()
{
  *(void *)(v0 + 104) = type metadata accessor for MainActor();
  *(void *)(v0 + 112) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1000B2088, v2, v1);
}

uint64_t sub_1000B2088()
{
  uint64_t v1 = v0[12];
  swift_release();
  swift_getKeyPath();
  v0[10] = v1;
  sub_1000B5C54(&qword_100158818, (void (*)(uint64_t))type metadata accessor for TrackPageViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  v0[15] = *(void *)(v1 + 568);
  v0[16] = *(void *)(v1 + 576);
  swift_bridgeObjectRetain();
  v0[17] = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  v0[18] = v3;
  v0[19] = v2;
  return _swift_task_switch(sub_1000B21B0, v3, v2);
}

uint64_t sub_1000B21B0()
{
  uint64_t v1 = v0[16];
  if (v1)
  {
    uint64_t v2 = self;
    swift_bridgeObjectRetain();
    id v3 = [v2 sharedInstance];
    uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10015A808 + dword_10015A808);
    uint64_t v4 = (void *)swift_task_alloc();
    v0[20] = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_1000B2300;
    uint64_t v5 = v0[15];
    return v9((uint64_t)(v0 + 2), v5, v1, (uint64_t)v3);
  }
  else
  {
    swift_release();
    uint64_t v7 = (_OWORD *)v0[11];
    _OWORD *v7 = xmmword_100114350;
    v7[1] = 0u;
    void v7[2] = 0u;
    v7[3] = 0u;
    double v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
}

uint64_t sub_1000B2300()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  long long v2 = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(v1 + 168) = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v1 + 184) = v2;
  long long v3 = *(_OWORD *)(v1 + 64);
  *(_OWORD *)(v1 + 200) = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(v1 + 216) = v3;
  uint64_t v4 = *(void *)(v1 + 152);
  uint64_t v5 = *(void *)(v1 + 144);
  return _swift_task_switch(sub_1000B243C, v5, v4);
}

uint64_t sub_1000B243C()
{
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(_OWORD **)(v0 + 88);
  long long v2 = *(_OWORD *)(v0 + 184);
  long long v3 = *(_OWORD *)(v0 + 200);
  long long v4 = *(_OWORD *)(v0 + 216);
  _OWORD *v1 = *(_OWORD *)(v0 + 168);
  v1[1] = v2;
  v1[2] = v3;
  v1[3] = v4;
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_1000B24C0(uint64_t a1, int *a2)
{
  *(void *)(v2 + 80) = a1;
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  long long v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 88) = v3;
  *long long v3 = v2;
  v3[1] = sub_1000B25A0;
  return v5(v2 + 16);
}

uint64_t sub_1000B25A0()
{
  uint64_t v1 = *v0 + 16;
  uint64_t v2 = *(void *)(*v0 + 80);
  uint64_t v5 = *v0;
  swift_task_dealloc();
  sub_100009C30(v1, v2, &qword_10015B3C0);
  long long v3 = *(uint64_t (**)(void))(v5 + 8);
  return v3();
}

uint64_t sub_1000B26C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  _OWORD v4[5] = a4;
  v4[2] = a1;
  _OWORD v4[3] = a2;
  return _swift_task_switch(sub_1000B26E8, 0, 0);
}

uint64_t sub_1000B26E8()
{
  id v1 = [*(id *)(v0 + 40) appleMusicID];
  if (v1)
  {
    uint64_t v2 = v1;
    uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v5 = v4;
  }
  else
  {
    uint64_t v3 = 0;
    uint64_t v5 = 0;
  }
  *(void *)(v0 + 48) = v5;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_1000B27D0;
  uint64_t v7 = *(void *)(v0 + 24);
  uint64_t v8 = *(void *)(v0 + 32);
  uint64_t v9 = *(void *)(v0 + 16);
  return sub_100105924(v9, v7, v8, v3, v5);
}

uint64_t sub_1000B27D0()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  id v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1000B28E0(uint64_t a1, int *a2)
{
  uint64_t v5 = sub_1000060EC(&qword_10015B380);
  uint64_t v6 = a2;
  uint64_t v7 = a1 + *(int *)(v5 + 48);
  uint64_t v8 = a1 + *(int *)(v5 + 64);
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v6 + *v6);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_1000B29EC;
  return v11(a1, v7, v8);
}

uint64_t sub_1000B29EC()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  id v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1000B2AE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[18] = a3;
  v4[19] = v3;
  v4[16] = a1;
  v4[17] = a2;
  sub_1000060EC(&qword_100158950);
  v4[20] = swift_task_alloc();
  type metadata accessor for MainActor();
  v4[21] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[22] = v6;
  v4[23] = v5;
  return _swift_task_switch(sub_1000B2BB0, v6, v5);
}

uint64_t sub_1000B2BB0()
{
  uint64_t v2 = v0[19];
  uint64_t v1 = v0[20];
  uint64_t v3 = v0[17];
  uint64_t v25 = v0[18];
  uint64_t v4 = v0[16];
  uint64_t v5 = *(void **)(v2 + 488);
  swift_getKeyPath();
  v0[24] = OBJC_IVAR____TtC16MusicRecognition18TrackPageViewModel___observationRegistrar;
  v0[12] = v2;
  v0[25] = sub_1000B5C54(&qword_100158818, (void (*)(uint64_t))type metadata accessor for TrackPageViewModel);
  id v6 = v5;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  char v7 = *(unsigned char *)(v2 + 24);
  uint64_t v8 = (void *)(v4 + *(int *)(type metadata accessor for AnyArtist() + 20));
  uint64_t v9 = v8[3];
  uint64_t v10 = v8[4];
  sub_100010740(v8, v9);
  uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 16))(v9, v10);
  uint64_t v13 = v12;
  long long v14 = (void *)(v3 + *(int *)(type metadata accessor for AnySong() + 20));
  uint64_t v16 = v14[3];
  uint64_t v15 = v14[4];
  sub_100010740(v14, v16);
  uint64_t v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 16))(v16, v15);
  uint64_t v19 = v18;
  sub_1000B5998(v25, v1, (uint64_t (*)(void))type metadata accessor for AnyAlbum);
  uint64_t v20 = type metadata accessor for AnyAlbum();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v1, 0, 1, v20);
  v0[5] = type metadata accessor for StreamingServicesProvider();
  v0[6] = (uint64_t)&off_10014AF98;
  uint64_t v21 = sub_100057938(v0 + 2);
  id v22 = (void *)swift_task_alloc();
  v0[26] = (uint64_t)v22;
  *id v22 = v0;
  v22[1] = sub_1000B2E28;
  uint64_t v23 = v0[20];
  return sub_100060C34((uint64_t)v21, (uint64_t)v6, v7, v11, v13, v17, v19, v23);
}

uint64_t sub_1000B2E28()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 216) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 184);
  uint64_t v4 = *(void *)(v2 + 176);
  if (v0) {
    uint64_t v5 = sub_1000B3070;
  }
  else {
    uint64_t v5 = sub_1000B2F64;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_1000B2F64()
{
  uint64_t v1 = v0[19];
  swift_release();
  swift_getKeyPath();
  uint64_t v2 = swift_task_alloc();
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = v0 + 2;
  v0[15] = v1;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  swift_task_dealloc();
  sub_1000063D0((uint64_t)(v0 + 2), &qword_1001588C0);
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_1000B3070()
{
  swift_release();
  sub_1000B5AC8(v0 + 16);
  if (qword_100156018 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000E808(v1, (uint64_t)qword_100164B38);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138412290;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 112) = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v5 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Error initializing Streaming providers controller %@", v4, 0xCu);
    sub_1000060EC((uint64_t *)&unk_1001570F0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v7 = *(void *)(v0 + 152);

  *(void *)(v0 + 88) = 0;
  *(_OWORD *)(v0 + 72) = 0u;
  *(_OWORD *)(v0 + 56) = 0u;
  swift_getKeyPath();
  uint64_t v8 = swift_task_alloc();
  *(void *)(v8 + 16) = v7;
  *(void *)(v8 + 24) = v0 + 56;
  *(void *)(v0 + 104) = v7;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  swift_task_dealloc();
  sub_1000063D0(v0 + 56, &qword_1001588C0);
  swift_errorRelease();
  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_1000B3324(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v32 = a2;
  uint64_t v5 = sub_1000060EC((uint64_t *)&unk_100158FC0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v31 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000060EC(&qword_10015B378);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Song();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v31 - v19;
  if (a1)
  {
    sub_100009C94(v32, (uint64_t)v13, &qword_10015B378);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v20, v13, v14);
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v18, v20, v14);
      uint64_t v27 = sub_1000060EC(&qword_10015B3F8);
      swift_allocObject();
      uint64_t v28 = sub_1000B4148((uint64_t)v18);
      uint64_t v36 = v27;
      uint64_t v37 = &off_10014D898;
      v35[0] = v28;
      uint64_t KeyPath = swift_getKeyPath();
      __chkstk_darwin(KeyPath);
      uint64_t v30 = v33;
      *(&v31 - 2) = v33;
      *(&v31 - 1) = (char *)v35;
      uint64_t v34 = v30;
      sub_1000B5C54(&qword_100158818, (void (*)(uint64_t))type metadata accessor for TrackPageViewModel);
      ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
      swift_release();
      sub_1000063D0((uint64_t)v35, &qword_100158BA0);
      return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v20, v14);
    }
    sub_1000063D0((uint64_t)v13, &qword_10015B378);
  }
  sub_100009C94(a3, (uint64_t)v7, (uint64_t *)&unk_100158FC0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1) {
    return sub_1000063D0((uint64_t)v7, (uint64_t *)&unk_100158FC0);
  }
  uint64_t v22 = (uint64_t)v31;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v31, v7, v8);
  if (qword_1001561F8 != -1) {
    swift_once();
  }
  uint64_t v23 = (void *)qword_100164BF8;
  sub_10008E438(v22);
  uint64_t v36 = type metadata accessor for SongPreviewPlaybackController();
  uint64_t v37 = &off_10014BD38;
  v35[0] = v23;
  uint64_t v24 = swift_getKeyPath();
  __chkstk_darwin(v24);
  uint64_t v25 = v33;
  *(&v31 - 2) = v33;
  *(&v31 - 1) = (char *)v35;
  uint64_t v34 = v25;
  sub_1000B5C54(&qword_100158818, (void (*)(uint64_t))type metadata accessor for TrackPageViewModel);
  id v26 = v23;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  sub_1000063D0((uint64_t)v35, &qword_100158BA0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v22, v8);
}

uint64_t sub_1000B38A0()
{
  return swift_release();
}

uint64_t sub_1000B3978()
{
  return swift_release();
}

uint64_t sub_1000B3A50()
{
  sub_100058884(v0 + 32);
  swift_release();
  sub_1000063D0(v0 + 216, &qword_1001588C0);
  swift_release();

  sub_1000063D0(v0 + 280, &qword_100158BA0);
  sub_1000063D0(v0 + 320, &qword_100158B40);
  sub_1000B5290(*(void *)(v0 + 424), *(void *)(v0 + 432));

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  _s16MusicRecognition11AnyPlaylistVwxx_0(v0 + 592);
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MusicRecognition18TrackPageViewModel___observationRegistrar;
  uint64_t v2 = type metadata accessor for ObservationRegistrar();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t sub_1000B3B60()
{
  sub_1000B3A50();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v1, v2);
}

uint64_t sub_1000B3BB8()
{
  return type metadata accessor for TrackPageViewModel();
}

uint64_t type metadata accessor for TrackPageViewModel()
{
  uint64_t result = qword_10015B1F8;
  if (!qword_10015B1F8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000B3C0C()
{
  uint64_t result = type metadata accessor for ObservationRegistrar();
  if (v1 <= 0x3F) {
    return swift_updateClassMetadata2();
  }
  return result;
}

uint64_t destroy for TrackPageViewModel.LoadingState(uint64_t result)
{
  if (*(unsigned __int8 *)(result + 104) < 2u)
  {
    if (*(unsigned char *)(result + 104)) {
      return result;
    }
    return _s16MusicRecognition11AnyPlaylistVwxx_0(result);
  }
  if (*(_DWORD *)result == -2) {
    return _s16MusicRecognition11AnyPlaylistVwxx_0(result);
  }
  return result;
}

uint64_t initializeWithCopy for TrackPageViewModel.LoadingState(uint64_t a1, uint64_t a2)
{
  unsigned int v3 = *(unsigned __int8 *)(a2 + 104);
  if (v3 >= 2) {
    unsigned int v3 = *(_DWORD *)a2 + 2;
  }
  if (v3 == 1)
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    *(unsigned char *)(a1 + 104) = 1;
  }
  else if (v3)
  {
    long long v5 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v5;
    *(_OWORD *)(a1 + 89) = *(_OWORD *)(a2 + 89);
    long long v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    long long v7 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v7;
  }
  else
  {
    long long v4 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v4;
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    (**(void (***)(uint64_t))(v4 - 8))(a1);
    *(unsigned char *)(a1 + 104) = 0;
  }
  return a1;
}

uint64_t assignWithCopy for TrackPageViewModel.LoadingState(uint64_t a1, long long *a2)
{
  if ((long long *)a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 104);
    if (v4 >= 2) {
      unsigned int v4 = *(_DWORD *)a1 + 2;
    }
    if (!v4) {
      _s16MusicRecognition11AnyPlaylistVwxx_0(a1);
    }
    unsigned int v5 = *((unsigned __int8 *)a2 + 104);
    if (v5 >= 2) {
      unsigned int v5 = *(_DWORD *)a2 + 2;
    }
    if (v5 == 1)
    {
      *(unsigned char *)a1 = *(unsigned char *)a2;
      *(unsigned char *)(a1 + 104) = 1;
    }
    else if (v5)
    {
      long long v11 = *a2;
      long long v12 = a2[2];
      *(_OWORD *)(a1 + 16) = a2[1];
      *(_OWORD *)(a1 + 32) = v12;
      *(_OWORD *)a1 = v11;
      long long v13 = a2[3];
      long long v14 = a2[4];
      long long v15 = a2[5];
      *(_OWORD *)(a1 + 89) = *(long long *)((char *)a2 + 89);
      *(_OWORD *)(a1 + 64) = v14;
      *(_OWORD *)(a1 + 80) = v15;
      *(_OWORD *)(a1 + 48) = v13;
    }
    else
    {
      uint64_t v6 = *((void *)a2 + 3);
      *(void *)(a1 + 24) = v6;
      uint64_t v7 = *((void *)a2 + 12);
      long long v8 = a2[3];
      long long v9 = a2[4];
      long long v10 = a2[5];
      *(_OWORD *)(a1 + 32) = a2[2];
      *(_OWORD *)(a1 + 48) = v8;
      *(_OWORD *)(a1 + 64) = v9;
      *(_OWORD *)(a1 + 80) = v10;
      *(void *)(a1 + 96) = v7;
      (**(void (***)(uint64_t, long long *))(v6 - 8))(a1, a2);
      *(unsigned char *)(a1 + 104) = 0;
    }
  }
  return a1;
}

__n128 initializeWithTake for TrackPageViewModel.LoadingState(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[5];
  *(_OWORD *)(a1 + 89) = *(long long *)((char *)a2 + 89);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for TrackPageViewModel.LoadingState(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 104);
    if (v4 >= 2) {
      unsigned int v4 = *(_DWORD *)a1 + 2;
    }
    if (!v4) {
      _s16MusicRecognition11AnyPlaylistVwxx_0(a1);
    }
    unsigned int v5 = *(unsigned __int8 *)(a2 + 104);
    if (v5 >= 2) {
      unsigned int v5 = *(_DWORD *)a2 + 2;
    }
    if (v5 == 1)
    {
      *(unsigned char *)a1 = *(unsigned char *)a2;
      *(unsigned char *)(a1 + 104) = 1;
    }
    else
    {
      long long v6 = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 80) = v6;
      if (v5)
      {
        *(_OWORD *)(a1 + 89) = *(_OWORD *)(a2 + 89);
        long long v9 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v9;
        long long v10 = *(_OWORD *)(a2 + 48);
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        *(_OWORD *)(a1 + 48) = v10;
      }
      else
      {
        *(void *)(a1 + 96) = *(void *)(a2 + 96);
        long long v7 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v7;
        long long v8 = *(_OWORD *)(a2 + 48);
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        *(_OWORD *)(a1 + 48) = v8;
        *(unsigned char *)(a1 + 104) = 0;
      }
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for TrackPageViewModel.LoadingState(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 105)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 104);
  if (v3 >= 3) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for TrackPageViewModel.LoadingState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 89) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 80) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)__n128 result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)__n128 result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 105) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 105) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 104) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1000B40E0(uint64_t a1)
{
  uint64_t result = *(unsigned __int8 *)(a1 + 104);
  if (result >= 2) {
    return (*(_DWORD *)a1 + 2);
  }
  return result;
}

uint64_t sub_1000B40FC(uint64_t result, unsigned int a2)
{
  if (a2 > 1)
  {
    unsigned int v2 = a2 - 2;
    *(void *)(result + 96) = 0;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 80) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)uint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    LOBYTE(a2) = 2;
    *(_DWORD *)uint64_t result = v2;
  }
  *(unsigned char *)(result + 104) = a2;
  return result;
}

ValueMetadata *type metadata accessor for TrackPageViewModel.LoadingState()
{
  return &type metadata for TrackPageViewModel.LoadingState;
}

char *sub_1000B4148(uint64_t a1)
{
  unsigned int v2 = v1;
  uint64_t v36 = a1;
  uint64_t v4 = type metadata accessor for Song();
  uint64_t v37 = *(void *)(v4 - 8);
  uint64_t v5 = v37;
  uint64_t v38 = v4;
  uint64_t v41 = *(void *)(v37 + 64);
  __chkstk_darwin(v4);
  uint64_t v40 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000060EC(&qword_100157060);
  __chkstk_darwin(v7 - 8);
  long long v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000060EC(&qword_10015B400);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v42 = v10;
  uint64_t v43 = v11;
  __chkstk_darwin(v10);
  uint64_t v39 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000060EC(&qword_10015A528);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((void *)v1 + 2) = 0;
  uint64_t v17 = *(void *)(*(void *)v1 + 112);
  type metadata accessor for SystemMusicPlayer();
  *(void *)&v1[v17] = static SystemMusicPlayer.shared.getter();
  uint64_t v18 = &v2[*(void *)(*(void *)v2 + 120)];
  type metadata accessor for SongPreviewStatusController();
  uint64_t v19 = swift_allocObject();
  uint64_t v45 = 0;
  Published.init(initialValue:)();
  LOBYTE(v45) = 0;
  Published.init(initialValue:)();
  uint64_t v45 = v19;
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v18, v16, v13);
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v21 = v38;
  v20(&v2[*(void *)(*(void *)v2 + 104)], a1, v38);
  MusicPlayer.state.getter();
  uint64_t v22 = dispatch thunk of MusicPlayer.State.objectWillChange.getter();
  swift_release();
  uint64_t v45 = v22;
  id v44 = [self mainRunLoop];
  uint64_t v23 = type metadata accessor for NSRunLoop.SchedulerOptions();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v9, 1, 1, v23);
  sub_1000060EC(&qword_10015B408);
  sub_1000B5C14();
  sub_100006480(&qword_10015B410, &qword_10015B408);
  sub_1000B5C54((unint64_t *)&qword_100157090, (void (*)(uint64_t))sub_1000B5C14);
  uint64_t v24 = v39;
  Publisher.receive<A>(on:options:)();
  sub_1000063D0((uint64_t)v9, &qword_100157060);

  swift_release();
  uint64_t v25 = swift_allocObject();
  swift_weakInit();
  id v26 = v40;
  uint64_t v27 = v36;
  uint64_t v28 = v21;
  v20(v40, v36, v21);
  uint64_t v29 = v37;
  unint64_t v30 = (*(unsigned __int8 *)(v37 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
  uint64_t v31 = swift_allocObject();
  *(void *)(v31 + 16) = v25;
  (*(void (**)(unint64_t, char *, uint64_t))(v29 + 32))(v31 + v30, v26, v28);
  uint64_t v32 = swift_allocObject();
  *(void *)(v32 + 16) = sub_1000B5D68;
  *(void *)(v32 + 24) = v31;
  sub_100006480(&qword_10015B418, &qword_10015B400);
  uint64_t v33 = v42;
  uint64_t v34 = Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v24, v33);
  *((void *)v2 + 2) = v34;
  swift_release();
  sub_1000B5E0C();
  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v27, v28);
  return v2;
}

uint64_t sub_1000B4730(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for MusicPlayer.PlaybackStatus();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for MusicPlayer.Queue.Entry();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000060EC(&qword_10015B428);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000060EC(&qword_10015B430);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    v39[0] = v4;
    v39[1] = a2;
    dispatch thunk of SystemMusicPlayer.queue.getter();
    dispatch thunk of MusicPlayer.Queue.currentEntry.getter();
    swift_release();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v13, 1, v7))
    {
      uint64_t v18 = &qword_10015B428;
      uint64_t v19 = (uint64_t)v13;
LABEL_6:
      uint64_t v22 = sub_1000063D0(v19, v18);
LABEL_7:
      __chkstk_darwin(v22);
      uint64_t v23 = type metadata accessor for Song();
      v39[-2] = v23;
      v39[-1] = &protocol witness table for Song;
      uint64_t KeyPath = swift_getKeyPath();
      __chkstk_darwin(KeyPath);
      v39[-2] = v23;
      v39[-1] = &protocol witness table for Song;
      swift_getKeyPath();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      swift_getKeyPath();
      swift_getKeyPath();
      LOBYTE(v40) = 0;
      static Published.subscript.setter();
      return swift_release();
    }
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, v13, v7);
    sub_1000063D0((uint64_t)v13, &qword_10015B428);
    MusicPlayer.Queue.Entry.item.getter();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    uint64_t v20 = type metadata accessor for MusicPlayer.Queue.Entry.Item();
    uint64_t v21 = *(void *)(v20 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v16, 1, v20) == 1)
    {
      uint64_t v18 = &qword_10015B430;
      uint64_t v19 = (uint64_t)v16;
      goto LABEL_6;
    }
    uint64_t v25 = MusicPlayer.Queue.Entry.Item.id.getter();
    uint64_t v27 = v26;
    (*(void (**)(char *, uint64_t))(v21 + 8))(v16, v20);
    uint64_t v28 = type metadata accessor for Song();
    if (dispatch thunk of MusicItem.id.getter() == v25 && v29 == v27)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v30 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      uint64_t v22 = swift_bridgeObjectRelease();
      if ((v30 & 1) == 0) {
        goto LABEL_7;
      }
    }
    MusicPlayer.state.getter();
    dispatch thunk of MusicPlayer.State.playbackStatus.getter();
    swift_release();
    uint64_t v31 = v39[0];
    uint64_t v32 = (*(uint64_t (**)(char *, uint64_t))(v39[0] + 88))(v6, v3);
    if (v32 == enum case for MusicPlayer.PlaybackStatus.stopped(_:))
    {
      __chkstk_darwin(v32);
      v39[-2] = v28;
      v39[-1] = &protocol witness table for Song;
      uint64_t v33 = swift_getKeyPath();
      __chkstk_darwin(v33);
      v39[-2] = v28;
      v39[-1] = &protocol witness table for Song;
      swift_getKeyPath();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      swift_getKeyPath();
      swift_getKeyPath();
      LOBYTE(v40) = 0;
LABEL_25:
      swift_retain();
      static Published.subscript.setter();
      swift_release();
      return swift_release();
    }
    int v34 = v32;
    if (v32 == enum case for MusicPlayer.PlaybackStatus.playing(_:))
    {
      __chkstk_darwin(v32);
      v39[-2] = v28;
      v39[-1] = &protocol witness table for Song;
      uint64_t v35 = swift_getKeyPath();
      __chkstk_darwin(v35);
      v39[-2] = v28;
      v39[-1] = &protocol witness table for Song;
      swift_getKeyPath();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      swift_getKeyPath();
      swift_getKeyPath();
      char v36 = 1;
LABEL_24:
      LOBYTE(v40) = v36;
      goto LABEL_25;
    }
    if (v32 == enum case for MusicPlayer.PlaybackStatus.paused(_:)
      || v32 == enum case for MusicPlayer.PlaybackStatus.interrupted(_:))
    {
      __chkstk_darwin(v32);
      v39[-2] = v28;
      v39[-1] = &protocol witness table for Song;
      uint64_t v38 = swift_getKeyPath();
      __chkstk_darwin(v38);
      v39[-2] = v28;
      v39[-1] = &protocol witness table for Song;
      swift_getKeyPath();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      swift_getKeyPath();
      swift_getKeyPath();
      char v36 = 2;
      goto LABEL_24;
    }
    if (v32 == enum case for MusicPlayer.PlaybackStatus.seekingForward(_:)) {
      return swift_release();
    }
    int v37 = enum case for MusicPlayer.PlaybackStatus.seekingBackward(_:);
    uint64_t result = swift_release();
    if (v34 != v37) {
      return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v6, v3);
    }
  }
  return result;
}

uint64_t sub_1000B4F4C(uint64_t a1, uint64_t a2)
{
  v6[3] = type metadata accessor for MusicKitMusicLibrary();
  v6[4] = &off_10014B120;
  v6[0] = a1;
  sub_1000060EC(&qword_100159388);
  swift_allocObject();
  *(void *)(a2 + 16) = CurrentValueSubject.init(_:)();
  *(void *)(a2 + 64) = 0;
  sub_100009AD0((uint64_t)v6, a2 + 24);
  swift_allocObject();
  swift_weakInit();
  sub_100006480((unint64_t *)&qword_10015B3F0, &qword_100159388);
  swift_retain();
  uint64_t v4 = Publisher<>.sink(receiveValue:)();
  swift_release();
  swift_release();
  *(void *)(a2 + 64) = v4;
  swift_release();
  _s16MusicRecognition11AnyPlaylistVwxx_0((uint64_t)v6);
  return a2;
}

uint64_t sub_1000B5094(uint64_t a1, uint64_t a2)
{
  sub_100056D74(a1, (uint64_t)v14);
  sub_100056D74(a2, (uint64_t)&v16);
  if (!v15)
  {
    sub_100056D74((uint64_t)v14, (uint64_t)v13);
    if (v23)
    {
      _s16MusicRecognition11AnyPlaylistVwxx_0((uint64_t)v13);
      goto LABEL_9;
    }
    sub_100056DD0(v13, (uint64_t)v12);
    sub_100056DD0((long long *)&v16, (uint64_t)v11);
    sub_100010740(v12, v12[3]);
    uint64_t v5 = sub_1000C36D8();
    uint64_t v7 = v6;
    sub_100010740(v11, v11[3]);
    uint64_t v8 = sub_1000C36D8();
    if (v7)
    {
      if (v9)
      {
        if (v5 == v8 && v7 == v9)
        {
          swift_bridgeObjectRelease();
          char v3 = 1;
        }
        else
        {
          char v3 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
        }
      }
      else
      {
        char v3 = 0;
      }
    }
    else
    {
      if (!v9)
      {
        char v3 = 1;
        goto LABEL_21;
      }
      char v3 = 0;
    }
    swift_bridgeObjectRelease();
LABEL_21:
    _s16MusicRecognition11AnyPlaylistVwxx_0((uint64_t)v11);
    _s16MusicRecognition11AnyPlaylistVwxx_0((uint64_t)v12);
    goto LABEL_22;
  }
  if (v15 == 1)
  {
    sub_100056D74((uint64_t)v14, (uint64_t)v13);
    if (v23 == 1)
    {
      char v3 = LOBYTE(v13[0]) == v16;
LABEL_22:
      sub_100058884((uint64_t)v14);
      return v3 & 1;
    }
  }
  else if (v23 == 2)
  {
    int8x16_t v4 = vorrq_s8(vorrq_s8(vorrq_s8(v19, v21), vorrq_s8(v20, v22)), vorrq_s8(v17, v18));
    if (!(*(void *)&vorr_s8(*(int8x8_t *)v4.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v4, v4, 8uLL)) | v16))
    {
      sub_100058884((uint64_t)v14);
      char v3 = 1;
      return v3 & 1;
    }
  }
LABEL_9:
  sub_1000063D0((uint64_t)v14, &qword_10015B350);
  char v3 = 0;
  return v3 & 1;
}

uint64_t sub_1000B5290(uint64_t a1, uint64_t a2)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t getEnumTagSinglePayload for TrackPageViewModel.StateError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for TrackPageViewModel.StateError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000B5454);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TrackPageViewModel.StateError()
{
  return &type metadata for TrackPageViewModel.StateError;
}

unint64_t sub_1000B5490()
{
  unint64_t result = qword_10015B358;
  if (!qword_10015B358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_10015B358);
  }
  return result;
}

uint64_t sub_1000B54F4()
{
  return sub_1000B1410(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_1000B5510()
{
  *(unsigned char *)(*(void *)(v0 + 16) + 24) = *(unsigned char *)(v0 + 24);
}

void sub_1000B5540()
{
  uint64_t v1 = *(void *)(v0 + 16);
  int v2 = *(void **)(v0 + 24);
  int v3 = *(void **)(v1 + 272);
  *(void *)(v1 + 272) = v2;
  id v4 = v2;
}

uint64_t sub_1000B5578(uint64_t a1)
{
  id v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *id v4 = v2;
  v4[1] = sub_100015B24;
  v4[11] = a1;
  v4[12] = v1;
  return _swift_task_switch(sub_1000B1FF0, 0, 0);
}

uint64_t sub_1000B5624(uint64_t a1)
{
  id v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100014D10;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_10015B3B0 + dword_10015B3B0);
  return v6(a1, v4);
}

uint64_t sub_1000B56DC()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000B5714(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *(void *)(v3 + 16);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  void v9[4] = a3;
  v9[5] = v8;
  void v9[2] = a1;
  void v9[3] = a2;
  v9[1] = sub_100015B24;
  return _swift_task_switch(sub_1000B26E8, 0, 0);
}

uint64_t sub_1000B57D8(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100015B24;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_10015B3D8 + dword_10015B3D8);
  return v6(a1, v4);
}

uint64_t sub_1000B5890(uint64_t a1, uint64_t a2)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

void sub_1000B5900()
{
  *(unsigned char *)(*(void *)(v0 + 16) + 192) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_1000B5918()
{
  return sub_1000B5B98();
}

uint64_t sub_1000B5930(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000060EC((uint64_t *)&unk_100158FC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000B5998(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000B5A00(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000B5A68(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1000B5AC8(uint64_t result)
{
  if ((*(_DWORD *)(*(void *)(*(void *)(result + 24) - 8) + 80) & 0x20000) != 0) {
    return swift_slowDealloc();
  }
  return result;
}

uint64_t sub_1000B5B24()
{
  return sub_1000B0C88(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1000B5B40(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000B5B98()
{
  *(void *)(*(void *)(v0 + 16) + 264) = *(void *)(v0 + 24);
  swift_retain();
  return swift_release();
}

uint64_t sub_1000B5BD4()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000B5C0C()
{
  return sub_10000FCA0();
}

unint64_t sub_1000B5C14()
{
  unint64_t result = qword_100157080;
  if (!qword_100157080)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100157080);
  }
  return result;
}

uint64_t sub_1000B5C54(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000B5C9C()
{
  uint64_t v1 = type metadata accessor for Song();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1000B5D68()
{
  uint64_t v1 = *(void *)(type metadata accessor for Song() - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_1000B4730(v2, v3);
}

uint64_t sub_1000B5DCC()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000B5E04(uint64_t a1)
{
  return sub_100067F70(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_1000B5E0C()
{
  uint64_t v0 = sub_1000060EC(&qword_100157038);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v11 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for TaskPriority();
  uint64_t v4 = *(void *)(v3 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = 0;
  *(void *)(v5 + 24) = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_1000063D0((uint64_t)v2, &qword_100157038);
    uint64_t v6 = 0;
    uint64_t v7 = 0;
  }
  else
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v2, v3);
    if (*(void *)(v5 + 16))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v7 = v8;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v6 = 0;
      uint64_t v7 = 0;
    }
  }
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = &unk_10015B420;
  *(void *)(v9 + 24) = v5;
  if (v7 | v6)
  {
    v11[0] = 0;
    v11[1] = 0;
    v11[2] = v6;
    v11[3] = v7;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_1000B6038()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000B6070()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_100014D10;
  return sub_10008EFAC();
}

uint64_t sub_1000B6124()
{
  return 16;
}

__n128 sub_1000B6130(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1000B614C()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[4];
  *(void *)(v1 + 568) = v0[3];
  *(void *)(v1 + 576) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000B6190(long long *a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1000B61C8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  uint64_t v4 = *(void *)(a1 + 96);
  long long v5 = *(_OWORD *)(a1 + 48);
  long long v6 = *(_OWORD *)(a1 + 64);
  long long v7 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a2 + 48) = v5;
  *(_OWORD *)(a2 + 64) = v6;
  *(_OWORD *)(a2 + 80) = v7;
  *(void *)(a2 + 96) = v4;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1000B6244()
{
  return sub_1000B1638(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

double sub_1000B6270()
{
  double result = *(double *)(v0 + 24);
  *(double *)(*(void *)(v0 + 16) + 16) = result;
  return result;
}

uint64_t sub_1000B6280()
{
  *(void *)(*(void *)(v0 + 16) + 208) = *(void *)(v0 + 24);
  swift_retain();
  return swift_release();
}

uint64_t sub_1000B62BC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_1000060EC(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 24))(a2, a1, v5);
  return a2;
}

void sub_1000B6320()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void **)(v0 + 24);
  uint64_t v3 = *(void **)(v1 + 560);
  *(void *)(v1 + 560) = v2;
  id v4 = v2;
}

uint64_t sub_1000B6388()
{
  return sub_1000B38A0();
}

uint64_t sub_1000B63A4()
{
  return sub_1000B3978();
}

double sub_1000B63C8()
{
  double result = *(double *)(v0 + 24);
  *(double *)(*(void *)(v0 + 16) + 144) = result;
  return result;
}

double sub_1000B63E0()
{
  double result = *(double *)(v0 + 24);
  *(double *)(*(void *)(v0 + 16) + 152) = result;
  return result;
}

void sub_1000B63F8()
{
}

void sub_1000B6410()
{
}

void sub_1000B6428()
{
}

uint64_t sub_1000B6440()
{
  return sub_100058868();
}

uint64_t sub_1000B6458()
{
  return sub_1000B5B24();
}

uint64_t sub_1000B6470()
{
  return sub_1000B54F4();
}

uint64_t sub_1000B6488()
{
  return sub_1000B6244();
}

double sub_1000B64A0()
{
  return sub_1000B6270();
}

ValueMetadata *type metadata accessor for AmbientSceneAnimator()
{
  return &type metadata for AmbientSceneAnimator;
}

void sub_1000B64C8(void *a1)
{
  uint64_t v2 = self;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = a1;
  uint64_t v13 = sub_1000B68AC;
  uint64_t v14 = v3;
  uint64_t v9 = _NSConcreteStackBlock;
  uint64_t v10 = 1107296256;
  uint64_t v11 = sub_1000D559C;
  uint64_t v12 = &unk_10014C698;
  id v4 = _Block_copy(&v9);
  id v5 = a1;
  swift_release();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v5;
  uint64_t v13 = sub_1000B68E8;
  uint64_t v14 = v6;
  uint64_t v9 = _NSConcreteStackBlock;
  uint64_t v10 = 1107296256;
  uint64_t v11 = sub_1000B6658;
  uint64_t v12 = &unk_10014C6E8;
  long long v7 = _Block_copy(&v9);
  id v8 = v5;
  swift_release();
  [v2 animateWithDuration:v4 animations:v7 completion:0.3];
  _Block_release(v7);
  _Block_release(v4);
}

uint64_t sub_1000B6658(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);

  return swift_release();
}

id sub_1000B66AC()
{
  id result = [objc_allocWithZone((Class)UISpringTimingParameters) initWithMass:1.0 stiffness:120.0 damping:16.0 initialVelocity:0.0];
  qword_10015B438 = (uint64_t)result;
  return result;
}

id sub_1000B66F8()
{
  id result = [objc_allocWithZone((Class)UISpringTimingParameters) initWithMass:1.0 stiffness:120.0 damping:20.0 initialVelocity:0.0];
  qword_10015B440 = (uint64_t)result;
  return result;
}

id sub_1000B6744()
{
  id result = [objc_allocWithZone((Class)UISpringTimingParameters) initWithMass:1.0 stiffness:120.0 damping:20.0 initialVelocity:0.0];
  qword_10015B448 = (uint64_t)result;
  return result;
}

id sub_1000B6790()
{
  id result = [objc_allocWithZone((Class)UISpringTimingParameters) initWithMass:1.0 stiffness:200.0 damping:27.0 initialVelocity:0.0];
  qword_10015B450 = (uint64_t)result;
  return result;
}

void sub_1000B67DC()
{
  id v0 = [self blackColor];
  id v1 = [v0 CGColor];

  qword_10015B458 = (uint64_t)v1;
}

id sub_1000B6840(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + OBJC_IVAR____TtC16MusicRecognition23AmbientMatchingFlowView_listeningView)+ OBJC_IVAR____TtC16MusicRecognition20AmbientListeningView_listeningLabel) setAlpha:0.8];
}

uint64_t sub_1000B6874()
{
  return _swift_deallocObject(v0, 24, 7);
}

id sub_1000B68AC()
{
  return [*(id *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC16MusicRecognition23AmbientMatchingFlowView_listeningView) setAlpha:0.0];
}

uint64_t sub_1000B68D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000B68E0()
{
  return swift_release();
}

void sub_1000B68E8()
{
  id v1 = *(char **)(v0 + 16);
  sub_1000B6924(v1);

  sub_1000B6E78(v1);
}

void sub_1000B6924(char *a1)
{
  uint64_t v2 = *(void *)&a1[OBJC_IVAR____TtC16MusicRecognition23AmbientMatchingFlowView_matchView];
  uint64_t v3 = OBJC_IVAR____TtC16MusicRecognition16AmbientMatchView_albumArtImageView;
  id v4 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v2
                                                             + OBJC_IVAR____TtC16MusicRecognition16AmbientMatchView_albumArtImageView), "layer"));
  if (qword_100156448 != -1) {
    swift_once();
  }
  [v4 setBackgroundColor:qword_10015B458];

  id v5 = [*(id *)(v2 + v3) layer];
  [v5 setOpacity:0.0];

  id v6 = *(id *)(v2 + v3);
  [v6 transform];
  CGAffineTransformScale(&v26, &aBlock, 0.9, 0.9);
  CGAffineTransform aBlock = v26;
  [v6 setTransform:&aBlock];

  uint64_t v7 = OBJC_IVAR____TtC16MusicRecognition16AmbientMatchView_placeholderArtworkView;
  id v8 = [*(id *)(v2 + OBJC_IVAR____TtC16MusicRecognition16AmbientMatchView_placeholderArtworkView) layer];
  [v8 setBackgroundColor:qword_10015B458];

  id v9 = [*(id *)(v2 + v7) layer];
  [v9 setOpacity:0.0];

  id v10 = *(id *)(v2 + v7);
  [v10 transform];
  CGAffineTransformScale(&v26, &aBlock, 0.9, 0.9);
  CGAffineTransform aBlock = v26;
  [v10 setTransform:&aBlock];

  id v11 = sub_100108C40();
  [v11 setConstant:0.0];

  id v12 = sub_100108C54();
  [v12 setConstant:0.0];

  if (qword_100156428 != -1) {
    swift_once();
  }
  id v13 = [objc_allocWithZone((Class)UIViewPropertyAnimator) initWithDuration:qword_10015B438 timingParameters:0.0];
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  *(void *)&aBlock.tx = sub_1000B7940;
  *(void *)&aBlock.ty = v14;
  *(void *)&aBlock.a = _NSConcreteStackBlock;
  *(void *)&aBlock.b = 1107296256;
  *(void *)&aBlock.c = sub_1000D559C;
  *(void *)&aBlock.d = &unk_10014C918;
  char v15 = _Block_copy(&aBlock);
  uint64_t v16 = a1;
  swift_release();
  [v13 addAnimations:v15];
  _Block_release(v15);
  if (qword_100156430 != -1) {
    swift_once();
  }
  id v17 = [objc_allocWithZone((Class)UIViewPropertyAnimator) initWithDuration:qword_10015B440 timingParameters:0.0];
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v16;
  *(void *)&aBlock.tx = sub_1000B7950;
  *(void *)&aBlock.ty = v18;
  *(void *)&aBlock.a = _NSConcreteStackBlock;
  *(void *)&aBlock.b = 1107296256;
  *(void *)&aBlock.c = sub_1000D559C;
  *(void *)&aBlock.d = &unk_10014C968;
  int8x16_t v19 = _Block_copy(&aBlock);
  int8x16_t v20 = v16;
  swift_release();
  [v17 addAnimations:v19];
  _Block_release(v19);
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = v20;
  id v22 = objc_allocWithZone((Class)UIViewPropertyAnimator);
  *(void *)&aBlock.tx = sub_1000B7958;
  *(void *)&aBlock.ty = v21;
  *(void *)&aBlock.a = _NSConcreteStackBlock;
  *(void *)&aBlock.b = 1107296256;
  *(void *)&aBlock.c = sub_1000D559C;
  *(void *)&aBlock.d = &unk_10014C9B8;
  char v23 = _Block_copy(&aBlock);
  uint64_t v24 = v20;
  swift_release();
  id v25 = [v22 initWithDuration:3 curve:v23 animations:0.84];
  _Block_release(v23);
  [v13 startAnimation];
  [v17 startAnimationAfterDelay:0.16];
  [v25 startAnimation];
}

void sub_1000B6E78(char *a1)
{
  uint64_t v2 = *(void *)&a1[OBJC_IVAR____TtC16MusicRecognition23AmbientMatchingFlowView_matchView];
  id v3 = *(id *)(v2 + OBJC_IVAR____TtC16MusicRecognition16AmbientMatchView_titleLabel);
  [v3 transform];
  CGAffineTransformTranslate(&v17, &aBlock, 0.0, 70.0);
  CGAffineTransform aBlock = v17;
  [v3 setTransform:&aBlock];

  id v4 = *(id *)(v2 + OBJC_IVAR____TtC16MusicRecognition16AmbientMatchView_artistLabel);
  [v4 transform];
  CGAffineTransformTranslate(&v17, &aBlock, 0.0, 80.0);
  CGAffineTransform aBlock = v17;
  [v4 setTransform:&aBlock];

  if (qword_100156438 != -1) {
    swift_once();
  }
  id v5 = [objc_allocWithZone((Class)UIViewPropertyAnimator) initWithDuration:qword_10015B448 timingParameters:0.0];
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)&aBlock.tx = sub_1000B7610;
  *(void *)&aBlock.ty = v6;
  *(void *)&aBlock.a = _NSConcreteStackBlock;
  *(void *)&aBlock.b = 1107296256;
  *(void *)&aBlock.c = sub_1000D559C;
  *(void *)&aBlock.d = &unk_10014C738;
  uint64_t v7 = _Block_copy(&aBlock);
  id v8 = a1;
  swift_release();
  [v5 addAnimations:v7];
  _Block_release(v7);
  if (qword_100156440 != -1) {
    swift_once();
  }
  id v9 = [objc_allocWithZone((Class)UIViewPropertyAnimator) initWithDuration:qword_10015B450 timingParameters:0.0];
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v8;
  *(void *)&aBlock.tx = sub_1000B761C;
  *(void *)&aBlock.ty = v10;
  *(void *)&aBlock.a = _NSConcreteStackBlock;
  *(void *)&aBlock.b = 1107296256;
  *(void *)&aBlock.c = sub_1000D559C;
  *(void *)&aBlock.d = &unk_10014C788;
  id v11 = _Block_copy(&aBlock);
  id v12 = v8;
  swift_release();
  [v9 addAnimations:v11];
  _Block_release(v11);
  [v5 startAnimationAfterDelay:0.3];
  [v9 startAnimationAfterDelay:0.4];
  id v13 = self;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v12;
  *(void *)&aBlock.tx = sub_1000B78D8;
  *(void *)&aBlock.ty = v14;
  *(void *)&aBlock.a = _NSConcreteStackBlock;
  *(void *)&aBlock.b = 1107296256;
  *(void *)&aBlock.c = sub_1000D559C;
  *(void *)&aBlock.d = &unk_10014C7D8;
  char v15 = _Block_copy(&aBlock);
  uint64_t v16 = v12;
  swift_release();
  [v13 animateKeyframesWithDuration:0 delay:v15 options:0 animations:1.25 completion:0.25];

  _Block_release(v15);
}

id sub_1000B72A8(uint64_t a1)
{
  id v1 = *(void **)(*(void *)(a1 + OBJC_IVAR____TtC16MusicRecognition23AmbientMatchingFlowView_noMatchView)
                + OBJC_IVAR____TtC16MusicRecognition18AmbientNoMatchView_titleLabel);
  v3[0] = 0x3FF0000000000000;
  v3[1] = 0;
  v3[2] = 0;
  v3[3] = 0x3FF0000000000000;
  v3[4] = 0;
  v3[5] = 0;
  return [v1 setTransform:v3];
}

void sub_1000B7304(void *a1)
{
  uint64_t v2 = self;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = a1;
  id v13 = sub_1000B79E8;
  uint64_t v14 = v3;
  id v9 = _NSConcreteStackBlock;
  uint64_t v10 = 1107296256;
  id v11 = sub_1000D559C;
  id v12 = &unk_10014CA08;
  id v4 = _Block_copy(&v9);
  id v5 = a1;
  swift_release();
  [v2 addKeyframeWithRelativeStartTime:v4 relativeDuration:0.0 animations:0.3];
  _Block_release(v4);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v5;
  id v13 = sub_1000B7960;
  uint64_t v14 = v6;
  id v9 = _NSConcreteStackBlock;
  uint64_t v10 = 1107296256;
  id v11 = sub_1000D559C;
  id v12 = &unk_10014CA58;
  uint64_t v7 = _Block_copy(&v9);
  id v8 = v5;
  swift_release();
  [v2 addKeyframeWithRelativeStartTime:v7 relativeDuration:0.3 animations:0.7];
  _Block_release(v7);
}

id sub_1000B74C0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + OBJC_IVAR____TtC16MusicRecognition23AmbientMatchingFlowView_matchView);
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC16MusicRecognition16AmbientMatchView_albumArtImageView);
  uint64_t v5 = 0x3FF0000000000000;
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  uint64_t v8 = 0x3FF0000000000000;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  [v2 setTransform:&v5];
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC16MusicRecognition16AmbientMatchView_placeholderArtworkView);
  uint64_t v5 = 0x3FF0000000000000;
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  uint64_t v8 = 0x3FF0000000000000;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  return [v3 setTransform:&v5];
}

void sub_1000B7554(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + OBJC_IVAR____TtC16MusicRecognition23AmbientMatchingFlowView_matchView);
  id v2 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                             + OBJC_IVAR____TtC16MusicRecognition16AmbientMatchView_albumArtImageView), "layer"));
  LODWORD(v3) = 1.0;
  [v2 setOpacity:v3];

  id v5 = [*(id *)(v1 + OBJC_IVAR____TtC16MusicRecognition16AmbientMatchView_placeholderArtworkView) layer];
  LODWORD(v4) = 1.0;
  [v5 setOpacity:v4];
}

id sub_1000B7610()
{
  return sub_1000B7628(&OBJC_IVAR____TtC16MusicRecognition16AmbientMatchView_titleLabel);
}

id sub_1000B761C()
{
  return sub_1000B7628(&OBJC_IVAR____TtC16MusicRecognition16AmbientMatchView_artistLabel);
}

id sub_1000B7628(void *a1)
{
  id v2 = *(void **)(*(void *)(*(void *)(v1 + 16)
                            + OBJC_IVAR____TtC16MusicRecognition23AmbientMatchingFlowView_matchView)
                + *a1);
  v4[0] = 0x3FF0000000000000;
  v4[1] = 0;
  v4[2] = 0;
  _OWORD v4[3] = 0x3FF0000000000000;
  v4[4] = 0;
  _OWORD v4[5] = 0;
  return [v2 setTransform:v4];
}

void sub_1000B7680(void *a1)
{
  id v2 = self;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = a1;
  uint64_t v16 = sub_1000B78E0;
  uint64_t v17 = v3;
  id v12 = _NSConcreteStackBlock;
  uint64_t v13 = 1107296256;
  uint64_t v14 = sub_1000D559C;
  char v15 = &unk_10014C828;
  double v4 = _Block_copy(&v12);
  id v5 = a1;
  swift_release();
  [v2 addKeyframeWithRelativeStartTime:v4 relativeDuration:0.0 animations:1.0];
  _Block_release(v4);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v5;
  uint64_t v16 = sub_1000B78EC;
  uint64_t v17 = v6;
  id v12 = _NSConcreteStackBlock;
  uint64_t v13 = 1107296256;
  uint64_t v14 = sub_1000D559C;
  char v15 = &unk_10014C878;
  uint64_t v7 = _Block_copy(&v12);
  id v8 = v5;
  swift_release();
  [v2 addKeyframeWithRelativeStartTime:v7 relativeDuration:0.05 animations:0.9];
  _Block_release(v7);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v8;
  uint64_t v16 = sub_1000B7924;
  uint64_t v17 = v9;
  id v12 = _NSConcreteStackBlock;
  uint64_t v13 = 1107296256;
  uint64_t v14 = sub_1000D559C;
  char v15 = &unk_10014C8C8;
  uint64_t v10 = _Block_copy(&v12);
  id v11 = v8;
  swift_release();
  [v2 addKeyframeWithRelativeStartTime:v10 relativeDuration:0.2 animations:0.8];
  _Block_release(v10);
}

void sub_1000B78D8()
{
  sub_1000B7680(*(void **)(v0 + 16));
}

id sub_1000B78E0()
{
  return sub_1000B78F8(&OBJC_IVAR____TtC16MusicRecognition16AmbientMatchView_titleLabel);
}

id sub_1000B78EC()
{
  return sub_1000B78F8(&OBJC_IVAR____TtC16MusicRecognition16AmbientMatchView_artistLabel);
}

id sub_1000B78F8(void *a1)
{
  return [*(id *)(*(void *)(*(void *)(v1 + 16)+ OBJC_IVAR____TtC16MusicRecognition23AmbientMatchingFlowView_matchView)+ *a1) setAlpha:1.0];
}

id sub_1000B7924()
{
  return sub_1000B797C(&OBJC_IVAR____TtC16MusicRecognition23AmbientMatchingFlowView_matchView, &OBJC_IVAR____TtC16MusicRecognition16AmbientMatchView_shazamCountStackView, &OBJC_IVAR____TtC16MusicRecognition16AmbientMatchView_appleMusicButton);
}

id sub_1000B7940()
{
  return [*(id *)(v0 + 16) layoutIfNeeded];
}

id sub_1000B7950()
{
  return sub_1000B74C0(*(void *)(v0 + 16));
}

void sub_1000B7958()
{
  sub_1000B7554(*(void *)(v0 + 16));
}

id sub_1000B7960()
{
  return sub_1000B797C(&OBJC_IVAR____TtC16MusicRecognition23AmbientMatchingFlowView_noMatchView, &OBJC_IVAR____TtC16MusicRecognition18AmbientNoMatchView_titleLabel, &OBJC_IVAR____TtC16MusicRecognition18AmbientNoMatchView_retryButton);
}

id sub_1000B797C(void *a1, void *a2, void *a3)
{
  uint64_t v5 = *(void *)(*(void *)(v3 + 16) + *a1);
  [*(id *)(v5 + *a2) setAlpha:1.0];
  uint64_t v6 = *(void **)(v5 + *a3);

  return [v6 setAlpha:1.0];
}

uint64_t sub_1000B7A7C(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  sub_1000060EC(&qword_100157038);
  v2[4] = swift_task_alloc();
  v2[5] = type metadata accessor for MainActor();
  v2[6] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1000B7B48, v4, v3);
}

uint64_t sub_1000B7B48()
{
  uint64_t v1 = (void *)v0[2];
  swift_release();
  id v2 = [v1 artist];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = (void *)v0[2];
    uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v7 = v6;

    id v8 = [v4 title];
    if (v8)
    {
      uint64_t v9 = v8;
      uint64_t v10 = v0[3];
      uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v13 = v12;

      uint64_t v14 = *(void **)(v10 + OBJC_IVAR____TtC16MusicRecognition9MatchView_stackView);
      uint64_t v27 = v5;
      v15._uint64_t countAndFlagsBits = 8236;
      v15._object = (void *)0xE200000000000000;
      String.append(_:)(v15);
      v16._uint64_t countAndFlagsBits = v11;
      v16._object = v13;
      String.append(_:)(v16);
      swift_bridgeObjectRelease();
      NSString v17 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v14 setAccessibilityLabel:v17, v27, v7];
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v18 = v0[4];
  int8x16_t v19 = (void *)v0[2];
  uint64_t v20 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v18, 1, 1, v20);
  uint64_t v21 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  id v22 = v19;
  uint64_t v23 = static MainActor.shared.getter();
  uint64_t v24 = (void *)swift_allocObject();
  void v24[2] = v23;
  v24[3] = &protocol witness table for MainActor;
  v24[4] = v21;
  v24[5] = v22;
  swift_release();
  sub_1000D5678(v18, (uint64_t)&unk_10015B538, (uint64_t)v24);
  swift_release();
  swift_task_dealloc();
  id v25 = (uint64_t (*)(void))v0[1];
  return v25();
}

void sub_1000B7D80(char a1)
{
  char v2 = ~a1;
  [*(id *)(v1 + OBJC_IVAR____TtC16MusicRecognition9MatchView_appleMusicButton) setHidden:(a1 & 1) == 0];
  uint64_t v3 = self;
  sub_1000060EC(&qword_100157030);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100112420;
  *(void *)(v4 + 32) = sub_1000B8160();
  specialized Array._endMutation()();
  sub_1000150F8(0, (unint64_t *)&qword_100157AD0);
  if (v2)
  {
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v3 deactivateConstraints:isa];

    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_100112420;
    *(void *)(v9 + 32) = sub_1000B8254();
    specialized Array._endMutation()();
    v10.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
    uint64_t v7 = &selRef_activateConstraints_;
  }
  else
  {
    Class v5 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v3 activateConstraints:v5];

    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_100112420;
    *(void *)(v6 + 32) = sub_1000B8254();
    specialized Array._endMutation()();
    v10.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
    uint64_t v7 = &selRef_deactivateConstraints_;
  }
  swift_bridgeObjectRelease();
  [v3 *v7 v10.super.isa];
}

id sub_1000B7FB4()
{
  id result = [objc_allocWithZone((Class)UIColor) initWithRed:0.552941176 green:0.552941176 blue:0.576470588 alpha:1.0];
  qword_10015B460 = (uint64_t)result;
  return result;
}

id sub_1000B8000()
{
  id result = [objc_allocWithZone((Class)UIColor) initWithRed:0.329411765 green:0.125490196 blue:0.129411765 alpha:1.0];
  qword_10015B468 = (uint64_t)result;
  return result;
}

id sub_1000B8054()
{
  id result = [objc_allocWithZone((Class)UIColor) initWithRed:0.996078431 green:0.376470588 blue:0.537254902 alpha:1.0];
  qword_10015B470 = (uint64_t)result;
  return result;
}

void sub_1000B80A8()
{
  unk_10015B487 = -18;
}

void sub_1000B80D8()
{
  qword_10015B488 = 0x7472616D75626C61;
  unk_10015B490 = 0xE800000000000000;
}

void sub_1000B80FC()
{
  qword_10015B498 = 0x6B63616C62;
  unk_10015B4A0 = 0xE500000000000000;
}

void sub_1000B811C()
{
  qword_10015B4A8 = 0x676E6964616F6CLL;
  unk_10015B4B0 = 0xE700000000000000;
}

void sub_1000B8140()
{
  qword_10015B4B8 = 0x646564616F6CLL;
  unk_10015B4C0 = 0xE600000000000000;
}

id sub_1000B8160()
{
  uint64_t v1 = OBJC_IVAR____TtC16MusicRecognition9MatchView____lazy_storage___stackViewTrailingAnchorWithAppleMusicButton;
  char v2 = *(void **)(v0
                + OBJC_IVAR____TtC16MusicRecognition9MatchView____lazy_storage___stackViewTrailingAnchorWithAppleMusicButton);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC16MusicRecognition9MatchView____lazy_storage___stackViewTrailingAnchorWithAppleMusicButton);
  }
  else
  {
    id v4 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                               + OBJC_IVAR____TtC16MusicRecognition9MatchView_stackView), "layoutMarginsGuide"));
    id v5 = [v4 trailingAnchor];

    id v6 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                               + OBJC_IVAR____TtC16MusicRecognition9MatchView_appleMusicButton), "leadingAnchor"));
    id v7 = [v5 constraintEqualToAnchor:v6 constant:-8.0];

    id v8 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v7;
    id v3 = v7;

    char v2 = 0;
  }
  id v9 = v2;
  return v3;
}

id sub_1000B8254()
{
  uint64_t v1 = OBJC_IVAR____TtC16MusicRecognition9MatchView____lazy_storage___stackViewTrailingAnchorWithoutAppleMusicButton;
  char v2 = *(void **)&v0[OBJC_IVAR____TtC16MusicRecognition9MatchView____lazy_storage___stackViewTrailingAnchorWithoutAppleMusicButton];
  if (v2)
  {
    id v3 = *(id *)&v0[OBJC_IVAR____TtC16MusicRecognition9MatchView____lazy_storage___stackViewTrailingAnchorWithoutAppleMusicButton];
  }
  else
  {
    id v4 = [*(id *)&v0[OBJC_IVAR____TtC16MusicRecognition9MatchView_stackView] layoutMarginsGuide];
    id v5 = [v4 trailingAnchor];

    id v6 = [v0 layoutMarginsGuide];
    id v7 = [v6 trailingAnchor];

    id v8 = [v5 constraintEqualToAnchor:v7 constant:-8.0];
    id v9 = *(void **)&v0[v1];
    *(void *)&v0[v1] = v8;
    id v3 = v8;

    char v2 = 0;
  }
  id v10 = v2;
  return v3;
}

void sub_1000B8354(double a1, double a2, double a3, double a4)
{
  ObjectType = (objc_class *)swift_getObjectType();
  id v10 = self;
  uint64_t v11 = v4;
  id v12 = [v10 mainBundle];
  id v13 = objc_allocWithZone((Class)BSUICAPackageView);
  NSString v14 = String._bridgeToObjectiveC()();
  id v15 = [v13 initWithPackageName:v14 inBundle:v12];

  if (v15)
  {
    *(void *)&v11[OBJC_IVAR____TtC16MusicRecognition9MatchView_albumArtView] = v15;
    uint64_t v16 = OBJC_IVAR____TtC16MusicRecognition9MatchView_titleLabel;
    *(void *)&v11[v16] = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
    uint64_t v17 = OBJC_IVAR____TtC16MusicRecognition9MatchView_artistLabel;
    *(void *)&v11[v17] = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
    uint64_t v18 = OBJC_IVAR____TtC16MusicRecognition9MatchView_stackView;
    *(void *)&v11[v18] = [objc_allocWithZone((Class)UIStackView) initWithFrame:0.0, 0.0, 0.0, 0.0];
    uint64_t v19 = OBJC_IVAR____TtC16MusicRecognition9MatchView_appleMusicButton;
    *(void *)&v11[v19] = [objc_allocWithZone((Class)UIButton) initWithFrame:0.0, 0.0, 0.0, 0.0];
    *(void *)&v11[OBJC_IVAR____TtC16MusicRecognition9MatchView____lazy_storage___stackViewTrailingAnchorWithAppleMusicButton] = 0;
    *(void *)&v11[OBJC_IVAR____TtC16MusicRecognition9MatchView____lazy_storage___stackViewTrailingAnchorWithoutAppleMusicButton] = 0;

    v21.receiver = v11;
    v21.super_class = ObjectType;
    [super initWithFrame:a1, a2, a3, a4];
    sub_1000B8560();
  }
  else
  {
    __break(1u);
  }
}

void sub_1000B8560()
{
  [v0 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC16MusicRecognition9MatchView_stackView];
  [v1 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v0 addSubview:v1];
  char v2 = *(void **)&v0[OBJC_IVAR____TtC16MusicRecognition9MatchView_titleLabel];
  [v1 addArrangedSubview:v2];
  id v3 = *(void **)&v0[OBJC_IVAR____TtC16MusicRecognition9MatchView_artistLabel];
  [v1 addArrangedSubview:v3];
  [v1 setAxis:1];
  [v1 setDistribution:0];
  [v1 setAlignment:0];
  id v4 = [self mainBundle];
  v55._object = (void *)0xE000000000000000;
  v5._object = (void *)0x800000010011A850;
  v5._uint64_t countAndFlagsBits = 0xD000000000000031;
  v6._uint64_t countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  v55._uint64_t countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v5, (Swift::String_optional)0, (NSBundle)v4, v6, v55);

  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v1 setAccessibilityHint:v7];

  [v1 setIsAccessibilityElement:1];
  id v8 = *(void **)&v0[OBJC_IVAR____TtC16MusicRecognition9MatchView_albumArtView];
  [v8 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v0 addSubview:v8];
  if (qword_1001563B0 != -1) {
    swift_once();
  }
  NSString v9 = String._bridgeToObjectiveC()();
  [v8 setAccessibilityIdentifier:v9];

  [v8 setIsAccessibilityElement:0];
  id v10 = [v8 layer];
  [v10 setCompositingFilter:kCAFilterScreenBlendMode];

  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v11 = self;
  id v12 = [v11 systemFontOfSize:16.0 weight:UIFontWeightSemibold];
  [v2 setFont:v12];

  id v13 = [self whiteColor];
  [v2 setTextColor:v13];

  [v2 setNumberOfLines:2];
  LODWORD(v14) = 1132068864;
  [v2 setContentCompressionResistancePriority:0 forAxis:v14];
  if (qword_1001563A8 != -1) {
    swift_once();
  }
  NSString v15 = String._bridgeToObjectiveC()();
  [v2 setAccessibilityIdentifier:v15];

  [v3 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v16 = [v11 systemFontOfSize:16.0 weight:UIFontWeightMedium];
  [v3 setFont:v16];

  if (qword_100156450 != -1) {
    swift_once();
  }
  [v3 setTextColor:qword_10015B460];
  LODWORD(v17) = 1132068864;
  [v3 setContentCompressionResistancePriority:0 forAxis:v17];
  if (qword_1001563A0 != -1) {
    swift_once();
  }
  NSString v18 = String._bridgeToObjectiveC()();
  [v3 setAccessibilityIdentifier:v18];

  sub_1000B90DC();
  sub_1000B95E4();
  double v19 = 0.0;
  if (sub_1000CAC20()) {
    double v20 = -5.0;
  }
  else {
    double v20 = 0.0;
  }
  if (sub_1000CAC20()) {
    double v19 = -2.0;
  }
  if (sub_1000CAC20()) {
    double v21 = -26.0;
  }
  else {
    double v21 = -17.0;
  }
  uint64_t v52 = self;
  sub_1000060EC(&qword_100157030);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_100114A60;
  id v23 = [v8 leadingAnchor];
  id v24 = [v0 leadingAnchor];
  id v25 = [v23 constraintEqualToAnchor:v24];

  *(void *)(v22 + 32) = v25;
  id v26 = [v8 widthAnchor];
  id v27 = [v0 heightAnchor];
  id v28 = [v26 constraintEqualToAnchor:v27 constant:v20];

  *(void *)(v22 + 40) = v28;
  id v29 = [v8 heightAnchor];
  id v30 = [v0 heightAnchor];
  id v31 = [v29 constraintEqualToAnchor:v30 constant:v20];

  *(void *)(v22 + 48) = v31;
  id v32 = [v8 centerYAnchor];
  id v33 = [v0 centerYAnchor];
  id v34 = [v32 constraintEqualToAnchor:v33];

  *(void *)(v22 + 56) = v34;
  id v35 = [v1 centerYAnchor];
  id v36 = [v0 centerYAnchor];
  id v37 = [v35 constraintEqualToAnchor:v36 constant:-1.0];

  *(void *)(v22 + 64) = v37;
  id v38 = [v1 leadingAnchor];
  id v39 = [v8 trailingAnchor];
  id v40 = [v38 constraintEqualToAnchor:v39 constant:-3.0];

  *(void *)(v22 + 72) = v40;
  *(void *)(v22 + 80) = sub_1000B8160();
  uint64_t v41 = *(void **)&v0[OBJC_IVAR____TtC16MusicRecognition9MatchView_appleMusicButton];
  id v42 = [v41 trailingAnchor];
  id v43 = [v0 trailingAnchor];
  id v44 = [v42 constraintEqualToAnchor:v43 constant:v21];

  *(void *)(v22 + 88) = v44;
  id v45 = [v41 centerYAnchor];
  id v46 = [v0 centerYAnchor];
  id v47 = [v45 constraintEqualToAnchor:v46 constant:v19];

  *(void *)(v22 + 96) = v47;
  id v48 = [v41 widthAnchor];
  id v49 = [v48 constraintEqualToConstant:80.0];

  *(void *)(v22 + 104) = v49;
  id v50 = [v41 heightAnchor];
  id v51 = [v50 constraintEqualToConstant:30.0];

  *(void *)(v22 + 112) = v51;
  specialized Array._endMutation()();
  sub_1000150F8(0, (unint64_t *)&qword_100157AD0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v52 activateConstraints:isa];
}

void sub_1000B8EBC(void *a1)
{
  char v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  Swift::String v5 = self;
  Swift::String v6 = v2;
  id v7 = [v5 mainBundle];
  id v8 = objc_allocWithZone((Class)BSUICAPackageView);
  NSString v9 = String._bridgeToObjectiveC()();
  id v10 = [v8 initWithPackageName:v9 inBundle:v7];

  if (v10)
  {
    *(void *)&v6[OBJC_IVAR____TtC16MusicRecognition9MatchView_albumArtView] = v10;
    uint64_t v11 = OBJC_IVAR____TtC16MusicRecognition9MatchView_titleLabel;
    *(void *)&v6[v11] = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
    uint64_t v12 = OBJC_IVAR____TtC16MusicRecognition9MatchView_artistLabel;
    *(void *)&v6[v12] = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
    uint64_t v13 = OBJC_IVAR____TtC16MusicRecognition9MatchView_stackView;
    *(void *)&v6[v13] = [objc_allocWithZone((Class)UIStackView) initWithFrame:0.0, 0.0, 0.0, 0.0];
    uint64_t v14 = OBJC_IVAR____TtC16MusicRecognition9MatchView_appleMusicButton;
    *(void *)&v6[v14] = [objc_allocWithZone((Class)UIButton) initWithFrame:0.0, 0.0, 0.0, 0.0];
    *(void *)&v6[OBJC_IVAR____TtC16MusicRecognition9MatchView____lazy_storage___stackViewTrailingAnchorWithAppleMusicButton] = 0;
    *(void *)&v6[OBJC_IVAR____TtC16MusicRecognition9MatchView____lazy_storage___stackViewTrailingAnchorWithoutAppleMusicButton] = 0;

    v17.receiver = v6;
    v17.super_class = ObjectType;
    [super initWithCoder:a1];
    if (v15)
    {
      id v16 = v15;
      sub_1000B8560();
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1000B90DC()
{
  uint64_t v1 = sub_1000060EC(&qword_10015AC50);
  __chkstk_darwin(v1 - 8);
  id v3 = (char *)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for UIButton.Configuration.CornerStyle();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = type metadata accessor for UIButton.Configuration();
  uint64_t v8 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  id v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void **)&v0[OBJC_IVAR____TtC16MusicRecognition9MatchView_appleMusicButton];
  [v11 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v0 addSubview:v11];
  static UIButton.Configuration.filled()();
  if (qword_100156468 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  NSString v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v13 = [self imageNamed:v12];

  if (v13)
  {
    if (qword_100156460 != -1) {
      swift_once();
    }
    id v14 = [v13 imageWithTintColor:qword_10015B470];
  }
  UIButton.Configuration.image.setter();
  if (qword_100156458 != -1) {
    swift_once();
  }
  id v15 = (id)qword_10015B468;
  UIButton.Configuration.baseBackgroundColor.setter();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for UIButton.Configuration.CornerStyle.capsule(_:), v4);
  UIButton.Configuration.cornerStyle.setter();
  uint64_t v16 = v29;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v3, v10, v29);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v3, 0, 1, v16);
  UIButton.configuration.setter();
  NSString v17 = String._bridgeToObjectiveC()();
  [v11 setAccessibilityIdentifier:v17];

  NSString v18 = self;
  id v19 = [v18 mainBundle];
  v20._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
  v30._object = (void *)0xE000000000000000;
  v20._object = (void *)0x800000010011A8B0;
  v21._uint64_t countAndFlagsBits = 0;
  v21._object = (void *)0xE000000000000000;
  v30._uint64_t countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v20, (Swift::String_optional)0, (NSBundle)v19, v21, v30);

  NSString v22 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v11 setAccessibilityLabel:v22];

  id v23 = [v18 mainBundle];
  v24._uint64_t countAndFlagsBits = 0xD000000000000031;
  v31._object = (void *)0xE000000000000000;
  v24._object = (void *)0x800000010011A8D0;
  v25._uint64_t countAndFlagsBits = 0;
  v25._object = (void *)0xE000000000000000;
  v31._uint64_t countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v24, (Swift::String_optional)0, (NSBundle)v23, v25, v31);

  NSString v26 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v11 setAccessibilityHint:v26];

  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v16);
}

id sub_1000B95E4()
{
  uint64_t v1 = self;
  sub_1000060EC(&qword_100157030);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_100112420;
  *(void *)(v2 + 32) = sub_1000B8160();
  specialized Array._endMutation()();
  sub_1000150F8(0, (unint64_t *)&qword_100157AD0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v1 deactivateConstraints:isa];

  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100112420;
  *(void *)(v4 + 32) = sub_1000B8254();
  specialized Array._endMutation()();
  Class v5 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v1 activateConstraints:v5];

  return [v0 setNeedsLayout];
}

uint64_t sub_1000B9744(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[18] = a4;
  v5[19] = a5;
  uint64_t v6 = type metadata accessor for URL();
  v5[20] = v6;
  v5[21] = *(void *)(v6 - 8);
  v5[22] = swift_task_alloc();
  sub_1000060EC((uint64_t *)&unk_100158FC0);
  v5[23] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for ContinuousClock();
  v5[24] = v7;
  v5[25] = *(void *)(v7 - 8);
  v5[26] = swift_task_alloc();
  type metadata accessor for MainActor();
  v5[27] = static MainActor.shared.getter();
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[28] = v9;
  v5[29] = v8;
  return _swift_task_switch(sub_1000B98C4, v9, v8);
}

uint64_t sub_1000B98C4()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  v0[30] = Strong;
  if (Strong)
  {
    uint64_t v2 = OBJC_IVAR____TtC16MusicRecognition9MatchView_albumArtView;
    v0[31] = OBJC_IVAR____TtC16MusicRecognition9MatchView_albumArtView;
    uint64_t v3 = qword_100156478;
    id v4 = *(id *)(Strong + v2);
    if (v3 != -1) {
      swift_once();
    }
    NSString v5 = String._bridgeToObjectiveC()();
    [v4 setState:v5];

    uint64_t v6 = static Duration.seconds(_:)();
    uint64_t v8 = v7;
    ContinuousClock.init()();
    NSString v12 = (char *)&dword_100158EF0 + dword_100158EF0;
    uint64_t v9 = (void *)swift_task_alloc();
    v0[32] = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_1000B9AAC;
    return ((uint64_t (*)(uint64_t, uint64_t, void, void, uint64_t))v12)(v6, v8, 0, 0, 1);
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v11 = (uint64_t (*)(void))v0[1];
    return v11();
  }
}

uint64_t sub_1000B9AAC()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 208);
  uint64_t v4 = *(void *)(*v1 + 200);
  uint64_t v5 = *(void *)(*v1 + 192);
  *(void *)(*v1 + 264) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  uint64_t v6 = *(void *)(v2 + 232);
  uint64_t v7 = *(void *)(v2 + 224);
  if (v0) {
    uint64_t v8 = sub_1000BA120;
  }
  else {
    uint64_t v8 = sub_1000B9C44;
  }
  return _swift_task_switch(v8, v7, v6);
}

uint64_t sub_1000B9C44()
{
  uint64_t v2 = *(void *)(v0 + 240);
  uint64_t v1 = *(void *)(v0 + 248);
  uint64_t v3 = qword_100156480;
  id v4 = *(id *)(v2 + v1);
  if (v3 != -1)
  {
    swift_once();
    uint64_t v2 = *(void *)(v0 + 240);
    uint64_t v1 = *(void *)(v0 + 248);
  }
  NSString v5 = String._bridgeToObjectiveC()();
  [v4 setState:v5];

  uint64_t v6 = qword_100156470;
  id v7 = *(id *)(v2 + v1);
  if (v6 != -1) {
    swift_once();
  }
  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = [v7 publishedObjectWithName:v8];

  if (v9)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    *(_OWORD *)(v0 + 48) = 0u;
    *(_OWORD *)(v0 + 64) = 0u;
  }
  sub_1000BA664(v0 + 48, v0 + 16);
  if (*(void *)(v0 + 40))
  {
    sub_1000150F8(0, qword_10015B540);
    if (swift_dynamicCast())
    {
      uint64_t v10 = *(void **)(v0 + 152);
      *(void *)(v0 + 272) = *(void *)(v0 + 136);
      id v11 = [v10 artworkURL];
      uint64_t v12 = *(void *)(v0 + 184);
      if (v11)
      {
        uint64_t v13 = v11;
        uint64_t v15 = *(void *)(v0 + 168);
        uint64_t v14 = *(void *)(v0 + 176);
        uint64_t v16 = *(void *)(v0 + 160);
        static URL._unconditionallyBridgeFromObjectiveC(_:)();

        (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v12, v14, v16);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v16);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v12, 1, v16) != 1)
        {
          sub_1000063D0(*(void *)(v0 + 184), (uint64_t *)&unk_100158FC0);
          NSString v17 = (void *)swift_task_alloc();
          *(void *)(v0 + 280) = v17;
          *NSString v17 = v0;
          v17[1] = sub_1000BA1B0;
          return sub_1001053DC();
        }
      }
      else
      {
        (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 168) + 56))(*(void *)(v0 + 184), 1, 1, *(void *)(v0 + 160));
      }
      uint64_t v21 = *(void *)(v0 + 184);
      swift_release();
      sub_1000063D0(v21, (uint64_t *)&unk_100158FC0);
      NSString v22 = String._bridgeToObjectiveC()();
      id v23 = [self imageNamed:v22];

      if (v23)
      {
        id v24 = [v23 CGImage];

        if (v24)
        {
          type metadata accessor for CGImage(0);
          *(void *)(v0 + 104) = v25;
          *(void *)(v0 + 80) = v24;
          sub_100010740((void *)(v0 + 80), v25);
          id v23 = (id)_bridgeAnythingToObjectiveC<A>(_:)();
          _s16MusicRecognition11AnyPlaylistVwxx_0(v0 + 80);
        }
        else
        {
          id v23 = 0;
        }
      }
      uint64_t v27 = *(void *)(v0 + 240);
      uint64_t v26 = *(void *)(v0 + 248);
      [*(id *)(v0 + 272) setContents:v23];
      swift_unknownObjectRelease();
      uint64_t v28 = *(void **)(v27 + v26);
      uint64_t v29 = qword_100156488;
      id v30 = v28;
      if (v29 != -1) {
        swift_once();
      }
      Swift::String v31 = *(void **)(v0 + 272);
      id v32 = *(void **)(v0 + 240);
      NSString v33 = String._bridgeToObjectiveC()();
      [v30 setState:v33];
    }
    else
    {
      Swift::String v20 = *(void **)(v0 + 240);
      swift_release();
    }
  }
  else
  {
    id v19 = *(void **)(v0 + 240);
    swift_release();

    sub_1000063D0(v0 + 16, &qword_10015A520);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v34 = *(uint64_t (**)(void))(v0 + 8);
  return v34();
}

uint64_t sub_1000BA120()
{
  uint64_t v1 = *(void **)(v0 + 240);
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1000BA1B0(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 288) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 232);
  uint64_t v4 = *(void *)(v2 + 224);
  return _swift_task_switch(sub_1000BA2D8, v4, v3);
}

uint64_t sub_1000BA2D8()
{
  id v1 = *(id *)(v0 + 288);
  swift_release();
  if (v1)
  {
    uint64_t v2 = *(void **)(v0 + 288);
    id v1 = [v2 CGImage];

    if (v1)
    {
      type metadata accessor for CGImage(0);
      *(void *)(v0 + 104) = v3;
      *(void *)(v0 + 80) = v1;
      sub_100010740((void *)(v0 + 80), v3);
      id v1 = (id)_bridgeAnythingToObjectiveC<A>(_:)();
      _s16MusicRecognition11AnyPlaylistVwxx_0(v0 + 80);
    }
  }
  uint64_t v5 = *(void *)(v0 + 240);
  uint64_t v4 = *(void *)(v0 + 248);
  [*(id *)(v0 + 272) setContents:v1];
  swift_unknownObjectRelease();
  uint64_t v6 = *(void **)(v5 + v4);
  uint64_t v7 = qword_100156488;
  id v8 = v6;
  if (v7 != -1) {
    swift_once();
  }
  id v9 = *(void **)(v0 + 272);
  uint64_t v10 = *(void **)(v0 + 240);
  NSString v11 = String._bridgeToObjectiveC()();
  [v8 setState:v11];

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t type metadata accessor for MatchView()
{
  return self;
}

uint64_t sub_1000BA524()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000BA55C()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1000BA5A4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  id v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *id v8 = v2;
  v8[1] = sub_100014D10;
  return sub_1000B9744(a1, v4, v5, v7, v6);
}

uint64_t sub_1000BA664(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000060EC(&qword_10015A520);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for HistoryView()
{
  return sub_100020608();
}

uint64_t sub_1000BA6E4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000BA72C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(a3, a1, a2);
}

uint64_t sub_1000BA764(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for _ConditionalContent.Storage();
  __chkstk_darwin(v4);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))((char *)&v7 - v5, a1, a2);
  swift_storeEnumTagMultiPayload();
  return _ConditionalContent<>.init(storage:)();
}

uint64_t sub_1000BA85C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for _ConditionalContent.Storage();
  __chkstk_darwin(v5);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))((char *)&v8 - v6, a1, a3);
  swift_storeEnumTagMultiPayload();
  return _ConditionalContent<>.init(storage:)();
}

uint64_t sub_1000BA954@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v9 = type metadata accessor for ShazamUpsellOverlayModifier(0);
  uint64_t v10 = (int *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000060EC((uint64_t *)&unk_100158FC0);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for ShazamUpsellViewModel();
  __chkstk_darwin(v16 - 8);
  NSString v18 = (void *)((char *)v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100009C94(a1, (uint64_t)v15, (uint64_t *)&unk_100158FC0);
  sub_100095BE8((uint64_t)v15, v18);
  id v19 = (uint64_t *)&v12[v10[8]];
  uint64_t *v19 = swift_getKeyPath();
  sub_1000060EC(&qword_100156938);
  swift_storeEnumTagMultiPayload();
  Swift::String v20 = (uint64_t *)&v12[v10[9]];
  *Swift::String v20 = swift_getKeyPath();
  sub_1000060EC(&qword_100156928);
  swift_storeEnumTagMultiPayload();
  v24[1] = 0x4051800000000000;
  sub_100017778(a2);
  sub_10008A53C();
  ScaledMetric.init(wrappedValue:)();
  sub_1000BDB78((uint64_t)v18, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for ShazamUpsellViewModel);
  uint64_t v21 = (uint64_t *)&v12[v10[7]];
  *uint64_t v21 = a2;
  v21[1] = a3;
  uint64_t v22 = sub_1000060EC(&qword_10015B5F0);
  sub_1000BDB78((uint64_t)v12, a4 + *(int *)(v22 + 36), type metadata accessor for ShazamUpsellOverlayModifier);
  return sub_100009C94(v4, a4, &qword_10015B608);
}

uint64_t sub_1000BABB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = type metadata accessor for LibraryListView();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v65 = (char *)&v56 - v13;
  uint64_t v14 = type metadata accessor for _ConditionalContent();
  uint64_t v66 = *(void *)(v14 - 8);
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v56 - v16;
  uint64_t v18 = sub_10007AED8(v15);
  uint64_t v67 = a4;
  if (v18 > 1u)
  {
    sub_10007B308();
    uint64_t v22 = (void *)swift_allocObject();
    uint64_t v64 = v14;
    uint64_t v23 = (uint64_t)v22;
    void v22[2] = a2;
    v22[3] = a3;
    v22[4] = a1;
    swift_retain();
    swift_retain();
    sub_100032DB0((uint64_t)sub_1000BCC4C, v23, (uint64_t)v12);
    swift_getWitnessTable();
    id v24 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
    uint64_t v25 = v65;
    v24(v65, v12, v8);
    uint64_t v26 = *(void (**)(char *, uint64_t))(v9 + 8);
    v26(v12, v8);
    v24(v12, v25, v8);
    uint64_t v27 = v64;
    uint64_t v28 = v67;
    sub_1000BCC5C();
    sub_1000BA85C((uint64_t)v12, (uint64_t)&type metadata for LibraryEmptyView, v8);
    v26(v12, v8);
    v26(v25, v8);
  }
  else
  {
    uint64_t v65 = v17;
    BOOL v19 = sub_10007AFE0(v18);
    uint64_t v20 = a2;
    if (v19) {
      int v21 = 1;
    }
    else {
      int v21 = sub_10007B004(v19);
    }
    LODWORD(v64) = v21;
    uint64_t v29 = (void *)swift_allocObject();
    void v29[2] = v20;
    void v29[3] = a3;
    v29[4] = a1;
    id v30 = (void *)swift_allocObject();
    v30[2] = v20;
    v30[3] = a3;
    v30[4] = a1;
    swift_retain_n();
    uint64_t v31 = LocalizedStringKey.init(stringLiteral:)();
    uint64_t v61 = v32;
    uint64_t v62 = v31;
    int v60 = v33;
    uint64_t v63 = v34;
    uint64_t v35 = LocalizedStringKey.init(stringLiteral:)();
    uint64_t v57 = v36;
    uint64_t v58 = v35;
    char v38 = v37;
    uint64_t v59 = v39;
    uint64_t v40 = LocalizedStringKey.init(stringLiteral:)();
    uint64_t v42 = v41;
    char v44 = v43;
    uint64_t v45 = v14;
    uint64_t v47 = v46;
    uint64_t v48 = LocalizedStringKey.init(stringLiteral:)();
    *(void *)&long long v70 = v62;
    *((void *)&v70 + 1) = v61;
    LOBYTE(v71) = v60 & 1;
    *((void *)&v71 + 1) = v63;
    *(void *)&long long v72 = v58;
    *((void *)&v72 + 1) = v57;
    LOBYTE(v73) = v38 & 1;
    *((void *)&v73 + 1) = v59;
    *(void *)&long long v74 = v40;
    *((void *)&v74 + 1) = v42;
    LOBYTE(v75) = v44 & 1;
    *((void *)&v75 + 1) = v47;
    *(void *)&long long v76 = v48;
    uint64_t v27 = v45;
    *((void *)&v76 + 1) = v49;
    LOBYTE(v77) = v50 & 1;
    *((void *)&v77 + 1) = v51;
    LOBYTE(v78) = v64 & 1;
    *((void *)&v78 + 1) = sub_1000BCCB0;
    *(void *)&long long v79 = v29;
    *((void *)&v79 + 1) = sub_1000BCCBC;
    id v80 = v30;
    v68[8] = v78;
    v68[9] = v79;
    uint64_t v69 = v30;
    uint64_t v28 = v67;
    v68[4] = v74;
    v68[5] = v75;
    v68[6] = v76;
    v68[7] = v77;
    v68[0] = v70;
    v68[1] = v71;
    v68[2] = v72;
    v68[3] = v73;
    sub_1000BCC5C();
    swift_getWitnessTable();
    uint64_t v17 = v65;
    sub_1000BA764((uint64_t)v68, (uint64_t)&type metadata for LibraryEmptyView);
    sub_1000BCCCC((uint64_t)&v70);
  }
  uint64_t v52 = v66;
  unint64_t v53 = sub_1000BCC5C();
  uint64_t WitnessTable = swift_getWitnessTable();
  unint64_t v81 = v53;
  uint64_t v82 = WitnessTable;
  swift_getWitnessTable();
  (*(void (**)(uint64_t, char *, uint64_t))(v52 + 16))(v28, v17, v27);
  return (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v17, v27);
}

uint64_t sub_1000BB118(uint64_t a1)
{
  uint64_t result = sub_10007AED8(a1);
  if (!(_BYTE)result)
  {
    return sub_10007B390(0xFu, 0xBu);
  }
  return result;
}

uint64_t sub_1000BB184@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000BABB0(*v2, *(void *)(a1 + 16), *(void *)(a1 + 24), a2);
}

uint64_t sub_1000BB194@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v40 = a2;
  uint64_t v39 = type metadata accessor for NavigationBarItem.TitleDisplayMode();
  uint64_t v3 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  uint64_t v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000060EC((uint64_t *)&unk_100158FC0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000060EC(&qword_10015B608);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_1000060EC(&qword_10015B5F0);
  __chkstk_darwin(v36);
  uint64_t v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_1000060EC(&qword_10015B620);
  uint64_t v14 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  uint64_t v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_1000060EC(&qword_10015B5D8);
  __chkstk_darwin(v37);
  uint64_t v18 = (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v11 = static HorizontalAlignment.center.getter();
  *((void *)v11 + 1) = 0;
  v11[16] = 1;
  uint64_t v19 = sub_1000060EC(&qword_10015B628);
  sub_1000BB6B8(a1, (uint64_t)&v11[*(int *)(v19 + 44)]);
  uint64_t v20 = type metadata accessor for URL();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v8, 1, 1, v20);
  uint64_t v21 = swift_allocObject();
  long long v22 = *(_OWORD *)(a1 + 144);
  *(_OWORD *)(v21 + 144) = *(_OWORD *)(a1 + 128);
  *(_OWORD *)(v21 + 160) = v22;
  *(void *)(v21 + 176) = *(void *)(a1 + 160);
  long long v23 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v21 + 80) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v21 + 96) = v23;
  long long v24 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(v21 + 112) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v21 + 128) = v24;
  long long v25 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v21 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v21 + 32) = v25;
  long long v26 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v21 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v21 + 64) = v26;
  sub_1000BD6F4(a1);
  sub_1000BA954((uint64_t)v8, (uint64_t)sub_1000BD6C4, v21, (uint64_t)v13);
  swift_release();
  sub_1000063D0((uint64_t)v8, (uint64_t *)&unk_100158FC0);
  sub_1000063D0((uint64_t)v11, &qword_10015B608);
  uint64_t v27 = v39;
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for NavigationBarItem.TitleDisplayMode.inline(_:), v39);
  sub_1000BD564();
  View.navigationBarTitleDisplayMode(_:)();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v27);
  sub_1000063D0((uint64_t)v13, &qword_10015B5F0);
  id v28 = [self systemGroupedBackgroundColor];
  uint64_t v29 = Color.init(uiColor:)();
  LOBYTE(v11) = static Edge.Set.all.getter();
  uint64_t v30 = v38;
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v18, v16, v38);
  uint64_t v31 = &v18[*(int *)(v37 + 36)];
  *(void *)uint64_t v31 = v29;
  v31[8] = (char)v11;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v30);
  uint64_t v41 = a1;
  sub_1000060EC(&qword_10015B5E0);
  sub_1000BD490();
  uint64_t v32 = sub_100006224(&qword_10015B610);
  uint64_t v33 = sub_100006480(&qword_10015B618, &qword_10015B610);
  uint64_t v42 = v32;
  uint64_t v43 = v33;
  swift_getOpaqueTypeConformance2();
  View.toolbar<A>(content:)();
  return sub_1000063D0((uint64_t)v18, &qword_10015B5D8);
}

uint64_t sub_1000BB6B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000060EC(&qword_10015B698);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = sub_1000060EC(&qword_10015B6A0);
  uint64_t v8 = __chkstk_darwin(v46);
  uint64_t v10 = (char *)v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)v43 - v11;
  uint64_t v44 = sub_1000060EC(&qword_10015B6A8);
  __chkstk_darwin(v44);
  uint64_t v14 = (_OWORD *)((char *)v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = sub_1000060EC(&qword_10015B6B0);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  uint64_t v18 = (char *)v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)v43 - v19;
  int v45 = static Edge.Set.horizontal.getter();
  uint64_t v21 = EdgeInsets.init(_all:)();
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  if (*(unsigned char *)(a1 + 128))
  {
    uint64_t v32 = *(void *)(a1 + 64);
    uint64_t v31 = *(void *)(a1 + 72);
    char v33 = *(unsigned char *)(a1 + 80);
    uint64_t v34 = *(void *)(a1 + 88);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v35 = static Alignment.center.getter();
    sub_100043254(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, (uint64_t)v47, 0.0, 1, INFINITY, 0, v35, v36, v32, v31, v33, v34);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    long long v37 = v47[7];
    v14[6] = v47[6];
    v14[7] = v37;
    v14[8] = v47[8];
    long long v38 = v47[3];
    _OWORD v14[2] = v47[2];
    void v14[3] = v38;
    long long v39 = v47[5];
    v14[4] = v47[4];
    v14[5] = v39;
    long long v40 = v47[1];
    _OWORD *v14 = v47[0];
    v14[1] = v40;
    swift_storeEnumTagMultiPayload();
    sub_1000060EC(&qword_10015B6C0);
    sub_1000BDC58();
    sub_1000BDCD4();
    _ConditionalContent<>.init(storage:)();
  }
  else
  {
    v43[1] = v43;
    uint64_t v30 = __chkstk_darwin(v21);
    __chkstk_darwin(v30);
    ContentUnavailableView.init(label:description:actions:)();
    sub_100006480(&qword_10015B6B8, &qword_10015B698);
    View.accessibilityIdentifier(_:)();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_1000BDBF0((uint64_t)v10, (uint64_t)v12);
    sub_100009C94((uint64_t)v12, (uint64_t)v14, &qword_10015B6A0);
    swift_storeEnumTagMultiPayload();
    sub_1000060EC(&qword_10015B6C0);
    sub_1000BDC58();
    sub_1000BDCD4();
    _ConditionalContent<>.init(storage:)();
    sub_1000063D0((uint64_t)v12, &qword_10015B6A0);
  }
  sub_100009C94((uint64_t)v20, (uint64_t)v18, &qword_10015B6B0);
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = v45;
  *(void *)(a2 + 24) = v23;
  *(void *)(a2 + 32) = v25;
  *(void *)(a2 + 40) = v27;
  *(void *)(a2 + 48) = v29;
  *(unsigned char *)(a2 + 56) = 0;
  uint64_t v41 = sub_1000060EC(&qword_10015B6D8);
  sub_100009C94((uint64_t)v18, a2 + *(int *)(v41 + 48), &qword_10015B6B0);
  sub_1000063D0((uint64_t)v20, &qword_10015B6B0);
  return sub_1000063D0((uint64_t)v18, &qword_10015B6B0);
}

uint64_t sub_1000BBC38@<X0>(uint64_t a1@<X8>)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v2 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v4 = v3;
  char v6 = v5 & 1;
  static Font.headline.getter();
  static Font.Weight.semibold.getter();
  Font.weight(_:)();
  swift_release();
  uint64_t v7 = Text.font(_:)();
  uint64_t v9 = v8;
  char v11 = v10;
  uint64_t v13 = v12;
  swift_release();
  sub_10000E904(v2, v4, v6);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a1 = v7;
  *(void *)(a1 + 8) = v9;
  *(unsigned char *)(a1 + 16) = v11 & 1;
  *(void *)(a1 + 24) = v13;
  return result;
}

uint64_t sub_1000BBD54@<X0>(uint64_t a1@<X8>)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t result = Text.init(_:tableName:bundle:comment:)();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_1000BBDE8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ToolbarItemPlacement();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = sub_1000060EC(&qword_10015B610);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = &v12[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  static ToolbarItemPlacement.topBarTrailing.getter();
  uint64_t v13 = a1;
  sub_1000060EC(&qword_10015B630);
  uint64_t v7 = sub_100006224(&qword_10015B638);
  uint64_t v8 = sub_100006224(&qword_100158178);
  unint64_t v9 = sub_1000BD7D0();
  uint64_t v10 = sub_100006480(&qword_100158198, &qword_100158178);
  uint64_t v14 = v7;
  uint64_t v15 = v8;
  unint64_t v16 = v9;
  uint64_t v17 = v10;
  swift_getOpaqueTypeConformance2();
  ToolbarItem<>.init(placement:content:)();
  sub_100006480(&qword_10015B618, &qword_10015B610);
  static ToolbarContentBuilder.buildBlock<A>(_:)();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1000BC008@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v17[1] = a2;
  uint64_t v3 = sub_1000060EC(&qword_10015B660);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000060EC(&qword_10015B650);
  __chkstk_darwin(v7);
  unint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000060EC(&qword_10015B638);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000060EC(&qword_10015B678);
  sub_1000BD988();
  Button.init(action:label:)();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v14 = swift_allocObject();
  *(unsigned char *)(v14 + 16) = 1;
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v9, v6, v3);
  uint64_t v15 = (uint64_t *)&v9[*(int *)(v7 + 36)];
  *uint64_t v15 = KeyPath;
  v15[1] = (uint64_t)sub_1000BDB30;
  v15[2] = v14;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_1000BD87C();
  View.accessibilityIdentifier(_:)();
  sub_1000063D0((uint64_t)v9, &qword_10015B650);
  v17[4] = a1;
  sub_1000060EC(&qword_100158178);
  sub_1000BD7D0();
  sub_100006480(&qword_100158198, &qword_100158178);
  View.accessibilityShowsLargeContentViewer<A>(_:)();
  return sub_1000063D0((uint64_t)v12, &qword_10015B638);
}

uint64_t sub_1000BC314@<X0>(uint64_t a1@<X8>)
{
  uint64_t v39 = a1;
  uint64_t v1 = sub_1000060EC(&qword_100158200);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for SymbolVariants();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v35 - v9;
  uint64_t v36 = sub_1000060EC(&qword_100156AD8);
  uint64_t v11 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  uint64_t v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000060EC(&qword_1001581D0);
  uint64_t v15 = v14 - 8;
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_1000060EC(&qword_10015B690) - 8;
  __chkstk_darwin(v38);
  uint64_t v37 = (uint64_t)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = Image.init(systemName:)();
  static SymbolVariants.circle.getter();
  SymbolVariants.fill.getter();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v5 + 8);
  v19(v10, v4);
  View.symbolVariant(_:)();
  v19(v8, v4);
  swift_release();
  static SymbolRenderingMode.palette.getter();
  uint64_t v20 = type metadata accessor for SymbolRenderingMode();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v3, 0, 1, v20);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v22 = (uint64_t *)&v17[*(int *)(v15 + 44)];
  uint64_t v23 = sub_1000060EC(&qword_1001581E0);
  sub_100009C94((uint64_t)v3, (uint64_t)v22 + *(int *)(v23 + 28), &qword_100158200);
  *uint64_t v22 = KeyPath;
  uint64_t v24 = v36;
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v17, v13, v36);
  sub_1000063D0((uint64_t)v3, &qword_100158200);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v24);
  uint64_t v25 = Color.init(_:bundle:)();
  id v26 = [self tertiarySystemFillColor];
  uint64_t v27 = Color.init(uiColor:)();
  uint64_t v28 = v37;
  sub_100009C94((uint64_t)v17, v37, &qword_1001581D0);
  uint64_t v29 = (uint64_t *)(v28 + *(int *)(v38 + 44));
  uint64_t *v29 = v25;
  v29[1] = v27;
  sub_1000063D0((uint64_t)v17, &qword_1001581D0);
  static Font.title2.getter();
  static Font.Weight.semibold.getter();
  uint64_t v30 = Font.weight(_:)();
  swift_release();
  uint64_t v31 = swift_getKeyPath();
  uint64_t v32 = v39;
  sub_100009C94(v28, v39, &qword_10015B690);
  char v33 = (uint64_t *)(v32 + *(int *)(sub_1000060EC(&qword_10015B678) + 36));
  *char v33 = v31;
  v33[1] = v30;
  return sub_1000063D0(v28, &qword_10015B690);
}

uint64_t sub_1000BC7A4()
{
  return Label.init(title:icon:)();
}

uint64_t sub_1000BC864@<X0>(uint64_t a1@<X8>)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t result = Text.init(_:tableName:bundle:comment:)();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_1000BC8F8()
{
  uint64_t v0 = type metadata accessor for SymbolVariants();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  char v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)v9 - v5;
  v9[1] = Image.init(systemName:)();
  static SymbolVariants.circle.getter();
  SymbolVariants.fill.getter();
  uint64_t v7 = *(void (**)(char *, uint64_t))(v1 + 8);
  v7(v6, v0);
  View.symbolVariant(_:)();
  v7(v4, v0);
  return swift_release();
}

uint64_t sub_1000BCA4C()
{
  return NavigationStack.init<>(root:)();
}

uint64_t sub_1000BCBA8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = EnvironmentValues.isEnabled.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1000BCBD8()
{
  return EnvironmentValues.isEnabled.setter();
}

unsigned char *sub_1000BCC00(unsigned char *result, char a2)
{
  *result &= a2 ^ 1;
  return result;
}

uint64_t sub_1000BCC14()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1000BCC4C()
{
  return sub_10007B390(0xFu, 0xBu);
}

unint64_t sub_1000BCC5C()
{
  unint64_t result = qword_10015B5C8;
  if (!qword_10015B5C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015B5C8);
  }
  return result;
}

uint64_t sub_1000BCCB0()
{
  return sub_1000BB118(*(void *)(v0 + 32));
}

uint64_t sub_1000BCCBC()
{
  return sub_10007B390(6u, 0);
}

uint64_t sub_1000BCCCC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 136);
  uint64_t v3 = *(void *)(a1 + 152);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100077228(v2);
  sub_100077228(v3);
  return a1;
}

uint64_t destroy for LibraryEmptyView(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(a1 + 136)) {
    uint64_t result = swift_release();
  }
  if (*(void *)(a1 + 152))
  {
    return swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for LibraryEmptyView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  uint64_t v7 = (_OWORD *)(a2 + 136);
  uint64_t v13 = *(void *)(a2 + 136);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v8 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v8;
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13)
  {
    uint64_t v9 = *(void *)(a2 + 144);
    *(void *)(a1 + 136) = v13;
    *(void *)(a1 + 144) = v9;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 136) = *v7;
  }
  uint64_t v10 = *(void *)(a2 + 152);
  if (v10)
  {
    uint64_t v11 = *(void *)(a2 + 160);
    *(void *)(a1 + 152) = v10;
    *(void *)(a1 + 160) = v11;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  }
  return a1;
}

uint64_t assignWithCopy for LibraryEmptyView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a1 + 136);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  uint64_t v5 = *(void *)(a2 + 136);
  if (v4)
  {
    if (v5)
    {
      uint64_t v6 = *(void *)(a2 + 144);
      *(void *)(a1 + 136) = v5;
      *(void *)(a1 + 144) = v6;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v5)
  {
    uint64_t v7 = *(void *)(a2 + 144);
    *(void *)(a1 + 136) = v5;
    *(void *)(a1 + 144) = v7;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
LABEL_8:
  uint64_t v8 = *(void *)(a2 + 152);
  if (!*(void *)(a1 + 152))
  {
    if (v8)
    {
      uint64_t v10 = *(void *)(a2 + 160);
      *(void *)(a1 + 152) = v8;
      *(void *)(a1 + 160) = v10;
      swift_retain();
      return a1;
    }
LABEL_14:
    *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
    return a1;
  }
  if (!v8)
  {
    swift_release();
    goto LABEL_14;
  }
  uint64_t v9 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = v8;
  *(void *)(a1 + 160) = v9;
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for LibraryEmptyView(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  long long v4 = a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  __n128 result = (__n128)a2[7];
  long long v8 = a2[8];
  long long v9 = a2[9];
  *(void *)(a1 + 160) = *((void *)a2 + 20);
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  *(__n128 *)(a1 + 112) = result;
  return result;
}

uint64_t assignWithTake for LibraryEmptyView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 136);
  uint64_t v9 = *(void *)(a1 + 136);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  if (v9)
  {
    if (v8)
    {
      uint64_t v10 = *(void *)(a2 + 144);
      *(void *)(a1 + 136) = v8;
      *(void *)(a1 + 144) = v10;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v8)
  {
    uint64_t v11 = *(void *)(a2 + 144);
    *(void *)(a1 + 136) = v8;
    *(void *)(a1 + 144) = v11;
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
LABEL_8:
  uint64_t v12 = *(void *)(a2 + 152);
  if (!*(void *)(a1 + 152))
  {
    if (v12)
    {
      uint64_t v14 = *(void *)(a2 + 160);
      *(void *)(a1 + 152) = v12;
      *(void *)(a1 + 160) = v14;
      return a1;
    }
LABEL_14:
    *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
    return a1;
  }
  if (!v12)
  {
    swift_release();
    goto LABEL_14;
  }
  uint64_t v13 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = v12;
  *(void *)(a1 + 160) = v13;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for LibraryEmptyView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 168)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LibraryEmptyView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 168) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 168) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LibraryEmptyView()
{
  return &type metadata for LibraryEmptyView;
}

uint64_t sub_1000BD3D0()
{
  return swift_getWitnessTable();
}

uint64_t sub_1000BD46C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000BD488@<X0>(uint64_t a1@<X8>)
{
  return sub_1000BB194(*(void *)(v1 + 16), a1);
}

unint64_t sub_1000BD490()
{
  unint64_t result = qword_10015B5E8;
  if (!qword_10015B5E8)
  {
    sub_100006224(&qword_10015B5D8);
    sub_100006224(&qword_10015B5F0);
    sub_1000BD564();
    swift_getOpaqueTypeConformance2();
    sub_100006480(&qword_10015A2B8, &qword_10015A2C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015B5E8);
  }
  return result;
}

unint64_t sub_1000BD564()
{
  unint64_t result = qword_10015B5F8;
  if (!qword_10015B5F8)
  {
    sub_100006224(&qword_10015B5F0);
    sub_100006480(&qword_10015B600, &qword_10015B608);
    sub_1000BD940(&qword_100158108, (void (*)(uint64_t))type metadata accessor for ShazamUpsellOverlayModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015B5F8);
  }
  return result;
}

uint64_t sub_1000BD634()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 152)) {
    swift_release();
  }
  if (*(void *)(v0 + 168)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 184, 7);
}

uint64_t sub_1000BD6C4()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 168);
  if (v1) {
    return v1();
  }
  return result;
}

uint64_t sub_1000BD6F4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 136);
  uint64_t v4 = *(void *)(a1 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100017778(v2);
  sub_100017778(v4);
  return a1;
}

uint64_t sub_1000BD7C0()
{
  return sub_1000BBDE8(*(void *)(v0 + 16));
}

uint64_t sub_1000BD7C8@<X0>(uint64_t a1@<X8>)
{
  return sub_1000BC008(*(void *)(v1 + 16), a1);
}

unint64_t sub_1000BD7D0()
{
  unint64_t result = qword_10015B640;
  if (!qword_10015B640)
  {
    sub_100006224(&qword_10015B638);
    sub_1000BD87C();
    sub_1000BD940((unint64_t *)&qword_1001567D8, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015B640);
  }
  return result;
}

unint64_t sub_1000BD87C()
{
  unint64_t result = qword_10015B648;
  if (!qword_10015B648)
  {
    sub_100006224(&qword_10015B650);
    sub_100006480(&qword_10015B658, &qword_10015B660);
    sub_100006480(&qword_10015B668, &qword_10015B670);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015B648);
  }
  return result;
}

uint64_t sub_1000BD940(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000BD988()
{
  unint64_t result = qword_10015B680;
  if (!qword_10015B680)
  {
    sub_100006224(&qword_10015B678);
    sub_1000BDA28();
    sub_100006480(&qword_100156788, &qword_100156790);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015B680);
  }
  return result;
}

unint64_t sub_1000BDA28()
{
  unint64_t result = qword_10015B688;
  if (!qword_10015B688)
  {
    sub_100006224(&qword_10015B690);
    sub_10003FCE0();
    sub_100006480(&qword_100157BE8, &qword_100157BF0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015B688);
  }
  return result;
}

uint64_t sub_1000BDAC8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = EnvironmentValues.isEnabled.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1000BDAF8()
{
  return EnvironmentValues.isEnabled.setter();
}

uint64_t sub_1000BDB20()
{
  return _swift_deallocObject(v0, 17, 7);
}

unsigned char *sub_1000BDB30(unsigned char *result)
{
  *result &= ~*(unsigned char *)(v1 + 16) & 1;
  return result;
}

uint64_t sub_1000BDB48()
{
  return sub_1000BC7A4();
}

uint64_t sub_1000BDB50@<X0>(uint64_t a1@<X8>)
{
  return sub_1000BC864(a1);
}

uint64_t sub_1000BDB78(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000BDBE0@<X0>(uint64_t a1@<X8>)
{
  return sub_1000BBC38(a1);
}

uint64_t sub_1000BDBE8@<X0>(uint64_t a1@<X8>)
{
  return sub_1000BBD54(a1);
}

uint64_t sub_1000BDBF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000060EC(&qword_10015B6A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1000BDC58()
{
  unint64_t result = qword_10015B6C8;
  if (!qword_10015B6C8)
  {
    sub_100006224(&qword_10015B6C0);
    sub_10002F5B0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015B6C8);
  }
  return result;
}

unint64_t sub_1000BDCD4()
{
  unint64_t result = qword_10015B6D0;
  if (!qword_10015B6D0)
  {
    sub_100006224(&qword_10015B6A0);
    sub_100006480(&qword_10015B6B8, &qword_10015B698);
    sub_1000BD940((unint64_t *)&qword_1001567D8, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015B6D0);
  }
  return result;
}

uint64_t sub_1000BDDA4()
{
  return sub_100006480(&qword_10015B6E0, qword_10015B6E8);
}

uint64_t sub_1000BDDE8()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_1000BDEA0(unsigned char *a1, uint64_t *a2, uint64_t a3)
{
  long long v3 = a1;
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((v6 + 24) & (unint64_t)~v6) + *(void *)(v5 + 64) > 0x18)
  {
    uint64_t v9 = *a2;
    *long long v3 = *a2;
    long long v3 = (void *)(v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    *a1 = *(unsigned char *)a2;
    a1[1] = *((unsigned char *)a2 + 1);
    uint64_t v10 = (void *)((unint64_t)(a1 + 9) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v11 = (void *)(((unint64_t)a2 + 9) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = ((unint64_t)v10 + v6 + 16) & ~v6;
    uint64_t v14 = ((unint64_t)v11 + v6 + 16) & ~v6;
    uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_retain();
    v15(v13, v14, v4);
  }
  return v3;
}