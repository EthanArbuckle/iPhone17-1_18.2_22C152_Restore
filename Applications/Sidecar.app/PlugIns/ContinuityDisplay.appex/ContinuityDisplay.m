void sub_1000041C8(void *a1)
{
  void *v1;
  uint64_t Strong;
  void *v4;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for App();
  [super sendEvent:a1];
  Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    v4 = (void *)Strong;
    sub_1000404A0(a1);
  }
}

id sub_100004298()
{
  swift_unknownObjectWeakInit();
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for App();
  return [super init];
}

id sub_100004304()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for App();
  return [super dealloc];
}

uint64_t variable initialization expression of VideoConfig._resolution()
{
  return 1366;
}

uint64_t variable initialization expression of SidecarDisplaySession.delegate()
{
  return 0;
}

double variable initialization expression of SidecarDisplaySession.safeInsets()
{
  return 0.0;
}

uint64_t variable initialization expression of SidecarDisplaySession.queue()
{
  return sub_10005EC90();
}

unint64_t sub_1000043AC()
{
  unint64_t result = qword_100084110;
  if (!qword_100084110)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100084110);
  }
  return result;
}

uint64_t variable initialization expression of SidecarDisplaySession.videoConfig()
{
  return 0;
}

void *variable initialization expression of SidecarDisplaySession.settings()
{
  if (qword_100083B38 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v0 = qword_100088F48;
  uint64_t v1 = unk_100088F50;
  v3 = (void *)qword_100088F58;
  uint64_t v2 = unk_100088F60;
  swift_retain();
  id v4 = v3;
  swift_bridgeObjectRetain();
  v5 = sub_100008EA0(v0, v1, v4, v2);
  swift_bridgeObjectRelease();

  swift_release();
  return v5;
}

uint64_t type metadata accessor for App()
{
  return self;
}

void type metadata accessor for SidecarTransport(uint64_t a1)
{
}

uint64_t initializeBufferWithCopyOfBuffer for TouchController.MultitouchState(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 initializeWithTake for VideoConfig(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t sub_100004544(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_100004564(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

void type metadata accessor for NSEdgeInsets(uint64_t a1)
{
}

void type metadata accessor for CGRect(uint64_t a1)
{
}

__n128 initializeBufferWithCopyOfBuffer for TouchController.MultitouchState.Point(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for TouchController.MultitouchState.Point(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for TouchController.MultitouchState.Point(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
}

void type metadata accessor for ReferenceDisplayModeStatus(uint64_t a1)
{
}

void type metadata accessor for NSKeyValueChangeKey(uint64_t a1)
{
}

uint64_t sub_100004648()
{
  return sub_100004704(*v0, (uint64_t (*)(uint64_t))&String._bridgeToObjectiveC());
}

uint64_t sub_100004678(uint64_t a1, id *a2)
{
  return sub_100004E20(a1, a2);
}

uint64_t sub_100004690(uint64_t a1, id *a2)
{
  return sub_100004DA0(a1, a2) & 1;
}

NSString sub_1000046AC@<X0>(void *a1@<X8>)
{
  NSString result = sub_100004E98();
  *a1 = result;
  return result;
}

uint64_t sub_1000046D4()
{
  return sub_100004704(*v0, (uint64_t (*)(uint64_t))&String.hashValue.getter);
}

uint64_t sub_100004704(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = sub_10005E920();
  uint64_t v4 = a2(v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_100004744()
{
  return sub_10000474C();
}

uint64_t sub_10000474C()
{
  sub_10005E920();
  sub_10005E980();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1000047A0()
{
  return sub_1000047A8();
}

Swift::Int sub_1000047A8()
{
  sub_10005E920();
  sub_10005F1C0();
  sub_10005E980();
  Swift::Int v0 = sub_10005F200();
  swift_bridgeObjectRelease();
  return v0;
}

void sub_10000481C(uint64_t a1@<X8>)
{
  sub_100004850();
  *(void *)a1 = v2;
  *(unsigned char *)(a1 + 8) = v3 & 1;
}

uint64_t sub_100004858()
{
  uint64_t v1 = sub_100005260();
  uint64_t result = VideoStream.qosMonitorServerDidDie(_:)(v1);
  uint64_t *v0 = result;
  return result;
}

uint64_t sub_100004884()
{
  return sub_100004ED0(*v0, (uint64_t (*)(uint64_t))&String.hashValue.getter);
}

uint64_t sub_1000048B4()
{
  return sub_10000474C();
}

Swift::Int sub_1000048D0()
{
  return sub_1000047A8();
}

uint64_t sub_1000048EC()
{
  return sub_100004ED0(*v0, (uint64_t (*)(uint64_t))&String._bridgeToObjectiveC());
}

uint64_t sub_10000491C()
{
  return sub_1000107C0();
}

uint64_t sub_100004928()
{
  return sub_100004D18() & 1;
}

uint64_t sub_100004950()
{
  sub_100005260();
  uint64_t result = sub_100004978();
  uint64_t *v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_10000497C(uint64_t a1)
{
  uint64_t v2 = sub_100004B84((unint64_t *)&qword_100083CE0, type metadata accessor for AVCQoSReportKey);
  uint64_t v3 = sub_100004B84(&qword_100083CE8, type metadata accessor for AVCQoSReportKey);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_100004A38(uint64_t a1)
{
  uint64_t v2 = sub_100004B84(&qword_100083C68, type metadata accessor for NSKeyValueChangeKey);
  uint64_t v3 = sub_100004B84(&qword_100083C70, type metadata accessor for NSKeyValueChangeKey);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_100004AF4()
{
  return sub_100004B84(&qword_100083C50, type metadata accessor for NSKeyValueChangeKey);
}

uint64_t sub_100004B3C()
{
  return sub_100004B84(&qword_100083C58, type metadata accessor for NSKeyValueChangeKey);
}

uint64_t sub_100004B84(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100004BCC()
{
  return sub_100004B84(&qword_100083C60, type metadata accessor for NSKeyValueChangeKey);
}

uint64_t sub_100004C14@<X0>(void *a1@<X8>)
{
  NSString v2 = sub_10005E8F0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_100004C5C(uint64_t a1)
{
  uint64_t v2 = sub_100004B84((unint64_t *)&qword_100083CF0, type metadata accessor for Key);
  uint64_t v3 = sub_100004B84(&qword_100083CF8, type metadata accessor for Key);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_100004D18()
{
  uint64_t v0 = sub_10005E920();
  uint64_t v2 = v1;
  if (v0 == sub_10005E920() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_10005F140();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_100004DA0(uint64_t a1, id *a2)
{
  char v3 = sub_10005E910();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_100004E20(uint64_t a1, id *a2)
{
  uint64_t result = sub_10005E900();
  *a2 = 0;
  return result;
}

NSString sub_100004E98()
{
  sub_10005E920();
  NSString v0 = sub_10005E8F0();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_100004ED0(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = sub_10005E920();
  uint64_t v4 = a2(v3);
  swift_bridgeObjectRelease();
  return v4;
}

void type metadata accessor for AVCQoSReportKey(uint64_t a1)
{
}

void type metadata accessor for Key(uint64_t a1)
{
}

void type metadata accessor for CGImage(uint64_t a1)
{
}

void type metadata accessor for UIEdgeInsets(uint64_t a1)
{
}

void type metadata accessor for State(uint64_t a1)
{
}

void type metadata accessor for SidecarSidebarPosition(uint64_t a1)
{
}

void type metadata accessor for CGPoint(uint64_t a1)
{
}

uint64_t sub_100004F9C()
{
  return sub_100004B84(&qword_100083CB0, type metadata accessor for Key);
}

uint64_t sub_100004FE4()
{
  return sub_100004B84(&qword_100083CB8, type metadata accessor for Key);
}

uint64_t sub_10000502C()
{
  return sub_100004B84(&qword_100083CC0, type metadata accessor for AVCQoSReportKey);
}

uint64_t sub_100005074()
{
  return sub_100004B84(&qword_100083CC8, type metadata accessor for AVCQoSReportKey);
}

uint64_t sub_1000050BC()
{
  return sub_100004B84(&qword_100083CD0, type metadata accessor for AVCQoSReportKey);
}

uint64_t sub_100005104()
{
  return sub_100004B84(&qword_100083CD8, type metadata accessor for Key);
}

void *initializeWithCopy for Sockaddr(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x80uLL);
}

uint64_t getEnumTagSinglePayload for Sockaddr(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 128)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for Sockaddr(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 128) = v3;
  return result;
}

void type metadata accessor for sockaddr_storage(uint64_t a1)
{
}

void sub_1000051D4(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t variable initialization expression of Clock.heartbeatTimer()
{
  return 0;
}

uint64_t variable initialization expression of Clock.heartbeat()
{
  return 0;
}

uint64_t sub_100005260()
{
  return *(void *)v0;
}

uint64_t sub_10000526C()
{
  sub_100007F60(0, &qword_100083F38);
  uint64_t result = sub_100023344(51);
  qword_100083DD0 = result;
  return result;
}

void sub_1000052B4(uint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t v33 = sub_10005EC80();
  sub_100008DCC();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_100008DE8();
  uint64_t v7 = sub_10005EC60();
  __chkstk_darwin(v7);
  sub_100008E04();
  uint64_t v8 = sub_10005E7E0();
  __chkstk_darwin(v8 - 8);
  *(void *)(v1 + OBJC_IVAR____TtC17ContinuityDisplay16HIDEventObserver_timeSyncClock) = 0;
  v9 = (_OWORD *)(v1 + OBJC_IVAR____TtC17ContinuityDisplay16HIDEventObserver_touchBounds);
  _OWORD *v9 = 0u;
  v9[1] = 0u;
  uint64_t v10 = OBJC_IVAR____TtC17ContinuityDisplay16HIDEventObserver_tracking;
  type metadata accessor for TouchTrackerLog();
  swift_allocObject();
  *(void *)(v1 + v10) = TouchTrackerLog.init()();
  uint64_t v11 = v1 + OBJC_IVAR____TtC17ContinuityDisplay16HIDEventObserver_keyboardBounds;
  *(_OWORD *)uint64_t v11 = 0u;
  *(_OWORD *)(v11 + 16) = 0u;
  *(unsigned char *)(v11 + 32) = 1;
  *(unsigned char *)(v1 + OBJC_IVAR____TtC17ContinuityDisplay16HIDEventObserver_peerSupportsHIDReportExtensions) = 0;
  uint64_t v32 = OBJC_IVAR____TtC17ContinuityDisplay16HIDEventObserver_dispatchQueue;
  sub_100007F60(0, (unint64_t *)&qword_100084110);
  sub_10005E7D0();
  aBlock = (void **)_swiftEmptyArrayStorage;
  sub_100007DCC(&qword_100083F20, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_100007D1C(&qword_100083F28);
  sub_100007E14(&qword_100083F30, &qword_100083F28);
  sub_10005EEE0();
  (*(void (**)(uint64_t, void, uint64_t))(v5 + 104))(v2, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v33);
  if (qword_100083B30 != -1) {
    swift_once();
  }
  id v12 = (id)qword_100083DD0;
  *(void *)(v1 + v32) = sub_10005ECC0();
  *(void *)(v1 + OBJC_IVAR____TtC17ContinuityDisplay16HIDEventObserver_hidStream) = 0;
  *(void *)(v1 + OBJC_IVAR____TtC17ContinuityDisplay16HIDEventObserver_hidDevice) = 0;
  uint64_t v13 = OBJC_IVAR____TtC17ContinuityDisplay16HIDEventObserver_keyboardReport;
  type metadata accessor for HIDReport();
  v14 = HIDReport.__allocating_init(count:)(8);
  swift_retain();
  v15 = KeyboardReport.reportID.unsafeMutableAddressor();
  HIDReport.subscript.setter(*v15, 0);
  swift_release();
  *(void *)(v3 + v13) = v14;
  uint64_t v16 = v3 + OBJC_IVAR____TtC17ContinuityDisplay16HIDEventObserver_logger;
  uint64_t v17 = sub_10005E750();
  uint64_t v18 = *(void *)(v17 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v16, a1, v17);
  id v19 = [self mainScreen];
  [v19 bounds];
  uint64_t v21 = v20;
  uint64_t v23 = v22;

  v24 = (void *)(v3 + OBJC_IVAR____TtC17ContinuityDisplay16HIDEventObserver_screenSize);
  void *v24 = v21;
  v24[1] = v23;
  v25 = (void *)UIApp;
  if (UIApp)
  {
    v39 = sub_100007F00;
    uint64_t v40 = v3;
    aBlock = _NSConcreteStackBlock;
    uint64_t v36 = 1107296256;
    v37 = sub_100005898;
    v38 = &unk_1000767B8;
    v26 = _Block_copy(&aBlock);
    swift_retain();
    id v27 = v25;
    swift_release();
    [v27 _setHIDEventObserver:v26 onQueue:*(void *)(v3 + OBJC_IVAR____TtC17ContinuityDisplay16HIDEventObserver_dispatchQueue)];
    _Block_release(v26);

    id v28 = sub_100007F04();
    if (!v28)
    {
LABEL_7:
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(a1, v17);
      return;
    }
    if (kCFRunLoopDefaultMode)
    {
      v29 = v28;
      v39 = sub_100005904;
      uint64_t v40 = 0;
      aBlock = _NSConcreteStackBlock;
      uint64_t v36 = 1107296256;
      v37 = sub_10000C5B0;
      v38 = &unk_1000767E0;
      v30 = _Block_copy(&aBlock);
      v31 = v29;
      CFRunLoopPerformBlock(v31, kCFRunLoopDefaultMode, v30);
      _Block_release(v30);

      CFRunLoopWakeUp(v31);
      goto LABEL_7;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_10000581C(void *a1)
{
  if (!a1)
  {
    __break(1u);
    return;
  }
  id v4 = a1;
  int Type = IOHIDEventGetType();
  if (Type == 3)
  {
    sub_100005F54(v4);
  }
  else if (Type == 39)
  {
    sub_100006054(v4);
  }
  else
  {
    BOOL v2 = Type == 11;
    uint64_t v3 = v4;
    if (!v2) {
      goto LABEL_10;
    }
    sub_100006C14(v4);
  }
  uint64_t v3 = v4;
LABEL_10:
}

void sub_100005898(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

uint64_t sub_100005904()
{
  return sub_10002348C(51);
}

uint64_t sub_100005948(uint64_t a1)
{
  BOOL v2 = (unsigned char *)(a1 + OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_peerSupportsHIDReportExtensions);
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + OBJC_IVAR____TtC17ContinuityDisplay16HIDEventObserver_peerSupportsHIDReportExtensions) = *v2;
  return result;
}

uint64_t sub_1000059A0(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10005E750();
  sub_100008DCC();
  uint64_t v6 = v5;
  double v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = [a1 rapportStream:v8];
  [v11 setDispatchQueue:*(void *)(v2 + OBJC_IVAR____TtC17ContinuityDisplay16HIDEventObserver_dispatchQueue)];

  id v12 = *(void **)(v2 + OBJC_IVAR____TtC17ContinuityDisplay16HIDEventObserver_hidStream);
  *(void *)(v2 + OBJC_IVAR____TtC17ContinuityDisplay16HIDEventObserver_hidStream) = a1;

  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v10, v2 + OBJC_IVAR____TtC17ContinuityDisplay16HIDEventObserver_logger, v4);
  type metadata accessor for DisplayHIDDevice();
  swift_allocObject();
  *(void *)(v2 + OBJC_IVAR____TtC17ContinuityDisplay16HIDEventObserver_hidDevice) = sub_10001E270((uint64_t)v10, a1);
  return swift_release();
}

uint64_t sub_100005AE0()
{
  if (*(void *)(v0 + OBJC_IVAR____TtC17ContinuityDisplay16HIDEventObserver_hidDevice))
  {
    swift_retain();
    sub_10001E4F0();
    return swift_release();
  }
  return result;
}

uint64_t sub_100005B38(uint64_t result)
{
  if (*(void *)(v1 + OBJC_IVAR____TtC17ContinuityDisplay16HIDEventObserver_hidDevice))
  {
    uint64_t v2 = result;
    swift_retain();
    sub_10001F010(v2);
    return swift_release();
  }
  return result;
}

uint64_t sub_100005B98()
{
  sub_10005ECA0();
  return v1;
}

uint64_t sub_100005C0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned char *a4@<X8>)
{
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(**(void **)(a1
                                                                     + OBJC_IVAR____TtC17ContinuityDisplay16HIDEventObserver_tracking)
                                                       + 136))(a2, a3);
  *a4 = result & 1;
  return result;
}

uint64_t sub_100005C7C(void *a1)
{
  [a1 _pathIndex];
  [a1 timestamp];
  HostTime.init(nanoseconds:)(v2 * 1000000000.0);

  return sub_100005B98();
}

uint64_t sub_100005CEC(uint64_t a1)
{
  uint64_t v5 = sub_10005E7B0();
  sub_100008DCC();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_100008DE8();
  uint64_t v9 = sub_10005E7E0();
  sub_100008DCC();
  uint64_t v11 = v10;
  __chkstk_darwin(v12);
  sub_100008E04();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v1;
  sub_100007CB4(a1, v13 + 24);
  aBlock[4] = sub_100007D60;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10000C5B0;
  aBlock[3] = &unk_100076790;
  uint64_t v14 = _Block_copy(aBlock);
  swift_retain();
  sub_10005E7D0();
  sub_100007DCC((unint64_t *)&qword_1000848D0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100007D1C((uint64_t *)&unk_100083FD0);
  sub_100007E14((unint64_t *)&qword_1000848E0, (uint64_t *)&unk_100083FD0);
  sub_10005EEE0();
  sub_10005ECB0();
  _Block_release(v14);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v2, v5);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v3, v9);
  return swift_release();
}

uint64_t sub_100005F3C(uint64_t a1, uint64_t a2)
{
  return sub_100007CB4(a2, a1 + OBJC_IVAR____TtC17ContinuityDisplay16HIDEventObserver_keyboardBounds);
}

void sub_100005F54(void *a1)
{
  id v10 = a1;
  BOOL v2 = IOHIDEventGetType() == 3;
  uint64_t v3 = v10;
  if (v2)
  {
    uint64_t IntegerValue = IOHIDEventGetIntegerValue();
    uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC17ContinuityDisplay16HIDEventObserver_keyboardReport);
    id v6 = v10;
    Swift::Int v7 = IOHIDEventGetIntegerValue();
    Swift::Int v8 = IOHIDEventGetIntegerValue();
    LODWORD(v7) = HIDUsage.init(page:usage:)(v7, v8);

    SidecarHID::HIDUsage v9 = (SidecarHID::HIDUsage)v7;
    if (IntegerValue) {
      KeyboardReport.addUsage(_:)(v9);
    }
    else {
      KeyboardReport.removeUsage(_:)(v9);
    }
    uint64_t v3 = v10;
    if (*(void *)(v1 + OBJC_IVAR____TtC17ContinuityDisplay16HIDEventObserver_hidDevice))
    {
      swift_retain();
      sub_10001F010(v5);
      swift_release();
      uint64_t v3 = v10;
    }
  }
}

void sub_100006054(void *a1)
{
  id v3 = a1;
  if (IOHIDEventGetType() == 39
    && *(void *)(v1 + OBJC_IVAR____TtC17ContinuityDisplay16HIDEventObserver_hidDevice))
  {
    swift_retain();
    int v2 = HIDEvent.GenericGesture.gestureType.getter();
    if (v2 == 5)
    {
      sub_1000062F4();
    }
    else if (!v2)
    {
      sub_10000610C();
    }

    swift_release();
  }
  else
  {
  }
}

uint64_t sub_10000610C()
{
  type metadata accessor for HIDReport();
  uint64_t v0 = HIDReport.__allocating_init(count:)(21);
  swift_retain();
  uint64_t v1 = PencilReport.reportID.unsafeMutableAddressor();
  HIDReport.subscript.setter(*v1, 0);
  swift_release();
  Swift::UInt64 TimeStamp = IOHIDEventGetTimeStamp();
  HostTime.nanoseconds.getter();
  unint64_t v4 = v3 / 0x186A0;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v5 = HIDReport.__allocating_init(count:)(v0[3]);
    HIDReport.copy(from:)((uint64_t)v0);
    swift_release();
    uint64_t v0 = v5;
  }
  HIDReport.setValue(_:at:)(v4, 9);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    id v6 = HIDReport.__allocating_init(count:)(v0[3]);
    HIDReport.copy(from:)((uint64_t)v0);
    swift_release();
    uint64_t v0 = v6;
  }
  HIDReport.setValue(_:at:)(TimeStamp, 11);
  char v7 = 0;
  do
  {
    char v8 = v7;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      SidecarHID::HIDUsage v9 = HIDReport.__allocating_init(count:)(v0[3]);
      HIDReport.copy(from:)((uint64_t)v0);
      swift_release();
      uint64_t v0 = v9;
    }
    HIDReport.setValue(_:at:bit:)(1, 5, 2);
    uint64_t v10 = swift_retain();
    sub_100006674(v10);
    swift_release();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v11 = HIDReport.__allocating_init(count:)(v0[3]);
      HIDReport.copy(from:)((uint64_t)v0);
      swift_release();
      uint64_t v0 = v11;
    }
    HIDReport.setValue(_:at:bit:)(0, 5, 2);
    uint64_t v12 = swift_retain();
    sub_100006674(v12);
    swift_release();
    char v7 = 1;
  }
  while ((v8 & 1) == 0);

  return swift_release();
}

uint64_t sub_1000062F4()
{
  uint64_t result = sub_100006738();
  if (v1)
  {
    type metadata accessor for HIDReport();
    HIDReport.__allocating_init(count:)(32);
    swift_retain();
    int v2 = SqueezeGestureReport.reportID.unsafeMutableAddressor();
    HIDReport.subscript.setter(*v2, 0);
    swift_release();
    uint64_t TimeStamp = IOHIDEventGetTimeStamp();
    sub_1000080D4();
    HIDReport.storeValue<A>(_:to:at:)((uint64_t)&TimeStamp, (uint64_t)&type metadata for UInt64, 2, (uint64_t)&type metadata for UInt64);
    LOWORD(TimeStamp) = word_100064122[(char)HIDEvent.phase.getter()];
    sub_10000806C();
    HIDReport.storeValue<A>(_:to:at:)((uint64_t)&TimeStamp, (uint64_t)&type metadata for UInt16, 1, (uint64_t)&type metadata for UInt16);
    sub_100008C74();
    HIDReport.loadValue<A>(from:at:)(0, (uint64_t)&type metadata for UInt32, (uint64_t)&TimeStamp);
    char v3 = TimeStamp;
    if (TimeStamp >= 0xFF) {
      char v3 = -1;
    }
    LOBYTE(TimeStamp) = v3;
    sub_100008020();
    HIDReport.storeValue<A>(_:to:at:)((uint64_t)&TimeStamp, (uint64_t)&type metadata for UInt8, 10, (uint64_t)&type metadata for UInt8);
    HIDReport.loadValue<A>(from:at:)(4, (uint64_t)&type metadata for UInt32, (uint64_t)&TimeStamp);
    char v4 = TimeStamp;
    if (TimeStamp >= 0xFF) {
      char v4 = -1;
    }
    LOBYTE(TimeStamp) = v4;
    HIDReport.storeValue<A>(_:to:at:)((uint64_t)&TimeStamp, (uint64_t)&type metadata for UInt8, 11, (uint64_t)&type metadata for UInt8);
    double v5 = COERCE_DOUBLE(HIDReport.getValue(_:at:)(8uLL));
    if (v5 <= 0.0) {
      double v5 = 0.0;
    }
    if (v5 > 1.0) {
      double v5 = 1.0;
    }
    HIDReport.storeValue<A>(_:to:at:logicalMinimum:logicalMaximum:physicalMinimum:physicalMaximum:exponent:)(*(uint64_t *)&v5, 0, (uint64_t)&type metadata for UInt32, 12, (uint64_t)&type metadata for UInt32);
    double v6 = COERCE_DOUBLE(HIDReport.getValue(_:at:)(0x10uLL));
    if (v6 <= 0.0) {
      double v6 = 0.0;
    }
    if (v6 > 1.0) {
      double v6 = 1.0;
    }
    HIDReport.storeValue<A>(_:to:at:logicalMinimum:logicalMaximum:physicalMinimum:physicalMaximum:exponent:)(*(uint64_t *)&v6, 0, (uint64_t)&type metadata for UInt32, 16, (uint64_t)&type metadata for UInt32);
    double v7 = COERCE_DOUBLE(HIDReport.getValue(_:at:)(0x18uLL));
    if (v7 <= 0.0) {
      double v7 = 0.0;
    }
    if (v7 > 1.0) {
      double v7 = 1.0;
    }
    HIDReport.storeValue<A>(_:to:at:logicalMinimum:logicalMaximum:physicalMinimum:physicalMaximum:exponent:)(*(uint64_t *)&v7, 0, (uint64_t)&type metadata for UInt32, 20, (uint64_t)&type metadata for UInt32);
    double v8 = COERCE_DOUBLE(HIDReport.getValue(_:at:)(0x20uLL));
    if (v8 <= 0.0) {
      double v8 = 0.0;
    }
    if (v8 > 1.0) {
      double v8 = 1.0;
    }
    HIDReport.storeValue<A>(_:to:at:logicalMinimum:logicalMaximum:physicalMinimum:physicalMaximum:exponent:)(*(uint64_t *)&v8, 0, (uint64_t)&type metadata for UInt32, 24, (uint64_t)&type metadata for UInt32);
    unint64_t v9 = HIDReport.getValue(_:at:)(0x28uLL);
    *(SidecarHID::HIDFixed_optional *)&uint64_t v10 = HIDFixed.init(doubleValue:)(*(Swift::Double *)&v9);
    if ((v10 & 0x100000000) == 0)
    {
      LODWORD(TimeStamp) = v10;
      sub_100008CC0();
      HIDReport.storeValue<A>(_:to:at:)((uint64_t)&TimeStamp, (uint64_t)&type metadata for Int32, 28, (uint64_t)&type metadata for Int32);
    }
    uint64_t v11 = swift_retain();
    sub_100005B38(v11);
    swift_release();
    return swift_release_n();
  }
  return result;
}

uint64_t sub_100006674(uint64_t result)
{
  if (*(void *)(v1 + OBJC_IVAR____TtC17ContinuityDisplay16HIDEventObserver_hidDevice))
  {
    uint64_t v2 = result;
    if (*(unsigned char *)(v1 + OBJC_IVAR____TtC17ContinuityDisplay16HIDEventObserver_peerSupportsHIDReportExtensions) == 1)
    {
      swift_retain();
      swift_retain();
    }
    else
    {
      type metadata accessor for HIDReport();
      swift_retain();
      char v3 = HIDReport.__allocating_init(count:)(19);
      HIDReport.copy(from:)(v2);
      uint64_t v2 = (uint64_t)v3;
    }
    sub_10001F010(v2);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_100006738()
{
  uint64_t v0 = sub_10005E650();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  char v3 = (char *)&v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_10005E570();
  uint64_t v4 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  double v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v40 = (char *)&v31 - v8;
  unint64_t v9 = HIDEvent.children.getter();
  uint64_t v10 = v9[2];
  if (v10)
  {
    uint64_t v32 = v6;
    uint64_t v33 = v3;
    uint64_t v34 = v1;
    uint64_t v35 = v0;
    uint64_t v11 = 0;
    unsigned int v39 = enum case for Data.Deallocator.none(_:);
    v37 = (void (**)(char *, uint64_t))(v4 + 8);
    v38 = (void (**)(char *, void, uint64_t))(v4 + 104);
    while (1)
    {
      id v12 = (id)v9[v11 + 4];
      if (IOHIDEventGetType() == 1
        && IOHIDEventGetIntegerValue() == 65280
        && IOHIDEventGetIntegerValue() == 17)
      {
        break;
      }
LABEL_17:
      ++v11;

      if (v10 == v11) {
        goto LABEL_18;
      }
    }
    id v13 = v12;
    uint64_t IntegerValue = IOHIDEventGetIntegerValue();
    id v41 = v13;
    uint64_t DataValue = IOHIDEventGetDataValue();
    uint64_t v16 = v40;
    uint64_t v36 = *v38;
    v36(v40, v39, v42);
    sub_10005E560();
    if (IntegerValue)
    {
      sub_10005E500();
      swift_allocObject();
      swift_retain();
      sub_10005E4B0();
      uint64_t IntegerValue = sub_10005E5C0();
      unint64_t v18 = v17;
      swift_release();
    }
    else
    {
      id v19 = (void (*)(uint64_t, void))sub_10005E560();
      v19(DataValue, 0);
      swift_release();
      swift_release();
      unint64_t v18 = 0xC000000000000000;
    }
    (*v37)(v16, v42);
    id v20 = v41;

    switch(v18 >> 62)
    {
      case 1uLL:
        sub_100008D0C(IntegerValue, v18);
        LODWORD(v21) = HIDWORD(IntegerValue) - IntegerValue;
        if (__OFSUB__(HIDWORD(IntegerValue), IntegerValue))
        {
          __break(1u);
LABEL_21:
          __break(1u);
          JUMPOUT(0x100006C04);
        }
        uint64_t v21 = (int)v21;
LABEL_14:
        if (v21 < 48) {
          goto LABEL_17;
        }
        type metadata accessor for HIDReport();
        HIDReport.__allocating_init(count:)(48);
        id v25 = v20;
        IOHIDEventGetIntegerValue();
        IOHIDEventGetDataValue();
        v36(v32, v39, v42);
        uint64_t v26 = sub_10005E590();
        unint64_t v28 = v27;

        sub_100008D64(v26, v28);
        v29 = v33;
        sub_10005E5A0();
        sub_100008D0C(v26, v28);
        sub_100008D0C(v26, v28);
        (*(void (**)(char *, uint64_t))(v34 + 8))(v29, v35);
        uint64_t TimeStamp = IOHIDEventGetTimeStamp();
        swift_bridgeObjectRelease();

        break;
      case 2uLL:
        uint64_t v23 = *(void *)(IntegerValue + 16);
        uint64_t v22 = *(void *)(IntegerValue + 24);
        sub_100008D0C(IntegerValue, v18);
        uint64_t v21 = v22 - v23;
        if (!__OFSUB__(v22, v23)) {
          goto LABEL_14;
        }
        goto LABEL_21;
      case 3uLL:
        sub_100008D0C(IntegerValue, v18);
        goto LABEL_17;
      default:
        sub_100008D0C(IntegerValue, v18);
        uint64_t v21 = BYTE6(v18);
        goto LABEL_14;
    }
  }
  else
  {
LABEL_18:
    swift_bridgeObjectRelease();
    return 0;
  }
  return TimeStamp;
}

void sub_100006C14(void *a1)
{
  id v75 = a1;
  if (IOHIDEventGetType() == 11)
  {
    uint64_t v1 = HIDEvent.Digitizer.children.getter();

    v80 = _swiftEmptyArrayStorage;
    uint64_t v2 = *((void *)v1 + 2);
    if (v2)
    {
      id v3 = *((id *)v1 + 4);
      unint64_t IntegerValue = IOHIDEventGetIntegerValue();
      if ((IntegerValue & 0x8000000000000000) != 0 || HIDWORD(IntegerValue)) {
        goto LABEL_100;
      }
      uint64_t v5 = 0;
      while (1)
      {
        if (IntegerValue == 2) {
          goto LABEL_7;
        }
        unint64_t v6 = IOHIDEventGetIntegerValue();
        if ((v6 & 0x8000000000000000) != 0 || HIDWORD(v6)) {
          goto LABEL_100;
        }
        if (v6 || (IOHIDEventGetIntegerValue() & 0x400) != 0 || (IOHIDEventGetIntegerValue() & 0x800000) != 0)
        {
        }
        else
        {
LABEL_7:
          sub_10005EFA0();
          sub_10005EFD0();
          sub_10005EFE0();
          sub_10005EFB0();
        }
        if (v2 - 1 == v5)
        {
          swift_bridgeObjectRelease();
          uint64_t v7 = v80;
          goto LABEL_24;
        }
        if ((unint64_t)(v5 + 1) >= *((void *)v1 + 2)) {
          break;
        }
        id v3 = *(id *)&v1[8 * v5 + 40];
        unint64_t IntegerValue = IOHIDEventGetIntegerValue();
        if ((IntegerValue & 0x8000000000000000) == 0)
        {
          ++v5;
          if (!HIDWORD(IntegerValue)) {
            continue;
          }
        }
        goto LABEL_100;
      }
      __break(1u);
LABEL_96:
      __break(1u);
      goto LABEL_97;
    }
    swift_bridgeObjectRelease();
    uint64_t v7 = _swiftEmptyArrayStorage;
LABEL_24:
    uint64_t v8 = *(void *)(v76 + OBJC_IVAR____TtC17ContinuityDisplay16HIDEventObserver_tracking);
    uint64_t TimeStamp = IOHIDEventGetTimeStamp();
    uint64_t v10 = (void *)(*(uint64_t (**)(void *, uint64_t, BOOL (*)(uint64_t), uint64_t, ValueMetadata *, _UNKNOWN **))(*(void *)v8 + 128))(v7, TimeStamp, sub_100008018, v76, &type metadata for HIDEvent.Digitizer, &protocol witness table for HIDEvent.Digitizer);
    swift_release();
    v80 = v10;
    swift_bridgeObjectRetain();
    sub_100007F9C((uint64_t *)&v80);
    swift_bridgeObjectRelease();
    uint64_t v11 = v80;
    uint64_t v12 = v80[2];
    if (v12 && *(void *)(v76 + OBJC_IVAR____TtC17ContinuityDisplay16HIDEventObserver_hidDevice))
    {
      swift_retain();
      uint64_t v71 = IOHIDEventGetTimeStamp();
      HostTime.nanoseconds.getter();
      double v14 = (double)v13 * 0.00001;
      if ((~*(void *)&v14 & 0x7FF0000000000000) != 0)
      {
        if (v14 > -9.22337204e18)
        {
          if (v14 < 9.22337204e18)
          {
            uint64_t v15 = 0;
            v83 = _swiftEmptyArrayStorage;
            uint64_t v16 = (double *)(v76 + OBJC_IVAR____TtC17ContinuityDisplay16HIDEventObserver_touchBounds);
            uint64_t v69 = OBJC_IVAR____TtC17ContinuityDisplay16HIDEventObserver_timeSyncClock;
            uint64_t v70 = (uint64_t)v14;
            int64_t v17 = 0;
            v72 = v11;
            v73 = (double *)(v76 + OBJC_IVAR____TtC17ContinuityDisplay16HIDEventObserver_touchBounds);
            uint64_t v74 = v12;
            while (1)
            {
              id v18 = (id)v11[v15 + 4];
              IOHIDEventGetDoubleValue();
              double v20 = v19;
              IOHIDEventGetDoubleValue();
              double v22 = v21;
              double v23 = *v16;
              double v24 = v16[1];
              double v25 = v16[2];
              double v26 = v16[3];
              unint64_t v27 = IOHIDEventGetIntegerValue();
              if ((v27 & 0x8000000000000000) != 0 || HIDWORD(v27)) {
                goto LABEL_100;
              }
              double v28 = (v20 - v23) / v25;
              double v29 = (v22 - v24) / v26;
              if (!v27)
              {
                v30 = PencilReport.init(digitizerEvent:)(v18);
                if (v30)
                {
                  uint64_t v31 = (uint64_t)v30;
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                  {
                    type metadata accessor for HIDReport();
                    uint64_t v32 = HIDReport.__allocating_init(count:)(*(void *)(v31 + 24));
                    HIDReport.copy(from:)(v31);
                    swift_release();
                    uint64_t v31 = (uint64_t)v32;
                  }
                  double v33 = 0.0;
                  if (v28 > 0.0) {
                    double v33 = v28;
                  }
                  if (v33 > 1.0) {
                    double v33 = 1.0;
                  }
                  uint64_t v34 = *(void *)&v33;
                  sub_10000806C();
                  HIDReport.storeValue<A>(_:to:at:logicalMinimum:logicalMaximum:physicalMinimum:physicalMaximum:exponent:)(v34, 0, (uint64_t)&type metadata for UInt16, 1, (uint64_t)&type metadata for UInt16);
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                  {
                    type metadata accessor for HIDReport();
                    uint64_t v35 = HIDReport.__allocating_init(count:)(*(void *)(v31 + 24));
                    HIDReport.copy(from:)(v31);
                    swift_release();
                    uint64_t v31 = (uint64_t)v35;
                  }
                  double v36 = 0.0;
                  if (v29 > 0.0) {
                    double v36 = v29;
                  }
                  if (v36 > 1.0) {
                    double v36 = 1.0;
                  }
                  HIDReport.storeValue<A>(_:to:at:logicalMinimum:logicalMaximum:physicalMinimum:physicalMaximum:exponent:)(*(uint64_t *)&v36, 0, (uint64_t)&type metadata for UInt16, 3, (uint64_t)&type metadata for UInt16);
                  id v37 = (id)BKSHIDEventGetDigitizerAttributes();
                  if (!v37
                    || (v38 = v37, [v37 maximumPositionZ], double v40 = v39, v38, v40 <= 0.0))
                  {
                    char v41 = HIDReport.getValue(_:at:bit:)(5, 1uLL);
                    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                    {
                      type metadata accessor for HIDReport();
                      HIDReport.__allocating_init(count:)(*(void *)(v31 + 24));
                      HIDReport.copy(from:)(v31);
                      swift_release();
                    }
                    HIDReport.setValue(_:at:bit:)(v41 & 1, 5, 0);
                  }
                  uint64_t v42 = IOHIDEventGetTimeStamp();
                  if (*(void *)(v76 + v69))
                  {
                    swift_retain();
                    Swift::UInt64 v43 = Clock.domainTimeForMachAbsoluteTime(_:)(v42);
                    swift_release();
                  }
                  else
                  {
                    Swift::UInt64 v43 = -1;
                  }
                  sub_1000080B8(v43, v42);
                  uint64_t v44 = swift_retain();
                  sub_100006674(v44);
                  swift_release_n();
                }
              }
              unint64_t v45 = IOHIDEventGetIntegerValue();
              if ((v45 & 0x8000000000000000) != 0 || HIDWORD(v45)) {
                goto LABEL_100;
              }
              if (v45 == 2)
              {
                uint64_t v46 = v17 % 2;
                int64_t v77 = v17;
                if (v17 % 2 == 1 && (uint64_t v47 = v83[2]) != 0)
                {
                  v48 = (void *)v83[v47 + 3];
                  swift_retain();
                }
                else
                {
                  v49 = sub_1000078F8(v70, v71, (uint64_t)&v83);
                  if (v46 < 0) {
                    goto LABEL_100;
                  }
                  v48 = v49;
                }
                v80 = v48;
                unsigned __int8 v81 = 5 * v46 + 1;
                char v50 = 1;
                char v82 = 1;
                swift_retain();
                BOOL v51 = IOHIDEventGetIntegerValue() != 0;
                uint64_t v52 = (5 * v46 + 1);
                sub_100008020();
                HIDReport.loadValue<A>(from:at:)(v52, (uint64_t)&type metadata for UInt8, (uint64_t)&v79);
                char v78 = v79 & 0x7F | (v51 << 7);
                HIDReport.storeValue<A>(_:to:at:)((uint64_t)&v78, (uint64_t)&type metadata for UInt8, v52, (uint64_t)&type metadata for UInt8);
                char v53 = IOHIDEventGetIntegerValue() != 0;
                HIDReport.loadValue<A>(from:at:)(v52, (uint64_t)&type metadata for UInt8, (uint64_t)&v79);
                char v78 = v79 & 0xBF | (v53 << 6);
                HIDReport.storeValue<A>(_:to:at:)((uint64_t)&v78, (uint64_t)&type metadata for UInt8, v52, (uint64_t)&type metadata for UInt8);
                char v54 = IOHIDEventGetIntegerValue();
                TouchReport.Contact.index.setter(v54);
                uint64_t v55 = (uint64_t)v80;
                if ((v82 & 1) == 0)
                {
                  if (swift_isUniquelyReferenced_nonNull_native())
                  {
                    char v50 = 0;
                  }
                  else
                  {
                    type metadata accessor for HIDReport();
                    v56 = HIDReport.__allocating_init(count:)(*(void *)(v55 + 24));
                    HIDReport.copy(from:)(v55);
                    v80 = v56;
                    swift_release();
                    char v50 = v82;
                    uint64_t v55 = (uint64_t)v56;
                  }
                }
                uint64_t v16 = v73;
                uint64_t v57 = v81;
                uint64_t v58 = v81 + 1;
                double v59 = 0.0;
                if (v28 > 0.0) {
                  double v59 = v28;
                }
                if (v59 > 1.0) {
                  double v59 = 1.0;
                }
                uint64_t v60 = *(void *)&v59;
                sub_10000806C();
                HIDReport.storeValue<A>(_:to:at:logicalMinimum:logicalMaximum:physicalMinimum:physicalMaximum:exponent:)(v60, 0, (uint64_t)&type metadata for UInt16, v58, (uint64_t)&type metadata for UInt16);
                if (v50)
                {
                  uint64_t v12 = v74;
                  int64_t v61 = v77;
                }
                else
                {
                  int64_t v61 = v77;
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                  {
                    type metadata accessor for HIDReport();
                    v62 = HIDReport.__allocating_init(count:)(*(void *)(v55 + 24));
                    HIDReport.copy(from:)(v55);
                    v80 = v62;
                    swift_release();
                    uint64_t v57 = v81;
                  }
                  uint64_t v12 = v74;
                }
                double v63 = 0.0;
                if (v29 > 0.0) {
                  double v63 = v29;
                }
                if (v63 > 1.0) {
                  double v63 = 1.0;
                }
                HIDReport.storeValue<A>(_:to:at:logicalMinimum:logicalMaximum:physicalMinimum:physicalMaximum:exponent:)(*(uint64_t *)&v63, 0, (uint64_t)&type metadata for UInt16, v57 + 3, (uint64_t)&type metadata for UInt16);
                swift_release();

                swift_release();
                BOOL v64 = __OFADD__(v61, 1);
                int64_t v17 = v61 + 1;
                if (v64) {
                  goto LABEL_96;
                }
                uint64_t v11 = v72;
              }
              else
              {
              }
              if (v12 == ++v15)
              {
                swift_release();
                v65 = v83;
                if (v17 >= 1)
                {
                  if (v83[2])
                  {
                    swift_retain();
                    TouchReport.contactCount.setter(v17);
                    swift_release();
                    uint64_t v66 = v65[2];
                    if (v66)
                    {
                      swift_bridgeObjectRetain();
                      uint64_t v67 = 0;
                      do
                      {
                        ++v67;
                        uint64_t v68 = swift_retain();
                        sub_10001F010(v68);
                        swift_release();
                      }
                      while (v66 != v67);
                      swift_bridgeObjectRelease();
                    }
                  }
                }
                swift_release();
                swift_bridgeObjectRelease();
                return;
              }
            }
          }
          goto LABEL_99;
        }
LABEL_98:
        __break(1u);
LABEL_99:
        __break(1u);
LABEL_100:
        sub_10005F040();
        __break(1u);
        swift_release();
        __break(1u);
        return;
      }
LABEL_97:
      __break(1u);
      goto LABEL_98;
    }
    swift_release();
  }
  else
  {
  }
}

BOOL sub_10000767C(uint64_t a1, uint64_t a2)
{
  IOHIDEventGetDoubleValue();
  CGFloat v4 = v3;
  IOHIDEventGetDoubleValue();
  CGFloat v6 = v5;
  uint64_t v7 = (CGFloat *)(a2 + OBJC_IVAR____TtC17ContinuityDisplay16HIDEventObserver_keyboardBounds);
  if (*(unsigned char *)(a2 + OBJC_IVAR____TtC17ContinuityDisplay16HIDEventObserver_keyboardBounds + 32) == 1) {
    goto LABEL_6;
  }
  CGFloat v9 = v7[2];
  CGFloat v8 = v7[3];
  CGFloat v11 = *v7;
  CGFloat v10 = v7[1];
  v28.origin.x = *v7;
  v28.origin.y = v10;
  v28.size.width = v9;
  v28.size.height = v8;
  v26.x = v4;
  v26.y = v6;
  if (!CGRectContainsPoint(v28, v26))
  {
LABEL_6:
    v27.x = v4;
    v27.y = v6;
    return CGRectContainsPoint(*(CGRect *)(a2 + OBJC_IVAR____TtC17ContinuityDisplay16HIDEventObserver_touchBounds), v27);
  }
  else
  {
    uint64_t v12 = sub_10005E720();
    os_log_type_t v13 = sub_10005EC30();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = swift_slowAlloc();
      uint64_t v24 = swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 136446466;
      v25.x = v4;
      v25.y = v6;
      uint64_t v15 = NSStringFromPoint(v25);
      uint64_t v16 = sub_10005E920();
      unint64_t v18 = v17;

      sub_10000F098(v16, v18, &v24);
      sub_10005EE10();
      swift_bridgeObjectRelease();
      *(_WORD *)(v14 + 12) = 2082;
      v29.origin.x = v11;
      v29.origin.y = v10;
      v29.size.width = v9;
      v29.size.height = v8;
      double v19 = NSStringFromRect(v29);
      uint64_t v20 = sub_10005E920();
      unint64_t v22 = v21;

      sub_10000F098(v20, v22, &v24);
      sub_10005EE10();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "Keyboard: %{public}s in %{public}s", (uint8_t *)v14, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    return 0;
  }
}

void *sub_1000078F8(__int16 a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for HIDReport();
  CGFloat v6 = HIDReport.__allocating_init(count:)(23);
  swift_retain();
  uint64_t v7 = TouchReport.reportID.unsafeMutableAddressor();
  HIDReport.subscript.setter(*v7, 0);
  swift_release();
  __int16 v10 = a1;
  sub_10000806C();
  HIDReport.storeValue<A>(_:to:at:)((uint64_t)&v10, (uint64_t)&type metadata for UInt16, 13, (uint64_t)&type metadata for UInt16);
  uint64_t v9 = a2;
  sub_1000080D4();
  HIDReport.storeValue<A>(_:to:at:)((uint64_t)&v9, (uint64_t)&type metadata for UInt64, 15, (uint64_t)&type metadata for UInt64);
  swift_retain();
  sub_10005EA90();
  if (*(void *)(*(void *)a3 + 16) >= *(void *)(*(void *)a3 + 24) >> 1) {
    sub_10005EB00();
  }
  sub_10005EB30();
  sub_10005EAE0();
  return v6;
}

uint64_t sub_100007A0C()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC17ContinuityDisplay16HIDEventObserver_logger;
  uint64_t v2 = sub_10005E750();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_release();

  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_100007AD0()
{
  sub_100007A0C();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v1, v2);
}

uint64_t sub_100007B28()
{
  return type metadata accessor for HIDEventObserver();
}

uint64_t type metadata accessor for HIDEventObserver()
{
  uint64_t result = qword_100083E40;
  if (!qword_100083E40) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100007B78()
{
  uint64_t result = sub_10005E750();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_100007C5C@<X0>(unsigned char *a1@<X8>)
{
  return sub_100005C0C(v1[2], v1[3], v1[4], a1);
}

uint64_t sub_100007C7C()
{
  swift_release();

  return _swift_deallocObject(v0, 57, 7);
}

uint64_t sub_100007CB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007D1C(&qword_100083F18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100007D1C(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_100007D60()
{
  return sub_100005F3C(*(void *)(v0 + 16), v0 + 24);
}

uint64_t sub_100007D6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100007D7C()
{
  return swift_release();
}

uint64_t sub_100007D84(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_100007DCC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100007E14(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100007D84(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_100007E64(uint64_t a1)
{
  if (a1 < 0)
  {
    uint64_t result = (void *)sub_10005F040();
    __break(1u);
  }
  else if (a1)
  {
    uint64_t result = (void *)sub_10005EB10();
    result[2] = a1;
  }
  else
  {
    return &_swiftEmptyArrayStorage;
  }
  return result;
}

id sub_100007F04()
{
  if ((objc_opt_respondsToSelector() & 1) == 0) {
    return 0;
  }
  uint64_t v0 = (void *)UIApp;

  return _[v0 _eventFetchRunLoop];
}

uint64_t sub_100007F60(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_100007F9C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v2 = sub_100008C5C(v2);
    *a1 = v2;
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_100008120(v6);
  return sub_10005EFB0();
}

BOOL sub_100008018(uint64_t a1)
{
  return sub_10000767C(a1, v1);
}

unint64_t sub_100008020()
{
  unint64_t result = qword_100083F40;
  if (!qword_100083F40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100083F40);
  }
  return result;
}

unint64_t sub_10000806C()
{
  unint64_t result = qword_100085040;
  if (!qword_100085040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100085040);
  }
  return result;
}

uint64_t sub_1000080B8(uint64_t a1, uint64_t a2)
{
  return _kdebug_trace(553976324, a1, a2, 0, 0);
}

unint64_t sub_1000080D4()
{
  unint64_t result = qword_100085050;
  if (!qword_100085050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100085050);
  }
  return result;
}

void sub_100008120(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  Swift::Int v4 = sub_10005F0E0(v3);
  if (v4 >= v3)
  {
    if (v3 < 0) {
      goto LABEL_132;
    }
    if (v3) {
      sub_100008814(0, v3, 1, a1);
    }
    return;
  }
  Swift::Int v5 = v4;
  CGFloat v6 = sub_100007E64(v3 / 2);
  uint64_t v105 = v3;
  v106 = v7;
  v108 = v6;
  v100 = a1;
  if (v3 <= 0) {
    goto LABEL_96;
  }
  Swift::Int v101 = v5;
  Swift::Int v8 = 0;
  uint64_t v9 = *a1;
  uint64_t v99 = *a1 - 8;
  __int16 v10 = (char *)&_swiftEmptyArrayStorage;
  uint64_t v107 = *a1;
  while (1)
  {
    Swift::Int v11 = v8++;
    Swift::Int v104 = v11;
    if (v8 < v3)
    {
      v102 = v10;
      uint64_t v12 = *(void **)(v9 + 8 * v11);
      id v13 = *(id *)(v9 + 8 * v8);
      id v14 = v12;
      uint64_t IntegerValue = IOHIDEventGetIntegerValue();
      uint64_t v16 = IOHIDEventGetIntegerValue();

      Swift::Int v8 = v11 + 2;
      if (v11 + 2 < v3)
      {
        Swift::Int v17 = v11;
        while (1)
        {
          uint64_t v18 = v107 + 8 * v17;
          double v19 = *(void **)(v18 + 8);
          id v20 = *(id *)(v18 + 16);
          id v21 = v19;
          uint64_t v22 = IOHIDEventGetIntegerValue();
          uint64_t v23 = IOHIDEventGetIntegerValue();

          if (IntegerValue < v16 == v22 >= v23) {
            break;
          }
          uint64_t v24 = v17 + 3;
          ++v17;
          Swift::Int v3 = v105;
          if (v24 >= v105)
          {
            Swift::Int v8 = v105;
            goto LABEL_11;
          }
        }
        Swift::Int v8 = v17 + 2;
        Swift::Int v3 = v105;
LABEL_11:
        Swift::Int v11 = v104;
      }
      __int16 v10 = v102;
      if (IntegerValue >= v16)
      {
        uint64_t v9 = v107;
      }
      else
      {
        uint64_t v9 = v107;
        if (v8 < v11) {
          goto LABEL_133;
        }
        if (v11 < v8)
        {
          NSPoint v25 = (uint64_t *)(v99 + 8 * v8);
          Swift::Int v26 = v8;
          Swift::Int v27 = v11;
          CGRect v28 = (uint64_t *)(v107 + 8 * v11);
          do
          {
            if (v27 != --v26)
            {
              if (!v107) {
                goto LABEL_139;
              }
              uint64_t v29 = *v28;
              *CGRect v28 = *v25;
              uint64_t *v25 = v29;
            }
            ++v27;
            --v25;
            ++v28;
          }
          while (v27 < v26);
        }
      }
    }
    if (v8 < v3)
    {
      if (__OFSUB__(v8, v11)) {
        goto LABEL_131;
      }
      if (v8 - v11 < v101)
      {
        if (__OFADD__(v11, v101)) {
          goto LABEL_134;
        }
        if (v11 + v101 >= v3) {
          Swift::Int v30 = v3;
        }
        else {
          Swift::Int v30 = v11 + v101;
        }
        if (v30 < v11)
        {
LABEL_135:
          __break(1u);
          goto LABEL_136;
        }
        if (v8 != v30)
        {
          v103 = v10;
          uint64_t v31 = v99 + 8 * v8;
          do
          {
            uint64_t v32 = *(void **)(v9 + 8 * v8);
            Swift::Int v33 = v11;
            uint64_t v34 = v31;
            while (1)
            {
              uint64_t v35 = *(void **)v34;
              id v36 = v32;
              id v37 = v35;
              uint64_t v38 = IOHIDEventGetIntegerValue();
              uint64_t v39 = IOHIDEventGetIntegerValue();

              if (v38 >= v39) {
                break;
              }
              uint64_t v9 = v107;
              if (!v107) {
                goto LABEL_137;
              }
              double v40 = *(void **)v34;
              uint64_t v32 = *(void **)(v34 + 8);
              *(void *)uint64_t v34 = v32;
              *(void *)(v34 + 8) = v40;
              v34 -= 8;
              if (v8 == ++v33) {
                goto LABEL_38;
              }
            }
            uint64_t v9 = v107;
LABEL_38:
            ++v8;
            v31 += 8;
            Swift::Int v11 = v104;
          }
          while (v8 != v30);
          Swift::Int v8 = v30;
          __int16 v10 = v103;
        }
      }
    }
    if (v8 < v11) {
      goto LABEL_130;
    }
    char v41 = v10;
    if (swift_isUniquelyReferenced_nonNull_native()) {
      __int16 v10 = v41;
    }
    else {
      __int16 v10 = sub_100008B50(0, *((void *)v41 + 2) + 1, 1, v41);
    }
    unint64_t v43 = *((void *)v10 + 2);
    unint64_t v42 = *((void *)v10 + 3);
    unint64_t v44 = v43 + 1;
    uint64_t v9 = v107;
    if (v43 >= v42 >> 1)
    {
      v92 = sub_100008B50((char *)(v42 > 1), v43 + 1, 1, v10);
      uint64_t v9 = v107;
      __int16 v10 = v92;
    }
    *((void *)v10 + 2) = v44;
    unint64_t v45 = v10 + 32;
    uint64_t v46 = &v10[16 * v43 + 32];
    *(void *)uint64_t v46 = v11;
    *((void *)v46 + 1) = v8;
    if (v43) {
      break;
    }
    unint64_t v44 = 1;
LABEL_88:
    Swift::Int v3 = v105;
    if (v8 >= v105) {
      goto LABEL_97;
    }
  }
  while (1)
  {
    unint64_t v47 = v44 - 1;
    if (v44 >= 4)
    {
      uint64_t v52 = &v45[16 * v44];
      uint64_t v53 = *((void *)v52 - 8);
      uint64_t v54 = *((void *)v52 - 7);
      BOOL v58 = __OFSUB__(v54, v53);
      uint64_t v55 = v54 - v53;
      if (v58) {
        goto LABEL_115;
      }
      uint64_t v57 = *((void *)v52 - 6);
      uint64_t v56 = *((void *)v52 - 5);
      BOOL v58 = __OFSUB__(v56, v57);
      uint64_t v50 = v56 - v57;
      char v51 = v58;
      if (v58) {
        goto LABEL_116;
      }
      unint64_t v59 = v44 - 2;
      uint64_t v60 = &v45[16 * v44 - 32];
      uint64_t v62 = *(void *)v60;
      uint64_t v61 = *((void *)v60 + 1);
      BOOL v58 = __OFSUB__(v61, v62);
      uint64_t v63 = v61 - v62;
      if (v58) {
        goto LABEL_117;
      }
      BOOL v58 = __OFADD__(v50, v63);
      uint64_t v64 = v50 + v63;
      if (v58) {
        goto LABEL_119;
      }
      if (v64 >= v55)
      {
        char v82 = &v45[16 * v47];
        uint64_t v84 = *(void *)v82;
        uint64_t v83 = *((void *)v82 + 1);
        BOOL v58 = __OFSUB__(v83, v84);
        uint64_t v85 = v83 - v84;
        if (v58) {
          goto LABEL_125;
        }
        BOOL v75 = v50 < v85;
        goto LABEL_77;
      }
    }
    else
    {
      if (v44 != 3)
      {
        uint64_t v76 = *((void *)v10 + 4);
        uint64_t v77 = *((void *)v10 + 5);
        BOOL v58 = __OFSUB__(v77, v76);
        uint64_t v69 = v77 - v76;
        char v70 = v58;
        goto LABEL_71;
      }
      uint64_t v49 = *((void *)v10 + 4);
      uint64_t v48 = *((void *)v10 + 5);
      BOOL v58 = __OFSUB__(v48, v49);
      uint64_t v50 = v48 - v49;
      char v51 = v58;
    }
    if (v51) {
      goto LABEL_118;
    }
    unint64_t v59 = v44 - 2;
    v65 = &v45[16 * v44 - 32];
    uint64_t v67 = *(void *)v65;
    uint64_t v66 = *((void *)v65 + 1);
    BOOL v68 = __OFSUB__(v66, v67);
    uint64_t v69 = v66 - v67;
    char v70 = v68;
    if (v68) {
      goto LABEL_120;
    }
    uint64_t v71 = &v45[16 * v47];
    uint64_t v73 = *(void *)v71;
    uint64_t v72 = *((void *)v71 + 1);
    BOOL v58 = __OFSUB__(v72, v73);
    uint64_t v74 = v72 - v73;
    if (v58) {
      goto LABEL_122;
    }
    if (__OFADD__(v69, v74)) {
      goto LABEL_124;
    }
    if (v69 + v74 >= v50)
    {
      BOOL v75 = v50 < v74;
LABEL_77:
      if (v75) {
        unint64_t v47 = v59;
      }
      goto LABEL_79;
    }
LABEL_71:
    if (v70) {
      goto LABEL_121;
    }
    char v78 = &v45[16 * v47];
    uint64_t v80 = *(void *)v78;
    uint64_t v79 = *((void *)v78 + 1);
    BOOL v58 = __OFSUB__(v79, v80);
    uint64_t v81 = v79 - v80;
    if (v58) {
      goto LABEL_123;
    }
    if (v81 < v69) {
      goto LABEL_88;
    }
LABEL_79:
    unint64_t v86 = v47 - 1;
    if (v47 - 1 >= v44)
    {
      __break(1u);
LABEL_112:
      __break(1u);
LABEL_113:
      __break(1u);
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
LABEL_118:
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
      goto LABEL_126;
    }
    if (!v9) {
      goto LABEL_138;
    }
    v87 = v10;
    Swift::Int v3 = (Swift::Int)&v45[16 * v86];
    uint64_t v88 = *(void *)v3;
    v89 = &v45[16 * v47];
    uint64_t v90 = *((void *)v89 + 1);
    sub_100008900((char *)(v9 + 8 * *(void *)v3), (char *)(v9 + 8 * *(void *)v89), v9 + 8 * v90, v106);
    if (v1) {
      break;
    }
    if (v90 < v88) {
      goto LABEL_112;
    }
    if (v47 > *((void *)v87 + 2)) {
      goto LABEL_113;
    }
    *(void *)Swift::Int v3 = v88;
    *(void *)&v45[16 * v86 + 8] = v90;
    unint64_t v91 = *((void *)v87 + 2);
    if (v47 >= v91) {
      goto LABEL_114;
    }
    unint64_t v44 = v91 - 1;
    memmove(&v45[16 * v47], v89 + 16, 16 * (v91 - 1 - v47));
    __int16 v10 = v87;
    *((void *)v87 + 2) = v91 - 1;
    uint64_t v9 = v107;
    if (v91 <= 2) {
      goto LABEL_88;
    }
  }
LABEL_94:
  swift_bridgeObjectRelease();
  if (v105 >= -1) {
    goto LABEL_109;
  }
  __break(1u);
LABEL_96:
  __int16 v10 = (char *)&_swiftEmptyArrayStorage;
  unint64_t v44 = *((void *)&_swiftEmptyArrayStorage + 2);
LABEL_97:
  if (v44 >= 2)
  {
    uint64_t v93 = *v100;
    while (1)
    {
      unint64_t v94 = v44 - 2;
      if (v44 < 2) {
        break;
      }
      if (!v93) {
        goto LABEL_140;
      }
      v95 = v10;
      Swift::Int v3 = *(void *)&v10[16 * v94 + 32];
      Swift::Int v96 = *(void *)&v10[16 * v44 + 24];
      sub_100008900((char *)(v93 + 8 * v3), (char *)(v93 + 8 * *(void *)&v10[16 * v44 + 16]), v93 + 8 * v96, v106);
      if (v1) {
        goto LABEL_94;
      }
      if (v96 < v3) {
        goto LABEL_127;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        v95 = sub_100008C48((uint64_t)v95);
      }
      if (v94 >= *((void *)v95 + 2)) {
        goto LABEL_128;
      }
      v97 = (Swift::Int *)&v95[16 * v94 + 32];
      Swift::Int *v97 = v3;
      v97[1] = v96;
      unint64_t v98 = *((void *)v95 + 2);
      if (v44 > v98) {
        goto LABEL_129;
      }
      memmove(&v95[16 * v44 + 16], &v95[16 * v44 + 32], 16 * (v98 - v44));
      __int16 v10 = v95;
      *((void *)v95 + 2) = v98 - 1;
      unint64_t v44 = v98 - 1;
      Swift::Int v3 = v105;
      if (v98 <= 2) {
        goto LABEL_108;
      }
    }
LABEL_126:
    __break(1u);
LABEL_127:
    __break(1u);
LABEL_128:
    __break(1u);
LABEL_129:
    __break(1u);
LABEL_130:
    __break(1u);
LABEL_131:
    __break(1u);
LABEL_132:
    __break(1u);
LABEL_133:
    __break(1u);
LABEL_134:
    __break(1u);
    goto LABEL_135;
  }
LABEL_108:
  swift_bridgeObjectRelease();
  if (v3 >= -1)
  {
LABEL_109:
    v108[2] = 0;
    sub_10005EAE0();
    swift_bridgeObjectRelease();
    return;
  }
LABEL_136:
  __break(1u);
LABEL_137:
  __break(1u);
LABEL_138:
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
}

void sub_100008814(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v5 = *a4;
    uint64_t v6 = *a4 + 8 * a3 - 8;
    while (2)
    {
      uint64_t v7 = *(void **)(v5 + 8 * v4);
      uint64_t v8 = a1;
      uint64_t v9 = v6;
      do
      {
        __int16 v10 = *(void **)v9;
        id v11 = v7;
        id v12 = v10;
        uint64_t IntegerValue = IOHIDEventGetIntegerValue();
        uint64_t v14 = IOHIDEventGetIntegerValue();

        if (IntegerValue >= v14) {
          break;
        }
        if (!v5)
        {
          __break(1u);
          return;
        }
        uint64_t v15 = *(void **)v9;
        uint64_t v7 = *(void **)(v9 + 8);
        *(void *)uint64_t v9 = v7;
        *(void *)(v9 + 8) = v15;
        v9 -= 8;
        ++v8;
      }
      while (v4 != v8);
      ++v4;
      v6 += 8;
      if (v4 != a2) {
        continue;
      }
      break;
    }
  }
}

uint64_t sub_100008900(char *a1, char *a2, unint64_t a3, char *a4)
{
  uint64_t v6 = (id *)a2;
  uint64_t v7 = (id *)a1;
  uint64_t v8 = a2 - a1;
  uint64_t v9 = (a2 - a1) / 8;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 8;
  if (v9 >= v11)
  {
    sub_10000AC1C(a2, (uint64_t)(a3 - (void)a2) / 8, a4);
    uint64_t v39 = a4;
    id v12 = &a4[8 * v11];
    if (v7 >= v6 || v10 < 8)
    {
LABEL_39:
      uint64_t v14 = v39;
      goto LABEL_40;
    }
    NSPoint v25 = (id *)(a3 - 8);
    while (1)
    {
      unint64_t v42 = v6;
      double v40 = v25 + 1;
      Swift::Int v26 = (id *)(v12 - 8);
      Swift::Int v27 = v6 - 1;
      CGRect v28 = *(v6 - 1);
      unint64_t v29 = (unint64_t)v12;
      id v30 = *((id *)v12 - 1);
      id v31 = v28;
      uint64_t IntegerValue = IOHIDEventGetIntegerValue();
      uint64_t v33 = IOHIDEventGetIntegerValue();

      if (IntegerValue >= v33)
      {
        uint64_t v35 = v39;
        BOOL v36 = v40 != (id *)v29 || (unint64_t)v25 >= v29;
        Swift::Int v27 = v26;
        id v12 = (char *)v26;
        uint64_t v6 = v42;
        if (!v36) {
          goto LABEL_35;
        }
      }
      else
      {
        BOOL v34 = v40 != v42 || v25 >= v42;
        uint64_t v35 = v39;
        id v12 = (char *)v29;
        uint64_t v6 = v27;
        if (!v34) {
          goto LABEL_35;
        }
      }
      id *v25 = *v27;
LABEL_35:
      --v25;
      if (v6 <= v7 || v12 <= v35) {
        goto LABEL_39;
      }
    }
  }
  sub_10000AC1C(a1, (a2 - a1) / 8, a4);
  id v12 = &a4[8 * v9];
  BOOL v13 = (unint64_t)v6 >= a3 || v8 < 8;
  uint64_t v14 = a4;
  if (!v13)
  {
    unint64_t v41 = a3;
    do
    {
      unint64_t v15 = (unint64_t)v12;
      uint64_t v16 = *(void **)v14;
      id v17 = *v6;
      id v18 = v16;
      uint64_t v19 = IOHIDEventGetIntegerValue();
      uint64_t v20 = IOHIDEventGetIntegerValue();

      if (v19 >= v20)
      {
        id v21 = (id *)v14;
        BOOL v22 = v7 == (id *)v14;
        v14 += 8;
      }
      else
      {
        id v21 = v6;
        BOOL v22 = v7 == v6++;
      }
      id v12 = (char *)v15;
      if (!v22) {
        *uint64_t v7 = *v21;
      }
      ++v7;
    }
    while ((unint64_t)v14 < v15 && (unint64_t)v6 < v41);
  }
  uint64_t v6 = v7;
LABEL_40:
  sub_10000AC1C(v14, (v12 - v14) / 8, (char *)v6);
  return 1;
}

char *sub_100008B50(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100007D1C(&qword_100083F48);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 16);
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  id v12 = v10 + 32;
  BOOL v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || &v13[16 * v8] <= v12) {
      memmove(v12, v13, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_100008C48(uint64_t a1)
{
  return sub_100008B50(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_100008C5C(uint64_t a1)
{
  return specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(a1 + 16), 0, a1);
}

unint64_t sub_100008C74()
{
  unint64_t result = qword_100083F50;
  if (!qword_100083F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100083F50);
  }
  return result;
}

unint64_t sub_100008CC0()
{
  unint64_t result = qword_100083F58;
  if (!qword_100083F58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100083F58);
  }
  return result;
}

uint64_t sub_100008D0C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

uint64_t sub_100008D64(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }

  return swift_retain();
}

uint64_t sub_100008DE8()
{
  return 0;
}

void type metadata accessor for DisplaySettings()
{
}

id sub_100008E28()
{
  id v0 = objc_allocWithZone((Class)NSUserDefaults);
  id result = sub_10000A614(0xD000000000000019, 0x8000000100061120);
  if (result)
  {
    qword_100088F48 = (uint64_t)VideoStream.qosMonitorServerDidDie(_:);
    unk_100088F50 = 0;
    qword_100088F58 = (uint64_t)result;
    unk_100088F60 = &_swiftEmptyDictionarySingleton;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void *sub_100008EA0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v6 = 20;
  uint64_t v8 = _swiftEmptyDictionarySingleton;
  uint64_t v9 = &byte_100075DA8;
  do
  {
    unsigned int v11 = *v9++;
    uint64_t v10 = v11;
    if (*(void *)(a4 + 16))
    {
      unint64_t v12 = sub_10003C46C(v10);
      if (v13)
      {
        sub_10000AF90(*(void *)(a4 + 56) + 32 * v12, (uint64_t)v43);
        sub_10000B714(v43, v44);
        sub_10000C2EC();
        switch(v14)
        {
          case 1:
            unint64_t v5 = 1115185485;
            goto LABEL_62;
          case 2:
            unint64_t v5 = 1114532173;
LABEL_62:
            sub_10000C594();
            break;
          case 3:
            sub_10000C3F4();
            goto LABEL_72;
          case 4:
            sub_10000C42C();
            goto LABEL_58;
          case 5:
            sub_10000C360();
            goto LABEL_77;
          case 6:
            sub_10000C294();
            break;
          case 7:
            sub_10000C498();
            break;
          case 8:
            sub_10000C51C();
            goto LABEL_70;
          case 9:
            sub_10000C410();
LABEL_58:
            unint64_t v4 = v4 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
            break;
          case 10:
            sub_10000C3BC();
            goto LABEL_72;
          case 11:
            sub_10000C3A0();
            goto LABEL_72;
          case 12:
            sub_10000C544();
            goto LABEL_70;
          case 13:
            sub_10000C32C();
            break;
          case 14:
            sub_10000C530();
            goto LABEL_70;
          case 15:
            sub_10000C558();
LABEL_70:
            unint64_t v4 = v30 | 0x8000000000000000;
            break;
          case 16:
            sub_10000C3D8();
LABEL_72:
            unint64_t v4 = v4 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
            break;
          case 17:
            id v31 = "Ratio";
            goto LABEL_75;
          case 18:
            id v31 = "sidebarButtonSize";
LABEL_75:
            unint64_t v4 = (unint64_t)v31 | 0x8000000000000000;
            unint64_t v5 = 0xD000000000000011;
            break;
          case 19:
            sub_10000C2CC();
LABEL_77:
            unint64_t v4 = v4 & 0xFFFFFFFFFFFFLL | 0xEE00000000000000;
            break;
          default:
            break;
        }
        sub_10000AF90((uint64_t)v44, (uint64_t)v43);
        swift_isUniquelyReferenced_nonNull_native();
        sub_10000C4B0();
        sub_10000C56C();
        if (v22) {
          goto LABEL_90;
        }
        unint64_t v23 = v32;
        char v34 = v33;
        sub_100007D1C(&qword_100083F80);
        if (sub_10000C4FC())
        {
          unint64_t v35 = sub_10003C4EC();
          if ((v34 & 1) != (v36 & 1)) {
            goto LABEL_93;
          }
          unint64_t v23 = v35;
        }
        uint64_t v8 = v42;
        if (v34) {
          goto LABEL_83;
        }
        v42[(v23 >> 6) + 8] |= 1 << v23;
        uint64_t v38 = (unint64_t *)(v42[6] + 16 * v23);
        unint64_t *v38 = v5;
        v38[1] = v4;
        sub_10000B714(v43, (_OWORD *)(v42[7] + 32 * v23));
        uint64_t v39 = v42[2];
        BOOL v22 = __OFADD__(v39, 1);
        uint64_t v29 = v39 + 1;
        if (v22) {
          goto LABEL_92;
        }
LABEL_85:
        v8[2] = v29;
        swift_bridgeObjectRetain();
        goto LABEL_86;
      }
    }
    switch(v10)
    {
      case 1:
        unsigned int v15 = 1115185485;
        goto LABEL_10;
      case 2:
        unsigned int v15 = 1114532173;
LABEL_10:
        sub_10000C4E8(v15);
        break;
      case 3:
        sub_10000C45C();
        break;
      case 4:
        sub_10000C2B8();
        break;
      case 5:
        sub_10000C2B8();
        break;
      case 6:
        sub_10000C4D4();
        sub_10000C580();
        break;
      case 7:
        sub_10000C448();
        break;
      case 9:
        sub_10000C470();
        break;
      case 13:
        sub_10000C30C();
        break;
      case 19:
        sub_10000C484();
        break;
      default:
        break;
    }
    unint64_t v4 = (unint64_t)sub_10005E8F0();
    swift_bridgeObjectRelease();
    id v16 = [a3 objectForKey:v4];

    if (v16)
    {
      sub_10005EEC0();
      swift_unknownObjectRelease();
      sub_10000B714(v43, v44);
      sub_10000C2EC();
      switch(v17)
      {
        case 1:
          unint64_t v5 = 1115185485;
          goto LABEL_26;
        case 2:
          unint64_t v5 = 1114532173;
LABEL_26:
          sub_10000C594();
          break;
        case 3:
          sub_10000C3F4();
          goto LABEL_40;
        case 4:
          sub_10000C42C();
          goto LABEL_29;
        case 5:
          sub_10000C360();
          goto LABEL_45;
        case 6:
          sub_10000C294();
          break;
        case 7:
          sub_10000C498();
          break;
        case 8:
          sub_10000C51C();
          goto LABEL_38;
        case 9:
          sub_10000C410();
LABEL_29:
          unint64_t v4 = v4 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
          break;
        case 10:
          sub_10000C3BC();
          goto LABEL_40;
        case 11:
          sub_10000C3A0();
          goto LABEL_40;
        case 12:
          sub_10000C544();
          goto LABEL_38;
        case 13:
          sub_10000C32C();
          break;
        case 14:
          sub_10000C530();
          goto LABEL_38;
        case 15:
          sub_10000C558();
LABEL_38:
          unint64_t v4 = v18 | 0x8000000000000000;
          break;
        case 16:
          sub_10000C3D8();
LABEL_40:
          unint64_t v4 = v4 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
          break;
        case 17:
          uint64_t v19 = "Ratio";
          goto LABEL_43;
        case 18:
          uint64_t v19 = "sidebarButtonSize";
LABEL_43:
          unint64_t v4 = (unint64_t)v19 | 0x8000000000000000;
          unint64_t v5 = 0xD000000000000011;
          break;
        case 19:
          sub_10000C2CC();
LABEL_45:
          unint64_t v4 = v4 & 0xFFFFFFFFFFFFLL | 0xEE00000000000000;
          break;
        default:
          break;
      }
      sub_10000AF90((uint64_t)v44, (uint64_t)v43);
      swift_isUniquelyReferenced_nonNull_native();
      sub_10000C4B0();
      sub_10000C56C();
      if (v22)
      {
        __break(1u);
LABEL_90:
        __break(1u);
LABEL_91:
        __break(1u);
LABEL_92:
        __break(1u);
LABEL_93:
        sub_10005F1A0();
        __break(1u);
        JUMPOUT(0x100009540);
      }
      unint64_t v23 = v20;
      char v24 = v21;
      sub_100007D1C(&qword_100083F80);
      if (sub_10000C4FC())
      {
        unint64_t v25 = sub_10003C4EC();
        if ((v24 & 1) != (v26 & 1)) {
          goto LABEL_93;
        }
        unint64_t v23 = v25;
      }
      uint64_t v8 = v42;
      if ((v24 & 1) == 0)
      {
        v42[(v23 >> 6) + 8] |= 1 << v23;
        Swift::Int v27 = (unint64_t *)(v42[6] + 16 * v23);
        *Swift::Int v27 = v5;
        v27[1] = v4;
        sub_10000B714(v43, (_OWORD *)(v42[7] + 32 * v23));
        uint64_t v28 = v42[2];
        BOOL v22 = __OFADD__(v28, 1);
        uint64_t v29 = v28 + 1;
        if (v22) {
          goto LABEL_91;
        }
        goto LABEL_85;
      }
LABEL_83:
      id v37 = (_OWORD *)(v8[7] + 32 * v23);
      sub_10000B724((uint64_t)v37);
      sub_10000B714(v43, v37);
LABEL_86:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_10000B724((uint64_t)v44);
    }
    --v6;
  }
  while (v6);
  swift_bridgeObjectRelease();
  return sub_100009A14((uint64_t)v8);
}

_UNKNOWN **sub_100009630()
{
  return &off_100075D88;
}

uint64_t sub_10000963C(char a1)
{
  uint64_t result = 0x6E6574614C776F4CLL;
  switch(a1)
  {
    case 1:
      unsigned int v3 = 1115185485;
      goto LABEL_4;
    case 2:
      unsigned int v3 = 1114532173;
LABEL_4:
      uint64_t result = v3 | 0x6172746900000000;
      break;
    case 3:
      uint64_t result = sub_10000C45C();
      break;
    case 4:
    case 5:
      uint64_t result = sub_10000C2B8();
      break;
    case 6:
      uint64_t result = sub_10000C4D4();
      break;
    case 7:
      uint64_t result = sub_10000C448();
      break;
    case 8:
      uint64_t result = 0xD000000000000010;
      break;
    case 9:
      uint64_t result = sub_10000C470();
      break;
    case 10:
      uint64_t result = 0x5372616265646973;
      break;
    case 11:
      uint64_t result = 0x5272616265646973;
      break;
    case 12:
      uint64_t result = 0xD000000000000015;
      break;
    case 13:
      uint64_t result = 0x6572507465736572;
      break;
    case 14:
      uint64_t result = 0xD000000000000012;
      break;
    case 15:
      uint64_t result = 0xD000000000000015;
      break;
    case 16:
      uint64_t result = 0x5772616265646973;
      break;
    case 17:
    case 18:
      uint64_t result = 0xD000000000000011;
      break;
    case 19:
      uint64_t result = sub_10000C484();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000098C0(uint64_t a1, char a2)
{
  if (*(void *)(a1 + 24))
  {
    sub_10000B714((_OWORD *)a1, v4);
    return sub_10000B374(v4, a2);
  }
  else
  {
    sub_10000BB64(a1);
    sub_10000AFEC(a2, v4);
    return sub_10000BB64((uint64_t)v4);
  }
}

uint64_t sub_100009920(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a1 + 24))
  {
    sub_10000B714((_OWORD *)a1, v6);
    sub_10000B3F4(v6, a2, a3);
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_10000BB64(a1);
    sub_10000B10C(v6);
    swift_bridgeObjectRelease();
    return sub_10000BB64((uint64_t)v6);
  }
}

uint64_t sub_1000099A4(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24))
  {
    sub_10000B714((_OWORD *)a1, v4);
    sub_10000B484(v4, a2);
    return sub_10000BD80(a2);
  }
  else
  {
    sub_10000BB64(a1);
    sub_10000B244(a2, v4);
    sub_10000BD80(a2);
    return sub_10000BB64((uint64_t)v4);
  }
}

void *sub_100009A14(uint64_t a1)
{
  int64_t v2 = 0;
  uint64_t v3 = a1 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a1 + 64);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  int64_t v33 = v7 - 1;
  if (!v6) {
    goto LABEL_6;
  }
LABEL_4:
  unint64_t v8 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  unint64_t v9 = v8 | (v2 << 6);
LABEL_5:
  uint64_t v10 = *(void *)(a1 + 56);
  unsigned int v11 = (void *)(*(void *)(a1 + 48) + 16 * v9);
  uint64_t v12 = v11[1];
  *(void *)&long long v38 = *v11;
  *((void *)&v38 + 1) = v12;
  sub_10000AF90(v10 + 32 * v9, (uint64_t)v39);
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_10000B6AC((uint64_t)&v38, (uint64_t)v40);
    if (!v40[1])
    {
      swift_release();
      return _swiftEmptyDictionarySingleton;
    }
    sub_10000B714(&v41, &v38);
    char v16 = sub_10000A228();
    if (v16 != 20)
    {
      char v17 = v16;
      int64_t v34 = v7;
      uint64_t v35 = v3;
      sub_10000AF90((uint64_t)&v38, (uint64_t)v37);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v19 = sub_10003C46C(v17);
      uint64_t v20 = _swiftEmptyDictionarySingleton[2];
      char v36 = v21;
      BOOL v22 = (v21 & 1) == 0;
      Swift::Int v23 = v20 + v22;
      if (__OFADD__(v20, v22)) {
        goto LABEL_39;
      }
      unint64_t v24 = v19;
      sub_100007D1C(&qword_100083F68);
      BOOL v25 = sub_10005F020(isUniquelyReferenced_nonNull_native, v23);
      int64_t v7 = v34;
      uint64_t v3 = v35;
      if (v25)
      {
        unint64_t v26 = sub_10003C46C(v17);
        if ((v36 & 1) != (v27 & 1)) {
          goto LABEL_42;
        }
        unint64_t v24 = v26;
      }
      if (v36)
      {
        uint64_t v28 = (_OWORD *)(_swiftEmptyDictionarySingleton[7] + 32 * v24);
        sub_10000B724((uint64_t)v28);
        sub_10000B714(v37, v28);
      }
      else
      {
        _swiftEmptyDictionarySingleton[(v24 >> 6) + 8] |= 1 << v24;
        *(unsigned char *)(_swiftEmptyDictionarySingleton[6] + v24) = v17;
        sub_10000B714(v37, (_OWORD *)(_swiftEmptyDictionarySingleton[7] + 32 * v24));
        uint64_t v29 = _swiftEmptyDictionarySingleton[2];
        BOOL v30 = __OFADD__(v29, 1);
        uint64_t v31 = v29 + 1;
        if (v30) {
          goto LABEL_40;
        }
        _swiftEmptyDictionarySingleton[2] = v31;
      }
      swift_bridgeObjectRelease();
    }
    sub_10000B724((uint64_t)&v38);
    if (v6) {
      goto LABEL_4;
    }
LABEL_6:
    int64_t v13 = v2 + 1;
    if (__OFADD__(v2, 1)) {
      break;
    }
    if (v13 < v7)
    {
      unint64_t v14 = *(void *)(v3 + 8 * v13);
      if (v14) {
        goto LABEL_9;
      }
      int64_t v15 = v2 + 2;
      ++v2;
      if (v13 + 1 < v7)
      {
        unint64_t v14 = *(void *)(v3 + 8 * v15);
        if (v14) {
          goto LABEL_12;
        }
        int64_t v2 = v13 + 1;
        if (v13 + 2 < v7)
        {
          unint64_t v14 = *(void *)(v3 + 8 * (v13 + 2));
          if (v14)
          {
            v13 += 2;
            goto LABEL_9;
          }
          int64_t v15 = v13 + 3;
          int64_t v2 = v13 + 2;
          if (v13 + 3 < v7)
          {
            unint64_t v14 = *(void *)(v3 + 8 * v15);
            if (!v14)
            {
              while (1)
              {
                int64_t v13 = v15 + 1;
                if (__OFADD__(v15, 1)) {
                  goto LABEL_41;
                }
                if (v13 >= v7)
                {
                  int64_t v2 = v33;
                  goto LABEL_23;
                }
                unint64_t v14 = *(void *)(v3 + 8 * v13);
                ++v15;
                if (v14) {
                  goto LABEL_9;
                }
              }
            }
LABEL_12:
            int64_t v13 = v15;
LABEL_9:
            unint64_t v6 = (v14 - 1) & v14;
            unint64_t v9 = __clz(__rbit64(v14)) + (v13 << 6);
            int64_t v2 = v13;
            goto LABEL_5;
          }
        }
      }
    }
LABEL_23:
    unint64_t v6 = 0;
    memset(v39, 0, sizeof(v39));
    long long v38 = 0u;
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  uint64_t result = (void *)sub_10005F1A0();
  __break(1u);
  return result;
}

uint64_t sub_100009D38()
{
  uint64_t v1 = 20;
  int64_t v2 = *(void **)(v0 + 16);
  uint64_t v3 = &byte_100075DA8;
  do
  {
    int v4 = *v3++;
    switch(v4)
    {
      case 1:
        unsigned int v5 = 1115185485;
        goto LABEL_5;
      case 2:
        unsigned int v5 = 1114532173;
LABEL_5:
        sub_10000C4E8(v5);
        break;
      case 3:
        sub_10000C45C();
        break;
      case 4:
      case 5:
        sub_10000C2B8();
        break;
      case 6:
        sub_10000C580();
        sub_10000C4D4();
        break;
      case 7:
        sub_10000C448();
        break;
      case 9:
        sub_10000C470();
        break;
      case 10:
      case 11:
      case 16:
        sub_10000C34C();
        break;
      case 13:
        sub_10000C30C();
        break;
      case 19:
        sub_10000C484();
        break;
      default:
        break;
    }
    NSString v6 = sub_10005E8F0();
    swift_bridgeObjectRelease();
    [v2 removeObjectForKey:v6];

    --v1;
  }
  while (v1);

  return swift_bridgeObjectRelease();
}

BOOL sub_100009FEC(char a1, uint64_t a2, uint64_t a3, void *a4)
{
  sub_10000963C(a1);
  NSString v5 = sub_10005E8F0();
  swift_bridgeObjectRelease();
  id v6 = [a4 valueForKey:v5];

  if (v6)
  {
    sub_10005EEC0();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v8, 0, sizeof(v8));
  }
  sub_10000BB64((uint64_t)v8);
  return v6 != 0;
}

uint64_t sub_10000A090(char a1, uint64_t a2, uint64_t a3, void *a4)
{
  if (sub_100009FEC(a1, a2, a3, a4))
  {
    sub_10000963C(a1);
    NSString v6 = sub_10005E8F0();
    swift_bridgeObjectRelease();
    id v7 = [a4 BOOLForKey:v6];

    return (uint64_t)v7;
  }
  uint64_t result = sub_10002EAD8(a1);
  if (result != 2) {
    return result & 1;
  }
  __break(1u);
  return result;
}

char *sub_10000A120(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v2 = swift_bridgeObjectRetain() + 40;
  uint64_t v3 = (char *)_swiftEmptyArrayStorage;
  do
  {
    swift_bridgeObjectRetain();
    char v4 = sub_10000A228();
    if (v4 != 20)
    {
      char v5 = v4;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v3 = sub_10000A678(0, *((void *)v3 + 2) + 1, 1, (uint64_t)v3);
      }
      unint64_t v7 = *((void *)v3 + 2);
      unint64_t v6 = *((void *)v3 + 3);
      if (v7 >= v6 >> 1) {
        uint64_t v3 = sub_10000A678((char *)(v6 > 1), v7 + 1, 1, (uint64_t)v3);
      }
      *((void *)v3 + 2) = v7 + 1;
      v3[v7 + 32] = v5;
    }
    v2 += 16;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_10000A228()
{
  unint64_t v0 = sub_10005F160();
  swift_bridgeObjectRelease();
  if (v0 >= 0x14) {
    return 20;
  }
  else {
    return v0;
  }
}

uint64_t sub_10000A27C(char *a1, char *a2)
{
  return sub_10001083C(*a1, *a2);
}

Swift::Int sub_10000A288()
{
  return sub_10000A290(*v0);
}

Swift::Int sub_10000A290(char a1)
{
  return sub_10005F200();
}

Swift::Int sub_10000A2F4(Swift::UInt a1)
{
  return sub_10005F200();
}

uint64_t sub_10000A33C(uint64_t a1)
{
  return sub_100021910(a1, *v1);
}

Swift::Int sub_10000A344(uint64_t a1)
{
  return sub_10002EBB8(a1, *v1);
}

uint64_t sub_10000A34C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_10000A228();
  *a1 = result;
  return result;
}

uint64_t sub_10000A37C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10000963C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_10000A3A8(void *a1@<X8>)
{
  *a1 = &off_100075D88;
}

uint64_t sub_10000A3B8(char a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    unint64_t v4 = sub_10003C46C(a1);
    if (v5)
    {
      sub_10000AF90(*(void *)(a2 + 56) + 32 * v4, (uint64_t)v8);
      if (swift_dynamicCast()) {
        return v7;
      }
    }
  }
  uint64_t result = sub_10002EAD8(a1);
  if (result != 2) {
    return result & 1;
  }
  __break(1u);
  return result;
}

uint64_t sub_10000A454(int a1, char a2)
{
  char v4 = sub_10002EAD8(a2);
  if (v4 == 2 || ((((v4 & 1) == 0) ^ a1) & 1) == 0)
  {
    unsigned __int8 v7 = &type metadata for Bool;
    LOBYTE(v6) = a1 & 1;
    return sub_1000098C0((uint64_t)&v6, a2);
  }
  else
  {
    sub_10000AFEC(a2, &v6);
    return sub_10000BB64((uint64_t)&v6);
  }
}

uint64_t sub_10000A4E4(char a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)
    || (unint64_t v4 = sub_10003C46C(a1), (v5 & 1) == 0)
    || (sub_10000AF90(*(void *)(a2 + 56) + 32 * v4, (uint64_t)v8), uint64_t result = swift_dynamicCast(), !result))
  {
    uint64_t result = sub_10002EAEC(a1);
    if (v7) {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_10000A578(char a1, uint64_t a2)
{
  if (*(void *)(a2 + 16) && (unint64_t v4 = sub_10003C46C(a1), (v5 & 1) != 0))
  {
    sub_10000AF90(*(void *)(a2 + 56) + 32 * v4, (uint64_t)v8);
    sub_10000BD3C(v8, v8[3]);
    uint64_t v6 = sub_10005F130();
    sub_10000B724((uint64_t)v8);
    return v6;
  }
  else
  {
    return sub_10002E998(a1);
  }
}

id sub_10000A614(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    NSString v3 = sub_10005E8F0();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v3 = 0;
  }
  id v4 = [v2 initWithSuiteName:v3];

  return v4;
}

char *sub_10000A678(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    int64_t v9 = *(void *)(a4 + 16);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_100007D1C(&qword_100083F78);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  if (v5)
  {
    sub_10000AC74((char *)(a4 + 32), v8, v12);
    *(void *)(a4 + 16) = 0;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_10000A93C(0, v8, v12, a4);
  }
  return v10;
}

char *sub_10000A75C(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100007D1C(&qword_100083F90);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 32);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  if (v5)
  {
    sub_10000ACE4((char *)(a4 + 32), v8, v12);
    *(void *)(a4 + 16) = 0;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_10000AA2C(0, v8, (unint64_t)v12, a4);
  }
  return v10;
}

char *sub_10000A84C(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100007D1C((uint64_t *)&unk_100083FB0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 16);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  if (v5)
  {
    sub_10000AD78((char *)(a4 + 32), v8, v12);
    *(void *)(a4 + 16) = 0;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_10000AB24(0, v8, (unint64_t)v12, a4);
  }
  return v10;
}

char *sub_10000A93C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    char v5 = (char *)(a4 + a1 + 32);
    unint64_t v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = (char *)sub_10005F0B0();
  __break(1u);
  return result;
}

uint64_t sub_10000AA2C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_10005F0B0();
  __break(1u);
  return result;
}

uint64_t sub_10000AB24(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_10005F0B0();
  __break(1u);
  return result;
}

char *sub_10000AC1C(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_10000C25C();
    uint64_t result = (char *)sub_10000C270();
    __break(1u);
  }
  else if (a3 != result || &result[8 * a2] <= a3)
  {
    return (char *)sub_10000C380(a3, a2, result);
  }
  return result;
}

char *sub_10000AC74(char *__src, size_t __len, char *__dst)
{
  if ((__len & 0x8000000000000000) != 0)
  {
    sub_10000C25C();
    __src = (char *)sub_10000C270();
    __break(1u);
  }
  else if (__dst != __src || &__src[__len] <= __dst)
  {
    return (char *)memmove(__dst, __src, __len);
  }
  return __src;
}

char *sub_10000ACE4(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_10005F0B0();
    __break(1u);
  }
  else if (__dst != __src || &__src[32 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 32 * a2);
  }
  return __src;
}

char *sub_10000AD78(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_10005F0B0();
    __break(1u);
  }
  else if (__dst != __src || &__src[16 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 16 * a2);
  }
  return __src;
}

void *sub_10000AE0C(char *__src, size_t __n, char *__dst)
{
  if ((__n & 0x8000000000000000) != 0 || (&__dst[__n] > __src ? (BOOL v3 = &__src[__n] > __dst) : (BOOL v3 = 0), v3))
  {
    sub_10000C25C();
    uint64_t result = (void *)sub_10005F0B0();
    __break(1u);
  }
  else
  {
    return memcpy(__dst, __src, __n);
  }
  return result;
}

void *sub_10000AECC(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0 || (&__dst[8 * a2] > __src ? (BOOL v3 = &__src[8 * a2] > __dst) : (BOOL v3 = 0), v3))
  {
    sub_10000C25C();
    uint64_t result = (void *)sub_10005F0B0();
    __break(1u);
  }
  else
  {
    return memcpy(__dst, __src, 8 * a2);
  }
  return result;
}

uint64_t sub_10000AF90(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

double sub_10000AFEC@<D0>(char a1@<W0>, _OWORD *a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_10003C46C(a1);
  char v8 = v7;
  swift_bridgeObjectRelease();
  if (v8)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v13 = *v3;
    uint64_t v10 = *v3;
    uint64_t *v3 = 0x8000000000000000;
    Swift::Int v11 = *(void *)(v10 + 24);
    sub_100007D1C(&qword_100083F68);
    sub_10005F020(isUniquelyReferenced_nonNull_native, v11);
    sub_10000B714((_OWORD *)(*(void *)(v13 + 56) + 32 * v6), a2);
    sub_10000BBC4();
    sub_10005F030();
    uint64_t *v3 = v13;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

double sub_10000B10C@<D0>(_OWORD *a1@<X8>)
{
  uint64_t v2 = v1;
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_10003C4EC();
  char v6 = v5;
  swift_bridgeObjectRelease();
  if (v6)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v2;
    uint64_t v8 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    Swift::Int v9 = *(void *)(v8 + 24);
    sub_100007D1C(&qword_100083F80);
    sub_10005F020(isUniquelyReferenced_nonNull_native, v9);
    swift_bridgeObjectRelease();
    sub_10000B714((_OWORD *)(*(void *)(v11 + 56) + 32 * v4), a1);
    sub_10005F030();
    *uint64_t v2 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a1 = 0u;
    a1[1] = 0u;
  }
  return result;
}

double sub_10000B244@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_10003C554(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v12 = *v3;
    uint64_t v9 = *v3;
    uint64_t *v3 = 0x8000000000000000;
    Swift::Int v10 = *(void *)(v9 + 24);
    sub_100007D1C(&qword_100083F88);
    sub_10005F020(isUniquelyReferenced_nonNull_native, v10);
    sub_10000BD80(*(void *)(v12 + 48) + 40 * v6);
    sub_10000B714((_OWORD *)(*(void *)(v12 + 56) + 32 * v6), a2);
    sub_10005F030();
    uint64_t *v3 = v12;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

uint64_t sub_10000B374(_OWORD *a1, char a2)
{
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  sub_10000B584(a1, a2, isUniquelyReferenced_nonNull_native);
  *uint64_t v2 = v7;

  return swift_bridgeObjectRelease();
}

uint64_t sub_10000B3F4(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *v3;
  uint64_t *v3 = 0x8000000000000000;
  sub_10000B774(a1, a2, a3, isUniquelyReferenced_nonNull_native);
  uint64_t *v3 = v9;

  return swift_bridgeObjectRelease();
}

uint64_t sub_10000B484(_OWORD *a1, uint64_t a2)
{
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  sub_10000B8B4(a1, a2, isUniquelyReferenced_nonNull_native);
  *uint64_t v2 = v7;

  return swift_bridgeObjectRelease();
}

uint64_t sub_10000B504(uint64_t a1, char a2)
{
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  sub_10000B9EC(a1, a2, isUniquelyReferenced_nonNull_native);
  *uint64_t v2 = v7;

  return swift_bridgeObjectRelease();
}

_OWORD *sub_10000B584(_OWORD *a1, char a2, char a3)
{
  unint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v9 = sub_10003C46C(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v10 & 1) == 0;
  Swift::Int v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_13;
  }
  unint64_t v14 = v9;
  char v15 = v10;
  sub_100007D1C(&qword_100083F68);
  if (!sub_10005F020(a3 & 1, v13)) {
    goto LABEL_5;
  }
  unint64_t v16 = sub_10003C46C(a2);
  if ((v15 & 1) != (v17 & 1))
  {
LABEL_13:
    double result = (_OWORD *)sub_10005F1A0();
    __break(1u);
    return result;
  }
  unint64_t v14 = v16;
LABEL_5:
  uint64_t v18 = *v4;
  if (v15)
  {
    unint64_t v19 = (_OWORD *)(v18[7] + 32 * v14);
    sub_10000B724((uint64_t)v19);
    return sub_10000B714(a1, v19);
  }
  else
  {
    return sub_10000BAFC(v14, a2, a1, v18);
  }
}

uint64_t sub_10000B6AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007D1C(&qword_100083F60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

_OWORD *sub_10000B714(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_10000B724(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

_OWORD *sub_10000B774(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  char v5 = (void **)v4;
  char v10 = (void *)*v4;
  unint64_t v11 = sub_10003C4EC();
  uint64_t v13 = v10[2];
  BOOL v14 = (v12 & 1) == 0;
  Swift::Int v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_13;
  }
  unint64_t v16 = v11;
  char v17 = v12;
  sub_100007D1C(&qword_100083F80);
  if (!sub_10005F020(a4 & 1, v15)) {
    goto LABEL_5;
  }
  unint64_t v18 = sub_10003C4EC();
  if ((v17 & 1) != (v19 & 1))
  {
LABEL_13:
    double result = (_OWORD *)sub_10005F1A0();
    __break(1u);
    return result;
  }
  unint64_t v16 = v18;
LABEL_5:
  uint64_t v20 = *v5;
  if (v17)
  {
    char v21 = (_OWORD *)(v20[7] + 32 * v16);
    sub_10000B724((uint64_t)v21);
    return sub_10000B714(a1, v21);
  }
  else
  {
    sub_10000BC10(v16, a2, a3, a1, v20);
    return (_OWORD *)swift_bridgeObjectRetain();
  }
}

_OWORD *sub_10000B8B4(_OWORD *a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v9 = sub_10003C554(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v10 & 1) == 0;
  Swift::Int v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_11;
  }
  unint64_t v14 = v9;
  char v15 = v10;
  sub_100007D1C(&qword_100083F88);
  if (!sub_10005F020(a3 & 1, v13)) {
    goto LABEL_5;
  }
  unint64_t v16 = sub_10003C554(a2);
  if ((v15 & 1) != (v17 & 1))
  {
LABEL_11:
    double result = (_OWORD *)sub_10005F1A0();
    __break(1u);
    return result;
  }
  unint64_t v14 = v16;
LABEL_5:
  unint64_t v18 = *v4;
  if (v15)
  {
    char v19 = (_OWORD *)(v18[7] + 32 * v14);
    sub_10000B724((uint64_t)v19);
    return sub_10000B714(a1, v19);
  }
  else
  {
    sub_10000BDD4(a2, (uint64_t)v21);
    return sub_10000BC7C(v14, (uint64_t)v21, a1, v18);
  }
}

void sub_10000B9EC(uint64_t a1, char a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v9 = sub_10003C5FC(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v10 & 1) == 0;
  Swift::Int v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_11;
  }
  unint64_t v14 = v9;
  char v15 = v10;
  sub_100007D1C(&qword_100083F70);
  if (!sub_10005F020(a3 & 1, v13)) {
    goto LABEL_5;
  }
  unint64_t v16 = sub_10003C5FC(a2);
  if ((v15 & 1) != (v17 & 1))
  {
LABEL_11:
    sub_10005F1A0();
    __break(1u);
    return;
  }
  unint64_t v14 = v16;
LABEL_5:
  unint64_t v18 = *v4;
  if (v15)
  {
    uint64_t v19 = v18[7];

    *(void *)(v19 + 8 * v14) = a1;
  }
  else
  {
    sub_10000BCF8(v14, a2, a1, v18);
  }
}

_OWORD *sub_10000BAFC(unint64_t a1, char a2, _OWORD *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(unsigned char *)(a4[6] + a1) = a2;
  double result = sub_10000B714(a3, (_OWORD *)(a4[7] + 32 * a1));
  uint64_t v6 = a4[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a4[2] = v8;
  }
  return result;
}

uint64_t sub_10000BB64(uint64_t a1)
{
  uint64_t v2 = sub_100007D1C((uint64_t *)&unk_100084130);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_10000BBC4()
{
  unint64_t result = qword_1000848B0;
  if (!qword_1000848B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000848B0);
  }
  return result;
}

_OWORD *sub_10000BC10(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v6 = (void *)(a5[6] + 16 * a1);
  *uint64_t v6 = a2;
  v6[1] = a3;
  unint64_t result = sub_10000B714(a4, (_OWORD *)(a5[7] + 32 * a1));
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

_OWORD *sub_10000BC7C(unint64_t a1, uint64_t a2, _OWORD *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v5 = a4[6] + 40 * a1;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)uint64_t v5 = *(_OWORD *)a2;
  *(_OWORD *)(v5 + 16) = v6;
  *(void *)(v5 + 32) = *(void *)(a2 + 32);
  unint64_t result = sub_10000B714(a3, (_OWORD *)(a4[7] + 32 * a1));
  uint64_t v8 = a4[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a4[2] = v10;
  }
  return result;
}

unint64_t sub_10000BCF8(unint64_t result, char a2, uint64_t a3, void *a4)
{
  a4[(result >> 6) + 8] |= 1 << result;
  *(unsigned char *)(a4[6] + result) = a2;
  *(void *)(a4[7] + 8 * result) = a3;
  uint64_t v4 = a4[2];
  BOOL v5 = __OFADD__(v4, 1);
  uint64_t v6 = v4 + 1;
  if (v5) {
    __break(1u);
  }
  else {
    a4[2] = v6;
  }
  return result;
}

void *sub_10000BD3C(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_10000BD80(uint64_t a1)
{
  return a1;
}

uint64_t sub_10000BDD4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_10000BE30(uint64_t a1)
{
  swift_release();

  return swift_bridgeObjectRelease();
}

void *sub_10000BE74(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  BOOL v5 = (void *)a2[2];
  uint64_t v4 = a2[3];
  a1[2] = v5;
  a1[3] = v4;
  swift_retain();
  id v6 = v5;
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_10000BEC0(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  BOOL v5 = (void *)a2[2];
  id v6 = (void *)a1[2];
  a1[2] = v5;
  id v7 = v5;

  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10000BF34(uint64_t a1, _OWORD *a2)
{
  *(_OWORD *)a1 = *a2;
  swift_release();

  *(_OWORD *)(a1 + 16) = a2[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for VideoConfig(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for VideoConfig(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for DisplayPrefs()
{
}

unsigned char *initializeBufferWithCopyOfBuffer for DisplayModalAlert.Reason(unsigned char *result, unsigned char *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t sub_10000C01C(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xED)
  {
    if (a2 + 19 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 19) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 20;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x14;
  int v5 = v6 - 20;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *sub_10000C0A4(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 19 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 19) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xED) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEC)
  {
    unsigned int v6 = ((a2 - 237) >> 8) + 1;
    *unint64_t result = a2 + 19;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10000C170);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 19;
        break;
    }
  }
  return result;
}

uint64_t sub_10000C198(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_10000C1A0(unsigned char *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

void type metadata accessor for DisplayPrefs.Key()
{
}

unint64_t sub_10000C1B8()
{
  unint64_t result = qword_100083F98;
  if (!qword_100083F98)
  {
    sub_100007D84(&qword_100083FA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100083F98);
  }
  return result;
}

unint64_t sub_10000C210()
{
  unint64_t result = qword_100083FA8;
  if (!qword_100083FA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100083FA8);
  }
  return result;
}

uint64_t sub_10000C270()
{
  return sub_10005F0B0();
}

uint64_t sub_10000C2B8()
{
  return 0x7261426863756F74;
}

uint64_t sub_10000C30C()
{
  return 0x6572507465736572;
}

uint64_t sub_10000C34C()
{
  return 0x616265646973;
}

void *sub_10000C380@<X0>(void *__dst@<X2>, uint64_t a2@<X1>, const void *a3@<X8>)
{
  return memmove(__dst, a3, 8 * a2);
}

uint64_t sub_10000C448()
{
  return 0x73746E65636572;
}

uint64_t sub_10000C45C()
{
  return 0x63756F54776F6873;
}

uint64_t sub_10000C470()
{
  return 0x72754373776F6873;
}

uint64_t sub_10000C484()
{
  return 0x654B656C62616E65;
}

unint64_t sub_10000C4B0()
{
  return sub_10003C4EC();
}

uint64_t sub_10000C4D4()
{
  return 0x5472616365646953;
}

uint64_t sub_10000C4E8(unsigned int a1)
{
  return a1 | 0x6172746900000000;
}

BOOL sub_10000C4FC()
{
  return sub_10005F020(v1, v0);
}

uint64_t sub_10000C5B0(uint64_t a1)
{
  Swift::Bool v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

id sub_10000C5F4(uint64_t a1)
{
  id v2 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v3 = sub_100023DEC();
  if (!v4)
  {
    uint64_t v3 = 0;
    uint64_t v4 = 0xE000000000000000;
  }
  sub_10000F9B4(v3, v4, v2, (SEL *)&selRef_setInterfaceName_);
  uint64_t v5 = sub_100023EB4();
  if (!v6)
  {
    uint64_t v5 = 0;
    uint64_t v6 = 0xE000000000000000;
  }
  sub_10000F9B4(v5, v6, v2, (SEL *)&selRef_setIp_);
  [v2 setPort:(unsigned __int16)sub_100023F30()];
  [v2 setIsIPv6:*(unsigned __int8 *)(a1 + 1) == 30];

  return v2;
}

void sub_10000C6C0(void *a1, double a2)
{
  id v3 = [a1 video];
  if (!v3) {
    goto LABEL_11;
  }
  double v4 = ceil(a2);
  if ((~*(void *)&v4 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 <= -9.22337204e18)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v4 >= 9.22337204e18)
  {
LABEL_10:
    __break(1u);
LABEL_11:
    __break(1u);
    return;
  }
  id v5 = v3;
  [v3 setKeyFrameInterval:(uint64_t)v4];
}

id sub_10000C76C(void *a1)
{
  id result = [a1 video];
  if (result)
  {
    id v3 = result;
    id v4 = [result txMinBitrate];

    id result = [a1 video];
    if (result)
    {
      id v5 = result;
      [result txMaxBitrate];

      return v4;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_10000C804(uint64_t a1, uint64_t a2, id a3)
{
  id result = [a3 video];
  if (!result)
  {
    __break(1u);
    goto LABEL_9;
  }
  id v7 = result;
  [result setRxMinBitrate:a1];

  id result = [a3 video];
  if (!result)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  id v8 = result;
  [result setRxMaxBitrate:a2];

  id result = [a3 video];
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  id v9 = result;
  [result setTxMinBitrate:a1];

  id result = [a3 video];
  if (!result)
  {
LABEL_11:
    __break(1u);
    return result;
  }
  id v10 = result;
  [result setTxMaxBitrate:a2];

  return [a3 setRtcpSendInterval:1.0];
}

uint64_t VideoStream.session.getter()
{
  return swift_unknownObjectWeakLoadStrong();
}

void VideoStream.session.setter(void *a1)
{
}

void (*VideoStream.session.modify(void *a1))(id **a1, char a2)
{
  id v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC17ContinuityDisplay11VideoStream_session;
  v3[4] = v1;
  v3[5] = v4;
  swift_beginAccess();
  v3[3] = swift_unknownObjectWeakLoadStrong();
  return sub_10000CA58;
}

void sub_10000CA58(id **a1, char a2)
{
  id v3 = *a1;
  id v4 = (*a1)[3];
  swift_unknownObjectWeakAssign();
  if (a2)
  {

    swift_endAccess();
  }
  else
  {
    swift_endAccess();
  }

  free(v3);
}

uint64_t sub_10000CAD4(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC17ContinuityDisplay11VideoStream_qosMonitor) = a1;
  return _objc_release_x1();
}

char *sub_10000CAE8(char *a1, char *a2, uint64_t a3)
{
  id v4 = v3;
  swift_unknownObjectWeakInit();
  v4[OBJC_IVAR____TtC17ContinuityDisplay11VideoStream_started] = 0;
  uint64_t v39 = OBJC_IVAR____TtC17ContinuityDisplay11VideoStream_qosMonitor;
  *(void *)&v4[OBJC_IVAR____TtC17ContinuityDisplay11VideoStream_qosMonitor] = 0;
  id v8 = &a1[OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_logger];
  id v9 = &v4[OBJC_IVAR____TtC17ContinuityDisplay11VideoStream_logger];
  uint64_t v10 = sub_10005E750();
  uint64_t v11 = *(void *)(v10 - 8);
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v9, v8, v10);
  swift_beginAccess();
  double v40 = a1;
  swift_unknownObjectWeakAssign();
  uint64_t v38 = OBJC_IVAR____TtC17ContinuityDisplay11VideoStream_stream;
  *(void *)&v4[OBJC_IVAR____TtC17ContinuityDisplay11VideoStream_stream] = a2;
  BOOL v12 = v4;
  Swift::Int v13 = a2;
  id v14 = [v13 type];
  if (v14 != (id)1)
  {
    if (v14 != (id)3)
    {
      swift_bridgeObjectRelease();
      a2 = (char *)sub_100007F60(0, (unint64_t *)&qword_100084108);
      uint64_t v26 = sub_10005E920();
      sub_100019858(v26, v27, -1001, 0, 0, 0);
      swift_willThrow();
      goto LABEL_8;
    }
    char v15 = &v12[OBJC_IVAR____TtC17ContinuityDisplay11VideoStream_socket];
    *(_DWORD *)char v15 = 0;
    v15[4] = 1;
    id v41 = [v13 nwClientID];
    char v42 = v16;
    char v43 = v17;
    char v44 = v18;
    char v45 = v19;
    char v46 = v20;
    char v47 = v21;
    char v48 = v22;
    char v49 = v23;
    id v24 = objc_allocWithZone((Class)AVCVideoStream);
    sub_10000FB88();
    swift_bridgeObjectRetain();
    sub_10000EDB0((uint64_t)&v41, a3);
    if (!v37)
    {
      sub_10000FB88();
      swift_bridgeObjectRelease();
LABEL_12:
      *(void *)&v12[OBJC_IVAR____TtC17ContinuityDisplay11VideoStream_videoStream] = a2;

      int64_t v34 = (objc_class *)type metadata accessor for VideoStream();
      v50.receiver = v12;
      v50.super_class = v34;
      uint64_t v35 = (char *)[super init];
      char v36 = *(void **)&v35[OBJC_IVAR____TtC17ContinuityDisplay11VideoStream_videoStream];
      a2 = v35;
      [v36 setDelegate:a2];

      return a2;
    }
LABEL_6:
    swift_bridgeObjectRelease();
LABEL_8:

    swift_unknownObjectWeakDestroy();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);

    uint64_t v28 = *(void **)&v4[v39];
    type metadata accessor for VideoStream();
    swift_deallocPartialClassInstance();
    return a2;
  }
  int v25 = sub_100023FB4((unint64_t)[v13 fileDescriptor]);
  if (v37) {
    goto LABEL_6;
  }
  int v30 = v25;
  id result = (char *)xpc_dictionary_create(0, 0, 0);
  if (kAVCKeySharedSocket)
  {
    xpc_dictionary_set_fd(result, kAVCKeySharedSocket, v30);
    uint64_t v31 = &v12[OBJC_IVAR____TtC17ContinuityDisplay11VideoStream_socket];
    *(_DWORD *)uint64_t v31 = v30;
    v31[4] = 0;
    id v32 = objc_allocWithZone((Class)AVCVideoStream);
    sub_10000FB88();
    uint64_t v33 = swift_unknownObjectRetain();
    a2 = (char *)sub_10000EEB8(v33, a3);
    swift_unknownObjectRelease();
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

id VideoStream.__deallocating_deinit()
{
  sub_10000D79C();
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VideoStream();
  [super dealloc];
}

void sub_10000D094(void *a1)
{
  id v3 = v1;
  uint64_t v4 = *(unsigned int *)&v1[OBJC_IVAR____TtC17ContinuityDisplay11VideoStream_socket];
  char v5 = v1[OBJC_IVAR____TtC17ContinuityDisplay11VideoStream_socket + 4];
  id v6 = a1;
  if ((v5 & 1) == 0)
  {
    sub_10002401C(v4, v38);
    if (v2)
    {

      return;
    }
    sub_100007F60(0, &qword_100084118);
    id v26 = sub_10000C5F4((uint64_t)v38);
    [v6 setLocalAddress:v26];

    sub_100024080(v4, v39);
    id v35 = sub_10000C5F4((uint64_t)v39);
    [v6 setRemoteAddress:v35];
  }
  id v7 = [v6 video];
  if (v7)
  {
    id v8 = v7;
    id v9 = v6;
    id v10 = v8;
    id v11 = v9;
    id v12 = v10;
    id v13 = v11;
    id v14 = v12;
    id v15 = v3;
    id v16 = v13;
    id v17 = v14;
    char v18 = (char *)v15;
    variable initialization expression of Clock.heartbeat();
    variable initialization expression of Clock.heartbeat();
    id v19 = v17;
    char v20 = sub_10005E720();
    os_log_type_t v21 = sub_10005EC50();
    char v22 = &off_100083000;
    if (os_log_type_enabled(v20, v21))
    {
      os_log_type_t type = v21;
      uint64_t v23 = swift_slowAlloc();
      id v40 = (id)swift_slowAlloc();
      *(_DWORD *)uint64_t v23 = 136318210;
      uint64_t v24 = sub_10000DC5C(*(void **)&v18[OBJC_IVAR____TtC17ContinuityDisplay11VideoStream_videoStream]);
      sub_10000F098(v24, v25, (uint64_t *)&v40);
      sub_10005EE10();

      swift_bridgeObjectRelease();
      *(_WORD *)(v23 + 12) = 1024;
      [v16 remoteSSRC];

      sub_10005EE10();
      *(_WORD *)(v23 + 18) = 2048;
      [v19 txCodecType];
      os_log_t log = v20;

      sub_10005EE10();
      *(_WORD *)(v23 + 28) = 2048;
      [v16 txPayloadType];

      sub_10000FAEC();
      *(_WORD *)(v23 + 38) = 2048;
      [v19 keyFrameInterval];

      sub_10000FAEC();
      *(_WORD *)(v23 + 48) = 1024;
      [v16 isRTCPEnabled];

      sub_10005EE10();
      *(_WORD *)(v23 + 54) = 1040;
      sub_10005EE10();
      *(_WORD *)(v23 + 60) = 2048;
      [v16 rtcpTimeOutInterval];
      sub_10005EE10();

      *(_WORD *)(v23 + 70) = 2048;
      [v19 tilesPerFrame];

      sub_10000FAEC();
      *(_WORD *)(v23 + 80) = 2048;
      [v19 txMinBitrate];

      sub_10000FAEC();
      *(_WORD *)(v23 + 90) = 2048;
      [v19 txMaxBitrate];

      sub_10000FAEC();
      *(_WORD *)(v23 + 100) = 2048;
      [v19 customWidth];

      sub_10000FAEC();
      *(_WORD *)(v23 + 110) = 2048;
      [v19 customHeight];

      char v22 = &off_100083000;
      sub_10005EE10();

      _os_log_impl((void *)&_mh_execute_header, v20, type, "%s config: ssrc=%u, codec=%ld, payload=%ld, key=%ld, rtcp=%{BOOL}d, rtcpTimeout=%.*f, tiles=%ld, tx=%ld:%ld, res=%ld:%ld", (uint8_t *)v23, 0x78u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    uint64_t v27 = *(void **)((char *)v22[509] + (void)v18);
    id v40 = 0;
    if (objc_msgSend(v27, "configure:error:", v16, &v40, log))
    {
      id v28 = v40;
      [v27 start];
      id v29 = [v27 streamToken];
      sub_100007F60(0, (unint64_t *)&qword_100084110);
      int v30 = (void *)sub_10005EC90();
      id v31 = objc_allocWithZone((Class)AVCQoSMonitor);
      id v32 = sub_10000EFCC((uint64_t)v29, v30);
      if (v2)
      {
        swift_errorRelease();
        uint64_t v33 = 0;
      }
      else
      {
        uint64_t v33 = (uint64_t)v32;
        if (v32) {
          [v32 setDelegate:v18];
        }
      }
      sub_10000CAD4(v33);

      v18[OBJC_IVAR____TtC17ContinuityDisplay11VideoStream_started] = 1;
    }
    else
    {
      id v34 = v40;
      sub_10000FB88();
      sub_10005E530();

      swift_willThrow();
    }
  }
  else
  {
    __break(1u);
  }
}

id sub_10000D79C()
{
  uint64_t v1 = OBJC_IVAR____TtC17ContinuityDisplay11VideoStream_started;
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC17ContinuityDisplay11VideoStream_started) == 1)
  {
    id result = [*(id *)(v0 + OBJC_IVAR____TtC17ContinuityDisplay11VideoStream_videoStream) stop];
    *(unsigned char *)(v0 + v1) = 0;
  }
  return result;
}

uint64_t type metadata accessor for VideoStream()
{
  uint64_t result = qword_100084098;
  if (!qword_100084098) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t VideoStream.qosMonitor(_:didReceiveReport:streamToken:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_10005E7B0();
  sub_100008DCC();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  id v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10005E7E0();
  sub_100008DCC();
  uint64_t v11 = v10;
  __chkstk_darwin(v12);
  id v14 = (char *)v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    id v16 = (void *)result;
    id v17 = (void **)(result + OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_queue);
    swift_beginAccess();
    char v18 = *v17;
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = v16;
    *(void *)(v19 + 24) = a2;
    aBlock[4] = sub_10000ECEC;
    aBlock[5] = v19;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10000C5B0;
    aBlock[3] = &unk_100076D10;
    char v20 = _Block_copy(aBlock);
    id v21 = v18;
    v24[0] = v9;
    id v22 = v21;
    id v23 = v16;
    swift_bridgeObjectRetain();
    sub_10005E7D0();
    v24[1] = _swiftEmptyArrayStorage;
    sub_10000ED0C();
    sub_100007D1C((uint64_t *)&unk_100083FD0);
    sub_10000ED5C();
    sub_10005EEE0();
    sub_10005ECB0();
    _Block_release(v20);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v3);
    (*(void (**)(char *, void))(v11 + 8))(v14, v24[0]);
    return swift_release();
  }
  return result;
}

uint64_t sub_10000DAB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_delegate;
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v6 = *(void *)(v4 + 8);
    Objectint Type = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 112))(a1, a2, ObjectType, v6);
    return swift_unknownObjectRelease();
  }
  return result;
}

id VideoStream.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return [v1 init];
}

void VideoStream.init()()
{
}

uint64_t sub_10000DC5C(void *a1)
{
  [a1 streamToken];
  sub_10000FA20();
  v2._countAndFlagsBits = sub_10005EA40();
  sub_10005E9C0(v2);
  swift_bridgeObjectRelease();
  v3._countAndFlagsBits = 93;
  v3._object = (void *)0xE100000000000000;
  sub_10005E9C0(v3);
  return 1531139649;
}

void sub_10000DCE8(uint64_t a1)
{
  uint64_t v2 = sub_10005E7B0();
  uint64_t v29 = *(void *)(v2 - 8);
  uint64_t v30 = v2;
  __chkstk_darwin(v2);
  uint64_t v27 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_10005E7E0();
  uint64_t v26 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000D79C();
  sub_100007F60(0, (unint64_t *)&qword_100084108);
  uint64_t v6 = sub_10005E920();
  uint64_t v8 = v7;
  swift_errorRetain();
  id v31 = sub_100019858(v6, v8, -401, 0, 0, a1);
  id v9 = v31;
  sub_10002E180((uint64_t (*)(void))sub_10000E1D4, 0, (void (*)(void))sub_10000FA6C);
  id v10 = [v9 userInfo];
  uint64_t v11 = sub_10005E880();

  sub_10005E920();
  sub_1000106CC(v11, &aBlock);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v35)
  {
    uint64_t v12 = swift_dynamicCast();
    if (v12)
    {
      uint64_t v13 = v38;
      __chkstk_darwin(v12);
      sub_10002E180((uint64_t (*)(void))sub_10000E1F0, 0, (void (*)(void))sub_10000FAE8);
    }
  }
  else
  {

    sub_10000BB64((uint64_t)&aBlock);
  }
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v15 = (void *)Strong;
    id v16 = (void **)(Strong + OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_queue);
    swift_beginAccess();
    id v17 = *v16;
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = v15;
    *(void *)(v18 + 24) = v9;
    char v36 = sub_10000FAD8;
    uint64_t v37 = v18;
    *(void *)&long long aBlock = _NSConcreteStackBlock;
    *((void *)&aBlock + 1) = 1107296256;
    id v34 = sub_10000C5B0;
    id v35 = &unk_100076DE0;
    uint64_t v19 = _Block_copy(&aBlock);
    id v20 = v9;
    id v21 = v17;
    id v22 = v15;
    sub_10005E7D0();
    id v32 = _swiftEmptyArrayStorage;
    sub_10000ED0C();
    sub_100007D1C((uint64_t *)&unk_100083FD0);
    sub_10000ED5C();
    id v23 = v27;
    uint64_t v24 = v30;
    sub_10005EEE0();
    sub_10005ECB0();
    _Block_release(v19);

    (*(void (**)(char *, uint64_t))(v29 + 8))(v23, v24);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v5, v28);
    swift_release();
  }
  else
  {
  }
}

unint64_t sub_10000E1D4()
{
  return 0xD000000000000012;
}

unint64_t sub_10000E1F0()
{
  return 0xD000000000000015;
}

uint64_t sub_10000E20C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_delegate;
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v6 = *(void *)(v4 + 8);
    Objectint Type = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 104))(a1, a2, ObjectType, v6);
    return swift_unknownObjectRelease();
  }
  return result;
}

void VideoStream.stream(_:didStart:error:)()
{
  sub_10000FB38();
  uint64_t v2 = v1;
  char v4 = v3;
  uint64_t v6 = v5;
  id v7 = v0;
  id v8 = v6;
  id v9 = v7;
  id v10 = v8;
  uint64_t v11 = sub_10005E720();
  if (v2)
  {
    os_log_type_t v12 = sub_10005EC40();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      sub_10000FB70();
      *(_DWORD *)uint64_t v13 = 136315138;
      uint64_t v14 = sub_10000DC5C(v10);
      sub_10000FB94(v14, v15, v16, v17, v18);
      sub_10000FB0C();
      sub_10005EE10();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "%s Failed", v13, 0xCu);
      swift_arrayDestroy();
      sub_10000FB20();
      sub_10000FB20();
    }
    else
    {
    }
LABEL_10:
    sub_10000DCE8(v2);
    goto LABEL_11;
  }
  os_log_type_t v19 = sub_10005EC50();
  if (os_log_type_enabled(v11, v19))
  {
    id v20 = (uint8_t *)swift_slowAlloc();
    sub_10000FB70();
    *(_DWORD *)id v20 = 136315138;
    uint64_t v21 = sub_10000DC5C(v10);
    sub_10000FB94(v21, v22, v23, v24, v25);
    sub_10000FB0C();
    sub_10005EE10();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v11, v19, "%s Started", v20, 0xCu);
    swift_arrayDestroy();
    sub_10000FB20();
    sub_10000FB20();
  }
  else
  {
  }
  if ((v4 & 1) == 0) {
    goto LABEL_10;
  }
LABEL_11:
  sub_10000FB54();
}

void VideoStream.streamDidStop(_:)(int a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, int a7, int a8, uint64_t a9, char *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  sub_10000EABC(a1, (int)&static os_log_type_t.default.getter, (int)"%s Stopped", 252, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22,
    a23,
    a24);
}

#error "10000E5F8: call analysis failed (funcsize=26)"

void VideoStream.streamDidServerDie(_:)(int a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, int a7, int a8, uint64_t a9, char *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  sub_10000EABC(a1, (int)&static os_log_type_t.default.getter, (int)"%s Interrupted", 258, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22,
    a23,
    a24);
}

#error "10000E684: call analysis failed (funcsize=26)"

void VideoStream.stream(_:didPause:error:)(int a1, int a2, int a3, uint64_t a4, uint64_t a5, int a6, int a7, int a8, char *a9, uint64_t a10, int a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  sub_10000E7E4(a1, a2, a3, (int)"%s didPause: %{BOOL}d", 265, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22,
    a23,
    a24);
}

#error "10000E710: call analysis failed (funcsize=32)"

void VideoStream.stream(_:didResume:error:)(int a1, int a2, int a3, uint64_t a4, uint64_t a5, int a6, int a7, int a8, char *a9, uint64_t a10, int a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  sub_10000E7E4(a1, a2, a3, (int)"%s didResume: %{BOOL}d", 273, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22,
    a23,
    a24);
}

#error "10000E7A0: call analysis failed (funcsize=32)"

void VideoStream.stream(_:didUpdateVideoConfiguration:error:)(int a1, int a2, int a3, uint64_t a4, uint64_t a5, int a6, int a7, int a8, char *a9, uint64_t a10, int a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  sub_10000E7E4(a1, a2, a3, (int)"%s didUpdateVideoConfiguration: %{BOOL}d", 281, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22,
    a23,
    a24);
}

void sub_10000E7E4(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, char *format, uint64_t a10, int a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  sub_10000FB38();
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  char v30 = v29;
  id v32 = v31;
  id v33 = v24;
  id v34 = v32;
  id v35 = v33;
  id v36 = v34;
  uint64_t v37 = sub_10005E720();
  os_log_type_t v38 = sub_10005EC50();
  if (os_log_type_enabled(v37, v38))
  {
    uint64_t v39 = swift_slowAlloc();
    sub_10000FB70();
    *(_DWORD *)uint64_t v39 = 136315394;
    uint64_t v40 = sub_10000DC5C(v36);
    sub_10000FB94(v40, v41, v42, v43, v44);
    sub_10000FB0C();
    sub_10005EE10();

    swift_bridgeObjectRelease();
    *(_WORD *)(v39 + 12) = 1024;
    sub_10005EE10();
    _os_log_impl((void *)&_mh_execute_header, v37, v38, v26, (uint8_t *)v39, 0x12u);
    swift_arrayDestroy();
    sub_10000FB20();
    sub_10000FB20();
  }
  else
  {
  }
  if ((v30 & 1) == 0 || v28) {
    sub_10000DCE8(v28);
  }
  sub_10000FB54();
}

#error "10000E9D8: call analysis failed (funcsize=32)"

void VideoStream.streamDidRTPTimeOut(_:)(int a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, int a7, int a8, uint64_t a9, char *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  sub_10000EABC(a1, (int)&static os_log_type_t.error.getter, (int)"%s RTP Timeout", 288, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22,
    a23,
    a24);
}

#error "10000EA68: call analysis failed (funcsize=26)"

void VideoStream.streamDidRTCPTimeOut(_:)(int a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, int a7, int a8, uint64_t a9, char *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  sub_10000EABC(a1, (int)&static os_log_type_t.error.getter, (int)"%s RTCP Timeout", 294, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22,
    a23,
    a24);
}

void sub_10000EABC(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char *format, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  sub_10000FB38();
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  char v30 = v29;
  id v31 = v24;
  id v32 = v30;
  id v33 = v31;
  id v34 = v32;
  id v35 = sub_10005E720();
  os_log_type_t v36 = v28();
  if (os_log_type_enabled(v35, v36))
  {
    uint64_t v37 = (uint8_t *)swift_slowAlloc();
    sub_10000FB70();
    *(_DWORD *)uint64_t v37 = 136315138;
    uint64_t v38 = sub_10000DC5C(v34);
    sub_10000FB94(v38, v39, v40, v41, v42);
    sub_10000FB0C();
    sub_10005EE10();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v35, v36, v26, v37, 0xCu);
    swift_arrayDestroy();
    sub_10000FB20();
    sub_10000FB20();
  }
  else
  {
  }
  sub_10000DCE8(0);
  sub_10000FB54();
}

#error "10000EC7C: call analysis failed (funcsize=26)"

uint64_t sub_10000ECAC()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10000ECEC()
{
  return sub_10000DAB8(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_10000ECF4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10000ED04()
{
  return swift_release();
}

unint64_t sub_10000ED0C()
{
  unint64_t result = qword_1000848D0;
  if (!qword_1000848D0)
  {
    sub_10005E7B0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000848D0);
  }
  return result;
}

unint64_t sub_10000ED5C()
{
  unint64_t result = qword_1000848E0;
  if (!qword_1000848E0)
  {
    sub_100007D84((uint64_t *)&unk_100083FD0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000848E0);
  }
  return result;
}

id sub_10000EDB0(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    v4.super.isa = sub_10005E870().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v4.super.isa = 0;
  }
  id v9 = 0;
  id v5 = [v2 initWithNWConnectionClientID:a1 options:v4.super.isa error:&v9];

  if (v5)
  {
    id v6 = v9;
  }
  else
  {
    id v7 = v9;
    sub_10005E530();

    swift_willThrow();
  }
  return v5;
}

id sub_10000EEB8(uint64_t a1, uint64_t a2)
{
  char v3 = v2;
  if (a2)
  {
    v5.super.isa = sub_10005E870().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v5.super.isa = 0;
  }
  id v10 = 0;
  id v6 = [v3 initWithNetworkSockets:a1 options:v5.super.isa error:&v10];

  if (v6)
  {
    id v7 = v10;
  }
  else
  {
    id v8 = v10;
    sub_10005E530();

    swift_willThrow();
  }
  swift_unknownObjectRelease();
  return v6;
}

id sub_10000EFCC(uint64_t a1, void *a2)
{
  char v3 = v2;
  id v9 = 0;
  id v5 = [v3 initWithStreamToken:a1 queue:a2 error:&v9];
  if (v5)
  {
    id v6 = v9;
  }
  else
  {
    id v7 = v9;
    sub_10005E530();

    swift_willThrow();
  }

  return v5;
}

uint64_t sub_10000F098(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_10000F16C(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    Objectint Type = (void *)swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_10000AF90((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    Objectint Type = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_10000AF90((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  sub_10000B724((uint64_t)v12);
  return v7;
}

uint64_t sub_10000F16C(void *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0 && __dst && a3 - (uint64_t)__dst > (uint64_t)(HIBYTE(a6) & 0xF))
    {
      __src[0] = a5;
      __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
      sub_10000F2C4((char *)__src, HIBYTE(a6) & 0xF, __dst);
      sub_10005EE20();
      uint64_t result = 0;
      *a1 = __dst;
      return result;
    }
    goto LABEL_11;
  }
  if ((a6 & 0x1000000000000000) != 0)
  {
LABEL_11:
    uint64_t result = (uint64_t)sub_10000F39C(a5, a6);
    *a1 = v11;
    return result;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
  }
  else
  {
    uint64_t v8 = sub_10005EF80();
    if (!v8)
    {
      uint64_t result = sub_10005F040();
      __break(1u);
      return result;
    }
  }
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

void *sub_10000F2C4(char *__src, size_t __n, char *__dst)
{
  if ((__n & 0x8000000000000000) != 0 || (&__dst[__n] > __src ? (BOOL v3 = &__src[__n] > __dst) : (BOOL v3 = 0), v3))
  {
    uint64_t result = (void *)sub_10005F0B0();
    __break(1u);
  }
  else
  {
    return memcpy(__dst, __src, __n);
  }
  return result;
}

void *sub_10000F39C(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_10000F434(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_10000F5A8(0, v2[2] + 1, 1, (uint64_t)v2);
  }
  unint64_t v4 = v2[2];
  unint64_t v3 = v2[3];
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_10000F5A8((char *)(v3 > 1), v4 + 1, 1, (uint64_t)v2);
  }
  v2[2] = v4 + 1;
  *((unsigned char *)v2 + v4 + 32) = 0;
  return v2;
}

void *sub_10000F434(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0)
  {
    Swift::Int v2 = sub_10005E9E0();
    if (v2) {
      goto LABEL_6;
    }
    return &_swiftEmptyArrayStorage;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    Swift::Int v2 = HIBYTE(a2) & 0xF;
  }
  else {
    Swift::Int v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v2) {
    return &_swiftEmptyArrayStorage;
  }
LABEL_6:
  unint64_t v3 = sub_10002B62C(v2, 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    unint64_t v4 = v3;
    uint64_t v5 = sub_10005EF50();
    if ((v6 & 1) != 0 || v5 != v2) {
      goto LABEL_14;
    }
    return v4;
  }
  sub_10005F0B0();
  __break(1u);
LABEL_14:
  uint64_t result = (void *)sub_10005F040();
  __break(1u);
  return result;
}

char *sub_10000F5A8(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    int64_t v9 = *(void *)(a4 + 16);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_100007D1C(&qword_100084120);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  os_log_type_t v12 = v10 + 32;
  uint64_t v13 = (char *)(a4 + 32);
  if (v5)
  {
    sub_10000F758(v13, v8, v12);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_10000F680(v13, v8, v12);
  }
  swift_bridgeObjectRelease();
  return v10;
}

void *sub_10000F680(char *__src, size_t __n, char *__dst)
{
  if ((__n & 0x8000000000000000) != 0 || (&__dst[__n] > __src ? (BOOL v3 = &__src[__n] > __dst) : (BOOL v3 = 0), v3))
  {
    uint64_t result = (void *)sub_10005F0B0();
    __break(1u);
  }
  else
  {
    return memcpy(__dst, __src, __n);
  }
  return result;
}

char *sub_10000F758(char *__src, size_t __len, char *__dst)
{
  if ((__len & 0x8000000000000000) != 0)
  {
    __src = (char *)sub_10005F0B0();
    __break(1u);
  }
  else if (__dst != __src || &__src[__len] <= __dst)
  {
    return (char *)memmove(__dst, __src, __len);
  }
  return __src;
}

void destroy for VideoConfig(id *a1)
{
}

uint64_t initializeWithCopy for VideoConfig(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  id v4 = v3;
  return a1;
}

uint64_t assignWithCopy for VideoConfig(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a2;
  char v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return a1;
}

uint64_t assignWithTake for VideoConfig(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return a1;
}

ValueMetadata *type metadata accessor for VideoConfig()
{
  return &type metadata for VideoConfig;
}

uint64_t sub_10000F8E4()
{
  return type metadata accessor for VideoStream();
}

uint64_t sub_10000F8EC()
{
  uint64_t result = sub_10005E750();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void sub_10000F9B4(uint64_t a1, uint64_t a2, void *a3, SEL *a4)
{
  NSString v6 = sub_10005E8F0();
  swift_bridgeObjectRelease();
  [a3 *a4:v6];
}

unint64_t sub_10000FA20()
{
  unint64_t result = qword_100084128;
  if (!qword_100084128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100084128);
  }
  return result;
}

uint64_t sub_10000FA6C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_errorRetain();
  return v1;
}

uint64_t sub_10000FA98()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10000FAD8()
{
  return sub_10000E20C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_10000FAEC()
{
  return sub_10005EE10();
}

uint64_t sub_10000FB20()
{
  return swift_slowDealloc();
}

uint64_t sub_10000FB70()
{
  return swift_slowAlloc();
}

uint64_t sub_10000FB88()
{
  return v0;
}

uint64_t sub_10000FB94(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  return sub_10000F098(a1, a2, (uint64_t *)va);
}

uint64_t sub_10000FBAC(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC17ContinuityDisplay27QOSControllerViewController_stack) = a1;
  return _objc_release_x1();
}

uint64_t sub_10000FBC0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)(v2 + OBJC_IVAR____TtC17ContinuityDisplay27QOSControllerViewController_connectionDescription);
  void *v3 = a1;
  v3[1] = a2;
  return swift_bridgeObjectRelease();
}

id sub_10000FBE4(char a1)
{
  *(void *)&v1[OBJC_IVAR____TtC17ContinuityDisplay27QOSControllerViewController_stack] = 0;
  uint64_t v3 = OBJC_IVAR____TtC17ContinuityDisplay27QOSControllerViewController_label;
  id v4 = objc_allocWithZone((Class)UILabel);
  uint64_t v5 = v1;
  *(void *)&v1[v3] = [v4 init];
  NSString v6 = &v5[OBJC_IVAR____TtC17ContinuityDisplay27QOSControllerViewController_connectionDescription];
  *(void *)NSString v6 = 63;
  *((void *)v6 + 1) = 0xE100000000000000;
  v5[OBJC_IVAR____TtC17ContinuityDisplay27QOSControllerViewController_compact] = a1;

  v8.receiver = v5;
  v8.super_class = (Class)type metadata accessor for QOSControllerViewController();
  return [super initWithNibName:0 bundle:0];
}

void sub_10000FCA4()
{
  *(void *)&v0[OBJC_IVAR____TtC17ContinuityDisplay27QOSControllerViewController_stack] = 0;
  uint64_t v1 = OBJC_IVAR____TtC17ContinuityDisplay27QOSControllerViewController_label;
  *(void *)&v0[v1] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v2 = &v0[OBJC_IVAR____TtC17ContinuityDisplay27QOSControllerViewController_connectionDescription];
  *(void *)uint64_t v2 = 63;
  *((void *)v2 + 1) = 0xE100000000000000;

  sub_10005F050();
  __break(1u);
}

void sub_10000FD6C()
{
  uint64_t v1 = v0;
  sub_100010460();
  sub_100007D1C(&qword_1000843F0);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_100064320;
  uint64_t v3 = *(void **)&v0[OBJC_IVAR____TtC17ContinuityDisplay27QOSControllerViewController_label];
  *(void *)(v2 + 32) = v3;
  sub_10005EAE0();
  id v4 = v3;
  id v5 = sub_10001AC7C();
  [v5 setAxis:1];
  [v5 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v1 setView:v5];
  id v6 = v5;
  sub_10000FBAC((uint64_t)v5);
  id v7 = [self monospacedSystemFontOfSize:12.0 weight:UIFontWeightThin];
  [v4 setFont:v7];

  [v4 setTextAlignment:1];
  [v4 setNumberOfLines:0];
  id v8 = [self whiteColor];
  [v4 setTextColor:v8];
}

void sub_10000FF5C(uint64_t a1)
{
  uint64_t v3 = sub_100010170(AVCQoSReportExpectedFrameCount, a1);
  uint64_t v4 = sub_100010170(AVCQoSReportDisplayedFrameCount, a1);
  id v5 = (void *)AVCQoSReportHIDEventLatencyAverage;
  type metadata accessor for AVCQoSReportKey(0);
  sub_1000103C4();
  id v6 = v5;
  sub_1000104A0();
  double v7 = sub_100010230((uint64_t)v18, a1);
  sub_10000BD80((uint64_t)v18);
  if (__OFSUB__(v3, v4))
  {
    __break(1u);
  }
  else
  {
    uint64_t v8 = (v3 - v4) & ~((v3 - v4) >> 63);
    id v9 = AVCQoSReportVideoStallDuration;
    sub_1000104A0();
    double v10 = sub_100010230((uint64_t)v18, a1);
    sub_10000BD80((uint64_t)v18);
    sub_10005EF10();
    double v11 = sub_100010230((uint64_t)v18, a1);
    sub_10000BD80((uint64_t)v18);
    os_log_type_t v12 = *(void **)(v1 + OBJC_IVAR____TtC17ContinuityDisplay27QOSControllerViewController_label);
    sub_100007D1C((uint64_t *)&unk_100084D10);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_100064330;
    uint64_t v15 = *(void *)(v1 + OBJC_IVAR____TtC17ContinuityDisplay27QOSControllerViewController_connectionDescription);
    uint64_t v14 = *(void *)(v1 + OBJC_IVAR____TtC17ContinuityDisplay27QOSControllerViewController_connectionDescription + 8);
    *(void *)(v13 + 56) = &type metadata for String;
    *(void *)(v13 + 64) = sub_100010414();
    *(void *)(v13 + 32) = v15;
    *(void *)(v13 + 40) = v14;
    *(void *)(v13 + 96) = &type metadata for Double;
    *(void *)(v13 + 104) = &protocol witness table for Double;
    *(double *)(v13 + 72) = v11 / 5.0;
    *(void *)(v13 + 136) = &type metadata for Double;
    *(void *)(v13 + 144) = &protocol witness table for Double;
    *(double *)(v13 + 112) = v10 / 5.0;
    *(void *)(v13 + 176) = &type metadata for Double;
    *(void *)(v13 + 184) = &protocol witness table for Double;
    *(double *)(v13 + 152) = (double)v8 / 5.0;
    *(void *)(v13 + 216) = &type metadata for Double;
    *(void *)(v13 + 224) = &protocol witness table for Double;
    *(double *)(v13 + 192) = v7;
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_10005E930();
    sub_10003D0CC(v16, v17, v12);
  }
}

uint64_t sub_100010170(void *a1, uint64_t a2)
{
  *(void *)&long long v8 = a1;
  type metadata accessor for AVCQoSReportKey(0);
  sub_1000103C4();
  id v4 = a1;
  sub_10005EF10();
  sub_100010668((uint64_t)v7, a2, &v8);
  sub_10000BD80((uint64_t)v7);
  if (v9)
  {
    if (swift_dynamicCast()) {
      return v6;
    }
  }
  else
  {
    sub_10000BB64((uint64_t)&v8);
  }
  return 0;
}

double sub_100010230(uint64_t a1, uint64_t a2)
{
  double v2 = 0.0;
  if (*(void *)(a2 + 16))
  {
    unint64_t v4 = sub_10003C554(a1);
    if (v5)
    {
      sub_10000AF90(*(void *)(a2 + 56) + 32 * v4, (uint64_t)v8);
      if (swift_dynamicCast()) {
        return v7;
      }
    }
  }
  return v2;
}

void sub_1000102B4()
{
}

id sub_10001030C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for QOSControllerViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for QOSControllerViewController()
{
  return self;
}

unint64_t sub_1000103C4()
{
  unint64_t result = qword_100083CE0;
  if (!qword_100083CE0)
  {
    type metadata accessor for AVCQoSReportKey(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100083CE0);
  }
  return result;
}

unint64_t sub_100010414()
{
  unint64_t result = qword_100084188;
  if (!qword_100084188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100084188);
  }
  return result;
}

unint64_t sub_100010460()
{
  unint64_t result = qword_100084190;
  if (!qword_100084190)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100084190);
  }
  return result;
}

uint64_t sub_1000104A0()
{
  return sub_10005EF10();
}

uint64_t sub_1000104C0(uint64_t a1, uint64_t a2, void *a3)
{
  NSString v4 = sub_10005E8F0();
  id v5 = [a3 objectForKey:v4];

  uint64_t v6 = 2;
  if (v5)
  {
    if (swift_dynamicCast()) {
      return v8;
    }
    else {
      return 2;
    }
  }
  return v6;
}

uint64_t sub_100010574(uint64_t a1, char a2)
{
  uint64_t result = sub_10000A578(a2, a1);
  if (result)
  {
    if (swift_dynamicCast()) {
      return v3;
    }
    else {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1000105E8(uint64_t a1)
{
  if (!*(void *)(a1 + 16)) {
    return 0;
  }
  unint64_t v2 = sub_10003C46C(6);
  if ((v3 & 1) == 0) {
    return 0;
  }
  sub_10000AF90(*(void *)(a1 + 56) + 32 * v2, (uint64_t)v6);
  uint64_t result = swift_dynamicCast();
  if (result) {
    return v5;
  }
  return result;
}

double sub_100010668@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  if (*(void *)(a2 + 16) && (unint64_t v5 = sub_10003C554(a1), (v6 & 1) != 0))
  {
    uint64_t v7 = *(void *)(a2 + 56) + 32 * v5;
    sub_10000AF90(v7, (uint64_t)a3);
  }
  else
  {
    double result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

double sub_1000106CC@<D0>(uint64_t a1@<X2>, _OWORD *a2@<X8>)
{
  if (*(void *)(a1 + 16) && (unint64_t v4 = sub_10003C4EC(), (v5 & 1) != 0))
  {
    uint64_t v6 = *(void *)(a1 + 56) + 32 * v4;
    sub_10000AF90(v6, (uint64_t)a2);
  }
  else
  {
    double result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

void *sub_100010730(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  unint64_t v3 = sub_10003C598(a1);
  if ((v4 & 1) == 0) {
    return 0;
  }
  char v5 = *(void **)(*(void *)(a2 + 56) + 8 * v3);
  id v6 = v5;
  return v5;
}

void *sub_100010778(unsigned __int8 a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  unint64_t v3 = sub_10003C5FC(a1);
  if ((v4 & 1) == 0) {
    return 0;
  }
  char v5 = *(void **)(*(void *)(a2 + 56) + 8 * v3);
  id v6 = v5;
  return v5;
}

uint64_t sub_1000107C0()
{
  uint64_t v0 = sub_10005E920();
  uint64_t v2 = v1;
  if (v0 == sub_10005E920() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_10001A844();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

BOOL static HostTime.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

uint64_t sub_10001083C(char a1, char a2)
{
  uint64_t v3 = sub_10000963C(a1);
  uint64_t v5 = v4;
  if (v3 == sub_10000963C(a2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_10001A844();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t SidecarDisplaySession.delegate.getter()
{
  return swift_unknownObjectWeakLoadStrong();
}

uint64_t SidecarDisplaySession.delegate.setter(uint64_t a1, uint64_t a2)
{
  sub_10001A638();
  *(void *)(v2 + 8) = a2;
  sub_10001AA5C();
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*SidecarDisplaySession.delegate.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_delegate;
  v3[5] = v1;
  v3[6] = v4;
  uint64_t v5 = v1 + v4;
  sub_10001AA5C();
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  uint64_t v7 = *(void *)(v5 + 8);
  v3[3] = Strong;
  v3[4] = v7;
  return sub_1000109C0;
}

void sub_1000109C0(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)a1;
  *(void *)(*(void *)(*(void *)a1 + 40) + *(void *)(*(void *)a1 + 48) + 8) = *(void *)(*(void *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if (a2)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }

  free(v3);
}

id SidecarDisplaySession.request.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_request);
}

id SidecarDisplaySession.codec.getter()
{
  id result = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                                 + OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_config), "codec"));
  if (result)
  {
    uint64_t v2 = result;
    sub_10005EC10();

    return 0;
  }
  return result;
}

uint64_t SidecarDisplaySession.peerSupportsHIDReportExtensions.getter()
{
  sub_10001A614();
  return *v0;
}

uint64_t sub_100010B00(char a1)
{
  uint64_t result = sub_10001A638();
  *uint64_t v1 = a1;
  return result;
}

void *SidecarDisplaySession.copyConfig()()
{
  [*(id *)(v0 + OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_config) copy];
  sub_10005EEC0();
  swift_unknownObjectRelease();
  sub_100007F60(0, (unint64_t *)&unk_1000841C0);
  swift_dynamicCast();
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_request);
  id v2 = [v1 device];
  [v12 setDevice:v2];

  sub_10001A688();
  Class isa = sub_10005EB70().super.super.isa;
  sub_10001A93C((uint64_t)isa, "setEnableTimeSync:");

  id v4 = [v1 service];
  id v5 = [v4 name];

  [v12 setService:v5];
  id v6 = [v1 session];
  if (v6)
  {
    uint64_t v7 = v6;
    [v6 transport];
  }
  sub_10001A93C((uint64_t)v6, "setTransport:");
  id v8 = [v1 session];
  if (v8)
  {
    uint64_t v9 = v8;
    [v8 dataLink];
  }
  Class v10 = sub_10005F1B0().super.super.isa;
  sub_10001A93C((uint64_t)v10, "setDataLink:");

  return v12;
}

uint64_t sub_100010D40()
{
  id v1 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_config), "showTouchBar"));
  if (v1)
  {
    id v2 = v1;
    sub_10005EB80();
  }
  sub_10001A614();
  uint64_t v3 = swift_bridgeObjectRetain();
  char v4 = sub_10002E76C(v3);
  swift_bridgeObjectRelease();
  return v4 & 1;
}

double SidecarDisplaySession.safeInsets.getter()
{
  sub_10001A614();
  return *(double *)v0;
}

uint64_t SidecarDisplaySession.safeInsets.setter(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = (double *)(v4 + OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_safeInsets);
  uint64_t result = swift_beginAccess();
  double *v9 = a1;
  v9[1] = a2;
  v9[2] = a3;
  v9[3] = a4;
  return result;
}

uint64_t (*SidecarDisplaySession.safeInsets.modify())()
{
  return j__swift_endAccess;
}

id SidecarDisplaySession.resolution.getter()
{
  return sub_100010EF8(*(void **)(v0 + OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_config));
}

id sub_100010EF8(void *a1)
{
  [a1 scale];
  double v3 = v2;
  id result = [a1 size];
  BOOL v7 = v5 > 0.0;
  if (v6 <= 0.0) {
    BOOL v7 = 0;
  }
  if (v3 <= 0.0) {
    BOOL v7 = 0;
  }
  if (!v7) {
    return 0;
  }
  double v8 = ceil(v5);
  if ((~*(void *)&v8 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  if (v8 <= -9.22337204e18)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (v8 >= 9.22337204e18)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  double v9 = ceil(v6);
  if ((~*(void *)&v9 & 0x7FF0000000000000) == 0)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (v9 <= -9.22337204e18)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v9 >= 9.22337204e18)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  double v10 = ceil(v3);
  if ((~*(void *)&v10 & 0x7FF0000000000000) == 0)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v10 > -9.22337204e18)
  {
    if (v10 < 9.22337204e18) {
      return (id)(uint64_t)v8;
    }
    goto LABEL_25;
  }
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
  return result;
}

id SidecarDisplaySession.resolution.setter(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_10001103C(a1, a2, a3, a4 & 1, *(id *)(v4 + OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_config));
}

id sub_10001103C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, id a5)
{
  if (a4)
  {
    [a5 setScale:0.0];
    double v8 = 0.0;
    double v9 = 0.0;
  }
  else
  {
    [a5 setScale:(double)a3];
    double v8 = (double)a1;
    double v9 = (double)a2;
  }

  return [a5 setSize:v8, v9];
}

void (*SidecarDisplaySession.resolution.modify(void *a1))(uint64_t **a1)
{
  double v3 = malloc(0x28uLL);
  *a1 = v3;
  uint64_t v4 = *(void **)(v1 + OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_config);
  v3[4] = v4;
  void *v3 = sub_100010EF8(v4);
  v3[1] = v5;
  v3[2] = v6;
  *((unsigned char *)v3 + 24) = v7 & 1;
  return sub_100011148;
}

void sub_100011148(uint64_t **a1)
{
  uint64_t v1 = *a1;
  sub_10001103C(**a1, v1[1], v1[2], *((unsigned char *)v1 + 24), (id)(*a1)[4]);

  free(v1);
}

id SidecarDisplaySession.queue.getter()
{
  sub_10001A614();
  uint64_t v1 = *v0;

  return v1;
}

void SidecarDisplaySession.queue.setter(void *a1)
{
  sub_10001A638();
  double v3 = *v1;
  *uint64_t v1 = a1;
}

uint64_t (*SidecarDisplaySession.queue.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_10001125C(uint64_t a1)
{
  return sub_10001A65C(a1, OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_negotiator);
}

uint64_t sub_100011268()
{
  uint64_t v0 = swift_retain();
  return sub_1000112CC(v0);
}

uint64_t SidecarDisplaySession.clock.getter()
{
  return swift_retain();
}

uint64_t sub_1000112CC(uint64_t a1)
{
  sub_10001A638();
  *uint64_t v1 = a1;
  return swift_release();
}

uint64_t sub_10001130C(uint64_t a1)
{
  sub_10001A638();
  *uint64_t v1 = a1;
  return swift_bridgeObjectRelease();
}

void sub_10001134C(void *a1, void *a2)
{
  uint64_t v3 = v2;
  id v4 = a2;
  if (!a1)
  {
    if (!a2) {
      return;
    }
LABEL_6:
    NSString v8 = sub_10001AAA0();
    [v4 addObserver:v3 forKeyPath:v8 options:4 context:v3];

    if (!a1) {
      return;
    }
    goto LABEL_7;
  }
  if (a2)
  {
    sub_100007F60(0, (unint64_t *)&unk_100084240);
    id v4 = v4;
    id v6 = a1;
    char v7 = sub_10005EDC0();

    if (v7) {
      return;
    }
    goto LABEL_6;
  }
LABEL_7:
  NSString v9 = sub_10001AAA0();
  [a1 removeObserver:v3 forKeyPath:v9 context:v3];
}

void sub_100011460(void *a1)
{
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_videoSidecarStream);
  id v4 = v3;
  sub_10001134C(a1, v3);
}

void sub_1000114C4(void *a1)
{
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_videoSidecarStream);
  *(void *)(v1 + OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_videoSidecarStream) = a1;
  id v3 = a1;
  sub_100011460(v2);
}

uint64_t sub_100011520(uint64_t a1)
{
  return sub_10001A65C(a1, OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_videoStream);
}

uint64_t sub_10001152C(uint64_t a1)
{
  return sub_10001A65C(a1, OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_audioStream);
}

uint64_t sub_100011538(uint64_t a1)
{
  return sub_10001A65C(a1, OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_videoClient);
}

id SidecarDisplaySession.videoSlot.getter()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_videoClient);
  if (!v1) {
    return (id)&_mh_execute_header;
  }
  id result = [v1 slotForMode:0];
  if (result) {
    id result = (id)sub_10005F210();
  }
  else {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_1000115F4(void *a1)
{
  uint64_t v3 = sub_10001A82C();
  *(void *)(v3 + 16) = v1;
  v6[4] = sub_10001A3A0;
  v6[5] = v3;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 1107296256;
  _OWORD v6[2] = sub_100011AC4;
  v6[3] = &unk_100077120;
  id v4 = _Block_copy(v6);
  id v5 = v1;
  swift_release();
  [a1 timeSyncWithCompletion:v4];
  _Block_release(v4);
}

uint64_t sub_1000116C4(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v6 = sub_10005E7B0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  NSString v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10005E7E0();
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    __chkstk_darwin(v11);
    *(&v22 - 2) = a2;
    swift_errorRetain();
    sub_10002E180(sub_100011A28, 0, (void (*)(void))sub_10000FAE8);
    return swift_errorRelease();
  }
  else
  {
    uint64_t v16 = (void **)&a3[OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_queue];
    uint64_t v23 = v12;
    swift_beginAccess();
    uint64_t v17 = *v16;
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = a1;
    *(void *)(v18 + 24) = a3;
    aBlock[4] = sub_10001A3D8;
    aBlock[5] = v18;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10000C5B0;
    aBlock[3] = &unk_100077170;
    os_log_type_t v19 = _Block_copy(aBlock);
    id v20 = v17;
    uint64_t v21 = a3;
    sub_10005E7D0();
    uint64_t v24 = _swiftEmptyArrayStorage;
    sub_10001A4D0((unint64_t *)&qword_1000848D0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100007D1C((uint64_t *)&unk_100083FD0);
    sub_100007E14((unint64_t *)&qword_1000848E0, (uint64_t *)&unk_100083FD0);
    sub_10005EEE0();
    sub_10005ECB0();
    _Block_release(v19);

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v14, v10);
    return swift_release();
  }
}

uint64_t sub_100011A28()
{
  return 0x636E7953656D6954;
}

uint64_t sub_100011A40(uint64_t a1)
{
  type metadata accessor for Clock();
  swift_allocObject();
  Clock.init(clockIdentifier:)(a1);
  Clock.heartbeat.setter(1);
  uint64_t v2 = swift_retain();
  sub_1000112CC(v2);

  return swift_release();
}

void sub_100011AC4(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

void sub_100011B3C()
{
  Class isa = sub_10005E870().super.isa;
  Data = (void *)OPACKEncoderCreateData();

  if (Data)
  {
    id v3 = Data;
    uint64_t v4 = sub_10005E600();
    unint64_t v6 = v5;

    objc_allocWithZone((Class)SidecarItem);
    swift_bridgeObjectRetain();
    id v7 = sub_100019A28(v4, v6);
    uint64_t v8 = *(void **)(v0 + OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_request);
    sub_100007D1C(&qword_1000843F0);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_100064320;
    *(void *)(v9 + 32) = v7;
    sub_10005EAE0();
    sub_100007F60(0, &qword_1000843F8);
    id v10 = v7;
    Class v11 = sub_10005EAA0().super.isa;
    swift_bridgeObjectRelease();
    [v8 sendItems:v11 complete:0];
  }
  else
  {
    sub_100007F60(0, (unint64_t *)&qword_100084108);
    sub_10002E6C4(0, 0, 0);
    swift_willThrow();
  }
}

uint64_t SidecarDisplaySession.sidecarRequest(_:receivedItems:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a2;
  *(void *)(v4 + 24) = v2;
  swift_bridgeObjectRetain();
  id v5 = v2;
  sub_10001793C();

  return swift_release();
}

void sub_100011DD8(unint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  if (!(a1 >> 62))
  {
    uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v6) {
      goto LABEL_3;
    }
LABEL_47:
    swift_bridgeObjectRelease();
    goto LABEL_48;
  }
  swift_bridgeObjectRetain();
  if (!sub_10005F080()) {
    goto LABEL_47;
  }
LABEL_3:
  sub_100028534(0, (a1 & 0xC000000000000001) == 0, a1);
  if ((a1 & 0xC000000000000001) != 0) {
    id v7 = (id)sub_10005EF70();
  }
  else {
    id v7 = *(id *)(a1 + 32);
  }
  uint64_t v8 = v7;
  swift_bridgeObjectRelease();
  uint64_t v9 = sub_10001A46C(v8);
  if (v10 >> 60 != 15)
  {
    uint64_t v11 = v9;
    unint64_t v12 = v10;
    Class isa = sub_10005E5E0().super.isa;
    uint64_t v14 = OPACKDecodeData();

    if (!v14)
    {

      sub_10001A2A4(v11, v12);
      goto LABEL_48;
    }
    self;
    uint64_t v15 = swift_dynamicCastObjCClass();
    if (!v15)
    {

      sub_10001A2A4(v11, v12);
      swift_unknownObjectRelease();
      goto LABEL_48;
    }
    unint64_t v39 = (void *)v15;
    id v16 = [v8 type];
    uint64_t v17 = sub_10005E920();
    uint64_t v19 = v18;

    if (v17 == 1953066601 && v19 == 0xE400000000000000)
    {
      swift_bridgeObjectRelease();
      uint64_t v22 = v39;
      goto LABEL_19;
    }
    uint64_t v21 = v19;
    uint64_t v22 = v39;
    if (sub_10005F140())
    {
      swift_bridgeObjectRelease();
LABEL_19:
      uint64_t v23 = v3;
      sub_1000125CC(v22);
LABEL_20:
      if (v23)
      {
        swift_unknownObjectRelease();
        sub_10001A2A4(v11, v12);

        return;
      }

      sub_10001A2A4(v11, v12);
      goto LABEL_50;
    }
    BOOL v24 = v17 == 0x7472617473 && v21 == 0xE500000000000000;
    if (v24 || (sub_10005F140() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      uint64_t v23 = v3;
      sub_100014AD4(v39);
      goto LABEL_20;
    }
    if (v17 == 0x6544657461647075 && v21 == 0xEE0073746C756166)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v26 = sub_10005F140();
      swift_bridgeObjectRelease();
      if ((v26 & 1) == 0)
      {
        uint64_t v27 = a2 + OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_delegate;
        swift_beginAccess();
        if (swift_unknownObjectWeakLoadStrong())
        {
          uint64_t v28 = *(void *)(v27 + 8);
          Objectint Type = swift_getObjectType();
          (*(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v28 + 80))(a2, a1, ObjectType, v28);

          sub_10001A2A4(v11, v12);
          swift_unknownObjectRelease();
          goto LABEL_50;
        }
LABEL_44:

        sub_10001A2A4(v11, v12);
        goto LABEL_50;
      }
    }
    *(void *)&long long v41 = 0x73746C7561666564;
    *((void *)&v41 + 1) = 0xE800000000000000;
    id v30 = [v39 __swift_objectForKeyedSubscript:sub_10005F180()];
    swift_unknownObjectRelease();
    if (v30)
    {
      sub_10005EEC0();
      swift_unknownObjectRelease();
    }
    else
    {
      long long v41 = 0u;
      long long v42 = 0u;
    }
    sub_10001A14C((uint64_t)&v41, (uint64_t)v43, (uint64_t *)&unk_100084130);
    if (v44)
    {
      sub_100007D1C(&qword_1000843E0);
      if ((swift_dynamicCast() & 1) == 0) {
        goto LABEL_44;
      }
      *(void *)&long long v41 = 1937335659;
      *((void *)&v41 + 1) = 0xE400000000000000;
      id v31 = [v39 __swift_objectForKeyedSubscript:sub_10005F180()];
      swift_unknownObjectRelease();
      if (v31)
      {
        sub_10005EEC0();
        swift_unknownObjectRelease();
      }
      else
      {
        long long v41 = 0u;
        long long v42 = 0u;
      }
      sub_10001A14C((uint64_t)&v41, (uint64_t)v43, (uint64_t *)&unk_100084130);
      if (v44)
      {
        sub_100007D1C((uint64_t *)&unk_100084420);
        if (swift_dynamicCast())
        {
          id v35 = sub_100009A14(v40);
          sub_10001130C((uint64_t)v35);
          uint64_t v36 = a2 + OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_delegate;
          swift_beginAccess();
          if (!swift_unknownObjectWeakLoadStrong())
          {

            sub_10001A2A4(v11, v12);
            swift_unknownObjectRelease();
            swift_bridgeObjectRelease();
            return;
          }
          uint64_t v37 = *(void *)(v36 + 8);
          uint64_t v38 = swift_getObjectType();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 24))(a2, v40, v38, v37);

          sub_10001A2A4(v11, v12);
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {

          sub_10001A2A4(v11, v12);
          swift_bridgeObjectRelease();
        }
        goto LABEL_50;
      }

      sub_10001A2A4(v11, v12);
      swift_bridgeObjectRelease();
    }
    else
    {

      sub_10001A2A4(v11, v12);
    }
    swift_unknownObjectRelease();
    sub_10001A2E0((uint64_t)v43, (uint64_t *)&unk_100084130);
    return;
  }

LABEL_48:
  uint64_t v32 = a2 + OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_delegate;
  swift_beginAccess();
  if (!swift_unknownObjectWeakLoadStrong()) {
    return;
  }
  uint64_t v33 = *(void *)(v32 + 8);
  uint64_t v34 = swift_getObjectType();
  (*(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v33 + 80))(a2, a1, v34, v33);
LABEL_50:
  swift_unknownObjectRelease();
}

uint64_t sub_1000124EC()
{
  swift_bridgeObjectRelease();

  uint64_t v1 = sub_10001A914();

  return _swift_deallocObject(v1, v2, v3);
}

void sub_100012524()
{
  sub_100011DD8(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_1000125CC(void *a1)
{
  uint64_t v3 = v2;
  uint64_t v4 = v1;
  uint64_t v6 = sub_100007D1C((uint64_t *)&unk_1000843D0);
  __chkstk_darwin(v6 - 8);
  sub_10001A998();
  v125 = v7;
  uint64_t v136 = sub_10005E6D0();
  sub_100008DCC();
  uint64_t v9 = v8;
  __chkstk_darwin(v10);
  sub_10001A79C();
  v126 = v11;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v113 - v13;
  uint64_t v132 = 0x73746C7561666564;
  unint64_t v133 = 0xE800000000000000;
  id v15 = [a1 __swift_objectForKeyedSubscript:sub_10005F180()];
  sub_10001A7B0();
  uint64_t v123 = v9;
  v124 = v14;
  if (v1)
  {
    sub_10001A86C();
    uint64_t v16 = swift_unknownObjectRelease();
  }
  else
  {
    sub_10001A7C8();
  }
  sub_10001A764(v16, v17, (uint64_t *)&unk_100084130);
  if (*((void *)&v135 + 1))
  {
    sub_100007D1C(&qword_1000843E0);
    if (swift_dynamicCast())
    {
      uint64_t v18 = sub_100009A14(v131);
      sub_10001130C((uint64_t)v18);
    }
  }
  else
  {
    sub_10001A2E0((uint64_t)&v134, (uint64_t *)&unk_100084130);
  }
  v1[OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_inited] = 1;
  sub_10001A688();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (char *)Strong;
    swift_getObjectType();
    sub_10001A9AC();
    v20();
    swift_unknownObjectRelease();
  }
  uint64_t v132 = 6518369;
  unint64_t v133 = 0xE300000000000000;
  uint64_t v21 = sub_10005F180();
  id v22 = sub_10001A668(v21);
  sub_10001A7B0();
  if (v1)
  {
    sub_10001A86C();
    uint64_t v23 = swift_unknownObjectRelease();
  }
  else
  {
    sub_10001A7C8();
  }
  sub_10001A764(v23, v24, (uint64_t *)&unk_100084130);
  uint64_t v25 = &OBJC_IVAR____TtC17ContinuityDisplay11VideoStream_started;
  char v26 = &unk_100088000;
  if (*((void *)&v135 + 1))
  {
    if (swift_dynamicCast())
    {
      v121 = a1;
      uint64_t v122 = v2;
      uint64_t v28 = v129;
      unint64_t v27 = v130;
      sub_100008D64(v129, v130);
      char v29 = sub_10005E720();
      os_log_type_t v30 = sub_10005EC50();
      if (os_log_type_enabled(v29, v30))
      {
        id v31 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)id v31 = 134217984;
        *(void *)&long long v134 = sub_10005E620();
        uint64_t v25 = &OBJC_IVAR____TtC17ContinuityDisplay11VideoStream_started;
        sub_10005EE10();
        sub_10001AAE0();
        _os_log_impl((void *)&_mh_execute_header, v29, v30, "AVC negotiate offer (%ld bytes)", v31, 0xCu);
        sub_10000FB20();
      }
      else
      {

        sub_10001AAE0();
      }
      sub_100007F60(0, (unint64_t *)&unk_100084D90);
      unsigned __int8 v32 = sub_100013228();
      id v33 = sub_100010EF8(*(void **)&v4[v25[55]]);
      if ((v36 & 1) == 0)
      {
        id v37 = v33;
        uint64_t v38 = v34;
        uint64_t v39 = v35;
        uint64_t v40 = 3;
        if ((v32 & 1) == 0) {
          uint64_t v40 = 0;
        }
        v120 = (void (*)(os_log_t, char *, uint64_t))v40;
        sub_100007D1C(&qword_1000843A0);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_100064390;
        *(void *)(inited + 32) = sub_10005E920();
        *(void *)(inited + 40) = v42;
        *(void *)(inited + 72) = &type metadata for Int;
        *(void *)(inited + 48) = v37;
        *(void *)(inited + 80) = sub_10005E920();
        *(void *)(inited + 88) = v43;
        *(void *)(inited + 120) = &type metadata for Int;
        *(void *)(inited + 96) = v38;
        *(void *)(inited + 128) = sub_10005E920();
        *(void *)(inited + 136) = v44;
        *(void *)(inited + 168) = &type metadata for Int;
        *(void *)(inited + 144) = v39;
        *(void *)(inited + 176) = sub_10005E920();
        *(void *)(inited + 184) = v45;
        *(void *)(inited + 216) = &type metadata for UInt;
        *(void *)(inited + 192) = v120;
      }
      uint64_t v46 = sub_10005E890();
      sub_100008D64(v28, v27);
      sub_10001DAC0(v46);
      uint64_t v48 = v47;
      swift_bridgeObjectRelease();
      id v49 = objc_allocWithZone((Class)AVCMediaStreamNegotiator);
      uint64_t v50 = v122;
      id v51 = sub_100019ACC(v28, v27, v48);
      uint64_t v3 = v50;
      if (v50)
      {
        sub_10001AAE0();
        return;
      }
      char v26 = v4;
      sub_10001125C((uint64_t)v51);
      sub_10001AAE0();
      a1 = v121;
    }
  }
  else
  {
    sub_10001A2E0((uint64_t)&v134, (uint64_t *)&unk_100084130);
  }
  *(void *)&long long v134 = 1936876918;
  *((void *)&v134 + 1) = 0xE400000000000000;
  uint64_t v52 = sub_10005F180();
  id v53 = sub_10001A668(v52);
  sub_10001A7B0();
  if (v26)
  {
    sub_10005EEC0();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v134 = 0u;
    long long v135 = 0u;
  }
  sub_1000132B4((uint64_t)&v134, -402);
  sub_10001A2E0((uint64_t)&v134, (uint64_t *)&unk_100084130);
  if (!v3)
  {
    *(void *)&long long v134 = 1936876918;
    *((void *)&v134 + 1) = 0xE400000000000000;
    uint64_t v54 = sub_10005F180();
    id v55 = sub_10001A668(v54);
    sub_10001A7B0();
    if (v4)
    {
      sub_10005EEC0();
      swift_unknownObjectRelease();
    }
    else
    {
      long long v134 = 0u;
      long long v135 = 0u;
    }
    uint64_t v56 = sub_10001360C((uint64_t)&v134);
    sub_10001A2E0((uint64_t)&v134, (uint64_t *)&unk_100084130);
    uint64_t v57 = &v4[OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_peerSupportsHIDReportExtensions];
    swift_beginAccess();
    *uint64_t v57 = v56 & 1;
    uint64_t v132 = 0x726568706963;
    unint64_t v133 = 0xE600000000000000;
    uint64_t v58 = sub_10005F180();
    id v59 = sub_10001A668(v58);
    sub_10001A7B0();
    if (v56)
    {
      sub_10001A86C();
      uint64_t v60 = swift_unknownObjectRelease();
    }
    else
    {
      sub_10001A7C8();
    }
    sub_10001A764(v60, v61, (uint64_t *)&unk_100084130);
    if (*((void *)&v135 + 1))
    {
      if (sub_10001A6A0())
      {
        uint64_t v56 = *(void *)&v4[OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_config];
        Class isa = sub_10005EC00().super.super.isa;
        sub_10001AA68((uint64_t)isa, "setCipher:");
      }
    }
    else
    {
      sub_10001A2E0((uint64_t)&v134, (uint64_t *)&unk_100084130);
    }
    uint64_t v132 = 1684632949;
    unint64_t v133 = 0xE400000000000000;
    uint64_t v63 = sub_10005F180();
    id v64 = sub_10001A668(v63);
    sub_10001A7B0();
    if (v56)
    {
      sub_10001A86C();
      uint64_t v65 = swift_unknownObjectRelease();
    }
    else
    {
      sub_10001A7C8();
    }
    uint64_t v67 = v136;
    os_log_t v68 = v126;
    sub_10001A764(v65, v66, (uint64_t *)&unk_100084130);
    if (*((void *)&v135 + 1))
    {
      if (sub_10001A6A0())
      {
        v121 = a1;
        uint64_t v69 = v127;
        unint64_t v70 = v128;
        uint64_t v71 = sub_10001A8E4();
        sub_100008D64(v71, v72);
        uint64_t v73 = (uint64_t)v125;
        uint64_t v74 = sub_10001A8E4();
        sub_1000136F4(v74, v75, v76);
        if (sub_10001A2B8(v73, 1, v67) == 1)
        {
          uint64_t v77 = sub_10001A8E4();
          sub_100008D0C(v77, v78);
          sub_10001A2E0(v73, (uint64_t *)&unk_1000843D0);
        }
        else
        {
          uint64_t v122 = 0;
          uint64_t v79 = v123;
          uint64_t v80 = v124;
          sub_10001A9AC();
          v81();
          v120 = *(void (**)(os_log_t, char *, uint64_t))(v79 + 16);
          v120(v68, v80, v67);
          char v82 = &v4[OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_uuid];
          swift_beginAccess();
          sub_10001A9AC();
          v83();
          swift_endAccess();
          v125 = v4;
          uint64_t v84 = sub_10005E720();
          os_log_type_t v85 = sub_10005EC50();
          int v119 = v85;
          BOOL v86 = os_log_type_enabled(v84, v85);
          uint64_t v87 = v69;
          uint64_t v88 = v79;
          if (v86)
          {
            os_log_t v116 = v84;
            uint64_t v117 = v87;
            unint64_t v118 = v70;
            v89 = (uint8_t *)swift_slowAlloc();
            uint64_t v115 = swift_slowAlloc();
            *(void *)&long long v134 = v115;
            *(_DWORD *)v89 = 136446210;
            v113 = v89 + 4;
            v114 = v89;
            ((void (*)(NSObject *, char *))v120)(v126, v82);
            uint64_t v90 = sub_10005E670();
            unint64_t v92 = v91;
            uint64_t v123 = *(void *)(v88 + 8);
            sub_10001A8B4();
            v93();
            uint64_t v132 = sub_10000F098(v90, v92, (uint64_t *)&v134);
            sub_10005EE10();
            unint64_t v94 = v125;

            swift_bridgeObjectRelease();
            os_log_t v68 = v116;
            _os_log_impl((void *)&_mh_execute_header, v116, (os_log_type_t)v119, "=== Sidecar Session %{public}s ===", v114, 0xCu);
            swift_arrayDestroy();
            sub_10000FB20();
            sub_10000FB20();

            sub_100008D0C(v117, v118);
          }
          else
          {
            sub_100008D0C(v87, v70);

            os_log_t v68 = v125;
          }
          sub_10001A8B4();
          v95();
        }
      }
    }
    else
    {
      sub_10001A2E0((uint64_t)&v134, (uint64_t *)&unk_100084130);
    }
    uint64_t v132 = 0x6365646F63;
    unint64_t v133 = 0xE500000000000000;
    uint64_t v96 = sub_10005F180();
    id v97 = sub_10001A668(v96);
    sub_10001A7B0();
    if (v68)
    {
      sub_10001A86C();
      uint64_t v98 = swift_unknownObjectRelease();
    }
    else
    {
      sub_10001A7C8();
    }
    sub_10001A764(v98, v99, (uint64_t *)&unk_100084130);
    if (*((void *)&v135 + 1))
    {
      if (sub_10001A6A0())
      {
        Class v100 = sub_10005EC00().super.super.isa;
        sub_10001AA68((uint64_t)v100, "setCodec:");
      }
    }
    else
    {
      sub_10001A2E0((uint64_t)&v134, (uint64_t *)&unk_100084130);
    }
    uint64_t v132 = 7826540;
    unint64_t v133 = 0xE300000000000000;
    uint64_t v101 = sub_10005F180();
    id v102 = sub_10001AA04(v101);
    swift_unknownObjectRelease();
    if (v102)
    {
      sub_10005EEC0();
      uint64_t v103 = swift_unknownObjectRelease();
    }
    else
    {
      sub_10001A7C8();
    }
    sub_10001A764(v103, v104, (uint64_t *)&unk_100084130);
    if (*((void *)&v135 + 1))
    {
      uint64_t v105 = sub_10001A6A0();
      if (v105)
      {
        uint64_t v105 = (uint64_t)sub_10005EB70().super.super.isa;
        v106 = (void *)v105;
        goto LABEL_67;
      }
    }
    else
    {
      uint64_t v105 = sub_10001A2E0((uint64_t)&v134, (uint64_t *)&unk_100084130);
    }
    v106 = 0;
LABEL_67:
    sub_10001AA68(v105, "setLowLatency:");

    uint64_t v132 = 0x73656C6974;
    unint64_t v133 = 0xE500000000000000;
    uint64_t v107 = sub_10005F180();
    id v108 = sub_10001AA04(v107);
    swift_unknownObjectRelease();
    if (v108)
    {
      sub_10005EEC0();
      uint64_t v109 = swift_unknownObjectRelease();
    }
    else
    {
      sub_10001A7C8();
    }
    sub_10001A764(v109, v110, (uint64_t *)&unk_100084130);
    if (*((void *)&v135 + 1))
    {
      uint64_t v111 = sub_10001A6A0();
      if (v111)
      {
        uint64_t v111 = (uint64_t)sub_10005EC00().super.super.isa;
        v112 = (void *)v111;
LABEL_75:
        sub_10001AA68(v111, "setTilesPerFrame:");

        sub_100017FF4();
        return;
      }
    }
    else
    {
      uint64_t v111 = sub_10001A2E0((uint64_t)&v134, (uint64_t *)&unk_100084130);
    }
    v112 = 0;
    goto LABEL_75;
  }
}

id sub_100013228()
{
  id v0 = [self mainDisplay];
  id v1 = v0;
  if (v0)
  {
    id v2 = [v0 currentPreset];

    if (v2)
    {
      id v1 = [v2 isReference];
    }
    else
    {
      return 0;
    }
  }
  return v1;
}

uint64_t sub_1000132B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10005E9D0();
  unint64_t v6 = v5;
  if (*(void *)(a1 + 24))
  {
    uint64_t result = sub_100019C6C(a1, (uint64_t)v22);
    if (!v23)
    {
      __break(1u);
      return result;
    }
    uint64_t v8 = sub_10005E940();
    unint64_t v10 = v9;
  }
  else
  {
    unint64_t v10 = 0xE300000000000000;
    uint64_t v8 = 7104878;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_10005E720();
  os_log_type_t v12 = sub_10005EC50();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v21 = v8;
    uint64_t v13 = swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    v22[0] = v24;
    *(_DWORD *)uint64_t v13 = 136446466;
    swift_bridgeObjectRetain();
    sub_10000F098(v4, v6, v22);
    sub_10005EE10();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v13 + 12) = 2082;
    swift_bridgeObjectRetain();
    sub_10000F098(v21, v10, v22);
    sub_10005EE10();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "=== Sidecar-%{public}s <-> Sidecar-%{public}s ===", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    sub_10000FB20();
    sub_10000FB20();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  sub_100019C6C(a1, (uint64_t)v22);
  if (!v23) {
    return sub_10001A2E0((uint64_t)v22, (uint64_t *)&unk_100084130);
  }
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    sub_10001AACC();
    if (v16)
    {
      uint64_t v17 = sub_10002AB9C(v14, v15);
      if (qword_100083B48 != -1) {
        swift_once();
      }
      char v18 = sub_10002AF70(v17, qword_1000841A0);
      uint64_t result = swift_bridgeObjectRelease();
      if (v18)
      {
        sub_100007F60(0, (unint64_t *)&qword_100084108);
        sub_10005E920();
        sub_10001A6C0();
        sub_10001A6D0(v19, v20, a2);
        return swift_willThrow();
      }
    }
    else
    {
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_10001360C(uint64_t a1)
{
  sub_100019C6C(a1, (uint64_t)v8);
  if (!v9)
  {
    sub_10001A2E0((uint64_t)v8, (uint64_t *)&unk_100084130);
    goto LABEL_9;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_9:
    char v6 = 1;
    return v6 & 1;
  }
  sub_10001AACC();
  if (!v3)
  {
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  uint64_t v4 = sub_10002AB9C(v1, v2);
  if (qword_100083B50 != -1) {
    swift_once();
  }
  char v5 = sub_10002AF70(v4, qword_1000841A8);
  swift_bridgeObjectRelease();
  char v6 = v5 ^ 1;
  return v6 & 1;
}

uint64_t sub_1000136F4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v6) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_12:
        __break(1u);
      }
      uint64_t v6 = (int)v6;
LABEL_6:
      if (v6 == 16)
      {
        sub_10001A354();
        sub_10005E450();
        sub_10005E6A0();
        sub_100008D0C(a1, a2);
        uint64_t v10 = sub_10005E6D0();
        return sub_10001A32C(a3, 0, 1, v10);
      }
      else
      {
LABEL_8:
        sub_100008D0C(a1, a2);
        uint64_t v12 = sub_10005E6D0();
        return sub_10001A32C(a3, 1, 1, v12);
      }
    case 2uLL:
      uint64_t v8 = *(void *)(a1 + 16);
      uint64_t v7 = *(void *)(a1 + 24);
      BOOL v9 = __OFSUB__(v7, v8);
      uint64_t v6 = v7 - v8;
      if (!v9) {
        goto LABEL_6;
      }
      goto LABEL_12;
    case 3uLL:
      goto LABEL_8;
    default:
      uint64_t v6 = BYTE6(a2);
      goto LABEL_6;
  }
}

void sub_1000138B8(uint64_t a1)
{
  uint64_t v3 = (char *)sub_100014820();
  if (!v1)
  {
    uint64_t v4 = v3;
    id v5 = [*(id *)&v3[OBJC_IVAR____TtC17ContinuityDisplay11VideoStream_videoStream] streamToken];
    sub_100011538((uint64_t)[objc_allocWithZone((Class)AVCRemoteVideoClient) initWithStreamToken:v5 delegate:*(void *)(a1+ OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_videoClientDelegate)]);
    swift_unknownObjectWeakAssign();
    id v6 = v4;
    sub_100011520((uint64_t)v4);
    uint64_t v7 = *(void **)(a1 + OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_negotiator);
    if (v7)
    {
      id v8 = [v7 answer];
      uint64_t v9 = sub_10005E600();
      unint64_t v11 = v10;

      sub_100007D1C(&qword_1000843A0);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1000643A0;
      *(void *)(inited + 32) = 6518369;
      *(void *)(inited + 40) = 0xE300000000000000;
      *(void *)(inited + 48) = v9;
      *(void *)(inited + 56) = v11;
      *(void *)(inited + 72) = &type metadata for Data;
      *(void *)(inited + 80) = 1936876918;
      *(void *)(inited + 88) = 0xE400000000000000;
      sub_100008D64(v9, v11);
      uint64_t v13 = sub_10005E9D0();
      *(void *)(inited + 120) = &type metadata for String;
      *(void *)(inited + 96) = v13;
      *(void *)(inited + 104) = v14;
      uint64_t v38 = sub_10005E890();
      id v15 = sub_100010EF8(*(void **)(a1 + OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_config));
      if ((v18 & 1) == 0)
      {
        uint64_t v19 = v16;
        uint64_t v20 = v17;
        unsigned __int8 v32 = &type metadata for Int;
        v31[0] = v15;
        sub_100009920((uint64_t)v31, 0x6874646977, 0xE500000000000000);
        unsigned __int8 v32 = &type metadata for Int;
        v31[0] = v19;
        sub_100009920((uint64_t)v31, 0x746867696568, 0xE600000000000000);
        unsigned __int8 v32 = &type metadata for Int;
        v31[0] = v20;
        sub_100009920((uint64_t)v31, 0x656C616373, 0xE500000000000000);
      }
      uint64_t v21 = a1 + OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_delegate;
      swift_beginAccess();
      if (swift_unknownObjectWeakLoadStrong())
      {
        uint64_t v22 = *(void *)(v21 + 8);
        Objectint Type = swift_getObjectType();
        (*(void (**)(void *__return_ptr, uint64_t, uint64_t, uint64_t))(v22 + 96))(v33, a1, ObjectType, v22);
        swift_unknownObjectRelease();
        sub_10001A14C((uint64_t)v33, (uint64_t)&v34, &qword_1000843A8);
        if ((v37 & 1) == 0)
        {
          long long v30 = v34;
          uint64_t v24 = v35;
          uint64_t v25 = v36;
          sub_100007D1C(&qword_1000843B0);
          uint64_t v26 = swift_allocObject();
          *(_OWORD *)(v26 + 16) = xmmword_100064390;
          *(_OWORD *)(v26 + 32) = v30;
          *(void *)(v26 + 48) = v24;
          *(void *)(v26 + 56) = v25;
          unsigned __int8 v32 = (void *)sub_100007D1C(&qword_1000843B8);
          v31[0] = v26;
          sub_100009920((uint64_t)v31, 0x737465736E69, 0xE600000000000000);
        }
      }
      sub_100008D64(v9, v11);
      unint64_t v27 = sub_10005E720();
      os_log_type_t v28 = sub_10005EC50();
      if (os_log_type_enabled(v27, v28))
      {
        char v29 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)char v29 = 134217984;
        v31[0] = sub_10005E620();
        sub_10005EE10();
        sub_100008D0C(v9, v11);
        _os_log_impl((void *)&_mh_execute_header, v27, v28, "AVC negotiate answer (%ld bytes)", v29, 0xCu);
        swift_slowDealloc();
      }
      else
      {

        sub_100008D0C(v9, v11);
      }
      sub_100011B3C();
      swift_bridgeObjectRelease();
      sub_100016590();
      sub_100008D0C(v9, v11);
    }
    else
    {
      __break(1u);
    }
  }
}

char *sub_100013D30(uint64_t a1, unint64_t a2, char *a3)
{
  uint64_t v5 = v3;
  sub_10005E6D0();
  sub_100008DCC();
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v109 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void **)(v3 + OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_videoSidecarStream);
  if (!v14 || (id v15 = *(void **)(v3 + OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_negotiator)) == 0)
  {
    sub_100007F60(0, (unint64_t *)&qword_100084108);
    sub_10005E920();
    sub_10001A6C0();
    sub_10001A6D0(v18, v19, -1010);
    swift_willThrow();
    return v13;
  }
  uint64_t v113 = v11;
  uint64_t v114 = v10;
  uint64_t v112 = v4;
  uint64_t v115 = v15;
  id v116 = v14;
  if (a2 >> 60 == 15)
  {
    id v16 = v14;
    id v17 = v15;
  }
  else
  {
    uint64_t v111 = a3;
    sub_10001A290(a1, a2);
    uint64_t v109 = v14;
    uint64_t v110 = v15;
    sub_10001A290(a1, a2);
    uint64_t v21 = sub_10005E720();
    os_log_type_t v22 = sub_10005EC50();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v23 = 134217984;
      v119[0] = (id)sub_10005E620();
      sub_10005EE10();
      sub_10001AA44();
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "AVC negotiate answer (%ld bytes)", v23, 0xCu);
      sub_10000FB20();
    }
    else
    {

      sub_10001AA44();
    }
    Class isa = sub_10005E5E0().super.isa;
    v119[0] = 0;
    id v25 = (id)v110;
    unsigned int v26 = [(id)v110 setAnswer:isa withError:v119];

    a3 = v111;
    if (!v26)
    {
      id v52 = v119[0];
      sub_10005E530();

      swift_willThrow();
      sub_10001AA44();

      return v13;
    }
    id v27 = v119[0];
    sub_10001AA44();
    id v15 = v115;
  }
  v119[0] = 0;
  id v28 = [v15 generateMediaStreamConfigurationWithError:v119];
  if (!v28)
  {
    uint64_t v50 = v15;
    id v51 = v119[0];
    sub_10005E530();

    swift_willThrow();
    return v13;
  }
  char v29 = v28;
  id v30 = v119[0];
  if ([v29 isRTCPEnabled])
  {
    [v29 setRtcpTimeOutEnabled:1];
    [v29 setRtcpSendInterval:1.0];
    id v31 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v5
                                                                + OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_request), "session"));
    if (!v31 || (unsigned __int8 v32 = v31, v33 = [v31 transport], v32, v34 = 3.0, v33 != (id)2)) {
      double v34 = 8.0;
    }
    [v29 setRtcpTimeOutInterval:v34];
  }
  uint64_t v35 = v29;
  uint64_t v36 = (char *)[v35 video];
  uint64_t v111 = v35;
  if (!v36)
  {
    uint64_t v109 = 1366;
    uint64_t v110 = 1024;
    goto LABEL_40;
  }
  char v37 = v36;
  if ([v36 videoResolution] != (id)12)
  {
    uint64_t v45 = 1366;
    uint64_t v48 = 1024;
    goto LABEL_39;
  }
  id v38 = [v37 customWidth];
  if (!a3)
  {
    __break(1u);
LABEL_66:
    __break(1u);
LABEL_67:
    __break(1u);
LABEL_68:
    __break(1u);
    goto LABEL_69;
  }
  uint64_t v39 = (uint64_t)v38;
  BOOL v40 = v38 == (id)0x8000000000000000 && a3 + 1 == 0;
  if (v40) {
    goto LABEL_68;
  }
  uint64_t v110 = (uint64_t)[v37 customHeight];
  if (v110 == 0x8000000000000000 && a3 + 1 == 0) {
LABEL_69:
  }
    __break(1u);
  uint64_t v42 = (uint64_t)a3;
  uint64_t v43 = v111;
  uint64_t result = (char *)[v111 video];
  if (!result)
  {
LABEL_74:
    __break(1u);
    goto LABEL_75;
  }
  uint64_t v44 = result;
  [result setVideoResolution:12];

  uint64_t result = (char *)[v43 video];
  if (!result)
  {
LABEL_75:
    __break(1u);
    goto LABEL_76;
  }
  uint64_t v45 = v39 / v42;
  if ((unsigned __int128)(v39 / v42 * (__int128)v42) >> 64 != (v39 / v42 * v42) >> 63) {
    goto LABEL_66;
  }
  uint64_t v46 = result;
  [result setCustomWidth:];

  uint64_t result = (char *)[v111 video];
  if (result)
  {
    uint64_t v47 = v42;
    uint64_t v48 = v110 / v42;
    if ((unsigned __int128)(v48 * (__int128)v47) >> 64 == (v48 * v47) >> 63)
    {
      id v49 = result;
      [result setCustomHeight:];

      char v37 = v49;
LABEL_39:
      uint64_t v109 = v45;
      uint64_t v110 = v48;

LABEL_40:
      sub_10001A688();
      uint64_t v54 = v113;
      uint64_t v53 = v114;
      sub_10001A9AC();
      v55();
      uint64_t v117 = sub_10005E6B0();
      LOWORD(v118) = v56;
      BYTE2(v118) = v57;
      BYTE3(v118) = v58;
      BYTE4(v118) = v59;
      BYTE5(v118) = v60;
      BYTE6(v118) = v61;
      HIBYTE(v118) = v62;
      sub_10001DEF8((uint64_t)&v117, (uint64_t)v119);
      (*(void (**)(char *, uint64_t))(v54 + 8))(v13, v53);
      uint64_t v63 = sub_10005E5D0();
      unint64_t v65 = v64;
      uint64_t v66 = sub_10001AAC0();
      sub_100008D0C(v66, v67);
      uint64_t v68 = sub_10001DFB4(v63, v65);
      unint64_t v70 = v69;
      uint64_t v71 = *(void **)(v5 + OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_config);
      uint64_t v13 = v111;
      uint64_t v72 = (uint64_t)sub_100014724(v71, (SEL *)&selRef_cipher);
      char v74 = v73;
      uint64_t v75 = sub_10001A220([v116 rapportStream]);
      unint64_t v77 = v76;
      if (v74) {
        uint64_t v72 = 5;
      }
      sub_100008D64(v68, v70);
      [v13 setSRTPCipherSuite:v72];
      [v13 setSRTCPCipherSuite:v72];
      if (v77 >> 60 == 15) {
        uint64_t v78 = 0;
      }
      else {
        uint64_t v78 = v75;
      }
      unint64_t v79 = 0xC000000000000000;
      if (v77 >> 60 != 15) {
        unint64_t v79 = v77;
      }
      uint64_t v117 = v78;
      unint64_t v118 = v79;
      sub_100008D64(v68, v70);
      sub_10001A290(v75, v77);
      sub_10005E630();
      sub_10001A9D8();
      uint64_t v80 = v117;
      unint64_t v81 = v118;
      uint64_t v82 = sub_10001AAC0();
      sub_100008D64(v82, v83);
      sub_10001A1AC(v80, v81, v13, (SEL *)&selRef_setReceiveMasterKey_);
      sub_10001A1AC(v80, v81, v13, (SEL *)&selRef_setSendMasterKey_);
      sub_10001A9D8();
      sub_10001A2A4(v75, v77);

      id v84 = sub_100014724(v71, (SEL *)&selRef_codec);
      if (v85) {
        goto LABEL_51;
      }
      id v86 = v84;
      uint64_t result = (char *)[v13 video];
      if (result)
      {
        uint64_t v87 = result;
        [result setTxCodecType:v86];

        uint64_t result = (char *)[v13 video];
        if (result)
        {
          uint64_t v88 = result;
          [result setRxCodecType:v86];

LABEL_51:
          id v89 = sub_100014778(v71, (SEL *)&selRef_framerate);
          if (v90)
          {
LABEL_54:
            sub_100015B60(v71, (SEL *)&selRef_rtcp);
            sub_10001AAF8();
            if (!v40) {
              [v13 setRtcpEnabled:v94 & 1];
            }
            id v95 = sub_1000147C4(v71, (SEL *)&selRef_keyFrameInterval);
            uint64_t v96 = v115;
            if ((v97 & 1) == 0)
            {
              double v98 = *(double *)&v95;
              uint64_t v99 = v13;
              sub_10000C6C0(v99, v98);
            }
            id v100 = sub_100014778(v71, (SEL *)&selRef_tilesPerFrame);
            if (v101) {
              goto LABEL_61;
            }
            id v102 = v100;
            uint64_t v103 = v13;
            uint64_t result = (char *)[v103 video];
            if (result)
            {
              uint64_t v104 = result;
              [result setTilesPerFrame:v102];

              uint64_t v96 = v115;
LABEL_61:
              id v105 = sub_1000147C4(v71, (SEL *)&selRef_rtcpTimeoutInterval);
              if (v106)
              {

                sub_10001A9D8();
              }
              else
              {
                double v107 = *(double *)&v105;
                id v108 = v13;
                [v108 setRtcpTimeOutInterval:v107];

                sub_10001A9D8();
              }

              return v13;
            }
            goto LABEL_73;
          }
          id v91 = v89;
          unint64_t v92 = v13;
          uint64_t result = (char *)[v92 video];
          if (result)
          {
            uint64_t v93 = result;
            [result setFramerate:v91];

            goto LABEL_54;
          }
LABEL_72:
          __break(1u);
LABEL_73:
          __break(1u);
          goto LABEL_74;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      goto LABEL_72;
    }
    goto LABEL_67;
  }
LABEL_76:
  __break(1u);
  return result;
}

id sub_100014724(void *a1, SEL *a2)
{
  id result = [a1 *a2];
  if (result)
  {
    sub_10001AA24();

    if (v5) {
      return 0;
    }
    else {
      return (id)v4;
    }
  }
  return result;
}

id sub_100014778(void *a1, SEL *a2)
{
  id result = [a1 *a2];
  if (result)
  {
    sub_10001AA24();

    return (id)v4;
  }
  return result;
}

id sub_1000147C4(void *a1, SEL *a2)
{
  id result = [a1 *a2];
  if (result)
  {
    uint64_t v3 = result;
    sub_10005EBA0();

    return 0;
  }
  return result;
}

id sub_100014820()
{
  uint64_t v1 = sub_10005E6D0();
  sub_100008DCC();
  uint64_t v3 = v2;
  __chkstk_darwin(v4);
  sub_10001A708();
  char v5 = *(void **)&v0[OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_videoSidecarStream];
  if (v5 && (id v6 = *(void **)&v0[OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_negotiator]) != 0)
  {
    v29[0] = 0;
    uint64_t v7 = v5;
    id v8 = v6;
    id v9 = [v8 generateMediaStreamInitOptionsWithError:v29];
    id v10 = v29[0];
    if (v9)
    {
      uint64_t v11 = v9;
      uint64_t v24 = v7;
      uint64_t v12 = sub_10005E880();
      id v13 = v10;

      uint64_t v25 = v12;
      uint64_t v26 = sub_10005E920();
      uint64_t v27 = v14;
      sub_10005EF10();
      id v15 = &v0[OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_uuid];
      sub_10001A688();
      (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v0, v15, v1);
      uint64_t v16 = sub_10005E670();
      uint64_t v18 = v17;
      sub_10001A8B4();
      v19();
      id v28 = &type metadata for String;
      uint64_t v26 = v16;
      uint64_t v27 = v18;
      sub_1000099A4((uint64_t)&v26, (uint64_t)v29);
      objc_allocWithZone((Class)type metadata accessor for VideoStream());
      id v20 = sub_10000CAE8(v0, v24, v25);
    }
    else
    {
      id v20 = v29[0];
      sub_10005E530();

      swift_willThrow();
    }
  }
  else
  {
    id v20 = (id)sub_100007F60(0, (unint64_t *)&qword_100084108);
    sub_10005E920();
    sub_10001A6C0();
    sub_10001A6D0(v21, v22, -1010);
    swift_willThrow();
  }
  return v20;
}

void sub_100014AD4(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v4 = *(void **)(v1 + OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_videoStream);
  if (!v4) {
    goto LABEL_21;
  }
  *(void *)&long long v42 = 0x6874646977;
  *((void *)&v42 + 1) = 0xE500000000000000;
  id v6 = v4;
  id v7 = [a1 __swift_objectForKeyedSubscript:sub_10005F180()];
  swift_unknownObjectRelease();
  if (v7)
  {
    sub_10005EEC0();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v42 = 0u;
    long long v43 = 0u;
  }
  sub_10001A14C((uint64_t)&v42, (uint64_t)v44, (uint64_t *)&unk_100084130);
  if (!v45) {
    goto LABEL_19;
  }
  if ((sub_10001A744() & 1) == 0) {
    goto LABEL_20;
  }
  uint64_t v8 = v46;
  *(void *)&long long v42 = 0x746867696568;
  *((void *)&v42 + 1) = 0xE600000000000000;
  uint64_t v9 = sub_10005F180();
  id v10 = sub_10001A9B8(v9);
  swift_unknownObjectRelease();
  if (v10)
  {
    sub_10005EEC0();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v42 = 0u;
    long long v43 = 0u;
  }
  sub_10001A14C((uint64_t)&v42, (uint64_t)v44, (uint64_t *)&unk_100084130);
  if (!v45) {
    goto LABEL_19;
  }
  if ((sub_10001A744() & 1) == 0)
  {
LABEL_20:

    goto LABEL_21;
  }
  uint64_t v11 = v46;
  *(void *)&long long v42 = 0x656C616373;
  *((void *)&v42 + 1) = 0xE500000000000000;
  uint64_t v12 = sub_10005F180();
  id v13 = sub_10001A9B8(v12);
  swift_unknownObjectRelease();
  if (v13)
  {
    sub_10005EEC0();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v42 = 0u;
    long long v43 = 0u;
  }
  sub_10001A14C((uint64_t)&v42, (uint64_t)v44, (uint64_t *)&unk_100084130);
  if (!v45)
  {
LABEL_19:

    sub_10001A2E0((uint64_t)v44, (uint64_t *)&unk_100084130);
LABEL_21:
    sub_100007F60(0, (unint64_t *)&qword_100084108);
    sub_10005E920();
    sub_10001A6C0();
    sub_10001A6D0(v17, v18, -1010);
    swift_willThrow();
    return;
  }
  if ((sub_10001A744() & 1) == 0) {
    goto LABEL_20;
  }
  uint64_t v14 = v46;
  id v15 = *(void **)(v3 + OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_config);
  [v15 setScale:(double)v46];
  [v15 setSize:(double)v8, (double)v11];
  uint64_t v16 = sub_100013D30(0, 0xF000000000000000, (char *)2);
  if (v2)
  {
LABEL_18:

    return;
  }
  uint64_t v19 = v16;
  sub_10001A688();
  id v20 = v19;
  uint64_t v21 = swift_bridgeObjectRetain();
  uint64_t v41 = sub_100010574(v21, 2);
  char v23 = v22;
  swift_bridgeObjectRelease();
  uint64_t v40 = v14;
  if (v23) {
    uint64_t v41 = (uint64_t)sub_10000C76C(v20);
  }
  uint64_t v24 = swift_bridgeObjectRetain();
  uint64_t v25 = sub_100010574(v24, 1);
  char v27 = v26;
  swift_bridgeObjectRelease();
  if (v27)
  {
    sub_10000C76C(v20);
    uint64_t v25 = v28;
  }
  sub_10000C804(v41, v25, v20);

  id v29 = [v20 video];
  if (!v29) {
    goto LABEL_37;
  }
  id v30 = v29;
  [v29 setVideoResolution:12];

  id v31 = [v20 video];
  if (!v31)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  if ((unsigned __int128)(v8 * (__int128)v40) >> 64 != (v8 * v40) >> 63)
  {
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  unsigned __int8 v32 = v31;
  [v31 setCustomWidth:];

  id v33 = [v20 video];
  if (v33)
  {
    if ((unsigned __int128)(v11 * (__int128)v40) >> 64 == (v11 * v40) >> 63)
    {
      double v34 = v33;
      [v33 setCustomHeight:];

      uint64_t v35 = v20;
      sub_10000D094(v35);

      uint64_t v36 = swift_bridgeObjectRetain();
      char v37 = sub_1000105E8(v36);
      swift_bridgeObjectRelease();
      if (v37)
      {
        id v38 = [*(id *)(v3 + OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_request) session];
        if (v38)
        {
          uint64_t v39 = v38;
          sub_1000115F4(v38);
        }
      }
      sub_100016590();

      goto LABEL_18;
    }
    goto LABEL_36;
  }
LABEL_39:
  __break(1u);
}

uint64_t sub_10001502C()
{
  uint64_t v0 = IDSCopyLocalDeviceUniqueID();
  if (v0)
  {
    uint64_t v1 = (void *)v0;
    sub_10005E920();
  }
  sub_1000150B0(28);
  uint64_t v2 = sub_10005E960();
  uint64_t v4 = v3;
  uint64_t result = swift_bridgeObjectRelease();
  qword_100088F68 = v2;
  unk_100088F70 = v4;
  return result;
}

uint64_t sub_1000150B0(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    sub_10005E9B0();
    uint64_t v1 = sub_10005EA70();
    swift_bridgeObjectRelease();
    return v1;
  }
  return result;
}

void SidecarDisplaySession.__allocating_init(logger:request:config:)()
{
  id v1 = objc_allocWithZone(v0);
  SidecarDisplaySession.init(logger:request:config:)();
}

void SidecarDisplaySession.init(logger:request:config:)()
{
  sub_10001A720();
  uint64_t v3 = v2;
  uint64_t v80 = v4;
  sub_10005E6D0();
  sub_100008DCC();
  uint64_t v83 = v6;
  uint64_t v84 = v5;
  __chkstk_darwin(v5);
  sub_10001A998();
  uint64_t v82 = v7;
  sub_10005E750();
  sub_100008DCC();
  uint64_t v86 = v8;
  __chkstk_darwin(v9);
  sub_10001A884();
  *(void *)&v0[OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v0[OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_peerSupportsHIDReportExtensions] = 0;
  id v10 = &v0[OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_safeInsets];
  *id v10 = 0u;
  v10[1] = 0u;
  uint64_t v11 = OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_queue;
  sub_100007F60(0, (unint64_t *)&qword_100084110);
  uint64_t v12 = v0;
  *(void *)&v0[v11] = sub_10005EC90();
  v12[OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_accepted] = 0;
  v12[OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_inited] = 0;
  *(void *)&v12[OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_negotiator] = 0;
  *(void *)&v12[OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_audioStreamNegotiator] = 0;
  id v13 = &v12[OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_videoConfig];
  *id v13 = 0u;
  v13[1] = 0u;
  *(void *)&v12[OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_clock] = 0;
  uint64_t v14 = &v12[OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_settings];
  if (qword_100083B38 != -1) {
    swift_once();
  }
  sub_10001A688();
  uint64_t v16 = (void *)qword_100088F58;
  uint64_t v15 = unk_100088F60;
  swift_retain();
  id v17 = v16;
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_10001AAC0();
  id v20 = sub_100008EA0(v18, v19, v17, v15);
  swift_bridgeObjectRelease();

  swift_release();
  void *v14 = v20;
  *(void *)&v12[OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_hidSidecarStream] = 0;
  *(void *)&v12[OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_videoSidecarStream] = 0;
  *(void *)&v12[OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_audioSidecarStream] = 0;
  *(void *)&v12[OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_videoStream] = 0;
  *(void *)&v12[OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_audioStream] = 0;
  *(void *)&v12[OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_videoClient] = 0;
  *(void *)&v12[OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_configurationTimer] = 0;
  unint64_t v79 = v3;
  [v3 copy];
  sub_10005EEC0();
  swift_unknownObjectRelease();
  sub_100007F60(0, (unint64_t *)&unk_1000841C0);
  swift_dynamicCast();
  uint64_t v21 = (void *)v88;
  uint64_t v22 = OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_config;
  *(void *)&v12[OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_config] = v88;
  char v23 = *(void (**)(void))(v86 + 16);
  sub_10001A9F0();
  v23();
  *(void *)&v12[OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_request] = v80;
  sub_10001A9F0();
  v23();
  id v24 = objc_allocWithZone((Class)type metadata accessor for SidecarDisplaySession.SessionVideoClientDelegate(0));
  id v25 = v21;
  id v26 = v80;
  *(void *)&v12[OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_videoClientDelegate] = sub_1000189AC(v1);
  id v27 = [v26 uuid];
  sub_10005E690();

  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v83 + 32))(&v12[OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_uuid], v82, v84);
  id v28 = [v26 device];
  uint64_t v78 = v25;
  unint64_t v81 = v26;
  uint64_t v77 = v22;
  if (!v28)
  {
    uint64_t v35 = sub_10005E720();
    os_log_type_t v36 = sub_10005EC50();
    if (os_log_type_enabled(v35, v36))
    {
      char v37 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v37 = 0;
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "=== Sidecar Started ===", v37, 2u);
      sub_10000FB20();
    }

    goto LABEL_17;
  }
  id v29 = v28;
  id v30 = [v28 description];
  if (!v30)
  {
    __break(1u);
    goto LABEL_30;
  }
  id v31 = v30;
  id v32 = [v29 model];
  if (!v32)
  {
LABEL_30:
    __break(1u);
    return;
  }
  id v33 = v32;
  char v85 = v32;
  if ((uint64_t)[v32 length] < 1)
  {
    sub_100007F60(0, (unint64_t *)&unk_100084230);
    id v34 = (id)sub_10005EDD0();
  }
  else
  {
    id v34 = v33;
  }
  id v38 = v34;
  id v39 = v31;
  id v40 = v38;
  id v41 = v39;
  long long v42 = sub_10005E720();
  long long v43 = (void *)sub_10005EC50();
  if (os_log_type_enabled(v42, (os_log_type_t)v43))
  {
    uint64_t v75 = v29;
    unint64_t v76 = v42;
    uint64_t v44 = swift_slowAlloc();
    uint64_t v45 = (void *)swift_slowAlloc();
    uint64_t v89 = swift_slowAlloc();
    *(_DWORD *)uint64_t v44 = 138544130;
    id v46 = v40;
    sub_10001A8C0();
    *uint64_t v45 = v40;

    *(_WORD *)(v44 + 12) = 2114;
    id v47 = v41;
    sub_10001A8C0();
    v45[1] = v31;

    *(_WORD *)(v44 + 22) = 2082;
    CFDataRef v48 = sub_10005C3A8();
    sub_10005E920();

    uint64_t v49 = sub_10001A8E4();
    uint64_t v88 = sub_10000F098(v49, v50, v51);
    sub_10005EE10();
    swift_bridgeObjectRelease();
    *(_WORD *)(v44 + 32) = 2082;
    if (qword_100083B40 != -1) {
      swift_once();
    }
    uint64_t v52 = qword_100088F68;
    unint64_t v53 = unk_100088F70;
    swift_bridgeObjectRetain();
    uint64_t v88 = sub_10000F098(v52, v53, &v89);
    sub_10005EE10();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v76, (os_log_type_t)v43, "=== Sidecar Started %{public}@ %{public}@ -> %{public}s IDS %{public}s ===", (uint8_t *)v44, 0x2Au);
    sub_100007D1C(&qword_100084930);
    swift_arrayDestroy();
    sub_10000FB20();
    swift_arrayDestroy();
    sub_10000FB20();
    sub_10000FB20();
  }
  else
  {
  }
LABEL_17:
  uint64_t v54 = qword_100088F48;
  uint64_t v55 = unk_100088F50;
  __int16 v56 = (void *)qword_100088F58;
  char v57 = *(void **)&v12[v77];
  swift_retain();
  id v58 = v56;
  swift_bridgeObjectRetain();
  id v59 = v57;
  LODWORD(v57) = sub_100015B60(v59, (SEL *)&selRef_lowLatency);

  if (v57 == 2)
  {
    char v60 = *(void **)&v12[v77];
    swift_retain();
    id v61 = v58;
    swift_bridgeObjectRetain();
    id v62 = v60;
    int v63 = sub_1000104C0(v54, v55, v61);
    swift_bridgeObjectRelease();

    swift_release();
    if (v63 == 2) {
      Class isa = 0;
    }
    else {
      Class isa = sub_10005EB70().super.super.isa;
    }
    [v62 setLowLatency:isa];
  }
  unint64_t v65 = *(void **)&v12[v77];
  sub_100015B60(v65, (SEL *)&selRef_enableTimeSync);
  sub_10001AAF8();
  if (!v67)
  {
    char v68 = v66;
    sub_10001A77C();
    sub_10000A454(v68 & 1, 6);
    swift_endAccess();
  }
  sub_100015B60(v65, (SEL *)&selRef_showTouchBar);
  sub_10001AAF8();
  if (!v67)
  {
    char v70 = v69;
    sub_10001A77C();
    sub_10000A454(v70 & 1, 3);
    swift_endAccess();
  }
  sub_100015B60(v65, (SEL *)&selRef_showSideBar);
  sub_10001AAF8();
  if (!v67)
  {
    char v72 = v71;
    sub_10001A77C();
    sub_10000A454(v72 & 1, 10);
    swift_endAccess();
  }

  v87.receiver = v12;
  v87.super_class = (Class)type metadata accessor for SidecarDisplaySession(0);
  id v73 = [super init];
  sub_10001A93C((uint64_t)v73, "setDelegate:");
  sub_100015BD0();

  swift_bridgeObjectRelease();
  swift_release();

  sub_10001A738();
  v74();
  sub_10001A6F0();
}

uint64_t sub_100015B60(void *a1, SEL *a2)
{
  id v2 = [a1 *a2];
  uint64_t result = 2;
  if (v2)
  {
    sub_10005EB80();

    return 2;
  }
  return result;
}

uint64_t sub_100015BB8(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_configurationTimer) = a1;
  return swift_unknownObjectRelease();
}

void sub_100015BD0()
{
  sub_10001A720();
  sub_10005E7A0();
  sub_100008DCC();
  uint64_t v37 = v2;
  uint64_t v38 = v1;
  __chkstk_darwin(v1);
  sub_10001A79C();
  id v39 = v3;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)v34 - v5;
  uint64_t v36 = sub_10005E800();
  sub_100008DCC();
  uint64_t v42 = v7;
  __chkstk_darwin(v8);
  sub_10001A79C();
  uint64_t v35 = v9;
  __chkstk_darwin(v10);
  id v41 = (char *)v34 - v11;
  sub_10005E7B0();
  sub_100008DCC();
  v34[2] = v13;
  v34[3] = v12;
  __chkstk_darwin(v12);
  sub_10005E7E0();
  sub_100008DCC();
  v34[0] = v15;
  v34[1] = v14;
  __chkstk_darwin(v14);
  uint64_t v16 = sub_10005ECE0();
  sub_100008DCC();
  uint64_t v18 = v17;
  __chkstk_darwin(v19);
  sub_10001A884();
  sub_100007F60(0, (unint64_t *)&unk_100084400);
  v43[0] = _swiftEmptyArrayStorage;
  sub_10001A4D0((unint64_t *)&unk_100084F50, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_source.TimerFlags);
  sub_100007D1C((uint64_t *)&unk_100084410);
  sub_100007E14((unint64_t *)&unk_100084F60, (uint64_t *)&unk_100084410);
  sub_10005EEE0();
  id v20 = (id *)(v40 + OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_queue);
  sub_10001A688();
  id v21 = *v20;
  sub_10005ECF0();

  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v0, v16);
  swift_getObjectType();
  uint64_t v22 = sub_10001A82C();
  swift_unknownObjectWeakInit();
  v43[4] = sub_10001A550;
  v43[5] = v22;
  v43[0] = _NSConcreteStackBlock;
  v43[1] = 1107296256;
  _OWORD v43[2] = sub_10000C5B0;
  v43[3] = &unk_1000771C0;
  char v23 = _Block_copy(v43);
  swift_retain();
  sub_10003E1A4();
  sub_10003E1A8();
  sub_10005ED20();
  _Block_release(v23);
  sub_10001A738();
  v24();
  sub_10001A738();
  v25();
  swift_release();
  swift_release();
  uint64_t v26 = v35;
  sub_10005E7F0();
  static DispatchTimeInterval.seconds(_:)((uint64_t)v6, 30.0);
  sub_10005E830();
  uint64_t v27 = v38;
  id v28 = *(void (**)(char *, uint64_t))(v37 + 8);
  v28(v6, v38);
  id v29 = *(void (**)(uint64_t, uint64_t))(v42 + 8);
  v42 += 8;
  uint64_t v30 = v26;
  uint64_t v31 = v36;
  v29(v30, v36);
  sub_10001610C((uint64_t)v6);
  sub_100016180(v39);
  sub_10005ED90();
  uint64_t v32 = sub_10001A8E4();
  ((void (*)(uint64_t))v28)(v32);
  v28(v6, v27);
  sub_10005ED60();
  uint64_t v33 = swift_unknownObjectRetain();
  sub_100015BB8(v33);
  swift_unknownObjectRelease();
  v29((uint64_t)v41, v31);
  sub_10001A6F0();
}

void sub_1000160B8()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_1000161F8();
  }
}

uint64_t sub_10001610C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for DispatchTimeInterval.never(_:);
  uint64_t v3 = sub_10005E7A0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

uint64_t sub_100016180@<X0>(void *a1@<X8>)
{
  *a1 = 0;
  uint64_t v2 = enum case for DispatchTimeInterval.nanoseconds(_:);
  uint64_t v3 = sub_10005E7A0();
  uint64_t v4 = *(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

void sub_1000161F8()
{
  sub_10005E6D0();
  sub_100008DCC();
  __chkstk_darwin(v0);
  sub_10001A708();
  sub_10001A688();
  uint64_t v1 = sub_10001A810();
  v2(v1);
  Class isa = sub_10005E680().super.isa;
  uint64_t v4 = sub_10001AA5C();
  v5(v4);
  sub_100019BFC(isa);

  uint64_t v6 = sub_10005E720();
  os_log_type_t v7 = sub_10005EC40();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)sub_10001A954();
    *(_DWORD *)uint64_t v8 = 134217984;
    sub_10005EE10();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "=== Session %lx Configuration Timeout ===", v8, 0xCu);
    sub_10000FB20();
  }

  sub_100007F60(0, (unint64_t *)&qword_100084108);
  sub_10005E920();
  sub_10001A6C0();
  id v11 = sub_10001A6D0(v9, v10, -201);
  sub_1000175DC((uint64_t)v11);
  sub_1000163AC();
}

uint64_t sub_1000163AC()
{
  if (*(void *)(v0 + OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_configurationTimer))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_10005ED40();
    sub_100015BB8(0);
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_100016434()
{
  uint64_t v1 = v0;
  sub_1000163AC();
  sub_100011538(0);
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_videoStream);
  if (v2)
  {
    id v3 = v2;
    sub_10000D79C();
    sub_100011520(0);
  }
  uint64_t v4 = *(void **)(v0 + OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_audioStream);
  if (v4)
  {
    id v5 = v4;
    sub_10002C270();
    sub_10001152C(0);
  }
  uint64_t v6 = v0 + OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_delegate;
  sub_10001A688();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  uint64_t v8 = Strong;
  uint64_t v9 = *(void *)(v6 + 8);
  if (*(void *)(v1 + OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_videoSidecarStream))
  {
    if (Strong)
    {
      swift_getObjectType();
      uint64_t v10 = *(void (**)(uint64_t))(v9 + 48);
      swift_unknownObjectRetain();
      uint64_t v11 = sub_10001A924();
      v10(v11);
      swift_unknownObjectRelease();
    }
    sub_1000114C4(0);
  }
  if (v8)
  {
    swift_getObjectType();
    uint64_t v12 = *(void (**)(uint64_t))(v9 + 72);
    swift_unknownObjectRetain();
    uint64_t v13 = sub_10001A924();
    v12(v13);
    swift_unknownObjectRelease_n();
  }
}

uint64_t sub_100016590()
{
  sub_1000163AC();
  uint64_t v1 = v0 + OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_delegate;
  sub_10001A688();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v3 = *(void *)(v1 + 8);
    Objectint Type = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v0, ObjectType, v3);
    return swift_unknownObjectRelease();
  }
  return result;
}

void SidecarDisplaySession.__deallocating_deinit()
{
  sub_10001A720();
  uint64_t v1 = v0;
  sub_10005E6D0();
  sub_100008DCC();
  __chkstk_darwin(v2);
  sub_10001A708();
  sub_10001A688();
  uint64_t v3 = sub_10001A810();
  v4(v3);
  Class isa = sub_10005E680().super.isa;
  sub_10001AA5C();
  sub_10001A8B4();
  v6();
  uint64_t v7 = sub_100019BFC(isa);

  id v8 = [*(id *)&v0[OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_request] device];
  if (v8)
  {
    uint64_t v9 = v8;
    id v10 = [v8 description];
    uint64_t v11 = sub_10005E920();
    unint64_t v13 = v12;

    id v14 = [v9 model];
    uint64_t v15 = sub_10005E920();
    unint64_t v17 = v16;

    uint64_t v18 = HIBYTE(v17) & 0xF;
    if ((v17 & 0x2000000000000000) == 0) {
      uint64_t v18 = v15 & 0xFFFFFFFFFFFFLL;
    }
    if (!v18)
    {
      swift_bridgeObjectRelease();
      unint64_t v17 = 0xE300000000000000;
      uint64_t v15 = 6512973;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_10005E720();
    os_log_type_t v20 = sub_10005EC50();
    if (!os_log_type_enabled(v19, v20))
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();

      goto LABEL_12;
    }
    uint64_t v21 = swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    *(_DWORD *)uint64_t v21 = 134218498;
    sub_10005EE10();
    *(_WORD *)(v21 + 12) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_10000F098(v15, v17, &v29);
    sub_10001A978(v22);
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v21 + 22) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v23 = sub_10000F098(v11, v13, &v29);
    sub_10001A978(v23);
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "=== Sidecar Session %lx Ended %{public}s %{public}s ===", (uint8_t *)v21, 0x20u);
    swift_arrayDestroy();
    sub_10000FB20();
    sub_10000FB20();
  }
  else
  {
    uint64_t v19 = sub_10005E720();
    os_log_type_t v24 = sub_10005EC50();
    uint64_t v9 = (void *)v24;
    if (os_log_type_enabled(v19, v24))
    {
      id v25 = (uint8_t *)sub_10001A954();
      *(_DWORD *)id v25 = 134217984;
      uint64_t v29 = v7;
      sub_10005EE10();
      _os_log_impl((void *)&_mh_execute_header, v19, (os_log_type_t)v9, "=== Sidecar Session %lx Ended ===", v25, 0xCu);
      sub_10000FB20();
    }
  }

LABEL_12:
  id v26 = *(id *)&v1[OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_hidSidecarStream];
  sub_10001AA80();

  id v27 = *(id *)&v1[OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_videoSidecarStream];
  sub_10001AA80();

  id v28 = (objc_class *)type metadata accessor for SidecarDisplaySession(0);
  v30.receiver = v1;
  v30.super_class = v28;
  [super dealloc];
  sub_10001A6F0();
}

void SidecarDisplaySession.observeValue(forKeyPath:of:change:context:)()
{
  sub_10001A720();
  uint64_t v2 = v0;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  id v10 = v9;
  uint64_t v12 = v11;
  sub_10005E7B0();
  sub_100008DCC();
  uint64_t v58 = v13;
  __chkstk_darwin(v14);
  sub_100008E04();
  uint64_t v15 = sub_10005E7E0();
  sub_100008DCC();
  __chkstk_darwin(v16);
  sub_10001A89C();
  if (!v4 || v4 != v2)
  {
    if (v10) {
      NSString v31 = sub_10005E8F0();
    }
    else {
      NSString v31 = 0;
    }
    sub_100019C6C(v8, (uint64_t)&v60);
    uint64_t v32 = v62;
    if (v62)
    {
      uint64_t v33 = sub_10000BD3C(&v60, (uint64_t)v62);
      uint64_t v34 = *(v32 - 1);
      __chkstk_darwin(v33);
      sub_10001A89C();
      (*(void (**)(uint64_t))(v34 + 16))(v1);
      uint64_t v35 = sub_10005F130();
      (*(void (**)(uint64_t, void *))(v34 + 8))(v1, v32);
      sub_10000B724((uint64_t)&v60);
      if (v6)
      {
LABEL_22:
        type metadata accessor for NSKeyValueChangeKey(0);
        sub_10001A4D0(&qword_100083C68, type metadata accessor for NSKeyValueChangeKey);
        v36.super.Class isa = sub_10005E870().super.isa;
LABEL_25:
        uint64_t v37 = (objc_class *)type metadata accessor for SidecarDisplaySession(0);
        v66.receiver = v2;
        v66.super_class = v37;
        [super observeValueForKeyPath:v31 ofObject:v35 change:v36.super.isa context:v4];

        swift_unknownObjectRelease();
        goto LABEL_44;
      }
    }
    else
    {
      uint64_t v35 = 0;
      if (v6) {
        goto LABEL_22;
      }
    }
    v36.super.Class isa = 0;
    goto LABEL_25;
  }
  uint64_t v18 = (long long *)0xE000000000000000;
  if (!v10)
  {
    uint64_t v12 = 0;
    uint64_t v54 = (void *)0xE000000000000000;
    goto LABEL_46;
  }
  uint64_t v19 = v17;
  BOOL v20 = v12 == 0x64656873696E6966 && v10 == (void *)0xE800000000000000;
  if (!v20 && (sub_10005F140() & 1) == 0)
  {
    BOOL v38 = v12 == 0x737574617473 && v10 == (void *)0xE600000000000000;
    if (!v38 && (sub_10005F140() & 1) == 0)
    {
      while (1)
      {
        uint64_t v54 = v10;
LABEL_46:
        *(void *)&long long v60 = 0;
        *((void *)&v60 + 1) = v18;
        uint64_t v18 = &v60;
        sub_10005EF40(22);
        swift_bridgeObjectRelease();
        *(void *)&long long v60 = 0xD000000000000014;
        *((void *)&v60 + 1) = 0x8000000100061630;
        swift_bridgeObjectRetain();
        v67._countAndFlagsBits = v12;
        v67._object = v54;
        sub_10005E9C0(v67);
        swift_bridgeObjectRelease();
        sub_10005F050();
        __break(1u);
      }
    }
    sub_100019C6C(v8, (uint64_t)&v60);
    if (!v62) {
      goto LABEL_36;
    }
    sub_100007F60(0, (unint64_t *)&unk_100084240);
    if ((swift_dynamicCast() & 1) == 0) {
      goto LABEL_44;
    }
    id v39 = v65;
    unsigned int v40 = [v65 status];
    if ((v40 & 0x4000000) != 0)
    {
      id v41 = *(void **)&v2[OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_request];
      sub_100007F60(0, (unint64_t *)&qword_100084108);
      sub_10005E920();
      sub_10001A6C0();
      uint64_t v44 = -456;
    }
    else
    {
      if ((v40 & 0x2000000) == 0)
      {
LABEL_40:

        goto LABEL_44;
      }
      id v41 = *(void **)&v2[OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_request];
      sub_100007F60(0, (unint64_t *)&qword_100084108);
      sub_10005E920();
      sub_10001A6C0();
      uint64_t v44 = -455;
    }
    id v45 = sub_10001A6D0(v42, v43, v44);
    id v46 = (void *)sub_10005E520();

    [v41 setError:v46];
    goto LABEL_40;
  }
  sub_100019C6C(v8, (uint64_t)&v60);
  if (!v62)
  {
LABEL_36:
    sub_10001A2E0((uint64_t)&v60, (uint64_t *)&unk_100084130);
    goto LABEL_44;
  }
  sub_100007F60(0, (unint64_t *)&unk_100084250);
  if (swift_dynamicCast())
  {
    id v21 = v65;
    if ([v65 isFinished])
    {
      id v57 = v21;
      if (([v21 isCancelled] & 1) == 0)
      {
        id v22 = [v21 error];
        if (v22)
        {
          uint64_t v23 = v22;
          __chkstk_darwin(v22);
          uint64_t v55 = v24;
          sub_10002DB24((void (*)(void))sub_10000FA6C);
          id v25 = (void *)sub_10005E520();
          id v26 = [v25 userInfo:v55];
          __int16 v56 = (char *)&type metadata for Any + 8;
          uint64_t v27 = sub_10005E880();

          sub_10005E920();
          sub_1000106CC(v27, &v60);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v62)
          {
            id v28 = v25;
            sub_100007F60(0, (unint64_t *)&qword_100084108);
            uint64_t v29 = swift_dynamicCast();
            if (v29)
            {
              __int16 v56 = (char *)&v55;
              id v30 = v65;
              __chkstk_darwin(v29);
              sub_10002E180((uint64_t (*)(void))sub_10000E1F0, 0, (void (*)(void))sub_10000FAE8);
            }
            else
            {
            }
          }
          else
          {

            sub_10001A2E0((uint64_t)&v60, (uint64_t *)&unk_100084130);
          }
        }
      }
      id v47 = (void **)&v2[OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_queue];
      sub_10001A688();
      CFDataRef v48 = *v47;
      uint64_t v49 = sub_10001A82C();
      *(void *)(v49 + 16) = v2;
      int v63 = sub_100019CD4;
      uint64_t v64 = v49;
      *(void *)&long long v60 = _NSConcreteStackBlock;
      *((void *)&v60 + 1) = 1107296256;
      id v61 = sub_10000C5B0;
      id v62 = &unk_100076E58;
      unint64_t v50 = _Block_copy(&v60);
      id v51 = v48;
      uint64_t v52 = v2;
      sub_10005E7D0();
      id v59 = _swiftEmptyArrayStorage;
      sub_10001A4D0((unint64_t *)&qword_1000848D0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_100007D1C((uint64_t *)&unk_100083FD0);
      sub_100007E14((unint64_t *)&qword_1000848E0, (uint64_t *)&unk_100083FD0);
      sub_10005EEE0();
      sub_10005ECB0();
      _Block_release(v50);

      sub_10001A738();
      v53();
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v1, v15);
      swift_release();
    }
    else
    {
    }
  }
LABEL_44:
  sub_10001A6F0();
}

void sub_1000175DC(uint64_t a1)
{
  uint64_t v3 = (uint64_t)[*(id *)(v1 + OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_request) isFinished];
  if ((v3 & 1) == 0)
  {
    if (a1)
    {
      __chkstk_darwin(v3);
      swift_errorRetain();
      sub_10002E180(variable initialization expression of SidecarDisplaySession.delegate, 0, (void (*)(void))sub_10000FAE8);
      swift_errorRelease();
      uint64_t v3 = sub_10005E520();
      uint64_t v4 = (void *)v3;
    }
    else
    {
      uint64_t v4 = 0;
    }
    sub_10001A93C(v3, "setError:");
  }
}

Swift::Void __swiftcall SidecarDisplaySession.accept()()
{
  sub_10001A720();
  uint64_t v3 = sub_10005E7B0();
  sub_100008DCC();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  uint64_t v16 = sub_10001A7E8();
  sub_100008DCC();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  sub_100008E04();
  id v10 = (void **)&v0[OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_queue];
  sub_10001A688();
  uint64_t v11 = *v10;
  uint64_t v12 = sub_10001A82C();
  *(void *)(v12 + 16) = v0;
  v17[4] = sub_100019D10;
  v17[5] = v12;
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 1107296256;
  v17[2] = sub_10000C5B0;
  v17[3] = &unk_100076EA8;
  uint64_t v13 = _Block_copy(v17);
  id v14 = v11;
  uint64_t v15 = v0;
  sub_10005E7D0();
  sub_10001A4D0((unint64_t *)&qword_1000848D0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100007D1C((uint64_t *)&unk_100083FD0);
  sub_100007E14((unint64_t *)&qword_1000848E0, (uint64_t *)&unk_100083FD0);
  sub_10005EEE0();
  sub_10005ECB0();
  _Block_release(v13);

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v1, v3);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v2, v16);
  swift_release();
  sub_10001A6F0();
}

void sub_100017908(uint64_t a1)
{
  *(unsigned char *)(a1 + OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_accepted) = 1;
  sub_100017FF4();
}

void sub_10001793C()
{
  sub_10001A720();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  sub_10005E7B0();
  sub_100008DCC();
  __chkstk_darwin(v8);
  uint64_t v19 = sub_10001A7E8();
  sub_100008DCC();
  uint64_t v10 = v9;
  __chkstk_darwin(v11);
  sub_100008E04();
  uint64_t v12 = (void **)&v0[OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_queue];
  sub_10001A688();
  uint64_t v13 = *v12;
  id v14 = (void *)swift_allocObject();
  v14[2] = v7;
  v14[3] = v5;
  v14[4] = v3;
  v14[5] = v0;
  v20[4] = sub_10001A5A0;
  v20[5] = v14;
  v20[0] = _NSConcreteStackBlock;
  v20[1] = 1107296256;
  v20[2] = sub_10000C5B0;
  v20[3] = &unk_100077210;
  uint64_t v15 = _Block_copy(v20);
  id v16 = v13;
  swift_errorRetain();
  swift_retain();
  uint64_t v17 = v0;
  sub_10005E7D0();
  sub_10001A4D0((unint64_t *)&qword_1000848D0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100007D1C((uint64_t *)&unk_100083FD0);
  sub_100007E14((unint64_t *)&qword_1000848E0, (uint64_t *)&unk_100083FD0);
  sub_10005EEE0();
  sub_10005ECB0();
  _Block_release(v15);

  sub_10001A738();
  v18();
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v1, v19);
  swift_release();
  sub_10001A6F0();
}

uint64_t type metadata accessor for SidecarDisplaySession.SessionVideoClientDelegate(uint64_t a1)
{
  return sub_100018AB8(a1, (uint64_t *)&unk_100084390);
}

uint64_t sub_100017BB8(uint64_t a1, uint64_t (*a2)(void))
{
  if (!a1) {
    return a2();
  }
  swift_errorRetain();
  swift_willThrow();
  swift_errorRetain();
  sub_1000175DC(a1);
  swift_errorRelease();

  return swift_errorRelease();
}

uint64_t sub_100017C5C@<X0>(uint64_t a1@<X8>)
{
  char v3 = sub_100015B60(*(void **)(v1 + OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_config), (SEL *)&selRef_lowLatency);
  if (v3 != 2 && (v3 & 1) == 0)
  {
    uint64_t result = SidecarGetProcessUniqueID();
    long long v6 = xmmword_1000643C0;
  }
  else
  {
    sub_100007F60(0, &qword_1000843C0);
    uint64_t result = sub_100017D1C();
    long long v6 = xmmword_1000643B0;
  }
  *(_OWORD *)a1 = v6;
  strcpy((char *)(a1 + 16), "AVCVideoStream");
  *(unsigned char *)(a1 + 31) = -18;
  *(void *)(a1 + 32) = result;
  return result;
}

uint64_t sub_100017D1C()
{
  uint64_t v0 = sub_10005E750();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  char v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = [self getDaemonProcessInfo];
  uint64_t v5 = sub_10005E880();

  uint64_t v12 = sub_10005E920();
  uint64_t v13 = v6;
  sub_10005EF10();
  sub_100010668((uint64_t)v14, v5, &v15);
  sub_10000BD80((uint64_t)v14);
  if (v16)
  {
    sub_100007D1C(&qword_1000843C8);
    if (swift_dynamicCast())
    {
      uint64_t v7 = v12;
      uint64_t v8 = sub_10005E730();
      __chkstk_darwin(v8);
      *(&v11 - 2) = v7;
      sub_10002E180((uint64_t (*)(void))sub_100019788, 0, (void (*)(void))sub_10000FAE8);
      (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
      swift_errorRelease();
    }
  }
  else
  {
    sub_10001A2E0((uint64_t)&v15, (uint64_t *)&unk_100084130);
  }
  *(void *)&long long v15 = sub_10005E920();
  *((void *)&v15 + 1) = v9;
  sub_10005EF10();
  sub_100010668((uint64_t)v14, v5, &v15);
  swift_bridgeObjectRelease();
  sub_10000BD80((uint64_t)v14);
  if (v16)
  {
    if (swift_dynamicCast()) {
      return v12;
    }
  }
  else
  {
    sub_10001A2E0((uint64_t)&v15, (uint64_t *)&unk_100084130);
  }
  return 0;
}

void sub_100017FF4()
{
  if (v0[OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_inited] == 1
    && v0[OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_accepted] == 1)
  {
    sub_100017C5C((uint64_t)&v13);
    uint64_t v1 = v13;
    uint64_t v2 = v14;
    char v3 = v17;
    id v4 = *(void **)&v0[OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_request];
    NSString v5 = sub_10005E8F0();
    uint64_t v6 = sub_10001A82C();
    *(void *)(v6 + 16) = v0;
    uint64_t v17 = sub_100019F94;
    uint64_t v18 = v6;
    uint64_t v13 = _NSConcreteStackBlock;
    uint64_t v14 = 1107296256;
    long long v15 = sub_1000184A0;
    uint64_t v16 = &unk_100076F40;
    uint64_t v7 = _Block_copy(&v13);
    uint64_t v8 = v0;
    swift_release();
    [v4 openStreamForType:v1 flags:v2 identifier:v5 processUniqueID:v3 completion:v7];
    _Block_release(v7);
    swift_bridgeObjectRelease();

    NSString v9 = sub_10005E8F0();
    uint64_t v10 = sub_10001A82C();
    *(void *)(v10 + 16) = v8;
    uint64_t v17 = sub_100019FCC;
    uint64_t v18 = v10;
    uint64_t v13 = _NSConcreteStackBlock;
    uint64_t v14 = 1107296256;
    long long v15 = sub_1000184A0;
    uint64_t v16 = &unk_100076F90;
    uint64_t v11 = _Block_copy(&v13);
    uint64_t v12 = v8;
    swift_release();
    [v4 openStreamForType:2 identifier:v9 completion:v11];
    _Block_release(v11);
  }
}

void sub_100018210(void *a1, uint64_t a2, char *a3)
{
  if (a1)
  {
    id v5 = a1;
    sub_1000114C4(a1);
    uint64_t v6 = &a3[OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_delegate];
    swift_beginAccess();
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v7 = *((void *)v6 + 1);
      Objectint Type = swift_getObjectType();
      (*(void (**)(char *, id, uint64_t, uint64_t))(v7 + 32))(a3, v5, ObjectType, v7);
      swift_unknownObjectRelease();
    }
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = a3;
    aBlock[4] = sub_10001A0F0;
    aBlock[5] = v9;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10001E140;
    aBlock[3] = &unk_1000770A8;
    uint64_t v10 = _Block_copy(aBlock);
    uint64_t v11 = a3;
    swift_release();
    [v5 activateWithCompletion:v10];
    _Block_release(v10);
  }
  else
  {
    sub_100007F60(0, (unint64_t *)&qword_100084108);
    uint64_t v13 = sub_10005E920();
    uint64_t v15 = v14;
    swift_errorRetain();
    sub_100019858(v13, v15, -101, 0xD000000000000048, 0x8000000100061990, a2);
    swift_willThrow();
  }
}

uint64_t sub_100018418(uint64_t a1, void *a2)
{
  *(void *)(swift_allocObject() + 16) = a2;
  id v3 = a2;
  sub_10001793C();

  return swift_release();
}

void sub_1000184A0(uint64_t a1, void *a2, void *a3)
{
  id v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t sub_10001852C(void *a1, uint64_t a2, void *a3)
{
  id v6 = (void *)swift_allocObject();
  _OWORD v6[2] = a1;
  v6[3] = a2;
  v6[4] = a3;
  id v7 = a1;
  swift_errorRetain();
  id v8 = a3;
  sub_10001793C();

  return swift_release();
}

void sub_1000185BC(void *a1, uint64_t a2, char *a3)
{
  if (a1)
  {
    id v5 = &a3[OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_delegate];
    swift_beginAccess();
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v6 = *((void *)v5 + 1);
      Objectint Type = swift_getObjectType();
      (*(void (**)(char *, void *, uint64_t, uint64_t))(v6 + 56))(a3, a1, ObjectType, v6);
      swift_unknownObjectRelease();
    }
    else
    {
      id v12 = a1;
    }
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = a3;
    *(void *)(v13 + 24) = a1;
    aBlock[4] = sub_10001A060;
    aBlock[5] = v13;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10001E140;
    aBlock[3] = &unk_100077008;
    uint64_t v14 = _Block_copy(aBlock);
    id v15 = a1;
    uint64_t v16 = a3;
    swift_release();
    [v15 activateWithCompletion:v14];
    _Block_release(v14);
  }
  else
  {
    sub_100007F60(0, (unint64_t *)&qword_100084108);
    uint64_t v9 = sub_10005E920();
    uint64_t v11 = v10;
    swift_errorRetain();
    sub_100019858(v9, v11, -101, 0xD000000000000043, 0x8000000100061920, a2);
    swift_willThrow();
  }
}

uint64_t sub_1000187CC(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a2;
  *(void *)(v5 + 24) = a3;
  id v6 = a2;
  id v7 = a3;
  sub_10001793C();

  return swift_release();
}

uint64_t sub_100018858(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_delegate;
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v6 = *(void *)(v4 + 8);
    Objectint Type = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 64))(a1, a2, ObjectType, v6);
    return swift_unknownObjectRelease();
  }
  return result;
}

id SidecarDisplaySession.close(error:)(uint64_t a1)
{
  if (a1)
  {
    uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_request);
    swift_errorRetain();
    id v3 = (void *)sub_10005E520();
    [v2 setError:v3];

    return (id)swift_errorRelease();
  }
  else
  {
    uint64_t v5 = *(void **)(v1 + OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_request);
    return [v5 cancel];
  }
}

id sub_1000189AC(uint64_t a1)
{
  swift_unknownObjectWeakInit();
  id v3 = &v1[OBJC_IVAR____TtCC17ContinuityDisplay21SidecarDisplaySessionP33_72778A0D8780EB3FED7F582200B6777426SessionVideoClientDelegate_logger];
  uint64_t v4 = sub_10005E750();
  uint64_t v5 = *(void *)(v4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v3, a1, v4);
  v8.receiver = v1;
  v8.super_class = (Class)type metadata accessor for SidecarDisplaySession.SessionVideoClientDelegate(0);
  [super init];
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  return v6;
}

uint64_t type metadata accessor for SidecarDisplaySession(uint64_t a1)
{
  return sub_100018AB8(a1, (uint64_t *)&unk_1000842E8);
}

uint64_t sub_100018AB8(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100018AEC(void *a1)
{
  id v1 = a1;
  uint64_t v2 = sub_10005E720();
  os_log_type_t v3 = sub_10005EC50();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 134349056;
    [v1 streamToken];
    sub_10005EE10();

    _os_log_impl((void *)&_mh_execute_header, v2, v3, "AVC[%{public}ld] First Frame", v4, 0xCu);
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v6 = (void *)Strong;
    uint64_t v7 = Strong + OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_delegate;
    swift_beginAccess();
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v8 = *(void *)(v7 + 8);
      Objectint Type = swift_getObjectType();
      (*(void (**)(void *, uint64_t, uint64_t))(v8 + 88))(v6, ObjectType, v8);

      swift_unknownObjectRelease();
    }
    else
    {
    }
  }
}

void sub_100018CE4(void *a1, uint64_t a2)
{
}

void sub_100018D60(void *a1, uint64_t a2)
{
}

void sub_100018DDC(void *a1, uint64_t a2)
{
}

void sub_100018E58(void *a1, uint64_t a2)
{
}

void sub_100018E64(void *a1, uint64_t a2, const char *a3)
{
  id v4 = a1;
  osos_log_t log = sub_10005E720();
  os_log_type_t v5 = sub_10005EC50();
  if (os_log_type_enabled(oslog, v5))
  {
    uint64_t v6 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 134349312;
    [v4 streamToken];
    sub_10005EE10();

    *(_WORD *)(v6 + 12) = 1024;
    sub_10005EE10();
    _os_log_impl((void *)&_mh_execute_header, oslog, v5, a3, (uint8_t *)v6, 0x12u);
    sub_10000FB20();
  }
  else
  {
  }
}

void sub_10001901C(void *a1)
{
  id v1 = a1;
  osos_log_t log = sub_10005E720();
  os_log_type_t v2 = sub_10005EC50();
  if (os_log_type_enabled(oslog, v2))
  {
    os_log_type_t v3 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)os_log_type_t v3 = 134349056;
    [v1 streamToken];
    sub_10005EE10();

    _os_log_impl((void *)&_mh_execute_header, oslog, v2, "AVC[%{public}ld] Last Frame", v3, 0xCu);
    swift_slowDealloc();
  }
  else
  {
  }
}

void sub_1000191B0(void *a1)
{
  id v1 = a1;
  os_log_type_t v2 = sub_10005E720();
  os_log_type_t v3 = sub_10005EC40();
  if (os_log_type_enabled(v2, v3))
  {
    id v4 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)id v4 = 134349056;
    [v1 streamToken];
    sub_10005EE10();

    _os_log_impl((void *)&_mh_execute_header, v2, v3, "AVC[%{public}ld] Terminated", v4, 0xCu);
    swift_slowDealloc();
  }
  else
  {
  }
  sub_100007F60(0, (unint64_t *)&qword_100084108);
  uint64_t v5 = sub_10005E920();
  id v7 = sub_100019858(v5, v6, -401, 0, 0, 0);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v9 = (void *)Strong;
    uint64_t v10 = Strong + OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_delegate;
    swift_beginAccess();
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v11 = *(void *)(v10 + 8);
      Objectint Type = swift_getObjectType();
      (*(void (**)(void *, id, uint64_t, uint64_t))(v11 + 104))(v9, v7, ObjectType, v11);

      swift_unknownObjectRelease();
      return;
    }
  }
}

void sub_100019414(void *a1, uint64_t a2)
{
}

void sub_10001949C(void *a1, uint64_t a2)
{
}

void sub_1000194A8(void *a1, uint64_t a2, const char *a3)
{
  id v4 = a1;
  osos_log_t log = sub_10005E720();
  os_log_type_t v5 = sub_10005EC50();
  if (os_log_type_enabled(oslog, v5))
  {
    uint64_t v6 = (uint8_t *)sub_10001A954();
    *(_DWORD *)uint64_t v6 = 134349056;
    [v4 streamToken];
    sub_10005EE10();

    _os_log_impl((void *)&_mh_execute_header, oslog, v5, a3, v6, 0xCu);
    sub_10000FB20();
  }
  else
  {
  }
}

void sub_10001963C()
{
}

id sub_100019690()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SidecarDisplaySession.SessionVideoClientDelegate(0);
  return [super dealloc];
}

void SidecarDisplaySession.init()()
{
}

unint64_t sub_100019788()
{
  return 0xD000000000000014;
}

uint64_t sub_1000197A4(uint64_t a1)
{
  if ((unint64_t)(a1 + 1) >= 6) {
    return 6;
  }
  else {
    return (0x40302010005uLL >> (8 * (a1 + 1)));
  }
}

uint64_t sub_1000197CC()
{
  uint64_t result = sub_10002AB9C(3422513, 0xE300000000000000);
  qword_1000841A0 = result;
  return result;
}

uint64_t sub_1000197F8()
{
  uint64_t result = sub_10002AB9C(0x3030312E353133, 0xE700000000000000);
  qword_1000841A8 = result;
  return result;
}

uint64_t sub_100019830(uint64_t result)
{
  *v1 &= result;
  return result;
}

BOOL sub_100019840(uint64_t a1, uint64_t a2)
{
  return (a2 & ~a1) == 0;
}

BOOL sub_10001984C(uint64_t a1, uint64_t a2)
{
  return (a1 & ~a2) == 0;
}

id sub_100019858(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v24 = sub_10005E890();
  if (a5)
  {
    uint64_t v10 = sub_10005E920();
    uint64_t v23 = &type metadata for String;
    v22[0] = a4;
    v22[1] = a5;
    sub_100009920((uint64_t)v22, v10, v11);
  }
  if (a6)
  {
    uint64_t v12 = sub_10005E920();
    uint64_t v14 = v13;
    swift_getErrorValue();
    uint64_t v23 = v21;
    id v15 = sub_10001A408(v22);
    (*(void (**)(uint64_t *))(*((void *)v21 - 1) + 16))(v15);
    sub_100009920((uint64_t)v22, v12, v14);
  }
  id v16 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  NSString v17 = sub_10005E8F0();
  swift_bridgeObjectRelease();
  Class isa = sub_10005E870().super.isa;
  swift_bridgeObjectRelease();
  id v19 = [v16 initWithDomain:v17 code:a3 userInfo:isa];

  swift_errorRelease();
  return v19;
}

id sub_100019A28(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 == 15)
  {
    Class isa = 0;
  }
  else
  {
    Class isa = sub_10005E5E0().super.isa;
    sub_10001A2A4(a1, a2);
  }
  NSString v6 = sub_10005E8F0();
  swift_bridgeObjectRelease();
  id v7 = [v2 initWithData:isa type:v6];

  return v7;
}

id sub_100019ACC(uint64_t a1, unint64_t a2, uint64_t a3)
{
  id v4 = v3;
  v8.super.Class isa = sub_10005E5E0().super.isa;
  if (a3)
  {
    v9.super.Class isa = sub_10005E870().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v9.super.Class isa = 0;
  }
  id v14 = 0;
  id v10 = [v4 initWithOffer:v8.super.isa options:v9.super.isa error:&v14];

  if (v10)
  {
    id v11 = v14;
  }
  else
  {
    id v12 = v14;
    sub_10005E530();

    swift_willThrow();
  }
  sub_100008D0C(a1, a2);
  return v10;
}

uint64_t sub_100019BFC(void *a1)
{
  id v1 = a1;
  v4[0] = 0;
  v4[1] = 0;
  [v1 getUUIDBytes:v4];
  unsigned int v2 = v4[0];

  return bswap32(v2);
}

uint64_t sub_100019C6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007D1C((uint64_t *)&unk_100084130);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_100019CD4()
{
}

uint64_t sub_100019CF8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100019D08()
{
  return swift_release();
}

void sub_100019D10()
{
  sub_100017908(*(void *)(v0 + 16));
}

uint64_t sub_100019D18@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = SidecarDisplaySession.peerSupportsHIDReportExtensions.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_100019D48(char *a1)
{
  return sub_100010B00(*a1);
}

uint64_t sub_100019D70@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = SidecarDisplaySession.clock.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100019DA0()
{
  return type metadata accessor for SidecarDisplaySession(0);
}

uint64_t sub_100019DA8()
{
  uint64_t result = sub_10005E750();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_10005E6D0();
    if (v2 <= 0x3F) {
      return swift_updateClassMetadata2();
    }
  }
  return result;
}

uint64_t sub_100019EE0()
{
  return type metadata accessor for SidecarDisplaySession.SessionVideoClientDelegate(0);
}

uint64_t sub_100019EE8()
{
  uint64_t result = sub_10005E750();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SidecarDisplaySession.Config()
{
  return &type metadata for SidecarDisplaySession.Config;
}

uint64_t sub_100019F94(void *a1, uint64_t a2)
{
  return sub_10001852C(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_100019FCC(void *a1, uint64_t a2)
{
  return sub_10001852C(a1, a2, *(void **)(v2 + 16));
}

void sub_10001A008()
{
  sub_1000185BC(*(void **)(v0 + 16), *(void *)(v0 + 24), *(char **)(v0 + 32));
}

uint64_t sub_10001A028()
{
  uint64_t v1 = sub_10001A914();

  return _swift_deallocObject(v1, v2, v3);
}

uint64_t sub_10001A060(uint64_t a1)
{
  return sub_1000187CC(a1, *(void **)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_10001A068()
{
  return sub_100018858(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_10001A088()
{
  swift_errorRelease();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_10001A0D0()
{
  sub_100018210(*(void **)(v0 + 16), *(void *)(v0 + 24), *(char **)(v0 + 32));
}

uint64_t sub_10001A0F0(uint64_t a1)
{
  return sub_100018418(a1, *(void **)(v1 + 16));
}

uint64_t sub_10001A0F8()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_10001A130()
{
  sub_1000138B8(*(void *)(v0 + 16));
}

uint64_t sub_10001A14C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_100007D1C(a3);
  uint64_t v4 = sub_10001AAC0();
  v5(v4);
  return a2;
}

void sub_10001A1AC(uint64_t a1, unint64_t a2, void *a3, SEL *a4)
{
  Class isa = sub_10005E5E0().super.isa;
  sub_100008D0C(a1, a2);
  [a3 *a4];
}

uint64_t sub_10001A220(void *a1)
{
  id v2 = [a1 streamKey];

  if (!v2) {
    return 0;
  }
  uint64_t v3 = sub_10005E600();

  return v3;
}

uint64_t sub_10001A290(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_100008D64(a1, a2);
  }
  return a1;
}

uint64_t sub_10001A2A4(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_100008D0C(a1, a2);
  }
  return a1;
}

uint64_t sub_10001A2B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t sub_10001A2E0(uint64_t a1, uint64_t *a2)
{
  sub_100007D1C(a2);
  sub_10001A7D4();
  sub_10001A738();
  v3();
  return a1;
}

uint64_t sub_10001A32C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

unint64_t sub_10001A354()
{
  unint64_t result = qword_1000843E8;
  if (!qword_1000843E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000843E8);
  }
  return result;
}

uint64_t sub_10001A3A0(uint64_t a1, uint64_t a2)
{
  return sub_1000116C4(a1, a2, *(char **)(v2 + 16));
}

uint64_t sub_10001A3A8()
{
  uint64_t v1 = sub_10001A914();

  return _swift_deallocObject(v1, v2, v3);
}

uint64_t sub_10001A3D8()
{
  return sub_100011A40(*(void *)(v0 + 16));
}

uint64_t sub_10001A3E0(uint64_t a1)
{
  return a1;
}

uint64_t *sub_10001A408(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_10001A46C(void *a1)
{
  id v1 = [a1 data];
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = sub_10005E600();

  return v3;
}

uint64_t sub_10001A4D0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10001A518()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_10001A550()
{
}

uint64_t sub_10001A558()
{
  swift_errorRelease();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10001A5A0()
{
  return sub_100017BB8(*(void *)(v0 + 16), *(uint64_t (**)(void))(v0 + 24));
}

uint64_t sub_10001A614()
{
  return swift_beginAccess();
}

uint64_t sub_10001A638()
{
  return swift_beginAccess();
}

uint64_t sub_10001A65C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(v2 + a2) = a1;
  return _objc_release_x1();
}

id sub_10001A668(uint64_t a1)
{
  uint64_t v4 = *(const char **)(v2 + 176);
  return [v1 v4:a1];
}

uint64_t sub_10001A688()
{
  return swift_beginAccess();
}

uint64_t sub_10001A6A0()
{
  return swift_dynamicCast();
}

id sub_10001A6D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100019858(a1, a2, a3, 0, 0, 0);
}

uint64_t sub_10001A744()
{
  return swift_dynamicCast();
}

uint64_t sub_10001A764(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_10001A14C(v3 - 160, v3 - 128, a3);
}

uint64_t sub_10001A77C()
{
  return swift_beginAccess();
}

uint64_t sub_10001A7B0()
{
  return swift_unknownObjectRelease();
}

double sub_10001A7C8()
{
  double result = 0.0;
  *(_OWORD *)(v0 - 160) = 0u;
  *(_OWORD *)(v0 - 144) = 0u;
  return result;
}

uint64_t sub_10001A7E8()
{
  return sub_10005E7E0();
}

uint64_t sub_10001A810()
{
  return v0;
}

uint64_t sub_10001A82C()
{
  return swift_allocObject();
}

uint64_t sub_10001A844()
{
  return sub_10005F140();
}

uint64_t sub_10001A86C()
{
  return sub_10005EEC0();
}

uint64_t sub_10001A8C0()
{
  return sub_10005EE10();
}

uint64_t sub_10001A8E4()
{
  return v0;
}

uint64_t sub_10001A8F0()
{
  return swift_beginAccess();
}

uint64_t sub_10001A914()
{
  return v0;
}

uint64_t sub_10001A924()
{
  return v0;
}

id sub_10001A93C(uint64_t a1, const char *a2)
{
  return [v2 a2:v3];
}

uint64_t sub_10001A954()
{
  return swift_slowAlloc();
}

uint64_t sub_10001A970(uint64_t a1, uint64_t a2)
{
  return a2 & a1;
}

uint64_t sub_10001A978(uint64_t a1)
{
  *(void *)(v1 - 136) = a1;
  return sub_10005EE10();
}

id sub_10001A9B8(uint64_t a1)
{
  uint64_t v4 = *(const char **)(v2 + 176);
  return [v1 v4:a1];
}

uint64_t sub_10001A9D8()
{
  return sub_100008D0C(v0, v1);
}

id sub_10001AA04(uint64_t a1)
{
  uint64_t v4 = *(const char **)(v2 + 176);
  return [v1 v4:a1];
}

uint64_t sub_10001AA24()
{
  return sub_10005EC10();
}

uint64_t sub_10001AA44()
{
  return sub_10001A2A4(v1, v0);
}

uint64_t sub_10001AA5C()
{
  return v0;
}

id sub_10001AA68(uint64_t a1, const char *a2)
{
  return [v2 a2:v3];
}

void sub_10001AA80()
{
  sub_10001134C(v0, 0);
}

NSString sub_10001AAA0()
{
  return sub_10005E8F0();
}

uint64_t sub_10001AAC0()
{
  return v0;
}

uint64_t sub_10001AAE0()
{
  return sub_100008D0C(v1, v0);
}

void *sub_10001AB04(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  double result = _swiftEmptyArrayStorage;
  if (v3)
  {
    id v14 = _swiftEmptyArrayStorage;
    sub_10005EFC0();
    for (uint64_t i = a1 + 32; ; i += 40)
    {
      sub_10001D740(i, (uint64_t)v13);
      swift_beginAccess();
      uint64_t v7 = *a2;
      uint64_t v8 = *(void *)(*a2 + 16);
      sub_10001D7B4((uint64_t)v13, (void (*)(void, void, void, void, void))sub_10001D79C);
      sub_10001D7B4((uint64_t)v13, (void (*)(void, void, void, void, void))sub_10001D79C);
      if (!v8) {
        break;
      }
      unint64_t v9 = sub_10003C598((uint64_t)v13);
      if ((v10 & 1) == 0) {
        break;
      }
      id v11 = *(void **)(*(void *)(v7 + 56) + 8 * v9);
      swift_endAccess();
      id v12 = v11;
      sub_10001D7B4((uint64_t)v13, (void (*)(void, void, void, void, void))sub_10001D7F4);
      sub_10001D7B4((uint64_t)v13, (void (*)(void, void, void, void, void))sub_10001D7F4);
      sub_10005EFA0();
      sub_10005EFD0();
      sub_10005EFE0();
      sub_10005EFB0();
      if (!--v3) {
        return v14;
      }
    }
    swift_endAccess();
    double result = (void *)sub_10001D7B4((uint64_t)v13, (void (*)(void, void, void, void, void))sub_10001D7F4);
    __break(1u);
  }
  return result;
}

id sub_10001AC7C()
{
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  sub_100007F60(0, &qword_100084D20);
  Class isa = sub_10005EAA0().super.isa;
  swift_bridgeObjectRelease();
  id v2 = [v0 initWithArrangedSubviews:isa];

  return v2;
}

id sub_10001AD04()
{
  return sub_10001AD2C(&OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar14ViewController_widthConstraint, &OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar14ViewController_barWidth);
}

id sub_10001AD18()
{
  return sub_10001AD2C(&OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar14ViewController_topMarginConstraint, &OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar14ViewController_topMargin);
}

id sub_10001AD2C(void *a1, void *a2)
{
  id result = *(id *)(v2 + *a1);
  if (result) {
    return [result setConstant:*(double *)(v2 + *a2)];
  }
  return result;
}

id sub_10001AD50()
{
  id result = *(id *)(v0 + OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar14ViewController_bottomMarginConstraint);
  if (result) {
    return [result setConstant:-*(double *)(v0 + OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar14ViewController_bottomMargin)];
  }
  return result;
}

uint64_t sub_10001AD80(uint64_t a1)
{
  return sub_10001A65C(a1, OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar14ViewController_topMarginConstraint);
}

uint64_t sub_10001AD8C(uint64_t a1)
{
  return sub_10001A65C(a1, OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar14ViewController_bottomMarginConstraint);
}

uint64_t sub_10001AD98(uint64_t a1)
{
  return sub_10001A65C(a1, OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar14ViewController_widthConstraint);
}

uint64_t sub_10001ADAC(double a1, double a2, double a3)
{
  uint64_t v4 = v3;
  *(void *)&v3[OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar14ViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v3[OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar14ViewController_topMarginConstraint] = 0;
  *(void *)&v3[OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar14ViewController_bottomMarginConstraint] = 0;
  *(void *)&v3[OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar14ViewController_widthConstraint] = 0;
  *(void *)&v3[OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar14ViewController_buttonIdentifiers] = &off_100075FE8;
  *(void *)&v3[OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar14ViewController__lastDownButton] = 0;
  v3[OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar14ViewController_initalToggleSelected] = 0;
  *(double *)&v3[OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar14ViewController_barWidth] = a1;
  *(double *)&v3[OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar14ViewController_topMargin] = a2;
  *(double *)&v3[OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar14ViewController_bottomMargin] = a3;
  uint64_t v78 = _swiftEmptyDictionarySingleton;
  uint64_t v8 = 9;
  unint64_t v9 = v3;
  char v10 = (char *)&unk_100076008;
  while (1)
  {
    sub_10001D740((uint64_t)v10, (uint64_t)v79);
    sub_10001D740((uint64_t)v79, (uint64_t)v80);
    if (v81 == 1)
    {
      BOOL v11 = v80[0] == 8 && v80[1] == 6;
      if (!v11 || (v80[2] || v80[3] != 0xE000000000000000) && (sub_10005F140() & 1) == 0)
      {
LABEL_13:
        id v12 = objc_allocWithZone((Class)_s12StickyButtonCMa());
        sub_10001D7B4((uint64_t)v79, (void (*)(void, void, void, void, void))sub_10001D79C);
        sub_10001D7B4((uint64_t)v79, (void (*)(void, void, void, void, void))sub_10001D79C);
        uint64_t v13 = sub_10003F714((uint64_t)v79);
        goto LABEL_22;
      }
LABEL_18:
      id v15 = objc_allocWithZone((Class)_s6ButtonCMa());
LABEL_20:
      sub_10001D7B4((uint64_t)v79, (void (*)(void, void, void, void, void))sub_10001D79C);
      sub_10001D7B4((uint64_t)v79, (void (*)(void, void, void, void, void))sub_10001D79C);
      goto LABEL_21;
    }
    sub_10001D740((uint64_t)v79, (uint64_t)&v82);
    if (v86 < 2u) {
      goto LABEL_13;
    }
    if (!(v84 | v85 | v82 | v83)) {
      goto LABEL_18;
    }
    if (v82 != 1 || v84 | v85 | v83)
    {
      *((unsigned char *)objc_allocWithZone((Class)_s11StateButtonCMa())
      + OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar11StateButton_alternateState) = 0;
      goto LABEL_20;
    }
    id v14 = objc_allocWithZone((Class)_s6ButtonCMa());
LABEL_21:
    uint64_t v13 = sub_10003E310((uint64_t)v79);
LABEL_22:
    id v16 = v13;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v77 = v78;
    unint64_t v18 = sub_10003C598((uint64_t)v79);
    uint64_t v20 = v78[2];
    BOOL v21 = (v19 & 1) == 0;
    id v22 = (uint64_t *)(v20 + v21);
    if (__OFADD__(v20, v21))
    {
      __break(1u);
LABEL_59:
      __break(1u);
LABEL_60:
      __break(1u);
LABEL_61:
      __break(1u);
LABEL_62:
      sub_100007F60(0, &qword_100084D20);
      swift_bridgeObjectRetain();
      sub_10005F070();
      swift_bridgeObjectRelease();
LABEL_33:
      swift_bridgeObjectRelease();
      sub_100007F60(0, (unint64_t *)&qword_100084190);
      id v34 = sub_10001D948();
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_100064390;
      *(void *)(inited + 32) = 8;
      *(void *)(inited + 40) = 0;
      *(void *)(inited + 48) = 0;
      *(void *)(inited + 56) = 0;
      *(unsigned char *)(inited + 64) = 0;
      *(void *)(inited + 72) = 4;
      *(void *)(inited + 80) = 0;
      *(void *)(inited + 88) = 0;
      *(void *)(inited + 96) = 0;
      *(unsigned char *)(inited + 104) = 0;
      *(void *)(inited + 112) = 2;
      *(void *)(inited + 120) = 0;
      *(void *)(inited + 128) = 0;
      *(void *)(inited + 136) = 0;
      *(unsigned char *)(inited + 144) = 0;
      *(void *)(inited + 152) = 1;
      *(void *)(inited + 160) = 0;
      *(unsigned char *)(inited + 184) = 0;
      *(void *)(inited + 168) = 0;
      *(void *)(inited + 176) = 0;
      unint64_t v36 = (unint64_t)sub_10001AB04(inited, (uint64_t *)&v78);
      swift_setDeallocating();
      sub_10001D6FC();
      if (v36 >> 62)
      {
        sub_100007F60(0, &qword_100084D20);
        swift_bridgeObjectRetain();
        sub_10005F070();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRetain();
        sub_10005F150();
        sub_100007F60(0, &qword_100084D20);
      }
      swift_bridgeObjectRelease();
      id v37 = sub_10001D948();
      uint64_t v38 = swift_initStackObject();
      *(_OWORD *)(v38 + 16) = xmmword_1000644E0;
      *(_OWORD *)(v38 + 32) = xmmword_1000644F0;
      *(_OWORD *)(v38 + 48) = xmmword_100064500;
      *(unsigned char *)(v38 + 64) = 1;
      *(void *)(v38 + 72) = 1;
      *(void *)(v38 + 80) = 0;
      *(void *)(v38 + 88) = 0;
      *(void *)(v38 + 96) = 0;
      *(unsigned char *)(v38 + 104) = 2;
      *(_OWORD *)(v38 + 112) = 0u;
      *(_OWORD *)(v38 + 128) = 0u;
      *(unsigned char *)(v38 + 144) = 2;
      unint64_t v39 = (unint64_t)sub_10001AB04(v38, (uint64_t *)&v78);
      swift_setDeallocating();
      sub_10001D6FC();
      if (v39 >> 62)
      {
        sub_100007F60(0, &qword_100084D20);
        swift_bridgeObjectRetain();
        sub_10005F070();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRetain();
        sub_10005F150();
        sub_100007F60(0, &qword_100084D20);
      }
      swift_bridgeObjectRelease();
      id v40 = sub_10001D948();
      sub_100007D1C(&qword_1000843F0);
      uint64_t v41 = swift_allocObject();
      *(_OWORD *)(v41 + 16) = xmmword_100064510;
      *(void *)(v41 + 32) = v34;
      *(void *)(v41 + 40) = v37;
      *(void *)(v41 + 48) = v40;
      uint64_t v77 = (void *)v41;
      sub_10005EAE0();
      id v42 = v34;
      id v43 = v37;
      id v44 = v40;
      id v45 = sub_10001D948();
      *(void *)&v4[OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar14ViewController_stack] = v45;
      *(void *)&v4[OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar14ViewController_topStack] = v42;
      *(void *)&v4[OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar14ViewController_centerStack] = v43;
      *(void *)&v4[OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar14ViewController_bottomStack] = v44;
      id v46 = v42;
      id v47 = v43;
      id v48 = v44;
      id v49 = v45;

      unint64_t v50 = (objc_class *)_s14ViewControllerCMa();
      v76.receiver = v4;
      v76.super_class = v50;
      id v51 = [super initWithNibName:0 bundle:0];
      uint64_t v52 = self;
      id v53 = v49;
      uint64_t v54 = (char *)v51;
      id v55 = [v52 clearColor];
      [v53 setBackgroundColor:v55];

      [v53 setAxis:1];
      [v53 setDistribution:4];
      id v73 = v53;
      [v53 setAlignment:0];
      [v46 setAxis:1];
      [v46 setSpacing:8.0];
      [v47 setAxis:1];
      uint64_t v75 = v47;
      [v47 setSpacing:8.0];
      [v48 setAxis:1];
      char v74 = v48;
      [v48 setSpacing:8.0];
      uint64_t v56 = *(void *)&v54[v22[147]];
      uint64_t v57 = v56 + 64;
      sub_10001D914();
      unint64_t v60 = v59 & v58;
      uint64_t v4 = (char *)((unint64_t)(v61 + 63) >> 6);
      swift_bridgeObjectRetain();
      uint64_t v62 = 0;
      if (v60)
      {
LABEL_38:
        unint64_t v63 = __clz(__rbit64(v60));
        v60 &= v60 - 1;
        unint64_t v64 = v63 | (v62 << 6);
        goto LABEL_55;
      }
      while (1)
      {
        uint64_t v65 = v62 + 1;
        if (__OFADD__(v62, 1)) {
          goto LABEL_59;
        }
        if (v65 >= (uint64_t)v4) {
          goto LABEL_57;
        }
        unint64_t v66 = *(void *)(v57 + 8 * v65);
        ++v62;
        if (!v66)
        {
          uint64_t v62 = v65 + 1;
          if (v65 + 1 >= (uint64_t)v4) {
            goto LABEL_57;
          }
          unint64_t v66 = *(void *)(v57 + 8 * v62);
          if (!v66)
          {
            uint64_t v62 = v65 + 2;
            if (v65 + 2 >= (uint64_t)v4) {
              goto LABEL_57;
            }
            unint64_t v66 = *(void *)(v57 + 8 * v62);
            if (!v66)
            {
              uint64_t v62 = v65 + 3;
              if (v65 + 3 >= (uint64_t)v4) {
                goto LABEL_57;
              }
              unint64_t v66 = *(void *)(v57 + 8 * v62);
              if (!v66)
              {
                uint64_t v67 = v65 + 4;
                if (v67 >= (uint64_t)v4)
                {
LABEL_57:
                  swift_release();
                  id v70 = [v73 widthAnchor];
                  id v71 = [v70 constraintEqualToConstant:*(double *)&qword_100084430];

                  [v71 setActive:1];
                  swift_bridgeObjectRelease();
                  return (uint64_t)v54;
                }
                unint64_t v66 = *(void *)(v57 + 8 * v67);
                if (!v66)
                {
                  while (1)
                  {
                    uint64_t v62 = v67 + 1;
                    if (__OFADD__(v67, 1)) {
                      goto LABEL_61;
                    }
                    if (v62 >= (uint64_t)v4) {
                      goto LABEL_57;
                    }
                    unint64_t v66 = *(void *)(v57 + 8 * v62);
                    ++v67;
                    if (v66) {
                      goto LABEL_54;
                    }
                  }
                }
                uint64_t v62 = v67;
              }
            }
          }
        }
LABEL_54:
        unint64_t v60 = (v66 - 1) & v66;
        unint64_t v64 = __clz(__rbit64(v66)) + (v62 << 6);
LABEL_55:
        id v68 = *(id *)(*(void *)(v56 + 56) + 8 * v64);
        id v69 = [v68 heightAnchor];
        id v22 = (uint64_t *)[v69 constraintEqualToConstant:*(double *)&qword_100084430];

        [v22 setActive:1];
        if (v60) {
          goto LABEL_38;
        }
      }
    }
    unint64_t v23 = v18;
    char v24 = v19;
    sub_100007D1C(&qword_100084500);
    if (sub_10005F020(isUniquelyReferenced_nonNull_native, (Swift::Int)v22)) {
      break;
    }
LABEL_26:
    uint64_t v27 = v77;
    if (v24)
    {
      uint64_t v28 = v77[7];

      *(void *)(v28 + 8 * v23) = v16;
    }
    else
    {
      v77[(v23 >> 6) + 8] |= 1 << v23;
      sub_10001D740((uint64_t)v79, v27[6] + 40 * v23);
      *(void *)(v27[7] + 8 * v23) = v16;
      uint64_t v29 = v27[2];
      BOOL v30 = __OFADD__(v29, 1);
      uint64_t v31 = v29 + 1;
      if (v30) {
        goto LABEL_60;
      }
      v27[2] = v31;
      sub_10001D7B4((uint64_t)v79, (void (*)(void, void, void, void, void))sub_10001D79C);
    }
    uint64_t v78 = v27;
    swift_bridgeObjectRelease();
    sub_10001D7B4((uint64_t)v79, (void (*)(void, void, void, void, void))sub_10001D7F4);
    v10 += 40;
    if (!--v8)
    {
      id v22 = &OBJC_IVAR____TtC17ContinuityDisplay11VideoStream_started;
      *(void *)&v4[OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar14ViewController_buttonsByIdentifer] = v27;
      sub_100007D1C(&qword_100084508);
      uint64_t v32 = swift_initStackObject();
      *(_OWORD *)(v32 + 16) = xmmword_1000643A0;
      *(void *)(v32 + 32) = 3;
      *(void *)(v32 + 40) = 0;
      *(void *)(v32 + 48) = 0;
      *(void *)(v32 + 56) = 0;
      *(unsigned char *)(v32 + 64) = 2;
      *(void *)(v32 + 72) = 2;
      *(void *)(v32 + 80) = 0;
      *(void *)(v32 + 88) = 0;
      *(void *)(v32 + 96) = 0;
      *(unsigned char *)(v32 + 104) = 2;
      swift_bridgeObjectRetain();
      unint64_t v33 = (unint64_t)sub_10001AB04(v32, (uint64_t *)&v78);
      swift_setDeallocating();
      sub_10001D6FC();
      if (!(v33 >> 62))
      {
        swift_bridgeObjectRetain();
        sub_10005F150();
        sub_100007F60(0, &qword_100084D20);
        goto LABEL_33;
      }
      goto LABEL_62;
    }
  }
  unint64_t v25 = sub_10003C598((uint64_t)v79);
  if ((v24 & 1) == (v26 & 1))
  {
    unint64_t v23 = v25;
    goto LABEL_26;
  }
  uint64_t result = sub_10005F1A0();
  __break(1u);
  return result;
}

void sub_10001B898()
{
  *(void *)&v0[OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar14ViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v0[OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar14ViewController_topMarginConstraint] = 0;
  *(void *)&v0[OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar14ViewController_bottomMarginConstraint] = 0;
  *(void *)&v0[OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar14ViewController_widthConstraint] = 0;
  *(void *)&v0[OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar14ViewController_buttonIdentifiers] = &off_100076170;
  *(void *)&v0[OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar14ViewController__lastDownButton] = 0;
  v0[OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar14ViewController_initalToggleSelected] = 0;

  sub_10005F050();
  __break(1u);
}

void sub_10001B97C()
{
  uint64_t v1 = v0;
  _s19_CenteringEventViewCMa();
  id v2 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v3 = *(void **)&v1[OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar14ViewController_stack];
  [v3 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v2 addSubview:v3];
  uint64_t v4 = self;
  id v5 = v2;
  id v6 = [v4 blackColor];
  [v5 setBackgroundColor:v6];

  id v7 = [v3 topAnchor];
  id v8 = [v5 topAnchor];
  id v9 = [v7 constraintEqualToAnchor:v8 constant:*(double *)&v1[OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar14ViewController_topMargin]];

  id v10 = [v3 bottomAnchor];
  id v11 = [v5 bottomAnchor];
  id v12 = [v10 constraintEqualToAnchor:v11 constant:-*(double *)&v1[OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar14ViewController_bottomMargin]];

  id v13 = [v5 widthAnchor];
  id v14 = [v13 constraintEqualToConstant:*(double *)&v1[OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar14ViewController_barWidth]];

  id v15 = v14;
  sub_10001AD98((uint64_t)v14);
  id v16 = v9;
  sub_10001AD80((uint64_t)v9);
  id v17 = v12;
  sub_10001AD8C((uint64_t)v12);
  unint64_t v18 = self;
  sub_100007D1C(&qword_1000843F0);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_100064520;
  *(void *)(v19 + 32) = v15;
  *(void *)(v19 + 40) = v16;
  *(void *)(v19 + 48) = v17;
  id v59 = v15;
  id v60 = v16;
  id v58 = v17;
  id v20 = [v3 centerXAnchor];
  id v21 = [v5 centerXAnchor];
  id v22 = [v20 constraintEqualToAnchor:v21];

  *(void *)(v19 + 56) = v22;
  sub_10005EAE0();
  sub_100007F60(0, (unint64_t *)&qword_100084D70);
  v23.super.Class isa = sub_10005EAA0().super.isa;
  swift_bridgeObjectRelease();
  [v18 activateConstraints:v23.super.isa];

  [v1 setView:v5];
  uint64_t v24 = *(void *)&v1[OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar14ViewController_buttonsByIdentifer];
  uint64_t v25 = v24 + 64;
  sub_10001D914();
  unint64_t v28 = v27 & v26;
  int64_t v61 = (unint64_t)(v29 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v30 = 0;
  while (1)
  {
    if (v28)
    {
      unint64_t v31 = __clz(__rbit64(v28));
      v28 &= v28 - 1;
      unint64_t v32 = v31 | (v30 << 6);
      goto LABEL_24;
    }
    int64_t v33 = v30 + 1;
    if (__OFADD__(v30, 1))
    {
      __break(1u);
LABEL_53:
      __break(1u);
      return;
    }
    if (v33 >= v61) {
      goto LABEL_47;
    }
    unint64_t v34 = *(void *)(v25 + 8 * v33);
    ++v30;
    if (!v34)
    {
      int64_t v30 = v33 + 1;
      sub_10001D928();
      if (v36 == v37) {
        goto LABEL_47;
      }
      unint64_t v34 = *(void *)(v25 + 8 * v30);
      if (!v34)
      {
        int64_t v30 = v35 + 2;
        sub_10001D928();
        if (v36 == v37) {
          goto LABEL_47;
        }
        unint64_t v34 = *(void *)(v25 + 8 * v30);
        if (!v34)
        {
          int64_t v30 = v38 + 3;
          sub_10001D928();
          if (v36 == v37) {
            goto LABEL_47;
          }
          unint64_t v34 = *(void *)(v25 + 8 * v30);
          if (!v34) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v28 = (v34 - 1) & v34;
    unint64_t v32 = __clz(__rbit64(v34)) + (v30 << 6);
LABEL_24:
    id v42 = *(unsigned char **)(*(void *)(v24 + 56) + 8 * v32);
    id v43 = (uint64_t *)&v42[OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar6Button_identifier];
    if (!v42[OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar6Button_identifier + 32]) {
      goto LABEL_44;
    }
    uint64_t v44 = *v43;
    uint64_t v45 = v43[1];
    uint64_t v46 = v43[2];
    uint64_t v47 = v43[3];
    if (v42[OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar6Button_identifier + 32] == 2)
    {
      uint64_t v48 = v46 | v45;
      if (v48 | v44 | v47)
      {
        uint64_t v49 = v48 | v47;
        if (v44 != 1 || v49 != 0)
        {
          id v51 = "_stateButtonPressed:";
          goto LABEL_43;
        }
        v23.super.Class isa = (Class)"_toggleButtonDown:";
        id v55 = v42;
        [v55 addTarget:v1 action:"_toggleButtonDown:" forControlEvents:1];
        [v55 addTarget:v1 action:"_toggleButtonUpIn:" forControlEvents:64];
      }
      else
      {
LABEL_42:
        id v51 = "_actionButtonPressed:";
LABEL_43:
        [v42 addTarget:v1 action:v51 forControlEvents:1];
      }
    }
    else
    {
      if (v44 == 8 && v45 == 6)
      {
        BOOL v53 = !v46 && v47 == 0xE000000000000000;
        if (v53 || (sub_10005F140() & 1) != 0) {
          goto LABEL_42;
        }
      }
LABEL_44:
      _s12StickyButtonCMa();
      if (!swift_dynamicCastClass())
      {
        swift_release();

        uint64_t v57 = v59;
        uint64_t v56 = v60;
        id v60 = v58;
        goto LABEL_49;
      }
      sub_10001D8C4();
      sub_10001D8F8();
      uint64_t v54 = v42;
      swift_retain();
      sub_10003EB4C((uint64_t)sub_10001D89C, (uint64_t)v23.super.isa);
      swift_release();
      sub_10001D8C4();
      sub_10001D8F8();
      swift_retain();
      sub_10003EB58((uint64_t)sub_10001D8A4, (uint64_t)v23.super.isa);
      swift_release();
      sub_10001D8C4();
      sub_10001D8F8();
      swift_retain();
      sub_10003EB64((uint64_t)sub_10001D8AC, (uint64_t)v23.super.isa);

      swift_release();
    }
  }
  int64_t v40 = v39 + 4;
  if (v40 < v61)
  {
    unint64_t v34 = *(void *)(v25 + 8 * v40);
    if (!v34)
    {
      while (1)
      {
        int64_t v30 = v40 + 1;
        if (__OFADD__(v40, 1)) {
          goto LABEL_53;
        }
        sub_10001D928();
        if (v36 == v37) {
          goto LABEL_47;
        }
        unint64_t v34 = *(void *)(v25 + 8 * v30);
        int64_t v40 = v41 + 1;
        if (v34) {
          goto LABEL_23;
        }
      }
    }
    int64_t v30 = v40;
    goto LABEL_23;
  }
LABEL_47:

  swift_release();
  uint64_t v56 = v58;
  uint64_t v57 = v5;
LABEL_49:
}

void sub_10001C00C(void *a1, char a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v5 = (void *)Strong;
    id v6 = a1;
    sub_10001C40C((uint64_t)a1);
    if (swift_unknownObjectWeakLoadStrong())
    {
      sub_10001D740((uint64_t)v6 + OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar6Button_identifier, (uint64_t)v7);
      sub_10003A4E4((uint64_t)v7, a2 & 1);

      swift_unknownObjectRelease();
    }
    else
    {
    }
  }
}

void sub_10001C0CC(uint64_t a1)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = (void *)Strong;
    sub_10001C40C(0);
    if (swift_unknownObjectWeakLoadStrong())
    {
      sub_10001D740(a1 + OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar6Button_identifier, (uint64_t)v4);
      sub_100039CC4((uint64_t)v4, 1);

      swift_unknownObjectRelease();
    }
    else
    {
    }
  }
}

void sub_10001C180(uint64_t a1)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = (void *)Strong;
    uint64_t v4 = *(void *)(Strong + OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar14ViewController__lastDownButton);
    if (v4) {
      BOOL v5 = v4 == a1;
    }
    else {
      BOOL v5 = 0;
    }
    if (v5) {
      sub_10001C998(a1);
    }
  }
}

void sub_10001C23C(char a1)
{
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar14ViewController_buttonsByIdentifer);
  if (*(void *)(v2 + 16))
  {
    v7[0] = 1;
    memset(&v7[1], 0, 24);
    char v8 = 2;
    unint64_t v4 = sub_10003C598((uint64_t)v7);
    if (v5)
    {
      id v6 = *(id *)(*(void *)(v2 + 56) + 8 * v4);
      if ([v6 isSelected] != (a1 & 1)) {
        [v6 setSelected:];
      }
    }
  }
}

void sub_10001C2F4(uint64_t a1, char a2)
{
  uint64_t v3 = *(void *)(v2 + OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar14ViewController_buttonsByIdentifer);
  if (*(void *)(v3 + 16))
  {
    sub_10001D7B4(a1, (void (*)(void, void, void, void, void))sub_10001D79C);
    unint64_t v6 = sub_10003C598(a1);
    if (v7)
    {
      id v9 = *(id *)(*(void *)(v3 + 56) + 8 * v6);
      sub_10001D7B4(a1, (void (*)(void, void, void, void, void))sub_10001D7F4);
      _s11StateButtonCMa();
      uint64_t v8 = swift_dynamicCastClass();
      if (v8 && *(unsigned char *)(v8 + OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar11StateButton_alternateState) != (a2 & 1)) {
        sub_10003FA64();
      }
    }
    else
    {
      sub_10001D7B4(a1, (void (*)(void, void, void, void, void))sub_10001D7F4);
    }
  }
}

uint64_t sub_10001C40C(uint64_t a1)
{
  return sub_10001A65C(a1, OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar14ViewController__lastDownButton);
}

uint64_t sub_10001C418(uint64_t a1)
{
  sub_10001C40C(0);
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    sub_10001D740(a1 + OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar6Button_identifier, (uint64_t)v3);
    sub_100039F10((uint64_t)v3);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_10001C4F0(uint64_t a1)
{
  sub_10001C40C(0);
  sub_10003FA64();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    sub_10001D740(a1 + OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar6Button_identifier, (uint64_t)v3);
    sub_10003A6C8((uint64_t)v3);
    return swift_unknownObjectRelease();
  }
  return result;
}

id sub_10001C5EC(void *a1)
{
  id result = [a1 isSelected];
  *(unsigned char *)(v1 + OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar14ViewController_initalToggleSelected) = (_BYTE)result;
  return result;
}

id sub_10001C680(void *a1)
{
  char v3 = *(unsigned char *)(v1 + OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar14ViewController_initalToggleSelected) ^ 1;
  if (swift_unknownObjectWeakLoadStrong())
  {
    sub_10001D740((uint64_t)a1 + OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar6Button_identifier, (uint64_t)v5);
    sub_10003A4E4((uint64_t)v5, v3 & 1);
    swift_unknownObjectRelease();
  }
  return [a1 setSelected:v3 & 1];
}

void sub_10001C784(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char v3 = v2;
  uint64_t v5 = *(void *)&v2[OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar14ViewController_buttonsByIdentifer];
  double v6 = 0.0;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_7;
  }
  sub_10001D7B4(a1, (void (*)(void, void, void, void, void))sub_10001D79C);
  unint64_t v8 = sub_10003C598(a1);
  if ((v9 & 1) == 0)
  {
    sub_10001D7B4(a1, (void (*)(void, void, void, void, void))sub_10001D7F4);
LABEL_7:
    char v43 = 1;
    CGFloat MidY = 0.0;
LABEL_10:
    *(double *)a2 = v6;
    *(CGFloat *)(a2 + 8) = MidY;
    *(void *)(a2 + 16) = 0;
    *(void *)(a2 + 24) = 0;
    *(unsigned char *)(a2 + 32) = v43;
    return;
  }
  id v10 = *(id *)(*(void *)(v5 + 56) + 8 * v8);
  sub_10001D7B4(a1, (void (*)(void, void, void, void, void))sub_10001D7F4);
  id v11 = [v3 view];
  if (v11)
  {
    id v12 = v11;
    [v11 frame];
    double v14 = v13;
    CGFloat v16 = v15;
    CGFloat v18 = v17;
    CGFloat v20 = v19;

    [v10 bounds];
    double v22 = v21;
    double v24 = v23;
    double v26 = v25;
    double v28 = v27;
    id v29 = [v3 view];
    [v10 convertRect:v29 toView:v22, v24, v26, v28];
    uint64_t v31 = v30;
    uint64_t v33 = v32;
    uint64_t v35 = v34;
    uint64_t v37 = v36;

    uint64_t v38 = v31;
    uint64_t v39 = v33;
    uint64_t v40 = v35;
    uint64_t v41 = v37;
    if (v14 == 0.0)
    {
      double MinX = CGRectGetMinX(*(CGRect *)&v38);
      v45.origin.x = v14;
      v45.origin.y = v16;
      v45.size.width = v18;
      v45.size.height = v20;
      double v6 = CGRectGetWidth(v45) - MinX + -4.0;
    }
    else
    {
      double v6 = 4.0 - CGRectGetMinX(*(CGRect *)&v38);
    }
    [v10 bounds];
    CGFloat MidY = CGRectGetMidY(v46);

    char v43 = 0;
    goto LABEL_10;
  }
  __break(1u);
}

id sub_10001C998(uint64_t a1)
{
  uint64_t v2 = v1;
  unint64_t v4 = (objc_class *)sub_10005E7B0();
  sub_100008DCC();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  char v9 = (char *)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10005E7E0();
  sub_100008DCC();
  uint64_t v12 = v11;
  __chkstk_darwin(v13);
  unint64_t v63 = (char *)&v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = sub_10005E800();
  sub_100008DCC();
  v62._object = v15;
  __chkstk_darwin(v16);
  CGFloat v18 = (char *)&v62 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v62._uint64_t countAndFlagsBits = (uint64_t)&v62 - v20;
  uint64_t v21 = a1;
  sub_10001D740(a1 + OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar6Button_identifier, (uint64_t)v79);
  sub_10001D740((uint64_t)v79, (uint64_t)&v80);
  id v68 = v4;
  uint64_t v67 = v6;
  uint64_t v66 = v10;
  uint64_t v65 = v9;
  uint64_t v64 = v12;
  if (!v81)
  {
    if (v80)
    {
      unint64_t v4 = (objc_class *)[self mainBundle];
      v22._uint64_t countAndFlagsBits = 0x6669685320A787E2;
      v22._object = (void *)0xA900000000000074;
    }
    else
    {
      if ((v80 & 2) != 0)
      {
        id v23 = [self mainBundle];
        v22._uint64_t countAndFlagsBits = (unsigned __int16)sub_10001D934() | 0x746E6F4320830000;
        v22._object = (void *)7106418;
      }
      else
      {
        if ((v80 & 4) != 0)
        {
          id v24 = [self mainBundle];
          v22._uint64_t countAndFlagsBits = (unsigned __int16)sub_10001D934() | 0x6974704F20A50000;
          v22._object = (void *)0xAA00000000006E6FLL;
          goto LABEL_11;
        }
        if ((v80 & 8) == 0) {
          goto LABEL_12;
        }
        unint64_t v4 = (objc_class *)[self mainBundle];
        v22._uint64_t countAndFlagsBits = 0x6D6D6F4320988CE2;
        v22._object = (void *)6581857;
      }
      v22._object = (void *)((uint64_t)v22._object & 0xFFFFFFFFFFFFLL | 0xAB00000000000000);
    }
LABEL_11:
    v86.value._uint64_t countAndFlagsBits = 0;
    v86.value._object = 0;
    v25.super.Class isa = v4;
    v89._uint64_t countAndFlagsBits = 0;
    v89._object = (void *)0xE000000000000000;
    sub_10005E510(v22, v86, v25, v89, v62);
  }
LABEL_12:
  if (swift_unknownObjectWeakLoadStrong())
  {
    sub_1000365C0();
    swift_unknownObjectRelease();
  }
  double v26 = self;
  id v27 = [v26 mainBundle];
  v62._uint64_t countAndFlagsBits = 0xE000000000000000;
  sub_10001D8E0();
  uint64_t v28 = sub_10005E510(v84, v87, v82, v90, v62);
  uint64_t v30 = v29;
  swift_bridgeObjectRelease();

  id v31 = [v26 mainBundle];
  v62._uint64_t countAndFlagsBits = 0xE500000000000000;
  sub_10001D8E0();
  uint64_t v32 = sub_10005E510(v85, v88, v83, v91, v62);
  uint64_t v34 = v33;

  id v35 = objc_allocWithZone((Class)type metadata accessor for SidebarPopover());
  uint64_t v36 = sub_100020A30(v28, v30, v32, v34);
  [v36 setModalPresentationStyle:7];
  id v37 = [v36 popoverPresentationController];
  if (!v37) {
    goto LABEL_31;
  }
  uint64_t v38 = v37;
  id result = [v2 view];
  if (result)
  {
    uint64_t v40 = result;
    [result frame];
    double v42 = v41;

    if (v42 == 0.0) {
      uint64_t v43 = 4;
    }
    else {
      uint64_t v43 = 8;
    }
    [v38 setPermittedArrowDirections:v43];
    [v38 setSourceView:v21];
    sub_10001C784((uint64_t)v79, (uint64_t)v76);
    double v44 = *(double *)v76;
    double v45 = *(double *)&v76[1];
    double v46 = *(double *)&v76[2];
    double v47 = *(double *)&v76[3];
    sub_100007CB4((uint64_t)v76, (uint64_t)v77);
    double v48 = 0.0;
    if (v78) {
      double v49 = 0.0;
    }
    else {
      double v49 = v46;
    }
    if (v78) {
      double v50 = 0.0;
    }
    else {
      double v50 = v47;
    }
    if (v78) {
      double v51 = 0.0;
    }
    else {
      double v51 = v44;
    }
    if ((v78 & 1) == 0) {
      double v48 = v45;
    }
    [v38 setSourceRect:v51, v48, v49, v50];
    id v52 = [objc_allocWithZone((Class)UIColor) initWithRed:0.0 green:0.0 blue:0.0 alpha:0.5];
    [v38 setBackgroundColor:v52];

LABEL_31:
    char v74 = (void (*)())VideoStream.qosMonitorServerDidDie(_:);
    uint64_t v75 = 0;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v71 = 1107296256;
    char v72 = sub_10000C5B0;
    id v73 = &unk_100077238;
    BOOL v53 = _Block_copy(&aBlock);
    [v2 presentViewController:v36 animated:1 completion:v53];
    _Block_release(v53);
    sub_100007F60(0, (unint64_t *)&qword_100084110);
    uint64_t v54 = (void *)sub_10005EC90();
    sub_10005E7F0();
    uint64_t countAndFlagsBits = v62._countAndFlagsBits;
    sub_10005E840();
    v62._object = (void *)*((void *)v62._object + 1);
    ((void (*)(char *, uint64_t))v62._object)(v18, v69);
    uint64_t v56 = swift_allocObject();
    *(void *)(v56 + 16) = v36;
    char v74 = sub_10001D85C;
    uint64_t v75 = v56;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v71 = 1107296256;
    char v72 = sub_10000C5B0;
    id v73 = &unk_100077288;
    uint64_t v57 = _Block_copy(&aBlock);
    id v58 = v36;
    swift_release();
    id v59 = v63;
    sub_10005E7D0();
    long long aBlock = (void **)_swiftEmptyArrayStorage;
    sub_10000ED0C();
    sub_100007D1C((uint64_t *)&unk_100083FD0);
    sub_10000ED5C();
    id v60 = v65;
    int64_t v61 = v68;
    sub_10005EEE0();
    sub_10005EC70();
    _Block_release(v57);

    (*(void (**)(char *, objc_class *))(v67 + 8))(v60, v61);
    (*(void (**)(char *, uint64_t))(v64 + 8))(v59, v66);
    return (id)((uint64_t (*)(uint64_t, uint64_t))v62._object)(countAndFlagsBits, v69);
  }
  __break(1u);
  return result;
}

void sub_10001D1B4(void *a1)
{
  v3[4] = VideoStream.qosMonitorServerDidDie(_:);
  v3[5] = 0;
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 1107296256;
  v3[2] = sub_10000C5B0;
  v3[3] = &unk_1000772B0;
  uint64_t v2 = _Block_copy(v3);
  [a1 dismissViewControllerAnimated:1 completion:v2];
  _Block_release(v2);
}

void sub_10001D260()
{
}

id sub_10001D2B8(uint64_t a1)
{
  return sub_10001D6A0(a1, _s14ViewControllerCMa);
}

uint64_t _s14ViewControllerCMa()
{
  return self;
}

id sub_10001D3D0(uint64_t a1, CGFloat a2, CGFloat a3)
{
  [v3 bounds];
  CGFloat x = v18.origin.x;
  CGFloat y = v18.origin.y;
  CGFloat width = v18.size.width;
  CGFloat height = v18.size.height;
  v17.CGFloat x = a2;
  v17.CGFloat y = a3;
  if (CGRectContainsPoint(v18, v17))
  {
    v19.origin.CGFloat x = x;
    v19.origin.CGFloat y = y;
    v19.size.CGFloat width = width;
    v19.size.CGFloat height = height;
    a2 = CGRectGetWidth(v19) * 0.5;
  }
  v16.receiver = v3;
  v16.super_class = (Class)_s19_CenteringEventViewCMa();
  [super hitTest:a1 withEvent:a2];
  if (v11)
  {
    sub_100007F60(0, &qword_100084D20);
    id v12 = v3;
    id v13 = v11;
    char v14 = sub_10005EDC0();

    if (v14)
    {

      return 0;
    }
  }
  return v11;
}

id sub_10001D57C(double a1, double a2, double a3, double a4)
{
  v10.receiver = v4;
  v10.super_class = (Class)_s19_CenteringEventViewCMa();
  return [super initWithFrame:a1, a2, a3, a4];
}

id sub_10001D608(void *a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)_s19_CenteringEventViewCMa();
  id v3 = [super initWithCoder:a1];

  return v3;
}

id sub_10001D684()
{
  return sub_10001D6A0(0, _s19_CenteringEventViewCMa);
}

id sub_10001D6A0(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return [super dealloc];
}

uint64_t _s19_CenteringEventViewCMa()
{
  return self;
}

uint64_t sub_10001D6FC()
{
  swift_arrayDestroy();

  return _swift_deallocClassInstance(v0, 32, 7);
}

uint64_t sub_10001D740(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_10001D79C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5 == 1) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_10001D7B4(uint64_t a1, void (*a2)(void, void, void, void, void))
{
  return a1;
}

uint64_t sub_10001D7F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5 == 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10001D80C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10001D81C()
{
  return swift_release();
}

uint64_t sub_10001D824()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_10001D85C()
{
  sub_10001D1B4(*(void **)(v0 + 16));
}

uint64_t sub_10001D864()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_10001D89C(void *a1, char a2)
{
}

void sub_10001D8A4(uint64_t a1)
{
}

void sub_10001D8AC(uint64_t a1)
{
}

uint64_t sub_10001D8C4()
{
  return swift_allocObject();
}

uint64_t sub_10001D8F8()
{
  return swift_unknownObjectWeakInit();
}

uint64_t sub_10001D934()
{
  return 36066;
}

id sub_10001D948()
{
  return sub_10001AC7C();
}

uint64_t sub_10001D960@<X0>(uint64_t a1@<X2>, uint64_t *a2@<X8>)
{
  if (a1)
  {
    if (a1 <= 14)
    {
      uint64_t result = sub_10005E540();
      unint64_t v6 = v7 & 0xFFFFFFFFFFFFFFLL;
    }
    else
    {
      sub_10005E500();
      swift_allocObject();
      uint64_t v4 = sub_10005E4C0();
      if ((unint64_t)a1 >= 0x7FFFFFFF)
      {
        sub_10005E5B0();
        uint64_t result = swift_allocObject();
        *(void *)(result + 16) = 0;
        *(void *)(result + 24) = a1;
        unint64_t v6 = v4 | 0x8000000000000000;
      }
      else
      {
        uint64_t result = a1 << 32;
        unint64_t v6 = v4 | 0x4000000000000000;
      }
    }
  }
  else
  {
    uint64_t result = 0;
    unint64_t v6 = 0xC000000000000000;
  }
  *a2 = result;
  a2[1] = v6;
  return result;
}

void sub_10001DAC0(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_100007D1C(&qword_100084660);
    uint64_t v2 = (void *)sub_10005F0A0();
  }
  else
  {
    uint64_t v2 = _swiftEmptyDictionarySingleton;
  }
  uint64_t v32 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v31 = (unint64_t)(63 - v3) >> 6;
  unint64_t v6 = v2 + 8;
  swift_bridgeObjectRetain();
  swift_retain();
  int64_t v7 = 0;
  if (!v5) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v8 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  unint64_t v9 = v8 | (v7 << 6);
  while (1)
  {
    CGRect v18 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v9);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    sub_10000AF90(*(void *)(a1 + 56) + 32 * v9, (uint64_t)v44);
    *(void *)&long long v43 = v20;
    *((void *)&v43 + 1) = v19;
    v41[2] = v43;
    v42[0] = v44[0];
    v42[1] = v44[1];
    *(void *)&v41[0] = v20;
    *((void *)&v41[0] + 1) = v19;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_10000B714(v42, v36);
    long long v37 = v33;
    long long v38 = v34;
    uint64_t v39 = v35;
    sub_10000B714(v36, v40);
    long long v33 = v37;
    long long v34 = v38;
    uint64_t v35 = v39;
    sub_10000B714(v40, v41);
    sub_10000B714(v41, &v37);
    Swift::Int v21 = sub_10005EEF0(v2[5]);
    uint64_t v22 = -1 << *((unsigned char *)v2 + 32);
    unint64_t v23 = v21 & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~v6[v23 >> 6]) == 0)
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v22) >> 6;
      while (++v24 != v27 || (v26 & 1) == 0)
      {
        BOOL v28 = v24 == v27;
        if (v24 == v27) {
          unint64_t v24 = 0;
        }
        v26 |= v28;
        uint64_t v29 = v6[v24];
        if (v29 != -1)
        {
          unint64_t v25 = __clz(__rbit64(~v29)) + (v24 << 6);
          goto LABEL_38;
        }
      }
      __break(1u);
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }
    unint64_t v25 = __clz(__rbit64((-1 << v23) & ~v6[v23 >> 6])) | v23 & 0x7FFFFFFFFFFFFFC0;
LABEL_38:
    *(void *)((char *)v6 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v25;
    uint64_t v30 = v2[6] + 40 * v25;
    *(_OWORD *)uint64_t v30 = v33;
    *(_OWORD *)(v30 + 16) = v34;
    *(void *)(v30 + 32) = v35;
    sub_10000B714(&v37, (_OWORD *)(v2[7] + 32 * v25));
    ++v2[2];
    if (v5) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v10 = v7 + 1;
    if (__OFADD__(v7, 1)) {
      goto LABEL_42;
    }
    if (v10 >= v31) {
      goto LABEL_40;
    }
    unint64_t v11 = *(void *)(v32 + 8 * v10);
    int64_t v12 = v7 + 1;
    if (!v11)
    {
      sub_10001F7A8();
      if (v13 == v14) {
        goto LABEL_40;
      }
      sub_10001F79C();
      if (!v11)
      {
        sub_10001F7A8();
        if (v13 == v14) {
          goto LABEL_40;
        }
        sub_10001F79C();
        if (!v11)
        {
          sub_10001F7A8();
          if (v13 == v14) {
            goto LABEL_40;
          }
          sub_10001F79C();
          if (!v11) {
            break;
          }
        }
      }
    }
LABEL_28:
    unint64_t v5 = (v11 - 1) & v11;
    unint64_t v9 = __clz(__rbit64(v11)) + (v12 << 6);
    int64_t v7 = v12;
  }
  int64_t v16 = v15 + 4;
  if (v16 >= v31)
  {
LABEL_40:
    swift_release();
    sub_10001F5E8();
    return;
  }
  unint64_t v11 = *(void *)(v32 + 8 * v16);
  if (v11)
  {
    int64_t v12 = v16;
    goto LABEL_28;
  }
  while (!__OFADD__(v16, 1))
  {
    sub_10001F7A8();
    if (v13 == v14) {
      goto LABEL_40;
    }
    sub_10001F79C();
    int64_t v16 = v17 + 1;
    if (v11) {
      goto LABEL_28;
    }
  }
LABEL_43:
  __break(1u);
}

uint64_t sub_10001DE64(uint64_t a1, uint64_t a2)
{
  uint64_t v10 = sub_100007D1C(&qword_100084650);
  unint64_t v11 = sub_10001F480();
  v9[0] = a1;
  v9[1] = a2;
  uint64_t v4 = sub_10000BD3C(v9, v10);
  if (*v4) {
    uint64_t v5 = *v4 + v4[1];
  }
  else {
    uint64_t v5 = 0;
  }
  sub_10001F4D4(*v4, v5, &v8);
  uint64_t v6 = v8;
  sub_10000B724((uint64_t)v9);
  return v6;
}

uint64_t sub_10001DEF8(uint64_t a1, uint64_t a2)
{
  v8[3] = &type metadata for UnsafeRawBufferPointer;
  void v8[4] = &protocol witness table for UnsafeRawBufferPointer;
  v8[0] = a1;
  v8[1] = a2;
  uint64_t v2 = sub_10000BD3C(v8, (uint64_t)&type metadata for UnsafeRawBufferPointer);
  uint64_t v3 = *v2;
  if (*v2 && (uint64_t v4 = v2[1], v5 = v4 - v3, v4 != v3))
  {
    if (v5 <= 14)
    {
      uint64_t v6 = sub_10005E540();
    }
    else if ((unint64_t)v5 >= 0x7FFFFFFF)
    {
      uint64_t v6 = sub_10005E550();
    }
    else
    {
      uint64_t v6 = sub_10005E580();
    }
  }
  else
  {
    uint64_t v6 = 0;
  }
  sub_10000B724((uint64_t)v8);
  return v6;
}

uint64_t sub_10001DFB4(uint64_t a1, unint64_t a2)
{
  v13[3] = &type metadata for Data;
  v13[4] = &protocol witness table for Data;
  v13[0] = a1;
  v13[1] = a2;
  uint64_t v4 = sub_10000BD3C(v13, (uint64_t)&type metadata for Data);
  uint64_t v5 = *v4;
  unint64_t v6 = v4[1];
  switch(v6 >> 62)
  {
    case 1uLL:
      if (v5 >> 32 < (int)v5)
      {
        __break(1u);
        JUMPOUT(0x10001E130);
      }
      sub_10001F784();
      sub_100008D64(v5, v6);
      sub_10001F650((int)v5, v5 >> 32, &v12);
      sub_100008D0C(v5, v6);
      break;
    case 2uLL:
      uint64_t v8 = *(void *)(v5 + 16);
      uint64_t v9 = *(void *)(v5 + 24);
      sub_10001F784();
      swift_retain();
      swift_retain();
      sub_10001F650(v8, v9, &v12);
      swift_release();
      swift_release();
      break;
    case 3uLL:
      sub_10001F784();
      uint64_t v7 = 0;
      goto LABEL_7;
    default:
      sub_10001F784();
      uint64_t v7 = BYTE6(v6);
LABEL_7:
      sub_10001D960(v7, &v12);
      break;
  }
  sub_100008D0C(a1, a2);
  uint64_t v10 = v12;
  sub_10000B724((uint64_t)v13);
  return v10;
}

void sub_10001E140(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

NSString sub_10001E1AC()
{
  NSString result = sub_10005E8F0();
  qword_100088FC0 = (uint64_t)result;
  return result;
}

uint64_t sub_10001E1E4()
{
  uint64_t v0 = KeyboardReport.reportDescriptor.unsafeMutableAddressor();
  sub_10001F744(v0);
  sub_10001F728();
  sub_10001F760();
  uint64_t v1 = PencilReport.reportDescriptor.unsafeMutableAddressor();
  sub_10001F744(v1);
  sub_10001F728();
  sub_10001F760();
  uint64_t v2 = TouchReport.reportDescriptor.unsafeMutableAddressor();
  sub_10001F744(v2);
  sub_10001F728();
  sub_10001F760();
  uint64_t v3 = MultitouchReport.reportDescriptor.unsafeMutableAddressor();
  sub_10001F744(v3);
  sub_10001F728();
  sub_10001F760();
  id v4 = SqueezeGestureReport.reportDescriptor.unsafeMutableAddressor();
  sub_10001F744(v4);
  sub_10001F728();
  sub_10001F760();
  return 0;
}

uint64_t sub_10001E270(uint64_t a1, void *a2)
{
  uint64_t v5 = v2 + OBJC_IVAR____TtC17ContinuityDisplay16DisplayHIDDevice_logger;
  uint64_t v6 = sub_10005E750();
  uint64_t v7 = *(void *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v5, a1, v6);
  *(void *)(v2 + OBJC_IVAR____TtC17ContinuityDisplay16DisplayHIDDevice_stream) = a2;
  uint64_t v8 = swift_allocObject();
  swift_weakInit();
  v12[4] = sub_10001F418;
  v12[5] = v8;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 1107296256;
  v12[2] = sub_10001E470;
  void v12[3] = &unk_100077328;
  uint64_t v9 = _Block_copy(v12);
  id v10 = a2;
  swift_release();
  [v10 setHandler:v9];
  _Block_release(v9);

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
  return v2;
}

uint64_t sub_10001E410(uint64_t a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_10001E698(a1);
    return swift_release();
  }
  return result;
}

uint64_t sub_10001E470(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(long long *))(a1 + 32);
  if (a2)
  {
    *((void *)&v6 + 1) = swift_getObjectType();
    *(void *)&long long v5 = a2;
  }
  else
  {
    long long v5 = 0u;
    long long v6 = 0u;
  }
  swift_retain();
  swift_unknownObjectRetain();
  v3(&v5);
  swift_release();
  return sub_10000BB64((uint64_t)&v5);
}

void sub_10001E4F0()
{
  sub_100007D1C(&qword_100084648);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100064590;
  *(void *)(inited + 32) = 0;
  uint64_t v2 = sub_10001E1E4();
  unint64_t v4 = v3;
  uint64_t v5 = static HIDDescriptor.dataWithReportDescriptor(_:)();
  uint64_t v7 = v6;
  sub_100008D0C(v2, v4);
  *(void *)(inited + 40) = v5;
  *(void *)(inited + 48) = v7;
  sub_10005E890();
  id v8 = *(id *)(v0 + OBJC_IVAR____TtC17ContinuityDisplay16DisplayHIDDevice_stream);
  Class isa = sub_10005E870().super.isa;
  swift_bridgeObjectRelease();
  aBlock[4] = sub_10001F60C;
  uint64_t v12 = v0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10001E140;
  aBlock[3] = &unk_1000773A0;
  id v10 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  [v8 sendOPACK:isa completion:v10];
  _Block_release(v10);
}

uint64_t sub_10001E678()
{
  return 0x69614620646E6553;
}

void sub_10001E698(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_100019C6C(a1, (uint64_t)aBlock);
  if (!v23)
  {
    sub_10000BB64((uint64_t)aBlock);
    goto LABEL_6;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_6:
    sub_100007F60(0, (unint64_t *)&qword_100084108);
    int v8 = sub_10001F6FC();
    id v11 = sub_10002E6C4(v8, v9, v10);
    __chkstk_darwin(v11);
    sub_10001F714();
    sub_10002E180(variable initialization expression of SidecarDisplaySession.delegate, 0, (void (*)(void))sub_10000FAE8);

    return;
  }
  uint64_t v4 = v26;
  unint64_t v3 = v27;
  sub_100008D64(v26, v27);
  uint64_t v5 = HIDRequest.init(rawData:)(v4, v3);
  if (v5 == 14)
  {
    sub_100008D0C(v4, v3);
    goto LABEL_6;
  }
  uint64_t v12 = v5;
  uint64_t v13 = v6;
  unint64_t v14 = v7;
  uint64_t v15 = sub_10001E928(v5, v6, v7);
  if (v16 >> 60 == 15)
  {
    sub_100008D0C(v4, v3);
    sub_10001F5F0(v12, v13, v14);
  }
  else
  {
    uint64_t v17 = v15;
    unint64_t v18 = v16;
    id v21 = *(id *)(v2 + OBJC_IVAR____TtC17ContinuityDisplay16DisplayHIDDevice_stream);
    Class isa = sub_10005E5E0().super.isa;
    unint64_t v24 = sub_10001F60C;
    uint64_t v25 = v2;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10001E140;
    unint64_t v23 = &unk_100077378;
    uint64_t v19 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    [v21 sendOPACK:isa completion:v19];
    sub_100008D0C(v4, v3);
    sub_10001F5F0(v12, v13, v14);
    _Block_release(v19);

    sub_10001A2A4(v17, v18);
  }
}

uint64_t sub_10001E928(char a1, unint64_t a2, unint64_t a3)
{
  if (a1 == 11) {
    return sub_10001EA28(11, a2, a3);
  }
  if (a1 != 4) {
    return 0;
  }
  uint64_t v3 = sub_10001E1E4();
  HIDRequest.init(_:wValue:wIndex:data:)(4, 0, 0, v3, v4);
  return v5;
}

uint64_t sub_10001EA28(uint64_t a1, unint64_t a2, unint64_t a3)
{
  uint64_t v5 = v3;
  __int16 v9 = HIDRequest.wValue.getter();
  if (HIBYTE(v9) == 3)
  {
LABEL_4:
    uint64_t v10 = HIDRequest.data.getter(a1, a2, a3);
    sub_10001A2A4(v10, v11);
    return 0;
  }
  if (HIBYTE(v9) != 2)
  {
    if (HIBYTE(v9) != 1)
    {
      uint64_t v12 = sub_100007F60(0, (unint64_t *)&qword_100084108);
      int v18 = sub_10001F6FC();
      sub_10002E6C4(v18, v19, v20);
      sub_10001F778();
      __chkstk_darwin(v21);
      sub_10001F714();
      sub_10002E180(variable initialization expression of SidecarDisplaySession.delegate, 0, (void (*)(void))sub_10000FAE8);
      swift_willThrow();
      return v12;
    }
    goto LABEL_4;
  }
  unsigned __int8 v13 = v9;
  uint64_t v14 = HIDRequest.data.getter(a1, a2, a3);
  unint64_t v16 = v15;
  uint64_t v12 = v5;
  uint64_t v17 = sub_10001EBB0(v13, v14, v15);
  if (!v4) {
    uint64_t v12 = v17;
  }
  sub_10001A2A4(v14, v16);
  return v12;
}

uint64_t sub_10001EBB0(unsigned __int8 a1, uint64_t a2, unint64_t a3)
{
  if (a3 >> 60 == 15) {
    goto LABEL_7;
  }
  sub_100008D64(a2, a3);
  if (sub_10005E620() < 2 || sub_10005E660() != a1)
  {
    sub_10001A2A4(a2, a3);
LABEL_7:
    sub_100007F60(0, (unint64_t *)&qword_100084108);
    int v6 = sub_10001F6FC();
    sub_10002E6C4(v6, v7, v8);
    sub_10001F778();
    __chkstk_darwin(v9);
    sub_10001F714();
    sub_10002E180(variable initialization expression of SidecarDisplaySession.delegate, 0, (void (*)(void))sub_10000FAE8);
    swift_willThrow();
    return 0;
  }
  if (a1 == 3)
  {
    sub_10001EDB4();
  }
  else
  {
    sub_100007F60(0, (unint64_t *)&qword_100084108);
    int v11 = sub_10001F6FC();
    sub_10002E6C4(v11, v12, v13);
    sub_10001F778();
    __chkstk_darwin(v14);
    sub_10001F714();
    sub_10002E180(variable initialization expression of SidecarDisplaySession.delegate, 0, (void (*)(void))sub_10000FAE8);
    swift_willThrow();
  }
  sub_10001A2A4(a2, a3);
  return 0;
}

uint64_t sub_10001EDB4()
{
  uint64_t v1 = v0;
  if (sub_10005E620() == 2)
  {
    uint64_t v2 = sub_100007F60(0, (unint64_t *)&qword_100085060);
    Class isa = sub_10005EDB0(4294901776).super.super.isa;
    sub_10005E660();
    Class v4 = sub_10005EB70().super.super.isa;
    sub_100007D1C(&qword_1000843A0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1000643A0;
    *(void *)(inited + 32) = 0x6567617375;
    *(void *)(inited + 40) = 0xE500000000000000;
    *(void *)(inited + 48) = isa;
    *(void *)(inited + 72) = v2;
    *(void *)(inited + 80) = 0x6574617473;
    *(void *)(inited + 120) = v2;
    *(void *)(inited + 88) = 0xE500000000000000;
    *(void *)(inited + 96) = v4;
    int v6 = isa;
    uint64_t v7 = v4;
    uint64_t v8 = sub_10005E890();
    id v9 = [self defaultCenter];
    if (qword_100083B58 != -1) {
      swift_once();
    }
    uint64_t v10 = qword_100088FC0;
    sub_10001DAC0(v8);
    uint64_t v12 = v11;
    swift_bridgeObjectRelease();
    sub_10001F54C(v10, v1, v12, v9);
  }
  else
  {
    sub_100007F60(0, (unint64_t *)&qword_100084108);
    int v13 = sub_10001F6FC();
    sub_10002E6C4(v13, v14, v15);
    sub_10001F778();
    __chkstk_darwin(v16);
    sub_10001F714();
    sub_10002E180(variable initialization expression of SidecarDisplaySession.delegate, 0, (void (*)(void))sub_10000FAE8);
    swift_willThrow();
  }
  return 0;
}

void sub_10001F010(uint64_t a1)
{
  SidecarHIDDebugLog(_:)(j___s10SidecarHID9HIDReportC11descriptionSSvg);
  sub_100007D1C(&qword_100084648);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100064590;
  *(void *)(inited + 32) = 1;
  *(void *)(inited + 40) = sub_10001DE64(*(void *)(a1 + 16), *(void *)(a1 + 24));
  *(void *)(inited + 48) = v4;
  sub_10005E890();
  id v5 = *(id *)(v1 + OBJC_IVAR____TtC17ContinuityDisplay16DisplayHIDDevice_stream);
  Class isa = sub_10005E870().super.isa;
  swift_bridgeObjectRelease();
  aBlock[4] = sub_10001F43C;
  uint64_t v9 = v1;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10001E140;
  void aBlock[3] = &unk_100077350;
  uint64_t v7 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  [v5 sendOPACK:isa completion:v7];
  _Block_release(v7);
}

uint64_t sub_10001F1A8(uint64_t result, uint64_t a2, uint64_t (*a3)(void), void (*a4)(void))
{
  if (result)
  {
    __chkstk_darwin();
    swift_errorRetain();
    sub_10002E180(a3, 0, a4);
    return swift_errorRelease();
  }
  return result;
}

uint64_t sub_10001F244()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC17ContinuityDisplay16DisplayHIDDevice_logger;
  uint64_t v2 = sub_10005E750();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  uint64_t v3 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v4 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v3, v4);
}

uint64_t sub_10001F2F4()
{
  return type metadata accessor for DisplayHIDDevice();
}

uint64_t type metadata accessor for DisplayHIDDevice()
{
  uint64_t result = qword_100084548;
  if (!qword_100084548) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10001F344()
{
  uint64_t result = sub_10005E750();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_10001F3E0()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10001F418(uint64_t a1)
{
  return sub_10001E410(a1);
}

uint64_t sub_10001F420(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10001F430()
{
  return swift_release();
}

uint64_t sub_10001F43C(uint64_t a1)
{
  return sub_10001F1A8(a1, v1, sub_10001E678, (void (*)(void))sub_10000FA6C);
}

unint64_t sub_10001F480()
{
  unint64_t result = qword_100084658;
  if (!qword_100084658)
  {
    sub_100007D84(&qword_100084650);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100084658);
  }
  return result;
}

uint64_t sub_10001F4D4@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  if (!result) {
    goto LABEL_4;
  }
  uint64_t v4 = a2 - result;
  if (a2 == result)
  {
    unint64_t result = 0;
LABEL_4:
    unint64_t v5 = 0xC000000000000000;
    goto LABEL_5;
  }
  if (v4 <= 14)
  {
    unint64_t result = sub_10005E540();
    unint64_t v5 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else if ((unint64_t)v4 >= 0x7FFFFFFF)
  {
    unint64_t result = sub_10005E550();
    unint64_t v5 = v8 | 0x8000000000000000;
  }
  else
  {
    unint64_t result = sub_10005E580();
    unint64_t v5 = v6 | 0x4000000000000000;
  }
LABEL_5:
  *a3 = result;
  a3[1] = v5;
  return result;
}

void sub_10001F54C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  Class isa = sub_10005E870().super.isa;
  swift_bridgeObjectRelease();
  [a4 postNotificationName:a1 object:a2 userInfo:isa];
}

uint64_t sub_10001F5E8()
{
  return swift_release();
}

uint64_t sub_10001F5F0(uint64_t result, uint64_t a2, unint64_t a3)
{
  if (result != 14) {
    return sub_100008D0C(a2, a3);
  }
  return result;
}

uint64_t sub_10001F60C(uint64_t a1)
{
  return sub_10001F1A8(a1, v1, sub_10001E678, (void (*)(void))sub_10000FAE8);
}

uint64_t sub_10001F650@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = sub_10005E4D0();
  uint64_t v7 = result;
  if (result)
  {
    uint64_t result = sub_10005E4F0();
    if (__OFSUB__(a1, result))
    {
LABEL_13:
      __break(1u);
      return result;
    }
    v7 += a1 - result;
  }
  BOOL v8 = __OFSUB__(a2, a1);
  uint64_t v9 = a2 - a1;
  if (v8)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v10 = sub_10005E4E0();
  if (v10 >= v9) {
    uint64_t v11 = v9;
  }
  else {
    uint64_t v11 = v10;
  }
  uint64_t v12 = v7 + v11;
  if (v7) {
    uint64_t v13 = v12;
  }
  else {
    uint64_t v13 = 0;
  }
  return sub_10001F4D4(v7, v13, a3);
}

uint64_t sub_10001F6FC()
{
  return 4294953353;
}

uint64_t sub_10001F728()
{
  return sub_10005E630();
}

uint64_t sub_10001F744(uint64_t *a1)
{
  unint64_t v2 = a1[1];
  uint64_t v3 = *a1;
  return sub_100008D64(v3, v2);
}

uint64_t sub_10001F760()
{
  return sub_100008D0C(v0, v1);
}

uint64_t sub_10001F784()
{
  return sub_100008D64(v1, v0);
}

uint64_t sub_10001F7B4(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC17ContinuityDisplay17DisplayModalAlert_error) = a1;
  return swift_errorRelease();
}

uint64_t sub_10001F7CC(char a1)
{
  if (a1) {
    return 0x656E6E6F63736964;
  }
  else {
    return 0x697463656E6E6F63;
  }
}

BOOL sub_10001F810(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

void sub_10001F820(uint64_t a1, char a2)
{
}

Swift::Int sub_10001F848(char a1)
{
  return sub_10005F200();
}

BOOL sub_10001F890(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_10001F810(*a1, *a2);
}

Swift::Int sub_10001F89C()
{
  return sub_10001F848(*v0);
}

void sub_10001F8A4(uint64_t a1)
{
  sub_10001F820(a1, *v1);
}

Swift::Int sub_10001F8AC()
{
  Swift::UInt v1 = *v0;
  sub_10005F1C0();
  sub_10005F1D0(v1);
  return sub_10005F200();
}

uint64_t sub_10001F8F0()
{
  return sub_10001F7CC(*v0);
}

void sub_10001F900(char a1, uint64_t a2)
{
  uint64_t v3 = v2;
  char v5 = a1 & 1;
  *(void *)&v2[OBJC_IVAR____TtC17ContinuityDisplay17DisplayModalAlert_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v6 = OBJC_IVAR____TtC17ContinuityDisplay17DisplayModalAlert_error;
  *(void *)&v2[OBJC_IVAR____TtC17ContinuityDisplay17DisplayModalAlert_error] = 0;
  uint64_t v7 = OBJC_IVAR____TtC17ContinuityDisplay17DisplayModalAlert_disconnectButton;
  type metadata accessor for DisplayAlertButton();
  BOOL v8 = v2;
  *(void *)&v2[v7] = sub_1000209E8();
  uint64_t v9 = OBJC_IVAR____TtC17ContinuityDisplay17DisplayModalAlert_mainLabel;
  *(void *)&v8[v9] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v10 = OBJC_IVAR____TtC17ContinuityDisplay17DisplayModalAlert_secondaryLabel;
  *(void *)&v8[v10] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v11 = OBJC_IVAR____TtC17ContinuityDisplay17DisplayModalAlert_debugLabel;
  *(void *)&v8[v11] = [objc_allocWithZone((Class)UILabel) init];
  v8[OBJC_IVAR____TtC17ContinuityDisplay17DisplayModalAlert_reason] = v5;
  *(void *)&v3[v6] = a2;
  swift_errorRetain();
  swift_errorRelease();
  *(void *)&v8[OBJC_IVAR____TtC17ContinuityDisplay17DisplayModalAlert_generation] = qword_100088FC8;

  if (__OFADD__(qword_100088FC8, 1))
  {
    __break(1u);
  }
  else
  {
    ++qword_100088FC8;
    v12.receiver = v8;
    v12.super_class = (Class)type metadata accessor for DisplayModalAlert();
    [super initWithNibName:0 bundle:0];
    swift_errorRelease();
  }
}

void sub_10001FA6C()
{
  Swift::UInt v1 = v0;
  *(void *)&v0[OBJC_IVAR____TtC17ContinuityDisplay17DisplayModalAlert_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v0[OBJC_IVAR____TtC17ContinuityDisplay17DisplayModalAlert_error] = 0;
  uint64_t v2 = OBJC_IVAR____TtC17ContinuityDisplay17DisplayModalAlert_disconnectButton;
  type metadata accessor for DisplayAlertButton();
  *(void *)&v0[v2] = sub_1000209E8();
  uint64_t v3 = OBJC_IVAR____TtC17ContinuityDisplay17DisplayModalAlert_mainLabel;
  *(void *)&v1[v3] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v4 = OBJC_IVAR____TtC17ContinuityDisplay17DisplayModalAlert_secondaryLabel;
  *(void *)&v1[v4] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v5 = OBJC_IVAR____TtC17ContinuityDisplay17DisplayModalAlert_debugLabel;
  *(void *)&v1[v5] = [objc_allocWithZone((Class)UILabel) init];

  sub_10005F050();
  __break(1u);
}

void sub_10001FB90()
{
  Swift::UInt v1 = v0;
  id v63 = [self effectWithStyle:2];
  id v62 = [objc_allocWithZone((Class)UIVisualEffectView) initWithEffect:v63];
  id v64 = [v62 contentView];
  id v65 = [objc_allocWithZone((Class)UIView) init];
  [v65 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC17ContinuityDisplay17DisplayModalAlert_mainLabel];
  uint64_t v3 = self;
  id v4 = [v3 whiteColor];
  [v2 setTextColor:v4];

  uint64_t v5 = self;
  id v6 = [v5 boldSystemFontOfSize:20.0];
  [v2 setFont:v6];

  [v2 setTextAlignment:1];
  uint64_t v7 = *(void **)&v1[OBJC_IVAR____TtC17ContinuityDisplay17DisplayModalAlert_secondaryLabel];
  id v8 = [v5 boldSystemFontOfSize:16.0];
  [v7 setFont:v8];

  id v9 = [v3 whiteColor];
  [v7 setTextColor:v9];

  [v7 setTextAlignment:1];
  [v7 setNumberOfLines:0];
  uint64_t v10 = *(void **)&v1[OBJC_IVAR____TtC17ContinuityDisplay17DisplayModalAlert_debugLabel];
  [v10 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v11 = [v3 whiteColor];
  [v10 setTextColor:v11];

  id v12 = [v5 monospacedSystemFontOfSize:14.0 weight:UIFontWeightThin];
  [v10 setFont:v12];

  [v10 setNumberOfLines:0];
  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v7 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v13 = *(void **)&v1[OBJC_IVAR____TtC17ContinuityDisplay17DisplayModalAlert_disconnectButton];
  uint64_t v14 = (objc_class *)[self mainBundle];
  v60._uint64_t countAndFlagsBits = 0xEC000000656C7469;
  v67._uint64_t countAndFlagsBits = 0x656E6E6F63736944;
  v67._object = (void *)0xEA00000000007463;
  v68.value._uint64_t countAndFlagsBits = 0;
  v68.value._object = 0;
  v15.super.Class isa = v14;
  v69._uint64_t countAndFlagsBits = 0;
  v69._object = (void *)0xE000000000000000;
  uint64_t v16 = sub_10005E510(v67, v68, v15, v69, v60);
  uint64_t v18 = v17;

  sub_1000232D0(v16, v18, 0, v13);
  [v13 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v13 addTarget:v1 action:"_disconnectPressedWithSender:" forControlEvents:64];
  [v64 addSubview:v65];
  [v64 addSubview:v10];
  [v65 addSubview:v2];
  [v65 addSubview:v7];
  [v65 addSubview:v13];
  id v61 = self;
  sub_100007D1C(&qword_1000843F0);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1000645C0;
  id v20 = [v65 leftAnchor];
  id v21 = [v64 leftAnchor];
  id v22 = [v20 constraintEqualToAnchor:v21];

  *(void *)(v19 + 32) = v22;
  id v23 = [v65 rightAnchor];
  id v24 = sub_1000209C8((uint64_t)[v64 rightAnchor]);

  *(void *)(v19 + 40) = v24;
  id v25 = [v65 centerXAnchor];
  id v26 = sub_1000209C8((uint64_t)[v64 centerXAnchor]);

  *(void *)(v19 + 48) = v26;
  id v27 = [v65 centerYAnchor];
  id v28 = sub_1000209C8((uint64_t)[v64 centerYAnchor]);

  *(void *)(v19 + 56) = v28;
  id v29 = [v10 leftAnchor];
  id v30 = [v64 leftAnchor];
  id v31 = sub_100020A10((uint64_t)v30, "constraintEqualToAnchor:constant:");

  *(void *)(v19 + 64) = v31;
  id v32 = [v10 topAnchor];
  id v33 = [v64 topAnchor];
  id v34 = sub_100020A10((uint64_t)v33, "constraintEqualToAnchor:constant:");

  *(void *)(v19 + 72) = v34;
  id v35 = [v2 centerXAnchor];
  id v36 = [v65 centerXAnchor];
  id v37 = [v35 constraintEqualToAnchor:v36];

  *(void *)(v19 + 80) = v37;
  id v38 = [v2 topAnchor];
  id v39 = sub_1000209C8((uint64_t)[v65 topAnchor]);

  *(void *)(v19 + 88) = v39;
  id v40 = [v7 topAnchor];
  id v41 = [v2 bottomAnchor];
  id v42 = sub_100020A10((uint64_t)v41, "constraintEqualToAnchor:constant:");

  *(void *)(v19 + 96) = v42;
  id v43 = [v7 centerXAnchor];
  id v44 = sub_1000209C8((uint64_t)[v65 centerXAnchor]);

  *(void *)(v19 + 104) = v44;
  id v45 = [v7 widthAnchor];
  id v46 = [v45 constraintLessThanOrEqualToConstant:320.0];

  *(void *)(v19 + 112) = v46;
  id v47 = [v13 topAnchor];
  id v48 = [v7 bottomAnchor];
  id v49 = sub_100020A10((uint64_t)v48, "constraintEqualToAnchor:constant:");

  *(void *)(v19 + 120) = v49;
  id v50 = [v13 centerXAnchor];
  id v51 = sub_1000209C8((uint64_t)[v65 centerXAnchor]);

  *(void *)(v19 + 128) = v51;
  id v52 = [v13 heightAnchor];
  id v53 = [v52 constraintEqualToConstant:54.0];

  *(void *)(v19 + 136) = v53;
  id v54 = [v13 widthAnchor];
  id v55 = [v54 constraintGreaterThanOrEqualToConstant:204.0];

  *(void *)(v19 + 144) = v55;
  id v56 = [v13 bottomAnchor];
  id v57 = [v65 bottomAnchor];
  id v58 = [v56 constraintEqualToAnchor:v57];

  *(void *)(v19 + 152) = v58;
  sub_10005EAE0();
  sub_100020988();
  Class isa = sub_10005EAA0().super.isa;
  swift_bridgeObjectRelease();
  [v61 activateConstraints:isa];

  [v1 setView:v62];
}

uint64_t sub_1000205A4()
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    sub_1000375B4();
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_100020664()
{
}

id sub_1000206BC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DisplayModalAlert();
  [super dealloc];
}

uint64_t type metadata accessor for DisplayModalAlert()
{
  return self;
}

uint64_t getEnumTagSinglePayload for DisplayModalAlert.Reason(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFF)
  {
    if (a2 + 1 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 1) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 2;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v5 = v6 - 2;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for DisplayModalAlert.Reason(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000208F4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_10002091C(unsigned char *result, char a2)
{
  *uint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for DisplayModalAlert.Reason()
{
  return &type metadata for DisplayModalAlert.Reason;
}

unint64_t sub_10002093C()
{
  unint64_t result = qword_1000846D0;
  if (!qword_1000846D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000846D0);
  }
  return result;
}

unint64_t sub_100020988()
{
  unint64_t result = qword_100084D70;
  if (!qword_100084D70)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100084D70);
  }
  return result;
}

id sub_1000209C8(uint64_t a1)
{
  unsigned int v4 = *(const char **)(v2 + 784);
  return [v1 v4:a1];
}

id sub_1000209E8()
{
  return sub_100022B08(0x656E6E6F63736944, 0xEA00000000007463);
}

id sub_100020A10(uint64_t a1, const char *a2)
{
  return [v2 a2:v3];
}

char *sub_100020A30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = OBJC_IVAR____TtC17ContinuityDisplay14SidebarPopover_titleField;
  id v10 = objc_allocWithZone((Class)UILabel);
  id v11 = v4;
  *(void *)&v4[v9] = [v10 init];
  uint64_t v12 = OBJC_IVAR____TtC17ContinuityDisplay14SidebarPopover_detailsField;
  *(void *)&v11[v12] = [objc_allocWithZone((Class)UILabel) init];

  v32.receiver = v11;
  v32.super_class = (Class)type metadata accessor for SidebarPopover();
  uint64_t v13 = (char *)[super initWithNibName:0 bundle:0];
  uint64_t v14 = *(void **)&v13[OBJC_IVAR____TtC17ContinuityDisplay14SidebarPopover_titleField];
  NSBundle v15 = v13;
  sub_10003D0CC(a1, a2, v14);
  id v16 = [objc_allocWithZone((Class)NSMutableParagraphStyle) init];
  [v16 setLineSpacing:2.0];
  uint64_t v17 = OBJC_IVAR____TtC17ContinuityDisplay14SidebarPopover_detailsField;
  uint64_t v18 = *(void **)&v15[OBJC_IVAR____TtC17ContinuityDisplay14SidebarPopover_detailsField];
  if (a4) {
    uint64_t v19 = a3;
  }
  else {
    uint64_t v19 = 0;
  }
  uint64_t v31 = v19;
  if (a4) {
    uint64_t v20 = a4;
  }
  else {
    uint64_t v20 = 0xE000000000000000;
  }
  sub_100007D1C(&qword_100084710);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100064590;
  *(void *)(inited + 32) = NSParagraphStyleAttributeName;
  *(void *)(inited + 64) = sub_100007F60(0, &qword_100084718);
  *(void *)(inited + 40) = v16;
  type metadata accessor for Key(0);
  sub_1000215F4();
  id v22 = v18;
  id v23 = NSParagraphStyleAttributeName;
  id v24 = v16;
  swift_bridgeObjectRetain();
  uint64_t v25 = sub_10005E890();
  id v26 = objc_allocWithZone((Class)NSAttributedString);
  id v27 = sub_10002154C(v31, v20, v25);
  [v22 setAttributedText:v27];

  id v28 = *(id *)&v15[v17];
  if (a4)
  {
    NSString v29 = sub_10005E8F0();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v29 = 0;
  }
  [v28 setText:v29];

  return v15;
}

void sub_100020CA0()
{
  uint64_t v1 = OBJC_IVAR____TtC17ContinuityDisplay14SidebarPopover_titleField;
  *(void *)&v0[v1] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v2 = OBJC_IVAR____TtC17ContinuityDisplay14SidebarPopover_detailsField;
  *(void *)&v0[v2] = [objc_allocWithZone((Class)UILabel) init];

  sub_10005F050();
  __break(1u);
}

void sub_100020D6C()
{
  id v1 = [objc_allocWithZone((Class)UIView) init];
  [v0 setView:v1];
  uint64_t v2 = self;
  id v3 = [v2 clearColor];
  [v1 setBackgroundColor:v3];

  uint64_t v4 = *(void **)&v0[OBJC_IVAR____TtC17ContinuityDisplay14SidebarPopover_titleField];
  [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v5 = *(void **)&v0[OBJC_IVAR____TtC17ContinuityDisplay14SidebarPopover_detailsField];
  [v5 setTranslatesAutoresizingMaskIntoConstraints:0];
  unsigned int v6 = self;
  id v7 = [v6 systemFontOfSize:13.0 weight:UIFontWeightMedium];
  [v4 setFont:v7];

  id v8 = [v2 whiteColor];
  [v4 setTextColor:v8];

  id v9 = [v6 systemFontOfSize:11.0 weight:UIFontWeightRegular];
  [v5 setFont:v9];

  id v10 = [v2 whiteColor];
  [v5 setTextColor:v10];

  [v5 setNumberOfLines:0];
  [v1 addSubview:v4];
  [v1 addSubview:v5];
  id v42 = self;
  sub_100007D1C(&qword_1000843F0);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1000646B0;
  id v12 = [v4 leadingAnchor];
  id v13 = sub_100021644();
  id v14 = [v13 leadingAnchor];

  id v16 = sub_10002165C(v15, "constraintEqualToAnchor:constant:");
  *(void *)(v11 + 32) = v16;
  id v17 = [v5 leadingAnchor];
  id v18 = sub_100021644();
  id v19 = [v18 leadingAnchor];

  id v21 = sub_10002165C(v20, "constraintEqualToAnchor:constant:");
  *(void *)(v11 + 40) = v21;
  id v22 = [v4 trailingAnchor];
  id v23 = sub_100021644();
  id v24 = [v23 trailingAnchor];

  id v26 = sub_10002165C(v25, "constraintEqualToAnchor:constant:");
  *(void *)(v11 + 48) = v26;
  id v27 = [v5 trailingAnchor];
  id v28 = sub_100021644();
  id v29 = [v28 trailingAnchor];

  id v31 = sub_10002165C(v30, "constraintEqualToAnchor:constant:");
  *(void *)(v11 + 56) = v31;
  id v32 = [v4 topAnchor];
  id v33 = [v1 topAnchor];
  id v34 = [v32 constraintEqualToAnchor:v33 constant:8.0];

  *(void *)(v11 + 64) = v34;
  id v35 = [v5 topAnchor];
  id v36 = [v4 bottomAnchor];
  id v37 = [v35 constraintEqualToAnchor:v36 constant:4.0];

  *(void *)(v11 + 72) = v37;
  id v38 = [v5 bottomAnchor];
  id v39 = sub_100021644();
  id v40 = [v39 bottomAnchor];

  id v41 = [v38 constraintEqualToAnchor:v40 constant:-12.0];
  *(void *)(v11 + 80) = v41;
  sub_10005EAE0();
  sub_100007F60(0, (unint64_t *)&qword_100084D70);
  Class isa = sub_10005EAA0().super.isa;
  swift_bridgeObjectRelease();
  [v42 activateConstraints:isa];
}

id sub_100021338(char a1)
{
  v11.receiver = v1;
  v11.super_class = (Class)type metadata accessor for SidebarPopover();
  [super viewWillAppear:a1 & 1];
  id result = [v1 view];
  if (result)
  {
    unsigned int v6 = result;
    LODWORD(v4) = 1144750080;
    LODWORD(v5) = 1112014848;
    [result systemLayoutSizeFittingSize:180.0 withHorizontalFittingPriority:UILayoutFittingCompressedSize.height verticalFittingPriority:v4, v5];
    double v8 = v7;
    double v10 = v9;

    return [v1 setPreferredContentSize:v8, v10];
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100021450()
{
}

id sub_1000214A8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SidebarPopover();
  return [super dealloc];
}

uint64_t type metadata accessor for SidebarPopover()
{
  return self;
}

id sub_10002154C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  NSString v5 = sub_10005E8F0();
  swift_bridgeObjectRelease();
  if (a3)
  {
    type metadata accessor for Key(0);
    sub_1000215F4();
    v6.super.Class isa = sub_10005E870().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v6.super.Class isa = 0;
  }
  id v7 = [v3 initWithString:v5 attributes:v6.super.isa];

  return v7;
}

unint64_t sub_1000215F4()
{
  unint64_t result = qword_100083CF0;
  if (!qword_100083CF0)
  {
    type metadata accessor for Key(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100083CF0);
  }
  return result;
}

id sub_100021644()
{
  id v3 = *(const char **)(v1 + 992);
  return [v0 v3];
}

id sub_10002165C(uint64_t a1, const char *a2)
{
  return [v2 a2:v3];
}

void type metadata accessor for Sidebar()
{
}

uint64_t sub_100021680(uint64_t a1)
{
  return sub_10001D7F4(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
}

uint64_t sub_100021694(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_10001D79C(*(void *)a2, v4, v5, v6, v7);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  return a1;
}

uint64_t sub_1000216F8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_10001D79C(*(void *)a2, v4, v5, v6, v7);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  char v12 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v7;
  sub_10001D7F4(v8, v9, v10, v11, v12);
  return a1;
}

__n128 sub_10002176C(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_100021780(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  char v9 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v3;
  sub_10001D7F4(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t sub_1000217CC(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFE && *(unsigned char *)(a1 + 33))
    {
      int v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
      if (v3 <= 2) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_10002180C(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 32) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_100021854(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 32) <= 1u) {
    return *(unsigned __int8 *)(a1 + 32);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_10002186C(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)__n128 result = a2 - 2;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 2;
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
  }
  *(unsigned char *)(result + 32) = a2;
  return result;
}

void type metadata accessor for Sidebar.Identifier()
{
}

uint64_t sub_100021894(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v2 = 0;
    unsigned int v3 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v5 = *v3++;
      uint64_t v4 = v5;
      if ((v5 & ~v2) == 0) {
        uint64_t v4 = 0;
      }
      v2 |= v4;
      --v1;
    }
    while (v1);
  }
  else
  {
    uint64_t v2 = 0;
  }
  swift_bridgeObjectRelease();
  return v2;
}

void sub_1000218E8(uint64_t a1, Swift::UInt a2)
{
}

uint64_t sub_100021910(uint64_t a1, char a2)
{
  sub_10000963C(a2);
  sub_10005E980();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100021964()
{
  uint64_t v1 = v0;
  sub_10001D740(v0, (uint64_t)v14);
  uint64_t v2 = v14[0];
  uint64_t v3 = v14[1];
  uint64_t v4 = v14[2];
  uint64_t v5 = v14[3];
  sub_10001D740(v1, (uint64_t)v15);
  if (v16)
  {
    if (v16 == 1)
    {
      BOOL v6 = v2 == 8 && v3 == 6;
      if (!v6 || ((uint64_t v1 = 1868852853, v4) || v5 != 0xE000000000000000) && (sub_100022AB4() & 1) == 0) {
        sub_100022A54();
      }
    }
    else
    {
      sub_100022AD8();
      if (v11)
      {
        uint64_t v12 = v10 | v9;
        if (v8 != 1 || v12)
        {
          if (v8 == 2 && v12 == 0) {
            return 0x6B636F44776F6873;
          }
          else {
            return 0x756E654D776F6873;
          }
        }
        else
        {
          return 0x6279654B776F6873;
        }
      }
      else
      {
        sub_100022A98();
      }
    }
  }
  else if (v15[0])
  {
    return 0x7466696873;
  }
  else
  {
    uint64_t v7 = 7630959;
    if ((v15[0] & 4) == 0) {
      uint64_t v7 = ((uint64_t)(v15[0] << 60) >> 63) & 0x646D63;
    }
    if ((v15[0] & 2) != 0) {
      return 1819440227;
    }
    else {
      return v7;
    }
  }
  return v1;
}

uint64_t sub_100021B08()
{
  uint64_t v1 = v0;
  sub_10001D740(v0, (uint64_t)v14);
  uint64_t v2 = v14[0];
  uint64_t v3 = v14[1];
  uint64_t v4 = v14[2];
  uint64_t v5 = v14[3];
  sub_10001D740(v1, (uint64_t)v15);
  if (v16)
  {
    if (v16 == 1)
    {
      if (v2 == 8 && v3 == 6)
      {
        uint64_t v1 = 1868852853;
        if (!v4 && v5 == 0xE000000000000000) {
          return v1;
        }
        if (sub_100022AB4()) {
          return v1;
        }
      }
    }
    else
    {
      sub_100022AD8();
      if (!v11)
      {
        sub_100022A98();
        return v1;
      }
      uint64_t v12 = v10 | v9;
      if (v8 != 1 || v12)
      {
        if (v8 == 2 && v12 == 0) {
          return 1801678692;
        }
        else {
          return 0x726142756E656DLL;
        }
      }
    }
    sub_100022A54();
    return v1;
  }
  if (v15[0]) {
    return 0x646F4D7466696873;
  }
  uint64_t v7 = 0x6669646F4D74706FLL;
  if ((v15[0] & 4) == 0) {
    uint64_t v7 = ((uint64_t)(v15[0] << 60) >> 63) & 0x6669646F4D646D63;
  }
  if ((v15[0] & 2) != 0) {
    return 0x69646F4D6C727463;
  }
  else {
    return v7;
  }
}

uint64_t sub_100021CC0()
{
  sub_10001D740(v0, (uint64_t)&v5);
  if (v6)
  {
    if (v6 == 1)
    {
      sub_100007D1C(&qword_100084728);
      uint64_t inited = swift_initStackObject();
      sub_100022AF0((__n128 *)inited, (__n128)xmmword_100064390);
      *(void *)(inited + 48) = sub_10005E8F0();
      *(void *)(inited + 56) = 6582125;
      *(void *)(inited + 64) = 0xE300000000000000;
      *(NSNumber *)(inited + 72) = sub_10005EC00();
      *(void *)(inited + 80) = 7955819;
      *(void *)(inited + 88) = 0xE300000000000000;
      *(NSNumber *)(inited + 96) = sub_10005EE00();
      *(void *)(inited + 104) = 7500915;
      *(void *)(inited + 112) = 0xE300000000000000;
      *(void *)(inited + 120) = sub_10005E8F0();
    }
    else
    {
      sub_100007D1C(&qword_100084728);
      uint64_t v3 = (__n128 *)swift_initStackObject();
      sub_100022A88(v3, (__n128)xmmword_100064590);
      v3[3].n128_u64[0] = (unint64_t)sub_10005E8F0();
    }
  }
  else
  {
    sub_100007D1C(&qword_100084728);
    uint64_t v2 = swift_initStackObject();
    sub_100022AF0((__n128 *)v2, (__n128)xmmword_1000643A0);
    *(void *)(v2 + 48) = sub_10005E8F0();
    *(void *)(v2 + 56) = 6582125;
    *(void *)(v2 + 64) = 0xE300000000000000;
    *(NSNumber *)(v2 + 72) = sub_10005EC00();
  }
  return sub_10005E890();
}

void sub_100021F58()
{
  sub_10001D740(v0, (uint64_t)&v5);
  Swift::UInt v1 = v5;
  if (v9)
  {
    if (v9 == 1)
    {
      Swift::UInt v2 = v6;
      sub_10005F1D0(1uLL);
      sub_10005F1D0(v1);
      sub_10005F1D0(v2);
      sub_10005E980();
      return;
    }
    if (v7 | v8 | v5 | v6)
    {
      Swift::UInt v4 = v7 | v8 | v6;
      if (v5 != 1 || v4)
      {
        if (v5 != 2 || v4) {
          Swift::UInt v3 = 5;
        }
        else {
          Swift::UInt v3 = 4;
        }
      }
      else
      {
        Swift::UInt v3 = 3;
      }
    }
    else
    {
      Swift::UInt v3 = 2;
    }
  }
  else
  {
    sub_10005F1D0(0);
    Swift::UInt v3 = v1;
  }
  sub_10005F1D0(v3);
}

uint64_t sub_10002204C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_10001D740(a1, (uint64_t)&v17);
  uint64_t v4 = v17;
  if (!v21)
  {
    sub_10001D740(a2, (uint64_t)&v14);
    if (!v16)
    {
      char v10 = v4 == v14.i64[0];
      return v10 & 1;
    }
    goto LABEL_15;
  }
  if (v21 != 1)
  {
    if (v19 | v20 | v17 | v18)
    {
      uint64_t v12 = v19 | v20 | v18;
      if (v17 != 1 || v12)
      {
        if (v17 != 2 || v12)
        {
          sub_100022A68(v3, (uint64_t)&v14);
          if (!v8 || v14.i64[0] != 3) {
            goto LABEL_15;
          }
        }
        else
        {
          sub_100022A68(v3, (uint64_t)&v14);
          if (!v8 || v14.i64[0] != 2) {
            goto LABEL_15;
          }
        }
      }
      else
      {
        sub_100022A68(v3, (uint64_t)&v14);
        if (!v8 || v14.i64[0] != 1) {
          goto LABEL_15;
        }
      }
      if (!(v15.i64[0] | v15.i64[1] | v14.i64[1])) {
        goto LABEL_39;
      }
    }
    else
    {
      sub_100022A68(v3, (uint64_t)&v14);
      if (v8)
      {
        int8x16_t v13 = vorrq_s8(v14, v15);
        if (!*(void *)&vorr_s8(*(int8x8_t *)v13.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v13, v13, 8uLL))) {
          goto LABEL_39;
        }
      }
    }
LABEL_15:
    char v10 = 0;
    return v10 & 1;
  }
  uint64_t v6 = v18;
  uint64_t v5 = v19;
  uint64_t v7 = v20;
  sub_10001D740(a2, (uint64_t)&v14);
  if (v16 != 1) {
    goto LABEL_15;
  }
  BOOL v8 = v4 == v14.i64[0] && v6 == v14.i64[1];
  if (!v8) {
    goto LABEL_15;
  }
  if (v5 == v15.i64[0] && v7 == v15.i64[1])
  {
LABEL_39:
    char v10 = 1;
    return v10 & 1;
  }
  char v10 = sub_10005F140();
  return v10 & 1;
}

Swift::Int sub_1000221E8()
{
  return sub_10005F200();
}

Swift::Int sub_100022228()
{
  sub_10001D740(v0, (uint64_t)v2);
  return sub_1000221E8();
}

void sub_100022260()
{
  sub_10001D740(v0, (uint64_t)v1);
  sub_100021F58();
}

Swift::Int sub_1000222A0()
{
  sub_10001D740(v0, (uint64_t)v2);
  sub_10005F1C0();
  sub_100021F58();
  return sub_10005F200();
}

uint64_t sub_1000222F4(uint64_t a1, uint64_t a2)
{
  sub_10001D740(a1, (uint64_t)v4);
  sub_10001D740(a2, (uint64_t)v5);
  return sub_10002204C((uint64_t)v4, (uint64_t)v5) & 1;
}

unint64_t sub_100022344()
{
  unint64_t result = qword_100084720;
  if (!qword_100084720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100084720);
  }
  return result;
}

uint64_t sub_100022390(char a1)
{
  if ((a1 & 1) == 0)
  {
    Swift::UInt v2 = (char *)_swiftEmptyArrayStorage;
    if ((a1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_7;
  }
  Swift::UInt v2 = sub_10000A84C(0, 1, 1, (uint64_t)_swiftEmptyArrayStorage);
  unint64_t v4 = *((void *)v2 + 2);
  unint64_t v3 = *((void *)v2 + 3);
  if (v4 >= v3 >> 1) {
    Swift::UInt v2 = sub_100022A0C(v3);
  }
  *((void *)v2 + 2) = v4 + 1;
  uint64_t v5 = &v2[16 * v4];
  *((void *)v5 + 4) = 0x7466696873;
  *((void *)v5 + 5) = 0xE500000000000000;
  if ((a1 & 2) != 0)
  {
LABEL_7:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      Swift::UInt v2 = sub_100022A30();
    }
    unint64_t v7 = *((void *)v2 + 2);
    unint64_t v6 = *((void *)v2 + 3);
    if (v7 >= v6 >> 1) {
      Swift::UInt v2 = sub_100022A0C(v6);
    }
    *((void *)v2 + 2) = v7 + 1;
    BOOL v8 = &v2[16 * v7];
    *((void *)v8 + 4) = 0x6C6F72746E6F63;
    *((void *)v8 + 5) = 0xE700000000000000;
  }
LABEL_12:
  if ((a1 & 4) == 0)
  {
    if ((a1 & 8) == 0) {
      goto LABEL_14;
    }
LABEL_21:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      Swift::UInt v2 = sub_100022A30();
    }
    unint64_t v14 = *((void *)v2 + 2);
    unint64_t v13 = *((void *)v2 + 3);
    if (v14 >= v13 >> 1) {
      Swift::UInt v2 = sub_10000A84C((char *)(v13 > 1), v14 + 1, 1, (uint64_t)v2);
    }
    *((void *)v2 + 2) = v14 + 1;
    int8x16_t v15 = &v2[16 * v14];
    *((void *)v15 + 4) = 0x646E616D6D6F63;
    *((void *)v15 + 5) = 0xE700000000000000;
    goto LABEL_26;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    Swift::UInt v2 = sub_100022A30();
  }
  unint64_t v11 = *((void *)v2 + 2);
  unint64_t v10 = *((void *)v2 + 3);
  if (v11 >= v10 >> 1) {
    Swift::UInt v2 = sub_100022A0C(v10);
  }
  *((void *)v2 + 2) = v11 + 1;
  uint64_t v12 = &v2[16 * v11];
  *((void *)v12 + 4) = 0x6E6F6974706FLL;
  *((void *)v12 + 5) = 0xE600000000000000;
  if ((a1 & 8) != 0) {
    goto LABEL_21;
  }
LABEL_14:
  if (*((void *)v2 + 2))
  {
LABEL_26:
    sub_100007D1C((uint64_t *)&unk_100084420);
    sub_1000229B8();
    uint64_t v9 = sub_10005E8A0();
    swift_bridgeObjectRelease();
    return v9;
  }
  swift_bridgeObjectRelease();
  return 0;
}

void *sub_1000225A8@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

Swift::Int sub_1000225B4()
{
  return sub_10000A2F4(*v0);
}

void sub_1000225BC(uint64_t a1)
{
  sub_1000218E8(a1, *v1);
}

Swift::Int sub_1000225C4(uint64_t a1)
{
  return sub_10002EC18(a1, *v1);
}

uint64_t sub_1000225CC()
{
  return sub_100022390(*v0);
}

uint64_t sub_1000225D4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = variable initialization expression of VideoStream.session();
  *a1 = result;
  return result;
}

BOOL sub_1000225FC(uint64_t *a1)
{
  return sub_10001984C(*a1, *v1);
}

uint64_t sub_100022608@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_100022638(*a1, *v2);
  *a2 = result;
  return result;
}

uint64_t sub_100022638(uint64_t a1, uint64_t a2)
{
  return a2 | a1;
}

uint64_t sub_100022640@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_10001982C(*a1, *v2);
  *a2 = result;
  return result;
}

uint64_t sub_100022670@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1000226A0(*a1, *v2);
  *a2 = result;
  return result;
}

uint64_t sub_1000226A0(uint64_t a1, uint64_t a2)
{
  return a2 ^ a1;
}

BOOL sub_1000226A8(void *a1, uint64_t *a2)
{
  return sub_10003E270(a1, *a2);
}

uint64_t sub_1000226B0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1000226E4(*a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t sub_1000226E4(uint64_t a1)
{
  uint64_t result = *v1 & a1;
  if (result) {
    *v1 &= ~a1;
  }
  return result;
}

uint64_t sub_100022708@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_10002273C(*a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t sub_10002273C(uint64_t a1)
{
  uint64_t v2 = *v1;
  *v1 |= a1;
  return v2 & a1;
}

uint64_t sub_100022754(uint64_t *a1)
{
  return sub_10003E29C(*a1);
}

uint64_t sub_10002275C(uint64_t *a1)
{
  return sub_100019830(*a1);
}

uint64_t sub_100022764(uint64_t *a1)
{
  return sub_10002276C(*a1);
}

uint64_t sub_10002276C(uint64_t result)
{
  *v1 ^= result;
  return result;
}

uint64_t sub_10002277C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1000227AC(*a1, *v2);
  *a2 = result;
  return result;
}

uint64_t sub_1000227AC(uint64_t a1, uint64_t a2)
{
  return a2 & ~a1;
}

BOOL sub_1000227B4(uint64_t *a1)
{
  return sub_100019840(*a1, *v1);
}

BOOL sub_1000227C0(uint64_t *a1)
{
  return sub_1000227CC(*a1, *v1);
}

BOOL sub_1000227CC(uint64_t a1, uint64_t a2)
{
  return (a2 & a1) == 0;
}

BOOL sub_1000227D8()
{
  return sub_1000227E0(*v0);
}

BOOL sub_1000227E0(uint64_t a1)
{
  return a1 == 0;
}

uint64_t sub_1000227EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return SetAlgebra.init<A>(_:)(a1, a4, a2, a5, a3);
}

uint64_t sub_100022804(uint64_t *a1)
{
  return sub_10002280C(*a1);
}

uint64_t sub_10002280C(uint64_t result)
{
  *v1 &= ~result;
  return result;
}

void *sub_10002281C@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

void sub_10002282C(void *a1@<X8>)
{
  *a1 = *v1;
}

BOOL sub_100022838(uint64_t *a1, uint64_t *a2)
{
  return static HostTime.__derived_struct_equals(_:_:)(*a1, *a2);
}

uint64_t sub_100022844@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_100021894(a1);
  *a2 = result;
  return result;
}

void type metadata accessor for Sidebar.Modifiers()
{
}

unint64_t sub_10002287C()
{
  unint64_t result = qword_100084730;
  if (!qword_100084730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100084730);
  }
  return result;
}

unint64_t sub_1000228CC()
{
  unint64_t result = qword_100084738;
  if (!qword_100084738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100084738);
  }
  return result;
}

unint64_t sub_10002291C()
{
  unint64_t result = qword_100084740;
  if (!qword_100084740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100084740);
  }
  return result;
}

unint64_t sub_10002296C()
{
  unint64_t result = qword_100084748;
  if (!qword_100084748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100084748);
  }
  return result;
}

unint64_t sub_1000229B8()
{
  unint64_t result = qword_100084750;
  if (!qword_100084750)
  {
    sub_100007D84((uint64_t *)&unk_100084420);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100084750);
  }
  return result;
}

char *sub_100022A0C@<X0>(unint64_t a1@<X8>)
{
  return sub_10000A84C((char *)(a1 > 1), v2, 1, v1);
}

char *sub_100022A30()
{
  int64_t v2 = *(void *)(v0 + 16) + 1;
  return sub_10000A84C(0, v2, 1, v0);
}

uint64_t sub_100022A68(uint64_t a1, uint64_t a2)
{
  return sub_10001D740(v2, a2);
}

__n128 *sub_100022A88(__n128 *result, __n128 a2)
{
  result[1] = a2;
  result[2].n128_u64[0] = v2;
  result[2].n128_u64[1] = 0xE400000000000000;
  return result;
}

uint64_t sub_100022AB4()
{
  return sub_10005F140();
}

__n128 *sub_100022AF0(__n128 *result, __n128 a2)
{
  result[1] = a2;
  result[2].n128_u64[0] = 1701869940;
  result[2].n128_u64[1] = 0xE400000000000000;
  return result;
}

id sub_100022B08(uint64_t a1, uint64_t a2)
{
  id v4 = [(id)swift_getObjCClassFromMetadata() buttonWithType:0];
  sub_1000232D0(a1, a2, 0, v4);
  sub_100022D08();

  return v4;
}

id sub_100022B7C()
{
  id result = [objc_allocWithZone((Class)UIColor) initWithWhite:1.0 alpha:0.25];
  qword_100088FD0 = (uint64_t)result;
  return result;
}

void *sub_100022BB8(CGFloat a1, CGFloat a2)
{
  if ([v2 isHidden]) {
    return 0;
  }
  if (![v2 isUserInteractionEnabled]) {
    return 0;
  }
  [v2 alpha];
  if (v5 == 0.0) {
    return 0;
  }
  [v2 bounds];
  double v7 = 100.0 - v6;
  double v8 = (100.0 - v6) * -0.5;
  [v2 bounds];
  double v13 = v7 > 0.0 ? v8 : -0.0;
  CGRect v17 = CGRectInset(*(CGRect *)&v9, 0.0, v13);
  v16.CGFloat x = a1;
  v16.CGFloat y = a2;
  if (!CGRectContainsPoint(v17, v16)) {
    return 0;
  }
  id v14 = v2;
  return v2;
}

void sub_100022D08()
{
  [v0 setContentEdgeInsets:0.0, 8.0, 0.0, 8.0];
  if (qword_100083B60 != -1) {
    swift_once();
  }
  [v0 setBackgroundColor:qword_100088FD0];
  id v1 = [self whiteColor];
  [v0 setTintColor:v1];

  id v2 = [v0 layer];
  [v2 setMasksToBounds:1];
  [v2 setCornerRadius:6.0];
}

id sub_100022EF8(SEL *a1)
{
  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for DisplayAlertButton();
  return [super a1];
}

void sub_100022F90(char a1, SEL *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for DisplayAlertButton();
  [super setValue:a1 & 1];
  double v5 = self;
  id v6 = v2;
  [v5 begin];
  [v5 setDisableActions:1];
  sub_100023030();
  [v5 commit];
}

void sub_100023030()
{
  unsigned __int8 v1 = [v0 isSelected];
  unsigned __int8 v2 = [v0 isHighlighted];
  unsigned __int8 v3 = v2;
  if (v1)
  {
    id v4 = objc_allocWithZone((Class)UIColor);
    if (v3) {
      double v5 = 0.623529412;
    }
    else {
      double v5 = 0.501960784;
    }
    id v6 = [v4 initWithWhite:v5 alpha:1.0];
    goto LABEL_8;
  }
  if (v2)
  {
    id v6 = [objc_allocWithZone((Class)UIColor) initWithWhite:0.392156863 alpha:1.0];
LABEL_8:
    id v8 = v6;
    [v0 setBackgroundColor:v6];

    return;
  }
  if (qword_100083B60 != -1) {
    swift_once();
  }
  uint64_t v7 = qword_100088FD0;

  [v0 setBackgroundColor:v7];
}

id sub_100023174(double a1, double a2, double a3, double a4)
{
  v10.receiver = v4;
  v10.super_class = (Class)type metadata accessor for DisplayAlertButton();
  return [super initWithFrame:a1, a2, a3, a4];
}

id sub_1000231FC(void *a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for DisplayAlertButton();
  [super initWithCoder:a1];

  return v3;
}

id sub_100023274()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DisplayAlertButton();
  return [super dealloc];
}

uint64_t type metadata accessor for DisplayAlertButton()
{
  return self;
}

void sub_1000232D0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  NSString v6 = sub_10005E8F0();
  swift_bridgeObjectRelease();
  [a4 setTitle:v6 forState:a3];
}

uint64_t sub_100023344(uint64_t a1)
{
  memset(&v7, 0, sizeof(v7));
  pthread_attr_init(&v7);
  sched_param v6 = 0;
  pthread_attr_setschedpolicy(&v7, 4);
  pthread_attr_getschedparam(&v7, &v6);
  if (a1 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
LABEL_5:
    __break(1u);
  }
  if (a1 > 0x7FFFFFFF) {
    goto LABEL_5;
  }
  v6.sched_prioritCGFloat y = a1;
  pthread_attr_setschedparam(&v7, &v6);
  aBlock[4] = sub_100023558;
  void aBlock[5] = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10000C5B0;
  void aBlock[3] = &unk_100077530;
  objc_super v2 = _Block_copy(aBlock);
  uint64_t v3 = dispatch_pthread_root_queue_create();
  _Block_release(v2);
  pthread_attr_destroy(&v7);
  return v3;
}

uint64_t sub_10002348C(uint64_t a1)
{
  kern_return_t v5;
  integer_t v7[2];
  _DWORD v8[4];

  mach_port_t v2 = mach_host_self();
  sub_100023DC8();
  sub_100023884(v3, v4, v2);
  if (a1 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
LABEL_5:
    __break(1u);
  }
  if (a1 > 0x7FFFFFFF) {
    goto LABEL_5;
  }
  v7[0] = a1;
  v7[1] = v8[3];
  sub_100023B34(v7, (uint64_t)v8);
  objc_super v5 = mach_port_deallocate(mach_task_self_, v2);
  return __logMachError(_:)(v5);
}

uint64_t sub_100023558()
{
  sub_100007F60(0, &qword_100083F38);
  sub_1000235A4();
  pthread_set_fixedpriority_self();

  return pthread_setname_np("com.apple.sidecar.root-queue.thread");
}

void sub_1000235A4()
{
  sub_100023DC8();
  sub_100023608(v0, v1);
}

void sub_100023608(integer_t *a1, uint64_t a2)
{
  kern_return_t v9;
  int v10;
  id v11;
  uint64_t v12;
  uint64_t v13;

  uint64_t v4 = sub_10005E750();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  pthread_attr_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
  {
    __break(1u);
LABEL_8:
    sub_10005F040();
    __break(1u);
    return;
  }
  uint64_t v8 = a2 - (void)a1;
  if (a2 - (uint64_t)a1 <= -4 || (unint64_t)(v8 / 4) >> 32) {
    goto LABEL_8;
  }
  uint64_t v9 = task_policy_set(mach_task_self_, 8u, a1, v8 / 4);
  if (v9)
  {
    objc_super v10 = v9;
    sub_100007F60(0, (unint64_t *)&qword_100084108);
    unint64_t v11 = sub_10002E6D0(v10, 0, 0);
    uint64_t v12 = sub_10005E740();
    __chkstk_darwin(v12);
    sub_10002E180((uint64_t (*)(void))sub_100023868, 0, (void (*)(void))sub_10000FA6C);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

unint64_t sub_100023868()
{
  return 0xD000000000000021;
}

void sub_100023884(integer_t *a1, uint64_t a2, host_t a3)
{
  kern_return_t v10;
  int v11;
  id v12;
  uint64_t v13;
  uint64_t v14;

  uint64_t v6 = sub_10005E750();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1) {
    __break(1u);
  }
  if (a2 - (uint64_t)a1 <= -4 || (unint64_t)((a2 - (uint64_t)a1) / 4) >> 32)
  {
    sub_10005F040();
    __break(1u);
  }
  else
  {
    HIDWORD(v14) = (a2 - (uint64_t)a1) / 4;
    objc_super v10 = host_info(a3, 3, a1, (mach_msg_type_number_t *)&v14 + 1);
    if (v10)
    {
      unint64_t v11 = v10;
      sub_100007F60(0, (unint64_t *)&qword_100084108);
      uint64_t v12 = sub_10002E6D0(v11, 0, 0);
      double v13 = sub_10005E740();
      __chkstk_darwin(v13);
      sub_10002E180((uint64_t (*)(void))sub_100023B18, 0, (void (*)(void))sub_10000FAE8);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }
  }
}

unint64_t sub_100023B18()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_100023B34(integer_t *a1, uint64_t a2)
{
  kern_return_t v11;
  int v12;
  id v13;
  uint64_t v14;
  kern_return_t v15;
  uint64_t result;
  uint64_t v17;

  uint64_t v4 = sub_10005E750();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
  {
    __break(1u);
LABEL_8:
    id result = sub_10005F040();
    __break(1u);
    return result;
  }
  uint64_t v8 = a2 - (void)a1;
  if (a2 - (uint64_t)a1 <= -4) {
    goto LABEL_8;
  }
  uint64_t v9 = v8 / 4;
  if ((unint64_t)(v8 / 4) >> 32) {
    goto LABEL_8;
  }
  thread_act_t v10 = mach_thread_self();
  unint64_t v11 = thread_policy(v10, 2, a1, v9, 1);
  if (v11)
  {
    uint64_t v12 = v11;
    sub_100007F60(0, (unint64_t *)&qword_100084108);
    double v13 = sub_10002E6D0(v12, 0, 0);
    id v14 = sub_10005E740();
    __chkstk_darwin(v14);
    sub_10002E180((uint64_t (*)(void))sub_100023B18, 0, (void (*)(void))sub_10000FAE8);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  int8x16_t v15 = mach_port_deallocate(mach_task_self_, v10);
  return __logMachError(_:)(v15);
}

uint64_t sub_100023DB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100023DC0()
{
  return swift_release();
}

ValueMetadata *type metadata accessor for Socket()
{
  return &type metadata for Socket;
}

uint64_t sub_100023DEC()
{
  unsigned int v1 = *(_DWORD *)(v0 + 24);
  if (*(unsigned char *)(v0 + 1) != 30 || v1 == 0) {
    return 0;
  }
  uint64_t v4 = (char *)swift_slowAlloc();
  if (if_indextoname(v1, v4)) {
    uint64_t v3 = sub_10005E9D0();
  }
  else {
    uint64_t v3 = 0;
  }
  swift_slowDealloc();
  return v3;
}

uint64_t sub_100023EB4()
{
  int v1 = *(unsigned __int8 *)(v0 + 1);
  if (v1 == 30) {
    return sub_100024234(*(void *)(v0 + 8), *(void *)(v0 + 16));
  }
  if (v1 == 2) {
    return sub_100024180(*(_DWORD *)(v0 + 4));
  }
  return 0;
}

uint64_t sub_100023F30()
{
  int v1 = *(unsigned __int8 *)(v0 + 1);
  if (v1 == 30 || v1 == 2) {
    return __rev16(*(unsigned __int16 *)(v0 + 2));
  }
  else {
    return 0;
  }
}

unint64_t sub_100023FB4(unint64_t result)
{
  if ((result & 0x8000000000000000) != 0)
  {
    sub_100024628();
    sub_100024678();
    sub_10002E6DC(v1, v2, v3);
    return swift_willThrow();
  }
  else if (result >> 31)
  {
    __break(1u);
  }
  return result;
}

void *sub_10002401C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1000240E4(a1, (uint64_t (*)(uint64_t, uint64_t, int *))&getsockname, a2);
}

void *sub_100024080@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1000240E4(a1, (uint64_t (*)(uint64_t, uint64_t, int *))&getpeername, a2);
}

void *sub_1000240E4@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, int *)@<X1>, void *a3@<X8>)
{
  memset(v6, 0, sizeof(v6));
  id result = (void *)sub_10002444C((uint64_t)v6, 128, a1, a2);
  if (!v3) {
    return memcpy(a3, v6, 0x80uLL);
  }
  return result;
}

uint64_t sub_100024180(int a1)
{
  int v4 = a1;
  int v1 = (char *)swift_slowAlloc();
  if (inet_ntop(2, &v4, v1, 0x10u)) {
    uint64_t v2 = sub_10005E9D0();
  }
  else {
    uint64_t v2 = 0;
  }
  swift_slowDealloc();
  return v2;
}

uint64_t sub_100024234(uint64_t a1, uint64_t a2)
{
  v5[0] = a1;
  v5[1] = a2;
  uint64_t v2 = (char *)swift_slowAlloc();
  if (inet_ntop(30, v5, v2, 0x2Eu)) {
    uint64_t v3 = sub_10005E9D0();
  }
  else {
    uint64_t v3 = 0;
  }
  swift_slowDealloc();
  return v3;
}

const char *sub_1000242E8()
{
  v10[0].socklen_t sa_len = *v0;
  memcpy(&v10[0].sa_family, v0 + 1, 0x7FuLL);
  if (v10[0].sa_len) {
    socklen_t sa_len = v10[0].sa_len;
  }
  else {
    socklen_t sa_len = 128;
  }
  uint64_t v2 = (char *)swift_slowAlloc();
  uint64_t v3 = (char *)swift_slowAlloc();
  int v4 = getnameinfo(v10, sa_len, v2, 0x401u, v3, 0x20u, 26);
  if (!v4)
  {
    uint64_t v6 = sub_10005E9D0();
    uint64_t v7 = sub_10005E9D0();
    uint64_t v9 = v8;
    v11._uint64_t countAndFlagsBits = 58;
    v11._object = (void *)0xE100000000000000;
    sub_10005E9C0(v11);
    v12._uint64_t countAndFlagsBits = v7;
    v12._object = v9;
    sub_10005E9C0(v12);
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  id result = gai_strerror(v4);
  if (result)
  {
    uint64_t v6 = sub_10005E9D0();
LABEL_8:
    swift_slowDealloc();
    swift_slowDealloc();
    return (const char *)v6;
  }
  __break(1u);
  return result;
}

uint64_t sub_10002444C(uint64_t a1, int a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, int *))
{
  int v8 = a2;
  uint64_t result = a4(a3, a1, &v8);
  if (result)
  {
    sub_100024628();
    sub_10005E770();
    sub_100024678();
    sub_10002E6DC(v5, v6, v7);
    return swift_willThrow();
  }
  return result;
}

void sub_1000244FC(uint64_t a1, Swift::UInt32 a2)
{
}

BOOL static MachPort.== infix(_:_:)(int a1, int a2)
{
  return a1 == a2;
}

Swift::Int sub_100024530(Swift::UInt32 a1)
{
  return sub_10005F200();
}

Swift::Int sub_100024578()
{
  return sub_100024530(*v0);
}

void sub_100024580(uint64_t a1)
{
  sub_1000244FC(a1, *v1);
}

Swift::Int sub_100024588()
{
  Swift::UInt32 v1 = *v0;
  sub_10005F1C0();
  sub_10005F1F0(v1);
  return sub_10005F200();
}

BOOL sub_1000245CC(int *a1, int *a2)
{
  return static MachPort.== infix(_:_:)(*a1, *a2);
}

unint64_t sub_1000245DC()
{
  unint64_t result = qword_100084780;
  if (!qword_100084780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100084780);
  }
  return result;
}

unint64_t sub_100024628()
{
  unint64_t result = qword_100084108;
  if (!qword_100084108)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100084108);
  }
  return result;
}

ValueMetadata *type metadata accessor for Sockaddr()
{
  return &type metadata for Sockaddr;
}

{
  return &type metadata for Sockaddr;
}

uint64_t sub_10002468C(uint64_t result, uint64_t a2)
{
  uint64_t v3 = result;
  unint64_t v4 = 0;
  uint64_t v5 = *(void *)(result + 16);
  while (1)
  {
    if (v5 == v4)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (uint64_t)_swiftEmptyArrayStorage;
    }
    if (v4 >= *(void *)(v3 + 16)) {
      break;
    }
    unsigned __int8 v6 = *(unsigned char *)(v3 + v4++ + 32);
    unint64_t result = sub_100024838(v6, a2);
    if ((result & 1) == 0)
    {
      unint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0) {
        unint64_t result = (uint64_t)sub_100028558(0, _swiftEmptyArrayStorage[2] + 1, 1);
      }
      unint64_t v8 = _swiftEmptyArrayStorage[2];
      unint64_t v7 = _swiftEmptyArrayStorage[3];
      if (v8 >= v7 >> 1) {
        unint64_t result = (uint64_t)sub_100028558((char *)(v7 > 1), v8 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v8 + 1;
      *((unsigned char *)&_swiftEmptyArrayStorage[4] + v8) = v6;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_10002479C(uint64_t a1)
{
  sub_10000BBC4();
  uint64_t v2 = sub_10005EBF0();
  uint64_t v9 = v2;
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    for (uint64_t i = 0; i != v3; ++i)
    {
      uint64_t v5 = a1 + i;
      sub_100028770(&v8, *(unsigned __int8 *)(v5 + 32));
    }
    swift_bridgeObjectRelease();
    return v9;
  }
  else
  {
    uint64_t v6 = v2;
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t sub_100024838(unsigned __int8 a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)
    && (sub_10005F1C0(),
        sub_10000963C(a1),
        sub_10005E980(),
        swift_bridgeObjectRelease(),
        Swift::Int v4 = sub_10005F200(),
        uint64_t v5 = -1 << *(unsigned char *)(a2 + 32),
        unint64_t v6 = v4 & ~v5,
        ((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0))
  {
    uint64_t v7 = ~v5;
    uint64_t v8 = a1;
    while (1)
    {
      unint64_t v9 = 0xEA00000000007963;
      uint64_t v10 = 0x6E6574614C776F4CLL;
      switch(*(unsigned char *)(*(void *)(a2 + 48) + v6))
      {
        case 1:
          unsigned int v11 = 1115185485;
          goto LABEL_7;
        case 2:
          unsigned int v11 = 1114532173;
LABEL_7:
          uint64_t v10 = v11 | 0x6172746900000000;
          unint64_t v9 = 0xEA00000000006574;
          break;
        case 3:
          uint64_t v10 = 0x63756F54776F6873;
          uint64_t v12 = 1918984808;
          goto LABEL_24;
        case 4:
          uint64_t v10 = 0x7261426863756F74;
          uint64_t v13 = 7368532;
          goto LABEL_15;
        case 5:
          uint64_t v10 = 0x7261426863756F74;
          uint64_t v14 = 0x6E696772614DLL;
          goto LABEL_29;
        case 6:
          uint64_t v10 = 0x5472616365646953;
          unint64_t v9 = 0xEF636E7953656D69;
          break;
        case 7:
          unint64_t v9 = 0xE700000000000000;
          uint64_t v10 = 0x73746E65636572;
          break;
        case 8:
          uint64_t v10 = 0xD000000000000010;
          int8x16_t v15 = "TimeSync";
          goto LABEL_22;
        case 9:
          uint64_t v10 = 0x72754373776F6873;
          uint64_t v13 = 7499635;
LABEL_15:
          unint64_t v9 = v13 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
          break;
        case 0xA:
          uint64_t v10 = 0x5372616265646973;
          uint64_t v12 = 1853321064;
          goto LABEL_24;
        case 0xB:
          uint64_t v10 = 0x5272616265646973;
          uint64_t v12 = 1952999273;
          goto LABEL_24;
        case 0xC:
          uint64_t v10 = 0xD000000000000015;
          int8x16_t v15 = "ebarShown";
          goto LABEL_22;
        case 0xD:
          unint64_t v9 = 0xEA00000000007366;
          uint64_t v10 = 0x6572507465736572;
          break;
        case 0xE:
          uint64_t v10 = 0xD000000000000012;
          int8x16_t v15 = "tatus";
          goto LABEL_22;
        case 0xF:
          uint64_t v10 = 0xD000000000000015;
          int8x16_t v15 = "allowFingerTouches";
LABEL_22:
          unint64_t v9 = (unint64_t)v15 | 0x8000000000000000;
          break;
        case 0x10:
          uint64_t v10 = 0x5772616265646973;
          uint64_t v12 = 1752458345;
LABEL_24:
          unint64_t v9 = v12 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
          break;
        case 0x11:
          unint64_t v9 = 0x8000000100060E00;
          goto LABEL_27;
        case 0x12:
          unint64_t v9 = 0x8000000100060E20;
LABEL_27:
          uint64_t v10 = 0xD000000000000011;
          break;
        case 0x13:
          uint64_t v10 = 0x654B656C62616E65;
          uint64_t v14 = 0x6472616F6279;
LABEL_29:
          unint64_t v9 = v14 & 0xFFFFFFFFFFFFLL | 0xEE00000000000000;
          break;
        default:
          break;
      }
      uint64_t v16 = 0x6E6574614C776F4CLL;
      unint64_t v17 = 0xEA00000000007963;
      switch(v8)
      {
        case 1:
          unsigned int v18 = 1115185485;
          goto LABEL_33;
        case 2:
          unsigned int v18 = 1114532173;
LABEL_33:
          uint64_t v16 = v18 | 0x6172746900000000;
          unint64_t v17 = 0xEA00000000006574;
          break;
        case 3:
          uint64_t v16 = 0x63756F54776F6873;
          uint64_t v19 = 1918984808;
          goto LABEL_50;
        case 4:
          uint64_t v16 = 0x7261426863756F74;
          uint64_t v20 = 7368532;
          goto LABEL_41;
        case 5:
          uint64_t v16 = 0x7261426863756F74;
          uint64_t v21 = 0x6E696772614DLL;
          goto LABEL_55;
        case 6:
          uint64_t v16 = 0x5472616365646953;
          unint64_t v17 = 0xEF636E7953656D69;
          break;
        case 7:
          unint64_t v17 = 0xE700000000000000;
          uint64_t v16 = 0x73746E65636572;
          break;
        case 8:
          uint64_t v16 = 0xD000000000000010;
          id v22 = "TimeSync";
          goto LABEL_48;
        case 9:
          uint64_t v16 = 0x72754373776F6873;
          uint64_t v20 = 7499635;
LABEL_41:
          unint64_t v17 = v20 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
          break;
        case 10:
          uint64_t v16 = 0x5372616265646973;
          uint64_t v19 = 1853321064;
          goto LABEL_50;
        case 11:
          uint64_t v16 = 0x5272616265646973;
          uint64_t v19 = 1952999273;
          goto LABEL_50;
        case 12:
          uint64_t v16 = 0xD000000000000015;
          id v22 = "ebarShown";
          goto LABEL_48;
        case 13:
          unint64_t v17 = 0xEA00000000007366;
          uint64_t v16 = 0x6572507465736572;
          break;
        case 14:
          uint64_t v16 = 0xD000000000000012;
          id v22 = "tatus";
          goto LABEL_48;
        case 15:
          uint64_t v16 = 0xD000000000000015;
          id v22 = "allowFingerTouches";
LABEL_48:
          unint64_t v17 = (unint64_t)v22 | 0x8000000000000000;
          break;
        case 16:
          uint64_t v16 = 0x5772616265646973;
          uint64_t v19 = 1752458345;
LABEL_50:
          unint64_t v17 = v19 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
          break;
        case 17:
          unint64_t v17 = 0x8000000100060E00;
          goto LABEL_53;
        case 18:
          unint64_t v17 = 0x8000000100060E20;
LABEL_53:
          uint64_t v16 = 0xD000000000000011;
          break;
        case 19:
          uint64_t v16 = 0x654B656C62616E65;
          uint64_t v21 = 0x6472616F6279;
LABEL_55:
          unint64_t v17 = v21 & 0xFFFFFFFFFFFFLL | 0xEE00000000000000;
          break;
        default:
          break;
      }
      if (v10 == v16 && v9 == v17) {
        break;
      }
      char v24 = sub_10005F140();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v24 & 1) == 0)
      {
        unint64_t v6 = (v6 + 1) & v7;
        if ((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6)) {
          continue;
        }
      }
      return v24 & 1;
    }
    swift_bridgeObjectRelease_n();
    char v24 = 1;
  }
  else
  {
    char v24 = 0;
  }
  return v24 & 1;
}

uint64_t sub_100024E68(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)(v2 + OBJC_IVAR___DisplayViewController_delegate);
  void *v3 = a1;
  v3[1] = a2;
  return swift_unknownObjectRelease();
}

uint64_t sub_100024E84(uint64_t a1)
{
  return sub_10001A65C(a1, OBJC_IVAR___DisplayViewController_touchController);
}

uint64_t sub_100024E98(uint64_t a1)
{
  return sub_10001A65C(a1, OBJC_IVAR___DisplayViewController_displayViewPointerInteraction);
}

void sub_100024EA4()
{
  Swift::UInt32 v1 = v0;
  v28.receiver = v0;
  v28.super_class = (Class)type metadata accessor for DisplayViewController();
  [super viewDidLoad];
  id v2 = [v0 view];
  if (v2)
  {
    uint64_t v3 = v2;
    Swift::Int v4 = self;
    id v5 = [v4 blackColor];
    [v3 setBackgroundColor:v5];

    uint64_t v6 = OBJC_IVAR___DisplayViewController_displayView;
    id v7 = *(id *)&v1[OBJC_IVAR___DisplayViewController_displayView];
    id v8 = [v4 blackColor];
    [v7 setBackgroundColor:v8];

    [*(id *)&v1[v6] setTranslatesAutoresizingMaskIntoConstraints:0];
    [v3 addSubview:*(void *)&v1[v6]];
    unint64_t v9 = self;
    sub_100007D1C(&qword_1000843F0);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_100064520;
    id v11 = [*(id *)&v1[v6] leftAnchor];
    id v12 = [v3 leftAnchor];
    id v13 = sub_10002A69C();

    *(void *)(v10 + 32) = v13;
    id v14 = [*(id *)&v1[v6] rightAnchor];
    id v15 = [v3 rightAnchor];
    id v16 = sub_10002A69C();

    *(void *)(v10 + 40) = v16;
    id v17 = [*(id *)&v1[v6] topAnchor];
    id v18 = [v3 topAnchor];
    id v19 = sub_10002A69C();

    *(void *)(v10 + 48) = v19;
    id v20 = [*(id *)&v1[v6] bottomAnchor];
    id v21 = [v3 bottomAnchor];
    id v22 = sub_10002A69C();

    *(void *)(v10 + 56) = v22;
    sub_10005EAE0();
    sub_100007F60(0, (unint64_t *)&qword_100084D70);
    Class isa = sub_10005EAA0().super.isa;
    swift_bridgeObjectRelease();
    [v9 activateConstraints:isa];

    [v3 layoutIfNeeded];
    char v24 = *(void **)&v1[v6];
    id v25 = objc_allocWithZone((Class)type metadata accessor for TouchController());
    id v26 = sub_10003FE80(v24);
    sub_100024E84((uint64_t)v26);
    uint64_t v27 = *(void *)&v1[OBJC_IVAR___DisplayViewController_touchController];
    if (v27)
    {
      *(void *)(v27 + OBJC_IVAR____TtC17ContinuityDisplay15TouchController_delegate + 8) = &off_100077600;
      swift_unknownObjectWeakAssign();
    }
    sub_100024E98((uint64_t)[objc_allocWithZone((Class)UIPointerInteraction) initWithDelegate:v1]);
    if (*(void *)&v1[OBJC_IVAR___DisplayViewController_displayViewPointerInteraction])
    {
      [v1[v6] addInteraction:];

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

id sub_1000252D8()
{
  return *(id *)(v0 + OBJC_IVAR___DisplayViewController_displayView);
}

uint64_t sub_100025344(uint64_t a1)
{
  return sub_10001A65C(a1, OBJC_IVAR___DisplayViewController_displayView);
}

uint64_t sub_100025350()
{
  uint64_t v0 = sub_10005E750();
  sub_10002A4B4(v0, qword_100084790);
  sub_10002A1FC(v0, (uint64_t)qword_100084790);
  return sub_10005E730();
}

uint64_t sub_1000253C8(uint64_t a1)
{
  return sub_10001A65C(a1, OBJC_IVAR___DisplayViewController_session);
}

void sub_1000253D4(void *a1)
{
  uint64_t v2 = sub_10005E750();
  sub_100008DCC();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  id v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100083B68 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_10002A1FC(v2, (uint64_t)qword_100084790);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v8, v2);
  id v9 = objc_allocWithZone((Class)SidecarDisplayConfig);
  id v10 = a1;
  [v9 init];
  id v11 = objc_allocWithZone((Class)type metadata accessor for SidecarDisplaySession(0));
  SidecarDisplaySession.init(logger:request:config:)();
  id v13 = v12;
  id v14 = &v12[OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_delegate];
  swift_beginAccess();
  *((void *)v14 + 1) = &off_100077610;
  swift_unknownObjectWeakAssign();
  SidecarDisplaySession.accept()();
  id v15 = v13;
  sub_1000253C8((uint64_t)v13);
}

void sub_100025568(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)&v1[OBJC_IVAR___DisplayViewController_delegate];
  uint64_t v5 = (uint64_t *)(a1 + OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_settings);
  sub_10001A688();
  uint64_t v6 = *v5;
  v2[OBJC_IVAR___DisplayViewController_sessionConfiguring] = 1;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000276B0(a1);
  v2[OBJC_IVAR___DisplayViewController_receivedFirstFrame] = 0;
  v2[OBJC_IVAR___DisplayViewController_receivedConfigComplete] = 0;
  uint64_t v7 = swift_bridgeObjectRetain();
  LOBYTE(v5) = sub_10002E834(v7);
  swift_bridgeObjectRelease();
  double v8 = 0.0;
  if (v5)
  {
    if ((sub_10002E76C(v6) & 1) == 0
      || (v9 = swift_bridgeObjectRetain(), char v10 = sub_10002E7D0(v9), swift_bridgeObjectRelease(), (v10 & 1) != 0)
      || sub_10002A558())
    {
      sub_10000A4E4(16, v6);
      double v8 = v11;
    }
    else
    {
      double v8 = 78.0;
    }
  }
  swift_bridgeObjectRelease();
  if (v4)
  {
    swift_unknownObjectRetain();
    sub_100037964();
    double v13 = v12;
    double v15 = v14;
    swift_unknownObjectRelease();
    goto LABEL_10;
  }
  id v16 = [v2 view];
  if (v16)
  {
    id v17 = v16;
    [v16 bounds];
    double v13 = v18;
    double v15 = v19;

LABEL_10:
    if (v2[OBJC_IVAR___DisplayViewController_portrait]) {
      BOOL v20 = v15 < v13;
    }
    else {
      BOOL v20 = v13 < v15;
    }
    if (v20) {
      double v21 = v13;
    }
    else {
      double v21 = v15;
    }
    if (v20) {
      double v22 = v15;
    }
    else {
      double v22 = v13;
    }
    double v23 = ceil(v22 - v8);
    if ((~*(void *)&v23 & 0x7FF0000000000000) != 0)
    {
      if (v23 > -9.22337204e18)
      {
        if (v23 < 9.22337204e18)
        {
          double v24 = ceil(v21);
          if (v24 > -9.22337204e18)
          {
            if (v24 < 9.22337204e18)
            {
              if ((*(void *)&v24 & 0x7FF0000000000000) != 0x7FF0000000000000)
              {
                id v25 = *(void **)(a1 + OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_config);
                [v25 setScale:2.0];
                [v25 setSize:(double)(uint64_t)v23 (double)(uint64_t)v24];
                swift_unknownObjectRelease();
                return;
              }
              goto LABEL_32;
            }
LABEL_31:
            __break(1u);
LABEL_32:
            __break(1u);
            goto LABEL_33;
          }
LABEL_30:
          __break(1u);
          goto LABEL_31;
        }
LABEL_29:
        __break(1u);
        goto LABEL_30;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_29;
  }
LABEL_33:
  __break(1u);
}

void sub_1000257EC(uint64_t a1)
{
  uint64_t v3 = self;
  [v3 begin];
  [v3 setDisableActions:1];
  id v8 = [*(id *)(v1 + OBJC_IVAR___DisplayViewController_displayView) layer];
  sub_100010EF8(*(void **)(a1 + OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_config));
  if ((v5 & 1) == 0) {
    [v8 setContentsScale:(double)v4];
  }
  unint64_t v6 = (unint64_t)SidecarDisplaySession.videoSlot.getter();
  if ((v6 & 0x100000000) == 0)
  {
    unint64_t v7 = v6;
    [v8 setAllowsDisplayCompositing:1];
    [v8 setContents:[self objectForSlot:v7]];
    swift_unknownObjectRelease();
    [v8 setContentsGravity:kCAGravityBottomLeft];
  }
  [v3 commit];
  *(unsigned char *)(v1 + OBJC_IVAR___DisplayViewController_sessionConfiguring) = 0;
  sub_100005948(a1);
  if (*(void *)(v1 + OBJC_IVAR___DisplayViewController_delegate))
  {
    swift_unknownObjectRetain();
    sub_100038F10();

    swift_unknownObjectRelease();
  }
  else
  {
  }
}

void sub_1000259C0(int a1, id a2)
{
  id v3 = [a2 transport];
  uint64_t v4 = OBJC_IVAR___DisplayViewController_transport;
  *(void *)(v2 + OBJC_IVAR___DisplayViewController_transport) = v3;
  id v5 = SidecarDisplaySession.codec.getter();
  uint64_t v6 = *(void *)(v2 + v4);

  SidecarPowerLogDisplaySession(1, (uint64_t)v5, v6);
}

void sub_100025A2C()
{
  id v1 = SidecarDisplaySession.codec.getter();
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR___DisplayViewController_transport);

  SidecarPowerLogDisplaySession(0, (uint64_t)v1, v2);
}

uint64_t sub_100025A78(uint64_t a1, void *a2)
{
  return sub_1000059A0(a2);
}

uint64_t sub_100025AA8()
{
  return sub_100005AE0();
}

void sub_100025AD8()
{
  sub_10001A720();
  uint64_t v4 = v3;
  uint64_t v5 = sub_10005E7B0();
  sub_100008DCC();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  uint64_t v16 = sub_10001A7E8();
  sub_100008DCC();
  uint64_t v10 = v9;
  __chkstk_darwin(v11);
  sub_100008E04();
  sub_100007F60(0, (unint64_t *)&qword_100084110);
  double v12 = (void *)sub_10005EC90();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v0;
  *(void *)(v13 + 24) = v4;
  v17[4] = sub_10002A5CC;
  v17[5] = v13;
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 1107296256;
  v17[2] = sub_10000C5B0;
  v17[3] = &unk_1000777A0;
  double v14 = _Block_copy(v17);
  id v15 = v0;
  swift_errorRetain();
  swift_release();
  sub_10005E7D0();
  v17[0] = _swiftEmptyArrayStorage;
  sub_10002A46C((unint64_t *)&qword_1000848D0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100007D1C((uint64_t *)&unk_100083FD0);
  sub_10000ED5C();
  sub_10002A670();
  sub_10005ECB0();
  _Block_release(v14);

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v1, v5);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v2, v16);
  sub_10001A6F0();
}

uint64_t sub_100025CFC(uint64_t result, void *a2)
{
  if (*(void *)(result + OBJC_IVAR___DisplayViewController_delegate))
  {
    uint64_t v3 = result;
    swift_unknownObjectRetain();
    sub_100031710(v3, a2);
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_100025D70(uint64_t a1, unint64_t a2)
{
  if (!(a2 >> 62))
  {
    uint64_t v4 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4) {
      goto LABEL_3;
    }
LABEL_33:
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  if (!sub_10005F080()) {
    goto LABEL_33;
  }
LABEL_3:
  if ((a2 & 0xC000000000000001) != 0)
  {
    id v5 = (id)sub_10005EF70();
  }
  else
  {
    if (!*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    id v5 = *(id *)(a2 + 32);
  }
  id v14 = v5;
  swift_bridgeObjectRelease();
  id v6 = [v14 type];
  uint64_t v7 = sub_10005E920();
  uint64_t v9 = v8;

  BOOL v10 = v7 == 0x7073696464 && v9 == 0xE500000000000000;
  if (v10 || (sub_10002A6D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    sub_10002634C(v14);
LABEL_12:

    return;
  }
  BOOL v11 = v7 == 0x6E6F636572 && v9 == 0xE500000000000000;
  if (v11 || (sub_10002A6D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    sub_100027370(v14);
    goto LABEL_12;
  }
  if (v7 == 0x7073696476 && v9 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    goto LABEL_31;
  }
  char v13 = sub_10002A6D8();
  swift_bridgeObjectRelease();
  if (v13)
  {
LABEL_31:
    sub_100026494();
    goto LABEL_12;
  }
  if (!*(void *)(v2 + OBJC_IVAR___DisplayViewController_delegate)) {
    goto LABEL_12;
  }
  swift_unknownObjectRetain();
  sub_100037A44(v14);

  swift_unknownObjectRelease();
}

void sub_100025FAC()
{
  sub_10001A720();
  uint64_t v1 = v0;
  sub_10005E7B0();
  sub_100008DCC();
  __chkstk_darwin(v2);
  sub_10001A7E8();
  sub_100008DCC();
  __chkstk_darwin(v3);
  sub_100008E04();
  if (qword_100083B68 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_10005E750();
  sub_10002A1FC(v4, (uint64_t)qword_100084790);
  id v5 = sub_10005E720();
  os_log_type_t v6 = sub_10005EC50();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "=== Video Start ===", v7, 2u);
    swift_slowDealloc();
  }

  sub_100007F60(0, (unint64_t *)&qword_100084110);
  uint64_t v8 = (void *)sub_10005EC90();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v1;
  v16[4] = sub_10002A584;
  v16[5] = v9;
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 1107296256;
  v16[2] = sub_10000C5B0;
  v16[3] = &unk_100077750;
  BOOL v10 = _Block_copy(v16);
  id v11 = v1;
  swift_release();
  sub_10005E7D0();
  v16[0] = _swiftEmptyArrayStorage;
  sub_10002A46C((unint64_t *)&qword_1000848D0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100007D1C((uint64_t *)&unk_100083FD0);
  sub_10000ED5C();
  sub_10005EEE0();
  sub_10002A810();
  sub_10005ECB0();
  _Block_release(v10);

  uint64_t v12 = sub_10002A79C();
  v13(v12);
  uint64_t v14 = sub_10002A784();
  v15(v14);
  sub_10001A6F0();
}

void sub_100026268(uint64_t a1)
{
  *(unsigned char *)(a1 + OBJC_IVAR___DisplayViewController_receivedFirstFrame) = 1;
  sub_100026774();
}

BOOL sub_10002629C@<W0>(uint64_t a1@<X8>)
{
  BOOL result = sub_10002A558();
  uint64_t v3 = 0x402C000000000000;
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  if (result) {
    uint64_t v3 = 0;
  }
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = 0;
  *(unsigned char *)(a1 + 32) = 0;
  return result;
}

uint64_t sub_1000262D8(uint64_t a1, uint64_t a2)
{
  if (*(void *)(v2 + OBJC_IVAR___DisplayViewController_delegate))
  {
    swift_unknownObjectRetain();
    sub_100033104(v2, a2);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_10002634C(void *a1)
{
  if ([a1 objectValue])
  {
    sub_10005EEC0();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v5, 0, sizeof(v5));
  }
  sub_10002A324((uint64_t)v5, (uint64_t)&v6, (uint64_t *)&unk_100084130);
  if (!v7) {
    return sub_10002A414((uint64_t)&v6, (uint64_t *)&unk_100084130);
  }
  sub_100007D1C(&qword_1000843E0);
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0) {
    return result;
  }
  sub_1000106CC(v4, &v6);
  swift_bridgeObjectRelease();
  if (!v7) {
    return sub_10002A414((uint64_t)&v6, (uint64_t *)&unk_100084130);
  }
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    uint64_t v3 = *(void *)(v1 + OBJC_IVAR___DisplayViewController_delegate);
    if (v3)
    {
      *(unsigned char *)(v3 + OBJC_IVAR___DisplayMainViewController_dockShown) = v5[0];
      swift_unknownObjectRetain();
      sub_10002EEB0();
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

void sub_100026494()
{
  sub_10001A720();
  sub_10005E7B0();
  sub_100008DCC();
  __chkstk_darwin(v1);
  sub_10001A7E8();
  sub_100008DCC();
  __chkstk_darwin(v2);
  sub_100008E04();
  sub_100007F60(0, (unint64_t *)&qword_100084110);
  uint64_t v3 = (void *)sub_10005EC90();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v0;
  v11[4] = sub_10002A550;
  v11[5] = v4;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  v11[2] = sub_10000C5B0;
  v11[3] = &unk_100077700;
  id v5 = _Block_copy(v11);
  id v6 = v0;
  swift_release();
  sub_10005E7D0();
  v11[0] = _swiftEmptyArrayStorage;
  sub_10002A46C((unint64_t *)&qword_1000848D0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100007D1C((uint64_t *)&unk_100083FD0);
  sub_10000ED5C();
  sub_10002A670();
  sub_10002A810();
  sub_10005ECB0();
  _Block_release(v5);

  uint64_t v7 = sub_10002A79C();
  v8(v7);
  uint64_t v9 = sub_10002A784();
  v10(v9);
  sub_10001A6F0();
}

void sub_100026680(uint64_t a1)
{
  if (qword_100083B68 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10005E750();
  sub_10002A1FC(v2, (uint64_t)qword_100084790);
  uint64_t v3 = sub_10005E720();
  os_log_type_t v4 = sub_10005EC50();
  if (os_log_type_enabled(v3, v4))
  {
    id v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "=== Virtual Display Configuration Complete ===", v5, 2u);
    swift_slowDealloc();
  }

  *(unsigned char *)(a1 + OBJC_IVAR___DisplayViewController_receivedConfigComplete) = 1;
  sub_100026774();
}

void sub_100026774()
{
  sub_10001A720();
  uint64_t v3 = v0;
  uint64_t v4 = sub_10005E7B0();
  sub_100008DCC();
  uint64_t v61 = v5;
  __chkstk_darwin(v6);
  sub_10001A7E8();
  sub_100008DCC();
  uint64_t v59 = v8;
  uint64_t v60 = v7;
  __chkstk_darwin(v7);
  sub_100008E04();
  uint64_t v9 = sub_100007D1C((uint64_t *)&unk_1000843D0);
  uint64_t v10 = sub_10002A5F0(v9);
  uint64_t v58 = v11;
  uint64_t v13 = *(void *)(v12 + 64);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  id v17 = (char *)&v52 - v16;
  __chkstk_darwin(v18);
  BOOL v20 = (char *)&v52 - v19;
  sub_10005E800();
  sub_100008DCC();
  __chkstk_darwin(v21);
  double v23 = (char *)&v52 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  objc_super v28 = (char *)&v52 - v27;
  if (v3[OBJC_IVAR___DisplayViewController_receivedFirstFrame] == 1
    && v3[OBJC_IVAR___DisplayViewController_receivedConfigComplete] == 1)
  {
    uint64_t v53 = v1;
    uint64_t v56 = v4;
    uint64_t v29 = v25;
    uint64_t v30 = v26;
    sub_10005E7F0();
    sub_10005E840();
    id v31 = *(void (**)(char *, uint64_t))(v30 + 8);
    uint64_t v54 = v30 + 8;
    uint64_t v55 = v29;
    id v52 = v31;
    v31(v23, v29);
    uint64_t v32 = *(void *)&v3[OBJC_IVAR___DisplayViewController_session];
    if (v32)
    {
      uint64_t v33 = v32 + OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_uuid;
      sub_10001A688();
      uint64_t v34 = sub_10005E6D0();
      sub_10002A7B4();
      (*(void (**)(char *, uint64_t, uint64_t))(v35 + 16))(v20, v33, v34);
      uint64_t v36 = (uint64_t)v20;
      uint64_t v37 = 0;
    }
    else
    {
      uint64_t v34 = sub_10005E6D0();
      uint64_t v36 = (uint64_t)v20;
      uint64_t v37 = 1;
    }
    sub_10001A32C(v36, v37, 1, v34);
    sub_10002A194((uint64_t)v20, (uint64_t)v17);
    sub_10005E6D0();
    Class isa = 0;
    if (sub_10001A2B8((uint64_t)v17, 1, v34) != 1)
    {
      Class isa = sub_10005E680().super.isa;
      sub_10002A7B4();
      (*(void (**)(char *, uint64_t))(v39 + 8))(v17, v34);
    }
    uint64_t v57 = sub_100019BFC(isa);

    if (qword_100083B68 != -1) {
      swift_once();
    }
    uint64_t v40 = sub_10005E750();
    sub_10002A1FC(v40, (uint64_t)qword_100084790);
    id v41 = sub_10005E720();
    os_log_type_t v42 = sub_10005EC50();
    if (os_log_type_enabled(v41, v42))
    {
      id v43 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)id v43 = 134217984;
      v62[0] = v57;
      sub_10005EE10();
      _os_log_impl((void *)&_mh_execute_header, v41, v42, "=== Display Stream Ready (%lx) ===", v43, 0xCu);
      swift_slowDealloc();
    }

    sub_100007F60(0, (unint64_t *)&qword_100084110);
    id v44 = (void *)sub_10005EC90();
    sub_10002A194((uint64_t)v20, (uint64_t)v14);
    unint64_t v45 = (*(unsigned __int8 *)(v58 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
    unint64_t v46 = (v13 + v45 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v47 = swift_allocObject();
    sub_10002A324((uint64_t)v14, v47 + v45, (uint64_t *)&unk_1000843D0);
    *(void *)(v47 + v46) = v3;
    *(void *)(v47 + ((v46 + 15) & 0xFFFFFFFFFFFFFFF8)) = v57;
    v62[4] = sub_10002A384;
    v62[5] = v47;
    v62[0] = _NSConcreteStackBlock;
    v62[1] = 1107296256;
    v62[2] = sub_10000C5B0;
    v62[3] = &unk_1000776B0;
    id v48 = _Block_copy(v62);
    id v49 = v3;
    swift_release();
    sub_10005E7D0();
    v62[0] = _swiftEmptyArrayStorage;
    sub_10002A46C((unint64_t *)&qword_1000848D0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100007D1C((uint64_t *)&unk_100083FD0);
    sub_10000ED5C();
    uint64_t v50 = v53;
    uint64_t v51 = v56;
    sub_10005EEE0();
    sub_10005EC70();
    _Block_release(v48);

    (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v50, v51);
    (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v2, v60);
    sub_10002A414((uint64_t)v20, (uint64_t *)&unk_1000843D0);
    v52(v28, v55);
  }
  sub_10001A6F0();
}

void sub_100026D7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v41 = a3;
  uint64_t v5 = sub_10005E6D0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100007D1C((uint64_t *)&unk_100084D60);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100007D1C((uint64_t *)&unk_1000843D0);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  id v17 = (char *)&v40 - v16;
  __chkstk_darwin(v18);
  BOOL v20 = (char *)&v40 - v19;
  uint64_t v44 = a2;
  uint64_t v42 = OBJC_IVAR___DisplayViewController_session;
  uint64_t v21 = *(void *)(a2 + OBJC_IVAR___DisplayViewController_session);
  uint64_t v43 = v6;
  if (v21)
  {
    uint64_t v22 = v21 + OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_uuid;
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v20, v22, v5);
    uint64_t v23 = 0;
  }
  else
  {
    uint64_t v23 = 1;
  }
  sub_10001A32C((uint64_t)v20, v23, 1, v5);
  uint64_t v24 = (uint64_t)&v11[*(int *)(v9 + 48)];
  sub_10002A194(a1, (uint64_t)v11);
  sub_10002A194((uint64_t)v20, v24);
  if (sub_10001A2B8((uint64_t)v11, 1, v5) == 1)
  {
    sub_10002A414((uint64_t)v20, (uint64_t *)&unk_1000843D0);
    if (sub_10001A2B8(v24, 1, v5) == 1)
    {
      sub_10002A414((uint64_t)v11, (uint64_t *)&unk_1000843D0);
LABEL_14:
      uint64_t v32 = OBJC_IVAR___DisplayViewController_delegate;
      uint64_t v33 = v44;
      if (*(void *)(v44 + OBJC_IVAR___DisplayViewController_delegate))
      {
        swift_unknownObjectRetain();
        sub_100038FE0();
        swift_unknownObjectRelease();
      }
      uint64_t v34 = OBJC_IVAR___DisplayViewController__reconfiguring;
      if (*(unsigned char *)(v33 + OBJC_IVAR___DisplayViewController__reconfiguring) == 1)
      {
        if (*(void *)(v33 + v32))
        {
          swift_unknownObjectRetain();
          sub_1000389B8();
          swift_unknownObjectRelease();
        }
        *(unsigned char *)(v33 + v34) = 0;
      }
      return;
    }
    goto LABEL_9;
  }
  sub_10002A194((uint64_t)v11, (uint64_t)v17);
  if (sub_10001A2B8(v24, 1, v5) == 1)
  {
    sub_10002A414((uint64_t)v20, (uint64_t *)&unk_1000843D0);
    (*(void (**)(char *, uint64_t))(v43 + 8))(v17, v5);
LABEL_9:
    sub_10002A414((uint64_t)v11, (uint64_t *)&unk_100084D60);
    goto LABEL_10;
  }
  uint64_t v29 = v43;
  (*(void (**)(char *, uint64_t, uint64_t))(v43 + 32))(v8, v24, v5);
  sub_10002A46C((unint64_t *)&qword_1000848F0, (void (*)(uint64_t))&type metadata accessor for UUID);
  char v30 = sub_10005E8D0();
  id v31 = *(void (**)(char *, uint64_t))(v29 + 8);
  v31(v8, v5);
  sub_10002A414((uint64_t)v20, (uint64_t *)&unk_1000843D0);
  v31(v17, v5);
  sub_10002A414((uint64_t)v11, (uint64_t *)&unk_1000843D0);
  if (v30) {
    goto LABEL_14;
  }
LABEL_10:
  uint64_t v25 = *(void *)(v44 + v42);
  if (v25)
  {
    uint64_t v26 = v25 + OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_uuid;
    swift_beginAccess();
    uint64_t v27 = v43;
    (*(void (**)(char *, uint64_t, uint64_t))(v43 + 16))(v14, v26, v5);
    sub_10001A32C((uint64_t)v14, 0, 1, v5);
    Class isa = 0;
    if (sub_10001A2B8((uint64_t)v14, 1, v5) != 1)
    {
      Class isa = sub_10005E680().super.isa;
      (*(void (**)(char *, uint64_t))(v27 + 8))(v14, v5);
    }
  }
  else
  {
    sub_10001A32C((uint64_t)v14, 1, 1, v5);
    Class isa = 0;
  }
  uint64_t v35 = sub_100019BFC(isa);

  if (qword_100083B68 != -1) {
    swift_once();
  }
  uint64_t v36 = sub_10005E750();
  sub_10002A1FC(v36, (uint64_t)qword_100084790);
  uint64_t v37 = sub_10005E720();
  os_log_type_t v38 = sub_10005EC40();
  if (os_log_type_enabled(v37, v38))
  {
    uint64_t v39 = swift_slowAlloc();
    *(_DWORD *)uint64_t v39 = 134218240;
    uint64_t v45 = v41;
    sub_10005EE10();
    *(_WORD *)(v39 + 12) = 2048;
    uint64_t v45 = v35;
    sub_10005EE10();
    _os_log_impl((void *)&_mh_execute_header, v37, v38, "discarded display stream ready (%lx:%lx)", (uint8_t *)v39, 0x16u);
    swift_slowDealloc();
  }
}

void sub_100027370(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR___DisplayViewController_session);
  if (!v3) {
    return;
  }
  uint64_t v5 = v3;
  if ([a1 objectValue])
  {
    sub_10005EEC0();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v16, 0, sizeof(v16));
  }
  sub_10002A324((uint64_t)v16, (uint64_t)&v17, (uint64_t *)&unk_100084130);
  if (!v18) {
    goto LABEL_13;
  }
  sub_100007D1C(&qword_1000843E0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_14:

    return;
  }
  sub_1000106CC(v15, &v17);
  if (!v18)
  {

    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_18:

    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v6 = *(void *)&v16[0];
  sub_1000106CC(v15, &v17);
  swift_bridgeObjectRelease();
  if (!v18)
  {
LABEL_13:

LABEL_16:
    sub_10002A414((uint64_t)&v17, (uint64_t *)&unk_100084130);
    return;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_14;
  }
  uint64_t v7 = *(void *)&v16[0];
  if (sub_1000197A4(v6) == 6) {
    goto LABEL_18;
  }
  if (*(void *)(v2 + OBJC_IVAR___DisplayViewController_delegate))
  {
    swift_unknownObjectRetain();
    uint64_t v8 = sub_100009A14(v7);
    sub_10002ECF8((uint64_t)v8);
    sub_1000305B8();
    swift_unknownObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  *(unsigned char *)(v2 + OBJC_IVAR___DisplayViewController__reconfiguring) = 1;
  uint64_t v9 = *(void **)&v5[OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_request];
  sub_100007D1C(&qword_1000843F0);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_100064320;
  id v11 = v9;
  uint64_t v12 = sub_10005E890();
  uint64_t v18 = sub_100007D1C((uint64_t *)&unk_1000848C0);
  *(void *)&long long v17 = v12;
  id v13 = objc_allocWithZone((Class)SidecarItem);
  *(void *)(v10 + 32) = sub_10003C3D4();
  *(void *)&long long v17 = v10;
  sub_10005EAE0();
  sub_100007F60(0, &qword_1000843F8);
  Class isa = sub_10005EAA0().super.isa;
  swift_bridgeObjectRelease();
  [v11 sendItems:isa complete:0];
}

uint64_t sub_1000276B0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = OBJC_IVAR___DisplayViewController_delegate;
  if (*(void *)(v1 + OBJC_IVAR___DisplayViewController_delegate))
  {
    sub_10001A688();
    swift_unknownObjectRetain();
    uint64_t v5 = swift_bridgeObjectRetain();
    sub_10002ECF8(v5);
    swift_unknownObjectRelease();
  }
  if ((sub_100010D40() & 1) != 0 && *(void *)(v1 + v4))
  {
    sub_10001A688();
    swift_unknownObjectRetain();
    uint64_t v6 = swift_bridgeObjectRetain();
    sub_100038BCC(v6, 3);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
  uint64_t v7 = (uint64_t *)(a1 + OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_settings);
  sub_10001A688();
  uint64_t v8 = swift_bridgeObjectRetain();
  int v9 = sub_10002E834(v8) & 1;
  swift_bridgeObjectRelease();
  uint64_t v10 = OBJC_IVAR___DisplayViewController_showSidebar;
  if (v9 != *(unsigned __int8 *)(v1 + OBJC_IVAR___DisplayViewController_showSidebar))
  {
    uint64_t v11 = swift_bridgeObjectRetain();
    char v12 = sub_10002E834(v11);
    swift_bridgeObjectRelease();
    *(unsigned char *)(v1 + v10) = v12 & 1;
    if (*(void *)(v1 + v4))
    {
      swift_unknownObjectRetain();
      uint64_t v13 = swift_bridgeObjectRetain();
      sub_100038BCC(v13, 10);
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
    }
  }
  uint64_t v14 = sub_10002479C((uint64_t)&off_100075FC0);
  uint64_t v15 = sub_100009630();
  uint64_t v16 = sub_10002468C((uint64_t)v15, v14);
  uint64_t v17 = *(void *)(v16 + 16);
  if (v17)
  {
    uint64_t v18 = (unsigned __int8 *)(v16 + 32);
    do
    {
      unsigned int v20 = *v18++;
      uint64_t v19 = v20;
      uint64_t v21 = *v7;
      uint64_t v22 = *(void *)(*v7 + 16);
      swift_bridgeObjectRetain();
      if (v22 && (unint64_t v23 = sub_10003C46C(v19), (v24 & 1) != 0))
      {
        sub_10000AF90(*(void *)(v21 + 56) + 32 * v23, (uint64_t)v34);
        sub_10002A414((uint64_t)v34, (uint64_t *)&unk_100084130);
        swift_bridgeObjectRelease();
        sub_10002A718();
        switch(v19)
        {
          case 1:
            unsigned int v25 = 1115185485;
            goto LABEL_20;
          case 2:
            unsigned int v25 = 1114532173;
LABEL_20:
            sub_10000C4E8(v25);
            break;
          case 3:
            goto LABEL_16;
          case 4:
            goto LABEL_22;
          case 5:
            sub_10002A824();
LABEL_22:
            sub_10000C2B8();
            break;
          case 6:
            sub_10002A608();
            break;
          case 7:
            sub_10002A76C();
            break;
          case 8:
            sub_10002A7FC();
            break;
          case 9:
            sub_10002A650();
            break;
          case 10:
            sub_10002A6F8();
            break;
          case 11:
            sub_10002A750();
            break;
          case 12:
            sub_10002A7D4();
            break;
          case 13:
            sub_10002A6B8();
            break;
          case 14:
            sub_10002A7E8();
            break;
          case 15:
            sub_10002A7C0();
            break;
          case 16:
            sub_10002A734();
            break;
          case 19:
            sub_10002A62C();
            break;
          default:
            break;
        }
        char v26 = sub_10005F140();
        swift_bridgeObjectRelease();
        if ((v26 & 1) == 0)
        {
          switch(v19)
          {
            case 0:
              sub_10002A718();
              goto LABEL_58;
            case 1:
              unsigned int v27 = 1115185485;
              goto LABEL_42;
            case 2:
              unsigned int v27 = 1114532173;
LABEL_42:
              sub_10000C4E8(v27);
              goto LABEL_58;
            case 3:
            case 17:
            case 18:
              goto LABEL_58;
            case 4:
              goto LABEL_16;
            case 5:
              sub_10002A824();
              sub_10000C2B8();
              goto LABEL_58;
            case 6:
              sub_10002A608();
              goto LABEL_58;
            case 7:
              sub_10002A76C();
              goto LABEL_58;
            case 8:
              sub_10002A7FC();
              goto LABEL_58;
            case 9:
              sub_10002A650();
              goto LABEL_58;
            case 10:
              sub_10002A6F8();
              goto LABEL_58;
            case 11:
              sub_10002A750();
              goto LABEL_58;
            case 12:
              sub_10002A7D4();
              goto LABEL_58;
            case 13:
              sub_10002A6B8();
              goto LABEL_58;
            case 14:
              sub_10002A7E8();
              goto LABEL_58;
            case 15:
              sub_10002A7C0();
              goto LABEL_58;
            case 16:
              sub_10002A734();
              goto LABEL_58;
            case 19:
              sub_10002A62C();
LABEL_58:
              char v28 = sub_10005F140();
              swift_bridgeObjectRelease();
              if (v28) {
                break;
              }
              if (sub_10000963C(v19) == 0x5372616265646973 && v29 == 0xEC0000006E776F68) {
                goto LABEL_16;
              }
              char v31 = sub_10005F140();
              swift_bridgeObjectRelease();
              if ((v31 & 1) == 0 && *(void *)(v2 + v4))
              {
                swift_unknownObjectRetain();
                uint64_t v32 = swift_bridgeObjectRetain();
                sub_100038BCC(v32, v19);
                swift_bridgeObjectRelease();
                swift_unknownObjectRelease();
              }
              break;
            default:
              JUMPOUT(0);
          }
        }
      }
      else
      {
        memset(v34, 0, sizeof(v34));
        sub_10002A414((uint64_t)v34, (uint64_t *)&unk_100084130);
LABEL_16:
        swift_bridgeObjectRelease();
      }
      --v17;
    }
    while (v17);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_100027CE8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = (uint64_t *)(a1 + OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_settings);
  sub_10001A688();
  uint64_t v6 = *v5;
  uint64_t v7 = OBJC_IVAR___DisplayViewController_delegate;
  if (*(void *)(v3 + OBJC_IVAR___DisplayViewController_delegate))
  {
    swift_bridgeObjectRetain_n();
    swift_unknownObjectRetain();
    sub_10002ECF8(v6);
    swift_unknownObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  uint64_t v8 = sub_10000A120(a2);
  uint64_t v9 = *((void *)v8 + 2);
  if (v9)
  {
    for (uint64_t i = 0; i != v9; ++i)
    {
      if (*(void *)(v3 + v7))
      {
        char v11 = v8[i + 32];
        swift_unknownObjectRetain();
        sub_100038BCC(v6, v11);
        swift_unknownObjectRelease();
      }
    }
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_100027DEC()
{
  sub_10001A720();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = sub_10005E750();
  sub_100008DCC();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v11 = &v0[OBJC_IVAR___DisplayViewController_delegate];
  *char v11 = 0;
  v11[1] = 0;
  *(void *)&v0[OBJC_IVAR___DisplayViewController_touchController] = 0;
  v0[OBJC_IVAR___DisplayViewController_sessionConfiguring] = 0;
  *(void *)&v0[OBJC_IVAR___DisplayViewController_displayViewPointerInteraction] = 0;
  uint64_t v12 = OBJC_IVAR___DisplayViewController_displayView;
  id v13 = objc_allocWithZone((Class)UIView);
  uint64_t v14 = v0;
  *(void *)&v0[v12] = [v13 init];
  uint64_t v15 = OBJC_IVAR___DisplayViewController_hidObserver;
  if (qword_100083B68 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_10002A1FC(v5, (uint64_t)qword_100084790);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v16, v5);
  type metadata accessor for HIDEventObserver();
  swift_allocObject();
  sub_1000052B4((uint64_t)v10);
  *(void *)&v14[v15] = v17;
  *(void *)&v14[OBJC_IVAR___DisplayViewController_session] = 0;
  *(void *)&v14[OBJC_IVAR___DisplayViewController_videoStream] = 0;
  *(void *)&v14[OBJC_IVAR___DisplayViewController_video] = 0;
  v14[OBJC_IVAR___DisplayViewController__reconfiguring] = 0;
  v14[OBJC_IVAR___DisplayViewController_portrait] = 0;
  v14[OBJC_IVAR___DisplayViewController_showSidebar] = 0;
  *(void *)&v14[OBJC_IVAR___DisplayViewController_transport] = 0;
  v14[OBJC_IVAR___DisplayViewController_receivedFirstFrame] = 0;
  v14[OBJC_IVAR___DisplayViewController_receivedConfigComplete] = 0;

  if (v4)
  {
    NSString v18 = sub_10005E8F0();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v18 = 0;
  }
  uint64_t v19 = (objc_class *)type metadata accessor for DisplayViewController();
  v20.receiver = v14;
  v20.super_class = v19;
  [super initWithNibName:v18 bundle:v2];

  sub_10001A6F0();
}

id sub_100028090(void *a1)
{
  uint64_t v4 = sub_10005E750();
  sub_100008DCC();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_100008E04();
  uint64_t v8 = &v1[OBJC_IVAR___DisplayViewController_delegate];
  *uint64_t v8 = 0;
  v8[1] = 0;
  *(void *)&v1[OBJC_IVAR___DisplayViewController_touchController] = 0;
  v1[OBJC_IVAR___DisplayViewController_sessionConfiguring] = 0;
  *(void *)&v1[OBJC_IVAR___DisplayViewController_displayViewPointerInteraction] = 0;
  uint64_t v9 = OBJC_IVAR___DisplayViewController_displayView;
  id v10 = objc_allocWithZone((Class)UIView);
  char v11 = v1;
  *(void *)&v1[v9] = [v10 init];
  uint64_t v12 = OBJC_IVAR___DisplayViewController_hidObserver;
  if (qword_100083B68 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_10002A1FC(v4, (uint64_t)qword_100084790);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v2, v13, v4);
  type metadata accessor for HIDEventObserver();
  swift_allocObject();
  sub_1000052B4(v2);
  *(void *)&v11[v12] = v14;
  *(void *)&v11[OBJC_IVAR___DisplayViewController_session] = 0;
  *(void *)&v11[OBJC_IVAR___DisplayViewController_videoStream] = 0;
  *(void *)&v11[OBJC_IVAR___DisplayViewController_video] = 0;
  v11[OBJC_IVAR___DisplayViewController__reconfiguring] = 0;
  v11[OBJC_IVAR___DisplayViewController_portrait] = 0;
  v11[OBJC_IVAR___DisplayViewController_showSidebar] = 0;
  *(void *)&v11[OBJC_IVAR___DisplayViewController_transport] = 0;
  v11[OBJC_IVAR___DisplayViewController_receivedFirstFrame] = 0;
  v11[OBJC_IVAR___DisplayViewController_receivedConfigComplete] = 0;

  v17.receiver = v11;
  v17.super_class = (Class)type metadata accessor for DisplayViewController();
  id v15 = [super initWithCoder:a1];

  return v15;
}

id sub_1000282C0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DisplayViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for DisplayViewController()
{
  return self;
}

uint64_t sub_1000283E8@<X0>(uint64_t a1@<X8>)
{
  sub_10002629C((uint64_t)v3);
  return sub_10002A324((uint64_t)v3, a1, &qword_1000843A8);
}

void *sub_100028434(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  return a3;
}

id sub_100028488()
{
  id v0 = [self hiddenPointerStyle];

  return v0;
}

unint64_t sub_100028534(unint64_t result, char a2, uint64_t a3)
{
  if (a2)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > result)
    {
      return result;
    }
    __break(1u);
  }
  return result;
}

char *sub_100028558(char *a1, int64_t a2, char a3)
{
  uint64_t result = sub_100028598(a1, a2, a3, *v3);
  uint64_t *v3 = (uint64_t)result;
  return result;
}

char *sub_100028578(char *a1, int64_t a2, char a3)
{
  uint64_t result = sub_100028670(a1, a2, a3, *v3);
  uint64_t *v3 = (uint64_t)result;
  return result;
}

char *sub_100028598(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    int64_t v9 = *(void *)(a4 + 16);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_100007D1C(&qword_100083F78);
    id v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    id v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = (char *)(a4 + 32);
  if (v5)
  {
    sub_10000AC74(v13, v8, v12);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_10000AE0C(v13, v8, v12);
  }
  swift_release();
  return v10;
}

char *sub_100028670(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100007D1C((uint64_t *)&unk_100084900);
    id v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 8);
  }
  else
  {
    id v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = (char *)(a4 + 32);
  if (v5)
  {
    sub_10000AC1C(v13, v8, v12);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_10000AECC(v13, v8, v12);
  }
  swift_release();
  return v10;
}

uint64_t sub_100028754(uint64_t result, uint64_t a2, void *a3)
{
  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    for (; a2; --a2)
      *a3++ = result;
  }
  return result;
}

uint64_t sub_100028770(unsigned char *a1, Swift::Int a2)
{
  uint64_t v4 = *v2;
  sub_10005F1C0();
  sub_10000963C(a2);
  swift_bridgeObjectRetain();
  sub_10005E980();
  swift_bridgeObjectRelease();
  Swift::Int v5 = sub_10005F200();
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v7 = v5 & ~v6;
  if ((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7))
  {
    uint64_t v8 = ~v6;
    while (1)
    {
      unint64_t v9 = 0xEA00000000007963;
      uint64_t v10 = 0x6E6574614C776F4CLL;
      switch(*(unsigned char *)(*(void *)(v4 + 48) + v7))
      {
        case 1:
          unsigned int v11 = 1115185485;
          goto LABEL_6;
        case 2:
          unsigned int v11 = 1114532173;
LABEL_6:
          uint64_t v10 = v11 | 0x6172746900000000;
          unint64_t v9 = 0xEA00000000006574;
          break;
        case 3:
          uint64_t v10 = 0x63756F54776F6873;
          uint64_t v12 = 1918984808;
          goto LABEL_23;
        case 4:
          uint64_t v10 = 0x7261426863756F74;
          uint64_t v13 = 7368532;
          goto LABEL_14;
        case 5:
          uint64_t v10 = 0x7261426863756F74;
          uint64_t v14 = 0x6E696772614DLL;
          goto LABEL_28;
        case 6:
          uint64_t v10 = 0x5472616365646953;
          unint64_t v9 = 0xEF636E7953656D69;
          break;
        case 7:
          unint64_t v9 = 0xE700000000000000;
          uint64_t v10 = 0x73746E65636572;
          break;
        case 8:
          uint64_t v10 = 0xD000000000000010;
          id v15 = "TimeSync";
          goto LABEL_21;
        case 9:
          uint64_t v10 = 0x72754373776F6873;
          uint64_t v13 = 7499635;
LABEL_14:
          unint64_t v9 = v13 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
          break;
        case 0xA:
          uint64_t v10 = 0x5372616265646973;
          uint64_t v12 = 1853321064;
          goto LABEL_23;
        case 0xB:
          uint64_t v10 = 0x5272616265646973;
          uint64_t v12 = 1952999273;
          goto LABEL_23;
        case 0xC:
          uint64_t v10 = 0xD000000000000015;
          id v15 = "ebarShown";
          goto LABEL_21;
        case 0xD:
          unint64_t v9 = 0xEA00000000007366;
          uint64_t v10 = 0x6572507465736572;
          break;
        case 0xE:
          uint64_t v10 = 0xD000000000000012;
          id v15 = "tatus";
          goto LABEL_21;
        case 0xF:
          uint64_t v10 = 0xD000000000000015;
          id v15 = "allowFingerTouches";
LABEL_21:
          unint64_t v9 = (unint64_t)v15 | 0x8000000000000000;
          break;
        case 0x10:
          uint64_t v10 = 0x5772616265646973;
          uint64_t v12 = 1752458345;
LABEL_23:
          unint64_t v9 = v12 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
          break;
        case 0x11:
          uint64_t v16 = "Ratio";
          goto LABEL_26;
        case 0x12:
          uint64_t v16 = "sidebarButtonSize";
LABEL_26:
          unint64_t v9 = (unint64_t)v16 | 0x8000000000000000;
          uint64_t v10 = 0xD000000000000011;
          break;
        case 0x13:
          uint64_t v10 = 0x654B656C62616E65;
          uint64_t v14 = 0x6472616F6279;
LABEL_28:
          unint64_t v9 = v14 & 0xFFFFFFFFFFFFLL | 0xEE00000000000000;
          break;
        default:
          break;
      }
      uint64_t v17 = 0x6E6574614C776F4CLL;
      unint64_t v18 = 0xEA00000000007963;
      switch((char)a2)
      {
        case 1:
          unsigned int v19 = 1115185485;
          goto LABEL_32;
        case 2:
          unsigned int v19 = 1114532173;
LABEL_32:
          uint64_t v17 = v19 | 0x6172746900000000;
          unint64_t v18 = 0xEA00000000006574;
          break;
        case 3:
          uint64_t v17 = 0x63756F54776F6873;
          uint64_t v20 = 1918984808;
          goto LABEL_49;
        case 4:
          uint64_t v17 = 0x7261426863756F74;
          uint64_t v21 = 7368532;
          goto LABEL_40;
        case 5:
          uint64_t v17 = 0x7261426863756F74;
          uint64_t v22 = 0x6E696772614DLL;
          goto LABEL_54;
        case 6:
          uint64_t v17 = 0x5472616365646953;
          unint64_t v18 = 0xEF636E7953656D69;
          break;
        case 7:
          unint64_t v18 = 0xE700000000000000;
          uint64_t v17 = 0x73746E65636572;
          break;
        case 8:
          uint64_t v17 = 0xD000000000000010;
          unint64_t v23 = "TimeSync";
          goto LABEL_47;
        case 9:
          uint64_t v17 = 0x72754373776F6873;
          uint64_t v21 = 7499635;
LABEL_40:
          unint64_t v18 = v21 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
          break;
        case 10:
          uint64_t v17 = 0x5372616265646973;
          uint64_t v20 = 1853321064;
          goto LABEL_49;
        case 11:
          uint64_t v17 = 0x5272616265646973;
          uint64_t v20 = 1952999273;
          goto LABEL_49;
        case 12:
          uint64_t v17 = 0xD000000000000015;
          unint64_t v23 = "ebarShown";
          goto LABEL_47;
        case 13:
          unint64_t v18 = 0xEA00000000007366;
          uint64_t v17 = 0x6572507465736572;
          break;
        case 14:
          uint64_t v17 = 0xD000000000000012;
          unint64_t v23 = "tatus";
          goto LABEL_47;
        case 15:
          uint64_t v17 = 0xD000000000000015;
          unint64_t v23 = "allowFingerTouches";
LABEL_47:
          unint64_t v18 = (unint64_t)v23 | 0x8000000000000000;
          break;
        case 16:
          uint64_t v17 = 0x5772616265646973;
          uint64_t v20 = 1752458345;
LABEL_49:
          unint64_t v18 = v20 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
          break;
        case 17:
          char v24 = "Ratio";
          goto LABEL_52;
        case 18:
          char v24 = "sidebarButtonSize";
LABEL_52:
          unint64_t v18 = (unint64_t)v24 | 0x8000000000000000;
          uint64_t v17 = 0xD000000000000011;
          break;
        case 19:
          uint64_t v17 = 0x654B656C62616E65;
          uint64_t v22 = 0x6472616F6279;
LABEL_54:
          unint64_t v18 = v22 & 0xFFFFFFFFFFFFLL | 0xEE00000000000000;
          break;
        default:
          break;
      }
      if (v10 == v17 && v9 == v18)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        goto LABEL_64;
      }
      char v26 = sub_10005F140();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v26) {
        break;
      }
      unint64_t v7 = (v7 + 1) & v8;
      if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
        goto LABEL_61;
      }
    }
    swift_bridgeObjectRelease();
LABEL_64:
    uint64_t result = 0;
    LOBYTE(a2) = *(unsigned char *)(*(void *)(*v2 + 48) + v7);
  }
  else
  {
LABEL_61:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v30 = *v2;
    *objc_super v2 = 0x8000000000000000;
    sub_1000293CC(a2, v7, isUniquelyReferenced_nonNull_native);
    *objc_super v2 = v30;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
  }
  *a1 = a2;
  return result;
}

uint64_t sub_100028E44()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100007D1C(&qword_1000848B8);
  uint64_t v3 = sub_10005EF30();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    swift_retain();
    int64_t v11 = 0;
    if (!v8) {
      goto LABEL_7;
    }
    while (2)
    {
      unint64_t v12 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v13 = v12 | (v11 << 6);
LABEL_21:
      char v17 = *(unsigned char *)(*(void *)(v2 + 48) + v13);
      sub_10005F1C0();
      sub_10005E980();
      swift_bridgeObjectRelease();
      Swift::Int v18 = sub_10005F200();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = v18 & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v10 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*(void *)(v10 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_30;
      }
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
LABEL_38:
          __break(1u);
          goto LABEL_39;
        }
        BOOL v25 = v21 == v24;
        if (v21 == v24) {
          unint64_t v21 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v10 + 8 * v21);
      }
      while (v26 == -1);
      unint64_t v22 = __clz(__rbit64(~v26)) + (v21 << 6);
LABEL_30:
      *(void *)(v10 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
      *(unsigned char *)(*(void *)(v4 + 48) + v22) = v17;
      ++*(void *)(v4 + 16);
      if (v8) {
        continue;
      }
      break;
    }
LABEL_7:
    int64_t v14 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_38;
    }
    if (v14 < v9)
    {
      unint64_t v15 = v6[v14];
      ++v11;
      if (v15) {
        goto LABEL_20;
      }
      int64_t v11 = v14 + 1;
      if (v14 + 1 < v9)
      {
        unint64_t v15 = v6[v11];
        if (v15) {
          goto LABEL_20;
        }
        int64_t v11 = v14 + 2;
        if (v14 + 2 < v9)
        {
          unint64_t v15 = v6[v11];
          if (v15) {
            goto LABEL_20;
          }
          int64_t v16 = v14 + 3;
          if (v16 < v9)
          {
            unint64_t v15 = v6[v16];
            if (v15)
            {
              int64_t v11 = v16;
LABEL_20:
              unint64_t v8 = (v15 - 1) & v15;
              unint64_t v13 = __clz(__rbit64(v15)) + (v11 << 6);
              goto LABEL_21;
            }
            while (1)
            {
              int64_t v11 = v16 + 1;
              if (__OFADD__(v16, 1)) {
                break;
              }
              if (v11 >= v9) {
                goto LABEL_32;
              }
              unint64_t v15 = v6[v11];
              ++v16;
              if (v15) {
                goto LABEL_20;
              }
            }
LABEL_39:
            __break(1u);
            JUMPOUT(0x10002937CLL);
          }
        }
      }
    }
LABEL_32:
    swift_release();
    uint64_t v1 = v0;
    uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
    if (v27 > 63) {
      sub_100028754(0, (unint64_t)(v27 + 63) >> 6, (void *)(v2 + 56));
    }
    else {
      *uint64_t v6 = -1 << v27;
    }
    *(void *)(v2 + 16) = 0;
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

Swift::Int sub_1000293CC(Swift::Int result, unint64_t a2, char a3)
{
  char v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_100028E44();
    }
    else
    {
      if (v7 > v6)
      {
        uint64_t result = (Swift::Int)sub_100029AA8();
        goto LABEL_68;
      }
      sub_100029C40();
    }
    uint64_t v8 = *v3;
    sub_10005F1C0();
    sub_10000963C(v5);
    sub_10005E980();
    swift_bridgeObjectRelease();
    uint64_t result = sub_10005F200();
    uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
    a2 = result & ~v9;
    if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v10 = ~v9;
      while (1)
      {
        unint64_t v11 = 0xEA00000000007963;
        uint64_t v12 = 0x6E6574614C776F4CLL;
        switch(*(unsigned char *)(*(void *)(v8 + 48) + a2))
        {
          case 1:
            unsigned int v13 = 1115185485;
            goto LABEL_20;
          case 2:
            unsigned int v13 = 1114532173;
LABEL_20:
            uint64_t v12 = v13 | 0x6172746900000000;
            unint64_t v11 = 0xEA00000000006574;
            break;
          case 3:
            uint64_t v12 = 0x63756F54776F6873;
            uint64_t v15 = 1918984808;
            goto LABEL_29;
          case 4:
            uint64_t v12 = 0x7261426863756F74;
            uint64_t v16 = 7368532;
            goto LABEL_16;
          case 5:
            uint64_t v12 = 0x7261426863756F74;
            uint64_t v17 = 0x6E696772614DLL;
            goto LABEL_35;
          case 6:
            uint64_t v12 = 0x5472616365646953;
            unint64_t v11 = 0xEF636E7953656D69;
            break;
          case 7:
            unint64_t v11 = 0xE700000000000000;
            uint64_t v12 = 0x73746E65636572;
            break;
          case 8:
            uint64_t v12 = 0xD000000000000010;
            int64_t v14 = "TimeSync";
            goto LABEL_27;
          case 9:
            uint64_t v12 = 0x72754373776F6873;
            uint64_t v16 = 7499635;
LABEL_16:
            unint64_t v11 = v16 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
            break;
          case 0xA:
            uint64_t v12 = 0x5372616265646973;
            uint64_t v15 = 1853321064;
            goto LABEL_29;
          case 0xB:
            uint64_t v12 = 0x5272616265646973;
            uint64_t v15 = 1952999273;
            goto LABEL_29;
          case 0xC:
            uint64_t v12 = 0xD000000000000015;
            int64_t v14 = "ebarShown";
            goto LABEL_27;
          case 0xD:
            unint64_t v11 = 0xEA00000000007366;
            uint64_t v12 = 0x6572507465736572;
            break;
          case 0xE:
            uint64_t v12 = 0xD000000000000012;
            int64_t v14 = "tatus";
            goto LABEL_27;
          case 0xF:
            uint64_t v12 = 0xD000000000000015;
            int64_t v14 = "allowFingerTouches";
LABEL_27:
            unint64_t v11 = (unint64_t)v14 | 0x8000000000000000;
            break;
          case 0x10:
            uint64_t v12 = 0x5772616265646973;
            uint64_t v15 = 1752458345;
LABEL_29:
            unint64_t v11 = v15 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
            break;
          case 0x11:
            Swift::Int v18 = "Ratio";
            goto LABEL_33;
          case 0x12:
            Swift::Int v18 = "sidebarButtonSize";
LABEL_33:
            unint64_t v11 = (unint64_t)v18 | 0x8000000000000000;
            uint64_t v12 = 0xD000000000000011;
            break;
          case 0x13:
            uint64_t v12 = 0x654B656C62616E65;
            uint64_t v17 = 0x6472616F6279;
LABEL_35:
            unint64_t v11 = v17 & 0xFFFFFFFFFFFFLL | 0xEE00000000000000;
            break;
          default:
            break;
        }
        uint64_t v19 = 0x6E6574614C776F4CLL;
        unint64_t v20 = 0xEA00000000007963;
        switch(v5)
        {
          case 1:
            unsigned int v21 = 1115185485;
            goto LABEL_46;
          case 2:
            unsigned int v21 = 1114532173;
LABEL_46:
            uint64_t v19 = v21 | 0x6172746900000000;
            unint64_t v20 = 0xEA00000000006574;
            break;
          case 3:
            uint64_t v19 = 0x63756F54776F6873;
            uint64_t v23 = 1918984808;
            goto LABEL_55;
          case 4:
            uint64_t v19 = 0x7261426863756F74;
            uint64_t v24 = 7368532;
            goto LABEL_42;
          case 5:
            uint64_t v19 = 0x7261426863756F74;
            uint64_t v25 = 0x6E696772614DLL;
            goto LABEL_61;
          case 6:
            uint64_t v19 = 0x5472616365646953;
            unint64_t v20 = 0xEF636E7953656D69;
            break;
          case 7:
            unint64_t v20 = 0xE700000000000000;
            uint64_t v19 = 0x73746E65636572;
            break;
          case 8:
            uint64_t v19 = 0xD000000000000010;
            unint64_t v22 = "TimeSync";
            goto LABEL_53;
          case 9:
            uint64_t v19 = 0x72754373776F6873;
            uint64_t v24 = 7499635;
LABEL_42:
            unint64_t v20 = v24 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
            break;
          case 10:
            uint64_t v19 = 0x5372616265646973;
            uint64_t v23 = 1853321064;
            goto LABEL_55;
          case 11:
            uint64_t v19 = 0x5272616265646973;
            uint64_t v23 = 1952999273;
            goto LABEL_55;
          case 12:
            uint64_t v19 = 0xD000000000000015;
            unint64_t v22 = "ebarShown";
            goto LABEL_53;
          case 13:
            unint64_t v20 = 0xEA00000000007366;
            uint64_t v19 = 0x6572507465736572;
            break;
          case 14:
            uint64_t v19 = 0xD000000000000012;
            unint64_t v22 = "tatus";
            goto LABEL_53;
          case 15:
            uint64_t v19 = 0xD000000000000015;
            unint64_t v22 = "allowFingerTouches";
LABEL_53:
            unint64_t v20 = (unint64_t)v22 | 0x8000000000000000;
            break;
          case 16:
            uint64_t v19 = 0x5772616265646973;
            uint64_t v23 = 1752458345;
LABEL_55:
            unint64_t v20 = v23 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
            break;
          case 17:
            uint64_t v26 = "Ratio";
            goto LABEL_59;
          case 18:
            uint64_t v26 = "sidebarButtonSize";
LABEL_59:
            unint64_t v20 = (unint64_t)v26 | 0x8000000000000000;
            uint64_t v19 = 0xD000000000000011;
            break;
          case 19:
            uint64_t v19 = 0x654B656C62616E65;
            uint64_t v25 = 0x6472616F6279;
LABEL_61:
            unint64_t v20 = v25 & 0xFFFFFFFFFFFFLL | 0xEE00000000000000;
            break;
          default:
            break;
        }
        if (v12 == v19 && v11 == v20) {
          break;
        }
        char v28 = sub_10005F140();
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        if (v28) {
          goto LABEL_72;
        }
        a2 = (a2 + 1) & v10;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          goto LABEL_68;
        }
      }
LABEL_71:
      swift_bridgeObjectRelease_n();
LABEL_72:
      sub_10005F190();
      __break(1u);
      JUMPOUT(0x100029A08);
    }
  }
LABEL_68:
  uint64_t v29 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v29 + 48) + a2) = v5;
  uint64_t v30 = *(void *)(v29 + 16);
  BOOL v31 = __OFADD__(v30, 1);
  uint64_t v32 = v30 + 1;
  if (v31)
  {
    __break(1u);
    goto LABEL_71;
  }
  *(void *)(v29 + 16) = v32;
  return result;
}

void *sub_100029AA8()
{
  uint64_t v1 = v0;
  sub_100007D1C(&qword_1000848B8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_10005EF20();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  if (!v12) {
    goto LABEL_12;
  }
LABEL_11:
  unint64_t v14 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  for (unint64_t i = v14 | (v9 << 6); ; unint64_t i = __clz(__rbit64(v17)) + (v9 << 6))
  {
    *(unsigned char *)(*(void *)(v4 + 48) + i) = *(unsigned char *)(*(void *)(v2 + 48) + i);
    if (v12) {
      goto LABEL_11;
    }
LABEL_12:
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_25:
    unint64_t v12 = (v17 - 1) & v17;
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_100029C40()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100007D1C(&qword_1000848B8);
  uint64_t v3 = sub_10005EF30();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = v2 + 56;
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    swift_retain();
    int64_t v11 = 0;
    if (!v8) {
      goto LABEL_7;
    }
    while (2)
    {
      unint64_t v12 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v13 = v12 | (v11 << 6);
LABEL_21:
      char v17 = *(unsigned char *)(*(void *)(v2 + 48) + v13);
      sub_10005F1C0();
      sub_10005E980();
      swift_bridgeObjectRelease();
      Swift::Int v18 = sub_10005F200();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = v18 & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v10 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*(void *)(v10 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_30;
      }
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
LABEL_36:
          __break(1u);
          goto LABEL_37;
        }
        BOOL v25 = v21 == v24;
        if (v21 == v24) {
          unint64_t v21 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v10 + 8 * v21);
      }
      while (v26 == -1);
      unint64_t v22 = __clz(__rbit64(~v26)) + (v21 << 6);
LABEL_30:
      *(void *)(v10 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
      *(unsigned char *)(*(void *)(v4 + 48) + v22) = v17;
      ++*(void *)(v4 + 16);
      if (v8) {
        continue;
      }
      break;
    }
LABEL_7:
    int64_t v14 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_36;
    }
    if (v14 < v9)
    {
      unint64_t v15 = *(void *)(v6 + 8 * v14);
      ++v11;
      if (v15) {
        goto LABEL_20;
      }
      int64_t v11 = v14 + 1;
      if (v14 + 1 < v9)
      {
        unint64_t v15 = *(void *)(v6 + 8 * v11);
        if (v15) {
          goto LABEL_20;
        }
        int64_t v11 = v14 + 2;
        if (v14 + 2 < v9)
        {
          unint64_t v15 = *(void *)(v6 + 8 * v11);
          if (v15) {
            goto LABEL_20;
          }
          int64_t v16 = v14 + 3;
          if (v16 < v9)
          {
            unint64_t v15 = *(void *)(v6 + 8 * v16);
            if (v15)
            {
              int64_t v11 = v16;
LABEL_20:
              unint64_t v8 = (v15 - 1) & v15;
              unint64_t v13 = __clz(__rbit64(v15)) + (v11 << 6);
              goto LABEL_21;
            }
            while (1)
            {
              int64_t v11 = v16 + 1;
              if (__OFADD__(v16, 1)) {
                break;
              }
              if (v11 >= v9) {
                goto LABEL_32;
              }
              unint64_t v15 = *(void *)(v6 + 8 * v11);
              ++v16;
              if (v15) {
                goto LABEL_20;
              }
            }
LABEL_37:
            __break(1u);
            JUMPOUT(0x10002A144);
          }
        }
      }
    }
LABEL_32:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
  }
  else
  {
    uint64_t result = swift_release();
  }
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_10002A194(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007D1C((uint64_t *)&unk_1000843D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10002A1FC(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t sub_10002A234()
{
  uint64_t v1 = sub_100007D1C((uint64_t *)&unk_1000843D0);
  sub_10002A5F0(v1);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = sub_10005E6D0();
  if (!sub_10001A2B8(v0 + v4, 1, v7))
  {
    sub_10002A7B4();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v0 + v4, v7);
  }
  unint64_t v9 = (v6 + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = ((v9 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;

  return _swift_deallocObject(v0, v10, v3 | 7);
}

uint64_t sub_10002A324(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_100007D1C(a3);
  sub_10002A7B4();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

void sub_10002A384()
{
  uint64_t v1 = sub_100007D1C((uint64_t *)&unk_1000843D0);
  sub_10002A5F0(v1);
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  unint64_t v6 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)(v0 + v7);
  uint64_t v9 = *(void *)(v0 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8));

  sub_100026D7C(v0 + v6, v8, v9);
}

uint64_t sub_10002A3FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10002A40C()
{
  return swift_release();
}

uint64_t sub_10002A414(uint64_t a1, uint64_t *a2)
{
  sub_100007D1C(a2);
  sub_10002A7B4();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_10002A46C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *sub_10002A4B4(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_10002A518()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_10002A550()
{
  sub_100026680(*(void *)(v0 + 16));
}

BOOL sub_10002A558()
{
  return MGGetSInt32Answer() != 2;
}

void sub_10002A584()
{
  sub_100026268(*(void *)(v0 + 16));
}

uint64_t sub_10002A58C()
{
  swift_errorRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10002A5CC()
{
  return sub_100025CFC(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_10002A5F0(uint64_t a1)
{
  return a1 - 8;
}

uint64_t sub_10002A608()
{
  return 0x5472616365646953;
}

uint64_t sub_10002A62C()
{
  return 0x654B656C62616E65;
}

uint64_t sub_10002A650()
{
  return 0x72754373776F6873;
}

uint64_t sub_10002A670()
{
  return sub_10005EEE0();
}

id sub_10002A69C()
{
  uint64_t v4 = *(const char **)(v2 + 784);
  return [v0 v4:v1];
}

uint64_t sub_10002A6B8()
{
  return 0x6572507465736572;
}

uint64_t sub_10002A6D8()
{
  return sub_10005F140();
}

uint64_t sub_10002A6F8()
{
  return 0x5372616265646973;
}

uint64_t sub_10002A718()
{
  return 0x6E6574614C776F4CLL;
}

uint64_t sub_10002A734()
{
  return 0x5772616265646973;
}

uint64_t sub_10002A750()
{
  return 0x5272616265646973;
}

uint64_t sub_10002A76C()
{
  return 0x73746E65636572;
}

uint64_t sub_10002A784()
{
  return v0;
}

uint64_t sub_10002A79C()
{
  return v0;
}

unint64_t sub_10002A7C0()
{
  return 0xD000000000000015;
}

unint64_t sub_10002A7D4()
{
  return 0xD000000000000015;
}

unint64_t sub_10002A7E8()
{
  return 0xD000000000000012;
}

unint64_t sub_10002A7FC()
{
  return 0xD000000000000010;
}

uint64_t sub_10002A810()
{
  return 0;
}

void sub_10002A838(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 - 8);
  double v3 = __chkstk_darwin(a1);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v2 + 16))(v5, v6, a1, v3);
  if (sub_10005F100())
  {
    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, a1);
  }
  else
  {
    swift_allocError();
    (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v7, v5, a1);
  }
  uint64_t v8 = (void *)sub_10005E520();
  swift_errorRelease();
  id v9 = [v8 domain];
  uint64_t v10 = sub_10005E920();
  uint64_t v12 = v11;

  if (sub_10005E920() == v10 && v13 == v12)
  {

    swift_bridgeObjectRelease_n();
    return;
  }
  char v15 = sub_10002AB7C();
  swift_bridgeObjectRelease();
  if (v15)
  {
    swift_bridgeObjectRelease();

    return;
  }
  if (sub_10005E920() == v10 && v16 == v12)
  {
    swift_bridgeObjectRelease();
LABEL_23:
    swift_bridgeObjectRelease();
    uint64_t v22 = (uint64_t)[v8 code];

    if (v22 < (uint64_t)0xFFFFFFFF80000000)
    {
      __break(1u);
    }
    else if (v22 <= 0x7FFFFFFF)
    {
      return;
    }
    __break(1u);
    return;
  }
  char v18 = sub_10002AB7C();
  swift_bridgeObjectRelease();
  if (v18) {
    goto LABEL_23;
  }
  if (sub_10005E920() == v10 && v19 == v12)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v21 = sub_10002AB7C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v21 & 1) == 0)
    {

      return;
    }
  }
  [v8 code];
}

uint64_t sub_10002AB7C()
{
  return sub_10005F140();
}

uint64_t sub_10002AB9C(uint64_t a1, unint64_t a2)
{
  uint64_t v32 = 46;
  uint64_t v33 = 0xE100000000000000;
  uint64_t v30 = &v32;
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_10002B048(5, 0, sub_10002BF7C, (uint64_t)v29, a1, a2);
  swift_bridgeObjectRelease();
  int64_t v5 = *(void *)(v4 + 16);
  if (!v5)
  {
    swift_bridgeObjectRelease();
    return (uint64_t)_swiftEmptyArrayStorage;
  }
  BOOL v31 = _swiftEmptyArrayStorage;
  sub_100028578(0, v5, 0);
  uint64_t v6 = 0;
  while (1)
  {
    uint64_t v7 = *(void *)(v4 + 32 + 32 * v6 + 16);
    swift_bridgeObjectRetain();
    uint64_t result = sub_10005E960();
    uint64_t v10 = v9;
    uint64_t v11 = HIBYTE(v9) & 0xF;
    uint64_t v12 = result & 0xFFFFFFFFFFFFLL;
    if ((v10 & 0x2000000000000000) != 0 ? v11 : result & 0xFFFFFFFFFFFFLL) {
      break;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v15 = 0;
LABEL_50:
    uint64_t v23 = v31;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_100028578(0, v23[2] + 1, 1);
      uint64_t v23 = v31;
    }
    unint64_t v25 = v23[2];
    unint64_t v24 = v23[3];
    if (v25 >= v24 >> 1)
    {
      sub_100028578((char *)(v24 > 1), v25 + 1, 1);
      uint64_t v23 = v31;
    }
    ++v6;
    v23[2] = v25 + 1;
    v23[v25 + 4] = v15;
    if (v6 == v5)
    {
      swift_bridgeObjectRelease();
      return (uint64_t)v23;
    }
  }
  if ((v10 & 0x1000000000000000) != 0)
  {
    uint64_t v15 = (uint64_t)sub_10002B6F0(result, v10, 10);
    LOBYTE(v7) = v28;
    goto LABEL_48;
  }
  if ((v10 & 0x2000000000000000) == 0)
  {
    if ((result & 0x1000000000000000) != 0) {
      int64_t v14 = (unsigned __int8 *)((v10 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      int64_t v14 = (unsigned __int8 *)sub_10005EF80();
    }
    uint64_t v15 = (uint64_t)sub_10002B7D8(v14, v12, 10);
    LOBYTE(v7) = v16 & 1;
LABEL_48:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v7) {
      uint64_t v15 = 0;
    }
    goto LABEL_50;
  }
  uint64_t v32 = result;
  uint64_t v33 = v10 & 0xFFFFFFFFFFFFFFLL;
  if (result == 43)
  {
    if (!v11) {
      goto LABEL_69;
    }
    if (v11 == 1 || (BYTE1(result) - 48) > 9u) {
      goto LABEL_34;
    }
    uint64_t v15 = (BYTE1(result) - 48);
    if (v11 != 2)
    {
      if ((BYTE2(result) - 48) > 9u) {
        goto LABEL_34;
      }
      uint64_t v15 = 10 * (BYTE1(result) - 48) + (BYTE2(result) - 48);
      if (v11 != 3)
      {
        while (1)
        {
          sub_10002C00C();
          if (!v18 & v17) {
            goto LABEL_34;
          }
          sub_10002BFE4();
          if (!v18) {
            goto LABEL_34;
          }
          uint64_t v15 = v20 + v19;
          if (__OFADD__(v20, v19)) {
            goto LABEL_34;
          }
          sub_10002BFFC();
          if (v18) {
            goto LABEL_48;
          }
        }
      }
    }
LABEL_47:
    LOBYTE(v7) = 0;
    goto LABEL_48;
  }
  if (result != 45)
  {
    if (!v11 || (result - 48) > 9u) {
      goto LABEL_34;
    }
    uint64_t v15 = (result - 48);
    if (v11 != 1)
    {
      if ((BYTE1(result) - 48) > 9u) {
        goto LABEL_34;
      }
      uint64_t v15 = 10 * (result - 48) + (BYTE1(result) - 48);
      if (v11 != 2)
      {
        while (1)
        {
          sub_10002C00C();
          if (!v18 & v17) {
            goto LABEL_34;
          }
          sub_10002BFE4();
          if (!v18) {
            goto LABEL_34;
          }
          uint64_t v15 = v22 + v21;
          if (__OFADD__(v22, v21)) {
            goto LABEL_34;
          }
          sub_10002BFFC();
          if (v18) {
            goto LABEL_48;
          }
        }
      }
    }
    goto LABEL_47;
  }
  if (v11)
  {
    if (v11 != 1 && (BYTE1(result) - 48) <= 9u)
    {
      if (v11 == 2)
      {
        LOBYTE(v7) = 0;
        uint64_t v15 = -(uint64_t)(BYTE1(result) - 48);
        goto LABEL_48;
      }
      if ((BYTE2(result) - 48) <= 9u)
      {
        uint64_t v15 = -10 * (BYTE1(result) - 48) - (BYTE2(result) - 48);
        if (v11 == 3) {
          goto LABEL_47;
        }
        while (1)
        {
          sub_10002C00C();
          if (!v18 & v17) {
            break;
          }
          sub_10002BFE4();
          if (!v18) {
            break;
          }
          uint64_t v15 = v27 - v26;
          if (__OFSUB__(v27, v26)) {
            break;
          }
          sub_10002BFFC();
          if (v18) {
            goto LABEL_48;
          }
        }
      }
    }
LABEL_34:
    uint64_t v15 = 0;
    LOBYTE(v7) = 1;
    goto LABEL_48;
  }
  __break(1u);
LABEL_69:
  __break(1u);
  return result;
}

uint64_t sub_10002AF70(uint64_t result, uint64_t a2)
{
  unint64_t v2 = *(void *)(result + 16);
  if (v2)
  {
    unint64_t v3 = *(void *)(a2 + 16);
    if (!v3) {
      return 0;
    }
    uint64_t v4 = *(void *)(result + 32);
    uint64_t v5 = *(void *)(a2 + 32);
    if (v4 < v5) {
      return 1;
    }
    if (v5 < v4) {
      return 0;
    }
    uint64_t v6 = 0;
    uint64_t v7 = result + 40;
    while (v2 - 1 != v6)
    {
      if (v3 - 1 == v6) {
        return 0;
      }
      uint64_t v8 = *(void *)(v7 + 8 * v6);
      uint64_t v9 = *(void *)(a2 + 40 + 8 * v6);
      if (v8 < v9) {
        return 1;
      }
      uint64_t result = 0;
      ++v6;
      if (v9 < v8) {
        return result;
      }
    }
  }
  else
  {
    unint64_t v3 = *(void *)(a2 + 16);
  }
  if (v2 == v3) {
    return 0;
  }
  if (v2 < v3) {
    return 1;
  }
  __break(1u);
  return result;
}

uint64_t sub_10002B004(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 == a3 && a2 == a4) {
    return 1;
  }
  else {
    return sub_10005F140() & 1;
  }
}

uint64_t sub_10002B048(uint64_t a1, unsigned __int8 a2, uint64_t (*a3)(void *), uint64_t a4, uint64_t a5, unint64_t a6)
{
  v49[3] = a4;
  if (a1 < 0) {
    goto LABEL_38;
  }
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = _swiftEmptyArrayStorage;
  uint64_t v41 = (char **)(v10 + 16);
  uint64_t v46 = swift_allocObject();
  *(void *)(v46 + 16) = 15;
  uint64_t v11 = HIBYTE(a6) & 0xF;
  if (!a1 || ((a6 & 0x2000000000000000) != 0 ? (uint64_t v12 = HIBYTE(a6) & 0xF) : (uint64_t v12 = a5 & 0xFFFFFFFFFFFFLL), !v12))
  {
    if ((a6 & 0x2000000000000000) == 0) {
      uint64_t v11 = a5 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v29 = 7;
    if (((a6 >> 60) & ((a5 & 0x800000000000000) == 0)) != 0) {
      uint64_t v29 = 11;
    }
    sub_10002B498(v29 | (v11 << 16), v46, a2 & 1, v10);
    swift_bridgeObjectRelease();
    uint64_t v13 = *(char **)(v10 + 16);
    swift_bridgeObjectRetain();
    swift_release();
    goto LABEL_36;
  }
  uint64_t v40 = a1;
  unint64_t v47 = 4 * v12;
  uint64_t v13 = (char *)_swiftEmptyArrayStorage;
  unint64_t v14 = 15;
  unint64_t v15 = 15;
  unint64_t v16 = 15;
  while (1)
  {
    v49[0] = sub_10005EA50();
    v49[1] = v17;
    char v18 = a3(v49);
    if (v6)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (uint64_t)v13;
    }
    char v19 = v18;
    swift_bridgeObjectRelease();
    if ((v19 & 1) == 0)
    {
      unint64_t v14 = sub_10005E9A0();
      goto LABEL_21;
    }
    int v20 = (v15 >> 14 == v14 >> 14) & a2;
    if (v20 != 1)
    {
      if (v14 >> 14 < v15 >> 14) {
        goto LABEL_38;
      }
      uint64_t v21 = sub_10005EA70();
      uint64_t v42 = v23;
      uint64_t v43 = v22;
      uint64_t v44 = v24;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v13 = sub_10000A75C(0, *((void *)v13 + 2) + 1, 1, (uint64_t)v13);
      }
      unint64_t v26 = *((void *)v13 + 2);
      unint64_t v25 = *((void *)v13 + 3);
      if (v26 >= v25 >> 1) {
        uint64_t v13 = sub_10000A75C((char *)(v25 > 1), v26 + 1, 1, (uint64_t)v13);
      }
      *((void *)v13 + 2) = v26 + 1;
      uint64_t v27 = &v13[32 * v26];
      *((void *)v27 + 4) = v21;
      *((void *)v27 + 5) = v44;
      *((void *)v27 + 6) = v43;
      *((void *)v27 + 7) = v42;
      *uint64_t v41 = v13;
    }
    uint64_t v28 = sub_10005E9A0();
    unint64_t v14 = v28;
    *(void *)(v46 + 16) = v28;
    if ((v20 & 1) == 0 && *((void *)v13 + 2) == v40) {
      break;
    }
    unint64_t v15 = v28;
    unint64_t v16 = v28;
LABEL_21:
    if (v47 == v14 >> 14) {
      goto LABEL_30;
    }
  }
  unint64_t v16 = v28;
  unint64_t v15 = v28;
LABEL_30:
  if (v47 == v15 >> 14 && (a2 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_35;
  }
  if (v47 < v16 >> 14)
  {
LABEL_38:
    uint64_t result = sub_10005F040();
    __break(1u);
    return result;
  }
  uint64_t v30 = sub_10005EA70();
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  swift_bridgeObjectRelease();
  sub_10002B5A0();
  uint64_t v37 = (char *)*((void *)*v41 + 2);
  sub_10002B5EC(v37);
  uint64_t v13 = *v41;
  *((void *)v13 + 2) = v37 + 1;
  os_log_type_t v38 = &v13[32 * (void)v37];
  *((void *)v38 + 4) = v30;
  *((void *)v38 + 5) = v32;
  *((void *)v38 + 6) = v34;
  *((void *)v38 + 7) = v36;
  *uint64_t v41 = v13;
LABEL_35:
  swift_bridgeObjectRetain();
  swift_release();
LABEL_36:
  swift_release();
  return (uint64_t)v13;
}

uint64_t sub_10002B498(unint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  unint64_t v4 = *(void *)(a2 + 16) >> 14;
  int v5 = (v4 == a1 >> 14) & a3;
  if (v5 == 1) {
    return v5 ^ 1u;
  }
  if (a1 >> 14 >= v4)
  {
    uint64_t v7 = sub_10005EA70();
    uint64_t v9 = v8;
    uint64_t v11 = v10;
    uint64_t v13 = v12;
    sub_10002B5A0();
    unint64_t v14 = *(char **)(*(void *)(a4 + 16) + 16);
    sub_10002B5EC(v14);
    uint64_t v15 = *(void *)(a4 + 16);
    *(void *)(v15 + 16) = v14 + 1;
    unint64_t v16 = (void *)(v15 + 32 * (void)v14);
    v16[4] = v7;
    v16[5] = v9;
    void v16[6] = v11;
    v16[7] = v13;
    return v5 ^ 1u;
  }
  uint64_t result = sub_10005F040();
  __break(1u);
  return result;
}

char *sub_10002B5A0()
{
  uint64_t v1 = *v0;
  uint64_t result = (char *)swift_isUniquelyReferenced_nonNull_native();
  uint64_t *v0 = v1;
  if (!result)
  {
    uint64_t result = sub_10000A75C(result, *(void *)(v1 + 16) + 1, 1, v1);
    uint64_t *v0 = (uint64_t)result;
  }
  return result;
}

char *sub_10002B5EC(char *result)
{
  unint64_t v2 = *(void *)(*v1 + 24);
  if ((uint64_t)(result + 1) > (uint64_t)(v2 >> 1))
  {
    uint64_t result = sub_10000A75C((char *)(v2 > 1), (int64_t)(result + 1), 1, *v1);
    *uint64_t v1 = (uint64_t)result;
  }
  return result;
}

void *sub_10002B62C(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return &_swiftEmptyArrayStorage;
  }
  sub_100007D1C(&qword_100084120);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  void v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_10002B694(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v6 = sub_10005EA30();
    sub_10002C01C(v6);
    return v7 | 4;
  }
  else
  {
    uint64_t v3 = sub_10005EA00();
    sub_10002C01C(v3);
    return v4 | 8;
  }
}

unsigned __int8 *sub_10002B6F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_10005EA60();
  unint64_t v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = HIBYTE(v6) & 0xF;
    uint64_t v13 = v5;
    uint64_t v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  uint64_t v5 = sub_10002BA54();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v6 = v10;
  if ((v10 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    uint64_t v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    uint64_t v7 = (unsigned __int8 *)sub_10005EF80();
  }
LABEL_7:
  uint64_t v11 = sub_10002B7D8(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unsigned __int8 *sub_10002B7D8(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 == 43)
  {
    if (a2 >= 1)
    {
      uint64_t v15 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v16 = a3 + 48;
        unsigned __int8 v17 = a3 + 55;
        unsigned __int8 v18 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v16 = 58;
        }
        else
        {
          unsigned __int8 v18 = 97;
          unsigned __int8 v17 = 65;
        }
        if (result)
        {
          uint64_t v9 = 0;
          char v19 = result + 1;
          do
          {
            unsigned int v20 = *v19;
            if (v20 < 0x30 || v20 >= v16)
            {
              if (v20 < 0x41 || v20 >= v17)
              {
                uint64_t v13 = 0;
                if (v20 < 0x61 || v20 >= v18) {
                  return (unsigned __int8 *)v13;
                }
                char v21 = -87;
              }
              else
              {
                char v21 = -55;
              }
            }
            else
            {
              char v21 = -48;
            }
            uint64_t v22 = v9 * a3;
            if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
              return 0;
            }
            uint64_t v9 = v22 + (v20 + v21);
            if (__OFADD__(v22, (v20 + v21))) {
              return 0;
            }
            ++v19;
            --v15;
          }
          while (v15);
          return (unsigned __int8 *)v9;
        }
        return 0;
      }
      return 0;
    }
  }
  else
  {
    if (v4 != 45)
    {
      if (a2)
      {
        unsigned __int8 v23 = a3 + 48;
        unsigned __int8 v24 = a3 + 55;
        unsigned __int8 v25 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v23 = 58;
        }
        else
        {
          unsigned __int8 v25 = 97;
          unsigned __int8 v24 = 65;
        }
        if (result)
        {
          uint64_t v26 = 0;
          do
          {
            unsigned int v27 = *result;
            if (v27 < 0x30 || v27 >= v23)
            {
              if (v27 < 0x41 || v27 >= v24)
              {
                uint64_t v13 = 0;
                if (v27 < 0x61 || v27 >= v25) {
                  return (unsigned __int8 *)v13;
                }
                char v28 = -87;
              }
              else
              {
                char v28 = -55;
              }
            }
            else
            {
              char v28 = -48;
            }
            uint64_t v29 = v26 * a3;
            if ((unsigned __int128)(v26 * (__int128)a3) >> 64 != (v26 * a3) >> 63) {
              return 0;
            }
            uint64_t v26 = v29 + (v27 + v28);
            if (__OFADD__(v29, (v27 + v28))) {
              return 0;
            }
            ++result;
            --v3;
          }
          while (v3);
          return (unsigned __int8 *)(v29 + (v27 + v28));
        }
        return 0;
      }
      return 0;
    }
    if (a2 >= 1)
    {
      uint64_t v5 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v6 = a3 + 48;
        unsigned __int8 v7 = a3 + 55;
        unsigned __int8 v8 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v6 = 58;
        }
        else
        {
          unsigned __int8 v8 = 97;
          unsigned __int8 v7 = 65;
        }
        if (result)
        {
          uint64_t v9 = 0;
          for (unint64_t i = result + 1; ; ++i)
          {
            unsigned int v11 = *i;
            if (v11 < 0x30 || v11 >= v6)
            {
              if (v11 < 0x41 || v11 >= v7)
              {
                uint64_t v13 = 0;
                if (v11 < 0x61 || v11 >= v8) {
                  return (unsigned __int8 *)v13;
                }
                char v12 = -87;
              }
              else
              {
                char v12 = -55;
              }
            }
            else
            {
              char v12 = -48;
            }
            uint64_t v14 = v9 * a3;
            if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
              return 0;
            }
            uint64_t v9 = v14 - (v11 + v12);
            if (__OFSUB__(v14, (v11 + v12))) {
              return 0;
            }
            if (!--v5) {
              return (unsigned __int8 *)v9;
            }
          }
        }
        return 0;
      }
      return 0;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_10002BA54()
{
  unint64_t v0 = sub_10002BAC0();
  uint64_t v4 = sub_10002BAF4(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_10002BAC0()
{
  return sub_10005EA70();
}

uint64_t sub_10002BAF4(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = sub_10002BC4C(a1, a2, a3, a4);
    if (!v9
      || (uint64_t v10 = v9,
          unsigned int v11 = sub_10002B62C(v9, 0),
          unint64_t v12 = sub_10002BD4C((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4),
          swift_bridgeObjectRetain(),
          swift_bridgeObjectRelease(),
          v12 == v10))
    {
      uint64_t v13 = sub_10005E970();
      swift_release();
      return v13;
    }
    __break(1u);
  }
  else
  {
    if ((a4 & 0x2000000000000000) != 0)
    {
      v14[0] = a3;
      v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
      return sub_10005E970();
    }
    if ((a3 & 0x1000000000000000) != 0) {
      goto LABEL_4;
    }
  }
  sub_10005EF80();
LABEL_4:

  return sub_10005E970();
}

uint64_t sub_10002BC4C(uint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4)
{
  unint64_t v4 = a4;
  uint64_t v5 = a3;
  unint64_t v6 = a2;
  unint64_t v7 = a1;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((a1 & 0xC) == 4 << v8)
  {
    a1 = sub_10002B694(a1, a3, a4);
    unint64_t v7 = a1;
  }
  if ((v6 & 0xC) == v9)
  {
    a1 = sub_10002B694(v6, v5, v4);
    unint64_t v6 = a1;
    if ((v4 & 0x1000000000000000) == 0) {
      return (v6 >> 16) - (v7 >> 16);
    }
  }
  else if ((v4 & 0x1000000000000000) == 0)
  {
    return (v6 >> 16) - (v7 >> 16);
  }
  unint64_t v11 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0) {
    unint64_t v11 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (v11 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v11 >= v6 >> 16)
  {
    a1 = v7;
    a2 = v6;
    a3 = v5;
    a4 = v4;
    return String.UTF8View._foreignDistance(from:to:)(a1, a2, a3, a4);
  }
  __break(1u);
  return String.UTF8View._foreignDistance(from:to:)(a1, a2, a3, a4);
}

unint64_t sub_10002BD4C(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_35;
  }
  if (a3 < 0) {
    goto LABEL_38;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_35:
    void *v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    void v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    uint64_t result = v12;
    if ((v12 & 0xC) == v15) {
      uint64_t result = sub_10002B694(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      uint64_t result = sub_10005EA20();
      char v19 = result;
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
      }
      else
      {
        uint64_t result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          uint64_t result = sub_10005EF80();
        }
        char v19 = *(unsigned char *)(result + v18);
      }
    }
    if ((v12 & 0xC) == v15)
    {
      uint64_t result = sub_10002B694(v12, a6, a7);
      unint64_t v12 = result;
      if ((a7 & 0x1000000000000000) == 0)
      {
LABEL_27:
        unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
        goto LABEL_31;
      }
    }
    else if ((a7 & 0x1000000000000000) == 0)
    {
      goto LABEL_27;
    }
    if (v23 <= v12 >> 16) {
      goto LABEL_37;
    }
    unint64_t v12 = sub_10005E9F0();
LABEL_31:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_35;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_35;
    }
  }
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_10002BF50(uint64_t *a1, uint64_t *a2)
{
  return sub_10002B004(*a1, a1[1], *a2, a2[1]) & 1;
}

uint64_t sub_10002BF7C(uint64_t *a1)
{
  return sub_10002BF50(a1, *(uint64_t **)(v1 + 16)) & 1;
}

uint64_t sub_10002BF9C()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10002BFD4()
{
  return _swift_deallocObject(v0, 24, 7);
}

unint64_t sub_10002C01C(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFFFFCLL | v1 & 3;
}

uint64_t AudioStream.session.getter()
{
  return swift_unknownObjectWeakLoadStrong();
}

void AudioStream.session.setter(void *a1)
{
}

void (*AudioStream.session.modify(void *a1))(id **a1, char a2)
{
  unint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC17ContinuityDisplay11AudioStream_session;
  v3[4] = v1;
  v3[5] = v4;
  swift_beginAccess();
  v3[3] = swift_unknownObjectWeakLoadStrong();
  return sub_10000CA58;
}

id AudioStream.__deallocating_deinit()
{
  sub_10002C270();
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AudioStream();
  return [super dealloc];
}

void sub_10002C270()
{
  uint64_t v1 = OBJC_IVAR____TtC17ContinuityDisplay11AudioStream_started;
  if (v0[OBJC_IVAR____TtC17ContinuityDisplay11AudioStream_started] == 1)
  {
    objc_super v2 = v0;
    unint64_t v3 = v0;
    uint64_t v4 = sub_10005E720();
    os_log_type_t v5 = sub_10005EC30();
    unint64_t v6 = &OBJC_IVAR____TtC17ContinuityDisplay11VideoStream_started;
    if (os_log_type_enabled(v4, v5))
    {
      unint64_t v7 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      *(_DWORD *)unint64_t v7 = 136315138;
      uint64_t v15 = v14;
      id v8 = *(id *)&v3[OBJC_IVAR____TtC17ContinuityDisplay11AudioStream_audioStream];
      id v9 = [v8 description];
      uint64_t v10 = sub_10005E920();
      unint64_t v12 = v11;

      uint64_t v13 = v10;
      unint64_t v6 = &OBJC_IVAR____TtC17ContinuityDisplay11VideoStream_started;
      sub_10000F098(v13, v12, &v15);
      sub_10005EE10();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "Stopping audio stream %s", v7, 0xCu);
      swift_arrayDestroy();
      sub_10000FB20();
      sub_10000FB20();
    }
    else
    {
    }
    [*(id *)&v3[v6[295]] stop];
    v2[v1] = 0;
  }
}

uint64_t type metadata accessor for AudioStream()
{
  uint64_t result = qword_100084990;
  if (!qword_100084990) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void AudioStream.init()()
{
}

void AudioStream.stream(_:didStart:error:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  sub_10000FB38();
  a23 = v25;
  a24 = v26;
  char v28 = v27;
  uint64_t v30 = v29;
  id v31 = v24;
  id v32 = v30;
  swift_errorRetain();
  id v33 = v31;
  id v34 = v32;
  swift_errorRetain();
  uint64_t v35 = sub_10005E720();
  os_log_type_t v36 = sub_10005EC50();
  if (os_log_type_enabled(v35, v36))
  {
    uint64_t v37 = swift_slowAlloc();
    a12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v37 = 136316162;
    swift_getObjectType();
    uint64_t v38 = sub_10005F220();
    sub_10002DB0C(v38, v39, v40, v41, v42);
    sub_10005EE10();

    swift_bridgeObjectRelease();
    *(_WORD *)(v37 + 12) = 2080;
    sub_10002DA10();
    sub_10000F098(0xD000000000000019, v43, v44);
    sub_10005EE10();
    *(_WORD *)(v37 + 22) = 2080;
    id v45 = v34;
    sub_100007D1C(&qword_100084920);
    uint64_t v46 = sub_10005E940();
    sub_10000F098(v46, v47, &a12);
    sub_10005EE10();

    swift_bridgeObjectRelease();
    *(_WORD *)(v37 + 32) = 2080;
    if (v28) {
      uint64_t v48 = 1702195828;
    }
    else {
      uint64_t v48 = 0x65736C6166;
    }
    if (v28) {
      unint64_t v49 = 0xE400000000000000;
    }
    else {
      unint64_t v49 = 0xE500000000000000;
    }
    sub_10000F098(v48, v49, &a12);
    sub_10005EE10();
    swift_bridgeObjectRelease();
    *(_WORD *)(v37 + 42) = 2080;
    swift_errorRetain();
    sub_100007D1C(&qword_100084928);
    uint64_t v50 = sub_10005E940();
    sub_10002DB0C(v50, v51, v52, v53, v54);
    sub_10005EE10();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v35, v36, "Called %s.%s stream: [%s] didStart: [%s] error: [%s]", (uint8_t *)v37, 0x34u);
    swift_arrayDestroy();
    sub_10000FB20();
    sub_10000FB20();

    sub_10000FB54();
  }
  else
  {

    swift_errorRelease();
    sub_10000FB54();
    swift_errorRelease();
  }
}

#error "10002C834: call analysis failed (funcsize=35)"

uint64_t AudioStream.streamDidStop(_:)(int a1, uint64_t a2, uint64_t a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, NSObject *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  return sub_10002D980(a1, 17, 0x622A0, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24);
}

#error "10002C8B4: call analysis failed (funcsize=24)"

void AudioStream.stream(_:didPause:error:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10002CC34(a1, a2, a3, 0xD000000000000019, 0x80000001000622C0, "Called %s.%s didPause: [%{BOOL}d] error: [%@]");
}

void AudioStream.stream(_:didResume:error:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10002CC34(a1, a2, a3, 0xD00000000000001ALL, 0x80000001000622E0, "Called %s.%s didResume: [%{BOOL}d] error: [%@]");
}

uint64_t AudioStream.streamDidInterruptionBegin(_:)(int a1, uint64_t a2, uint64_t a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, NSObject *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  return sub_10002D980(a1, 30, 0x62300, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24);
}

#error "10002CB14: call analysis failed (funcsize=24)"

uint64_t AudioStream.streamDidInterruptionEnd(_:)(int a1, uint64_t a2, uint64_t a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, NSObject *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  return sub_10002D980(a1, 28, 0x62320, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24);
}

#error "10002CB8C: call analysis failed (funcsize=24)"

void AudioStream.stream(_:didStartSynchronizer:error:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10002CC34(a1, a2, a3, 0xD000000000000025, 0x8000000100062340, "Called %s.%s didStart: [%{BOOL}d] error: [%@]");
}

void sub_10002CC34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, const char *a6)
{
  id v11 = v6;
  swift_errorRetain();
  id v12 = v11;
  swift_errorRetain();
  uint64_t v13 = sub_10005E720();
  os_log_type_t v14 = sub_10005EC50();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    char v19 = (void *)swift_slowAlloc();
    uint64_t v20 = sub_10002DA9C();
    *(_DWORD *)uint64_t v15 = 136315906;
    swift_getObjectType();
    uint64_t v16 = sub_10005F220();
    sub_10000F098(v16, v17, &v20);
    sub_10005EE10();

    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 2080;
    sub_10000F098(a4, a5, &v20);
    sub_10002DA80();
    *(_WORD *)(v15 + 22) = 1024;
    sub_10005EE10();
    *(_WORD *)(v15 + 28) = 2112;
    if (a3)
    {
      swift_errorRetain();
      uint64_t v18 = _swift_stdlib_bridgeErrorToNSError();
      sub_10002DA80();
    }
    else
    {
      sub_10002DA80();
      uint64_t v18 = 0;
    }
    *char v19 = v18;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, a6, (uint8_t *)v15, 0x26u);
    sub_100007D1C(&qword_100084930);
    swift_arrayDestroy();
    sub_10000FB20();
    swift_arrayDestroy();
    sub_10000FB20();
    sub_10000FB20();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }
}

uint64_t AudioStream.streamDidRTPTimeOut(_:)(int a1, uint64_t a2, uint64_t a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, NSObject *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  return sub_10002D980(a1, 23, 0x62370, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24);
}

#error "10002CFE8: call analysis failed (funcsize=24)"

uint64_t AudioStream.streamDidRTCPTimeOut(_:)(int a1, uint64_t a2, uint64_t a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, NSObject *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  return sub_10002D980(a1, 24, 0x62390, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24);
}

#error "10002D060: call analysis failed (funcsize=24)"

uint64_t AudioStream.streamDidRecover(fromRTCPTimeOut:)(int a1, uint64_t a2, uint64_t a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, NSObject *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  return sub_10002D980(a1, 34, 0x623B0, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24);
}

#error "10002D0D8: call analysis failed (funcsize=24)"

void AudioStream.stream(_:didReceiveDTMFEventWithDigit:)()
{
  id v1 = v0;
  osos_log_t log = sub_10005E720();
  os_log_type_t v2 = sub_10005EC50();
  if (os_log_type_enabled(oslog, v2))
  {
    uint64_t v3 = sub_10002DAF4();
    sub_10002DA9C();
    *(_DWORD *)uint64_t v3 = 136315394;
    swift_getObjectType();
    uint64_t v4 = sub_10005F220();
    sub_10002DB0C(v4, v5, v6, v7, v8);
    sub_10002D988();

    swift_bridgeObjectRelease();
    *(_WORD *)(v3 + 12) = 2080;
    sub_10002DA10();
    sub_10000F098(0xD000000000000027, v9, v10);
    sub_10002DA5C();
    sub_10002DAB4((void *)&_mh_execute_header, v11, v12, "Called %s.%s", v13, v14, v15, v16, v19, oslog);
    swift_arrayDestroy();
    sub_10000FB20();
    sub_10000FB20();

    sub_10002DA20();
  }
  else
  {

    sub_10002DA20();
  }
}

void AudioStream.stream(_:didReceiveRTCPPackets:)()
{
  id v1 = v0;
  osos_log_t log = sub_10005E720();
  os_log_type_t v2 = sub_10005EC30();
  if (os_log_type_enabled(oslog, v2))
  {
    uint64_t v3 = sub_10002DAF4();
    sub_10002DA9C();
    *(_DWORD *)uint64_t v3 = 136315394;
    swift_getObjectType();
    uint64_t v4 = sub_10005F220();
    sub_10002DB0C(v4, v5, v6, v7, v8);
    sub_10002D988();

    swift_bridgeObjectRelease();
    *(_WORD *)(v3 + 12) = 2080;
    sub_10002DA10();
    sub_10000F098(0xD000000000000020, v9, v10);
    sub_10002DA5C();
    sub_10002DAB4((void *)&_mh_execute_header, v11, v12, "Called %s.%s", v13, v14, v15, v16, v19, oslog);
    swift_arrayDestroy();
    sub_10000FB20();
    sub_10000FB20();

    sub_10002DA20();
  }
  else
  {

    sub_10002DA20();
  }
}

uint64_t AudioStream.streamDidServerDie(_:)(int a1, uint64_t a2, uint64_t a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, NSObject *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  return sub_10002D980(a1, 22, 0x62440, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24);
}

#error "10002D578: call analysis failed (funcsize=78)"

#error "10002D620: call analysis failed (funcsize=24)"

uint64_t AudioStream.stream(_:updateInputFrequencyLevel:)(int a1, int a2, int a3, uint64_t a4, uint64_t a5, int a6, int a7, int a8, uint64_t a9, NSObject *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  return sub_10002D9E0(a1, a2, a3, 36, 0x62460, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24);
}

uint64_t AudioStream.stream(_:updateOutputFrequencyLevel:)(int a1, int a2, int a3, uint64_t a4, uint64_t a5, int a6, int a7, int a8, uint64_t a9, NSObject *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  return sub_10002D9E0(a1, a2, a3, 37, 0x62490, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24);
}

#error "10002D760: call analysis failed (funcsize=78)"

void sub_10002D7F0(void *a1, uint64_t a2, void *a3, void *a4, void (*a5)(void))
{
  if (a4)
  {
    id v8 = a3;
    id v9 = a1;
    id v10 = a4;
    uint64_t v11 = sub_10005E600();
    unint64_t v13 = v12;
  }
  else
  {
    id v14 = a3;
    id v15 = a1;
    uint64_t v11 = 0;
    unint64_t v13 = 0xF000000000000000;
  }
  a5();
  sub_10001A2A4(v11, v13);
}

ValueMetadata *type metadata accessor for AudioConfig()
{
  return &type metadata for AudioConfig;
}

uint64_t sub_10002D8B8()
{
  return type metadata accessor for AudioStream();
}

uint64_t sub_10002D8C0()
{
  uint64_t result = sub_10005E750();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_10002D980(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, NSObject *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  return sub_10002D4B0(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24);
}

uint64_t sub_10002D988()
{
  return sub_10005EE10();
}

uint64_t sub_10002D9B4()
{
  return sub_10005EE10();
}

uint64_t sub_10002D9E0(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, NSObject *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  return sub_10002D698(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24);
}

uint64_t sub_10002D9E8(uint64_t a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  *(_WORD *)(v4 + 12) = 2080;
  return sub_10000F098(v5, v3, (uint64_t *)va);
}

uint64_t sub_10002DA38()
{
  return sub_10005EE10();
}

uint64_t sub_10002DA5C()
{
  return sub_10005EE10();
}

uint64_t sub_10002DA80()
{
  return sub_10005EE10();
}

uint64_t sub_10002DA9C()
{
  return swift_slowAlloc();
}

void sub_10002DAB4(void *a1, int a2, int a3, const char *a4, int a5, int a6, int a7, int a8, uint64_t a9, os_log_t log)
{
  _os_log_impl(a1, log, v11, a4, v10, 0x16u);
}

void sub_10002DAD4(void *a1, int a2, int a3, const char *a4, int a5, int a6, int a7, int a8, uint64_t a9, os_log_t log)
{
  _os_log_impl(a1, log, v11, a4, v10, 0x16u);
}

uint64_t sub_10002DAF4()
{
  return swift_slowAlloc();
}

uint64_t sub_10002DB0C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  return sub_10000F098(a1, a2, (uint64_t *)va);
}

void sub_10002DB24(void (*a1)(void))
{
  a1();
  unint64_t v1 = (void *)sub_10005E520();
  swift_errorRelease();
  id v2 = [v1 localizedDescription];
  uint64_t v3 = sub_10005E920();
  unint64_t v5 = v4;

  id v16 = v1;
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_10005E720();
  os_log_type_t v7 = sub_10005EC40();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136446979;
    sub_10000F098(0xD000000000000015, 0x8000000100062540, &v17);
    sub_10005EE10();
    *(_WORD *)(v8 + 12) = 2082;
    id v9 = [v16 domain];
    uint64_t v10 = sub_10005E920();
    uint64_t v15 = v3;
    unint64_t v12 = v11;

    sub_10000F098(v10, v12, &v17);
    sub_10005EE10();

    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 22) = 2048;
    [v16 code];

    sub_10005EE10();
    *(_WORD *)(v8 + 32) = 2081;
    swift_bridgeObjectRetain();
    sub_10000F098(v15, v5, &v17);
    sub_10005EE10();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "%{public}s: %{public}s (%ld) %{private}s", (uint8_t *)v8, 0x2Au);
    swift_arrayDestroy();
    sub_10000FB20();
    sub_10000FB20();

    sub_10000FB54();
  }
  else
  {
    swift_bridgeObjectRelease_n();

    sub_10000FB54();
  }
}

void sub_10002DE1C(void (*a1)(void))
{
  a1();
  unint64_t v1 = (void *)sub_10005E520();
  swift_errorRelease();
  id v2 = [v1 localizedDescription];
  uint64_t v3 = sub_10005E920();
  unint64_t v5 = v4;

  uint64_t v18 = sub_10005F110();
  unint64_t v19 = v6;
  v20._uint64_t countAndFlagsBits = 0x75716552203D3D3DLL;
  v20._object = (void *)0xEC00000020747365;
  sub_10005E9C0(v20);
  sub_10002E644();
  v21._uint64_t countAndFlagsBits = sub_10005EA40();
  sub_10005E9C0(v21);
  swift_bridgeObjectRelease();
  v22._uint64_t countAndFlagsBits = 0x656873696E694620;
  v22._object = (void *)0xED00003D3D3D2064;
  sub_10005E9C0(v22);
  uint64_t v7 = v18;
  unint64_t v8 = v19;
  id v9 = v1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_10005E720();
  os_log_type_t v11 = sub_10005EC40();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136446979;
    swift_bridgeObjectRetain();
    sub_10000F098(v7, v8, &v18);
    sub_10005EE10();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v12 + 12) = 2082;
    id v13 = [v9 domain];
    uint64_t v14 = sub_10005E920();
    uint64_t v17 = v3;
    unint64_t v16 = v15;

    sub_10000F098(v14, v16, &v18);
    sub_10005EE10();

    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 22) = 2048;
    [v9 code];

    sub_10002E6AC();
    *(_WORD *)(v12 + 32) = 2081;
    swift_bridgeObjectRetain();
    sub_10000F098(v17, v5, &v18);
    sub_10002E6AC();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "%{public}s: %{public}s (%ld) %{private}s", (uint8_t *)v12, 0x2Au);
    swift_arrayDestroy();
    sub_10000FB20();
    sub_10000FB20();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
}

void sub_10002E180(uint64_t (*a1)(void), uint64_t a2, void (*a3)(void))
{
  a3();
  unint64_t v4 = (void *)sub_10005E520();
  swift_errorRelease();
  id v5 = [v4 localizedDescription];
  uint64_t v6 = sub_10005E920();
  unint64_t v8 = v7;

  uint64_t v9 = a1();
  if (v10)
  {
    uint64_t v11 = v9;
    unint64_t v12 = v10;
    id v29 = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v13 = sub_10005E720();
    os_log_type_t v14 = sub_10005EC40();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 136446979;
      swift_bridgeObjectRetain();
      sub_10000F098(v11, v12, &v30);
      sub_10005EE10();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v15 + 12) = 2082;
      id v16 = [v29 domain];
      uint64_t v17 = v6;
      uint64_t v18 = sub_10005E920();
      unint64_t v20 = v19;

      sub_10000F098(v18, v20, &v30);
      sub_10005EE10();

      swift_bridgeObjectRelease();
      *(_WORD *)(v15 + 22) = 2048;
      [v29 code];

      sub_10002E6AC();
      *(_WORD *)(v15 + 32) = 2081;
      swift_bridgeObjectRetain();
      sub_10000F098(v17, v8, &v30);
      sub_10002E6AC();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "%{public}s: %{public}s (%ld) %{private}s", (uint8_t *)v15, 0x2Au);
      swift_arrayDestroy();
LABEL_6:
      sub_10000FB20();
      sub_10000FB20();

      sub_10000FB54();
      return;
    }
    swift_bridgeObjectRelease_n();
  }
  else
  {
    id v29 = v4;
    swift_bridgeObjectRetain();
    id v13 = sub_10005E720();
    os_log_type_t v21 = sub_10005EC40();
    if (os_log_type_enabled(v13, v21))
    {
      uint64_t v22 = swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      *(_DWORD *)uint64_t v22 = 136446723;
      id v23 = [v29 domain];
      uint64_t v24 = sub_10005E920();
      unint64_t v26 = v25;

      sub_10000F098(v24, v26, &v30);
      sub_10002E690();

      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 12) = 2048;
      [v29 code];

      sub_10002E690();
      *(_WORD *)(v22 + 22) = 2081;
      swift_bridgeObjectRetain();
      sub_10000F098(v6, v8, &v30);
      sub_10002E690();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v13, v21, "%{public}s (%ld) %{private}s", (uint8_t *)v22, 0x20u);
      swift_arrayDestroy();
      goto LABEL_6;
    }
  }
  swift_bridgeObjectRelease_n();

  sub_10000FB54();
}

unint64_t sub_10002E644()
{
  unint64_t result = qword_100084A00;
  if (!qword_100084A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100084A00);
  }
  return result;
}

uint64_t sub_10002E690()
{
  return sub_10005EE10();
}

uint64_t sub_10002E6AC()
{
  return sub_10005EE10();
}

id sub_10002E6C4(int a1, uint64_t a2, uint64_t a3)
{
  return sub_10002E6E8(a1, a2, a3);
}

id sub_10002E6D0(int a1, uint64_t a2, uint64_t a3)
{
  return sub_10002E6E8(a1, a2, a3);
}

id sub_10002E6DC(int a1, uint64_t a2, uint64_t a3)
{
  return sub_10002E6E8(a1, a2, a3);
}

id sub_10002E6E8(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10005E920();
  return sub_100019858(v6, v7, a1, a2, a3, 0);
}

uint64_t sub_10002E76C(uint64_t a1)
{
  if (*(void *)(a1 + 16)
    && (unint64_t v1 = sub_10003C46C(3), (v2 & 1) != 0)
    && (sub_10003DE78(v1, v2, v3), sub_10003DCA8()))
  {
    return v5;
  }
  else
  {
    return 1;
  }
}

uint64_t sub_10002E7D0(uint64_t a1)
{
  if (!*(void *)(a1 + 16)) {
    return 0;
  }
  unint64_t v1 = sub_10003C46C(4);
  if ((v2 & 1) == 0) {
    return 0;
  }
  sub_10003DE78(v1, v2, v3);
  uint64_t result = sub_10003DCA8();
  if (result) {
    return v5;
  }
  return result;
}

uint64_t sub_10002E834(uint64_t a1)
{
  if (*(void *)(a1 + 16)
    && (unint64_t v1 = sub_10003C46C(10), (v2 & 1) != 0)
    && (sub_10003DE78(v1, v2, v3), sub_10003DCA8()))
  {
    return v5;
  }
  else
  {
    return 1;
  }
}

uint64_t sub_10002E898(uint64_t a1)
{
  if (!*(void *)(a1 + 16)) {
    return 0;
  }
  unint64_t v2 = sub_10003C46C(11);
  if ((v3 & 1) == 0) {
    return 0;
  }
  sub_10000AF90(*(void *)(a1 + 56) + 32 * v2, (uint64_t)v6);
  uint64_t result = swift_dynamicCast();
  if (result) {
    return v5;
  }
  return result;
}

uint64_t sub_10002E918(uint64_t a1)
{
  if (!*(void *)(a1 + 16)) {
    return 0;
  }
  unint64_t v2 = sub_10003C46C(12);
  if ((v3 & 1) == 0) {
    return 0;
  }
  sub_10000AF90(*(void *)(a1 + 56) + 32 * v2, (uint64_t)v6);
  uint64_t result = swift_dynamicCast();
  if (result) {
    return v5;
  }
  return result;
}

uint64_t sub_10002E998(char a1)
{
  switch(a1)
  {
    case 3:
    case 4:
    case 5:
    case 6:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
      goto LABEL_3;
    case 7:
      sub_100007D1C((uint64_t *)&unk_100084DB0);
LABEL_3:
      if ((swift_dynamicCast() & 1) == 0) {
        return 0;
      }
      return v2;
    default:
      return 0;
  }
}

uint64_t sub_10002EAD8(char a1)
{
  return byte_100064DC2[a1];
}

uint64_t sub_10002EAEC(unsigned __int8 a1)
{
  uint64_t v1 = a1;
  uint64_t result = 0;
  switch(v1)
  {
    case 5:
      uint64_t result = 0x4031000000000000;
      break;
    case 15:
      uint64_t result = 0x3FFC71C71C71C71CLL;
      break;
    case 16:
      uint64_t result = 0x4050000000000000;
      break;
    case 17:
      uint64_t result = 0x4048000000000000;
      break;
    case 18:
      uint64_t result = 0x4036000000000000;
      break;
    default:
      return result;
  }
  return result;
}

Swift::Int sub_10002EBB8(uint64_t a1, char a2)
{
  return sub_10005F200();
}

Swift::Int sub_10002EC18(uint64_t a1, Swift::UInt a2)
{
  return sub_10005F200();
}

uint64_t sub_10002EC5C(uint64_t a1, uint64_t (*a2)(_OWORD *, uint64_t *))
{
  uint64_t v2 = *(void *)(a1 + 128);
  long long v3 = *(_OWORD *)(a1 + 16);
  v8[0] = *(_OWORD *)a1;
  v8[1] = v3;
  long long v4 = *(_OWORD *)(a1 + 48);
  _OWORD v8[2] = *(_OWORD *)(a1 + 32);
  v8[3] = v4;
  long long v5 = *(_OWORD *)(a1 + 80);
  void v8[4] = *(_OWORD *)(a1 + 64);
  void v8[5] = v5;
  long long v6 = *(_OWORD *)(a1 + 112);
  v8[6] = *(_OWORD *)(a1 + 96);
  v8[7] = v6;
  uint64_t v9 = v2;
  return a2(v8, &v10);
}

uint64_t sub_10002ECF8(uint64_t a1)
{
  long long v3 = (void *)(v1 + OBJC_IVAR___DisplayMainViewController_displaySettings);
  sub_10003DF5C();
  void *v3 = a1;
  return swift_bridgeObjectRelease();
}

void sub_10002ED40(uint64_t a1, uint64_t a2, char a3)
{
  sub_10003E0F0();
  uint64_t v7 = v3 + OBJC_IVAR___DisplayMainViewController_snapshot;
  sub_10003DF5C();
  unint64_t v8 = *(void **)v7;
  uint64_t v9 = *(void **)(v7 + 8);
  *(void *)uint64_t v7 = v5;
  *(void *)(v7 + 8) = v4;
  *(unsigned char *)(v7 + 16) = a3;
  sub_10003D9C0(v8, v9);
}

uint64_t (*sub_10002ED9C())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_10002EDF0(uint64_t a1)
{
  return sub_10001A65C(a1, OBJC_IVAR___DisplayMainViewController_sidebarController);
}

uint64_t sub_10002EDFC(uint64_t a1)
{
  return sub_10001A65C(a1, OBJC_IVAR___DisplayMainViewController_displayLeftConstraint);
}

uint64_t sub_10002EE08(uint64_t a1)
{
  return sub_10001A65C(a1, OBJC_IVAR___DisplayMainViewController_displayRightConstraint);
}

uint64_t sub_10002EE14(uint64_t a1)
{
  return sub_10001A65C(a1, OBJC_IVAR___DisplayMainViewController_keyboardResponder);
}

uint64_t sub_10002EE20(uint64_t a1)
{
  return sub_10001A65C(a1, OBJC_IVAR___DisplayMainViewController_qosViewController);
}

uint64_t sub_10002EE2C(uint64_t a1)
{
  return sub_10001A65C(a1, OBJC_IVAR___DisplayMainViewController_presentedAlert);
}

uint64_t sub_10002EE38(uint64_t a1)
{
  return sub_10003DD0C(a1);
}

uint64_t (*sub_10002EE44())()
{
  return j__swift_endAccess;
}

uint64_t sub_10002EE98(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR___DisplayMainViewController_disableUniversalControlAssertion) = a1;
  return swift_release();
}

void sub_10002EEB0()
{
}

void sub_10002EEC0(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void **)(v2 + OBJC_IVAR___DisplayMainViewController_sidebarController);
  if (v3)
  {
    v6[0] = a1;
    memset(&v6[1], 0, 24);
    char v7 = 2;
    char v4 = *(unsigned char *)(v2 + *a2);
    id v5 = v3;
    sub_10001C2F4((uint64_t)v6, v4);
  }
}

void *sub_10002EF80()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR___DisplayMainViewController__customUndoManager);
  id v2 = v1;
  return v1;
}

void *sub_10002F014()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + OBJC_IVAR___DisplayMainViewController_displayViewController)
                 + OBJC_IVAR___DisplayViewController_session);
  if (!v1) {
    return 0;
  }
  id v2 = *(void **)(v1 + OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_request);
  id v3 = v2;
  return v2;
}

uint64_t sub_10002F0A4()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR___DisplayMainViewController_displaySettings);
  sub_10001A688();
  uint64_t v2 = *v1;
  if (*(void *)(*v1 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v3 = sub_10003C46C(3);
    if (v4 & 1) != 0 && (sub_10000AF90(*(void *)(v2 + 56) + 32 * v3, (uint64_t)v9), (sub_10003E14C()))
    {
      swift_bridgeObjectRelease();
      if ((v8 & 1) == 0) {
        return 0;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v5 = swift_bridgeObjectRetain();
  char v6 = sub_10002E7D0(v5);
  swift_bridgeObjectRelease();
  if (v6) {
    return 0;
  }
  return 4;
}

uint64_t sub_10002F1AC()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR___DisplayMainViewController_displaySettings);
  sub_10001A688();
  uint64_t v2 = *v1;
  if (!*(void *)(*v1 + 16)) {
    goto LABEL_7;
  }
  swift_bridgeObjectRetain();
  unint64_t v3 = sub_10003C46C(3);
  if ((v4 & 1) == 0 || (sub_10000AF90(*(void *)(v2 + 56) + 32 * v3, (uint64_t)v9), (sub_10003E14C() & 1) == 0))
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  swift_bridgeObjectRelease();
  if (v8)
  {
LABEL_7:
    uint64_t v6 = swift_bridgeObjectRetain();
    char v5 = sub_10002E7D0(v6);
    swift_bridgeObjectRelease();
    return v5 & 1;
  }
  char v5 = 1;
  return v5 & 1;
}

id sub_10002F278()
{
  id v1 = [self defaultCenter];
  [v1 removeObserver:v0];

  sub_10003E048();
  return [super dealloc];
}

id sub_10002F470()
{
  id v1 = v0;
  v66.receiver = v0;
  v66.super_class = (Class)type metadata accessor for DisplayMainViewController(0);
  [super loadView];
  uint64_t v2 = OBJC_IVAR___DisplayMainViewController_displayViewController;
  id v3 = *(id *)&v0[OBJC_IVAR___DisplayMainViewController_displayViewController];
  char v4 = v1;
  sub_100024E68((uint64_t)v1, (uint64_t)&off_1000778F0);

  id result = [*(id *)&v1[v2] view];
  if (!result)
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v6 = result;
  id result = [v4 view];
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  char v7 = result;
  uint64_t v8 = OBJC_IVAR___DisplayMainViewController_displayContainer;
  [*(id *)&v4[OBJC_IVAR___DisplayMainViewController_displayContainer] setTranslatesAutoresizingMaskIntoConstraints:0];
  [v6 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v4 addChildViewController:*(void *)&v1[v2]];
  id result = [v4 view];
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v9 = result;
  [result bounds];
  sub_10003DE94();

  double v10 = sub_10003E16C();
  [v11 v12:v10];
  [*(id *)&v4[v8] addSubview:v6];
  [v7 addSubview:*(void *)&v4[v8]];
  id v13 = [*(id *)&v4[v8] layer];
  [v13 setMasksToBounds:1];

  id v14 = [*(id *)&v4[v8] leftAnchor];
  id v15 = [v7 leftAnchor];
  id v16 = [v14 constraintEqualToAnchor:v15];

  sub_10002EDFC((uint64_t)v16);
  id v17 = [*(id *)&v4[v8] rightAnchor];
  id v18 = [v7 rightAnchor];
  id v19 = [v17 constraintEqualToAnchor:v18];

  sub_10002EE08((uint64_t)v19);
  *(void *)(*(void *)&v4[OBJC_IVAR___DisplayMainViewController__customUndoManager]
            + OBJC_IVAR____TtCC17ContinuityDisplay25DisplayMainViewController18DisplayUndoManager_delegate
            + 8) = &off_100077988;
  swift_unknownObjectWeakAssign();
  id v20 = [self currentDevice];
  [v20 setBatteryMonitoringEnabled:1];

  sub_100007D1C(&qword_1000843F0);
  id result = (id)swift_allocObject();
  *((_OWORD *)result + 1) = xmmword_100064BA0;
  os_log_type_t v21 = *(void **)&v4[OBJC_IVAR___DisplayMainViewController_displayLeftConstraint];
  if (!v21)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v22 = result;
  id v65 = v1;
  uint64_t v64 = v2;
  *((void *)result + 4) = v21;
  id v23 = *(void **)&v4[OBJC_IVAR___DisplayMainViewController_displayRightConstraint];
  if (!v23)
  {
LABEL_13:
    __break(1u);
    return result;
  }
  id v62 = self;
  v22[5] = v23;
  uint64_t v24 = *(void **)&v4[v8];
  id v25 = v21;
  id v26 = v23;
  id v27 = [v24 topAnchor];
  uint64_t v28 = v7;
  id v29 = [v7 topAnchor];
  id v30 = [v27 constraintEqualToAnchor:v29];

  v22[6] = v30;
  id v31 = [*(id *)&v4[v8] bottomAnchor];
  id v63 = v28;
  id v32 = sub_10003DC64((uint64_t)[v28 bottomAnchor]);

  v22[7] = v32;
  id v33 = [v6 topAnchor];
  id v34 = [(id)sub_10003E0FC() topAnchor];
  id v35 = sub_10003DC64((uint64_t)v34);

  v22[8] = v35;
  id v36 = [v6 bottomAnchor];
  id v37 = [(id)sub_10003E0FC() bottomAnchor];
  id v38 = sub_10003DC64((uint64_t)v37);

  v22[9] = v38;
  id v39 = [v6 leftAnchor];
  id v40 = [(id)sub_10003E0FC() leftAnchor];
  id v41 = sub_10003DC64((uint64_t)v40);

  v22[10] = v41;
  id v42 = [v6 rightAnchor];
  id v43 = [(id)sub_10003E0FC() rightAnchor];
  id v44 = sub_10003DC64((uint64_t)v43);

  v22[11] = v44;
  sub_10005EAE0();
  sub_100007F60(0, (unint64_t *)&qword_100084D70);
  Class isa = sub_10003DD1C().super.isa;
  swift_bridgeObjectRelease();
  [v62 activateConstraints:isa];

  [*(id *)&v65[v64] didMoveToParentViewController:v4];
  if (sub_10003D37C()) {
    sub_10002FB34();
  }
  id v46 = [self defaultCenter];
  id v47 = [v46 addObserver:v4 selector:"_batteryStateChangedWithNote:" name:UIDeviceBatteryStateDidChangeNotification object:0];
  id v50 = sub_10003E0D0((uint64_t)v47, v48, v49, (uint64_t)"_keyboardFrameChangedWithNote:", (uint64_t)UIKeyboardDidChangeFrameNotification);
  sub_10003E0D0((uint64_t)v50, v51, v52, (uint64_t)"_displayModeChanged:", (uint64_t)UIScreenReferenceDisplayModeStatusDidChangeNotification);
  uint64_t v53 = (objc_class *)[self mainBundle];
  v67._uint64_t countAndFlagsBits = sub_10003DC2C();
  v54.super.Class isa = v53;
  uint64_t v58 = sub_10003DE38(v67, v68, v54, v55, v56, v57, v61);
  uint64_t v60 = v59;

  sub_1000367E4(v58, v60, 0, (void *)0xE000000000000000, 0, 0);
  return (id)swift_bridgeObjectRelease();
}

void sub_10002FB34()
{
  uint64_t v1 = 4;
  uint64_t v2 = v0;
  uint64_t v13 = OBJC_IVAR___DisplayMainViewController_displayContainer;
  SEL v12 = (objc_class *)type metadata accessor for RoundedCornerView();
  id v3 = &byte_100076318;
  do
  {
    char v4 = *v3++;
    id v5 = objc_allocWithZone(v12);
    id v6 = sub_100041064(v4);
    [v6 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v7 = [v6 widthAnchor];
    id v8 = [v7 constraintEqualToConstant:16.0];

    [v8 setActive:1];
    id v9 = [v6 heightAnchor];
    id v10 = [v9 constraintEqualToConstant:16.0];

    [v10 setActive:1];
    [v6 setHidden:1];
    [*(id *)(v2 + v13) addSubview:v6];
    sub_10003988C(v6);
    swift_beginAccess();
    id v11 = v6;
    sub_10000B504((uint64_t)v11, v4);
    swift_endAccess();

    --v1;
  }
  while (v1);
}

id sub_10002FD3C()
{
  uint64_t v5 = v0;
  uint64_t v6 = sub_10005E490();
  if (!v6)
  {
    long long v18 = 0u;
    long long v19 = 0u;
    goto LABEL_8;
  }
  uint64_t v7 = v6;
  sub_10005E920();
  sub_10005EF10();
  sub_100010668((uint64_t)v16, v7, &v18);
  swift_bridgeObjectRelease();
  sub_10000BD80((uint64_t)v16);
  if (!*((void *)&v19 + 1))
  {
LABEL_8:
    sub_10003D8AC((uint64_t)&v18, (uint64_t *)&unk_100084130);
    goto LABEL_9;
  }
  sub_100007F60(0, &qword_100084D88);
  if (swift_dynamicCast())
  {
    id v8 = v16[0];
    [v16[0] CGRectValue];
    sub_10003DE94();
    if (CGRectGetWidth(v20) <= 0.0)
    {
    }
    else
    {
      v21.origin.CGFloat x = sub_10003E16C();
      double Height = CGRectGetHeight(v21);

      if (Height > 0.0)
      {
        char v10 = 0;
        goto LABEL_10;
      }
    }
  }
LABEL_9:
  char v10 = 1;
  uint64_t v1 = 0;
  uint64_t v2 = 0;
  id v3 = 0;
  char v4 = 0;
LABEL_10:
  v16[0] = v1;
  v16[1] = v2;
  _OWORD v16[2] = v3;
  v16[3] = v4;
  char v17 = v10;
  swift_retain();
  sub_100005CEC((uint64_t)v16);
  swift_release();
  id result = *(id *)(v5 + OBJC_IVAR___DisplayMainViewController_keyboardDebugLayer);
  if (result)
  {
    double v12 = 0.0;
    double v13 = 0.0;
    double v14 = 0.0;
    double v15 = 0.0;
    if ((v10 & 1) == 0)
    {
      double v12 = *(double *)&v3;
      double v13 = *(double *)&v4;
      double v14 = *(double *)&v1;
      double v15 = *(double *)&v2;
    }
    return [result setFrame:v14, v15, v12, v13];
  }
  return result;
}

void sub_100030020()
{
  sub_10001A720();
  uint64_t v2 = v0;
  uint64_t v3 = sub_10005E750();
  sub_100008DCC();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_10003DEA8();
  sub_10005E4A0();
  sub_100008DCC();
  __chkstk_darwin(v7);
  id v8 = (char *)*(id *)(v0 + OBJC_IVAR___DisplayMainViewController_displayViewController);
  sub_10005E480();
  if (v51[3])
  {
    sub_100007F60(0, &qword_100084D48);
    if (swift_dynamicCast())
    {
      uint64_t v48 = v1;
      uint64_t v49 = v5;
      id v9 = v50;
      sub_100007F60(0, (unint64_t *)&unk_100084D50);
      id v10 = [v8 _screen];
      sub_10003E004();
      char v11 = sub_10005EDC0();

      if (v11)
      {
        uint64_t v12 = OBJC_IVAR___DisplayMainViewController_referenceDisplayModeStatus;
        uint64_t v13 = *(void *)(v2 + OBJC_IVAR___DisplayMainViewController_referenceDisplayModeStatus);
        id v47 = [v50 referenceDisplayModeStatus];
        *(void *)(v2 + v12) = v47;
        if (qword_100083B70 != -1) {
          swift_once();
        }
        sub_10002A1FC(v3, (uint64_t)qword_100084A10);
        sub_10003E180();
        v14();
        double v15 = sub_10005E720();
        os_log_type_t v16 = sub_10005EC50();
        if (os_log_type_enabled(v15, v16))
        {
          uint64_t v17 = swift_slowAlloc();
          v51[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v17 = 136446722;
          id v46 = v15;
          long long v18 = (void *)sub_10005E470();
          os_log_type_t v45 = v16;
          uint64_t v19 = sub_10005E920();
          uint64_t v20 = v13;
          unint64_t v22 = v21;

          sub_10000F098(v19, v22, v51);
          sub_10005EE10();
          swift_bridgeObjectRelease();
          uint64_t v23 = sub_10003DFAC();
          v24(v23);
          *(_WORD *)(v17 + 12) = 2082;
          uint64_t v25 = UIScreenReferenceDisplayModeStatus.description.getter(v20);
          uint64_t v27 = sub_10000F098(v25, v26, v51);
          sub_10003E108(v27);
          sub_10005EE10();
          swift_bridgeObjectRelease();
          *(_WORD *)(v17 + 22) = 2082;
          id v28 = v47;
          uint64_t v29 = UIScreenReferenceDisplayModeStatus.description.getter((uint64_t)v47);
          uint64_t v31 = sub_10000F098(v29, v30, v51);
          sub_10003E108(v31);
          uint64_t v13 = v20;
          id v9 = v50;
          sub_10005EE10();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v46, v45, "%{public}s: %{public}s -> %{public}s", (uint8_t *)v17, 0x20u);
          swift_arrayDestroy();
          sub_10000FB20();
          sub_10000FB20();
        }
        else
        {
          uint64_t v32 = sub_10003DFAC();
          v33(v32);

          id v28 = v47;
        }
        if ((v13 == 3) != (v28 != (id)3))
        {

          goto LABEL_16;
        }
        uint64_t v34 = *(void *)&v8[OBJC_IVAR___DisplayViewController_session];
        if (v34)
        {
          id v35 = *(void **)(v34 + OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_request);
          sub_100007F60(0, (unint64_t *)&qword_100084108);
          uint64_t v36 = sub_10005E920();
          uint64_t v38 = v37;
          id v39 = v35;
          id v40 = sub_100019858(v36, v38, -504, 0, 0, 0);
          sub_10003E180();
          uint64_t v42 = v41();
          __chkstk_darwin(v42);
          sub_10002E180((uint64_t (*)(void))sub_10003059C, 0, (void (*)(void))sub_10000FAE8);
          (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v48, v3);
          id v43 = v40;
          id v44 = (void *)sub_10005E520();

          [v39 setError:v44];
          sub_1000305B8();

          goto LABEL_16;
        }
      }
    }
    goto LABEL_16;
  }

  sub_10003D8AC((uint64_t)v51, (uint64_t *)&unk_100084130);
LABEL_16:
  sub_10001A6F0();
}

unint64_t sub_10003059C()
{
  return 0xD000000000000013;
}

void sub_1000305B8()
{
  sub_10001A720();
  char v2 = v1;
  Swift::String v61 = v3;
  uint64_t v4 = sub_100007D1C((uint64_t *)&unk_1000843D0);
  uint64_t v5 = sub_10002A5F0(v4);
  uint64_t v59 = v6;
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v5);
  uint64_t v60 = (uint64_t)v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  char v11 = (char *)v54 - v10;
  uint64_t v62 = sub_10005E750();
  sub_100008DCC();
  uint64_t v13 = v12;
  __chkstk_darwin(v14);
  uint64_t v57 = v15;
  uint64_t v58 = (char *)v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  id v63 = (char *)v54 - v17;
  char v18 = 1;
  *(unsigned char *)(v0 + OBJC_IVAR___DisplayMainViewController_reconfiguring) = 1;
  uint64_t v19 = v0;
  switch(v2)
  {
    case 1:
      sub_10003DC84();
      int v20 = 0;
      goto LABEL_4;
    case 2:
      sub_10003DC84();
      int v21 = 1;
      goto LABEL_7;
    case 3:
      sub_10003DC84();
      int v21 = 0;
LABEL_7:
      sub_10000A454(v21, 10);
      swift_endAccess();
      goto LABEL_8;
    case 4:
LABEL_8:
      char v18 = 0;
      break;
    case 5:
      break;
    default:
      sub_10003DC84();
      int v20 = 1;
LABEL_4:
      sub_10000A454(v20, 3);
      swift_endAccess();
      break;
  }
  id v22 = sub_1000381D4();
  if (v22)
  {
    uint64_t v24 = (uint64_t)v22;
    uint64_t v25 = v23;
    id v26 = v22;
    id v27 = v25;
    sub_10002ED40(v24, (uint64_t)v25, 0);
    sub_1000324E0(v18, *(double *)(v19 + OBJC_IVAR___DisplayMainViewController_configurationAnimationDuration));
  }
  if (qword_100083B70 != -1) {
    swift_once();
  }
  uint64_t v28 = v62;
  uint64_t v29 = sub_10002A1FC(v62, (uint64_t)qword_100084A10);
  unint64_t v30 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v30(v63, v29, v28);
  uint64_t v31 = *(void *)&v61[OBJC_IVAR___DisplayViewController_session];
  if (v31)
  {
    uint64_t v32 = v31 + OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_uuid;
    sub_10001A688();
    uint64_t v33 = sub_10005E6D0();
    sub_10003DCC8();
    (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v11, v32, v33);
    uint64_t v35 = (uint64_t)v11;
    uint64_t v36 = 0;
    uint64_t v37 = v33;
  }
  else
  {
    uint64_t v37 = sub_10005E6D0();
    uint64_t v35 = (uint64_t)v11;
    uint64_t v36 = 1;
  }
  sub_10001A32C(v35, v36, 1, v37);
  sub_100007F60(0, (unint64_t *)&qword_100084110);
  uint64_t v56 = sub_10005EC90();
  uint64_t v38 = sub_10001A82C();
  v54[1] = v19;
  swift_unknownObjectWeakInit();
  uint64_t v55 = v11;
  uint64_t v39 = v60;
  sub_10003D63C((uint64_t)v11, v60, (uint64_t *)&unk_1000843D0);
  id v40 = v58;
  v30(v58, (uint64_t)v63, v62);
  unint64_t v41 = (*(unsigned __int8 *)(v59 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
  unint64_t v42 = (v8 + v41 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v43 = v13;
  unint64_t v44 = (*(unsigned __int8 *)(v13 + 80) + v42 + 8) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v45 = (v57 + v44 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v46 = swift_allocObject();
  sub_10003DB90(v39, v46 + v41, (uint64_t *)&unk_1000843D0);
  id v47 = v61;
  *(void *)(v46 + v42) = v61;
  uint64_t v48 = v40;
  uint64_t v49 = v62;
  (*(void (**)(unint64_t, char *, uint64_t))(v43 + 32))(v46 + v44, v48, v62);
  *(void *)(v46 + v45) = v38;
  id v50 = v47;
  swift_retain();
  uint64_t v51 = (void *)v56;
  OS_dispatch_queue.once(_:closure:)();
  uint64_t v53 = v52;
  swift_release();
  swift_release();

  sub_10002EE38(v53);
  sub_10003D8AC((uint64_t)v55, (uint64_t *)&unk_1000843D0);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v63, v49);
  sub_10001A6F0();
}

uint64_t sub_100030AA4(void *a1, uint64_t a2, uint64_t a3, void (*a4)(char *))
{
  uint64_t v6 = sub_10005E4A0();
  sub_100008DCC();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  char v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005E460();
  id v12 = a1;
  a4(v11);

  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v6);
}

id sub_100030B6C()
{
  char v1 = v0;
  id v2 = [self currentDevice];
  [v2 batteryState];

  uint64_t v3 = *(void *)&v1[OBJC_IVAR___DisplayMainViewController_presentedAlert];
  char v4 = v1[OBJC_IVAR___DisplayMainViewController_displayShouldSleep] | (v3 != 0);
  LODWORD(v2) = v1[OBJC_IVAR___DisplayMainViewController_displayShouldSleep] & 1 | (v3 != 0);
  id result = [v1 allowsDisplaySleep];
  if (v2 != result)
  {
    if (qword_100083B70 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_10005E750();
    sub_10002A1FC(v6, (uint64_t)qword_100084A10);
    uint64_t v7 = v1;
    uint64_t v8 = (void *)sub_10005E720();
    os_log_type_t v9 = sub_10005EC50();
    if (sub_10003DFC4(v9))
    {
      uint64_t v10 = swift_slowAlloc();
      *(_DWORD *)uint64_t v10 = 67109888;
      sub_10003E11C();
      *(_WORD *)(v10 + 8) = 1024;
      sub_10003E11C();

      *(_WORD *)(v10 + 14) = 1024;
      sub_10003E11C();
      *(_WORD *)(v10 + 20) = 1024;
      sub_10003E11C();
      sub_10003DF34();
      _os_log_impl(v11, v12, v13, v14, v15, 0x1Au);
      sub_10000FB20();
    }
    else
    {
    }
    return [v7 setAllowsDisplaySleep:v4 & 1];
  }
  return result;
}

uint64_t sub_100030D70(char a1)
{
  id v2 = v1;
  v12.receiver = v2;
  v12.super_class = (Class)type metadata accessor for DisplayMainViewController(0);
  [super viewDidAppear:a1 & 1];
  [v2 becomeFirstResponder];
  uint64_t result = UIApp;
  if (UIApp)
  {
    static PencilReport.setInterfaceOrientation(_:)((unint64_t *)[UIApp statusBarOrientation]);
    if (qword_100083B70 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_10005E750();
    uint64_t v6 = sub_10003DD7C(v5, (uint64_t)qword_100084A10);
    os_log_type_t v7 = sub_10005EC50();
    if (os_log_type_enabled(v6, v7))
    {
      *(_WORD *)sub_10003DDF0() = 0;
      sub_10003E09C((void *)&_mh_execute_header, v8, v9, "Taking assertion to disable Universal Control");
      sub_10000FB20();
    }

    sub_10005E710();
    sub_10005E700();
    uint64_t v10 = NSDefaultRunLoopMode;
    sub_10005E6F0(v10, 2.0);

    uint64_t v11 = sub_10005E6E0();
    sub_10002EE98(v11);
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100030F30(char a1)
{
  id v2 = v1;
  v11.receiver = v2;
  v11.super_class = (Class)type metadata accessor for DisplayMainViewController(0);
  [super viewWillDisappear:a1 & 1];
  if (qword_100083B70 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_10005E750();
  uint64_t v5 = sub_10003DD7C(v4, (uint64_t)qword_100084A10);
  os_log_type_t v6 = sub_10005EC50();
  if (os_log_type_enabled(v5, v6))
  {
    *(_WORD *)sub_10003DDF0() = 0;
    sub_10003E09C((void *)&_mh_execute_header, v7, v8, "Dropping assertion to disable Universal Control");
    sub_10000FB20();
  }

  uint64_t v9 = sub_10003DF28();
  return sub_10002EE98(v9);
}

unint64_t *sub_10003106C(uint64_t a1, double a2, double a3)
{
  sub_10003E048();
  [super viewWillTransitionToSize:a1 withTransitionCoordinator:a2, a3];
  return static PencilReport.setInterfaceOrientation(_:)((unint64_t *)[v3 _rotatingToInterfaceOrientation]);
}

void sub_100031158(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10005E6D0();
  sub_100008DCC();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_10001A708();
  id v8 = [a1 uuid];
  sub_10005E690();

  Class isa = sub_10005E680().super.isa;
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v4);
  sub_100019BFC(isa);

  if (qword_100083B70 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_10005E750();
  objc_super v11 = (void *)sub_10003DD7C(v10, (uint64_t)qword_100084A10);
  os_log_type_t v12 = sub_10005EC50();
  if (sub_10003DFC4(v12))
  {
    *(_DWORD *)swift_slowAlloc() = 134217984;
    sub_10005EE10();
    sub_10003DF34();
    _os_log_impl(v13, v14, v15, v16, v17, 0xCu);
    sub_10000FB20();
  }

  id v18 = *(id *)(v2 + OBJC_IVAR___DisplayMainViewController_displayViewController);
  sub_1000253D4(a1);
}

void sub_100031374()
{
  sub_10001A720();
  uint64_t v2 = v0;
  uint64_t v4 = v3;
  uint64_t v5 = sub_10005E750();
  sub_100008DCC();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_10003DEA8();
  uint64_t v9 = sub_10005E6D0();
  sub_100008DCC();
  uint64_t v11 = v10;
  __chkstk_darwin(v12);
  sub_10001A708();
  id v13 = [v4 uuid];
  sub_10005E690();

  Class isa = sub_10005E680().super.isa;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v0, v9);
  sub_100019BFC(isa);

  os_log_type_t v15 = [v4 error];
  if (v15)
  {
    uint64_t v16 = v15;
    if (qword_100083B70 != -1) {
      swift_once();
    }
    sub_10002A1FC(v5, (uint64_t)qword_100084A10);
    sub_10003E180();
    uint64_t v18 = v17();
    __chkstk_darwin(v18);
    sub_10002DE1C((void (*)(void))sub_10000FA6C);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v1, v5);
  }
  else
  {
    if (qword_100083B70 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_10003DD7C(v5, (uint64_t)qword_100084A10);
    os_log_type_t v19 = sub_10005EC50();
    if (os_log_type_enabled(v16, v19))
    {
      int v20 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)int v20 = 134217984;
      sub_10005EE10();
      _os_log_impl((void *)&_mh_execute_header, v16, v19, "=== Request %lu, format: .hex) Finished ===", v20, 0xCu);
      sub_10000FB20();
    }
  }

  id v21 = [v2 request];
  if (v21)
  {
    id v22 = v21;
    sub_100007F60(0, (unint64_t *)&unk_100084250);
    id v23 = v4;
    char v24 = sub_10005EDC0();

    if (v24)
    {
      sub_100031F64();
      if ([v23 isCancelled])
      {
        [v2 completeRequest:[v2 requestCompleted]];
      }
      else
      {
        id v25 = *(id *)&v2[OBJC_IVAR___DisplayMainViewController_displayViewController];
        id v26 = [v23 error];
        uint64_t v27 = sub_10003E198();
        sub_100031710(v27, v28);
      }
    }
  }
  sub_10001A6F0();
}

void sub_100031710(uint64_t a1, void *x1_0)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(a1 + OBJC_IVAR___DisplayViewController_session);
  if (v5
    && (id v6 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v5
                                                                   + OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_request), "session"))) != 0)
  {
    uint64_t v7 = v6;
    unsigned int v8 = [v6 dataLink];

    int v9 = 1;
  }
  else
  {
    unsigned int v8 = 0;
    int v9 = 0;
  }
  if (v3[OBJC_IVAR___DisplayMainViewController_reconfiguring] == 1)
  {
    if (!x1_0) {
      goto LABEL_14;
    }
    swift_getErrorValue();
    sub_10002A838(v64);
    if (v10)
    {
      sub_10003E134(0x6769666E6F636552, 0xEF6E6F6974617275);
      return;
    }
  }
  else if (!x1_0)
  {
    goto LABEL_14;
  }
  swift_getErrorValue();
  sub_10002A838(v65);
  if (v11)
  {
    uint64_t v12 = *(void **)&v3[OBJC_IVAR___DisplayMainViewController_presentedAlert];
    if (v12 && *((unsigned char *)v12 + OBJC_IVAR____TtC17ContinuityDisplay17DisplayModalAlert_reason) == 1)
    {
      id v13 = v12;
      swift_errorRetain();
      sub_10001F7B4((uint64_t)x1_0);
      sub_100036984();
      sub_10003E134(0x676E697461647055, 0xEE007472656C4120);

      return;
    }
    v60._object = (void *)0xD000000000000010;
    sub_10003E134(0xD000000000000010, 0x8000000100062DA0);
    id v16 = sub_1000381D4();
    sub_10002ED40((uint64_t)v16, v17, 0);
    uint64_t v18 = (void *)sub_10005E520();
    id v19 = [v18 domain];
    uint64_t v20 = sub_10005E920();
    uint64_t v22 = v21;

    id v23 = [v18 code];
    BOOL v25 = sub_10005E920() == v20 && v24 == v22;
    id v63 = v18;
    if (v25)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v26 = sub_10005F140();
      swift_bridgeObjectRelease();
      if ((v26 & 1) == 0) {
        goto LABEL_29;
      }
    }
    if (v23 == (id)-404)
    {
      swift_bridgeObjectRelease();
      goto LABEL_28;
    }
LABEL_29:
    if (sub_10005E920() == v20 && v41 == v22)
    {
      swift_bridgeObjectRelease_n();
      if (v23 != (id)-204) {
        goto LABEL_37;
      }
    }
    else
    {
      char v43 = sub_10005F140();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v43 & 1) == 0 || v23 != (id)-204)
      {
LABEL_37:
        if (v8 == 8) {
          int v44 = v9;
        }
        else {
          int v44 = 0;
        }
        unint64_t v45 = self;
        uint64_t v46 = (objc_class *)[v45 mainBundle];
        if (v44 == 1)
        {
          v69._uint64_t countAndFlagsBits = sub_10003DC2C();
          v47.super.Class isa = v46;
          uint64_t v33 = sub_10003DE38(v69, v74, v47, v48, v49, v50, v60);
        }
        else
        {
          sub_10003DE28();
          v70._uint64_t countAndFlagsBits = 0x6E6F432074736F4CLL;
          v70._object = (void *)0xEF6E6F697463656ELL;
          v75.value._uint64_t countAndFlagsBits = 0;
          v75.value._object = 0;
          v53.super.Class isa = v46;
          v78._uint64_t countAndFlagsBits = 0;
          v78._object = (void *)0xE000000000000000;
          uint64_t v33 = sub_10005E510(v70, v75, v53, v78, v60);
        }
        uint64_t v35 = v51;

        id v52 = [v45 mainBundle];
        sub_10003DE28();
        sub_10003DE08();
        uint64_t v38 = sub_10005E510(v71, v76, v66, v79, v62);
        id v40 = v54;

        swift_errorRetain();
        goto LABEL_44;
      }
    }
LABEL_28:
    uint64_t v27 = self;
    uint64_t v28 = (objc_class *)[v27 mainBundle];
    v67._uint64_t countAndFlagsBits = sub_10003DC2C();
    v29.super.Class isa = v28;
    uint64_t v33 = sub_10003DE38(v67, v72, v29, v30, v31, v32, v60);
    uint64_t v35 = v34;

    uint64_t v36 = (objc_class *)[v27 mainBundle];
    sub_10003DE28();
    v68._object = (void *)0x8000000100062EB0;
    v68._uint64_t countAndFlagsBits = (uint64_t)v61._object;
    v73.value._uint64_t countAndFlagsBits = 0;
    v73.value._object = 0;
    v37.super.Class isa = v36;
    v77._uint64_t countAndFlagsBits = 0;
    v77._object = (void *)0xE000000000000000;
    uint64_t v38 = sub_10005E510(v68, v73, v37, v77, v61);
    id v40 = v39;

    x1_0 = 0;
LABEL_44:
    sub_1000367E4(v33, v35, v38, v40, 1, (uint64_t)x1_0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v55 = OBJC_IVAR___DisplayMainViewController_displayViewController;
    uint64_t v56 = *(char **)&v3[OBJC_IVAR___DisplayMainViewController_displayViewController];
    uint64_t v57 = *(void *)&v56[OBJC_IVAR___DisplayViewController_session];
    if (v57)
    {
      uint64_t v58 = v57 + OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_delegate;
      sub_10003DF5C();
      *(void *)(v58 + 8) = 0;
      swift_unknownObjectWeakAssign();
      uint64_t v56 = *(char **)&v3[v55];
    }
    uint64_t v59 = v56;
    sub_1000253C8(0);
    swift_errorRelease();

    return;
  }
LABEL_14:
  sub_10003E134(0x65766F6365726E55, 0xED0000656C626172);
  id v14 = [v3 request];
  if (v14)
  {
    os_log_type_t v15 = v14;
    if (x1_0) {
      x1_0 = (void *)sub_10005E520();
    }
    [v15 setError:x1_0];
  }
  [v3 completeRequest:0];
}

uint64_t sub_100031E04(uint64_t a1)
{
  return sub_10003DD0C(a1);
}

void sub_100031E10()
{
  if ((*(unsigned char *)(*(void *)&v0[OBJC_IVAR___DisplayMainViewController_displayViewController]
                 + OBJC_IVAR___DisplayViewController_sessionConfiguring) & 1) == 0)
  {
    uint64_t v1 = v0;
    if (*(void *)&v0[OBJC_IVAR___DisplayMainViewController__viewUpdateTimer])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      OS_dispatch_source_timer.reset(_:)(0.01);
      swift_unknownObjectRelease();
    }
    else
    {
      sub_100007F60(0, (unint64_t *)&qword_100084110);
      uint64_t v2 = (void *)sub_10005EC90();
      *(void *)(sub_10001A82C() + 16) = v1;
      v1;
      OS_dispatch_queue.once(_:closure:)();
      uint64_t v4 = v3;

      swift_release();
      sub_100031E04(v4);
    }
  }
}

id sub_100031F30(uint64_t a1)
{
  return sub_1000324E0(0, *(double *)(a1 + OBJC_IVAR___DisplayMainViewController_configurationAnimationDuration));
}

uint64_t sub_100031F64()
{
  uint64_t v2 = type metadata accessor for DisplayMainViewController.UsageSummary(0);
  sub_10003DCC8();
  __chkstk_darwin(v3);
  sub_10001A89C();
  uint64_t v4 = sub_100007D1C(&qword_100084D40);
  __chkstk_darwin(v4 - 8);
  id v6 = &v16[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  int v9 = &v16[-v8];
  uint64_t v10 = v0 + OBJC_IVAR___DisplayMainViewController_usageSummary;
  sub_10001A688();
  sub_10003D63C(v10, (uint64_t)v9, &qword_100084D40);
  if (sub_10001A2B8((uint64_t)v9, 1, v2))
  {
    sub_10003D8AC((uint64_t)v9, &qword_100084D40);
  }
  else
  {
    uint64_t v11 = sub_10003E004();
    sub_10003D518(v11, v12);
    sub_10003D8AC((uint64_t)v9, &qword_100084D40);
    sub_1000320E8();
    sub_10003D57C(v1);
  }
  sub_10001A32C((uint64_t)v6, 1, 1, v2);
  sub_10003DCD8();
  uint64_t v13 = sub_10003E18C();
  sub_10003D4B0(v13, v14);
  return swift_endAccess();
}

uint64_t sub_1000320E8()
{
  mach_absolute_time();
  uint64_t v1 = type metadata accessor for DisplayMainViewController.UsageSummary(0);
  HostTime.nanoseconds.getter();
  uint64_t v2 = v0 + *(int *)(v1 + 28);
  uint64_t v3 = *(void *)(v2 + 128);
  long long v4 = *(_OWORD *)(v2 + 16);
  v9[0] = *(_OWORD *)v2;
  v9[1] = v4;
  long long v5 = *(_OWORD *)(v2 + 48);
  v9[2] = *(_OWORD *)(v2 + 32);
  void v9[3] = v5;
  long long v6 = *(_OWORD *)(v2 + 80);
  v9[4] = *(_OWORD *)(v2 + 64);
  v9[5] = v6;
  long long v7 = *(_OWORD *)(v2 + 112);
  v9[6] = *(_OWORD *)(v2 + 96);
  v9[7] = v7;
  uint64_t v10 = v3;
  return sub_10002EC5C((uint64_t)v9, (uint64_t (*)(_OWORD *, uint64_t *))sub_10003D5D8);
}

void sub_1000321AC()
{
  sub_10001A720();
  uint64_t v3 = v2;
  uint64_t v4 = sub_100007D1C(&qword_100084D40);
  __chkstk_darwin(v4 - 8);
  long long v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100007D1C((uint64_t *)&unk_1000843D0);
  __chkstk_darwin(v7 - 8);
  sub_10001A89C();
  uint64_t v8 = sub_10005E6D0();
  sub_100008DCC();
  uint64_t v10 = v9;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  id v16 = (char *)&v24 - v15;
  sub_100031F64();
  uint64_t v17 = *(void *)(*(void *)(v0 + OBJC_IVAR___DisplayMainViewController_displayViewController)
                  + OBJC_IVAR___DisplayViewController_session);
  if (!v17)
  {
    sub_10001A32C(v1, 1, 1, v8);
    goto LABEL_5;
  }
  uint64_t v25 = v3;
  uint64_t v18 = v17 + OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_uuid;
  sub_10001A688();
  id v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
  v19(v1, v18, v8);
  sub_10001A32C(v1, 0, 1, v8);
  if (sub_10001A2B8(v1, 1, v8) == 1)
  {
LABEL_5:
    sub_10003D8AC(v1, (uint64_t *)&unk_1000843D0);
    goto LABEL_6;
  }
  uint64_t v20 = sub_10003E004();
  v21(v20);
  v19((uint64_t)v13, (uint64_t)v16, v8);
  sub_100032430((uint64_t)v13, v25, (uint64_t)v6);
  uint64_t v22 = type metadata accessor for DisplayMainViewController.UsageSummary(0);
  sub_10001A32C((uint64_t)v6, 0, 1, v22);
  uint64_t v23 = v0 + OBJC_IVAR___DisplayMainViewController_usageSummary;
  sub_10003DCD8();
  sub_10003D4B0((uint64_t)v6, v23);
  swift_endAccess();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v8);
LABEL_6:
  sub_10001A6F0();
}

void sub_100032430(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  long long v6 = (int *)type metadata accessor for DisplayMainViewController.UsageSummary(0);
  uint64_t v7 = v6[6];
  *(void *)(a3 + v7) = mach_absolute_time();
  uint64_t v8 = sub_10005E6D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a3, a1, v8);
  *(void *)(a3 + v6[5]) = a2;
  uint64_t v9 = (void *)(a3 + v6[7]);

  bzero(v9, 0x88uLL);
}

id sub_1000324E0(char a1, double a2)
{
  uint64_t v3 = v2;
  if (*(void *)&v2[OBJC_IVAR___DisplayMainViewController__viewUpdateTimer])
  {
    swift_getObjectType();
    sub_10003DFE0();
    swift_unknownObjectRetain();
    sub_10005ED40();
    swift_unknownObjectRelease();
  }
  uint64_t v6 = sub_10003DF28();
  sub_100031E04(v6);
  id result = [v2 view];
  if (!result)
  {
    __break(1u);
    goto LABEL_66;
  }
  uint64_t v8 = result;
  [result frame];
  CGFloat v10 = v9;
  CGFloat v12 = v11;
  CGFloat v14 = v13;
  CGFloat v16 = v15;

  uint64_t v17 = sub_10001A82C();
  *(void *)(v17 + 16) = 0;
  uint64_t v18 = sub_10001A82C();
  *(void *)(v18 + 16) = 0;
  id v19 = v3;
  sub_1000365C0();
  uint64_t v20 = OBJC_IVAR___DisplayMainViewController_sidebarController;
  uint64_t v21 = *(void **)&v3[OBJC_IVAR___DisplayMainViewController_sidebarController];
  if (v21 && (a1 & 1) == 0)
  {
    *(void *)(v17 + 16) = v21;
    id v22 = v21;
    uint64_t v23 = sub_10003DF28();
    sub_10002EDF0(v23);
  }
  uint64_t v24 = OBJC_IVAR___DisplayMainViewController_qosViewController;
  uint64_t v25 = *(void **)&v3[OBJC_IVAR___DisplayMainViewController_qosViewController];
  if (v25)
  {
    id result = [v25 view];
    if (result)
    {
      id v19 = result;
      [result removeFromSuperview];

      goto LABEL_10;
    }
LABEL_66:
    __break(1u);
LABEL_67:
    __break(1u);
    goto LABEL_68;
  }
LABEL_10:
  char v26 = (uint64_t *)&v3[OBJC_IVAR___DisplayMainViewController_displaySettings];
  sub_10001A688();
  uint64_t v27 = sub_10003DF94();
  char v28 = sub_10002E834(v27);
  swift_bridgeObjectRelease();
  if ((v28 & 1) == 0)
  {
    id v40 = *(void **)&v3[OBJC_IVAR___DisplayMainViewController_displayLeftConstraint];
    if (v40) {
      [v40 setConstant:0.0];
    }
    uint64_t v41 = *(void **)&v3[OBJC_IVAR___DisplayMainViewController_displayRightConstraint];
    if (v41) {
      [v41 setConstant:0.0];
    }
    sub_10002EE20(0);
    sub_1000321AC();
    goto LABEL_64;
  }
  uint64_t v29 = sub_10003DF94();
  if ((sub_10002E76C(v29) & 1) == 0
    || (v30 = swift_bridgeObjectRetain(), char v31 = sub_10002E7D0(v30), swift_bridgeObjectRelease(), (v31 & 1) != 0)
    || sub_10002A558())
  {
    sub_10000A4E4(16, (uint64_t)v19);
    double v33 = v32;
  }
  else
  {
    double v33 = 78.0;
  }
  swift_bridgeObjectRelease();
  uint64_t v34 = sub_10003DF94();
  char v115 = sub_10002E898(v34);
  swift_bridgeObjectRelease();
  uint64_t v35 = sub_10003DF94();
  char v36 = sub_10002E76C(v35);
  swift_bridgeObjectRelease();
  if (v36)
  {
    uint64_t v37 = swift_bridgeObjectRetain();
    char v38 = sub_10002E7D0(v37);
    swift_bridgeObjectRelease();
    char v39 = v38 ^ 1;
  }
  else
  {
    char v39 = 0;
    char v38 = 0;
  }
  uint64_t v42 = *v26;
  swift_bridgeObjectRetain();
  sub_10000A4E4(18, v42);
  double v44 = v43;
  swift_bridgeObjectRelease();
  if (v38) {
    double v45 = 64.0;
  }
  else {
    double v45 = v44;
  }
  if (v39)
  {
    if (sub_10002A558()) {
      double v44 = 64.0;
    }
    else {
      double v44 = 78.0;
    }
  }
  if (a1)
  {
    uint64_t v46 = *(char **)&v3[v20];
    if (v46)
    {
      *(double *)&v46[OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar14ViewController_topMargin] = v45;
      NSBundle v47 = v46;
      sub_10001AD18();

      uint64_t v48 = *(char **)&v3[v20];
      if (v48)
      {
        *(double *)&v48[OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar14ViewController_bottomMargin] = v44;
        uint64_t v49 = v48;
        sub_10001AD50();

        uint64_t v50 = *(char **)&v3[v20];
        if (v50)
        {
          *(double *)&v50[OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar14ViewController_barWidth] = v33;
          uint64_t v51 = v50;
          sub_10001AD04();
        }
      }
    }
    if (v115)
    {
      id v52 = *(void **)&v3[OBJC_IVAR___DisplayMainViewController_displayRightConstraint];
      if (v52) {
        [v52 setConstant:-v33];
      }
    }
    else
    {
      [*(id *)&v3[OBJC_IVAR___DisplayMainViewController_displayLeftConstraint] setConstant:v33];
    }
    goto LABEL_64;
  }
  id v53 = objc_allocWithZone((Class)_s14ViewControllerCMa());
  NSBundle v54 = (char *)sub_10001ADAC(v33, v45, v44);
  id result = [v54 view];
  if (!result) {
    goto LABEL_67;
  }
  uint64_t v55 = result;
  id result = [v3 view];
  if (!result)
  {
LABEL_68:
    __break(1u);
LABEL_69:
    __break(1u);
    goto LABEL_70;
  }
  id v56 = result;
  *(void *)&v54[OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar14ViewController_delegate + 8] = &off_1000778C8;
  swift_unknownObjectWeakAssign();
  [v55 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v57 = sub_10003DF94();
  char v58 = sub_10002E918(v57);
  swift_bridgeObjectRelease();
  uint64_t v112 = v56;
  if ((v58 & 1) == 0 || !sub_10003D1F8())
  {
    sub_10002EE20(0);
    goto LABEL_51;
  }
  uint64_t v59 = *(void **)&v3[v24];
  if (v59)
  {
    id v60 = v59;
    id result = [v60 view];
    if (result)
    {
      id v61 = result;
      [*(id *)&v54[OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar14ViewController_topStack] addArrangedSubview:result];

LABEL_50:
      id v65 = *(id *)&v3[OBJC_IVAR___DisplayMainViewController_displayViewController];
      uint64_t v66 = sub_10005E890();
      sub_100033104(v66, v66);

      swift_bridgeObjectRelease();
LABEL_51:
      id v67 = [v55 heightAnchor];
      id v68 = [v67 constraintEqualToConstant:sub_10003E07C()];

      uint64_t v110 = v18;
      if (v115)
      {
        v120.origin.CGFloat x = v10;
        v120.origin.CGFloat y = v12;
        v120.size.CGFloat width = v14;
        v120.size.CGFloat height = v16;
        double Width = CGRectGetWidth(v120);
      }
      else
      {
        double Width = -v33;
      }
      [v55 setFrame:Width, 0.0, v33, sub_10003E07C()];
      [v68 setActive:1];
      uint64_t v70 = sub_100007F60(0, &qword_100084D28);
      id v71 = v55;
      id v72 = v68;
      Swift::String_optional v73 = v3;
      uint64_t v109 = v54;
      id v74 = v112;
      id v114 = v72;
      sub_100033394(v70, v71, v72, v73, v109, v74);
      id v75 = [v71 layer];
      [v75 setOpacity:0.0];

      id v76 = [v71 layer];
      long long v77 = *(_OWORD *)&CATransform3DIdentity.m13;
      *(_OWORD *)&v117.m11 = *(_OWORD *)&CATransform3DIdentity.m11;
      *(_OWORD *)&v117.m13 = v77;
      long long v78 = *(_OWORD *)&CATransform3DIdentity.m23;
      *(_OWORD *)&v117.m21 = *(_OWORD *)&CATransform3DIdentity.m21;
      *(_OWORD *)&v117.m23 = v78;
      long long v79 = *(_OWORD *)&CATransform3DIdentity.m33;
      *(_OWORD *)&v117.m31 = *(_OWORD *)&CATransform3DIdentity.m31;
      *(_OWORD *)&v117.m33 = v79;
      long long v80 = *(_OWORD *)&CATransform3DIdentity.m43;
      *(_OWORD *)&v117.m41 = *(_OWORD *)&CATransform3DIdentity.m41;
      *(_OWORD *)&v117.m43 = v80;
      CATransform3DScale(&v116, &v117, 1.0, 0.95, 1.0);
      CATransform3D v117 = v116;
      [v76 setTransform:&v117];

      id v81 = [v71 topAnchor];
      id v82 = [v74 topAnchor];
      id v83 = [v81 constraintEqualToAnchor:v82];

      [v83 setActive:1];
      id v111 = v71;
      id v84 = [v71 bottomAnchor];
      uint64_t v113 = v74;
      id v85 = [v74 bottomAnchor];
      id v86 = [v84 constraintEqualToAnchor:v85];

      [v86 setActive:1];
      uint64_t v87 = *(void *)&v109[OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar14ViewController_buttonsByIdentifer];
      *(void *)&v117.m11 = 1;
      memset(&v117.m12, 0, 24);
      LOBYTE(v117.m21) = 2;
      Swift::String_optional v88 = sub_100010730((uint64_t)&v117, v87);
      if (v88)
      {
        Swift::String v89 = v88;
        uint64_t v90 = *v26;
        swift_bridgeObjectRetain();
        char v91 = sub_10000A3B8(19, v90);
        swift_bridgeObjectRelease();
        [v89 setEnabled:v91 & 1];
      }
      uint64_t v18 = v110;
      if (v115)
      {
        unint64_t v92 = v111;
        id v93 = [v111 leftAnchor];
        id v94 = [*(id *)&v73[OBJC_IVAR___DisplayMainViewController_displayContainer] rightAnchor];
        id v95 = [v93 constraintEqualToAnchor:v94];

        [v95 setActive:1];
        uint64_t v96 = *(void **)&v73[OBJC_IVAR___DisplayMainViewController_displayRightConstraint];
        char v97 = v114;
        if (v96) {
          [v96 setConstant:-v33];
        }
        double v98 = *(void **)&v73[OBJC_IVAR___DisplayMainViewController_displayLeftConstraint];
        if (!v98) {
          goto LABEL_63;
        }
      }
      else
      {
        unint64_t v92 = v111;
        id v99 = [v111 rightAnchor];
        id v100 = [*(id *)&v73[OBJC_IVAR___DisplayMainViewController_displayContainer] leftAnchor];
        id v101 = [v99 constraintEqualToAnchor:v100];

        [v101 setActive:1];
        [*(id *)&v73[OBJC_IVAR___DisplayMainViewController_displayLeftConstraint] setConstant:v33];
        double v98 = *(void **)&v73[OBJC_IVAR___DisplayMainViewController_displayRightConstraint];
        char v97 = v114;
        if (!v98)
        {
LABEL_63:
          *(void *)&v116.m11 = 2;
          memset(&v116.m12, 0, 24);
          LOBYTE(v116.m21) = 2;
          sub_10001C2F4((uint64_t)&v116, v73[OBJC_IVAR___DisplayMainViewController_dockShown]);
          v118[0] = 3;
          memset(&v118[1], 0, 24);
          char v119 = 2;
          sub_10001C2F4((uint64_t)v118, v73[OBJC_IVAR___DisplayMainViewController_menuOverrideEnabled]);
          id v102 = *(void **)(v110 + 16);
          *(void *)(v110 + 16) = v109;
          uint64_t v103 = v109;

          uint64_t v104 = v103;
          sub_10002EDF0((uint64_t)v109);
          sub_1000321AC();

LABEL_64:
          sub_100007F60(0, &qword_100084D20);
          uint64_t v105 = swift_allocObject();
          *(void *)(v105 + 16) = v3;
          *(void *)(v105 + 24) = v17;
          *(void *)(v105 + 32) = v18;
          *(double *)(v105 + 40) = a2;
          uint64_t v106 = swift_allocObject();
          *(void *)(v106 + 16) = v17;
          *(void *)(v106 + 24) = v3;
          double v107 = v3;
          swift_retain_n();
          id v108 = v107;
          swift_retain();
          sub_100036018((uint64_t)sub_10003D284, v105, (uint64_t)sub_10003D298, v106, a2);
          swift_release();
          swift_release();
          [v108 setNeedsUpdateOfScreenEdgesDeferringSystemGestures];
          [v108 setNeedsUpdateOfHomeIndicatorAutoHidden];
          swift_release();
          return (id)swift_release();
        }
      }
      [v98 setConstant:0.0];
      goto LABEL_63;
    }
    goto LABEL_69;
  }
  id v62 = objc_allocWithZone((Class)type metadata accessor for QOSControllerViewController());
  id v63 = sub_10000FBE4(1);
  id result = [v63 view];
  if (result)
  {
    uint64_t v64 = result;
    [*(id *)&v54[OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar14ViewController_topStack] addArrangedSubview:result];

    id v61 = v63;
    sub_10002EE20((uint64_t)v63);
    goto LABEL_50;
  }
LABEL_70:
  __break(1u);
  return result;
}

void sub_100033104(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(v2 + OBJC_IVAR___DisplayMainViewController_displayViewController)
                 + OBJC_IVAR___DisplayViewController_session);
  if (!v3) {
    return;
  }
  uint64_t v4 = v2;
  id v6 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v3
                                                             + OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_request), "session"));
  if (!v6) {
    return;
  }
  uint64_t v7 = v6;
  int v8 = [v6 dataLink];

  double v9 = *(void **)(v4 + OBJC_IVAR___DisplayMainViewController_qosViewController);
  if (v8)
  {
    if (v9)
    {
      sub_10003D2A0(v8);
      id v10 = v9;
      uint64_t v11 = sub_10005E8E0();
      if (!v12)
      {
        uint64_t v11 = 63;
        uint64_t v12 = 0xE100000000000000;
      }
      goto LABEL_11;
    }
  }
  else if (v9)
  {
    id v10 = v9;
    uint64_t v11 = 63;
    uint64_t v12 = 0xE100000000000000;
LABEL_11:
    sub_10000FBC0(v11, v12);
  }
  double v13 = *(void **)(v4 + OBJC_IVAR___DisplayMainViewController_qosViewController);
  if (v13)
  {
    id v14 = v13;
    sub_10000FF5C(a2);
  }

  sub_100036984();
}

id sub_100033240(void *a1, void *a2, void *a3, void *a4, void *a5)
{
  [a1 layoutBelowIfNeeded];
  [a2 setActive:0];
  [a3 addChildViewController:a4];
  [a4 didMoveToParentViewController:a3];

  return [a5 addSubview:a1];
}

void sub_1000332E8(uint64_t a1, id *a2, void *a3, void *a4, void *a5)
{
  int v8 = self;
  [v8 begin];
  [v8 setDisableActions:1];
  sub_100038094(a2, a3, a4, a5);
  [v8 commit];
}

void sub_100033394(uint64_t a1, void *a2, void *a3, void *a4, void *a5, void *a6)
{
  id v10 = self;
  [v10 begin];
  [v10 setDisableActions:1];
  sub_100033240(a2, a3, a4, a5, a6);
  [v10 commit];
}

void sub_100033458(void *a1, uint64_t a2, uint64_t a3, double a4)
{
  sub_1000336AC();
  swift_beginAccess();
  int v8 = *(void **)(a2 + 16);
  if (v8)
  {
    id v9 = [v8 view];
    if (!v9)
    {
LABEL_14:
      __break(1u);
      goto LABEL_15;
    }
    id v10 = v9;
    id v11 = [v9 layer];

    if (v11)
    {
      [v11 setOpacity:0.0];
      long long v12 = *(_OWORD *)&CATransform3DIdentity.m13;
      *(_OWORD *)&v30.m11 = *(_OWORD *)&CATransform3DIdentity.m11;
      *(_OWORD *)&v30.m13 = v12;
      long long v13 = *(_OWORD *)&CATransform3DIdentity.m23;
      *(_OWORD *)&v30.m21 = *(_OWORD *)&CATransform3DIdentity.m21;
      *(_OWORD *)&v30.m23 = v13;
      long long v14 = *(_OWORD *)&CATransform3DIdentity.m33;
      *(_OWORD *)&v30.m31 = *(_OWORD *)&CATransform3DIdentity.m31;
      *(_OWORD *)&v30.m33 = v14;
      long long v15 = *(_OWORD *)&CATransform3DIdentity.m43;
      *(_OWORD *)&v30.m41 = *(_OWORD *)&CATransform3DIdentity.m41;
      *(_OWORD *)&v30.m43 = v15;
      CATransform3DScale(&v29, &v30, 1.0, 0.95, 1.0);
      CATransform3D v30 = v29;
      [v11 setTransform:&v30];
    }
  }
  swift_beginAccess();
  CGFloat v16 = *(void **)(a3 + 16);
  if (!v16)
  {
LABEL_9:
    char v26 = sub_10002ED9C();
    if (*v25) {
      sub_100034A90(1, (uint64_t)v25, a4);
    }
    ((void (*)(CATransform3D *, void))v26)(&v30, 0);
    id v27 = [a1 view];
    if (v27)
    {
      char v28 = v27;
      [v27 layoutIfNeeded];

      return;
    }
    __break(1u);
    goto LABEL_14;
  }
  id v17 = [v16 view];
  if (v17)
  {
    uint64_t v18 = v17;
    id v19 = [v17 layer];

    if (v19)
    {
      LODWORD(v20) = 1.0;
      [v19 setOpacity:v20];
      long long v21 = *(_OWORD *)&CATransform3DIdentity.m13;
      *(_OWORD *)&v30.m11 = *(_OWORD *)&CATransform3DIdentity.m11;
      *(_OWORD *)&v30.m13 = v21;
      long long v22 = *(_OWORD *)&CATransform3DIdentity.m23;
      *(_OWORD *)&v30.m21 = *(_OWORD *)&CATransform3DIdentity.m21;
      *(_OWORD *)&v30.m23 = v22;
      long long v23 = *(_OWORD *)&CATransform3DIdentity.m33;
      *(_OWORD *)&v30.m31 = *(_OWORD *)&CATransform3DIdentity.m31;
      *(_OWORD *)&v30.m33 = v23;
      long long v24 = *(_OWORD *)&CATransform3DIdentity.m43;
      *(_OWORD *)&v30.m41 = *(_OWORD *)&CATransform3DIdentity.m41;
      *(_OWORD *)&v30.m43 = v24;
      [v19 setTransform:&v30];
    }
    goto LABEL_9;
  }
LABEL_15:
  __break(1u);
}

void sub_1000336AC()
{
  uint64_t v1 = v0;
  if (!sub_10003D37C()) {
    return;
  }
  if (*(void *)(v0 + OBJC_IVAR___DisplayMainViewController_sidebarController))
  {
    swift_beginAccess();
    uint64_t v2 = swift_bridgeObjectRetain();
    int v3 = sub_10002E898(v2);
    swift_bridgeObjectRelease();
    int v78 = v3;
    int v4 = v3 ^ 1;
  }
  else
  {
    int v78 = 0;
    int v4 = 0;
  }
  swift_beginAccess();
  uint64_t v5 = swift_bridgeObjectRetain();
  char v6 = sub_10002E76C(v5);
  swift_bridgeObjectRelease();
  uint64_t v7 = &OBJC_IVAR____TtC17ContinuityDisplay11VideoStream_started;
  int v8 = &selRef_slotForMode_;
  if (v6)
  {
    uint64_t v9 = swift_bridgeObjectRetain();
    int v10 = sub_10002E7D0(v9);
    swift_bridgeObjectRelease();
    int v11 = v10 ^ 1;
    if ((v4 | v10))
    {
      int v12 = v4 ^ 1 | v10;
LABEL_9:
      long long v13 = (uint64_t *)(v1 + OBJC_IVAR___DisplayMainViewController_corners);
      swift_beginAccess();
      long long v14 = sub_100010778(0, *v13);
      if (v14)
      {
        long long v15 = v14;
        [v14 setHidden:0];
        v15[OBJC_IVAR____TtC17ContinuityDisplay17RoundedCornerView_isHidding] = 0;
        sub_100007D1C(&qword_1000843F0);
        uint64_t v16 = swift_allocObject();
        *(_OWORD *)(v16 + 16) = xmmword_100064BB0;
        id v17 = [v15 leftAnchor];
        uint64_t v18 = OBJC_IVAR___DisplayMainViewController_displayContainer;
        id v19 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                                    + OBJC_IVAR___DisplayMainViewController_displayContainer), "leftAnchor"));
        id v20 = [v17 constraintEqualToAnchor:v19];

        *(void *)(v16 + 32) = v20;
        id v21 = [v15 topAnchor];
        id v22 = [*(id *)(v1 + v18) topAnchor];
        double v23 = 64.0;
        if ((v12 & 1) == 0) {
          double v23 = 0.0;
        }
        id v24 = [v21 constraintEqualToAnchor:v22 constant:v23];

        *(void *)(v16 + 40) = v24;
        sub_10005EAE0();
        sub_100041228();

        swift_bridgeObjectRelease();
        if ((v4 | v11))
        {
          int v25 = v4 ^ 1 | v11;
          int v8 = &selRef_slotForMode_;
          uint64_t v7 = &OBJC_IVAR____TtC17ContinuityDisplay11VideoStream_started;
          goto LABEL_17;
        }
        int v8 = &selRef_slotForMode_;
        uint64_t v7 = &OBJC_IVAR____TtC17ContinuityDisplay11VideoStream_started;
        goto LABEL_24;
      }
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
      goto LABEL_45;
    }
  }
  else
  {
    int v11 = 0;
    int v12 = 0;
    if (v4) {
      goto LABEL_9;
    }
  }
  char v26 = (uint64_t *)(v1 + OBJC_IVAR___DisplayMainViewController_corners);
  swift_beginAccess();
  id v27 = sub_100010778(0, *v26);
  if (!v27) {
    goto LABEL_43;
  }
  char v28 = v27;
  sub_10003988C(v27);
  v28[OBJC_IVAR____TtC17ContinuityDisplay17RoundedCornerView_isHidding] = 1;

  int v12 = 0;
  if ((v4 | v11))
  {
    int v25 = v4 ^ 1 | v11;
LABEL_17:
    CATransform3D v29 = (uint64_t *)(v1 + OBJC_IVAR___DisplayMainViewController_corners);
    swift_beginAccess();
    CATransform3D v30 = sub_100010778(2u, *v29);
    if (v30)
    {
      char v31 = v30;
      [v30 setHidden:0];
      v31[OBJC_IVAR____TtC17ContinuityDisplay17RoundedCornerView_isHidding] = 0;
      sub_100007D1C(&qword_1000843F0);
      uint64_t v32 = swift_allocObject();
      *(_OWORD *)(v32 + 16) = xmmword_100064BB0;
      id v33 = [v31 leftAnchor];
      uint64_t v34 = v7[337];
      id v35 = [*(id *)(v1 + v34) leftAnchor];
      id v36 = [v33 v8[98] v35];

      *(void *)(v32 + 32) = v36;
      id v37 = [v31 bottomAnchor];
      id v38 = [*(id *)(v1 + v34) bottomAnchor];
      double v39 = 0.0;
      if (v25)
      {
        BOOL v40 = sub_10002A558();
        double v39 = -78.0;
        if (v40) {
          double v39 = -64.0;
        }
      }
      id v41 = [v37 constraintEqualToAnchor:v38 constant:v39];

      *(void *)(v32 + 40) = v41;
      sub_10005EAE0();
      sub_100041228();

      swift_bridgeObjectRelease();
      if ((v78 | v12))
      {
        char v42 = v78 ^ 1 | v12;
        int v8 = &selRef_slotForMode_;
        uint64_t v7 = &OBJC_IVAR____TtC17ContinuityDisplay11VideoStream_started;
        goto LABEL_27;
      }
      goto LABEL_32;
    }
    goto LABEL_44;
  }
LABEL_24:
  double v43 = (uint64_t *)(v1 + OBJC_IVAR___DisplayMainViewController_corners);
  swift_beginAccess();
  double v44 = sub_100010778(2u, *v43);
  if (!v44)
  {
LABEL_45:
    __break(1u);
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  double v45 = v44;
  sub_10003988C(v44);
  v45[OBJC_IVAR____TtC17ContinuityDisplay17RoundedCornerView_isHidding] = 1;

  int v25 = 0;
  if ((v78 | v12))
  {
    char v42 = v78 ^ 1 | v12;
LABEL_27:
    uint64_t v46 = (uint64_t *)(v1 + OBJC_IVAR___DisplayMainViewController_corners);
    swift_beginAccess();
    NSBundle v47 = sub_100010778(1u, *v46);
    if (v47)
    {
      uint64_t v48 = v47;
      [v47 setHidden:0];
      v48[OBJC_IVAR____TtC17ContinuityDisplay17RoundedCornerView_isHidding] = 0;
      sub_100007D1C(&qword_1000843F0);
      uint64_t v49 = swift_allocObject();
      *(_OWORD *)(v49 + 16) = xmmword_100064BB0;
      id v50 = [v48 rightAnchor];
      uint64_t v51 = v7[337];
      id v52 = [*(id *)(v1 + v51) rightAnchor];
      id v53 = [v50 v8[98] v52];

      *(void *)(v49 + 32) = v53;
      id v54 = [v48 topAnchor];
      id v55 = [*(id *)(v1 + v51) topAnchor];
      double v56 = 64.0;
      if ((v42 & 1) == 0) {
        double v56 = 0.0;
      }
      id v57 = [v54 constraintEqualToAnchor:v55 constant:v56];

      *(void *)(v49 + 40) = v57;
      sub_10005EAE0();
      sub_100041228();

      swift_bridgeObjectRelease();
      if ((v78 | v25))
      {
        char v58 = v78 ^ 1 | v25;
        goto LABEL_34;
      }
LABEL_39:
      id v75 = (uint64_t *)(v1 + OBJC_IVAR___DisplayMainViewController_corners);
      swift_beginAccess();
      id v76 = sub_100010778(3u, *v75);
      if (v76)
      {
        long long v77 = v76;
        sub_10003988C(v76);
        v77[OBJC_IVAR____TtC17ContinuityDisplay17RoundedCornerView_isHidding] = 1;

        return;
      }
LABEL_49:
      __break(1u);
      return;
    }
    goto LABEL_46;
  }
LABEL_32:
  uint64_t v59 = (uint64_t *)(v1 + OBJC_IVAR___DisplayMainViewController_corners);
  swift_beginAccess();
  char v58 = 1;
  id v60 = sub_100010778(1u, *v59);
  if (!v60)
  {
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  id v61 = v60;
  sub_10003988C(v60);
  v61[OBJC_IVAR____TtC17ContinuityDisplay17RoundedCornerView_isHidding] = 1;

  if ((v25 & 1) == 0) {
    goto LABEL_39;
  }
LABEL_34:
  id v62 = (uint64_t *)(v1 + OBJC_IVAR___DisplayMainViewController_corners);
  swift_beginAccess();
  id v63 = sub_100010778(3u, *v62);
  if (!v63)
  {
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  uint64_t v64 = v63;
  [v63 setHidden:0];
  v64[OBJC_IVAR____TtC17ContinuityDisplay17RoundedCornerView_isHidding] = 0;
  sub_100007D1C(&qword_1000843F0);
  uint64_t v65 = swift_allocObject();
  *(_OWORD *)(v65 + 16) = xmmword_100064BB0;
  id v66 = [v64 rightAnchor];
  uint64_t v67 = OBJC_IVAR___DisplayMainViewController_displayContainer;
  id v68 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                              + OBJC_IVAR___DisplayMainViewController_displayContainer), "rightAnchor"));
  id v69 = [v66 constraintEqualToAnchor:v68];

  *(void *)(v65 + 32) = v69;
  id v70 = [v64 bottomAnchor];
  id v71 = [*(id *)(v1 + v67) bottomAnchor];
  double v72 = 0.0;
  if (v58)
  {
    BOOL v73 = sub_10002A558();
    double v72 = -78.0;
    if (v73) {
      double v72 = -64.0;
    }
  }
  id v74 = [v70 constraintEqualToAnchor:v71 constant:v72];

  *(void *)(v65 + 40) = v74;
  sub_10005EAE0();
  sub_100041228();

  swift_bridgeObjectRelease();
}

void sub_100033FDC(char a1, uint64_t a2, void *a3, void *a4, double a5)
{
  int v10 = a1 & 1;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a3;
  *(void *)(v11 + 24) = a4;
  if (*(unsigned __int8 *)(a2 + 16) == v10)
  {
    char v31 = *(void **)(a2 + 8);
    if (a3)
    {
      id v32 = a3;
      id v33 = a4;
      sub_100036CE0(v32);
    }
    else
    {
      id v58 = a4;
    }
    [v31 removeFromSuperview];

    swift_release();
  }
  else
  {
    int v12 = *(void **)a2;
    id v59 = a3;
    id v13 = a4;
    id v61 = [v12 layer];
    unint64_t v63 = (unint64_t)_swiftEmptyArrayStorage;
    *(unsigned char *)(a2 + 16) = v10;
    sub_100007F60(0, &qword_100084D30);
    id v14 = sub_100038164(0xD000000000000020, 0x8000000100062C90);
    if (a1)
    {
      Class isa = sub_10005EB90().super.super.isa;
      [v14 setFromValue:isa];

      Class v16 = sub_10005EB90().super.super.isa;
      [v14 setToValue:v16];

      [v14 setDuration:a5];
      [v14 setFillMode:kCAFillModeForwards];
      [v14 setRemovedOnCompletion:0];
      id v17 = v14;
      sub_10005EA90();
      if (*(void *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_10005EB00();
      }
      sub_10005EB30();
      sub_10005EAE0();
      id v18 = sub_100038164(0xD000000000000023, 0x8000000100062CC0);
      Class v19 = sub_10005EB90().super.super.isa;
      [v18 setFromValue:v19];

      Class v20 = sub_10005EB90().super.super.isa;
      [v18 setToValue:v20];

      [v18 setDuration:a5];
      [v18 setFillMode:kCAFillModeForwards];
      [v18 setRemovedOnCompletion:0];
      id v21 = v18;
      sub_10005EA90();
      if (*(void *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_10005EB00();
      }
      id v60 = v21;
      sub_10005EB30();
      sub_10005EAE0();
      id v22 = sub_100038164(0xD000000000000021, 0x8000000100062CF0);
      Class v23 = sub_10005EB90().super.super.isa;
      [v22 setFromValue:v23];

      Class v24 = sub_10005EB90().super.super.isa;
      [v22 setToValue:v24];

      [v22 setDuration:a5];
      [v22 setFillMode:kCAFillModeForwards];
      [v22 setRemovedOnCompletion:0];
      id v25 = v22;
      sub_10005EA90();
      if (*(void *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_10005EB00();
      }
      sub_10005EB30();
      sub_10005EAE0();
      Class v26 = sub_10005EB90().super.super.isa;
      NSString v27 = sub_10005E8F0();
      char v28 = v61;
      [v61 setValue:v26 forKeyPath:v27];

      Class v29 = sub_10005EB90().super.super.isa;
      NSString v30 = sub_10005E8F0();
      [v61 setValue:v29 forKeyPath:v30];
    }
    else
    {
      Class v34 = sub_10005EB90().super.super.isa;
      [v14 setFromValue:v34];

      Class v35 = sub_10005EB90().super.super.isa;
      [v14 setToValue:v35];

      [v14 setDuration:a5];
      [v14 setFillMode:kCAFillModeForwards];
      id v36 = v14;
      sub_10005EA90();
      if (*(void *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_10005EB00();
      }
      sub_10005EB30();
      sub_10005EAE0();
      id v37 = sub_100038164(0xD000000000000023, 0x8000000100062CC0);
      Class v38 = sub_10005EB90().super.super.isa;
      [v37 setFromValue:v38];

      Class v39 = sub_10005EB90().super.super.isa;
      [v37 setToValue:v39];

      [v37 setDuration:a5];
      [v37 setFillMode:kCAFillModeForwards];
      id v40 = v37;
      sub_10005EA90();
      if (*(void *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_10005EB00();
      }
      id v60 = v40;
      sub_10005EB30();
      sub_10005EAE0();
      id v41 = sub_100038164(0xD000000000000021, 0x8000000100062CF0);
      Class v42 = sub_10005EB90().super.super.isa;
      [v41 setFromValue:v42];

      Class v43 = sub_10005EB90().super.super.isa;
      [v41 setToValue:v43];

      [v41 setDuration:a5];
      [v41 setFillMode:kCAFillModeForwards];
      id v25 = v41;
      sub_10005EA90();
      if (*(void *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_10005EB00();
      }
      sub_10005EB30();
      sub_10005EAE0();
      [*(id *)(a2 + 8) removeFromSuperview];
      Class v44 = sub_10005EB90().super.super.isa;
      NSString v45 = sub_10005E8F0();
      char v28 = v61;
      [v61 setValue:v44 forKeyPath:v45];

      Class v46 = sub_10005EB90().super.super.isa;
      NSString v47 = sub_10005E8F0();
      [v61 setValue:v46 forKeyPath:v47];
    }
    Class v48 = sub_10005EB90().super.super.isa;
    NSString v49 = sub_10005E8F0();
    [v28 setValue:v48 forKeyPath:v49];

    id v50 = [objc_allocWithZone((Class)CAAnimationGroup) init];
    uint64_t v51 = *(void **)(a2 + 8);
    id v52 = self;
    [v52 begin];
    id v53 = (void *)swift_allocObject();
    v53[2] = sub_10003DB0C;
    v53[3] = v11;
    v53[4] = v51;
    aBlock[4] = sub_10003D3AC;
    void aBlock[5] = v53;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10000C5B0;
    void aBlock[3] = &unk_100077C78;
    id v54 = _Block_copy(aBlock);
    swift_retain();
    id v55 = v51;
    swift_release();
    [v52 setCompletionBlock:v54];
    _Block_release(v54);
    [v52 setAnimationDuration:a5];
    double v56 = (void *)v63;
    if (v63 >> 62)
    {
      sub_100007F60(0, &qword_100084D38);
      swift_bridgeObjectRetain();
      uint64_t v57 = sub_10005F070();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_10005F150();
      sub_100007F60(0, &qword_100084D38);
      uint64_t v57 = (uint64_t)v56;
    }
    swift_bridgeObjectRelease();
    sub_10003D3B0(v57, v50);
    [v50 setDuration:a5];
    sub_10003D434((uint64_t)v50, 0x70756F7267, 0xE500000000000000, v61);
    [v52 commit];
    [v52 setCompletionBlock:0];

    swift_release();
  }
}

void sub_100034A90(char a1, uint64_t a2, double a3)
{
  char v3 = a1 & 1;
  if (*(unsigned char *)(a2 + 16) != (a1 & 1))
  {
    id v7 = [*(id *)a2 layer];
    unint64_t v48 = (unint64_t)_swiftEmptyArrayStorage;
    *(unsigned char *)(a2 + 16) = v3;
    sub_100007F60(0, &qword_100084D30);
    id v8 = sub_100038164(0xD000000000000020, 0x8000000100062C90);
    if (a1)
    {
      Class isa = sub_10005EB90().super.super.isa;
      [v8 setFromValue:isa];

      Class v10 = sub_10005EB90().super.super.isa;
      [v8 setToValue:v10];

      [v8 setDuration:a3];
      [v8 setFillMode:kCAFillModeForwards];
      [v8 setRemovedOnCompletion:0];
      id v11 = v8;
      sub_10005EA90();
      if (*(void *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_10005EB00();
      }
      sub_10005EB30();
      sub_10005EAE0();
      id v12 = sub_100038164(0xD000000000000023, 0x8000000100062CC0);
      Class v13 = sub_10005EB90().super.super.isa;
      [v12 setFromValue:v13];

      Class v14 = sub_10005EB90().super.super.isa;
      [v12 setToValue:v14];

      [v12 setDuration:a3];
      [v12 setFillMode:kCAFillModeForwards];
      [v12 setRemovedOnCompletion:0];
      id v15 = v12;
      sub_10005EA90();
      if (*(void *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_10005EB00();
      }
      sub_10005EB30();
      sub_10005EAE0();
      id v16 = sub_100038164(0xD000000000000021, 0x8000000100062CF0);
      Class v17 = sub_10005EB90().super.super.isa;
      [v16 setFromValue:v17];

      Class v18 = sub_10005EB90().super.super.isa;
      [v16 setToValue:v18];

      [v16 setDuration:a3];
      [v16 setFillMode:kCAFillModeForwards];
      [v16 setRemovedOnCompletion:0];
      id v19 = v16;
      sub_10005EA90();
      if (*(void *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_10005EB00();
      }
      sub_10005EB30();
      sub_10005EAE0();
      Class v20 = sub_10005EB90().super.super.isa;
      NSString v21 = sub_10005E8F0();
      [v7 setValue:v20 forKeyPath:v21];

      Class v22 = sub_10005EB90().super.super.isa;
      NSString v23 = sub_10005E8F0();
      [v7 setValue:v22 forKeyPath:v23];
    }
    else
    {
      Class v24 = sub_10005EB90().super.super.isa;
      [v8 setFromValue:v24];

      Class v25 = sub_10005EB90().super.super.isa;
      [v8 setToValue:v25];

      [v8 setDuration:a3];
      [v8 setFillMode:kCAFillModeForwards];
      id v26 = v8;
      sub_10005EA90();
      if (*(void *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_10005EB00();
      }
      sub_10005EB30();
      sub_10005EAE0();
      id v27 = sub_100038164(0xD000000000000023, 0x8000000100062CC0);
      Class v28 = sub_10005EB90().super.super.isa;
      [v27 setFromValue:v28];

      Class v29 = sub_10005EB90().super.super.isa;
      [v27 setToValue:v29];

      [v27 setDuration:a3];
      [v27 setFillMode:kCAFillModeForwards];
      id v15 = v27;
      sub_10005EA90();
      if (*(void *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_10005EB00();
      }
      sub_10005EB30();
      sub_10005EAE0();
      id v30 = sub_100038164(0xD000000000000021, 0x8000000100062CF0);
      Class v31 = sub_10005EB90().super.super.isa;
      [v30 setFromValue:v31];

      Class v32 = sub_10005EB90().super.super.isa;
      [v30 setToValue:v32];

      [v30 setDuration:a3];
      [v30 setFillMode:kCAFillModeForwards];
      id v19 = v30;
      sub_10005EA90();
      if (*(void *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_10005EB00();
      }
      sub_10005EB30();
      sub_10005EAE0();
      [*(id *)(a2 + 8) removeFromSuperview];
      Class v33 = sub_10005EB90().super.super.isa;
      NSString v34 = sub_10005E8F0();
      [v7 setValue:v33 forKeyPath:v34];

      Class v35 = sub_10005EB90().super.super.isa;
      NSString v36 = sub_10005E8F0();
      [v7 setValue:v35 forKeyPath:v36];
    }
    Class v37 = sub_10005EB90().super.super.isa;
    NSString v38 = sub_10005E8F0();
    [v7 setValue:v37 forKeyPath:v38];

    id v39 = [objc_allocWithZone((Class)CAAnimationGroup) init];
    id v40 = *(void **)(a2 + 8);
    id v41 = self;
    [v41 begin];
    Class v42 = (void *)swift_allocObject();
    _OWORD v42[2] = VideoStream.qosMonitorServerDidDie(_:);
    v42[3] = 0;
    v42[4] = v40;
    aBlock[4] = sub_10003D3AC;
    void aBlock[5] = v42;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10000C5B0;
    void aBlock[3] = &unk_100077AE8;
    Class v43 = _Block_copy(aBlock);
    id v44 = v40;
    swift_release();
    [v41 setCompletionBlock:v43];
    _Block_release(v43);
    [v41 setAnimationDuration:a3];
    NSString v45 = (void *)v48;
    if (v48 >> 62)
    {
      sub_100007F60(0, &qword_100084D38);
      swift_bridgeObjectRetain();
      uint64_t v46 = sub_10005F070();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_10005F150();
      sub_100007F60(0, &qword_100084D38);
      uint64_t v46 = (uint64_t)v45;
    }
    swift_bridgeObjectRelease();
    sub_10003D3B0(v46, v39);
    [v39 setDuration:a3];
    sub_10003D434((uint64_t)v39, 0x70756F7267, 0xE500000000000000, v7);
    [v41 commit];
    [v41 setCompletionBlock:0];
  }
}

void sub_10003547C(char a1, uint64_t a2, double a3)
{
  char v4 = a1 & 1;
  if (*(unsigned char *)(a2 + 16) == (a1 & 1))
  {
    Class v24 = *(void **)(a2 + 8);
    [v24 removeFromSuperview];
  }
  else
  {
    id v7 = [*(id *)a2 layer];
    unint64_t v49 = (unint64_t)_swiftEmptyArrayStorage;
    *(unsigned char *)(a2 + 16) = v4;
    sub_100007F60(0, &qword_100084D30);
    id v8 = sub_100038164(0xD000000000000020, 0x8000000100062C90);
    if (a1)
    {
      Class isa = sub_10005EB90().super.super.isa;
      [v8 setFromValue:isa];

      Class v10 = sub_10005EB90().super.super.isa;
      [v8 setToValue:v10];

      [v8 setDuration:a3];
      [v8 setFillMode:kCAFillModeForwards];
      [v8 setRemovedOnCompletion:0];
      id v11 = v8;
      sub_10005EA90();
      if (*(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_10005EB00();
      }
      sub_10005EB30();
      sub_10005EAE0();
      id v12 = sub_100038164(0xD000000000000023, 0x8000000100062CC0);
      Class v13 = sub_10005EB90().super.super.isa;
      [v12 setFromValue:v13];

      Class v14 = sub_10005EB90().super.super.isa;
      [v12 setToValue:v14];

      [v12 setDuration:a3];
      [v12 setFillMode:kCAFillModeForwards];
      [v12 setRemovedOnCompletion:0];
      id v15 = v12;
      sub_10005EA90();
      if (*(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_10005EB00();
      }
      sub_10005EB30();
      sub_10005EAE0();
      id v16 = sub_100038164(0xD000000000000021, 0x8000000100062CF0);
      Class v17 = sub_10005EB90().super.super.isa;
      [v16 setFromValue:v17];

      Class v18 = sub_10005EB90().super.super.isa;
      [v16 setToValue:v18];

      [v16 setDuration:a3];
      [v16 setFillMode:kCAFillModeForwards];
      [v16 setRemovedOnCompletion:0];
      id v19 = v16;
      sub_10005EA90();
      if (*(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_10005EB00();
      }
      sub_10005EB30();
      sub_10005EAE0();
      Class v20 = sub_10005EB90().super.super.isa;
      NSString v21 = sub_10005E8F0();
      [v7 setValue:v20 forKeyPath:v21];

      Class v22 = sub_10005EB90().super.super.isa;
      NSString v23 = sub_10005E8F0();
      [v7 setValue:v22 forKeyPath:v23];
    }
    else
    {
      Class v25 = sub_10005EB90().super.super.isa;
      [v8 setFromValue:v25];

      Class v26 = sub_10005EB90().super.super.isa;
      [v8 setToValue:v26];

      [v8 setDuration:a3];
      [v8 setFillMode:kCAFillModeForwards];
      id v27 = v8;
      sub_10005EA90();
      if (*(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_10005EB00();
      }
      sub_10005EB30();
      sub_10005EAE0();
      id v28 = sub_100038164(0xD000000000000023, 0x8000000100062CC0);
      Class v29 = sub_10005EB90().super.super.isa;
      [v28 setFromValue:v29];

      Class v30 = sub_10005EB90().super.super.isa;
      [v28 setToValue:v30];

      [v28 setDuration:a3];
      [v28 setFillMode:kCAFillModeForwards];
      id v15 = v28;
      sub_10005EA90();
      if (*(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_10005EB00();
      }
      sub_10005EB30();
      sub_10005EAE0();
      id v31 = sub_100038164(0xD000000000000021, 0x8000000100062CF0);
      Class v32 = sub_10005EB90().super.super.isa;
      [v31 setFromValue:v32];

      Class v33 = sub_10005EB90().super.super.isa;
      [v31 setToValue:v33];

      [v31 setDuration:a3];
      [v31 setFillMode:kCAFillModeForwards];
      id v19 = v31;
      sub_10005EA90();
      if (*(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_10005EB00();
      }
      sub_10005EB30();
      sub_10005EAE0();
      [*(id *)(a2 + 8) removeFromSuperview];
      Class v34 = sub_10005EB90().super.super.isa;
      NSString v35 = sub_10005E8F0();
      [v7 setValue:v34 forKeyPath:v35];

      Class v36 = sub_10005EB90().super.super.isa;
      NSString v37 = sub_10005E8F0();
      [v7 setValue:v36 forKeyPath:v37];
    }
    Class v38 = sub_10005EB90().super.super.isa;
    NSString v39 = sub_10005E8F0();
    [v7 setValue:v38 forKeyPath:v39];

    id v40 = [objc_allocWithZone((Class)CAAnimationGroup) init];
    id v41 = *(void **)(a2 + 8);
    Class v42 = self;
    [v42 begin];
    Class v43 = (void *)swift_allocObject();
    _OWORD v43[2] = sub_100038BC0;
    v43[3] = 0;
    v43[4] = v41;
    aBlock[4] = sub_10003D3AC;
    void aBlock[5] = v43;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10000C5B0;
    void aBlock[3] = &unk_100077C00;
    id v44 = _Block_copy(aBlock);
    id v45 = v41;
    swift_release();
    [v42 setCompletionBlock:v44];
    _Block_release(v44);
    [v42 setAnimationDuration:a3];
    uint64_t v46 = (void *)v49;
    if (v49 >> 62)
    {
      sub_100007F60(0, &qword_100084D38);
      swift_bridgeObjectRetain();
      uint64_t v47 = sub_10005F070();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_10005F150();
      sub_100007F60(0, &qword_100084D38);
      uint64_t v47 = (uint64_t)v46;
    }
    swift_bridgeObjectRelease();
    sub_10003D3B0(v47, v40);
    [v40 setDuration:a3];
    sub_10003D434((uint64_t)v40, 0x70756F7267, 0xE500000000000000, v7);
    [v42 commit];
    [v42 setCompletionBlock:0];
  }
}

uint64_t sub_100035EAC(uint64_t a1, uint64_t a2)
{
  char v4 = (id *)(a1 + 16);
  swift_beginAccess();
  uint64_t v5 = *(void **)(a1 + 16);
  if (v5) {
    [v5 removeFromParentViewController];
  }
  swift_beginAccess();
  if (*v4)
  {
    uint64_t result = (uint64_t)[*v4 view];
    if (!result)
    {
      __break(1u);
      return result;
    }
    id v7 = (void *)result;
    [(id)result removeFromSuperview];
  }
  uint64_t result = sub_10003D37C();
  if (result)
  {
    id v8 = sub_100040F94();
    uint64_t v9 = (char *)v8[2];
    if (v9)
    {
      Class v10 = (uint64_t *)(a2 + OBJC_IVAR___DisplayMainViewController_corners);
      swift_beginAccess();
      for (unint64_t i = 0; i != v9; ++i)
      {
        uint64_t v12 = *v10;
        if (*(void *)(*v10 + 16))
        {
          unint64_t v13 = sub_10003C5FC(i[(void)v8 + 32]);
          if (v14)
          {
            id v15 = *(void **)(*(void *)(v12 + 56) + 8 * v13);
            uint64_t v16 = OBJC_IVAR____TtC17ContinuityDisplay17RoundedCornerView_isHidding;
            if (*((unsigned char *)v15 + OBJC_IVAR____TtC17ContinuityDisplay17RoundedCornerView_isHidding))
            {
              id v17 = v15;
              [v17 setHidden:1];
              *((unsigned char *)v15 + v16) = 0;
            }
          }
        }
      }
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_100036018(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  uint64_t v11 = sub_10003DD64();
  *(double *)(v11 + 16) = a5;
  *(void *)(v11 + 24) = a1;
  *(void *)(v11 + 32) = a2;
  id v19 = sub_10003D300;
  uint64_t v20 = v11;
  id v15 = _NSConcreteStackBlock;
  uint64_t v16 = 1107296256;
  id v17 = sub_10000C5B0;
  Class v18 = &unk_100077A48;
  uint64_t v12 = _Block_copy(&v15);
  swift_retain();
  swift_release();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a3;
  *(void *)(v13 + 24) = a4;
  id v19 = sub_10003D354;
  uint64_t v20 = v13;
  id v15 = _NSConcreteStackBlock;
  uint64_t v16 = 1107296256;
  id v17 = sub_10003B8D0;
  Class v18 = &unk_100077A98;
  char v14 = _Block_copy(&v15);
  swift_retain();
  swift_release();
  [ObjCClassFromMetadata animateWithDuration:v12 animations:v14 completion:a5];
  _Block_release(v14);
  _Block_release(v12);
}

void sub_1000361B8()
{
  id v5 = [v0 view];
  if (v5)
  {
    char v6 = v5;
    [*(id *)&v0[OBJC_IVAR___DisplayMainViewController_displayContainer] frame];
    [v6 convertRect:0 toView:];
    sub_10003DE94();

    id v7 = (void *)(*(void *)(*(void *)&v0[OBJC_IVAR___DisplayMainViewController_displayViewController]
                              + OBJC_IVAR___DisplayViewController_hidObserver)
                  + OBJC_IVAR____TtC17ContinuityDisplay16HIDEventObserver_touchBounds);
    *id v7 = v1;
    v7[1] = v2;
    v7[2] = v3;
    v7[3] = v4;
  }
  else
  {
    __break(1u);
  }
}

void sub_1000362B8()
{
  [v0 sidecarServiceUpdateSupportedOrientations];
  sub_100030B6C();
  if (qword_100083B38 != -1) {
    swift_once();
  }
  swift_beginAccess();
  char v1 = sub_10000A090(14, qword_100088F48, unk_100088F50, (void *)qword_100088F58);
  swift_endAccess();
  if (v1)
  {
    id v2 = [v0 request];
    if (v2)
    {
      uint64_t v3 = v2;
      sub_100007D1C(&qword_1000843F0);
      uint64_t v4 = sub_10003DD64();
      *(_OWORD *)(v4 + 16) = xmmword_100064320;
      id v5 = objc_allocWithZone((Class)SidecarItem);
      *(void *)(v4 + 32) = sub_10003C3D4();
      uint64_t v6 = sub_10005EAE0();
      sub_10003E064(v6, &qword_1000843F8);
      sub_10003DD1C();
      uint64_t v7 = sub_10003DF10();
      sub_10003DCF0(v7, "sendItems:complete:");
    }
  }
}

void sub_100036468()
{
  if (*(void *)&v0[OBJC_IVAR___DisplayMainViewController_keyboardResponder]) {
    return;
  }
  type metadata accessor for DisplayMainViewController.KeyboardResponder();
  char v1 = (char *)[objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  *(void *)&v1[OBJC_IVAR____TtCC17ContinuityDisplay25DisplayMainViewController17KeyboardResponder_delegate + 8] = &off_100077988;
  swift_unknownObjectWeakAssign();
  id v2 = [v0 view];
  if (!v2)
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v3 = v2;
  id v4 = [v1 view];
  if (!v4)
  {
LABEL_10:
    __break(1u);
    return;
  }
  id v5 = v4;
  [v3 addSubview:v4];

  [v0 addChildViewController:v1];
  [v1 becomeFirstResponder];
  id v8 = v1;
  sub_10002EE14((uint64_t)v1);
  uint64_t v6 = *(void **)&v0[OBJC_IVAR___DisplayMainViewController_sidebarController];
  if (v6)
  {
    id v7 = v6;
    sub_10001C23C(1);
  }
}

void sub_1000365C0()
{
  char v1 = *(void **)&v0[OBJC_IVAR___DisplayMainViewController_keyboardResponder];
  if (v1)
  {
    id v4 = v1;
    [v4 removeFromParentViewController];
    [v0 becomeFirstResponder];
    sub_10002EE14(0);
    memset(v5, 0, sizeof(v5));
    char v6 = 1;
    swift_retain();
    sub_100005CEC((uint64_t)v5);
    swift_release();
    id v2 = *(void **)&v0[OBJC_IVAR___DisplayMainViewController_sidebarController];
    if (v2)
    {
      id v3 = v2;
      sub_10001C23C(0);
    }
  }
}

uint64_t sub_1000366F0(void *a1, __n128 a2, uint64_t a3, uint64_t a4, void (*a5)(id, __n128))
{
  if (a4)
  {
    id v7 = a1;
    swift_unknownObjectRetain();
    sub_10005EEC0();
    id v8 = (id)swift_unknownObjectRelease();
  }
  else
  {
    memset(v11, 0, sizeof(v11));
    id v8 = a1;
  }
  a5(v8, a2);

  return sub_10003D8AC((uint64_t)v11, (uint64_t *)&unk_100084130);
}

void sub_10003677C(__n128 a1)
{
  v1[0] = a1;
  v1[1] = xmmword_100064500;
  char v2 = 1;
  sub_10003A4E4((uint64_t)v1, 1);
  sub_10003A4E4((uint64_t)v1, 0);
}

void sub_1000367E4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, char a5, uint64_t a6)
{
  id v7 = v6;
  char v12 = a5 & 1;
  objc_allocWithZone((Class)type metadata accessor for DisplayModalAlert());
  swift_errorRetain();
  sub_10001F900(v12, a6);
  char v14 = v13;
  [v13 setModalTransitionStyle:2];
  [v14 setModalPresentationStyle:5];
  *(void *)&v14[OBJC_IVAR____TtC17ContinuityDisplay17DisplayModalAlert_delegate + 8] = &off_100077978;
  swift_unknownObjectWeakAssign();
  id v15 = *(id *)&v14[OBJC_IVAR____TtC17ContinuityDisplay17DisplayModalAlert_mainLabel];
  sub_10003D1A0(a1, a2, v15);

  id v16 = *(id *)&v14[OBJC_IVAR____TtC17ContinuityDisplay17DisplayModalAlert_secondaryLabel];
  uint64_t v17 = sub_10003E198();
  sub_10003D1A0(v17, v18, v16);

  id v19 = *(void **)&v7[OBJC_IVAR___DisplayMainViewController_presentedAlert];
  id v22 = v19;
  uint64_t v20 = v14;
  uint64_t v21 = sub_10003DFE0();
  sub_10002EE2C(v21);
  [v7 presentViewController:a4 animated:0 completion:0];
  if (v19) {
    [v22 dismissViewControllerAnimated:0 completion:0];
  }
  sub_100036984();
  sub_100030B6C();
}

void sub_100036984()
{
  if (sub_10003D1F8())
  {
    char v1 = *(char **)(v0 + OBJC_IVAR___DisplayMainViewController_presentedAlert);
    if (v1)
    {
      uint64_t v2 = *(void *)&v1[OBJC_IVAR____TtC17ContinuityDisplay17DisplayModalAlert_error];
      NSString v39 = *(char **)(v0 + OBJC_IVAR___DisplayMainViewController_presentedAlert);
      id v3 = v1;
      if (v2)
      {
        swift_errorRetain();
        id v4 = (void *)sub_10005E520();
        swift_errorRelease();
        sub_100007D1C((uint64_t *)&unk_100084D10);
        uint64_t v5 = swift_allocObject();
        *(_OWORD *)(v5 + 16) = xmmword_1000643A0;
        id v6 = [v4 localizedDescription];
        uint64_t v7 = sub_10005E920();
        uint64_t v9 = v8;

        *(void *)(v5 + 56) = &type metadata for String;
        unint64_t v10 = sub_100010414();
        *(void *)(v5 + 64) = v10;
        *(void *)(v5 + 32) = v7;
        *(void *)(v5 + 40) = v9;
        id v11 = [v4 debugDescription];
        uint64_t v12 = sub_10005E920();
        uint64_t v14 = v13;

        *(void *)(v5 + 96) = &type metadata for String;
        *(void *)(v5 + 104) = v10;
        *(void *)(v5 + 72) = v12;
        *(void *)(v5 + 80) = v14;
        uint64_t v2 = sub_10005E930();
        unint64_t v16 = v15;
      }
      else
      {
        unint64_t v16 = 0xE000000000000000;
      }
      uint64_t v17 = *(void *)(v0 + OBJC_IVAR___DisplayMainViewController_qosViewController);
      if (v17)
      {
        uint64_t v18 = sub_10003D130(objc_retain(*(id *)(v17
                                              + OBJC_IVAR____TtC17ContinuityDisplay27QOSControllerViewController_label)));
        if (v19)
        {
          uint64_t v20 = v18;
          uint64_t v21 = v19;
          sub_100007D1C((uint64_t *)&unk_100084D10);
          uint64_t v22 = swift_allocObject();
          *(_OWORD *)(v22 + 16) = xmmword_1000643A0;
          *(void *)(v22 + 56) = &type metadata for String;
          unint64_t v23 = sub_100010414();
          *(void *)(v22 + 32) = v2;
          *(void *)(v22 + 40) = v16;
          *(void *)(v22 + 96) = &type metadata for String;
          *(void *)(v22 + 104) = v23;
          *(void *)(v22 + 64) = v23;
          *(void *)(v22 + 72) = v20;
          *(void *)(v22 + 80) = v21;
          uint64_t v2 = sub_10005E930();
          unint64_t v16 = v24;
        }
      }
      uint64_t v25 = HIBYTE(v16) & 0xF;
      if ((v16 & 0x2000000000000000) == 0) {
        uint64_t v25 = v2 & 0xFFFFFFFFFFFFLL;
      }
      if (v25)
      {
        sub_100007D1C((uint64_t *)&unk_100084D10);
        uint64_t v26 = swift_allocObject();
        *(_OWORD *)(v26 + 16) = xmmword_100064390;
        CFDataRef v27 = sub_10005C3A8();
        uint64_t v28 = sub_10005E920();
        uint64_t v30 = v29;

        *(void *)(v26 + 56) = &type metadata for String;
        unint64_t v31 = sub_100010414();
        *(void *)(v26 + 64) = v31;
        *(void *)(v26 + 32) = v28;
        *(void *)(v26 + 40) = v30;
        Class v32 = sub_10005C4B8();
        uint64_t v33 = sub_10005E920();
        uint64_t v35 = v34;

        *(void *)(v26 + 96) = &type metadata for String;
        *(void *)(v26 + 104) = v31;
        *(void *)(v26 + 72) = v33;
        *(void *)(v26 + 80) = v35;
        if (qword_100083B40 != -1) {
          swift_once();
        }
        uint64_t v37 = qword_100088F68;
        uint64_t v36 = unk_100088F70;
        *(void *)(v26 + 136) = &type metadata for String;
        *(void *)(v26 + 144) = v31;
        *(void *)(v26 + 112) = v37;
        *(void *)(v26 + 120) = v36;
        *(void *)(v26 + 176) = &type metadata for String;
        *(void *)(v26 + 184) = v31;
        *(void *)(v26 + 152) = v2;
        *(void *)(v26 + 160) = v16;
        swift_bridgeObjectRetain();
        uint64_t v2 = sub_10005E930();
        unint64_t v16 = v38;
      }
      sub_10003D0CC(v2, v16, *(void **)&v39[OBJC_IVAR____TtC17ContinuityDisplay17DisplayModalAlert_debugLabel]);
    }
  }
}

void sub_100036CE0(void *a1)
{
  uint64_t v2 = v1;
  if (qword_100083B70 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_10005E750();
  uint64_t v5 = sub_10003DD7C(v4, (uint64_t)qword_100084A10);
  os_log_type_t v6 = sub_10005EC50();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)sub_10003DDF0();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "=== Dismiss Modal Alert ===", v7, 2u);
    sub_10000FB20();
  }

  [a1 dismissViewControllerAnimated:0 completion:0];
  uint64_t v8 = *(void **)(v2 + OBJC_IVAR___DisplayMainViewController_presentedAlert);
  if (v8)
  {
    type metadata accessor for DisplayModalAlert();
    id v9 = a1;
    id v10 = v8;
    sub_10003E18C();
    char v11 = sub_10005EDC0();

    if (v11)
    {
      uint64_t v12 = sub_10003DF28();
      sub_10002EE2C(v12);
      sub_100030B6C();
    }
  }
}

id sub_100036E38(uint64_t a1, uint64_t a2, void *a3)
{
  sub_10003E0F0();
  uint64_t v6 = OBJC_IVAR___DisplayMainViewController_displayViewController;
  type metadata accessor for DisplayViewController();
  id v7 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v8 = v3;
  *(void *)&v3[v6] = [v7 init];
  uint64_t v9 = OBJC_IVAR___DisplayMainViewController_displaySettings;
  uint64_t v10 = sub_10005E890();
  *(void *)&v8[v9] = sub_100009A14(v10);
  char v11 = &v8[OBJC_IVAR___DisplayMainViewController_snapshot];
  *(void *)char v11 = 0;
  *((void *)v11 + 1) = 0;
  v11[16] = 0;
  *(void *)&v8[OBJC_IVAR___DisplayMainViewController_sidebarController] = 0;
  *(void *)&v8[OBJC_IVAR___DisplayMainViewController_corners] = _swiftEmptyDictionarySingleton;
  *(void *)&v8[OBJC_IVAR___DisplayMainViewController_displayLeftConstraint] = 0;
  *(void *)&v8[OBJC_IVAR___DisplayMainViewController_displayRightConstraint] = 0;
  sub_10003DF44(&v8[OBJC_IVAR___DisplayMainViewController_currentTool]);
  *(void *)&v8[OBJC_IVAR___DisplayMainViewController_keyboardResponder] = 0;
  v8[OBJC_IVAR___DisplayMainViewController_reconfiguring] = 0;
  uint64_t v12 = OBJC_IVAR___DisplayMainViewController__customUndoManager;
  *(void *)&v8[v12] = [objc_allocWithZone((Class)type metadata accessor for DisplayMainViewController.DisplayUndoManager()) init];
  *(void *)&v8[OBJC_IVAR___DisplayMainViewController_configurationAnimationDuration] = 0x3FD3333333333333;
  uint64_t v13 = OBJC_IVAR___DisplayMainViewController_displayContainer;
  *(void *)&v8[v13] = [objc_allocWithZone((Class)UIView) init];
  *(void *)&v8[OBJC_IVAR___DisplayMainViewController_qosViewController] = 0;
  v8[OBJC_IVAR___DisplayMainViewController_displayShouldSleep] = 0;
  *(void *)&v8[OBJC_IVAR___DisplayMainViewController_keyboardDebugLayer] = 0;
  *(void *)&v8[OBJC_IVAR___DisplayMainViewController_presentedAlert] = 0;
  *(void *)&v8[OBJC_IVAR___DisplayMainViewController_reconfigureWatchdog] = 0;
  sub_10003E010();
  sub_100007F60(0, (unint64_t *)&unk_100084D90);
  unsigned __int8 v14 = sub_100013228();
  uint64_t v15 = 3;
  if ((v14 & 1) == 0) {
    uint64_t v15 = 0;
  }
  *(void *)&v8[OBJC_IVAR___DisplayMainViewController_referenceDisplayModeStatus] = v15;
  *(void *)&v8[OBJC_IVAR___DisplayMainViewController_disableUniversalControlAssertion] = 0;
  v8[OBJC_IVAR___DisplayMainViewController_dockShown] = 0;
  v8[OBJC_IVAR___DisplayMainViewController_menuOverrideEnabled] = 0;
  *(void *)&v8[OBJC_IVAR___DisplayMainViewController__viewUpdateTimer] = 0;

  if (v4)
  {
    sub_10003E198();
    NSString v16 = sub_10005E8F0();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v16 = 0;
  }
  v19.receiver = v8;
  v19.super_class = (Class)type metadata accessor for DisplayMainViewController(0);
  id v17 = [super initWithNibName:v16 bundle:a3];

  return v17;
}

id sub_1000370D4(void *a1)
{
  uint64_t v3 = OBJC_IVAR___DisplayMainViewController_displayViewController;
  type metadata accessor for DisplayViewController();
  id v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v5 = v1;
  *(void *)&v1[v3] = [v4 init];
  uint64_t v6 = OBJC_IVAR___DisplayMainViewController_displaySettings;
  uint64_t v7 = sub_10005E890();
  *(void *)&v5[v6] = sub_100009A14(v7);
  uint64_t v8 = &v5[OBJC_IVAR___DisplayMainViewController_snapshot];
  *(void *)uint64_t v8 = 0;
  *((void *)v8 + 1) = 0;
  v8[16] = 0;
  *(void *)&v5[OBJC_IVAR___DisplayMainViewController_sidebarController] = 0;
  *(void *)&v5[OBJC_IVAR___DisplayMainViewController_corners] = _swiftEmptyDictionarySingleton;
  *(void *)&v5[OBJC_IVAR___DisplayMainViewController_displayLeftConstraint] = 0;
  *(void *)&v5[OBJC_IVAR___DisplayMainViewController_displayRightConstraint] = 0;
  sub_10003DF44(&v5[OBJC_IVAR___DisplayMainViewController_currentTool]);
  *(void *)&v5[OBJC_IVAR___DisplayMainViewController_keyboardResponder] = 0;
  v5[OBJC_IVAR___DisplayMainViewController_reconfiguring] = 0;
  uint64_t v9 = OBJC_IVAR___DisplayMainViewController__customUndoManager;
  *(void *)&v5[v9] = [objc_allocWithZone((Class)type metadata accessor for DisplayMainViewController.DisplayUndoManager()) init];
  *(void *)&v5[OBJC_IVAR___DisplayMainViewController_configurationAnimationDuration] = 0x3FD3333333333333;
  uint64_t v10 = OBJC_IVAR___DisplayMainViewController_displayContainer;
  *(void *)&v5[v10] = [objc_allocWithZone((Class)UIView) init];
  *(void *)&v5[OBJC_IVAR___DisplayMainViewController_qosViewController] = 0;
  v5[OBJC_IVAR___DisplayMainViewController_displayShouldSleep] = 0;
  *(void *)&v5[OBJC_IVAR___DisplayMainViewController_keyboardDebugLayer] = 0;
  *(void *)&v5[OBJC_IVAR___DisplayMainViewController_presentedAlert] = 0;
  *(void *)&v5[OBJC_IVAR___DisplayMainViewController_reconfigureWatchdog] = 0;
  sub_10003E010();
  sub_100007F60(0, (unint64_t *)&unk_100084D90);
  unsigned __int8 v11 = sub_100013228();
  uint64_t v12 = 3;
  if ((v11 & 1) == 0) {
    uint64_t v12 = 0;
  }
  *(void *)&v5[OBJC_IVAR___DisplayMainViewController_referenceDisplayModeStatus] = v12;
  *(void *)&v5[OBJC_IVAR___DisplayMainViewController_disableUniversalControlAssertion] = 0;
  v5[OBJC_IVAR___DisplayMainViewController_dockShown] = 0;
  v5[OBJC_IVAR___DisplayMainViewController_menuOverrideEnabled] = 0;
  *(void *)&v5[OBJC_IVAR___DisplayMainViewController__viewUpdateTimer] = 0;

  v15.receiver = v5;
  v15.super_class = (Class)type metadata accessor for DisplayMainViewController(0);
  [super initWithCoder:a1];

  return v13;
}

double sub_10003734C()
{
  sub_10001A688();
  uint64_t v1 = swift_bridgeObjectRetain();
  char v2 = sub_10002E76C(v1);
  swift_bridgeObjectRelease();
  double v3 = 0.0;
  if (v2)
  {
    uint64_t v4 = swift_bridgeObjectRetain();
    char v5 = sub_10002E7D0(v4);
    swift_bridgeObjectRelease();
    if (v5) {
      double v3 = 64.0;
    }
    else {
      sub_10002A558();
    }
  }
  uint64_t v6 = *(void **)(v0 + OBJC_IVAR___DisplayMainViewController_displayLeftConstraint);
  if (v6) {
    [v6 constant];
  }
  uint64_t v7 = *(void **)(v0 + OBJC_IVAR___DisplayMainViewController_displayRightConstraint);
  if (v7) {
    [v7 constant];
  }
  if (qword_100083B70 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_10005E750();
  uint64_t v9 = sub_10003DD7C(v8, (uint64_t)qword_100084A10);
  os_log_type_t v10 = sub_10005EC30();
  if (os_log_type_enabled(v9, v10))
  {
    unsigned __int8 v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)unsigned __int8 v11 = 136446210;
    uint64_t v16 = v12;
    type metadata accessor for UIEdgeInsets(0);
    uint64_t v13 = sub_10005E940();
    sub_10000F098(v13, v14, &v16);
    sub_10005EE10();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "keyboard edge inset: %{public}s", v11, 0xCu);
    swift_arrayDestroy();
    sub_10000FB20();
    sub_10000FB20();
  }

  return v3;
}

void sub_1000375B4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10005E750();
  sub_100008DCC();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  sub_10001A708();
  id v6 = [v0 request];
  if (!v6) {
    goto LABEL_4;
  }
  uint64_t v18 = v6;
  if ([v6 isFinished])
  {

LABEL_4:
    if (qword_100083B70 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_10003DD7C(v2, (uint64_t)qword_100084A10);
    os_log_type_t v8 = sub_10005EC50();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)sub_10003DDF0();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "=== User Disconnect (no active request) ===", v9, 2u);
      sub_10000FB20();
    }

    id v10 = [v1 requestCompleted];
    [v1 completeRequest:v10];
    return;
  }
  uint64_t v11 = *(void *)&v0[OBJC_IVAR___DisplayMainViewController_presentedAlert];
  if (v11 && *(void *)(v11 + OBJC_IVAR____TtC17ContinuityDisplay17DisplayModalAlert_error))
  {
    swift_errorRetain();
    if (qword_100083B70 != -1) {
      swift_once();
    }
    sub_10002A1FC(v2, (uint64_t)qword_100084A10);
    sub_10003E180();
    uint64_t v13 = v12();
    __chkstk_darwin(v13);
    sub_10002E180((uint64_t (*)(void))sub_100037948, 0, (void (*)(void))sub_10000FAE8);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v0, v2);
    unint64_t v14 = (void *)sub_10005E520();
    [v18 setError:v14];

    swift_errorRelease();
  }
  else
  {
    if (qword_100083B70 != -1) {
      swift_once();
    }
    objc_super v15 = sub_10003DD7C(v2, (uint64_t)qword_100084A10);
    os_log_type_t v16 = sub_10005EC50();
    if (os_log_type_enabled(v15, v16))
    {
      id v17 = (uint8_t *)sub_10003DDF0();
      *(_WORD *)id v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "=== User Disconnect ===", v17, 2u);
      sub_10000FB20();
    }

    [v18 cancel];
  }
}

unint64_t sub_100037948()
{
  return 0xD000000000000017;
}

void sub_100037964()
{
  id v1 = [v0 view];
  if (v1)
  {
    uint64_t v2 = v1;
    [v1 frame];
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1000379CC()
{
  uint64_t v0 = sub_10005E750();
  sub_10002A4B4(v0, qword_100084A10);
  sub_10002A1FC(v0, (uint64_t)qword_100084A10);
  return sub_10005E730();
}

uint64_t sub_100037A44(void *a1)
{
  id v2 = [a1 type];
  uint64_t v3 = sub_10005E920();
  uint64_t v5 = v4;

  if (v3 == 0x7065656C7364 && v5 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v7 = sub_10005F140();
    uint64_t result = swift_bridgeObjectRelease();
    if ((v7 & 1) == 0) {
      return result;
    }
  }

  return sub_100037B18(a1);
}

uint64_t sub_100037B18(void *a1)
{
  id v2 = v1;
  if ([a1 objectValue])
  {
    sub_10005EEC0();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v12, 0, sizeof(v12));
  }
  sub_10003DB90((uint64_t)v12, (uint64_t)&v13, (uint64_t *)&unk_100084130);
  if (!v14) {
    return sub_10003D8AC((uint64_t)&v13, (uint64_t *)&unk_100084130);
  }
  sub_100007D1C(&qword_1000843E0);
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0) {
    return result;
  }
  sub_1000106CC(v11, &v13);
  swift_bridgeObjectRelease();
  if (!v14) {
    return sub_10003D8AC((uint64_t)&v13, (uint64_t *)&unk_100084130);
  }
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    int v4 = LOBYTE(v12[0]);
    if (LOBYTE(v12[0]) != v1[OBJC_IVAR___DisplayMainViewController_displayShouldSleep])
    {
      v1[OBJC_IVAR___DisplayMainViewController_displayShouldSleep] = v12[0];
      if (v4)
      {
        if (qword_100083B70 != -1) {
          swift_once();
        }
        uint64_t v5 = sub_10005E750();
        sub_10002A1FC(v5, (uint64_t)qword_100084A10);
        id v6 = sub_10005E720();
        os_log_type_t v7 = sub_10005EC50();
        if (!os_log_type_enabled(v6, v7)) {
          goto LABEL_21;
        }
        os_log_type_t v8 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)os_log_type_t v8 = 0;
        uint64_t v9 = "=== Host Display Sleep ===";
      }
      else
      {
        if (qword_100083B70 != -1) {
          swift_once();
        }
        uint64_t v10 = sub_10005E750();
        sub_10002A1FC(v10, (uint64_t)qword_100084A10);
        id v6 = sub_10005E720();
        os_log_type_t v7 = sub_10005EC50();
        if (!os_log_type_enabled(v6, v7)) {
          goto LABEL_21;
        }
        os_log_type_t v8 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)os_log_type_t v8 = 0;
        uint64_t v9 = "=== Host Display Wake ===";
      }
      _os_log_impl((void *)&_mh_execute_header, v6, v7, v9, v8, 2u);
      swift_slowDealloc();
LABEL_21:

      sub_100030B6C();
      if (v4)
      {
        uint64_t result = (uint64_t)[v2 backgrounded];
        if ((result & 1) == 0) {
          return SBSLockDevice();
        }
      }
      else
      {
        return SBSUndimScreen();
      }
    }
  }
  return result;
}

id sub_100037DC4(void *a1, void *a2)
{
  id v24 = a1;
  sub_100007F60(0, &qword_100084D78);
  sub_10005E920();
  id v4 = a1;
  id v5 = a2;
  id v6 = sub_100038020();
  Class isa = sub_10005EB70().super.super.isa;
  NSString v8 = sub_10005E8F0();
  sub_10003DDD0();

  Class v9 = sub_10005EB70().super.super.isa;
  NSString v10 = sub_10005E8F0();
  sub_10003DDD0();

  Class v11 = sub_10005EB90().super.super.isa;
  NSString v12 = sub_10003DDA4();
  sub_10003DDD0();

  sub_10005E920();
  id v13 = sub_100038020();
  sub_10005E920();
  id v14 = sub_100038020();
  Class v15 = sub_10005EB90().super.super.isa;
  NSString v16 = sub_10003DDA4();
  [v6 setValue:v15 forKey:v16];

  sub_10005EB90();
  NSString v17 = sub_10003DD34();
  [v13 setValue:v15 forKey:v17];

  sub_10005EB90();
  NSString v18 = sub_10003DD34();
  [v14 setValue:v15 forKey:v18];

  uint64_t v19 = sub_100007F60(0, &qword_100084D28);
  id v20 = v6;
  id v21 = v13;
  id v22 = v14;
  sub_1000332E8(v19, &v24, v20, v21, v22);

  return v4;
}

id sub_100038020()
{
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  NSString v1 = sub_10005E8F0();
  swift_bridgeObjectRelease();
  id v2 = [v0 initWithType:v1];

  return v2;
}

void sub_100038094(id *a1, void *a2, void *a3, void *a4)
{
  id v12 = [*a1 layer];
  sub_100007D1C(&qword_100084D80);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1000644E0;
  uint64_t v8 = sub_100007F60(0, &qword_100084D78);
  *(void *)(v7 + 32) = a2;
  *(void *)(v7 + 56) = v8;
  *(void *)(v7 + 64) = a3;
  *(void *)(v7 + 120) = v8;
  *(void *)(v7 + 88) = v8;
  *(void *)(v7 + 96) = a4;
  id v9 = a2;
  id v10 = a3;
  id v11 = a4;
  sub_10003D950(v7, v12);
}

id sub_100038164(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    NSString v2 = sub_10005E8F0();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v2 = 0;
  }
  id v3 = [(id)swift_getObjCClassFromMetadata() animationWithKeyPath:v2];

  return v3;
}

id sub_1000381D4()
{
  NSString v1 = *(void **)(v0 + OBJC_IVAR___DisplayMainViewController_displayContainer);
  NSString v2 = *(void **)(v0 + OBJC_IVAR___DisplayMainViewController_displayViewController);
  id v3 = v1;
  id result = [v2 view];
  if (result)
  {
    id v5 = result;
    id v6 = [result snapshotViewAfterScreenUpdates:0];

    if (v6)
    {
      [v6 setTranslatesAutoresizingMaskIntoConstraints:0];
      [v3 addSubview:v6];
      uint64_t v7 = self;
      sub_100007D1C(&qword_1000843F0);
      uint64_t v8 = swift_allocObject();
      *(_OWORD *)(v8 + 16) = xmmword_100064520;
      id v9 = [v6 leftAnchor];
      id v10 = [v3 leftAnchor];
      id v11 = [v9 constraintEqualToAnchor:v10];

      *(void *)(v8 + 32) = v11;
      id v12 = [v6 rightAnchor];
      id v13 = sub_10003DE58((uint64_t)[v3 rightAnchor]);

      *(void *)(v8 + 40) = v13;
      id v14 = [v6 topAnchor];
      id v15 = sub_10003DE58((uint64_t)[v3 topAnchor]);

      *(void *)(v8 + 48) = v15;
      id v16 = [v6 bottomAnchor];
      id v17 = sub_10003DE58((uint64_t)[v3 bottomAnchor]);

      *(void *)(v8 + 56) = v17;
      sub_10005EAE0();
      sub_100007F60(0, (unint64_t *)&qword_100084D70);
      Class isa = sub_10003DD1C().super.isa;
      swift_bridgeObjectRelease();
      [v7 activateConstraints:isa];

      id v19 = v3;
      id v3 = v6;
      id v20 = sub_100037DC4(v19, v3);
      [self flush];
    }
    else
    {
      id v20 = 0;
    }

    return v20;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1000384CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v35 = a4;
  uint64_t v36 = a1;
  uint64_t v5 = sub_10005E6D0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v33[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_100007D1C((uint64_t *)&unk_100084D60);
  __chkstk_darwin(v9);
  id v11 = &v33[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = sub_100007D1C((uint64_t *)&unk_1000843D0);
  __chkstk_darwin(v12 - 8);
  id v14 = &v33[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v15);
  id v17 = &v33[-v16];
  __chkstk_darwin(v18);
  id v20 = &v33[-v19];
  uint64_t v21 = *(void *)(a2 + OBJC_IVAR___DisplayViewController_session);
  if (v21)
  {
    uint64_t v22 = v21 + OBJC_IVAR____TtC17ContinuityDisplay21SidecarDisplaySession_uuid;
    swift_beginAccess();
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v6 + 16))(v20, v22, v5);
    uint64_t v23 = 0;
  }
  else
  {
    uint64_t v23 = 1;
  }
  sub_10001A32C((uint64_t)v20, v23, 1, v5);
  uint64_t v24 = (uint64_t)&v11[*(int *)(v9 + 48)];
  sub_10003D63C(v36, (uint64_t)v11, (uint64_t *)&unk_1000843D0);
  sub_10003D63C((uint64_t)v20, v24, (uint64_t *)&unk_1000843D0);
  if (sub_10001A2B8((uint64_t)v11, 1, v5) != 1)
  {
    sub_10003D63C((uint64_t)v11, (uint64_t)v17, (uint64_t *)&unk_1000843D0);
    if (sub_10001A2B8(v24, 1, v5) != 1)
    {
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v6 + 32))(v8, v24, v5);
      sub_10003D900();
      int v34 = sub_10005E8D0();
      uint64_t v25 = *(void (**)(unsigned char *, uint64_t))(v6 + 8);
      v25(v8, v5);
      sub_10003D8AC((uint64_t)v20, (uint64_t *)&unk_1000843D0);
      v25(v17, v5);
      sub_10003D8AC((uint64_t)v11, (uint64_t *)&unk_1000843D0);
      if ((v34 & 1) == 0) {
        return;
      }
      goto LABEL_11;
    }
    sub_10003D8AC((uint64_t)v20, (uint64_t *)&unk_1000843D0);
    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v17, v5);
LABEL_9:
    sub_10003D8AC((uint64_t)v11, (uint64_t *)&unk_100084D60);
    return;
  }
  sub_10003D8AC((uint64_t)v20, (uint64_t *)&unk_1000843D0);
  if (sub_10001A2B8(v24, 1, v5) != 1) {
    goto LABEL_9;
  }
  sub_10003D8AC((uint64_t)v11, (uint64_t *)&unk_1000843D0);
LABEL_11:
  sub_10003D63C(v36, (uint64_t)v14, (uint64_t *)&unk_1000843D0);
  if (sub_10001A2B8((uint64_t)v14, 1, v5) == 1)
  {
    Class isa = 0;
  }
  else
  {
    Class isa = sub_10005E680().super.isa;
    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v14, v5);
  }
  uint64_t v27 = sub_100019BFC(isa);

  uint64_t v28 = sub_10005E720();
  os_log_type_t v29 = sub_10005EC40();
  if (os_log_type_enabled(v28, v29))
  {
    uint64_t v30 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v30 = 134217984;
    uint64_t v37 = v27;
    sub_10005EE10();
    _os_log_impl((void *)&_mh_execute_header, v28, v29, "=== Reconfiguration Timeout (%lx ===", v30, 0xCu);
    swift_slowDealloc();
  }

  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    Class v32 = Strong;
    [Strong completeRequest:[Strong requestCompleted]];
  }
}

void sub_1000389B8()
{
  if (v0[OBJC_IVAR___DisplayMainViewController_reconfiguring] == 1)
  {
    NSString v1 = v0;
    uint64_t v2 = swift_allocObject();
    id v3 = &v0[OBJC_IVAR___DisplayMainViewController_snapshot];
    sub_10001A688();
    id v4 = *(void **)v3;
    uint64_t v5 = (void *)*((void *)v3 + 1);
    char v6 = v3[16];
    *(void *)(v2 + 16) = *(void *)v3;
    *(void *)(v2 + 24) = v5;
    *(unsigned char *)(v2 + 32) = v6;
    if (*(void *)&v1[OBJC_IVAR___DisplayMainViewController_reconfigureWatchdog])
    {
      swift_getObjectType();
      sub_10003DA4C(v4, v5);
      swift_unknownObjectRetain();
      sub_10005ED40();
      swift_unknownObjectRelease();
    }
    else
    {
      sub_10003DA4C(v4, v5);
    }
    uint64_t v7 = sub_10003DF28();
    sub_10002EE38(v7);
    sub_100007F60(0, (unint64_t *)&qword_100084110);
    uint64_t v8 = (void *)sub_10005EC90();
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = v2;
    *(void *)(v9 + 24) = v1;
    swift_retain();
    uint64_t v10 = v1;
    OS_dispatch_queue.after(_:closure:)();
    swift_release();

    swift_release();
  }
}

void sub_100038B30(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + 16;
  swift_beginAccess();
  if (*(void *)(a1 + 16)) {
    sub_10003547C(0, v4, *(double *)(a2 + OBJC_IVAR___DisplayMainViewController_configurationAnimationDuration));
  }
  swift_endAccess();
  sub_10002ED40(0, 0, 0);
  *(unsigned char *)(a2 + OBJC_IVAR___DisplayMainViewController_reconfiguring) = 0;
}

id sub_100038BC0(void *a1)
{
  return [a1 removeFromSuperview];
}

void sub_100038BCC(uint64_t a1, char a2)
{
  id v3 = v2;
  switch(a2)
  {
    case 3:
    case 4:
    case 10:
    case 11:
      if (v2[OBJC_IVAR___DisplayMainViewController_reconfiguring]) {
        return;
      }
      goto LABEL_5;
    case 12:
      if (!*(void *)(a1 + 16)) {
        goto LABEL_22;
      }
      swift_bridgeObjectRetain();
      unint64_t v5 = sub_10003C46C(12);
      if (v6 & 1) != 0 && (sub_10003DE78(v5, v6, v7), (sub_10003DCA8()))
      {
        uint64_t v8 = v24;
        swift_bridgeObjectRelease();
        if (v24)
        {
          if (*(void *)&v2[OBJC_IVAR___DisplayMainViewController_qosViewController]) {
            return;
          }
          id v9 = objc_allocWithZone((Class)type metadata accessor for QOSControllerViewController());
          id v10 = sub_10000FBE4(1);
          id v11 = *(void **)&v3[OBJC_IVAR___DisplayMainViewController_sidebarController];
          if (!v11) {
            goto LABEL_16;
          }
          uint64_t v8 = v11;
          id v12 = [v10 view];
          if (v12)
          {
            uint64_t v13 = v12;
            [*(id *)(v8 + OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar14ViewController_topStack) addArrangedSubview:v12];

LABEL_16:
            id v14 = v10;
            uint64_t v15 = sub_10003DFE0();
            goto LABEL_25;
          }
LABEL_29:
          __break(1u);
          JUMPOUT(0x100038ED0);
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
LABEL_22:
      uint64_t v21 = *(void **)&v2[OBJC_IVAR___DisplayMainViewController_qosViewController];
      if (!v21) {
        return;
      }
      uint64_t v8 = v21;
      id v22 = [(id)v8 view];
      if (!v22)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v23 = v22;
      [v22 removeFromSuperview];

      uint64_t v15 = 0;
LABEL_25:
      sub_10002EE20(v15);
LABEL_26:

      return;
    case 13:
      if (qword_100083B38 != -1) {
        swift_once();
      }
      sub_10003DCD8();
      sub_100009D38();
      swift_endAccess();
      id v16 = [v2 request];
      if (!v16) {
        return;
      }
      id v17 = v16;
      sub_100007D1C(&qword_1000843F0);
      uint64_t v8 = sub_10003DD64();
      *(_OWORD *)(v8 + 16) = xmmword_100064320;
      id v18 = objc_allocWithZone((Class)SidecarItem);
      *(void *)(v8 + 32) = sub_10003C3D4();
      uint64_t v19 = sub_10005EAE0();
      sub_10003E064(v19, &qword_1000843F8);
      sub_10003DD1C();
      uint64_t v20 = sub_10003DF10();
      sub_10003DCF0(v20, "sendItems:complete:");

      goto LABEL_26;
    case 16:
    case 17:
    case 18:
      sub_10000A4E4(17, a1);
      qword_100084430 = v4;
LABEL_5:
      sub_100031E10();
      return;
    default:
      return;
  }
}

void sub_100038F10()
{
  if (qword_100083B70 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_10005E750();
  osos_log_t log = sub_10003DD7C(v0, (uint64_t)qword_100084A10);
  os_log_type_t v1 = sub_10005EC50();
  if (os_log_type_enabled(oslog, v1))
  {
    uint64_t v2 = (uint8_t *)sub_10003DDF0();
    *(_WORD *)uint64_t v2 = 0;
    _os_log_impl((void *)&_mh_execute_header, oslog, v1, "=== Session Configuration Complete ===", v2, 2u);
    sub_10000FB20();
  }
}

void sub_100038FE0()
{
  os_log_type_t v1 = v0;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR___DisplayMainViewController_presentedAlert];
  id v3 = *(void **)&v0[OBJC_IVAR___DisplayMainViewController_displayViewController];
  id v4 = v2;
  id v5 = v3;
  uint64_t v6 = sub_10005E890();
  sub_100033104(v6, v6);

  swift_bridgeObjectRelease();
  if (qword_100083B70 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_10005E750();
  uint64_t v8 = (void *)sub_10003DD7C(v7, (uint64_t)qword_100084A10);
  os_log_type_t v9 = sub_10005EC50();
  if (sub_10003DFC4(v9))
  {
    *(_WORD *)sub_10003DDF0() = 0;
    sub_10003DF34();
    _os_log_impl(v10, v11, v12, v13, v14, 2u);
    sub_10000FB20();
  }

  sub_1000324E0(0, 0.0);
  uint64_t v15 = &v1[OBJC_IVAR___DisplayMainViewController_snapshot];
  sub_10001A688();
  id v16 = *(void **)v15;
  if (*(void *)v15)
  {
    id v17 = (void *)*((void *)v15 + 1);
    char v18 = v15[16];
    v25[0] = v16;
    v25[1] = v17;
    char v26 = v18 & 1;
    double v19 = *(double *)&v1[OBJC_IVAR___DisplayMainViewController_configurationAnimationDuration];
    id v20 = v4;
    uint64_t v21 = v1;
    id v22 = (void *)sub_10003E004();
    sub_10003DA4C(v22, v23);
    sub_100033FDC(0, (uint64_t)v25, v2, v21, v19);
    sub_10002ED40(0, 0, 0);
  }
  else if (v2)
  {
    id v24 = v4;
    sub_100036CE0(v24);
  }
  [v1 serviceReady];
}

id sub_1000391E8(id a1, void *a2)
{
  if (a2)
  {
    id v3 = a2;
    sub_100036CE0(v3);
  }

  return [a1 removeFromSuperview];
}

void sub_100039244(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10005E750();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  os_log_type_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    swift_errorRetain();
    if (qword_100083B70 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_10002A1FC(v6, (uint64_t)qword_100084A10);
    uint64_t v11 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v10, v6);
    __chkstk_darwin(v11);
    *(&v17 - 2) = a1;
    *(&v17 - 1) = a2;
    __chkstk_darwin(v12);
    *(&v17 - 2) = a3;
    sub_10002E180(sub_10003DA00, v13, (void (*)(void))sub_10000FAE8);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    swift_errorRelease();
  }
  else
  {
    if (qword_100083B70 != -1) {
      swift_once();
    }
    sub_10002A1FC(v6, (uint64_t)qword_100084A10);
    swift_bridgeObjectRetain_n();
    id v14 = sub_10005E720();
    os_log_type_t v15 = sub_10005EC40();
    if (os_log_type_enabled(v14, v15))
    {
      id v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v18 = swift_slowAlloc();
      *(_DWORD *)id v16 = 136446210;
      swift_bridgeObjectRetain();
      uint64_t v17 = sub_10000F098(a1, a2, &v18);
      sub_10005EE10();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "=== Session Interrupted (%{public}s) ===", v16, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
}

uint64_t sub_100039570(uint64_t a1, void *a2)
{
  uint64_t v5 = sub_10005F110();
  v6._object = (void *)0x8000000100062EF0;
  v6._uint64_t countAndFlagsBits = 0xD000000000000019;
  sub_10005E9C0(v6);
  v7._uint64_t countAndFlagsBits = a1;
  v7._object = a2;
  sub_10005E9C0(v7);
  v8._uint64_t countAndFlagsBits = 0x3D3D3D2029;
  v8._object = (void *)0xE500000000000000;
  sub_10005E9C0(v8);
  return v5;
}

id sub_100039634()
{
  sub_10003E048();
  return [super backgrounded];
}

void sub_1000396B8(char a1)
{
  sub_10003E048();
  [super setBackgrounded:a1 & 1];
  sub_1000396FC();
}

void sub_1000396FC()
{
  if ([v0 backgrounded])
  {
    sub_1000365C0();
    if (qword_100083B70 != -1) {
      swift_once();
    }
    uint64_t v1 = sub_10005E750();
    sub_10002A1FC(v1, (uint64_t)qword_100084A10);
    osos_log_t log = sub_10005E720();
    os_log_type_t v2 = sub_10005EC50();
    if (os_log_type_enabled(oslog, v2))
    {
      id v3 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v3 = 0;
      id v4 = "=== Display Service Foreground ===";
LABEL_10:
      _os_log_impl((void *)&_mh_execute_header, oslog, v2, v4, v3, 2u);
      swift_slowDealloc();
    }
  }
  else
  {
    if (qword_100083B70 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_10005E750();
    sub_10002A1FC(v5, (uint64_t)qword_100084A10);
    osos_log_t log = sub_10005E720();
    os_log_type_t v2 = sub_10005EC50();
    if (os_log_type_enabled(oslog, v2))
    {
      id v3 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v3 = 0;
      id v4 = "=== Display Service Background ===";
      goto LABEL_10;
    }
  }
}

uint64_t sub_10003988C(void *a1)
{
  switch(*((unsigned char *)a1 + OBJC_IVAR____TtC17ContinuityDisplay17RoundedCornerView_corner))
  {
    case 1:
      sub_100007D1C(&qword_1000843F0);
      uint64_t v3 = swift_allocObject();
      *(_OWORD *)(v3 + 16) = xmmword_100064BB0;
      id v19 = [a1 rightAnchor];
      uint64_t v20 = OBJC_IVAR___DisplayMainViewController_displayContainer;
      id v21 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                                  + OBJC_IVAR___DisplayMainViewController_displayContainer), "rightAnchor"));
      id v22 = [v19 constraintEqualToAnchor:v21];

      *(void *)(v3 + 32) = v22;
      id v8 = [a1 topAnchor];
      id v9 = [*(id *)(v1 + v20) topAnchor];
      id v10 = [v8 constraintEqualToAnchor:v9];
      break;
    case 2:
      sub_100007D1C(&qword_1000843F0);
      uint64_t v3 = swift_allocObject();
      *(_OWORD *)(v3 + 16) = xmmword_100064BB0;
      id v11 = [a1 leftAnchor];
      uint64_t v12 = OBJC_IVAR___DisplayMainViewController_displayContainer;
      id v13 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                                  + OBJC_IVAR___DisplayMainViewController_displayContainer), "leftAnchor"));
      id v14 = [v11 constraintEqualToAnchor:v13];

      *(void *)(v3 + 32) = v14;
      id v8 = [a1 bottomAnchor];
      id v9 = [*(id *)(v1 + v12) bottomAnchor];
      id v10 = [v8 constraintEqualToAnchor:v9];
      break;
    case 3:
      sub_100007D1C(&qword_1000843F0);
      uint64_t v3 = swift_allocObject();
      *(_OWORD *)(v3 + 16) = xmmword_100064BB0;
      id v15 = [a1 rightAnchor];
      uint64_t v16 = OBJC_IVAR___DisplayMainViewController_displayContainer;
      id v17 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                                  + OBJC_IVAR___DisplayMainViewController_displayContainer), "rightAnchor"));
      id v18 = [v15 constraintEqualToAnchor:v17];

      *(void *)(v3 + 32) = v18;
      id v8 = [a1 bottomAnchor];
      id v9 = [*(id *)(v1 + v16) bottomAnchor];
      id v10 = [v8 constraintEqualToAnchor:v9];
      break;
    default:
      sub_100007D1C(&qword_1000843F0);
      uint64_t v3 = swift_allocObject();
      *(_OWORD *)(v3 + 16) = xmmword_100064BB0;
      id v4 = [a1 leftAnchor];
      uint64_t v5 = OBJC_IVAR___DisplayMainViewController_displayContainer;
      id v6 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                                 + OBJC_IVAR___DisplayMainViewController_displayContainer), "leftAnchor"));
      id v7 = [v4 constraintEqualToAnchor:v6];

      *(void *)(v3 + 32) = v7;
      id v8 = [a1 topAnchor];
      id v9 = [*(id *)(v1 + v5) topAnchor];
      id v10 = [v8 constraintEqualToAnchor:v9];
      break;
  }
  id v23 = v10;

  *(void *)(v3 + 40) = v23;
  sub_10005EAE0();
  sub_100041228();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100039CC4(uint64_t a1, char a2)
{
  uint64_t result = sub_100039D94(a2);
  if ((v3 & 1) == 0)
  {
    uint64_t v4 = result;
    uint64_t v5 = sub_10002EE44();
    uint64_t v7 = v6;
    uint64_t v8 = type metadata accessor for DisplayMainViewController.UsageSummary(0);
    uint64_t result = sub_10001A2B8(v7, 1, v8);
    if (result)
    {
      return ((uint64_t (*)(unsigned char *, void))v5)(v13, 0);
    }
    else
    {
      uint64_t v9 = v7 + *(int *)(v8 + 28);
      uint64_t v10 = *(void *)(v9 + 8 * v4);
      BOOL v11 = __CFADD__(v10, 1);
      uint64_t v12 = v10 + 1;
      if (v11)
      {
        __break(1u);
      }
      else
      {
        *(void *)(v9 + 8 * v4) = v12;
        return ((uint64_t (*)(unsigned char *, void))v5)(v13, 0);
      }
    }
  }
  return result;
}

uint64_t sub_100039D94(char a1)
{
  uint64_t v2 = v1;
  sub_10001D740(v1, (uint64_t)v16);
  uint64_t v4 = v16[0];
  uint64_t v5 = v16[1];
  uint64_t v6 = v16[2];
  uint64_t v7 = v16[3];
  sub_10001D740(v2, (uint64_t)&v17);
  if (v21)
  {
    if (v21 == 1)
    {
      BOOL v8 = v4 == 8 && v5 == 6;
      if (v8 && (!v6 && v7 == 0xE000000000000000 || (sub_10005F140() & 1) != 0)) {
        return 13;
      }
      else {
        return 0;
      }
    }
    else if (v19 | v20 | v17 | v18)
    {
      uint64_t v14 = v19 | v20 | v18;
      if (v17 != 1 || v14)
      {
        if (v14) {
          BOOL v15 = 0;
        }
        else {
          BOOL v15 = v17 == 2;
        }
        if (v15) {
          return 2;
        }
        else {
          return 0;
        }
      }
      else
      {
        return 14;
      }
    }
    else
    {
      return 16;
    }
  }
  else if (v17)
  {
    if (a1) {
      return 11;
    }
    else {
      return 10;
    }
  }
  else
  {
    uint64_t v10 = 4;
    if (a1) {
      uint64_t v10 = 5;
    }
    uint64_t v11 = v10 & (v17 << 60 >> 63);
    uint64_t v12 = 6;
    if (a1) {
      uint64_t v12 = 7;
    }
    if ((v17 & 4) != 0) {
      uint64_t v11 = v12;
    }
    uint64_t v13 = 8;
    if (a1) {
      uint64_t v13 = 9;
    }
    if ((v17 & 2) != 0) {
      return v13;
    }
    else {
      return v11;
    }
  }
}

void sub_100039F10(uint64_t a1)
{
  sub_100039CC4(a1, 0);
  sub_10001D740(a1, (uint64_t)v11);
  int8x16_t v3 = vorrq_s8(v11[0], v11[1]);
  int8x8_t v4 = vorr_s8(*(int8x8_t *)v3.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v3, v3, 8uLL));
  if (v12 == 2 && *(void *)&v4 == 0)
  {
    sub_10003A050();
  }
  else
  {
    id v6 = [v1 request];
    if (v6)
    {
      uint64_t v7 = v6;
      sub_100007D1C(&qword_1000843F0);
      uint64_t v8 = sub_10003DD64();
      *(_OWORD *)(v8 + 16) = xmmword_100064320;
      sub_100021CC0();
      sub_100007D1C((uint64_t *)&unk_100084D00);
      id v9 = objc_allocWithZone((Class)SidecarItem);
      *(void *)(v8 + 32) = sub_10003C3D4();
      sub_10005EAE0();
      sub_100007F60(0, &qword_1000843F8);
      sub_10003DD1C();
      uint64_t v10 = sub_10003DF10();
      sub_10003DCF0(v10, "sendItems:complete:");
    }
  }
}

void sub_10003A050()
{
  sub_1000365C0();
  type metadata accessor for DisplayMainViewController.DarkAlert();
  uint64_t v1 = self;
  uint64_t v2 = (objc_class *)[v1 mainBundle];
  v36._uint64_t countAndFlagsBits = 0xE500000000000000;
  v46._object = (void *)0x8000000100062F30;
  v46._uint64_t countAndFlagsBits = 0xD000000000000024;
  v48.value._uint64_t countAndFlagsBits = 0;
  v48.value._object = 0;
  v3.super.Class isa = v2;
  v50._uint64_t countAndFlagsBits = 0;
  v50._object = (void *)0xE000000000000000;
  uint64_t v4 = sub_10005E510(v46, v48, v3, v50, v36);
  uint64_t v6 = v5;

  id v7 = sub_10003A8B4(v4, v6, 0, 0, 0);
  sub_100007F60(0, (unint64_t *)&unk_100084DA0);
  uint64_t v8 = (objc_class *)[v1 mainBundle];
  v36._uint64_t countAndFlagsBits = 0xEE006E6F69746361;
  v47._uint64_t countAndFlagsBits = 0x656E6E6F63736944;
  v47._object = (void *)0xEA00000000007463;
  v49.value._uint64_t countAndFlagsBits = 0;
  v49.value._object = 0;
  v9.super.Class isa = v8;
  v51._uint64_t countAndFlagsBits = 0;
  v51._object = (void *)0xE000000000000000;
  uint64_t v10 = sub_10005E510(v47, v49, v9, v51, v36);
  uint64_t v12 = v11;

  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v0;
  uint64_t v14 = v0;
  id v15 = sub_10003AAD4(v10, v12, 2, (uint64_t)sub_10003DB88, v13);
  [v7 addAction:v15];

  id v16 = [v7 popoverPresentationController];
  if (v16)
  {
    uint64_t v17 = v16;
    uint64_t v18 = OBJC_IVAR___DisplayMainViewController_sidebarController;
    uint64_t v19 = *(void *)&v14[OBJC_IVAR___DisplayMainViewController_sidebarController];
    if (v19
      && (uint64_t v20 = *(void *)(v19 + OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar14ViewController_buttonsByIdentifer),
          memset(v45, 0, 32),
          v45[32] = 2,
          swift_bridgeObjectRetain(),
          char v21 = sub_100010730((uint64_t)v45, v20),
          swift_bridgeObjectRelease(),
          v21))
    {
      [v17 setSourceView:v21];
      id v22 = *(void **)&v14[v18];
      double v23 = 0.0;
      if (v22)
      {
        sub_10001D740((uint64_t)v21 + OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar6Button_identifier, (uint64_t)v44);
        id v24 = v22;
        sub_10001D7B4((uint64_t)v44, (void (*)(void, void, void, void, void))sub_10001D79C);
        sub_10001C784((uint64_t)v44, (uint64_t)v42);
        double v25 = *(double *)v42;
        double v26 = *(double *)&v42[1];
        double v27 = *(double *)&v42[2];
        double v28 = *(double *)&v42[3];
        sub_10001D7B4((uint64_t)v44, (void (*)(void, void, void, void, void))sub_10001D7F4);

        sub_10003DB90((uint64_t)v42, (uint64_t)v43, &qword_100083F18);
        double v29 = 0.0;
        double v30 = 0.0;
        double v31 = 0.0;
        if ((v43[32] & 1) == 0)
        {
          double v23 = v27;
          double v29 = v28;
          double v30 = v25;
          double v31 = v26;
        }
      }
      else
      {
        double v29 = 0.0;
        double v30 = 0.0;
        double v31 = 0.0;
      }
      [v17 setSourceRect:v30, v31, v23, v29];
      [v17 setPermittedArrowDirections:12];
      [v17 _setPopoverBackgroundStyle:7];
    }
    else
    {
    }
  }
  id v32 = [v7 view];
  if (v32)
  {
    uint64_t v33 = v32;
    id v34 = [self clearColor];
    [v33 setBackgroundColor:v34];

    [v7 setModalPresentationStyle:7];
    id v40 = VideoStream.qosMonitorServerDidDie(_:);
    uint64_t v41 = 0;
    v36._object = _NSConcreteStackBlock;
    uint64_t v37 = 1107296256;
    unint64_t v38 = sub_10000C5B0;
    NSString v39 = &unk_100077CC8;
    uint64_t v35 = _Block_copy(&v36._object);
    [v14 presentViewController:v7 animated:1 completion:v35];
    _Block_release(v35);
  }
  else
  {
    __break(1u);
  }
}

void sub_10003A4E4(uint64_t a1, char a2)
{
  if (a2) {
    sub_100039CC4(a1, 0);
  }
  sub_10001D740(a1, (uint64_t)v17);
  if (v17[32] == 2 && ((sub_10003E0BC(), v6 == 1) ? (BOOL v7 = v5 == 0) : (BOOL v7 = 0), v7))
  {
    if (a2) {
      sub_100036468();
    }
    else {
      sub_1000365C0();
    }
  }
  else
  {
    id v8 = [v2 request];
    if (v8)
    {
      NSBundle v9 = v8;
      sub_100007D1C(&qword_1000843F0);
      uint64_t v10 = sub_10003DD64();
      *(_OWORD *)(v10 + 16) = xmmword_100064320;
      sub_100007D1C(&qword_1000843A0);
      uint64_t inited = (__n128 *)swift_initStackObject();
      sub_10003DEF4(inited, (__n128)xmmword_1000643A0);
      uint64_t v12 = sub_100021CC0();
      uint64_t v13 = sub_100007D1C((uint64_t *)&unk_100084D00);
      inited[3].n128_u64[0] = v12;
      inited[4].n128_u64[1] = v13;
      inited[5].n128_u64[0] = 1853321060;
      inited[5].n128_u64[1] = 0xE400000000000000;
      Class isa = sub_10005EB70().super.super.isa;
      inited[7].n128_u64[1] = swift_getObjectType();
      inited[6].n128_u64[0] = (unint64_t)isa;
      sub_10005E890();
      sub_100007D1C(&qword_1000843E0);
      id v15 = objc_allocWithZone((Class)SidecarItem);
      *(void *)(v10 + 32) = sub_10003C3D4();
      sub_10005EAE0();
      sub_100007F60(0, &qword_1000843F8);
      sub_10003DD1C();
      uint64_t v16 = sub_10003DF10();
      sub_10003DCF0(v16, "sendItems:complete:");
    }
  }
}

void sub_10003A6C8(uint64_t a1)
{
  sub_100039CC4(a1, 0);
  sub_10001D740(a1, (uint64_t)v15);
  if (v15[32] == 2)
  {
    sub_10003E0BC();
    if (v4 == 3 && v3 == 0)
    {
      v1[OBJC_IVAR___DisplayMainViewController_menuOverrideEnabled] = (v1[OBJC_IVAR___DisplayMainViewController_menuOverrideEnabled] & 1) == 0;
      sub_10002EEC0(3, &OBJC_IVAR___DisplayMainViewController_menuOverrideEnabled);
    }
  }
  id v6 = [v1 request];
  if (v6)
  {
    BOOL v7 = v6;
    sub_100007D1C(&qword_1000843F0);
    uint64_t v8 = sub_10003DD64();
    *(_OWORD *)(v8 + 16) = xmmword_100064320;
    sub_100007D1C(&qword_1000843A0);
    uint64_t inited = (__n128 *)swift_initStackObject();
    sub_10003DEF4(inited, (__n128)xmmword_1000643A0);
    uint64_t v10 = sub_100021CC0();
    uint64_t v11 = sub_100007D1C((uint64_t *)&unk_100084D00);
    inited[3].n128_u64[0] = v10;
    inited[4].n128_u64[1] = v11;
    inited[5].n128_u64[0] = 28271;
    inited[5].n128_u64[1] = 0xE200000000000000;
    Class isa = sub_10005EB70().super.super.isa;
    inited[7].n128_u64[1] = swift_getObjectType();
    inited[6].n128_u64[0] = (unint64_t)isa;
    sub_10005E890();
    sub_100007D1C(&qword_1000843E0);
    id v13 = objc_allocWithZone((Class)SidecarItem);
    *(void *)(v8 + 32) = sub_10003C3D4();
    sub_10005EAE0();
    sub_100007F60(0, &qword_1000843F8);
    sub_10003DD1C();
    uint64_t v14 = sub_10003DF10();
    sub_10003DCF0(v14, "sendItems:complete:");
  }
}

id sub_10003A8B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (!a2)
  {
    NSString v7 = 0;
    if (a4) {
      goto LABEL_3;
    }
LABEL_5:
    NSString v8 = 0;
    goto LABEL_6;
  }
  NSString v7 = sub_10005E8F0();
  swift_bridgeObjectRelease();
  if (!a4) {
    goto LABEL_5;
  }
LABEL_3:
  NSString v8 = sub_10005E8F0();
  swift_bridgeObjectRelease();
LABEL_6:
  id v9 = [(id)swift_getObjCClassFromMetadata() alertControllerWithTitle:v7 message:v8 preferredStyle:a5];

  return v9;
}

void sub_10003A96C(uint64_t a1, void *a2)
{
  if (qword_100083B70 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_10005E750();
  sub_10002A1FC(v3, (uint64_t)qword_100084A10);
  uint64_t v4 = sub_10005E720();
  os_log_type_t v5 = sub_10005EC50();
  if (os_log_type_enabled(v4, v5))
  {
    id v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "=== User Disconnect Button ===", v6, 2u);
    swift_slowDealloc();
  }

  id v7 = [a2 request];
  if (v7)
  {
    id v9 = v7;
    [v7 cancel];
  }
  else
  {
    id v8 = [a2 requestCompleted];
    [a2 completeRequest:v8];
  }
}

id sub_10003AAD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (!a2)
  {
    NSString v8 = 0;
    if (a4) {
      goto LABEL_3;
    }
LABEL_5:
    id v9 = 0;
    goto LABEL_6;
  }
  NSString v8 = sub_10005E8F0();
  swift_bridgeObjectRelease();
  if (!a4) {
    goto LABEL_5;
  }
LABEL_3:
  v12[4] = a4;
  v12[5] = a5;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 1107296256;
  _OWORD v12[2] = sub_10003ABDC;
  void v12[3] = &unk_100077CF0;
  id v9 = _Block_copy(v12);
  swift_release();
LABEL_6:
  id v10 = [(id)swift_getObjCClassFromMetadata() actionWithTitle:v8 style:a3 handler:v9];
  _Block_release(v9);

  return v10;
}

void sub_10003ABDC(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

id sub_10003AC54(uint64_t a1, uint64_t a2, void *a3)
{
  if (a2)
  {
    NSString v5 = sub_10005E8F0();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v5 = 0;
  }
  v8.receiver = v3;
  v8.super_class = (Class)type metadata accessor for DisplayMainViewController.DarkAlert();
  id v6 = [super initWithNibName:v5 bundle:a3];

  return v6;
}

id sub_10003ACEC(void *a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for DisplayMainViewController.DarkAlert();
  [super initWithCoder:a1];

  return v3;
}

id sub_10003AD64()
{
  return sub_10003B7C0(type metadata accessor for DisplayMainViewController.DarkAlert);
}

uint64_t sub_10003ADCC(__n128 a1)
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    sub_10003DEC4((__n128)xmmword_100064500, result, v2, v3, v4, v5, v6, v7, v8, *(_OWORD *)&a1, v11, v9, v12);
    sub_10003A4E4((uint64_t)&v11, 0);
    return swift_unknownObjectRelease();
  }
  return result;
}

id sub_10003AEA8()
{
  sub_10003DF78(OBJC_IVAR____TtCC17ContinuityDisplay25DisplayMainViewController18DisplayUndoManager_delegate);
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DisplayMainViewController.DisplayUndoManager();
  return [super init];
}

id sub_10003AF0C()
{
  return sub_10003B7C0(type metadata accessor for DisplayMainViewController.DisplayUndoManager);
}

double sub_10003AFA0()
{
  if (!swift_unknownObjectWeakLoadStrong()) {
    return 0.0;
  }
  double v0 = sub_10003734C();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t sub_10003B094(__n128 a1)
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    sub_10003DEC4((__n128)xmmword_100064500, result, v2, v3, v4, v5, v6, v7, v8, *(_OWORD *)&a1, v11, v9, v12);
    sub_10003A4E4((uint64_t)&v11, 0);
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_10003B130()
{
  id v1 = [objc_allocWithZone((Class)UIView) init];
  [v0 setView:v1];
}

void sub_10003B1E0()
{
  id v1 = [self sharedInstance];
  if (!v1
    || (v0 = v1, unsigned __int8 v2 = [v1 isInHardwareKeyboardMode], v0, (v2 & 1) == 0))
  {
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      id v4 = [Strong request];
      sub_10003DFE0();
      swift_unknownObjectRelease();
      if (v0)
      {
        sub_100007D1C(&qword_1000843F0);
        uint64_t v5 = sub_10003DD64();
        *(_OWORD *)(v5 + 16) = xmmword_100064320;
        id v6 = objc_allocWithZone((Class)SidecarItem);
        swift_bridgeObjectRetain();
        *(void *)(v5 + 32) = sub_10003C3D4();
        uint64_t v7 = sub_10005EAE0();
        sub_10003E064(v7, &qword_1000843F8);
        Class isa = sub_10005EAA0().super.isa;
        swift_bridgeObjectRelease();
        [v0 sendItems:isa complete:0];
      }
    }
  }
}

void sub_10003B3D8()
{
  id v0 = [self sharedInstance];
  if (!v0
    || (v1 = v0, unsigned __int8 v2 = [v0 isInHardwareKeyboardMode], v1, (v2 & 1) == 0))
  {
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      id v4 = [Strong request];
      swift_unknownObjectRelease();
      if (v4)
      {
        sub_100007D1C(&qword_1000843F0);
        uint64_t v5 = sub_10003DD64();
        *(_OWORD *)(v5 + 16) = xmmword_100064320;
        id v6 = objc_allocWithZone((Class)SidecarItem);
        *(void *)(v5 + 32) = sub_10003C3D4();
        uint64_t v7 = sub_10005EAE0();
        sub_10003E064(v7, &qword_1000843F8);
        Class isa = sub_10003DD1C().super.isa;
        swift_bridgeObjectRelease();
        [v4 sendItems:isa complete:0];
      }
    }
  }
}

id sub_10003B604(uint64_t a1, uint64_t a2, void *a3)
{
  sub_10003DF78(OBJC_IVAR____TtCC17ContinuityDisplay25DisplayMainViewController17KeyboardResponder_delegate);
  if (a2)
  {
    sub_10003E18C();
    NSString v6 = sub_10005E8F0();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v6 = 0;
  }
  v9.receiver = v3;
  v9.super_class = (Class)type metadata accessor for DisplayMainViewController.KeyboardResponder();
  id v7 = [super initWithNibName:v6 bundle:a3];

  return v7;
}

uint64_t sub_10003B6B0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t (*a5)(uint64_t, uint64_t, void *))
{
  if (a3)
  {
    uint64_t v7 = sub_10005E920();
    uint64_t v9 = v8;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v9 = 0;
  }
  id v10 = a4;
  return a5(v7, v9, a4);
}

id sub_10003B724(void *a1)
{
  sub_10003DF78(OBJC_IVAR____TtCC17ContinuityDisplay25DisplayMainViewController17KeyboardResponder_delegate);
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for DisplayMainViewController.KeyboardResponder();
  [super initWithCoder:a1];

  return v3;
}

id sub_10003B7A8()
{
  return sub_10003B7C0(type metadata accessor for DisplayMainViewController.KeyboardResponder);
}

id sub_10003B7C0(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return [super dealloc];
}

void sub_10003B804(uint64_t *a1, double a2, uint64_t a3, uint64_t a4)
{
  v7.super.Class isa = sub_10005E680().super.isa;
  uint64_t v8 = type metadata accessor for DisplayMainViewController.UsageSummary(0);
  if (a1)
  {
    SidecarAWDLogSidebarUsageSummary(v7.super.isa, *(void *)(a4 + *(int *)(v8 + 20)), a1, a2);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10003B87C(uint64_t (*a1)(id), double a2)
{
  id v3 = [self setAnimationDuration:a2];
  return a1(v3);
}

uint64_t sub_10003B8D0(uint64_t a1, uint64_t a2)
{
  id v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);

  return swift_release();
}

uint64_t UIScreenReferenceDisplayModeStatus.description.getter(uint64_t a1)
{
  uint64_t result = 0x6F70707553746F6ELL;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      uint64_t result = 0x6C62616E45746F6ELL;
      break;
    case 2:
      uint64_t v3 = 0x6574696D696CLL;
      goto LABEL_6;
    case 3:
      uint64_t v3 = 0x656C62616E65;
LABEL_6:
      uint64_t result = v3 & 0xFFFFFFFFFFFFLL | 0x64000000000000;
      break;
    default:
      v4._uint64_t countAndFlagsBits = sub_10005F0F0();
      sub_10005E9C0(v4);
      swift_bridgeObjectRelease();
      v5._uint64_t countAndFlagsBits = 41;
      v5._object = (void *)0xE100000000000000;
      sub_10005E9C0(v5);
      uint64_t result = 0x286E776F6E6B6E75;
      break;
  }
  return result;
}

uint64_t sub_10003BA48()
{
  return UIScreenReferenceDisplayModeStatus.description.getter(*v0);
}

uint64_t sub_10003BA50()
{
  return type metadata accessor for DisplayMainViewController(0);
}

uint64_t type metadata accessor for DisplayMainViewController(uint64_t a1)
{
  return sub_100018AB8(a1, (uint64_t *)&unk_100084B08);
}

void sub_10003BA78()
{
  sub_10003BB7C();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_10003BB7C()
{
  if (!qword_100084B18)
  {
    type metadata accessor for DisplayMainViewController.UsageSummary(255);
    unint64_t v0 = sub_10005EDF0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100084B18);
    }
  }
}

uint64_t type metadata accessor for DisplayMainViewController.UsageSummary(uint64_t a1)
{
  return sub_100018AB8(a1, qword_100084CC0);
}

uint64_t type metadata accessor for DisplayMainViewController.DarkAlert()
{
  return self;
}

uint64_t type metadata accessor for DisplayMainViewController.DisplayUndoManager()
{
  return self;
}

uint64_t type metadata accessor for DisplayMainViewController.KeyboardResponder()
{
  return self;
}

uint64_t initializeBufferWithCopyOfBuffer for DisplayMainViewController.Snapshot(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  Swift::String v4 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  id v5 = v3;
  id v6 = v4;
  return a1;
}

void destroy for DisplayMainViewController.Snapshot(uint64_t a1)
{
  unsigned __int8 v2 = *(void **)(a1 + 8);
}

uint64_t assignWithCopy for DisplayMainViewController.Snapshot(uint64_t a1, uint64_t a2)
{
  Swift::String v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  NSUUID v7 = *(void **)(a2 + 8);
  uint64_t v8 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v7;
  id v9 = v7;

  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

__n128 initializeWithTake for DisplayMainViewController.Snapshot(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for DisplayMainViewController.Snapshot(uint64_t a1, uint64_t a2)
{
  Swift::String v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for DisplayMainViewController.Snapshot(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 17))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DisplayMainViewController.Snapshot(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 17) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DisplayMainViewController.Snapshot()
{
  return &type metadata for DisplayMainViewController.Snapshot;
}

uint64_t *sub_10003BE24(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_10005E6D0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    *(uint64_t *)((char *)a1 + v8) = *(uint64_t *)((char *)a2 + v8);
    memcpy((char *)a1 + a3[7], (char *)a2 + a3[7], 0x88uLL);
  }
  return a1;
}

uint64_t sub_10003BF0C(uint64_t a1)
{
  uint64_t v2 = sub_10005E6D0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_10003BF70(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_10005E6D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  memcpy((void *)(a1 + a3[7]), (const void *)(a2 + a3[7]), 0x88uLL);
  return a1;
}

uint64_t sub_10003C008(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_10005E6D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  uint64_t v7 = a3[7];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  _OWORD v8[2] = v9[2];
  v8[3] = v9[3];
  void v8[4] = v9[4];
  void v8[5] = v9[5];
  v8[6] = v9[6];
  v8[7] = v9[7];
  _OWORD v8[8] = v9[8];
  v8[9] = v9[9];
  v8[10] = v9[10];
  v8[11] = v9[11];
  v8[12] = v9[12];
  v8[13] = v9[13];
  v8[14] = v9[14];
  v8[15] = v9[15];
  v8[16] = v9[16];
  return a1;
}

uint64_t sub_10003C124(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_10005E6D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  memcpy((void *)(a1 + a3[7]), (const void *)(a2 + a3[7]), 0x88uLL);
  return a1;
}

uint64_t sub_10003C1BC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_10005E6D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v8 = a3[7];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  long long v11 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v11;
  long long v12 = *(_OWORD *)(v10 + 48);
  *(_OWORD *)(v9 + 32) = *(_OWORD *)(v10 + 32);
  *(_OWORD *)(v9 + 48) = v12;
  long long v13 = *(_OWORD *)(v10 + 80);
  *(_OWORD *)(v9 + 64) = *(_OWORD *)(v10 + 64);
  *(_OWORD *)(v9 + 80) = v13;
  long long v14 = *(_OWORD *)(v10 + 112);
  *(_OWORD *)(v9 + 96) = *(_OWORD *)(v10 + 96);
  *(_OWORD *)(v9 + 112) = v14;
  *(void *)(v9 + 128) = *(void *)(v10 + 128);
  return a1;
}

uint64_t sub_10003C274(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10003C288);
}

uint64_t sub_10003C288(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10005E6D0();

  return sub_10001A2B8(a1, a2, v4);
}

uint64_t sub_10003C2D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10003C2E4);
}

uint64_t sub_10003C2E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10005E6D0();

  return sub_10001A32C(a1, a2, a2, v4);
}

uint64_t sub_10003C330()
{
  uint64_t result = sub_10005E6D0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

id sub_10003C3D4()
{
  sub_10003E0F0();
  sub_10000BD3C(v2, v2[3]);
  uint64_t v3 = sub_10005F130();
  NSString v4 = sub_10005E8F0();
  swift_bridgeObjectRelease();
  id v5 = [v0 initWithObject:v3 type:v4];
  swift_unknownObjectRelease();

  sub_10000B724(v1);
  return v5;
}

unint64_t sub_10003C46C(char a1)
{
  sub_10003DFEC();
  sub_10000963C(a1);
  sub_10005E980();
  swift_bridgeObjectRelease();
  Swift::Int v2 = sub_10005F200();

  return sub_10003C660(a1, v2);
}

unint64_t sub_10003C4EC()
{
  sub_10003E0F0();
  sub_10003DFEC();
  sub_10005E980();
  sub_10005F200();
  uint64_t v0 = sub_10003E198();

  return sub_10003CC48(v0, v1, v2);
}

unint64_t sub_10003C554(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = sub_10005EEF0(*(void *)(v2 + 40));

  return sub_10003CD2C(a1, v4);
}

unint64_t sub_10003C598(uint64_t a1)
{
  sub_10003DFEC();
  sub_100021F58();
  Swift::Int v2 = sub_10005F200();

  return sub_10003CDF4(a1, v2);
}

unint64_t sub_10003C5FC(unsigned __int8 a1)
{
  sub_10003DFEC();
  sub_10005F1D0(a1);
  Swift::Int v2 = sub_10005F200();

  return sub_10003D02C(a1, v2);
}

unint64_t sub_10003C660(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = a1;
    while (1)
    {
      unint64_t v7 = 0xEA00000000007963;
      uint64_t v8 = 0x6E6574614C776F4CLL;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          unsigned int v9 = 1115185485;
          goto LABEL_6;
        case 2:
          unsigned int v9 = 1114532173;
LABEL_6:
          uint64_t v8 = v9 | 0x6172746900000000;
          unint64_t v7 = 0xEA00000000006574;
          break;
        case 3:
          uint64_t v8 = 0x63756F54776F6873;
          uint64_t v10 = 1918984808;
          goto LABEL_23;
        case 4:
          uint64_t v8 = 0x7261426863756F74;
          uint64_t v11 = 7368532;
          goto LABEL_14;
        case 5:
          uint64_t v8 = 0x7261426863756F74;
          uint64_t v12 = 0x6E696772614DLL;
          goto LABEL_28;
        case 6:
          uint64_t v8 = 0x5472616365646953;
          unint64_t v7 = 0xEF636E7953656D69;
          break;
        case 7:
          unint64_t v7 = 0xE700000000000000;
          uint64_t v8 = 0x73746E65636572;
          break;
        case 8:
          uint64_t v8 = 0xD000000000000010;
          long long v13 = "TimeSync";
          goto LABEL_21;
        case 9:
          uint64_t v8 = 0x72754373776F6873;
          uint64_t v11 = 7499635;
LABEL_14:
          unint64_t v7 = v11 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
          break;
        case 0xA:
          uint64_t v8 = 0x5372616265646973;
          uint64_t v10 = 1853321064;
          goto LABEL_23;
        case 0xB:
          uint64_t v8 = 0x5272616265646973;
          uint64_t v10 = 1952999273;
          goto LABEL_23;
        case 0xC:
          uint64_t v8 = 0xD000000000000015;
          long long v13 = "ebarShown";
          goto LABEL_21;
        case 0xD:
          unint64_t v7 = 0xEA00000000007366;
          uint64_t v8 = 0x6572507465736572;
          break;
        case 0xE:
          uint64_t v8 = 0xD000000000000012;
          long long v13 = "tatus";
          goto LABEL_21;
        case 0xF:
          uint64_t v8 = 0xD000000000000015;
          long long v13 = "allowFingerTouches";
LABEL_21:
          unint64_t v7 = (unint64_t)v13 | 0x8000000000000000;
          break;
        case 0x10:
          uint64_t v8 = 0x5772616265646973;
          uint64_t v10 = 1752458345;
LABEL_23:
          unint64_t v7 = v10 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
          break;
        case 0x11:
          unint64_t v7 = 0x8000000100060E00;
          goto LABEL_26;
        case 0x12:
          unint64_t v7 = 0x8000000100060E20;
LABEL_26:
          uint64_t v8 = 0xD000000000000011;
          break;
        case 0x13:
          uint64_t v8 = 0x654B656C62616E65;
          uint64_t v12 = 0x6472616F6279;
LABEL_28:
          unint64_t v7 = v12 & 0xFFFFFFFFFFFFLL | 0xEE00000000000000;
          break;
        default:
          break;
      }
      uint64_t v14 = 0x6E6574614C776F4CLL;
      unint64_t v15 = 0xEA00000000007963;
      switch(v6)
      {
        case 1:
          unsigned int v16 = 1115185485;
          goto LABEL_32;
        case 2:
          unsigned int v16 = 1114532173;
LABEL_32:
          uint64_t v14 = v16 | 0x6172746900000000;
          unint64_t v15 = 0xEA00000000006574;
          break;
        case 3:
          uint64_t v14 = 0x63756F54776F6873;
          uint64_t v17 = 1918984808;
          goto LABEL_49;
        case 4:
          uint64_t v14 = 0x7261426863756F74;
          uint64_t v18 = 7368532;
          goto LABEL_40;
        case 5:
          uint64_t v14 = 0x7261426863756F74;
          uint64_t v19 = 0x6E696772614DLL;
          goto LABEL_54;
        case 6:
          uint64_t v14 = 0x5472616365646953;
          unint64_t v15 = 0xEF636E7953656D69;
          break;
        case 7:
          unint64_t v15 = 0xE700000000000000;
          uint64_t v14 = 0x73746E65636572;
          break;
        case 8:
          uint64_t v14 = 0xD000000000000010;
          uint64_t v20 = "TimeSync";
          goto LABEL_47;
        case 9:
          uint64_t v14 = 0x72754373776F6873;
          uint64_t v18 = 7499635;
LABEL_40:
          unint64_t v15 = v18 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
          break;
        case 10:
          uint64_t v14 = 0x5372616265646973;
          uint64_t v17 = 1853321064;
          goto LABEL_49;
        case 11:
          uint64_t v14 = 0x5272616265646973;
          uint64_t v17 = 1952999273;
          goto LABEL_49;
        case 12:
          uint64_t v14 = 0xD000000000000015;
          uint64_t v20 = "ebarShown";
          goto LABEL_47;
        case 13:
          unint64_t v15 = 0xEA00000000007366;
          uint64_t v14 = 0x6572507465736572;
          break;
        case 14:
          uint64_t v14 = 0xD000000000000012;
          uint64_t v20 = "tatus";
          goto LABEL_47;
        case 15:
          uint64_t v14 = 0xD000000000000015;
          uint64_t v20 = "allowFingerTouches";
LABEL_47:
          unint64_t v15 = (unint64_t)v20 | 0x8000000000000000;
          break;
        case 16:
          uint64_t v14 = 0x5772616265646973;
          uint64_t v17 = 1752458345;
LABEL_49:
          unint64_t v15 = v17 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
          break;
        case 17:
          unint64_t v15 = 0x8000000100060E00;
          goto LABEL_52;
        case 18:
          unint64_t v15 = 0x8000000100060E20;
LABEL_52:
          uint64_t v14 = 0xD000000000000011;
          break;
        case 19:
          uint64_t v14 = 0x654B656C62616E65;
          uint64_t v19 = 0x6472616F6279;
LABEL_54:
          unint64_t v15 = v19 & 0xFFFFFFFFFFFFLL | 0xEE00000000000000;
          break;
        default:
          break;
      }
      if (v8 == v14 && v7 == v15) {
        break;
      }
      char v22 = sub_10005F140();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v22 & 1) == 0)
      {
        unint64_t v4 = (v4 + 1) & v5;
        if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4)) {
          continue;
        }
      }
      return v4;
    }
    swift_bridgeObjectRelease_n();
  }
  return v4;
}

unint64_t sub_10003CC48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_10005F140() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        long long v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_10005F140() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_10003CD2C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    do
    {
      sub_10000BDD4(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v8);
      char v6 = sub_10005EF00();
      sub_10000BD80((uint64_t)v8);
      if (v6) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v5;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_10003CDF4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v7 = ~v4;
    uint64_t v8 = *(void *)(v2 + 48);
    do
    {
      uint64_t v9 = (uint64_t *)(v8 + 40 * v5);
      uint64_t v10 = *v9;
      if (*((unsigned char *)v9 + 32))
      {
        uint64_t v12 = v9[1];
        uint64_t v11 = v9[2];
        uint64_t v13 = v9[3];
        if (*((unsigned char *)v9 + 32) == 1)
        {
          sub_10001D740(a1, (uint64_t)v27);
          if (v28 == 1 && v10 == v27[0] && v12 == v27[1])
          {
            BOOL v15 = v11 == v27[2] && v13 == v27[3];
            if (v15 || (sub_10005F140() & 1) != 0) {
              return v5;
            }
          }
        }
        else if (v11 | v12 | v10 | v13)
        {
          uint64_t v17 = v11 | v12 | v13;
          if (v10 == 1 && v17 == 0)
          {
            sub_10001D740(a1, (uint64_t)v31);
            if (v32 != 2 || v31[0] != 1) {
              goto LABEL_21;
            }
            uint64_t v21 = v31[2];
            uint64_t v20 = v31[3];
            uint64_t v22 = v31[1];
          }
          else if (v10 == 2 && v17 == 0)
          {
            sub_10001D740(a1, (uint64_t)v33);
            if (v34 != 2 || v33[0] != 2) {
              goto LABEL_21;
            }
            uint64_t v21 = v33[2];
            uint64_t v20 = v33[3];
            uint64_t v22 = v33[1];
          }
          else
          {
            sub_10001D740(a1, (uint64_t)v35);
            if (v36 != 2 || v35[0] != 3) {
              goto LABEL_21;
            }
            uint64_t v21 = v35[2];
            uint64_t v20 = v35[3];
            uint64_t v22 = v35[1];
          }
          if (!(v21 | v20 | v22)) {
            return v5;
          }
        }
        else
        {
          sub_10001D740(a1, (uint64_t)v29);
          if (v30 == 2)
          {
            int8x16_t v23 = vorrq_s8(v29[0], v29[1]);
            if (!*(void *)&vorr_s8(*(int8x8_t *)v23.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v23, v23, 8uLL))) {
              return v5;
            }
          }
        }
      }
      else
      {
        sub_10001D740(a1, (uint64_t)v25);
        if (v26) {
          BOOL v16 = 0;
        }
        else {
          BOOL v16 = v10 == v25[0];
        }
        if (v16) {
          return v5;
        }
      }
LABEL_21:
      unint64_t v5 = (v5 + 1) & v7;
    }
    while (((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5) & 1) != 0);
  }
  return v5;
}

unint64_t sub_10003D02C(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(unsigned __int8 *)(v7 + result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(unsigned __int8 *)(v7 + result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

void sub_10003D0CC(uint64_t a1, uint64_t a2, void *a3)
{
  NSString v4 = sub_10005E8F0();
  swift_bridgeObjectRelease();
  [a3 setText:v4];
}

uint64_t sub_10003D130(void *a1)
{
  id v2 = [a1 text];

  if (!v2) {
    return 0;
  }
  uint64_t v3 = sub_10005E920();

  return v3;
}

void sub_10003D1A0(uint64_t a1, uint64_t a2, void *a3)
{
  NSString v4 = sub_10005E8F0();
  [a3 setText:v4];
}

uint64_t sub_10003D1F8()
{
  return _os_variant_has_internal_ui("com.apple.sidecar");
}

uint64_t sub_10003D204()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10003D23C()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

void sub_10003D284()
{
  sub_100033458(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(double *)(v0 + 40));
}

uint64_t sub_10003D298()
{
  return sub_100035EAC(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

const char *sub_10003D2A0(int a1)
{
  if ((a1 - 1) > 0xA) {
    return "?";
  }
  else {
    return off_100077D18[a1 - 1];
  }
}

uint64_t sub_10003D2C8()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10003D300()
{
  return sub_10003B87C(*(uint64_t (**)(id))(v0 + 24), *(double *)(v0 + 16));
}

uint64_t sub_10003D30C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10003D31C()
{
  return swift_release();
}

uint64_t sub_10003D324()
{
  swift_release();
  uint64_t v0 = sub_10001A914();

  return _swift_deallocObject(v0, v1, v2);
}

uint64_t sub_10003D354()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

BOOL sub_10003D37C()
{
  MGGetFloat32Answer();
  return v0 != 0.0;
}

void sub_10003D3B0(uint64_t a1, void *a2)
{
  sub_100007F60(0, &qword_100084D38);
  Class isa = sub_10005EAA0().super.isa;
  swift_bridgeObjectRelease();
  [a2 setAnimations:isa];
}

void sub_10003D434(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  NSString v6 = sub_10005E8F0();
  swift_bridgeObjectRelease();
  [a4 addAnimation:a1 forKey:v6];
}

uint64_t sub_10003D4B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007D1C(&qword_100084D40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10003D518(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DisplayMainViewController.UsageSummary(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10003D57C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DisplayMainViewController.UsageSummary(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_10003D5D8(uint64_t *a1, uint64_t a2)
{
  sub_10003B804(a1, *(double *)(v2 + 24), a2, *(void *)(v2 + 16));
}

id sub_10003D5FC()
{
  return sub_100031F30(*(void *)(v0 + 16));
}

uint64_t sub_10003D604()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10003D63C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_100007D1C(a3);
  sub_10003DCC8();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_10003D698()
{
  sub_10001A720();
  uint64_t v1 = sub_100007D1C((uint64_t *)&unk_1000843D0);
  sub_10002A5F0(v1);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = sub_10005E750();
  sub_100008DCC();
  uint64_t v8 = v7;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = sub_10005E6D0();
  if (!sub_10001A2B8(v0 + v3, 1, v10))
  {
    uint64_t v11 = sub_10003E18C();
    v12(v11);
  }
  unint64_t v13 = (v5 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v14 = (v13 + v9 + 8) & ~v9;

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v0 + v14, v6);
  swift_release();
  sub_10001A6F0();
  return _swift_deallocObject(v15, v16, v17);
}

void sub_10003D7E8()
{
  uint64_t v1 = sub_100007D1C((uint64_t *)&unk_1000843D0);
  sub_10002A5F0(v1);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v5 = (*(void *)(v4 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = sub_10005E750();
  sub_10002A5F0(v6);
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  unint64_t v11 = (v5 + *(unsigned __int8 *)(v8 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v12 = *(void *)(v0 + v5);
  uint64_t v13 = *(void *)(v0 + ((*(void *)(v10 + 64) + v11 + 7) & 0xFFFFFFFFFFFFFFF8));

  sub_1000384CC(v0 + v3, v12, v0 + v11, v13);
}

uint64_t sub_10003D8AC(uint64_t a1, uint64_t *a2)
{
  sub_100007D1C(a2);
  sub_10003DCC8();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

unint64_t sub_10003D900()
{
  unint64_t result = qword_1000848F0;
  if (!qword_1000848F0)
  {
    sub_10005E6D0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000848F0);
  }
  return result;
}

void sub_10003D950(uint64_t a1, void *a2)
{
  Class isa = sub_10005EAA0().super.isa;
  swift_bridgeObjectRelease();
  [a2 setFilters:isa];
}

void sub_10003D9C0(void *a1, void *a2)
{
  if (a1)
  {
  }
}

uint64_t sub_10003DA00()
{
  return sub_100039570(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_10003DA08()
{
  uint64_t v1 = *(void **)(v0 + 16);
  if (v1)
  {
  }

  return _swift_deallocObject(v0, 33, 7);
}

id sub_10003DA4C(id result, void *a2)
{
  if (result)
  {
    id v2 = result;
    return a2;
  }
  return result;
}

uint64_t sub_10003DA90()
{
  swift_release();

  uint64_t v1 = sub_10001A914();

  return _swift_deallocObject(v1, v2, v3);
}

void sub_10003DAC8()
{
  sub_100038B30(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_10003DAD4()
{
  uint64_t v1 = sub_10001A914();

  return _swift_deallocObject(v1, v2, v3);
}

id sub_10003DB0C(void *a1)
{
  return sub_1000391E8(a1, *(void **)(v1 + 16));
}

uint64_t sub_10003DB18()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10003DB58()
{
  return (*(uint64_t (**)(void))(v0 + 16))(*(void *)(v0 + 32));
}

void sub_10003DB88(uint64_t a1)
{
  sub_10003A96C(a1, *(void **)(v1 + 16));
}

uint64_t sub_10003DB90(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_100007D1C(a3);
  sub_10003DCC8();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_10003DC2C()
{
  return 0x697463656E6E6F43;
}

uint64_t sub_10003DC5C()
{
  return 1;
}

id sub_10003DC64(uint64_t a1)
{
  uint64_t v4 = *(const char **)(v1 + 784);
  return [v2 v4:a1];
}

uint64_t sub_10003DC84()
{
  return swift_beginAccess();
}

uint64_t sub_10003DCA8()
{
  return swift_dynamicCast();
}

uint64_t sub_10003DCD8()
{
  return swift_beginAccess();
}

id sub_10003DCF0(uint64_t a1, const char *a2)
{
  return [v2 a2:v3];
}

uint64_t sub_10003DD0C(uint64_t a1)
{
  *(void *)(v2 + v1) = a1;
  return swift_unknownObjectRelease();
}

NSArray sub_10003DD1C()
{
  return sub_10005EAA0();
}

NSString sub_10003DD34()
{
  return sub_10005E8F0();
}

uint64_t sub_10003DD64()
{
  return swift_allocObject();
}

uint64_t sub_10003DD7C(uint64_t a1, uint64_t a2)
{
  sub_10002A1FC(a1, a2);
  return sub_10005E720();
}

NSString sub_10003DDA4()
{
  return sub_10005E8F0();
}

id sub_10003DDD0()
{
  uint64_t v5 = *(const char **)(v3 + 1632);
  return [v0 v5:v1, v2];
}

uint64_t sub_10003DDF0()
{
  return swift_slowAlloc();
}

uint64_t sub_10003DE38(Swift::String a1, Swift::String_optional a2, NSBundle a3, uint64_t a4, uint64_t a5, uint64_t a6, Swift::String a7)
{
  v8._uint64_t countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  return sub_10005E510(a1, a2, a3, v8, a7);
}

id sub_10003DE58(uint64_t a1)
{
  uint64_t v4 = *(const char **)(v2 + 784);
  return [v1 v4:a1];
}

uint64_t sub_10003DE78(uint64_t a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  uint64_t v5 = *(void *)(v3 + 56) + 32 * a1;
  return sub_10000AF90(v5, (uint64_t)va);
}

uint64_t sub_10003DEA8()
{
  return 0;
}

void sub_10003DEC4(__n128 a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, long long a10, long long a11, __n128 a12, char a13)
{
  a11 = a10;
  a12 = a1;
  a13 = 1;
  sub_10003A4E4((uint64_t)&a11, 1);
}

uint64_t sub_10003DEEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10001A3E0(a1 + a2);
}

__n128 *sub_10003DEF4(__n128 *result, __n128 a2)
{
  result[1] = a2;
  result[2].n128_u64[0] = 0x746E656469;
  result[2].n128_u64[1] = 0xE500000000000000;
  return result;
}

uint64_t sub_10003DF10()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_10003DF28()
{
  return 0;
}

void sub_10003DF44(void *a1@<X8>)
{
  *a1 = 0x6C69636E6570;
  a1[1] = 0xE600000000000000;
}

uint64_t sub_10003DF5C()
{
  return swift_beginAccess();
}

uint64_t sub_10003DF78@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 + a1 + 8) = 0;
  return swift_unknownObjectWeakInit();
}

uint64_t sub_10003DF94()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_10003DFAC()
{
  return v0;
}

BOOL sub_10003DFC4(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t sub_10003DFE0()
{
  return v0;
}

uint64_t sub_10003DFEC()
{
  return sub_10005F1C0();
}

uint64_t sub_10003E004()
{
  return v0;
}

uint64_t sub_10003E010()
{
  uint64_t v1 = type metadata accessor for DisplayMainViewController.UsageSummary(0);
  return sub_10001A32C(v0, 1, 1, v1);
}

uint64_t sub_10003E048()
{
  return type metadata accessor for DisplayMainViewController(0);
}

uint64_t sub_10003E064(uint64_t a1, unint64_t *a2)
{
  return sub_100007F60(0, a2);
}

double sub_10003E07C()
{
  uint64_t v5 = v1;
  uint64_t v6 = v2;
  uint64_t v7 = v3;
  uint64_t v8 = v4;
  return CGRectGetHeight(*(CGRect *)&v5);
}

void sub_10003E09C(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v5, a4, v6, 2u);
}

id sub_10003E0D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = *(const char **)(v6 + 1736);
  return [v7 v9:v5 a4:a5];
}

uint64_t sub_10003E0FC()
{
  return *(void *)(v0 + v1);
}

uint64_t sub_10003E108(uint64_t a1)
{
  *(void *)(v1 - 120) = a1;
  return v1 - 120;
}

uint64_t sub_10003E11C()
{
  return sub_10005EE10();
}

void sub_10003E134(uint64_t a1, unint64_t a2)
{
  sub_100039244(a1, a2, v2);
}

uint64_t sub_10003E14C()
{
  return swift_dynamicCast();
}

double sub_10003E16C()
{
  return v0;
}

uint64_t sub_10003E18C()
{
  return v0;
}

uint64_t sub_10003E198()
{
  return v0;
}

uint64_t sub_10003E1A8()
{
  return sub_10005EEE0();
}

BOOL sub_10003E270(void *a1, uint64_t a2)
{
  uint64_t v3 = *v2 & a2;
  if (v3 != a2) {
    *v2 |= a2;
  }
  *a1 = a2;
  return v3 != a2;
}

uint64_t sub_10003E29C(uint64_t result)
{
  *v1 |= result;
  return result;
}

id sub_10003E2AC()
{
  NSString v0 = sub_10005E8F0();
  swift_bridgeObjectRelease();
  id v1 = [(id)swift_getObjCClassFromMetadata() imageNamed:v0];

  return v1;
}

void *sub_10003E310(uint64_t a1)
{
  sub_10001D740(a1, (uint64_t)v1 + OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar6Button_identifier);
  sub_10001D7B4(a1, (void (*)(void, void, void, void, void))sub_10001D79C);
  v18.receiver = v1;
  v18.super_class = (Class)_s6ButtonCMa();
  [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v4 = sub_100021B08();
  uint64_t v6 = v5;
  uint64_t v7 = self;
  id v8 = v3;
  uint64_t v9 = (objc_class *)[v7 mainBundle];
  v17._uint64_t countAndFlagsBits = 0xE600000000000000;
  v19._uint64_t countAndFlagsBits = v4;
  v19._object = v6;
  v20.value._uint64_t countAndFlagsBits = 0;
  v20.value._object = 0;
  v10.super.Class isa = v9;
  v21._uint64_t countAndFlagsBits = 0;
  v21._object = (void *)0xE000000000000000;
  uint64_t v11 = sub_10005E510(v19, v20, v10, v21, v17);
  uint64_t v13 = v12;
  swift_bridgeObjectRelease();

  sub_10003FDE4(v11, v13, v8);
  sub_100007F60(0, (unint64_t *)&unk_100084F40);
  sub_100021964();
  uint64_t v14 = v8;
  sub_10001D7B4(a1, (void (*)(void, void, void, void, void))sub_10001D7F4);
  id v15 = sub_10003E2AC();
  [v14 setImage:v15 forState:0];

  (*(void (**)(void))((swift_isaMask & *v14) + 0x60))();
  return v14;
}

void sub_10003E508()
{
}

void sub_10003E55C()
{
  [v0 setContentEdgeInsets:0.0, 8.0, 0.0, 8.0];
  id v1 = self;
  id v2 = [v1 blackColor];
  [v0 setBackgroundColor:v2];

  id v3 = [v0 titleLabel];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = self;
    NSString v6 = sub_10005E8F0();
    id v7 = [v5 systemFontOfSize:v6 weight:15.0 design:0.0];

    [v4 setFont:v7];
  }
  id v8 = [v1 whiteColor];
  [v0 setTintColor:v8];

  [v0 setAdjustsImageWhenHighlighted:0];
  id v9 = [v1 redColor];
  [v0 setTitleShadowColor:v9 forState:4];

  id v10 = [v0 layer];
  [v10 setMasksToBounds:1];
  [v10 setCornerRadius:6.0];
}

id sub_10003E830(SEL *a1)
{
  v4.receiver = v1;
  v4.super_class = (Class)_s6ButtonCMa();
  return [super a1];
}

void sub_10003E8C8(char a1, SEL *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)_s6ButtonCMa();
  [super setValue:a1 & 1];
  uint64_t v5 = self;
  id v6 = v2;
  [v5 begin];
  [v5 setDisableActions:1];
  sub_10003E968();
  [v5 commit];
}

void sub_10003E968()
{
  unsigned __int8 v1 = [v0 isSelected];
  unsigned __int8 v2 = [v0 isHighlighted];
  if (v1)
  {
    id v3 = objc_allocWithZone((Class)UIColor);
    if (v2)
    {
      double v4 = 1.0;
      double v5 = 0.5;
LABEL_7:
      id v6 = [v3 initWithWhite:v4 alpha:v5];
      goto LABEL_9;
    }
LABEL_6:
    double v4 = 1.0;
    double v5 = 0.25;
    goto LABEL_7;
  }
  if (v2)
  {
    id v3 = objc_allocWithZone((Class)UIColor);
    goto LABEL_6;
  }
  id v6 = [self blackColor];
LABEL_9:
  id v7 = v6;
  [v0 setBackgroundColor:];
}

id sub_10003EA48()
{
  return [v0 bounds];
}

void sub_10003EAB4()
{
}

id sub_10003EAF4()
{
  return sub_10003FBA4(_s6ButtonCMa);
}

uint64_t _s6ButtonCMa()
{
  return self;
}

uint64_t sub_10003EB4C(uint64_t a1, uint64_t a2)
{
  return sub_10003EB70(a1, a2, &OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar12StickyButton_downUpHandler);
}

uint64_t sub_10003EB58(uint64_t a1, uint64_t a2)
{
  return sub_10003EB70(a1, a2, &OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar12StickyButton_stickyHandler);
}

uint64_t sub_10003EB64(uint64_t a1, uint64_t a2)
{
  return sub_10003EB70(a1, a2, &OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar12StickyButton_tapHandler);
}

uint64_t sub_10003EB70(uint64_t a1, uint64_t a2, void *a3)
{
  double v4 = (void *)(v3 + *a3);
  *double v4 = a1;
  v4[1] = a2;
  return swift_release();
}

uint64_t sub_10003EB88(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar12StickyButton_doubleTapRecognizer) = a1;
  return _objc_release_x1();
}

void sub_10003EB9C()
{
  sub_10003E55C();
  v4[3] = _s12StickyButtonCMa();
  v4[0] = v0;
  objc_allocWithZone((Class)UITapGestureRecognizer);
  id v1 = v0;
  id v2 = sub_10003FCA0(v4, (uint64_t)"_keyboardButtonGestureTriggeredWithRecognizer:");
  [v2 setNumberOfTapsRequired:2];
  [v2 setDelaysTouchesEnded:0];
  [v2 setDelegate:v1];
  id v3 = v2;
  sub_10003EB88((uint64_t)v2);
  [v1 addGestureRecognizer:v3];
  [v1 addTarget:v1 action:"_buttonDownWithSender:" forControlEvents:1];
  [v1 addTarget:v1 action:"_buttonUpWithSender:" forControlEvents:192];
}

void sub_10003ECBC(void *a1)
{
  id v2 = [a1 view];
  if (v2)
  {
    id v5 = v2;
    _s12StickyButtonCMa();
    id v3 = (void *)swift_dynamicCastClass();
    if (v3)
    {
      [v3 setSelected:1];
      sub_10003EF74();
      double v4 = *(void (**)(uint64_t))(v1 + OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar12StickyButton_stickyHandler);
      swift_retain();
      v4(v1);
      swift_release();
      if (*(void *)(v1 + OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar12StickyButton__tapTimer))
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        sub_10005ED40();
        swift_unknownObjectRelease();
      }
    }
  }
}

id sub_10003EE24()
{
  uint64_t v1 = v0;
  *(void *)&v0[OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar12StickyButton_downTime] = mach_absolute_time();
  if (*(void *)&v0[OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar12StickyButton__tapTimer])
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_10005ED40();
    swift_unknownObjectRelease();
  }
  if ([v0 isSelected])
  {
    uint64_t v2 = OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar12StickyButton_doubleTapRecognizer;
    id result = *(id *)&v1[OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar12StickyButton_doubleTapRecognizer];
    if (result)
    {
      [result setEnabled:0];
      id result = *(id *)&v1[v2];
      if (result)
      {
        return [result setEnabled:1];
      }
    }
  }
  else
  {
    return (id)sub_10003EF74();
  }
  return result;
}

uint64_t sub_10003EF74()
{
  if ((*(unsigned char *)(v0 + OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar12StickyButton__buttonDown) & 1) == 0)
  {
    *(unsigned char *)(v0 + OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar12StickyButton__buttonDown) = 1;
    uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0
                                                 + OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar12StickyButton_downUpHandler);
    swift_retain();
    v1(v0, 1);
    return swift_release();
  }
  return result;
}

uint64_t sub_10003F000()
{
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar12StickyButton__buttonDown) == 1)
  {
    *(unsigned char *)(v0 + OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar12StickyButton__buttonDown) = 0;
    uint64_t v1 = *(void (**)(uint64_t, void))(v0
                                                + OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar12StickyButton_downUpHandler);
    swift_retain();
    v1(v0, 0);
    return swift_release();
  }
  return result;
}

void sub_10003F08C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10005E7A0();
  sub_100008DCC();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  id v7 = (uint64_t *)((char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v8);
  uint64_t v63 = (uint64_t)&v51 - v9;
  sub_10005E820();
  sub_100008DCC();
  id v61 = v11;
  uint64_t v62 = v10;
  __chkstk_darwin(v10);
  id v59 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  id v60 = (char *)&v51 - v14;
  sub_10005E7B0();
  sub_100008DCC();
  uint64_t v57 = v16;
  uint64_t v58 = v15;
  __chkstk_darwin(v15);
  sub_10003FE70();
  uint64_t v19 = v18 - v17;
  sub_10005E7E0();
  sub_100008DCC();
  uint64_t v55 = v21;
  uint64_t v56 = v20;
  __chkstk_darwin(v20);
  sub_10003FE70();
  uint64_t v24 = v23 - v22;
  uint64_t v25 = sub_10005ECE0();
  sub_100008DCC();
  uint64_t v27 = v26;
  __chkstk_darwin(v28);
  sub_10003FE70();
  uint64_t v31 = v30 - v29;
  [v0 setSelected:0];
  sub_10003F000();
  char v32 = *(void **)&v0[OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar12StickyButton_doubleTapRecognizer];
  if (v32)
  {
    [v32 maximumIntervalBetweenSuccessiveTaps];
    double v34 = v33;
    mach_absolute_time();
    HostTime.nanoseconds.getter();
    double v36 = (double)v35 * 0.000000001;
    HostTime.nanoseconds.getter();
    if (v36 < v34 + (double)v37 * 0.000000001)
    {
      sub_100007F60(0, (unint64_t *)&unk_100084400);
      id v53 = v7;
      aBlock[0] = _swiftEmptyArrayStorage;
      sub_10003FC58((unint64_t *)&unk_100084F50, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_source.TimerFlags);
      uint64_t v54 = v2;
      sub_100007D1C((uint64_t *)&unk_100084410);
      uint64_t v52 = v4;
      sub_100007E14((unint64_t *)&unk_100084F60, (uint64_t *)&unk_100084410);
      sub_10005EEE0();
      sub_100007F60(0, (unint64_t *)&qword_100084110);
      unint64_t v38 = (void *)sub_10005EC90();
      sub_10005ECF0();

      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v31, v25);
      swift_getObjectType();
      uint64_t v39 = swift_allocObject();
      swift_unknownObjectWeakInit();
      aBlock[4] = sub_10003FC38;
      void aBlock[5] = v39;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10000C5B0;
      void aBlock[3] = &unk_100077D98;
      id v40 = _Block_copy(aBlock);
      swift_retain();
      sub_10005E7D0();
      sub_10003E1A8();
      sub_10005ED20();
      _Block_release(v40);
      (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v19, v58);
      (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v24, v56);
      swift_release();
      swift_release();
      uint64_t v41 = v59;
      sub_10005E810();
      Class v42 = v60;
      sub_10005E850();
      uint64_t v43 = v62;
      id v44 = (void (*)(char *, uint64_t))*((void *)v61 + 1);
      v44(v41, v62);
      uint64_t v45 = v63;
      sub_10001610C(v63);
      Swift::String v46 = v53;
      sub_100016180(v53);
      sub_10005ED80();
      id v61 = v1;
      Swift::String v47 = *(void (**)(void *, uint64_t))(v52 + 8);
      Swift::String_optional v48 = v46;
      uint64_t v49 = v54;
      v47(v48, v54);
      v47((void *)v45, v49);
      v44(v42, v43);
      sub_10005ED60();
      uint64_t v50 = swift_unknownObjectRetain();
      sub_10003F6FC(v50);
      swift_unknownObjectRelease();
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10003F618()
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v1 = (void *)result;
    uint64_t v2 = *(void (**)(void *))(result + OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar12StickyButton_tapHandler);
    swift_retain();
    v2(v1);

    return swift_release();
  }
  return result;
}

uint64_t sub_10003F6FC(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar12StickyButton__tapTimer) = a1;
  return swift_unknownObjectRelease();
}

void *sub_10003F714(uint64_t a1)
{
  uint64_t v2 = (void *)(v1 + OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar12StickyButton_downUpHandler);
  *uint64_t v2 = VideoStream.qosMonitorServerDidDie(_:);
  v2[1] = 0;
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar12StickyButton_stickyHandler);
  void *v3 = VideoStream.qosMonitorServerDidDie(_:);
  v3[1] = 0;
  uint64_t v4 = (void *)(v1 + OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar12StickyButton_tapHandler);
  *uint64_t v4 = VideoStream.qosMonitorServerDidDie(_:);
  v4[1] = 0;
  *(void *)(v1 + OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar12StickyButton_doubleTapRecognizer) = 0;
  *(unsigned char *)(v1 + OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar12StickyButton__buttonDown) = 0;
  *(void *)(v1 + OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar12StickyButton__tapTimer) = 0;
  *(void *)(v1 + OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar12StickyButton_downTime) = 0;
  return sub_10003E310(a1);
}

id sub_10003F7A8(void *a1)
{
  uint64_t v3 = &v1[OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar12StickyButton_downUpHandler];
  void *v3 = VideoStream.qosMonitorServerDidDie(_:);
  v3[1] = 0;
  uint64_t v4 = &v1[OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar12StickyButton_stickyHandler];
  *uint64_t v4 = VideoStream.qosMonitorServerDidDie(_:);
  v4[1] = 0;
  uint64_t v5 = &v1[OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar12StickyButton_tapHandler];
  void *v5 = VideoStream.qosMonitorServerDidDie(_:);
  v5[1] = 0;
  *(void *)&v1[OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar12StickyButton_doubleTapRecognizer] = 0;
  v1[OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar12StickyButton__buttonDown] = 0;
  *(void *)&v1[OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar12StickyButton__tapTimer] = 0;
  *(void *)&v1[OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar12StickyButton_downTime] = 0;
  v8.receiver = v1;
  v8.super_class = (Class)_s12StickyButtonCMa();
  id v6 = [super initWithCoder:a1];

  return v6;
}

uint64_t sub_10003F8B0()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_unknownObjectRelease();
}

id sub_10003F92C()
{
  return sub_10003FBA4(_s12StickyButtonCMa);
}

uint64_t _s12StickyButtonCMa()
{
  return self;
}

void sub_10003F9F4()
{
  v0[OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar11StateButton_alternateState] = 0;

  sub_10003FE48();
  __break(1u);
}

void sub_10003FA64()
{
  uint64_t v1 = v0;
  char v2 = *((unsigned char *)v0 + OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar11StateButton_alternateState);
  *((unsigned char *)v0 + OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar11StateButton_alternateState) = v2 ^ 1;
  uint64_t v3 = (uint64_t)v0 + OBJC_IVAR____TtCO17ContinuityDisplay7Sidebar6Button_identifier;
  if (v2)
  {
    sub_10001D740(v3, (uint64_t)v8);
    sub_100021964();
LABEL_13:
    sub_100007F60(0, (unint64_t *)&unk_100084F40);
    id v7 = sub_10003E2AC();
    [v1 setImage:v7 forState:0];

    return;
  }
  if (*(unsigned char *)(v3 + 32) == 2)
  {
    uint64_t v4 = *(void *)(v3 + 16) | *(void *)(v3 + 24) | *(void *)(v3 + 8);
    if (*(void *)v3 == 2 && v4 == 0) {
      goto LABEL_13;
    }
    if (*(void *)v3 == 3 && v4 == 0) {
      goto LABEL_13;
    }
  }
  __break(1u);
}

id sub_10003FB8C()
{
  return sub_10003FBA4(_s11StateButtonCMa);
}

id sub_10003FBA4(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return [super dealloc];
}

uint64_t _s11StateButtonCMa()
{
  return self;
}

uint64_t sub_10003FC00()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10003FC38()
{
  return sub_10003F618();
}

uint64_t sub_10003FC40(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10003FC50()
{
  return swift_release();
}

uint64_t sub_10003FC58(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_10003FCA0(void *a1, uint64_t a2)
{
  uint64_t v4 = a1[3];
  if (v4)
  {
    id v6 = sub_10000BD3C(a1, a1[3]);
    uint64_t v7 = *(void *)(v4 - 8);
    double v8 = __chkstk_darwin(v6);
    uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, double))(v7 + 16))(v10, v8);
    uint64_t v11 = sub_10005F130();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v4);
    sub_10000B724((uint64_t)a1);
  }
  else
  {
    uint64_t v11 = 0;
  }
  id v12 = [v2 initWithTarget:v11 action:a2];
  swift_unknownObjectRelease();
  return v12;
}

void sub_10003FDE4(uint64_t a1, uint64_t a2, void *a3)
{
  NSString v4 = sub_10005E8F0();
  swift_bridgeObjectRelease();
  [a3 setAccessibilityLabel:v4];
}

uint64_t sub_10003FE48()
{
  return sub_10005F050();
}

char *sub_10003FE80(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC17ContinuityDisplay15TouchController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v1[OBJC_IVAR____TtC17ContinuityDisplay15TouchController_timeSyncClock] = 0;
  uint64_t v3 = OBJC_IVAR____TtC17ContinuityDisplay15TouchController_pencilInteraction;
  id v4 = objc_allocWithZone((Class)UIPencilInteraction);
  uint64_t v5 = v1;
  *(void *)&v1[v3] = [v4 init];
  uint64_t v6 = OBJC_IVAR____TtC17ContinuityDisplay15TouchController_pan;
  id v7 = objc_allocWithZone((Class)UIPanGestureRecognizer);
  *(void *)&v5[v6] = sub_100040F78((uint64_t)v7, v8, v9, v10, v11, v12, v13, v14, v59, v62);
  uint64_t v15 = OBJC_IVAR____TtC17ContinuityDisplay15TouchController_pinch;
  id v16 = objc_allocWithZone((Class)UIPinchGestureRecognizer);
  *(void *)&v5[v15] = sub_100040F78((uint64_t)v16, v17, v18, v19, v20, v21, v22, v23, v60, v63);
  uint64_t v24 = OBJC_IVAR____TtC17ContinuityDisplay15TouchController_rotate;
  long long v66 = 0u;
  long long v67 = 0u;
  id v25 = objc_allocWithZone((Class)UIRotationGestureRecognizer);
  *(void *)&v5[v24] = sub_100040F78((uint64_t)v25, v26, v27, v28, v29, v30, v31, v32, v61, v64);
  uint64_t v33 = OBJC_IVAR____TtC17ContinuityDisplay15TouchController_multitouchReport;
  type metadata accessor for HIDReport();
  double v34 = HIDReport.__allocating_init(count:)(23);
  swift_retain();
  unint64_t v35 = MultitouchReport.reportID.unsafeMutableAddressor();
  HIDReport.subscript.setter(*v35, 0);
  swift_release();
  *(void *)&v5[v33] = v34;
  double v36 = &v5[OBJC_IVAR____TtC17ContinuityDisplay15TouchController_multitouchState];
  *(_OWORD *)double v36 = 0u;
  *((_OWORD *)v36 + 1) = 0u;
  *((void *)v36 + 4) = 0;
  v36[40] = 1;
  *((void *)v36 + 6) = 0;
  *((void *)v36 + 7) = 0;
  v36[64] = 1;
  *((void *)v36 + 9) = 0;
  *((void *)v36 + 10) = 0;
  v36[88] = 1;
  *(void *)&v5[OBJC_IVAR____TtC17ContinuityDisplay15TouchController_view] = a1;
  id v37 = a1;

  v65.receiver = v5;
  v65.super_class = (Class)type metadata accessor for TouchController();
  [super init];
  if (UIApp)
  {
    type metadata accessor for App();
    if (swift_dynamicCastClass()) {
      swift_unknownObjectWeakAssign();
    }
  }
  uint64_t v39 = (char *)v38;
  [v37 setMultipleTouchEnabled:1];
  [v37 setUserInteractionEnabled:1];
  sub_100007D1C(&qword_1000843F0);
  uint64_t v40 = swift_allocObject();
  *(_OWORD *)(v40 + 16) = xmmword_100064320;
  *(NSNumber *)(v40 + 32) = sub_10005EC00();
  *(void *)&long long v66 = v40;
  sub_10005EAE0();
  uint64_t v41 = v66;
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100064510;
  uint64_t v43 = OBJC_IVAR____TtC17ContinuityDisplay15TouchController_pan;
  id v44 = *(void **)&v39[OBJC_IVAR____TtC17ContinuityDisplay15TouchController_pan];
  *(void *)(inited + 32) = v44;
  uint64_t v45 = OBJC_IVAR____TtC17ContinuityDisplay15TouchController_pinch;
  Swift::String v46 = *(void **)&v39[OBJC_IVAR____TtC17ContinuityDisplay15TouchController_pinch];
  *(void *)(inited + 40) = v46;
  Swift::String v47 = *(void **)&v39[OBJC_IVAR____TtC17ContinuityDisplay15TouchController_rotate];
  *(void *)(inited + 48) = v47;
  *(void *)&long long v66 = inited;
  sub_10005EAE0();
  unint64_t v48 = v66;
  id v49 = v37;
  uint64_t v50 = v39;
  swift_bridgeObjectRetain();
  id v51 = v44;
  id v52 = v46;
  id v53 = v47;
  sub_100040234(v48, v41, v50, v49);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v54 = *(void **)&v39[v43];
  [v54 setMinimumNumberOfTouches:2];
  [v54 setMaximumNumberOfTouches:2];
  [*(id *)&v39[v45] _setEndsOnSingleTouch:1];
  uint64_t v55 = *(void **)&v50[OBJC_IVAR____TtC17ContinuityDisplay15TouchController_pencilInteraction];
  [v55 setDelegate:v50];
  [v55 setEnabled:1];
  id v56 = *(id *)&v50[OBJC_IVAR____TtC17ContinuityDisplay15TouchController_view];
  id v57 = v55;
  [v56 addInteraction:v57];

  return v50;
}

void sub_100040234(unint64_t a1, uint64_t a2, void *a3, void *a4)
{
  if (a1 >> 62) {
    goto LABEL_11;
  }
  uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v6; uint64_t v6 = sub_10005F080())
  {
    uint64_t v7 = 4;
    while (1)
    {
      id v8 = (a1 & 0xC000000000000001) != 0 ? (id)sub_10005EF70() : *(id *)(a1 + 8 * v7);
      uint64_t v9 = v8;
      uint64_t v10 = v7 - 3;
      if (__OFADD__(v7 - 4, 1)) {
        break;
      }
      sub_100040E6C();
      Class isa = sub_10005EAA0().super.isa;
      [v9 setAllowedTouchTypes:isa];

      [v9 setCancelsTouchesInView:0];
      [v9 setDelegate:a3];
      [a4 addGestureRecognizer:v9];

      ++v7;
      if (v10 == v6) {
        goto LABEL_9;
      }
    }
    __break(1u);
LABEL_11:
    swift_bridgeObjectRetain();
  }
LABEL_9:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

BOOL sub_1000403A4(double a1, double a2, double a3, double a4)
{
  return a2 == a4 && a1 == a3;
}

BOOL sub_1000403B8(double *a1, double *a2)
{
  return sub_1000403A4(*a1, a1[1], *a2, a2[1]);
}

uint64_t sub_1000403C4(uint64_t a1, uint64_t a2)
{
  if (*(double *)a1 != *(double *)a2
    || *(double *)(a1 + 8) != *(double *)(a2 + 8)
    || *(void *)(a1 + 16) != *(void *)(a2 + 16))
  {
    return 0;
  }
  if (*(unsigned char *)(a1 + 40))
  {
    if (!*(unsigned char *)(a2 + 40)) {
      return 0;
    }
  }
  else
  {
    if (*(unsigned char *)(a2 + 40)) {
      return 0;
    }
    if (*(double *)(a1 + 24) != *(double *)(a2 + 24) || *(double *)(a1 + 32) != *(double *)(a2 + 32)) {
      return 0;
    }
  }
  if (*(void *)(a1 + 48) != *(void *)(a2 + 48)) {
    return 0;
  }
  char v3 = *(unsigned char *)(a2 + 64);
  if (*(unsigned char *)(a1 + 64))
  {
    if (!*(unsigned char *)(a2 + 64)) {
      return 0;
    }
  }
  else
  {
    if (*(double *)(a1 + 56) != *(double *)(a2 + 56)) {
      char v3 = 1;
    }
    if (v3) {
      return 0;
    }
  }
  if (*(void *)(a1 + 72) != *(void *)(a2 + 72)) {
    return 0;
  }
  char v4 = *(unsigned char *)(a2 + 88);
  if (*(unsigned char *)(a1 + 88))
  {
    if ((*(unsigned char *)(a2 + 88) & 1) == 0) {
      return 0;
    }
  }
  else
  {
    if (*(double *)(a1 + 80) != *(double *)(a2 + 80)) {
      char v4 = 1;
    }
    if (v4) {
      return 0;
    }
  }
  return 1;
}

void sub_1000404A0(void *a1)
{
  if (!swift_unknownObjectWeakLoadStrong()) {
    goto LABEL_34;
  }
  swift_retain();
  swift_unknownObjectRelease();
  char v4 = (void *)(v1 + OBJC_IVAR____TtC17ContinuityDisplay15TouchController_multitouchState);
  double v5 = *(double *)(v1 + OBJC_IVAR____TtC17ContinuityDisplay15TouchController_multitouchState);
  double v6 = *(double *)(v1 + OBJC_IVAR____TtC17ContinuityDisplay15TouchController_multitouchState + 8);
  uint64_t v37 = *(void *)(v1 + OBJC_IVAR____TtC17ContinuityDisplay15TouchController_multitouchState + 48);
  uint64_t v38 = *(void *)(v1 + OBJC_IVAR____TtC17ContinuityDisplay15TouchController_multitouchState + 72);
  uint64_t v7 = *(void **)(v1 + OBJC_IVAR____TtC17ContinuityDisplay15TouchController_view);
  [v7 bounds];
  id v8 = *(void **)(v1 + OBJC_IVAR____TtC17ContinuityDisplay15TouchController_pan);
  uint64_t v9 = (char *)[v8 state];
  double v39 = 0.0;
  double v10 = 0.0;
  if ((unint64_t)(v9 - 3) >= 0xFFFFFFFFFFFFFFFELL)
  {
    [v8 locationInView:v7];
    double v5 = 0.0 / sub_100040EBC();
    double v6 = v2 / sub_100040EE4();
    [v8 translationInView:v7];
    double v39 = 0.0 / sub_100040EBC();
    double v10 = v2 / sub_100040EE4();
    [v8 setTranslation:v7 inView:0.0, 0.0];
  }
  uint64_t v11 = *(void **)(v1 + OBJC_IVAR____TtC17ContinuityDisplay15TouchController_pinch);
  if ((char *)[v11 state] - 1 > (char *)1)
  {
    double v14 = 0.0;
    BOOL v13 = 1;
  }
  else
  {
    [v11 locationInView:v7];
    double v5 = v10 / sub_100040EBC();
    double v6 = v2 / sub_100040EE4();
    [v11 scale];
    BOOL v13 = (*(void *)&v12 & 0x7FF0000000000000) == 0x7FF0000000000000;
    if ((*(void *)&v12 & 0x7FF0000000000000) == 0x7FF0000000000000) {
      double v14 = 0.0;
    }
    else {
      double v14 = v12 + -1.0;
    }
    [v11 setScale:1.0, v12 + -1.0];
  }
  uint64_t v15 = *(void **)(v1 + OBJC_IVAR____TtC17ContinuityDisplay15TouchController_rotate);
  if ((char *)[v15 state] - 1 > (char *)1)
  {
    uint64_t v18 = 0;
    BOOL v17 = 1;
  }
  else
  {
    [v15 locationInView:v7];
    double v5 = v10 / sub_100040EBC();
    double v6 = v2 / sub_100040EE4();
    [v15 rotation];
    BOOL v17 = (v16 & 0x7FF0000000000000) == 0x7FF0000000000000;
    if ((v16 & 0x7FF0000000000000) == 0x7FF0000000000000) {
      uint64_t v18 = 0;
    }
    else {
      uint64_t v18 = v16;
    }
    [v15 setRotation:0.0];
  }
  *(double *)__src = v5;
  *(double *)&__src[1] = v6;
  void __src[2] = v9;
  *(double *)&__src[3] = v39;
  *(double *)&__src[4] = v10;
  unint64_t v36 = (unint64_t)(v9 - 3);
  LOBYTE(__src[5]) = (unint64_t)(v9 - 3) < 0xFFFFFFFFFFFFFFFELL;
  __src[6] = v37;
  *(double *)&__src[7] = v14;
  LOBYTE(__src[8]) = v13;
  __src[9] = v38;
  __src[10] = v18;
  LOBYTE(__src[11]) = v17;
  if ((sub_1000403C4((uint64_t)v4, (uint64_t)__src) & 1) == 0)
  {
    memcpy(v4, __src, 0x59uLL);
    uint64_t v20 = *(void *)(v1 + OBJC_IVAR____TtC17ContinuityDisplay15TouchController_multitouchReport);
    if (v5 > 0.0) {
      double v21 = v5;
    }
    else {
      double v21 = 0.0;
    }
    if (v21 > 1.0) {
      double v21 = 1.0;
    }
    uint64_t v22 = *(void *)&v21;
    sub_10000806C();
    HIDReport.storeValue<A>(_:to:at:logicalMinimum:logicalMaximum:physicalMinimum:physicalMaximum:exponent:)(v22, 0, (uint64_t)&type metadata for UInt16, 1, (uint64_t)&type metadata for UInt16);
    sub_100040F50();
    HIDReport.storeValue<A>(_:to:at:logicalMinimum:logicalMaximum:physicalMinimum:physicalMaximum:exponent:)(v23, v24, (uint64_t)&type metadata for UInt16, 3, (uint64_t)&type metadata for UInt16);
    MultitouchReport.scale.setter();
    if (!v17) {
      uint64_t v18 = remainder(*(long double *)&v18, 6.28318531);
    }
    sub_100040E20();
    HIDReport.storeValue<A>(_:to:at:logicalMinimum:logicalMaximum:physicalMinimum:physicalMaximum:exponent:)(v18, v17, (uint64_t)&type metadata for Int16, 5, (uint64_t)&type metadata for Int16);
    if (v36 >= 0xFFFFFFFFFFFFFFFELL)
    {
      sub_100040F50();
      sub_100040F04(v29, v30, (uint64_t)&type metadata for Int16, 11);
      sub_100040F50();
    }
    else
    {
      uint64_t v25 = sub_100040F60();
      sub_100040F04(v25, v26, (uint64_t)&type metadata for Int16, 11);
      uint64_t v27 = sub_100040F60();
    }
    sub_100040F04(v27, v28, (uint64_t)&type metadata for Int16, 9);
    [a1 timestamp];
    v32.Swift::UInt64 rawValue = HostTime.init(nanoseconds:)(v31 * 1000000000.0).rawValue;
    HostTime.nanoseconds.getter();
    double v34 = (double)v33 * 0.00001;
    if ((~*(void *)&v34 & 0x7FF0000000000000) != 0)
    {
      if (v34 > -9.22337204e18)
      {
        if (v34 < 9.22337204e18)
        {
          uint64_t v35 = (uint64_t)v34;
          Swift::UInt64 rawValue = v32.rawValue;
          sub_1000080D4();
          HIDReport.storeValue<A>(_:to:at:)((uint64_t)&rawValue, (uint64_t)&type metadata for UInt64, 15, (uint64_t)&type metadata for UInt64);
          LOWORD(rawValue) = v35;
          HIDReport.storeValue<A>(_:to:at:)((uint64_t)&rawValue, (uint64_t)&type metadata for UInt16, 13, (uint64_t)&type metadata for UInt16);
          sub_100005B38(v20);
          swift_release();
LABEL_34:
          sub_100040F24();
          return;
        }
LABEL_37:
        __break(1u);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_37;
  }
  sub_100040F24();
  swift_release();
}

void sub_100040A38()
{
}

id sub_100040A78()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TouchController();
  return [super dealloc];
}

uint64_t type metadata accessor for TouchController()
{
  return self;
}

uint64_t sub_100040B7C(uint64_t a1, void *a2)
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    swift_retain();
    swift_unknownObjectRelease();
    char v4 = sub_100005C7C(a2);
    swift_release();
    return v4 & 1;
  }
  return result;
}

void *initializeWithCopy for TouchController.MultitouchState(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x59uLL);
}

uint64_t getEnumTagSinglePayload for TouchController.MultitouchState(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 89)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for TouchController.MultitouchState(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 88) = 0;
    *(void *)uint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 89) = v3;
  return result;
}

ValueMetadata *type metadata accessor for TouchController.MultitouchState()
{
  return &type metadata for TouchController.MultitouchState;
}

id sub_100040CDC(void *a1, uint64_t a2)
{
  uint64_t v4 = a1[3];
  if (v4)
  {
    double v6 = sub_10000BD3C(a1, a1[3]);
    uint64_t v7 = *(void *)(v4 - 8);
    double v8 = __chkstk_darwin(v6);
    double v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, double))(v7 + 16))(v10, v8);
    uint64_t v11 = sub_10005F130();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v4);
    sub_10000B724((uint64_t)a1);
  }
  else
  {
    uint64_t v11 = 0;
  }
  id v12 = [v2 initWithTarget:v11 action:a2];
  swift_unknownObjectRelease();
  return v12;
}

unint64_t sub_100040E20()
{
  unint64_t result = qword_100085048;
  if (!qword_100085048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100085048);
  }
  return result;
}

unint64_t sub_100040E6C()
{
  unint64_t result = qword_100085060;
  if (!qword_100085060)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100085060);
  }
  return result;
}

ValueMetadata *type metadata accessor for TouchController.MultitouchState.Point()
{
  return &type metadata for TouchController.MultitouchState.Point;
}

double sub_100040EBC()
{
  uint64_t v5 = v1;
  uint64_t v6 = v2;
  uint64_t v7 = v3;
  uint64_t v8 = v4;
  return CGRectGetWidth(*(CGRect *)&v5);
}

double sub_100040EE4()
{
  uint64_t v5 = v1;
  uint64_t v6 = v2;
  uint64_t v7 = v3;
  uint64_t v8 = v4;
  return CGRectGetHeight(*(CGRect *)&v5);
}

uint64_t sub_100040F04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return HIDReport.storeValue<A>(_:to:at:logicalMinimum:logicalMaximum:physicalMinimum:physicalMaximum:exponent:)(a1, a2, a3, a4, v4);
}

uint64_t sub_100040F60()
{
  return 0;
}

id sub_100040F78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va, a10);
  return sub_100040CDC((uint64_t *)va, 0);
}

_UNKNOWN **sub_100040F94()
{
  return &off_1000762F8;
}

BOOL static HIDRequest.Request.__derived_enum_equals(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

void HIDRequest.Request.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
}

Swift::Int HIDRequest.Request.hashValue.getter(unsigned __int8 a1)
{
  return sub_10005F200();
}

BOOL sub_100041020(char *a1, char *a2)
{
  return static HIDRequest.Request.__derived_enum_equals(_:_:)(*a1, *a2);
}

Swift::Int sub_10004102C()
{
  return HIDRequest.Request.hashValue.getter(*v0);
}

void sub_100041034(uint64_t a1)
{
  HIDRequest.Request.hash(into:)(a1, *v1);
}

void sub_10004103C(void *a1@<X8>)
{
  *a1 = &off_1000762F8;
}

uint64_t sub_10004104C(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC17ContinuityDisplay17RoundedCornerView_edgeConstraints) = a1;
  return swift_bridgeObjectRelease();
}

id sub_100041064(char a1)
{
  *(void *)&v1[OBJC_IVAR____TtC17ContinuityDisplay17RoundedCornerView_edgeConstraints] = _swiftEmptyArrayStorage;
  v1[OBJC_IVAR____TtC17ContinuityDisplay17RoundedCornerView_isHidding] = 0;
  v1[OBJC_IVAR____TtC17ContinuityDisplay17RoundedCornerView_corner] = a1;
  v9.receiver = v1;
  v9.super_class = (Class)type metadata accessor for RoundedCornerView();
  [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  id v4 = [v3 layer];
  sub_100007F60(0, (unint64_t *)&unk_100084F40);
  id v5 = sub_10003E2AC();
  uint64_t v6 = v5;
  if (v5)
  {
    id v7 = [v5 CGImage];

    if (v7)
    {
      type metadata accessor for CGImage(0);
      uint64_t v6 = (void *)sub_10005F130();
    }
    else
    {
      uint64_t v6 = 0;
    }
  }
  [v4 setContents:v6];
  swift_unknownObjectRelease();
  [v4 setContentsCenter:dbl_100064FB0[a1], dbl_100064F90[a1], 0.5, 0.5];
  [v4 setContentsGravity:kCAGravityResize];
  [v4 setContentsScale:2.0];

  return v3;
}

uint64_t sub_100041228()
{
  uint64_t v0 = self;
  sub_100007F60(0, (unint64_t *)&qword_100084D70);
  swift_bridgeObjectRetain();
  Class isa = sub_10005EAA0().super.isa;
  swift_bridgeObjectRelease();
  [v0 deactivateConstraints:isa];

  Class v2 = sub_10005EAA0().super.isa;
  [v0 activateConstraints:v2];

  uint64_t v3 = swift_bridgeObjectRetain();

  return sub_10004104C(v3);
}

void sub_100041304()
{
  *(void *)&v0[OBJC_IVAR____TtC17ContinuityDisplay17RoundedCornerView_edgeConstraints] = _swiftEmptyArrayStorage;
  v0[OBJC_IVAR____TtC17ContinuityDisplay17RoundedCornerView_isHidding] = 0;

  sub_10005F050();
  __break(1u);
}

void sub_1000413A0()
{
}

id sub_1000413E0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RoundedCornerView();
  return [super dealloc];
}

uint64_t type metadata accessor for RoundedCornerView()
{
  return self;
}

uint64_t getEnumTagSinglePayload for RoundedCornerView.Corner(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFD)
  {
    if (a2 + 3 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 3) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 4;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v5 = v6 - 4;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for RoundedCornerView.Corner(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10004159CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RoundedCornerView.Corner()
{
  return &type metadata for RoundedCornerView.Corner;
}

unint64_t sub_1000415D8()
{
  unint64_t result = qword_100085110;
  if (!qword_100085110)
  {
    sub_100007D84(&qword_100085118);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100085110);
  }
  return result;
}

unint64_t sub_100041630()
{
  unint64_t result = qword_100085120;
  if (!qword_100085120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100085120);
  }
  return result;
}

uint64_t sub_10004167C()
{
  return _swift_deallocClassInstance(v0, 16, 7);
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return self;
}

Swift::Int32 __swiftcall __logMachError(_:)(Swift::Int32 a1)
{
  uint64_t v2 = sub_10005E750();
  sub_100008DCC();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  BOOL v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v21 - v9;
  if (!a1) {
    return a1;
  }
  if (!mach_error_string(a1))
  {
    sub_10005E740();
    uint64_t v16 = sub_10005E720();
    os_log_type_t v17 = sub_10005EC40();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v18 = 134217984;
      if (a1 < 0) {
        goto LABEL_12;
      }
      uint64_t v19 = v18;
      uint64_t v24 = a1;
      sub_10005EE10();
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "mach error: [%lx]", v19, 0xCu);
      sub_100044700();
    }

    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v2);
    return a1;
  }
  sub_10005E740();
  uint64_t v11 = sub_10005E720();
  os_log_type_t v12 = sub_10005EC40();
  if (!os_log_type_enabled(v11, v12))
  {
LABEL_6:

    (*(void (**)(char *, uint64_t))(v4 + 8))(v10, v2);
    return a1;
  }
  uint64_t v13 = swift_slowAlloc();
  uint64_t v22 = swift_slowAlloc();
  uint64_t v24 = v22;
  *(_DWORD *)uint64_t v13 = 134218242;
  if ((a1 & 0x80000000) == 0)
  {
    uint64_t v23 = a1;
    sub_10005EE10();
    *(_WORD *)(v13 + 12) = 2082;
    uint64_t v14 = sub_10005E9D0();
    uint64_t v23 = sub_10000F098(v14, v15, &v24);
    sub_10005EE10();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "mach error: [%lx: %{public}s]", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    sub_100044700();
    swift_slowDealloc();
    goto LABEL_6;
  }
LABEL_12:
  Swift::Int32 result = sub_10005F040();
  __break(1u);
  return result;
}

void *MachPort.null.unsafeMutableAddressor()
{
  return &static MachPort.null;
}

void *MachPort.dead.unsafeMutableAddressor()
{
  return &static MachPort.dead;
}

uint64_t static MachPort.dead.getter()
{
  return 0xFFFFFFFFLL;
}

void sub_1000419C4()
{
  static MachPort.bootstrap = bootstrap_port;
}

int *MachPort.bootstrap.unsafeMutableAddressor()
{
  if (qword_1000870C0 != -1) {
    swift_once();
  }
  return &static MachPort.bootstrap;
}

uint64_t static MachPort.bootstrap.getter()
{
  return sub_100042B7C(qword_1000870C0, (unsigned int *)&static MachPort.bootstrap);
}

EyeCandyCore::MachPort::Right_optional __swiftcall MachPort.Right.init(rawValue:)(Swift::UInt32 rawValue)
{
  if (rawValue >= 5) {
    LOBYTE(rawValue) = 5;
  }
  return (EyeCandyCore::MachPort::Right_optional)rawValue;
}

uint64_t MachPort.Right.rawValue.getter(uint64_t result)
{
  return result;
}

BOOL sub_100041A64(char a1, char a2)
{
  return dword_100065508[a1] == dword_100065508[a2];
}

Swift::Int sub_100041A88()
{
  return sub_100041A90(*v0);
}

Swift::Int sub_100041A90(unsigned __int8 a1)
{
  return sub_10005F200();
}

Swift::Int sub_100041AD8(char a1)
{
  return sub_10005F200();
}

Swift::Int sub_100041B24(char a1)
{
  return sub_10005F200();
}

void sub_100041B78(uint64_t a1)
{
  sub_100041BAC(a1, *v1);
}

void sub_100041B80(uint64_t a1, char a2)
{
}

void sub_100041BAC(uint64_t a1, unsigned __int8 a2)
{
}

void sub_100041BD4(uint64_t a1, char a2)
{
}

Swift::Int sub_100041C08(uint64_t a1)
{
  return sub_100041C60(a1, *v1);
}

Swift::Int sub_100041C10(uint64_t a1, char a2)
{
  return sub_10005F200();
}

Swift::Int sub_100041C60(uint64_t a1, unsigned __int8 a2)
{
  return sub_10005F200();
}

Swift::Int sub_100041CA4(uint64_t a1, char a2)
{
  return sub_10005F200();
}

EyeCandyCore::MachPort::Right_optional sub_100041CEC@<W0>(Swift::UInt32 *a1@<X0>, EyeCandyCore::MachPort::Right_optional *a2@<X8>)
{
  result.value = MachPort.Right.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t sub_100041D18@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result = MachPort.Right.rawValue.getter(*v1);
  *a1 = result;
  return result;
}

EyeCandyCore::MachPort __swiftcall MachPort.init(allocating:)(EyeCandyCore::MachPort::Right allocating)
{
  kern_return_t v2;
  mach_port_name_t name;

  sub_10004471C();
  uint64_t v2 = mach_port_allocate(mach_task_self_, v1, &name);
  __logMachError(_:)(v2);
  return (EyeCandyCore::MachPort)name;
}

uint64_t MachPort.init(bootstrapCheckIn:)(char *service_name, uint64_t a2, char a3)
{
  kern_return_t v4;
  mach_port_t sp;
  uint64_t (*v7)(char *);
  char *v8;
  char v9;
  mach_port_t *p_sp;

  sp = 0;
  p_sp = &sp;
  BOOL v7 = sub_100043980;
  uint64_t v8 = &v9;
  if (a3)
  {
    if (!((unint64_t)service_name >> 32))
    {
      if (service_name >> 11 != 27)
      {
        if (service_name >> 16 <= 0x10)
        {
          sub_100043694(service_name, (uint64_t (*)(uint64_t *))sub_100043988);
          return sp;
        }
        __break(1u);
      }
      __break(1u);
    }
    goto LABEL_11;
  }
  if (!service_name)
  {
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (qword_1000870C0[0] != -1) {
LABEL_12:
  }
    swift_once();
  uint64_t v4 = bootstrap_check_in(static MachPort.bootstrap, service_name, &sp);
  __logMachError(_:)(v4);
  return sp;
}

uint64_t sub_100041EDC(char *service_name, mach_port_t *sp)
{
  kern_return_t v4;
  uint64_t vars8;

  if (qword_1000870C0[0] != -1) {
    swift_once();
  }
  uint64_t v4 = bootstrap_check_in(static MachPort.bootstrap, service_name, sp);

  return __logMachError(_:)(v4);
}

Swift::Void __swiftcall MachPort.deallocate()()
{
  kern_return_t v1;
  uint64_t vars8;

  unsigned __int8 v1 = mach_port_deallocate(mach_task_self_, v0);

  __logMachError(_:)(v1);
}

Swift::Void __swiftcall MachPort.destroy()()
{
  kern_return_t v1;
  uint64_t vars8;

  unsigned __int8 v1 = mach_port_destroy(mach_task_self_, v0);

  __logMachError(_:)(v1);
}

Swift::Void __swiftcall MachPort.modRefs(_:_:)(EyeCandyCore::MachPort::Right a1, Swift::Int32 a2)
{
  kern_return_t v3;
  uint64_t vars8;

  uint64_t v3 = mach_port_mod_refs(mach_task_self_, v2, a1, a2);

  __logMachError(_:)(v3);
}

EyeCandyCore::MachPort::TypeName_optional __swiftcall MachPort.TypeName.init(rawValue:)(Swift::UInt32 rawValue)
{
  if (rawValue == 21) {
    v1.value = EyeCandyCore_MachPort_TypeName_makeSendOnce;
  }
  else {
    v1.value = EyeCandyCore_MachPort_TypeName_unknownDefault;
  }
  if (rawValue == 20) {
    return 0;
  }
  else {
    return v1;
  }
}

uint64_t MachPort.TypeName.rawValue.getter(char a1)
{
  return a1 & 1 | 0x14u;
}

Swift::Int sub_100042034()
{
  return sub_100041AD8(*v0);
}

void sub_10004203C(uint64_t a1)
{
  sub_100041B80(a1, *v1);
}

Swift::Int sub_100042044(uint64_t a1)
{
  return sub_100041CA4(a1, *v1);
}

EyeCandyCore::MachPort::TypeName_optional sub_10004204C@<W0>(Swift::UInt32 *a1@<X0>, EyeCandyCore::MachPort::TypeName_optional *a2@<X8>)
{
  result.value = MachPort.TypeName.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t sub_100042078@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result = MachPort.TypeName.rawValue.getter(*v1);
  *a1 = result;
  return result;
}

EyeCandyCore::MachPort __swiftcall MachPort.insertRight(_:)(EyeCandyCore::MachPort::TypeName a1)
{
  kern_return_t inserted;

  v2.name = v1;
  inserted = mach_port_insert_right(mach_task_self_, v1, v1, a1 & 1 | 0x14);
  __logMachError(_:)(inserted);
  if (inserted) {
    return 0;
  }
  else {
    return v2;
  }
}

BOOL MachPort.isValid.getter(int a1)
{
  return (a1 - 1) < 0xFFFFFFFE;
}

EyeCandyCore::MachPort::Notification_optional __swiftcall MachPort.Notification.init(rawValue:)(Swift::Int32 rawValue)
{
  if ((rawValue - 65) >= 8) {
    return (EyeCandyCore::MachPort::Notification_optional)6;
  }
  else {
    return (EyeCandyCore::MachPort::Notification_optional)(0x504030206060100uLL >> (8 * (rawValue - 65)));
  }
}

uint64_t MachPort.Notification.rawValue.getter(char a1)
{
  return dword_100065508[a1];
}

BOOL sub_100042144(char *a1, char *a2)
{
  return sub_100041A64(*a1, *a2);
}

Swift::Int sub_100042150()
{
  return sub_100041B24(*v0);
}

void sub_100042158(uint64_t a1)
{
  sub_100041BD4(a1, *v1);
}

Swift::Int sub_100042160(uint64_t a1)
{
  return sub_100041C10(a1, *v1);
}

EyeCandyCore::MachPort::Notification_optional sub_100042168@<W0>(Swift::Int32 *a1@<X0>, EyeCandyCore::MachPort::Notification_optional *a2@<X8>)
{
  result.value = MachPort.Notification.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t sub_100042194@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result = MachPort.Notification.rawValue.getter(*v1);
  *a1 = result;
  return result;
}

void *MachPort.TypeMask.send.unsafeMutableAddressor()
{
  return &static MachPort.TypeMask.send;
}

uint64_t static MachPort.TypeMask.send.getter()
{
  return 0x10000;
}

void *MachPort.TypeMask.receive.unsafeMutableAddressor()
{
  return &static MachPort.TypeMask.receive;
}

uint64_t static MachPort.TypeMask.receive.getter()
{
  return 0x20000;
}

void *MachPort.TypeMask.sendOnce.unsafeMutableAddressor()
{
  return &static MachPort.TypeMask.sendOnce;
}

uint64_t static MachPort.TypeMask.sendOnce.getter()
{
  return 0x40000;
}

void *MachPort.TypeMask.portSet.unsafeMutableAddressor()
{
  return &static MachPort.TypeMask.portSet;
}

uint64_t static MachPort.TypeMask.portSet.getter()
{
  return 0x80000;
}

void *MachPort.TypeMask.deadName.unsafeMutableAddressor()
{
  return &static MachPort.TypeMask.deadName;
}

uint64_t static MachPort.TypeMask.deadName.getter()
{
  return 0x100000;
}

void *MachPort.TypeMask.labelH.unsafeMutableAddressor()
{
  return &static MachPort.TypeMask.labelH;
}

uint64_t static MachPort.TypeMask.labelH.getter()
{
  return 0x200000;
}

uint64_t sub_100042238(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    LODWORD(v2) = 0;
    uint64_t v3 = (int *)(a1 + 32);
    do
    {
      int v5 = *v3++;
      int v4 = v5;
      if ((v5 & ~v2) == 0) {
        int v4 = 0;
      }
      uint64_t v2 = v4 | v2;
      --v1;
    }
    while (v1);
  }
  else
  {
    uint64_t v2 = 0;
  }
  swift_bridgeObjectRelease();
  return v2;
}

void *MachPort.TypeMask.sendReceive.unsafeMutableAddressor()
{
  return &static MachPort.TypeMask.sendReceive;
}

uint64_t static MachPort.TypeMask.sendReceive.getter()
{
  return 196608;
}

void *MachPort.TypeMask.sendRights.unsafeMutableAddressor()
{
  return &static MachPort.TypeMask.sendRights;
}

uint64_t static MachPort.TypeMask.sendRights.getter()
{
  return 327680;
}

void *MachPort.TypeMask.portRights.unsafeMutableAddressor()
{
  return &static MachPort.TypeMask.portRights;
}

uint64_t static MachPort.TypeMask.portRights.getter()
{
  return 458752;
}

void *MachPort.TypeMask.portOrDead.unsafeMutableAddressor()
{
  return &static MachPort.TypeMask.portOrDead;
}

uint64_t static MachPort.TypeMask.portOrDead.getter()
{
  return 1507328;
}

void *MachPort.TypeMask.all.unsafeMutableAddressor()
{
  return &static MachPort.TypeMask.all;
}

uint64_t static MachPort.TypeMask.all.getter()
{
  return 2031616;
}

_DWORD *sub_1000422F0@<X0>(_DWORD *result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1000422FC@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result = variable initialization expression of Clock.heartbeat();
  *a1 = result;
  return result;
}

uint64_t sub_100042324@<X0>(unsigned int *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result = sub_100042354(*a1, *v2);
  *a2 = result;
  return result;
}

uint64_t sub_100042354(unsigned int a1, int a2)
{
  return a2 | a1;
}

uint64_t sub_10004235C@<X0>(unsigned int *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result = sub_10004238C(*a1, *v2);
  *a2 = result;
  return result;
}

uint64_t sub_10004238C(unsigned int a1, int a2)
{
  return a2 & a1;
}

uint64_t sub_100042394@<X0>(unsigned int *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result = sub_1000423C4(*a1, *v2);
  *a2 = result;
  return result;
}

uint64_t sub_1000423C4(unsigned int a1, int a2)
{
  return a2 ^ a1;
}

BOOL sub_1000423CC(_DWORD *a1, int *a2)
{
  return sub_1000423D4(a1, *a2);
}

BOOL sub_1000423D4(_DWORD *a1, int a2)
{
  int v3 = *v2 & a2;
  if (v3 != a2) {
    *v2 |= a2;
  }
  *a1 = a2;
  return v3 != a2;
}

unint64_t sub_100042400@<X0>(unsigned int *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result = sub_100042434(*a1);
  *(_DWORD *)a2 = result;
  *(unsigned char *)(a2 + 4) = BYTE4(result) & 1;
  return result;
}

unint64_t sub_100042434(unsigned int a1)
{
  int v2 = *v1;
  int v3 = *v1 & a1;
  if (v3)
  {
    *uint64_t v1 = v2 & ~a1;
    uint64_t v4 = v2 & a1;
  }
  else
  {
    uint64_t v4 = 0;
  }
  return v4 | ((unint64_t)(v3 == 0) << 32);
}

unint64_t sub_100042474@<X0>(unsigned int *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result = sub_1000424A8(*a1);
  *(_DWORD *)a2 = result;
  *(unsigned char *)(a2 + 4) = BYTE4(result) & 1;
  return result;
}

unint64_t sub_1000424A8(unsigned int a1)
{
  int v2 = *v1;
  *v1 |= a1;
  return v2 & a1 | ((unint64_t)((v2 & a1) == 0) << 32);
}

uint64_t sub_1000424D4(unsigned int *a1)
{
  return sub_1000424DC(*a1);
}

uint64_t sub_1000424DC(uint64_t result)
{
  *v1 |= result;
  return result;
}

uint64_t sub_1000424EC(unsigned int *a1)
{
  return sub_1000424F4(*a1);
}

uint64_t sub_1000424F4(uint64_t result)
{
  *v1 &= result;
  return result;
}

uint64_t sub_100042504(unsigned int *a1)
{
  return sub_10004250C(*a1);
}

uint64_t sub_10004250C(uint64_t result)
{
  *v1 ^= result;
  return result;
}

uint64_t sub_10004251C@<X0>(int *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result = sub_10004254C(*a1, *v2);
  *a2 = result;
  return result;
}

uint64_t sub_10004254C(int a1, int a2)
{
  return a2 & ~a1;
}

BOOL sub_100042554(int *a1)
{
  return sub_100042560(*a1, *v1);
}

BOOL sub_100042560(int a1, int a2)
{
  return (a2 & ~a1) == 0;
}

BOOL sub_10004256C(int *a1)
{
  return sub_100042578(*a1, *v1);
}

BOOL sub_100042578(int a1, int a2)
{
  return (a2 & a1) == 0;
}

BOOL sub_100042584(int *a1)
{
  return sub_100042590(*a1, *v1);
}

BOOL sub_100042590(int a1, int a2)
{
  return (a1 & ~a2) == 0;
}

BOOL sub_10004259C()
{
  return sub_1000425A4(*v0);
}

BOOL sub_1000425A4(int a1)
{
  return a1 == 0;
}

uint64_t sub_1000425B0(unsigned int *a1)
{
  return sub_1000425B8(*a1);
}

uint64_t sub_1000425B8(uint64_t result)
{
  *v1 &= ~result;
  return result;
}

_DWORD *sub_1000425C8@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(unsigned char *)(a2 + 4) = 0;
  return result;
}

void sub_1000425D8(_DWORD *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_1000425E4@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result = sub_100042238(a1);
  *a2 = result;
  return result;
}

uint64_t MachPort.type.getter()
{
  kern_return_t v1;
  mach_port_type_t ptype;

  sub_10004471C();
  uint64_t v1 = mach_port_type(mach_task_self_, v0, &ptype);
  __logMachError(_:)(v1);
  return ptype;
}

mach_port_context_t MachPort.context.getter(mach_port_name_t name)
{
  kern_return_t context;
  mach_port_context_t v3;

  int v3 = 0;
  context = mach_port_get_context(mach_task_self_, name, &v3);
  __logMachError(_:)(context);
  return v3;
}

uint64_t MachPort.context.setter(mach_port_context_t context, mach_port_name_t a2)
{
  kern_return_t v2;
  uint64_t vars8;

  int v2 = mach_port_set_context(mach_task_self_, a2, context);

  return __logMachError(_:)(v2);
}

uint64_t (*MachPort.context.modify(uint64_t a1, mach_port_name_t a2))(uint64_t a1)
{
  kern_return_t context;

  *(_DWORD *)(a1 + 16) = a2;
  *(void *)(a1 + 8) = 0;
  int v3 = (void *)(a1 + 8);
  context = mach_port_get_context(mach_task_self_, a2, (mach_port_context_t *)(a1 + 8));
  __logMachError(_:)(context);
  *(void *)a1 = *v3;
  return sub_1000427B4;
}

uint64_t sub_1000427B4(uint64_t a1)
{
  kern_return_t v1;
  uint64_t vars8;

  uint64_t v1 = mach_port_set_context(mach_task_self_, *(_DWORD *)(a1 + 16), *(void *)a1);

  return __logMachError(_:)(v1);
}

uint64_t MachPort.setContext<A>(_:)(mach_port_context_t a1, mach_port_name_t name)
{
  kern_return_t v5;
  kern_return_t v7;
  uint64_t vars8;

  if (a1)
  {
    mach_port_t v4 = mach_task_self_;
    swift_unknownObjectRetain();
    int v5 = mach_port_set_context(v4, name, a1);
    __logMachError(_:)(v5);
    return swift_unknownObjectRelease();
  }
  else
  {
    BOOL v7 = mach_port_set_context(mach_task_self_, name, 0);
    return __logMachError(_:)(v7);
  }
}

uint64_t MachPort.getContext<A>()(mach_port_name_t name)
{
  kern_return_t context;
  uint64_t result;
  uint64_t v3;

  int v3 = 0;
  context = mach_port_get_context(mach_task_self_, name, (mach_port_context_t *)&v3);
  __logMachError(_:)(context);
  uint64_t result = v3;
  if (v3) {
    return swift_unknownObjectRetain();
  }
  return result;
}

void MachPort.hash(into:)(uint64_t a1, unsigned int a2)
{
}

Swift::Int MachPort.hashValue.getter(unsigned int a1)
{
  return sub_10005F200();
}

Swift::Int sub_100042974()
{
  return MachPort.hashValue.getter(*v0);
}

void sub_10004297C(uint64_t a1)
{
  MachPort.hash(into:)(a1, *v1);
}

Swift::Int sub_100042984()
{
  unint64_t v1 = *v0;
  sub_10005F1C0();
  sub_10005F1D0(v1 >> 8);
  return sub_10005F200();
}

EyeCandyCore::MachSemaphore __swiftcall MachSemaphore.init(_:)(Swift::Int32 a1)
{
  kern_return_t v2;
  semaphore_t semaphore;

  sub_10004471C();
  int v2 = semaphore_create(mach_task_self_, &semaphore, 0, v1);
  __logMachError(_:)(v2);
  return (EyeCandyCore::MachSemaphore)semaphore;
}

Swift::Void __swiftcall MachSemaphore.destroy()()
{
  kern_return_t v1;
  uint64_t vars8;

  int v1 = semaphore_destroy(mach_task_self_, v0);

  __logMachError(_:)(v1);
}

uint64_t static MachSemaphore.with(_:_:)(uint64_t a1, void (*a2)(void))
{
  kern_return_t v4;
  semaphore_t v5;
  kern_return_t v6;
  semaphore_t semaphore;

  sub_10004471C();
  mach_port_t v4 = semaphore_create(mach_task_self_, &semaphore, 0, v3);
  __logMachError(_:)(v4);
  int v5 = semaphore;
  a2(semaphore);
  uint64_t v6 = semaphore_destroy(mach_task_self_, v5);
  return __logMachError(_:)(v6);
}

uint64_t sub_100042B0C()
{
  kern_return_t v0;
  uint64_t result;
  mach_port_name_t name;

  sub_10004471C();
  semaphore_t v0 = mach_port_allocate(mach_task_self_, 1u, &name);
  uint64_t result = __logMachError(_:)(v0);
  dword_100088FE4 = name;
  return result;
}

uint64_t sub_100042B7C(void *a1, unsigned int *a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  return *a2;
}

uint64_t sub_100042BB8()
{
  uint64_t result = sub_100042BD8();
  qword_100088FE8 = result;
  return result;
}

uint64_t sub_100042BD8()
{
  uint64_t v0 = sub_10005E7B0();
  sub_100008DCC();
  uint64_t v2 = v1;
  __chkstk_darwin(v3);
  sub_10003FE70();
  uint64_t v6 = v5 - v4;
  uint64_t v7 = sub_10005E7E0();
  sub_100008DCC();
  uint64_t v9 = v8;
  __chkstk_darwin(v10);
  sub_10003FE70();
  uint64_t v13 = v12 - v11;
  sub_100007F60(0, (unint64_t *)&unk_100084400);
  if (qword_1000879F0 != -1) {
    swift_once();
  }
  sub_100007F60(0, (unint64_t *)&qword_100084110);
  uint64_t v14 = (void *)sub_10005EC90();
  uint64_t v15 = sub_10005ED10();

  swift_getObjectType();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v15;
  aBlock[4] = sub_10004457C;
  void aBlock[5] = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10000C5B0;
  void aBlock[3] = &unk_100078288;
  os_log_type_t v17 = _Block_copy(aBlock);
  swift_unknownObjectRetain();
  sub_10005E7D0();
  sub_10003E1A8();
  sub_10005ED20();
  _Block_release(v17);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v6, v0);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v13, v7);
  swift_release();
  sub_10005ED60();
  return v15;
}

uint64_t sub_100042E40()
{
  sub_100007D1C(&qword_100085210);
  sub_1000444F8();
  uint64_t result = sub_10005E890();
  qword_100087A08 = result;
  return result;
}

BOOL sub_100042E94(uint64_t a1, uint64_t a2)
{
  return dword_100065508[(char)a1] == dword_100065508[(char)a2] && HIDWORD(a1) == HIDWORD(a2);
}

void sub_100042EC4(uint64_t a1, unint64_t a2)
{
}

Swift::Int sub_100042F00(unint64_t a1)
{
  return sub_10005F200();
}

Swift::Int sub_100042F5C()
{
  return sub_100042F00(*v0 | ((unint64_t)*((unsigned int *)v0 + 1) << 32));
}

void sub_100042F6C(uint64_t a1)
{
  sub_100042EC4(a1, *v1 | ((unint64_t)*((unsigned int *)v1 + 1) << 32));
}

Swift::Int sub_100042F7C()
{
  uint64_t v1 = *v0;
  int v2 = *((_DWORD *)v0 + 1);
  sub_10005F1C0();
  sub_10005F1D0(qword_1000654D8[v1] | v2 & 0xFFFFFF00);
  return sub_10005F200();
}

BOOL sub_100042FD4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_100042E94(*a1 | ((unint64_t)*((unsigned int *)a1 + 1) << 32), *a2 | ((unint64_t)*((unsigned int *)a2 + 1) << 32));
}

uint64_t sub_100042FF0(char a1, mach_port_mscount_t sync, mach_port_name_t name)
{
  kern_return_t v8;
  uint64_t result;
  kern_return_t v10;
  mach_port_t previous;

  mach_msg_id_t v4 = 70;
  int v5 = 65;
  mach_port_t v7 = name;
  switch(a1)
  {
    case 1:
      int v5 = 66;
      goto LABEL_6;
    case 2:
      int v5 = 69;
      goto LABEL_6;
    case 3:
      goto LABEL_13;
    case 4:
      mach_msg_id_t v4 = 71;
      mach_port_t v7 = name;
      goto LABEL_13;
    case 5:
      int v5 = 72;
      goto LABEL_6;
    default:
LABEL_6:
      if (qword_1000879F0 != -1) {
        swift_once();
      }
      mach_port_t v7 = dword_100088FE4;
      if (dword_100088FE4 == name)
      {
        mach_port_t v7 = name;
      }
      else if (qword_1000879F8 != -1)
      {
        swift_once();
      }
      mach_msg_id_t v4 = v5;
LABEL_13:
      previous = 0;
      uint64_t v8 = mach_port_request_notification(mach_task_self_, name, v4, sync, v7, 0x15u, &previous);
      uint64_t result = __logMachError(_:)(v8);
      if (previous + 1 >= 2)
      {
        uint64_t v10 = mach_port_mod_refs(mach_task_self_, previous, 2u, -1);
        return __logMachError(_:)(v10);
      }
      return result;
  }
}

uint64_t MachPort.addNotification(_:sync:_:)(unsigned __int8 a1, mach_port_mscount_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (qword_100087A00 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v10 = a1 | (unint64_t)(a5 << 32);
  uint64_t v11 = sub_100043394(v10, qword_100087A08);
  swift_endAccess();
  if (v11)
  {
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = a3;
    *(void *)(v12 + 24) = a4;
    swift_retain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = (uint64_t)sub_100043778(0, *(void *)(v11 + 16) + 1, 1, v11);
    }
    unint64_t v14 = *(void *)(v11 + 16);
    unint64_t v13 = *(void *)(v11 + 24);
    if (v14 >= v13 >> 1) {
      uint64_t v11 = (uint64_t)sub_100043778((char *)(v13 > 1), v14 + 1, 1, v11);
    }
    *(void *)(v11 + 16) = v14 + 1;
    uint64_t v15 = v11 + 16 * v14;
    *(void *)(v15 + 32) = sub_1000439F4;
    *(void *)(v15 + 40) = v12;
  }
  else
  {
    sub_100042FF0(a1, a2, a5);
    sub_100007D1C(&qword_1000851C0);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_100064590;
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = a3;
    *(void *)(v17 + 24) = a4;
    *(void *)(v16 + 32) = sub_1000446E0;
    *(void *)(v16 + 40) = v17;
    swift_retain();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  uint64_t v18 = swift_bridgeObjectRetain();
  sub_100043C10(v18, v10);
  swift_endAccess();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100043394(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16) && (sub_100043A20(a1 & 0xFFFFFFFF000000FFLL), (v2 & 1) != 0)) {
    return swift_bridgeObjectRetain();
  }
  else {
    return 0;
  }
}

uint64_t sub_1000433DC(unsigned int *a1, int *a2)
{
  kern_return_t v17;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  _DWORD v22[6];

  uint64_t v4 = sub_10005E750();
  sub_100008DCC();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_10003FE70();
  uint64_t v10 = v9 - v8;
  Swift::Int32 v11 = a1[5];
  *a2 = *a1 & 0x1F;
  LODWORD(v8) = a1[2];
  a2[1] = 36;
  a2[2] = v8;
  a2[3] = 0;
  if (!__OFADD__(v11, 100))
  {
    a2[4] = 0;
    a2[5] = v11 + 100;
    LOBYTE(a2) = MachPort.Notification.init(rawValue:)(v11);
    switch((char)a2)
    {
      case 2:
        uint64_t v12 = a1 + 7;
        goto LABEL_6;
      case 3:
      case 4:
        uint64_t v12 = a1 + 3;
        goto LABEL_6;
      case 6:
        sub_10005E740();
        uint64_t v19 = sub_10005E720();
        uint64_t v20 = sub_10005EC40();
        if (os_log_type_enabled(v19, v20))
        {
          uint64_t v21 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)uint64_t v21 = 67109120;
          v22[0] = v11;
          sub_10005EE10();
          _os_log_impl((void *)&_mh_execute_header, v19, v20, "unexpected mach notification: %d", v21, 8u);
          sub_100044700();
        }

        (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v10, v4);
        return 0;
      default:
        uint64_t v12 = a1 + 8;
LABEL_6:
        uint64_t v4 = *v12;
        if ((v4 + 1) < 2) {
          return 1;
        }
        if (qword_100087A00 == -1) {
          goto LABEL_8;
        }
        goto LABEL_20;
    }
  }
  __break(1u);
LABEL_20:
  swift_once();
LABEL_8:
  swift_beginAccess();
  uint64_t v13 = sub_100043B30(a2 | (unint64_t)(v4 << 32));
  swift_endAccess();
  if (v13)
  {
    uint64_t v14 = *(void *)(v13 + 16);
    if (v14)
    {
      uint64_t v15 = v13 + 40;
      do
      {
        uint64_t v16 = *(void (**)(_DWORD *))(v15 - 8);
        v22[0] = v4;
        swift_retain();
        v16(v22);
        swift_release();
        v15 += 16;
        --v14;
      }
      while (v14);
    }
    swift_bridgeObjectRelease();
  }
  if (a2 == 5)
  {
    uint64_t v17 = mach_port_deallocate(mach_task_self_, v4);
    __logMachError(_:)(v17);
  }
  return 1;
}

uint64_t sub_100043694(unsigned int a1, uint64_t (*a2)(uint64_t *))
{
  if (a1 >= 0x80)
  {
    int v4 = (a1 & 0x3F) << 8;
    if (a1 >= 0x800)
    {
      int v5 = (v4 | (a1 >> 6) & 0x3F) << 8;
      int v6 = (((v5 | (a1 >> 12) & 0x3F) << 8) | (a1 >> 18)) - 2122219023;
      unsigned int v2 = (v5 | (a1 >> 12)) + 8487393;
      if (HIWORD(a1)) {
        unsigned int v2 = v6;
      }
    }
    else
    {
      unsigned int v2 = (v4 | (a1 >> 6)) + 33217;
    }
  }
  else
  {
    unsigned int v2 = a1 + 1;
  }
  uint64_t v7 = (v2 + 0xFEFEFEFEFEFEFFLL) & ~(-1 << (8 * (4 - (__clz(v2) >> 3))));
  return a2(&v7);
}

char *sub_100043778(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100007D1C(&qword_1000851C0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 16);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  if (v5)
  {
    sub_10000AD78((char *)(a4 + 32), v8, v12);
    *(void *)(a4 + 16) = 0;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100043868(0, v8, (unint64_t)v12, a4);
  }
  return v10;
}

uint64_t sub_100043868(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_100007D1C(&qword_100085218);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_10005F0B0();
  __break(1u);
  return result;
}

uint64_t sub_100043980(char *a1)
{
  return sub_100041EDC(a1, *(mach_port_t **)(v1 + 16));
}

uint64_t sub_100043988(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(v1 + 16))();
  }
  __break(1u);
  return result;
}

uint64_t sub_1000439BC()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000439F4(unsigned int *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

unint64_t sub_100043A20(unint64_t a1)
{
  sub_10005F1C0();
  sub_10005F1D0(qword_1000654D8[(char)a1] | (a1 >> 40 << 8));
  Swift::Int v2 = sub_10005F200();

  return sub_100043AA0(a1 & 0xFFFFFFFF000000FFLL, v2);
}

unint64_t sub_100043AA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v6 = ~v4;
    do
    {
      uint64_t v7 = (char *)(*(void *)(v2 + 48) + 8 * result);
      uint64_t v8 = *v7;
      int v9 = *((_DWORD *)v7 + 1);
      if (dword_100065508[v8] == dword_100065508[(char)a1] && v9 == HIDWORD(a1)) {
        break;
      }
      unint64_t result = (result + 1) & v6;
    }
    while (((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

uint64_t sub_100043B30(uint64_t a1)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_100043A20(a1 & 0xFFFFFFFF000000FFLL);
  if ((v4 & 1) == 0) {
    return 0;
  }
  unint64_t v5 = v3;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v11 = *v1;
  uint64_t v7 = *v1;
  *uint64_t v1 = 0x8000000000000000;
  Swift::Int v8 = *(void *)(v7 + 24);
  sub_100007D1C(&qword_100085208);
  sub_10005F020(isUniquelyReferenced_nonNull_native, v8);
  uint64_t v9 = *(void *)(*(void *)(v11 + 56) + 8 * v5);
  sub_100007D1C(&qword_100085210);
  sub_1000444F8();
  sub_10005F030();
  *uint64_t v2 = v11;
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_100043C10(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = v2;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = *v3;
  uint64_t *v3 = 0x8000000000000000;
  sub_100044398(a1, a2 & 0xFFFFFFFF000000FFLL, isUniquelyReferenced_nonNull_native);
  uint64_t *v3 = v8;

  return swift_bridgeObjectRelease();
}

unint64_t sub_100043C94()
{
  unint64_t result = qword_1000851C8;
  if (!qword_1000851C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000851C8);
  }
  return result;
}

unint64_t sub_100043CE4()
{
  unint64_t result = qword_1000851D0;
  if (!qword_1000851D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000851D0);
  }
  return result;
}

unint64_t sub_100043D34()
{
  unint64_t result = qword_1000851D8;
  if (!qword_1000851D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000851D8);
  }
  return result;
}

unint64_t sub_100043D84()
{
  unint64_t result = qword_1000851E0;
  if (!qword_1000851E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000851E0);
  }
  return result;
}

unint64_t sub_100043DD4()
{
  unint64_t result = qword_1000851E8;
  if (!qword_1000851E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000851E8);
  }
  return result;
}

unint64_t sub_100043E24()
{
  unint64_t result = qword_1000851F0;
  if (!qword_1000851F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000851F0);
  }
  return result;
}

unint64_t sub_100043E74()
{
  unint64_t result = qword_1000851F8;
  if (!qword_1000851F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000851F8);
  }
  return result;
}

unint64_t sub_100043EC4()
{
  unint64_t result = qword_100085200;
  if (!qword_100085200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100085200);
  }
  return result;
}

void type metadata accessor for MachPort()
{
}

uint64_t getEnumTagSinglePayload for MachPort.Right(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return sub_1000446F8(-1);
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return sub_1000446F8((*a1 | (v4 << 8)) - 5);
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return sub_1000446F8((*a1 | (v4 << 8)) - 5);
    }
    int v4 = a1[1];
    if (a1[1]) {
      return sub_1000446F8((*a1 | (v4 << 8)) - 5);
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return sub_1000446F8(v8);
}

unsigned char *storeEnumTagSinglePayload for MachPort.Right(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        unint64_t result = (unsigned char *)sub_100044738((uint64_t)result, v6);
        break;
      case 2:
        unint64_t result = (unsigned char *)sub_100044728((uint64_t)result, v6);
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10004405CLL);
      case 4:
        unint64_t result = (unsigned char *)sub_100044730((uint64_t)result, v6);
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          unint64_t result = sub_1000446F0(result, a2 + 4);
        break;
    }
  }
  return result;
}

void type metadata accessor for MachPort.Right()
{
}

uint64_t getEnumTagSinglePayload for MachPort.TypeName(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return sub_1000446F8(-1);
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return sub_1000446F8((*a1 | (v4 << 8)) - 2);
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return sub_1000446F8((*a1 | (v4 << 8)) - 2);
    }
    int v4 = a1[1];
    if (a1[1]) {
      return sub_1000446F8((*a1 | (v4 << 8)) - 2);
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return sub_1000446F8(v8);
}

unsigned char *storeEnumTagSinglePayload for MachPort.TypeName(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        unint64_t result = (unsigned char *)sub_100044738((uint64_t)result, v6);
        break;
      case 2:
        unint64_t result = (unsigned char *)sub_100044728((uint64_t)result, v6);
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000441D0);
      case 4:
        unint64_t result = (unsigned char *)sub_100044730((uint64_t)result, v6);
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          unint64_t result = sub_1000446F0(result, a2 + 1);
        break;
    }
  }
  return result;
}

unsigned char *sub_1000441F8(unsigned char *a1, char a2)
{
  return sub_1000446F0(a1, a2 & 1);
}

void type metadata accessor for MachPort.TypeName()
{
}

uint64_t getEnumTagSinglePayload for MachPort.Notification(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return sub_1000446F8(-1);
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return sub_1000446F8((*a1 | (v4 << 8)) - 6);
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return sub_1000446F8((*a1 | (v4 << 8)) - 6);
    }
    int v4 = a1[1];
    if (a1[1]) {
      return sub_1000446F8((*a1 | (v4 << 8)) - 6);
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return sub_1000446F8(v8);
}

unsigned char *storeEnumTagSinglePayload for MachPort.Notification(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        unint64_t result = (unsigned char *)sub_100044738((uint64_t)result, v6);
        break;
      case 2:
        unint64_t result = (unsigned char *)sub_100044728((uint64_t)result, v6);
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10004434CLL);
      case 4:
        unint64_t result = (unsigned char *)sub_100044730((uint64_t)result, v6);
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          unint64_t result = sub_1000446F0(result, a2 + 5);
        break;
    }
  }
  return result;
}

void type metadata accessor for MachPort.Notification()
{
}

void type metadata accessor for MachPort.TypeMask()
{
}

void type metadata accessor for MachSemaphore()
{
}

unint64_t sub_100044398(uint64_t a1, uint64_t a2, char a3)
{
  unsigned int v4 = (void **)v3;
  BOOL v7 = (void *)*v3;
  unint64_t v8 = a2 & 0xFFFFFFFF000000FFLL;
  unint64_t v9 = sub_100043A20(a2 & 0xFFFFFFFF000000FFLL);
  uint64_t v11 = v7[2];
  BOOL v12 = (v10 & 1) == 0;
  Swift::Int v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_11;
  }
  unint64_t v14 = v9;
  char v15 = v10;
  sub_100007D1C(&qword_100085208);
  if (!sub_10005F020(a3 & 1, v13)) {
    goto LABEL_5;
  }
  unint64_t v16 = sub_100043A20(v8);
  if ((v15 & 1) != (v17 & 1))
  {
LABEL_11:
    unint64_t result = sub_10005F1A0();
    __break(1u);
    return result;
  }
  unint64_t v14 = v16;
LABEL_5:
  uint64_t v18 = *v4;
  if (v15)
  {
    uint64_t v19 = v18[7];
    unint64_t result = swift_bridgeObjectRelease();
    *(void *)(v19 + 8 * v14) = a1;
  }
  else
  {
    return sub_1000444A8(v14, v8, a1, v18);
  }
  return result;
}

unint64_t sub_1000444A8(unint64_t result, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(result >> 6) + 8] |= 1 << result;
  uint64_t v4 = a4[6] + 8 * result;
  *(unsigned char *)uint64_t v4 = a2;
  *(_DWORD *)(v4 + 4) = HIDWORD(a2);
  *(void *)(a4[7] + 8 * result) = a3;
  uint64_t v5 = a4[2];
  BOOL v6 = __OFADD__(v5, 1);
  uint64_t v7 = v5 + 1;
  if (v6) {
    __break(1u);
  }
  else {
    a4[2] = v7;
  }
  return result;
}

unint64_t sub_1000444F8()
{
  unint64_t result = qword_1000878D0[0];
  if (!qword_1000878D0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1000878D0);
  }
  return result;
}

uint64_t sub_100044544()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10004457C()
{
  self;
  swift_dynamicCastObjCClassUnconditional();
  Swift::Int32 v0 = dispatch_mig_server();

  return __logMachError(_:)(v0);
}

uint64_t sub_1000445E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000445F8()
{
  return swift_release();
}

void *sub_100044600(void *result, void *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t sub_10004460C(unsigned __int8 *a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFB && a1[8]) {
      return sub_1000446F8(*(_DWORD *)a1 + 250);
    }
    unsigned int v3 = *a1;
    BOOL v4 = v3 >= 6;
    int v5 = v3 - 6;
    if (!v4) {
      return sub_1000446F8(-1);
    }
  }
  else
  {
    int v5 = -1;
  }
  return sub_1000446F8(v5);
}

unsigned char *sub_100044644(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFA)
  {
    *(void *)unint64_t result = a2 - 251;
    if (a3 >= 0xFB) {
      result[8] = 1;
    }
  }
  else
  {
    if (a3 >= 0xFB) {
      result[8] = 0;
    }
    if (a2) {
      return sub_1000446F0(result, a2 + 5);
    }
  }
  return result;
}

void type metadata accessor for MachPort.NotificationKey()
{
}

unint64_t sub_100044690()
{
  unint64_t result = qword_100087960[0];
  if (!qword_100087960[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100087960);
  }
  return result;
}

unsigned char *sub_1000446F0@<X0>(unsigned char *result@<X0>, char a2@<W8>)
{
  *unint64_t result = a2;
  return result;
}

uint64_t sub_1000446F8@<X0>(int a1@<W8>)
{
  return (a1 + 1);
}

uint64_t sub_100044700()
{
  return swift_slowDealloc();
}

uint64_t sub_100044728@<X0>(uint64_t result@<X0>, __int16 a2@<W8>)
{
  *(_WORD *)(result + 1) = a2;
  return result;
}

uint64_t sub_100044730@<X0>(uint64_t result@<X0>, int a2@<W8>)
{
  *(_DWORD *)(result + 1) = a2;
  return result;
}

uint64_t sub_100044738@<X0>(uint64_t result@<X0>, char a2@<W8>)
{
  *(unsigned char *)(result + 1) = a2;
  return result;
}

uint64_t static DispatchTimeInterval.seconds(_:)@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  if (a2 < 0.0) {
    goto LABEL_39;
  }
  if (a2 >= 9223372040.0)
  {
    if (a2 >= 9.22337204e12)
    {
      if (a2 >= 9.22337204e15)
      {
        sub_100046298();
        if (v6)
        {
          sub_1000462A8();
          if (v4)
          {
LABEL_37:
            __break(1u);
            goto LABEL_38;
          }
          if (v12 <= -9.22337204e18)
          {
LABEL_38:
            __break(1u);
LABEL_39:
            uint64_t result = sub_10005F050();
            __break(1u);
            return result;
          }
          sub_1000465AC(v12);
          uint64_t v7 = (unsigned int *)&enum case for DispatchTimeInterval.seconds(_:);
        }
        else
        {
          uint64_t v7 = (unsigned int *)&enum case for DispatchTimeInterval.never(_:);
        }
      }
      else
      {
        sub_1000462A8();
        if (v4)
        {
LABEL_34:
          __break(1u);
          goto LABEL_35;
        }
        if (v10 <= -9.22337204e18)
        {
LABEL_35:
          __break(1u);
LABEL_36:
          __break(1u);
          goto LABEL_37;
        }
        sub_100046298();
        if (!v6) {
          goto LABEL_36;
        }
        sub_1000465AC(v11);
        uint64_t v7 = (unsigned int *)&enum case for DispatchTimeInterval.milliseconds(_:);
      }
    }
    else
    {
      sub_1000462A8();
      if (v4)
      {
LABEL_31:
        __break(1u);
        goto LABEL_32;
      }
      if (v8 <= -9.22337204e18)
      {
LABEL_32:
        __break(1u);
LABEL_33:
        __break(1u);
        goto LABEL_34;
      }
      sub_100046298();
      if (!v6) {
        goto LABEL_33;
      }
      sub_1000465AC(v9);
      uint64_t v7 = (unsigned int *)&enum case for DispatchTimeInterval.microseconds(_:);
    }
    goto LABEL_25;
  }
  sub_1000462A8();
  if (v4)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v3 <= -9.22337204e18)
  {
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  sub_100046298();
  if (!v6) {
    goto LABEL_30;
  }
  sub_1000465AC(v5);
  uint64_t v7 = (unsigned int *)&enum case for DispatchTimeInterval.nanoseconds(_:);
LABEL_25:
  uint64_t v13 = *v7;
  uint64_t v14 = sub_10005E7A0();
  char v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104);

  return v15(a1, v13, v14);
}

Swift::Void __swiftcall OS_dispatch_source_timer.reset(_:)(Swift::Double a1)
{
  sub_1000460E4();
  uint64_t v3 = sub_10005E7A0();
  sub_100008DCC();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_10004631C();
  __chkstk_darwin(v7);
  sub_10004656C();
  sub_100008DCC();
  uint64_t v9 = v8;
  __chkstk_darwin(v10);
  sub_100046300();
  __chkstk_darwin(v11);
  sub_10004654C();
  sub_10005E840();
  double v12 = *(void (**)(void))(v9 + 8);
  sub_10004625C();
  v12();
  (*(void (**)(uint64_t, void, uint64_t))(v5 + 104))(v2, enum case for DispatchTimeInterval.never(_:), v3);
  sub_100016180(v1);
  sub_1000463C0();
  uint64_t v13 = *(void (**)(void))(v5 + 8);
  sub_1000462B8();
  v13();
  sub_1000462B8();
  v13();
  sub_10004625C();
  v12();
  sub_100046100();
}

Swift::Void __swiftcall OS_dispatch_source_timer.reset(_:interval:)(Swift::Double _, Swift::Double interval)
{
  sub_1000460E4();
  double v5 = v4;
  sub_10005E7A0();
  sub_100008DCC();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_10004631C();
  __chkstk_darwin(v9);
  sub_10004656C();
  sub_100008DCC();
  uint64_t v11 = v10;
  __chkstk_darwin(v12);
  sub_100046300();
  __chkstk_darwin(v13);
  sub_10004654C();
  sub_10005E840();
  uint64_t v14 = *(void (**)(void))(v11 + 8);
  sub_10004625C();
  v14();
  static DispatchTimeInterval.seconds(_:)(v3, v5);
  sub_100016180(v2);
  sub_1000463C0();
  char v15 = *(void (**)(void))(v7 + 8);
  sub_1000462B8();
  v15();
  sub_1000462B8();
  v15();
  sub_10004625C();
  v14();
  sub_100046100();
}

uint64_t sub_100044BF8()
{
  uint64_t v0 = sub_10005E7C0();
  sub_100008DCC();
  uint64_t v2 = v1;
  __chkstk_darwin(v3);
  double v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007F60(0, (unint64_t *)&qword_100084110);
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v5, enum case for DispatchQoS.QoSClass.default(_:), v0);
  uint64_t v6 = sub_10005ECD0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v5, v0);
  static OS_dispatch_queue.defaultPrioritCGFloat y = v6;
  return result;
}

uint64_t *OS_dispatch_queue.defaultPriority.unsafeMutableAddressor()
{
  if (qword_100087A10 != -1) {
    swift_once();
  }
  return &static OS_dispatch_queue.defaultPriority;
}

id static OS_dispatch_queue.defaultPriority.getter()
{
  if (qword_100087A10 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)static OS_dispatch_queue.defaultPriority;

  return v0;
}

void OS_dispatch_queue.after(_:closure:)()
{
  sub_1000460E4();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v4 = sub_10005E7B0();
  sub_100008DCC();
  uint64_t v26 = v5;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005E7E0();
  sub_100008DCC();
  uint64_t v24 = v10;
  uint64_t v25 = v9;
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10005E800();
  sub_100008DCC();
  uint64_t v15 = v14;
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v23 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v23 - v20;
  sub_10005E7F0();
  sub_10005E840();
  uint64_t v23 = *(void (**)(char *, uint64_t))(v15 + 8);
  v23(v18, v13);
  v28[4] = v3;
  v28[5] = v1;
  v28[0] = _NSConcreteStackBlock;
  v28[1] = 1107296256;
  void v28[2] = sub_10000C5B0;
  v28[3] = &unk_100078330;
  uint64_t v22 = _Block_copy(v28);
  swift_retain();
  sub_10005E7D0();
  uint64_t v27 = _swiftEmptyArrayStorage;
  sub_1000453F0((unint64_t *)&qword_1000848D0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100007D1C((uint64_t *)&unk_100083FD0);
  sub_100007E14((unint64_t *)&qword_1000848E0, (uint64_t *)&unk_100083FD0);
  sub_10005EEE0();
  sub_10005EC70();
  _Block_release(v22);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v8, v4);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v12, v25);
  v23(v21, v13);
  swift_release();
  sub_100046100();
}

uint64_t sub_10004506C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10004507C()
{
  return swift_release();
}

void OS_dispatch_queue.once(_:closure:)()
{
  sub_1000460E4();
  sub_1000463FC(v1, v2);
  sub_100008DCC();
  uint64_t v47 = v4;
  uint64_t v48 = v3;
  __chkstk_darwin(v3);
  Swift::String v46 = (uint64_t *)((char *)v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100046194();
  __chkstk_darwin(v6);
  sub_100046450(v7, v8, v9, v10, v11, v12, v13, v14, v45[0]);
  v45[9] = sub_10005E800();
  sub_100008DCC();
  uint64_t v49 = v15;
  __chkstk_darwin(v16);
  sub_1000460C4(v17, v45[0]);
  __chkstk_darwin(v18);
  sub_100046144(v19, v20, v21, v22, v23, v24, v25, v26, v45[0]);
  sub_100008DCC();
  v45[3] = v28;
  v45[4] = v27;
  __chkstk_darwin(v27);
  v45[2] = sub_10004611C();
  sub_100008DCC();
  __chkstk_darwin(v29);
  sub_100046338();
  sub_100008DCC();
  __chkstk_darwin(v30);
  sub_100046168();
  sub_100007F60(0, (unint64_t *)&unk_100084400);
  v50[0] = _swiftEmptyArrayStorage;
  sub_1000453F0((unint64_t *)&unk_100084F50, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_source.TimerFlags);
  sub_100007D1C((uint64_t *)&unk_100084410);
  sub_100007E14((unint64_t *)&unk_100084F60, (uint64_t *)&unk_100084410);
  sub_10004626C();
  sub_10004658C();
  uint64_t v31 = sub_100046388();
  v32(v31);
  swift_getObjectType();
  unint64_t v33 = (void *)swift_allocObject();
  uint64_t v34 = v45[6];
  v33[2] = v45[5];
  v33[3] = v34;
  void v33[4] = &unk_100084410;
  v50[4] = sub_10004543C;
  v50[5] = v33;
  v50[0] = _NSConcreteStackBlock;
  v50[1] = 1107296256;
  v50[2] = sub_10000C5B0;
  v50[3] = &unk_100078380;
  uint64_t v35 = _Block_copy(v50);
  swift_retain();
  swift_unknownObjectRetain();
  sub_10005E7D0();
  sub_10003E1A8();
  sub_1000464C4();
  _Block_release(v35);
  uint64_t v36 = sub_100046180();
  v37(v36);
  uint64_t v38 = sub_100046420();
  v39(v38);
  swift_release();
  sub_10005E7F0();
  sub_100046518();
  sub_10005E840();
  uint64_t v40 = sub_1000461E8();
  ((void (*)(uint64_t))v35)(v40);
  uint64_t v41 = sub_1000461A0();
  v42(v41);
  sub_100016180(v46);
  sub_1000462E4();
  sub_10005ED90();
  uint64_t v43 = *(void (**)(void))(v0 + 8);
  sub_10004623C();
  v43();
  sub_10004623C();
  v43();
  uint64_t v44 = sub_100046468();
  ((void (*)(uint64_t))v35)(v44);
  sub_10005ED50();
  sub_1000464B8();
  sub_100046100();
}

uint64_t sub_1000453F0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void OS_dispatch_queue.wallOnce(_:closure:)()
{
  sub_1000460E4();
  sub_1000463FC(v1, v2);
  sub_100008DCC();
  uint64_t v47 = v4;
  uint64_t v48 = v3;
  __chkstk_darwin(v3);
  Swift::String v46 = (uint64_t *)((char *)v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100046194();
  __chkstk_darwin(v6);
  sub_100046450(v7, v8, v9, v10, v11, v12, v13, v14, v45[0]);
  v45[9] = sub_10005E820();
  sub_100008DCC();
  uint64_t v49 = v15;
  __chkstk_darwin(v16);
  sub_1000460C4(v17, v45[0]);
  __chkstk_darwin(v18);
  sub_100046144(v19, v20, v21, v22, v23, v24, v25, v26, v45[0]);
  sub_100008DCC();
  v45[3] = v28;
  v45[4] = v27;
  __chkstk_darwin(v27);
  v45[2] = sub_10004611C();
  sub_100008DCC();
  __chkstk_darwin(v29);
  sub_100046338();
  sub_100008DCC();
  __chkstk_darwin(v30);
  sub_100046168();
  sub_100007F60(0, (unint64_t *)&unk_100084400);
  v50[0] = _swiftEmptyArrayStorage;
  sub_1000453F0((unint64_t *)&unk_100084F50, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_source.TimerFlags);
  sub_100007D1C((uint64_t *)&unk_100084410);
  sub_100007E14((unint64_t *)&unk_100084F60, (uint64_t *)&unk_100084410);
  sub_10004626C();
  sub_10004658C();
  uint64_t v31 = sub_100046388();
  v32(v31);
  swift_getObjectType();
  unint64_t v33 = (void *)swift_allocObject();
  uint64_t v34 = v45[6];
  v33[2] = v45[5];
  v33[3] = v34;
  void v33[4] = &unk_100084410;
  v50[4] = sub_10004543C;
  v50[5] = v33;
  v50[0] = _NSConcreteStackBlock;
  v50[1] = 1107296256;
  v50[2] = sub_10000C5B0;
  v50[3] = &unk_1000783D0;
  uint64_t v35 = _Block_copy(v50);
  swift_retain();
  swift_unknownObjectRetain();
  sub_10005E7D0();
  sub_10003E1A8();
  sub_1000464C4();
  _Block_release(v35);
  uint64_t v36 = sub_100046180();
  v37(v36);
  uint64_t v38 = sub_100046420();
  v39(v38);
  swift_release();
  sub_10005E810();
  sub_100046518();
  sub_10005E850();
  uint64_t v40 = sub_1000461E8();
  ((void (*)(uint64_t))v35)(v40);
  uint64_t v41 = sub_1000461A0();
  v42(v41);
  sub_100016180(v46);
  sub_1000462E4();
  sub_10005ED80();
  uint64_t v43 = *(void (**)(void))(v0 + 8);
  sub_10004623C();
  v43();
  sub_10004623C();
  v43();
  uint64_t v44 = sub_100046468();
  ((void (*)(uint64_t))v35)(v44);
  sub_10005ED50();
  sub_1000464B8();
  sub_100046100();
}

uint64_t sub_1000457B0()
{
  swift_release();
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_1000457F0()
{
  (*(void (**)(void))(v0 + 16))();
  swift_getObjectType();
  sub_10005ED40();
}

void OS_dispatch_queue.timer(_:interval:closure:)()
{
  sub_1000460E4();
  sub_100046480(v1, v2);
  sub_100008DCC();
  uint64_t v44 = v4;
  uint64_t v45 = v3;
  __chkstk_darwin(v3);
  uint64_t v43 = (uint64_t *)((char *)v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100046194();
  __chkstk_darwin(v6);
  sub_100046438(v7, v8, v9, v10, v11, v12, v13, v14, v42[0]);
  sub_10005E800();
  sub_100008DCC();
  v42[9] = v16;
  v42[10] = v15;
  __chkstk_darwin(v15);
  sub_1000460C4(v17, v42[0]);
  __chkstk_darwin(v18);
  sub_100046144(v19, v20, v21, v22, v23, v24, v25, v26, v42[0]);
  sub_100008DCC();
  _OWORD v42[2] = v28;
  v42[3] = v27;
  __chkstk_darwin(v27);
  v42[1] = sub_10004611C();
  sub_100008DCC();
  v42[0] = v29;
  __chkstk_darwin(v30);
  sub_100046360();
  sub_100008DCC();
  __chkstk_darwin(v31);
  sub_100046168();
  sub_100007F60(0, (unint64_t *)&unk_100084400);
  v46[0] = _swiftEmptyArrayStorage;
  sub_1000453F0((unint64_t *)&unk_100084F50, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_source.TimerFlags);
  sub_100007D1C((uint64_t *)&unk_100084410);
  sub_100007E14((unint64_t *)&unk_100084F60, (uint64_t *)&unk_100084410);
  sub_10004620C();
  sub_10005ECF0();
  uint64_t v32 = sub_1000463A4();
  v33(v32);
  swift_getObjectType();
  v46[4] = v42[5];
  v46[5] = v42[6];
  v46[0] = _NSConcreteStackBlock;
  v46[1] = 1107296256;
  v46[2] = sub_10000C5B0;
  v46[3] = &unk_1000783F8;
  uint64_t v34 = _Block_copy(v46);
  swift_retain();
  sub_10005E7D0();
  sub_10003E1A8();
  sub_10004652C();
  _Block_release(v34);
  uint64_t v35 = sub_100046180();
  v36(v35);
  uint64_t v37 = sub_1000461C4();
  v38(v37);
  swift_release();
  sub_10005E7F0();
  sub_100046504();
  sub_10005E840();
  uint64_t v39 = sub_1000462C8();
  v0(v39);
  sub_1000464E4();
  sub_100016180(v43);
  sub_1000463E4();
  sub_10005ED90();
  uint64_t v40 = *(void (**)(void))(v44 + 8);
  sub_10004624C();
  v40();
  sub_10004624C();
  v40();
  uint64_t v41 = sub_1000464A4();
  v0(v41);
  sub_10005ED50();
  sub_1000464B8();
  sub_100046100();
}

void OS_dispatch_queue.wallTimer(_:interval:closure:)()
{
  sub_1000460E4();
  sub_100046480(v1, v2);
  sub_100008DCC();
  uint64_t v44 = v4;
  uint64_t v45 = v3;
  __chkstk_darwin(v3);
  uint64_t v43 = (uint64_t *)((char *)v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100046194();
  __chkstk_darwin(v6);
  sub_100046438(v7, v8, v9, v10, v11, v12, v13, v14, v42[0]);
  sub_10005E820();
  sub_100008DCC();
  v42[9] = v16;
  v42[10] = v15;
  __chkstk_darwin(v15);
  sub_1000460C4(v17, v42[0]);
  __chkstk_darwin(v18);
  sub_100046144(v19, v20, v21, v22, v23, v24, v25, v26, v42[0]);
  sub_100008DCC();
  _OWORD v42[2] = v28;
  v42[3] = v27;
  __chkstk_darwin(v27);
  v42[1] = sub_10004611C();
  sub_100008DCC();
  v42[0] = v29;
  __chkstk_darwin(v30);
  sub_100046360();
  sub_100008DCC();
  __chkstk_darwin(v31);
  sub_100046168();
  sub_100007F60(0, (unint64_t *)&unk_100084400);
  v46[0] = _swiftEmptyArrayStorage;
  sub_1000453F0((unint64_t *)&unk_100084F50, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_source.TimerFlags);
  sub_100007D1C((uint64_t *)&unk_100084410);
  sub_100007E14((unint64_t *)&unk_100084F60, (uint64_t *)&unk_100084410);
  sub_10004620C();
  sub_10005ECF0();
  uint64_t v32 = sub_1000463A4();
  v33(v32);
  swift_getObjectType();
  v46[4] = v42[5];
  v46[5] = v42[6];
  v46[0] = _NSConcreteStackBlock;
  v46[1] = 1107296256;
  v46[2] = sub_10000C5B0;
  v46[3] = &unk_100078420;
  uint64_t v34 = _Block_copy(v46);
  swift_retain();
  sub_10005E7D0();
  sub_10003E1A8();
  sub_10004652C();
  _Block_release(v34);
  uint64_t v35 = sub_100046180();
  v36(v35);
  uint64_t v37 = sub_1000461C4();
  v38(v37);
  swift_release();
  sub_10005E810();
  sub_100046504();
  sub_10005E850();
  uint64_t v39 = sub_1000462C8();
  v0(v39);
  sub_1000464E4();
  sub_100016180(v43);
  sub_1000463E4();
  sub_10005ED80();
  uint64_t v40 = *(void (**)(void))(v44 + 8);
  sub_10004624C();
  v40();
  sub_10004624C();
  v40();
  uint64_t v41 = sub_1000464A4();
  v0(v41);
  sub_10005ED50();
  sub_1000464B8();
  sub_100046100();
}

uint64_t OS_dispatch_semaphore.wait(_:)()
{
  uint64_t v0 = sub_10005E800();
  sub_100008DCC();
  uint64_t v2 = v1;
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v12 - v7;
  sub_10005E7F0();
  sub_10005E840();
  uint64_t v9 = *(void (**)(char *, uint64_t))(v2 + 8);
  v9(v5, v0);
  uint64_t v10 = sub_10005ED70() & 1;
  v9(v8, v0);
  return v10;
}

uint64_t static OS_dispatch_source.makeSignalSourceIgnored(signal:queue:)(int a1)
{
  uint64_t v2 = (void (__cdecl *)(int))sub_10005E790();
  signal(a1, v2);
  sub_100007F60(0, (unint64_t *)&unk_100084400);
  return sub_10005ED00();
}

double OS_dispatch_source_data_replace.doubleData.getter()
{
  return COERCE_DOUBLE(sub_10005ED30());
}

void OS_dispatch_source_data_replace.doubleData.setter(double a1)
{
}

void (*OS_dispatch_source_data_replace.doubleData.modify(uint64_t *a1, uint64_t a2))(Swift::UInt *a1)
{
  a1[1] = a2;
  a1[2] = v2;
  *a1 = sub_10005ED30();
  return sub_10004607C;
}

void sub_10004607C(Swift::UInt *a1)
{
}

void sub_1000460C4(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 208) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_10004611C()
{
  return sub_10005E7E0();
}

uint64_t sub_100046144(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v10 - 216) = (char *)&a9 - v9;
  return sub_10005E7B0();
}

uint64_t sub_100046180()
{
  return v0;
}

uint64_t sub_1000461A0()
{
  return *(void *)(v0 - 192);
}

uint64_t sub_1000461C4()
{
  return v0;
}

uint64_t sub_1000461E8()
{
  *(void *)(v1 - 160) += 8;
  return v0;
}

uint64_t sub_10004620C()
{
  return sub_10005EEE0();
}

uint64_t sub_10004626C()
{
  return sub_10005EEE0();
}

uint64_t sub_1000462C8()
{
  return v0;
}

uint64_t sub_1000462E4()
{
  return v0;
}

uint64_t sub_100046338()
{
  return sub_10005ECE0();
}

uint64_t sub_100046360()
{
  return sub_10005ECE0();
}

uint64_t sub_100046388()
{
  return v0;
}

uint64_t sub_1000463A4()
{
  return v0;
}

uint64_t sub_1000463C0()
{
  return sub_10005ED90();
}

uint64_t sub_1000463E4()
{
  return v0;
}

uint64_t sub_1000463FC(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 - 264) = v2;
  *(void *)(v3 - 232) = a1;
  *(void *)(v3 - 224) = a2;
  return sub_10005E7A0();
}

uint64_t sub_100046420()
{
  return v0;
}

uint64_t sub_100046438(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v10 - 184) = (char *)&a9 - v9;
  return 0;
}

uint64_t sub_100046450(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v10 - 192) = (char *)&a9 - v9;
  return 0;
}

uint64_t sub_100046468()
{
  return v0;
}

uint64_t sub_100046480(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 - 240) = v2;
  *(void *)(v3 - 232) = a1;
  *(void *)(v3 - 224) = a2;
  return sub_10005E7A0();
}

uint64_t sub_1000464A4()
{
  return v0;
}

uint64_t sub_1000464B8()
{
  return v0;
}

uint64_t sub_1000464C4()
{
  return sub_10005ED20();
}

uint64_t sub_1000464E4()
{
  uint64_t v3 = *(void *)(v0 - 184);
  return static DispatchTimeInterval.seconds(_:)(v3, v2);
}

double sub_100046504()
{
  return v0;
}

double sub_100046518()
{
  return v0;
}

uint64_t sub_10004652C()
{
  return sub_10005ED20();
}

uint64_t sub_10004654C()
{
  return sub_10005E7F0();
}

uint64_t sub_10004656C()
{
  return sub_10005E800();
}

uint64_t sub_10004658C()
{
  return sub_10005ECF0();
}

void sub_1000465AC(double a1)
{
  *uint64_t v1 = (uint64_t)a1;
}

uint64_t HIDEvent.Digitizer.init(timestamp:type:index:identity:mask:buttons:x:y:z:pressure:twist:range:touch:options:)(uint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, uint64_t a7, char a8, unint64_t a9)
{
  if ((a2 & 0x8000000000000000) != 0
    || HIDWORD(a2)
    || (a3 & 0x8000000000000000) != 0
    || HIDWORD(a3)
    || (a4 & 0x8000000000000000) != 0
    || HIDWORD(a4)
    || (a5 & 0x8000000000000000) != 0
    || HIDWORD(a5)
    || (a6 & 0x8000000000000000) != 0
    || HIDWORD(a6))
  {
    goto LABEL_20;
  }
  if (a8)
  {
    if ((a9 & 0x8000000000000000) != 0 || HIDWORD(a9)) {
      goto LABEL_20;
    }
  }
  else if ((a9 & 0x8000000000000000) != 0 || HIDWORD(a9))
  {
    goto LABEL_20;
  }
  uint64_t DigitizerEvent = IOHIDEventCreateDigitizerEvent();
  if (IOHIDEventGetType() == 11) {
    return DigitizerEvent;
  }
  __break(1u);
LABEL_20:
  sub_10000C25C();
  uint64_t result = sub_10005F040();
  __break(1u);
  return result;
}

void *HIDEvent.Digitizer.init(hidEvent:)(void *a1)
{
  if (IOHIDEventGetType() != 11)
  {

    return 0;
  }
  return a1;
}

uint64_t HIDEvent.Digitizer.altitude.getter()
{
  return sub_100047684();
}

uint64_t HIDEvent.Digitizer.altitude.setter(uint64_t a1)
{
  return sub_10004767C(a1, 0xFu);
}

uint64_t (*HIDEvent.Digitizer.altitude.modify(uint64_t a1, uint64_t a2))(uint64_t a1)
{
  sub_10004768C(a1, a2);
  IOHIDEventGetDoubleValue();
  *double v2 = v3;
  return sub_100046788;
}

uint64_t sub_100046788(uint64_t a1)
{
  return sub_10004767C(*(void *)(a1 + 8), 0xFu);
}

uint64_t HIDEvent.Digitizer.azimuth.getter()
{
  return sub_100047684();
}

uint64_t HIDEvent.Digitizer.azimuth.setter(uint64_t a1)
{
  return sub_10004767C(a1, 0x10u);
}

uint64_t (*HIDEvent.Digitizer.azimuth.modify(uint64_t a1, uint64_t a2))(uint64_t a1)
{
  sub_10004768C(a1, a2);
  IOHIDEventGetDoubleValue();
  *double v2 = v3;
  return sub_1000467F8;
}

uint64_t sub_1000467F8(uint64_t a1)
{
  return sub_10004767C(*(void *)(a1 + 8), 0x10u);
}

char *HIDEvent.Digitizer.children.getter()
{
  uint64_t v0 = HIDEvent.children.getter();
  uint64_t v1 = v0[2];
  if (v1)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = 0;
    uint64_t v3 = (char *)_swiftEmptyArrayStorage;
    do
    {
      id v4 = (id)v0[v2 + 4];
      if (IOHIDEventGetType() == 11)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v3 = sub_100047258(0, *((void *)v3 + 2) + 1, 1, (uint64_t)v3);
        }
        unint64_t v6 = *((void *)v3 + 2);
        unint64_t v5 = *((void *)v3 + 3);
        if (v6 >= v5 >> 1) {
          uint64_t v3 = sub_100047258((char *)(v5 > 1), v6 + 1, 1, (uint64_t)v3);
        }
        *((void *)v3 + 2) = v6 + 1;
        *(void *)&v3[8 * v6 + 32] = v4;
      }
      else
      {
      }
      ++v2;
    }
    while (v1 != v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = (char *)_swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t HIDEvent.Digitizer.didUpdateMask.getter()
{
  return sub_10004769C();
}

uint64_t HIDEvent.Digitizer.didUpdateMask.setter(uint64_t a1, uint64_t a2)
{
  return sub_100047674(a2, 0x1Du);
}

uint64_t (*HIDEvent.Digitizer.didUpdateMask.modify(uint64_t a1, uint64_t a2))(uint64_t a1)
{
  sub_10004768C(a1, a2);
  *uint64_t v2 = IOHIDEventGetIntegerValue();
  return sub_100046984;
}

uint64_t sub_100046984(uint64_t a1)
{
  return sub_100047674(*(void *)(a1 + 8), 0x1Du);
}

uint64_t HIDEvent.Digitizer.eventMask.getter()
{
  return sub_10004769C();
}

uint64_t HIDEvent.Digitizer.eventMask.setter(uint64_t a1, uint64_t a2)
{
  return sub_100047674(a2, 7u);
}

uint64_t (*HIDEvent.Digitizer.eventMask.modify(uint64_t a1, uint64_t a2))(uint64_t a1)
{
  sub_10004768C(a1, a2);
  *uint64_t v2 = IOHIDEventGetIntegerValue();
  return sub_1000469F8;
}

uint64_t sub_1000469F8(uint64_t a1)
{
  return sub_100047674(*(void *)(a1 + 8), 7u);
}

uint64_t HIDEvent.Digitizer.generationCount.getter()
{
  return sub_10004769C();
}

uint64_t HIDEvent.Digitizer.generationCount.setter(uint64_t a1, uint64_t a2)
{
  return sub_100047674(a2, 0x1Bu);
}

uint64_t (*HIDEvent.Digitizer.generationCount.modify(uint64_t a1, uint64_t a2))(uint64_t a1)
{
  sub_10004768C(a1, a2);
  *uint64_t v2 = IOHIDEventGetIntegerValue();
  return sub_100046A6C;
}

uint64_t sub_100046A6C(uint64_t a1)
{
  return sub_100047674(*(void *)(a1 + 8), 0x1Bu);
}

uint64_t HIDEvent.Digitizer.index.getter()
{
  return sub_10004769C();
}

BOOL HIDEvent.Digitizer.isCollection.getter()
{
  return IOHIDEventGetIntegerValue() != 0;
}

uint64_t HIDEvent.Digitizer.isCollection.setter(uint64_t a1, uint64_t a2)
{
  return sub_100047674(a2, 0x16u);
}

uint64_t (*HIDEvent.Digitizer.isCollection.modify(void *a1, uint64_t a2))(uint64_t *a1)
{
  sub_1000476CC(a1, a2);
  uint64_t IntegerValue = IOHIDEventGetIntegerValue();
  sub_1000476A4(IntegerValue);
  return sub_100046B04;
}

uint64_t sub_100046B04(uint64_t *a1)
{
  return sub_100047674(*a1, 0x16u);
}

BOOL HIDEvent.Digitizer.isInRange.getter()
{
  return IOHIDEventGetIntegerValue() != 0;
}

uint64_t HIDEvent.Digitizer.isInRange.setter(uint64_t a1, uint64_t a2)
{
  return sub_100047674(a2, 8u);
}

uint64_t (*HIDEvent.Digitizer.isInRange.modify(void *a1, uint64_t a2))(uint64_t *a1)
{
  sub_1000476CC(a1, a2);
  uint64_t IntegerValue = IOHIDEventGetIntegerValue();
  sub_1000476A4(IntegerValue);
  return sub_100046B98;
}

uint64_t sub_100046B98(uint64_t *a1)
{
  return sub_100047674(*a1, 8u);
}

BOOL HIDEvent.Digitizer.isFinger.getter()
{
  return HIDEvent.Digitizer.type.getter() == 2;
}

unint64_t HIDEvent.Digitizer.type.getter()
{
  unint64_t result = IOHIDEventGetIntegerValue();
  if ((result & 0x8000000000000000) != 0 || HIDWORD(result))
  {
    sub_10000C25C();
    unint64_t result = sub_10005F040();
    __break(1u);
  }
  return result;
}

BOOL HIDEvent.Digitizer.isPencil.getter()
{
  return HIDEvent.Digitizer.type.getter() == 0;
}

BOOL HIDEvent.Digitizer.isTouching.getter()
{
  return IOHIDEventGetIntegerValue() != 0;
}

uint64_t HIDEvent.Digitizer.isTouching.setter(uint64_t a1, uint64_t a2)
{
  return sub_100047674(a2, 9u);
}

uint64_t (*HIDEvent.Digitizer.isTouching.modify(void *a1, uint64_t a2))(uint64_t *a1)
{
  sub_1000476CC(a1, a2);
  uint64_t IntegerValue = IOHIDEventGetIntegerValue();
  sub_1000476A4(IntegerValue);
  return sub_100046D0C;
}

uint64_t sub_100046D0C(uint64_t *a1)
{
  return sub_100047674(*a1, 9u);
}

uint64_t HIDEvent.Digitizer.pressure.getter()
{
  return sub_100047684();
}

uint64_t HIDEvent.Digitizer.tiltX.getter()
{
  return sub_100047684();
}

uint64_t HIDEvent.Digitizer.tiltX.setter(uint64_t a1)
{
  return sub_10004767C(a1, 0xDu);
}

uint64_t (*HIDEvent.Digitizer.tiltX.modify(uint64_t a1, uint64_t a2))(uint64_t a1)
{
  sub_10004768C(a1, a2);
  IOHIDEventGetDoubleValue();
  *uint64_t v2 = v3;
  return sub_100046D84;
}

uint64_t sub_100046D84(uint64_t a1)
{
  return sub_10004767C(*(void *)(a1 + 8), 0xDu);
}

uint64_t HIDEvent.Digitizer.tiltY.getter()
{
  return sub_100047684();
}

uint64_t HIDEvent.Digitizer.tiltY.setter(uint64_t a1)
{
  return sub_10004767C(a1, 0xEu);
}

uint64_t (*HIDEvent.Digitizer.tiltY.modify(uint64_t a1, uint64_t a2))(uint64_t a1)
{
  sub_10004768C(a1, a2);
  IOHIDEventGetDoubleValue();
  *uint64_t v2 = v3;
  return sub_100046DF4;
}

uint64_t sub_100046DF4(uint64_t a1)
{
  return sub_10004767C(*(void *)(a1 + 8), 0xEu);
}

void HIDEvent.Digitizer.touchWithIndex(_:)(uint64_t a1)
{
  uint64_t v2 = HIDEvent.Digitizer.children.getter();
  uint64_t v3 = v2;
  uint64_t v4 = *((void *)v2 + 2);
  if (v4)
  {
    unint64_t v5 = (void *)*((void *)v2 + 4);
    swift_bridgeObjectRetain();
    id v6 = v5;
    if (IOHIDEventGetIntegerValue() == a1 || (v6, v4 == 1))
    {
LABEL_10:
      swift_bridgeObjectRelease_n();
    }
    else
    {
      uint64_t v7 = 5;
      while (1)
      {
        uint64_t v8 = v7 - 3;
        if (__OFADD__(v7 - 4, 1)) {
          break;
        }
        id v9 = *(id *)&v3[8 * v7];
        if (IOHIDEventGetIntegerValue() != a1)
        {

          ++v7;
          if (v8 != v4) {
            continue;
          }
        }
        goto LABEL_10;
      }
      __break(1u);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
}

uint64_t HIDEvent.Digitizer.willUpdateMask.getter()
{
  return sub_10004769C();
}

uint64_t HIDEvent.Digitizer.willUpdateMask.setter(uint64_t a1, uint64_t a2)
{
  return sub_100047674(a2, 0x1Cu);
}

uint64_t (*HIDEvent.Digitizer.willUpdateMask.modify(uint64_t a1, uint64_t a2))(uint64_t a1)
{
  sub_10004768C(a1, a2);
  *uint64_t v2 = IOHIDEventGetIntegerValue();
  return sub_100046F58;
}

uint64_t sub_100046F58(uint64_t a1)
{
  return sub_100047674(*(void *)(a1 + 8), 0x1Cu);
}

uint64_t HIDEvent.Digitizer.x.getter()
{
  return IOHIDEventGetDoubleValue();
}

uint64_t (*HIDEvent.Digitizer.x.modify(uint64_t a1, uint64_t a2))(uint64_t a1)
{
  sub_10004768C(a1, a2);
  IOHIDEventGetDoubleValue();
  *uint64_t v2 = v3;
  return sub_100046FBC;
}

uint64_t sub_100046FBC(uint64_t a1)
{
  return _s10SidecarHID8HIDEventV9DigitizerV1xSdvs_0(*(void *)(a1 + 8));
}

uint64_t HIDEvent.Digitizer.y.getter()
{
  return sub_100047684();
}

uint64_t HIDEvent.Digitizer.y.setter(uint64_t a1)
{
  return sub_10004767C(a1, 1u);
}

uint64_t (*HIDEvent.Digitizer.y.modify(uint64_t a1, uint64_t a2))(uint64_t a1)
{
  sub_10004768C(a1, a2);
  IOHIDEventGetDoubleValue();
  *uint64_t v2 = v3;
  return sub_100047028;
}

uint64_t sub_100047028(uint64_t a1)
{
  return sub_10004767C(*(void *)(a1 + 8), 1u);
}

uint64_t HIDEvent.Digitizer.z.getter()
{
  return sub_100047684();
}

uint64_t HIDEvent.Digitizer.z.setter(uint64_t a1)
{
  return sub_10004767C(a1, 2u);
}

uint64_t (*HIDEvent.Digitizer.z.modify(uint64_t a1, uint64_t a2))(uint64_t a1)
{
  sub_10004768C(a1, a2);
  IOHIDEventGetDoubleValue();
  *uint64_t v2 = v3;
  return sub_100047098;
}

uint64_t sub_100047098(uint64_t a1)
{
  return sub_10004767C(*(void *)(a1 + 8), 2u);
}

uint64_t HIDEvent.Digitizer.roll.getter()
{
  return sub_100047684();
}

uint64_t HIDEvent.Digitizer.roll.setter(uint64_t a1)
{
  return sub_10004767C(a1, 0x17u);
}

uint64_t (*HIDEvent.Digitizer.roll.modify(uint64_t a1, uint64_t a2))(uint64_t a1)
{
  sub_10004768C(a1, a2);
  IOHIDEventGetDoubleValue();
  *uint64_t v2 = v3;
  return sub_100047108;
}

uint64_t sub_100047108(uint64_t a1)
{
  return sub_10004767C(*(void *)(a1 + 8), 0x17u);
}

id sub_10004711C()
{
  return HIDEvent.Digitizer.hidEvent.getter(*v0);
}

void *variable initialization expression of KeyboardReport.report()
{
  return HIDReport.__allocating_init(count:)(8);
}

uint64_t variable initialization expression of KeyboardReport.Iterator.index()
{
  return -1;
}

void *variable initialization expression of PencilReport.report()
{
  return HIDReport.__allocating_init(count:)(21);
}

void *variable initialization expression of SqueezeGestureReport.report()
{
  return HIDReport.__allocating_init(count:)(32);
}

uint64_t variable initialization expression of ScrollFilter.state()
{
  return 0;
}

void *variable initialization expression of TouchReport.report()
{
  return HIDReport.__allocating_init(count:)(23);
}

uint64_t sub_100047200()
{
  return HIDEvent.Digitizer.index.getter();
}

BOOL sub_100047208()
{
  return HIDEvent.Digitizer.isTouching.getter();
}

BOOL sub_100047210()
{
  return HIDEvent.Digitizer.isInRange.getter();
}

void *variable initialization expression of Domain.completions()
{
  return &_swiftEmptyArrayStorage;
}

uint64_t variable initialization expression of TouchTrackerLog.tracker()
{
  type metadata accessor for TouchTracker();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  return result;
}

char *sub_100047258(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100007D1C(&qword_100085318);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 8);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  if (v5)
  {
    sub_100056320((char *)(a4 + 32), v8, v12);
    *(void *)(a4 + 16) = 0;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100047484(0, v8, (unint64_t)v12, a4);
  }
  return v10;
}

ValueMetadata *type metadata accessor for HIDEvent.Digitizer()
{
  return &type metadata for HIDEvent.Digitizer;
}

void type metadata accessor for IOHIDReportType(uint64_t a1)
{
}

void type metadata accessor for IOHIDUserDevice(uint64_t a1)
{
}

void type metadata accessor for IOHIDEvent(uint64_t a1)
{
}

char *sub_100047394(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100007D1C(&qword_100085310);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 16);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  if (v5)
  {
    sub_100056378((char *)(a4 + 32), v8, v12);
    *(void *)(a4 + 16) = 0;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_10004757C(0, v8, v12, a4);
  }
  return v10;
}

uint64_t sub_100047484(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_10005F0B0();
  __break(1u);
  return result;
}

char *sub_10004757C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 16 * a1 + 32);
    unint64_t v6 = &__dst[16 * v4];
    if (v5 >= v6 || &v5[16 * v4] <= __dst)
    {
      memcpy(__dst, v5, 16 * v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = (char *)sub_10005F0B0();
  __break(1u);
  return result;
}

uint64_t sub_100047674(uint64_t a1, unsigned __int16 a2)
{
  return _IOHIDEventSetIntegerValue(a1, a2 | 0xB0000u);
}

uint64_t sub_10004767C(uint64_t a1, unsigned __int16 a2)
{
  return _IOHIDEventSetDoubleValue(a1, a2 | 0xB0000u);
}

uint64_t sub_100047684()
{
  return IOHIDEventGetDoubleValue();
}

uint64_t sub_10004768C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = a2;
  return a2;
}

uint64_t sub_10004769C()
{
  return IOHIDEventGetIntegerValue();
}

uint64_t sub_1000476A4(uint64_t result)
{
  *(unsigned char *)(v1 + 8) = result != 0;
  return result;
}

uint64_t _s10SidecarHID8HIDEventV9DigitizerV1xSdvs_0(uint64_t a1)
{
  return _IOHIDEventSetDoubleValue(a1, 720896);
}

uint64_t _s10SidecarHID14RotationFilterC5state33_6D9B20B1CBACE08698756F1A498F0F01LLAC5StateAELLOvpfi_0()
{
  return 0;
}

uint64_t sub_1000476CC(void *a1, uint64_t a2)
{
  *a1 = a2;
  return a2;
}

uint64_t HIDEvent.GenericGesture.init(timestamp:gestureType:options:)(uint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v3 = a3;
  if ((a3 & 0x8000000000000000) != 0 || HIDWORD(a3))
  {
    sub_10000C25C();
    uint64_t v6 = sub_10005F040();
    __break(1u);
  }
  else
  {
    uint64_t v4 = a2;
    uint64_t v5 = a1;
    uint64_t v6 = 0;
  }
  return _IOHIDEventCreateGenericGestureEvent(v6, v5, v4, v3);
}

void *HIDEvent.GenericGesture.init(hidEvent:)(void *a1)
{
  if (IOHIDEventGetType() != 39)
  {

    return 0;
  }
  return a1;
}

unint64_t HIDEvent.GenericGesture.gestureType.getter()
{
  unint64_t result = IOHIDEventGetIntegerValue();
  if ((result & 0x8000000000000000) != 0 || HIDWORD(result))
  {
    sub_10000C25C();
    unint64_t result = sub_10005F040();
    __break(1u);
  }
  return result;
}

uint64_t HIDEvent.GenericGesture.gestureType.setter(uint64_t a1, uint64_t a2)
{
  return sub_1000479E0(a2);
}

uint64_t (*HIDEvent.GenericGesture.gestureType.modify(uint64_t a1, uint64_t a2))(uint64_t *a1)
{
  *(void *)a1 = a2;
  *(_DWORD *)(a1 + 8) = HIDEvent.GenericGesture.gestureType.getter();
  return sub_1000478BC;
}

uint64_t sub_1000478BC(uint64_t *a1)
{
  return sub_1000479E0(*a1);
}

uint64_t HIDEvent.GenericGesture.tapCount.getter()
{
  return IOHIDEventGetIntegerValue();
}

uint64_t HIDEvent.GenericGesture.tapCount.setter(uint64_t a1, uint64_t a2)
{
  return sub_1000479D4(a2);
}

uint64_t (*HIDEvent.GenericGesture.tapCount.modify(uint64_t *a1, uint64_t a2))(uint64_t a1)
{
  a1[1] = a2;
  *a1 = IOHIDEventGetIntegerValue();
  return sub_100047938;
}

uint64_t sub_100047938(uint64_t a1)
{
  return sub_1000479D4(*(void *)(a1 + 8));
}

uint64_t HIDEvent.GenericGesture.swipeProgress.getter()
{
  return IOHIDEventGetDoubleValue();
}

uint64_t (*HIDEvent.GenericGesture.swipeProgress.modify(void *a1, uint64_t a2))(uint64_t a1)
{
  a1[1] = a2;
  IOHIDEventGetDoubleValue();
  *a1 = v3;
  return sub_1000479A8;
}

uint64_t sub_1000479A8(uint64_t a1)
{
  return _s10SidecarHID8HIDEventV14GenericGestureV13swipeProgressSdvs_0(*(void *)(a1 + 8));
}

ValueMetadata *type metadata accessor for HIDEvent.GenericGesture()
{
  return &type metadata for HIDEvent.GenericGesture;
}

uint64_t _s10SidecarHID8HIDEventV14GenericGestureV13swipeProgressSdvs_0(uint64_t a1)
{
  return _IOHIDEventSetDoubleValue(a1, 2555906);
}

uint64_t sub_1000479D4(uint64_t a1)
{
  return _IOHIDEventSetIntegerValue(a1, 2555905);
}

uint64_t sub_1000479E0(uint64_t a1)
{
  return _IOHIDEventSetIntegerValue(a1, 2555904);
}

uint64_t static HIDDescriptor.dataWithReportDescriptor(_:)()
{
  unint64_t v0 = sub_10005E620();
  if ((v0 & 0x8000000000000000) != 0 || (__int16 v1 = v0, v0 >= 0x10000))
  {
    sub_10000C25C();
    uint64_t result = sub_10005F040();
    __break(1u);
  }
  else
  {
    sub_100007D1C(&qword_100084120);
    uint64_t v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_100065610;
    *(_DWORD *)(v2 + 32) = 16851209;
    *(_WORD *)(v2 + 36) = 256;
    *(unsigned char *)(v2 + 38) = 34;
    *(_WORD *)(v2 + 39) = v1;
    uint64_t v4 = sub_100047B04(v2);
    sub_10005E630();
    return v4;
  }
  return result;
}

uint64_t sub_100047B04(uint64_t a1)
{
  uint64_t v9 = sub_100007D1C(&qword_100085320);
  uint64_t v10 = sub_100047BDC(&qword_100085328, &qword_100085320);
  v8[0] = a1;
  uint64_t v2 = sub_10000BD3C(v8, v9);
  uint64_t v3 = *v2 + 32;
  uint64_t v4 = v3 + *(void *)(*v2 + 16);
  swift_bridgeObjectRetain();
  sub_10001F4D4(v3, v4, &v7);
  swift_bridgeObjectRelease();
  uint64_t v5 = v7;
  sub_10000B724((uint64_t)v8);
  return v5;
}

ValueMetadata *type metadata accessor for HIDDescriptor()
{
  return &type metadata for HIDDescriptor;
}

uint64_t sub_100047BDC(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100007D84(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *HIDEvent.children.getter()
{
  id v0 = (id)IOHIDEventGetChildren();
  if (v0)
  {
    __int16 v1 = v0;
    type metadata accessor for IOHIDEvent(0);
    sub_10005EAB0();
  }
  return &_swiftEmptyArrayStorage;
}

SidecarHID::HIDEvent::Phase_optional __swiftcall HIDEvent.Phase.init(rawValue:)(Swift::UInt16 rawValue)
{
  if ((rawValue & 8) != 0) {
    LOBYTE(v1) = 4;
  }
  else {
    int v1 = (rawValue << 24 >> 31) & 5;
  }
  if ((rawValue & 4) != 0) {
    char v2 = 3;
  }
  else {
    char v2 = v1;
  }
  if ((rawValue & 2) != 0) {
    v3.value = SidecarHID_HIDEvent_Phase_changed;
  }
  else {
    v3.value = v2;
  }
  if (rawValue) {
    return (SidecarHID::HIDEvent::Phase_optional)1;
  }
  else {
    return v3;
  }
}

uint64_t HIDEvent.Phase.rawValue.getter(char a1)
{
  return word_1000657B2[a1];
}

BOOL sub_100047DF0(char *a1, char *a2)
{
  return sub_100055974(*a1, *a2);
}

Swift::Int sub_100047DFC()
{
  return sub_100055998(*v0);
}

void sub_100047E04(uint64_t a1)
{
  sub_1000559EC(a1, *v1);
}

Swift::Int sub_100047E0C(uint64_t a1)
{
  return sub_100055A20(a1, *v1);
}

SidecarHID::HIDEvent::Phase_optional sub_100047E14@<W0>(Swift::UInt16 *a1@<X0>, SidecarHID::HIDEvent::Phase_optional *a2@<X8>)
{
  result.value = HIDEvent.Phase.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t sub_100047E40@<X0>(_WORD *a1@<X8>)
{
  uint64_t result = HIDEvent.Phase.rawValue.getter(*v1);
  *a1 = result;
  return result;
}

void HIDEvent.appendChild(_:)(void *a1, void *a2)
{
}

void HIDEvent.removeChild(_:)(void *a1, void *a2)
{
}

void sub_100047E9C(void *a1, void *a2, void (*a3)(id, id, void))
{
  uint64_t v5 = a1[3];
  uint64_t v6 = a1[4];
  sub_10000BD3C(a1, v5);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
  id v8 = a2;
  id v9 = (id)v7(v5, v6);
  a3(v8, v9, 0);
}

uint64_t HIDEvent.flags.setter(uint64_t a1, uint64_t a2)
{
  return _IOHIDEventSetEventFlags(a2, a1);
}

uint64_t (*HIDEvent.flags.modify(void *a1, uint64_t a2))(uint64_t a1)
{
  sub_1000476CC(a1, a2);
  *(_DWORD *)(v2 + 8) = IOHIDEventGetEventFlags();
  return sub_100047FA0;
}

uint64_t sub_100047FA0(uint64_t a1)
{
  return _IOHIDEventSetEventFlags(*(void *)a1, *(unsigned int *)(a1 + 8));
}

BOOL HIDEvent.isAbsolute.getter()
{
  return IOHIDEventIsAbsolute() != 0;
}

BOOL HIDEvent.isRepeat.getter()
{
  return IOHIDEventIsRepeat() != 0;
}

uint64_t HIDEvent.isRepeat.setter(uint64_t result, uint64_t a2)
{
  if (result) {
    return _IOHIDEventSetRepeat(a2);
  }
  return result;
}

uint64_t (*HIDEvent.isRepeat.modify(void *a1, uint64_t a2))(uint64_t result)
{
  sub_1000476CC(a1, a2);
  *(unsigned char *)(v2 + 8) = IOHIDEventIsRepeat() != 0;
  return sub_10004804C;
}

uint64_t sub_10004804C(uint64_t result)
{
  if (*(unsigned char *)(result + 8) == 1) {
    return _IOHIDEventSetRepeat(*(void *)result);
  }
  return result;
}

uint64_t HIDEvent.latency.getter(uint64_t a1)
{
  return _IOHIDEventGetLatency(a1, 1);
}

uint64_t HIDEvent.momentum.getter()
{
  return IOHIDEventGetScrollMomentum();
}

uint64_t HIDEvent.momentum.setter(uint64_t a1, uint64_t a2)
{
  return sub_100049230(a2);
}

uint64_t (*HIDEvent.momentum.modify(void *a1, uint64_t a2))(uint64_t *a1)
{
  sub_1000476CC(a1, a2);
  *(unsigned char *)(v2 + 8) = IOHIDEventGetScrollMomentum();
  return sub_1000480D4;
}

uint64_t sub_1000480D4(uint64_t *a1)
{
  return sub_100049230(*a1);
}

uint64_t HIDEvent.phase.getter()
{
  char Phase = IOHIDEventGetPhase();
  if ((Phase & 8) != 0) {
    int v1 = 4;
  }
  else {
    int v1 = (Phase >> 7) & 5;
  }
  if ((Phase & 4) != 0) {
    int v2 = 3;
  }
  else {
    int v2 = v1;
  }
  if ((Phase & 2) != 0) {
    unsigned int v3 = 2;
  }
  else {
    unsigned int v3 = v2;
  }
  if (Phase) {
    return 1;
  }
  else {
    return v3;
  }
}

uint64_t HIDEvent.phase.setter(char a1, uint64_t a2)
{
  return _IOHIDEventSetPhase(a2, word_1000657B2[a1]);
}

uint64_t (*HIDEvent.phase.modify(void *a1, uint64_t a2))(uint64_t a1)
{
  sub_1000476CC(a1, a2);
  *(unsigned char *)(v2 + 8) = HIDEvent.phase.getter();
  return sub_100048194;
}

uint64_t sub_100048194(uint64_t a1)
{
  return _IOHIDEventSetPhase(*(void *)a1, word_1000657B2[*(char *)(a1 + 8)]);
}

uint64_t HIDEvent.sender.setter(uint64_t a1, uint64_t a2)
{
  return _IOHIDEventSetSenderID(a2, a1);
}

uint64_t (*HIDEvent.sender.modify(uint64_t *a1, uint64_t a2))(void *a1)
{
  a1[1] = a2;
  *a1 = IOHIDEventGetSenderID();
  return sub_10004820C;
}

uint64_t sub_10004820C(void *a1)
{
  return _IOHIDEventSetSenderID(a1[1], *a1);
}

uint64_t HIDEvent.timestamp.setter(uint64_t a1, uint64_t a2)
{
  return _IOHIDEventSetTimeStamp(a2, a1);
}

uint64_t (*HIDEvent.timestamp.modify(uint64_t *a1, uint64_t a2))(void *a1)
{
  a1[1] = a2;
  *a1 = IOHIDEventGetTimeStamp();
  return sub_100048278;
}

uint64_t sub_100048278(void *a1)
{
  return _IOHIDEventSetTimeStamp(a1[1], *a1);
}

double HIDEvent.timestampSeconds.getter()
{
  IOHIDEventGetTimeStamp();
  HostTime.nanoseconds.getter();
  return (double)v0 * 0.000000001;
}

void HostTime.seconds.getter()
{
  if (qword_100085280 != -1) {
    swift_once();
  }
  sub_100049214();
  if (!v1 & v0) {
    return;
  }
  sub_1000462A8();
  if (v1)
  {
    __break(1u);
    goto LABEL_12;
  }
  sub_100049224();
  if (v2 ^ v3 | v1)
  {
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
    return;
  }
  sub_100049214();
  if (!v2) {
    goto LABEL_13;
  }
}

uint64_t HIDEvent.timestampSeconds.setter(uint64_t a1, double a2)
{
  v3.Swift::UInt64 rawValue = HostTime.init(nanoseconds:)(a2 * 1000000000.0).rawValue;

  return _IOHIDEventSetTimeStamp(a1, v3.rawValue);
}

SidecarHID::HostTime __swiftcall HostTime.init(seconds:)(Swift::Double seconds)
{
  if (qword_100085280 != -1) {
    swift_once();
  }
  sub_100049214();
  if (!v2 & v1) {
    return (SidecarHID::HostTime)-1;
  }
  sub_1000462A8();
  if (v2)
  {
    __break(1u);
    goto LABEL_12;
  }
  sub_100049224();
  if (v4 ^ v5 | v2)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  sub_100049214();
  if (v4) {
    return (SidecarHID::HostTime)(unint64_t)v6;
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t (*HIDEvent.timestampSeconds.modify(uint64_t a1, uint64_t a2))(uint64_t a1)
{
  *(void *)(a1 + 8) = a2;
  IOHIDEventGetTimeStamp();
  HostTime.nanoseconds.getter();
  *(double *)a1 = (double)v3 * 0.000000001;
  return sub_1000484C4;
}

uint64_t sub_1000484C4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  v2.Swift::UInt64 rawValue = HostTime.init(nanoseconds:)(*(double *)a1 * 1000000000.0).rawValue;

  return _IOHIDEventSetTimeStamp(v1, v2.rawValue);
}

uint64_t HIDEvent.vendor.getter()
{
  return 0;
}

float sub_100048580()
{
  mach_timebase_info v2 = 0;
  mach_timebase_info(&v2);
  *(void *)&long long v0 = v2.numer;
  *((void *)&v0 + 1) = v2.denom;
  float result = *(float *)&v2.numer;
  static HostTime.timebase = v0;
  return result;
}

long long *HostTime.timebase.unsafeMutableAddressor()
{
  if (qword_100085280 != -1) {
    swift_once();
  }
  return &static HostTime.timebase;
}

uint64_t static HostTime.timebase.getter()
{
  if (qword_100085280 != -1) {
    swift_once();
  }
  return static HostTime.timebase;
}

SidecarHID::HostTime __swiftcall HostTime.init(nanoseconds:)(Swift::Double nanoseconds)
{
  if (qword_100085280 != -1) {
    swift_once();
  }
  sub_100049214();
  if (!v2 & v1) {
    return (SidecarHID::HostTime)-1;
  }
  sub_1000462A8();
  if (v2)
  {
    __break(1u);
    goto LABEL_12;
  }
  sub_100049224();
  if (v4 ^ v5 | v2)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  sub_100049214();
  if (v4) {
    return (SidecarHID::HostTime)(unint64_t)v6;
  }
LABEL_13:
  __break(1u);
  return result;
}

SidecarHID::HostTime __swiftcall HostTime.init(nanoseconds:)(Swift::UInt64 nanoseconds)
{
  if (qword_100085280 != -1) {
    swift_once();
  }
  sub_100049214();
  if (!v2 & v1) {
    return (SidecarHID::HostTime)-1;
  }
  sub_1000462A8();
  if (v2)
  {
    __break(1u);
    goto LABEL_12;
  }
  sub_100049224();
  if (v4 ^ v5 | v2)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  sub_100049214();
  if (v4) {
    return (SidecarHID::HostTime)(unint64_t)v6;
  }
LABEL_13:
  __break(1u);
  return result;
}

void HostTime.nanoseconds.getter()
{
  if (qword_100085280 != -1) {
    swift_once();
  }
  sub_100049214();
  if (!v1 & v0) {
    return;
  }
  sub_1000462A8();
  if (v1)
  {
    __break(1u);
    goto LABEL_12;
  }
  sub_100049224();
  if (v2 ^ v3 | v1)
  {
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
    return;
  }
  sub_100049214();
  if (!v2) {
    goto LABEL_13;
  }
}

uint64_t static HostTime.+ infix(_:_:)(uint64_t a1, uint64_t a2)
{
  BOOL v2 = __CFADD__(a1, a2);
  uint64_t result = a1 + a2;
  if (v2) {
    __break(1u);
  }
  return result;
}

SidecarHID::HostTime static HostTime.+ infix(_:_:)(double a1)
{
  HostTime.nanoseconds.getter();

  return HostTime.init(nanoseconds:)(((double)v2 * 0.000000001 + a1) * 1000000000.0);
}

unint64_t static HostTime.- infix(_:_:)(unint64_t a1, unint64_t a2)
{
  if (a1 >= a2) {
    return a1 - a2;
  }
  else {
    return 0;
  }
}

BOOL sub_1000488EC(unint64_t a1, unint64_t a2)
{
  return a2 < a1;
}

void static HostTime.- infix(_:_:)(double a1)
{
  if (qword_100085280 != -1) {
    swift_once();
  }
  sub_100049214();
  if (!v4 & v2)
  {
    double v3 = 1.84467441e10;
    goto LABEL_11;
  }
  sub_1000462A8();
  if (v4)
  {
    __break(1u);
    goto LABEL_17;
  }
  sub_100049224();
  if (v5 ^ v6 | v4)
  {
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    return;
  }
  sub_100049214();
  if (!v5) {
    goto LABEL_18;
  }
  double v3 = (double)(unint64_t)v7 * 0.000000001;
LABEL_11:
  if (v3 > a1)
  {
    double v8 = (v3 - a1) * 1000000000.0;
    HostTime.init(nanoseconds:)(v8);
  }
}

BOOL static HostTime.< infix(_:_:)(unint64_t a1, unint64_t a2)
{
  return a1 < a2;
}

BOOL sub_100048A08(unint64_t *a1, unint64_t *a2)
{
  return static HostTime.< infix(_:_:)(*a1, *a2);
}

BOOL sub_100048A14(unint64_t *a1, unint64_t *a2)
{
  return sub_100048A20(*a1, *a2);
}

BOOL sub_100048A20(unint64_t a1, unint64_t a2)
{
  return a2 >= a1;
}

BOOL sub_100048A2C(unint64_t *a1, unint64_t *a2)
{
  return sub_100048A38(*a1, *a2);
}

BOOL sub_100048A38(unint64_t a1, unint64_t a2)
{
  return a1 >= a2;
}

BOOL sub_100048A44(unint64_t *a1, unint64_t *a2)
{
  return sub_1000488EC(*a1, *a2);
}

uint64_t sub_100048A50(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0 || (a3 + 8 * a2 > a1 ? (BOOL v3 = a1 + 8 * a2 > a3) : (BOOL v3 = 0), v3))
  {
    uint64_t result = sub_10005F0B0();
    __break(1u);
  }
  else
  {
    return swift_arrayInitWithCopy();
  }
  return result;
}

uint64_t sub_100048B30(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0 || (a3 + 16 * a2 > a1 ? (BOOL v3 = a1 + 16 * a2 > a3) : (BOOL v3 = 0), v3))
  {
    uint64_t result = sub_10005F0B0();
    __break(1u);
  }
  else
  {
    return swift_arrayInitWithCopy();
  }
  return result;
}

char *sub_100048C10(char *a1, int64_t a2, char a3)
{
  uint64_t result = sub_100048C50(a1, a2, a3, *v3);
  uint64_t *v3 = (uint64_t)result;
  return result;
}

char *sub_100048C30(char *a1, int64_t a2, char a3)
{
  uint64_t result = sub_100048D34(a1, a2, a3, *v3);
  uint64_t *v3 = (uint64_t)result;
  return result;
}

char *sub_100048C50(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100007D1C(&qword_100085340);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 8);
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = (char *)(a4 + 32);
  if (v5)
  {
    sub_100056320(v13, v8, v12);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_100048A50((unint64_t)v13, v8, (unint64_t)v12);
  }
  swift_release();
  return v10;
}

char *sub_100048D34(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100007D1C((uint64_t *)&unk_100083FB0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 16);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = (char *)(a4 + 32);
  if (v5)
  {
    sub_10000AD78(v13, v8, v12);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_100048B30((unint64_t)v13, v8, (unint64_t)v12);
  }
  swift_release();
  return v10;
}

uint64_t sub_100048E18(unint64_t a1, unint64_t a2)
{
  if (a2 >> 62)
  {
    uint64_t v2 = sub_10005F090();
    type metadata accessor for IOHIDEvent(0);
    if (swift_dynamicCastUnknownClass()) {
      return v2;
    }
LABEL_10:
    sub_10005EF40(85);
    v3._uint64_t countAndFlagsBits = 0xD000000000000046;
    v3._object = (void *)0x80000001000634B0;
    goto LABEL_11;
  }
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10) <= a1)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v2 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 8 * a1 + 0x20);
  type metadata accessor for IOHIDEvent(0);
  swift_unknownObjectRetain();
  if (swift_dynamicCastUnknownClass()) {
    return v2;
  }
  sub_10005EF40(82);
  v3._object = (void *)0x8000000100063460;
  v3._uint64_t countAndFlagsBits = 0xD000000000000043;
LABEL_11:
  sub_10005E9C0(v3);
  v5._uint64_t countAndFlagsBits = 0x6576454449484F49;
  v5._object = (void *)0xED0000666552746ELL;
  sub_10005E9C0(v5);
  v6._uint64_t countAndFlagsBits = 0x756F662074756220;
  v6._object = (void *)0xEB0000000020646ELL;
  sub_10005E9C0(v6);
  swift_getObjectType();
  swift_unknownObjectRelease();
  v7._uint64_t countAndFlagsBits = sub_10005F220();
  sub_10005E9C0(v7);
  swift_bridgeObjectRelease();
  uint64_t result = sub_10005F060();
  __break(1u);
  return result;
}

unint64_t sub_100048FD8()
{
  unint64_t result = qword_100085330;
  if (!qword_100085330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100085330);
  }
  return result;
}

unint64_t sub_100049028()
{
  unint64_t result = qword_100085338;
  if (!qword_100085338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100085338);
  }
  return result;
}

void type metadata accessor for HIDEvent()
{
}

uint64_t getEnumTagSinglePayload for HIDEvent.Phase(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFB)
  {
    if (a2 + 5 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 5) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 6;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v5 = v6 - 6;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for HIDEvent.Phase(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000491D4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

void type metadata accessor for HIDEvent.Phase()
{
}

void type metadata accessor for HostTime()
{
}

uint64_t sub_100049230@<X0>(uint64_t a1@<X8>)
{
  return _IOHIDEventSetScrollMomentum(a1);
}

uint64_t HIDReport.bytes.getter()
{
  return *(void *)(v0 + 16);
}

void *HIDReport.__allocating_init(count:)(int64_t a1)
{
  uint64_t v2 = swift_allocObject();
  unint64_t result = (void *)swift_slowAlloc();
  *(void *)(v2 + 16) = result;
  *(void *)(v2 + 24) = a1;
  if (!a1) {
    return (void *)v2;
  }
  if (a1 >= 1)
  {
    bzero(result, a1);
    return (void *)v2;
  }
  __break(1u);
  return result;
}

void *HIDReport.init(count:)(int64_t a1)
{
  unint64_t result = (void *)swift_slowAlloc();
  *(void *)(v1 + 16) = result;
  *(void *)(v1 + 24) = a1;
  if (!a1) {
    return (void *)v1;
  }
  if (a1 >= 1)
  {
    bzero(result, a1);
    return (void *)v1;
  }
  __break(1u);
  return result;
}

uint64_t HIDReport.deinit()
{
  if (*(void *)(v0 + 16)) {
    swift_slowDealloc();
  }
  return v0;
}

uint64_t HIDReport.__deallocating_deinit()
{
  if (*(void *)(v0 + 16)) {
    swift_slowDealloc();
  }

  return _swift_deallocClassInstance(v0, 32, 7);
}

const void *static HIDReport.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  size_t v2 = *(void *)(a1 + 24);
  if (v2 != *(void *)(a2 + 24)) {
    return 0;
  }
  unint64_t result = *(const void **)(a1 + 16);
  if (result)
  {
    unsigned int v4 = *(const void **)(a2 + 16);
    if (v4) {
      return (const void *)(memcmp(result, v4, v2) == 0);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t Clock.clockIdentifier.getter()
{
  return *(void *)(v0 + 24);
}

void (*HIDReport.subscript.modify(uint64_t a1, uint64_t a2))(uint64_t a1)
{
  *(void *)a1 = a2;
  *(void *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(*(void *)(v2 + 16) + a2);
  return sub_1000493E4;
}

void sub_1000493E4(uint64_t a1)
{
}

Swift::Int __swiftcall HIDReport.index(after:)(Swift::Int after)
{
  return after + 1;
}

uint64_t HIDReport.indices.getter()
{
  return 0;
}

Swift::Void __swiftcall HIDReport.swapAt(_:_:)(Swift::Int a1, Swift::Int a2)
{
  if (a1 != a2)
  {
    uint64_t v3 = *(void *)(v2 + 16);
    if (v3)
    {
      char v4 = *(unsigned char *)(v3 + a1);
      *(unsigned char *)(v3 + a1) = *(unsigned char *)(v3 + a2);
      *(unsigned char *)(v3 + a2) = v4;
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t HIDReport.baseAddress.getter()
{
  uint64_t result = *(void *)(v0 + 16);
  if (!result) {
    __break(1u);
  }
  return result;
}

Swift::Void __swiftcall HIDReport.fill(with:)(Swift::UInt8 with)
{
  int v2 = with;
  uint64_t v3 = *(void **)(v1 + 16);
  if (v3) {
    memset(v3, v2, *(void *)(v1 + 24));
  }
  else {
    __break(1u);
  }
}

void HIDReport.copy(from:)(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 24);
  uint64_t v3 = *(char **)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  if (v2 >= v4) {
    size_t v5 = *(void *)(v1 + 24);
  }
  else {
    size_t v5 = *(void *)(a1 + 24);
  }
  if (!v3) {
    goto LABEL_13;
  }
  unsigned int v6 = *(const void **)(a1 + 16);
  if (!v6)
  {
LABEL_14:
    __break(1u);
    return;
  }
  memcpy(v3, v6, v5);
  if (v2 >= v4) {
    return;
  }
  if (__OFSUB__(v4, v5))
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }

  bzero(&v3[v5], v4 - v5);
}

void *HIDReport.copy()()
{
  uint64_t v1 = v0;
  uint64_t v2 = HIDReport.__allocating_init(count:)(*(void *)(v0 + 24));
  HIDReport.copy(from:)(v1);
  return v2;
}

char *HIDReport.description.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  if (!v1)
  {
LABEL_9:
    sub_100007D1C((uint64_t *)&unk_100084420);
    sub_10004C18C((uint64_t)&qword_100084750);
    uint64_t v10 = sub_10005E8A0();
    swift_bridgeObjectRelease();
    return (char *)v10;
  }
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t result = sub_100048C30(0, v1 & ~(v1 >> 63), 0);
  if ((v1 & 0x8000000000000000) == 0)
  {
    sub_10004BCFC();
    do
    {
      ++v2;
      uint64_t v4 = sub_10005EA40();
      unsigned int v6 = v5;
      if (sub_10005E990() <= 1)
      {
        v11._uint64_t countAndFlagsBits = v4;
        v11._object = v6;
        sub_10005E9C0(v11);
        swift_bridgeObjectRelease();
        uint64_t v4 = 48;
        unsigned int v6 = (void *)0xE100000000000000;
      }
      unint64_t v8 = _swiftEmptyArrayStorage[2];
      unint64_t v7 = _swiftEmptyArrayStorage[3];
      if (v8 >= v7 >> 1) {
        sub_100048C30((char *)(v7 > 1), v8 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v8 + 1;
      uint64_t v9 = &_swiftEmptyArrayStorage[2 * v8];
      v9[4] = v4;
      v9[5] = v6;
      --v1;
    }
    while (v1);
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

char *sub_1000496F0()
{
  return HIDReport.description.getter();
}

unint64_t sub_100049714(uint64_t *a1, uint64_t *a2)
{
  return (unint64_t)static HIDReport.== infix(_:_:)(*a1, *a2) & 1;
}

uint64_t sub_100049738(uint64_t a1, uint64_t a2)
{
  BOOL v3 = __OFADD__(a1, a2);
  uint64_t result = a1 + a2;
  if (v3)
  {
    __break(1u);
LABEL_6:
    __break(1u);
    return result;
  }
  if (result < 0 || *(void *)(v2 + 24) < result) {
    goto LABEL_6;
  }
  return result;
}

uint64_t sub_100049760(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1000497D0(a1, a3);
  if (a2 < 1)
  {
    if (v5 <= 0 && v5 > a2) {
      return 0;
    }
  }
  else if ((v5 & 0x8000000000000000) == 0 && v5 < (unint64_t)a2)
  {
    return 0;
  }
  return sub_100049738(a1, a2);
}

uint64_t sub_1000497D0(uint64_t result, uint64_t a2)
{
  uint64_t v3 = *(void *)(v2 + 24);
  if (v3 >= a2 && ((a2 | result) & 0x8000000000000000) == 0 && v3 >= result) {
    return a2 - result;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000497F8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_100049828(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_100049828(uint64_t a1)
{
  BOOL v2 = __OFSUB__(a1, 1);
  uint64_t result = a1 - 1;
  if (v2)
  {
    __break(1u);
LABEL_6:
    __break(1u);
    return result;
  }
  if (result < 0 || result >= *(void *)(v1 + 24)) {
    goto LABEL_6;
  }
  return result;
}

uint64_t sub_10004984C(uint64_t *a1)
{
  uint64_t result = sub_100049828(*a1);
  *a1 = result;
  return result;
}

uint64_t sub_10004987C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = sub_100049738(*a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1000498AC(uint64_t *a1, uint64_t *a2)
{
  return sub_1000497D0(*a1, *a2);
}

void sub_1000498D8(void *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_1000498E0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = Clock.clockIdentifier.getter();
  *a1 = result;
  return result;
}

uint64_t (*sub_10004990C(unsigned char *a1, void *a2))()
{
  *a1 = HIDReport.subscript.getter(*a2);
  return VideoStream.qosMonitorServerDidDie(_:);
}

void sub_100049958(void *a1@<X8>)
{
  HIDReport.subscript.getter();
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
}

uint64_t sub_100049990@<X0>(void *a1@<X8>)
{
  uint64_t result = HIDReport.indices.getter();
  *a1 = 0;
  a1[1] = v3;
  return result;
}

BOOL sub_1000499BC()
{
  return sub_1000499E4();
}

BOOL sub_1000499E4()
{
  return *(void *)(v0 + 24) == 0;
}

uint64_t sub_1000499F4()
{
  return Clock.clockIdentifier.getter();
}

void sub_100049A18(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(_WORD *)(a1 + 8) = 256;
}

uint64_t sub_100049A28@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t result = sub_100049760(*a1, a2, *a3);
  *(void *)a4 = result;
  *(unsigned char *)(a4 + 8) = v6 & 1;
  return result;
}

uint64_t sub_100049A64(uint64_t *a1, uint64_t *a2)
{
  return sub_100049A94(*a1, *a2, a2[1]);
}

uint64_t sub_100049A94(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result >= a2)
  {
    BOOL v4 = __OFSUB__(result, a3);
    BOOL v3 = result - a3 < 0;
  }
  else
  {
    BOOL v4 = 0;
    BOOL v3 = 0;
  }
  if (v3 == v4) {
    __break(1u);
  }
  return result;
}

uint64_t sub_100049AA8(uint64_t *a1, uint64_t *a2)
{
  return sub_100049AD8(*a1, *a2, a2[1]);
}

uint64_t sub_100049AD8(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result < a2 || a3 < result) {
    __break(1u);
  }
  return result;
}

uint64_t sub_100049AEC(uint64_t *a1, uint64_t *a2)
{
  return sub_100049B20(*a1, a1[1], *a2, a2[1]);
}

uint64_t sub_100049B20(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (result < a3 || a4 < a2) {
    __break(1u);
  }
  return result;
}

Swift::Int sub_100049B34@<X0>(Swift::Int *a1@<X0>, Swift::Int *a2@<X8>)
{
  Swift::Int result = HIDReport.index(after:)(*a1);
  *a2 = result;
  return result;
}

void *sub_100049B60(void *result)
{
  return result;
}

void sub_100049B70(void *a1@<X8>)
{
  *a1 = *v1;
  a1[1] = 0;
}

uint64_t sub_100049B7C()
{
  return 2;
}

void *sub_100049B84()
{
  return sub_100049BA8();
}

void *sub_100049BA8()
{
  uint64_t v1 = sub_10004C1CC(v0);
  swift_release();
  return v1;
}

uint64_t sub_100049BDC()
{
  return sub_10004F1B0();
}

uint64_t sub_100049C00()
{
  return sub_10005EA80();
}

uint64_t HIDReport.getValue(_:at:bit:)(uint64_t a1, unint64_t a2)
{
  if (a2 > 0x3F)
  {
    LOBYTE(v3) = 0;
    return (v3 & *(unsigned char *)(*(void *)(v2 + 16) + a1)) != 0;
  }
  if (a2 < 8)
  {
    uint64_t v3 = 1 << a2;
    return (v3 & *(unsigned char *)(*(void *)(v2 + 16) + a1)) != 0;
  }
  sub_10000C25C();
  uint64_t result = sub_10005F040();
  __break(1u);
  return result;
}

Swift::Void __swiftcall HIDReport.setValue(_:at:bit:)(Swift::Bool _, Swift::Int at, Swift::Int bit)
{
  if (bit < -64)
  {
LABEL_2:
    LOBYTE(v4) = 0;
    if (!_) {
      goto LABEL_11;
    }
LABEL_6:
    uint64_t v5 = *(void *)(v3 + 16);
    char v6 = *(unsigned char *)(v5 + at) | v4;
LABEL_12:
    *(unsigned char *)(v5 + at) = v6;
    return;
  }
  if (bit > 64) {
    goto LABEL_5;
  }
  if (bit < 0) {
    goto LABEL_2;
  }
  if ((unint64_t)bit >= 0x40)
  {
LABEL_5:
    LOBYTE(v4) = 0;
    if (_) {
      goto LABEL_6;
    }
LABEL_11:
    uint64_t v5 = *(void *)(v3 + 16);
    char v6 = *(unsigned char *)(v5 + at) & ~(_BYTE)v4;
    goto LABEL_12;
  }
  if ((unint64_t)bit < 8)
  {
    uint64_t v4 = 1 << bit;
    if (_) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
  sub_10000C25C();
  sub_10005F040();
  __break(1u);
}

unint64_t HIDReport.getValue(_:at:)(unint64_t result)
{
  if (__OFADD__(result, 7))
  {
    __break(1u);
  }
  else
  {
    uint64_t v2 = *(void *)(v1 + 16);
    return *(unsigned int *)(v2 + result) | ((unint64_t)*(unsigned __int8 *)(v2 + result + 4) << 32) | ((unint64_t)*(unsigned __int8 *)(v2 + result + 5) << 40) | ((unint64_t)*(unsigned __int8 *)(v2 + result + 6) << 48) | ((unint64_t)*(unsigned __int8 *)(v2 + result + 7) << 56);
  }
  return result;
}

Swift::Void __swiftcall HIDReport.setValue(_:at:)(Swift::UInt64 _, Swift::Int at)
{
  uint64_t v3 = *(void *)(v2 + 16);
  *(unsigned char *)(v3 + at) = _;
  if (__OFADD__(at, 1))
  {
    __break(1u);
    goto LABEL_10;
  }
  *(unsigned char *)(v3 + at + 1) = BYTE1(_);
  if (__OFADD__(at, 2))
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  *(unsigned char *)(v3 + at + 2) = BYTE2(_);
  if (__OFADD__(at, 3))
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  *(unsigned char *)(v3 + at + 3) = BYTE3(_);
  if (__OFADD__(at, 4))
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  *(unsigned char *)(v3 + at + 4) = BYTE4(_);
  if (__OFADD__(at, 5))
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  *(unsigned char *)(v3 + at + 5) = BYTE5(_);
  if (__OFADD__(at, 6))
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  *(unsigned char *)(v3 + at + 6) = BYTE6(_);
  if (!__OFADD__(at, 7))
  {
    *(unsigned char *)(v3 + at + 7) = HIBYTE(_);
    return;
  }
LABEL_15:
  __break(1u);
}

Swift::Void __swiftcall HIDReport.setValue(_:at:)(Swift::Int8 _, Swift::Int at)
{
  *(unsigned char *)(*(void *)(v2 + 16) + at) = _;
}

uint64_t _s10SidecarHID9HIDReportC8getValue_2ats6UInt16VAGm_SitF_0(uint64_t result)
{
  if (!__OFADD__(result, 1)) {
    return *(unsigned __int8 *)(*(void *)(v1 + 16) + result) | (*(unsigned __int8 *)(*(void *)(v1 + 16) + result + 1) << 8);
  }
  __break(1u);
  return result;
}

void _s10SidecarHID9HIDReportC8setValue_2atys6UInt16V_SitF_0(char a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(v2 + 16);
  *(unsigned char *)(v3 + a2) = a1;
  if (__OFADD__(a2, 1)) {
    __break(1u);
  }
  else {
    sub_10004C570(v3);
  }
}

uint64_t _s10SidecarHID9HIDReportC8getValue_2ats6UInt32VAGm_SitF_0(uint64_t result)
{
  if (!__OFADD__(result, 3)) {
    return *(unsigned __int16 *)(*(void *)(v1 + 16) + result) | (*(unsigned __int8 *)(*(void *)(v1 + 16) + result + 2) << 16) | (*(unsigned __int8 *)(*(void *)(v1 + 16) + result + 3) << 24);
  }
  __break(1u);
  return result;
}

void _s10SidecarHID9HIDReportC8setValue_2atys6UInt32V_SitF_0(int a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(v2 + 16);
  *(unsigned char *)(v3 + a2) = a1;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
    goto LABEL_6;
  }
  *(unsigned char *)(v3 + a2 + 1) = BYTE1(a1);
  if (__OFADD__(a2, 2))
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  *(unsigned char *)(v3 + a2 + 2) = BYTE2(a1);
  if (!__OFADD__(a2, 3))
  {
    sub_10004C570(v3);
    return;
  }
LABEL_7:
  __break(1u);
}

double sub_100049F70(unsigned __int8 a1)
{
  return sub_10004C3B4(a1);
}

double sub_100049F80(unsigned __int16 a1)
{
  return sub_10004C3B4(a1);
}

double HIDReport.scaleValue<A>(_:_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v39 = a2;
  v36[1] = a1;
  sub_10004C2A8();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  sub_10004C560();
  uint64_t v37 = v6 - v7;
  __chkstk_darwin(v8);
  sub_10004C5C0();
  __chkstk_darwin(v9);
  Swift::String v11 = (char *)v36 - v10;
  double v13 = __chkstk_darwin(v12);
  uint64_t v15 = (char *)v36 - v14;
  uint64_t v16 = *(void (**)(void))(v4 + 16);
  ((void (*)(char *, uint64_t, uint64_t, double))v16)((char *)v36 - v14, v17, v18, v13);
  uint64_t v19 = sub_10004C59C();
  uint64_t v38 = v16;
  if (v19 < 65)
  {
    sub_10004C424();
    sub_10004C584();
    uint64_t v20 = *(void (**)(void))(v4 + 8);
    sub_10004C2C0();
    v20();
    double v22 = sub_10004C4D0();
    uint64_t v16 = v38;
    if (v24) {
      double v21 = v23;
    }
    else {
      double v21 = v22;
    }
  }
  else
  {
    sub_10004BD48();
    sub_1000080D4();
    sub_10004C364((uint64_t)&v40, (uint64_t)v15, (uint64_t)&type metadata for Double);
    uint64_t v20 = *(void (**)(void))(v4 + 8);
    sub_10004C2C0();
    v20();
    double v21 = v40;
  }
  sub_10004C384();
  v16();
  if (sub_10004C59C() <= 64)
  {
    sub_10004C424();
    sub_10004C584();
    sub_10004C2C0();
    v20();
    double v26 = sub_10004C4D0();
    uint64_t v16 = v38;
    if (v24) {
      double v25 = v27;
    }
    else {
      double v25 = v26;
    }
  }
  else
  {
    sub_10004BD48();
    sub_1000080D4();
    sub_10004C364((uint64_t)&v40, (uint64_t)v11, (uint64_t)&type metadata for Double);
    sub_10004C2C0();
    v20();
    double v25 = v40;
  }
  sub_10004C384();
  v16();
  if (sub_10004C59C() <= 64)
  {
    sub_10004C424();
    sub_10004C584();
    sub_10004C2C0();
    v20();
    double v29 = sub_10004C4D0();
    uint64_t v16 = v38;
    if (v24) {
      double v28 = v30;
    }
    else {
      double v28 = v29;
    }
  }
  else
  {
    sub_10004BD48();
    sub_1000080D4();
    sub_10004C364((uint64_t)&v40, v2, (uint64_t)&type metadata for Double);
    sub_10004C2C0();
    v20();
    double v28 = v40;
  }
  uint64_t v31 = v37;
  sub_10004C384();
  v16();
  if (sub_10004C59C() <= 64)
  {
    char v33 = sub_10004C424();
    uint64_t v34 = sub_10004C584();
    sub_10004C2C0();
    v20();
    if (v33) {
      double v32 = (double)v34;
    }
    else {
      double v32 = (double)(unint64_t)v34;
    }
  }
  else
  {
    sub_10004BD48();
    sub_1000080D4();
    sub_10004C364((uint64_t)&v40, v31, (uint64_t)&type metadata for Double);
    sub_10004C2C0();
    v20();
    double v32 = v40;
  }
  return (v28 - v32) / (v21 - v25);
}

double HIDReport.getScaledValue(_:at:logicalMinimum:logicalMaximum:)(uint64_t a1, unsigned __int8 a2, unsigned __int8 a3, double a4, double a5, double a6)
{
  LOBYTE(a6) = *(unsigned char *)(*(void *)(v6 + 16) + a1);
  return ((double)*(unint64_t *)&a6 - (double)a2) / ((double)a3 - (double)a2);
}

double HIDReport.getScaledValue(_:at:logicalMinimum:logicalMaximum:)(uint64_t a1, unsigned __int16 a2, unsigned __int16 a3)
{
  return ((double)(unsigned __int16)HIDReport.getValue(_:at:)(a1) - (double)a2) / ((double)a3 - (double)a2);
}

double HIDReport.getScaledValue(_:at:logicalMinimum:logicalMaximum:)(uint64_t a1, unsigned int a2, unsigned int a3)
{
  return ((double)HIDReport.getValue(_:at:)(a1) - (double)a2) / ((double)a3 - (double)a2);
}

double sub_10004A3C0(char a1, char a2, char a3)
{
  return sub_10004C394(a2, a3, a1);
}

void HIDReport.scaleValue<A>(_:_:_:)()
{
  sub_1000460E4();
  v21[1] = v0;
  v21[2] = v1;
  sub_10004C2A8();
  uint64_t v3 = v2;
  __chkstk_darwin(v4);
  sub_10004C560();
  uint64_t v7 = v5 - v6;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v21 - v9;
  double v12 = __chkstk_darwin(v11);
  uint64_t v14 = (char *)v21 - v13;
  uint64_t v15 = *(void (**)(void))(v3 + 16);
  ((void (*)(char *, double))v15)((char *)v21 - v13, v12);
  if (sub_10004C3E8() < 65)
  {
    v21[0] = v10;
    uint64_t v18 = v3;
    char v19 = sub_10004C2F0();
    uint64_t v20 = sub_10004C3D0();
    uint64_t v16 = *(void (**)(void))(v18 + 8);
    sub_10004C2C0();
    v16();
    if ((v19 & 1) == 0) {
      goto LABEL_8;
    }
    double v17 = (double)v20;
    uint64_t v10 = (char *)v21[0];
  }
  else
  {
    sub_10004BD48();
    sub_1000080D4();
    sub_10004C2D0((uint64_t)&v22, (uint64_t)v14, (uint64_t)&type metadata for Double);
    uint64_t v16 = *(void (**)(void))(v3 + 8);
    sub_10004C2C0();
    v16();
    double v17 = v22;
  }
  if (v17 >= 0.0)
  {
LABEL_8:
    sub_10004C384();
    v15();
    if (sub_10004C3E8() >= 65)
    {
      sub_10004BD48();
      sub_1000080D4();
      sub_10004C2D0((uint64_t)&v22, v7, (uint64_t)&type metadata for Double);
      goto LABEL_10;
    }
LABEL_11:
    sub_10004C2F0();
    sub_10004C3D0();
    sub_10004C2C0();
    v16();
    goto LABEL_12;
  }
  sub_10004C384();
  v15();
  if (sub_10004C3E8() < 65) {
    goto LABEL_11;
  }
  sub_10004BD48();
  sub_1000080D4();
  sub_10004C2D0((uint64_t)&v22, (uint64_t)v10, (uint64_t)&type metadata for Double);
LABEL_10:
  sub_10004C2C0();
  v16();
LABEL_12:
  sub_100046100();
}

{
  void (*v0)(char *);
  uint64_t v1;
  uint64_t v2;
  double v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void (*v18)(void);
  double v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  char v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  double v28;

  sub_1000460E4();
  uint64_t v4 = v3;
  sub_10004C2A8();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_10004C4B4();
  __chkstk_darwin(v8);
  double v17 = sub_10004C400(v9, v10, v11, v12, v13, v14, v15, v16, v27);
  v0(v17);
  if (sub_10004C3E8() < 65)
  {
    uint64_t v20 = sub_10004C2F0();
    double v21 = sub_10004C3D0();
    uint64_t v18 = *(void (**)(void))(v6 + 8);
    sub_10004C2C0();
    v18();
    if (v20) {
      char v19 = (double)v21;
    }
    else {
      char v19 = (double)(unint64_t)v21;
    }
  }
  else
  {
    sub_10004BD48();
    sub_1000080D4();
    sub_10004C2D0((uint64_t)&v28, v2, (uint64_t)&type metadata for Double);
    uint64_t v18 = *(void (**)(void))(v6 + 8);
    sub_10004C2C0();
    v18();
    char v19 = v28;
  }
  double v22 = sub_10004C4F8();
  v0((char *)v22);
  if (sub_10004C3E8() <= 64)
  {
    char v24 = sub_10004C2F0();
    double v25 = sub_10004C3D0();
    sub_10004C2C0();
    v18();
    if (v24) {
      double v23 = (double)v25;
    }
    else {
      double v23 = (double)(unint64_t)v25;
    }
  }
  else
  {
    sub_10004BD48();
    sub_1000080D4();
    sub_10004C2D0((uint64_t)&v28, v1, (uint64_t)&type metadata for Double);
    sub_10004C2C0();
    v18();
    double v23 = v28;
  }
  double v26 = v19 + (v23 - v19) * v4;
  if (v26 <= v19) {
    double v26 = v19;
  }
  if (v23 >= v26) {
    double v23 = v26;
  }
  double v28 = v23;
  sub_10004BD48();
  sub_10004C53C();
  sub_100046100();
}

{
  void (*v0)(char *);
  uint64_t v1;
  uint64_t v2;
  double v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void (*v18)(void);
  double v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  char v24;
  uint64_t v25;
  double v26;
  double v27;
  uint64_t v28;
  double v29;

  sub_1000460E4();
  uint64_t v4 = v3;
  sub_10004C2A8();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_10004C4B4();
  __chkstk_darwin(v8);
  double v17 = sub_10004C400(v9, v10, v11, v12, v13, v14, v15, v16, v28);
  v0(v17);
  if (sub_10004C3E8() < 65)
  {
    uint64_t v20 = sub_10004C2F0();
    double v21 = sub_10004C3D0();
    uint64_t v18 = *(void (**)(void))(v6 + 8);
    sub_10004C2C0();
    v18();
    if (v20) {
      char v19 = (double)v21;
    }
    else {
      char v19 = (double)(unint64_t)v21;
    }
  }
  else
  {
    sub_10004BD48();
    sub_1000080D4();
    sub_10004C2D0((uint64_t)&v29, v2, (uint64_t)&type metadata for Double);
    uint64_t v18 = *(void (**)(void))(v6 + 8);
    sub_10004C2C0();
    v18();
    char v19 = v29;
  }
  double v22 = sub_10004C4F8();
  v0((char *)v22);
  if (sub_10004C3E8() <= 64)
  {
    char v24 = sub_10004C2F0();
    double v25 = sub_10004C3D0();
    sub_10004C2C0();
    v18();
    if (v24) {
      double v23 = (double)v25;
    }
    else {
      double v23 = (double)(unint64_t)v25;
    }
  }
  else
  {
    sub_10004BD48();
    sub_1000080D4();
    sub_10004C2D0((uint64_t)&v29, v1, (uint64_t)&type metadata for Double);
    sub_10004C2C0();
    v18();
    double v23 = v29;
  }
  if (v4 >= 0.0) {
    double v26 = v23;
  }
  else {
    double v26 = v19;
  }
  double v27 = fabs(v26) * v4;
  if (v27 <= v19) {
    double v27 = v19;
  }
  if (v23 >= v27) {
    double v23 = v27;
  }
  double v29 = v23;
  sub_10004BD48();
  sub_10004C53C();
  sub_100046100();
}

double HIDReport.getScaledValue(_:at:logicalMinimum:logicalMaximum:)(uint64_t a1, char a2, char a3)
{
  return sub_10004C394(a2, a3, *(char *)(*(void *)(v3 + 16) + a1));
}

double HIDReport.getScaledValue(_:at:logicalMinimum:logicalMaximum:)(uint64_t a1, __int16 a2, __int16 a3)
{
  __int16 v5 = HIDReport.getValue(_:at:)(a1);
  if (v5 >= 0) {
    __int16 v6 = a3;
  }
  else {
    __int16 v6 = a2;
  }
  return (double)v5 / fabs((double)v6);
}

double HIDReport.getScaledValue(_:at:logicalMinimum:logicalMaximum:)(uint64_t a1, int a2, int a3)
{
  int v5 = HIDReport.getValue(_:at:)(a1);
  if (v5 >= 0) {
    int v6 = a3;
  }
  else {
    int v6 = a2;
  }
  return (double)v5 / fabs((double)v6);
}

uint64_t sub_10004A710(double a1, uint64_t a2, unsigned __int8 a3)
{
  sub_10004C440(a3, a1);
  sub_100050DB4();
  if ((v7 & 1) == 0) {
    return v6;
  }
  sub_10004C494();
  sub_10004C338();
  sub_10004C30C((uint64_t)" value cannot be converted to ");
  v8._uint64_t countAndFlagsBits = 0x38746E4955;
  v8._object = (void *)0xE500000000000000;
  sub_10005E9C0(v8);
  v5._uint64_t countAndFlagsBits = v3 + 16;
  sub_10004C510(v5, (uint64_t)" because it is outside the representable range");
  sub_10004C480();
  uint64_t result = sub_10004C460();
  __break(1u);
  return result;
}

uint64_t sub_10004A7B4(double a1, uint64_t a2, unsigned __int16 a3)
{
  sub_10004C440(a3, a1);
  sub_100050EC0();
  if ((v7 & 1) == 0) {
    return v6;
  }
  sub_10004C494();
  sub_10004C338();
  sub_10004C30C((uint64_t)" value cannot be converted to ");
  v8._uint64_t countAndFlagsBits = 0x3631746E4955;
  v8._object = (void *)0xE600000000000000;
  sub_10005E9C0(v8);
  v5._uint64_t countAndFlagsBits = v3 + 16;
  sub_10004C510(v5, (uint64_t)" because it is outside the representable range");
  sub_10004C480();
  uint64_t result = sub_10004C460();
  __break(1u);
  return result;
}

uint64_t sub_10004A858()
{
  sub_100050FCC();
  if ((v2 & 1) == 0) {
    return v1;
  }
  sub_10005EF40(80);
  v3._uint64_t countAndFlagsBits = 0x656C62756F44;
  v3._object = (void *)0xE600000000000000;
  sub_10005E9C0(v3);
  v4._object = (void *)0x8000000100063590;
  v4._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
  sub_10005E9C0(v4);
  v5._uint64_t countAndFlagsBits = 0x3233746E4955;
  v5._object = (void *)0xE600000000000000;
  sub_10005E9C0(v5);
  v6._uint64_t countAndFlagsBits = 0xD00000000000002ELL;
  v6._object = (void *)0x80000001000635B0;
  sub_10005E9C0(v6);
  uint64_t result = sub_10005F050();
  __break(1u);
  return result;
}

uint64_t HIDReport.setScaledValue(_:_:at:logicalMinimum:logicalMaximum:)(uint64_t a1, uint64_t a2)
{
  return sub_10004B108(a1, a2);
}

{
  return sub_10004B150(a1, a2);
}

{
  return sub_10004B108(a1, a2);
}

{
  return sub_10004B150(a1, a2);
}

uint64_t HIDReport.setScaledValue(_:_:at:logicalMinimum:logicalMaximum:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10004B1C0(a1, a2, a3, (uint64_t)sub_10004A858, (uint64_t (*)(uint64_t, uint64_t))HIDReport.setValue(_:at:));
}

{
  return sub_10004B1C0(a1, a2, a3, (uint64_t)sub_10004ADC4, (uint64_t (*)(uint64_t, uint64_t))HIDReport.setValue(_:at:));
}

uint64_t sub_10004ABD8()
{
  sub_1000510D4();
  if ((v4 & 1) == 0) {
    return v3;
  }
  sub_10004C494();
  sub_10004C338();
  sub_10004C30C((uint64_t)" value cannot be converted to ");
  v5._uint64_t countAndFlagsBits = 947154505;
  v5._object = (void *)0xE400000000000000;
  sub_10005E9C0(v5);
  v2._uint64_t countAndFlagsBits = v0 + 16;
  sub_10004C510(v2, (uint64_t)" because it is outside the representable range");
  sub_10004C480();
  uint64_t result = sub_10004C460();
  __break(1u);
  return result;
}

uint64_t sub_10004AC94()
{
  sub_100051234();
  if ((v2 & 1) == 0) {
    return v1;
  }
  sub_10005EF40(80);
  v3._uint64_t countAndFlagsBits = 0x656C62756F44;
  v3._object = (void *)0xE600000000000000;
  sub_10005E9C0(v3);
  v4._object = (void *)0x8000000100063590;
  v4._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
  sub_10005E9C0(v4);
  v5._uint64_t countAndFlagsBits = 0x3631746E49;
  v5._object = (void *)0xE500000000000000;
  sub_10005E9C0(v5);
  v6._uint64_t countAndFlagsBits = 0xD00000000000002ELL;
  v6._object = (void *)0x80000001000635B0;
  sub_10005E9C0(v6);
  uint64_t result = sub_10005F050();
  __break(1u);
  return result;
}

uint64_t sub_10004ADC4()
{
  sub_100051394();
  if ((v2 & 1) == 0) {
    return v1;
  }
  sub_10005EF40(80);
  v3._uint64_t countAndFlagsBits = 0x656C62756F44;
  v3._object = (void *)0xE600000000000000;
  sub_10005E9C0(v3);
  v4._object = (void *)0x8000000100063590;
  v4._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
  sub_10005E9C0(v4);
  v5._uint64_t countAndFlagsBits = 0x3233746E49;
  v5._object = (void *)0xE500000000000000;
  sub_10005E9C0(v5);
  v6._uint64_t countAndFlagsBits = 0xD00000000000002ELL;
  v6._object = (void *)0x80000001000635B0;
  sub_10005E9C0(v6);
  uint64_t result = sub_10005F050();
  __break(1u);
  return result;
}

uint64_t sub_10004B108(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10004C52C(a1, a2);
  uint64_t result = v5(v4);
  *(unsigned char *)(*(void *)(v3 + 16) + v2) = result;
  return result;
}

uint64_t sub_10004B150(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10004C52C(a1, a2);
  uint64_t result = v5(v4);
  uint64_t v7 = *(void *)(v3 + 16);
  *(unsigned char *)(v7 + v2) = result;
  if (__OFADD__(v2, 1)) {
    __break(1u);
  }
  else {
    *(unsigned char *)(v7 + v2 + 1) = BYTE1(result);
  }
  return result;
}

uint64_t sub_10004B1C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v6 = sub_10004C52C(a1, a2);
  uint64_t v8 = v7(v6);

  return a5(v8, v5);
}

Swift::Double __swiftcall HIDReport.resolution(logicalMinimum:logicalMaximum:physicalMinimum:physicalMaximum:exponent:)(Swift::Double logicalMinimum, Swift::Double logicalMaximum, Swift::Double_optional physicalMinimum, Swift::Double_optional physicalMaximum, Swift::Double_optional exponent)
{
  double v10 = logicalMaximum;
  double v11 = logicalMinimum;
  if (((*(_DWORD *)&physicalMaximum.is_nil | v5) & 1) == 0)
  {
    double v11 = *(double *)&physicalMinimum.is_nil;
    if (*(double *)&physicalMinimum.is_nil == 0.0)
    {
      if ((*(void *)&exponent.is_nil & 0x7FFFFFFFFFFFFFFFLL) != 0) {
        double v10 = *(double *)&exponent.is_nil;
      }
      else {
        double v10 = logicalMaximum;
      }
      if ((*(void *)&exponent.is_nil & 0x7FFFFFFFFFFFFFFFLL) == 0) {
        double v11 = logicalMinimum;
      }
    }
    else
    {
      double v10 = *(double *)&exponent.is_nil;
    }
  }
  double v12 = 1.0;
  if ((v7 & 1) == 0 && v6 != 0.0) {
    double v12 = __exp10(v6);
  }
  return (logicalMaximum - logicalMinimum) / ((v10 - v11) * v12);
}

uint64_t HIDReport.loadValue<A>(from:at:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v27 = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  __chkstk_darwin(AssociatedTypeWitness);
  sub_10004C2A8();
  uint64_t v25 = v7;
  __chkstk_darwin(v8);
  sub_10004C560();
  uint64_t v11 = v9 - v10;
  __chkstk_darwin(v12);
  sub_10004C5C0();
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)v24 - v14;
  swift_getAssociatedConformanceWitness();
  sub_10005F170();
  double v28 = v15;
  sub_10005F120();
  uint64_t result = sub_10005EFF0();
  if (result >= -7)
  {
    v24[1] = a3;
    if ((unint64_t)(result + 7) < 0xF)
    {
LABEL_7:
      uint64_t v22 = v25;
      double v23 = v28;
      (*(void (**)(uint64_t, char *, uint64_t))(v25 + 16))(v3, v28, a2);
      sub_10005EEB0();
      return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v23, a2);
    }
    uint64_t v17 = 0;
    uint64_t v18 = 0;
    uint64_t v26 = *(void *)(v26 + 16);
    char v19 = (uint64_t (**)(uint64_t, uint64_t))(v25 + 8);
    uint64_t v20 = result / 8;
    while (!__OFADD__(v27, v18))
    {
      char v30 = *(unsigned char *)(v26 + v27 + v18);
      sub_10004BCFC();
      uint64_t result = sub_10005EEB0();
      if (v18 == 0x1000000000000000) {
        goto LABEL_9;
      }
      ++v18;
      uint64_t v29 = v17;
      sub_10000FA20();
      sub_10005EE50();
      double v21 = *v19;
      (*v19)(v11, a2);
      sub_10005EE60();
      uint64_t result = v21(v3, a2);
      v17 += 8;
      if (v20 == v18) {
        goto LABEL_7;
      }
    }
    __break(1u);
LABEL_9:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t HIDReport.loadValue<A>(from:at:logicalMinimum:logicalMaximum:physicalMinimum:physicalMaximum:exponent:)(Swift::Double a1, Swift::Double a2, __n128 a3, __n128 a4)
{
  unsigned __int8 v4 = a4.n128_u8[0];
  unsigned __int8 v5 = a3.n128_u8[0];
  sub_10004C2A8();
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  HIDReport.loadValue<A>(from:at:)(v11, v12, (uint64_t)v10);
  if (sub_10004C3E8() < 65)
  {
    char v19 = sub_10004C2F0();
    uint64_t v20 = sub_10004C3D0();
    uint64_t v21 = sub_10004C4E0();
    v22(v21);
    if (v19) {
      double v18 = (double)v20;
    }
    else {
      double v18 = (double)(unint64_t)v20;
    }
  }
  else
  {
    sub_10004BD48();
    sub_1000080D4();
    sub_10004C2D0((uint64_t)&v30, (uint64_t)v10, (uint64_t)&type metadata for Double);
    uint64_t v13 = sub_10004C4E0();
    v14(v13);
    double v18 = v30;
  }
  unsigned __int8 v23 = v5;
  unsigned __int8 v24 = v4;
  char v25 = 0;
  double v26 = HIDReport.resolution(logicalMinimum:logicalMaximum:physicalMinimum:physicalMaximum:exponent:)(a1, a2, *(Swift::Double_optional *)&v15, *(Swift::Double_optional *)&v16, *(Swift::Double_optional *)&v17);
  if (v18 > a2 || v18 < a1) {
    *(double *)&uint64_t result = 0.0;
  }
  else {
    *(double *)&uint64_t result = v18 / v26;
  }
  return result;
}

uint64_t HIDReport.loadValue<A>(from:at:logicalMinimum:logicalMaximum:)(Swift::Double a1, Swift::Double a2, __n128 a3, __n128 a4)
{
  a3.n128_u64[0] = -1.0;
  return sub_10004B728(a1, a2, a3, a4);
}

{
  a3.n128_u64[0] = 0;
  return sub_10004B728(a1, a2, a3, a4);
}

uint64_t sub_10004B728(Swift::Double a1, Swift::Double a2, __n128 a3, __n128 a4)
{
  a4.n128_u64[0] = 1.0;
  return HIDReport.loadValue<A>(from:at:logicalMinimum:logicalMaximum:physicalMinimum:physicalMaximum:exponent:)(a1, a2, a3, a4);
}

uint64_t HIDReport.storeValue<A>(_:to:at:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_10004C2A8();
  uint64_t v8 = v7;
  __chkstk_darwin();
  sub_10001A89C();
  uint64_t result = sub_10005EFF0();
  if (result < -7)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  if ((unint64_t)(result + 7) >= 0xF)
  {
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    uint64_t v12 = *(void *)(v4 + 16);
    uint64_t v13 = result / 8;
    while (1)
    {
      uint64_t v14 = a3 + v11;
      if (__OFADD__(a3, v11)) {
        break;
      }
      if (v11 == 0x1000000000000000) {
        goto LABEL_9;
      }
      ++v11;
      sub_10000FA20();
      sub_10005EE40();
      char v15 = sub_10005EE70();
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v5, a4);
      *(unsigned char *)(v12 + v14) = v15;
      v10 += 8;
      if (v13 == v11) {
        return result;
      }
    }
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  return result;
}

uint64_t HIDReport.storeValue<A>(_:to:at:logicalMinimum:logicalMaximum:physicalMinimum:physicalMaximum:exponent:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_10004C2A8();
  uint64_t v9 = v8;
  __chkstk_darwin(v10);
  sub_10001A89C();
  if ((v17 & 1) != 0 || (*(void *)&v11 & 0x7FF0000000000000) == 0x7FF0000000000000)
  {
    sub_10004B9F0(a5, v5, v13);
  }
  else
  {
    double v18 = v11;
    char v19 = v14;
    char v20 = v15;
    char v21 = 0;
    round(HIDReport.resolution(logicalMinimum:logicalMaximum:physicalMinimum:physicalMaximum:exponent:)(v12, v13, *(Swift::Double_optional *)&v14, *(Swift::Double_optional *)&v15, *(Swift::Double_optional *)&v16)* v18);
    sub_10004BD48();
    sub_10005EEA0();
  }
  HIDReport.storeValue<A>(_:to:at:)(v5, v22, a4, a5);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v5, a5);
}

uint64_t sub_10004B9F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D1>)
{
  v16[1] = a2;
  uint64_t v5 = *(void *)(a1 - 8);
  uint64_t v6 = ((uint64_t (*)(void))__chkstk_darwin)();
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v9 = __chkstk_darwin(v6);
  double v11 = (char *)v16 - v10;
  double v17 = v9;
  sub_10004BD48();
  sub_10005EEA0();
  sub_10005F010();
  char v12 = sub_10005E8B0();
  double v13 = *(void (**)(char *, uint64_t))(v5 + 8);
  v13(v8, a1);
  v13(v11, a1);
  if (v12) {
    return sub_10005F010();
  }
  double v17 = a3;
  sub_10005EEA0();
  sub_10005F000();
  char v15 = sub_10005E8C0();
  v13(v8, a1);
  v13(v11, a1);
  if (v15) {
    return sub_10005F000();
  }
  double v17 = 0.0;
  unint64_t v18 = 0xE000000000000000;
  sub_10005EF40(54);
  v19._object = (void *)0x8000000100063550;
  v19._uint64_t countAndFlagsBits = 0xD000000000000031;
  sub_10005E9C0(v19);
  sub_10005EBD0();
  v20._uint64_t countAndFlagsBits = 45;
  v20._object = (void *)0xE100000000000000;
  sub_10005E9C0(v20);
  sub_10005EBD0();
  uint64_t result = sub_10005F050();
  __break(1u);
  return result;
}

uint64_t HIDReport.storeValue<A>(_:to:at:logicalMinimum:logicalMaximum:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_10004BCD8(a1, a2, a3, a4, a5);
}

{
  return sub_10004BCD8(a1, a2, a3, a4, a5);
}

uint64_t sub_10004BCD8(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return HIDReport.storeValue<A>(_:to:at:logicalMinimum:logicalMaximum:physicalMinimum:physicalMaximum:exponent:)(a1, a2 & 1, a3, a4, a5);
}

double Double.clamped(to:)(double result, double a2, double a3)
{
  if (a3 > result) {
    uint64_t result = a3;
  }
  if (result > a2) {
    return a2;
  }
  return result;
}

unint64_t sub_10004BCFC()
{
  unint64_t result = qword_100085348;
  if (!qword_100085348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100085348);
  }
  return result;
}

unint64_t sub_10004BD48()
{
  unint64_t result = qword_100085350;
  if (!qword_100085350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100085350);
  }
  return result;
}

unint64_t sub_10004BD94()
{
  return sub_10004C02C((uint64_t)&unk_100085358);
}

uint64_t type metadata accessor for HIDReport()
{
  return self;
}

unint64_t sub_10004BDEC()
{
  return sub_10004C0A8((uint64_t)&unk_100085360);
}

unint64_t sub_10004BE20()
{
  unint64_t result = qword_100085370;
  if (!qword_100085370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100085370);
  }
  return result;
}

unint64_t sub_10004BE6C()
{
  return sub_10004BF74((uint64_t)&unk_100085378);
}

unint64_t sub_10004BEBC()
{
  return sub_10004C02C((uint64_t)&unk_100085390);
}

unint64_t sub_10004BEF0()
{
  return sub_10004C0A8((uint64_t)&unk_100085398);
}

unint64_t sub_10004BF24()
{
  return sub_10004BF74((uint64_t)&unk_1000853A0);
}

unint64_t sub_10004BF74(uint64_t a1)
{
  unint64_t result = sub_10004C5B4(a1);
  if (!result)
  {
    uint64_t v4 = v3;
    sub_100007D84(&qword_100085380);
    sub_10004C18C(v4);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_10004BFF8()
{
  return sub_10004C02C((uint64_t)&unk_1000853B0);
}

unint64_t sub_10004C02C(uint64_t a1)
{
  unint64_t result = sub_10004C5B4(a1);
  if (!result)
  {
    type metadata accessor for HIDReport();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

void *sub_10004C068()
{
  return &protocol witness table for Int;
}

unint64_t sub_10004C074()
{
  return sub_10004C0A8((uint64_t)&unk_1000853B8);
}

unint64_t sub_10004C0A8(uint64_t a1)
{
  unint64_t result = sub_10004C5B4(a1);
  if (!result)
  {
    sub_100007D84(&qword_100085368);
    sub_10004BE20();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_10004C114()
{
  return sub_10004C18C((uint64_t)&unk_1000853C0);
}

unint64_t sub_10004C150()
{
  return sub_10004C18C((uint64_t)&unk_1000853C8);
}

unint64_t sub_10004C18C(uint64_t a1)
{
  unint64_t result = sub_10004C5B4(a1);
  if (!result)
  {
    sub_100007D84(v3);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

void *sub_10004C1CC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 24);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  if (v1 <= 0)
  {
    uint64_t v2 = _swiftEmptyArrayStorage;
  }
  else
  {
    sub_100007D1C(&qword_100084120);
    uint64_t v2 = (void *)swift_allocObject();
    size_t v3 = j__malloc_size(v2);
    v2[2] = v1;
    v2[3] = 2 * v3 - 64;
  }
  uint64_t v4 = sub_1000515EC((uint64_t)&v6, (unsigned char *)v2 + 32, v1);
  swift_retain();
  unint64_t result = (void *)swift_release();
  if (v4 == v1) {
    return v2;
  }
  __break(1u);
  return result;
}

uint64_t sub_10004C2D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static BinaryFloatingPoint<>._convert<A>(from:)(a1, a2, a3, v3, v4, v5);
}

uint64_t sub_10004C2F0()
{
  return dispatch thunk of static BinaryInteger.isSigned.getter(v0, v1);
}

void sub_10004C30C(uint64_t a1@<X8>)
{
  v2._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
  v2._object = (void *)((a1 - 32) | 0x8000000000000000);
  sub_10005E9C0(v2);
}

void sub_10004C338()
{
  v1._uint64_t countAndFlagsBits = 0x656C62756F44;
  v1._object = (void *)0xE600000000000000;
  sub_10005E9C0(v1);
}

uint64_t sub_10004C364(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static BinaryFloatingPoint<>._convert<A>(from:)(a1, a2, a3, v3, v4, v5);
}

double sub_10004C394@<D0>(char a1@<W1>, char a2@<W2>, int a3@<W8>)
{
  double v3 = (double)a3;
  if (a3 >= 0) {
    a1 = a2;
  }
  return v3 / fabs((double)a1);
}

double sub_10004C3B4@<D0>(unsigned int a1@<W8>)
{
  return ((double)a1 - (double)v1) / ((double)v2 - (double)v1);
}

uint64_t sub_10004C3D0()
{
  return sub_10005EE70();
}

uint64_t sub_10004C3E8()
{
  return dispatch thunk of BinaryInteger.bitWidth.getter(v0, v1);
}

char *sub_10004C400(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (char *)&a9 - v9;
}

uint64_t sub_10004C424()
{
  return dispatch thunk of static BinaryInteger.isSigned.getter(v0, v1);
}

double sub_10004C440@<D0>(unsigned int a1@<W8>, double a2@<D0>)
{
  double result = ((double)a1 - (double)v2) * a2 + (double)v2;
  if (result <= (double)v2) {
    return (double)v2;
  }
  return result;
}

uint64_t sub_10004C460()
{
  return sub_10005F050();
}

void sub_10004C494()
{
  sub_10005EF40(80);
}

double sub_10004C4D0()
{
  return (double)v0;
}

uint64_t sub_10004C4E0()
{
  return v0;
}

uint64_t sub_10004C4F8()
{
  return v0;
}

void sub_10004C510(Swift::String a1@<X1:X0>, uint64_t a2@<X8>)
{
  a1._object = (void *)((a2 - 32) | 0x8000000000000000);
  sub_10005E9C0(a1);
}

uint64_t sub_10004C52C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_10004C53C()
{
  return sub_10005EEA0();
}

void sub_10004C570(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + v1) = v2;
}

uint64_t _s10SidecarHID9HIDReportCys5UInt8VSicig_0(uint64_t a1)
{
  return *(unsigned __int8 *)(*(void *)(v1 + 16) + a1);
}

uint64_t sub_10004C584()
{
  return sub_10005EE70();
}

uint64_t sub_10004C59C()
{
  return dispatch thunk of BinaryInteger.bitWidth.getter(v0, v1);
}

uint64_t sub_10004C5B4(uint64_t a1)
{
  return *(void *)a1;
}

uint64_t sub_10004C5D4(unsigned int a1, unsigned __int8 a2)
{
  int v2 = (a1 >> 5) & 3;
  if ((v2 - 2) >= 2)
  {
    if (v2 == 1)
    {
      if ((a2 - 1) < 0xBu)
      {
        double v3 = (unsigned __int8 *)&unk_100065ACE + (char)(a2 - 1);
        return *v3;
      }
    }
    else if (a2 < 0xAu)
    {
      double v3 = (unsigned __int8 *)&unk_100065AC4 + (char)a2;
      return *v3;
    }
  }
  return 14;
}

uint64_t HIDRequest.rawData.getter(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return a2;
}

uint64_t HIDRequest.wValue.getter()
{
  return sub_10004C690();
}

uint64_t HIDRequest.wIndex.getter()
{
  return sub_10004C690();
}

uint64_t HIDRequest.wLength.getter()
{
  return sub_10004C690();
}

uint64_t sub_10004C690()
{
  unsigned __int8 v0 = sub_10005E660();
  return v0 | (sub_10005E660() << 8);
}

uint64_t HIDRequest.data.getter(uint64_t a1, unint64_t a2, unint64_t a3)
{
  unsigned __int8 v3 = BYTE6(a3);
  unint64_t v4 = a3 >> 62;
  uint64_t result = 0;
  unint64_t v7 = HIDWORD(a2);
  uint64_t v8 = v3;
  switch(v4)
  {
    case 1uLL:
      LODWORD(v9) = v7 - a2;
      if (__OFSUB__(v7, a2))
      {
        __break(1u);
LABEL_17:
        __break(1u);
LABEL_18:
        __break(1u);
        goto LABEL_19;
      }
      uint64_t v9 = (int)v9;
LABEL_6:
      if (v9 < 9) {
        return 0;
      }
      if (v4)
      {
        if (v4 == 1)
        {
          if (!__OFSUB__(v7, a2))
          {
            uint64_t v8 = (int)v7 - (int)a2;
            goto LABEL_13;
          }
          goto LABEL_18;
        }
        uint64_t v14 = *(void *)(a2 + 16);
        uint64_t v13 = *(void *)(a2 + 24);
        uint64_t v8 = v13 - v14;
        if (__OFSUB__(v13, v14))
        {
LABEL_19:
          __break(1u);
          goto LABEL_20;
        }
      }
LABEL_13:
      if (v8 < 8)
      {
LABEL_20:
        __break(1u);
        JUMPOUT(0x10004C7C4);
      }
      return sub_10005E640();
    case 2uLL:
      uint64_t v11 = *(void *)(a2 + 16);
      uint64_t v10 = *(void *)(a2 + 24);
      BOOL v12 = __OFSUB__(v10, v11);
      uint64_t v9 = v10 - v11;
      if (!v12) {
        goto LABEL_6;
      }
      goto LABEL_17;
    case 3uLL:
      return result;
    default:
      uint64_t v9 = v3;
      goto LABEL_6;
  }
}

uint64_t HIDRequest.init(_:wValue:wIndex:data:)(uint64_t a1, __int16 a2, __int16 a3, uint64_t a4, unint64_t a5)
{
  unint64_t v10 = a5 >> 60;
  if (a5 >> 60 == 15)
  {
    LOWORD(v11) = 0;
  }
  else
  {
    sub_100008D64(a4, a5);
    unint64_t v11 = sub_10005E620();
    sub_10001A2A4(a4, a5);
    if ((v11 & 0x8000000000000000) != 0 || v11 >= 0x10000)
    {
      sub_10000C25C();
      uint64_t result = sub_10005F040();
      __break(1u);
      return result;
    }
  }
  sub_100007D1C(&qword_100084120);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_100065A30;
  *(unsigned char *)(v12 + 32) = byte_100065AD9[(char)a1];
  *(unsigned char *)(v12 + 33) = byte_100065AE7[(char)a1];
  *(_WORD *)(v12 + 34) = a2;
  *(_WORD *)(v12 + 36) = a3;
  *(_WORD *)(v12 + 38) = v11;
  sub_100047B04(v12);
  if (v10 <= 0xE)
  {
    sub_100008D64(a4, a5);
    sub_10005E630();
    sub_10001A2A4(a4, a5);
    sub_10001A2A4(a4, a5);
  }
  return a1;
}

uint64_t HIDRequest.init(rawData:)(uint64_t a1, unint64_t a2)
{
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v4) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_13:
        __break(1u);
        goto LABEL_14;
      }
      uint64_t v4 = (int)v4;
LABEL_6:
      if (v4 <= 7) {
        goto LABEL_11;
      }
      unsigned int v8 = sub_10004CE60();
      unsigned __int8 v9 = sub_10004CE60();
      unsigned __int8 v10 = sub_10004C5D4(v8, v9);
      if (v10 == 14) {
        goto LABEL_11;
      }
      unsigned __int8 v11 = v10;
      sub_100008D64(a1, a2);
      unsigned __int8 v12 = sub_10004CE60();
      int v13 = (unsigned __int16)(v12 | (unsigned __int16)((unsigned __int16)sub_10004CE60() << 8)) + 8;
      if ((v13 & 0x10000) != 0)
      {
LABEL_14:
        __break(1u);
        JUMPOUT(0x10004CAE4);
      }
      uint64_t v14 = sub_10005E620();
      sub_100008D0C(a1, a2);
      if (v14 == (unsigned __int16)v13) {
        return v11;
      }
LABEL_11:
      sub_100008D0C(a1, a2);
      return 14;
    case 2uLL:
      uint64_t v6 = *(void *)(a1 + 16);
      uint64_t v5 = *(void *)(a1 + 24);
      BOOL v7 = __OFSUB__(v5, v6);
      uint64_t v4 = v5 - v6;
      if (!v7) {
        goto LABEL_6;
      }
      goto LABEL_13;
    case 3uLL:
      goto LABEL_11;
    default:
      uint64_t v4 = BYTE6(a2);
      goto LABEL_6;
  }
}

unint64_t sub_10004CAF8()
{
  unint64_t result = qword_100085478;
  if (!qword_100085478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100085478);
  }
  return result;
}

uint64_t destroy for HIDRequest(uint64_t a1)
{
  return sub_100008D0C(*(void *)(a1 + 8), *(void *)(a1 + 16));
}

uint64_t _s10SidecarHID10HIDRequestVwCP_0(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 8);
  unint64_t v4 = *(void *)(a2 + 16);
  sub_100008D64(v3, v4);
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  return a1;
}

uint64_t assignWithCopy for HIDRequest(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 8);
  unint64_t v4 = *(void *)(a2 + 16);
  sub_100008D64(v3, v4);
  uint64_t v5 = *(void *)(a1 + 8);
  unint64_t v6 = *(void *)(a1 + 16);
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  sub_100008D0C(v5, v6);
  return a1;
}

__n128 initializeWithTake for HIDRequest(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for HIDRequest(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a1 + 8);
  unint64_t v4 = *(void *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  sub_100008D0C(v3, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for HIDRequest(unsigned __int8 *a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xF3 && a1[24])
    {
      int v2 = *(_DWORD *)a1 + 242;
    }
    else
    {
      unsigned int v3 = *a1;
      BOOL v4 = v3 >= 0xE;
      int v2 = v3 - 14;
      if (!v4) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HIDRequest(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 243;
    if (a3 >= 0xF3) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0xF3) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(unsigned char *)__n128 result = a2 + 13;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HIDRequest()
{
  return &type metadata for HIDRequest;
}

uint64_t getEnumTagSinglePayload for HIDRequest.Request(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF3)
  {
    if (a2 + 13 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 13) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 14;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xE;
  int v5 = v6 - 14;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for HIDRequest.Request(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 13 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 13) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF2)
  {
    unsigned int v6 = ((a2 - 243) >> 8) + 1;
    *__n128 result = a2 + 13;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10004CE28);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 13;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HIDRequest.Request()
{
  return &type metadata for HIDRequest.Request;
}

uint64_t sub_10004CE60()
{
  return sub_10005E660();
}

uint64_t static HIDFixed.radix.getter()
{
  return 16;
}

uint64_t HIDFixed.rawValue.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*HIDFixed.rawValue.modify())()
{
  return VideoStream.qosMonitorServerDidDie(_:);
}

double static HIDFixed.scale.getter()
{
  return 65536.0;
}

double HIDFixed.doubleValue.getter(int a1)
{
  return (double)a1 * 0.0000152587891;
}

uint64_t HIDFixed.intValue.getter(int a1)
{
  return (uint64_t)a1 >> 16;
}

SidecarHID::HIDFixed __swiftcall HIDFixed.init(intValue:)(Swift::Int intValue)
{
  if (intValue < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_5;
  }
  if (intValue > 0x7FFFFFFF)
  {
LABEL_5:
    __break(1u);
    return (SidecarHID::HIDFixed)intValue;
  }
  LODWORD(intValue) = intValue << 16;
  return (SidecarHID::HIDFixed)intValue;
}

SidecarHID::HIDFixed_optional __swiftcall HIDFixed.init(doubleValue:)(Swift::Double doubleValue)
{
  uint64_t v1 = *(void *)&doubleValue & 0x7FF0000000000000;
  if ((*(void *)&doubleValue & 0x7FF0000000000000) != 0x7FF0000000000000)
  {
    double v3 = round(doubleValue * 65536.0);
    if (v3 <= -2147483650.0) {
      double v3 = -2147483650.0;
    }
    if (v3 > 2147483650.0) {
      double v3 = 2147483650.0;
    }
    if ((~*(void *)&v3 & 0x7FF0000000000000) != 0)
    {
      if (v3 > -2147483650.0)
      {
        if (v3 < 2147483650.0)
        {
          uint64_t v2 = (int)v3;
          return (SidecarHID::HIDFixed_optional)(v2 | ((unint64_t)(v1 == 0x7FF0000000000000) << 32));
        }
LABEL_14:
        __break(1u);
        return (SidecarHID::HIDFixed_optional)v4;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v2 = 0;
  return (SidecarHID::HIDFixed_optional)(v2 | ((unint64_t)(v1 == 0x7FF0000000000000) << 32));
}

uint64_t static HIDFixed.+ infix(_:_:)(int a1, int a2)
{
  BOOL v2 = __OFADD__(a1, a2);
  uint64_t result = (a1 + a2);
  if (v2) {
    __break(1u);
  }
  return result;
}

_DWORD *static HIDFixed.+= infix(_:_:)(_DWORD *result, int a2)
{
  if (__OFADD__(*result, a2)) {
    __break(1u);
  }
  else {
    *result += a2;
  }
  return result;
}

uint64_t static HIDFixed.- infix(_:_:)(int a1, int a2)
{
  BOOL v2 = __OFSUB__(a1, a2);
  uint64_t result = (a1 - a2);
  if (v2) {
    __break(1u);
  }
  return result;
}

_DWORD *static HIDFixed.-= infix(_:_:)(_DWORD *result, int a2)
{
  if (__OFSUB__(*result, a2)) {
    __break(1u);
  }
  else {
    *result -= a2;
  }
  return result;
}

void sub_10004CFF0(_DWORD *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_10004CFF8@<X0>(int *a1@<X0>, int *a2@<X1>, _DWORD *a3@<X8>)
{
  uint64_t result = static HIDFixed.+ infix(_:_:)(*a1, *a2);
  *a3 = result;
  return result;
}

_DWORD *sub_10004D028(_DWORD *a1, int *a2)
{
  return static HIDFixed.+= infix(_:_:)(a1, *a2);
}

uint64_t sub_10004D030@<X0>(int *a1@<X0>, int *a2@<X1>, _DWORD *a3@<X8>)
{
  uint64_t result = static HIDFixed.- infix(_:_:)(*a1, *a2);
  *a3 = result;
  return result;
}

_DWORD *sub_10004D060(_DWORD *a1, int *a2)
{
  return static HIDFixed.-= infix(_:_:)(a1, *a2);
}

SidecarHID::HIDFixed sub_10004D068@<W0>(Swift::Int *a1@<X0>, SidecarHID::HIDFixed *a2@<X8>)
{
  result.Swift::UInt64 rawValue = HIDFixed.init(intValue:)(*a1).rawValue;
  a2->Swift::UInt64 rawValue = result.rawValue;
  return result;
}

SidecarHID::HIDFixed __swiftcall HIDFixed.init(floatLiteral:)(Swift::Double floatLiteral)
{
  *(SidecarHID::HIDFixed_optional *)&uint64_t v1 = HIDFixed.init(doubleValue:)(floatLiteral);
  return (SidecarHID::HIDFixed)sub_10004DD58(v1);
}

SidecarHID::HIDFixed sub_10004D0B0@<W0>(Swift::Double *a1@<X0>, SidecarHID::HIDFixed *a2@<X8>)
{
  result.Swift::UInt64 rawValue = HIDFixed.init(floatLiteral:)(*a1).rawValue;
  a2->Swift::UInt64 rawValue = result.rawValue;
  return result;
}

unint64_t HIDFixed.init<A>(exactly:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v83 = *(void *)(*(void *)(a3 + 24) + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  __chkstk_darwin(AssociatedTypeWitness);
  id v81 = (char *)&v77 - v5;
  uint64_t v6 = *(void *)(a2 - 8);
  __chkstk_darwin(v7);
  unsigned __int8 v9 = (char *)&v77 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  sub_10004DD88();
  uint64_t v79 = v11;
  sub_100046194();
  __chkstk_darwin(v12);
  sub_10004DD88();
  id v86 = v13;
  sub_100046194();
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v77 - v15;
  __chkstk_darwin(v17);
  sub_10004DD88();
  uint64_t v80 = v18;
  sub_100046194();
  __chkstk_darwin(v19);
  sub_10004DD88();
  uint64_t v85 = v20;
  sub_100046194();
  __chkstk_darwin(v21);
  sub_10004DD88();
  uint64_t v87 = v22;
  sub_100046194();
  __chkstk_darwin(v23);
  char v25 = (char *)&v77 - v24;
  __chkstk_darwin(v26);
  double v28 = (char *)&v77 - v27;
  __chkstk_darwin(v29);
  uint64_t v31 = (char *)&v77 - v30;
  char v32 = sub_10004C2F0();
  id v84 = v16;
  int v78 = v9;
  if (v32)
  {
    if (sub_10004C3E8() < 32)
    {
LABEL_9:
      sub_10004DDC8();
      v37();
      int v38 = sub_10004C3D0();
      sub_10004C2C0();
      v39();
      char v35 = v38 < -32768;
      goto LABEL_14;
    }
    goto LABEL_6;
  }
  char v33 = sub_10004C2F0();
  uint64_t v34 = sub_10004C3E8();
  if ((v33 & 1) == 0)
  {
    if (v34 >= 32)
    {
      char v35 = 0;
      goto LABEL_14;
    }
    goto LABEL_9;
  }
  if (v34 > 32)
  {
LABEL_6:
    signed int v91 = -32768;
    sub_10004D9AC();
    sub_10004DCCC();
    char v35 = sub_10004DD64();
    sub_10004C2C0();
    v36();
    goto LABEL_14;
  }
  swift_getAssociatedConformanceWitness();
  sub_10004DDA8();
  sub_10004DD94();
  sub_10005F120();
  char v40 = sub_10004DD64();
  uint64_t v41 = *(void (**)(char *, uint64_t))(v6 + 8);
  v41(v31, a2);
  sub_10004DDC8();
  v42();
  char v35 = (v40 & 1) != 0 || (int)sub_10004C3D0() < -32768;
  v41(v25, a2);
LABEL_14:
  Swift::String_optional v88 = *(void (**)(void))(v6 + 16);
  uint64_t v89 = a1;
  sub_10004DD10();
  v43();
  if (v35)
  {
    uint64_t v44 = *(void (**)(void))(v6 + 8);
    ((void (*)(char *, uint64_t))v44)(v28, a2);
LABEL_26:
    ((void (*)(uint64_t, uint64_t))v44)(v89, a2);
    uint64_t v54 = 0;
    unsigned __int8 v55 = 1;
LABEL_40:
    LOBYTE(v91) = v55;
    return v54 | ((unint64_t)v55 << 32);
  }
  char v45 = sub_10004C2F0();
  uint64_t v46 = sub_10004C3E8();
  if (v45)
  {
    if (v46 > 32) {
      goto LABEL_18;
    }
LABEL_25:
    int v53 = sub_10004C3D0();
    uint64_t v44 = *(void (**)(void))(v6 + 8);
    sub_10004DD00();
    v44();
    if (v53 >= 0x8000) {
      goto LABEL_26;
    }
    goto LABEL_19;
  }
  if (v46 <= 31) {
    goto LABEL_25;
  }
LABEL_18:
  signed int v91 = 0x7FFF;
  sub_10004D9AC();
  sub_10004DCCC();
  char v47 = sub_10005E8C0();
  uint64_t v44 = *(void (**)(void))(v6 + 8);
  sub_10004DD00();
  v44();
  sub_10004DD00();
  v44();
  if (v47) {
    goto LABEL_26;
  }
LABEL_19:
  uint64_t v48 = v88;
  sub_10004DD10();
  v48();
  char v49 = sub_10004C2F0();
  uint64_t v50 = v85;
  sub_10004DD10();
  v48();
  if ((v49 & 1) == 0)
  {
    ((void (*)(uint64_t, uint64_t))v44)(v50, a2);
    goto LABEL_28;
  }
  uint64_t v51 = sub_10004C3E8();
  sub_10004DCF0();
  v44();
  if (v51 <= 32) {
    goto LABEL_28;
  }
  sub_10004DD10();
  v52();
  signed int v91 = 0x80000000;
  if (sub_10004C2F0())
  {
    if (sub_10004C3E8() >= 32)
    {
LABEL_43:
      sub_10004D9AC();
      sub_10004DCCC();
      char v71 = sub_10005E8C0();
      sub_10004DCF0();
      v44();
      sub_10004DCF0();
      unint64_t result = ((uint64_t (*)(void))v44)();
      if (v71) {
        goto LABEL_54;
      }
      goto LABEL_28;
    }
LABEL_47:
    signed int v72 = sub_10004C3D0();
    sub_10004DCF0();
    unint64_t result = ((uint64_t (*)(void))v44)();
    if (v91 > v72) {
      goto LABEL_54;
    }
    goto LABEL_28;
  }
  char v69 = sub_10004C2F0();
  uint64_t v70 = sub_10004C3E8();
  if ((v69 & 1) == 0)
  {
    if (v70 >= 32)
    {
      sub_10004DCF0();
      v44();
      goto LABEL_28;
    }
    goto LABEL_47;
  }
  if (v70 > 32) {
    goto LABEL_43;
  }
  swift_getAssociatedConformanceWitness();
  sub_10004DDA8();
  sub_10004DD94();
  sub_10005F120();
  uint64_t v73 = v80;
  char v74 = sub_10005E8C0();
  sub_10004DCF0();
  v44();
  uint64_t v61 = v78;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v78, v73, a2);
  if (v74) {
    goto LABEL_53;
  }
  signed int v75 = v91;
  signed int v76 = sub_10004C3D0();
  sub_10004DCF0();
  unint64_t result = ((uint64_t (*)(void))v44)();
  if (v75 > v76) {
    goto LABEL_54;
  }
LABEL_28:
  uint64_t v56 = v87;
  uint64_t v57 = sub_10004C3E8();
  uint64_t v58 = sub_10004DD20();
  v59(v58);
  if (v57 < 33)
  {
    uint64_t v60 = sub_10004C3E8();
    sub_10004C2C0();
    v44();
    if (v60 != 32 || (sub_10004C2F0() & 1) != 0) {
      goto LABEL_39;
    }
  }
  else
  {
    sub_10004C2C0();
    v44();
  }
  uint64_t v61 = v86;
  uint64_t v62 = sub_10004DD20();
  v63(v62);
  signed int v91 = 0x7FFFFFFF;
  char v64 = sub_10004C2F0();
  uint64_t v65 = sub_10004C3E8();
  if ((v64 & 1) == 0)
  {
    if (v65 > 31)
    {
      int v90 = 0x7FFFFFFF;
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v31, v86, a2);
      sub_10004D9AC();
      sub_10005EE30();
      char v66 = sub_10005E8C0();
      sub_10004DD00();
      v44();
      goto LABEL_38;
    }
LABEL_36:
    sub_10004C3D0();
    sub_10004C2C0();
    v44();
LABEL_39:
    int v67 = sub_10004C3D0();
    ((void (*)(uint64_t, uint64_t))v44)(v56, a2);
    ((void (*)(uint64_t, uint64_t))v44)(v89, a2);
    unsigned __int8 v55 = 0;
    uint64_t v54 = (v67 << 16);
    goto LABEL_40;
  }
  if (v65 <= 32) {
    goto LABEL_36;
  }
  sub_10004D9AC();
  sub_10004DCCC();
  char v66 = sub_10005E8C0();
  sub_10004DD00();
  v44();
LABEL_38:
  sub_10004DD00();
  v44();
  if ((v66 & 1) == 0) {
    goto LABEL_39;
  }
  __break(1u);
LABEL_53:
  unint64_t result = ((uint64_t (*)(char *, uint64_t))v44)(v61, a2);
LABEL_54:
  __break(1u);
  return result;
}

unint64_t sub_10004D9AC()
{
  unint64_t result = qword_100085480;
  if (!qword_100085480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100085480);
  }
  return result;
}

uint64_t HIDFixed.magnitude.getter(uint64_t result)
{
  if ((int)result >= 0) {
    return result;
  }
  else {
    return -(int)result;
  }
}

unint64_t sub_10004DA04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  unint64_t result = HIDFixed.init<A>(exactly:)(a1, a2, a3);
  *(_DWORD *)a4 = result;
  *(unsigned char *)(a4 + 4) = BYTE4(result) & 1;
  return result;
}

uint64_t sub_10004DA34@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result = HIDFixed.magnitude.getter(*v1);
  *a1 = result;
  return result;
}

uint64_t sub_10004DA60@<X0>(int *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result = static HIDFixed.* infix(_:_:)(*a1);
  *a2 = result;
  return result;
}

uint64_t static HIDFixed.* infix(_:_:)(int a1)
{
  double v1 = sub_10004DD3C(a1);
  *(SidecarHID::HIDFixed_optional *)&uint64_t v3 = HIDFixed.init(doubleValue:)(v1 * v2);
  return sub_10004DD58(v3);
}

uint64_t sub_10004DAB4(int *a1)
{
  return static HIDFixed.*= infix(_:_:)(a1);
}

uint64_t static HIDFixed.*= infix(_:_:)(int *a1)
{
  uint64_t result = static HIDFixed.* infix(_:_:)(*a1);
  *a1 = result;
  return result;
}

uint64_t static HIDFixed.* infix(_:_:)()
{
  sub_10004DDDC();
  *(SidecarHID::HIDFixed_optional *)&uint64_t v2 = HIDFixed.init(doubleValue:)(v1 * v0);
  return sub_10004DD58(v2);
}

uint64_t static HIDFixed./ infix(_:_:)(int a1)
{
  double v1 = sub_10004DD3C(a1);
  *(SidecarHID::HIDFixed_optional *)&uint64_t v3 = HIDFixed.init(doubleValue:)(v1 / v2);
  return sub_10004DD58(v3);
}

uint64_t static HIDFixed./= infix(_:_:)(int *a1)
{
  uint64_t result = static HIDFixed./ infix(_:_:)(*a1);
  *a1 = result;
  return result;
}

uint64_t static HIDFixed./ infix(_:_:)()
{
  sub_10004DDDC();
  *(SidecarHID::HIDFixed_optional *)&uint64_t v2 = HIDFixed.init(doubleValue:)(v1 / v0);
  return sub_10004DD58(v2);
}

uint64_t HIDFixed.description.getter(int a1)
{
  return Double.description.getter((double)a1 * 0.0000152587891);
}

unint64_t sub_10004DB98()
{
  unint64_t result = qword_100085488;
  if (!qword_100085488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100085488);
  }
  return result;
}

void *sub_10004DBE4()
{
  return &protocol witness table for Int;
}

void *sub_10004DBF0()
{
  return &protocol witness table for Double;
}

unint64_t sub_10004DC00()
{
  unint64_t result = qword_100085490;
  if (!qword_100085490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100085490);
  }
  return result;
}

unint64_t sub_10004DC50()
{
  unint64_t result = qword_100085498;
  if (!qword_100085498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100085498);
  }
  return result;
}

void *sub_10004DC9C()
{
  return &protocol witness table for Int32;
}

void *sub_10004DCA8()
{
  return &protocol witness table for Int32;
}

uint64_t sub_10004DCB4()
{
  return HIDFixed.description.getter(*v0);
}

ValueMetadata *type metadata accessor for HIDFixed()
{
  return &type metadata for HIDFixed;
}

uint64_t sub_10004DCCC()
{
  return sub_10005EE30();
}

uint64_t sub_10004DD20()
{
  return v0;
}

double sub_10004DD3C(int a1)
{
  return (double)a1 * 0.0000152587891;
}

uint64_t sub_10004DD58(uint64_t result)
{
  if ((result & (unint64_t)&_mh_execute_header) != 0) {
    return 0;
  }
  else {
    return result;
  }
}

uint64_t sub_10004DD64()
{
  return sub_10005E8C0();
}

uint64_t sub_10004DD94()
{
  return v0;
}

uint64_t sub_10004DDA8()
{
  return sub_10005F170();
}

uint64_t HIDUsage._usage.getter(unsigned int a1)
{
  return HIWORD(a1);
}

uint64_t HIDUsage.page.getter(uint64_t result)
{
  return (unsigned __int16)result;
}

SidecarHID::HIDUsage __swiftcall HIDUsage.init(page:usage:)(Swift::Int page, Swift::Int usage)
{
  return (SidecarHID::HIDUsage)((unsigned __int16)page | ((unsigned __int16)usage << 16));
}

void HIDUsage.hash(into:)(uint64_t a1, unsigned int a2)
{
  unsigned int v2 = HIWORD(a2);
  sub_10005F1E0(a2);
  sub_10005F1E0(v2);
}

Swift::Int HIDUsage.hashValue.getter(unsigned int a1)
{
  Swift::UInt16 v1 = a1;
  unsigned int v2 = HIWORD(a1);
  sub_10005F1C0();
  sub_10005F1E0(v1);
  sub_10005F1E0(v2);
  return sub_10005F200();
}

Swift::Int sub_10004DE9C()
{
  return HIDUsage.hashValue.getter(*v0);
}

void sub_10004DEA4(uint64_t a1)
{
  HIDUsage.hash(into:)(a1, *v1);
}

Swift::Int sub_10004DEAC()
{
  Swift::UInt16 v1 = *v0;
  Swift::UInt16 v2 = v0[1];
  sub_10005F1C0();
  sub_10005F1E0(v1);
  sub_10005F1E0(v2);
  return sub_10005F200();
}

uint64_t HIDUsage.description.getter()
{
  sub_10000FA20();
  uint64_t v0 = sub_10004E100();
  uint64_t v1 = sub_10004E100();
  uint64_t v3 = v2;
  v5._uint64_t countAndFlagsBits = 58;
  v5._object = (void *)0xE100000000000000;
  sub_10005E9C0(v5);
  v6._uint64_t countAndFlagsBits = v1;
  v6._object = v3;
  sub_10005E9C0(v6);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_10004DFA4()
{
  return HIDUsage.description.getter();
}

BOOL static HIDUsage.< infix(_:_:)(unsigned int a1, unsigned int a2)
{
  return (unsigned __int16)a2 >= (unsigned __int16)a1 && HIWORD(a1) < HIWORD(a2);
}

BOOL static HIDUsage.<= infix(_:_:)(unsigned int a1, unsigned int a2)
{
  return (unsigned __int16)a2 >= (unsigned __int16)a1 && HIWORD(a2) >= HIWORD(a1);
}

BOOL static HIDUsage.>= infix(_:_:)(unsigned int a1, unsigned int a2)
{
  return (unsigned __int16)a1 >= (unsigned __int16)a2 && HIWORD(a1) >= HIWORD(a2);
}

BOOL static HIDUsage.> infix(_:_:)(unsigned int a1, unsigned int a2)
{
  return (unsigned __int16)a1 >= (unsigned __int16)a2 && HIWORD(a2) < HIWORD(a1);
}

unint64_t sub_10004E020()
{
  unint64_t result = qword_1000854A0;
  if (!qword_1000854A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000854A0);
  }
  return result;
}

BOOL sub_10004E06C(unsigned int *a1, unsigned int *a2)
{
  return static HIDUsage.< infix(_:_:)(*a1, *a2);
}

BOOL sub_10004E078(unsigned int *a1, unsigned int *a2)
{
  return static HIDUsage.<= infix(_:_:)(*a1, *a2);
}

BOOL sub_10004E084(unsigned int *a1, unsigned int *a2)
{
  return static HIDUsage.>= infix(_:_:)(*a1, *a2);
}

BOOL sub_10004E090(unsigned int *a1, unsigned int *a2)
{
  return static HIDUsage.> infix(_:_:)(*a1, *a2);
}

_DWORD *initializeBufferWithCopyOfBuffer for HIDUsage(_DWORD *result, _DWORD *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for HIDUsage(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 4)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for HIDUsage(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_DWORD *)unint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 4) = v3;
  return result;
}

ValueMetadata *type metadata accessor for HIDUsage()
{
  return &type metadata for HIDUsage;
}

uint64_t sub_10004E100()
{
  return sub_10005EA40();
}

void sub_10004E124()
{
  static KeyboardReport.reportID = 1;
}

char *KeyboardReport.reportID.unsafeMutableAddressor()
{
  if (qword_100085288 != -1) {
    swift_once();
  }
  return &static KeyboardReport.reportID;
}

uint64_t static KeyboardReport.reportID.getter()
{
  if (qword_100085288 != -1) {
    swift_once();
  }
  return static KeyboardReport.reportID;
}

uint64_t sub_10004E1D0()
{
  sub_100007D1C(&qword_100084120);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_100065DB0;
  *(_DWORD *)(v0 + 32) = 101253381;
  *(_WORD *)(v0 + 36) = 417;
  *(unsigned char *)(v0 + 38) = -123;
  if (qword_100085288 != -1) {
    swift_once();
  }
  *(unsigned char *)(v0 + 39) = static KeyboardReport.reportID;
  *(_OWORD *)(v0 + 40) = xmmword_100065DC0;
  *(_OWORD *)(v0 + 56) = xmmword_100065DD0;
  *(_WORD *)(v0 + 72) = -16384;
  uint64_t result = sub_100047B04(v0);
  static KeyboardReport.reportDescriptor = result;
  unk_100089020 = v2;
  return result;
}

uint64_t *KeyboardReport.reportDescriptor.unsafeMutableAddressor()
{
  if (qword_100085290 != -1) {
    swift_once();
  }
  return &static KeyboardReport.reportDescriptor;
}

uint64_t static KeyboardReport.reportDescriptor.getter()
{
  if (qword_100085290 != -1) {
    swift_once();
  }
  uint64_t v0 = static KeyboardReport.reportDescriptor;
  sub_100008D64(static KeyboardReport.reportDescriptor, unk_100089020);
  return v0;
}

void *KeyboardReport.init()()
{
  type metadata accessor for HIDReport();
  uint64_t v0 = HIDReport.__allocating_init(count:)(8);
  uint64_t v1 = qword_100085288;
  swift_retain();
  if (v1 != -1) {
    swift_once();
  }
  HIDReport.subscript.setter(static KeyboardReport.reportID, 0);
  swift_release();
  return v0;
}

void *KeyboardReport.init(_:)(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = sub_10005E650();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for HIDReport();
  uint64_t v8 = HIDReport.__allocating_init(count:)(8);
  swift_retain();
  char v9 = sub_10005E660();
  if (qword_100085288 != -1) {
    swift_once();
  }
  if (static KeyboardReport.reportID == v9 && sub_10005E620() >= v8[3])
  {
    swift_release();
    sub_100008D64(a1, a2);
    sub_10005E5A0();
    sub_100008D0C(a1, a2);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_100008D0C(a1, a2);
  }
  else
  {
    sub_100008D0C(a1, a2);
    swift_release();
    swift_release();
    return 0;
  }
  return v8;
}

uint64_t sub_10004E5A4(uint64_t result, char a2)
{
  unsigned __int8 v3 = result;
  uint64_t v4 = 0;
  uint64_t v5 = 0;
  char v6 = 1;
  char v7 = 1;
  while ((v7 & 1) != 0)
  {
    uint64_t v5 = 7;
LABEL_6:
    uint64_t result = HIDReport.subscript.getter(v5);
    if (result == v3) {
      return v5;
    }
    char v7 = 0;
    if (!(_BYTE)result) {
      uint64_t v4 = v5;
    }
    v6 &= result != 0;
    if (v5 == 2)
    {
      if (a2) {
        return v4;
      }
      else {
        return 0;
      }
    }
  }
  if (v5 >= 3)
  {
    --v5;
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

Swift::Void __swiftcall KeyboardReport.addUsage(_:)(SidecarHID::HIDUsage a1)
{
  if ((*(_DWORD *)&a1 & 0xFF00FFFF) == 7)
  {
    Swift::Int8 usage = a1._usage;
    unsigned int v2 = (LOBYTE(a1._usage) + 32) & 0x3F;
    if ((LOBYTE(a1._usage) + 24) < 0xF8u || v2 > 7)
    {
      uint64_t v4 = sub_10004E5A4(a1._usage, 1);
      if (v5) {
        return;
      }
      Swift::Int v6 = v4;
      Swift::Int8 v7 = usage;
      Swift::Int v8 = v6;
    }
    else
    {
      Swift::Int8 v7 = HIDReport.subscript.getter(1) | (1 << v2);
      Swift::Int v8 = 1;
    }
    HIDReport.subscript.setter(v7, v8);
  }
}

Swift::Void __swiftcall KeyboardReport.removeUsage(_:)(SidecarHID::HIDUsage a1)
{
  if ((*(_DWORD *)&a1 & 0xFF00FFFF) == 7)
  {
    uint64_t usage = a1._usage;
    unsigned int v2 = ((_BYTE)usage + 32) & 0x3F;
    if ((usage + 24) < 0xF8u || v2 > 7)
    {
      uint64_t v4 = sub_10004E5A4(usage, 0);
      if (v5) {
        return;
      }
      Swift::Int v6 = v4;
      Swift::Int8 v7 = 0;
      Swift::Int v8 = v6;
    }
    else
    {
      Swift::Int8 v7 = HIDReport.subscript.getter(1) & ~(1 << v2);
      Swift::Int v8 = 1;
    }
    HIDReport.subscript.setter(v7, v8);
  }
}

char *SqueezeGestureReport.description.getter()
{
  return HIDReport.description.getter();
}

char *sub_10004E790()
{
  return SqueezeGestureReport.description.getter();
}

SidecarHID::HIDUsage_optional __swiftcall KeyboardReport.Iterator.next()()
{
  uint64_t v2 = *(void *)(v1 + 8);
  if (v2 < -1)
  {
    SidecarHID::HIDUsage v3 = 0;
LABEL_12:
    unsigned __int8 v6 = 1;
    return (SidecarHID::HIDUsage_optional)(*(unsigned int *)&v3 | ((unint64_t)v6 << 32));
  }
  if (__OFADD__(v2, 1))
  {
    __break(1u);
    return (SidecarHID::HIDUsage_optional)v0;
  }
  for (unint64_t i = v2 - 7; i + 8 > 7; ++i)
  {
    if (i > 5)
    {
      SidecarHID::HIDUsage v3 = 0;
      *(void *)(v1 + 8) = -2;
      goto LABEL_12;
    }
    unsigned __int8 v5 = HIDReport.subscript.getter(i + 2);
    if (v5)
    {
      *(void *)(v1 + 8) = i + 8;
      Swift::Int v7 = v5;
      goto LABEL_14;
    }
LABEL_10:
    ;
  }
  if ((HIDReport.subscript.getter(1) & (1 << (i + 8))) == 0) {
    goto LABEL_10;
  }
  *(void *)(v1 + 8) = i + 8;
  Swift::Int v7 = i + 232;
LABEL_14:
  SidecarHID::HIDUsage v3 = HIDUsage.init(page:usage:)(7, v7);
  unsigned __int8 v6 = 0;
  return (SidecarHID::HIDUsage_optional)(*(unsigned int *)&v3 | ((unint64_t)v6 << 32));
}

uint64_t sub_10004E890@<X0>(uint64_t a1@<X8>)
{
  *(SidecarHID::HIDUsage_optional *)&uint64_t result = KeyboardReport.Iterator.next()();
  *(_DWORD *)a1 = result;
  *(unsigned char *)(a1 + 4) = BYTE4(result) & 1;
  return result;
}

void sub_10004E8C8(void *a1@<X8>)
{
  KeyboardReport.makeIterator()();
  *a1 = v2;
  a1[1] = -1;
}

uint64_t sub_10004E8F8()
{
  return variable initialization expression of Clock.heartbeatTimer();
}

uint64_t sub_10004E900()
{
  return sub_10004E908();
}

uint64_t sub_10004E908()
{
  uint64_t v0 = sub_10004E944();
  swift_release();
  return v0;
}

uint64_t sub_10004E93C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10004F1AC(a1, a2, a3, *v3);
}

uint64_t sub_10004E944()
{
  swift_retain();
  unint64_t v0 = 0;
  uint64_t v1 = 0;
  uint64_t v2 = _swiftEmptyArrayStorage;
  SidecarHID::HIDUsage v3 = &_swiftEmptyArrayStorage[4];
  while (v0 >= 8)
  {
    if (v0 - 8 >= 6)
    {
      uint64_t result = swift_release();
      unint64_t v16 = v2[3];
      if (v16 >= 2)
      {
        unint64_t v17 = v16 >> 1;
        BOOL v15 = __OFSUB__(v17, v1);
        unint64_t v18 = v17 - v1;
        if (v15) {
          goto LABEL_31;
        }
        v2[2] = v18;
      }
      return (uint64_t)v2;
    }
    uint64_t result = HIDReport.subscript.getter(v0 - 6);
    if ((_BYTE)result)
    {
      __int16 v5 = result;
      if (v1) {
        goto LABEL_23;
      }
      goto LABEL_10;
    }
LABEL_8:
    ++v0;
  }
  uint64_t result = HIDReport.subscript.getter(1);
  if ((result & (1 << v0)) == 0) {
    goto LABEL_8;
  }
  __int16 v5 = v0 + 224;
  if (!v1)
  {
LABEL_10:
    unint64_t v6 = v2[3];
    if ((uint64_t)((v6 >> 1) + 0x4000000000000000) < 0) {
      goto LABEL_30;
    }
    int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v7 <= 1) {
      uint64_t v8 = 1;
    }
    else {
      uint64_t v8 = v7;
    }
    sub_100007D1C(&qword_1000854B0);
    char v9 = (void *)swift_allocObject();
    uint64_t v10 = (uint64_t)(j__malloc_size(v9) - 32) / 4;
    v9[2] = v8;
    void v9[3] = 2 * v10;
    unint64_t v11 = (unint64_t)(v9 + 4);
    unint64_t v12 = v2[3];
    unint64_t v13 = v12 >> 1;
    if (v2[2])
    {
      if (v9 != v2 || v11 >= (unint64_t)v2 + 4 * v13 + 32) {
        memmove(v9 + 4, v2 + 4, 4 * v13);
      }
      v2[2] = 0;
    }
    SidecarHID::HIDUsage v3 = (_WORD *)(v11 + 4 * v13);
    uint64_t v1 = (v10 & 0x7FFFFFFFFFFFFFFFLL) - (v12 >> 1);
    uint64_t result = swift_release();
    uint64_t v2 = v9;
  }
LABEL_23:
  BOOL v15 = __OFSUB__(v1--, 1);
  if (!v15)
  {
    _WORD *v3 = 7;
    v3[1] = v5;
    v3 += 2;
    goto LABEL_8;
  }
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

unint64_t sub_10004EAFC()
{
  unint64_t result = qword_1000854A8;
  if (!qword_1000854A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000854A8);
  }
  return result;
}

ValueMetadata *type metadata accessor for KeyboardReport()
{
  return &type metadata for KeyboardReport;
}

void *initializeBufferWithCopyOfBuffer for KeyboardReport.Iterator(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

uint64_t destroy for KeyboardReport.Iterator()
{
  return swift_release();
}

void *assignWithCopy for KeyboardReport.Iterator(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  return a1;
}

void *assignWithTake for KeyboardReport.Iterator(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  return a1;
}

uint64_t getEnumTagSinglePayload for KeyboardReport.Iterator(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 16))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for KeyboardReport.Iterator(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for KeyboardReport.Iterator()
{
  return &type metadata for KeyboardReport.Iterator;
}

void sub_10004ECB0(uint64_t (*a1)(void), uint64_t a2, void (*a3)(void))
{
  a3();
  uint64_t v4 = (void *)sub_10005E520();
  swift_errorRelease();
  id v5 = [v4 localizedDescription];
  uint64_t v6 = sub_10005E920();
  unint64_t v8 = v7;

  uint64_t v9 = a1();
  if (v10)
  {
    uint64_t v11 = v9;
    unint64_t v12 = v10;
    id v27 = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v13 = sub_10005E720();
    os_log_type_t v14 = sub_10005EC40();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 136446979;
      swift_bridgeObjectRetain();
      sub_10000F098(v11, v12, &v28);
      sub_10005EE10();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v15 + 12) = 2082;
      id v16 = [v27 domain];
      uint64_t v17 = v6;
      uint64_t v18 = sub_10005E920();
      unint64_t v20 = v19;

      sub_10000F098(v18, v20, &v28);
      sub_10005EE10();

      swift_bridgeObjectRelease();
      *(_WORD *)(v15 + 22) = 2048;
      [v27 code];

      sub_10005EE10();
      *(_WORD *)(v15 + 32) = 2081;
      swift_bridgeObjectRetain();
      sub_10000F098(v17, v8, &v28);
      sub_10005EE10();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "%{public}s: %{public}s (%ld) %{private}s", (uint8_t *)v15, 0x2Au);
      swift_arrayDestroy();
LABEL_6:
      swift_slowDealloc();
      swift_slowDealloc();

      return;
    }
    swift_bridgeObjectRelease_n();
  }
  else
  {
    id v27 = v4;
    swift_bridgeObjectRetain();
    unint64_t v13 = sub_10005E720();
    os_log_type_t v21 = sub_10005EC40();
    if (os_log_type_enabled(v13, v21))
    {
      uint64_t v22 = swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      *(_DWORD *)uint64_t v22 = 136446723;
      id v23 = [v27 domain];
      uint64_t v24 = sub_10005E920();
      unint64_t v26 = v25;

      sub_10000F098(v24, v26, &v28);
      sub_10002E690();

      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 12) = 2048;
      [v27 code];

      sub_10002E690();
      *(_WORD *)(v22 + 22) = 2081;
      swift_bridgeObjectRetain();
      sub_10000F098(v6, v8, &v28);
      sub_10002E690();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v13, v21, "%{public}s (%ld) %{private}s", (uint8_t *)v22, 0x20u);
      swift_arrayDestroy();
      goto LABEL_6;
    }
  }
  swift_bridgeObjectRelease_n();
}

uint64_t sub_10004F1B4()
{
  uint64_t result = sub_100051878();
  while (v3 != v5)
  {
    if (v2 >= -16 && v2 <= 16 && (v2 & 0x8000000000000000) == 0 && (unint64_t)v2 < 0x10) {
      uint64_t result = (*(unsigned __int8 *)(v4 + v6) << (v2 & 8)) | result;
    }
    if (v3 == 1) {
      return result;
    }
    ++v3;
    v2 += 8;
    uint64_t v6 = v1 + v3;
    if (__OFADD__(v1, v3))
    {
      __break(1u);
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_10004F21C(uint64_t a1)
{
  uint64_t v3 = 0;
  uint64_t v4 = 0;
  uint64_t result = 0;
  uint64_t v6 = a1;
  while (v4 != 0x1000000000000000)
  {
    if (v3 < -16) {
      goto LABEL_4;
    }
    if (v3 <= 16)
    {
      if (v3 < 0)
      {
LABEL_4:
        int v7 = 0;
LABEL_9:
        uint64_t result = v7 | result;
        goto LABEL_10;
      }
      if ((unint64_t)v3 <= 0xF)
      {
        int v7 = *(unsigned __int8 *)(*(void *)(v1 + 16) + v6) << (v3 & 8);
        goto LABEL_9;
      }
    }
LABEL_10:
    if (v4 == 1) {
      return result;
    }
    ++v4;
    v3 += 8;
    uint64_t v6 = a1 + v4;
    if (__OFADD__(a1, v4))
    {
      __break(1u);
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_10004F29C(uint64_t a1)
{
  uint64_t v3 = 0;
  uint64_t v4 = 0;
  uint64_t result = 0;
  uint64_t v6 = a1;
  while (v4 != 0x1000000000000000)
  {
    if (v3 >= -64 && v3 <= 64 && (v3 & 0x8000000000000000) == 0 && (unint64_t)v3 < 0x40) {
      result |= (unint64_t)*(unsigned __int8 *)(*(void *)(v1 + 16) + v6) << (v3 & 0x38);
    }
    if (v4 == 7) {
      return result;
    }
    ++v4;
    v3 += 8;
    uint64_t v6 = a1 + v4;
    if (__OFADD__(a1, v4))
    {
      __break(1u);
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_10004F314()
{
  uint64_t result = sub_100051878();
  while (v3 != v5)
  {
    if (v2 >= -32 && v2 <= 32 && (v2 & 0x8000000000000000) == 0 && (unint64_t)v2 < 0x20) {
      uint64_t result = (*(unsigned __int8 *)(v4 + v6) << (v2 & 0x18)) | result;
    }
    if (v3 == 3) {
      return result;
    }
    ++v3;
    v2 += 8;
    uint64_t v6 = v1 + v3;
    if (__OFADD__(v1, v3))
    {
      __break(1u);
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_10004F37C()
{
  uint64_t result = sub_100051878();
  while (v3 != v5)
  {
    if (v2 < -32) {
      goto LABEL_4;
    }
    if (v2 <= 32)
    {
      if (v2 < 0)
      {
LABEL_4:
        int v7 = 0;
LABEL_9:
        uint64_t result = v7 | result;
        goto LABEL_10;
      }
      if ((unint64_t)v2 <= 0x1F)
      {
        int v7 = *(unsigned __int8 *)(v4 + v6) << (v2 & 0x18);
        goto LABEL_9;
      }
    }
LABEL_10:
    if (v3 == 3) {
      return result;
    }
    ++v3;
    v2 += 8;
    uint64_t v6 = v1 + v3;
    if (__OFADD__(v1, v3))
    {
      __break(1u);
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_10004F3EC()
{
  sub_1000518C8();
  double v2 = (double)(unsigned __int16)sub_10004F1B4();
  double v8 = sub_1000517E8(v3, v4, v5, v6, v7);
  if (v2 > v0 || v2 < v1) {
    *(double *)&uint64_t result = 0.0;
  }
  else {
    *(double *)&uint64_t result = v2 / v8;
  }
  return result;
}

uint64_t sub_10004F450(uint64_t a1, Swift::Double a2, Swift::Double a3, __n128 a4, __n128 a5)
{
  unsigned __int8 v5 = a5.n128_u8[0];
  unsigned __int8 v6 = a4.n128_u8[0];
  double v9 = (double)(__int16)sub_10004F21C(a1);
  v13.is_nil = v6;
  v15.is_nil = v5;
  v14.is_nil = 0;
  double v10 = HIDReport.resolution(logicalMinimum:logicalMaximum:physicalMinimum:physicalMaximum:exponent:)(a2, a3, v13, v14, v15);
  if (v9 > a3 || v9 < a2) {
    *(double *)&uint64_t result = 0.0;
  }
  else {
    *(double *)&uint64_t result = v9 / v10;
  }
  return result;
}

uint64_t sub_10004F4E4()
{
  sub_1000518C8();
  double v2 = (double)sub_10004F314();
  double v8 = sub_1000517E8(v3, v4, v5, v6, v7);
  if (v2 > v0 || v2 < v1) {
    *(double *)&uint64_t result = 0.0;
  }
  else {
    *(double *)&uint64_t result = v2 / v8;
  }
  return result;
}

uint64_t sub_10004F544(uint64_t result, uint64_t a2)
{
  uint64_t v3 = *(void *)(v2 + 16);
  *(unsigned char *)(v3 + a2) = result;
  if (__OFADD__(a2, 1)) {
    __break(1u);
  }
  else {
    *(unsigned char *)(v3 + a2 + 1) = BYTE1(result);
  }
  return result;
}

uint64_t sub_10004F568(uint64_t result, uint64_t a2)
{
  uint64_t v3 = *(void *)(v2 + 16);
  *(unsigned char *)(v3 + a2) = result;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
    goto LABEL_6;
  }
  *(unsigned char *)(v3 + a2 + 1) = BYTE1(result);
  if (__OFADD__(a2, 2))
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  *(unsigned char *)(v3 + a2 + 2) = BYTE2(result);
  if (!__OFADD__(a2, 3))
  {
    *(unsigned char *)(v3 + a2 + 3) = BYTE3(result);
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_10004F5B0(uint64_t a1, char a2, uint64_t a3, Swift::Double a4, Swift::Double a5, double a6, double a7, double a8)
{
  return sub_10004F5EC(a1, a2, a3, (void (*)(unsigned __int16 *, double))sub_100050EC0, 0x3631746E4955, (void *)0xE600000000000000, sub_10004F804, a4, a5, a6, a7, a8);
}

uint64_t sub_10004F5EC(uint64_t a1, char a2, uint64_t a3, void (*a4)(unsigned __int16 *, double), uint64_t a5, void *a6, uint64_t (*a7)(void), Swift::Double a8, Swift::Double a9, double a10, double a11, double a12)
{
  if ((a2 & 1) != 0 || (a1 & 0x7FF0000000000000) == 0x7FF0000000000000)
  {
    uint64_t result = a7();
  }
  else
  {
    unint64_t v12 = a6;
    uint64_t v14 = a5;
    double v18 = sub_10005183C(a8, a9, a10, a11, a12);
    a4(&v21, round(v18 * v15));
    if (v22) {
      goto LABEL_9;
    }
    uint64_t result = v21;
  }
  uint64_t v20 = *(void *)(v13 + 16);
  *(unsigned char *)(v20 + a3) = result;
  if (!__OFADD__(a3, 1))
  {
    *(unsigned char *)(v20 + a3 + 1) = BYTE1(result);
    return result;
  }
  __break(1u);
LABEL_9:
  sub_10004C494();
  sub_10004C338();
  v23._object = (void *)0x8000000100063590;
  v23._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
  sub_10005E9C0(v23);
  v24._uint64_t countAndFlagsBits = v14;
  v24._object = v12;
  sub_10005E9C0(v24);
  v25._uint64_t countAndFlagsBits = 0xD00000000000002ELL;
  v25._object = (void *)0x80000001000635B0;
  sub_10005E9C0(v25);
  sub_10004C480();
  uint64_t result = sub_10004C460();
  __break(1u);
  return result;
}

uint64_t sub_10004F710(uint64_t a1, char a2, uint64_t a3, Swift::Double a4, Swift::Double a5, double a6, double a7, double a8)
{
  if ((a2 & 1) != 0 || (a1 & 0x7FF0000000000000) == 0x7FF0000000000000)
  {
    uint64_t v9 = sub_10004FC04();
    return sub_10004F568(v9, a3);
  }
  sub_10005183C(a4, a5, a6, a7, a8);
  sub_100050FCC();
  if ((v12 & 1) == 0)
  {
    uint64_t v9 = v11;
    return sub_10004F568(v9, a3);
  }
  sub_10004C494();
  sub_10004C338();
  v13._object = (void *)0x8000000100063590;
  v13._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
  sub_10005E9C0(v13);
  v14._uint64_t countAndFlagsBits = 0x3233746E4955;
  v14._object = (void *)0xE600000000000000;
  sub_10005E9C0(v14);
  v15._uint64_t countAndFlagsBits = 0xD00000000000002ELL;
  v15._object = (void *)0x80000001000635B0;
  sub_10005E9C0(v15);
  sub_10004C480();
  uint64_t result = sub_10004C460();
  __break(1u);
  return result;
}

uint64_t sub_10004F804()
{
  sub_100050EC0();
  if (v2) {
    goto LABEL_6;
  }
  if (v1) {
    return 0;
  }
  sub_100050EC0();
  if ((v2 & 1) == 0) {
    return 0xFFFFLL;
  }
LABEL_6:
  sub_10005EF40(80);
  v3._uint64_t countAndFlagsBits = 0x656C62756F44;
  v3._object = (void *)0xE600000000000000;
  sub_10005E9C0(v3);
  v4._object = (void *)0x8000000100063590;
  v4._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
  sub_10005E9C0(v4);
  v5._uint64_t countAndFlagsBits = 0x3631746E4955;
  v5._object = (void *)0xE600000000000000;
  sub_10005E9C0(v5);
  v6._uint64_t countAndFlagsBits = 0xD00000000000002ELL;
  v6._object = (void *)0x80000001000635B0;
  sub_10005E9C0(v6);
  uint64_t result = sub_10005F050();
  __break(1u);
  return result;
}

uint64_t sub_10004FA04()
{
  sub_100051234();
  if (v2) {
    goto LABEL_8;
  }
  if (v1 != -32768) {
    return 0x8000;
  }
  sub_100051234();
  if (v2)
  {
LABEL_8:
    sub_10005EF40(80);
    v5._uint64_t countAndFlagsBits = 0x656C62756F44;
    v5._object = (void *)0xE600000000000000;
    sub_10005E9C0(v5);
    v6._object = (void *)0x8000000100063590;
    v6._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
    sub_10005E9C0(v6);
    v7._uint64_t countAndFlagsBits = 0x3631746E49;
    v7._object = (void *)0xE500000000000000;
    sub_10005E9C0(v7);
    v8._uint64_t countAndFlagsBits = 0xD00000000000002ELL;
    v8._object = (void *)0x80000001000635B0;
    sub_10005E9C0(v8);
    goto LABEL_9;
  }
  uint64_t result = 0x7FFFLL;
  if (v1 == 0x7FFF)
  {
    sub_10005EF40(54);
    v3._uint64_t countAndFlagsBits = 0xD000000000000031;
    v3._object = (void *)0x8000000100063550;
    sub_10005E9C0(v3);
    sub_10005EBD0();
    v4._uint64_t countAndFlagsBits = 45;
    v4._object = (void *)0xE100000000000000;
    sub_10005E9C0(v4);
    sub_10005EBD0();
LABEL_9:
    uint64_t result = sub_10005F050();
    __break(1u);
  }
  return result;
}

uint64_t sub_10004FC04()
{
  sub_100050FCC();
  if (v2) {
    goto LABEL_6;
  }
  if (v1) {
    return 0;
  }
  sub_100050FCC();
  if ((v2 & 1) == 0) {
    return 0xFFFFFFFFLL;
  }
LABEL_6:
  sub_10005EF40(80);
  v3._uint64_t countAndFlagsBits = 0x656C62756F44;
  v3._object = (void *)0xE600000000000000;
  sub_10005E9C0(v3);
  v4._object = (void *)0x8000000100063590;
  v4._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
  sub_10005E9C0(v4);
  v5._uint64_t countAndFlagsBits = 0x3233746E4955;
  v5._object = (void *)0xE600000000000000;
  sub_10005E9C0(v5);
  v6._uint64_t countAndFlagsBits = 0xD00000000000002ELL;
  v6._object = (void *)0x80000001000635B0;
  sub_10005E9C0(v6);
  uint64_t result = sub_10005F050();
  __break(1u);
  return result;
}

void sub_10004FE04()
{
  static MultitouchReport.reportID = 6;
}

char *MultitouchReport.reportID.unsafeMutableAddressor()
{
  if (qword_100085298 != -1) {
    swift_once();
  }
  return &static MultitouchReport.reportID;
}

uint64_t static MultitouchReport.reportID.getter()
{
  if (qword_100085298 != -1) {
    swift_once();
  }
  return static MultitouchReport.reportID;
}

uint64_t sub_10004FEAC()
{
  sub_100007D1C(&qword_100084120);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_100065ED0;
  *(void *)(v0 + 32) = 0x8501A12109FF1A06;
  if (qword_100085298 != -1) {
    swift_once();
  }
  *(unsigned char *)(v0 + 40) = static MultitouchReport.reportID;
  *(_OWORD *)(v0 + 41) = xmmword_100065EE0;
  *(_OWORD *)(v0 + 57) = xmmword_100065EF0;
  *(_OWORD *)(v0 + 73) = xmmword_100065F00;
  *(_OWORD *)(v0 + 89) = xmmword_100065F10;
  *(_OWORD *)(v0 + 105) = xmmword_100065F20;
  *(_OWORD *)(v0 + 121) = xmmword_100065F30;
  *(_OWORD *)(v0 + 137) = xmmword_100065F40;
  *(unsigned char *)(v0 + 153) = -64;
  uint64_t result = sub_100047B04(v0);
  static MultitouchReport.reportDescriptor = result;
  *(void *)algn_100089038 = v2;
  return result;
}

uint64_t *MultitouchReport.reportDescriptor.unsafeMutableAddressor()
{
  if (qword_1000852A0 != -1) {
    swift_once();
  }
  return &static MultitouchReport.reportDescriptor;
}

uint64_t static MultitouchReport.reportDescriptor.getter()
{
  if (qword_1000852A0 != -1) {
    swift_once();
  }
  uint64_t v0 = static MultitouchReport.reportDescriptor;
  sub_100008D64(static MultitouchReport.reportDescriptor, *(unint64_t *)algn_100089038);
  return v0;
}

void *MultitouchReport.init()()
{
  type metadata accessor for HIDReport();
  uint64_t v0 = HIDReport.__allocating_init(count:)(23);
  uint64_t v1 = qword_100085298;
  swift_retain();
  if (v1 != -1) {
    swift_once();
  }
  HIDReport.subscript.setter(static MultitouchReport.reportID, 0);
  swift_release();
  return v0;
}

void *MultitouchReport.init(_:)(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = sub_10005E650();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  Swift::String v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for HIDReport();
  Swift::String v8 = HIDReport.__allocating_init(count:)(23);
  swift_retain();
  char v9 = sub_10005E660();
  if (qword_100085298 != -1) {
    swift_once();
  }
  if (static MultitouchReport.reportID == v9 && sub_10005E620() >= v8[3])
  {
    swift_release();
    sub_100008D64(a1, a2);
    sub_10005E5A0();
    sub_100008D0C(a1, a2);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_100008D0C(a1, a2);
  }
  else
  {
    sub_100008D0C(a1, a2);
    swift_release();
    swift_release();
    return 0;
  }
  return v8;
}

void *MultitouchReport.init(report:)(uint64_t a1)
{
  type metadata accessor for HIDReport();
  uint64_t v2 = HIDReport.__allocating_init(count:)(23);
  char v3 = HIDReport.subscript.getter(0);
  uint64_t v4 = qword_100085298;
  swift_retain();
  if (v4 != -1) {
    swift_once();
  }
  if (static MultitouchReport.reportID == v3 && (uint64_t v5 = v2[3], *(void *)(a1 + 24) >= v5))
  {
    uint64_t v6 = (unsigned char *)v2[2];
    swift_release();
    sub_1000515EC((uint64_t)&v8, v6, v5);
    swift_release();
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
    return 0;
  }
  return v2;
}

uint64_t MultitouchReport.x.getter()
{
  sub_1000518E0();
  uint64_t result = sub_10004F3EC();
  if (v1) {
    __break(1u);
  }
  return result;
}

uint64_t MultitouchReport.x.setter()
{
  sub_100051930();
  if (!(!v3 & v2)) {
    double v0 = v1;
  }
  double v4 = sub_100051764(v0);
  return sub_1000517B0(v5, v4, 32767.0, v6, v7, (void (*)(unsigned __int16 *, double))sub_100050EC0, v8, v9, sub_10004F804);
}

uint64_t (*MultitouchReport.x.modify(uint64_t (**a1)(), uint64_t (*a2)()))()
{
  a1[1] = a2;
  sub_1000518E0();
  uint64_t result = (uint64_t (*)())sub_10004F3EC();
  if (v4)
  {
    __break(1u);
  }
  else
  {
    *a1 = result;
    return sub_1000504A4;
  }
  return result;
}

uint64_t sub_1000504A4()
{
  sub_100051930();
  if (!(!v3 & v2)) {
    double v0 = v1;
  }
  double v4 = sub_100051764(v0);
  return sub_1000517B0(v5, v4, 32767.0, v6, v7, (void (*)(unsigned __int16 *, double))sub_100050EC0, v8, v9, sub_10004F804);
}

uint64_t MultitouchReport.y.getter()
{
  sub_1000518F8();
  uint64_t result = sub_10004F3EC();
  if (v1) {
    __break(1u);
  }
  return result;
}

uint64_t MultitouchReport.y.setter()
{
  sub_100051930();
  if (!(!v3 & v2)) {
    double v0 = v1;
  }
  double v4 = sub_100051764(v0);
  return sub_100051778(v5, v4, 32767.0, v6, v7, (void (*)(unsigned __int16 *, double))sub_100050EC0, v8, v9, sub_10004F804);
}

uint64_t (*MultitouchReport.y.modify(uint64_t (**a1)(), uint64_t (*a2)()))()
{
  a1[1] = a2;
  sub_1000518F8();
  uint64_t result = (uint64_t (*)())sub_10004F3EC();
  if (v4)
  {
    __break(1u);
  }
  else
  {
    *a1 = result;
    return sub_100050604;
  }
  return result;
}

uint64_t sub_100050604()
{
  sub_100051930();
  if (!(!v3 & v2)) {
    double v0 = v1;
  }
  double v4 = sub_100051764(v0);
  return sub_100051778(v5, v4, 32767.0, v6, v7, (void (*)(unsigned __int16 *, double))sub_100050EC0, v8, v9, sub_10004F804);
}

uint64_t MultitouchReport.rotation.getter(double a1, double a2, __n128 a3, __n128 a4)
{
  a3.n128_u64[0] = 0xC0EEADE000000000;
  a4.n128_u64[0] = 0x40EEADE000000000;
  return sub_10004F450(5, -32767.0, 32767.0, a3, a4);
}

uint64_t MultitouchReport.rotation.setter(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char v6 = a2 & 1;
  if ((a2 & 1) == 0) {
    a1 = remainder(*(long double *)&a1, 6.28318531);
  }
  return sub_100051704(a1, v6, 5, (void (*)(unsigned __int16 *, double))sub_100051234, -32767.0, 32767.0, -62831.0, 62831.0, -4.0, a5, a6, sub_10004FA04);
}

uint64_t (*MultitouchReport.rotation.modify(uint64_t a1, uint64_t a2))(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_100051978(a1, a2);
  v2.n128_u64[0] = 0xC0EEADE000000000;
  v3.n128_u64[0] = 0x40EEADE000000000;
  uint64_t v4 = sub_10004F450(5, -32767.0, 32767.0, v2, v3);
  sub_100051868(v4, v5);
  return sub_1000507BC;
}

uint64_t sub_1000507BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = *(void *)a1;
  char v8 = *(unsigned char *)(a1 + 8);
  if ((v8 & 1) == 0) {
    uint64_t v7 = remainder(*(long double *)&v7, 6.28318531);
  }
  return sub_100051704(v7, v8, 5, (void (*)(unsigned __int16 *, double))sub_100051234, -32767.0, 32767.0, -62831.0, 62831.0, -4.0, a5, a6, sub_10004FA04);
}

uint64_t MultitouchReport.scale.getter()
{
  uint64_t v0 = sub_100051964();
  return sub_10004F450(v0, v1, v2, v3, v4);
}

uint64_t MultitouchReport.scale.setter()
{
  sub_100051920();
  if ((v1 & 1) == 0) {
    sub_1000516D0(v0);
  }
  sub_100051818();
  return sub_100051704(v2, v3, 7, v4, v8, v9, v10, v11, v12, v5, v6, v7);
}

uint64_t (*MultitouchReport.scale.modify(uint64_t a1, uint64_t a2))(uint64_t a1)
{
  sub_100051978(a1, a2);
  uint64_t v2 = sub_100051964();
  uint64_t v7 = sub_10004F450(v2, v3, v4, v5, v6);
  sub_100051868(v7, v8);
  return sub_100050960;
}

uint64_t sub_100050960(uint64_t a1)
{
  return sub_100050A78(a1);
}

uint64_t MultitouchReport.tx.getter()
{
  uint64_t v0 = sub_10005193C();
  return sub_10004F450(v0, v1, v2, v3, v4);
}

uint64_t MultitouchReport.tx.setter()
{
  sub_100051920();
  if ((v1 & 1) == 0) {
    sub_1000516D0(v0);
  }
  sub_100051818();
  return sub_100051704(v2, v3, 11, v4, v8, v9, v10, v11, v12, v5, v6, v7);
}

uint64_t (*MultitouchReport.tx.modify(uint64_t a1, uint64_t a2))(uint64_t a1)
{
  sub_100051978(a1, a2);
  uint64_t v2 = sub_10005193C();
  uint64_t v7 = sub_10004F450(v2, v3, v4, v5, v6);
  sub_100051868(v7, v8);
  return sub_100050A70;
}

uint64_t sub_100050A70(uint64_t a1)
{
  return sub_100050A78(a1);
}

uint64_t sub_100050A78(uint64_t a1)
{
  uint64_t v2 = *(void *)a1;
  if ((*(unsigned char *)(a1 + 8) & 1) == 0) {
    sub_1000516D0(v2);
  }
  sub_100051818();
  return sub_100051704(v3, v4, v5, v6, v10, v11, v12, v13, v14, v7, v8, v9);
}

uint64_t MultitouchReport.ty.getter()
{
  uint64_t v0 = sub_100051950();
  return sub_10004F450(v0, v1, v2, v3, v4);
}

uint64_t MultitouchReport.ty.setter()
{
  sub_100051920();
  if ((v1 & 1) == 0) {
    sub_1000516D0(v0);
  }
  sub_100051818();
  return sub_100051704(v2, v3, 9, v4, v8, v9, v10, v11, v12, v5, v6, v7);
}

uint64_t (*MultitouchReport.ty.modify(uint64_t a1, uint64_t a2))(uint64_t a1)
{
  sub_100051978(a1, a2);
  uint64_t v2 = sub_100051950();
  uint64_t v7 = sub_10004F450(v2, v3, v4, v5, v6);
  sub_100051868(v7, v8);
  return sub_100050BFC;
}

uint64_t sub_100050BFC(uint64_t a1)
{
  return sub_100050A78(a1);
}

uint64_t MultitouchReport.scanTime.getter()
{
  return sub_10004F1B4();
}

uint64_t MultitouchReport.scanTime.setter(uint64_t result, uint64_t a2)
{
  *(_WORD *)(*(void *)(a2 + 16) + 13) = result;
  return result;
}

_WORD *(*MultitouchReport.scanTime.modify(uint64_t a1, uint64_t a2))(_WORD *result)
{
  *(void *)a1 = a2;
  *(_WORD *)(a1 + 8) = sub_10004F1B4();
  return sub_100050C88;
}

_WORD *sub_100050C88(_WORD *result)
{
  *(_WORD *)(*(void *)(*(void *)result + 16) + 13) = result[4];
  return result;
}

uint64_t MultitouchReport.hostTime.getter()
{
  return sub_10004F29C(15);
}

void MultitouchReport.hostTime.setter(Swift::UInt64 a1)
{
}

void (*MultitouchReport.hostTime.modify(uint64_t *a1, uint64_t a2))(Swift::UInt64 *a1)
{
  a1[1] = a2;
  *a1 = sub_10004F29C(15);
  return sub_100050D3C;
}

void sub_100050D3C(Swift::UInt64 *a1)
{
}

unint64_t static SqueezeGestureReport.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  return (unint64_t)static HIDReport.== infix(_:_:)(a1, a2) & 1;
}

unint64_t sub_100050DA8(uint64_t *a1, uint64_t *a2)
{
  return static SqueezeGestureReport.__derived_struct_equals(_:_:)(*a1, *a2);
}

uint64_t sub_100050DB4()
{
  sub_1000516B4();
  if (!v3)
  {
    uint64_t result = sub_1000518BC();
    goto LABEL_18;
  }
  BOOL v4 = v2 == 2047 || v1 <= -1.0;
  if (v4 || (uint64_t v8 = sub_10005EBE0(), v8 > 7))
  {
    uint64_t result = sub_100051754();
    goto LABEL_18;
  }
  sub_100051898(v9);
  sub_100051828();
  if (v11)
  {
    __break(1u);
  }
  else
  {
    if (v10 <= 7) {
      goto LABEL_15;
    }
    sub_1000518B0();
    if (!v13) {
      goto LABEL_15;
    }
    if ((v12 & 0x8000000000000000) == 0)
    {
      sub_100051744();
      goto LABEL_15;
    }
  }
  sub_1000516F0();
LABEL_15:
  sub_100051910();
  uint64_t result = v14 == v11;
LABEL_18:
  unsigned char *v0 = v6;
  v0[1] = v7;
  return result;
}

uint64_t sub_100050EC0()
{
  sub_1000516B4();
  if (!v3)
  {
    uint64_t result = sub_1000518BC();
    goto LABEL_18;
  }
  BOOL v4 = v2 == 2047 || v1 <= -1.0;
  if (v4 || (uint64_t v8 = sub_10005EBE0(), v8 > 15))
  {
    uint64_t result = sub_100051754();
    goto LABEL_18;
  }
  sub_100051898(v9);
  sub_100051828();
  if (v11)
  {
    __break(1u);
  }
  else
  {
    if (v10 <= 15) {
      goto LABEL_15;
    }
    sub_1000518B0();
    if (!v13) {
      goto LABEL_15;
    }
    if ((v12 & 0x8000000000000000) == 0)
    {
      sub_100051744();
      goto LABEL_15;
    }
  }
  sub_1000516F0();
LABEL_15:
  sub_100051910();
  uint64_t result = v14 == v11;
LABEL_18:
  *(_WORD *)uint64_t v0 = v6;
  *(unsigned char *)(v0 + 2) = v7;
  return result;
}

uint64_t sub_100050FCC()
{
  sub_1000516B4();
  if (!v3)
  {
    uint64_t result = sub_1000518BC();
    goto LABEL_18;
  }
  BOOL v4 = v2 == 2047 || v1 <= -1.0;
  if (v4 || (uint64_t v8 = sub_10005EBE0(), v8 > 31))
  {
    uint64_t result = sub_100051754();
    goto LABEL_18;
  }
  sub_100051898(v9);
  sub_100051828();
  if (v11)
  {
    __break(1u);
  }
  else
  {
    if (v10 <= 31) {
      goto LABEL_15;
    }
    sub_1000518B0();
    if (!v13) {
      goto LABEL_15;
    }
    if ((v12 & 0x8000000000000000) == 0)
    {
      sub_100051744();
      goto LABEL_15;
    }
  }
  sub_1000516F0();
LABEL_15:
  sub_100051910();
  uint64_t result = v14 == v11;
LABEL_18:
  *(_DWORD *)uint64_t v0 = v6;
  *(unsigned char *)(v0 + 4) = v7;
  return result;
}

void sub_1000510D4()
{
  sub_1000516B4();
  if (!v5)
  {
    sub_1000518BC();
    goto LABEL_27;
  }
  if (v4 == 2047 || sub_10005EBE0() > 7)
  {
LABEL_36:
    sub_100051754();
    goto LABEL_27;
  }
  uint64_t v7 = sub_100051898(v6);
  sub_100051724(v7);
  if (v10)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v9 > 7)
  {
    sub_1000518B0();
    if (v13)
    {
      if (v12 < 0) {
        sub_1000516F0();
      }
      else {
        sub_100051744();
      }
    }
    else
    {
      LOBYTE(v8) = 0;
    }
LABEL_18:
    if (v1 != 7)
    {
      if (v1 < 0)
      {
        LOBYTE(v11) = 0;
        goto LABEL_22;
      }
      goto LABEL_21;
    }
LABEL_29:
    if (v3 >= 0.0 || (_BYTE)v8) {
      goto LABEL_36;
    }
    goto LABEL_31;
  }
  if (v8 >= -8 && v8 <= 8)
  {
    if (v8 < 0)
    {
      if ((unint64_t)v8 <= 0xFFFFFFFFFFFFFFF8) {
        goto LABEL_8;
      }
      LODWORD(v8) = v2 >> -(char)v8;
    }
    else
    {
      if ((unint64_t)v8 >= 8) {
        goto LABEL_8;
      }
      LODWORD(v8) = v2 << v8;
    }
    goto LABEL_18;
  }
LABEL_8:
  if (v1 == 7) {
    goto LABEL_35;
  }
  LOBYTE(v11) = 0;
  LOBYTE(v8) = 0;
  if ((v1 & 0x8000000000000000) == 0) {
LABEL_21:
  }
    int v11 = 1 << v1;
LABEL_22:
  int v14 = (char)(v8 | v11);
  if (v3 >= 0.0)
  {
    if ((v14 & 0x80000000) == 0)
    {
      char v15 = 0;
      goto LABEL_27;
    }
    goto LABEL_34;
  }
  if (v14 < 0)
  {
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    if (v3 >= 0.0) {
      goto LABEL_36;
    }
LABEL_31:
    char v15 = 0;
    LOBYTE(v14) = 0x80;
    goto LABEL_27;
  }
  char v15 = 0;
  int v14 = -v14;
LABEL_27:
  unsigned char *v0 = v14;
  v0[1] = v15;
}

void sub_100051234()
{
  sub_1000516B4();
  if (!v5)
  {
    sub_1000518BC();
    goto LABEL_27;
  }
  if (v4 == 2047 || sub_10005EBE0() > 15)
  {
LABEL_36:
    sub_100051754();
    goto LABEL_27;
  }
  uint64_t v7 = sub_100051898(v6);
  sub_100051724(v7);
  if (v10)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v9 > 15)
  {
    sub_1000518B0();
    if (v13)
    {
      if (v12 < 0) {
        sub_1000516F0();
      }
      else {
        sub_100051744();
      }
    }
    else
    {
      LOWORD(v8) = 0;
    }
LABEL_18:
    if (v1 != 15)
    {
      if (v1 < 0)
      {
        LOWORD(v11) = 0;
        goto LABEL_22;
      }
      goto LABEL_21;
    }
LABEL_29:
    if (v3 >= 0.0 || (_WORD)v8) {
      goto LABEL_36;
    }
    goto LABEL_31;
  }
  if (v8 >= -16 && v8 <= 16)
  {
    if (v8 < 0)
    {
      if ((unint64_t)v8 <= 0xFFFFFFFFFFFFFFF0) {
        goto LABEL_8;
      }
      LODWORD(v8) = (unsigned __int16)v2 >> -(char)v8;
    }
    else
    {
      if ((unint64_t)v8 >= 0x10) {
        goto LABEL_8;
      }
      LODWORD(v8) = v2 << v8;
    }
    goto LABEL_18;
  }
LABEL_8:
  if (v1 == 15) {
    goto LABEL_35;
  }
  LOWORD(v11) = 0;
  LOWORD(v8) = 0;
  if ((v1 & 0x8000000000000000) == 0) {
LABEL_21:
  }
    int v11 = 1 << v1;
LABEL_22:
  int v14 = (__int16)(v8 | v11);
  if (v3 >= 0.0)
  {
    if ((v14 & 0x80000000) == 0)
    {
      char v15 = 0;
      goto LABEL_27;
    }
    goto LABEL_34;
  }
  if (v14 < 0)
  {
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    if (v3 >= 0.0) {
      goto LABEL_36;
    }
LABEL_31:
    char v15 = 0;
    LOWORD(v14) = 0x8000;
    goto LABEL_27;
  }
  char v15 = 0;
  int v14 = -v14;
LABEL_27:
  *(_WORD *)uint64_t v0 = v14;
  *(unsigned char *)(v0 + 2) = v15;
}

void sub_100051394()
{
  sub_1000516B4();
  if (!v5)
  {
    sub_1000518BC();
    goto LABEL_27;
  }
  if (v4 == 2047 || sub_10005EBE0() > 31)
  {
LABEL_36:
    sub_100051754();
    goto LABEL_27;
  }
  uint64_t v7 = sub_100051898(v6);
  sub_100051724(v7);
  if (v10)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v9 > 31)
  {
    sub_1000518B0();
    if (v13)
    {
      if (v12 < 0) {
        sub_1000516F0();
      }
      else {
        sub_100051744();
      }
    }
    else
    {
      LODWORD(v8) = 0;
    }
LABEL_18:
    if (v1 != 31)
    {
      if (v1 < 0)
      {
        int v11 = 0;
        goto LABEL_22;
      }
      goto LABEL_21;
    }
LABEL_29:
    if (v3 >= 0.0 || v8) {
      goto LABEL_36;
    }
    goto LABEL_31;
  }
  if (v8 >= -32 && v8 <= 32)
  {
    if (v8 < 0)
    {
      if ((unint64_t)v8 <= 0xFFFFFFFFFFFFFFE0) {
        goto LABEL_8;
      }
      LODWORD(v8) = v2 >> -(char)v8;
    }
    else
    {
      if ((unint64_t)v8 >= 0x20) {
        goto LABEL_8;
      }
      LODWORD(v8) = v2 << v8;
    }
    goto LABEL_18;
  }
LABEL_8:
  if (v1 == 31) {
    goto LABEL_35;
  }
  int v11 = 0;
  LODWORD(v8) = 0;
  if ((v1 & 0x8000000000000000) == 0) {
LABEL_21:
  }
    int v11 = 1 << v1;
LABEL_22:
  int v14 = v8 | v11;
  if (v3 >= 0.0)
  {
    if ((v14 & 0x80000000) == 0)
    {
      char v15 = 0;
      goto LABEL_27;
    }
    goto LABEL_34;
  }
  if (v14 < 0)
  {
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    if (v3 >= 0.0) {
      goto LABEL_36;
    }
LABEL_31:
    char v15 = 0;
    int v14 = 0x80000000;
    goto LABEL_27;
  }
  char v15 = 0;
  int v14 = -v14;
LABEL_27:
  *(_DWORD *)uint64_t v0 = v14;
  *(unsigned char *)(v0 + 4) = v15;
}

void *sub_1000514E8(void *result, _WORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (!a2)
  {
    uint64_t v6 = 0;
    goto LABEL_16;
  }
  uint64_t v6 = a3;
  if (!a3)
  {
LABEL_16:
    uint64_t v9 = -1;
    goto LABEL_18;
  }
  if (a3 < 0)
  {
    __break(1u);
    return result;
  }
  uint64_t v7 = a2;
  uint64_t v8 = 0;
  uint64_t v9 = -1;
  while (2)
  {
    uint64_t v10 = v8++;
    for (unint64_t i = v9 - 7; i < 0xFFFFFFFFFFFFFFF8; ++i)
    {
      if (i > 5)
      {
        uint64_t v9 = -2;
        uint64_t v6 = v10;
        goto LABEL_18;
      }
      unsigned __int8 v12 = HIDReport.subscript.getter(i + 2);
      if (v12)
      {
        __int16 v13 = v12;
        goto LABEL_13;
      }
LABEL_11:
      ;
    }
    if ((HIDReport.subscript.getter(1) & (1 << (i + 8))) == 0) {
      goto LABEL_11;
    }
    __int16 v13 = i + 232;
LABEL_13:
    *uint64_t v7 = 7;
    v7[1] = v13;
    v7 += 2;
    uint64_t v9 = i + 8;
    if (v8 != v6) {
      continue;
    }
    break;
  }
LABEL_18:
  void *v5 = a4;
  v5[1] = v9;
  return (void *)v6;
}

uint64_t sub_1000515EC(uint64_t result, unsigned char *a2, uint64_t a3)
{
  uint64_t v4 = (void *)result;
  if (!a2)
  {
    uint64_t v5 = 0;
    goto LABEL_13;
  }
  uint64_t v5 = a3;
  if (!a3)
  {
LABEL_13:
    *uint64_t v4 = v3;
    v4[1] = v5;
    return v5;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    uint64_t v6 = *(void *)(v3 + 24);
    if (v6)
    {
      uint64_t result = HIDReport.subscript.getter(0);
      *a2 = result;
      if (v5 != 1)
      {
        uint64_t v8 = 1;
        while (v5 != v8)
        {
          if (v6 == v8) {
            goto LABEL_12;
          }
          uint64_t result = HIDReport.subscript.getter(v8);
          a2[v8++] = result;
          if (v5 == v8) {
            goto LABEL_13;
          }
        }
        __break(1u);
        goto LABEL_15;
      }
    }
    else
    {
LABEL_12:
      uint64_t v5 = v6;
    }
    goto LABEL_13;
  }
LABEL_15:
  __break(1u);
  return result;
}

ValueMetadata *type metadata accessor for MultitouchReport()
{
  return &type metadata for MultitouchReport;
}

double sub_1000516D0(uint64_t a1)
{
  double result = *(double *)&a1;
  if (*(double *)&a1 <= -1.0) {
    double result = -1.0;
  }
  if (result > 1.0) {
    return 1.0;
  }
  return result;
}

uint64_t sub_100051704(uint64_t a1, char a2, uint64_t a3, void (*a4)(unsigned __int16 *, double), Swift::Double a5, Swift::Double a6, double a7, double a8, double a9, uint64_t a10, uint64_t a11, uint64_t (*a12)(void))
{
  return sub_10004F5EC(a1, a2, a3, a4, 0x3631746E49, (void *)0xE500000000000000, a12, a5, a6, a7, a8, a9);
}

BOOL sub_100051724(uint64_t a1)
{
  return v1 >= a1;
}

uint64_t sub_100051754()
{
  return 0;
}

double sub_100051764(double result)
{
  if (result > 1.0) {
    return 1.0;
  }
  return result;
}

uint64_t sub_100051778(uint64_t a1, double a2, Swift::Double a3, uint64_t a4, uint64_t a5, void (*a6)(unsigned __int16 *, double), uint64_t a7, uint64_t a8, uint64_t (*a9)(void))
{
  return sub_10004F5EC(a1, 0, 3, a6, 0x3631746E4955, (void *)0xE600000000000000, a9, 0.0, a3, 0.0, 1.0, 0.0);
}

uint64_t sub_1000517B0(uint64_t a1, double a2, Swift::Double a3, uint64_t a4, uint64_t a5, void (*a6)(unsigned __int16 *, double), uint64_t a7, uint64_t a8, uint64_t (*a9)(void))
{
  return sub_10004F5EC(a1, 0, 1, a6, 0x3631746E4955, (void *)0xE600000000000000, a9, 0.0, a3, 0.0, 1.0, 0.0);
}

double sub_1000517E8(double a1, double a2, double a3, double a4, double a5)
{
  char v10 = v7;
  char v11 = v6;
  char v12 = 0;
  return HIDReport.resolution(logicalMinimum:logicalMaximum:physicalMinimum:physicalMaximum:exponent:)(v9, v8, *(Swift::Double_optional *)&a3, *(Swift::Double_optional *)&a4, *(Swift::Double_optional *)&a5);
}

double sub_10005183C(Swift::Double a1, Swift::Double a2, double a3, double a4, double a5)
{
  char v6 = LOBYTE(a3);
  char v7 = LOBYTE(a4);
  char v8 = 0;
  return HIDReport.resolution(logicalMinimum:logicalMaximum:physicalMinimum:physicalMaximum:exponent:)(a1, a2, *(Swift::Double_optional *)&a3, *(Swift::Double_optional *)&a4, *(Swift::Double_optional *)&a5);
}

uint64_t sub_100051868(uint64_t result, char a2)
{
  *(void *)uint64_t v2 = result;
  *(unsigned char *)(v2 + 8) = a2 & 1;
  return result;
}

uint64_t sub_100051878()
{
  return 0;
}

uint64_t sub_100051898(__n128 a1)
{
  a1.n128_u64[0] = v2;
  return Double.significandWidth.getter(a1);
}

uint64_t sub_1000518BC()
{
  return 1;
}

uint64_t sub_1000518E0()
{
  return 1;
}

uint64_t sub_1000518F8()
{
  return 3;
}

uint64_t sub_10005193C()
{
  return 11;
}

uint64_t sub_100051950()
{
  return 9;
}

uint64_t sub_100051964()
{
  return 7;
}

uint64_t sub_100051978(uint64_t result, uint64_t a2)
{
  *(void *)(result + 16) = a2;
  return result;
}

id sub_100051984(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10005E920();
  return sub_100019858(v6, v7, a1, a2, a3, 0);
}

void *PencilReport.version1ByteCount.unsafeMutableAddressor()
{
  return &static PencilReport.version1ByteCount;
}

uint64_t static PencilReport.version1ByteCount.getter()
{
  return 19;
}

void *PencilReport.version2ByteCount.unsafeMutableAddressor()
{
  return &static PencilReport.version2ByteCount;
}

uint64_t static PencilReport.version2ByteCount.getter()
{
  return 21;
}

uint64_t PencilReport.report.setter(uint64_t a1)
{
  uint64_t result = swift_release();
  *uint64_t v1 = a1;
  return result;
}

void sub_100051A64()
{
  static PencilReport.reportID = 4;
}

char *PencilReport.reportID.unsafeMutableAddressor()
{
  if (qword_1000852A8 != -1) {
    swift_once();
  }
  return &static PencilReport.reportID;
}

uint64_t static PencilReport.reportID.getter()
{
  if (qword_1000852A8 != -1) {
    swift_once();
  }
  return static PencilReport.reportID;
}

uint64_t sub_100051B0C()
{
  sub_100007D1C(&qword_100084120);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_100065FE0;
  *(_DWORD *)(v0 + 32) = 34147589;
  *(_WORD *)(v0 + 36) = 417;
  *(unsigned char *)(v0 + 38) = -123;
  if (qword_1000852A8 != -1) {
    swift_once();
  }
  *(unsigned char *)(v0 + 39) = static PencilReport.reportID;
  *(_OWORD *)(v0 + 40) = xmmword_100065FF0;
  *(_OWORD *)(v0 + 56) = xmmword_100066000;
  *(_OWORD *)(v0 + 72) = xmmword_100066010;
  *(_OWORD *)(v0 + 88) = xmmword_100066020;
  *(_OWORD *)(v0 + 104) = xmmword_100066030;
  *(_OWORD *)(v0 + 120) = xmmword_100066040;
  *(_OWORD *)(v0 + 136) = xmmword_100066050;
  *(_OWORD *)(v0 + 152) = xmmword_100066060;
  *(_OWORD *)(v0 + 168) = xmmword_100066070;
  uint64_t result = sub_100047B04(v0);
  static PencilReport.reportDescriptor = result;
  unk_100089050 = v2;
  return result;
}

uint64_t *PencilReport.reportDescriptor.unsafeMutableAddressor()
{
  if (qword_1000852B0 != -1) {
    swift_once();
  }
  return &static PencilReport.reportDescriptor;
}

uint64_t static PencilReport.reportDescriptor.getter()
{
  if (qword_1000852B0 != -1) {
    swift_once();
  }
  uint64_t v0 = static PencilReport.reportDescriptor;
  sub_100008D64(static PencilReport.reportDescriptor, unk_100089050);
  return v0;
}

void *PencilReport.init()()
{
  type metadata accessor for HIDReport();
  uint64_t v0 = sub_100053240();
  uint64_t v1 = qword_1000852A8;
  swift_retain();
  if (v1 != -1) {
    swift_once();
  }
  HIDReport.subscript.setter(static PencilReport.reportID, 0);
  swift_release();
  return v0;
}

void *PencilReport.init(_:)(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = sub_10005E650();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for HIDReport();
  char v8 = sub_100053240();
  swift_retain();
  char v9 = sub_10005E660();
  if (qword_1000852A8 != -1) {
    swift_once();
  }
  if (static PencilReport.reportID == v9 && sub_10005E620() >= 19)
  {
    swift_release();
    sub_100008D64(a1, a2);
    sub_10005E5A0();
    sub_100008D0C(a1, a2);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_100008D0C(a1, a2);
  }
  else
  {
    sub_100008D0C(a1, a2);
    swift_release_n();
    return 0;
  }
  return v8;
}

void *PencilReport.init(report:)(uint64_t a1)
{
  type metadata accessor for HIDReport();
  uint64_t v2 = sub_100053240();
  char v3 = HIDReport.subscript.getter(0);
  uint64_t v4 = qword_1000852A8;
  swift_retain();
  if (v4 != -1) {
    swift_once();
  }
  if (static PencilReport.reportID == v3 && (uint64_t v5 = v2[3], *(void *)(a1 + 24) >= v5))
  {
    uint64_t v6 = (unsigned char *)v2[2];
    swift_release();
    sub_1000515EC((uint64_t)&v8, v6, v5);
    swift_release();
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
    return 0;
  }
  return v2;
}

Swift::Void __swiftcall PencilReport.copyOnWrite()()
{
  uint64_t v1 = v0;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v2 = *v0;
    type metadata accessor for HIDReport();
    char v3 = HIDReport.__allocating_init(count:)(*(void *)(v2 + 24));
    HIDReport.copy(from:)(v2);
    *uint64_t v1 = (uint64_t)v3;
    swift_release();
  }
}

uint64_t PencilReport.x.getter()
{
  return sub_1000531F0();
}

uint64_t PencilReport.x.setter(double a1)
{
  uint64_t v2 = v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v4 = *v1;
    type metadata accessor for HIDReport();
    uint64_t v5 = HIDReport.__allocating_init(count:)(*(void *)(v4 + 24));
    HIDReport.copy(from:)(v4);
    *uint64_t v2 = (uint64_t)v5;
    swift_release();
  }
  double v6 = 0.0;
  if (a1 > 0.0) {
    double v6 = a1;
  }
  sub_100053228(v6);
  double v7 = sub_100053190();
  return sub_10004F5B0(v8, v9, v10, v7, v11, v12, v13, v14);
}

uint64_t (*PencilReport.x.modify(uint64_t a1))(double *a1)
{
  sub_10005314C(a1);
  uint64_t v1 = sub_1000531F0();
  sub_10005329C(v1, v2);
  return sub_1000521AC;
}

uint64_t sub_1000521AC(double *a1)
{
  return PencilReport.x.setter(*a1);
}

uint64_t PencilReport.y.getter()
{
  return sub_1000531C8();
}

uint64_t PencilReport.y.setter(double a1)
{
  char v2 = v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v4 = *v1;
    type metadata accessor for HIDReport();
    uint64_t v5 = HIDReport.__allocating_init(count:)(*(void *)(v4 + 24));
    HIDReport.copy(from:)(v4);
    *char v2 = (uint64_t)v5;
    swift_release();
  }
  double v6 = 0.0;
  if (a1 > 0.0) {
    double v6 = a1;
  }
  sub_100053228(v6);
  double v7 = sub_1000531AC();
  return sub_10004F5B0(v8, v9, v10, v7, v11, v12, v13, v14);
}

uint64_t (*PencilReport.y.modify(uint64_t a1))(double *a1)
{
  sub_10005314C(a1);
  uint64_t v1 = sub_1000531C8();
  sub_10005329C(v1, v2);
  return sub_1000522F8;
}

uint64_t sub_1000522F8(double *a1)
{
  return PencilReport.y.setter(*a1);
}

uint64_t PencilReport.isInRange.getter()
{
  return HIDReport.getValue(_:at:bit:)(5, 0) & 1;
}

void PencilReport.isInRange.setter()
{
  PencilReport.copyOnWrite()();
  char v0 = sub_100053274();
  HIDReport.setValue(_:at:bit:)(v0, v1, 0);
}

void (*PencilReport.isInRange.modify(void *a1))(uint64_t a1, uint64_t a2)
{
  uint64_t v1 = sub_10005317C(a1);
  uint64_t v2 = HIDReport.getValue(_:at:bit:)(v1, 0);
  sub_100053218(v2);
  return sub_1000523C4;
}

void sub_1000523C4(uint64_t a1, uint64_t a2)
{
}

uint64_t PencilReport.tipSwitch.getter()
{
  return HIDReport.getValue(_:at:bit:)(5, 1uLL) & 1;
}

void PencilReport.tipSwitch.setter()
{
  PencilReport.copyOnWrite()();
  char v0 = sub_100053274();
  HIDReport.setValue(_:at:bit:)(v0, v1, 1);
}

void (*PencilReport.tipSwitch.modify(void *a1))(uint64_t a1, uint64_t a2)
{
  uint64_t v1 = sub_10005317C(a1);
  uint64_t v2 = HIDReport.getValue(_:at:bit:)(v1, 1uLL);
  sub_100053218(v2);
  return sub_100052470;
}

void sub_100052470(uint64_t a1, uint64_t a2)
{
}

uint64_t PencilReport.barrelSwitch.getter()
{
  return HIDReport.getValue(_:at:bit:)(5, 2uLL) & 1;
}

void PencilReport.barrelSwitch.setter()
{
  PencilReport.copyOnWrite()();
  char v0 = sub_100053274();
  HIDReport.setValue(_:at:bit:)(v0, v1, 2);
}

void (*PencilReport.barrelSwitch.modify(void *a1))(uint64_t a1, uint64_t a2)
{
  uint64_t v1 = sub_10005317C(a1);
  uint64_t v2 = HIDReport.getValue(_:at:bit:)(v1, 2uLL);
  sub_100053218(v2);
  return sub_10005251C;
}

void sub_10005251C(uint64_t a1, uint64_t a2)
{
}

void sub_100052524(uint64_t a1, uint64_t a2, Swift::Int a3)
{
  char v4 = *(unsigned char *)(a1 + 8);
  PencilReport.copyOnWrite()();
  HIDReport.setValue(_:at:bit:)(v4, 5, a3);
}

double PencilReport.tipPressure.getter()
{
  unsigned __int8 v0 = HIDReport.getValue(_:at:)(6);
  return sub_100049F70(v0);
}

void PencilReport.tipPressure.setter()
{
  PencilReport.copyOnWrite()();
  Swift::Int8 v0 = sub_100053258();
  HIDReport.subscript.setter(v0, 6);
}

void (*PencilReport.tipPressure.modify(uint64_t a1))()
{
  sub_10005314C(a1);
  unsigned __int8 v2 = HIDReport.getValue(_:at:)(6);
  *uint64_t v1 = sub_100049F70(v2);
  return sub_100052630;
}

void sub_100052630()
{
  PencilReport.copyOnWrite()();
  Swift::Int8 v0 = sub_100053258();
  HIDReport.subscript.setter(v0, 6);
}

double PencilReport.tiltX.getter()
{
  char v0 = HIDReport.subscript.getter(7);
  return sub_100053284(v0);
}

void PencilReport.tiltX.setter()
{
  PencilReport.copyOnWrite()();
  Swift::Int8 v0 = sub_10005315C();
  HIDReport.setValue(_:at:)(v0, 7);
}

void (*PencilReport.tiltX.modify(uint64_t a1))()
{
  sub_10005314C(a1);
  char v2 = HIDReport.subscript.getter(7);
  *uint64_t v1 = sub_100053284(v2);
  return sub_100052720;
}

void sub_100052720()
{
  PencilReport.copyOnWrite()();
  Swift::Int8 v0 = sub_10005315C();
  HIDReport.setValue(_:at:)(v0, 7);
}

double PencilReport.tiltY.getter()
{
  char v0 = HIDReport.subscript.getter(8);
  return sub_100053284(v0);
}

void PencilReport.tiltY.setter()
{
  PencilReport.copyOnWrite()();
  Swift::Int8 v0 = sub_10005315C();
  HIDReport.setValue(_:at:)(v0, 8);
}

void (*PencilReport.tiltY.modify(uint64_t a1))()
{
  sub_10005314C(a1);
  char v2 = HIDReport.subscript.getter(8);
  *uint64_t v1 = sub_100053284(v2);
  return sub_10005280C;
}

void sub_10005280C()
{
  PencilReport.copyOnWrite()();
  Swift::Int8 v0 = sub_10005315C();
  HIDReport.setValue(_:at:)(v0, 8);
}

uint64_t PencilReport.scanTime.getter()
{
  return HIDReport.getValue(_:at:)(9);
}

void PencilReport.scanTime.setter(Swift::UInt16 a1)
{
  char v2 = v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v4 = *v1;
    type metadata accessor for HIDReport();
    uint64_t v5 = HIDReport.__allocating_init(count:)(*(void *)(v4 + 24));
    HIDReport.copy(from:)(v4);
    *char v2 = (uint64_t)v5;
    swift_release();
  }
  HIDReport.setValue(_:at:)(a1, 9);
}

void (*PencilReport.scanTime.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  *(_WORD *)(a1 + 8) = HIDReport.getValue(_:at:)(9);
  return sub_100052938;
}

void sub_100052938(uint64_t a1)
{
}

unint64_t PencilReport.hostTime.getter()
{
  return HIDReport.getValue(_:at:)(0xBuLL);
}

void PencilReport.hostTime.setter(Swift::UInt64 a1)
{
}

void (*PencilReport.hostTime.modify(uint64_t a1))(Swift::UInt64 *a1)
{
  sub_10005314C(a1);
  *uint64_t v1 = HIDReport.getValue(_:at:)(0xBuLL);
  return sub_100052A04;
}

void sub_100052A04(Swift::UInt64 *a1)
{
  Swift::UInt64 v1 = *a1;
  PencilReport.copyOnWrite()();
  HIDReport.setValue(_:at:)(v1, 11);
}

double PencilReport.roll.getter(uint64_t a1)
{
  if (*(uint64_t *)(a1 + 24) >= 21)
  {
    unsigned __int16 v1 = HIDReport.getValue(_:at:)(19);
    return sub_100049F80(v1);
  }
  return result;
}

void PencilReport.roll.setter(uint64_t a1, char a2)
{
  if (*(uint64_t *)(*(void *)v2 + 24) >= 21)
  {
    PencilReport.copyOnWrite()();
    double v5 = *(double *)&a1;
    if (a2) {
      double v5 = 0.0;
    }
    Swift::UInt16 v6 = sub_10004A7B4(v5, 0, 0x168u);
    HIDReport.setValue(_:at:)(v6, 19);
  }
}

void (*PencilReport.roll.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 16) = v1;
  uint64_t v3 = *(void *)(*(void *)v1 + 24);
  double v4 = 0.0;
  if (v3 >= 21)
  {
    unsigned __int16 v5 = HIDReport.getValue(_:at:)(19);
    double v4 = sub_100049F80(v5);
  }
  *(double *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v3 < 21;
  return sub_100052B74;
}

void sub_100052B74(uint64_t a1, char a2)
{
  if (a2)
  {
    PencilReport.roll.setter(*(void *)a1, *(unsigned char *)(a1 + 8));
  }
  else if (*(uint64_t *)(**(void **)(a1 + 16) + 24) >= 21)
  {
    int v2 = *(unsigned __int8 *)(a1 + 8);
    double v3 = *(double *)a1;
    PencilReport.copyOnWrite()();
    double v4 = 0.0;
    if (!v2) {
      double v4 = v3;
    }
    Swift::UInt16 v5 = sub_10004A7B4(v4, 0, 0x168u);
    HIDReport.setValue(_:at:)(v5, 19);
  }
}

void *PencilReport.version1Report.getter(uint64_t a1)
{
  type metadata accessor for HIDReport();
  int v2 = HIDReport.__allocating_init(count:)(19);
  HIDReport.copy(from:)(a1);
  return v2;
}

unint64_t *sub_100052C38()
{
  Swift::Int8 v0 = (unint64_t *)swift_slowAlloc();
  double result = sub_100053124(v0, 0.0);
  qword_1000854B8 = (uint64_t)v0;
  return result;
}

unint64_t *static PencilReport.setInterfaceOrientation(_:)(unint64_t *result)
{
  if ((unint64_t)result - 1 <= 3)
  {
    double v2 = dbl_100066110[(void)result - 1];
    if (qword_1000852B8 != -1) {
      swift_once();
    }
    double v3 = (unint64_t *)qword_1000854B8;
    return sub_100053124(v3, v2);
  }
  return result;
}

void sub_100052CF8()
{
  if (qword_1000852A8 != -1) {
    swift_once();
  }
  HIDReport.subscript.setter(static PencilReport.reportID, 0);
  Swift::UInt64 TimeStamp = IOHIDEventGetTimeStamp();
  IOHIDEventGetDoubleValue();
  PencilReport.copyOnWrite()();
  double v2 = sub_100053190();
  sub_10004F5B0(v3, v4, v5, v2, 32767.0, v6, v7, v8);
  IOHIDEventGetDoubleValue();
  double v10 = v9;
  PencilReport.copyOnWrite()();
  double v11 = sub_1000531AC();
  sub_10004F5B0(v12, v13, v14, v11, 32767.0, v15, v16, v17);
  Swift::Bool v18 = IOHIDEventGetIntegerValue() != 0;
  PencilReport.copyOnWrite()();
  HIDReport.setValue(_:at:bit:)(v18, 5, 0);
  Swift::Bool v19 = IOHIDEventGetIntegerValue() != 0;
  PencilReport.copyOnWrite()();
  HIDReport.setValue(_:at:bit:)(v19, 5, 1);
  IOHIDEventGetDoubleValue();
  double v21 = v20 / 500.0;
  PencilReport.copyOnWrite()();
  Swift::Int8 v22 = sub_100053258();
  HIDReport.subscript.setter(v22, 6);
  HostTime.nanoseconds.getter();
  double v24 = (double)v23 * 0.00001;
  if ((~*(void *)&v24 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  if (v24 <= -9.22337204e18)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v24 < 9.22337204e18)
  {
    uint64_t v25 = (uint64_t)v24;
    PencilReport.copyOnWrite()();
    HIDReport.setValue(_:at:)(v25, 9);
    PencilReport.copyOnWrite()();
    HIDReport.setValue(_:at:)(TimeStamp, 11);
    IOHIDEventGetDoubleValue();
    double v21 = v26;
    IOHIDEventGetDoubleValue();
    double v10 = v27;
    if (qword_1000852B8 == -1) {
      goto LABEL_7;
    }
    goto LABEL_16;
  }
LABEL_15:
  __break(1u);
LABEL_16:
  swift_once();
LABEL_7:
  double v28 = v10 + sub_100053140((unint64_t *)qword_1000854B8);
  sin(v21);
  __sincos_stret(v28);
  PencilReport.copyOnWrite()();
  Swift::Int8 v29 = sub_10004ABD8();
  HIDReport.setValue(_:at:)(v29, 7);
  PencilReport.copyOnWrite()();
  uint64_t v30 = *v0;
  Swift::Int8 v31 = sub_10004ABD8();
  HIDReport.setValue(_:at:)(v31, 8);
  IOHIDEventGetDoubleValue();
  if (*(uint64_t *)(v30 + 24) > 20)
  {
    double v33 = v32 / 3.14159265;
    if (v33 >= 0.0) {
      double v34 = v33;
    }
    else {
      double v34 = v33 + 1.0;
    }
    PencilReport.copyOnWrite()();
    Swift::UInt16 v35 = sub_10004A7B4(v34, 0, 0x168u);
    HIDReport.setValue(_:at:)(v35, 19);
  }
}

void *PencilReport.init(digitizerEvent:)(void *a1)
{
  type metadata accessor for HIDReport();
  uint64_t v3 = sub_100053240();
  sub_100052CF8();

  return v3;
}

void *PencilReport.init(hidEvent:)(void *a1)
{
  type metadata accessor for HIDReport();
  char v4 = sub_100053240();
  id v2 = a1;
  if (IOHIDEventGetType() == 11)
  {
    sub_100052CF8();

    return v4;
  }
  else
  {
    swift_release();

    return 0;
  }
}

unint64_t *sub_100053124(unint64_t *result, double a2)
{
  return result;
}

ValueMetadata *type metadata accessor for PencilReport()
{
  return &type metadata for PencilReport;
}

double sub_100053140(unint64_t *a1)
{
  return COERCE_DOUBLE(atomic_load(a1));
}

uint64_t sub_10005314C(uint64_t result)
{
  *(void *)(result + 8) = v1;
  return result;
}

uint64_t sub_10005315C()
{
  return sub_10004ABD8();
}

uint64_t sub_10005317C(void *a1)
{
  *a1 = v1;
  return 5;
}

double sub_100053190()
{
  return 0.0;
}

double sub_1000531AC()
{
  return 0.0;
}

uint64_t sub_1000531C8()
{
  return sub_10004F3EC();
}

uint64_t sub_1000531F0()
{
  return sub_10004F3EC();
}

uint64_t sub_100053218(uint64_t result)
{
  *(unsigned char *)(v1 + 8) = result & 1;
  return result;
}

double sub_100053228(double result)
{
  if (result > 1.0) {
    return 1.0;
  }
  return result;
}

void *sub_100053240()
{
  return HIDReport.__allocating_init(count:)(21);
}

uint64_t sub_100053258()
{
  return sub_10004A710(v1, 0, 0xFFu);
}

uint64_t sub_100053274()
{
  return v0;
}

double sub_100053284(char a1)
{
  return sub_10004A3C0(a1, 166, 90);
}

uint64_t sub_10005329C(uint64_t result, char a2)
{
  double v4 = *(double *)&result;
  if (a2) {
    double v4 = v3;
  }
  *id v2 = v4;
  return result;
}

void sub_1000532B0()
{
  static SqueezeGestureReport.reportID = 7;
}

char *SqueezeGestureReport.reportID.unsafeMutableAddressor()
{
  if (qword_1000852C0 != -1) {
    swift_once();
  }
  return &static SqueezeGestureReport.reportID;
}

uint64_t static SqueezeGestureReport.reportID.getter()
{
  if (qword_1000852C0 != -1) {
    swift_once();
  }
  return static SqueezeGestureReport.reportID;
}

uint64_t sub_100053358()
{
  sub_100007D1C(&qword_100084120);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_100066130;
  *(void *)(v0 + 32) = 0x8501A14109FF1A06;
  if (qword_1000852C0 != -1) {
    swift_once();
  }
  *(unsigned char *)(v0 + 40) = static SqueezeGestureReport.reportID;
  *(_OWORD *)(v0 + 41) = xmmword_100066140;
  *(_OWORD *)(v0 + 57) = xmmword_100066150;
  *(_OWORD *)(v0 + 73) = xmmword_100066160;
  *(_OWORD *)(v0 + 89) = xmmword_100066170;
  *(void *)(v0 + 105) = 0x2811495087500FFLL;
  *(_WORD *)(v0 + 113) = -16192;
  uint64_t result = sub_100047B04(v0);
  static SqueezeGestureReport.reportDescriptor = result;
  *(void *)algn_100089068 = v2;
  return result;
}

uint64_t *SqueezeGestureReport.reportDescriptor.unsafeMutableAddressor()
{
  if (qword_1000852C8 != -1) {
    swift_once();
  }
  return &static SqueezeGestureReport.reportDescriptor;
}

uint64_t static SqueezeGestureReport.reportDescriptor.getter()
{
  if (qword_1000852C8 != -1) {
    swift_once();
  }
  uint64_t v0 = static SqueezeGestureReport.reportDescriptor;
  sub_100008D64(static SqueezeGestureReport.reportDescriptor, *(unint64_t *)algn_100089068);
  return v0;
}

void *SqueezeGestureReport.init()()
{
  type metadata accessor for HIDReport();
  uint64_t v0 = HIDReport.__allocating_init(count:)(32);
  uint64_t v1 = qword_1000852C0;
  swift_retain();
  if (v1 != -1) {
    swift_once();
  }
  HIDReport.subscript.setter(static SqueezeGestureReport.reportID, 0);
  swift_release();
  return v0;
}

void *SqueezeGestureReport.init(_:)(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = sub_10005E650();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  double v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for HIDReport();
  double v8 = HIDReport.__allocating_init(count:)(32);
  swift_retain();
  char v9 = sub_10005E660();
  if (qword_1000852C0 != -1) {
    swift_once();
  }
  if (static SqueezeGestureReport.reportID == v9 && sub_10005E620() >= v8[3])
  {
    swift_release();
    sub_100008D64(a1, a2);
    sub_10005E5A0();
    sub_100008D0C(a1, a2);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_100008D0C(a1, a2);
  }
  else
  {
    sub_100008D0C(a1, a2);
    swift_release();
    swift_release();
    return 0;
  }
  return v8;
}

void *SqueezeGestureReport.init(report:)(uint64_t a1)
{
  type metadata accessor for HIDReport();
  uint64_t v2 = HIDReport.__allocating_init(count:)(32);
  char v3 = HIDReport.subscript.getter(0);
  uint64_t v4 = qword_1000852C0;
  swift_retain();
  if (v4 != -1) {
    swift_once();
  }
  if (static SqueezeGestureReport.reportID == v3 && (uint64_t v5 = v2[3], *(void *)(a1 + 24) >= v5))
  {
    uint64_t v6 = (unsigned char *)v2[2];
    swift_release();
    sub_1000515EC((uint64_t)&v8, v6, v5);
    swift_release();
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
    return 0;
  }
  return v2;
}

uint64_t SqueezeGestureReport.phase.getter()
{
  Swift::UInt16 v0 = sub_10004F1B4();
  LOBYTE(result) = HIDEvent.Phase.init(rawValue:)(v0);
  if (result == 6) {
    return 0;
  }
  else {
    return result;
  }
}

uint64_t SqueezeGestureReport.phase.setter(char a1)
{
  return sub_10004F544(word_100066208[a1], 1);
}

uint64_t (*SqueezeGestureReport.phase.modify(uint64_t a1, uint64_t a2))(uint64_t a1)
{
  *(void *)a1 = a2;
  Swift::UInt16 v3 = sub_10004F1B4();
  v4.SidecarHID::HIDEvent::Phase value = HIDEvent.Phase.init(rawValue:)(v3).value;
  if (v4.value == SidecarHID_HIDEvent_Phase_unknownDefault) {
    SidecarHID::HIDEvent::Phase value = SidecarHID_HIDEvent_Phase_none;
  }
  else {
    SidecarHID::HIDEvent::Phase value = v4.value;
  }
  *(unsigned char *)(a1 + 8) = value;
  return sub_10005390C;
}

uint64_t sub_10005390C(uint64_t a1)
{
  return sub_10004F544(word_100066208[*(char *)(a1 + 8)], 1);
}

uint64_t SqueezeGestureReport.hostTime.getter()
{
  return sub_10004F29C(2);
}

void SqueezeGestureReport.hostTime.setter(Swift::UInt64 a1)
{
}

void (*SqueezeGestureReport.hostTime.modify(uint64_t a1, uint64_t a2))(Swift::UInt64 *a1)
{
  sub_100054138(a1, a2);
  *uint64_t v2 = sub_10004F29C(2);
  return sub_1000539E0;
}

void sub_1000539E0(Swift::UInt64 *a1)
{
}

uint64_t SqueezeGestureReport.stage.getter()
{
  return _s10SidecarHID9HIDReportCys5UInt8VSicig_0(10);
}

void SqueezeGestureReport.stage.setter(Swift::Int8 a1)
{
}

void (*SqueezeGestureReport.stage.modify(uint64_t a1, uint64_t a2))(uint64_t a1)
{
  *(void *)a1 = a2;
  *(unsigned char *)(a1 + 8) = _s10SidecarHID9HIDReportCys5UInt8VSicig_0(10);
  return sub_100053AA8;
}

void sub_100053AA8(uint64_t a1)
{
}

uint64_t SqueezeGestureReport.transition.getter()
{
  return _s10SidecarHID9HIDReportCys5UInt8VSicig_0(11);
}

void SqueezeGestureReport.transition.setter(Swift::Int8 a1)
{
}

void (*SqueezeGestureReport.transition.modify(uint64_t a1, uint64_t a2))(uint64_t a1)
{
  *(void *)a1 = a2;
  *(unsigned char *)(a1 + 8) = _s10SidecarHID9HIDReportCys5UInt8VSicig_0(11);
  return sub_100053B74;
}

void sub_100053B74(uint64_t a1)
{
}

void SqueezeGestureReport.nextThreshold.getter()
{
  sub_100054100();
  uint64_t v0 = sub_10004F4E4();
  sub_1000540B8(v0, v1);
}

uint64_t SqueezeGestureReport.nextThreshold.setter()
{
  sub_100051930();
  if (!(!v3 & v2)) {
    double v0 = v1;
  }
  double v4 = sub_100051764(v0);
  return sub_100054144(v5, v4, 4294967300.0);
}

uint64_t (*SqueezeGestureReport.nextThreshold.modify(uint64_t a1, uint64_t a2))(uint64_t a1)
{
  sub_100054138(a1, a2);
  sub_100054100();
  uint64_t v2 = sub_10004F4E4();
  sub_10005329C(v2, v3);
  return sub_100053C70;
}

uint64_t sub_100053C70(uint64_t a1)
{
  double v1 = sub_1000540A4(a1);
  if (!(!v4 & v3)) {
    double v1 = v2;
  }
  double v5 = sub_100051764(v1);
  return sub_100054144(v6, v5, 4294967300.0);
}

void SqueezeGestureReport.pressedThreshold.getter()
{
  sub_10005411C();
  uint64_t v0 = sub_10004F4E4();
  sub_1000540B8(v0, v1);
}

uint64_t SqueezeGestureReport.pressedThreshold.setter()
{
  sub_100051930();
  if (!(!v3 & v2)) {
    double v0 = v1;
  }
  double v4 = sub_100051764(v0);
  return sub_1000541BC(v5, v4, 4294967300.0);
}

uint64_t (*SqueezeGestureReport.pressedThreshold.modify(uint64_t a1, uint64_t a2))(uint64_t a1)
{
  sub_100054138(a1, a2);
  sub_10005411C();
  uint64_t v2 = sub_10004F4E4();
  sub_10005329C(v2, v3);
  return sub_100053D74;
}

uint64_t sub_100053D74(uint64_t a1)
{
  double v1 = sub_1000540A4(a1);
  if (!(!v4 & v3)) {
    double v1 = v2;
  }
  double v5 = sub_100051764(v1);
  return sub_1000541BC(v6, v5, 4294967300.0);
}

void SqueezeGestureReport.releasedThreshold.getter()
{
  sub_1000540E4();
  uint64_t v0 = sub_10004F4E4();
  sub_1000540B8(v0, v1);
}

uint64_t SqueezeGestureReport.releasedThreshold.setter()
{
  sub_100051930();
  if (!(!v3 & v2)) {
    double v0 = v1;
  }
  double v4 = sub_100051764(v0);
  return sub_100054194(v5, v4, 4294967300.0);
}

uint64_t (*SqueezeGestureReport.releasedThreshold.modify(uint64_t a1, uint64_t a2))(uint64_t a1)
{
  sub_100054138(a1, a2);
  sub_1000540E4();
  uint64_t v2 = sub_10004F4E4();
  sub_10005329C(v2, v3);
  return sub_100053E78;
}

uint64_t sub_100053E78(uint64_t a1)
{
  double v1 = sub_1000540A4(a1);
  if (!(!v4 & v3)) {
    double v1 = v2;
  }
  double v5 = sub_100051764(v1);
  return sub_100054194(v6, v5, 4294967300.0);
}

void SqueezeGestureReport.normalizedForce.getter()
{
  sub_1000540C8();
  uint64_t v0 = sub_10004F4E4();
  sub_1000540B8(v0, v1);
}

uint64_t SqueezeGestureReport.normalizedForce.setter()
{
  sub_100051930();
  if (!(!v3 & v2)) {
    double v0 = v1;
  }
  double v4 = sub_100051764(v0);
  return sub_10005416C(v5, v4, 4294967300.0);
}

uint64_t (*SqueezeGestureReport.normalizedForce.modify(uint64_t a1, uint64_t a2))(uint64_t a1)
{
  sub_100054138(a1, a2);
  sub_1000540C8();
  uint64_t v2 = sub_10004F4E4();
  sub_10005329C(v2, v3);
  return sub_100053F7C;
}

uint64_t sub_100053F7C(uint64_t a1)
{
  double v1 = sub_1000540A4(a1);
  if (!(!v4 & v3)) {
    double v1 = v2;
  }
  double v5 = sub_100051764(v1);
  return sub_10005416C(v6, v5, 4294967300.0);
}

double SqueezeGestureReport.normalizedForceVelocity.getter()
{
  int v0 = sub_10004F37C();
  return HIDFixed.doubleValue.getter(v0);
}

uint64_t SqueezeGestureReport.normalizedForceVelocity.setter(Swift::Double a1)
{
  *(SidecarHID::HIDFixed_optional *)&uint64_t result = HIDFixed.init(doubleValue:)(a1);
  if ((result & 0x100000000) == 0) {
    return sub_10004F564();
  }
  return result;
}

uint64_t (*SqueezeGestureReport.normalizedForceVelocity.modify(uint64_t a1, uint64_t a2))(Swift::Double *a1)
{
  sub_100054138(a1, a2);
  int v3 = sub_10004F37C();
  *double v2 = HIDFixed.doubleValue.getter(v3);
  return sub_10005405C;
}

uint64_t sub_10005405C(Swift::Double *a1)
{
  *(SidecarHID::HIDFixed_optional *)&uint64_t result = HIDFixed.init(doubleValue:)(*a1);
  if ((result & 0x100000000) == 0) {
    return sub_10004F564();
  }
  return result;
}

ValueMetadata *type metadata accessor for SqueezeGestureReport()
{
  return &type metadata for SqueezeGestureReport;
}

double sub_1000540A4(uint64_t a1)
{
  return *(double *)a1;
}

double sub_1000540B8(uint64_t a1, char a2)
{
  double result = *(double *)&a1;
  if (a2) {
    return v2;
  }
  return result;
}

uint64_t sub_1000540C8()
{
  return 24;
}

uint64_t sub_1000540E4()
{
  return 20;
}

uint64_t sub_100054100()
{
  return 12;
}

uint64_t sub_10005411C()
{
  return 16;
}

uint64_t sub_100054138(uint64_t result, uint64_t a2)
{
  *(void *)(result + 8) = a2;
  return result;
}

uint64_t sub_100054144(uint64_t a1, double a2, Swift::Double a3)
{
  return sub_10004F710(a1, 0, 12, 0.0, a3, 0.0, 1.0, 0.0);
}

uint64_t sub_10005416C(uint64_t a1, double a2, Swift::Double a3)
{
  return sub_10004F710(a1, 0, 24, 0.0, a3, 0.0, 1.0, 0.0);
}

uint64_t sub_100054194(uint64_t a1, double a2, Swift::Double a3)
{
  return sub_10004F710(a1, 0, 20, 0.0, a3, 0.0, 1.0, 0.0);
}

uint64_t sub_1000541BC(uint64_t a1, double a2, Swift::Double a3)
{
  return sub_10004F710(a1, 0, 16, 0.0, a3, 0.0, 1.0, 0.0);
}

uint64_t sub_1000541E4()
{
  sub_100054654();
  uint64_t result = sub_10005EDE0();
  qword_1000854C0 = result;
  return result;
}

uint64_t sub_10005423C()
{
  uint64_t v0 = sub_10005E750();
  sub_10002A4B4(v0, qword_1000854C8);
  sub_10002A1FC(v0, (uint64_t)qword_1000854C8);
  if (qword_1000852D0 != -1) {
    swift_once();
  }
  id v1 = (id)qword_1000854C0;
  return sub_10005E760();
}

void sub_1000542C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (qword_1000852D0 != -1) {
    swift_once();
  }
  uint64_t v6 = qword_1000854C0;
  os_log_type_t v7 = sub_10005EC30();
  if (os_log_type_enabled(v6, v7) && sub_10003D1F8())
  {
    uint64_t v8 = sub_100057C20(a1, a2, a3);
    unint64_t v10 = v9;
    if (qword_1000852D8 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_10005E750();
    sub_10002A1FC(v11, (uint64_t)qword_1000854C8);
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_10005E720();
    os_log_type_t v13 = sub_10005EC30();
    if (os_log_type_enabled(v12, v13))
    {
      swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      sub_1000546DC(4.8751e-34);
      sub_10000F098((uint64_t)v8, v10, &v16);
      sub_100054694();
      swift_bridgeObjectRelease_n();
      sub_1000546BC((void *)&_mh_execute_header, v14, v15, "%{public}s");
      swift_arrayDestroy();
      sub_10000FB20();
      sub_10000FB20();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
}

void SidecarHIDDebugLog(_:)(uint64_t (*a1)(void))
{
  if (qword_1000852D0 != -1) {
    swift_once();
  }
  double v2 = qword_1000854C0;
  os_log_type_t v3 = sub_10005EC30();
  if (os_log_type_enabled(v2, v3) && sub_10003D1F8())
  {
    uint64_t v4 = a1();
    unint64_t v6 = v5;
    if (qword_1000852D8 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_10005E750();
    sub_10002A1FC(v7, (uint64_t)qword_1000854C8);
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_10005E720();
    os_log_type_t v9 = sub_10005EC30();
    if (os_log_type_enabled(v8, v9))
    {
      swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      sub_1000546DC(4.8751e-34);
      sub_10000F098(v4, v6, &v12);
      sub_100054694();
      swift_bridgeObjectRelease_n();
      sub_1000546BC((void *)&_mh_execute_header, v10, v11, "%{public}s");
      swift_arrayDestroy();
      sub_10000FB20();
      sub_10000FB20();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
}

unint64_t sub_100054654()
{
  unint64_t result = qword_1000854E0;
  if (!qword_1000854E0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1000854E0);
  }
  return result;
}

uint64_t sub_100054694()
{
  return sub_10005EE10();
}

void sub_1000546BC(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

uint64_t sub_1000546DC(float a1)
{
  *id v1 = a1;
  return swift_bridgeObjectRetain();
}

void sub_1000546FC()
{
  static TouchReport.reportID = 5;
}

char *TouchReport.reportID.unsafeMutableAddressor()
{
  if (qword_1000852E0 != -1) {
    swift_once();
  }
  return &static TouchReport.reportID;
}

uint64_t static TouchReport.reportID.getter()
{
  if (qword_1000852E0 != -1) {
    swift_once();
  }
  return static TouchReport.reportID;
}

uint64_t sub_1000547A4()
{
  sub_100007D1C(&qword_100084120);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_100066220;
  *(_DWORD *)(v0 + 32) = 67702021;
  *(_WORD *)(v0 + 36) = 417;
  *(unsigned char *)(v0 + 38) = -123;
  if (qword_1000852E0 != -1) {
    swift_once();
  }
  *(unsigned char *)(v0 + 39) = static TouchReport.reportID;
  *(_OWORD *)(v0 + 40) = xmmword_100066230;
  *(_OWORD *)(v0 + 56) = xmmword_100066240;
  *(_OWORD *)(v0 + 72) = xmmword_100066250;
  *(_OWORD *)(v0 + 88) = xmmword_100066260;
  *(_OWORD *)(v0 + 104) = xmmword_100066270;
  *(_OWORD *)(v0 + 120) = xmmword_100066280;
  *(_OWORD *)(v0 + 136) = xmmword_100066290;
  *(_OWORD *)(v0 + 152) = xmmword_1000662A0;
  *(_OWORD *)(v0 + 168) = xmmword_1000662B0;
  *(void *)(v0 + 184) = 0x7500FF2600151109;
  *(_DWORD *)(v0 + 192) = -2126539512;
  *(_WORD *)(v0 + 196) = -16350;
  uint64_t result = sub_100047B04(v0);
  static TouchReport.reportDescriptor = result;
  unk_100089080 = v2;
  return result;
}

uint64_t *TouchReport.reportDescriptor.unsafeMutableAddressor()
{
  if (qword_1000852E8 != -1) {
    swift_once();
  }
  return &static TouchReport.reportDescriptor;
}

uint64_t static TouchReport.reportDescriptor.getter()
{
  if (qword_1000852E8 != -1) {
    swift_once();
  }
  uint64_t v0 = static TouchReport.reportDescriptor;
  sub_100008D64(static TouchReport.reportDescriptor, unk_100089080);
  return v0;
}

void *TouchReport.init()()
{
  type metadata accessor for HIDReport();
  uint64_t v0 = HIDReport.__allocating_init(count:)(23);
  uint64_t v1 = qword_1000852E0;
  swift_retain();
  if (v1 != -1) {
    swift_once();
  }
  HIDReport.subscript.setter(static TouchReport.reportID, 0);
  swift_release();
  return v0;
}

void *TouchReport.init(_:)(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = sub_10005E650();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for HIDReport();
  uint64_t v8 = HIDReport.__allocating_init(count:)(23);
  swift_retain();
  char v9 = sub_10005E660();
  if (qword_1000852E0 != -1) {
    swift_once();
  }
  if (static TouchReport.reportID == v9 && sub_10005E620() >= v8[3])
  {
    swift_release();
    sub_100008D64(a1, a2);
    sub_10005E5A0();
    sub_100008D0C(a1, a2);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_100008D0C(a1, a2);
  }
  else
  {
    sub_100008D0C(a1, a2);
    swift_release();
    swift_release();
    return 0;
  }
  return v8;
}

void *TouchReport.init(report:)(uint64_t a1)
{
  type metadata accessor for HIDReport();
  uint64_t v2 = HIDReport.__allocating_init(count:)(23);
  char v3 = HIDReport.subscript.getter(0);
  uint64_t v4 = qword_1000852E0;
  swift_retain();
  if (v4 != -1) {
    swift_once();
  }
  if (static TouchReport.reportID == v3 && (uint64_t v5 = v2[3], *(void *)(a1 + 24) >= v5))
  {
    uint64_t v6 = (unsigned char *)v2[2];
    swift_release();
    sub_1000515EC((uint64_t)&v8, v6, v5);
    swift_release();
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
    return 0;
  }
  return v2;
}

uint64_t TouchReport.Contact._offset.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t TouchReport.Contact.mutable.getter(uint64_t a1, unsigned int a2)
{
  return (a2 >> 8) & 1;
}

void *TouchReport.Contact.reportSize.unsafeMutableAddressor()
{
  return &static TouchReport.Contact.reportSize;
}

uint64_t static TouchReport.Contact.reportSize.getter()
{
  return 5;
}

uint64_t TouchReport.Contact.offset.getter(uint64_t a1, unsigned __int8 a2)
{
  return a2;
}

uint64_t TouchReport.Contact.init(report:offset:mutable:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = 5 * a2;
  if ((unsigned __int128)(a2 * (__int128)5) >> 64 != (5 * a2) >> 63)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v2 <= -2)
  {
LABEL_6:
    sub_10000C25C();
    sub_1000558E0();
LABEL_8:
    uint64_t result = sub_100055948();
    __break(1u);
    return result;
  }
  if ((unint64_t)(v2 + 1) >= 0x100)
  {
    sub_10000C25C();
    sub_1000558D0();
    goto LABEL_8;
  }
  return result;
}

Swift::Void __swiftcall TouchReport.Contact.copyOnWrite()()
{
  if ((*(unsigned char *)(v0 + 9) & 1) == 0)
  {
    uint64_t v1 = (void *)v0;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v2 = *(void *)v0;
      type metadata accessor for HIDReport();
      char v3 = HIDReport.__allocating_init(count:)(*(void *)(v2 + 24));
      HIDReport.copy(from:)(v2);
      *uint64_t v1 = v3;
      swift_release();
    }
  }
}

uint64_t TouchReport.Contact.x.getter()
{
  uint64_t result = sub_100055890();
  if (v1) {
    __break(1u);
  }
  return result;
}

uint64_t TouchReport.Contact.x.setter(double a1)
{
  TouchReport.Contact.copyOnWrite()();
  double v2 = 0.0;
  if (a1 > 0.0) {
    double v2 = a1;
  }
  double v3 = sub_1000558F0(v2);
  return sub_100055924(v4, v3, 32767.0, v5, v6);
}

uint64_t (*TouchReport.Contact.x.modify(uint64_t (**a1)(double *a1)))(double *a1)
{
  a1[1] = v1;
  uint64_t result = (uint64_t (*)(double *))sub_100055890();
  if (v4)
  {
    __break(1u);
  }
  else
  {
    *a1 = result;
    return sub_100054F34;
  }
  return result;
}

uint64_t sub_100054F34(double *a1)
{
  return TouchReport.Contact.x.setter(*a1);
}

uint64_t TouchReport.Contact.y.getter()
{
  uint64_t result = sub_100055890();
  if (v1) {
    __break(1u);
  }
  return result;
}

uint64_t TouchReport.Contact.y.setter(double a1)
{
  TouchReport.Contact.copyOnWrite()();
  double v2 = 0.0;
  if (a1 > 0.0) {
    double v2 = a1;
  }
  double v3 = sub_1000558F0(v2);
  return sub_100055924(v4, v3, 32767.0, v5, v6);
}

uint64_t (*TouchReport.Contact.y.modify(uint64_t (**a1)(double *a1)))(double *a1)
{
  a1[1] = v1;
  uint64_t result = (uint64_t (*)(double *))sub_100055890();
  if (v4)
  {
    __break(1u);
  }
  else
  {
    *a1 = result;
    return sub_100055050;
  }
  return result;
}

uint64_t sub_100055050(double *a1)
{
  return TouchReport.Contact.y.setter(*a1);
}

uint64_t TouchReport.Contact.index.getter(uint64_t a1, unsigned __int8 a2)
{
  return _s10SidecarHID9HIDReportCys5UInt8VSicig_0(a2) & 0x1F;
}

void TouchReport.Contact.index.setter(char a1)
{
  TouchReport.Contact.copyOnWrite()();
  char v3 = sub_1000558B0();
  HIDReport.setValue(_:at:)(v3 & 0xE0 | a1 & 0x1F, v1);
}

void (*TouchReport.Contact.index.modify(uint64_t *a1))(void *a1)
{
  a1[1] = v1;
  *a1 = sub_100055908() & 0x1F;
  return sub_10005512C;
}

void sub_10005512C(void *a1)
{
}

uint64_t TouchReport.Contact.isInRange.getter(uint64_t a1, unsigned __int8 a2)
{
  return (_s10SidecarHID9HIDReportCys5UInt8VSicig_0(a2) >> 7) & 1;
}

void TouchReport.Contact.isInRange.setter(char a1)
{
  TouchReport.Contact.copyOnWrite()();
  char v3 = sub_1000558B0();
  if (a1) {
    char v4 = 0x80;
  }
  else {
    char v4 = 0;
  }
  HIDReport.setValue(_:at:)(v4 & 0x80 | v3 & 0x7F, v1);
}

void (*TouchReport.Contact.isInRange.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = (sub_100055908() & 0x80) != 0;
  return sub_100055214;
}

void sub_100055214(uint64_t a1)
{
}

uint64_t TouchReport.Contact.isTouching.getter(uint64_t a1, unsigned __int8 a2)
{
  return (_s10SidecarHID9HIDReportCys5UInt8VSicig_0(a2) >> 6) & 1;
}

void TouchReport.Contact.isTouching.setter(char a1)
{
  TouchReport.Contact.copyOnWrite()();
  char v3 = sub_1000558B0();
  if (a1) {
    char v4 = 64;
  }
  else {
    char v4 = 0;
  }
  HIDReport.setValue(_:at:)(v3 & 0xBF | v4, v1);
}

void (*TouchReport.Contact.isTouching.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = (sub_100055908() & 0x40) != 0;
  return sub_100055300;
}

void sub_100055300(uint64_t a1)
{
}

uint64_t TouchReport.mutableContact(at:)()
{
  sub_100055960();
  if (!v1)
  {
    __break(1u);
LABEL_6:
    sub_10000C25C();
    sub_1000558E0();
    goto LABEL_8;
  }
  if (v0 <= -2) {
    goto LABEL_6;
  }
  if ((unint64_t)(v0 + 1) < 0x100) {
    return swift_retain();
  }
  sub_10000C25C();
  sub_1000558D0();
LABEL_8:
  uint64_t result = sub_100055948();
  __break(1u);
  return result;
}

uint64_t TouchReport.contact(at:)()
{
  sub_100055960();
  if (!v1)
  {
    __break(1u);
LABEL_6:
    sub_10000C25C();
    sub_1000558E0();
    goto LABEL_8;
  }
  if (v0 <= -2) {
    goto LABEL_6;
  }
  if ((unint64_t)(v0 + 1) < 0x100) {
    return swift_retain();
  }
  sub_10000C25C();
  sub_1000558D0();
LABEL_8:
  uint64_t result = sub_100055948();
  __break(1u);
  return result;
}

uint64_t TouchReport.contacts.getter(uint64_t a1)
{
  sub_100007D1C(&qword_1000854E8);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1000643A0;
  *(void *)(v2 + 32) = a1;
  *(_WORD *)(v2 + 40) = 1;
  *(void *)(v2 + 48) = a1;
  *(_WORD *)(v2 + 56) = 6;
  swift_retain_n();
  return v2;
}

uint64_t TouchReport.contactCount.getter()
{
  return _s10SidecarHID9HIDReportCys5UInt8VSicig_0(11);
}

void TouchReport.contactCount.setter(unint64_t a1)
{
  if ((a1 & 0x8000000000000000) != 0)
  {
    sub_10000C25C();
    sub_1000558E0();
  }
  else
  {
    if (a1 < 0x100)
    {
      HIDReport.setValue(_:at:)(a1, 11);
      return;
    }
    sub_10000C25C();
    sub_1000558D0();
  }
  sub_100055948();
  __break(1u);
}

void (*TouchReport.contactCount.modify(void *a1, uint64_t a2))(unint64_t *a1)
{
  a1[1] = a2;
  *a1 = _s10SidecarHID9HIDReportCys5UInt8VSicig_0(11);
  return sub_1000555F4;
}

void sub_1000555F4(unint64_t *a1)
{
}

uint64_t TouchReport.scanTime.setter(uint64_t a1)
{
  return sub_10004F544(a1, 13);
}

uint64_t (*TouchReport.scanTime.modify(uint64_t a1, uint64_t a2))(uint64_t a1)
{
  *(void *)a1 = a2;
  *(_WORD *)(a1 + 8) = sub_10004F1B4();
  return sub_100055674;
}

uint64_t sub_100055674(uint64_t a1)
{
  return sub_10004F544(*(unsigned __int16 *)(a1 + 8), 13);
}

uint64_t sub_1000556A0()
{
  return TouchReport.Contact.index.getter(*(void *)v0, *(unsigned char *)(v0 + 8));
}

uint64_t sub_1000556C0()
{
  return TouchReport.Contact.isTouching.getter(*(void *)v0, *(unsigned char *)(v0 + 8));
}

uint64_t sub_1000556E0()
{
  return TouchReport.Contact.isInRange.getter(*(void *)v0, *(unsigned char *)(v0 + 8));
}

ValueMetadata *type metadata accessor for TouchReport()
{
  return &type metadata for TouchReport;
}

uint64_t sub_100055714(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for TouchReport.Contact(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  return a1;
}

uint64_t initializeWithTake for TouchReport.Contact(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(_WORD *)(result + 8) = *((_WORD *)a2 + 4);
  *(void *)uint64_t result = v2;
  return result;
}

uint64_t assignWithTake for TouchReport.Contact(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  return a1;
}

uint64_t getEnumTagSinglePayload for TouchReport.Contact(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 10))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TouchReport.Contact(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_WORD *)(result + 8) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 10) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 10) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TouchReport.Contact()
{
  return &type metadata for TouchReport.Contact;
}

uint64_t sub_100055890()
{
  return sub_10004F3EC();
}

uint64_t sub_1000558B0()
{
  uint64_t v2 = *(unsigned __int8 *)(v0 + 8);
  return _s10SidecarHID9HIDReportCys5UInt8VSicig_0(v2);
}

double sub_1000558F0(double result)
{
  if (result > 1.0) {
    return 1.0;
  }
  return result;
}

uint64_t sub_100055908()
{
  uint64_t v2 = *(unsigned __int8 *)(v0 + 8);
  return _s10SidecarHID9HIDReportCys5UInt8VSicig_0(v2);
}

uint64_t sub_100055924(uint64_t a1, double a2, Swift::Double a3, uint64_t a4, uint64_t a5)
{
  return sub_10004F5B0(a1, 0, a5, 0.0, a3, 0.0, 1.0, 0.0);
}

uint64_t sub_100055948()
{
  return sub_10005F040();
}

BOOL sub_100055974(char a1, char a2)
{
  return word_1000665B2[a1] == word_1000665B2[a2];
}

Swift::Int sub_100055998(char a1)
{
  return sub_10005F200();
}

void sub_1000559EC(uint64_t a1, char a2)
{
}

Swift::Int sub_100055A20(uint64_t a1, char a2)
{
  return sub_10005F200();
}

void sub_100055A70(uint64_t a1)
{
  sub_1000567F4(*v1 | a1);
}

void sub_100055A7C(uint64_t a1)
{
  sub_1000567F4(*v1 & a1);
}

void sub_100055A88(uint64_t a1)
{
  sub_1000567F4(*v1 ^ a1);
}

void sub_100055A94(uint64_t a1)
{
  sub_1000567F4(*v1 & ~a1);
}

uint64_t sub_100055AA0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = VideoStream.qosMonitorServerDidDie(_:)(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_100055ACC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = variable initialization expression of Clock.heartbeatTimer();
  *a1 = result;
  return result;
}

uint64_t sub_100055AF4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_10001A970(*a1, *v2);
  *a2 = result;
  return result;
}

void sub_100055B24(uint64_t *a1)
{
}

void sub_100055B2C(uint64_t *a1)
{
}

void sub_100055B34(uint64_t *a1)
{
}

void sub_100055B3C(uint64_t *a1)
{
}

uint64_t sub_100055B44@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = VideoStream.qosMonitorServerDidDie(_:)(*a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

uint64_t TouchTracker.__allocating_init()()
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  return result;
}

uint64_t TouchTracker.init()()
{
  uint64_t result = v0;
  *(void *)(v0 + 16) = 0;
  *(void *)(v0 + 24) = 0;
  return result;
}

uint64_t TouchTracker.track<A>(_:where:)(Swift::Int a1, uint64_t (*a2)(char *), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v37 = a2;
  uint64_t v38 = a3;
  uint64_t v9 = *(void *)(a4 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(a1);
  uint64_t v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v36 - v13;
  uint64_t v16 = *(void *)(v5 + 16);
  uint64_t v15 = *(void *)(v5 + 24);
  uint64_t v45 = v5;
  uint64_t v39 = v16 & v15;
  uint64_t v48 = v16 & v15;
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_10005EAD0();
  Swift::Int v47 = v17;
  if (v17 == sub_10005EB40())
  {
LABEL_2:
    uint64_t v18 = swift_bridgeObjectRelease();
    *(void *)(v45 + 24) = v39;
    Swift::Int v47 = a1;
    __chkstk_darwin(v18);
    *(&v36 - 4) = a4;
    *(&v36 - 3) = a5;
    *(&v36 - 2) = (uint64_t)&v48;
    sub_10005EB60();
    swift_bridgeObjectRetain();
    swift_getWitnessTable();
    return sub_10005EF90();
  }
  uint64_t v36 = v10;
  Class v42 = *(void (**)(uint64_t, uint64_t))(a5 + 8);
  uint64_t v43 = a5 + 8;
  char v40 = *(uint64_t (**)(uint64_t, uint64_t))(a5 + 24);
  uint64_t v41 = a5 + 24;
  uint64_t v44 = (void (**)(char *, uint64_t *, uint64_t))(v9 + 16);
  while (1)
  {
    BOOL v20 = sub_10005EB20();
    sub_10005EAF0();
    if (!v20) {
      break;
    }
    (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v14, a1+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * v17, a4);
LABEL_6:
    swift_bridgeObjectRetain();
    sub_10005EB50(&v47);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v14, a4);
    v42(a4, a5);
    if (v40(a4, a5))
    {
      sub_1000567FC();
      if (!v23 & v22) {
        uint64_t v24 = 0;
      }
      else {
        uint64_t v24 = v21;
      }
      uint64_t v25 = *(void *)(v45 + 16);
      if ((v24 & ~v25) != 0)
      {
        *(void *)(v45 + 16) = v25 | v24;
        char v32 = v37(v11);
        uint64_t v33 = sub_1000567DC();
        v34(v33);
        if (v32)
        {
          uint64_t v35 = v39;
          if ((v39 & v24) != v24)
          {
            v39 |= v24;
            uint64_t v48 = v35 | v24;
          }
        }
      }
      else
      {
        uint64_t v26 = sub_1000567DC();
        v27(v26);
      }
    }
    else
    {
      uint64_t v28 = sub_1000567DC();
      v29(v28);
      sub_1000567FC();
      if (!v23 & v22) {
        uint64_t v30 = 0;
      }
      uint64_t v31 = *(void *)(v45 + 16);
      if ((v31 & v30) != 0) {
        *(void *)(v45 + 16) = v31 & ~v30;
      }
    }
    uint64_t v17 = v47;
    if (v17 == sub_10005EB40()) {
      goto LABEL_2;
    }
  }
  uint64_t result = sub_10005EF60();
  if (v36 == 8)
  {
    uint64_t v46 = result;
    (*v44)(v14, &v46, a4);
    swift_unknownObjectRelease();
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

BOOL sub_100055F70(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = *a2;
  unint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 8))(a3, a4);
  uint64_t v6 = 1 << v5;
  if (v5 >= 0x40) {
    uint64_t v6 = 0;
  }
  if (v5 > 0x40) {
    uint64_t v6 = 0;
  }
  return (v6 & ~v4) == 0;
}

uint64_t TouchTracker.deinit()
{
  return v0;
}

uint64_t TouchTracker.__deallocating_deinit()
{
  return _swift_deallocClassInstance(v0, 32, 7);
}

uint64_t TouchTrackerLog.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  TouchTrackerLog.init()();
  return v0;
}

uint64_t TouchTrackerLog.init()()
{
  *(void *)(v0 + 16) = _swiftEmptyArrayStorage;
  type metadata accessor for TouchTracker();
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0;
  *(void *)(v0 + 24) = v1;
  return v0;
}

uint64_t TouchTrackerLog.track<A>(_:timestamp:where:)(Swift::Int a1, uint64_t a2, uint64_t (*a3)(char *), uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v13 = (char **)(v6 + 16);
  swift_beginAccess();
  uint64_t v14 = *(void **)(v6 + 16);
  if (v14[2])
  {
    uint64_t v15 = v14[4];
    uint64_t v16 = v14[5];
  }
  else
  {
    uint64_t v16 = 0;
    uint64_t v15 = 0;
  }
  uint64_t v17 = *(void *)(v6 + 24);
  uint64_t v18 = TouchTracker.track<A>(_:where:)(a1, a3, a4, a5, a6);
  uint64_t v19 = *(void *)(v17 + 24);
  if ((v16 & ~v19) != 0 || !*((void *)*v13 + 2))
  {
    sub_100056810();
    sub_1000563D0(0, 0, a2, v19);
  }
  else
  {
    sub_100056810();
    BOOL v20 = *v13;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v13 = v20;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      goto LABEL_12;
    }
    while (!*((void *)v20 + 2))
    {
      __break(1u);
LABEL_12:
      BOOL v20 = sub_1000565C4((uint64_t)v20);
      *uint64_t v13 = v20;
    }
    *((void *)v20 + 4) = v15;
    *((void *)v20 + 5) = v19;
  }
  swift_endAccess();
  return v18;
}

Swift::Bool __swiftcall TouchTrackerLog.find(index:timestamp:)(Swift::Int index, Swift::UInt64 timestamp)
{
  Swift::Bool result = swift_beginAccess();
  uint64_t v6 = *(int64_t **)(v2 + 16);
  int64_t v7 = v6[2];
  if (!v7) {
    return 0;
  }
  if (v6[4] <= timestamp)
  {
    unint64_t i = 0;
    goto LABEL_10;
  }
  if (v7 == 1) {
    return 0;
  }
  uint64_t v8 = (Swift::UInt64 *)(v6 + 6);
  for (unint64_t i = 1; ; ++i)
  {
    Swift::UInt64 v10 = *v8;
    v8 += 2;
    if (v10 <= timestamp) {
      break;
    }
    unint64_t v11 = i + 1;
    if (__OFADD__(i, 1))
    {
      __break(1u);
      goto LABEL_22;
    }
    if (v11 == v7) {
      return 0;
    }
  }
LABEL_10:
  if (__OFADD__(i, 1))
  {
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if ((uint64_t)(i + 1) < v7)
  {
    swift_beginAccess();
    sub_1000564D4(i + 1, v7);
    Swift::Bool result = swift_endAccess();
    uint64_t v6 = *(int64_t **)(v2 + 16);
  }
  if ((i & 0x8000000000000000) != 0) {
    goto LABEL_23;
  }
  if (i >= v6[2])
  {
LABEL_24:
    __break(1u);
    return result;
  }
  int64_t v12 = v6[2 * i + 5];
  uint64_t v13 = 1 << index;
  if ((unint64_t)index >= 0x40) {
    uint64_t v13 = 0;
  }
  if ((unint64_t)index > 0x40) {
    uint64_t v13 = 0;
  }
  return (v13 & ~v12) == 0;
}

uint64_t TouchTrackerLog.deinit()
{
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t TouchTrackerLog.__deallocating_deinit()
{
  TouchTrackerLog.deinit();

  return _swift_deallocClassInstance(v0, 32, 7);
}

char *sub_100056320(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_1000567C4();
    Swift::Bool result = (char *)sub_10000C270();
    __break(1u);
  }
  else if (a3 != result || &result[8 * a2] <= a3)
  {
    return (char *)sub_1000567A8(a3, result);
  }
  return result;
}

char *sub_100056378(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_1000567C4();
    Swift::Bool result = (char *)sub_10000C270();
    __break(1u);
  }
  else if (a3 != result || &result[16 * a2] <= a3)
  {
    return (char *)sub_1000567A8(a3, result);
  }
  return result;
}

uint64_t sub_1000563D0(uint64_t result, int64_t a2, uint64_t a3, uint64_t a4)
{
  if (result < 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v6 = *v4;
  int64_t v7 = *(void *)(*v4 + 16);
  if (v7 < a2)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v8 = result;
  int64_t v9 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v10 = 1 - v9;
  if (__OFSUB__(1, v9))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  int64_t v11 = v7 + v10;
  if (__OFADD__(v7, v10))
  {
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  Swift::Bool result = swift_isUniquelyReferenced_nonNull_native();
  if (!result || v11 > *(void *)(v6 + 24) >> 1)
  {
    if (v7 <= v11) {
      int64_t v14 = v7 + v10;
    }
    else {
      int64_t v14 = v7;
    }
    Swift::Bool result = (uint64_t)sub_100047394((char *)result, v14, 1, v6);
    uint64_t v6 = result;
  }
  uint64_t v15 = v6 + 32 + 16 * v8;
  if (!v10) {
    goto LABEL_16;
  }
  uint64_t v16 = *(void *)(v6 + 16);
  if (__OFSUB__(v16, a2)) {
    goto LABEL_22;
  }
  Swift::Bool result = (uint64_t)sub_100056378((char *)(v6 + 32 + 16 * a2), v16 - a2, (char *)(v15 + 16));
  uint64_t v17 = *(void *)(v6 + 16);
  BOOL v18 = __OFADD__(v17, v10);
  uint64_t v19 = v17 + v10;
  if (!v18)
  {
    *(void *)(v6 + 16) = v19;
LABEL_16:
    *(void *)uint64_t v15 = a3;
    *(void *)(v15 + 8) = a4;
    *uint64_t v4 = v6;
    return result;
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_1000564D4(uint64_t result, int64_t a2)
{
  if (result < 0)
  {
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v4 = *v2;
  int64_t v5 = *(void *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v6 = result;
  int64_t v7 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v8 = result - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  Swift::Bool result = swift_isUniquelyReferenced_nonNull_native();
  if (result && v9 <= *(void *)(v4 + 24) >> 1)
  {
    if (!v8) {
      goto LABEL_17;
    }
  }
  else
  {
    if (v5 <= v9) {
      int64_t v10 = v5 + v8;
    }
    else {
      int64_t v10 = v5;
    }
    Swift::Bool result = (uint64_t)sub_100047394((char *)result, v10, 1, v4);
    uint64_t v4 = result;
    if (!v8) {
      goto LABEL_17;
    }
  }
  uint64_t v11 = *(void *)(v4 + 16);
  if (__OFSUB__(v11, a2)) {
    goto LABEL_23;
  }
  Swift::Bool result = (uint64_t)sub_100056378((char *)(v4 + 32 + 16 * a2), v11 - a2, (char *)(v4 + 32 + 16 * v6));
  uint64_t v12 = *(void *)(v4 + 16);
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (!v13)
  {
    *(void *)(v4 + 16) = v14;
LABEL_17:
    *uint64_t v2 = v4;
    return result;
  }
LABEL_24:
  __break(1u);
  return result;
}

char *sub_1000565C4(uint64_t a1)
{
  return sub_100047394(0, *(void *)(a1 + 16), 0, a1);
}

BOOL sub_1000565D8(uint64_t a1)
{
  return sub_100055F70(a1, *(uint64_t **)(v1 + 32), *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t type metadata accessor for TouchTracker()
{
  return self;
}

uint64_t type metadata accessor for TouchTrackerLog()
{
  return self;
}

ValueMetadata *type metadata accessor for TouchTrackerLog.TouchEpoch()
{
  return &type metadata for TouchTrackerLog.TouchEpoch;
}

ValueMetadata *type metadata accessor for TouchMask()
{
  return &type metadata for TouchMask;
}

unint64_t sub_100056668()
{
  unint64_t result = qword_1000856A0;
  if (!qword_1000856A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000856A0);
  }
  return result;
}

unint64_t sub_1000566B8()
{
  unint64_t result = qword_1000856A8;
  if (!qword_1000856A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000856A8);
  }
  return result;
}

unint64_t sub_100056708()
{
  unint64_t result = qword_1000856B0;
  if (!qword_1000856B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000856B0);
  }
  return result;
}

unint64_t sub_100056758()
{
  unint64_t result = qword_1000856B8;
  if (!qword_1000856B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000856B8);
  }
  return result;
}

void *sub_1000567A8@<X0>(void *__dst@<X2>, const void *a2@<X8>)
{
  return memmove(__dst, a2, v2);
}

uint64_t sub_1000567DC()
{
  return v0;
}

void sub_1000567F4(uint64_t a1@<X8>)
{
  *uint64_t v1 = a1;
}

uint64_t sub_100056810()
{
  return swift_beginAccess();
}

uint64_t sub_100056830(uint64_t a1, unint64_t a2)
{
  switch(a2 >> 62)
  {
    case 1uLL:
      if (a1 >> 32 < (int)a1) {
        __break(1u);
      }
      swift_retain();
      sub_100008D64(a1, a2);
      sub_100058128((int)a1, a1 >> 32);
      sub_100008D0C(a1, a2);
      break;
    case 2uLL:
      uint64_t v5 = *(void *)(a1 + 16);
      uint64_t v6 = *(void *)(a1 + 24);
      swift_retain();
      swift_retain();
      swift_retain();
      sub_100058128(v5, v6);
      swift_release();
      swift_release();
      break;
    case 3uLL:
      memset(v8, 0, 14);
      uint64_t v4 = 0;
      goto LABEL_7;
    default:
      v8[0] = a1;
      LOWORD(v8[1]) = a2;
      BYTE2(v8[1]) = BYTE2(a2);
      BYTE3(v8[1]) = BYTE3(a2);
      BYTE4(v8[1]) = BYTE4(a2);
      uint64_t v4 = BYTE6(a2);
      BYTE5(v8[1]) = BYTE5(a2);
LABEL_7:
      UserDevice.handleReport(pointer:count:)((uint64_t)v8, v4);
      break;
  }
  return swift_release();
}

id UserDevice.device.getter()
{
  return *(id *)(v0 + 16);
}

uint64_t UserDevice.uuid.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC10SidecarHID10UserDevice_uuid;
  sub_10005E6D0();
  sub_10003DCC8();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);

  return v6(a1, v3, v4);
}

uint64_t sub_100056AA4()
{
  uint64_t v0 = sub_10005E750();
  sub_10002A4B4(v0, qword_1000856C0);
  sub_10002A1FC(v0, (uint64_t)qword_1000856C0);
  return sub_10005E730();
}

uint64_t UserDevice._serviceID.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC10SidecarHID10UserDevice__serviceID;
  sub_10001A688();
  return *(void *)v1;
}

uint64_t UserDevice._serviceID.setter(uint64_t a1, char a2)
{
  uint64_t result = sub_10001A638();
  *(void *)uint64_t v2 = a1;
  *(unsigned char *)(v2 + 8) = a2 & 1;
  return result;
}

uint64_t (*UserDevice._serviceID.modify())()
{
  return j__swift_endAccess;
}

uint64_t UserDevice.serviceID.getter()
{
  uint64_t v1 = (unsigned char *)(v0 + OBJC_IVAR____TtC10SidecarHID10UserDevice__serviceID);
  sub_10001A688();
  if (v1[8]) {
    return 0;
  }
  else {
    return *(void *)v1;
  }
}

uint64_t UserDevice.__allocating_init(descriptor:)(uint64_t a1, unint64_t a2)
{
  return UserDevice.init(descriptor:)(a1, a2);
}

uint64_t UserDevice.init(descriptor:)(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  sub_100058230();
  uint64_t v6 = v2 + OBJC_IVAR____TtC10SidecarHID10UserDevice_uuid;
  _s10SidecarHID10UserDeviceC4uuid10Foundation4UUIDVvpfi_0();
  uint64_t v7 = v2 + OBJC_IVAR____TtC10SidecarHID10UserDevice__serviceID;
  *(void *)uint64_t v7 = 0;
  *(unsigned char *)(v7 + 8) = 1;
  uint64_t v8 = (void *)(v2 + OBJC_IVAR____TtC10SidecarHID10UserDevice_getReportHandler);
  *uint64_t v8 = 0;
  v8[1] = 0;
  int64_t v9 = (void *)(v2 + OBJC_IVAR____TtC10SidecarHID10UserDevice_setReportHandler);
  void *v9 = 0;
  v9[1] = 0;
  sub_100007D1C(&qword_1000856D8);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1000665C0;
  *(void *)(v10 + 32) = 0x4449726F646E6556;
  *(void *)(v10 + 40) = 0xE800000000000000;
  *(void *)(v10 + 56) = &type metadata for String;
  *(void *)(v10 + 64) = 1452;
  *(void *)(v10 + 88) = &type metadata for Int;
  *(void *)(v10 + 96) = 0x49746375646F7250;
  *(void *)(v10 + 104) = 0xE900000000000044;
  *(void *)(v10 + 120) = &type metadata for String;
  *(void *)(v10 + 128) = 34304;
  *(void *)(v10 + 152) = &type metadata for Int;
  strcpy((char *)(v10 + 160), "ReportInterval");
  *(unsigned char *)(v10 + 175) = -18;
  *(void *)(v10 + 184) = &type metadata for String;
  *(void *)(v10 + 192) = 8000;
  *(void *)(v10 + 216) = &type metadata for Int;
  *(void *)(v10 + 224) = 0xD000000000000010;
  *(void *)(v10 + 232) = 0x8000000100063650;
  *(void *)(v10 + 248) = &type metadata for String;
  *(void *)(v10 + 256) = a1;
  *(void *)(v10 + 264) = a2;
  *(void *)(v10 + 312) = &type metadata for String;
  *(void *)(v10 + 280) = &type metadata for Data;
  *(void *)(v10 + 288) = 0xD000000000000014;
  *(void *)(v10 + 296) = 0x8000000100063670;
  *(unsigned char *)(v10 + 320) = 1;
  *(void *)(v10 + 376) = &type metadata for String;
  *(void *)(v10 + 344) = &type metadata for Bool;
  *(void *)(v10 + 352) = 0xD000000000000016;
  *(void *)(v10 + 360) = 0x8000000100063690;
  sub_100008D64(a1, a2);
  uint64_t v11 = sub_10005E670();
  *(void *)(v10 + 408) = &type metadata for String;
  *(void *)(v10 + 384) = v11;
  *(void *)(v10 + 392) = v12;
  sub_100007F60(0, &qword_1000856E0);
  CFDictionaryRef v13 = (const __CFDictionary *)sub_10005EC20();
  IOHIDUserDeviceRef v14 = IOHIDUserDeviceCreateWithProperties(0, v13, 1u);
  sub_100008D0C(a1, a2);

  if (v14)
  {
    *(void *)(v3 + 16) = v14;
  }
  else
  {
    sub_10005E6D0();
    sub_10003DCC8();
    (*(void (**)(uint64_t))(v15 + 8))(v6);
    sub_100056F50(*(void *)(v3 + OBJC_IVAR____TtC10SidecarHID10UserDevice_getReportHandler));
    sub_100056F50(*(void *)(v3 + OBJC_IVAR____TtC10SidecarHID10UserDevice_setReportHandler));
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v3;
}

uint64_t sub_100056F50(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

void UserDevice.setDispatchQueue(_:)(dispatch_queue_t queue)
{
  IOHIDUserDeviceSetDispatchQueue(*(IOHIDUserDeviceRef *)(v1 + 16), queue);
}

void UserDevice.registerCancel(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(__IOHIDUserDevice **)(v2 + 16);
  v5[4] = a1;
  v5[5] = a2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 1107296256;
  _OWORD v5[2] = sub_10000C5B0;
  void v5[3] = &unk_100078B98;
  uint64_t v4 = _Block_copy(v5);
  swift_retain();
  swift_release();
  IOHIDUserDeviceSetCancelHandler(v3, v4);
  _Block_release(v4);
}

uint64_t sub_10005701C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10005702C()
{
  return swift_release();
}

uint64_t static UserDevice.fromOpaque(_:)(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  __break(1u);
  return result;
}

uint64_t UserDevice.getReportHandler.getter()
{
  return sub_1000570E8(&OBJC_IVAR____TtC10SidecarHID10UserDevice_getReportHandler, (void (*)(void, void))sub_10005822C);
}

uint64_t UserDevice.getReportHandler.setter(uint64_t a1, uint64_t a2)
{
  return sub_100057178(a1, a2, (uint64_t)&OBJC_IVAR____TtC10SidecarHID10UserDevice_getReportHandler, (uint64_t (*)(uint64_t, uint64_t))sub_100058228);
}

uint64_t (*UserDevice.getReportHandler.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t UserDevice.setReportHandler.getter()
{
  return sub_1000570E8(&OBJC_IVAR____TtC10SidecarHID10UserDevice_setReportHandler, (void (*)(void, void))sub_100057148);
}

uint64_t sub_1000570E8(void *a1, void (*a2)(void, void))
{
  uint64_t v4 = (void *)(v2 + *a1);
  sub_10001A688();
  uint64_t v5 = *v4;
  a2(*v4, v4[1]);
  return v5;
}

uint64_t sub_100057148(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t UserDevice.setReportHandler.setter(uint64_t a1, uint64_t a2)
{
  return sub_100057178(a1, a2, (uint64_t)&OBJC_IVAR____TtC10SidecarHID10UserDevice_setReportHandler, (uint64_t (*)(uint64_t, uint64_t))sub_100056F50);
}

uint64_t sub_100057178(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  sub_10001A638();
  uint64_t v8 = *v4;
  uint64_t v9 = v4[1];
  *uint64_t v4 = a1;
  v4[1] = a2;
  return a4(v8, v9);
}

uint64_t (*UserDevice.setReportHandler.modify())()
{
  return j_j__swift_endAccess;
}

void static UserDevice.getReport(_:_:_:_:_:)(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v9 = sub_10005E570();
  sub_100008DCC();
  uint64_t v11 = v10;
  __chkstk_darwin(v12);
  sub_10003FE70();
  uint64_t v15 = v14 - v13;
  if (!a1)
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v16 = *a5;
  uint64_t v17 = enum case for Data.Deallocator.none(_:);
  BOOL v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 104);
  swift_retain();
  v18(v15, v17, v9);
  uint64_t v19 = sub_10005E590();
  unint64_t v21 = v20;
  uint64_t v29 = v19;
  unint64_t v30 = v20;
  char v22 = (void (**)(uint64_t, void, uint64_t *))(a1 + OBJC_IVAR____TtC10SidecarHID10UserDevice_getReportHandler);
  sub_10001A688();
  char v23 = *v22;
  if (!*v22)
  {
LABEL_10:
    __break(1u);
    return;
  }
  sub_100008D64(v19, v21);
  sub_100057148((uint64_t)v23);
  v23(a2, a3, &v29);
  sub_100056F50((uint64_t)v23);
  uint64_t v24 = v29;
  unint64_t v25 = v30;
  sub_100008D64(v29, v30);
  char v26 = sub_10005E5F0();
  sub_100008D0C(v24, v25);
  if (v26)
  {
    sub_100008D0C(v24, v25);
    sub_100008D0C(v19, v21);
    swift_release();
  }
  else
  {
    uint64_t v27 = sub_10005E620();
    if (v16 >= v27) {
      uint64_t v28 = v27;
    }
    else {
      uint64_t v28 = v16;
    }
    *a5 = v28;
    swift_release();
    sub_100008D0C(v19, v21);
    sub_100008D0C(v24, v25);
  }
}

void static UserDevice.setReport(_:_:_:_:_:)(uint64_t a1, uint64_t a2, unsigned int a3)
{
  uint64_t v6 = sub_10005E570();
  sub_100008DCC();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  sub_10003FE70();
  uint64_t v12 = v11 - v10;
  if (a1)
  {
    uint64_t v13 = enum case for Data.Deallocator.none(_:);
    uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 104);
    swift_retain();
    v14(v12, v13, v6);
    uint64_t v15 = sub_10005E590();
    unint64_t v17 = v16;
    BOOL v18 = (void (**)(uint64_t, void, uint64_t, unint64_t))(a1
                                                                           + OBJC_IVAR____TtC10SidecarHID10UserDevice_setReportHandler);
    sub_10001A688();
    uint64_t v19 = *v18;
    if (*v18)
    {
      swift_retain();
      v19(a2, a3, v15, v17);
      sub_100056F50((uint64_t)v19);
      sub_100008D0C(v15, v17);
      swift_release();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t UserDevice.registerGetReport(_:)(uint64_t a1, uint64_t a2)
{
  return sub_100057630(a1, a2, &OBJC_IVAR____TtC10SidecarHID10UserDevice_getReportHandler, (void (*)(uint64_t, uint64_t))sub_100058228, (uint64_t)sub_1000575C0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&IOHIDUserDeviceRegisterGetReportWithReturnLengthCallback);
}

uint64_t sub_1000575C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1000576CC(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))static UserDevice.getReport(_:_:_:_:_:));
}

uint64_t UserDevice.registerSetReport(_:)(uint64_t a1, uint64_t a2)
{
  return sub_100057630(a1, a2, &OBJC_IVAR____TtC10SidecarHID10UserDevice_setReportHandler, (void (*)(uint64_t, uint64_t))sub_100056F50, (uint64_t)sub_100057734, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&IOHIDUserDeviceRegisterSetReportCallback);
}

uint64_t sub_100057630(uint64_t a1, uint64_t a2, void *a3, void (*a4)(uint64_t, uint64_t), uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v12 = (uint64_t *)(v6 + *a3);
  swift_beginAccess();
  uint64_t v13 = *v12;
  uint64_t v14 = v12[1];
  *uint64_t v12 = a1;
  v12[1] = a2;
  a4(v13, v14);
  uint64_t v15 = *(void *)(v6 + 16);
  swift_retain();
  return a6(v15, a5, v6);
}

uint64_t sub_1000576CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  return a6(a1, a2, a3, a4, a5);
}

uint64_t sub_100057734(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1000576CC(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))static UserDevice.setReport(_:_:_:_:_:));
}

Swift::Void __swiftcall UserDevice.activate()()
{
  uint64_t v1 = v0;
  IOHIDUserDeviceActivate(*(IOHIDUserDeviceRef *)(v0 + 16));
  io_registry_entry_t v2 = IOHIDUserDeviceCopyService();
  if (v2)
  {
    io_object_t v3 = v2;
    entryID[0] = 0;
    IORegistryEntryGetRegistryEntryID(v2, entryID);
    if (qword_1000852F0 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_10005E750();
    sub_10002A1FC(v4, (uint64_t)qword_1000856C0);
    uint64_t v5 = sub_10005E720();
    os_log_type_t v6 = sub_10005EC50();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 134217984;
      sub_10001A688();
      entryID[7] = entryID[0];
      sub_10005EE10();
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "IOHIDUserDeviceCreate: %llx", v7, 0xCu);
      swift_slowDealloc();
    }

    IOObjectRetain(v3);
    sub_10001A688();
    uint64_t v8 = entryID[0];
    uint64_t v9 = v1 + OBJC_IVAR____TtC10SidecarHID10UserDevice__serviceID;
    swift_beginAccess();
    *(void *)uint64_t v9 = v8;
    *(unsigned char *)(v9 + 8) = 0;
  }
}

Swift::Void __swiftcall UserDevice.cancel()()
{
  IOHIDUserDeviceCancel(*(IOHIDUserDeviceRef *)(v0 + 16));
}

double UserDevice.property(forKey:)@<D0>(uint64_t a1@<X8>)
{
  io_object_t v3 = *(__IOHIDUserDevice **)(v1 + 16);
  uint64_t v4 = (__CFString *)sub_10005E8F0();
  CFTypeRef v5 = IOHIDUserDeviceCopyProperty(v3, v4);

  if (v5)
  {
    *(void *)(a1 + 24) = swift_getObjectType();
    *(void *)a1 = v5;
  }
  else
  {
    double result = 0.0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

uint64_t UserDevice.setProperty(_:forKey:)(void *a1)
{
  io_object_t v3 = *(__IOHIDUserDevice **)(v1 + 16);
  uint64_t v4 = (__CFString *)sub_10005E8F0();
  sub_10000BD3C(a1, a1[3]);
  CFTypeRef v5 = (const void *)sub_10005F130();
  IOHIDUserDeviceSetProperty(v3, v4, v5);

  return swift_unknownObjectRelease();
}

uint64_t UserDevice.handleReport(pointer:count:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10005E750();
  sub_100008DCC();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_10003FE70();
  uint64_t v10 = v9 - v8;
  uint64_t v11 = UserDevice.serviceID.getter();
  sub_1000542C8(a1, a2, v11);
  uint64_t result = IOHIDUserDeviceHandleReport();
  if (result)
  {
    int v13 = result;
    sub_100007F60(0, (unint64_t *)&qword_100084108);
    id v14 = sub_100051984(v13, 0, 0);
    if (qword_1000852F0 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_10002A1FC(v4, (uint64_t)qword_1000856C0);
    uint64_t v16 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v10, v15, v4);
    __chkstk_darwin(v16);
    *(&v19 - 2) = v11;
    __chkstk_darwin(v17);
    *(&v19 - 2) = (uint64_t)v14;
    sub_10004ECB0(sub_10005801C, v18, (void (*)(void))sub_10000FA6C);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v10, v4);
    return swift_willThrow();
  }
  return result;
}

char *sub_100057C20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!a2)
  {
LABEL_10:
    sub_100007D1C((uint64_t *)&unk_100084420);
    sub_1000229B8();
    uint64_t v13 = sub_10005E8A0();
    uint64_t v15 = v14;
    swift_bridgeObjectRelease();
    sub_100007D1C((uint64_t *)&unk_100084D10);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_1000643A0;
    *(void *)(v16 + 56) = &type metadata for UInt64;
    *(void *)(v16 + 64) = &protocol witness table for UInt64;
    *(void *)(v16 + 32) = a3;
    *(void *)(v16 + 96) = &type metadata for String;
    *(void *)(v16 + 104) = sub_100010414();
    *(void *)(v16 + 72) = v13;
    *(void *)(v16 + 80) = v15;
    return (char *)sub_10005E930();
  }
  uint64_t v4 = a2;
  uint64_t result = sub_100048C30(0, a2 & ~(a2 >> 63), 0);
  if (v4 >= 1)
  {
    uint64_t v17 = a3;
    sub_10004BCFC();
    do
    {
      ++a1;
      uint64_t v7 = sub_10005EA40();
      uint64_t v9 = v8;
      if (sub_10005E990() <= 1)
      {
        v18._uint64_t countAndFlagsBits = v7;
        v18._object = v9;
        sub_10005E9C0(v18);
        swift_bridgeObjectRelease();
        uint64_t v7 = 48;
        uint64_t v9 = (void *)0xE100000000000000;
      }
      unint64_t v11 = _swiftEmptyArrayStorage[2];
      unint64_t v10 = _swiftEmptyArrayStorage[3];
      if (v11 >= v10 >> 1) {
        sub_100048C30((char *)(v10 > 1), v11 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v11 + 1;
      uint64_t v12 = &_swiftEmptyArrayStorage[2 * v11];
      v12[4] = v7;
      v12[5] = v9;
      --v4;
    }
    while (v4);
    a3 = v17;
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

uint64_t sub_100057E20()
{
  uint64_t v1 = sub_10005F110();
  v2._uint64_t countAndFlagsBits = 0x5B74726F706552;
  v2._object = (void *)0xE700000000000000;
  sub_10005E9C0(v2);
  sub_1000581DC();
  v3._uint64_t countAndFlagsBits = sub_10005EA40();
  sub_10005E9C0(v3);
  swift_bridgeObjectRelease();
  v4._uint64_t countAndFlagsBits = 93;
  v4._object = (void *)0xE100000000000000;
  sub_10005E9C0(v4);
  return v1;
}

uint64_t UserDevice.handleReport(_:)(uint64_t a1, unint64_t a2)
{
  return sub_100056830(a1, a2);
}

uint64_t sub_100057EFC(uint64_t result, uint64_t a2)
{
  if (result) {
    return UserDevice.handleReport(pointer:count:)(result, a2 - result);
  }
  __break(1u);
  return result;
}

uint64_t UserDevice.handleReport(_:)(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 16);
  if (result) {
    return UserDevice.handleReport(pointer:count:)(result, *(void *)(a1 + 24));
  }
  __break(1u);
  return result;
}

uint64_t UserDevice.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC10SidecarHID10UserDevice_uuid;
  sub_10005E6D0();
  sub_10003DCC8();
  (*(void (**)(uint64_t))(v2 + 8))(v1);
  sub_100056F50(*(void *)(v0 + OBJC_IVAR____TtC10SidecarHID10UserDevice_getReportHandler));
  sub_100056F50(*(void *)(v0 + OBJC_IVAR____TtC10SidecarHID10UserDevice_setReportHandler));
  return v0;
}

uint64_t UserDevice.__deallocating_deinit()
{
  UserDevice.deinit();
  sub_100058230();
  uint64_t v2 = *(unsigned int *)(v1 + 48);
  uint64_t v3 = *(unsigned __int16 *)(v1 + 52);

  return _swift_deallocClassInstance(v0, v2, v3);
}

uint64_t sub_10005801C()
{
  return sub_100057E20();
}

uint64_t sub_100058024()
{
  return type metadata accessor for UserDevice();
}

uint64_t type metadata accessor for UserDevice()
{
  uint64_t result = qword_100085710;
  if (!qword_100085710) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100058074()
{
  uint64_t result = sub_10005E6D0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_100058128(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_10005E4D0();
  uint64_t v5 = result;
  if (result)
  {
    uint64_t result = sub_10005E4F0();
    if (__OFSUB__(a1, result))
    {
LABEL_13:
      __break(1u);
      return result;
    }
    v5 += a1 - result;
  }
  BOOL v6 = __OFSUB__(a2, a1);
  uint64_t v7 = a2 - a1;
  if (v6)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v8 = sub_10005E4E0();
  if (v8 >= v7) {
    uint64_t v9 = v7;
  }
  else {
    uint64_t v9 = v8;
  }
  uint64_t v10 = v5 + v9;
  if (v5) {
    uint64_t v11 = v10;
  }
  else {
    uint64_t v11 = 0;
  }
  sub_100057EFC(v5, v11);
  return swift_release();
}

unint64_t sub_1000581DC()
{
  unint64_t result = qword_1000857B8;
  if (!qword_1000857B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000857B8);
  }
  return result;
}

uint64_t sub_100058244()
{
  return 0;
}

uint64_t variable initialization expression of Domain.result()
{
  return 0;
}

uint64_t variable initialization expression of Domain.peer@<X0>(uint64_t a1@<X8>)
{
  sub_1000582FC((uint64_t)v3);
  return sub_10005831C((uint64_t)v3, a1);
}

double sub_1000582FC(uint64_t a1)
{
  double result = 0.0;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(unsigned char *)(a1 + 128) = 1;
  return result;
}

uint64_t sub_10005831C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007D1C((uint64_t *)&unk_1000857D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t variable initialization expression of Clock.masterIdentifier()
{
  return TSNullgPTPClockIdentity;
}

uint64_t sub_1000583A4()
{
  uint64_t v1 = sub_10005F110();
  v2._uint64_t countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  sub_10005E9C0(v2);
  sub_1000581DC();
  v3._uint64_t countAndFlagsBits = sub_10005EA40();
  sub_10005E9C0(v3);
  swift_bridgeObjectRelease();
  v4._uint64_t countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  sub_10005E9C0(v4);
  return v1;
}

id sub_100058438()
{
  id result = [objc_allocWithZone((Class)type metadata accessor for TimeSyncManager()) init];
  qword_1000857E0 = (uint64_t)result;
  return result;
}

id sub_10005846C()
{
  Objectint Type = (objc_class *)swift_getObjectType();
  Swift::String v2 = &v0[OBJC_IVAR____TtC15SidecarTimeSyncP33_52E478E0294A7D1A30B0593D640BE43C15TimeSyncManager_activation];
  *(void *)Swift::String v2 = 0;
  v2[8] = -1;
  *(void *)&v0[OBJC_IVAR____TtC15SidecarTimeSyncP33_52E478E0294A7D1A30B0593D640BE43C15TimeSyncManager_clocks] = _swiftEmptyArrayStorage;
  *(void *)&v0[OBJC_IVAR____TtC15SidecarTimeSyncP33_52E478E0294A7D1A30B0593D640BE43C15TimeSyncManager_completions] = _swiftEmptyArrayStorage;
  v4.receiver = v0;
  v4.super_class = ObjectType;
  return [super init];
}

uint64_t sub_100058500()
{
  uint64_t v0 = sub_10005E750();
  sub_10002A4B4(v0, qword_1000857E8);
  sub_10002A1FC(v0, (uint64_t)qword_1000857E8);
  return sub_10005E730();
}

BOOL sub_100058578(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  BOOL v6 = (uint64_t *)(v2
                 + OBJC_IVAR____TtC15SidecarTimeSyncP33_52E478E0294A7D1A30B0593D640BE43C15TimeSyncManager_completions);
  swift_beginAccess();
  swift_retain();
  sub_10005BBD8((uint64_t *)&unk_100085A30);
  uint64_t v7 = *(char **)(*v6 + 16);
  sub_10005BC34(v7, (uint64_t *)&unk_100085A30);
  uint64_t v8 = *v6;
  *(void *)(v8 + 16) = v7 + 1;
  uint64_t v9 = v8 + 16 * (void)v7;
  *(void *)(v9 + 32) = sub_10005BF38;
  *(void *)(v9 + 40) = v5;
  swift_endAccess();
  return sub_100058654();
}

BOOL sub_100058654()
{
  int v1 = *(unsigned __int8 *)(v0
                          + OBJC_IVAR____TtC15SidecarTimeSyncP33_52E478E0294A7D1A30B0593D640BE43C15TimeSyncManager_activation
                          + 8);
  if (v1 != 255)
  {
    uint64_t v2 = *(void **)(v0
                  + OBJC_IVAR____TtC15SidecarTimeSyncP33_52E478E0294A7D1A30B0593D640BE43C15TimeSyncManager_activation);
    Swift::String v3 = (uint64_t *)(v0
                   + OBJC_IVAR____TtC15SidecarTimeSyncP33_52E478E0294A7D1A30B0593D640BE43C15TimeSyncManager_completions);
    swift_beginAccess();
    uint64_t v4 = *v3;
    uint64_t *v3 = (uint64_t)_swiftEmptyArrayStorage;
    sub_10005C090(v2, v1);
    uint64_t v5 = *(void *)(v4 + 16);
    if (v5)
    {
      uint64_t v6 = v4 + 40;
      do
      {
        uint64_t v7 = *(void (**)(void **))(v6 - 8);
        uint64_t v9 = v2;
        char v10 = v1 & 1;
        swift_retain();
        v7(&v9);
        swift_release();
        v6 += 16;
        --v5;
      }
      while (v5);
    }
    sub_10005C000(v2, v1);
    swift_bridgeObjectRelease();
  }
  return v1 != 255;
}

void sub_100058748(uint64_t a1, uint64_t a2)
{
  sub_100058578(a1, a2);
  if (!sub_100058654())
  {
    if (qword_1000857C8 != -1) {
      swift_once();
    }
    uint64_t v2 = sub_10005E750();
    sub_10002A1FC(v2, (uint64_t)qword_1000857E8);
    Swift::String v3 = sub_10005E720();
    os_log_type_t v4 = sub_10005EC50();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "Activating TimeSync", v5, 2u);
      swift_slowDealloc();
    }

    sub_100058850();
  }
}

void sub_100058850()
{
  int v1 = self;
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = v0;
  v5[4] = sub_10005C024;
  v5[5] = v2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 1107296256;
  _OWORD v5[2] = sub_10000C5B0;
  void v5[3] = &unk_100078D90;
  Swift::String v3 = _Block_copy(v5);
  id v4 = v0;
  swift_release();
  [v1 notifyWhenClockManagerIsAvailable:v3];
  _Block_release(v3);
}

void sub_100058934(void *a1)
{
  uint64_t v2 = sub_10005E750();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000857C8 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_10002A1FC(v2, (uint64_t)qword_1000857E8);
  uint64_t v7 = sub_10005E720();
  os_log_type_t v8 = sub_10005EC50();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "TSClockManager is Available", v9, 2u);
    swift_slowDealloc();
  }

  id v10 = [self sharedClockManager];
  [v10 addClient:a1];
  aBlock[0] = 0;
  unsigned int v11 = [v10 addgPTPServicesWithError:aBlock];
  id v12 = aBlock[0];
  if (v11)
  {
    uint64_t v13 = self;
    uint64_t v14 = (void *)swift_allocObject();
    v14[2] = a1;
    aBlock[4] = sub_10005C02C;
    void aBlock[5] = v14;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = (id)1107296256;
    aBlock[2] = sub_10000C5B0;
    void aBlock[3] = &unk_100078DE0;
    uint64_t v15 = _Block_copy(aBlock);
    id v16 = v12;
    id v17 = a1;
    swift_release();
    [v13 notifyWhengPTPManagerIsAvailable:v15];
    _Block_release(v15);
  }
  else
  {
    id v18 = aBlock[0];
    uint64_t v19 = (void *)sub_10005E530();

    swift_willThrow();
    uint64_t v20 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
    __chkstk_darwin(v20);
    aBlock[-2] = v19;
    sub_10004ECB0(sub_1000590F4, 0, (void (*)(void))sub_10000FA6C);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    swift_errorRetain();
    sub_100058E08(v19, 1);
    swift_errorRelease();
    swift_errorRelease();
  }
}

void sub_100058CCC()
{
  if (qword_1000857C8 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_10005E750();
  sub_10002A1FC(v0, (uint64_t)qword_1000857E8);
  int v1 = sub_10005E720();
  os_log_type_t v2 = sub_10005EC50();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "gPTPManager is Available", v3, 2u);
    swift_slowDealloc();
  }

  id v4 = [self sharedgPTPManager];
  id v5 = v4;
  sub_100058E08(v4, 0);
}

uint64_t sub_100058E08(void *a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_10005E7B0();
  uint64_t v19 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  os_log_type_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_10005E7E0();
  uint64_t v9 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  unsigned int v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007F60(0, (unint64_t *)&qword_100084110);
  id v12 = (void *)sub_10005EC90();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v2;
  *(void *)(v13 + 24) = a1;
  char v14 = a2 & 1;
  *(unsigned char *)(v13 + 32) = a2 & 1;
  aBlock[4] = sub_10005C078;
  void aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10000C5B0;
  void aBlock[3] = &unk_100078E30;
  uint64_t v15 = _Block_copy(aBlock);
  id v16 = v3;
  sub_10005C084(a1, v14);
  swift_release();
  sub_10005E7D0();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_1000453F0((unint64_t *)&qword_1000848D0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100007D1C((uint64_t *)&unk_100083FD0);
  sub_100007E14((unint64_t *)&qword_1000848E0, (uint64_t *)&unk_100083FD0);
  sub_10005EEE0();
  sub_10005ECB0();
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v18);
}

uint64_t sub_1000590F4()
{
  return 0x636E7953656D6954;
}

BOOL sub_100059118(uint64_t a1, void *a2, char a3)
{
  uint64_t v4 = a1 + OBJC_IVAR____TtC15SidecarTimeSyncP33_52E478E0294A7D1A30B0593D640BE43C15TimeSyncManager_activation;
  id v5 = *(void **)(a1 + OBJC_IVAR____TtC15SidecarTimeSyncP33_52E478E0294A7D1A30B0593D640BE43C15TimeSyncManager_activation);
  *(void *)uint64_t v4 = a2;
  unsigned __int8 v6 = *(unsigned char *)(v4 + 8);
  char v7 = a3 & 1;
  *(unsigned char *)(v4 + 8) = a3 & 1;
  sub_10005C000(v5, v6);
  sub_10005C084(a2, v7);
  return sub_100058654();
}

id sub_100059178()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return [super dealloc];
}

uint64_t sub_100059214()
{
  int v1 = v0;
  uint64_t v2 = sub_10005E7B0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_10005E7E0();
  uint64_t v6 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  os_log_type_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000857C8 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_10005E750();
  sub_10002A1FC(v9, (uint64_t)qword_1000857E8);
  uint64_t v10 = sub_10005E720();
  os_log_type_t v11 = sub_10005EC40();
  if (os_log_type_enabled(v10, v11))
  {
    id v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "TimeSync Connection Interrupted", v12, 2u);
    swift_slowDealloc();
  }

  sub_100007F60(0, (unint64_t *)&qword_100084110);
  uint64_t v13 = (void *)sub_10005EC90();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v1;
  aBlock[4] = sub_10005BFE0;
  void aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10000C5B0;
  void aBlock[3] = &unk_100078D40;
  uint64_t v15 = _Block_copy(aBlock);
  id v16 = v1;
  swift_release();
  sub_10005E7D0();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_1000453F0((unint64_t *)&qword_1000848D0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100007D1C((uint64_t *)&unk_100083FD0);
  sub_100007E14((unint64_t *)&qword_1000848E0, (uint64_t *)&unk_100083FD0);
  sub_10005EEE0();
  sub_10005ECB0();
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v19);
}

void sub_100059594(uint64_t a1)
{
  uint64_t v1 = a1 + OBJC_IVAR____TtC15SidecarTimeSyncP33_52E478E0294A7D1A30B0593D640BE43C15TimeSyncManager_activation;
  uint64_t v2 = *(void **)(a1 + OBJC_IVAR____TtC15SidecarTimeSyncP33_52E478E0294A7D1A30B0593D640BE43C15TimeSyncManager_activation);
  *(void *)uint64_t v1 = 0;
  unsigned __int8 v3 = *(unsigned char *)(v1 + 8);
  *(unsigned char *)(v1 + 8) = -1;
  sub_10005C000(v2, v3);
  sub_100058850();
}

uint64_t sub_100059644(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10005E750();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000857C8 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_10002A1FC(v4, (uint64_t)qword_1000857E8);
  uint64_t v9 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  __chkstk_darwin(v9);
  *(&v16 - 2) = v10;
  __chkstk_darwin(v11);
  *(&v16 - 2) = a1;
  sub_10004ECB0(sub_10005C1D0, v12, (void (*)(void))sub_10000FAE8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  int v14 = *(unsigned __int8 *)(v2 + 24);
  if (v14 == 255 || (v14 & 1) == 0)
  {
    uint64_t v15 = *(void *)(v2 + 16);
    *(void *)(v2 + 16) = a1;
    *(unsigned char *)(v2 + 24) = 1;
    sub_100059C10(v15, v14);
    swift_errorRetain();
    return sub_10005983C();
  }
  return result;
}

BOOL sub_10005983C()
{
  int v1 = *(unsigned __int8 *)(v0 + 24);
  if (v1 != 255)
  {
    uint64_t v2 = *(void *)(v0 + 16);
    swift_beginAccess();
    uint64_t v3 = *(void *)(v0 + 168);
    *(void *)(v0 + 168) = _swiftEmptyArrayStorage;
    sub_10005C1D8(v2, v1);
    uint64_t v4 = *(void *)(v3 + 16);
    if (v4)
    {
      uint64_t v5 = v3 + 40;
      do
      {
        uint64_t v6 = *(void (**)(uint64_t *))(v5 - 8);
        uint64_t v8 = v2;
        char v9 = v1 & 1;
        swift_retain();
        v6(&v8);
        swift_release();
        v5 += 16;
        --v4;
      }
      while (v4);
    }
    sub_100059C10(v2, v1);
    swift_bridgeObjectRelease();
  }
  return v1 != 255;
}

uint64_t Domain.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  Domain.init()();
  return v0;
}

uint64_t Domain.init()()
{
  *(void *)(v0 + 16) = 0;
  *(unsigned char *)(v0 + 24) = -1;
  sub_1000582FC((uint64_t)v2);
  sub_10005831C((uint64_t)v2, v0 + 32);
  *(void *)(v0 + 168) = _swiftEmptyArrayStorage;
  return v0;
}

uint64_t Domain.deinit()
{
  Domain.deallocate()();
  sub_100059C10(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
  swift_bridgeObjectRelease();
  return v0;
}

Swift::Void __swiftcall Domain.deallocate()()
{
  uint64_t v1 = v0;
  unsigned __int8 v2 = *(unsigned char *)(v0 + 24);
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = *(void *)(v0 + 16);
    uint64_t v4 = *(void *)(v3 + 24);
    if (v4 != TSNullClockIdentifier)
    {
      sub_100059F24(*(void *)(v0 + 16), 0);
      if (qword_1000857C8 != -1) {
        swift_once();
      }
      uint64_t v5 = sub_10005E750();
      sub_10002A1FC(v5, (uint64_t)qword_1000857E8);
      uint64_t v6 = sub_10005E720();
      os_log_type_t v7 = sub_10005EC50();
      if (os_log_type_enabled(v6, v7))
      {
        uint64_t v8 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v8 = 134217984;
        sub_10005EE10();
        _os_log_impl((void *)&_mh_execute_header, v6, v7, "%llx: Deallocating", v8, 0xCu);
        swift_slowDealloc();
      }

      if (qword_1000857C0 != -1) {
        swift_once();
      }
      uint64_t v9 = swift_allocObject();
      *(void *)(v9 + 16) = v1;
      *(void *)(v9 + 24) = v4;
      swift_retain();
      sub_100058748((uint64_t)sub_10005A6A0, v9);
      swift_release();
      sub_100059C10(v3, v2);
    }
  }
  sub_100007F60(0, (unint64_t *)&qword_100084108);
  id v10 = sub_10002E6D0(-536870212, 0, 0);
  uint64_t v11 = *(void *)(v1 + 16);
  *(void *)(v1 + 16) = v10;
  unsigned __int8 v12 = *(unsigned char *)(v1 + 24);
  *(unsigned char *)(v1 + 24) = 1;
  sub_100059C10(v11, v12);
}

uint64_t sub_100059C10(uint64_t result, unsigned __int8 a2)
{
  if (a2 != 255) {
    return sub_100059C28(result, a2 & 1);
  }
  return result;
}

uint64_t sub_100059C28(uint64_t a1, char a2)
{
  if (a2) {
    return swift_errorRelease();
  }
  else {
    return swift_release();
  }
}

uint64_t Domain.__deallocating_deinit()
{
  Domain.deinit();

  return _swift_deallocClassInstance(v0, 176, 7);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Domain.bind(peer:)(Swift::String peer)
{
  memset(v2, 0, sizeof(v2));
  sub_100059D0C();
  if (!v1)
  {
    memcpy(__dst, v2, sizeof(__dst));
    sub_100059E04(__dst);
  }
}

uint64_t sub_100059D0C()
{
  sub_10005E950();
  int v0 = StringToSockAddr();
  swift_release();
  uint64_t result = sub_10005E780();
  if (v0 != result)
  {
    sub_100007F60(0, (unint64_t *)&qword_100084108);
    sub_10002E6C4(v0, 0, 0);
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_100059E04(const void *a1)
{
  sub_10005831C(v1 + 32, (uint64_t)v5);
  sub_10005831C((uint64_t)v5, (uint64_t)v6);
  if (sub_10005BEEC((uint64_t)v6) == 1)
  {
    memcpy(__dst, a1, 0x80uLL);
    sub_10005C1F0((uint64_t)__dst);
    sub_10005831C((uint64_t)__dst, v1 + 32);
    return sub_100059F30();
  }
  else
  {
    sub_100007F60(0, (unint64_t *)&qword_100084108);
    sub_10002E6D0(-536870212, 0, 0);
    return swift_willThrow();
  }
}

BOOL Domain.isBound.getter()
{
  sub_10005831C(v0 + 32, (uint64_t)v2);
  return sub_10005BEEC((uint64_t)v2) == 0;
}

uint64_t sub_100059F24(uint64_t a1, char a2)
{
  if (a2) {
    return swift_errorRetain();
  }
  else {
    return swift_retain();
  }
}

uint64_t sub_100059F30()
{
  uint64_t result = sub_10005983C();
  if ((result & 1) == 0)
  {
    sub_10005831C(v0 + 32, (uint64_t)v10);
    sub_10005831C((uint64_t)v10, (uint64_t)__src);
    uint64_t result = sub_10005BEEC((uint64_t)__src);
    if (result != 1)
    {
      memcpy(__dst, __src, sizeof(__dst));
      if (qword_1000857C8 != -1) {
        swift_once();
      }
      uint64_t v2 = sub_10005E750();
      sub_10002A1FC(v2, (uint64_t)qword_1000857E8);
      uint64_t v3 = sub_10005E720();
      os_log_type_t v4 = sub_10005EC50();
      if (os_log_type_enabled(v3, v4))
      {
        uint64_t v5 = (uint8_t *)swift_slowAlloc();
        uint64_t v9 = swift_slowAlloc();
        *(_DWORD *)uint64_t v5 = 136446210;
        uint64_t v6 = sub_1000242E8();
        sub_10000F098((uint64_t)v6, v7, &v9);
        sub_10005EE10();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v3, v4, "%{public}s: Allocating", v5, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }

      if (qword_1000857C0 != -1) {
        swift_once();
      }
      uint64_t v8 = swift_allocObject();
      *(void *)(v8 + 16) = v0;
      memcpy((void *)(v8 + 24), __dst, 0x80uLL);
      swift_retain();
      sub_100058748((uint64_t)sub_10005C178, v8);
      return swift_release();
    }
  }
  return result;
}

uint64_t Domain.allocate(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  swift_beginAccess();
  swift_retain();
  sub_10005BBD8((uint64_t *)&unk_100085A20);
  uint64_t v6 = *(char **)(*(void *)(v2 + 168) + 16);
  sub_10005BC34(v6, (uint64_t *)&unk_100085A20);
  uint64_t v7 = *(void *)(v2 + 168);
  *(void *)(v7 + 16) = v6 + 1;
  uint64_t v8 = v7 + 16 * (void)v6;
  *(void *)(v8 + 32) = sub_10005BF38;
  *(void *)(v8 + 40) = v5;
  swift_endAccess();
  return sub_100059F30();
}

void sub_10005A258(void *a1, char a2, uint64_t a3, void *a4)
{
  uint64_t v7 = sub_10005E750();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  id v10 = &v26[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (a2)
  {
    swift_errorRetain();
    if (qword_1000857C8 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_10002A1FC(v7, (uint64_t)qword_1000857E8);
    uint64_t v17 = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v8 + 16))(v10, v16, v7);
    __chkstk_darwin(v17);
    *(void *)&v26[-16] = a4;
    __chkstk_darwin(v18);
    *(void *)&v26[-16] = a1;
    sub_10004ECB0(sub_10005C260, v19, (void (*)(void))sub_10000FAE8);
    sub_10005C018(a1, 1);
    goto LABEL_14;
  }
  id v27 = 0;
  if (([a1 removePTPInstanceWithIdentifier:a4 error:&v27] & 1) == 0)
  {
    id v20 = v27;
    uint64_t v21 = sub_10005E530();

    swift_willThrow();
    if (qword_1000857C8 != -1) {
      swift_once();
    }
    uint64_t v22 = sub_10002A1FC(v7, (uint64_t)qword_1000857E8);
    uint64_t v23 = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v8 + 16))(v10, v22, v7);
    __chkstk_darwin(v23);
    *(void *)&v26[-16] = a4;
    __chkstk_darwin(v24);
    *(void *)&v26[-16] = v21;
    sub_10004ECB0(sub_10005C260, v25, (void (*)(void))sub_10000FAE8);
    sub_10005C018(a1, 0);
    swift_errorRelease();
LABEL_14:
    (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
    return;
  }
  uint64_t v11 = qword_1000857C8;
  id v12 = v27;
  if (v11 != -1) {
    swift_once();
  }
  sub_10002A1FC(v7, (uint64_t)qword_1000857E8);
  uint64_t v13 = sub_10005E720();
  os_log_type_t v14 = sub_10005EC50();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 134217984;
    id v27 = a4;
    sub_10005EE10();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "%llx: Deallocated", v15, 0xCu);
    swift_slowDealloc();
  }
  sub_10005C018(a1, 0);
}

uint64_t sub_10005A670()
{
  swift_release();
  uint64_t v0 = sub_10001A914();

  return _swift_deallocObject(v0, v1, v2);
}

void sub_10005A6A0(void *a1, char a2)
{
  sub_10005A258(a1, a2 & 1, *(void *)(v2 + 16), *(void **)(v2 + 24));
}

void sub_10005A6AC(void *a1, char a2, uint64_t a3, uint64_t a4)
{
  if (a2)
  {
    swift_errorRetain();
    sub_100059644((uint64_t)a1);
    sub_10005C018(a1, 1);
  }
  else
  {
    id v10 = 0;
    uint64_t v11 = TSNullClockIdentifier;
    if ([a1 addPTPInstance:&v11 error:&v10])
    {
      uint64_t v6 = v11;
      id v7 = v10;
      sub_10005A808(v6, a4, 10);
      sub_10005C018(a1, 0);
    }
    else
    {
      id v8 = v10;
      uint64_t v9 = sub_10005E530();

      swift_willThrow();
      sub_100059644(v9);
      sub_10005C018(a1, 0);
      swift_errorRelease();
    }
  }
}

uint64_t sub_10005A808(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v68 = a3;
  uint64_t v6 = sub_10005E7B0();
  uint64_t v66 = *(void *)(v6 - 8);
  uint64_t v67 = v6;
  __chkstk_darwin(v6);
  char v64 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_10005E7E0();
  uint64_t v63 = *(void *)(v65 - 8);
  __chkstk_darwin(v65);
  uint64_t v62 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10005E7A0();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  id v12 = (uint64_t *)((char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = sub_10005E800();
  uint64_t v60 = *(void *)(v13 - 8);
  uint64_t v61 = v13;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v57 - v17;
  int v19 = *(unsigned __int8 *)(a2 + 1);
  if (v19 == 30)
  {
    uint64_t v20 = *(void *)(a2 + 8);
    uint64_t v21 = *(void *)(a2 + 16);
  }
  else
  {
    if (v19 != 2)
    {
LABEL_18:
      sub_100007F60(0, (unint64_t *)&qword_100084108);
      uint64_t v55 = (uint64_t)sub_10002E6D0(-536870212, 0, 0);
      swift_willThrow();
      goto LABEL_20;
    }
    uint64_t v20 = sub_100058244();
  }
  v71[0] = v20;
  v71[1] = v21;
  sub_100023DEC();
  if (!v22) {
    goto LABEL_18;
  }
  uint64_t v59 = v3;
  id v23 = [self sharedClockManager];
  uint64_t v24 = a1;
  id v25 = v23;
  uint64_t v58 = v24;
  id v26 = [v23 clockWithClockIdentifier:];

  if (!v26) {
    goto LABEL_16;
  }
  self;
  uint64_t v27 = swift_dynamicCastObjCClass();
  if (!v27)
  {

LABEL_16:
    swift_bridgeObjectRelease();
    uint64_t v44 = v68;
    if (v68)
    {
      sub_100007F60(0, (unint64_t *)&qword_100084110);
      uint64_t v57 = sub_10005EC90();
      sub_10005E7F0();
      *id v12 = 100;
      (*(void (**)(void *, void, uint64_t))(v10 + 104))(v12, enum case for DispatchTimeInterval.milliseconds(_:), v9);
      sub_10005E830();
      (*(void (**)(void *, uint64_t))(v10 + 8))(v12, v9);
      uint64_t v45 = v61;
      uint64_t v46 = *(void (**)(char *, uint64_t))(v60 + 8);
      v46(v15, v61);
      Swift::Int v47 = (void *)swift_allocObject();
      uint64_t v48 = v58;
      v47[2] = v59;
      v47[3] = v48;
      memcpy(v47 + 4, (const void *)a2, 0x80uLL);
      v47[20] = v44;
      aBlock[4] = sub_10005C1C0;
      void aBlock[5] = v47;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = (id)1107296256;
      aBlock[2] = sub_10000C5B0;
      void aBlock[3] = &unk_100078F20;
      char v49 = _Block_copy(aBlock);
      swift_retain();
      swift_release();
      uint64_t v50 = v62;
      sub_10005E7D0();
      aBlock[0] = _swiftEmptyArrayStorage;
      sub_1000453F0((unint64_t *)&qword_1000848D0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_100007D1C((uint64_t *)&unk_100083FD0);
      sub_100007E14((unint64_t *)&qword_1000848E0, (uint64_t *)&unk_100083FD0);
      uint64_t v51 = v64;
      uint64_t v52 = v67;
      sub_10005EEE0();
      int v53 = (void *)v57;
      sub_10005EC70();
      _Block_release(v49);

      (*(void (**)(char *, uint64_t))(v66 + 8))(v51, v52);
      (*(void (**)(char *, uint64_t))(v63 + 8))(v50, v65);
      return ((uint64_t (*)(char *, uint64_t))v46)(v18, v45);
    }
    goto LABEL_18;
  }
  uint64_t v28 = (void *)v27;
  LOWORD(v69) = 0;
  NSString v29 = sub_10005E8F0();
  aBlock[0] = 0;
  unsigned int v30 = [v28 addUnicastUDPv6EtEPortOnInterfaceNamed:v29 withDestinationAddress:v71 allocatedPortNumber:&v69 error:aBlock];

  if (v30)
  {
    id v31 = aBlock[0];
    swift_bridgeObjectRelease();
    if (qword_1000857C8 != -1) {
      swift_once();
    }
    uint64_t v32 = sub_10005E750();
    sub_10002A1FC(v32, (uint64_t)qword_1000857E8);
    uint64_t v33 = sub_10005E720();
    os_log_type_t v34 = sub_10005EC50();
    BOOL v35 = os_log_type_enabled(v33, v34);
    uint64_t v36 = v58;
    if (v35)
    {
      uint64_t v37 = swift_slowAlloc();
      aBlock[0] = (id)swift_slowAlloc();
      *(_DWORD *)uint64_t v37 = 136446466;
      uint64_t v38 = sub_1000242E8();
      uint64_t v69 = sub_10000F098((uint64_t)v38, v39, (uint64_t *)aBlock);
      sub_10005EE10();
      swift_bridgeObjectRelease();
      *(_WORD *)(v37 + 12) = 2048;
      uint64_t v69 = v36;
      sub_10005EE10();
      _os_log_impl((void *)&_mh_execute_header, v33, v34, "%{public}s: Allocated %llx", (uint8_t *)v37, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    type metadata accessor for Clock();
    swift_allocObject();
    uint64_t v40 = sub_10005B184(v28);
    uint64_t v41 = v59;
    uint64_t v42 = *(void *)(v59 + 16);
    *(void *)(v59 + 16) = v40;
    unsigned __int8 v43 = *(unsigned char *)(v41 + 24);
    *(unsigned char *)(v41 + 24) = 0;
    sub_100059C10(v42, v43);
    return sub_10005983C();
  }
  id v56 = aBlock[0];
  uint64_t v55 = sub_10005E530();

  swift_willThrow();
  swift_bridgeObjectRelease();
LABEL_20:
  sub_100059644(v55);
  swift_errorRelease();
  return sub_10005983C();
}

uint64_t sub_10005B09C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!__OFSUB__(a4, 1)) {
    return sub_10005A808(a2, a3, a4 - 1);
  }
  __break(1u);
  return result;
}

uint64_t static Clock.nullClockIdentifier.getter()
{
  return TSNullClockIdentifier;
}

uint64_t Clock.__allocating_init(clockIdentifier:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  Clock.init(clockIdentifier:)(a1);
  return v2;
}

uint64_t Clock.init(clockIdentifier:)(uint64_t a1)
{
  uint64_t v2 = TSNullgPTPClockIdentity;
  *(unsigned char *)(v1 + 40) = 0;
  *(void *)(v1 + 48) = 0;
  *(void *)(v1 + 24) = a1;
  *(void *)(v1 + 32) = v2;
  *(void *)(v1 + 16) = [objc_allocWithZone((Class)TSgPTPClock) initWithClockIdentifier:a1];
  return v1;
}

uint64_t sub_10005B184(void *a1)
{
  *(void *)(v1 + 32) = TSNullgPTPClockIdentity;
  *(unsigned char *)(v1 + 40) = 0;
  *(void *)(v1 + 48) = 0;
  id v3 = [a1 clockIdentifier];
  *(void *)(v1 + 16) = a1;
  *(void *)(v1 + 24) = v3;
  return v1;
}

Swift::UInt64 __swiftcall Clock.domainTimeForMachAbsoluteTime(_:)(Swift::UInt64 a1)
{
  uint64_t v3 = TSNullgPTPClockIdentity;
  Swift::UInt64 result = (Swift::UInt64)[*(id *)(v1 + 16) convertFromMachAbsoluteToDomainTime:a1 grandmasterUsed:&v3];
  *(void *)(v1 + 32) = v3;
  return result;
}

Swift::UInt64 __swiftcall Clock.machAbsoluteTimeForDomainTime(_:)(Swift::UInt64 a1)
{
  uint64_t v4 = TSNullgPTPClockIdentity;
  __int16 v3 = 0;
  Swift::UInt64 result = (Swift::UInt64)[*(id *)(v1 + 16) convertFromDomainToMachAbsoluteTime:a1 grandmasterUsed:&v4 portNumber:&v3];
  *(void *)(v1 + 32) = v4;
  return result;
}

uint64_t sub_10005B2C8()
{
  uint64_t result = swift_beginAccess();
  uint64_t v2 = *(void *)(v0 + 48);
  if (*(unsigned char *)(v0 + 40) == 1)
  {
    if (!v2) {
      return sub_10005B31C();
    }
  }
  else if (v2)
  {
    return sub_10005B7C0();
  }
  return result;
}

uint64_t sub_10005B31C()
{
  uint64_t v48 = sub_10005E7A0();
  sub_100008DCC();
  uint64_t v46 = v0;
  __chkstk_darwin(v1);
  uint64_t v45 = (uint64_t *)((char *)&v38 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v3);
  uint64_t v5 = (uint64_t *)((char *)&v38 - v4);
  uint64_t v49 = sub_10005E800();
  sub_100008DCC();
  uint64_t v47 = v6;
  __chkstk_darwin(v7);
  sub_10003FE70();
  uint64_t v44 = v9 - v8;
  sub_10005E7B0();
  sub_100008DCC();
  uint64_t v42 = v11;
  uint64_t v43 = v10;
  __chkstk_darwin(v10);
  sub_10003FE70();
  uint64_t v14 = v13 - v12;
  sub_10005E7E0();
  sub_100008DCC();
  uint64_t v39 = v16;
  uint64_t v40 = v15;
  __chkstk_darwin(v15);
  sub_10003FE70();
  uint64_t v19 = v18 - v17;
  uint64_t v20 = sub_10005ECE0();
  sub_100008DCC();
  uint64_t v22 = v21;
  __chkstk_darwin(v23);
  sub_10003FE70();
  uint64_t v26 = v25 - v24;
  sub_100007F60(0, (unint64_t *)&unk_100084400);
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_1000453F0((unint64_t *)&unk_100084F50, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_source.TimerFlags);
  sub_100007D1C((uint64_t *)&unk_100084410);
  sub_100007E14((unint64_t *)&unk_100084F60, (uint64_t *)&unk_100084410);
  sub_10005EEE0();
  uint64_t v27 = sub_10005ECF0();
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v26, v20);
  swift_getObjectType();
  uint64_t v28 = swift_allocObject();
  uint64_t v29 = v41;
  swift_weakInit();
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = v28;
  *(void *)(v30 + 24) = v27;
  aBlock[4] = sub_10005C118;
  void aBlock[5] = v30;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10000C5B0;
  void aBlock[3] = &unk_100078EA8;
  id v31 = _Block_copy(aBlock);
  swift_retain();
  swift_unknownObjectRetain();
  sub_10005E7D0();
  sub_10003E1A8();
  sub_10005ED20();
  _Block_release(v31);
  (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v14, v43);
  (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v19, v40);
  swift_release();
  swift_release();
  uint64_t v32 = v44;
  sub_10005E7F0();
  void *v5 = 5;
  uint64_t v33 = v46;
  uint64_t v34 = v48;
  (*(void (**)(void *, void, uint64_t))(v46 + 104))(v5, enum case for DispatchTimeInterval.seconds(_:), v48);
  BOOL v35 = v45;
  sub_100016180(v45);
  sub_10005ED90();
  uint64_t v36 = *(void (**)(void *, uint64_t))(v33 + 8);
  v36(v35, v34);
  v36(v5, v34);
  (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v32, v49);
  sub_10005ED60();
  *(void *)(v29 + 48) = v27;
  return swift_unknownObjectRelease();
}

uint64_t sub_10005B7C0()
{
  if (*(void *)(v0 + 48))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_10005ED40();
    swift_unknownObjectRelease();
  }
  *(void *)(v0 + 48) = 0;

  return swift_unknownObjectRelease();
}

uint64_t Clock.heartbeat.getter()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 40);
}

uint64_t Clock.heartbeat.setter(char a1)
{
  swift_beginAccess();
  *(unsigned char *)(v1 + 40) = a1;
  return sub_10005B2C8();
}

uint64_t (*Clock.heartbeat.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_10005B904;
}

uint64_t sub_10005B904(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return sub_10005B2C8();
  }
  return result;
}

void sub_10005B938()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = Strong;
    uint64_t v2 = mach_absolute_time();
    Swift::UInt64 v3 = Clock.domainTimeForMachAbsoluteTime(_:)(v2);
    sub_10005C120(*(void *)(v1 + 32), v2, v3, (int)[*(id *)(v1 + 16) lockState]);
    if (qword_1000857C8 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_10005E750();
    sub_10002A1FC(v4, (uint64_t)qword_1000857E8);
    swift_retain();
    uint64_t v5 = sub_10005E720();
    os_log_type_t v6 = sub_10005EC30();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 134218752;
      sub_10005EE10();
      *(_WORD *)(v7 + 12) = 2048;
      sub_10005EE10();
      swift_release();
      *(_WORD *)(v7 + 22) = 2048;
      sub_10005EE10();
      *(_WORD *)(v7 + 32) = 2048;
      sub_10005EE10();
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "%llx: (%llx) %llu -> %llu", (uint8_t *)v7, 0x2Au);
      swift_slowDealloc();
    }
    else
    {

      swift_release();
    }
    if (v3 == TSInvalidTime)
    {
      swift_getObjectType();
      sub_10005ED40();
    }
    swift_release();
  }
  else
  {
    swift_getObjectType();
    sub_10005ED40();
  }
}

uint64_t Clock.deinit()
{
  swift_unknownObjectRelease();
  return v0;
}

uint64_t Clock.__deallocating_deinit()
{
  Clock.deinit();

  return _swift_deallocClassInstance(v0, 56, 7);
}

char *sub_10005BBD8(uint64_t *a1)
{
  uint64_t v3 = *v1;
  uint64_t result = (char *)swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v1 = v3;
  if (!result)
  {
    uint64_t result = sub_10005BC78(result, *(void *)(v3 + 16) + 1, 1, v3, a1);
    *uint64_t v1 = (uint64_t)result;
  }
  return result;
}

char *sub_10005BC34(char *result, uint64_t *a2)
{
  unint64_t v3 = *(void *)(*v2 + 24);
  if ((uint64_t)(result + 1) > (uint64_t)(v3 >> 1))
  {
    uint64_t result = sub_10005BC78((char *)(v3 > 1), (int64_t)(result + 1), 1, *v2, a2);
    *uint64_t v2 = (uint64_t)result;
  }
  return result;
}

char *sub_10005BC78(char *result, int64_t a2, char a3, uint64_t a4, uint64_t *a5)
{
  char v6 = (char)result;
  if (a3)
  {
    unint64_t v7 = *(void *)(a4 + 24);
    uint64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v8 = a2;
      }
    }
  }
  else
  {
    uint64_t v8 = a2;
  }
  uint64_t v9 = *(void *)(a4 + 16);
  if (v8 <= v9) {
    uint64_t v10 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v10 = v8;
  }
  if (v10)
  {
    sub_100007D1C(a5);
    uint64_t v11 = (char *)swift_allocObject();
    size_t v12 = j__malloc_size(v11);
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 16);
  }
  else
  {
    uint64_t v11 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v11 + 32;
  if (v6)
  {
    sub_10005BE64((char *)(a4 + 32), v9, v13);
    *(void *)(a4 + 16) = 0;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_10005BD64(0, v9, (unint64_t)v13, a4);
  }
  return v11;
}

uint64_t sub_10005BD64(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_100007D1C(&qword_100085218);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  sub_10000C25C();
  uint64_t result = sub_10005F0B0();
  __break(1u);
  return result;
}

char *sub_10005BE64(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    sub_10000C25C();
    __src = (char *)sub_10005F0B0();
    __break(1u);
  }
  else if (__dst != __src || &__src[16 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 16 * a2);
  }
  return __src;
}

uint64_t sub_10005BEEC(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 128)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_10005BF08()
{
  swift_release();
  uint64_t v0 = sub_10001A914();

  return _swift_deallocObject(v0, v1, v2);
}

uint64_t type metadata accessor for TimeSyncManager()
{
  return self;
}

uint64_t type metadata accessor for Domain()
{
  return self;
}

uint64_t type metadata accessor for Clock()
{
  return self;
}

uint64_t sub_10005BFA8()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_10005BFE0()
{
  sub_100059594(*(void *)(v0 + 16));
}

uint64_t sub_10005BFE8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10005BFF8()
{
  return swift_release();
}

void sub_10005C000(void *a1, unsigned __int8 a2)
{
  if (a2 != 255) {
    sub_10005C018(a1, a2 & 1);
  }
}

void sub_10005C018(void *a1, char a2)
{
  if (a2) {
    swift_errorRelease();
  }
  else {
}
  }

void sub_10005C024()
{
  sub_100058934(*(void **)(v0 + 16));
}

void sub_10005C02C()
{
}

uint64_t sub_10005C034()
{
  sub_10005C018(*(void **)(v0 + 24), *(unsigned char *)(v0 + 32));

  return _swift_deallocObject(v0, 33, 7);
}

BOOL sub_10005C078()
{
  return sub_100059118(*(void *)(v0 + 16), *(void **)(v0 + 24), *(unsigned char *)(v0 + 32));
}

id sub_10005C084(void *a1, char a2)
{
  if (a2) {
    return (id)swift_errorRetain();
  }
  else {
    return a1;
  }
}

id sub_10005C090(id result, unsigned __int8 a2)
{
  if (a2 != 255) {
    return sub_10005C084(result, a2 & 1);
  }
  return result;
}

uint64_t sub_10005C0A8()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10005C0E0()
{
  swift_release();
  swift_unknownObjectRelease();
  uint64_t v0 = sub_10001A914();

  return _swift_deallocObject(v0, v1, v2);
}

void sub_10005C118()
{
}

uint64_t sub_10005C120(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return _kdebug_trace(553976352, a1, a2, a3, a4);
}

uint64_t sub_10005C140()
{
  swift_release();

  return _swift_deallocObject(v0, 152, 7);
}

void sub_10005C178(void *a1, char a2)
{
  sub_10005A6AC(a1, a2 & 1, *(void *)(v2 + 16), v2 + 24);
}

uint64_t sub_10005C188()
{
  swift_release();

  return _swift_deallocObject(v0, 168, 7);
}

uint64_t sub_10005C1C0()
{
  return sub_10005B09C(v0[2], v0[3], (uint64_t)(v0 + 4), v0[20]);
}

uint64_t sub_10005C1D0()
{
  return sub_1000583A4();
}

uint64_t sub_10005C1D8(uint64_t result, unsigned __int8 a2)
{
  if (a2 != 255) {
    return sub_100059F24(result, a2 & 1);
  }
  return result;
}

uint64_t sub_10005C1F0(uint64_t result)
{
  *(unsigned char *)(result + 128) = 0;
  return result;
}

uint64_t sub_10005C1F8(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(v1 + 16))(*(void *)a1, *(unsigned __int8 *)(a1 + 8));
}

void SidecarPowerLogDisplaySession(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v13[0] = @"IsConnected";
  uint64_t v5 = +[NSNumber numberWithInt:a1];
  unint64_t v6 = (void *)v5;
  unint64_t v7 = &stru_100079100;
  if (a2 == 1) {
    unint64_t v7 = @"HEVC";
  }
  if (!a2) {
    unint64_t v7 = @"H.264";
  }
  v14[0] = v5;
  v14[1] = v7;
  v13[1] = @"Codec";
  v13[2] = @"Transport";
  uint64_t v8 = 1;
  if (a3 != 2) {
    uint64_t v8 = -1;
  }
  if (a3 == 1) {
    uint64_t v9 = 0;
  }
  else {
    uint64_t v9 = v8;
  }
  uint64_t v10 = v7;
  uint64_t v11 = +[NSNumber numberWithInteger:v9];
  v14[2] = v11;
  size_t v12 = +[NSDictionary dictionaryWithObjects:v14 forKeys:v13 count:3];

  PLLogRegisteredEvent();
}

CFDataRef sub_10005C3A8()
{
  io_registry_entry_t v0 = IORegistryEntryFromPath(kIOMainPortDefault, "IOService:/");
  uint64_t v1 = @"model";
  if (!v0)
  {
    CFPropertCGFloat y = 0;
    goto LABEL_10;
  }
  CFPropertCGFloat y = (const __CFData *)IORegistryEntryCreateCFProperty(v0, @"model", 0, 0);
  IOObjectRelease(v0);
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass()) {
      goto LABEL_10;
    }
    CFStringRef v5 = 0;
    goto LABEL_9;
  }
  BytePtr = CFDataGetBytePtr(CFProperty);
  if (BytePtr)
  {
    uint64_t v4 = (const char *)BytePtr;
    if (CFDataGetLength(CFProperty) >= 1)
    {
      CFStringRef v5 = CFStringCreateWithCString(0, v4, 0);
LABEL_9:

      CFPropertCGFloat y = (const __CFData *)v5;
    }
  }
LABEL_10:

  return CFProperty;
}

__CFString *sub_10005C4B8()
{
  size_t v3 = 64;
  if (sysctlbyname("kern.osversion", __s1, &v3, 0, 0)) {
    BOOL v0 = 1;
  }
  else {
    BOOL v0 = v3 == 0;
  }
  if (v0)
  {
    uint64_t v1 = &stru_100079100;
  }
  else
  {
    size_t v3 = strnlen(__s1, 0x40uLL);
    uint64_t v1 = (__CFString *)CFStringCreateWithBytes(0, (const UInt8 *)__s1, v3, 0, 0);
  }

  return v1;
}

void sub_10005C578(uint64_t a1)
{
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }

  operator delete();
}

void sub_10005C5CC()
{
}

void sub_10005C5DC()
{
  exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  sub_10005C630(exception);
}

void sub_10005C61C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::logic_error *sub_10005C630(std::logic_error *a1)
{
  uint64_t result = std::logic_error::logic_error(a1, "basic_string");
  return result;
}

void sub_10005C66C(id a1)
{
  qword_100088F28 = (uint64_t)os_log_create("com.apple.sidecar", "awd");

  _objc_release_x1();
}

void SidecarAWDLogSidebarUsageSummary(void *a1, unint64_t a2, uint64_t *a3, double a4)
{
  id v7 = a1;
  uint64_t v33 = off_100078FC0;
  uint64_t v43 = 0;
  uint64_t v49 = 0;
  sub_10005C9FC((uint64_t)&v33);
  id v8 = [v7 UUIDString];
  uint64_t v9 = (const char *)[v8 UTF8String];
  size_t v10 = strlen(v9);
  if (v10 >= 0x7FFFFFFFFFFFFFF8) {
    sub_10005C5CC();
  }
  size_t v11 = v10;
  if (v10 >= 0x17)
  {
    uint64_t v13 = (v10 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v10 | 7) != 0x17) {
      uint64_t v13 = v10 | 7;
    }
    uint64_t v14 = v13 + 1;
    size_t v12 = operator new(v13 + 1);
    *(void *)&__dst[8] = v11;
    *(void *)&__dst[16] = v14 | 0x8000000000000000;
    *(void *)__dst = v12;
    goto LABEL_8;
  }
  __dst[23] = v10;
  size_t v12 = __dst;
  if (v10) {
LABEL_8:
  }
    memmove(v12, v9, v11);
  v12[v11] = 0;
  sub_10005C9FC((uint64_t)&v33);
  uint64_t v15 = v43;
  if (*(char *)(v43 + 23) < 0) {
    operator delete(*(void **)v43);
  }
  *(_OWORD *)uint64_t v15 = *(_OWORD *)__dst;
  *(void *)(v15 + 16) = *(void *)&__dst[16];
  __dst[0] = 0;

  unint64_t v37 = vcvtpd_u64_f64(a4 * 1000.0);
  if (a2 >= 3)
  {
    int v16 = HIDWORD(v49) | 0x20;
  }
  else
  {
    int v16 = HIDWORD(v49) | 0x80020;
    LODWORD(v49) = a2;
  }
  long long v17 = *((_OWORD *)a3 + 3);
  long long v34 = *((_OWORD *)a3 + 2);
  long long v41 = v17;
  long long v18 = *((_OWORD *)a3 + 5);
  long long v35 = *((_OWORD *)a3 + 4);
  uint64_t v19 = *a3;
  uint64_t v20 = a3[1];
  uint64_t v21 = a3[13];
  uint64_t v42 = a3[12];
  uint64_t v22 = a3[2];
  uint64_t v23 = a3[3];
  uint64_t v47 = v19;
  uint64_t v48 = v21;
  uint64_t v24 = a3[14];
  uint64_t v25 = a3[15];
  uint64_t v45 = v22;
  uint64_t v46 = v24;
  long long v44 = v18;
  uint64_t v39 = v25;
  uint64_t v40 = v20;
  uint64_t v26 = a3[16];
  HIDWORD(v49) = v16 | 0x5FFDF;
  uint64_t v38 = v23;
  uint64_t v36 = v26;
  AWDPostMetric();
  if (qword_100088F20 != -1) {
    dispatch_once(&qword_100088F20, &stru_100078F90);
  }
  uint64_t v27 = qword_100088F28;
  if (os_log_type_enabled((os_log_t)qword_100088F28, OS_LOG_TYPE_DEBUG)) {
    uint64_t v28 = (void *)v27;
  }
  else {
    uint64_t v28 = 0;
  }
  uint64_t v29 = v28;
  uint64_t v30 = v29;
  if (v29)
  {
    uint64_t v31 = 0;
    uint64_t v32 = 0;
    do
      v32 += a3[v31++];
    while (v31 != 17);
    if (os_log_type_enabled(v29, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)__dst = 138544130;
      *(void *)&__dst[4] = v7;
      *(_WORD *)&__dst[12] = 2048;
      *(void *)&__dst[14] = a2;
      *(_WORD *)&__dst[22] = 2048;
      double v51 = a4;
      __int16 v52 = 2048;
      uint64_t v53 = v32;
      _os_log_impl((void *)&_mh_execute_header, v30, OS_LOG_TYPE_DEBUG, "AWDSidecarDisplaySidebarUsage: {\n  uuid: %{public}@\n  position: %ld\n  duration: %.3f\n  buttons: %ld\n}", __dst, 0x2Au);
    }
  }

  sub_10005E3EC((PB::Base *)&v33);
}

void sub_10005C9B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  if (*(char *)(v11 - 137) < 0) {
    operator delete(*(void **)(v11 - 160));
  }

  sub_10005E3EC((PB::Base *)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_10005C9FC(uint64_t result)
{
  if (!*(void *)(result + 104)) {
    operator new();
  }
  return result;
}

uint64_t sub_10005CA70(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  int v5 = *(_DWORD *)(a1 + 172);
  if (v5)
  {
    PB::TextFormatter::format(this, "commandKey", *(void *)(a1 + 8));
    int v5 = *(_DWORD *)(a1 + 172);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_30;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "commandKeySticky", *(void *)(a1 + 16));
  int v5 = *(_DWORD *)(a1 + 172);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_31;
  }
LABEL_30:
  PB::TextFormatter::format(this, "controlKey", *(void *)(a1 + 24));
  int v5 = *(_DWORD *)(a1 + 172);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_32;
  }
LABEL_31:
  PB::TextFormatter::format(this, "controlKeySticky", *(void *)(a1 + 32));
  int v5 = *(_DWORD *)(a1 + 172);
  if ((v5 & 0x10) == 0)
  {
LABEL_6:
    if ((v5 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_33;
  }
LABEL_32:
  PB::TextFormatter::format(this, "disconnect", *(void *)(a1 + 40));
  int v5 = *(_DWORD *)(a1 + 172);
  if ((v5 & 0x20) == 0)
  {
LABEL_7:
    if ((v5 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_34;
  }
LABEL_33:
  PB::TextFormatter::format(this, "durationMillis", *(void *)(a1 + 48));
  int v5 = *(_DWORD *)(a1 + 172);
  if ((v5 & 0x40) == 0)
  {
LABEL_8:
    if ((v5 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_35;
  }
LABEL_34:
  PB::TextFormatter::format(this, "hideDock", *(void *)(a1 + 56));
  int v5 = *(_DWORD *)(a1 + 172);
  if ((v5 & 0x80) == 0)
  {
LABEL_9:
    if ((v5 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_36;
  }
LABEL_35:
  PB::TextFormatter::format(this, "hideKeyboard", *(void *)(a1 + 64));
  int v5 = *(_DWORD *)(a1 + 172);
  if ((v5 & 0x100) == 0)
  {
LABEL_10:
    if ((v5 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_37;
  }
LABEL_36:
  PB::TextFormatter::format(this, "hideMenuBar", *(void *)(a1 + 72));
  int v5 = *(_DWORD *)(a1 + 172);
  if ((v5 & 0x200) == 0)
  {
LABEL_11:
    if ((v5 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_38;
  }
LABEL_37:
  PB::TextFormatter::format(this, "optionKey", *(void *)(a1 + 80));
  int v5 = *(_DWORD *)(a1 + 172);
  if ((v5 & 0x400) == 0)
  {
LABEL_12:
    if ((v5 & 0x80000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_39;
  }
LABEL_38:
  PB::TextFormatter::format(this, "optionKeySticky", *(void *)(a1 + 88));
  int v5 = *(_DWORD *)(a1 + 172);
  if ((v5 & 0x80000) == 0)
  {
LABEL_13:
    if ((v5 & 0x800) == 0) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }
LABEL_39:
  PB::TextFormatter::format(this, "position", *(_DWORD *)(a1 + 168));
  if ((*(_DWORD *)(a1 + 172) & 0x800) != 0) {
LABEL_14:
  }
    PB::TextFormatter::format(this, "redo", *(void *)(a1 + 96));
LABEL_15:
  if (*(void *)(a1 + 104)) {
    PB::TextFormatter::format();
  }
  int v6 = *(_DWORD *)(a1 + 172);
  if ((v6 & 0x1000) != 0)
  {
    PB::TextFormatter::format(this, "shiftKey", *(void *)(a1 + 112));
    int v6 = *(_DWORD *)(a1 + 172);
    if ((v6 & 0x2000) == 0)
    {
LABEL_19:
      if ((v6 & 0x4000) == 0) {
        goto LABEL_20;
      }
      goto LABEL_43;
    }
  }
  else if ((v6 & 0x2000) == 0)
  {
    goto LABEL_19;
  }
  PB::TextFormatter::format(this, "shiftKeySticky", *(void *)(a1 + 120));
  int v6 = *(_DWORD *)(a1 + 172);
  if ((v6 & 0x4000) == 0)
  {
LABEL_20:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_44;
  }
LABEL_43:
  PB::TextFormatter::format(this, "showDock", *(void *)(a1 + 128));
  int v6 = *(_DWORD *)(a1 + 172);
  if ((v6 & 0x8000) == 0)
  {
LABEL_21:
    if ((v6 & 0x10000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_45;
  }
LABEL_44:
  PB::TextFormatter::format(this, "showKeyboard", *(void *)(a1 + 136));
  int v6 = *(_DWORD *)(a1 + 172);
  if ((v6 & 0x10000) == 0)
  {
LABEL_22:
    if ((v6 & 0x20000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_46;
  }
LABEL_45:
  PB::TextFormatter::format(this, "showMenuBar", *(void *)(a1 + 144));
  int v6 = *(_DWORD *)(a1 + 172);
  if ((v6 & 0x20000) == 0)
  {
LABEL_23:
    if ((v6 & 0x40000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_24;
  }
LABEL_46:
  PB::TextFormatter::format(this, "timestamp", *(void *)(a1 + 152));
  if ((*(_DWORD *)(a1 + 172) & 0x40000) != 0) {
LABEL_24:
  }
    PB::TextFormatter::format(this, "undo", *(void *)(a1 + 160));
LABEL_25:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_10005CD4C(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  if ((*(unsigned char *)(result + 174) & 2) != 0) {
    uint64_t result = PB::Writer::writeVarInt(this, *(void *)(result + 152), 1u);
  }
  if (*(void *)(v3 + 104)) {
    uint64_t result = PB::Writer::write();
  }
  int v4 = *(_DWORD *)(v3 + 172);
  if ((v4 & 0x20) != 0)
  {
    uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 48), 3u);
    int v4 = *(_DWORD *)(v3 + 172);
    if ((v4 & 0x80000) == 0)
    {
LABEL_7:
      if ((v4 & 0x10000) == 0) {
        goto LABEL_8;
      }
      goto LABEL_27;
    }
  }
  else if ((v4 & 0x80000) == 0)
  {
    goto LABEL_7;
  }
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 168), 4u);
  int v4 = *(_DWORD *)(v3 + 172);
  if ((v4 & 0x10000) == 0)
  {
LABEL_8:
    if ((v4 & 0x100) == 0) {
      goto LABEL_9;
    }
    goto LABEL_28;
  }
LABEL_27:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 144), 0xAu);
  int v4 = *(_DWORD *)(v3 + 172);
  if ((v4 & 0x100) == 0)
  {
LABEL_9:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_29;
  }
LABEL_28:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 72), 0xBu);
  int v4 = *(_DWORD *)(v3 + 172);
  if ((v4 & 0x4000) == 0)
  {
LABEL_10:
    if ((v4 & 0x40) == 0) {
      goto LABEL_11;
    }
    goto LABEL_30;
  }
LABEL_29:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 128), 0xCu);
  int v4 = *(_DWORD *)(v3 + 172);
  if ((v4 & 0x40) == 0)
  {
LABEL_11:
    if ((v4 & 1) == 0) {
      goto LABEL_12;
    }
    goto LABEL_31;
  }
LABEL_30:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 56), 0xDu);
  int v4 = *(_DWORD *)(v3 + 172);
  if ((v4 & 1) == 0)
  {
LABEL_12:
    if ((v4 & 2) == 0) {
      goto LABEL_13;
    }
    goto LABEL_32;
  }
LABEL_31:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 8), 0xEu);
  int v4 = *(_DWORD *)(v3 + 172);
  if ((v4 & 2) == 0)
  {
LABEL_13:
    if ((v4 & 0x200) == 0) {
      goto LABEL_14;
    }
    goto LABEL_33;
  }
LABEL_32:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 16), 0xFu);
  int v4 = *(_DWORD *)(v3 + 172);
  if ((v4 & 0x200) == 0)
  {
LABEL_14:
    if ((v4 & 0x400) == 0) {
      goto LABEL_15;
    }
    goto LABEL_34;
  }
LABEL_33:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 80), 0x10u);
  int v4 = *(_DWORD *)(v3 + 172);
  if ((v4 & 0x400) == 0)
  {
LABEL_15:
    if ((v4 & 4) == 0) {
      goto LABEL_16;
    }
    goto LABEL_35;
  }
LABEL_34:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 88), 0x11u);
  int v4 = *(_DWORD *)(v3 + 172);
  if ((v4 & 4) == 0)
  {
LABEL_16:
    if ((v4 & 8) == 0) {
      goto LABEL_17;
    }
    goto LABEL_36;
  }
LABEL_35:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 24), 0x12u);
  int v4 = *(_DWORD *)(v3 + 172);
  if ((v4 & 8) == 0)
  {
LABEL_17:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_37;
  }
LABEL_36:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 32), 0x13u);
  int v4 = *(_DWORD *)(v3 + 172);
  if ((v4 & 0x1000) == 0)
  {
LABEL_18:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_38;
  }
LABEL_37:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 112), 0x14u);
  int v4 = *(_DWORD *)(v3 + 172);
  if ((v4 & 0x2000) == 0)
  {
LABEL_19:
    if ((v4 & 0x800) == 0) {
      goto LABEL_20;
    }
    goto LABEL_39;
  }
LABEL_38:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 120), 0x15u);
  int v4 = *(_DWORD *)(v3 + 172);
  if ((v4 & 0x800) == 0)
  {
LABEL_20:
    if ((v4 & 0x40000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_40;
  }
LABEL_39:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 96), 0x16u);
  int v4 = *(_DWORD *)(v3 + 172);
  if ((v4 & 0x40000) == 0)
  {
LABEL_21:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_41;
  }
LABEL_40:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 160), 0x17u);
  int v4 = *(_DWORD *)(v3 + 172);
  if ((v4 & 0x8000) == 0)
  {
LABEL_22:
    if ((v4 & 0x80) == 0) {
      goto LABEL_23;
    }
LABEL_42:
    uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 64), 0x19u);
    if ((*(_DWORD *)(v3 + 172) & 0x10) == 0) {
      return result;
    }
    goto LABEL_43;
  }
LABEL_41:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 136), 0x18u);
  int v4 = *(_DWORD *)(v3 + 172);
  if ((v4 & 0x80) != 0) {
    goto LABEL_42;
  }
LABEL_23:
  if ((v4 & 0x10) == 0) {
    return result;
  }
LABEL_43:
  unint64_t v5 = *(void *)(v3 + 40);

  return PB::Writer::writeVarInt(this, v5, 0x1Au);
}

uint64_t sub_10005CFC4(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 >= v3 || v4 != 0) {
    return v4 == 0;
  }
  while (1)
  {
    uint64_t v8 = *(void *)this;
    if (v2 <= 0xFFFFFFFFFFFFFFF5 && v2 + 10 <= v3) {
      break;
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    do
    {
      if (v3 == v2)
      {
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
        return v4 == 0;
      }
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_26;
      }
      v15 += 7;
      unint64_t v2 = v17;
      BOOL v14 = v16++ > 8;
    }
    while (!v14);
LABEL_19:
    unsigned __int8 v19 = 0;
    LODWORD(v20) = 0;
LABEL_20:
    uint64_t result = PB::Reader::skip(this, v20, v19, 0);
    if (!result) {
      return result;
    }
LABEL_21:
    unint64_t v2 = *((void *)this + 1);
    unint64_t v3 = *((void *)this + 2);
    int v4 = *((unsigned __int8 *)this + 24);
    if (v2 >= v3 || v4 != 0) {
      return v4 == 0;
    }
  }
  char v9 = 0;
  unsigned int v10 = 0;
  unint64_t v11 = 0;
  while (1)
  {
    unint64_t v12 = v2 + 1;
    *((void *)this + 1) = v2 + 1;
    char v13 = *(unsigned char *)(v8 + v2);
    v11 |= (unint64_t)(v13 & 0x7F) << v9;
    if ((v13 & 0x80) == 0) {
      break;
    }
    v9 += 7;
    unint64_t v2 = v12;
    BOOL v14 = v10++ > 8;
    if (v14) {
      goto LABEL_19;
    }
  }
LABEL_26:
  unsigned __int8 v19 = v11 & 7;
  if ((v11 & 7) != 4)
  {
    unint64_t v20 = v11 >> 3;
    switch((v11 >> 3))
    {
      case 1u:
        *(_DWORD *)(a1 + 172) |= 0x20000u;
        unint64_t v23 = *((void *)this + 1);
        unint64_t v24 = *((void *)this + 2);
        uint64_t v25 = *(void *)this;
        if (v23 <= 0xFFFFFFFFFFFFFFF5 && v23 + 10 <= v24)
        {
          char v26 = 0;
          unsigned int v27 = 0;
          uint64_t v28 = 0;
          do
          {
            unint64_t v29 = v23 + 1;
            *((void *)this + 1) = v23 + 1;
            char v30 = *(unsigned char *)(v25 + v23);
            v28 |= (unint64_t)(v30 & 0x7F) << v26;
            if ((v30 & 0x80) == 0) {
              goto LABEL_312;
            }
            v26 += 7;
            unint64_t v23 = v29;
            BOOL v14 = v27++ > 8;
          }
          while (!v14);
LABEL_175:
          uint64_t v28 = 0;
          goto LABEL_312;
        }
        char v183 = 0;
        unsigned int v184 = 0;
        uint64_t v28 = 0;
        if (v24 <= v23) {
          unint64_t v24 = *((void *)this + 1);
        }
        while (2)
        {
          if (v24 == v23)
          {
            uint64_t v28 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v185 = v23 + 1;
            char v186 = *(unsigned char *)(v25 + v23);
            *((void *)this + 1) = v185;
            v28 |= (unint64_t)(v186 & 0x7F) << v183;
            if (v186 < 0)
            {
              v183 += 7;
              unint64_t v23 = v185;
              BOOL v14 = v184++ > 8;
              if (v14) {
                goto LABEL_175;
              }
              continue;
            }
            if (*((unsigned char *)this + 24)) {
              uint64_t v28 = 0;
            }
          }
          break;
        }
LABEL_312:
        *(void *)(a1 + 152) = v28;
        goto LABEL_21;
      case 2u:
        operator new();
      case 3u:
        *(_DWORD *)(a1 + 172) |= 0x20u;
        unint64_t v31 = *((void *)this + 1);
        unint64_t v32 = *((void *)this + 2);
        uint64_t v33 = *(void *)this;
        if (v31 <= 0xFFFFFFFFFFFFFFF5 && v31 + 10 <= v32)
        {
          char v34 = 0;
          unsigned int v35 = 0;
          uint64_t v36 = 0;
          do
          {
            unint64_t v37 = v31 + 1;
            *((void *)this + 1) = v31 + 1;
            char v38 = *(unsigned char *)(v33 + v31);
            v36 |= (unint64_t)(v38 & 0x7F) << v34;
            if ((v38 & 0x80) == 0) {
              goto LABEL_316;
            }
            v34 += 7;
            unint64_t v31 = v37;
            BOOL v14 = v35++ > 8;
          }
          while (!v14);
LABEL_182:
          uint64_t v36 = 0;
          goto LABEL_316;
        }
        char v187 = 0;
        unsigned int v188 = 0;
        uint64_t v36 = 0;
        if (v32 <= v31) {
          unint64_t v32 = *((void *)this + 1);
        }
        while (2)
        {
          if (v32 == v31)
          {
            uint64_t v36 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v189 = v31 + 1;
            char v190 = *(unsigned char *)(v33 + v31);
            *((void *)this + 1) = v189;
            v36 |= (unint64_t)(v190 & 0x7F) << v187;
            if (v190 < 0)
            {
              v187 += 7;
              unint64_t v31 = v189;
              BOOL v14 = v188++ > 8;
              if (v14) {
                goto LABEL_182;
              }
              continue;
            }
            if (*((unsigned char *)this + 24)) {
              uint64_t v36 = 0;
            }
          }
          break;
        }
LABEL_316:
        *(void *)(a1 + 48) = v36;
        goto LABEL_21;
      case 4u:
        *(_DWORD *)(a1 + 172) |= 0x80000u;
        unint64_t v39 = *((void *)this + 1);
        unint64_t v40 = *((void *)this + 2);
        uint64_t v41 = *(void *)this;
        if (v39 <= 0xFFFFFFFFFFFFFFF5 && v39 + 10 <= v40)
        {
          char v42 = 0;
          unsigned int v43 = 0;
          uint64_t v44 = 0;
          do
          {
            unint64_t v45 = v39 + 1;
            *((void *)this + 1) = v39 + 1;
            char v46 = *(unsigned char *)(v41 + v39);
            v44 |= (unint64_t)(v46 & 0x7F) << v42;
            if ((v46 & 0x80) == 0) {
              goto LABEL_320;
            }
            v42 += 7;
            unint64_t v39 = v45;
            BOOL v14 = v43++ > 8;
          }
          while (!v14);
LABEL_189:
          LODWORD(v44) = 0;
          goto LABEL_320;
        }
        char v191 = 0;
        unsigned int v192 = 0;
        uint64_t v44 = 0;
        if (v40 <= v39) {
          unint64_t v40 = *((void *)this + 1);
        }
        while (2)
        {
          if (v40 == v39)
          {
            LODWORD(v44) = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v193 = v39 + 1;
            char v194 = *(unsigned char *)(v41 + v39);
            *((void *)this + 1) = v193;
            v44 |= (unint64_t)(v194 & 0x7F) << v191;
            if (v194 < 0)
            {
              v191 += 7;
              unint64_t v39 = v193;
              BOOL v14 = v192++ > 8;
              if (v14) {
                goto LABEL_189;
              }
              continue;
            }
            if (*((unsigned char *)this + 24)) {
              LODWORD(v44) = 0;
            }
          }
          break;
        }
LABEL_320:
        *(_DWORD *)(a1 + 168) = v44;
        goto LABEL_21;
      case 0xAu:
        *(_DWORD *)(a1 + 172) |= 0x10000u;
        unint64_t v47 = *((void *)this + 1);
        unint64_t v48 = *((void *)this + 2);
        uint64_t v49 = *(void *)this;
        if (v47 <= 0xFFFFFFFFFFFFFFF5 && v47 + 10 <= v48)
        {
          char v50 = 0;
          unsigned int v51 = 0;
          uint64_t v52 = 0;
          do
          {
            unint64_t v53 = v47 + 1;
            *((void *)this + 1) = v47 + 1;
            char v54 = *(unsigned char *)(v49 + v47);
            v52 |= (unint64_t)(v54 & 0x7F) << v50;
            if ((v54 & 0x80) == 0) {
              goto LABEL_324;
            }
            v50 += 7;
            unint64_t v47 = v53;
            BOOL v14 = v51++ > 8;
          }
          while (!v14);
LABEL_196:
          uint64_t v52 = 0;
          goto LABEL_324;
        }
        char v195 = 0;
        unsigned int v196 = 0;
        uint64_t v52 = 0;
        if (v48 <= v47) {
          unint64_t v48 = *((void *)this + 1);
        }
        while (2)
        {
          if (v48 == v47)
          {
            uint64_t v52 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v197 = v47 + 1;
            char v198 = *(unsigned char *)(v49 + v47);
            *((void *)this + 1) = v197;
            v52 |= (unint64_t)(v198 & 0x7F) << v195;
            if (v198 < 0)
            {
              v195 += 7;
              unint64_t v47 = v197;
              BOOL v14 = v196++ > 8;
              if (v14) {
                goto LABEL_196;
              }
              continue;
            }
            if (*((unsigned char *)this + 24)) {
              uint64_t v52 = 0;
            }
          }
          break;
        }
LABEL_324:
        *(void *)(a1 + 144) = v52;
        goto LABEL_21;
      case 0xBu:
        *(_DWORD *)(a1 + 172) |= 0x100u;
        unint64_t v55 = *((void *)this + 1);
        unint64_t v56 = *((void *)this + 2);
        uint64_t v57 = *(void *)this;
        if (v55 <= 0xFFFFFFFFFFFFFFF5 && v55 + 10 <= v56)
        {
          char v58 = 0;
          unsigned int v59 = 0;
          uint64_t v60 = 0;
          do
          {
            unint64_t v61 = v55 + 1;
            *((void *)this + 1) = v55 + 1;
            char v62 = *(unsigned char *)(v57 + v55);
            v60 |= (unint64_t)(v62 & 0x7F) << v58;
            if ((v62 & 0x80) == 0) {
              goto LABEL_328;
            }
            v58 += 7;
            unint64_t v55 = v61;
            BOOL v14 = v59++ > 8;
          }
          while (!v14);
LABEL_203:
          uint64_t v60 = 0;
          goto LABEL_328;
        }
        char v199 = 0;
        unsigned int v200 = 0;
        uint64_t v60 = 0;
        if (v56 <= v55) {
          unint64_t v56 = *((void *)this + 1);
        }
        while (2)
        {
          if (v56 == v55)
          {
            uint64_t v60 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v201 = v55 + 1;
            char v202 = *(unsigned char *)(v57 + v55);
            *((void *)this + 1) = v201;
            v60 |= (unint64_t)(v202 & 0x7F) << v199;
            if (v202 < 0)
            {
              v199 += 7;
              unint64_t v55 = v201;
              BOOL v14 = v200++ > 8;
              if (v14) {
                goto LABEL_203;
              }
              continue;
            }
            if (*((unsigned char *)this + 24)) {
              uint64_t v60 = 0;
            }
          }
          break;
        }
LABEL_328:
        *(void *)(a1 + 72) = v60;
        goto LABEL_21;
      case 0xCu:
        *(_DWORD *)(a1 + 172) |= 0x4000u;
        unint64_t v63 = *((void *)this + 1);
        unint64_t v64 = *((void *)this + 2);
        uint64_t v65 = *(void *)this;
        if (v63 <= 0xFFFFFFFFFFFFFFF5 && v63 + 10 <= v64)
        {
          char v66 = 0;
          unsigned int v67 = 0;
          uint64_t v68 = 0;
          do
          {
            unint64_t v69 = v63 + 1;
            *((void *)this + 1) = v63 + 1;
            char v70 = *(unsigned char *)(v65 + v63);
            v68 |= (unint64_t)(v70 & 0x7F) << v66;
            if ((v70 & 0x80) == 0) {
              goto LABEL_332;
            }
            v66 += 7;
            unint64_t v63 = v69;
            BOOL v14 = v67++ > 8;
          }
          while (!v14);
LABEL_210:
          uint64_t v68 = 0;
          goto LABEL_332;
        }
        char v203 = 0;
        unsigned int v204 = 0;
        uint64_t v68 = 0;
        if (v64 <= v63) {
          unint64_t v64 = *((void *)this + 1);
        }
        while (2)
        {
          if (v64 == v63)
          {
            uint64_t v68 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v205 = v63 + 1;
            char v206 = *(unsigned char *)(v65 + v63);
            *((void *)this + 1) = v205;
            v68 |= (unint64_t)(v206 & 0x7F) << v203;
            if (v206 < 0)
            {
              v203 += 7;
              unint64_t v63 = v205;
              BOOL v14 = v204++ > 8;
              if (v14) {
                goto LABEL_210;
              }
              continue;
            }
            if (*((unsigned char *)this + 24)) {
              uint64_t v68 = 0;
            }
          }
          break;
        }
LABEL_332:
        *(void *)(a1 + 128) = v68;
        goto LABEL_21;
      case 0xDu:
        *(_DWORD *)(a1 + 172) |= 0x40u;
        unint64_t v71 = *((void *)this + 1);
        unint64_t v72 = *((void *)this + 2);
        uint64_t v73 = *(void *)this;
        if (v71 <= 0xFFFFFFFFFFFFFFF5 && v71 + 10 <= v72)
        {
          char v74 = 0;
          unsigned int v75 = 0;
          uint64_t v76 = 0;
          do
          {
            unint64_t v77 = v71 + 1;
            *((void *)this + 1) = v71 + 1;
            char v78 = *(unsigned char *)(v73 + v71);
            v76 |= (unint64_t)(v78 & 0x7F) << v74;
            if ((v78 & 0x80) == 0) {
              goto LABEL_336;
            }
            v74 += 7;
            unint64_t v71 = v77;
            BOOL v14 = v75++ > 8;
          }
          while (!v14);
LABEL_217:
          uint64_t v76 = 0;
          goto LABEL_336;
        }
        char v207 = 0;
        unsigned int v208 = 0;
        uint64_t v76 = 0;
        if (v72 <= v71) {
          unint64_t v72 = *((void *)this + 1);
        }
        while (2)
        {
          if (v72 == v71)
          {
            uint64_t v76 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v209 = v71 + 1;
            char v210 = *(unsigned char *)(v73 + v71);
            *((void *)this + 1) = v209;
            v76 |= (unint64_t)(v210 & 0x7F) << v207;
            if (v210 < 0)
            {
              v207 += 7;
              unint64_t v71 = v209;
              BOOL v14 = v208++ > 8;
              if (v14) {
                goto LABEL_217;
              }
              continue;
            }
            if (*((unsigned char *)this + 24)) {
              uint64_t v76 = 0;
            }
          }
          break;
        }
LABEL_336:
        *(void *)(a1 + 56) = v76;
        goto LABEL_21;
      case 0xEu:
        *(_DWORD *)(a1 + 172) |= 1u;
        unint64_t v79 = *((void *)this + 1);
        unint64_t v80 = *((void *)this + 2);
        uint64_t v81 = *(void *)this;
        if (v79 <= 0xFFFFFFFFFFFFFFF5 && v79 + 10 <= v80)
        {
          char v82 = 0;
          unsigned int v83 = 0;
          uint64_t v84 = 0;
          do
          {
            unint64_t v85 = v79 + 1;
            *((void *)this + 1) = v79 + 1;
            char v86 = *(unsigned char *)(v81 + v79);
            v84 |= (unint64_t)(v86 & 0x7F) << v82;
            if ((v86 & 0x80) == 0) {
              goto LABEL_340;
            }
            v82 += 7;
            unint64_t v79 = v85;
            BOOL v14 = v83++ > 8;
          }
          while (!v14);
LABEL_224:
          uint64_t v84 = 0;
          goto LABEL_340;
        }
        char v211 = 0;
        unsigned int v212 = 0;
        uint64_t v84 = 0;
        if (v80 <= v79) {
          unint64_t v80 = *((void *)this + 1);
        }
        while (2)
        {
          if (v80 == v79)
          {
            uint64_t v84 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v213 = v79 + 1;
            char v214 = *(unsigned char *)(v81 + v79);
            *((void *)this + 1) = v213;
            v84 |= (unint64_t)(v214 & 0x7F) << v211;
            if (v214 < 0)
            {
              v211 += 7;
              unint64_t v79 = v213;
              BOOL v14 = v212++ > 8;
              if (v14) {
                goto LABEL_224;
              }
              continue;
            }
            if (*((unsigned char *)this + 24)) {
              uint64_t v84 = 0;
            }
          }
          break;
        }
LABEL_340:
        *(void *)(a1 + 8) = v84;
        goto LABEL_21;
      case 0xFu:
        *(_DWORD *)(a1 + 172) |= 2u;
        unint64_t v87 = *((void *)this + 1);
        unint64_t v88 = *((void *)this + 2);
        uint64_t v89 = *(void *)this;
        if (v87 <= 0xFFFFFFFFFFFFFFF5 && v87 + 10 <= v88)
        {
          char v90 = 0;
          unsigned int v91 = 0;
          uint64_t v92 = 0;
          do
          {
            unint64_t v93 = v87 + 1;
            *((void *)this + 1) = v87 + 1;
            char v94 = *(unsigned char *)(v89 + v87);
            v92 |= (unint64_t)(v94 & 0x7F) << v90;
            if ((v94 & 0x80) == 0) {
              goto LABEL_344;
            }
            v90 += 7;
            unint64_t v87 = v93;
            BOOL v14 = v91++ > 8;
          }
          while (!v14);
LABEL_231:
          uint64_t v92 = 0;
          goto LABEL_344;
        }
        char v215 = 0;
        unsigned int v216 = 0;
        uint64_t v92 = 0;
        if (v88 <= v87) {
          unint64_t v88 = *((void *)this + 1);
        }
        while (2)
        {
          if (v88 == v87)
          {
            uint64_t v92 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v217 = v87 + 1;
            char v218 = *(unsigned char *)(v89 + v87);
            *((void *)this + 1) = v217;
            v92 |= (unint64_t)(v218 & 0x7F) << v215;
            if (v218 < 0)
            {
              v215 += 7;
              unint64_t v87 = v217;
              BOOL v14 = v216++ > 8;
              if (v14) {
                goto LABEL_231;
              }
              continue;
            }
            if (*((unsigned char *)this + 24)) {
              uint64_t v92 = 0;
            }
          }
          break;
        }
LABEL_344:
        *(void *)(a1 + 16) = v92;
        goto LABEL_21;
      case 0x10u:
        *(_DWORD *)(a1 + 172) |= 0x200u;
        unint64_t v95 = *((void *)this + 1);
        unint64_t v96 = *((void *)this + 2);
        uint64_t v97 = *(void *)this;
        if (v95 <= 0xFFFFFFFFFFFFFFF5 && v95 + 10 <= v96)
        {
          char v98 = 0;
          unsigned int v99 = 0;
          uint64_t v100 = 0;
          do
          {
            unint64_t v101 = v95 + 1;
            *((void *)this + 1) = v95 + 1;
            char v102 = *(unsigned char *)(v97 + v95);
            v100 |= (unint64_t)(v102 & 0x7F) << v98;
            if ((v102 & 0x80) == 0) {
              goto LABEL_348;
            }
            v98 += 7;
            unint64_t v95 = v101;
            BOOL v14 = v99++ > 8;
          }
          while (!v14);
LABEL_238:
          uint64_t v100 = 0;
          goto LABEL_348;
        }
        char v219 = 0;
        unsigned int v220 = 0;
        uint64_t v100 = 0;
        if (v96 <= v95) {
          unint64_t v96 = *((void *)this + 1);
        }
        while (2)
        {
          if (v96 == v95)
          {
            uint64_t v100 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v221 = v95 + 1;
            char v222 = *(unsigned char *)(v97 + v95);
            *((void *)this + 1) = v221;
            v100 |= (unint64_t)(v222 & 0x7F) << v219;
            if (v222 < 0)
            {
              v219 += 7;
              unint64_t v95 = v221;
              BOOL v14 = v220++ > 8;
              if (v14) {
                goto LABEL_238;
              }
              continue;
            }
            if (*((unsigned char *)this + 24)) {
              uint64_t v100 = 0;
            }
          }
          break;
        }
LABEL_348:
        *(void *)(a1 + 80) = v100;
        goto LABEL_21;
      case 0x11u:
        *(_DWORD *)(a1 + 172) |= 0x400u;
        unint64_t v103 = *((void *)this + 1);
        unint64_t v104 = *((void *)this + 2);
        uint64_t v105 = *(void *)this;
        if (v103 <= 0xFFFFFFFFFFFFFFF5 && v103 + 10 <= v104)
        {
          char v106 = 0;
          unsigned int v107 = 0;
          uint64_t v108 = 0;
          do
          {
            unint64_t v109 = v103 + 1;
            *((void *)this + 1) = v103 + 1;
            char v110 = *(unsigned char *)(v105 + v103);
            v108 |= (unint64_t)(v110 & 0x7F) << v106;
            if ((v110 & 0x80) == 0) {
              goto LABEL_352;
            }
            v106 += 7;
            unint64_t v103 = v109;
            BOOL v14 = v107++ > 8;
          }
          while (!v14);
LABEL_245:
          uint64_t v108 = 0;
          goto LABEL_352;
        }
        char v223 = 0;
        unsigned int v224 = 0;
        uint64_t v108 = 0;
        if (v104 <= v103) {
          unint64_t v104 = *((void *)this + 1);
        }
        while (2)
        {
          if (v104 == v103)
          {
            uint64_t v108 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v225 = v103 + 1;
            char v226 = *(unsigned char *)(v105 + v103);
            *((void *)this + 1) = v225;
            v108 |= (unint64_t)(v226 & 0x7F) << v223;
            if (v226 < 0)
            {
              v223 += 7;
              unint64_t v103 = v225;
              BOOL v14 = v224++ > 8;
              if (v14) {
                goto LABEL_245;
              }
              continue;
            }
            if (*((unsigned char *)this + 24)) {
              uint64_t v108 = 0;
            }
          }
          break;
        }
LABEL_352:
        *(void *)(a1 + 88) = v108;
        goto LABEL_21;
      case 0x12u:
        *(_DWORD *)(a1 + 172) |= 4u;
        unint64_t v111 = *((void *)this + 1);
        unint64_t v112 = *((void *)this + 2);
        uint64_t v113 = *(void *)this;
        if (v111 <= 0xFFFFFFFFFFFFFFF5 && v111 + 10 <= v112)
        {
          char v114 = 0;
          unsigned int v115 = 0;
          uint64_t v116 = 0;
          do
          {
            unint64_t v117 = v111 + 1;
            *((void *)this + 1) = v111 + 1;
            char v118 = *(unsigned char *)(v113 + v111);
            v116 |= (unint64_t)(v118 & 0x7F) << v114;
            if ((v118 & 0x80) == 0) {
              goto LABEL_356;
            }
            v114 += 7;
            unint64_t v111 = v117;
            BOOL v14 = v115++ > 8;
          }
          while (!v14);
LABEL_252:
          uint64_t v116 = 0;
          goto LABEL_356;
        }
        char v227 = 0;
        unsigned int v228 = 0;
        uint64_t v116 = 0;
        if (v112 <= v111) {
          unint64_t v112 = *((void *)this + 1);
        }
        while (2)
        {
          if (v112 == v111)
          {
            uint64_t v116 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v229 = v111 + 1;
            char v230 = *(unsigned char *)(v113 + v111);
            *((void *)this + 1) = v229;
            v116 |= (unint64_t)(v230 & 0x7F) << v227;
            if (v230 < 0)
            {
              v227 += 7;
              unint64_t v111 = v229;
              BOOL v14 = v228++ > 8;
              if (v14) {
                goto LABEL_252;
              }
              continue;
            }
            if (*((unsigned char *)this + 24)) {
              uint64_t v116 = 0;
            }
          }
          break;
        }
LABEL_356:
        *(void *)(a1 + 24) = v116;
        goto LABEL_21;
      case 0x13u:
        *(_DWORD *)(a1 + 172) |= 8u;
        unint64_t v119 = *((void *)this + 1);
        unint64_t v120 = *((void *)this + 2);
        uint64_t v121 = *(void *)this;
        if (v119 <= 0xFFFFFFFFFFFFFFF5 && v119 + 10 <= v120)
        {
          char v122 = 0;
          unsigned int v123 = 0;
          uint64_t v124 = 0;
          do
          {
            unint64_t v125 = v119 + 1;
            *((void *)this + 1) = v119 + 1;
            char v126 = *(unsigned char *)(v121 + v119);
            v124 |= (unint64_t)(v126 & 0x7F) << v122;
            if ((v126 & 0x80) == 0) {
              goto LABEL_360;
            }
            v122 += 7;
            unint64_t v119 = v125;
            BOOL v14 = v123++ > 8;
          }
          while (!v14);
LABEL_259:
          uint64_t v124 = 0;
          goto LABEL_360;
        }
        char v231 = 0;
        unsigned int v232 = 0;
        uint64_t v124 = 0;
        if (v120 <= v119) {
          unint64_t v120 = *((void *)this + 1);
        }
        while (2)
        {
          if (v120 == v119)
          {
            uint64_t v124 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v233 = v119 + 1;
            char v234 = *(unsigned char *)(v121 + v119);
            *((void *)this + 1) = v233;
            v124 |= (unint64_t)(v234 & 0x7F) << v231;
            if (v234 < 0)
            {
              v231 += 7;
              unint64_t v119 = v233;
              BOOL v14 = v232++ > 8;
              if (v14) {
                goto LABEL_259;
              }
              continue;
            }
            if (*((unsigned char *)this + 24)) {
              uint64_t v124 = 0;
            }
          }
          break;
        }
LABEL_360:
        *(void *)(a1 + 32) = v124;
        goto LABEL_21;
      case 0x14u:
        *(_DWORD *)(a1 + 172) |= 0x1000u;
        unint64_t v127 = *((void *)this + 1);
        unint64_t v128 = *((void *)this + 2);
        uint64_t v129 = *(void *)this;
        if (v127 <= 0xFFFFFFFFFFFFFFF5 && v127 + 10 <= v128)
        {
          char v130 = 0;
          unsigned int v131 = 0;
          uint64_t v132 = 0;
          do
          {
            unint64_t v133 = v127 + 1;
            *((void *)this + 1) = v127 + 1;
            char v134 = *(unsigned char *)(v129 + v127);
            v132 |= (unint64_t)(v134 & 0x7F) << v130;
            if ((v134 & 0x80) == 0) {
              goto LABEL_364;
            }
            v130 += 7;
            unint64_t v127 = v133;
            BOOL v14 = v131++ > 8;
          }
          while (!v14);
LABEL_266:
          uint64_t v132 = 0;
          goto LABEL_364;
        }
        char v235 = 0;
        unsigned int v236 = 0;
        uint64_t v132 = 0;
        if (v128 <= v127) {
          unint64_t v128 = *((void *)this + 1);
        }
        while (2)
        {
          if (v128 == v127)
          {
            uint64_t v132 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v237 = v127 + 1;
            char v238 = *(unsigned char *)(v129 + v127);
            *((void *)this + 1) = v237;
            v132 |= (unint64_t)(v238 & 0x7F) << v235;
            if (v238 < 0)
            {
              v235 += 7;
              unint64_t v127 = v237;
              BOOL v14 = v236++ > 8;
              if (v14) {
                goto LABEL_266;
              }
              continue;
            }
            if (*((unsigned char *)this + 24)) {
              uint64_t v132 = 0;
            }
          }
          break;
        }
LABEL_364:
        *(void *)(a1 + 112) = v132;
        goto LABEL_21;
      case 0x15u:
        *(_DWORD *)(a1 + 172) |= 0x2000u;
        unint64_t v135 = *((void *)this + 1);
        unint64_t v136 = *((void *)this + 2);
        uint64_t v137 = *(void *)this;
        if (v135 <= 0xFFFFFFFFFFFFFFF5 && v135 + 10 <= v136)
        {
          char v138 = 0;
          unsigned int v139 = 0;
          uint64_t v140 = 0;
          do
          {
            unint64_t v141 = v135 + 1;
            *((void *)this + 1) = v135 + 1;
            char v142 = *(unsigned char *)(v137 + v135);
            v140 |= (unint64_t)(v142 & 0x7F) << v138;
            if ((v142 & 0x80) == 0) {
              goto LABEL_368;
            }
            v138 += 7;
            unint64_t v135 = v141;
            BOOL v14 = v139++ > 8;
          }
          while (!v14);
LABEL_273:
          uint64_t v140 = 0;
          goto LABEL_368;
        }
        char v239 = 0;
        unsigned int v240 = 0;
        uint64_t v140 = 0;
        if (v136 <= v135) {
          unint64_t v136 = *((void *)this + 1);
        }
        while (2)
        {
          if (v136 == v135)
          {
            uint64_t v140 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v241 = v135 + 1;
            char v242 = *(unsigned char *)(v137 + v135);
            *((void *)this + 1) = v241;
            v140 |= (unint64_t)(v242 & 0x7F) << v239;
            if (v242 < 0)
            {
              v239 += 7;
              unint64_t v135 = v241;
              BOOL v14 = v240++ > 8;
              if (v14) {
                goto LABEL_273;
              }
              continue;
            }
            if (*((unsigned char *)this + 24)) {
              uint64_t v140 = 0;
            }
          }
          break;
        }
LABEL_368:
        *(void *)(a1 + 120) = v140;
        goto LABEL_21;
      case 0x16u:
        *(_DWORD *)(a1 + 172) |= 0x800u;
        unint64_t v143 = *((void *)this + 1);
        unint64_t v144 = *((void *)this + 2);
        uint64_t v145 = *(void *)this;
        if (v143 <= 0xFFFFFFFFFFFFFFF5 && v143 + 10 <= v144)
        {
          char v146 = 0;
          unsigned int v147 = 0;
          uint64_t v148 = 0;
          do
          {
            unint64_t v149 = v143 + 1;
            *((void *)this + 1) = v143 + 1;
            char v150 = *(unsigned char *)(v145 + v143);
            v148 |= (unint64_t)(v150 & 0x7F) << v146;
            if ((v150 & 0x80) == 0) {
              goto LABEL_372;
            }
            v146 += 7;
            unint64_t v143 = v149;
            BOOL v14 = v147++ > 8;
          }
          while (!v14);
LABEL_280:
          uint64_t v148 = 0;
          goto LABEL_372;
        }
        char v243 = 0;
        unsigned int v244 = 0;
        uint64_t v148 = 0;
        if (v144 <= v143) {
          unint64_t v144 = *((void *)this + 1);
        }
        while (2)
        {
          if (v144 == v143)
          {
            uint64_t v148 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v245 = v143 + 1;
            char v246 = *(unsigned char *)(v145 + v143);
            *((void *)this + 1) = v245;
            v148 |= (unint64_t)(v246 & 0x7F) << v243;
            if (v246 < 0)
            {
              v243 += 7;
              unint64_t v143 = v245;
              BOOL v14 = v244++ > 8;
              if (v14) {
                goto LABEL_280;
              }
              continue;
            }
            if (*((unsigned char *)this + 24)) {
              uint64_t v148 = 0;
            }
          }
          break;
        }
LABEL_372:
        *(void *)(a1 + 96) = v148;
        goto LABEL_21;
      case 0x17u:
        *(_DWORD *)(a1 + 172) |= 0x40000u;
        unint64_t v151 = *((void *)this + 1);
        unint64_t v152 = *((void *)this + 2);
        uint64_t v153 = *(void *)this;
        if (v151 <= 0xFFFFFFFFFFFFFFF5 && v151 + 10 <= v152)
        {
          char v154 = 0;
          unsigned int v155 = 0;
          uint64_t v156 = 0;
          do
          {
            unint64_t v157 = v151 + 1;
            *((void *)this + 1) = v151 + 1;
            char v158 = *(unsigned char *)(v153 + v151);
            v156 |= (unint64_t)(v158 & 0x7F) << v154;
            if ((v158 & 0x80) == 0) {
              goto LABEL_376;
            }
            v154 += 7;
            unint64_t v151 = v157;
            BOOL v14 = v155++ > 8;
          }
          while (!v14);
LABEL_287:
          uint64_t v156 = 0;
          goto LABEL_376;
        }
        char v247 = 0;
        unsigned int v248 = 0;
        uint64_t v156 = 0;
        if (v152 <= v151) {
          unint64_t v152 = *((void *)this + 1);
        }
        while (2)
        {
          if (v152 == v151)
          {
            uint64_t v156 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v249 = v151 + 1;
            char v250 = *(unsigned char *)(v153 + v151);
            *((void *)this + 1) = v249;
            v156 |= (unint64_t)(v250 & 0x7F) << v247;
            if (v250 < 0)
            {
              v247 += 7;
              unint64_t v151 = v249;
              BOOL v14 = v248++ > 8;
              if (v14) {
                goto LABEL_287;
              }
              continue;
            }
            if (*((unsigned char *)this + 24)) {
              uint64_t v156 = 0;
            }
          }
          break;
        }
LABEL_376:
        *(void *)(a1 + 160) = v156;
        goto LABEL_21;
      case 0x18u:
        *(_DWORD *)(a1 + 172) |= 0x8000u;
        unint64_t v159 = *((void *)this + 1);
        unint64_t v160 = *((void *)this + 2);
        uint64_t v161 = *(void *)this;
        if (v159 <= 0xFFFFFFFFFFFFFFF5 && v159 + 10 <= v160)
        {
          char v162 = 0;
          unsigned int v163 = 0;
          uint64_t v164 = 0;
          do
          {
            unint64_t v165 = v159 + 1;
            *((void *)this + 1) = v159 + 1;
            char v166 = *(unsigned char *)(v161 + v159);
            v164 |= (unint64_t)(v166 & 0x7F) << v162;
            if ((v166 & 0x80) == 0) {
              goto LABEL_380;
            }
            v162 += 7;
            unint64_t v159 = v165;
            BOOL v14 = v163++ > 8;
          }
          while (!v14);
LABEL_294:
          uint64_t v164 = 0;
          goto LABEL_380;
        }
        char v251 = 0;
        unsigned int v252 = 0;
        uint64_t v164 = 0;
        if (v160 <= v159) {
          unint64_t v160 = *((void *)this + 1);
        }
        while (2)
        {
          if (v160 == v159)
          {
            uint64_t v164 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v253 = v159 + 1;
            char v254 = *(unsigned char *)(v161 + v159);
            *((void *)this + 1) = v253;
            v164 |= (unint64_t)(v254 & 0x7F) << v251;
            if (v254 < 0)
            {
              v251 += 7;
              unint64_t v159 = v253;
              BOOL v14 = v252++ > 8;
              if (v14) {
                goto LABEL_294;
              }
              continue;
            }
            if (*((unsigned char *)this + 24)) {
              uint64_t v164 = 0;
            }
          }
          break;
        }
LABEL_380:
        *(void *)(a1 + 136) = v164;
        goto LABEL_21;
      case 0x19u:
        *(_DWORD *)(a1 + 172) |= 0x80u;
        unint64_t v167 = *((void *)this + 1);
        unint64_t v168 = *((void *)this + 2);
        uint64_t v169 = *(void *)this;
        if (v167 <= 0xFFFFFFFFFFFFFFF5 && v167 + 10 <= v168)
        {
          char v170 = 0;
          unsigned int v171 = 0;
          uint64_t v172 = 0;
          do
          {
            unint64_t v173 = v167 + 1;
            *((void *)this + 1) = v167 + 1;
            char v174 = *(unsigned char *)(v169 + v167);
            v172 |= (unint64_t)(v174 & 0x7F) << v170;
            if ((v174 & 0x80) == 0) {
              goto LABEL_384;
            }
            v170 += 7;
            unint64_t v167 = v173;
            BOOL v14 = v171++ > 8;
          }
          while (!v14);
LABEL_301:
          uint64_t v172 = 0;
          goto LABEL_384;
        }
        char v255 = 0;
        unsigned int v256 = 0;
        uint64_t v172 = 0;
        if (v168 <= v167) {
          unint64_t v168 = *((void *)this + 1);
        }
        while (2)
        {
          if (v168 == v167)
          {
            uint64_t v172 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v257 = v167 + 1;
            char v258 = *(unsigned char *)(v169 + v167);
            *((void *)this + 1) = v257;
            v172 |= (unint64_t)(v258 & 0x7F) << v255;
            if (v258 < 0)
            {
              v255 += 7;
              unint64_t v167 = v257;
              BOOL v14 = v256++ > 8;
              if (v14) {
                goto LABEL_301;
              }
              continue;
            }
            if (*((unsigned char *)this + 24)) {
              uint64_t v172 = 0;
            }
          }
          break;
        }
LABEL_384:
        *(void *)(a1 + 64) = v172;
        goto LABEL_21;
      case 0x1Au:
        *(_DWORD *)(a1 + 172) |= 0x10u;
        unint64_t v175 = *((void *)this + 1);
        unint64_t v176 = *((void *)this + 2);
        uint64_t v177 = *(void *)this;
        if (v175 <= 0xFFFFFFFFFFFFFFF5 && v175 + 10 <= v176)
        {
          char v178 = 0;
          unsigned int v179 = 0;
          uint64_t v180 = 0;
          do
          {
            unint64_t v181 = v175 + 1;
            *((void *)this + 1) = v175 + 1;
            char v182 = *(unsigned char *)(v177 + v175);
            v180 |= (unint64_t)(v182 & 0x7F) << v178;
            if ((v182 & 0x80) == 0) {
              goto LABEL_388;
            }
            v178 += 7;
            unint64_t v175 = v181;
            BOOL v14 = v179++ > 8;
          }
          while (!v14);
LABEL_308:
          uint64_t v180 = 0;
          goto LABEL_388;
        }
        char v259 = 0;
        unsigned int v260 = 0;
        uint64_t v180 = 0;
        if (v176 <= v175) {
          unint64_t v176 = *((void *)this + 1);
        }
        break;
      default:
        goto LABEL_20;
    }
    while (1)
    {
      if (v176 == v175)
      {
        uint64_t v180 = 0;
        *((unsigned char *)this + 24) = 1;
        goto LABEL_388;
      }
      unint64_t v261 = v175 + 1;
      char v262 = *(unsigned char *)(v177 + v175);
      *((void *)this + 1) = v261;
      v180 |= (unint64_t)(v262 & 0x7F) << v259;
      if ((v262 & 0x80) == 0) {
        break;
      }
      v259 += 7;
      unint64_t v175 = v261;
      BOOL v14 = v260++ > 8;
      if (v14) {
        goto LABEL_308;
      }
    }
    if (*((unsigned char *)this + 24)) {
      uint64_t v180 = 0;
    }
LABEL_388:
    *(void *)(a1 + 40) = v180;
    goto LABEL_21;
  }
  int v4 = 0;
  return v4 == 0;
}

void sub_10005E3B4(PB::Base *a1)
{
  sub_10005E3EC(a1);

  operator delete();
}

void sub_10005E3EC(PB::Base *a1)
{
  *(void *)a1 = off_100078FC0;
  uint64_t v2 = *((void *)a1 + 13);
  *((void *)a1 + 13) = 0;
  if (v2) {
    sub_10005C578(v2);
  }

  PB::Base::~Base(a1);
}

uint64_t sub_10005E450()
{
  return DataProtocol.copyBytes(to:)();
}

uint64_t sub_10005E460()
{
  return static Notification._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_10005E470()
{
  return Notification.name.getter();
}

uint64_t sub_10005E480()
{
  return Notification.object.getter();
}

uint64_t sub_10005E490()
{
  return Notification.userInfo.getter();
}

uint64_t sub_10005E4A0()
{
  return type metadata accessor for Notification();
}

uint64_t sub_10005E4B0()
{
  return __DataStorage.init(bytes:length:copy:deallocator:offset:)();
}

uint64_t sub_10005E4C0()
{
  return __DataStorage.init(bytes:length:)();
}

uint64_t sub_10005E4D0()
{
  return __DataStorage._bytes.getter();
}

uint64_t sub_10005E4E0()
{
  return __DataStorage._length.getter();
}

uint64_t sub_10005E4F0()
{
  return __DataStorage._offset.getter();
}

uint64_t sub_10005E500()
{
  return type metadata accessor for __DataStorage();
}

uint64_t sub_10005E510(Swift::String _, Swift::String_optional tableName, NSBundle bundle, Swift::String value, Swift::String comment)
{
  return NSLocalizedString(_:tableName:bundle:value:comment:)(_, tableName, bundle, value, comment)._countAndFlagsBits;
}

uint64_t sub_10005E520()
{
  return _convertErrorToNSError(_:)();
}

uint64_t sub_10005E530()
{
  return _convertNSErrorToError(_:)();
}

uint64_t sub_10005E540()
{
  return Data.InlineData.init(_:)();
}

uint64_t sub_10005E550()
{
  return Data.LargeSlice.init(_:)();
}

uint64_t sub_10005E560()
{
  return Data.Deallocator._deallocator.getter();
}

uint64_t sub_10005E570()
{
  return type metadata accessor for Data.Deallocator();
}

uint64_t sub_10005E580()
{
  return Data.InlineSlice.init(_:)();
}

uint64_t sub_10005E590()
{
  return Data.init(bytesNoCopy:count:deallocator:)();
}

uint64_t sub_10005E5A0()
{
  return Data._copyContents(initializing:)();
}

uint64_t sub_10005E5B0()
{
  return type metadata accessor for Data.RangeReference();
}

uint64_t sub_10005E5C0()
{
  return Data._Representation.init(_:count:)();
}

uint64_t sub_10005E5D0()
{
  return Data._Representation.subscript.getter();
}

NSData sub_10005E5E0()
{
  return Data._bridgeToObjectiveC()();
}

uint64_t sub_10005E5F0()
{
  return static Data.== infix(_:_:)();
}

uint64_t sub_10005E600()
{
  return static Data._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_10005E610()
{
  return Data.init(bytes:count:)();
}

uint64_t sub_10005E620()
{
  return Data.count.getter();
}

uint64_t sub_10005E630()
{
  return Data.append(_:)();
}

uint64_t sub_10005E640()
{
  return Data.subdata(in:)();
}

uint64_t sub_10005E650()
{
  return type metadata accessor for Data.Iterator();
}

uint64_t sub_10005E660()
{
  return Data.subscript.getter();
}

uint64_t sub_10005E670()
{
  return UUID.uuidString.getter();
}

NSUUID sub_10005E680()
{
  return UUID._bridgeToObjectiveC()();
}

uint64_t sub_10005E690()
{
  return static UUID._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_10005E6A0()
{
  return UUID.init(uuid:)();
}

uint64_t sub_10005E6B0()
{
  return UUID.uuid.getter();
}

uint64_t _s10SidecarHID10UserDeviceC4uuid10Foundation4UUIDVvpfi_0()
{
  return UUID.init()();
}

uint64_t sub_10005E6D0()
{
  return type metadata accessor for UUID();
}

uint64_t sub_10005E6E0()
{
  return dispatch thunk of UniversalControlManager.takeClientAssertion(_:)();
}

void sub_10005E6F0(NSRunLoopMode in, Swift::Double forInterval)
{
}

uint64_t sub_10005E700()
{
  return static UniversalControlManager.shared.getter();
}

uint64_t sub_10005E710()
{
  return type metadata accessor for UniversalControlManager();
}

uint64_t sub_10005E720()
{
  return Logger.logObject.getter();
}

uint64_t sub_10005E730()
{
  return Logger.init(subsystem:category:)();
}

uint64_t sub_10005E740()
{
  return Logger.init()();
}

uint64_t sub_10005E750()
{
  return type metadata accessor for Logger();
}

uint64_t sub_10005E760()
{
  return Logger.init(_:)();
}

uint64_t sub_10005E770()
{
  return errno.getter();
}

uint64_t sub_10005E780()
{
  return noErr.getter();
}

uint64_t sub_10005E790()
{
  return SIG_IGN.getter();
}

uint64_t sub_10005E7A0()
{
  return type metadata accessor for DispatchTimeInterval();
}

uint64_t sub_10005E7B0()
{
  return type metadata accessor for DispatchWorkItemFlags();
}

uint64_t sub_10005E7C0()
{
  return type metadata accessor for DispatchQoS.QoSClass();
}

uint64_t sub_10005E7D0()
{
  return static DispatchQoS.unspecified.getter();
}

uint64_t sub_10005E7E0()
{
  return type metadata accessor for DispatchQoS();
}

uint64_t sub_10005E7F0()
{
  return static DispatchTime.now()();
}

uint64_t sub_10005E800()
{
  return type metadata accessor for DispatchTime();
}

uint64_t sub_10005E810()
{
  return static DispatchWallTime.now()();
}

uint64_t sub_10005E820()
{
  return type metadata accessor for DispatchWallTime();
}

uint64_t sub_10005E830()
{
  return + infix(_:_:)();
}

uint64_t sub_10005E840()
{
  return + infix(_:_:)();
}

uint64_t sub_10005E850()
{
  return + infix(_:_:)();
}

NSDictionary sub_10005E870()
{
  return Dictionary._bridgeToObjectiveC()();
}

uint64_t sub_10005E880()
{
  return static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_10005E890()
{
  return Dictionary.init(dictionaryLiteral:)();
}

uint64_t sub_10005E8A0()
{
  return BidirectionalCollection<>.joined(separator:)();
}

uint64_t sub_10005E8B0()
{
  return dispatch thunk of static Comparable.> infix(_:_:)();
}

uint64_t sub_10005E8C0()
{
  return dispatch thunk of static Comparable.< infix(_:_:)();
}

uint64_t sub_10005E8D0()
{
  return dispatch thunk of static Equatable.== infix(_:_:)();
}

uint64_t sub_10005E8E0()
{
  return String.init(utf8String:)();
}

NSString sub_10005E8F0()
{
  return String._bridgeToObjectiveC()();
}

uint64_t sub_10005E900()
{
  return static String._forceBridgeFromObjectiveC(_:result:)();
}

uint64_t sub_10005E910()
{
  return static String._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t sub_10005E920()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_10005E930()
{
  return String.init(format:_:)();
}

uint64_t sub_10005E940()
{
  return String.init<A>(describing:)();
}

uint64_t sub_10005E950()
{
  return String.utf8CString.getter();
}

uint64_t sub_10005E960()
{
  return static String._fromSubstring(_:)();
}

uint64_t sub_10005E970()
{
  return static String._uncheckedFromUTF8(_:)();
}

uint64_t sub_10005E980()
{
  return String.hash(into:)();
}

uint64_t sub_10005E990()
{
  return String.count.getter();
}

uint64_t sub_10005E9A0()
{
  return String.index(after:)();
}

uint64_t sub_10005E9B0()
{
  return String.index(_:offsetBy:limitedBy:)();
}

void sub_10005E9C0(Swift::String a1)
{
}

uint64_t sub_10005E9D0()
{
  return String.init(cString:)();
}

Swift::Int sub_10005E9E0()
{
  return String.UTF8View._foreignCount()();
}

uint64_t sub_10005E9F0()
{
  return String.UTF8View._foreignIndex(after:)();
}

uint64_t sub_10005EA00()
{
  return String.UTF8View._foreignIndex(_:offsetBy:)();
}

uint64_t sub_10005EA20()
{
  return String.UTF8View._foreignSubscript(position:)();
}

uint64_t sub_10005EA30()
{
  return String.UTF16View.index(_:offsetBy:)();
}

uint64_t sub_10005EA40()
{
  return String.init<A>(_:radix:uppercase:)();
}

uint64_t sub_10005EA50()
{
  return String.subscript.getter();
}

uint64_t sub_10005EA60()
{
  return String.init<A>(_:)();
}

uint64_t sub_10005EA70()
{
  return String.subscript.getter();
}

uint64_t sub_10005EA80()
{
  return Sequence.withContiguousStorageIfAvailable<A>(_:)();
}

uint64_t sub_10005EA90()
{
  return specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
}

NSArray sub_10005EAA0()
{
  return Array._bridgeToObjectiveC()();
}

uint64_t sub_10005EAB0()
{
  return static Array._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t sub_10005EAC0()
{
  return static Array._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_10005EAD0()
{
  return Array.startIndex.getter();
}

uint64_t sub_10005EAE0()
{
  return specialized Array._endMutation()();
}

uint64_t sub_10005EAF0()
{
  return Array._checkSubscript(_:wasNativeTypeChecked:)();
}

uint64_t sub_10005EB00()
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t sub_10005EB10()
{
  return static Array._allocateBufferUninitialized(minimumCapacity:)();
}

BOOL sub_10005EB20()
{
  return Array._hoistableIsNativeTypeChecked()();
}

uint64_t sub_10005EB30()
{
  return specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t sub_10005EB40()
{
  return Array.endIndex.getter();
}

void sub_10005EB50(Swift::Int *after)
{
}

uint64_t sub_10005EB60()
{
  return type metadata accessor for Array();
}

NSNumber sub_10005EB70()
{
  return Bool._bridgeToObjectiveC()();
}

uint64_t sub_10005EB80()
{
  return static Bool._conditionallyBridgeFromObjectiveC(_:result:)();
}

NSNumber sub_10005EB90()
{
  return Double._bridgeToObjectiveC()();
}

uint64_t sub_10005EBA0()
{
  return static Double._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t sub_10005EBD0()
{
  return Double.write<A>(to:)();
}

uint64_t sub_10005EBE0()
{
  return Double.exponent.getter();
}

uint64_t sub_10005EBF0()
{
  return Set.init(minimumCapacity:)();
}

NSNumber sub_10005EC00()
{
  return Int._bridgeToObjectiveC()();
}

uint64_t sub_10005EC10()
{
  return static Int._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t sub_10005EC20()
{
  return NSDictionary.init(dictionaryLiteral:)();
}

uint64_t sub_10005EC30()
{
  return static os_log_type_t.debug.getter();
}

uint64_t sub_10005EC40()
{
  return static os_log_type_t.error.getter();
}

uint64_t sub_10005EC50()
{
  return static os_log_type_t.default.getter();
}

uint64_t sub_10005EC60()
{
  return type metadata accessor for OS_dispatch_queue.Attributes();
}

uint64_t sub_10005EC70()
{
  return OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
}

uint64_t sub_10005EC80()
{
  return type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
}

uint64_t sub_10005EC90()
{
  return static OS_dispatch_queue.main.getter();
}

uint64_t sub_10005ECA0()
{
  return OS_dispatch_queue.sync<A>(execute:)();
}

uint64_t sub_10005ECB0()
{
  return OS_dispatch_queue.async(group:qos:flags:execute:)();
}

uint64_t sub_10005ECC0()
{
  return OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
}

uint64_t sub_10005ECD0()
{
  return static OS_dispatch_queue.global(qos:)();
}

uint64_t sub_10005ECE0()
{
  return type metadata accessor for OS_dispatch_source.TimerFlags();
}

uint64_t sub_10005ECF0()
{
  return static OS_dispatch_source.makeTimerSource(flags:queue:)();
}

uint64_t sub_10005ED00()
{
  return static OS_dispatch_source.makeSignalSource(signal:queue:)();
}

uint64_t sub_10005ED10()
{
  return static OS_dispatch_source.makeMachReceiveSource(port:queue:)();
}

uint64_t sub_10005ED20()
{
  return OS_dispatch_source.setEventHandler(qos:flags:handler:)();
}

uint64_t sub_10005ED30()
{
  return OS_dispatch_source.data.getter();
}

void sub_10005ED40()
{
}

void sub_10005ED50()
{
}

void sub_10005ED60()
{
}

uint64_t sub_10005ED70()
{
  return OS_dispatch_semaphore.wait(timeout:)();
}

uint64_t sub_10005ED80()
{
  return OS_dispatch_source_timer.schedule(wallDeadline:repeating:leeway:)();
}

uint64_t sub_10005ED90()
{
  return OS_dispatch_source_timer.schedule(deadline:repeating:leeway:)();
}

void sub_10005EDA0(Swift::UInt data)
{
}

NSNumber sub_10005EDB0(Swift::Int integerLiteral)
{
  return NSNumber.init(integerLiteral:)(integerLiteral);
}

uint64_t sub_10005EDC0()
{
  return static NSObject.== infix(_:_:)();
}

uint64_t sub_10005EDD0()
{
  return NSString.init(stringLiteral:)();
}

uint64_t sub_10005EDE0()
{
  return OS_os_log.init(subsystem:category:)();
}

uint64_t sub_10005EDF0()
{
  return type metadata accessor for Optional();
}

NSNumber sub_10005EE00()
{
  return UInt._bridgeToObjectiveC()();
}

uint64_t sub_10005EE10()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_10005EE20()
{
  return UnsafeMutableRawBufferPointer.subscript.setter();
}

uint64_t sub_10005EE30()
{
  return dispatch thunk of BinaryInteger.init<A>(truncatingIfNeeded:)();
}

uint64_t sub_10005EE40()
{
  return dispatch thunk of static BinaryInteger.>> infix<A>(_:_:)();
}

uint64_t sub_10005EE50()
{
  return dispatch thunk of static BinaryInteger.<< infix<A>(_:_:)();
}

uint64_t sub_10005EE60()
{
  return dispatch thunk of static BinaryInteger.|= infix(_:_:)();
}

uint64_t sub_10005EE70()
{
  return dispatch thunk of BinaryInteger._lowWord.getter();
}

uint64_t sub_10005EEA0()
{
  return dispatch thunk of BinaryInteger.init<A>(_:)();
}

uint64_t sub_10005EEB0()
{
  return dispatch thunk of BinaryInteger.init<A>(_:)();
}

uint64_t sub_10005EEC0()
{
  return _bridgeAnyObjectToAny(_:)();
}

uint64_t sub_10005EEE0()
{
  return dispatch thunk of SetAlgebra.init<A>(_:)();
}

Swift::Int sub_10005EEF0(Swift::Int seed)
{
  return AnyHashable._rawHashValue(seed:)(seed);
}

uint64_t sub_10005EF00()
{
  return static AnyHashable.== infix(_:_:)();
}

uint64_t sub_10005EF10()
{
  return AnyHashable.init<A>(_:)();
}

uint64_t sub_10005EF20()
{
  return static _SetStorage.copy(original:)();
}

uint64_t sub_10005EF30()
{
  return static _SetStorage.resize(original:capacity:move:)();
}

void sub_10005EF40(Swift::Int a1)
{
}

uint64_t sub_10005EF50()
{
  return _StringGuts.copyUTF8(into:)();
}

uint64_t sub_10005EF60()
{
  return _ArrayBuffer._getElementSlowPath(_:)();
}

uint64_t sub_10005EF70()
{
  return specialized _ArrayBuffer._getElementSlowPath(_:)();
}

uint64_t sub_10005EF80()
{
  return _StringObject.sharedUTF8.getter();
}

uint64_t sub_10005EF90()
{
  return _ArrayProtocol.filter(_:)();
}

uint64_t sub_10005EFA0()
{
  return specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
}

uint64_t sub_10005EFB0()
{
  return specialized ContiguousArray._endMutation()();
}

uint64_t sub_10005EFC0()
{
  return specialized ContiguousArray.reserveCapacity(_:)();
}

uint64_t sub_10005EFD0()
{
  return specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
}

uint64_t sub_10005EFE0()
{
  return specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t sub_10005EFF0()
{
  return dispatch thunk of static FixedWidthInteger.bitWidth.getter();
}

uint64_t sub_10005F000()
{
  return dispatch thunk of static FixedWidthInteger.max.getter();
}

uint64_t sub_10005F010()
{
  return dispatch thunk of static FixedWidthInteger.min.getter();
}

BOOL sub_10005F020(Swift::Bool isUnique, Swift::Int capacity)
{
  return _NativeDictionary.ensureUnique(isUnique:capacity:)(isUnique, capacity);
}

uint64_t sub_10005F030()
{
  return _NativeDictionary._delete(at:)();
}

uint64_t sub_10005F040()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t sub_10005F050()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t sub_10005F060()
{
  return _assertionFailure(_:_:flags:)();
}

uint64_t sub_10005F070()
{
  return _bridgeCocoaArray<A>(_:)();
}

uint64_t sub_10005F080()
{
  return _CocoaArrayWrapper.endIndex.getter();
}

uint64_t sub_10005F090()
{
  return _CocoaArrayWrapper.subscript.getter();
}

uint64_t sub_10005F0A0()
{
  return static _DictionaryStorage.allocate(capacity:)();
}

uint64_t sub_10005F0B0()
{
  return _fatalErrorMessage(_:_:file:line:flags:)();
}

Swift::Int sub_10005F0E0(Swift::Int a1)
{
  return _minimumMergeRunLength(_:)(a1);
}

uint64_t sub_10005F0F0()
{
  return dispatch thunk of CustomStringConvertible.description.getter();
}

uint64_t sub_10005F100()
{
  return _getErrorEmbeddedNSError<A>(_:)();
}

uint64_t sub_10005F110()
{
  return DefaultStringInterpolation.init(literalCapacity:interpolationCount:)();
}

uint64_t sub_10005F120()
{
  return dispatch thunk of ExpressibleByIntegerLiteral.init(integerLiteral:)();
}

uint64_t sub_10005F130()
{
  return _bridgeAnythingToObjectiveC<A>(_:)();
}

uint64_t sub_10005F140()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t sub_10005F150()
{
  return dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
}

uint64_t sub_10005F160()
{
  return _findStringSwitchCaseWithCache(cases:string:cache:)();
}

uint64_t sub_10005F170()
{
  return dispatch thunk of _ExpressibleByBuiltinIntegerLiteral.init(_builtinIntegerLiteral:)();
}

uint64_t sub_10005F180()
{
  return _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)();
}

uint64_t sub_10005F190()
{
  return ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t sub_10005F1A0()
{
  return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

NSNumber sub_10005F1B0()
{
  return Int32._bridgeToObjectiveC()();
}

uint64_t sub_10005F1C0()
{
  return Hasher.init(_seed:)();
}

void sub_10005F1D0(Swift::UInt a1)
{
}

void sub_10005F1E0(Swift::UInt16 a1)
{
}

void sub_10005F1F0(Swift::UInt32 a1)
{
}

Swift::Int sub_10005F200()
{
  return Hasher._finalize()();
}

uint64_t sub_10005F210()
{
  return static UInt32._forceBridgeFromObjectiveC(_:result:)();
}

uint64_t sub_10005F220()
{
  return _typeName(_:qualified:)();
}

uint64_t BKSHIDEventGetDigitizerAttributes()
{
  return _BKSHIDEventGetDigitizerAttributes();
}

CATransform3D *__cdecl CATransform3DScale(CATransform3D *__return_ptr retstr, CATransform3D *t, CGFloat sx, CGFloat sy, CGFloat sz)
{
  return _CATransform3DScale(retstr, t, sx, sy, sz);
}

const UInt8 *__cdecl CFDataGetBytePtr(CFDataRef theData)
{
  return _CFDataGetBytePtr(theData);
}

CFIndex CFDataGetLength(CFDataRef theData)
{
  return _CFDataGetLength(theData);
}

void CFRunLoopPerformBlock(CFRunLoopRef rl, CFTypeRef mode, void *block)
{
}

void CFRunLoopWakeUp(CFRunLoopRef rl)
{
}

CFStringRef CFStringCreateWithBytes(CFAllocatorRef alloc, const UInt8 *bytes, CFIndex numBytes, CFStringEncoding encoding, Boolean isExternalRepresentation)
{
  return _CFStringCreateWithBytes(alloc, bytes, numBytes, encoding, isExternalRepresentation);
}

CFStringRef CFStringCreateWithCString(CFAllocatorRef alloc, const char *cStr, CFStringEncoding encoding)
{
  return _CFStringCreateWithCString(alloc, cStr, encoding);
}

BOOL CGRectContainsPoint(CGRect rect, CGPoint point)
{
  return _CGRectContainsPoint(rect, point);
}

CGFloat CGRectGetHeight(CGRect rect)
{
  return _CGRectGetHeight(rect);
}

CGFloat CGRectGetMidY(CGRect rect)
{
  return _CGRectGetMidY(rect);
}

CGFloat CGRectGetMinX(CGRect rect)
{
  return _CGRectGetMinX(rect);
}

CGFloat CGRectGetWidth(CGRect rect)
{
  return _CGRectGetWidth(rect);
}

CGRect CGRectInset(CGRect rect, CGFloat dx, CGFloat dy)
{
  return _CGRectInset(rect, dx, dy);
}

uint64_t IDSCopyLocalDeviceUniqueID()
{
  return _IDSCopyLocalDeviceUniqueID();
}

uint64_t IOHIDEventCreateDigitizerEvent()
{
  return _IOHIDEventCreateDigitizerEvent();
}

uint64_t IOHIDEventGetChildren()
{
  return _IOHIDEventGetChildren();
}

uint64_t IOHIDEventGetDataValue()
{
  return _IOHIDEventGetDataValue();
}

uint64_t IOHIDEventGetDoubleValue()
{
  return _IOHIDEventGetDoubleValue();
}

uint64_t IOHIDEventGetEventFlags()
{
  return _IOHIDEventGetEventFlags();
}

uint64_t IOHIDEventGetIntegerValue()
{
  return _IOHIDEventGetIntegerValue();
}

uint64_t IOHIDEventGetPhase()
{
  return _IOHIDEventGetPhase();
}

uint64_t IOHIDEventGetScrollMomentum()
{
  return _IOHIDEventGetScrollMomentum();
}

uint64_t IOHIDEventGetSenderID()
{
  return _IOHIDEventGetSenderID();
}

uint64_t IOHIDEventGetTimeStamp()
{
  return _IOHIDEventGetTimeStamp();
}

uint64_t IOHIDEventGetType()
{
  return _IOHIDEventGetType();
}

uint64_t IOHIDEventGetVendorDefinedData()
{
  return _IOHIDEventGetVendorDefinedData();
}

uint64_t IOHIDEventIsAbsolute()
{
  return _IOHIDEventIsAbsolute();
}

uint64_t IOHIDEventIsRepeat()
{
  return _IOHIDEventIsRepeat();
}

void IOHIDUserDeviceActivate(IOHIDUserDeviceRef device)
{
}

void IOHIDUserDeviceCancel(IOHIDUserDeviceRef device)
{
}

CFTypeRef IOHIDUserDeviceCopyProperty(IOHIDUserDeviceRef device, CFStringRef key)
{
  return _IOHIDUserDeviceCopyProperty(device, key);
}

uint64_t IOHIDUserDeviceCopyService()
{
  return _IOHIDUserDeviceCopyService();
}

IOHIDUserDeviceRef IOHIDUserDeviceCreateWithProperties(CFAllocatorRef allocator, CFDictionaryRef properties, IOOptionBits options)
{
  return _IOHIDUserDeviceCreateWithProperties(allocator, properties, options);
}

uint64_t IOHIDUserDeviceHandleReport()
{
  return _IOHIDUserDeviceHandleReport();
}

void IOHIDUserDeviceSetCancelHandler(IOHIDUserDeviceRef device, dispatch_block_t handler)
{
}

void IOHIDUserDeviceSetDispatchQueue(IOHIDUserDeviceRef device, dispatch_queue_t queue)
{
}

Boolean IOHIDUserDeviceSetProperty(IOHIDUserDeviceRef device, CFStringRef key, CFTypeRef property)
{
  return _IOHIDUserDeviceSetProperty(device, key, property);
}

kern_return_t IOObjectRelease(io_object_t object)
{
  return _IOObjectRelease(object);
}

kern_return_t IOObjectRetain(io_object_t object)
{
  return _IOObjectRetain(object);
}

CFTypeRef IORegistryEntryCreateCFProperty(io_registry_entry_t entry, CFStringRef key, CFAllocatorRef allocator, IOOptionBits options)
{
  return _IORegistryEntryCreateCFProperty(entry, key, allocator, options);
}

io_registry_entry_t IORegistryEntryFromPath(mach_port_t mainPort, const io_string_t path)
{
  return _IORegistryEntryFromPath(mainPort, path);
}

kern_return_t IORegistryEntryGetRegistryEntryID(io_registry_entry_t entry, uint64_t *entryID)
{
  return _IORegistryEntryGetRegistryEntryID(entry, entryID);
}

uint64_t MGGetFloat32Answer()
{
  return _MGGetFloat32Answer();
}

uint64_t MGGetSInt32Answer()
{
  return _MGGetSInt32Answer();
}

uint64_t NSExtensionMain()
{
  return _NSExtensionMain();
}

NSString *__cdecl NSStringFromPoint(NSPoint aPoint)
{
  return _NSStringFromPoint(aPoint);
}

NSString *__cdecl NSStringFromRect(NSRect aRect)
{
  return _NSStringFromRect(aRect);
}

uint64_t OPACKDecodeData()
{
  return _OPACKDecodeData();
}

uint64_t OPACKEncoderCreateData()
{
  return _OPACKEncoderCreateData();
}

uint64_t PLLogRegisteredEvent()
{
  return _PLLogRegisteredEvent();
}

uint64_t SBSLockDevice()
{
  return _SBSLockDevice();
}

uint64_t SBSUndimScreen()
{
  return _SBSUndimScreen();
}

uint64_t SidecarGetProcessUniqueID()
{
  return _SidecarGetProcessUniqueID();
}

uint64_t StringToSockAddr()
{
  return _StringToSockAddr();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return __Block_copy(aBlock);
}

void _Block_release(const void *aBlock)
{
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
}

uint64_t AWDPostMetric()
{
  return AWDPostMetric();
}

uint64_t PB::TextFormatter::beginObject(PB::TextFormatter *this, const char *a2)
{
  return PB::TextFormatter::beginObject(this, a2);
}

uint64_t PB::TextFormatter::format()
{
  return PB::TextFormatter::format();
}

uint64_t PB::TextFormatter::format(PB::TextFormatter *this, const char *a2, int a3)
{
  return PB::TextFormatter::format(this, a2, a3);
}

uint64_t PB::TextFormatter::format(PB::TextFormatter *this, const char *a2, unint64_t a3)
{
  return PB::TextFormatter::format(this, a2, a3);
}

uint64_t PB::Reader::read()
{
  return PB::Reader::read();
}

uint64_t PB::Reader::skip(PB::Reader *this, unsigned int a2, unsigned __int8 a3, int a4)
{
  return PB::Reader::skip(this, a2, a3, a4);
}

uint64_t PB::Writer::writeVarInt(PB::Writer *this, int a2, unsigned int a3)
{
  return PB::Writer::writeVarInt(this, a2, a3);
}

uint64_t PB::Writer::writeVarInt(PB::Writer *this, unint64_t a2, unsigned int a3)
{
  return PB::Writer::writeVarInt(this, a2, a3);
}

uint64_t PB::Writer::write()
{
  return PB::Writer::write();
}

std::logic_error *__cdecl std::logic_error::logic_error(std::logic_error *this, const char *a2)
{
  return std::logic_error::logic_error(this, a2);
}

void operator delete(void *__p)
{
  while (1)
    ;
}

void operator delete()
{
  while (1)
    ;
}

void *__cdecl operator new(size_t __sz)
{
  while (1)
    ;
}

void operator new()
{
  while (1)
    ;
}

void *__cxa_allocate_exception(size_t thrown_size)
{
  return ___cxa_allocate_exception(thrown_size);
}

void __cxa_free_exception(void *a1)
{
}

void __cxa_throw(void *a1, struct type_info *lptinfo, void (*a3)(void *))
{
}

double __exp10(double a1)
{
  return ___exp10(a1);
}

__double2 __sincos_stret(double a1)
{
  __double2 v3 = ___sincos_stret(a1);
  double cosval = v3.__cosval;
  double sinval = v3.__sinval;
  result.__double cosval = cosval;
  result.__double sinval = sinval;
  return result;
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return __swift_stdlib_bridgeErrorToNSError();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return __swift_stdlib_reportUnimplementedInitializer();
}

kern_return_t bootstrap_check_in(mach_port_t bp, const name_t service_name, mach_port_t *sp)
{
  return _bootstrap_check_in(bp, service_name, sp);
}

void bzero(void *a1, size_t a2)
{
}

uint64_t dispatch_mig_server()
{
  return _dispatch_mig_server();
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
}

uint64_t dispatch_pthread_root_queue_create()
{
  return _dispatch_pthread_root_queue_create();
}

void free(void *a1)
{
}

const char *__cdecl gai_strerror(int a1)
{
  return _gai_strerror(a1);
}

int getnameinfo(const sockaddr *a1, socklen_t a2, char *a3, socklen_t a4, char *a5, socklen_t a6, int a7)
{
  return _getnameinfo(a1, a2, a3, a4, a5, a6, a7);
}

kern_return_t host_info(host_t host, host_flavor_t flavor, host_info_t host_info_out, mach_msg_type_number_t *host_info_outCnt)
{
  return _host_info(host, flavor, host_info_out, host_info_outCnt);
}

char *__cdecl if_indextoname(unsigned int a1, char *a2)
{
  return _if_indextoname(a1, a2);
}

const char *__cdecl inet_ntop(int a1, const void *a2, char *a3, socklen_t a4)
{
  return _inet_ntop(a1, a2, a3, a4);
}

uint64_t mach_absolute_time(void)
{
  return _mach_absolute_time();
}

char *__cdecl mach_error_string(mach_error_t error_value)
{
  return _mach_error_string(error_value);
}

mach_port_t mach_host_self(void)
{
  return _mach_host_self();
}

kern_return_t mach_port_allocate(ipc_space_t task, mach_port_right_t right, mach_port_name_t *name)
{
  return _mach_port_allocate(task, right, name);
}

kern_return_t mach_port_deallocate(ipc_space_t task, mach_port_name_t name)
{
  return _mach_port_deallocate(task, name);
}

kern_return_t mach_port_destroy(ipc_space_t task, mach_port_name_t name)
{
  return _mach_port_destroy(task, name);
}

kern_return_t mach_port_get_context(ipc_space_read_t task, mach_port_name_t name, mach_port_context_t *context)
{
  return _mach_port_get_context(task, name, context);
}

kern_return_t mach_port_insert_right(ipc_space_t task, mach_port_name_t name, mach_port_t poly, mach_msg_type_name_t polyPoly)
{
  return _mach_port_insert_right(task, name, poly, polyPoly);
}

kern_return_t mach_port_mod_refs(ipc_space_t task, mach_port_name_t name, mach_port_right_t right, mach_port_delta_t delta)
{
  return _mach_port_mod_refs(task, name, right, delta);
}

kern_return_t mach_port_request_notification(ipc_space_t task, mach_port_name_t name, mach_msg_id_t msgid, mach_port_mscount_t sync, mach_port_t notify, mach_msg_type_name_t notifyPoly, mach_port_t *previous)
{
  return _mach_port_request_notification(task, name, msgid, sync, notify, notifyPoly, previous);
}

kern_return_t mach_port_set_context(ipc_space_t task, mach_port_name_t name, mach_port_context_t context)
{
  return _mach_port_set_context(task, name, context);
}

kern_return_t mach_port_type(ipc_space_t task, mach_port_name_t name, mach_port_type_t *ptype)
{
  return _mach_port_type(task, name, ptype);
}

mach_port_t mach_thread_self(void)
{
  return _mach_thread_self();
}

kern_return_t mach_timebase_info(mach_timebase_info_t info)
{
  return _mach_timebase_info(info);
}

void *__cdecl malloc(size_t __size)
{
  return _malloc(__size);
}

size_t malloc_size(const void *ptr)
{
  return _malloc_size(ptr);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return _memcmp(__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return _memcpy(__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return _memmove(__dst, __src, __len);
}

void *__cdecl memset(void *__b, int __c, size_t __len)
{
  return _memset(__b, __c, __len);
}

id objc_allocWithZone(Class a1)
{
  return _objc_allocWithZone(a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return _objc_autoreleaseReturnValue(a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return _objc_claimAutoreleasedReturnValue();
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return _[a1 a2];
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return [super a2];
}

uint64_t objc_opt_class()
{
  return _objc_opt_class();
}

uint64_t objc_opt_isKindOfClass()
{
  return _objc_opt_isKindOfClass();
}

uint64_t objc_opt_respondsToSelector()
{
  return _objc_opt_respondsToSelector();
}

uint64_t self
{
  return _self;
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return _objc_retain(a1);
}

id objc_retainAutorelease(id a1)
{
  return _a1;
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return _a1;
}

os_log_t os_log_create(const char *subsystem, const char *category)
{
  return _os_log_create(subsystem, category);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return _os_log_type_enabled(oslog, type);
}

int pthread_attr_destroy(pthread_attr_t *a1)
{
  return _pthread_attr_destroy(a1);
}

int pthread_attr_getschedparam(const pthread_attr_t *a1, sched_param *a2)
{
  return _pthread_attr_getschedparam(a1, a2);
}

int pthread_attr_init(pthread_attr_t *a1)
{
  return _pthread_attr_init(a1);
}

int pthread_attr_setschedparam(pthread_attr_t *a1, const sched_param *a2)
{
  return _pthread_attr_setschedparam(a1, a2);
}

int pthread_attr_setschedpolicy(pthread_attr_t *a1, int a2)
{
  return _pthread_attr_setschedpolicy(a1, a2);
}

uint64_t pthread_set_fixedpriority_self()
{
  return _pthread_set_fixedpriority_self();
}

int pthread_setname_np(const char *a1)
{
  return _pthread_setname_np(a1);
}

long double remainder(long double __x, long double __y)
{
  return _remainder(__x, __y);
}

kern_return_t semaphore_create(task_t task, semaphore_t *semaphore, int policy, int value)
{
  return _semaphore_create(task, semaphore, policy, value);
}

kern_return_t semaphore_destroy(task_t task, semaphore_t semaphore)
{
  return _semaphore_destroy(task, semaphore);
}

void (__cdecl *__cdecl signal(int a1, void (__cdecl *a2)(int)))(int)
{
  return _signal(a1, a2);
}

long double sin(long double __x)
{
  return _sin(__x);
}

size_t strlen(const char *__s)
{
  return _strlen(__s);
}

size_t strnlen(const char *__s1, size_t __n)
{
  return _strnlen(__s1, __n);
}

uint64_t swift_allocBox()
{
  return _swift_allocBox();
}

uint64_t swift_allocError()
{
  return _swift_allocError();
}

uint64_t swift_allocObject()
{
  return _swift_allocObject();
}

uint64_t swift_arrayDestroy()
{
  return _swift_arrayDestroy();
}

uint64_t swift_arrayInitWithCopy()
{
  return _swift_arrayInitWithCopy();
}

uint64_t swift_beginAccess()
{
  return _swift_beginAccess();
}

uint64_t swift_bridgeObjectRelease()
{
  return _swift_bridgeObjectRelease();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return _swift_bridgeObjectRelease_n();
}

uint64_t swift_bridgeObjectRetain()
{
  return _swift_bridgeObjectRetain();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return _swift_bridgeObjectRetain_n();
}

uint64_t swift_deallocPartialClassInstance()
{
  return _swift_deallocPartialClassInstance();
}

uint64_t swift_dynamicCast()
{
  return _swift_dynamicCast();
}

uint64_t swift_dynamicCastClass()
{
  return _swift_dynamicCastClass();
}

uint64_t swift_dynamicCastObjCClass()
{
  return _swift_dynamicCastObjCClass();
}

uint64_t swift_dynamicCastObjCClassUnconditional()
{
  return _swift_dynamicCastObjCClassUnconditional();
}

uint64_t swift_dynamicCastUnknownClass()
{
  return _swift_dynamicCastUnknownClass();
}

uint64_t swift_endAccess()
{
  return _swift_endAccess();
}

uint64_t swift_errorRelease()
{
  return _swift_errorRelease();
}

uint64_t swift_errorRetain()
{
  return _swift_errorRetain();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return _swift_getAssociatedConformanceWitness();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return _swift_getAssociatedTypeWitness();
}

uint64_t swift_getErrorValue()
{
  return _swift_getErrorValue();
}

uint64_t swift_getForeignTypeMetadata()
{
  return _swift_getForeignTypeMetadata();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return _swift_getObjCClassFromMetadata();
}

uint64_t swift_getObjCClassMetadata()
{
  return _swift_getObjCClassMetadata();
}

uint64_t swift_getObjectType()
{
  return _swift_getObjectType();
}

uint64_t swift_getSingletonMetadata()
{
  return _swift_getSingletonMetadata();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return _swift_getTypeByMangledNameInContext2();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return _swift_getTypeByMangledNameInContextInMetadataState2();
}

uint64_t swift_getWitnessTable()
{
  return _swift_getWitnessTable();
}

uint64_t swift_initStackObject()
{
  return _swift_initStackObject();
}

uint64_t swift_initStructMetadata()
{
  return _swift_initStructMetadata();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return _swift_isUniquelyReferenced_nonNull_native();
}

uint64_t swift_once()
{
  return _swift_once();
}

uint64_t swift_release()
{
  return _swift_release();
}

uint64_t swift_release_n()
{
  return _swift_release_n();
}

uint64_t swift_retain()
{
  return _swift_retain();
}

uint64_t swift_retain_n()
{
  return _swift_retain_n();
}

uint64_t swift_setDeallocating()
{
  return _swift_setDeallocating();
}

uint64_t swift_slowAlloc()
{
  return _swift_slowAlloc();
}

uint64_t swift_slowDealloc()
{
  return _swift_slowDealloc();
}

uint64_t swift_unknownObjectRelease()
{
  return _swift_unknownObjectRelease();
}

uint64_t swift_unknownObjectRelease_n()
{
  return _swift_unknownObjectRelease_n();
}

uint64_t swift_unknownObjectRetain()
{
  return _swift_unknownObjectRetain();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return _swift_unknownObjectWeakAssign();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return _swift_unknownObjectWeakDestroy();
}

uint64_t swift_unknownObjectWeakInit()
{
  return _swift_unknownObjectWeakInit();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return _swift_unknownObjectWeakLoadStrong();
}

uint64_t swift_updateClassMetadata2()
{
  return _swift_updateClassMetadata2();
}

uint64_t swift_weakDestroy()
{
  return _swift_weakDestroy();
}

uint64_t swift_weakInit()
{
  return _swift_weakInit();
}

uint64_t swift_weakLoadStrong()
{
  return _swift_weakLoadStrong();
}

uint64_t swift_willThrow()
{
  return _swift_willThrow();
}

int sysctlbyname(const char *a1, void *a2, size_t *a3, void *a4, size_t a5)
{
  return _sysctlbyname(a1, a2, a3, a4, a5);
}

kern_return_t task_policy_set(task_policy_set_t task, task_policy_flavor_t flavor, task_policy_t policy_info, mach_msg_type_number_t policy_infoCnt)
{
  return _task_policy_set(task, flavor, policy_info, policy_infoCnt);
}

kern_return_t thread_policy(thread_act_t thr_act, policy_t policy, policy_base_t base, mach_msg_type_number_t baseCnt, BOOLean_t set_limit)
{
  return _thread_policy(thr_act, policy, base, baseCnt, set_limit);
}

xpc_object_t xpc_dictionary_create(const char *const *keys, xpc_object_t *values, size_t count)
{
  return _xpc_dictionary_create(keys, values, count);
}

void xpc_dictionary_set_fd(xpc_object_t xdict, const char *key, int fd)
{
}

id objc_msgSend_UTF8String(void *a1, const char *a2, ...)
{
  return _[a1 UTF8String];
}

id objc_msgSend_UUIDString(void *a1, const char *a2, ...)
{
  return _[a1 UUIDString];
}

id objc_msgSend_dictionaryWithObjects_forKeys_count_(void *a1, const char *a2, ...)
{
  return [a1 dictionaryWithObjects:forKeys:count:];
}

id objc_msgSend_getUUIDBytes_(void *a1, const char *a2, ...)
{
  return [a1 getUUIDBytes:];
}

id objc_msgSend_numberWithInt_(void *a1, const char *a2, ...)
{
  return [a1 numberWithInt:];
}

id objc_msgSend_numberWithInteger_(void *a1, const char *a2, ...)
{
  return [a1 numberWithInteger:];
}